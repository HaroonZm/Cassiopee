================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:42:44
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())
a_list = list(map(int, input().split()))

# Préparation des listes pour compter les nombres de chaque carte
count_cards = [0] * (n + 1)
how_many_has_that_count = [0] * (n + 1)

for num in a_list:
    count_cards[num] += 1

for i in range(1, n + 1):
    c = count_cards[i]
    if c > 0:
        how_many_has_that_count[c] += 1

# Calcul de la somme cumulative S[x] et f[x]
S = [0] * (n + 2)  # un peu plus grand pour éviter les erreurs d'indice
f = [0] * (n + 2)
for x in range(1, n + 1):
    S[x] = S[x - 1] + how_many_has_that_count[x]
    if x > 0:
        f[x] = S[x] // x

# Recherche du maximum pour chaque K
answers = []
max_possible = n
for k in range(1, n + 1):
    a = max_possible
    while a > 0:
        if f[a] >= k:
            break
        a -= 1
    answers.append(a)
    max_possible = a  # pour la prochaine recherche, partir d'ici

for ans in answers:
    print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00042768914136104286
    2. ''' → logprob: -8.62542724609375
    3. '('' → logprob: -9.37542724609375
    4. '(n' → logprob: -9.87542724609375
    5. '```' → logprob: -10.37542724609375
    6. '`' → logprob: -10.75042724609375
    7. '("("' → logprob: -11.12542724609375
    8. '(
' → logprob: -11.12542724609375
    9. ')' → logprob: -11.75042724609375
    10. '()' → logprob: -12.25042724609375

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0733630508184433
    2. ')' → logprob: -2.8233630657196045
    3. '()' → logprob: -4.698362827301025
    4. '())' → logprob: -6.948362827301025
    5. '```' → logprob: -8.198363304138184
    6. '(
' → logprob: -8.448363304138184
    7. '('' → logprob: -8.948363304138184
    8. '(()' → logprob: -9.073363304138184
    9. '`' → logprob: -9.198363304138184
    10. '("("' → logprob: -9.698363304138184

Token 5: 'a' (ID: 64)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2294851839542389
    2. 'if' → logprob: -1.8544851541519165
    3. 'i' → logprob: -3.979485273361206
    4. 's' → logprob: -4.104485034942627
    5. 'f' → logprob: -5.729485034942627
    6. ' for' → logprob: -6.479485034942627
    7. 'x' → logprob: -6.479485034942627
    8. 'sum' → logprob: -6.479485034942627
    9. 'a' → logprob: -6.729485034942627
    10. 'result' → logprob: -7.479485034942627

Token 6: '_list' (ID: 4162)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.008159794844686985
    2. '[a' → logprob: -6.133159637451172
    3. '[i' → logprob: -6.258159637451172
    4. ' =' → logprob: -7.508159637451172
    5. '[:]' → logprob: -7.633159637451172
    6. 'a' → logprob: -7.758159637451172
    7. 'pp' → logprob: -7.758159637451172
    8. '.' → logprob: -7.883159637451172
    9. '=' → logprob: -8.133159637451172
    10. '.append' → logprob: -8.258159637451172

Token 7: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6419197916984558
    2. '.' → logprob: -0.7669197916984558
    3. '.append' → logprob: -5.0169196128845215
    4. '[a' → logprob: -7.0169196128845215
    5. '[:]' → logprob: -7.8919196128845215
    6. '[]' → logprob: -8.01692008972168
    7. '```' → logprob: -8.14192008972168
    8. '.setdefault' → logprob: -9.26692008972168
    9. 's' → logprob: -9.39192008972168
    10. '[n' → logprob: -9.39192008972168

Token 8: ' list' (ID: 1562)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.7828895449638367
    2. 'list' → logprob: -1.9078896045684814
    3. ' [' → logprob: -2.0328896045684814
    4. ' list' → logprob: -2.0328896045684814
    5. '[]' → logprob: -2.4078896045684814
    6. '[' → logprob: -3.7828896045684814
    7. '[input' → logprob: -4.532889366149902
    8. '[list' → logprob: -4.907889366149902
    9. '[int' → logprob: -7.032889366149902
    10. '[a' → logprob: -8.032889366149902

Token 9: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003024537581950426
    2. '(a' → logprob: -8.2503023147583
    3. '(range' → logprob: -11.0003023147583
    4. '(input' → logprob: -11.6253023147583
    5. '()' → logprob: -12.5003023147583
    6. '(int' → logprob: -13.0003023147583
    7. 'a' → logprob: -13.3753023147583
    8. '(
' → logprob: -13.5003023147583
    9. '(n' → logprob: -14.1253023147583
    10. '(`' → logprob: -14.1253023147583

Token 10: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.071745865046978
    2. '(' → logprob: -2.6967458724975586
    3. 'int' → logprob: -7.571745872497559
    4. '(str' → logprob: -7.696745872497559
    5. ')' → logprob: -8.196745872497559
    6. '(lambda' → logprob: -8.321745872497559
    7. '=int' → logprob: -9.696745872497559
    8. '<int' → logprob: -9.821745872497559
    9. '(input' → logprob: -9.821745872497559
    10. '(
' → logprob: -10.071745872497559

Token 11: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.007826530374586582
    2. '))' → logprob: -5.757826328277588
    3. '(' → logprob: -6.257826328277588
    4. ')' → logprob: -7.007826328277588
    5. ',input' → logprob: -7.007826328277588
    6. ',' → logprob: -8.132826805114746
    7. 'input' → logprob: -9.132826805114746
    8. '<|end|>' → logprob: -9.132826805114746
    9. '=input' → logprob: -9.257826805114746
    10. '```' → logprob: -10.382826805114746

Token 12: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.018155328929424286
    2. ' input' → logprob: -4.018155097961426
    3. '(input' → logprob: -12.268155097961426
    4. ',input' → logprob: -14.893155097961426
    5. '	input' → logprob: -15.643155097961426
    6. '=input' → logprob: -16.018156051635742
    7. ')' → logprob: -16.268156051635742
    8. '<input' → logprob: -16.893156051635742
    9. '[input' → logprob: -18.393156051635742
    10. ' ' → logprob: -18.893156051635742

Token 13: '().' (ID: 1454)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.46824654936790466
    2. '())' → logprob: -1.218246579170227
    3. '()' → logprob: -2.7182464599609375
    4. '(' → logprob: -4.5932464599609375
    5. '()));' → logprob: -7.3432464599609375
    6. '())))' → logprob: -8.093246459960938
    7. '))' → logprob: -8.218246459960938
    8. '(()' → logprob: -8.718246459960938
    9. ')' → logprob: -8.843246459960938
    10. '(),' → logprob: -9.468246459960938

Token 14: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0003467865171842277
    2. 'strip' → logprob: -8.000347137451172
    3. 'rstrip' → logprob: -11.500347137451172
    4. ' split' → logprob: -14.000347137451172
    5. ')' → logprob: -15.750347137451172
    6. '(split' → logprob: -16.000347137451172
    7. 'spl' → logprob: -16.375347137451172
    8. 's' → logprob: -16.750347137451172
    9. 'sp' → logprob: -18.000347137451172
    10. '.split' → logprob: -18.375347137451172

Token 15: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.7225250005722046
    2. '))' → logprob: -0.8475250005722046
    3. ')' → logprob: -3.097525119781494
    4. '())' → logprob: -3.847525119781494
    5. '(' → logprob: -4.347525119781494
    6. '()' → logprob: -5.097525119781494
    7. ')))' → logprob: -9.097524642944336
    8. ''))' → logprob: -9.097524642944336
    9. '('' → logprob: -9.597524642944336
    10. '()))
' → logprob: -10.347524642944336

Token 16: '#' (ID: 2)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.608320415019989
    2. 's' → logprob: -1.2333204746246338
    3. 'c' → logprob: -3.233320474624634
    4. 'count' → logprob: -3.608320474624634
    5. 'result' → logprob: -3.858320474624634
    6. 'sum' → logprob: -4.108320236206055
    7. 'max' → logprob: -4.233320236206055
    8. 'm' → logprob: -4.483320236206055
    9. 'd' → logprob: -5.108320236206055
    10. 'b' → logprob: -5.233320236206055

Token 17: ' Pré' (ID: 86400)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.713085651397705
    2. 'max' → logprob: -1.838085651397705
    3. 'result' → logprob: -1.838085651397705
    4. 'sum' → logprob: -1.838085651397705
    5. 'a' → logprob: -2.088085651397705
    6. 'count' → logprob: -3.088085651397705
    7. 's' → logprob: -3.338085651397705
    8. 'total' → logprob: -3.588085651397705
    9. 'even' → logprob: -3.838085651397705
    10. 'mean' → logprob: -4.338085651397705

Token 18: 'paration' (ID: 27466)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.7685751914978027
    2. 'paration' → logprob: -0.8935751914978027
    3. 'dict' → logprob: -3.2685751914978027
    4. '```' → logprob: -3.8935751914978027
    5. '#' → logprob: -4.143575191497803
    6. '``' → logprob: -4.893575191497803
    7. 'fix' → logprob: -5.018575191497803
    8. '_d' → logprob: -5.268575191497803
    9. '_' → logprob: -5.893575191497803
    10. 'pare' → logprob: -6.018575191497803

Token 19: ' des' (ID: 731)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.5084212422370911
    2. 's' → logprob: -1.6334211826324463
    3. 'd' → logprob: -2.5084211826324463
    4. 'dp' → logprob: -3.1334211826324463
    5. 'max' → logprob: -3.8834211826324463
    6. 'count' → logprob: -4.508421421051025
    7. 'a' → logprob: -4.758421421051025
    8. 'sum' → logprob: -5.008421421051025
    9. 'result' → logprob: -5.133421421051025
    10. 'prefix' → logprob: -5.383421421051025

Token 20: ' listes' (ID: 179198)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'indices' → logprob: -1.0542205572128296
    2. 'a' → logprob: -1.1792205572128296
    3. 'd' → logprob: -1.9292205572128296
    4. 's' → logprob: -3.554220676422119
    5. 'result' → logprob: -3.554220676422119
    6. ' indices' → logprob: -4.054220676422119
    7. 'data' → logprob: -4.304220676422119
    8. 'c' → logprob: -4.304220676422119
    9. 'b' → logprob: -4.804220676422119
    10. 'val' → logprob: -4.804220676422119

Token 21: ' pour' (ID: 1930)
  Prédit: 'even'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'even' → logprob: -0.6628187298774719
    2. 'a' → logprob: -1.2878186702728271
    3. 'max' → logprob: -2.287818670272827
    4. 'b' → logprob: -3.912818670272827
    5. 'positive' → logprob: -4.162818908691406
    6. 'pos' → logprob: -4.287818908691406
    7. 'sum' → logprob: -4.787818908691406
    8. 'min' → logprob: -4.787818908691406
    9. 'odd' → logprob: -4.912818908691406
    10. 'c' → logprob: -5.162818908691406

Token 22: ' compter' (ID: 81694)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -1.1392691135406494
    2. 'a' → logprob: -2.6392691135406494
    3. ' les' → logprob: -2.7642691135406494
    4. 'stock' → logprob: -2.7642691135406494
    5. 'i' → logprob: -2.8892691135406494
    6. 'l' → logprob: -3.0142691135406494
    7. '_' → logprob: -3.2642691135406494
    8. 'b' → logprob: -3.2642691135406494
    9. 'la' → logprob: -3.5142691135406494
    10. ' la' → logprob: -3.6392691135406494

Token 23: ' les' (ID: 1341)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.014355182647705
    2. '(' → logprob: -1.764355182647705
    3. 'a' → logprob: -1.764355182647705
    4. '_' → logprob: -2.889355182647705
    5. 'counts' → logprob: -2.889355182647705
    6. 'c' → logprob: -3.639355182647705
    7. 'zeros' → logprob: -3.639355182647705
    8. 'max' → logprob: -4.014355182647705
    9. 'pos' → logprob: -4.389355182647705
    10. 'occ' → logprob: -4.514355182647705

Token 24: ' nombres' (ID: 76205)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.8807451725006104
    2. ' fré' → logprob: -2.0057451725006104
    3. ' occurrences' → logprob: -2.2557451725006104
    4. 'occ' → logprob: -2.3807451725006104
    5. 'élé' → logprob: -2.3807451725006104
    6. ' ' → logprob: -2.5057451725006104
    7. 'occur' → logprob: -2.7557451725006104
    8. 'val' → logprob: -3.2557451725006104
    9. 'fr' → logprob: -3.7557451725006104
    10. 'a' → logprob: -4.005744934082031

Token 25: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.688077986240387
    2. '(' → logprob: -0.938077986240387
    3. ' (' → logprob: -3.813077926635742
    4. 'a' → logprob: -4.313077926635742
    5. ' ' → logprob: -4.438077926635742
    6. 's' → logprob: -4.813077926635742
    7. '_even' → logprob: -5.188077926635742
    8. 'd' → logprob: -5.438077926635742
    9. ' de' → logprob: -5.438077926635742
    10. '[' → logprob: -5.563077926635742

Token 26: ' chaque' (ID: 21194)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.3911612033843994
    2. ' ' → logprob: -1.5161612033843994
    3. ' z' → logprob: -1.5161612033843994
    4. '0' → logprob: -2.6411612033843994
    5. ' a' → logprob: -2.7661612033843994
    6. 'a' → logprob: -3.2661612033843994
    7. '1' → logprob: -3.5161612033843994
    8. ' p' → logprob: -4.01616096496582
    9. ' occurrences' → logprob: -4.14116096496582
    10. 'z' → logprob: -4.64116096496582

Token 27: ' carte' (ID: 30276)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.27901118993759155
    2. 'val' → logprob: -2.1540112495422363
    3. '_' → logprob: -3.2790112495422363
    4. 'occ' → logprob: -4.029011249542236
    5. 'c' → logprob: -4.154011249542236
    6. 'a' → logprob: -4.904011249542236
    7. ' éléments' → logprob: -4.904011249542236
    8. 'occur' → logprob: -5.279011249542236
    9. ' ' → logprob: -5.654011249542236
    10. 'é' → logprob: -5.654011249542236

Token 28: '
' (ID: 198)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'counts' → logprob: -0.5825034976005554
    2. 'count' → logprob: -1.0825035572052002
    3. 'a' → logprob: -3.5825035572052
    4. 'c' → logprob: -3.7075035572052
    5. 'max' → logprob: -4.832503318786621
    6. '_' → logprob: -5.082503318786621
    7. 'cards' → logprob: -5.082503318786621
    8. 'car' → logprob: -5.207503318786621
    9. 'card' → logprob: -5.207503318786621
    10. 'n' → logprob: -5.332503318786621

Token 29: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.9324496388435364
    2. 'a' → logprob: -1.6824495792388916
    3. 'counts' → logprob: -1.6824495792388916
    4. 'c' → logprob: -2.0574495792388916
    5. 'car' → logprob: -3.0574495792388916
    6. 'n' → logprob: -3.8074495792388916
    7. 'max' → logprob: -4.682449817657471
    8. 's' → logprob: -4.932449817657471
    9. 'card' → logprob: -5.932449817657471
    10. 'num' → logprob: -6.182449817657471

Token 30: '_cards' (ID: 101651)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.10596869885921478
    2. '_' → logprob: -2.355968713760376
    3. '_a' → logprob: -5.480968475341797
    4. '_cards' → logprob: -7.355968475341797
    5. '_s' → logprob: -7.605968475341797
    6. ' =' → logprob: -8.480968475341797
    7. 'a' → logprob: -9.855968475341797
    8. 'A' → logprob: -10.105968475341797
    9. '=' → logprob: -10.230968475341797
    10. 'es' → logprob: -10.605968475341797

Token 31: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5532974600791931
    2. '_' → logprob: -1.553297519683838
    3. '=' → logprob: -1.678297519683838
    4. 's' → logprob: -3.928297519683838
    5. '[' → logprob: -6.303297519683838
    6. ')' → logprob: -6.678297519683838
    7. '_a' → logprob: -7.178297519683838
    8. '1' → logprob: -7.428297519683838
    9. '(' → logprob: -7.428297519683838
    10. 'a' → logprob: -7.928297519683838

Token 32: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6407551765441895
    2. ' [' → logprob: -1.1407551765441895
    3. '{}' → logprob: -1.8907551765441895
    4. ' {}' → logprob: -6.0157551765441895
    5. '{' → logprob: -9.390754699707031
    6. '[]' → logprob: -10.890754699707031
    7. '[len' → logprob: -11.890754699707031
    8. '[a' → logprob: -12.140754699707031
    9. ' []' → logprob: -12.265754699707031
    10. '[count' → logprob: -13.765754699707031

Token 33: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00023214559769257903
    2. ' ' → logprob: -8.375231742858887
    3. ')' → logprob: -14.250231742858887
    4. '   ' → logprob: -14.375231742858887
    5. ']' → logprob: -15.750231742858887
    6. '  ' → logprob: -17.000232696533203
    7. '    ' → logprob: -18.000232696533203
    8. ',' → logprob: -18.125232696533203
    9. '100' → logprob: -18.312732696533203
    10. '```' → logprob: -18.375232696533203

Token 34: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02506859600543976
    2. ' for' → logprob: -4.400068759918213
    3. ']*' → logprob: -4.525068759918213
    4. ' ]' → logprob: -6.900068759918213
    5. ']*(' → logprob: -7.525068759918213
    6. 'for' → logprob: -9.775068283081055
    7. ',' → logprob: -10.900068283081055
    8. ')' → logprob: -10.900068283081055
    9. ' ' → logprob: -12.525068283081055
    10. ']+' → logprob: -14.650068283081055

Token 35: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7556847333908081
    2. ' for' → logprob: -1.380684733390808
    3. ']*' → logprob: -1.630684733390808
    4. ']*(' → logprob: -2.8806848526000977
    5. ',' → logprob: -5.130684852600098
    6. '*' → logprob: -5.130684852600098
    7. 'for' → logprob: -5.380684852600098
    8. ' ]' → logprob: -5.630684852600098
    9. ' *' → logprob: -5.880684852600098
    10. '0' → logprob: -6.130684852600098

Token 36: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9108337163925171
    2. '100' → logprob: -1.160833716392517
    3. '10' → logprob: -2.0358338356018066
    4. '11' → logprob: -3.0358338356018066
    5. '101' → logprob: -3.2858338356018066
    6. '200' → logprob: -4.035833835601807
    7. '(n' → logprob: -4.285833835601807
    8. '51' → logprob: -4.535833835601807
    9. '13' → logprob: -5.160833835601807
    10. '14' → logprob: -5.910833835601807

Token 37: 'n' (ID: 77)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.5814365744590759
    2. '10' → logprob: -1.2064366340637207
    3. 'max' → logprob: -2.0814366340637207
    4. '101' → logprob: -5.206436634063721
    5. '11' → logprob: -5.581436634063721
    6. '200' → logprob: -5.706436634063721
    7. 'n' → logprob: -6.456436634063721
    8. '(max' → logprob: -7.331436634063721
    9. '(' → logprob: -7.706436634063721
    10. '51' → logprob: -8.081436157226562

Token 38: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10026996582746506
    2. ' +' → logprob: -2.3502700328826904
    3. ')' → logprob: -10.60027027130127
    4. '*' → logprob: -10.72527027130127
    5. ' ' → logprob: -12.10027027130127
    6. ' *' → logprob: -12.85027027130127
    7. '+)' → logprob: -12.97527027130127
    8. ' )' → logprob: -13.35027027130127
    9. '1' → logprob: -13.47527027130127
    10. '2' → logprob: -14.10027027130127

Token 39: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004271427169442177
    2. '2' → logprob: -6.004271507263184
    3. ' ' → logprob: -6.379271507263184
    4. '10' → logprob: -9.754271507263184
    5. '5' → logprob: -10.629271507263184
    6. '100' → logprob: -12.504271507263184
    7. '3' → logprob: -12.754271507263184
    8. 'n' → logprob: -13.816771507263184
    9. '11' → logprob: -13.816771507263184
    10. '6' → logprob: -13.816771507263184

Token 40: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008681101026013494
    2. '2' → logprob: -7.125868320465088
    3. ' ' → logprob: -10.62586784362793
    4. '10' → logprob: -10.87586784362793
    5. '5' → logprob: -11.12586784362793
    6. '3' → logprob: -13.37586784362793
    7. '6' → logprob: -14.25086784362793
    8. '100' → logprob: -14.37586784362793
    9. '11' → logprob: -14.56336784362793
    10. '7' → logprob: -15.00086784362793

Token 41: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3902033970225602e-05
    2. ' )' → logprob: -11.625014305114746
    3. ')
' → logprob: -12.500014305114746
    4. ']' → logprob: -14.875014305114746
    5. ')

' → logprob: -15.625014305114746
    6. ')
' → logprob: -16.37501335144043
    7. ')#' → logprob: -16.37501335144043
    8. ')`' → logprob: -16.75001335144043
    9. '）' → logprob: -16.87501335144043
    10. '))' → logprob: -17.00001335144043

Token 42: 'how' (ID: 8923)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7969136834144592
    2. 'for' → logprob: -0.7969136834144592
    3. ' for' → logprob: -2.5469136238098145
    4. '<|end|>' → logprob: -4.7969136238098145
    5. '
' → logprob: -5.1719136238098145
    6. ' 
' → logprob: -5.6719136238098145
    7. '' → logprob: -7.2969136238098145
    8. '```' → logprob: -7.7969136238098145
    9. '  
' → logprob: -8.046914100646973
    10. '<|end|>' → logprob: -8.296914100646973

Token 43: '_many' (ID: 57525)
  Prédit: '_many'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_many' → logprob: -0.0638403370976448
    2. '_to' → logprob: -3.813840389251709
    3. '_m' → logprob: -4.063840389251709
    4. 'many' → logprob: -4.063840389251709
    5. 'to' → logprob: -6.063840389251709
    6. '_count' → logprob: -7.063840389251709
    7. '_' → logprob: -7.063840389251709
    8. '_counts' → logprob: -7.438840389251709
    9. 'Many' → logprob: -9.06383991241455
    10. '_o' → logprob: -9.06383991241455

Token 44: '_has' (ID: 51865)
  Prédit: '_cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_cards' → logprob: -0.02343391440808773
    2. '_' → logprob: -4.898433685302734
    3. 's' → logprob: -6.273433685302734
    4. ' =' → logprob: -6.273433685302734
    5. '_count' → logprob: -6.523433685302734
    6. '_to' → logprob: -6.648433685302734
    7. '_counts' → logprob: -6.898433685302734
    8. '_s' → logprob: -7.023433685302734
    9. '_have' → logprob: -7.148433685302734
    10. '_c' → logprob: -7.398433685302734

Token 45: '_that' (ID: 183627)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6758405566215515
    2. ' =' → logprob: -1.4258406162261963
    3. '_count' → logprob: -2.4258406162261963
    4. '_card' → logprob: -2.9258406162261963
    5. '_cards' → logprob: -3.0508406162261963
    6. '=' → logprob: -5.050840377807617
    7. '[' → logprob: -5.175840377807617
    8. '_to' → logprob: -5.300840377807617
    9. '_a' → logprob: -5.425840377807617
    10. '_it' → logprob: -5.800840377807617

Token 46: '_count' (ID: 7536)
  Prédit: '_cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -0.6386644244194031
    2. ' =' → logprob: -0.8886644244194031
    3. '_card' → logprob: -4.013664245605469
    4. '_count' → logprob: -4.388664245605469
    5. '_' → logprob: -4.513664245605469
    6. '=' → logprob: -5.138664245605469
    7. '[' → logprob: -5.888664245605469
    8. 'e' → logprob: -6.513664245605469
    9. '=count' → logprob: -6.638664245605469
    10. '_list' → logprob: -7.138664245605469

Token 47: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4741919934749603
    2. '=' → logprob: -0.9741920232772827
    3. 's' → logprob: -9.599191665649414
    4. 'd' → logprob: -10.349191665649414
    5. ' ' → logprob: -12.349191665649414
    6. '[' → logprob: -12.974191665649414
    7. 'ed' → logprob: -13.224191665649414
    8. '_' → logprob: -13.224191665649414
    9. 'es' → logprob: -14.349191665649414
    10. '=[' → logprob: -14.349191665649414

Token 48: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.014173386618494987
    2. ' [' → logprob: -4.26417350769043
    3. '[n' → logprob: -12.01417350769043
    4. '0' → logprob: -13.51417350769043
    5. '[]' → logprob: -14.13917350769043
    6. ' ' → logprob: -14.38917350769043
    7. '[count' → logprob: -15.13917350769043
    8. '[len' → logprob: -15.38917350769043
    9. '{}' → logprob: -15.76417350769043
    10. '[int' → logprob: -16.38917350769043

Token 49: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007316163973882794
    2. 'n' → logprob: -7.250731468200684
    3. ' ' → logprob: -10.875731468200684
    4. ' n' → logprob: -13.625731468200684
    5. ']' → logprob: -14.375731468200684
    6. 'len' → logprob: -14.875731468200684
    7. '(n' → logprob: -16.000732421875
    8. '1' → logprob: -16.250732421875
    9. ')' → logprob: -16.375732421875
    10. '(' → logprob: -16.500732421875

Token 50: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.009857968427240849
    2. ')' → logprob: -4.759858131408691
    3. '*' → logprob: -7.384858131408691
    4. ' *' → logprob: -8.009858131408691
    5. ' ]' → logprob: -9.134858131408691
    6. ')]' → logprob: -9.384858131408691
    7. '(n' → logprob: -10.134858131408691
    8. '+' → logprob: -10.509858131408691
    9. ' ' → logprob: -11.509858131408691
    10. '#' → logprob: -12.384858131408691

Token 51: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.48941534757614136
    2. '*' → logprob: -0.9894153475761414
    3. '*(' → logprob: -4.864415168762207
    4. ')' → logprob: -5.739415168762207
    5. '(n' → logprob: -6.614415168762207
    6. '*n' → logprob: -6.739415168762207
    7. ' ' → logprob: -7.489415168762207
    8. ']' → logprob: -7.739415168762207
    9. '+' → logprob: -8.614415168762207
    10. ',' → logprob: -9.114415168762207

Token 52: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.005638651084154844
    2. '(' → logprob: -5.880638599395752
    3. '(len' → logprob: -6.005638599395752
    4. '(max' → logprob: -8.88063907623291
    5. '((' → logprob: -9.13063907623291
    6. '(N' → logprob: -10.00563907623291
    7. ' (' → logprob: -10.25563907623291
    8. '(a' → logprob: -12.00563907623291
    9. '100' → logprob: -12.25563907623291
    10. '(count' → logprob: -12.25563907623291

Token 53: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.14867161214351654
    2. '(n' → logprob: -2.0236716270446777
    3. 'len' → logprob: -6.398671627044678
    4. ' n' → logprob: -6.648671627044678
    5. '(' → logprob: -6.773671627044678
    6. ' (' → logprob: -7.398671627044678
    7. '(len' → logprob: -8.02367115020752
    8. '2' → logprob: -8.27367115020752
    9. ')' → logprob: -8.39867115020752
    10. 'max' → logprob: -9.64867115020752

Token 54: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.048598840832710266
    2. ' +' → logprob: -3.0485987663269043
    3. ')' → logprob: -12.923599243164062
    4. ' plus' → logprob: -13.298599243164062
    5. ' ' → logprob: -13.423599243164062
    6. '+
' → logprob: -13.548599243164062
    7. '1' → logprob: -13.673599243164062
    8. 'plus' → logprob: -14.173599243164062
    9. ' +
' → logprob: -14.548599243164062
    10. '2' → logprob: -14.861099243164062

Token 55: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07014438509941101
    2. '2' → logprob: -2.6951444149017334
    3. '3' → logprob: -9.070144653320312
    4. ' ' → logprob: -9.570144653320312
    5. '5' → logprob: -11.945144653320312
    6. '4' → logprob: -12.320144653320312
    7. '7' → logprob: -13.070144653320312
    8. '6' → logprob: -13.070144653320312
    9. 'n' → logprob: -13.132644653320312
    10. '10' → logprob: -13.257644653320312

Token 56: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00674793915823102
    2. '2' → logprob: -5.006747722625732
    3. '3' → logprob: -10.88174819946289
    4. ' ' → logprob: -12.75674819946289
    5. '5' → logprob: -12.88174819946289
    6. '6' → logprob: -13.00674819946289
    7. '+' → logprob: -13.25674819946289
    8. '4' → logprob: -13.50674819946289
    9. '7' → logprob: -14.00674819946289
    10. '```' → logprob: -14.88174819946289

Token 57: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.676981345459353e-06
    2. ']' → logprob: -13.000005722045898
    3. ')
' → logprob: -13.500005722045898
    4. ' )' → logprob: -13.750005722045898
    5. '))' → logprob: -15.375005722045898
    6. '])' → logprob: -16.0000057220459
    7. '```' → logprob: -16.0000057220459
    8. ')`' → logprob: -16.2500057220459
    9. '#' → logprob: -16.3750057220459
    10. ')]' → logprob: -16.6250057220459

Token 58: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03784351423382759
    2. ' for' → logprob: -3.4128434658050537
    3. '
' → logprob: -6.162843704223633
    4. 'a' → logprob: -7.787843704223633
    5. '\n' → logprob: -7.787843704223633
    6. '<|end|>' → logprob: -8.287843704223633
    7. ' 
' → logprob: -8.537843704223633
    8. '#' → logprob: -8.537843704223633
    9. '```' → logprob: -8.537843704223633
    10. 'n' → logprob: -9.162843704223633

Token 59: ' num' (ID: 2269)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.8629802465438843
    2. ' a' → logprob: -1.2379802465438843
    3. ' card' → logprob: -1.8629802465438843
    4. 'a' → logprob: -3.362980365753174
    5. ' x' → logprob: -3.362980365753174
    6. ' num' → logprob: -3.362980365753174
    7. 'i' → logprob: -4.362980365753174
    8. 'x' → logprob: -5.612980365753174
    9. ' number' → logprob: -5.987980365753174
    10. ' val' → logprob: -6.237980365753174

Token 60: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.021683184430003166
    2. 'in' → logprob: -3.8966832160949707
    3. 's' → logprob: -7.271683216094971
    4. ' ' → logprob: -8.146682739257812
    5. '_in' → logprob: -10.146682739257812
    6. '_' → logprob: -10.646682739257812
    7. ' ' → logprob: -11.396682739257812
    8. 'a' → logprob: -11.521682739257812
    9. 'i' → logprob: -11.646682739257812
    10. 'd' → logprob: -11.896682739257812

Token 61: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.023245826363563538
    2. ' a' → logprob: -3.7732458114624023
    3. '_a' → logprob: -15.148245811462402
    4. ' ' → logprob: -16.77324676513672
    5. '	a' → logprob: -16.77324676513672
    6. '(a' → logprob: -18.14824676513672
    7. 'range' → logprob: -19.14824676513672
    8. 'а' → logprob: -19.39824676513672
    9. '   ' → logprob: -20.02324676513672
    10. ' range' → logprob: -20.27324676513672

Token 62: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0009172935388050973
    2. '_' → logprob: -7.000917434692383
    3. ' _' → logprob: -12.500917434692383
    4. '_l' → logprob: -13.375917434692383
    5. '_lst' → logprob: -15.625917434692383
    6. '_a' → logprob: -16.125917434692383
    7. 'a' → logprob: -16.500917434692383
    8. '_li' → logprob: -16.500917434692383
    9. 'list' → logprob: -17.000917434692383
    10. '_lista' → logprob: -17.125917434692383

Token 63: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00035095500061288476
    2. ':
' → logprob: -8.500350952148438
    3. ' :' → logprob: -9.000350952148438
    4. '[' → logprob: -11.500350952148438
    5. '):' → logprob: -11.875350952148438
    6. ']:' → logprob: -13.000350952148438
    7. '   ' → logprob: -14.250350952148438
    8. ' :
' → logprob: -14.375350952148438
    9. ',' → logprob: -14.750350952148438
    10. ']' → logprob: -14.875350952148438

Token 64: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5112172365188599
    2. ' count' → logprob: -1.0112172365188599
    3. 'count' → logprob: -3.5112171173095703
    4. '	count' → logprob: -5.63621711730957
    5. '[count' → logprob: -7.26121711730957
    6. ' ' → logprob: -7.51121711730957
    7. '<|end|>' → logprob: -8.26121711730957
    8. '```' → logprob: -8.38621711730957
    9. ')' → logprob: -8.51121711730957
    10. ' counts' → logprob: -8.63621711730957

Token 65: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.07890080660581589
    2. ' count' → logprob: -2.5789008140563965
    3. '   ' → logprob: -11.578900337219238
    4. '	count' → logprob: -14.578900337219238
    5. '```' → logprob: -15.328900337219238
    6. '[count' → logprob: -15.828900337219238
    7. ' ' → logprob: -15.953900337219238
    8. '_count' → logprob: -15.953900337219238
    9. 'if' → logprob: -16.078901290893555
    10. ' if' → logprob: -16.328901290893555

Token 66: '_cards' (ID: 101651)
  Prédit: '_cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -1.6240566083070007e-06
    2. '_' → logprob: -14.000001907348633
    3. '_c' → logprob: -14.750001907348633
    4. '_cells' → logprob: -15.625001907348633
    5. '_card' → logprob: -16.625001907348633
    6. '_car' → logprob: -16.875001907348633
    7. '_codes' → logprob: -17.500001907348633
    8. 's' → logprob: -17.875001907348633
    9. '_counts' → logprob: -17.875001907348633
    10. '_tokens' → logprob: -18.000001907348633

Token 67: '[num' (ID: 51359)
  Prédit: '[num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[num' → logprob: -0.0001860174525063485
    2. '[count' → logprob: -8.8751859664917
    3. '[' → logprob: -10.0001859664917
    4. '```' → logprob: -15.1251859664917
    5. ' [' → logprob: -15.6251859664917
    6. 'num' → logprob: -16.375186920166016
    7. '[len' → logprob: -17.125186920166016
    8. '[number' → logprob: -17.250186920166016
    9. '[
' → logprob: -17.500186920166016
    10. '[int' → logprob: -17.500186920166016

Token 68: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002021901309490204
    2. ' ]' → logprob: -6.877021789550781
    3. ']+=' → logprob: -7.252021789550781
    4. ')' → logprob: -8.252021789550781
    5. '+=' → logprob: -11.877021789550781
    6. ')]' → logprob: -12.502021789550781
    7. ' +=' → logprob: -12.627021789550781
    8. '+]' → logprob: -13.002021789550781
    9. '+' → logprob: -13.377021789550781
    10. '[' → logprob: -14.752021789550781

Token 69: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.006462882738560438
    2. ' +=' → logprob: -5.131463050842285
    3. ']+=' → logprob: -8.006463050842285
    4. '+' → logprob: -8.631463050842285
    5. '=' → logprob: -10.881463050842285
    6. '+='' → logprob: -13.506463050842285
    7. ']' → logprob: -14.131463050842285
    8. ')' → logprob: -14.631463050842285
    9. '+="' → logprob: -15.256463050842285
    10. '[' → logprob: -15.631463050842285

Token 70: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.547789674485102e-05
    2. ' ' → logprob: -10.250035285949707
    3. '```' → logprob: -19.375036239624023
    4. '１' → logprob: -20.375036239624023
    5. '<|end|>' → logprob: -21.500036239624023
    6. '۱' → logprob: -21.750036239624023
    7. '   ' → logprob: -22.375036239624023
    8. ' ' → logprob: -22.500036239624023
    9. '`' → logprob: -22.750036239624023
    10. '१' → logprob: -23.000036239624023

Token 71: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '```' → logprob: -20.0
    4. '１' → logprob: -21.75
    5. '   ' → logprob: -22.0
    6. '`' → logprob: -22.375
    7. '0' → logprob: -22.5625
    8. '+' → logprob: -22.8125
    9. '' → logprob: -23.125
    10. '۱' → logprob: -23.3125

Token 72: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.21570026874542236
    2. '
' → logprob: -2.465700149536133
    3. '```' → logprob: -3.215700149536133
    4. ' 
' → logprob: -3.840700149536133
    5. ' for' → logprob: -3.965700149536133
    6. ' ' → logprob: -4.840700149536133
    7. '  
' → logprob: -5.340700149536133
    8. 'count' → logprob: -5.590700149536133
    9. '<|end|>' → logprob: -5.715700149536133
    10. '\n' → logprob: -6.590700149536133

Token 73: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.001106279087252915
    2. '```' → logprob: -7.126106262207031
    3. ' for' → logprob: -8.626106262207031
    4. '
' → logprob: -9.376106262207031
    5. '1' → logprob: -11.126106262207031
    6. '``' → logprob: -12.626106262207031
    7. 'how' → logprob: -12.751106262207031
    8. '\' → logprob: -13.126106262207031
    9. '0' → logprob: -13.126106262207031
    10. '#' → logprob: -13.126106262207031

Token 74: ' i' (ID: 575)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.07993725687265396
    2. 'c' → logprob: -3.204937219619751
    3. ' count' → logprob: -3.704937219619751
    4. 'i' → logprob: -4.95493745803833
    5. 'cnt' → logprob: -6.20493745803833
    6. ' c' → logprob: -6.57993745803833
    7. ' i' → logprob: -7.20493745803833
    8. 'x' → logprob: -9.329936981201172
    9. 'card' → logprob: -9.454936981201172
    10. 'num' → logprob: -9.704936981201172

Token 75: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0069337086752057076
    2. 'in' → logprob: -5.006933689117432
    3. ' ' → logprob: -8.63193416595459
    4. 'range' → logprob: -11.00693416595459
    5. ',' → logprob: -12.13193416595459
    6. 'n' → logprob: -12.50693416595459
    7. '(' → logprob: -12.88193416595459
    8. '  ' → logprob: -12.88193416595459
    9. '1' → logprob: -13.25693416595459
    10. ' range' → logprob: -13.38193416595459

Token 76: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5759705305099487
    2. ' range' → logprob: -0.8259705305099487
    3. 'count' → logprob: -10.700970649719238
    4. '(range' → logprob: -12.950970649719238
    5. ' count' → logprob: -13.200970649719238
    6. '	range' → logprob: -13.700970649719238
    7. ' ' → logprob: -14.075970649719238
    8. 'rang' → logprob: -14.450970649719238
    9. '   ' → logprob: -14.700970649719238
    10. '```' → logprob: -14.950970649719238

Token 77: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00030590701499022543
    2. '(n' → logprob: -8.125306129455566
    3. '(len' → logprob: -12.625306129455566
    4. ' (' → logprob: -12.625306129455566
    5. '1' → logprob: -13.000306129455566
    6. '(
' → logprob: -14.000306129455566
    7. ',' → logprob: -16.87530517578125
    8. '   ' → logprob: -17.12530517578125
    9. '```' → logprob: -17.12530517578125
    10. '((' → logprob: -17.25030517578125

Token 78: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007791517302393913
    2. 'n' → logprob: -4.882791519165039
    3. '(' → logprob: -9.382791519165039
    4. 'len' → logprob: -9.382791519165039
    5. '(n' → logprob: -11.257791519165039
    6. ' ' → logprob: -13.632791519165039
    7. '   ' → logprob: -14.132791519165039
    8. '(len' → logprob: -14.132791519165039
    9. ' n' → logprob: -14.382791519165039
    10. '```' → logprob: -15.257791519165039

Token 79: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0031742677092552185
    2. ' ,' → logprob: -6.003174304962158
    3. ',n' → logprob: -7.378174304962158
    4. 'n' → logprob: -9.753173828125
    5. ' n' → logprob: -12.128173828125
    6. ',len' → logprob: -12.753173828125
    7. ' ' → logprob: -13.003173828125
    8. '1' → logprob: -13.503173828125
    9. '(n' → logprob: -13.753173828125
    10. '(' → logprob: -13.878173828125

Token 80: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -8.661626634420827e-05
    2. ' n' → logprob: -9.625086784362793
    3. 'len' → logprob: -10.875086784362793
    4. '(n' → logprob: -13.500086784362793
    5. '   ' → logprob: -15.750086784362793
    6. ')' → logprob: -17.250085830688477
    7. '	n' → logprob: -17.250085830688477
    8. '```' → logprob: -17.625085830688477
    9. '(len' → logprob: -18.125085830688477
    10. ' len' → logprob: -18.250085830688477

Token 81: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.08894328027963638
    2. ' +' → logprob: -2.4639432430267334
    3. '+
' → logprob: -14.088943481445312
    4. '):
' → logprob: -14.338943481445312
    5. '):' → logprob: -14.838943481445312
    6. ' +
' → logprob: -14.963943481445312
    7. ' ' → logprob: -14.963943481445312
    8. ')' → logprob: -14.963943481445312
    9. '+n' → logprob: -15.088943481445312
    10. ',' → logprob: -15.588943481445312

Token 82: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003802680876106024
    2. ' ' → logprob: -7.875380039215088
    3. '```' → logprob: -16.62537956237793
    4. '   ' → logprob: -17.37537956237793
    5. ')' → logprob: -17.50037956237793
    6. '  ' → logprob: -18.25037956237793
    7. '2' → logprob: -18.25037956237793
    8. '۱' → logprob: -19.12537956237793
    9. ' ' → logprob: -19.12537956237793
    10. '１' → logprob: -19.37537956237793

Token 83: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.214019307051785e-05
    2. ' ' → logprob: -10.375032424926758
    3. '```' → logprob: -14.875032424926758
    4. ')' → logprob: -15.000032424926758
    5. '   ' → logprob: -16.875032424926758
    6. '2' → logprob: -17.875032424926758
    7. '  ' → logprob: -18.375032424926758
    8. '۱' → logprob: -18.562532424926758
    9. '):
' → logprob: -18.937532424926758
    10. '১' → logprob: -19.000032424926758

Token 84: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0009383779251947999
    2. '):
' → logprob: -7.500938415527344
    3. ':' → logprob: -8.125938415527344
    4. ')' → logprob: -9.875938415527344
    5. ' ):' → logprob: -10.250938415527344
    6. '):
' → logprob: -14.125938415527344
    7. ']:' → logprob: -14.250938415527344
    8. '+' → logprob: -15.000938415527344
    9. ',' → logprob: -15.250938415527344
    10. '}:' → logprob: -15.500938415527344

Token 85: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4703810214996338
    2. 'how' → logprob: -1.4703810214996338
    3. ' how' → logprob: -1.9703810214996338
    4. '```' → logprob: -5.345380783081055
    5. '    ' → logprob: -8.220380783081055
    6. ' if' → logprob: -8.470380783081055
    7. '  ' → logprob: -8.720380783081055
    8. ' ' → logprob: -8.970380783081055
    9. '    
' → logprob: -9.220380783081055
    10. '       ' → logprob: -9.845380783081055

Token 86: ' c' (ID: 274)
  Prédit: 'how'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'how' → logprob: -0.5253654718399048
    2. ' how' → logprob: -1.4003654718399048
    3. '   ' → logprob: -2.2753653526306152
    4. ' if' → logprob: -3.1503653526306152
    5. 'if' → logprob: -4.275365352630615
    6. '```' → logprob: -6.650365352630615
    7. '       ' → logprob: -7.775365352630615
    8. '    ' → logprob: -8.275365829467773
    9. ' ' → logprob: -9.025365829467773
    10. '``' → logprob: -9.025365829467773

Token 87: ' =' (ID: 314)
  Prédit: 'ount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ount' → logprob: -0.1655930131673813
    2. ' =' → logprob: -2.665592908859253
    3. '=' → logprob: -3.165592908859253
    4. '_count' → logprob: -4.040593147277832
    5. '_cards' → logprob: -4.290593147277832
    6. '_' → logprob: -4.915593147277832
    7. '=count' → logprob: -7.415593147277832
    8. 'count' → logprob: -7.540593147277832
    9. '_counts' → logprob: -8.290593147277832
    10. '=_' → logprob: -8.540593147277832

Token 88: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.0004306692280806601
    2. ' count' → logprob: -7.750430583953857
    3. '	count' → logprob: -18.125431060791016
    4. '[count' → logprob: -18.750431060791016
    5. '   ' → logprob: -19.375431060791016
    6. '(count' → logprob: -19.875431060791016
    7. '$count' → logprob: -19.875431060791016
    8. '=count' → logprob: -20.375431060791016
    9. '_count' → logprob: -20.500431060791016
    10. 'ount' → logprob: -20.500431060791016

Token 89: '_cards' (ID: 101651)
  Prédit: '_cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -1.981667537620524e-06
    2. 'cards' → logprob: -14.500001907348633
    3. 's' → logprob: -14.875001907348633
    4. '```' → logprob: -15.125001907348633
    5. '_counts' → logprob: -15.750001907348633
    6. '_cells' → logprob: -15.875001907348633
    7. '_' → logprob: -16.500001907348633
    8. '[' → logprob: -17.000001907348633
    9. '_count' → logprob: -17.125001907348633
    10. '_tokens' → logprob: -17.375001907348633

Token 90: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.141186450899113e-05
    2. '[' → logprob: -11.625020980834961
    3. 'i' → logprob: -12.125020980834961
    4. '```' → logprob: -12.500020980834961
    5. '_cards' → logprob: -13.750020980834961
    6. '[count' → logprob: -13.875020980834961
    7. ' [' → logprob: -15.500020980834961
    8. 'count' → logprob: -15.625020980834961
    9. '[c' → logprob: -15.875020980834961
    10. 's' → logprob: -15.875020980834961

Token 91: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3271968960762024
    2. ')' → logprob: -1.7021968364715576
    3. ']
' → logprob: -2.9521968364715576
    4. ')
' → logprob: -3.2021968364715576
    5. '   ' → logprob: -5.702197074890137
    6. ')]' → logprob: -8.952197074890137
    7. ']

' → logprob: -9.202197074890137
    8. '])' → logprob: -9.327197074890137
    9. '
' → logprob: -10.202197074890137
    10. '])
' → logprob: -10.452197074890137

Token 92: '   ' (ID: 271)
  Prédit: 'how'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'how' → logprob: -0.009869648143649101
    2. ' how' → logprob: -4.884869575500488
    3. '   ' → logprob: -6.384869575500488
    4. '
' → logprob: -8.509869575500488
    5. '```' → logprob: -9.009869575500488
    6. 'if' → logprob: -9.259869575500488
    7. '    
' → logprob: -10.509869575500488
    8. ' ' → logprob: -10.634869575500488
    9. ' if' → logprob: -10.759869575500488
    10. ')' → logprob: -11.634869575500488

Token 93: ' if' (ID: 538)
  Prédit: 'how'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'how' → logprob: -0.01461095828562975
    2. 'if' (adapté à ' if') → logprob: -4.264610767364502
    3. '   ' → logprob: -8.38961124420166
    4. ' how' → logprob: -8.51461124420166
    5. ' if' → logprob: -11.63961124420166
    6. '
' → logprob: -12.63961124420166
    7. '```' → logprob: -12.88961124420166
    8. '    
' → logprob: -13.13961124420166
    9. ' ' → logprob: -14.63961124420166
    10. '       ' → logprob: -15.26461124420166

Token 94: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.6932838559150696
    2. ' c' → logprob: -0.6932838559150696
    3. '0' → logprob: -9.693284034729004
    4. ' ' → logprob: -10.068284034729004
    5. '1' → logprob: -10.443284034729004
    6. '   ' → logprob: -13.943284034729004
    7. '	c' → logprob: -14.568284034729004
    8. '>' → logprob: -14.943284034729004
    9. '```' → logprob: -15.068284034729004
    10. 'count' → logprob: -15.255784034729004

Token 95: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.5762709379196167
    2. '>' → logprob: -0.8262709379196167
    3. ':' → logprob: -8.576271057128906
    4. ' !=' → logprob: -10.076271057128906
    5. '!=' → logprob: -10.576271057128906
    6. '<|end|>' → logprob: -10.951271057128906
    7. ' ' → logprob: -11.576271057128906
    8. '">' → logprob: -11.826271057128906
    9. '==' → logprob: -12.201271057128906
    10. '<|end|>' → logprob: -12.326271057128906

Token 96: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01603495515882969
    2. ' ' → logprob: -4.141035079956055
    3. '<|end|>' → logprob: -15.391035079956055
    4. '1' → logprob: -15.516035079956055
    5. 'n' → logprob: -15.891035079956055
    6. '=' → logprob: -16.766035079956055
    7. '۰' → logprob: -17.266035079956055
    8. '```' → logprob: -17.641035079956055
    9. '>' → logprob: -18.141035079956055
    10. '  ' → logprob: -18.203535079956055

Token 97: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00033665422233752906
    2. ' ' → logprob: -8.000336647033691
    3. 'n' → logprob: -13.625336647033691
    4. ' n' → logprob: -17.375337600708008
    5. '<|end|>' → logprob: -18.000337600708008
    6. '۰' → logprob: -18.375337600708008
    7. '1' → logprob: -19.125337600708008
    8. '<|end|>' → logprob: -19.250337600708008
    9. '```' → logprob: -19.500337600708008
    10. '０' → logprob: -20.312837600708008

Token 98: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22595825791358948
    2. ':
' → logprob: -1.600958228111267
    3. '       ' → logprob: -8.100957870483398
    4. '   ' → logprob: -8.600957870483398
    5. ' how' → logprob: -10.725957870483398
    6. ':
' → logprob: -11.475957870483398
    7. ',' → logprob: -11.975957870483398
    8. ':

' → logprob: -12.225957870483398
    9. ' :
' → logprob: -12.600957870483398
    10. '):
' → logprob: -12.600957870483398

Token 99: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4441501498222351
    2. ' how' → logprob: -1.3191502094268799
    3. 'how' → logprob: -2.44415020942688
    4. '   ' → logprob: -5.444149971008301
    5. '```' → logprob: -9.9441499710083
    6. '           ' → logprob: -10.9441499710083
    7. '
' → logprob: -11.1941499710083
    8. '	   ' → logprob: -11.8191499710083
    9. '      ' → logprob: -12.0691499710083
    10. '        
' → logprob: -12.0691499710083

Token 100: ' how' (ID: 1495)
  Prédit: 'how'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'how' (adapté à ' how') → logprob: -0.005628581158816814
    2. ' how' → logprob: -5.50562858581543
    3. '   ' → logprob: -6.63062858581543
    4. '       ' → logprob: -8.88062858581543
    5. '           ' → logprob: -9.50562858581543
    6. '
' → logprob: -12.25562858581543
    7. ' ' → logprob: -12.75562858581543
    8. '  ' → logprob: -12.75562858581543
    9. '```' → logprob: -13.00562858581543
    10. '    ' → logprob: -14.75562858581543

Token 101: '_many' (ID: 57525)
  Prédit: '_many'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_many' → logprob: -1.4855663721391466e-05
    2. '_more' → logprob: -12.625015258789062
    3. '_multiple' → logprob: -12.750015258789062
    4. 'many' → logprob: -13.000015258789062
    5. '_m' → logprob: -13.375015258789062
    6. '_h' → logprob: -13.750015258789062
    7. '_' → logprob: -13.875015258789062
    8. '_have' → logprob: -14.625015258789062
    9. '_some' → logprob: -15.000015258789062
    10. 'Many' → logprob: -15.125015258789062

Token 102: '_has' (ID: 51865)
  Prédit: '_has'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_has' → logprob: -1.652451464906335e-05
    2. '_h' → logprob: -12.125016212463379
    3. 'has' → logprob: -12.125016212463379
    4. '_have' → logprob: -12.750016212463379
    5. '_that' → logprob: -14.250016212463379
    6. '```' → logprob: -15.125016212463379
    7. ' has' → logprob: -15.250016212463379
    8. '_' → logprob: -15.375016212463379
    9. '	has' → logprob: -16.000017166137695
    10. ' _' → logprob: -16.000017166137695

Token 103: '_that' (ID: 183627)
  Prédit: '_that'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_that' → logprob: -2.2200749754119897e-06
    2. 'that' → logprob: -13.125001907348633
    3. 'That' → logprob: -17.375001907348633
    4. '_th' → logprob: -17.750001907348633
    5. '	that' → logprob: -18.500001907348633
    6. '_than' → logprob: -18.750001907348633
    7. '_t' → logprob: -19.375001907348633
    8. '-that' → logprob: -19.375001907348633
    9. '_this' → logprob: -20.000001907348633
    10. '(that' → logprob: -20.125001907348633

Token 104: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.003220729762688279
    2. 'count' → logprob: -5.878220558166504
    3. '[count' → logprob: -8.378220558166504
    4. 'c' → logprob: -9.378220558166504
    5. '[c' → logprob: -9.753220558166504
    6. '[' → logprob: -10.753220558166504
    7. '_c' → logprob: -12.128220558166504
    8. '[_' → logprob: -12.378220558166504
    9. '_counts' → logprob: -13.378220558166504
    10. 'how' → logprob: -13.628220558166504

Token 105: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -6.511406809295295e-06
    2. '[' → logprob: -12.250006675720215
    3. 'c' → logprob: -14.000006675720215
    4. '[count' → logprob: -14.500006675720215
    5. '```' → logprob: -16.0000057220459
    6. '[int' → logprob: -17.3750057220459
    7. '\[' → logprob: -17.3750057220459
    8. ' [' → logprob: -17.8750057220459
    9. '[
' → logprob: -18.2500057220459
    10. '[i' → logprob: -18.6250057220459

Token 106: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005969319026917219
    2. ']+=' → logprob: -5.130969524383545
    3. ' ]' → logprob: -10.380969047546387
    4. '+=' → logprob: -12.755969047546387
    5. '']' → logprob: -13.130969047546387
    6. '   ' → logprob: -13.255969047546387
    7. ' +=' → logprob: -14.130969047546387
    8. '"]' → logprob: -14.630969047546387
    9. '+]' → logprob: -14.630969047546387
    10. '`]' → logprob: -14.630969047546387

Token 107: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.06197698414325714
    2. ' +=' → logprob: -2.811976909637451
    3. ']+=' → logprob: -11.68697738647461
    4. '=' → logprob: -14.93697738647461
    5. '+' → logprob: -15.06197738647461
    6. ' ' → logprob: -16.18697738647461
    7. '+='' → logprob: -16.56197738647461
    8. '+="' → logprob: -17.31197738647461
    9. '+=(' → logprob: -17.43697738647461
    10. '```' → logprob: -17.68697738647461

Token 108: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. '   ' → logprob: -18.875015258789062
    4. '```' → logprob: -19.000015258789062
    5. '１' → logprob: -21.000015258789062
    6. '<|end|>' → logprob: -22.375015258789062
    7. '  ' → logprob: -22.500015258789062
    8. '۱' → logprob: -22.625015258789062
    9. ' ' → logprob: -23.000015258789062
    10. '0' → logprob: -23.000015258789062

Token 109: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '```' → logprob: -19.125
    4. 'count' → logprob: -19.5
    5. 'a' → logprob: -20.125
    6. '   ' → logprob: -20.25
    7. 'how' → logprob: -21.375
    8. '１' → logprob: -21.375
    9. '-' → logprob: -22.0
    10. '0' → logprob: -22.375

Token 110: '

' (ID: 279)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.15968042612075806
    2. 'k' → logprob: -2.9096803665161133
    3. 'm' → logprob: -2.9096803665161133
    4. 'Q' → logprob: -4.534680366516113
    5. 'max' → logprob: -4.784680366516113
    6. 'queries' → logprob: -5.409680366516113
    7. 'for' → logprob: -5.534680366516113
    8. 'result' → logprob: -6.034680366516113
    9. 'print' → logprob: -6.534680366516113
    10. 'query' → logprob: -6.659680366516113

Token 111: '#' (ID: 2)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.09516525268554688
    2. 'max' → logprob: -2.970165252685547
    3. 'm' → logprob: -4.345165252685547
    4. 'Q' → logprob: -4.595165252685547
    5. 'result' → logprob: -5.720165252685547
    6. 'for' → logprob: -5.845165252685547
    7. 'answer' → logprob: -6.345165252685547
    8. 'ans' → logprob: -6.470165252685547
    9. 'queries' → logprob: -6.720165252685547
    10. 'res' → logprob: -7.095165252685547

Token 112: ' Calcul' (ID: 57243)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.6152366399765015
    2. 'max' → logprob: -1.7402366399765015
    3. 'for' → logprob: -1.9902366399765015
    4. 'result' → logprob: -3.240236759185791
    5. 'm' → logprob: -3.990236759185791
    6. '#' → logprob: -4.240236759185791
    7. 'Q' → logprob: -4.365236759185791
    8. 'total' → logprob: -4.490236759185791
    9. 'res' → logprob: -4.740236759185791
    10. 'queries' → logprob: -4.990236759185791

Token 113: ' de' (ID: 334)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.6802504062652588
    2. 'max' → logprob: -1.5552504062652588
    3. 'answer' → logprob: -2.555250406265259
    4. 'res' → logprob: -2.555250406265259
    5. 'total' → logprob: -2.680250406265259
    6. 'ans' → logprob: -3.805250406265259
    7. 'sum' → logprob: -4.93025016784668
    8. 'distinct' → logprob: -5.18025016784668
    9. 'unique' → logprob: -5.55525016784668
    10. 'score' → logprob: -5.55525016784668

Token 114: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.4119422435760498
    2. 'max' → logprob: -1.4119422435760498
    3. 'the' → logprob: -2.41194224357605
    4. 'result' → logprob: -2.41194224357605
    5. 'la' → logprob: -2.66194224357605
    6. ' the' → logprob: -3.03694224357605
    7. ' max' → logprob: -3.03694224357605
    8. 'res' → logprob: -3.41194224357605
    9. ' result' → logprob: -3.66194224357605
    10. ' le' → logprob: -4.036942481994629

Token 115: ' somme' (ID: 64484)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.46381711959838867
    2. 'ré' → logprob: -2.0888171195983887
    3. 'max' → logprob: -2.9638171195983887
    4. 'prob' → logprob: -3.0888171195983887
    5. 'plus' → logprob: -3.4638171195983887
    6. 'val' → logprob: -3.5888171195983887
    7. 'fr' → logprob: -4.088817119598389
    8. 'diff' → logprob: -5.088817119598389
    9. 'comb' → logprob: -5.213817119598389
    10. ' somme' → logprob: -5.338817119598389

Token 116: ' cumulative' (ID: 75628)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.1326310932636261
    2. 'sum' → logprob: -2.8826310634613037
    3. 'result' → logprob: -3.0076310634613037
    4. 's' → logprob: -5.007631301879883
    5. 'answer' → logprob: -5.132631301879883
    6. 'ans' → logprob: -5.882631301879883
    7. 'res' → logprob: -6.007631301879883
    8. 'current' → logprob: -7.632631301879883
    9. 'max' → logprob: -8.757631301879883
    10. 'count' → logprob: -9.507631301879883

Token 117: ' S' (ID: 336)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0792761892080307
    2. 'cum' → logprob: -2.8292760848999023
    3. 'prefix' → logprob: -4.454276084899902
    4. 'sum' → logprob: -5.829276084899902
    5. 's' → logprob: -6.329276084899902
    6. 'for' → logprob: -8.454276084899902
    7. ' cumulative' → logprob: -8.954276084899902
    8. 'acc' → logprob: -8.954276084899902
    9. 'result' → logprob: -9.829276084899902
    10. '```' → logprob: -10.204276084899902

Token 118: '[x' (ID: 17295)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.019426774233579636
    2. 'c' → logprob: -5.0194268226623535
    3. 's' → logprob: -5.2694268226623535
    4. 'cum' → logprob: -5.7694268226623535
    5. 'sum' → logprob: -5.8944268226623535
    6. ' =' → logprob: -7.7694268226623535
    7. '=' → logprob: -7.7694268226623535
    8. '
' → logprob: -8.019426345825195
    9. 'total' → logprob: -8.894426345825195
    10. 'for' → logprob: -9.519426345825195

Token 119: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007491389289498329
    2. 's' → logprob: -5.882491588592529
    3. ' ]' → logprob: -6.382491588592529
    4. 'for' → logprob: -6.632491588592529
    5. ']=' → logprob: -7.132491588592529
    6. '+' → logprob: -8.382491111755371
    7. '_]' → logprob: -8.507491111755371
    8. '[' → logprob: -9.382491111755371
    9. '=' → logprob: -10.007491111755371
    10. ' =' → logprob: -10.132491111755371

Token 120: ' et' (ID: 859)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.004948631394654512
    2. '
' → logprob: -6.129948616027832
    3. 's' → logprob: -6.254948616027832
    4. 'c' → logprob: -8.504948616027832
    5. 'cum' → logprob: -8.754948616027832
    6. ' S' → logprob: -9.004948616027832
    7. 'sum' → logprob: -9.004948616027832
    8. ' =' → logprob: -9.504948616027832
    9. '=' → logprob: -10.379948616027832
    10. ' cumulative' → logprob: -10.754948616027832

Token 121: ' f' (ID: 285)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.3607319593429565
    2. 'S' → logprob: -2.235732078552246
    3. '#' → logprob: -2.360732078552246
    4. 'for' → logprob: -2.735732078552246
    5. 'c' → logprob: -2.985732078552246
    6. 's' → logprob: -3.110732078552246
    7. 'how' → logprob: -3.235732078552246
    8. 'total' → logprob: -3.485732078552246
    9. 'count' → logprob: -3.735732078552246
    10. 'diff' → logprob: -3.860732078552246

Token 122: '[x' (ID: 17295)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.9647518396377563
    2. 'S' → logprob: -1.7147518396377563
    3. ' =' → logprob: -1.8397518396377563
    4. '=' → logprob: -2.589751720428467
    5. '[' → logprob: -3.214751720428467
    6. 'requencies' → logprob: -3.339751720428467
    7. '_' → logprob: -3.589751720428467
    8. 'x' → logprob: -3.839751720428467
    9. '_s' → logprob: -4.339751720428467
    10. '[]' → logprob: -4.339751720428467

Token 123: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0018225008388981223
    2. 's' → logprob: -8.001822471618652
    3. ']=' → logprob: -8.001822471618652
    4. 'for' → logprob: -8.126822471618652
    5. ' ]' → logprob: -8.376822471618652
    6. '[]' → logprob: -8.876822471618652
    7. '[' → logprob: -9.376822471618652
    8. '=' → logprob: -10.001822471618652
    9. '_counts' → logprob: -10.251822471618652
    10. '_]' → logprob: -10.376822471618652

Token 124: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.001931970240548253
    2. 's' → logprob: -7.251932144165039
    3. 'cum' → logprob: -7.626932144165039
    4. 'c' → logprob: -7.876932144165039
    5. 'max' → logprob: -8.751932144165039
    6. 'sum' → logprob: -9.126932144165039
    7. 'f' → logprob: -10.251932144165039
    8. ' S' → logprob: -11.126932144165039
    9. 'prefix' → logprob: -11.501932144165039
    10. '#' → logprob: -12.376932144165039

Token 125: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1610868126153946
    2. ' =' → logprob: -1.9110867977142334
    3. '_' → logprob: -7.5360870361328125
    4. '[' → logprob: -8.536087036132812
    5. '=[' → logprob: -10.036087036132812
    6. 'x' → logprob: -10.911087036132812
    7. 's' → logprob: -11.036087036132812
    8. ',' → logprob: -11.161087036132812
    9. '_=' → logprob: -11.536087036132812
    10. ']' → logprob: -11.911087036132812

Token 126: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.020606590434908867
    2. ' [' → logprob: -3.895606517791748
    3. '[count' → logprob: -10.770606994628906
    4. '[n' → logprob: -10.895606994628906
    5. '[len' → logprob: -11.520606994628906
    6. '0' → logprob: -12.520606994628906
    7. ' how' → logprob: -13.270606994628906
    8. 'how' → logprob: -13.395606994628906
    9. '   ' → logprob: -13.520606994628906
    10. '[i' → logprob: -14.145606994628906

Token 127: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.36574100604048e-06
    2. ' ' → logprob: -12.375004768371582
    3. ']' → logprob: -16.625003814697266
    4. '(' → logprob: -17.000003814697266
    5. 'n' → logprob: -17.375003814697266
    6. '
' → logprob: -18.375003814697266
    7. '[' → logprob: -18.750003814697266
    8. ')' → logprob: -19.125003814697266
    9. '۰' → logprob: -19.125003814697266
    10. 'i' → logprob: -19.250003814697266

Token 128: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0006942047039046884
    2. ']*(' → logprob: -8.000694274902344
    3. 'for' → logprob: -9.125694274902344
    4. ']*' → logprob: -9.500694274902344
    5. ' for' → logprob: -9.750694274902344
    6. ']+' → logprob: -9.750694274902344
    7. ']
' → logprob: -10.500694274902344
    8. '(n' → logprob: -11.125694274902344
    9. '*' → logprob: -12.125694274902344
    10. '0' → logprob: -12.750694274902344

Token 129: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.14798599481582642
    2. ' *' → logprob: -2.2729859352111816
    3. '*(' → logprob: -4.397985935211182
    4. ']' → logprob: -5.022985935211182
    5. '(n' → logprob: -5.022985935211182
    6. 'for' → logprob: -5.772985935211182
    7. ' for' → logprob: -6.022985935211182
    8. '*n' → logprob: -6.897985935211182
    9. '(' → logprob: -7.147985935211182
    10. '+' → logprob: -7.147985935211182

Token 130: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0005152635276317596
    2. ' (' → logprob: -7.875515460968018
    3. '(' → logprob: -9.62551498413086
    4. '(len' → logprob: -10.25051498413086
    5. '((' → logprob: -10.50051498413086
    6. '(N' → logprob: -12.50051498413086
    7. '(max' → logprob: -13.62551498413086
    8. ' ' → logprob: -15.00051498413086
    9. 'n' → logprob: -15.50051498413086
    10. '   ' → logprob: -15.75051498413086

Token 131: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.05505559965968132
    2. '(n' → logprob: -2.930055618286133
    3. ' n' → logprob: -9.305055618286133
    4. '(' → logprob: -10.055055618286133
    5. ' (' → logprob: -11.055055618286133
    6. 'len' → logprob: -11.680055618286133
    7. '   ' → logprob: -12.680055618286133
    8. '
' → logprob: -13.305055618286133
    9. ' ' → logprob: -13.430055618286133
    10. ',n' → logprob: -13.930055618286133

Token 132: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.011052774265408516
    2. ' +' → logprob: -4.51105260848999
    3. '+
' → logprob: -12.386053085327148
    4. '
' → logprob: -14.886053085327148
    5. ' +
' → logprob: -15.636053085327148
    6. ')' → logprob: -16.88605308532715
    7. '＋' → logprob: -17.13605308532715
    8. '1' → logprob: -17.38605308532715
    9. ' ' → logprob: -17.88605308532715
    10. '[' → logprob: -18.01105308532715

Token 133: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.20177419483661652
    2. '2' → logprob: -1.7017742395401
    3. ' ' → logprob: -7.9517741203308105
    4. '
' → logprob: -12.701774597167969
    5. '3' → logprob: -13.451774597167969
    6. '

' → logprob: -14.326774597167969
    7. '```' → logprob: -14.514274597167969
    8. '   ' → logprob: -14.639274597167969
    9. '10' → logprob: -14.764274597167969
    10. '7' → logprob: -15.076774597167969

Token 134: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11283773928880692
    2. '2' → logprob: -2.237837791442871
    3. ' ' → logprob: -11.987837791442871
    4. '(' → logprob: -12.487837791442871
    5. '3' → logprob: -14.112837791442871
    6. '+' → logprob: -14.112837791442871
    7. '6' → logprob: -14.175337791442871
    8. '7' → logprob: -14.612837791442871
    9. '
' → logprob: -14.800337791442871
    10. '5' → logprob: -14.925337791442871

Token 135: ')' (ID: 8)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.3873865604400635
    2. ')' → logprob: -1.1373865604400635
    3. ')
' → logprob: -7.637386322021484
    4. ')

' → logprob: -10.387386322021484
    5. ' )
' → logprob: -14.137386322021484
    6. ')`
' → logprob: -14.637386322021484
    7. ')

' → logprob: -15.512386322021484
    8. ' )' → logprob: -15.887386322021484
    9. '#' → logprob: -16.137386322021484
    10. ')`' → logprob: -16.137386322021484

Token 136: ' ' (ID: 220)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.31389325857162476
    2. 'f' → logprob: -1.3138933181762695
    3. 'how' → logprob: -7.8138933181762695
    4. ' for' → logprob: -9.93889331817627
    5. '
' → logprob: -10.06389331817627
    6. 'freq' → logprob: -10.56389331817627
    7. 'cum' → logprob: -11.18889331817627
    8. 'sum' → logprob: -11.18889331817627
    9. 'F' → logprob: -11.43889331817627
    10. 'count' → logprob: -11.43889331817627

Token 137: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03243573009967804
    2. '
' → logprob: -3.907435655593872
    3. 'f' → logprob: -4.532435894012451
    4. 'how' → logprob: -7.032435894012451
    5. 'count' → logprob: -10.032435417175293
    6. ' for' → logprob: -10.657435417175293
    7. 'sum' → logprob: -10.782435417175293
    8. '
' → logprob: -11.032435417175293
    9. 'cum' → logprob: -11.032435417175293
    10. '#' → logprob: -11.532435417175293

Token 138: ' un' (ID: 537)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0002668192028068006
    2. ' for' → logprob: -9.125267028808594
    3. 'range' → logprob: -9.375267028808594
    4. 'n' → logprob: -10.500267028808594
    5. 'how' → logprob: -11.000267028808594
    6. '
' → logprob: -11.500267028808594
    7. 'f' → logprob: -12.250267028808594
    8. 'x' → logprob: -12.375267028808594
    9. 'S' → logprob: -13.000267028808594
    10. '```' → logprob: -13.000267028808594

Token 139: ' peu' (ID: 9235)
  Prédit: 'der'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'der' → logprob: -0.8660634756088257
    2. 'ique' → logprob: -2.1160635948181152
    3. 'd' → logprob: -2.2410635948181152
    4. 'e' → logprob: -2.6160635948181152
    5. '
' → logprob: -2.7410635948181152
    6. '+' → logprob: -3.3660635948181152
    7. '[' → logprob: -3.6160635948181152
    8. 'defined' → logprob: -4.116063594818115
    9. 'def' → logprob: -4.241063594818115
    10. 'used' → logprob: -4.491063594818115

Token 140: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.02582724206149578
    2. 'de' → logprob: -4.025827407836914
    3. '+' → logprob: -5.775827407836914
    4. 'd' → logprob: -6.275827407836914
    5. 'larg' → logprob: -7.150827407836914
    6. 'n' → logprob: -7.400827407836914
    7. 'diff' → logprob: -8.400827407836914
    8. ' plus' → logprob: -8.525827407836914
    9. '_plus' → logprob: -8.900827407836914
    10. '```' → logprob: -9.025827407836914

Token 141: ' grand' (ID: 6363)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6858855485916138
    2. 'de' → logprob: -1.4358855485916138
    3. 'long' → logprob: -2.685885429382324
    4. '+' → logprob: -3.685885429382324
    5. ')' → logprob: -4.060885429382324
    6. 'large' → logprob: -4.060885429382324
    7. '[' → logprob: -4.185885429382324
    8. 's' → logprob: -4.435885429382324
    9. ']' → logprob: -4.560885429382324
    10. 'for' → logprob: -4.935885429382324

Token 142: ' pour' (ID: 1930)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.028716059401631355
    2. '
' → logprob: -3.9037160873413086
    3. ' for' → logprob: -5.028716087341309
    4. '<|end|>' → logprob: -6.528716087341309
    5. '<|end|>' → logprob: -10.278716087341309
    6. '\n' → logprob: -10.528716087341309
    7. '

' → logprob: -10.903716087341309
    8. '
' → logprob: -11.153716087341309
    9. '```' → logprob: -11.528716087341309
    10. ')' → logprob: -11.903716087341309

Token 143: ' éviter' (ID: 64013)
  Prédit: 'év'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'év' → logprob: -0.784395694732666
    2. 'i' → logprob: -1.159395694732666
    3. 'index' → logprob: -3.034395694732666
    4. 'fac' → logprob: -3.034395694732666
    5. 'range' → logprob: -3.159395694732666
    6. 'la' → logprob: -3.909395694732666
    7. 'ev' → logprob: -3.909395694732666
    8. 'l' → logprob: -4.659395694732666
    9. ' éviter' → logprob: -5.034395694732666
    10. 'x' → logprob: -5.034395694732666

Token 144: ' les' (ID: 1341)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.6935078501701355
    2. 'Index' → logprob: -1.4435079097747803
    3. 'l' → logprob: -1.5685079097747803
    4. 'des' → logprob: -3.8185079097747803
    5. 'les' → logprob: -4.193507671356201
    6. 'd' → logprob: -4.443507671356201
    7. ' Index' → logprob: -6.443507671356201
    8. '_index' → logprob: -6.693507671356201
    9. ' index' → logprob: -6.818507671356201
    10. 'un' → logprob: -7.568507671356201

Token 145: ' erreurs' (ID: 139891)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.055471375584602356
    2. 'Index' → logprob: -2.930471420288086
    3. ' index' → logprob: -8.805471420288086
    4. 'd' → logprob: -9.430471420288086
    5. ' Index' → logprob: -9.555471420288086
    6. 'er' → logprob: -9.930471420288086
    7. 'overflow' → logprob: -10.055471420288086
    8. 'indices' → logprob: -10.055471420288086
    9. 'out' → logprob: -10.180471420288086
    10. '```' → logprob: -10.805471420288086

Token 146: ' d' (ID: 272)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0014282134361565113
    2. 'f' → logprob: -7.001428127288818
    3. ' for' → logprob: -7.751428127288818
    4. '
' → logprob: -9.501428604125977
    5. '<|end|>' → logprob: -11.876428604125977
    6. '```' → logprob: -13.751428604125977
    7. 'x' → logprob: -14.126428604125977
    8. 'sum' → logprob: -15.001428604125977
    9. 'cum' → logprob: -15.126428604125977
    10. ')' → logprob: -15.126428604125977

Token 147: ''ind' (ID: 82245)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.013871164061129093
    2. 'indice' → logprob: -4.638871192932129
    3. ''' → logprob: -5.763871192932129
    4. 'Index' → logprob: -7.263871192932129
    5. 'indices' → logprob: -8.763871192932129
    6. ''ind' → logprob: -9.763871192932129
    7. 'ind' → logprob: -10.888871192932129
    8. '_index' → logprob: -11.763871192932129
    9. 'indexes' → logprob: -12.388871192932129
    10. 'indent' → logprob: -12.513871192932129

Token 148: 'ice' (ID: 603)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.0049053276889026165
    2. 'ice' → logprob: -5.7549052238464355
    3. 'ices' → logprob: -6.7549052238464355
    4. 'entation' → logprob: -8.379905700683594
    5. 'é' → logprob: -9.629905700683594
    6. 'ces' → logprob: -9.754905700683594
    7. 'exe' → logprob: -10.379905700683594
    8. 'exion' → logprob: -10.629905700683594
    9. '```' → logprob: -10.629905700683594
    10. 'екс' → logprob: -10.879905700683594

Token 149: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00201595202088356
    2. '
' → logprob: -6.502016067504883
    3. ' for' → logprob: -7.627016067504883
    4. 'f' → logprob: -11.002016067504883
    5. '```' → logprob: -13.127016067504883
    6. '<|end|>' → logprob: -13.502016067504883
    7. ')' → logprob: -13.752016067504883
    8. '

' → logprob: -14.127016067504883
    9. '
' → logprob: -14.627016067504883
    10. 'x' → logprob: -14.627016067504883

Token 150: 'f' (ID: 69)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.016081882640719414
    2. 'f' → logprob: -4.141081809997559
    3. ' for' → logprob: -10.391081809997559
    4. 'F' → logprob: -12.016081809997559
    5. 'sum' → logprob: -12.891081809997559
    6. 'cum' → logprob: -13.516081809997559
    7. 'fx' → logprob: -13.641081809997559
    8. 'c' → logprob: -14.141081809997559
    9. 'freq' → logprob: -14.266081809997559
    10. 'total' → logprob: -14.516081809997559

Token 151: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12694691121578217
    2. ' =' → logprob: -2.1269469261169434
    3. '[' → logprob: -11.376946449279785
    4. 'f' → logprob: -13.001946449279785
    5. ']' → logprob: -13.751946449279785
    6. 's' → logprob: -14.126946449279785
    7. '=[' → logprob: -14.251946449279785
    8. '_' → logprob: -14.251946449279785
    9. 'a' → logprob: -15.126946449279785
    10. ' ' → logprob: -15.376946449279785

Token 152: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.026321547105908394
    2. ' [' → logprob: -3.6513216495513916
    3. '[n' → logprob: -11.151321411132812
    4. '0' → logprob: -12.401321411132812
    5. ' ' → logprob: -13.651321411132812
    6. '[-' → logprob: -15.026321411132812
    7. '[len' → logprob: -15.151321411132812
    8. '[S' → logprob: -15.651321411132812
    9. '[s' → logprob: -15.776321411132812
    10. 'n' → logprob: -16.026321411132812

Token 153: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00014978687977418303
    2. '[' → logprob: -9.375149726867676
    3. 'n' → logprob: -11.000149726867676
    4. ' ' → logprob: -11.000149726867676
    5. '[n' → logprob: -11.000149726867676
    6. ']' → logprob: -12.250149726867676
    7. ' [' → logprob: -12.625149726867676
    8. '(n' → logprob: -13.000149726867676
    9. '(' → logprob: -13.125149726867676
    10. '
' → logprob: -14.250149726867676

Token 154: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.723973582556937e-05
    2. ']*' → logprob: -12.000017166137695
    3. '*' → logprob: -12.250017166137695
    4. '(n' → logprob: -12.375017166137695
    5. ' ]' → logprob: -14.000017166137695
    6. ' ' → logprob: -15.250017166137695
    7. ')' → logprob: -15.625017166137695
    8. ']*(' → logprob: -16.250017166137695
    9. 'n' → logprob: -16.375017166137695
    10. 'for' → logprob: -16.500017166137695

Token 155: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.2268129140138626
    2. ' *' → logprob: -1.6018129587173462
    3. '(n' → logprob: -6.726812839508057
    4. '(' → logprob: -9.601813316345215
    5. '*(' → logprob: -9.851813316345215
    6. '+' → logprob: -10.476813316345215
    7. '[' → logprob: -11.101813316345215
    8. ']' → logprob: -11.851813316345215
    9. '*n' → logprob: -11.851813316345215
    10. ' (' → logprob: -11.976813316345215

Token 156: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0013669042382389307
    2. ' (' → logprob: -6.626367092132568
    3. '(' → logprob: -10.12636661529541
    4. 'n' → logprob: -15.00136661529541
    5. '((' → logprob: -15.25136661529541
    6. '(N' → logprob: -16.626367568969727
    7. '   ' → logprob: -16.626367568969727
    8. ' ' → logprob: -16.751367568969727
    9. ' n' → logprob: -18.126367568969727
    10. '(
' → logprob: -18.126367568969727

Token 157: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0017762075876817107
    2. '(n' → logprob: -6.376776218414307
    3. ' n' → logprob: -9.751775741577148
    4. '   ' → logprob: -11.376775741577148
    5. ' (' → logprob: -13.501775741577148
    6. ' ' → logprob: -14.126775741577148
    7. '(' → logprob: -14.501775741577148
    8. '
' → logprob: -14.626775741577148
    9. '	n' → logprob: -14.876775741577148
    10. ')' → logprob: -15.251775741577148

Token 158: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.003178306156769395
    2. ' +' → logprob: -5.753178119659424
    3. '+
' → logprob: -14.503178596496582
    4. '＋' → logprob: -16.753177642822266
    5. '
' → logprob: -17.503177642822266
    6. '2' → logprob: -17.628177642822266
    7. ' ' → logprob: -18.003177642822266
    8. ' +
' → logprob: -18.128177642822266
    9. '```' → logprob: -18.565677642822266
    10. ')' → logprob: -18.815677642822266

Token 159: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0006237993948161602
    2. '3' → logprob: -7.50062370300293
    3. ' ' → logprob: -9.75062370300293
    4. '1' → logprob: -11.87562370300293
    5. '+' → logprob: -13.62562370300293
    6. '   ' → logprob: -13.75062370300293
    7. '
' → logprob: -14.18812370300293
    8. '(' → logprob: -14.43812370300293
    9. '

' → logprob: -14.43812370300293
    10. '  ' → logprob: -15.56312370300293

Token 160: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00763655873015523
    2. '3' → logprob: -4.882636547088623
    3. '1' → logprob: -11.007637023925781
    4. ' ' → logprob: -11.632637023925781
    5. '+' → logprob: -13.195137023925781
    6. '
' → logprob: -14.195137023925781
    7. '   ' → logprob: -14.757637023925781
    8. '(' → logprob: -14.820137023925781
    9. '

' → logprob: -14.945137023925781
    10. '4' → logprob: -15.507637023925781

Token 161: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00014358828775584698
    2. ')
' → logprob: -8.875144004821777
    3. ')

' → logprob: -13.375144004821777
    4. ']' → logprob: -14.000144004821777
    5. ')
' → logprob: -14.375144004821777
    6. ' )' → logprob: -14.750144004821777
    7. ')`' → logprob: -16.12514305114746
    8. '))' → logprob: -17.00014305114746
    9. ')]' → logprob: -17.25014305114746
    10. '#' → logprob: -17.37514305114746

Token 162: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -7.896309739408025e-07
    2. ' for' → logprob: -14.750000953674316
    3. '
' → logprob: -16.625
    4. 'max' → logprob: -16.875
    5. '```' → logprob: -17.25
    6. 'i' → logprob: -17.625
    7. 'x' → logprob: -18.125
    8. 'range' → logprob: -18.25
    9. '#' → logprob: -18.5
    10. 'f' → logprob: -18.75

Token 163: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3976355195045471
    2. ' x' → logprob: -1.5226354598999023
    3. 'i' → logprob: -2.7726354598999023
    4. ' i' → logprob: -3.2726354598999023
    5. 'c' → logprob: -5.272635459899902
    6. ' c' → logprob: -5.772635459899902
    7. 'k' → logprob: -7.397635459899902
    8. ' k' → logprob: -8.772635459899902
    9. 'count' → logprob: -9.272635459899902
    10. 'j' → logprob: -9.397635459899902

Token 164: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.033712439239025116
    2. 'in' → logprob: -3.408712387084961
    3. ' ' → logprob: -10.783712387084961
    4. '1' → logprob: -11.783712387084961
    5. 'range' → logprob: -11.783712387084961
    6. '   ' → logprob: -12.158712387084961
    7. '	in' → logprob: -12.908712387084961
    8. 'n' → logprob: -12.908712387084961
    9. '```' → logprob: -12.908712387084961
    10. ',' → logprob: -13.158712387084961

Token 165: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005942667368799448
    2. ' range' → logprob: -5.1309428215026855
    3. 're' → logprob: -11.505942344665527
    4. ' reversed' → logprob: -13.380942344665527
    5. '(range' → logprob: -14.255942344665527
    6. '   ' → logprob: -14.505942344665527
    7. 'reverse' → logprob: -14.880942344665527
    8. 'n' → logprob: -15.255942344665527
    9. ' ' → logprob: -15.630942344665527
    10. '```' → logprob: -16.130943298339844

Token 166: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10022803395986557
    2. '(n' → logprob: -2.3502280712127686
    3. '1' → logprob: -11.350228309631348
    4. ' (' → logprob: -12.100228309631348
    5. 'n' → logprob: -14.100228309631348
    6. '(x' → logprob: -14.225228309631348
    7. ' ' → logprob: -14.225228309631348
    8. ',' → logprob: -14.850228309631348
    9. '((' → logprob: -15.100228309631348
    10. '(
' → logprob: -15.225228309631348

Token 167: '1' (ID: 16)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.12765276432037354
    2. '1' → logprob: -2.127652645111084
    3. ' n' → logprob: -7.377652645111084
    4. ' ' → logprob: -9.502653121948242
    5. '   ' → logprob: -11.252653121948242
    6. '
' → logprob: -12.627653121948242
    7. '2' → logprob: -13.252653121948242
    8. '```' → logprob: -14.002653121948242
    9. '0' → logprob: -14.190153121948242
    10. '	n' → logprob: -14.252653121948242

Token 168: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007904515950940549
    2. ' ,' → logprob: -7.750790596008301
    3. ',n' → logprob: -8.0007905960083
    4. 'n' → logprob: -11.0007905960083
    5. '(n' → logprob: -12.3757905960083
    6. ',
' → logprob: -13.6257905960083
    7. '(' → logprob: -14.1257905960083
    8. '1' → logprob: -14.6257905960083
    9. 'to' → logprob: -15.6257905960083
    10. '   ' → logprob: -15.7507905960083

Token 169: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.12694533169269562
    2. ' n' → logprob: -2.1269452571868896
    3. '   ' → logprob: -11.251945495605469
    4. ' ' → logprob: -13.376945495605469
    5. 'len' → logprob: -13.876945495605469
    6. '(n' → logprob: -14.751945495605469
    7. '
' → logprob: -15.001945495605469
    8. '	n' → logprob: -15.251945495605469
    9. '  ' → logprob: -15.626945495605469
    10. '    ' → logprob: -15.626945495605469

Token 170: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0380435548722744
    2. ' +' → logprob: -3.28804349899292
    3. '+
' → logprob: -13.913043975830078
    4. '
' → logprob: -14.788043975830078
    5. '＋' → logprob: -15.413043975830078
    6. ' +
' → logprob: -15.538043975830078
    7. '()+' → logprob: -16.038043975830078
    8. '1' → logprob: -16.788043975830078
    9. ' ' → logprob: -16.913043975830078
    10. '﻿' → logprob: -17.038043975830078

Token 171: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.09384778141975403
    2. '2' → logprob: -2.5938477516174316
    3. ' ' → logprob: -4.218847751617432
    4. '+' → logprob: -9.09384822845459
    5. 'n' → logprob: -11.46884822845459
    6. '   ' → logprob: -12.71884822845459
    7. ' n' → logprob: -13.21884822845459
    8. ' +' → logprob: -13.59384822845459
    9. ')' → logprob: -14.21884822845459
    10. '```' → logprob: -14.84384822845459

Token 172: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3684825301170349
    2. '+' → logprob: -1.4934825897216797
    3. '2' → logprob: -2.4934825897216797
    4. 'n' → logprob: -7.86848258972168
    5. ' +' → logprob: -7.86848258972168
    6. ' ' → logprob: -8.49348258972168
    7. '```' → logprob: -11.86848258972168
    8. '   ' → logprob: -12.24348258972168
    9. '11' → logprob: -12.36848258972168
    10. 'x' → logprob: -12.74348258972168

Token 173: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003235463285818696
    2. ':' → logprob: -6.128235340118408
    3. '):
' → logprob: -7.003235340118408
    4. ')' → logprob: -9.003235816955566
    5. ' ):' → logprob: -11.628235816955566
    6. '+' → logprob: -12.503235816955566
    7. '):
' → logprob: -13.253235816955566
    8. ',' → logprob: -14.128235816955566
    9. ' :' → logprob: -14.253235816955566
    10. ']:' → logprob: -14.503235816955566

Token 174: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001178916310891509
    2. ' f' → logprob: -7.876178741455078
    3. ' how' → logprob: -8.126178741455078
    4. 'f' → logprob: -8.376178741455078
    5. 'S' → logprob: -9.376178741455078
    6. 'how' → logprob: -9.626178741455078
    7. ' S' → logprob: -9.751178741455078
    8. '   ' → logprob: -11.126178741455078
    9. '```' → logprob: -11.501178741455078
    10. ':' → logprob: -12.251178741455078

Token 175: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' (adapté à ' S') → logprob: -0.2056405395269394
    2. 'how' → logprob: -2.3306405544281006
    3. '   ' → logprob: -2.4556405544281006
    4. 'f' → logprob: -6.5806403160095215
    5. '       ' → logprob: -7.4556403160095215
    6. ' S' → logprob: -8.33064079284668
    7. ' how' → logprob: -8.95564079284668
    8. 'How' → logprob: -8.95564079284668
    9. '```' → logprob: -8.95564079284668
    10. '	S' → logprob: -10.51814079284668

Token 176: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -5.080963092041202e-06
    2. '[' → logprob: -13.000004768371582
    3. 'x' → logprob: -13.250004768371582
    4. '[S' → logprob: -14.375004768371582
    5. '[i' → logprob: -15.500004768371582
    6. '```' → logprob: -16.0000057220459
    7. '[
' → logprob: -17.2500057220459
    8. ' [' → logprob: -17.2500057220459
    9. '\[' → logprob: -17.2500057220459
    10. ']' → logprob: -18.2500057220459

Token 177: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0015618811594322324
    2. ']=' → logprob: -6.751562118530273
    3. '=' → logprob: -7.876562118530273
    4. ']+=' → logprob: -11.876562118530273
    5. ')' → logprob: -12.501562118530273
    6. ' =' → logprob: -14.626562118530273
    7. ' ]' → logprob: -15.001562118530273
    8. '[' → logprob: -15.376562118530273
    9. ']
' → logprob: -16.126562118530273
    10. ')=' → logprob: -16.126562118530273

Token 178: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00014168102643452585
    2. ' =' → logprob: -8.875142097473145
    3. '=S' → logprob: -13.875142097473145
    4. '+=' → logprob: -14.000142097473145
    5. '=

' → logprob: -18.125141143798828
    6. ' +=' → logprob: -18.500141143798828
    7. '＝' → logprob: -19.250141143798828
    8. '=s' → logprob: -20.000141143798828
    9. 'S' → logprob: -20.125141143798828
    10. ']=' → logprob: -20.500141143798828

Token 179: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.00016945181414484978
    2. ' S' → logprob: -9.37516975402832
    3. 'how' → logprob: -9.50016975402832
    4. '   ' → logprob: -12.25016975402832
    5. 'x' → logprob: -13.62516975402832
    6. 'f' → logprob: -13.75016975402832
    7. '	S' → logprob: -14.37516975402832
    8. 'How' → logprob: -14.75016975402832
    9. 's' → logprob: -14.87516975402832
    10. '_S' → logprob: -15.00016975402832

Token 180: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.00016277639952022582
    2. 'x' → logprob: -8.750163078308105
    3. '[' → logprob: -12.750163078308105
    4. '```' → logprob: -14.000163078308105
    5. '[
' → logprob: -15.125163078308105
    6. '	x' → logprob: -16.75016212463379
    7. ' x' → logprob: -17.00016212463379
    8. '(x' → logprob: -17.12516212463379
    9. '{x' → logprob: -17.25016212463379
    10. ' [' → logprob: -17.25016212463379

Token 181: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0003155625017825514
    2. ' -' → logprob: -8.62531566619873
    3. '[x' → logprob: -9.12531566619873
    4. 'x' → logprob: -11.00031566619873
    5. '[' → logprob: -12.00031566619873
    6. '[-' → logprob: -12.62531566619873
    7. ']' → logprob: -14.37531566619873
    8. '-x' → logprob: -16.375314712524414
    9. '1' → logprob: -16.500314712524414
    10. '```' → logprob: -17.750314712524414

Token 182: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.491498531133402e-06
    2. ' ' → logprob: -11.625009536743164
    3. '   ' → logprob: -15.250009536743164
    4. '```' → logprob: -16.500009536743164
    5. '
' → logprob: -16.625009536743164
    6. ']' → logprob: -17.375009536743164
    7. '0' → logprob: -18.375009536743164
    8. '  ' → logprob: -18.562509536743164
    9. '

' → logprob: -18.687509536743164
    10. '    ' → logprob: -19.000009536743164

Token 183: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.729906196298543e-06
    2. ' ' → logprob: -11.625009536743164
    3. '   ' → logprob: -14.750009536743164
    4. '```' → logprob: -16.000009536743164
    5. ']' → logprob: -16.375009536743164
    6. '
' → logprob: -18.125009536743164
    7. '`' → logprob: -18.625009536743164
    8. '  ' → logprob: -18.687509536743164
    9. '0' → logprob: -18.750009536743164
    10. 'x' → logprob: -18.812509536743164

Token 184: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0022712242789566517
    2. ']+' → logprob: -6.3772711753845215
    3. '+' → logprob: -7.5022711753845215
    4. ' ]' → logprob: -11.75227165222168
    5. ' +' → logprob: -12.25227165222168
    6. ')' → logprob: -13.12727165222168
    7. '+]' → logprob: -14.12727165222168
    8. '
' → logprob: -14.37727165222168
    9. ']
' → logprob: -15.12727165222168
    10. ']+=' → logprob: -15.87727165222168

Token 185: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.01608387380838394
    2. ' +' → logprob: -4.141083717346191
    3. '*' → logprob: -10.266083717346191
    4. '   ' → logprob: -11.766083717346191
    5. '+
' → logprob: -12.641083717346191
    6. '
' → logprob: -13.641083717346191
    7. '+x' → logprob: -14.641083717346191
    8. ' *' → logprob: -14.766083717346191
    9. ' plus' → logprob: -14.766083717346191
    10. ' ' → logprob: -14.891083717346191

Token 186: ' how' (ID: 1495)
  Prédit: 'how'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'how' → logprob: -0.03891053423285484
    2. 'x' → logprob: -3.2889106273651123
    3. ' how' → logprob: -7.663910388946533
    4. '   ' → logprob: -8.788910865783691
    5. '(x' → logprob: -9.288910865783691
    6. ' x' → logprob: -9.913910865783691
    7. 'f' → logprob: -10.038910865783691
    8. '(' → logprob: -10.913910865783691
    9. 'h' → logprob: -11.788910865783691
    10. '(h' → logprob: -12.413910865783691

Token 187: '_many' (ID: 57525)
  Prédit: '_many'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_many' → logprob: -6.0033853515051305e-05
    2. 'many' → logprob: -9.750060081481934
    3. '_more' → logprob: -14.500060081481934
    4. 'Many' → logprob: -14.500060081481934
    5. ' many' → logprob: -15.375060081481934
    6. '_that' → logprob: -16.000059127807617
    7. '_have' → logprob: -16.625059127807617
    8. '_multi' → logprob: -17.000059127807617
    9. '_multiple' → logprob: -17.500059127807617
    10. '-many' → logprob: -17.500059127807617

Token 188: '_has' (ID: 51865)
  Prédit: '_has'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_has' → logprob: -5.438573680294212e-06
    2. '_have' → logprob: -13.250005722045898
    3. 'has' → logprob: -13.500005722045898
    4. ' _' → logprob: -14.625005722045898
    5. '_that' → logprob: -14.750005722045898
    6. 'a' → logprob: -14.875005722045898
    7. '_' → logprob: -15.000005722045898
    8. '_h' → logprob: -15.625005722045898
    9. '_a' → logprob: -15.875005722045898
    10. 's' → logprob: -16.2500057220459

Token 189: '_that' (ID: 183627)
  Prédit: '_that'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_that' → logprob: -0.00018065694894175977
    2. 'that' → logprob: -8.6251802444458
    3. 't' → logprob: -15.7501802444458
    4. 'That' → logprob: -15.8751802444458
    5. '(that' → logprob: -16.125181198120117
    6. '_hat' → logprob: -16.250181198120117
    7. 'hat' → logprob: -16.375181198120117
    8. '_this' → logprob: -16.375181198120117
    9. '```' → logprob: -16.500181198120117
    10. '_the' → logprob: -16.500181198120117

Token 190: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.0007283978629857302
    2. '_has' → logprob: -8.000728607177734
    3. 'count' → logprob: -8.000728607177734
    4. '[x' → logprob: -10.250728607177734
    5. 'has' → logprob: -11.875728607177734
    6. '_that' → logprob: -12.875728607177734
    7. '[count' → logprob: -12.875728607177734
    8. '_counts' → logprob: -13.000728607177734
    9. 'c' → logprob: -13.125728607177734
    10. 's' → logprob: -13.875728607177734

Token 191: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -3.297462171758525e-05
    2. '[' → logprob: -10.500033378601074
    3. 'x' → logprob: -12.750033378601074
    4. ' [' → logprob: -13.375033378601074
    5. '[
' → logprob: -15.250033378601074
    6. '(x' → logprob: -15.750033378601074
    7. '
' → logprob: -16.000032424926758
    8. '```' → logprob: -16.125032424926758
    9. '\[' → logprob: -16.500032424926758
    10. '

' → logprob: -16.750032424926758

Token 192: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0065504093654453754
    2. ' *' → logprob: -5.256550312042236
    3. ' ]' → logprob: -7.756550312042236
    4. '*' → logprob: -7.881550312042236
    5. ']
' → logprob: -7.881550312042236
    6. ']*' → logprob: -9.756550788879395
    7. '*x' → logprob: -11.006550788879395
    8. ']

' → logprob: -11.256550788879395
    9. '<|end|>' → logprob: -11.631550788879395
    10. '
' → logprob: -12.131550788879395

Token 193: '   ' (ID: 271)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.4503563940525055
    2. '   ' → logprob: -1.200356364250183
    3. 'for' → logprob: -2.9503564834594727
    4. ' for' → logprob: -5.075356483459473
    5. ' f' → logprob: -6.075356483459473
    6. '	f' → logprob: -8.575356483459473
    7. '```' → logprob: -8.700356483459473
    8. ' ' → logprob: -9.450356483459473
    9. '
' → logprob: -9.825356483459473
    10. ')' → logprob: -10.575356483459473

Token 194: ' if' (ID: 538)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0007556661730632186
    2. 'x' → logprob: -7.750755786895752
    3. '   ' → logprob: -8.125755310058594
    4. ' f' → logprob: -11.000755310058594
    5. '
' → logprob: -12.875755310058594
    6. 'for' → logprob: -13.125755310058594
    7. '    
' → logprob: -13.250755310058594
    8. '*f' → logprob: -13.500755310058594
    9. ')' → logprob: -14.000755310058594
    10. '```' → logprob: -14.250755310058594

Token 195: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.4408159852027893
    2. 'how' → logprob: -1.4408159255981445
    3. 'S' → logprob: -2.3158159255981445
    4. ' x' → logprob: -4.9408159255981445
    5. ' how' → logprob: -5.1908159255981445
    6. 'f' → logprob: -5.1908159255981445
    7. ' S' → logprob: -7.3783159255981445
    8. 'c' → logprob: -8.128315925598145
    9. '```' → logprob: -8.815815925598145
    10. 'i' → logprob: -8.940815925598145

Token 196: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.44124549627304077
    2. '-' → logprob: -1.8162455558776855
    3. '>=' → logprob: -2.4412455558776855
    4. ' >' → logprob: -3.1912455558776855
    5. '==' → logprob: -3.5662455558776855
    6. ' ==' → logprob: -4.4412455558776855
    7. '*' → logprob: -5.0662455558776855
    8. ' >=' → logprob: -5.0662455558776855
    9. ' *' → logprob: -6.0662455558776855
    10. ' -' → logprob: -6.0662455558776855

Token 197: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1649126261472702
    2. '0' → logprob: -1.9149125814437866
    3. ' ' → logprob: -5.414912700653076
    4. '=' → logprob: -8.539912223815918
    5. '   ' → logprob: -11.164912223815918
    6. 'S' → logprob: -12.039912223815918
    7. 'f' → logprob: -13.102412223815918
    8. '```' → logprob: -13.602412223815918
    9. ' =' → logprob: -13.727412223815918
    10. '>' → logprob: -13.727412223815918

Token 198: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07916571944952011
    2. '0' → logprob: -2.5791656970977783
    3. ' ' → logprob: -8.8291654586792
    4. 'f' → logprob: -9.8291654586792
    5. 'S' → logprob: -10.5791654586792
    6. '=' → logprob: -10.7041654586792
    7. '2' → logprob: -12.0791654586792
    8. '   ' → logprob: -12.3916654586792
    9. 'n' → logprob: -13.3291654586792
    10. '```' → logprob: -13.3291654586792

Token 199: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.43076184391975403
    2. ':' → logprob: -1.0557618141174316
    3. '   ' → logprob: -6.555761814117432
    4. ' and' → logprob: -8.43076229095459
    5. '       ' → logprob: -8.68076229095459
    6. 'f' → logprob: -9.55576229095459
    7. ' :
' → logprob: -10.18076229095459
    8. ':f' → logprob: -10.18076229095459
    9. ':
' → logprob: -10.43076229095459
    10. 'and' → logprob: -10.68076229095459

Token 200: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.46182388067245483
    2. '   ' → logprob: -1.0868239402770996
    3. ' f' → logprob: -3.9618239402770996
    4. 'f' → logprob: -4.7118239402771
    5. ':' → logprob: -6.0868239402771
    6. '
' → logprob: -7.4618239402771
    7. ':
' → logprob: -7.4618239402771
    8. '	f' → logprob: -7.9618239402771
    9. '    
' → logprob: -8.336823463439941
    10. ' ' → logprob: -9.336823463439941

Token 201: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' (adapté à ' f') → logprob: -4.620622712536715e-05
    2. ' f' → logprob: -10.750045776367188
    3. '   ' → logprob: -10.750045776367188
    4. 'S' → logprob: -13.250045776367188
    5. 'for' → logprob: -14.500045776367188
    6. '       ' → logprob: -15.125045776367188
    7. '
' → logprob: -15.375045776367188
    8. '```' → logprob: -16.125045776367188
    9. '	f' → logprob: -16.250045776367188
    10. ' ' → logprob: -16.875045776367188

Token 202: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -4.024604277219623e-05
    2. 'x' → logprob: -10.875040054321289
    3. '[' → logprob: -11.500040054321289
    4. '[f' → logprob: -11.750040054321289
    5. 'f' → logprob: -13.750040054321289
    6. ' [' → logprob: -14.375040054321289
    7. '```' → logprob: -14.625040054321289
    8. '[i' → logprob: -15.750040054321289
    9. '[S' → logprob: -15.750040054321289
    10. '\[' → logprob: -15.875040054321289

Token 203: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.016223227605223656
    2. '=' → logprob: -4.266223430633545
    3. ']=' → logprob: -6.391223430633545
    4. ' =' → logprob: -8.266222953796387
    5. ']+=' → logprob: -9.391222953796387
    6. ' ]' → logprob: -10.641222953796387
    7. '+=' → logprob: -11.766222953796387
    8. ' +=' → logprob: -13.016222953796387
    9. 'x' → logprob: -13.141222953796387
    10. ')' → logprob: -13.391222953796387

Token 204: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02041844092309475
    2. ' =' → logprob: -4.020418643951416
    3. '+=' → logprob: -6.270418643951416
    4. ' +=' → logprob: -7.895418643951416
    5. '=f' → logprob: -14.270418167114258
    6. ' ' → logprob: -15.520418167114258
    7. ',' → logprob: -15.645418167114258
    8. '=max' → logprob: -15.895418167114258
    9. '.=' → logprob: -16.020418167114258
    10. '-=' → logprob: -16.270418167114258

Token 205: ' S' (ID: 336)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.006395011208951473
    2. 'x' → logprob: -5.756394863128662
    3. 'S' → logprob: -6.256394863128662
    4. ' f' → logprob: -6.756394863128662
    5. 'max' → logprob: -10.50639533996582
    6. '(x' → logprob: -10.63139533996582
    7. '(f' → logprob: -11.38139533996582
    8. '   ' → logprob: -11.38139533996582
    9. ' x' → logprob: -11.75639533996582
    10. ' ' → logprob: -11.88139533996582

Token 206: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.06197664886713028
    2. 'x' → logprob: -2.811976671218872
    3. ' x' → logprob: -12.561976432800293
    4. '[' → logprob: -12.811976432800293
    5. '[f' → logprob: -14.061976432800293
    6. 'f' → logprob: -14.936976432800293
    7. '```' → logprob: -14.936976432800293
    8. '	x' → logprob: -15.061976432800293
    9. '(x' → logprob: -15.186976432800293
    10. '[
' → logprob: -15.686976432800293

Token 207: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.8740434050559998
    2. 'x' → logprob: -1.1240434646606445
    3. '[x' → logprob: -1.3740434646606445
    4. '-' → logprob: -5.4990434646606445
    5. ' -' → logprob: -8.374043464660645
    6. '   ' → logprob: -8.999043464660645
    7. '[' → logprob: -9.249043464660645
    8. ' x' → logprob: -9.749043464660645
    9. ' ]' → logprob: -10.249043464660645
    10. '-x' → logprob: -10.999043464660645

Token 208: ' //' (ID: 602)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.337393581867218
    2. '+' → logprob: -2.3373935222625732
    3. ' *' → logprob: -2.5873935222625732
    4. '-' → logprob: -3.0873935222625732
    5. '*x' → logprob: -3.4623935222625732
    6. ' +' → logprob: -3.7123935222625732
    7. ' -' → logprob: -4.587393760681152
    8. '*f' → logprob: -7.212393760681152
    9. '+x' → logprob: -7.462393760681152
    10. 'x' → logprob: -7.712393760681152

Token 209: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -6.074907287256792e-05
    2. '1' → logprob: -10.87506103515625
    3. '2' → logprob: -10.87506103515625
    4. ' x' → logprob: -10.87506103515625
    5. '(' → logprob: -13.37506103515625
    6. 'n' → logprob: -14.00006103515625
    7. '3' → logprob: -14.75006103515625
    8. '(x' → logprob: -15.00006103515625
    9. ' ' → logprob: -15.50006103515625
    10. 'f' → logprob: -15.87506103515625

Token 210: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18442045152187347
    2. '<|end|>' → logprob: -1.9344204664230347
    3. '\n' → logprob: -4.059420585632324
    4. ' ' → logprob: -6.434420585632324
    5. '+' → logprob: -6.934420585632324
    6. ')' → logprob: -7.309420585632324
    7. '```' → logprob: -7.309420585632324
    8. ' 
' → logprob: -7.559420585632324
    9. '' → logprob: -7.559420585632324
    10. '  
' → logprob: -8.559420585632324

Token 211: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 212: ' Recherche' (ID: 114815)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.6708841919898987
    2. 'best' → logprob: -1.670884132385254
    3. 'result' → logprob: -1.920884132385254
    4. 'ans' → logprob: -2.545884132385254
    5. 'res' → logprob: -3.045884132385254
    6. 'answer' → logprob: -4.170884132385254
    7. ' max' → logprob: -5.170884132385254
    8. ' best' → logprob: -6.045884132385254
    9. ' ans' → logprob: -6.670884132385254
    10. ' res' → logprob: -6.795884132385254

Token 213: ' du' (ID: 1462)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.6705344319343567
    2. 'best' → logprob: -0.7955344319343567
    3. 'for' → logprob: -4.045534610748291
    4. 'ans' → logprob: -5.420534610748291
    5. ' max' → logprob: -5.545534610748291
    6. ' for' → logprob: -5.920534610748291
    7. ' best' → logprob: -6.045534610748291
    8. 'x' → logprob: -6.420534610748291
    9. '=' → logprob: -7.045534610748291
    10. 'answer' → logprob: -7.170534610748291

Token 214: ' maximum' (ID: 10562)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.5180740356445312
    2. 'best' → logprob: -1.5180740356445312
    3. 'x' → logprob: -2.0180740356445312
    4. 'k' → logprob: -3.5180740356445312
    5. 'maximum' → logprob: -4.893074035644531
    6. ' max' → logprob: -5.143074035644531
    7. 'result' → logprob: -5.643074035644531
    8. ' best' → logprob: -6.518074035644531
    9. ' meilleur' → logprob: -7.018074035644531
    10. 'ans' → logprob: -7.018074035644531

Token 215: ' pour' (ID: 1930)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.04170182719826698
    2. 'result' → logprob: -4.166701793670654
    3. 'best' → logprob: -4.166701793670654
    4. 'ans' → logprob: -5.416701793670654
    5. 'answer' → logprob: -6.416701793670654
    6. 'res' → logprob: -6.541701793670654
    7. '
' → logprob: -6.916701793670654
    8. ' max' → logprob: -6.916701793670654
    9. 'x' → logprob: -9.791702270507812
    10. ' best' → logprob: -10.041702270507812

Token 216: ' chaque' (ID: 21194)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.2627720236778259
    2. 'k' → logprob: -2.1377720832824707
    3. ' x' → logprob: -2.6377720832824707
    4. ' k' → logprob: -3.6377720832824707
    5. 'i' → logprob: -5.637772083282471
    6. 'max' → logprob: -6.262772083282471
    7. 'ans' → logprob: -6.387772083282471
    8. ' ans' → logprob: -7.012772083282471
    9. 'result' → logprob: -7.012772083282471
    10. 'range' → logprob: -7.387772083282471

Token 217: ' K' (ID: 658)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.1395237147808075
    2. 'k' → logprob: -2.51452374458313
    3. ' x' → logprob: -3.38952374458313
    4. ' k' → logprob: -4.764523506164551
    5. 'i' → logprob: -5.764523506164551
    6. 'range' → logprob: -7.014523506164551
    7. 'possible' → logprob: -7.514523506164551
    8. ' i' → logprob: -8.13952350616455
    9. 'div' → logprob: -8.26452350616455
    10. ' range' → logprob: -8.26452350616455

Token 218: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.659278392791748
    2. 'max' → logprob: -1.159278392791748
    3. 'result' → logprob: -3.034278392791748
    4. '
' → logprob: -3.159278392791748
    5. ' for' → logprob: -3.659278392791748
    6. 'K' → logprob: -4.159278392791748
    7. 'results' → logprob: -4.284278392791748
    8. 'res' → logprob: -4.784278392791748
    9. 'k' → logprob: -5.534278392791748
    10. ' max' → logprob: -5.909278392791748

Token 219: 'answers' (ID: 52315)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.35201653838157654
    2. 'for' → logprob: -1.352016568183899
    3. 'result' → logprob: -4.352016448974609
    4. 'results' → logprob: -4.977016448974609
    5. 'res' → logprob: -5.102016448974609
    6. 'ans' → logprob: -5.227016448974609
    7. 'K' → logprob: -6.102016448974609
    8. 'answer' → logprob: -6.102016448974609
    9. 'k' → logprob: -6.727016448974609
    10. 'answers' → logprob: -7.477016448974609

Token 220: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889363914728165
    2. '=' → logprob: -2.5788936614990234
    3. ',' → logprob: -13.953893661499023
    4. '[' → logprob: -14.203893661499023
    5. '=[]' → logprob: -14.328893661499023
    6. '_' → logprob: -14.453893661499023
    7. 's' → logprob: -15.453893661499023
    8. ']' → logprob: -15.578893661499023
    9. ' =[' → logprob: -15.828893661499023
    10. '=[' → logprob: -15.828893661499023

Token 221: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1379474699497223
    2. '[]' → logprob: -2.6379475593566895
    3. ' [' → logprob: -2.8879475593566895
    4. ' []' → logprob: -6.5129475593566895
    5. '[n' → logprob: -9.012947082519531
    6. '['' → logprob: -11.012947082519531
    7. '["' → logprob: -11.637947082519531
    8. '[]
' → logprob: -12.512947082519531
    9. '[max' → logprob: -12.762947082519531
    10. '[-' → logprob: -12.887947082519531

Token 222: 'max' (ID: 3228)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0008863262482918799
    2. 'K' → logprob: -7.5008864402771
    3. 'k' → logprob: -8.375885963439941
    4. 'max' → logprob: -9.250885963439941
    5. ' for' → logprob: -12.375885963439941
    6. 'm' → logprob: -14.375885963439941
    7. 'x' → logprob: -14.875885963439941
    8. 'range' → logprob: -15.125885963439941
    9. '```' → logprob: -15.250885963439941
    10. 'n' → logprob: -15.250885963439941

Token 223: '_possible' (ID: 185849)
  Prédit: '_k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_k' → logprob: -0.21300679445266724
    2. '_K' → logprob: -1.9630067348480225
    3. 'K' → logprob: -3.9630067348480225
    4. '_f' → logprob: -4.588006973266602
    5. '_value' → logprob: -5.213006973266602
    6. '_count' → logprob: -5.213006973266602
    7. '_val' → logprob: -5.713006973266602
    8. '_x' → logprob: -5.838006973266602
    9. '_sum' → logprob: -7.213006973266602
    10. '_answer' → logprob: -7.338006973266602

Token 224: ' =' (ID: 314)
  Prédit: '_k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -0.1831950694322586
    2. '_K' → logprob: -2.808195114135742
    3. ' =' → logprob: -3.058195114135742
    4. '_count' → logprob: -4.058195114135742
    5. 'K' → logprob: -4.183195114135742
    6. '_value' → logprob: -5.058195114135742
    7. '=' → logprob: -5.058195114135742
    8. '_x' → logprob: -5.308195114135742
    9. '_for' → logprob: -6.183195114135742
    10. '_f' → logprob: -6.308195114135742

Token 225: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5055755376815796
    2. '0' → logprob: -1.2555755376815796
    3. ' n' → logprob: -2.505575656890869
    4. ' ' → logprob: -4.880575656890869
    5. 'max' → logprob: -5.005575656890869
    6. 'S' → logprob: -5.130575656890869
    7. 'f' → logprob: -5.255575656890869
    8. ' max' → logprob: -6.505575656890869
    9. 'sum' → logprob: -6.880575656890869
    10. ' S' → logprob: -7.005575656890869

Token 226: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.29973816871643066
    2. '
' → logprob: -1.4247381687164307
    3. ' for' → logprob: -4.424737930297852
    4. '+' → logprob: -5.299737930297852
    5. ' +' → logprob: -7.924737930297852
    6. ' =' → logprob: -8.174737930297852
    7. '=' → logprob: -8.549737930297852
    8. 'K' → logprob: -9.299737930297852
    9. '#' → logprob: -9.424737930297852
    10. ' 
' → logprob: -9.674737930297852

Token 227: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.607391408877447e-05
    2. 'K' → logprob: -11.000036239624023
    3. 'k' → logprob: -11.750036239624023
    4. 'max' → logprob: -12.125036239624023
    5. ' for' → logprob: -13.000036239624023
    6. 'while' → logprob: -14.000036239624023
    7. 'current' → logprob: -14.125036239624023
    8. 'from' → logprob: -14.500036239624023
    9. 'answers' → logprob: -14.625036239624023
    10. 'answer' → logprob: -14.875036239624023

Token 228: ' k' (ID: 372)
  Prédit: ' K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.5569556951522827
    2. 'K' → logprob: -1.5569556951522827
    3. ' k' → logprob: -1.9319556951522827
    4. 'k' → logprob: -2.6819558143615723
    5. ' x' → logprob: -6.431955814361572
    6. 'x' → logprob: -7.556955814361572
    7. ' ' → logprob: -8.556955337524414
    8. '_k' → logprob: -8.681955337524414
    9. ' max' → logprob: -9.681955337524414
    10. '	K' → logprob: -9.806955337524414

Token 229: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.18046703934669495
    2. 'in' → logprob: -1.8054670095443726
    3. ' ' → logprob: -8.555466651916504
    4. '_in' → logprob: -9.680466651916504
    5. 'd' → logprob: -9.930466651916504
    6. ',' → logprob: -10.180466651916504
    7. '_' → logprob: -10.305466651916504
    8. 's' → logprob: -10.305466651916504
    9. 'In' → logprob: -10.430466651916504
    10. '1' → logprob: -10.555466651916504

Token 230: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.10021109133958817
    2. ' range' → logprob: -2.3502111434936523
    3. ' ' → logprob: -13.350211143493652
    4. '(range' → logprob: -13.850211143493652
    5. '	range' → logprob: -14.350211143493652
    6. '   ' → logprob: -14.850211143493652
    7. '  ' → logprob: -15.350211143493652
    8. '1' → logprob: -16.725210189819336
    9. ')' → logprob: -16.725210189819336
    10. '```' → logprob: -16.725210189819336

Token 231: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -9.253090865968261e-06
    2. '(max' → logprob: -11.875009536743164
    3. '1' → logprob: -13.375009536743164
    4. ' (' → logprob: -14.625009536743164
    5. '(n' → logprob: -15.375009536743164
    6. 'max' → logprob: -17.125009536743164
    7. '(k' → logprob: -17.250009536743164
    8. ' ' → logprob: -17.750009536743164
    9. '   ' → logprob: -18.375009536743164
    10. '(
' → logprob: -18.500009536743164

Token 232: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008571469807066023
    2. 'max' → logprob: -7.125857353210449
    3. ' ' → logprob: -10.12585735321045
    4. 'n' → logprob: -12.00085735321045
    5. ' max' → logprob: -12.75085735321045
    6. '2' → logprob: -13.87585735321045
    7. '   ' → logprob: -13.87585735321045
    8. '0' → logprob: -14.50085735321045
    9. 'k' → logprob: -14.75085735321045
    10. '(' → logprob: -15.62585735321045

Token 233: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000116655595775228
    2. ' ,' → logprob: -9.125116348266602
    3. ',max' → logprob: -12.125116348266602
    4. ',n' → logprob: -13.250116348266602
    5. ',
' → logprob: -15.125116348266602
    6. 'n' → logprob: -16.6251163482666
    7. 'max' → logprob: -16.8751163482666
    8. ',k' → logprob: -17.7501163482666
    9. '   ' → logprob: -17.8751163482666
    10. '，' → logprob: -18.0001163482666

Token 234: ' n' (ID: 297)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.42689093947410583
    2. ' max' → logprob: -1.1768909692764282
    3. 'n' → logprob: -3.5518908500671387
    4. ' n' → logprob: -4.551890850067139
    5. '   ' → logprob: -11.801891326904297
    6. ' ' → logprob: -12.926891326904297
    7. '	max' → logprob: -13.801891326904297
    8. '(max' → logprob: -14.926891326904297
    9. '	n' → logprob: -15.676891326904297
    10. '[max' → logprob: -16.176891326904297

Token 235: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3868737816810608
    2. '+' → logprob: -1.136873722076416
    3. ' +
' → logprob: -13.386874198913574
    4. '+
' → logprob: -14.261874198913574
    5. ' ' → logprob: -16.136873245239258
    6. '+k' → logprob: -16.386873245239258
    7. '+n' → logprob: -16.386873245239258
    8. '＋' → logprob: -16.636873245239258
    9. '()+' → logprob: -16.886873245239258
    10. ' ' → logprob: -16.886873245239258

Token 236: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005548207554966211
    2. ' ' → logprob: -7.500555038452148
    3. '+' → logprob: -13.875555038452148
    4. '2' → logprob: -14.375555038452148
    5. '   ' → logprob: -15.250555038452148
    6. ' +' → logprob: -17.50055503845215
    7. 'k' → logprob: -18.12555503845215
    8. ')' → logprob: -18.75055503845215
    9. ' k' → logprob: -18.75055503845215
    10. '
' → logprob: -19.12555503845215

Token 237: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.32392441527918e-05
    2. ' ' → logprob: -10.125053405761719
    3. '2' → logprob: -11.625053405761719
    4. '+' → logprob: -12.500053405761719
    5. '   ' → logprob: -15.625053405761719
    6. '
' → logprob: -16.25005340576172
    7. ' +' → logprob: -17.00005340576172
    8. '```' → logprob: -17.06255340576172
    9. 'k' → logprob: -17.37505340576172
    10. ')' → logprob: -17.43755340576172

Token 238: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.018456250429153442
    2. ':' → logprob: -4.01845645904541
    3. '):
' → logprob: -8.39345645904541
    4. ')' → logprob: -9.51845645904541
    5. ' ):' → logprob: -12.76845645904541
    6. ' :' → logprob: -13.89345645904541
    7. ':
' → logprob: -14.01845645904541
    8. ']:' → logprob: -14.51845645904541
    9. '}:' → logprob: -15.01845645904541
    10. '():' → logprob: -15.39345645904541

Token 239: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012289194855839014
    2. 'max' → logprob: -7.7512288093566895
    3. ' max' → logprob: -8.001229286193848
    4. '    
' → logprob: -8.501229286193848
    5. '
' → logprob: -8.751229286193848
    6. ' answer' → logprob: -11.876229286193848
    7. 'answer' → logprob: -11.876229286193848
    8. 'answers' → logprob: -11.876229286193848
    9. 'sum' → logprob: -12.001229286193848
    10. ' ans' → logprob: -12.001229286193848

Token 240: ' a' (ID: 261)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.2361000776290894
    2. 'answers' → logprob: -1.2361000776290894
    3. 'low' → logprob: -1.9861000776290894
    4. 'left' → logprob: -2.361100196838379
    5. 'ans' → logprob: -2.986100196838379
    6. 'answer' → logprob: -2.986100196838379
    7. 'res' → logprob: -3.611100196838379
    8. 'best' → logprob: -3.861100196838379
    9. 'l' → logprob: -4.361100196838379
    10. 'lo' → logprob: -4.611100196838379

Token 241: ' =' (ID: 314)
  Prédit: 'ns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ns' → logprob: -0.1495738923549652
    2. '=' → logprob: -2.649573802947998
    3. ' =' → logprob: -2.774573802947998
    4. 'n' → logprob: -6.399573802947998
    5. '=max' → logprob: -6.524573802947998
    6. 'max' → logprob: -6.774573802947998
    7. 'pp' → logprob: -8.774574279785156
    8. 'w' → logprob: -8.899574279785156
    9. '=[]
' → logprob: -9.149574279785156
    10. 'wn' → logprob: -9.399574279785156

Token 242: ' max' (ID: 2999)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11054515093564987
    2. 'f' → logprob: -2.3605451583862305
    3. 'max' → logprob: -4.9855451583862305
    4. 'S' → logprob: -7.2355451583862305
    5. ' ' → logprob: -7.4855451583862305
    6. 'n' → logprob: -7.9855451583862305
    7. ' f' → logprob: -7.9855451583862305
    8. '(f' → logprob: -7.9855451583862305
    9. 'sum' → logprob: -7.9855451583862305
    10. 'min' → logprob: -8.36054515838623

Token 243: '_possible' (ID: 185849)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.39035525918006897
    2. '(f' → logprob: -1.5153552293777466
    3. '_possible' → logprob: -2.890355348587036
    4. '([' → logprob: -3.515355348587036
    5. '((' → logprob: -4.765355110168457
    6. 'f' → logprob: -6.015355110168457
    7. '(k' → logprob: -6.515355110168457
    8. '_answers' → logprob: -6.890355110168457
    9. 'possible' → logprob: -7.390355110168457
    10. '(ans' → logprob: -7.515355110168457

Token 244: '
' (ID: 198)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.10732393711805344
    2. '//' → logprob: -2.7323238849639893
    3. '=' → logprob: -4.607324123382568
    4. ' =' → logprob: -4.732324123382568
    5. '+' → logprob: -5.607324123382568
    6. '   ' → logprob: -5.857324123382568
    7. '
' → logprob: -5.982324123382568
    8. ' +' → logprob: -6.357324123382568
    9. ' -' → logprob: -6.482324123382568
    10. ',' → logprob: -6.607324123382568

Token 245: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1509977579116821
    2. '
' → logprob: -1.7759977579116821
    3. ' -' → logprob: -1.9009977579116821
    4. ' //' → logprob: -2.6509976387023926
    5. '<|end|>' → logprob: -2.7759976387023926
    6. ' if' → logprob: -2.9009976387023926
    7. '-' → logprob: -3.6509976387023926
    8. ')' → logprob: -3.9009976387023926
    9. ' for' → logprob: -4.025997638702393
    10. ' =' → logprob: -4.025997638702393

Token 246: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.700160026550293
    2. ' while' → logprob: -1.075160026550293
    3. ' //' → logprob: -2.450160026550293
    4. '//' → logprob: -3.575160026550293
    5. ' if' → logprob: -4.575160026550293
    6. '=' → logprob: -4.950160026550293
    7. '
' → logprob: -5.200160026550293
    8. '   ' → logprob: -5.200160026550293
    9. ' =' → logprob: -5.200160026550293
    10. 'if' → logprob: -6.075160026550293

Token 247: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.033650077879428864
    2. ' a' → logprob: -3.4086501598358154
    3. '(a' → logprob: -13.033650398254395
    4. ' ' → logprob: -14.533650398254395
    5. 'k' → logprob: -14.908650398254395
    6. 'f' → logprob: -15.283650398254395
    7. '	a' → logprob: -15.408650398254395
    8. ' not' → logprob: -15.533650398254395
    9. '_a' → logprob: -15.783650398254395
    10. 'True' → logprob: -16.033649444580078

Token 248: ' >' (ID: 1424)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.2855505049228668
    2. '>=' → logprob: -1.5355504751205444
    3. ' >' → logprob: -3.910550594329834
    4. '>' → logprob: -5.410550594329834
    5. ' //' → logprob: -5.660550594329834
    6. ' %' → logprob: -6.285550594329834
    7. '//' → logprob: -6.535550594329834
    8. '%' → logprob: -6.785550594329834
    9. '*' → logprob: -7.910550594329834
    10. ' *' → logprob: -8.660550117492676

Token 249: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7323217988014221
    2. ' ' → logprob: -0.7323217988014221
    3. ' k' → logprob: -3.9823217391967773
    4. 'k' → logprob: -4.482321739196777
    5. '=' → logprob: -4.857321739196777
    6. '1' → logprob: -8.357321739196777
    7. ' (' → logprob: -9.357321739196777
    8. ' f' → logprob: -9.357321739196777
    9. 'f' → logprob: -9.482321739196777
    10. '=k' → logprob: -9.982321739196777

Token 250: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05905650556087494
    2. 'k' → logprob: -2.934056520462036
    3. ' ' → logprob: -5.684056282043457
    4. ' k' → logprob: -7.809056282043457
    5. '=' → logprob: -8.434056282043457
    6. 'f' → logprob: -10.059056282043457
    7. '
' → logprob: -10.684056282043457
    8. '1' → logprob: -10.684056282043457
    9. 'a' → logprob: -11.434056282043457
    10. '=k' → logprob: -11.434056282043457

Token 251: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0110669219866395
    2. 'and' → logprob: -4.511066913604736
    3. ' ' → logprob: -11.136067390441895
    4. '	and' → logprob: -13.011067390441895
    5. ':
' → logprob: -14.011067390441895
    6. ':' → logprob: -14.636067390441895
    7. '    ' → logprob: -14.886067390441895
    8. '   ' → logprob: -15.261067390441895
    9. ' и' → logprob: -15.636067390441895
    10. ' ' → logprob: -15.886067390441895

Token 252: '       ' (ID: 309)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0013883279170840979
    2. 'and' → logprob: -6.7513885498046875
    3. ' ' → logprob: -9.251388549804688
    4. ':
' → logprob: -10.376388549804688
    5. '   ' → logprob: -10.626388549804688
    6. '       ' → logprob: -11.626388549804688
    7. ' f' → logprob: -11.876388549804688
    8. 'a' → logprob: -12.001388549804688
    9. ' 
' → logprob: -12.001388549804688
    10. 'f' → logprob: -12.376388549804688

Token 253: ' if' (ID: 538)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.20319688320159912
    2. 'if' (adapté à ' if') → logprob: -1.9531968832015991
    3. 'a' → logprob: -4.203197002410889
    4. 'S' → logprob: -4.703197002410889
    5. '(f' → logprob: -4.828197002410889
    6. ' if' → logprob: -5.703197002410889
    7. ' f' → logprob: -5.828197002410889
    8. ' and' → logprob: -7.453197002410889
    9. '(S' → logprob: -7.453197002410889
    10. 'and' → logprob: -7.703197002410889

Token 254: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.7749205827713013
    2. ' f' → logprob: -0.7749205827713013
    3. ' (' → logprob: -3.6499204635620117
    4. 'a' → logprob: -4.274920463562012
    5. ' a' → logprob: -4.274920463562012
    6. '(f' → logprob: -4.649920463562012
    7. 'S' → logprob: -5.399920463562012
    8. 'k' → logprob: -5.899920463562012
    9. '(a' → logprob: -6.024920463562012
    10. ' k' → logprob: -6.399920463562012

Token 255: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.0031934010330587626
    2. 'a' → logprob: -6.003193378448486
    3. '[k' → logprob: -7.378193378448486
    4. '[' → logprob: -10.753193855285645
    5. ' [' → logprob: -11.128193855285645
    6. '[x' → logprob: -11.253193855285645
    7. ' a' → logprob: -11.253193855285645
    8. 'k' → logprob: -11.253193855285645
    9. '<a' → logprob: -13.128193855285645
    10. ')a' → logprob: -13.378193855285645

Token 256: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005091799423098564
    2. ']>=' → logprob: -5.380091667175293
    3. ' ]' → logprob: -8.255091667175293
    4. '>=' → logprob: -9.630091667175293
    5. ' >=' → logprob: -9.880091667175293
    6. '[' → logprob: -9.880091667175293
    7. '*' → logprob: -11.005091667175293
    8. ' *' → logprob: -11.380091667175293
    9. 'k' → logprob: -12.630091667175293
    10. '[k' → logprob: -13.630091667175293

Token 257: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.47464361786842346
    2. '>=' → logprob: -0.9746435880661011
    3. '*' → logprob: -8.09964370727539
    4. ' *' → logprob: -8.97464370727539
    5. ' ' → logprob: -10.59964370727539
    6. ']>=' → logprob: -10.84964370727539
    7. ' <' → logprob: -11.09964370727539
    8. '[' → logprob: -11.22464370727539
    9. '<' → logprob: -11.34964370727539
    10. '>' → logprob: -11.34964370727539

Token 258: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -6.034592388459714e-06
    2. ' k' → logprob: -12.250005722045898
    3. '   ' → logprob: -13.875005722045898
    4. '
' → logprob: -16.3750057220459
    5. '	k' → logprob: -17.3750057220459
    6. '  ' → logprob: -17.8750057220459
    7. '       ' → logprob: -18.1250057220459
    8. '
' → logprob: -18.5000057220459
    9. ' ' → logprob: -18.7500057220459
    10. ' ' → logprob: -18.7500057220459

Token 259: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02000546082854271
    2. ' :' → logprob: -4.520005226135254
    3. ':
' → logprob: -5.020005226135254
    4. ' and' → logprob: -6.270005226135254
    5. ' :
' → logprob: -8.145005226135254
    6. ' or' → logprob: -9.145005226135254
    7. ' ' → logprob: -12.270005226135254
    8. '       ' → logprob: -12.645005226135254
    9. ':return' → logprob: -13.020005226135254
    10. '           ' → logprob: -13.145005226135254

Token 260: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06958333402872086
    2. ':' → logprob: -2.9445834159851074
    3. ':
' → logprob: -4.569583415985107
    4. ' break' → logprob: -5.819583415985107
    5. '       ' → logprob: -7.819583415985107
    6. ' :' → logprob: -8.44458293914795
    7. 'break' → logprob: -9.06958293914795
    8. 'a' → logprob: -9.19458293914795
    9. ' :
' → logprob: -9.31958293914795
    10. ' a' → logprob: -9.56958293914795

Token 261: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.5376524925231934
    2. 'break' (adapté à ' break') → logprob: -1.6626524925231934
    3. 'print' → logprob: -2.1626524925231934
    4. ' print' → logprob: -2.7876524925231934
    5. '       ' → logprob: -4.037652492523193
    6. '           ' → logprob: -4.412652492523193
    7. ' answers' → logprob: -4.537652492523193
    8. 'answers' → logprob: -4.787652492523193
    9. '   ' → logprob: -8.037652969360352
    10. 'answer' → logprob: -8.912652969360352

Token 262: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007768734358251095
    2. '   ' → logprob: -8.000777244567871
    3. 'a' → logprob: -8.500777244567871
    4. '
' → logprob: -8.750777244567871
    5. ' a' → logprob: -10.125777244567871
    6. '           ' → logprob: -11.500777244567871
    7. '-' → logprob: -11.750777244567871
    8. '        
' → logprob: -12.625777244567871
    9. 'b' → logprob: -12.750777244567871
    10. '```' → logprob: -13.000777244567871

Token 263: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008576238178648055
    2. '   ' → logprob: -7.375857830047607
    3. 'a' → logprob: -9.12585735321045
    4. '-' → logprob: -9.87585735321045
    5. ' a' → logprob: -10.50085735321045
    6. 'b' → logprob: -11.62585735321045
    7. '           ' → logprob: -11.87585735321045
    8. '	' → logprob: -11.87585735321045
    9. ' -' → logprob: -12.75085735321045
    10. ',' → logprob: -13.37585735321045

Token 264: ' a' (ID: 261)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29044780135154724
    2. 'a' (adapté à ' a') → logprob: -2.29044771194458
    3. ' a' → logprob: -2.41544771194458
    4. '   ' → logprob: -2.79044771194458
    5. 'b' → logprob: -10.415448188781738
    6. '    ' → logprob: -10.665448188781738
    7. '-' → logprob: -11.665448188781738
    8. ' ' → logprob: -11.665448188781738
    9. '   ' → logprob: -11.665448188781738
    10. '	a' → logprob: -11.790448188781738

Token 265: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.4756520688533783
    2. '-=' → logprob: -0.9756520986557007
    3. '-' → logprob: -6.47565221786499
    4. '   ' → logprob: -11.100651741027832
    5. ' -' → logprob: -11.725651741027832
    6. '=' → logprob: -12.100651741027832
    7. '```' → logprob: -12.975651741027832
    8. '+=' → logprob: -14.350651741027832
    9. '    ' → logprob: -14.850651741027832
    10. ' +=' → logprob: -15.100651741027832

Token 266: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. '   ' → logprob: -19.500009536743164
    4. '```' → logprob: -20.000009536743164
    5. ' ' → logprob: -20.500009536743164
    6. '10' → logprob: -21.750009536743164
    7. '0' → logprob: -21.875009536743164
    8. '１' → logprob: -22.062509536743164
    9. '  ' → logprob: -22.125009536743164
    10. '۱' → logprob: -22.375009536743164

Token 267: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.816093228830141e-06
    2. ' ' → logprob: -12.87500286102295
    3. '```' → logprob: -16.500001907348633
    4. '   ' → logprob: -17.812501907348633
    5. '
' → logprob: -18.250001907348633
    6. '0' → logprob: -18.250001907348633
    7. '10' → logprob: -18.437501907348633
    8. '2' → logprob: -19.000001907348633
    9. '۱' → logprob: -19.062501907348633
    10. '１' → logprob: -19.187501907348633

Token 268: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05111420527100563
    2. '
' → logprob: -3.301114320755005
    3. 'answers' → logprob: -4.801114082336426
    4. ')' → logprob: -6.426114082336426
    5. '    
' → logprob: -6.676114082336426
    6. ' answers' → logprob: -6.926114082336426
    7. ']' → logprob: -8.426114082336426
    8. '<|end|>' → logprob: -9.051114082336426
    9. ',' → logprob: -9.176114082336426
    10. '  
' → logprob: -9.676114082336426

Token 269: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04733588919043541
    2. 'answers' → logprob: -3.1723358631134033
    3. '
' → logprob: -6.047336101531982
    4. ' answers' → logprob: -6.922336101531982
    5. 'print' → logprob: -8.047335624694824
    6. ')' → logprob: -8.172335624694824
    7. '    
' → logprob: -8.297335624694824
    8. '  ' → logprob: -11.047335624694824
    9. ']' → logprob: -11.047335624694824
    10. ',' → logprob: -11.422335624694824

Token 270: ' answers' (ID: 14716)
  Prédit: 'answers'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'answers' (adapté à ' answers') → logprob: -0.010547450743615627
    2. ' answers' → logprob: -4.885547637939453
    3. 'if' → logprob: -6.010547637939453
    4. 'print' → logprob: -8.385547637939453
    5. '   ' → logprob: -8.635547637939453
    6. ' if' → logprob: -9.885547637939453
    7. 'answer' → logprob: -11.260547637939453
    8. 'ans' → logprob: -12.510547637939453
    9. '
' → logprob: -12.760547637939453
    10. 'results' → logprob: -13.510547637939453

Token 271: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00019030878320336342
    2. '.' → logprob: -8.625190734863281
    3. '.app' → logprob: -11.750190734863281
    4. '.ap' → logprob: -13.625190734863281
    5. ' .' → logprob: -14.125190734863281
    6. '.extend' → logprob: -14.375190734863281
    7. 'append' → logprob: -16.75019073486328
    8. '.push' → logprob: -17.12519073486328
    9. ' ' → logprob: -17.50019073486328
    10. '​.' → logprob: -17.62519073486328

Token 272: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.00012535012501757592
    2. '(k' → logprob: -9.50012493133545
    3. '(' → logprob: -10.00012493133545
    4. 'a' → logprob: -12.50012493133545
    5. '(ans' → logprob: -14.50012493133545
    6. '(max' → logprob: -15.00012493133545
    7. '((' → logprob: -15.62512493133545
    8. '(f' → logprob: -16.375125885009766
    9. '(len' → logprob: -16.500125885009766
    10. '(x' → logprob: -17.125125885009766

Token 273: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002997120900545269
    2. ')
' → logprob: -8.250299453735352
    3. '+' → logprob: -10.500299453735352
    4. ' )' → logprob: -12.000299453735352
    5. '*' → logprob: -13.625299453735352
    6. '   ' → logprob: -13.875299453735352
    7. ' +' → logprob: -14.125299453735352
    8. '))' → logprob: -14.500299453735352
    9. ')`' → logprob: -15.625299453735352
    10. ' if' → logprob: -15.750299453735352

Token 274: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.47409310936927795
    2. 'for' → logprob: -0.9740930795669556
    3. ' for' → logprob: -11.724093437194824
    4. ' print' → logprob: -12.724093437194824
    5. '
' → logprob: -13.224093437194824
    6. 'k' → logprob: -14.349093437194824
    7. '#print' → logprob: -14.599093437194824
    8. '```' → logprob: -14.849093437194824
    9. 'result' → logprob: -15.099093437194824
    10. '#' → logprob: -15.599093437194824

Token 275: ' max' (ID: 2999)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.005632843356579542
    2. 'for' → logprob: -5.5056328773498535
    3. 'max' (adapté à ' max') → logprob: -6.8806328773498535
    4. '
' → logprob: -7.6306328773498535
    5. '#' → logprob: -11.880632400512695
    6. '    
' → logprob: -12.130632400512695
    7. '

' → logprob: -12.255632400512695
    8. 'if' → logprob: -12.255632400512695
    9. ' print' → logprob: -12.380632400512695
    10. 'a' → logprob: -12.630632400512695

Token 276: '_possible' (ID: 185849)
  Prédit: '_possible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_possible' → logprob: -2.339278580620885e-06
    2. '_' → logprob: -13.125001907348633
    3. 'possible' → logprob: -15.625001907348633
    4. '=' → logprob: -16.625001907348633
    5. '\' → logprob: -17.125001907348633
    6. '_allowed' → logprob: -17.625001907348633
    7. 'Possible' → logprob: -17.750001907348633
    8. '_pos' → logprob: -19.750001907348633
    9. '```' → logprob: -19.750001907348633
    10. '_=' → logprob: -19.750001907348633

Token 277: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029751179739832878
    2. ' =' → logprob: -3.5297510623931885
    3. '-=' → logprob: -14.90475082397461
    4. '=a' → logprob: -15.40475082397461
    5. '=min' → logprob: -16.65475082397461
    6. ' -=' → logprob: -17.02975082397461
    7. '＝' → logprob: -17.15475082397461
    8. '=max' → logprob: -17.52975082397461
    9. '*=' → logprob: -18.02975082397461
    10. '.=' → logprob: -18.15475082397461

Token 278: ' a' (ID: 261)
  Prédit: 'answers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'answers' → logprob: -0.6336621642112732
    2. 'a' → logprob: -0.7586621642112732
    3. ' answers' → logprob: -7.258662223815918
    4. ' a' → logprob: -8.508662223815918
    5. 'ans' → logprob: -9.258662223815918
    6. 'max' → logprob: -10.383662223815918
    7. 'min' → logprob: -11.633662223815918
    8. 'answer' → logprob: -11.758662223815918
    9. 'k' → logprob: -12.133662223815918
    10. 'f' → logprob: -13.383662223815918

Token 279: ' ' (ID: 220)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.23279961943626404
    2. 'for' → logprob: -1.7327996492385864
    3. '
' → logprob: -3.482799530029297
    4. ' for' → logprob: -8.982799530029297
    5. ' print' → logprob: -10.607799530029297
    6. '\n' → logprob: -12.357799530029297
    7. ' 
' → logprob: -12.357799530029297
    8. '

' → logprob: -12.607799530029297
    9. '    
' → logprob: -12.857799530029297
    10. '
' → logprob: -12.857799530029297

Token 280: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.04058684781193733
    2. '
' → logprob: -3.5405869483947754
    3. 'for' → logprob: -4.540586948394775
    4. '

' → logprob: -10.165586471557617
    5. '    
' → logprob: -10.915586471557617
    6. ' 
' → logprob: -11.040586471557617
    7. ' print' → logprob: -11.290586471557617
    8. '  
' → logprob: -11.415586471557617
    9. ' for' → logprob: -11.790586471557617
    10. '
' → logprob: -12.915586471557617

Token 281: ' pour' (ID: 1930)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.06649363040924072
    2. '<|end|>' → logprob: -3.316493511199951
    3. 'a' → logprob: -4.816493511199951
    4. 'print' → logprob: -5.316493511199951
    5. 'if' → logprob: -5.316493511199951
    6. '#' → logprob: -6.066493511199951
    7. ' max' → logprob: -6.066493511199951
    8. '```' → logprob: -6.191493511199951
    9. ')' → logprob: -7.191493511199951
    10. 'answers' → logprob: -7.441493511199951

Token 282: ' la' (ID: 557)
  Prédit: 'optim'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'optim' → logprob: -0.0848233699798584
    2. 'max' → logprob: -3.5848233699798584
    3. 'acc' → logprob: -4.3348236083984375
    4. 'a' → logprob: -4.8348236083984375
    5. 'lim' → logprob: -5.4598236083984375
    6. 'pr' → logprob: -5.4598236083984375
    7. 'k' → logprob: -5.8348236083984375
    8. 'pro' → logprob: -5.9598236083984375
    9. 'next' → logprob: -5.9598236083984375
    10. 'min' → logprob: -6.3348236083984375

Token 283: ' prochaine' (ID: 78876)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.15518434345722198
    2. ' prochaine' → logprob: -2.155184268951416
    3. 'su' → logprob: -4.905184268951416
    4. 'suite' → logprob: -5.280184268951416
    5. ' suivante' → logprob: -5.530184268951416
    6. 'next' → logprob: -6.030184268951416
    7. 'pr' → logprob: -6.155184268951416
    8. 'optim' → logprob: -6.780184268951416
    9. 'prox' → logprob: -7.030184268951416
    10. ' prochain' → logprob: -7.530184268951416

Token 284: ' recherche' (ID: 24975)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.5258442759513855
    2. ' ligne' → logprob: -2.0258443355560303
    3. ' ' → logprob: -2.7758443355560303
    4. 'iteration' → logprob: -2.9008443355560303
    5. ' fois' → logprob: -3.5258443355560303
    6. 'for' → logprob: -3.5258443355560303
    7. 'range' → logprob: -3.9008443355560303
    8. 'fois' → logprob: -4.025844097137451
    9. ' iteration' → logprob: -4.650844097137451
    10. 'line' → logprob: -4.775844097137451

Token 285: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4751565158367157
    2. 'print' → logprob: -0.9751565456390381
    3. '
' → logprob: -6.850156307220459
    4. ' for' → logprob: -11.850156784057617
    5. '```' → logprob: -12.600156784057617
    6. '

' → logprob: -12.975156784057617
    7. '#print' → logprob: -13.725156784057617
    8. ' print' → logprob: -13.850156784057617
    9. '    
' → logprob: -13.975156784057617
    10. '#' → logprob: -14.100156784057617

Token 286: ' partir' (ID: 12100)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.019956964999437332
    2. 'min' → logprob: -4.269957065582275
    3. 'a' → logprob: -5.894957065582275
    4. 'if' → logprob: -5.894957065582275
    5. ' max' → logprob: -9.019956588745117
    6. '#' → logprob: -10.144956588745117
    7. '...' → logprob: -10.894956588745117
    8. ')' → logprob: -10.894956588745117
    9. ' if' → logprob: -11.269956588745117
    10. 'k' → logprob: -11.519956588745117

Token 287: ' d' (ID: 272)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.43563514947891235
    2. 'from' → logprob: -1.0606350898742676
    3. ' de' → logprob: -5.560635089874268
    4. ' from' → logprob: -6.060635089874268
    5. 'd' → logprob: -7.685635089874268
    6. 'max' → logprob: -9.310635566711426
    7. 'du' → logprob: -9.685635566711426
    8. ' ' → logprob: -10.560635566711426
    9. '```' → logprob: -10.560635566711426
    10. '  ' → logprob: -11.435635566711426

Token 288: ''ici' (ID: 162066)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0005144290626049042
    2. ' a' → logprob: -8.125514030456543
    3. ''a' → logprob: -9.250514030456543
    4. 'max' → logprob: -9.500514030456543
    5. ' max' → logprob: -11.250514030456543
    6. 'e' → logprob: -11.875514030456543
    7. 'here' → logprob: -12.375514030456543
    8. 'ans' → logprob: -12.375514030456543
    9. ' here' → logprob: -12.375514030456543
    10. ''ici' → logprob: -12.625514030456543

Token 289: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4759211838245392
    2. 'for' → logprob: -0.9759211540222168
    3. '
' → logprob: -6.350921154022217
    4. ' for' → logprob: -9.975921630859375
    5. '

' → logprob: -10.975921630859375
    6. ' print' → logprob: -11.475921630859375
    7. '    
' → logprob: -11.975921630859375
    8. ' 
' → logprob: -12.350921630859375
    9. '```' → logprob: -12.725921630859375
    10. ')' → logprob: -12.975921630859375

Token 290: 'for' (ID: 1938)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.47415685653686523
    2. 'for' → logprob: -0.9741568565368652
    3. '
' → logprob: -9.724157333374023
    4. ' for' → logprob: -11.474157333374023
    5. ' print' → logprob: -12.599157333374023
    6. '```' → logprob: -13.724157333374023
    7. '#print' → logprob: -14.224157333374023
    8. ')' → logprob: -14.474157333374023
    9. 'k' → logprob: -14.474157333374023
    10. '#' → logprob: -14.474157333374023

Token 291: ' ans' (ID: 3345)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.1066964790225029
    2. ' k' → logprob: -2.981696367263794
    3. 'ans' → logprob: -4.356696605682373
    4. 'answer' → logprob: -4.356696605682373
    5. ' answer' → logprob: -4.856696605682373
    6. 'a' → logprob: -4.856696605682373
    7. 'i' → logprob: -5.856696605682373
    8. ' ans' → logprob: -5.856696605682373
    9. 'x' → logprob: -6.231696605682373
    10. ' i' → logprob: -7.731696605682373

Token 292: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005947406403720379
    2. 'in' → logprob: -5.130947589874268
    3. '_in' → logprob: -12.00594711303711
    4. '_' → logprob: -12.38094711303711
    5. ' ' → logprob: -12.63094711303711
    6. 's' → logprob: -13.38094711303711
    7. ' ' → logprob: -14.00594711303711
    8. 'e' → logprob: -14.38094711303711
    9. 'd' → logprob: -14.63094711303711
    10. '	in' → logprob: -14.63094711303711

Token 293: ' answers' (ID: 14716)
  Prédit: 'answers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'answers' → logprob: -0.014163628220558167
    2. ' answers' → logprob: -4.264163494110107
    3. 'answer' → logprob: -16.389163970947266
    4. 'ans' → logprob: -17.514163970947266
    5. '.answers' → logprob: -18.139163970947266
    6. '_answers' → logprob: -18.639163970947266
    7. 'Answers' → logprob: -18.764163970947266
    8. ' ' → logprob: -19.389163970947266
    9. '答案' → logprob: -19.889163970947266
    10. 'questions' → logprob: -20.514163970947266

Token 294: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.038198936730623245
    2. ':
' → logprob: -3.288198947906494
    3. 'print' → logprob: -8.913198471069336
    4. '   ' → logprob: -11.163198471069336
    5. ' print' → logprob: -12.288198471069336
    6. ',' → logprob: -13.413198471069336
    7. '.print' → logprob: -13.913198471069336
    8. ':
' → logprob: -15.163198471069336
    9. ' :' → logprob: -15.288198471069336
    10. '):
' → logprob: -15.288198471069336

Token 295: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6941230297088623
    2. ' print' → logprob: -0.9441230297088623
    3. 'print' → logprob: -2.1941230297088623
    4. '```' → logprob: -11.819123268127441
    5. '	print' → logprob: -12.694123268127441
    6. '.print' → logprob: -16.444122314453125
    7. '       ' → logprob: -17.194122314453125
    8. '
' → logprob: -17.194122314453125
    9. '    
' → logprob: -17.319122314453125
    10. '   ' → logprob: -17.444122314453125

Token 296: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -5.836499985889532e-05
    2. ' print' → logprob: -9.7500581741333
    3. '   ' → logprob: -18.625059127807617
    4. '```' → logprob: -20.500059127807617
    5. 'pr' → logprob: -21.250059127807617
    6. '	print' → logprob: -22.750059127807617
    7. 'prin' → logprob: -23.625059127807617
    8. '
' → logprob: -23.625059127807617
    9. '_print' → logprob: -24.625059127807617
    10. 'printf' → logprob: -25.125059127807617

Token 297: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -1.7432603272027336e-06
    2. '(' → logprob: -13.625001907348633
    3. 'ans' → logprob: -14.500001907348633
    4. '()' → logprob: -20.125001907348633
    5. '(
' → logprob: -20.125001907348633
    6. '	ans' → logprob: -20.375001907348633
    7. '(answer' → logprob: -20.625001907348633
    8. ' (' → logprob: -20.625001907348633
    9. '(*' → logprob: -21.375001907348633
    10. '(an' → logprob: -21.750001907348633

Token 298: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.180258191714529e-06
    2. '()' → logprob: -12.500008583068848
    3. '())' → logprob: -12.750008583068848
    4. ')
' → logprob: -14.500008583068848
    5. ' )' → logprob: -15.125008583068848
    6. ')`' → logprob: -15.375008583068848
    7. '))' → logprob: -15.750008583068848
    8. ')#' → logprob: -17.25000762939453
    9. '(' → logprob: -17.37500762939453
    10. ',' → logprob: -17.50000762939453


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 296
Tokens correctement prédits (1ère position, stricte): 100
Tokens correctement prédits (1ère position, avec adaptation): 107
Tokens correctement prédits (top 10): 227
Précision stricte (1ère position): 33.78%
Précision adaptée (1ère position): 36.15%
Précision (top 10): 76.69%
================================================================================
