================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:02:35
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import numpy as np

def read_stdin():
    return sys.stdin.buffer.read()

def read_stdin_split():
    return read_stdin().split()

def parse_ints(lst, idx=0, count=2):
    return map(int, lst[idx:idx+count])

def get_mod():
    return 998244353

def power_mod(a, n, mod):
    return pow(int(a), n, mod)

def get_U(N):
    return N + N + 100

def as_np_arange(U, dtype=np.int64):
    return np.arange(U, dtype=dtype)

def resize_arr(arr, Lsq):
    return np.resize(arr, Lsq ** 2).reshape(Lsq, Lsq)

def cumprod(arr, MOD):
    L = len(arr)
    Lsq = int(L ** 0.5 + 1)
    arr = resize_arr(arr, Lsq)
    arr = cumprod_stage1(arr, MOD, Lsq)
    arr = cumprod_stage2(arr, MOD, Lsq)
    return arr.ravel()[:L]

def cumprod_stage1(arr, MOD, Lsq):
    for n in range(1, Lsq):
        arr[:, n] *= arr[:, n - 1]
        arr[:, n] %= MOD
    return arr

def cumprod_stage2(arr, MOD, Lsq):
    for n in range(1, Lsq):
        arr[n] *= arr[n - 1, -1]
        arr[n] %= MOD
    return arr

def make_fact(U, MOD):
    x = as_np_arange(U)
    x[0] = 1
    fact = cumprod(x, MOD)
    y = as_np_arange(U, dtype=np.int64)[::-1]
    y[0] = power_mod(fact[-1], MOD - 2, MOD)
    fact_inv = cumprod(y, MOD)[::-1]
    return fact, fact_inv

def make_combN(N, fact, fact_inv, MOD):
    a = fact[N]
    b = fact_inv[:N+1]
    c = fact_inv[N::-1]
    d = a * b % MOD
    e = d * c % MOD
    return e

def polynomial_mult(P, Q, X, MOD):
    dP = len(P) - 1
    dQ = len(Q) - 1
    if dP < dQ:
        dP, dQ = dQ, dP
        P, Q = Q, P
    R = np.zeros(dP + dQ + 1, np.int64)
    for n in range(dQ + 1):
        R[n:n + dP + 1] += Q[n] * P % MOD
    R %= MOD
    return R[:X]

def polynomial_power(P, n, X, MOD):
    if n == 0:
        return np.array([1], dtype=np.int64)
    Q = polynomial_power(P, n // 2, X, MOD)
    Q = polynomial_mult(Q, Q, X, MOD)
    if n & 1:
        return polynomial_mult(P, Q, X, MOD)
    else:
        return Q

def F1_prepare_poly():
    return np.array([1, 1, 1], np.int64)

def F1(N, X, MOD):
    P = F1_prepare_poly()
    Q = polynomial_power(P, N, X, MOD)
    return F1_final_sum(Q, MOD)

def F1_final_sum(Q, MOD):
    return Q.sum() % MOD

def F2_loop_range(X):
    return range(X)

def F2_calc_m(X, n):
    return (X - 1) - (2 + 2 * n)

def F2_construct_two_and_one(m):
    two = np.arange(m // 2 + 1, dtype=np.int64)
    one = m - 2 * two
    return two, one

def F2_calc_coef(fact, fact_inv, one, two, MOD):
    return fact[one + two] * fact_inv[one] % MOD * fact_inv[two] % MOD

def F2_filter_rest(rest, coef):
    ind = rest >= 0
    return rest[ind], coef[ind]

def F2_update_x(x, rest, coef):
    x[rest] += coef
    return x

def F2_finish(x, combN, MOD):
    return (x * combN % MOD).sum() % MOD

def F2(N, X, fact, fact_inv, combN, MOD):
    x = np.zeros(N + 1, np.int64)
    for n in F2_loop_range(X):
        m = F2_calc_m(X, n)
        if m < 0:
            break
        two, one = F2_construct_two_and_one(m)
        coef = F2_calc_coef(fact, fact_inv, one, two, MOD)
        rest = N - one - two - (2 * n + 2)
        rest, coef = F2_filter_rest(rest, coef)
        x = F2_update_x(x, rest, coef)
    x %= MOD
    return F2_finish(x, combN, MOD)

def is_X_even(X):
    return X % 2 == 0

def F3_check_X_even(X):
    return is_X_even(X)

def F3_check_X_gt_N(X, N):
    return X > N

def F3_check_n(N, X):
    return N - X + 1

def F3(N, X, combN, MOD):
    if F3_check_X_even(X):
        return 0
    if F3_check_X_gt_N(X, N):
        return 0
    n = F3_check_n(N, X)
    return combN[:n].sum() % MOD

def answer_sum(a, b, c, MOD):
    return (a + b + c) % MOD

def main():
    input_lst = read_stdin_split()
    N, X = parse_ints(input_lst)
    MOD = get_mod()
    U = get_U(N)
    fact, fact_inv = make_fact(U, MOD)
    combN = make_combN(N, fact, fact_inv, MOD)
    ans1 = F1(N, X, MOD)
    ans2 = F2(N, X, fact, fact_inv, combN, MOD)
    ans3 = F3(N, X, combN, MOD)
    answer = answer_sum(ans1, ans2, ans3, MOD)
    print(answer)

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2973678708076477
    2. '\n' → logprob: -1.547367811203003
    3. '<|end|>' → logprob: -3.797367811203003
    4. '\' → logprob: -4.922368049621582
    5. 'newline' → logprob: -5.672368049621582
    6. 'import' → logprob: -5.672368049621582
    7. '<|end|>' → logprob: -6.047368049621582
    8. '
' → logprob: -6.922368049621582
    9. '```' → logprob: -6.922368049621582
    10. '' → logprob: -7.547368049621582

Token 4: ' numpy' (ID: 19529)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00012535012501757592
    2. 'os' → logprob: -9.00012493133545
    3. ' math' → logprob: -13.87512493133545
    4. '"os' → logprob: -15.12512493133545
    5. ' re' → logprob: -15.50012493133545
    6. ' o' → logprob: -15.87512493133545
    7. ' ' → logprob: -16.125125885009766
    8. ' json' → logprob: -16.250125885009766
    9. '	os' → logprob: -16.375125885009766
    10. '_os' → logprob: -17.000125885009766

Token 5: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.012363431043922901
    2. '<|end|>' → logprob: -5.012363433837891
    3. 'as' → logprob: -5.762363433837891
    4. '.' → logprob: -6.137363433837891
    5. ' ' → logprob: -9.13736343383789
    6. '.as' → logprob: -9.51236343383789
    7. '<|end|>' → logprob: -9.88736343383789
    8. ' .' → logprob: -9.88736343383789
    9. '.ndarray' → logprob: -11.38736343383789
    10. '.pyplot' → logprob: -11.51236343383789

Token 6: ' np' (ID: 5374)
  Prédit: ' np'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' np' → logprob: -0.0004699954588431865
    2. 'np' → logprob: -8.250470161437988
    3. ' ' → logprob: -8.500470161437988
    4. ' ' → logprob: -12.500470161437988
    5. ' numpy' → logprob: -14.125470161437988
    6. ' as' → logprob: -15.625470161437988
    7. ' ndarray' → logprob: -15.625470161437988
    8. ' nd' → logprob: -16.125469207763672
    9. ' n' → logprob: -16.625469207763672
    10. '_np' → logprob: -17.125469207763672

Token 7: '

' (ID: 279)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.468404620885849
    2. '
' → logprob: -1.7184046506881714
    3. '<|end|>' → logprob: -2.843404531478882
    4. '```' → logprob: -3.218404531478882
    5. '\n' → logprob: -3.218404531478882
    6. '\' → logprob: -3.718404531478882
    7. '[' → logprob: -5.343404769897461
    8. '.' → logprob: -5.343404769897461
    9. '#' → logprob: -5.718404769897461
    10. '<|end|>' → logprob: -5.843404769897461

Token 8: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2894532382488251
    2. 'import' → logprob: -2.6644532680511475
    3. '```' → logprob: -2.6644532680511475
    4. '\' → logprob: -3.6644532680511475
    5. '
' → logprob: -3.9144532680511475
    6. '\n' → logprob: -3.9144532680511475
    7. 'as' → logprob: -4.289453029632568
    8. '#' → logprob: -4.414453029632568
    9. '[' → logprob: -5.164453029632568
    10. '<|end|>' → logprob: -5.539453029632568

Token 9: ' read' (ID: 1729)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06137658655643463
    2. ' my' → logprob: -3.6863765716552734
    3. ' space' → logprob: -4.811376571655273
    4. ' calculate' → logprob: -4.936376571655273
    5. '_' → logprob: -5.436376571655273
    6. ' process' → logprob: -5.811376571655273
    7. ' main' → logprob: -6.186376571655273
    8. ' array' → logprob: -6.311376571655273
    9. ' predict' → logprob: -6.811376571655273
    10. ' train' → logprob: -7.061376571655273

Token 10: '_st' (ID: 2518)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.31384003162384033
    2. '_' → logprob: -1.3138400316238403
    3. ' (' → logprob: -8.68883991241455
    4. 's' → logprob: -9.68883991241455
    5. '_line' → logprob: -9.68883991241455
    6. '_data' → logprob: -10.31383991241455
    7. '```' → logprob: -10.31383991241455
    8. '('' → logprob: -11.06383991241455
    9. '_(' → logprob: -11.06383991241455
    10. ')' → logprob: -11.06383991241455

Token 11: 'din' (ID: 28388)
  Prédit: 'din'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'din' → logprob: -0.293790340423584
    2. 'ream' → logprob: -1.418790340423584
    3. 'd' → logprob: -4.543790340423584
    4. 'r' → logprob: -6.668790340423584
    5. 'ring' → logprob: -8.918790817260742
    6. 'rings' → logprob: -9.918790817260742
    7. 'andard' → logprob: -9.918790817260742
    8. 'ate' → logprob: -10.043790817260742
    9. 'DIN' → logprob: -10.293790817260742
    10. '_' → logprob: -10.418790817260742

Token 12: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002767313504591584
    2. '():' → logprob: -6.127767086029053
    3. '(:' → logprob: -8.627767562866211
    4. '("("' → logprob: -9.502767562866211
    5. '_' → logprob: -9.752767562866211
    6. '('' → logprob: -9.752767562866211
    7. ' (' → logprob: -9.752767562866211
    8. '()' → logprob: -10.252767562866211
    9. '(`' → logprob: -10.877767562866211
    10. '(line' → logprob: -11.627767562866211

Token 13: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23864221572875977
    2. ' return' → logprob: -2.9886422157287598
    3. '():' → logprob: -3.6136422157287598
    4. 'return' → logprob: -3.6136422157287598
    5. '\' → logprob: -3.7386422157287598
    6. '\n' → logprob: -4.11364221572876
    7. '(' → logprob: -4.11364221572876
    8. ':' → logprob: -4.36364221572876
    9. '    
' → logprob: -4.86364221572876
    10. '```' → logprob: -5.23864221572876

Token 14: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -1.0601685047149658
    2. '   ' → logprob: -1.3101685047149658
    3. 'data' → logprob: -1.8101685047149658
    4. ' return' → logprob: -2.060168504714966
    5. ' data' → logprob: -3.060168504714966
    6. ' line' → logprob: -3.935168504714966
    7. 'line' → logprob: -5.060168266296387
    8. ' lines' → logprob: -5.435168266296387
    9. 'try' → logprob: -5.810168266296387
    10. 'for' → logprob: -6.310168266296387

Token 15: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.11361417919397354
    2. 'sys' → logprob: -2.238614082336426
    3. ' ' → logprob: -7.488614082336426
    4. ' np' → logprob: -9.363614082336426
    5. '	sys' → logprob: -9.988614082336426
    6. '(sys' → logprob: -10.113614082336426
    7. 'np' → logprob: -10.863614082336426
    8. '   ' → logprob: -11.863614082336426
    9. ' list' → logprob: -12.363614082336426
    10. '  ' → logprob: -12.363614082336426

Token 16: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0009791015181690454
    2. '.' → logprob: -7.750978946685791
    3. '.stdout' → logprob: -8.00097942352295
    4. '.argv' → logprob: -8.75097942352295
    5. '.std' → logprob: -10.00097942352295
    6. '.readline' → logprob: -12.37597942352295
    7. '.stderr' → logprob: -13.75097942352295
    8. '.input' → logprob: -13.75097942352295
    9. ' .' → logprob: -14.00097942352295
    10. '.st' → logprob: -14.37597942352295

Token 17: '.buffer' (ID: 48964)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.40185099840164185
    2. '.read' → logprob: -1.151850938796997
    3. '.' → logprob: -4.526851177215576
    4. '.readlines' → logprob: -5.526851177215576
    5. 'read' → logprob: -10.151850700378418
    6. '.buffer' → logprob: -11.151850700378418
    7. ' .' → logprob: -11.401850700378418
    8. '.Read' → logprob: -12.526850700378418
    9. '```' → logprob: -13.026850700378418
    10. '.write' → logprob: -13.651850700378418

Token 18: '.read' (ID: 7211)
  Prédit: '.read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.read' → logprob: -0.30661094188690186
    2. '.readline' → logprob: -1.8066109418869019
    3. 'read' → logprob: -2.3066110610961914
    4. '_read' → logprob: -9.431611061096191
    5. '.readlines' → logprob: -9.431611061096191
    6. ' readline' → logprob: -10.181611061096191
    7. 'raw' → logprob: -11.056611061096191
    8. '.' → logprob: -11.056611061096191
    9. ' read' → logprob: -11.056611061096191
    10. '	read' → logprob: -12.931611061096191

Token 19: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.018248511478304863
    2. '(' → logprob: -4.018248558044434
    3. '()`' → logprob: -10.768248558044434
    4. '().' → logprob: -11.018248558044434
    5. '`()' → logprob: -11.268248558044434
    6. '(
' → logprob: -11.643248558044434
    7. '()
' → logprob: -12.143248558044434
    8. ' ()' → logprob: -12.143248558044434
    9. '()

' → logprob: -12.268248558044434
    10. '```' → logprob: -12.518248558044434

Token 20: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8715494871139526
    2. '\n' → logprob: -1.3715494871139526
    3. 'data' → logprob: -2.121549606323242
    4. '\' → logprob: -2.621549606323242
    5. '<|end|>' → logprob: -2.871549606323242
    6. '
' → logprob: -3.496549606323242
    7. '#' → logprob: -4.246549606323242
    8. '```' → logprob: -4.996549606323242
    9. '<|end|>' → logprob: -5.621549606323242
    10. 'd' → logprob: -5.621549606323242

Token 21: ' read' (ID: 1729)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.36933234333992004
    2. ' process' → logprob: -2.1193323135375977
    3. ' parse' → logprob: -2.7443323135375977
    4. ' write' → logprob: -2.9943323135375977
    5. ' decode' → logprob: -3.6193323135375977
    6. ' convert' → logprob: -3.9943323135375977
    7. ' split' → logprob: -4.619332313537598
    8. ' save' → logprob: -5.994332313537598
    9. ' read' → logprob: -6.119332313537598
    10. ' encode' → logprob: -6.369332313537598

Token 22: '_st' (ID: 2518)
  Prédit: '_st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_st' → logprob: -0.07053505629301071
    2. '_line' → logprob: -3.3205349445343018
    3. '_' → logprob: -3.8205349445343018
    4. '_stdout' → logprob: -5.320535182952881
    5. '_from' → logprob: -6.945535182952881
    6. '()' → logprob: -7.320535182952881
    7. 'line' → logprob: -7.445535182952881
    8. '_byte' → logprob: -7.945535182952881
    9. '_bytes' → logprob: -8.320534706115723
    10. '_token' → logprob: -8.320534706115723

Token 23: 'din' (ID: 28388)
  Prédit: 'din'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'din' → logprob: -0.003417366649955511
    2. 'd' → logprob: -5.753417491912842
    3. 'in' → logprob: -8.628417015075684
    4. 'df' → logprob: -10.628417015075684
    5. 'di' → logprob: -11.753417015075684
    6. '_d' → logprob: -12.003417015075684
    7. 'dtype' → logprob: -12.253417015075684
    8. 'derr' → logprob: -13.128417015075684
    9. 'dp' → logprob: -13.128417015075684
    10. '```' → logprob: -13.253417015075684

Token 24: '_split' (ID: 39921)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.08149822801351547
    2. '()' → logprob: -2.581498146057129
    3. '(' → logprob: -6.206498146057129
    4. '_' → logprob: -9.081498146057129
    5. '()>' → logprob: -9.456498146057129
    6. ' ()' → logprob: -9.956498146057129
    7. '_line' → logprob: -10.331498146057129
    8. '`()' → logprob: -10.331498146057129
    9. '```' → logprob: -10.581498146057129
    10. '()`' → logprob: -10.581498146057129

Token 25: '():
' (ID: 8595)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4417596459388733
    2. '():' → logprob: -1.3167595863342285
    3. '(' → logprob: -2.4417595863342285
    4. '():
' → logprob: -7.8167595863342285
    5. ' ()' → logprob: -8.316760063171387
    6. '()]' → logprob: -8.566760063171387
    7. '():

' → logprob: -8.691760063171387
    8. '_' → logprob: -8.816760063171387
    9. '("("' → logprob: -9.441760063171387
    10. '())' → logprob: -9.691760063171387

Token 26: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009185262955725193
    2. '()' → logprob: -4.759185314178467
    3. 'return' → logprob: -8.634184837341309
    4. '    ' → logprob: -9.009184837341309
    5. '    
' → logprob: -9.134184837341309
    6. ' return' → logprob: -10.384184837341309
    7. ' ()' → logprob: -10.759184837341309
    8. '[]' → logprob: -10.759184837341309
    9. '(' → logprob: -10.884184837341309
    10. ')' → logprob: -11.259184837341309

Token 27: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24683350324630737
    2. ' return' → logprob: -1.9968335628509521
    3. 'return' (adapté à ' return') → logprob: -2.496833562850952
    4. '    ' → logprob: -8.246833801269531
    5. 'data' → logprob: -9.246833801269531
    6. ' ' → logprob: -9.996833801269531
    7. '  ' → logprob: -10.121833801269531
    8. '    
' → logprob: -10.371833801269531
    9. ' data' → logprob: -10.871833801269531
    10. 'b' → logprob: -10.996833801269531

Token 28: ' read' (ID: 1729)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.08227148652076721
    2. 'sys' → logprob: -2.9572715759277344
    3. ' read' → logprob: -3.8322715759277344
    4. 'read' → logprob: -6.082271575927734
    5. ' ' → logprob: -6.207271575927734
    6. '(sys' → logprob: -8.332271575927734
    7. ' b' → logprob: -8.457271575927734
    8. ' np' → logprob: -8.707271575927734
    9. '  ' → logprob: -9.082271575927734
    10. '	sys' → logprob: -10.082271575927734

Token 29: '_st' (ID: 2518)
  Prédit: '_st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_st' → logprob: -0.0025254839565604925
    2. '_' → logprob: -6.127525329589844
    3. '_s' → logprob: -8.002525329589844
    4. '```' → logprob: -13.627525329589844
    5. '_ST' → logprob: -13.752525329589844
    6. ' _' → logprob: -13.877525329589844
    7. '_stdout' → logprob: -14.127525329589844
    8. '_sta' → logprob: -15.127525329589844
    9. '_sn' → logprob: -15.252525329589844
    10. '_sys' → logprob: -16.252525329589844

Token 30: 'din' (ID: 28388)
  Prédit: 'din'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'din' → logprob: -0.0006764543941244483
    2. 'in' → logprob: -7.62567663192749
    3. 'd' → logprob: -8.625676155090332
    4. 'stdin' → logprob: -12.125676155090332
    5. 'di' → logprob: -14.125676155090332
    6. '_d' → logprob: -14.125676155090332
    7. 'inp' → logprob: -14.375676155090332
    8. 'dx' → logprob: -15.375676155090332
    9. 'dtype' → logprob: -15.750676155090332
    10. '_in' → logprob: -15.875676155090332

Token 31: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.002481127390637994
    2. '()' → logprob: -6.002480983734131
    3. '.split' → logprob: -12.752481460571289
    4. '(' → logprob: -13.627481460571289
    5. '.' → logprob: -14.127481460571289
    6. ' ().' → logprob: -15.252481460571289
    7. '_split' → logprob: -15.627481460571289
    8. '.decode' → logprob: -16.87748146057129
    9. '(split' → logprob: -17.50248146057129
    10. 'split' → logprob: -17.62748146057129

Token 32: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00253618648275733
    2. 'decode' → logprob: -6.002536296844482
    3. 'strip' → logprob: -9.752535820007324
    4. 'rstrip' → logprob: -13.502535820007324
    5. ' split' → logprob: -14.377535820007324
    6. 'spl' → logprob: -15.752535820007324
    7. '```' → logprob: -16.25253677368164
    8. 'replace' → logprob: -16.37753677368164
    9. ' decode' → logprob: -18.75253677368164
    10. '(split' → logprob: -19.62753677368164

Token 33: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.11303354799747467
    2. '(' → logprob: -2.2380335330963135
    3. '()[' → logprob: -10.113033294677734
    4. '()\' → logprob: -10.613033294677734
    5. '()
' → logprob: -10.988033294677734
    6. '('' → logprob: -10.988033294677734
    7. '```' → logprob: -10.988033294677734
    8. '(\' → logprob: -11.113033294677734
    9. '(
' → logprob: -11.613033294677734
    10. ' ()' → logprob: -11.613033294677734

Token 34: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0631587952375412
    2. '[' → logprob: -3.0631587505340576
    3. '```' → logprob: -5.438158988952637
    4. '#' → logprob: -5.563158988952637
    5. '(' → logprob: -6.313158988952637
    6. '_' → logprob: -6.938158988952637
    7. '[]' → logprob: -7.063158988952637
    8. '\' → logprob: -7.438158988952637
    9. '.' → logprob: -7.688158988952637
    10. '<|end|>' → logprob: -8.563158988952637

Token 35: ' parse' (ID: 8420)
  Prédit: ' read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.18096572160720825
    2. ' main' → logprob: -1.9309656620025635
    3. 'read' → logprob: -4.555965900421143
    4. ' write' → logprob: -6.055965900421143
    5. ' numpy' → logprob: -6.805965900421143
    6. ' convert' → logprob: -6.930965900421143
    7. ' process' → logprob: -6.930965900421143
    8. ' parse' → logprob: -7.305965900421143
    9. ' decode' → logprob: -7.805965900421143
    10. 'main' → logprob: -7.930965900421143

Token 36: '_int' (ID: 12285)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.14714805781841278
    2. '_line' → logprob: -3.0221481323242188
    3. '_tokens' → logprob: -3.1471481323242188
    4. '_token' → logprob: -4.022148132324219
    5. '_input' → logprob: -4.522148132324219
    6. '(' → logprob: -5.272148132324219
    7. '_data' → logprob: -6.022148132324219
    8. '_int' → logprob: -6.772148132324219
    9. '_args' → logprob: -7.522148132324219
    10. '(_' → logprob: -7.772148132324219

Token 37: 's' (ID: 82)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4957667291164398
    2. 's' → logprob: -0.9957667589187622
    3. '()' → logprob: -4.120766639709473
    4. '(s' → logprob: -6.495766639709473
    5. '32' → logprob: -6.995766639709473
    6. '(token' → logprob: -7.370766639709473
    7. '("("' → logprob: -7.620766639709473
    8. '(line' → logprob: -8.370766639709473
    9. '():' → logprob: -8.995766639709473
    10. '```' → logprob: -8.995766639709473

Token 38: '(lst' (ID: 95688)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.015005139634013176
    2. '():' → logprob: -4.390005111694336
    3. '()' → logprob: -6.390005111694336
    4. '("("' → logprob: -7.640005111694336
    5. ' (' → logprob: -9.265005111694336
    6. '(line' → logprob: -10.515005111694336
    7. '(data' → logprob: -10.890005111694336
    8. '('' → logprob: -11.015005111694336
    9. '(s' → logprob: -11.140005111694336
    10. '(read' → logprob: -11.265005111694336

Token 39: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004665203392505646
    2. ')' → logprob: -5.504665374755859
    3. '):
' → logprob: -8.50466537475586
    4. ' ):' → logprob: -8.87966537475586
    5. '[]):' → logprob: -9.25466537475586
    6. '(' → logprob: -10.00466537475586
    7. '[' → logprob: -10.50466537475586
    8. '():' → logprob: -11.12966537475586
    9. ',' → logprob: -11.12966537475586
    10. '   ' → logprob: -11.25466537475586

Token 40: ' idx' (ID: 14016)
  Prédit: ' start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.20500591397285461
    2. 'start' → logprob: -2.2050058841705322
    3. ' offset' → logprob: -3.2050058841705322
    4. ' idx' → logprob: -4.330006122589111
    5. 'offset' → logprob: -4.830006122589111
    6. ' index' → logprob: -5.455006122589111
    7. 'idx' → logprob: -6.205006122589111
    8. 'index' → logprob: -6.455006122589111
    9. ' pos' → logprob: -6.705006122589111
    10. ')' → logprob: -6.830006122589111

Token 41: '=' (ID: 28)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.018582524731755257
    2. ',' → logprob: -4.018582344055176
    3. ')' → logprob: -8.643582344055176
    4. '):
' → logprob: -9.268582344055176
    5. ' ):' → logprob: -9.393582344055176
    6. '=' → logprob: -10.518582344055176
    7. '   ' → logprob: -10.643582344055176
    8. ':' → logprob: -11.643582344055176
    9. ' ,' → logprob: -12.268582344055176
    10. '[' → logprob: -12.643582344055176

Token 42: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013457079185172915
    2. ' ' → logprob: -6.626345634460449
    3. '1' → logprob: -11.00134563446045
    4. ')' → logprob: -12.75134563446045
    5. '   ' → logprob: -16.876346588134766
    6. '=' → logprob: -17.001346588134766
    7. ' )' → logprob: -17.876346588134766
    8. '  ' → logprob: -18.063846588134766
    9. '```' → logprob: -18.063846588134766
    10. '):
' → logprob: -18.188846588134766

Token 43: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02103239670395851
    2. ',' → logprob: -3.8960323333740234
    3. ')' → logprob: -8.021032333374023
    4. ' ):' → logprob: -8.896032333374023
    5. '):
' → logprob: -11.646032333374023
    6. ' ,' → logprob: -11.771032333374023
    7. '   ' → logprob: -12.771032333374023
    8. ':' → logprob: -13.271032333374023
    9. ' ' → logprob: -14.146032333374023
    10. '),' → logprob: -15.271032333374023

Token 44: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.8937724828720093
    2. ' n' → logprob: -1.1437724828720093
    3. ' length' → logprob: -2.143772602081299
    4. 'count' → logprob: -2.893772602081299
    5. ' size' → logprob: -3.518772602081299
    6. 'n' → logprob: -3.643772602081299
    7. ' ' → logprob: -4.518772602081299
    8. ' num' → logprob: -5.268772602081299
    9. 'length' → logprob: -5.268772602081299
    10. ' max' → logprob: -5.518772602081299

Token 45: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6353919506072998
    2. '):' → logprob: -0.7603919506072998
    3. ')' → logprob: -6.760392189025879
    4. ' ):' → logprob: -6.885392189025879
    5. '=None' → logprob: -7.635392189025879
    6. ',' → logprob: -9.885392189025879
    7. ')=' → logprob: -10.885392189025879
    8. ' =' → logprob: -11.135392189025879
    9. '=int' → logprob: -11.385392189025879
    10. ' ' → logprob: -11.885392189025879

Token 46: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.299650639295578
    2. 'None' → logprob: -2.0496506690979004
    3. ' None' → logprob: -2.9246506690979004
    4. ' ' → logprob: -3.2996506690979004
    5. '3' → logprob: -4.5496506690979
    6. ')' → logprob: -5.0496506690979
    7. '0' → logprob: -5.1746506690979
    8. '2' → logprob: -5.2996506690979
    9. '4' → logprob: -5.4246506690979
    10. '10' → logprob: -6.2996506690979

Token 47: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00019889144459739327
    2. ' ):' → logprob: -9.375199317932129
    3. ',' → logprob: -10.000199317932129
    4. '):
' → logprob: -10.250199317932129
    5. ')' → logprob: -10.500199317932129
    6. '   ' → logprob: -13.500199317932129
    7. ' ' → logprob: -13.625199317932129
    8. ':' → logprob: -13.875199317932129
    9. '=' → logprob: -14.125199317932129
    10. '):
' → logprob: -14.500199317932129

Token 48: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021887540817260742
    2. '    ' → logprob: -5.02188777923584
    3. '[' → logprob: -6.02188777923584
    4. ' ' → logprob: -6.14688777923584
    5. ' return' → logprob: -6.14688777923584
    6. '[int' → logprob: -6.39688777923584
    7. 'int' → logprob: -6.77188777923584
    8. '  ' → logprob: -7.14688777923584
    9. ' int' → logprob: -7.39688777923584
    10. '[]' → logprob: -7.39688777923584

Token 49: ' return' (ID: 622)
  Prédit: ' ints'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ints' → logprob: -0.7253220677375793
    2. '   ' → logprob: -1.4753220081329346
    3. ' return' → logprob: -2.2253220081329346
    4. 'ints' → logprob: -2.9753220081329346
    5. ' lst' → logprob: -2.9753220081329346
    6. 'return' (adapté à ' return') → logprob: -4.100322246551514
    7. ' int' → logprob: -4.475322246551514
    8. 'int' → logprob: -4.600322246551514
    9. ' integers' → logprob: -4.975322246551514
    10. ' vals' → logprob: -5.475322246551514

Token 50: ' map' (ID: 4014)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.724796712398529
    2. 'list' → logprob: -1.0997967720031738
    3. ' tuple' → logprob: -2.724796772003174
    4. '[list' → logprob: -2.974796772003174
    5. '[int' → logprob: -3.849796772003174
    6. ' [' → logprob: -4.224796772003174
    7. 'tuple' → logprob: -4.224796772003174
    8. ' np' → logprob: -4.974796772003174
    9. 'np' → logprob: -6.224796772003174
    10. '[' → logprob: -6.349796772003174

Token 51: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.008657476864755154
    2. '(' → logprob: -4.758657455444336
    3. '(lambda' → logprob: -10.133657455444336
    4. 'int' → logprob: -13.508657455444336
    5. '<int' → logprob: -14.008657455444336
    6. '[int' → logprob: -15.008657455444336
    7. '(
' → logprob: -15.133657455444336
    8. '=int' → logprob: -16.008657455444336
    9. '(list' → logprob: -16.258657455444336
    10. ' (' → logprob: -16.758657455444336

Token 52: ',' (ID: 11)
  Prédit: '(lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lst' → logprob: -0.019785180687904358
    2. '(' → logprob: -4.144785404205322
    3. ',' → logprob: -5.644785404205322
    4. ' (' → logprob: -9.144784927368164
    5. ')' → logprob: -10.394784927368164
    6. ',l' → logprob: -10.894784927368164
    7. '(l' → logprob: -11.394784927368164
    8. '),' → logprob: -11.644784927368164
    9. '(
' → logprob: -11.769784927368164
    10. 'lst' → logprob: -11.769784927368164

Token 53: ' lst' (ID: 33384)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.06219712644815445
    2. ' lst' → logprob: -2.812197208404541
    3. '(lst' → logprob: -9.312196731567383
    4. ')' → logprob: -9.937196731567383
    5. '   ' → logprob: -10.187196731567383
    6. '[l' → logprob: -10.937196731567383
    7. ' ' → logprob: -11.812196731567383
    8. '_lst' → logprob: -12.062196731567383
    9. '    ' → logprob: -12.187196731567383
    10. '  ' → logprob: -12.687196731567383

Token 54: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.014429331757128239
    2. '[' → logprob: -4.389429569244385
    3. ',' → logprob: -6.389429569244385
    4. ' [' → logprob: -9.514429092407227
    5. ' ,' → logprob: -10.014429092407227
    6. ' idx' → logprob: -10.264429092407227
    7. '   ' → logprob: -10.514429092407227
    8. '(idx' → logprob: -11.139429092407227
    9. 'idx' → logprob: -11.514429092407227
    10. '[
' → logprob: -12.014429092407227

Token 55: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003305784775875509
    2. ' :' → logprob: -8.125330924987793
    3. 'idx' → logprob: -11.625330924987793
    4. ' ' → logprob: -11.875330924987793
    5. '   ' → logprob: -12.000330924987793
    6. ':],' → logprob: -12.500330924987793
    7. '  ' → logprob: -13.250330924987793
    8. '[idx' → logprob: -13.625330924987793
    9. ':]' → logprob: -13.625330924987793
    10. '	idx' → logprob: -13.750330924987793

Token 56: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -4.966313281329349e-05
    2. ' idx' → logprob: -10.000049591064453
    3. 'count' → logprob: -13.625049591064453
    4. '(idx' → logprob: -13.750049591064453
    5. '_idx' → logprob: -14.125049591064453
    6. '	idx' → logprob: -14.125049591064453
    7. '   ' → logprob: -16.000049591064453
    8. ' ' → logprob: -16.125049591064453
    9. ']' → logprob: -16.500049591064453
    10. '[idx' → logprob: -17.250049591064453

Token 57: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0018164324574172497
    2. ' +' → logprob: -6.376816272735596
    3. 'idx' → logprob: -9.376816749572754
    4. '[idx' → logprob: -11.501816749572754
    5. '   ' → logprob: -12.001816749572754
    6. ' idx' → logprob: -12.126816749572754
    7. '(idx' → logprob: -13.001816749572754
    8. ' ' → logprob: -13.126816749572754
    9. '	idx' → logprob: -14.126816749572754
    10. '_idx' → logprob: -14.251816749572754

Token 58: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -3.054500666621607e-06
    2. ' count' → logprob: -12.75000286102295
    3. ' ' → logprob: -17.750003814697266
    4. '(count' → logprob: -18.375003814697266
    5. '<count' → logprob: -19.125003814697266
    6. '$count' → logprob: -19.625003814697266
    7. '   ' → logprob: -19.625003814697266
    8. '[count' → logprob: -19.750003814697266
    9. '	count' → logprob: -19.875003814697266
    10. '```' → logprob: -20.000003814697266

Token 59: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.000443420372903347
    2. ')' → logprob: -7.750443458557129
    3. ' ])' → logprob: -12.750443458557129
    4. ']' → logprob: -12.875443458557129
    5. ')])' → logprob: -13.250443458557129
    6. '))' → logprob: -13.875443458557129
    7. ']),' → logprob: -14.250443458557129
    8. '   ' → logprob: -14.250443458557129
    9. ']))' → logprob: -14.250443458557129
    10. ''])' → logprob: -14.375443458557129

Token 60: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005559705663472414
    2. '```' → logprob: -5.880559921264648
    3. ',' → logprob: -7.255559921264648
    4. ':' → logprob: -7.755559921264648
    5. '\' → logprob: -8.380559921264648
    6. 'newline' → logprob: -8.505559921264648
    7. '
' → logprob: -8.880559921264648
    8. ')' → logprob: -8.880559921264648
    9. '<|end|>' → logprob: -8.880559921264648
    10. '\n' → logprob: -9.005559921264648

Token 61: ' get' (ID: 717)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.1191650778055191
    2. ' parse' → logprob: -2.6191651821136475
    3. ' solve' → logprob: -3.8691651821136475
    4. ' read' → logprob: -4.994164943695068
    5. 'main' → logprob: -5.869164943695068
    6. ' process' → logprob: -6.244164943695068
    7. ' find' → logprob: -6.619164943695068
    8. 'parse' → logprob: -6.869164943695068
    9. ' count' → logprob: -6.994164943695068
    10. ' max' → logprob: -7.494164943695068

Token 62: '_mod' (ID: 15325)
  Prédit: '_max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_max' → logprob: -1.2875826358795166
    2. '_input' → logprob: -1.9125826358795166
    3. '_array' → logprob: -2.0375826358795166
    4. '_int' → logprob: -2.9125826358795166
    5. '_' → logprob: -3.1625826358795166
    6. '_data' → logprob: -3.7875826358795166
    7. '_next' → logprob: -4.0375823974609375
    8. '_line' → logprob: -4.1625823974609375
    9. '_lines' → logprob: -4.1625823974609375
    10. '_s' → logprob: -4.2875823974609375

Token 63: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.22096560895442963
    2. 'ulus' → logprob: -2.845965623855591
    3. '_' → logprob: -2.970965623855591
    4. '()' → logprob: -3.595965623855591
    5. '_value' → logprob: -4.220965385437012
    6. 'ule' → logprob: -4.345965385437012
    7. 'ulo' → logprob: -5.345965385437012
    8. 'ular' → logprob: -5.345965385437012
    9. '_factor' → logprob: -5.845965385437012
    10. 'ifier' → logprob: -6.220965385437012

Token 64: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05569758266210556
    2. '100' → logprob: -4.305697441101074
    3. '20' → logprob: -4.430697441101074
    4. '40' → logprob: -5.180697441101074
    5. '10' → logprob: -5.305697441101074
    6. '409' → logprob: -5.680697441101074
    7. '(' → logprob: -6.055697441101074
    8. ' ' → logprob: -6.555697441101074
    9. '102' → logprob: -6.680697441101074
    10. '42' → logprob: -6.805697441101074

Token 65: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6376466751098633
    2. 'return' (adapté à ' return') → logprob: -1.2626466751098633
    3. ' return' → logprob: -1.7626466751098633
    4. '10' → logprob: -5.637646675109863
    5. '100' → logprob: -5.637646675109863
    6. ' ' → logprob: -6.262646675109863
    7. '20' → logprob: -6.637646675109863
    8. '1' → logprob: -7.262646675109863
    9. '32' → logprob: -7.512646675109863
    10. '42' → logprob: -7.887646675109863

Token 66: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07484861463308334
    2. '10' → logprob: -2.9498486518859863
    3. '100' → logprob: -3.9498486518859863
    4. '1' → logprob: -8.699848175048828
    5. '998' → logprob: -8.949848175048828
    6. ' int' → logprob: -9.324848175048828
    7. ' (' → logprob: -9.824848175048828
    8. 'int' → logprob: -10.449848175048828
    9. '(' → logprob: -10.824848175048828
    10. 'pow' → logprob: -12.574848175048828

Token 67: '998' (ID: 34589)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.17798277735710144
    2. '100' → logprob: -1.9279828071594238
    3. '998' → logprob: -4.302982807159424
    4. 'int' → logprob: -6.177982807159424
    5. '(' → logprob: -6.927982807159424
    6. '1' → logprob: -7.052982807159424
    7. ' ' → logprob: -9.302982330322266
    8. '(int' → logprob: -10.302982330322266
    9. '999' → logprob: -11.927982330322266
    10. 'pow' → logprob: -11.927982330322266

Token 68: '244' (ID: 25291)
  Prédit: '244'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '244' → logprob: -1.0280383548888494e-06
    2. '247' → logprob: -14.500000953674316
    3. '_' → logprob: -15.750000953674316
    4. '447' → logprob: -16.500001907348633
    5. '243' → logprob: -17.000001907348633
    6. '444' → logprob: -17.250001907348633
    7. '344' → logprob: -17.625001907348633
    8. '{' → logprob: -17.750001907348633
    9. '```' → logprob: -18.375001907348633
    10. '`' → logprob: -18.500001907348633

Token 69: '353' (ID: 32996)
  Prédit: '353'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '353' → logprob: -0.0030309518333524466
    2. '357' → logprob: -6.628030776977539
    3. '857' → logprob: -7.003030776977539
    4. '853' → logprob: -7.378030776977539
    5. '257' → logprob: -9.128030776977539
    6. '457' → logprob: -10.878030776977539
    7. '7' → logprob: -10.878030776977539
    8. '57' → logprob: -11.753030776977539
    9. '53' → logprob: -12.503030776977539
    10. '657' → logprob: -13.253030776977539

Token 70: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 71: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05974126607179642
    2. 'class' → logprob: -3.059741258621216
    3. '<|end|>' → logprob: -5.559741497039795
    4. '
' → logprob: -6.184741497039795
    5. '```' → logprob: -6.434741497039795
    6. '<|end|>' → logprob: -6.684741497039795
    7. '#' → logprob: -7.184741497039795
    8. '\' → logprob: -7.684741497039795
    9. '\n' → logprob: -7.809741497039795
    10. 'import' → logprob: -8.184741020202637

Token 72: ' power' (ID: 3470)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.2613328993320465
    2. ' solve' → logprob: -2.3863329887390137
    3. ' mod' → logprob: -2.8863329887390137
    4. ' _' → logprob: -4.386332988739014
    5. ' factorial' → logprob: -4.386332988739014
    6. ' modular' → logprob: -4.761332988739014
    7. ' compute' → logprob: -5.136332988739014
    8. ' add' → logprob: -5.261332988739014
    9. ' max' → logprob: -5.261332988739014
    10. '_mod' → logprob: -5.386332988739014

Token 73: '_mod' (ID: 15325)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0011864188127219677
    2. '(base' → logprob: -7.376186370849609
    3. '_' → logprob: -9.00118637084961
    4. '(a' → logprob: -9.12618637084961
    5. ' (' → logprob: -9.25118637084961
    6. '(x' → logprob: -9.25118637084961
    7. '(
' → logprob: -10.62618637084961
    8. '(_' → logprob: -10.62618637084961
    9. '```' → logprob: -11.12618637084961
    10. '_(' → logprob: -11.62618637084961

Token 74: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004264300689101219
    2. '(x' → logprob: -6.3792643547058105
    3. '(a' → logprob: -6.5042643547058105
    4. ' (' → logprob: -7.2542643547058105
    5. '(base' → logprob: -9.004263877868652
    6. '(n' → logprob: -9.754263877868652
    7. '(power' → logprob: -10.379263877868652
    8. '(value' → logprob: -10.504263877868652
    9. '(
' → logprob: -10.879263877868652
    10. '<|end|>' → logprob: -11.629263877868652

Token 75: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0028199704829603434
    2. ' ,' → logprob: -5.877820014953613
    3. ',a' → logprob: -12.252820014953613
    4. ')' → logprob: -12.877820014953613
    5. ',n' → logprob: -12.877820014953613
    6. ',
' → logprob: -13.502820014953613
    7. ' ' → logprob: -13.752820014953613
    8. ',b' → logprob: -14.127820014953613
    9. '‌,' → logprob: -14.252820014953613
    10. '<|end|>' → logprob: -15.627820014953613

Token 76: ' n' (ID: 297)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.007968814112246037
    2. ' b' → logprob: -4.882968902587891
    3. 'n' → logprob: -8.50796890258789
    4. 'p' → logprob: -9.25796890258789
    5. ' ' → logprob: -11.13296890258789
    6. '2' → logprob: -11.38296890258789
    7. 'power' → logprob: -11.63296890258789
    8. ' n' → logprob: -12.00796890258789
    9. 'mod' → logprob: -12.13296890258789
    10. 'm' → logprob: -12.25796890258789

Token 77: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011337347328662872
    2. '):' → logprob: -4.5113372802734375
    3. ' ,' → logprob: -8.511337280273438
    4. ')' → logprob: -9.761337280273438
    5. ',a' → logprob: -11.386337280273438
    6. ',
' → logprob: -12.261337280273438
    7. ' ):' → logprob: -13.011337280273438
    8. '):
' → logprob: -13.261337280273438
    9. ',n' → logprob: -13.636337280273438
    10. ':' → logprob: -13.636337280273438

Token 78: ' mod' (ID: 1812)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.28926676511764526
    2. 'mod' → logprob: -1.91426682472229
    3. ' m' → logprob: -2.41426682472229
    4. ' mod' → logprob: -4.289266586303711
    5. 'MOD' → logprob: -8.414266586303711
    6. 'p' → logprob: -8.664266586303711
    7. 'b' → logprob: -9.914266586303711
    8. ' ' → logprob: -10.039266586303711
    9. ' p' → logprob: -10.414266586303711
    10. ' MOD' → logprob: -11.039266586303711

Token 79: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00017362393555231392
    2. ')' → logprob: -9.250173568725586
    3. '):
' → logprob: -9.875173568725586
    4. ' ):' → logprob: -11.000173568725586
    5. '=' → logprob: -12.375173568725586
    6. ',' → logprob: -13.125173568725586
    7. ':' → logprob: -13.875173568725586
    8. '):
' → logprob: -14.750173568725586
    9. '**' → logprob: -15.250173568725586
    10. ')：' → logprob: -15.375173568725586

Token 80: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05064572021365166
    2. '   ' → logprob: -3.0506458282470703
    3. '):' → logprob: -6.67564582824707
    4. ':
' → logprob: -8.67564582824707
    5. ' :' → logprob: -8.67564582824707
    6. ':**' → logprob: -8.80064582824707
    7. '**' → logprob: -9.55064582824707
    8. ',' → logprob: -10.05064582824707
    9. '=' → logprob: -10.30064582824707
    10. '_:' → logprob: -10.67564582824707

Token 81: ' return' (ID: 622)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.16410695016384125
    2. '   ' → logprob: -2.789106845855713
    3. ' result' → logprob: -3.289106845855713
    4. 'if' → logprob: -4.039106845855713
    5. 'res' → logprob: -4.539106845855713
    6. 'pow' → logprob: -4.539106845855713
    7. ' if' → logprob: -4.914106845855713
    8. '0' → logprob: -6.539106845855713
    9. 'return' (adapté à ' return') → logprob: -6.539106845855713
    10. ' res' → logprob: -6.789106845855713

Token 82: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.023466400802135468
    2. ' pow' → logprob: -3.7734663486480713
    3. '1' → logprob: -8.523466110229492
    4. '(pow' → logprob: -10.773466110229492
    5. '   ' → logprob: -14.648466110229492
    6. ' ' → logprob: -15.023466110229492
    7. '_pow' → logprob: -15.898466110229492
    8. '0' → logprob: -16.023466110229492
    9. '```' → logprob: -16.023466110229492
    10. '(' → logprob: -16.523466110229492

Token 83: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5231844782829285
    2. '(a' → logprob: -0.8981844782829285
    3. '<|end|>' → logprob: -10.273184776306152
    4. '(
' → logprob: -11.398184776306152
    5. '(ai' → logprob: -12.898184776306152
    6. '<|end|>' → logprob: -13.398184776306152
    7. 'a' → logprob: -13.648184776306152
    8. '((' → logprob: -13.898184776306152
    9. '(x' → logprob: -14.023184776306152
    10. '(abs' → logprob: -14.148184776306152

Token 84: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.00023846338444855064
    2. '(' → logprob: -8.500238418579102
    3. 'a' → logprob: -10.375238418579102
    4. ')' → logprob: -13.000238418579102
    5. ')a' → logprob: -13.875238418579102
    6. ')(' → logprob: -15.625238418579102
    7. '(
' → logprob: -16.1252384185791
    8. ' (' → logprob: -16.3752384185791
    9. ',a' → logprob: -16.7502384185791
    10. ',' → logprob: -17.1252384185791

Token 85: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004240566398948431
    2. '),' → logprob: -6.1292405128479
    3. ' ,' → logprob: -6.6292405128479
    4. ',n' → logprob: -7.7542405128479
    5. ')' → logprob: -8.129240989685059
    6. ' ' → logprob: -12.754240989685059
    7. '`,' → logprob: -13.879240989685059
    8. ',
' → logprob: -14.629240989685059
    9. ' ),' → logprob: -14.754240989685059
    10. '),(' → logprob: -15.004240989685059

Token 86: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.13348451256752014
    2. ' n' → logprob: -2.3834846019744873
    3. 'int' → logprob: -3.5084846019744873
    4. ' int' → logprob: -5.883484363555908
    5. '	n' → logprob: -13.758484840393066
    6. '(int' → logprob: -14.258484840393066
    7. ' ' → logprob: -14.883484840393066
    8. '    ' → logprob: -15.633484840393066
    9. '   ' → logprob: -15.883484840393066
    10. ')n' → logprob: -15.883484840393066

Token 87: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0019764534663408995
    2. ' ,' → logprob: -6.251976490020752
    3. '%' → logprob: -10.376976013183594
    4. ',
' → logprob: -12.751976013183594
    5. ' %' → logprob: -12.876976013183594
    6. ')' → logprob: -13.126976013183594
    7. '%,' → logprob: -13.501976013183594
    8. ' mod' → logprob: -13.501976013183594
    9. 'mod' → logprob: -13.501976013183594
    10. ',module' → logprob: -14.251976013183594

Token 88: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.1269291490316391
    2. ' mod' → logprob: -2.1269290447235107
    3. '	mod' → logprob: -14.50192928314209
    4. '(mod' → logprob: -15.25192928314209
    5. ' ' → logprob: -16.251928329467773
    6. 'int' → logprob: -16.501928329467773
    7. 'm' → logprob: -17.376928329467773
    8. ')' → logprob: -17.376928329467773
    9. '_mod' → logprob: -18.001928329467773
    10. '   ' → logprob: -18.126928329467773

Token 89: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ')
' → logprob: -15.5
    3. ' )' → logprob: -15.75
    4. '))' → logprob: -17.375
    5. ')return' → logprob: -17.875
    6. '),' → logprob: -18.875
    7. ')}' → logprob: -18.875
    8. ')

' → logprob: -18.875
    9. '}' → logprob: -20.0
    10. ')...' → logprob: -20.375

Token 90: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1361253261566162
    2. '
' → logprob: -2.636125326156616
    3. '

' → logprob: -3.386125326156616
    4. '<|end|>' → logprob: -4.386125564575195
    5. '```' → logprob: -5.636125564575195
    6. '\n' → logprob: -6.136125564575195
    7. '*' → logprob: -6.386125564575195
    8. ' def' → logprob: -7.511125564575195
    9. '\' → logprob: -7.761125564575195
    10. '<|end|>' → logprob: -8.011125564575195

Token 91: ' get' (ID: 717)
  Prédit: ' mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.8695423603057861
    2. ' main' → logprob: -0.8695423603057861
    3. ' modular' → logprob: -2.619542360305786
    4. ' power' → logprob: -3.119542360305786
    5. ' pow' → logprob: -4.244542121887207
    6. ' factorial' → logprob: -5.119542121887207
    7. ' fast' → logprob: -5.244542121887207
    8. ' solve' → logprob: -5.369542121887207
    9. ' matrix' → logprob: -5.494542121887207
    10. ' multiply' → logprob: -5.869542121887207

Token 92: '_U' (ID: 13856)
  Prédit: '_mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_mod' → logprob: -0.10312303900718689
    2. '_input' → logprob: -3.8531229496002197
    3. '_inv' → logprob: -4.478123188018799
    4. '_max' → logprob: -4.478123188018799
    5. '_factor' → logprob: -4.478123188018799
    6. '_prime' → logprob: -4.978123188018799
    7. '_' → logprob: -5.478123188018799
    8. '_inverse' → logprob: -5.603123188018799
    9. '_f' → logprob: -5.728123188018799
    10. '_power' → logprob: -6.228123188018799

Token 93: '(N' (ID: 10564)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -1.7120749950408936
    2. 'p' → logprob: -1.7120749950408936
    3. 'P' → logprob: -1.8370749950408936
    4. '(n' → logprob: -1.9620749950408936
    5. 'V' → logprob: -3.0870749950408936
    6. 'L' → logprob: -3.2120749950408936
    7. 'pper' → logprob: -3.3370749950408936
    8. 'n' → logprob: -3.4620749950408936
    9. 'PPER' → logprob: -3.5870749950408936
    10. 'N' → logprob: -4.087075233459473

Token 94: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6497128009796143
    2. '):' → logprob: -0.7747128009796143
    3. ')' → logprob: -4.274712562561035
    4. ' ):' → logprob: -6.774712562561035
    5. ' ,' → logprob: -7.024712562561035
    6. '+' → logprob: -7.399712562561035
    7. '):
' → logprob: -9.024712562561035
    8. ' )' → logprob: -9.399712562561035
    9. ',N' → logprob: -10.274712562561035
    10. '-' → logprob: -10.774712562561035

Token 95: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03361111879348755
    2. ' np' → logprob: -4.658611297607422
    3. 'np' → logprob: -4.908611297607422
    4. ' return' → logprob: -5.158611297607422
    5. ' [' → logprob: -5.658611297607422
    6. '[' → logprob: -5.658611297607422
    7. 'return' → logprob: -6.533611297607422
    8. '[
' → logprob: -7.783611297607422
    9. '[np' → logprob: -7.908611297607422
    10. ' range' → logprob: -8.783611297607422

Token 96: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6820142865180969
    2. ' return' → logprob: -0.9320142865180969
    3. ' np' → logprob: -2.682014226913452
    4. ' [' → logprob: -4.557014465332031
    5. 'return' (adapté à ' return') → logprob: -4.682014465332031
    6. 'np' → logprob: -4.807014465332031
    7. ' U' → logprob: -7.057014465332031
    8. ' range' → logprob: -7.182014465332031
    9. '[' → logprob: -7.432014465332031
    10. ' u' → logprob: -7.557014465332031

Token 97: ' N' (ID: 478)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.9133123755455017
    2. ' np' → logprob: -1.6633124351501465
    3. 'list' → logprob: -2.0383124351501465
    4. ' list' → logprob: -2.5383124351501465
    5. ' [' → logprob: -2.9133124351501465
    6. '[' → logprob: -3.0383124351501465
    7. '[np' → logprob: -3.0383124351501465
    8. '[list' → logprob: -4.5383124351501465
    9. 'set' → logprob: -4.6633124351501465
    10. ' set' → logprob: -5.2883124351501465

Token 98: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4477224051952362
    2. 'def' → logprob: -1.8227224349975586
    3. '**' → logprob: -2.8227224349975586
    4. ',' → logprob: -3.0727224349975586
    5. '*' → logprob: -3.5727224349975586
    6. ' ' → logprob: -4.322722434997559
    7. ' +' → logprob: -4.572722434997559
    8. '
' → logprob: -5.072722434997559
    9. '<|end|>' → logprob: -5.197722434997559
    10. '_' → logprob: -5.197722434997559

Token 99: ' N' (ID: 478)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.13286909461021423
    2. ' ' → logprob: -2.132869005203247
    3. '2' → logprob: -6.007869243621826
    4. '10' → logprob: -7.382869243621826
    5. '100' → logprob: -7.882869243621826
    6. '3' → logprob: -8.007868766784668
    7. '(' → logprob: -8.382868766784668
    8. '7' → logprob: -8.507868766784668
    9. ' (' → logprob: -8.507868766784668
    10. '4' → logprob: -8.757868766784668

Token 100: ' +' (ID: 659)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6204050779342651
    2. '*' → logprob: -1.2454050779342651
    3. '+' → logprob: -2.1204051971435547
    4. '**' → logprob: -3.7454051971435547
    5. '
' → logprob: -5.120405197143555
    6. ' *' → logprob: -5.120405197143555
    7. ' +' → logprob: -5.620405197143555
    8. '#' → logprob: -5.995405197143555
    9. ' def' → logprob: -6.245405197143555
    10. '//' → logprob: -6.870405197143555

Token 101: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.048799920827150345
    2. 'N' → logprob: -3.423799991607666
    3. ' ' → logprob: -4.673799991607666
    4. '2' → logprob: -6.423799991607666
    5. '(' → logprob: -6.673799991607666
    6. '(N' → logprob: -7.173799991607666
    7. '3' → logprob: -7.423799991607666
    8. '4' → logprob: -8.673799514770508
    9. '...' → logprob: -8.798799514770508
    10. ' N' → logprob: -9.048799514770508

Token 102: '100' (ID: 1353)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.024805234745144844
    2. 'N' → logprob: -4.024805068969727
    3. '2' → logprob: -5.899805068969727
    4. '(' → logprob: -6.899805068969727
    5. '(N' → logprob: -6.899805068969727
    6. '3' → logprob: -7.399805068969727
    7. ''N' → logprob: -8.774805068969727
    8. '4' → logprob: -9.149805068969727
    9. '...' → logprob: -9.149805068969727
    10. ' ' → logprob: -9.149805068969727

Token 103: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 104: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 105: ' as' (ID: 472)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.22430302202701569
    2. ' solve' → logprob: -2.8493030071258545
    3. ' def' → logprob: -4.099303245544434
    4. '_' → logprob: -4.474303245544434
    5. ' pow' → logprob: -4.474303245544434
    6. ' power' → logprob: -4.599303245544434
    7. ' main' → logprob: -4.849303245544434
    8. ' factorial' → logprob: -4.849303245544434
    9. ' parse' → logprob: -4.974303245544434
    10. ' range' → logprob: -4.974303245544434

Token 106: '_np' (ID: 102996)
  Prédit: 'sert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sert' → logprob: -0.002879295265302062
    2. 'sign' → logprob: -6.7528791427612305
    3. 'cii' → logprob: -7.1278791427612305
    4. 'set' → logprob: -8.12787914276123
    5. 'list' → logprob: -9.00287914276123
    6. 'sertion' → logprob: -9.50287914276123
    7. 'sum' → logprob: -9.87787914276123
    8. 'sort' → logprob: -10.00287914276123
    9. 'sync' → logprob: -10.00287914276123
    10. 'array' → logprob: -10.25287914276123

Token 107: '_ar' (ID: 54153)
  Prédit: 'array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'array' → logprob: -0.3772088289260864
    2. '_array' → logprob: -1.2522088289260864
    3. 'ar' → logprob: -5.252208709716797
    4. 'aray' → logprob: -5.252208709716797
    5. 'rray' → logprob: -5.502208709716797
    6. 'arry' → logprob: -6.002208709716797
    7. 'arr' → logprob: -6.252208709716797
    8. 'def' → logprob: -6.377208709716797
    9. '.ndarray' → logprob: -6.377208709716797
    10. 'arra' → logprob: -6.752208709716797

Token 108: 'ange' (ID: 1052)
  Prédit: 'ray'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ray' → logprob: -8.399378566537052e-05
    2. 'r' → logprob: -9.500083923339844
    3. 'rray' → logprob: -11.875083923339844
    4. 'g' → logprob: -14.250083923339844
    5. '(ray' → logprob: -14.750083923339844
    6. '(r' → logprob: -15.750083923339844
    7. '_ray' → logprob: -15.875083923339844
    8. '-ray' → logprob: -15.875083923339844
    9. '(' → logprob: -16.250083923339844
    10. 'Ray' → logprob: -16.500083923339844

Token 109: '(U' (ID: 27452)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.46301284432411194
    2. '(N' → logprob: -1.2130128145217896
    3. '(n' → logprob: -3.588012933731079
    4. 'def' → logprob: -4.7130126953125
    5. '(size' → logprob: -4.9630126953125
    6. '(range' → logprob: -5.0880126953125
    7. '(length' → logprob: -5.3380126953125
    8. '():' → logprob: -5.5880126953125
    9. '(lambda' → logprob: -5.7130126953125
    10. '(A' → logprob: -6.3380126953125

Token 110: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06783201545476913
    2. '):
' → logprob: -3.0678319931030273
    3. '(U' → logprob: -4.317831993103027
    4. ')' → logprob: -5.442831993103027
    5. '(' → logprob: -6.817831993103027
    6. '):
' → logprob: -9.442831993103027
    7. '(N' → logprob: -9.817831993103027
    8. ',' → logprob: -10.192831993103027
    9. '):

' → logprob: -10.317831993103027
    10. '   ' → logprob: -10.567831993103027

Token 111: ' dtype' (ID: 29770)
  Prédit: 'dtype'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dtype' → logprob: -0.2070833444595337
    2. ' dtype' → logprob: -1.8320833444595337
    3. 'N' → logprob: -5.582083225250244
    4. 'U' → logprob: -5.707083225250244
    5. ' N' → logprob: -5.707083225250244
    6. ' U' → logprob: -5.707083225250244
    7. 'start' → logprob: -6.082083225250244
    8. ')' → logprob: -6.082083225250244
    9. 'step' → logprob: -6.957083225250244
    10. ' ' → logprob: -7.082083225250244

Token 112: '=np' (ID: 40593)
  Prédit: '=np'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=np' → logprob: -0.34170329570770264
    2. '=int' → logprob: -1.3417032957077026
    3. '=' → logprob: -3.591703414916992
    4. '=torch' → logprob: -8.466703414916992
    5. '=None' → logprob: -8.841703414916992
    6. '=n' → logprob: -10.466703414916992
    7. '=d' → logprob: -10.466703414916992
    8. ')' → logprob: -11.466703414916992
    9. '=float' → logprob: -11.591703414916992
    10. '=tf' → logprob: -11.591703414916992

Token 113: '.int' (ID: 21499)
  Prédit: '.int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.int' → logprob: -0.07025973498821259
    2. '.uint' → logprob: -2.6952598094940186
    3. '.' → logprob: -8.445260047912598
    4. 'int' → logprob: -9.945260047912598
    5. '.float' → logprob: -10.695260047912598
    6. '.ndarray' → logprob: -11.320260047912598
    7. '.dtype' → logprob: -12.320260047912598
    8. '.bool' → logprob: -12.320260047912598
    9. 'uint' → logprob: -12.570260047912598
    10. '=int' → logprob: -12.945260047912598

Token 114: '64' (ID: 2220)
  Prédit: '32'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '32' → logprob: -0.043812576681375504
    2. '64' → logprob: -3.1688125133514404
    3. 'p' → logprob: -7.1688127517700195
    4. 'er' → logprob: -11.04381275177002
    5. 'eger' → logprob: -11.54381275177002
    6. 'c' → logprob: -11.66881275177002
    7. '6' → logprob: -12.79381275177002
    8. '_' → logprob: -13.41881275177002
    9. 'e' → logprob: -13.54381275177002
    10. ')' → logprob: -14.79381275177002

Token 115: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08943001180887222
    2. ')' → logprob: -2.464430093765259
    3. '):
' → logprob: -7.71442985534668
    4. '):
' → logprob: -11.33942985534668
    5. ' ):' → logprob: -11.58942985534668
    6. ',' → logprob: -11.71442985534668
    7. '),' → logprob: -12.58942985534668
    8. '):

' → logprob: -13.33942985534668
    9. ' )' → logprob: -13.33942985534668
    10. ')):' → logprob: -13.58942985534668

Token 116: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010628211311995983
    2. ' return' → logprob: -7.001062870025635
    3. 'return' → logprob: -9.001062393188477
    4. '	return' → logprob: -10.626062393188477
    5. '
' → logprob: -14.376062393188477
    6. '    
' → logprob: -14.501062393188477
    7. ' ' → logprob: -14.876062393188477
    8. '  ' → logprob: -14.876062393188477
    9. 'def' → logprob: -14.876062393188477
    10. '(' → logprob: -15.126062393188477

Token 117: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27716565132141113
    2. 'return' (adapté à ' return') → logprob: -1.5271656513214111
    3. ' return' → logprob: -3.777165651321411
    4. 'np' → logprob: -6.277165412902832
    5. ' np' → logprob: -8.902165412902832
    6. '	return' → logprob: -11.402165412902832
    7. ' ' → logprob: -13.152165412902832
    8. 'def' → logprob: -13.527165412902832
    9. '```' → logprob: -13.527165412902832
    10. '  ' → logprob: -13.652165412902832

Token 118: ' np' (ID: 5374)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.029752571135759354
    2. ' np' → logprob: -3.529752492904663
    3. '   ' → logprob: -13.904752731323242
    4. '(np' → logprob: -14.279752731323242
    5. 'numpy' → logprob: -15.279752731323242
    6. '=np' → logprob: -16.029752731323242
    7. '```' → logprob: -16.779752731323242
    8. '[np' → logprob: -17.654752731323242
    9. ',np' → logprob: -17.654752731323242
    10. ' ' → logprob: -17.904752731323242

Token 119: '.arange' (ID: 57220)
  Prédit: '.arange'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.arange' → logprob: -8.895480277715251e-06
    2. '.' → logprob: -12.750008583068848
    3. '.linspace' → logprob: -12.875008583068848
    4. '.ar' → logprob: -13.250008583068848
    5. '.ndarray' → logprob: -14.750008583068848
    6. ' .' → logprob: -14.750008583068848
    7. 'ar' → logprob: -14.875008583068848
    8. '.asarray' → logprob: -15.750008583068848
    9. '.arr' → logprob: -16.125009536743164
    10. '.zeros' → logprob: -16.250009536743164

Token 120: '(U' (ID: 27452)
  Prédit: '(U'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(U' → logprob: -0.06198841333389282
    2. '(' → logprob: -2.811988353729248
    3. '(
' → logprob: -11.186988830566406
    4. '(I' → logprob: -12.811988830566406
    5. '(UI' → logprob: -14.311988830566406
    6. '<|end|>' → logprob: -14.436988830566406
    7. '(

' → logprob: -14.561988830566406
    8. '((' → logprob: -14.936988830566406
    9. '(N' → logprob: -15.561988830566406
    10. ')' → logprob: -15.561988830566406

Token 121: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04088271036744118
    2. ')' → logprob: -3.2908828258514404
    3. ',d' → logprob: -5.915882587432861
    4. ' ,' → logprob: -9.41588306427002
    5. 'dtype' → logprob: -9.91588306427002
    6. ' )' → logprob: -13.16588306427002
    7. ' dtype' → logprob: -13.29088306427002
    8. ')d' → logprob: -13.66588306427002
    9. '),' → logprob: -14.29088306427002
    10. '   ' → logprob: -14.41588306427002

Token 122: ' dtype' (ID: 29770)
  Prédit: 'dtype'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dtype' → logprob: -0.31333011388778687
    2. ' dtype' → logprob: -1.3133301734924316
    3. ')' → logprob: -9.938329696655273
    4. ' ' → logprob: -11.813329696655273
    5. '(dtype' → logprob: -13.188329696655273
    6. 'd' → logprob: -13.188329696655273
    7. ' step' → logprob: -13.563329696655273
    8. '1' → logprob: -13.813329696655273
    9. ' )' → logprob: -13.938329696655273
    10. ' U' → logprob: -14.188329696655273

Token 123: '=d' (ID: 56413)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.40769290924072266
    2. '=np' → logprob: -1.1576929092407227
    3. '=d' → logprob: -3.9076929092407227
    4. '=n' → logprob: -8.657692909240723
    5. '=
' → logprob: -8.782692909240723
    6. '=int' → logprob: -9.532692909240723
    7. ')=' → logprob: -10.032692909240723
    8. ')' → logprob: -10.782692909240723
    9. 'dtype' → logprob: -11.657692909240723
    10. '=torch' → logprob: -11.782692909240723

Token 124: 'type' (ID: 2493)
  Prédit: 'type'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'type' → logprob: -2.081584716506768e-05
    2. 't' → logprob: -12.000020980834961
    3. 'ype' → logprob: -12.125020980834961
    4. 'dtype' → logprob: -12.375020980834961
    5. 'Type' → logprob: -13.375020980834961
    6. 'at' → logprob: -14.500020980834961
    7. 'ty' → logprob: -14.750020980834961
    8. 'typ' → logprob: -14.750020980834961
    9. '```' → logprob: -14.750020980834961
    10. 'types' → logprob: -15.000020980834961

Token 125: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2664456789934775e-06
    2. ' )' → logprob: -13.750000953674316
    3. ')
' → logprob: -16.375001907348633
    4. '))' → logprob: -17.375001907348633
    5. '),' → logprob: -17.500001907348633
    6. ')#' → logprob: -18.250001907348633
    7. ').' → logprob: -18.750001907348633
    8. ')}' → logprob: -18.750001907348633
    9. ')return' → logprob: -18.750001907348633
    10. '())' → logprob: -19.125001907348633

Token 126: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1881546527147293
    2. '<|end|>' → logprob: -1.938154697418213
    3. '
' → logprob: -4.063154697418213
    4. '<|end|>' → logprob: -5.813154697418213
    5. '```' → logprob: -5.938154697418213
    6. ')' → logprob: -6.813154697418213
    7. '#' → logprob: -6.938154697418213
    8. '[' → logprob: -7.188154697418213
    9. '

' → logprob: -8.063154220581055
    10. '\n' → logprob: -8.438154220581055

Token 127: ' resize' (ID: 40625)
  Prédit: ' as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' as' → logprob: -1.546781301498413
    2. ' main' → logprob: -1.546781301498413
    3. ' solve' → logprob: -2.296781301498413
    4. ' get' → logprob: -2.546781301498413
    5. ' count' → logprob: -3.046781301498413
    6. ' bit' → logprob: -3.296781301498413
    7. ' sieve' → logprob: -3.796781301498413
    8. ' factorial' → logprob: -4.171781539916992
    9. ' initialize' → logprob: -4.296781539916992
    10. ' make' → logprob: -4.296781539916992

Token 128: '_arr' (ID: 25121)
  Prédit: '_array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_array' → logprob: -0.68723064661026
    2. '_' → logprob: -1.6872305870056152
    3. '(' → logprob: -2.0622305870056152
    4. '(arr' → logprob: -2.1872305870056152
    5. '_(' → logprob: -4.062230587005615
    6. '(U' → logprob: -4.187230587005615
    7. '_arr' → logprob: -4.687230587005615
    8. '(array' → logprob: -4.937230587005615
    9. '_arrays' → logprob: -5.937230587005615
    10. '(np' → logprob: -6.187230587005615

Token 129: '(arr' (ID: 19646)
  Prédit: '(arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(arr' → logprob: -0.0024678094778209925
    2. '(array' → logprob: -6.627467632293701
    3. '(' → logprob: -7.752467632293701
    4. '(a' → logprob: -7.877467632293701
    5. '(size' → logprob: -8.75246810913086
    6. '_(' → logprob: -9.62746810913086
    7. ' (' → logprob: -10.50246810913086
    8. '(ar' → logprob: -10.87746810913086
    9. '(A' → logprob: -11.00246810913086
    10. '(name' → logprob: -11.62746810913086

Token 130: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013369438238441944
    2. ' ,' → logprob: -9.125133514404297
    3. ',new' → logprob: -11.750133514404297
    4. ',size' → logprob: -11.750133514404297
    5. ',n' → logprob: -13.375133514404297
    6. '):' → logprob: -13.750133514404297
    7. ',len' → logprob: -14.250133514404297
    8. '   ' → logprob: -14.375133514404297
    9. '_,' → logprob: -14.500133514404297
    10. ' ' → logprob: -14.500133514404297

Token 131: ' L' (ID: 451)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.32481175661087036
    2. ' new' → logprob: -1.9498116970062256
    3. 'size' → logprob: -2.4498116970062256
    4. ' size' → logprob: -4.074811935424805
    5. 'U' → logprob: -4.699811935424805
    6. 'N' → logprob: -5.074811935424805
    7. 'n' → logprob: -5.574811935424805
    8. 'length' → logprob: -5.824811935424805
    9. 'shape' → logprob: -5.949811935424805
    10. ' U' → logprob: -6.074811935424805

Token 132: 'sq' (ID: 57619)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07911285012960434
    2. '):
' → logprob: -3.0791127681732178
    3. '):' → logprob: -3.5791127681732178
    4. 'ength' → logprob: -7.704113006591797
    5. '=' → logprob: -8.079113006591797
    6. ')' → logprob: -8.204113006591797
    7. 'en' → logprob: -8.329113006591797
    8. ' ,' → logprob: -8.579113006591797
    9. '):

' → logprob: -8.954113006591797
    10. '):
' → logprob: -9.079113006591797

Token 133: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6206040382385254
    2. '):
' → logprob: -1.1206040382385254
    3. ',' → logprob: -2.7456040382385254
    4. 'u' → logprob: -2.7456040382385254
    5. '=' → logprob: -5.870604038238525
    6. 'U' → logprob: -6.495604038238525
    7. '):
' → logprob: -6.995604038238525
    8. '):

' → logprob: -7.120604038238525
    9. ')' → logprob: -7.495604038238525
    10. 'uar' → logprob: -8.745603561401367

Token 134: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006277028471231461
    2. '):' → logprob: -6.131277084350586
    3. '):
' → logprob: -6.506277084350586
    4. ',' → logprob: -7.006277084350586
    5. ':' → logprob: -7.256277084350586
    6. ':
' → logprob: -7.756277084350586
    7. ' arr' → logprob: -9.131277084350586
    8. 'arr' → logprob: -9.256277084350586
    9. '(arr' → logprob: -9.256277084350586
    10. '    
' → logprob: -9.756277084350586

Token 135: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14808346331119537
    2. 'return' (adapté à ' return') → logprob: -2.773083448410034
    3. ' return' → logprob: -2.773083448410034
    4. 'arr' → logprob: -5.148083686828613
    5. ' arr' → logprob: -6.648083686828613
    6. '    
' → logprob: -6.898083686828613
    7. ' new' → logprob: -7.398083686828613
    8. '
' → logprob: -7.523083686828613
    9. 'new' → logprob: -7.523083686828613
    10. '    ' → logprob: -7.773083686828613

Token 136: ' np' (ID: 5374)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.2861038148403168
    2. ' np' → logprob: -1.4111038446426392
    3. 'arr' → logprob: -5.91110372543335
    4. ' ' → logprob: -6.91110372543335
    5. ' arr' → logprob: -7.03610372543335
    6. '   ' → logprob: -8.536104202270508
    7. '  ' → logprob: -9.661104202270508
    8. '(np' → logprob: -10.161104202270508
    9. 'numpy' → logprob: -11.786104202270508
    10. ' numpy' → logprob: -11.786104202270508

Token 137: '.resize' (ID: 39698)
  Prédit: '.resize'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.resize' → logprob: -0.00012737659562844783
    2. '.pad' → logprob: -9.375127792358398
    3. '.concatenate' → logprob: -10.750127792358398
    4. '.append' → logprob: -12.125127792358398
    5. '.reshape' → logprob: -12.375127792358398
    6. '.zeros' → logprob: -12.625127792358398
    7. 'resize' → logprob: -12.875127792358398
    8. '.repeat' → logprob: -13.000127792358398
    9. '.' → logprob: -13.500127792358398
    10. '.copy' → logprob: -13.875127792358398

Token 138: '(arr' (ID: 19646)
  Prédit: '(arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(arr' → logprob: -3.4121114822482923e-06
    2. '(' → logprob: -13.250003814697266
    3. 'arr' → logprob: -13.875003814697266
    4. '<arr' → logprob: -15.500003814697266
    5. '[arr' → logprob: -15.625003814697266
    6. '(array' → logprob: -16.375003814697266
    7. '_arr' → logprob: -16.375003814697266
    8. '	arr' → logprob: -16.875003814697266
    9. '$arr' → logprob: -17.000003814697266
    10. ' arr' → logprob: -18.500003814697266

Token 139: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007570966263301671
    2. ',(' → logprob: -7.250757217407227
    3. ' ,' → logprob: -10.625757217407227
    4. ',L' → logprob: -11.250757217407227
    5. '(' → logprob: -12.000757217407227
    6. ',size' → logprob: -13.875757217407227
    7. ',len' → logprob: -14.750757217407227
    8. '(arr' → logprob: -15.000757217407227
    9. ',length' → logprob: -15.000757217407227
    10. ' (' → logprob: -15.125757217407227

Token 140: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.2467115819454193
    2. ' L' → logprob: -1.7467116117477417
    3. '(L' → logprob: -3.371711492538452
    4. ' (' → logprob: -4.746711730957031
    5. '(' → logprob: -6.871711730957031
    6. ')' → logprob: -9.621711730957031
    7. '   ' → logprob: -10.121711730957031
    8. '[L' → logprob: -10.371711730957031
    9. ')L' → logprob: -10.871711730957031
    10. ' ' → logprob: -10.871711730957031

Token 141: 'sq' (ID: 57619)
  Prédit: 'sq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sq' → logprob: -3.5120287066092715e-05
    2. ')' → logprob: -11.875035285949707
    3. 's' → logprob: -12.125035285949707
    4. '   ' → logprob: -12.625035285949707
    5. '_sq' → logprob: -12.625035285949707
    6. '(s' → logprob: -12.875035285949707
    7. '[' → logprob: -12.875035285949707
    8. '[s' → logprob: -13.000035285949707
    9. ')s' → logprob: -13.375035285949707
    10. ' sq' → logprob: -13.875035285949707

Token 142: ' **' (ID: 6240)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.60414821645827e-06
    2. '))' → logprob: -14.000004768371582
    3. ' )' → logprob: -14.250004768371582
    4. ',' → logprob: -14.375004768371582
    5. ')
' → logprob: -14.375004768371582
    6. '),' → logprob: -14.500004768371582
    7. '[' → logprob: -15.000004768371582
    8. '*' → logprob: -15.125004768371582
    9. '+' → logprob: -15.875004768371582
    10. ',)' → logprob: -15.875004768371582

Token 143: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0025518848560750484
    2. ' ' → logprob: -6.002552032470703
    3. ')' → logprob: -10.377552032470703
    4. '  ' → logprob: -11.252552032470703
    5. '3' → logprob: -11.752552032470703
    6. '4' → logprob: -12.127552032470703
    7. '(' → logprob: -12.377552032470703
    8. '<|end|>' → logprob: -12.877552032470703
    9. '0' → logprob: -13.252552032470703
    10. ',' → logprob: -13.252552032470703

Token 144: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.097437315271236e-05
    2. ' ' → logprob: -11.25005054473877
    3. '3' → logprob: -11.37505054473877
    4. '1' → logprob: -12.00005054473877
    5. '(' → logprob: -12.25005054473877
    6. '0' → logprob: -12.50005054473877
    7. ')' → logprob: -12.62505054473877
    8. '4' → logprob: -12.62505054473877
    9. '6' → logprob: -13.68755054473877
    10. '```' → logprob: -13.93755054473877

Token 145: ').' (ID: 741)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ' )' → logprob: -15.375
    3. ')
' → logprob: -16.625
    4. '))' → logprob: -16.75
    5. '   ' → logprob: -17.5
    6. '),' → logprob: -17.75
    7. ')`' → logprob: -18.5
    8. ')#' → logprob: -19.25
    9. ').' → logprob: -19.75
    10. '())' → logprob: -19.875

Token 146: 'reshape' (ID: 37466)
  Prédit: 'reshape'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reshape' → logprob: -0.0069784484803676605
    2. 'copy' → logprob: -5.756978511810303
    3. 'tolist' → logprob: -6.381978511810303
    4. 'flatten' → logprob: -6.631978511810303
    5. 'astype' → logprob: -7.631978511810303
    6. ' reshape' → logprob: -8.631978034973145
    7. 'shape' → logprob: -9.881978034973145
    8. 'flat' → logprob: -10.506978034973145
    9. 'r' → logprob: -11.256978034973145
    10. '.reshape' → logprob: -11.381978034973145

Token 147: '(L' (ID: 11075)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.19276991486549377
    2. '(' → logprob: -1.9427698850631714
    3. '(L' → logprob: -3.442770004272461
    4. '(-' → logprob: -11.317770004272461
    5. '(
' → logprob: -12.317770004272461
    6. '<|end|>' → logprob: -12.567770004272461
    7. '(len' → logprob: -12.692770004272461
    8. ' (' → logprob: -13.067770004272461
    9. '(N' → logprob: -13.192770004272461
    10. '(arr' → logprob: -13.317770004272461

Token 148: 'sq' (ID: 57619)
  Prédit: 'sq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sq' → logprob: -3.1782583391759545e-05
    2. '_sq' → logprob: -10.500031471252441
    3. 's' → logprob: -12.625031471252441
    4. ' sq' → logprob: -14.375031471252441
    5. 'square' → logprob: -16.500032424926758
    6. 'q' → logprob: -16.500032424926758
    7. '   ' → logprob: -16.750032424926758
    8. '[' → logprob: -17.125032424926758
    9. 'sql' → logprob: -17.500032424926758
    10. ',' → logprob: -17.500032424926758

Token 149: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013262155698612332
    2. ' ,' → logprob: -9.12513256072998
    3. ',L' → logprob: -10.75013256072998
    4. ')' → logprob: -14.37513256072998
    5. ',int' → logprob: -15.12513256072998
    6. ',
' → logprob: -15.12513256072998
    7. ',N' → logprob: -16.000133514404297
    8. ',n' → logprob: -16.250133514404297
    9. ',l' → logprob: -16.375133514404297
    10. '```' → logprob: -16.375133514404297

Token 150: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.012536493130028248
    2. ' L' → logprob: -4.387536525726318
    3. '	L' → logprob: -12.01253604888916
    4. 'Ls' → logprob: -12.01253604888916
    5. '   ' → logprob: -12.26253604888916
    6. ' ' → logprob: -12.63753604888916
    7. ' ' → logprob: -13.26253604888916
    8. '  ' → logprob: -14.01253604888916
    9. ')L' → logprob: -14.51253604888916
    10. '```' → logprob: -14.76253604888916

Token 151: 'sq' (ID: 57619)
  Prédit: 'sq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sq' → logprob: -8.673547563375905e-05
    2. ')' → logprob: -9.375086784362793
    3. '_sq' → logprob: -14.625086784362793
    4. 's' → logprob: -14.875086784362793
    5. ')**' → logprob: -15.250086784362793
    6. '```' → logprob: -16.125085830688477
    7. ')s' → logprob: -16.250085830688477
    8. 'q' → logprob: -16.750085830688477
    9. ' sq' → logprob: -16.875085830688477
    10. '**' → logprob: -17.000085830688477

Token 152: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ' )' → logprob: -16.0
    3. '))' → logprob: -16.75
    4. ')
' → logprob: -16.875
    5. '),' → logprob: -17.875
    6. ')`' → logprob: -17.875
    7. '   ' → logprob: -18.625
    8. ').' → logprob: -19.375
    9. ',)' → logprob: -19.5
    10. ')#' → logprob: -19.75

Token 153: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08161051571369171
    2. '<|end|>' → logprob: -2.8316104412078857
    3. '
' → logprob: -4.331610679626465
    4. '```' → logprob: -6.456610679626465
    5. '#' → logprob: -6.581610679626465
    6. '<|end|>' → logprob: -6.581610679626465
    7. 'import' → logprob: -7.706610679626465
    8. 'class' → logprob: -8.081610679626465
    9. ')' → logprob: -8.331610679626465
    10. '[' → logprob: -8.706610679626465

Token 154: ' cum' (ID: 10023)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.8542819619178772
    2. ' get' → logprob: -2.1042819023132324
    3. ' solve' → logprob: -2.4792819023132324
    4. ' bit' → logprob: -3.2292819023132324
    5. ' is' → logprob: -3.7292819023132324
    6. ' parse' → logprob: -3.7292819023132324
    7. ' read' → logprob: -3.8542819023132324
    8. ' as' → logprob: -3.8542819023132324
    9. ' np' → logprob: -3.9792819023132324
    10. ' resize' → logprob: -4.104281902313232

Token 155: 'prod' (ID: 36781)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.03758130967617035
    2. 'u' → logprob: -4.787581443786621
    3. 'ulative' → logprob: -4.912581443786621
    4. 'ulate' → logprob: -5.162581443786621
    5. 'mul' → logprob: -5.537581443786621
    6. '_sum' → logprob: -5.662581443786621
    7. 'um' → logprob: -6.162581443786621
    8. 'l' → logprob: -6.662581443786621
    9. 'ul' → logprob: -6.787581443786621
    10. 'prod' → logprob: -7.287581443786621

Token 156: '(arr' (ID: 19646)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4608477056026459
    2. '(' → logprob: -1.4608477354049683
    3. '_array' → logprob: -3.2108476161956787
    4. '_arr' → logprob: -3.4608476161956787
    5. '(arr' → logprob: -3.4608476161956787
    6. '_numpy' → logprob: -4.710847854614258
    7. '(_' → logprob: -5.960847854614258
    8. '(np' → logprob: -6.085847854614258
    9. '_np' → logprob: -6.460847854614258
    10. '_s' → logprob: -6.585847854614258

Token 157: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001573544810526073
    2. '(arr' → logprob: -7.00157356262207
    3. '):' → logprob: -8.12657356262207
    4. ')' → logprob: -9.25157356262207
    5. '):
' → logprob: -9.62657356262207
    6. ' ,' → logprob: -10.00157356262207
    7. 'arr' → logprob: -10.62657356262207
    8. '   ' → logprob: -10.87657356262207
    9. ',
' → logprob: -10.87657356262207
    10. ',array' → logprob: -10.87657356262207

Token 158: ' MOD' (ID: 32868)
  Prédit: 'axis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'axis' → logprob: -0.09286782145500183
    2. ' axis' → logprob: -2.967867851257324
    3. 'dtype' → logprob: -3.842867851257324
    4. ')' → logprob: -4.342867851257324
    5. ' dtype' → logprob: -7.217867851257324
    6. 'int' → logprob: -7.217867851257324
    7. '0' → logprob: -7.967867851257324
    8. '   ' → logprob: -8.467867851257324
    9. 'initial' → logprob: -8.467867851257324
    10. '1' → logprob: -8.967867851257324

Token 159: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3197357654571533
    2. ',' → logprob: -1.8197357654571533
    3. '):
' → logprob: -2.1947357654571533
    4. '):
' → logprob: -9.444735527038574
    5. ' ):' → logprob: -9.944735527038574
    6. ')' → logprob: -10.569735527038574
    7. ',
' → logprob: -11.444735527038574
    8. '=' → logprob: -11.569735527038574
    9. '):

' → logprob: -11.944735527038574
    10. ' ,' → logprob: -12.194735527038574

Token 160: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05955057591199875
    2. 'np' → logprob: -3.6845505237579346
    3. '(np' → logprob: -4.059550762176514
    4. ':' → logprob: -5.184550762176514
    5. '(' → logprob: -5.809550762176514
    6. ' np' → logprob: -6.434550762176514
    7. '(arr' → logprob: -6.559550762176514
    8. ',' → logprob: -6.684550762176514
    9. 'arr' → logprob: -7.434550762176514
    10. 'return' → logprob: -7.684550762176514

Token 161: ' L' (ID: 451)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.8800086379051208
    2. 'return' → logprob: -1.1300086975097656
    3. '   ' → logprob: -1.8800086975097656
    4. 'arr' → logprob: -3.1300086975097656
    5. 'res' → logprob: -3.2550086975097656
    6. 'out' → logprob: -4.880008697509766
    7. '(np' → logprob: -5.130008697509766
    8. 'result' → logprob: -5.255008697509766
    9. 'ret' → logprob: -5.880008697509766
    10. 'def' → logprob: -6.505008697509766

Token 162: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3751366138458252
    2. '=' → logprob: -1.7501366138458252
    3. 'sq' → logprob: -2.625136613845825
    4. '_sq' → logprob: -3.375136613845825
    5. ',' → logprob: -4.500136375427246
    6. '=np' → logprob: -5.375136375427246
    7. 'arr' → logprob: -5.625136375427246
    8. '**' → logprob: -5.750136375427246
    9. '_arr' → logprob: -5.750136375427246
    10. '   ' → logprob: -6.000136375427246

Token 163: ' len' (ID: 4631)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.1291002631187439
    2. 'len' → logprob: -2.2541003227233887
    3. ' arr' → logprob: -4.379100322723389
    4. ' len' → logprob: -5.629100322723389
    5. 'int' → logprob: -12.50409984588623
    6. 'np' → logprob: -12.62909984588623
    7. '   ' → logprob: -13.00409984588623
    8. ' ' → logprob: -13.25409984588623
    9. '(arr' → logprob: -13.25409984588623
    10. '(len' → logprob: -13.50409984588623

Token 164: '(arr' (ID: 19646)
  Prédit: '(arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(arr' → logprob: -1.27099974633893e-05
    2. 'arr' → logprob: -11.375012397766113
    3. '(' → logprob: -13.750012397766113
    4. '(
' → logprob: -17.12501335144043
    5. ' arr' → logprob: -17.37501335144043
    6. '[arr' → logprob: -17.37501335144043
    7. '<arr' → logprob: -17.75001335144043
    8. '	arr' → logprob: -17.87501335144043
    9. ' (' → logprob: -19.00001335144043
    10. '_arr' → logprob: -19.37501335144043

Token 165: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5760507583618164
    2. ')
' → logprob: -0.8260507583618164
    3. '   ' → logprob: -10.326050758361816
    4. ')
' → logprob: -10.451050758361816
    5. ')

' → logprob: -11.076050758361816
    6. ' )
' → logprob: -11.451050758361816
    7. ' )' → logprob: -11.826050758361816
    8. ');' → logprob: -12.951050758361816
    9. ')`' → logprob: -13.451050758361816
    10. ',' → logprob: -13.576050758361816

Token 166: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48668015003204346
    2. '
' → logprob: -1.1116801500320435
    3. '    
' → logprob: -3.111680030822754
    4. ',' → logprob: -5.486680030822754
    5. 'def' → logprob: -6.111680030822754
    6. 'arr' → logprob: -6.736680030822754
    7. ',
' → logprob: -7.486680030822754
    8. ')' → logprob: -7.611680030822754
    9. ')
' → logprob: -7.736680030822754
    10. ' =' → logprob: -7.861680030822754

Token 167: ' L' (ID: 451)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.1870729774236679
    2. 'result' → logprob: -2.937072992324829
    3. 'out' → logprob: -3.062072992324829
    4. 'cum' → logprob: -3.437072992324829
    5. 'cp' → logprob: -4.31207275390625
    6. 'ret' → logprob: -4.93707275390625
    7. 'dp' → logprob: -5.06207275390625
    8. 'arr' → logprob: -5.31207275390625
    9. 'prod' → logprob: -6.31207275390625
    10. 'c' → logprob: -6.81207275390625

Token 168: 'sq' (ID: 57619)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.30594009160995483
    2. ' =' → logprob: -1.8059401512145996
    3. '-' → logprob: -2.5559401512145996
    4. ' -' → logprob: -4.4309401512146
    5. ',' → logprob: -5.4309401512146
    6. '*' → logprob: -6.3059401512146
    7. ' ' → logprob: -7.3059401512146
    8. '   ' → logprob: -7.4309401512146
    9. ')' → logprob: -7.6809401512146
    10. '+' → logprob: -7.8059401512146

Token 169: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31333959102630615
    2. ' =' → logprob: -1.3133395910263062
    3. ' ' → logprob: -9.563339233398438
    4. ',' → logprob: -12.813339233398438
    5. '**' → logprob: -13.563339233398438
    6. '   ' → logprob: -13.813339233398438
    7. '=int' → logprob: -13.938339233398438
    8. '  ' → logprob: -14.313339233398438
    9. 'sq' → logprob: -14.938339233398438
    10. 's' → logprob: -15.188339233398438

Token 170: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.008657358586788177
    2. ' int' → logprob: -4.758657455444336
    3. 'len' → logprob: -11.258657455444336
    4. '   ' → logprob: -11.633657455444336
    5. '(int' → logprob: -11.758657455444336
    6. 'L' → logprob: -12.133657455444336
    7. ' ' → logprob: -12.508657455444336
    8. '  ' → logprob: -13.758657455444336
    9. 'is' → logprob: -14.008657455444336
    10. 'np' → logprob: -14.133657455444336

Token 171: '(L' (ID: 11075)
  Prédit: '(L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.4543214440345764
    2. '(np' → logprob: -1.7043213844299316
    3. '(len' → logprob: -1.7043213844299316
    4. 'np' → logprob: -7.204321384429932
    5. 'len' → logprob: -7.704321384429932
    6. '(arr' → logprob: -9.57932186126709
    7. 'arr' → logprob: -10.57932186126709
    8. 'L' → logprob: -10.95432186126709
    9. '(' → logprob: -11.20432186126709
    10. '((' → logprob: -12.07932186126709

Token 172: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.001059486996382475
    2. ' **' → logprob: -6.876059532165527
    3. '*' → logprob: -10.751059532165527
    4. '(' → logprob: -12.876059532165527
    5. '0' → logprob: -13.751059532165527
    6. ' ' → logprob: -13.876059532165527
    7. ')' → logprob: -16.00105857849121
    8. ')**' → logprob: -16.12605857849121
    9. 'arr' → logprob: -16.62605857849121
    10. ' *' → logprob: -16.62605857849121

Token 173: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001349518890492618
    2. '.' → logprob: -6.626349449157715
    3. ' ' → logprob: -11.001349449157715
    4. '(' → logprob: -12.001349449157715
    5. '   ' → logprob: -15.501349449157715
    6. '-' → logprob: -16.25135040283203
    7. '2' → logprob: -16.50135040283203
    8. ' .' → logprob: -16.62635040283203
    9. ',' → logprob: -16.75135040283203
    10. '{' → logprob: -17.18885040283203

Token 174: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002536782529205084
    2. '.' → logprob: -6.002536773681641
    3. '(' → logprob: -10.37753677368164
    4. ' ' → logprob: -10.50253677368164
    5. '2' → logprob: -13.75253677368164
    6. '   ' → logprob: -14.87753677368164
    7. ',' → logprob: -15.25253677368164
    8. ' .' → logprob: -15.87753677368164
    9. '-' → logprob: -16.12753677368164
    10. '{' → logprob: -16.37753677368164

Token 175: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.005273361224681139
    2. '0' → logprob: -5.255273342132568
    3. '2' → logprob: -11.630273818969727
    4. ' ' → logprob: -11.755273818969727
    5. '(' → logprob: -11.880273818969727
    6. ' .' → logprob: -11.880273818969727
    7. '5' → logprob: -12.380273818969727
    8. '1' → logprob: -12.880273818969727
    9. '```' → logprob: -15.005273818969727
    10. '**' → logprob: -15.130273818969727

Token 176: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -3.054500666621607e-06
    2. '.' → logprob: -13.75000286102295
    3. '   ' → logprob: -15.12500286102295
    4. '75' → logprob: -15.43750286102295
    5. '25' → logprob: -15.56250286102295
    6. '```' → logprob: -15.56250286102295
    7. '4' → logprob: -16.062503814697266
    8. '6' → logprob: -16.062503814697266
    9. '05' → logprob: -16.312503814697266
    10. ' ' → logprob: -16.437503814697266

Token 177: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.022235849872231483
    2. ')
' → logprob: -4.022235870361328
    3. ')+' → logprob: -5.522235870361328
    4. '+' → logprob: -9.897235870361328
    5. ')

' → logprob: -11.147235870361328
    6. '   ' → logprob: -11.897235870361328
    7. ' )' → logprob: -12.522235870361328
    8. ')
' → logprob: -12.897235870361328
    9. ' +' → logprob: -14.397235870361328
    10. ' )
' → logprob: -15.147235870361328

Token 178: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03709230571985245
    2. ' ' → logprob: -3.7870922088623047
    3. '0' → logprob: -4.287092208862305
    4. '   ' → logprob: -13.287092208862305
    5. '-' → logprob: -13.412092208862305
    6. '  ' → logprob: -14.287092208862305
    7. '+' → logprob: -14.287092208862305
    8. '.' → logprob: -14.537092208862305
    9. '2' → logprob: -14.662092208862305
    10. '5' → logprob: -15.037092208862305

Token 179: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002070683054625988
    2. '0' → logprob: -6.252070903778076
    3. ' ' → logprob: -8.877070426940918
    4. '-' → logprob: -14.127070426940918
    5. '2' → logprob: -14.877070426940918
    6. '.' → logprob: -14.877070426940918
    7. '   ' → logprob: -15.127070426940918
    8. '5' → logprob: -15.502070426940918
    9. '{' → logprob: -16.252071380615234
    10. ')' → logprob: -16.752071380615234

Token 180: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20181967318058014
    2. ')
' → logprob: -1.701819658279419
    3. ')

' → logprob: -7.951819896697998
    4. ')
' → logprob: -10.57681941986084
    5. ' )' → logprob: -11.07681941986084
    6. ' )
' → logprob: -11.70181941986084
    7. '   ' → logprob: -13.57681941986084
    8. '
' → logprob: -14.57681941986084
    9. '))' → logprob: -14.70181941986084
    10. '),' → logprob: -15.07681941986084

Token 181: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6423889398574829
    2. '
' → logprob: -0.8923889398574829
    3. '    
' → logprob: -2.8923888206481934
    4. '  
' → logprob: -6.642388820648193
    5. ')' → logprob: -6.767388820648193
    6. ',
' → logprob: -6.767388820648193
    7. ' 
' → logprob: -6.892388820648193
    8. ',' → logprob: -7.142388820648193
    9. '\n' → logprob: -7.517388820648193
    10. '	
' → logprob: -7.517388820648193

Token 182: ' arr' (ID: 1724)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.022538423538208
    2. 'res' → logprob: -1.022538423538208
    3. 'cum' → logprob: -2.397538423538208
    4. 'arr' (adapté à ' arr') → logprob: -3.147538423538208
    5. 'out' → logprob: -3.272538423538208
    6. ' res' → logprob: -3.772538423538208
    7. 'c' → logprob: -3.772538423538208
    8. 'result' → logprob: -3.772538423538208
    9. 'dp' → logprob: -4.522538185119629
    10. 'ret' → logprob: -4.772538185119629

Token 183: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01055535301566124
    2. ' =' → logprob: -4.635555267333984
    3. '=c' → logprob: -7.510555267333984
    4. '=np' → logprob: -9.760555267333984
    5. '[' → logprob: -10.010555267333984
    6. '[:]' → logprob: -10.135555267333984
    7. '[:' → logprob: -10.635555267333984
    8. '*=' → logprob: -10.885555267333984
    9. '%=' → logprob: -11.010555267333984
    10. '.c' → logprob: -11.260555267333984

Token 184: ' resize' (ID: 40625)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.6960321068763733
    2. 'arr' → logprob: -0.9460321068763733
    3. ' np' → logprob: -2.5710320472717285
    4. ' arr' → logprob: -3.5710320472717285
    5. '(np' → logprob: -5.4460320472717285
    6. '(arr' → logprob: -5.6960320472717285
    7. 'resize' → logprob: -7.6960320472717285
    8. ' (' → logprob: -8.321032524108887
    9. '(' → logprob: -9.821032524108887
    10. 'cum' → logprob: -10.321032524108887

Token 185: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -1.4259644558478612e-05
    2. '(arr' → logprob: -11.750014305114746
    3. 'arr' → logprob: -12.000014305114746
    4. '	arr' → logprob: -17.00001335144043
    5. '_' → logprob: -17.75001335144043
    6. '<arr' → logprob: -18.12501335144043
    7. '$arr' → logprob: -18.25001335144043
    8. 'Arr' → logprob: -18.50001335144043
    9. '```' → logprob: -18.62501335144043
    10. '_ar' → logprob: -18.75001335144043

Token 186: '(arr' (ID: 19646)
  Prédit: '(arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(arr' → logprob: -1.5048530030981055e-06
    2. 'arr' → logprob: -13.625001907348633
    3. '(' → logprob: -16.125001907348633
    4. '(
' → logprob: -16.875001907348633
    5. '<arr' → logprob: -17.000001907348633
    6. '[arr' → logprob: -17.250001907348633
    7. '	arr' → logprob: -17.375001907348633
    8. ' arr' → logprob: -17.875001907348633
    9. ' (' → logprob: -19.000001907348633
    10. '$arr' → logprob: -19.750001907348633

Token 187: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007510208524763584
    2. '(arr' → logprob: -7.37575101852417
    3. ' ,' → logprob: -9.500751495361328
    4. 'arr' → logprob: -10.750751495361328
    5. '   ' → logprob: -11.750751495361328
    6. ')' → logprob: -12.250751495361328
    7. '[arr' → logprob: -12.250751495361328
    8. ',
' → logprob: -12.625751495361328
    9. '(' → logprob: -13.125751495361328
    10. '),' → logprob: -13.500751495361328

Token 188: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.001170460251159966
    2. ' L' → logprob: -6.751170635223389
    3. '   ' → logprob: -16.376171112060547
    4. '	L' → logprob: -16.626171112060547
    5. '(L' → logprob: -18.126171112060547
    6. ')L' → logprob: -18.376171112060547
    7. '
' → logprob: -18.501171112060547
    8. '    ' → logprob: -18.876171112060547
    9. 'Ls' → logprob: -18.876171112060547
    10. '>L' → logprob: -18.876171112060547

Token 189: 'sq' (ID: 57619)
  Prédit: 'sq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sq' → logprob: -1.9361264946837764e-07
    2. ')' → logprob: -16.375
    3. '   ' → logprob: -17.375
    4. '
' → logprob: -17.625
    5. '_sq' → logprob: -18.625
    6. 'sqrt' → logprob: -19.0
    7. ',' → logprob: -20.125
    8. '```' → logprob: -20.25
    9. 'sql' → logprob: -20.5
    10. ' sq' → logprob: -20.5

Token 190: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0026342803612351418
    2. ')
' → logprob: -6.377634048461914
    3. ',' → logprob: -7.252634048461914
    4. ').' → logprob: -9.502634048461914
    5. ')
' → logprob: -10.252634048461914
    6. '+' → logprob: -10.502634048461914
    7. ',)' → logprob: -11.127634048461914
    8. ')%' → logprob: -11.252634048461914
    9. ' )' → logprob: -11.252634048461914
    10. ')+' → logprob: -11.502634048461914

Token 191: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01719917170703411
    2. '    
' → logprob: -4.6421990394592285
    3. '
' → logprob: -5.2671990394592285
    4. 'arr' → logprob: -6.8921990394592285
    5. ')' → logprob: -7.8921990394592285
    6. '  
' → logprob: -8.642199516296387
    7. '[' → logprob: -9.392199516296387
    8. '```' → logprob: -9.767199516296387
    9. '   
' → logprob: -9.892199516296387
    10. ' 
' → logprob: -10.142199516296387

Token 192: ' arr' (ID: 1724)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.23641318082809448
    2. '   ' → logprob: -1.7364132404327393
    3. ' for' → logprob: -4.48641300201416
    4. 'arr' (adapté à ' arr') → logprob: -5.11141300201416
    5. 'cum' → logprob: -5.48641300201416
    6. 'res' → logprob: -5.61141300201416
    7. 'dp' → logprob: -5.61141300201416
    8. 'np' → logprob: -6.23641300201416
    9. 'mod' → logprob: -7.23641300201416
    10. 'prefix' → logprob: -7.36141300201416

Token 193: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.015307119116187096
    2. ' =' → logprob: -4.2653069496154785
    3. '=np' → logprob: -7.7653069496154785
    4. '*=' → logprob: -7.7653069496154785
    5. '=c' → logprob: -8.640307426452637
    6. '[:' → logprob: -10.140307426452637
    7. '[:]' → logprob: -10.390307426452637
    8. '[' → logprob: -11.640307426452637
    9. '.c' → logprob: -11.640307426452637
    10. '.=' → logprob: -11.890307426452637

Token 194: ' cum' (ID: 10023)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.22145092487335205
    2. 'arr' → logprob: -2.2214508056640625
    3. '(np' → logprob: -2.7214508056640625
    4. '(arr' → logprob: -4.4714508056640625
    5. ' np' → logprob: -4.4714508056640625
    6. ' arr' → logprob: -6.7214508056640625
    7. '(' → logprob: -9.346450805664062
    8. ' (' → logprob: -9.346450805664062
    9. 'cum' → logprob: -9.346450805664062
    10. '[np' → logprob: -11.221450805664062

Token 195: 'prod' (ID: 36781)
  Prédit: 'prod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prod' → logprob: -0.001051984610967338
    2. 'product' → logprob: -6.876051902770996
    3. 'np' → logprob: -11.751051902770996
    4. 'arr' → logprob: -11.876051902770996
    5. 'cum' → logprob: -13.751051902770996
    6. '_prod' → logprob: -14.126051902770996
    7. 'trap' → logprob: -14.376051902770996
    8. 'sum' → logprob: -15.126051902770996
    9. '.prod' → logprob: -15.126051902770996
    10. 'pro' → logprob: -15.501051902770996

Token 196: '_stage' (ID: 83584)
  Prédit: '(arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(arr' → logprob: -0.002701089484617114
    2. '(' → logprob: -6.002701282501221
    3. '(np' → logprob: -8.752700805664062
    4. '(
' → logprob: -11.002700805664062
    5. ' (' → logprob: -11.502700805664062
    6. 'arr' → logprob: -11.752700805664062
    7. '[arr' → logprob: -11.752700805664062
    8. '(axis' → logprob: -11.877700805664062
    9. '<arr' → logprob: -12.627700805664062
    10. '```' → logprob: -13.002700805664062

Token 197: '1' (ID: 16)
  Prédit: '(arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(arr' → logprob: -0.0009494528640061617
    2. '1' → logprob: -7.250949382781982
    3. 's' → logprob: -9.25094985961914
    4. '(' → logprob: -9.37594985961914
    5. '2' → logprob: -10.50094985961914
    6. 'arr' → logprob: -11.50094985961914
    7. '[arr' → logprob: -12.37594985961914
    8. '(np' → logprob: -12.75094985961914
    9. '<arr' → logprob: -12.87594985961914
    10. '(
' → logprob: -12.87594985961914

Token 198: '(arr' (ID: 19646)
  Prédit: '(arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(arr' → logprob: -5.431207682704553e-05
    2. '(' → logprob: -9.875054359436035
    3. '(
' → logprob: -14.250054359436035
    4. '(np' → logprob: -14.375054359436035
    5. '[arr' → logprob: -14.875054359436035
    6. '<arr' → logprob: -15.125054359436035
    7. 'arr' → logprob: -15.250054359436035
    8. '(array' → logprob: -15.250054359436035
    9. ' (' → logprob: -15.250054359436035
    10. '(ar' → logprob: -17.50005340576172

Token 199: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007588882930576801
    2. ')' → logprob: -5.007588863372803
    3. ' ,' → logprob: -7.507588863372803
    4. '(axis' → logprob: -9.007589340209961
    5. ',)' → logprob: -9.257589340209961
    6. ',(' → logprob: -10.632589340209961
    7. '(' → logprob: -10.882589340209961
    8. ')
' → logprob: -11.382589340209961
    9. ',np' → logprob: -11.632589340209961
    10. ',:)' → logprob: -12.132589340209961

Token 200: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.3914862871170044
    2. ' MOD' → logprob: -1.1414862871170044
    3. 'L' → logprob: -7.266486167907715
    4. 'arr' → logprob: -7.391486167907715
    5. 'mod' → logprob: -7.516486167907715
    6. ' L' → logprob: -7.516486167907715
    7. ')' → logprob: -7.766486167907715
    8. '   ' → logprob: -8.141486167907715
    9. ' arr' → logprob: -8.141486167907715
    10. 'axis' → logprob: -8.266486167907715

Token 201: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16303186118602753
    2. ',' → logprob: -1.913031816482544
    3. ')
' → logprob: -6.038032054901123
    4. '   ' → logprob: -8.288031578063965
    5. ',)' → logprob: -9.913031578063965
    6. ' )' → logprob: -10.538031578063965
    7. ')

' → logprob: -10.788031578063965
    8. ',
' → logprob: -10.788031578063965
    9. '),' → logprob: -12.038031578063965
    10. ' ' → logprob: -12.038031578063965

Token 202: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.122512586414814
    2. ' L' → logprob: -2.2475125789642334
    3. 'axis' → logprob: -5.7475128173828125
    4. 'True' → logprob: -6.8725128173828125
    5. '0' → logprob: -6.9975128173828125
    6. ')' → logprob: -7.1225128173828125
    7. ' axis' → logprob: -7.2475128173828125
    8. '1' → logprob: -7.2475128173828125
    9. '   ' → logprob: -7.9975128173828125
    10. '    ' → logprob: -8.247512817382812

Token 203: 'sq' (ID: 57619)
  Prédit: 'sq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sq' → logprob: -0.001170225441455841
    2. ')' → logprob: -6.8761701583862305
    3. ',' → logprob: -9.12617015838623
    4. '   ' → logprob: -12.25117015838623
    5. '-' → logprob: -12.37617015838623
    6. '
' → logprob: -12.62617015838623
    7. ')
' → logprob: -13.00117015838623
    8. '_sq' → logprob: -13.37617015838623
    9. '**' → logprob: -13.75117015838623
    10. 's' → logprob: -13.75117015838623

Token 204: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007164848502725363
    2. ')
' → logprob: -7.500716686248779
    3. ',' → logprob: -9.250716209411621
    4. '   ' → logprob: -10.125716209411621
    5. ' )' → logprob: -11.125716209411621
    6. ')

' → logprob: -12.125716209411621
    7. ',)' → logprob: -12.750716209411621
    8. '),' → logprob: -13.750716209411621
    9. ').' → logprob: -14.500716209411621
    10. ')\
' → logprob: -14.875716209411621

Token 205: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 206: ' arr' (ID: 1724)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48391011357307434
    2. 'arr' (adapté à ' arr') → logprob: -1.108910083770752
    3. ' arr' → logprob: -2.983910083770752
    4. '    
' → logprob: -7.108910083770752
    5. ' return' → logprob: -7.233910083770752
    6. 'return' → logprob: -7.233910083770752
    7. '
' → logprob: -8.23391056060791
    8. '	arr' → logprob: -8.60891056060791
    9. '    ' → logprob: -9.48391056060791
    10. '_arr' → logprob: -9.85891056060791

Token 207: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03827614709734917
    2. ' =' → logprob: -3.288276195526123
    3. ',' → logprob: -8.413275718688965
    4. '[' → logprob: -13.038275718688965
    5. '=
' → logprob: -13.038275718688965
    6. ' ' → logprob: -13.288275718688965
    7. '[:]' → logprob: -13.538275718688965
    8. '=

' → logprob: -13.788275718688965
    9. 'def' → logprob: -14.288275718688965
    10. 'return' → logprob: -14.538275718688965

Token 208: ' cum' (ID: 10023)
  Prédit: 'cum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cum' → logprob: -0.42948147654533386
    2. ' cum' → logprob: -1.0544815063476562
    3. 'np' → logprob: -8.054481506347656
    4. 'resize' → logprob: -8.304481506347656
    5. ' np' → logprob: -9.054481506347656
    6. ' resize' → logprob: -10.554481506347656
    7. 'arr' → logprob: -11.179481506347656
    8. 'c' → logprob: -11.429481506347656
    9. ' ' → logprob: -11.554481506347656
    10. ' cumulative' → logprob: -11.679481506347656

Token 209: 'prod' (ID: 36781)
  Prédit: 'prod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prod' → logprob: -1.8624639324116288e-06
    2. 'product' → logprob: -13.375001907348633
    3. 'pro' → logprob: -16.375001907348633
    4. '_prod' → logprob: -17.125001907348633
    5. ' prod' → logprob: -18.250001907348633
    6. 'prob' → logprob: -18.500001907348633
    7. '(prod' → logprob: -18.750001907348633
    8. 'print' → logprob: -18.875001907348633
    9. '.prod' → logprob: -19.250001907348633
    10. 'prop' → logprob: -19.500001907348633

Token 210: '_stage' (ID: 83584)
  Prédit: '_stage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_stage' → logprob: -0.00010032468708232045
    2. '(arr' → logprob: -10.000100135803223
    3. '_' → logprob: -11.125100135803223
    4. '_arr' → logprob: -11.500100135803223
    5. '_st' → logprob: -11.750100135803223
    6. '_STAGE' → logprob: -12.250100135803223
    7. '```' → logprob: -12.375100135803223
    8. '   ' → logprob: -14.000100135803223
    9. '(' → logprob: -14.000100135803223
    10. '_step' → logprob: -14.000100135803223

Token 211: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0019953702576458454
    2. '1' → logprob: -6.50199556350708
    3. 'arr' → logprob: -8.501995086669922
    4. '3' → logprob: -9.751995086669922
    5. 'def' → logprob: -10.001995086669922
    6. '_' → logprob: -10.001995086669922
    7. '0' → logprob: -10.251995086669922
    8. '(arr' → logprob: -10.501995086669922
    9. '23' → logprob: -11.001995086669922
    10. '```' → logprob: -11.626995086669922

Token 212: '(arr' (ID: 19646)
  Prédit: '(arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(arr' → logprob: -2.8325677703833207e-05
    2. '(' → logprob: -10.500028610229492
    3. ' (' → logprob: -15.125028610229492
    4. 'arr' → logprob: -15.875028610229492
    5. '<arr' → logprob: -16.500028610229492
    6. '[arr' → logprob: -16.750028610229492
    7. '(ans' → logprob: -17.125028610229492
    8. '(
' → logprob: -17.125028610229492
    9. '(array' → logprob: -17.750028610229492
    10. '_arr' → logprob: -17.875028610229492

Token 213: ',' (ID: 11)
  Prédit: '(arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(arr' → logprob: -0.04312273859977722
    2. ',' → logprob: -3.1681227684020996
    3. 'arr' → logprob: -9.793122291564941
    4. '[arr' → logprob: -10.668122291564941
    5. '(' → logprob: -11.168122291564941
    6. ' arr' → logprob: -11.418122291564941
    7. '<arr' → logprob: -11.918122291564941
    8. ')' → logprob: -12.168122291564941
    9. ' ,' → logprob: -13.043122291564941
    10. '	arr' → logprob: -13.418122291564941

Token 214: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.5836697816848755
    2. ' MOD' → logprob: -0.8336697816848755
    3. 'arr' → logprob: -5.208669662475586
    4. ' arr' → logprob: -6.333669662475586
    5. 'L' → logprob: -8.708669662475586
    6. ' L' → logprob: -8.958669662475586
    7. 'mod' → logprob: -9.958669662475586
    8. '   ' → logprob: -9.958669662475586
    9. ' ' → logprob: -10.583669662475586
    10. '_MOD' → logprob: -11.896169662475586

Token 215: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007494711899198592
    2. ')' → logprob: -7.375749588012695
    3. '   ' → logprob: -9.125749588012695
    4. ' ,' → logprob: -11.875749588012695
    5. ')
' → logprob: -12.250749588012695
    6. ',
' → logprob: -13.875749588012695
    7. 'arr' → logprob: -15.000749588012695
    8. '‌,' → logprob: -15.500749588012695
    9. '(arr' → logprob: -15.750749588012695
    10. '),' → logprob: -16.000749588012695

Token 216: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.14274047315120697
    2. ' L' → logprob: -2.017740488052368
    3. '   ' → logprob: -10.517740249633789
    4. ' ' → logprob: -11.142740249633789
    5. 'arr' → logprob: -11.892740249633789
    6. ')' → logprob: -12.267740249633789
    7. '	L' → logprob: -12.642740249633789
    8. ' arr' → logprob: -13.017740249633789
    9. '  ' → logprob: -13.267740249633789
    10. '    ' → logprob: -13.392740249633789

Token 217: 'sq' (ID: 57619)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0043114302679896355
    2. ')
' → logprob: -5.504311561584473
    3. '**' → logprob: -9.629311561584473
    4. 'sq' → logprob: -10.004311561584473
    5. ',' → logprob: -10.129311561584473
    6. ')**' → logprob: -11.004311561584473
    7. ' )' → logprob: -11.129311561584473
    8. '[' → logprob: -11.754311561584473
    9. ')

' → logprob: -11.754311561584473
    10. '))' → logprob: -11.754311561584473

Token 218: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00978690106421709
    2. ')
' → logprob: -4.634787082672119
    3. '   ' → logprob: -11.009786605834961
    4. ',' → logprob: -11.634786605834961
    5. ')
' → logprob: -13.009786605834961
    6. ' )' → logprob: -13.634786605834961
    7. ')

' → logprob: -14.384786605834961
    8. ',)' → logprob: -14.759786605834961
    9. ')`' → logprob: -15.634786605834961
    10. ')`
' → logprob: -16.00978660583496

Token 219: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003712085890583694
    2. ')' → logprob: -8.875370979309082
    3. '    
' → logprob: -8.875370979309082
    4. 'return' → logprob: -10.500370979309082
    5. '<|end|>' → logprob: -11.500370979309082
    6. ',' → logprob: -11.750370979309082
    7. '[' → logprob: -11.875370979309082
    8. '(' → logprob: -12.250370979309082
    9. '
' → logprob: -12.375370979309082
    10. '	return' → logprob: -12.375370979309082

Token 220: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06345353275537491
    2. 'return' (adapté à ' return') → logprob: -2.813453435897827
    3. ' return' → logprob: -6.813453674316406
    4. 'arr' → logprob: -7.938453674316406
    5. '	return' → logprob: -11.688453674316406
    6. '    
' → logprob: -11.688453674316406
    7. '```' → logprob: -12.313453674316406
    8. 'def' → logprob: -12.813453674316406
    9. ' arr' → logprob: -13.438453674316406
    10. '
' → logprob: -14.063453674316406

Token 221: ' arr' (ID: 1724)
  Prédit: ' arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arr' → logprob: -0.34930405020713806
    2. 'arr' → logprob: -1.2243040800094604
    3. ' np' → logprob: -8.22430419921875
    4. 'resize' → logprob: -8.59930419921875
    5. 'np' → logprob: -8.59930419921875
    6. ' resize' → logprob: -8.72430419921875
    7. '(arr' → logprob: -10.22430419921875
    8. 'res' → logprob: -12.47430419921875
    9. '_arr' → logprob: -12.72430419921875
    10. ' ' → logprob: -12.72430419921875

Token 222: '.r' (ID: 2951)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07660996168851852
    2. '
' → logprob: -2.8266098499298096
    3. '<|end|>' → logprob: -4.701610088348389
    4. '[' → logprob: -6.451610088348389
    5. '_' → logprob: -7.451610088348389
    6. '

' → logprob: -7.576610088348389
    7. '[
' → logprob: -7.951610088348389
    8. ' def' → logprob: -8.07660961151123
    9. '```' → logprob: -8.07660961151123
    10. '(
' → logprob: -8.32660961151123

Token 223: 'avel' (ID: 8345)
  Prédit: 'avel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'avel' → logprob: -0.00032950565218925476
    2. 'esh' → logprob: -8.125329971313477
    3. 'esize' → logprob: -10.625329971313477
    4. 'reshape' → logprob: -12.625329971313477
    5. 'eturn' → logprob: -13.000329971313477
    6. 'aveled' → logprob: -13.375329971313477
    7. 'es' → logprob: -13.750329971313477
    8. 'e' → logprob: -14.875329971313477
    9. 'AVEL' → logprob: -16.125329971313477
    10. 'astype' → logprob: -16.750329971313477

Token 224: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -8.44706009957008e-05
    2. '().' → logprob: -10.75008487701416
    3. '()[' → logprob: -10.75008487701416
    4. '(' → logprob: -11.00008487701416
    5. ' ()' → logprob: -11.75008487701416
    6. '(),' → logprob: -12.62508487701416
    7. '()(' → logprob: -13.00008487701416
    8. '()]' → logprob: -13.12508487701416
    9. '()
' → logprob: -13.25008487701416
    10. '()<<' → logprob: -14.37508487701416

Token 225: '[:' (ID: 7808)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 226: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.2813464105129242
    2. 'len' → logprob: -1.4063464403152466
    3. ' L' → logprob: -9.656346321105957
    4. ' len' → logprob: -10.281346321105957
    5. '-L' → logprob: -10.406346321105957
    6. 'arr' → logprob: -10.906346321105957
    7. ']' → logprob: -10.906346321105957
    8. 'length' → logprob: -11.531346321105957
    9. '(len' → logprob: -11.656346321105957
    10. 'Len' → logprob: -13.031346321105957

Token 227: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005323647055774927
    2. ')' → logprob: -5.25532341003418
    3. '])' → logprob: -9.75532341003418
    4. ')]' → logprob: -11.00532341003418
    5. ' ]' → logprob: -11.75532341003418
    6. ']
' → logprob: -12.88032341003418
    7. '']' → logprob: -14.13032341003418
    8. ',' → logprob: -14.50532341003418
    9. '<|end|>' → logprob: -14.50532341003418
    10. '+' → logprob: -14.63032341003418

Token 228: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1995878517627716
    2. '
' → logprob: -2.199587821960449
    3. '_' → logprob: -3.574587821960449
    4. '(' → logprob: -4.574587821960449
    5. '<|end|>' → logprob: -4.824587821960449
    6. '```' → logprob: -4.949587821960449
    7. '(
' → logprob: -5.324587821960449
    8. '\' → logprob: -6.074587821960449
    9. ' def' → logprob: -6.449587821960449
    10. '

' → logprob: -6.574587821960449

Token 229: ' cum' (ID: 10023)
  Prédit: ' cum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cum' → logprob: -0.031153490766882896
    2. 'cum' → logprob: -3.531153440475464
    3. 'def' → logprob: -8.031153678894043
    4. ' resize' → logprob: -8.406153678894043
    5. ' def' → logprob: -8.656153678894043
    6. 'resize' → logprob: -8.656153678894043
    7. 'c' → logprob: -9.281153678894043
    8. ' np' → logprob: -9.781153678894043
    9. 'np' → logprob: -10.156153678894043
    10. '_c' → logprob: -10.343653678894043

Token 230: 'prod' (ID: 36781)
  Prédit: 'prod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prod' → logprob: -1.3856492842023727e-06
    2. 'product' → logprob: -13.875000953674316
    3. '_prod' → logprob: -15.375000953674316
    4. 'pro' → logprob: -16.625001907348633
    5. 'prof' → logprob: -17.875001907348633
    6. 'pop' → logprob: -18.375001907348633
    7. 'p' → logprob: -18.500001907348633
    8. 'prob' → logprob: -18.625001907348633
    9. 'prop' → logprob: -18.750001907348633
    10. 'pow' → logprob: -18.875001907348633

Token 231: '_stage' (ID: 83584)
  Prédit: '_stage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_stage' → logprob: -0.00012773419439326972
    2. '_' → logprob: -9.000127792358398
    3. '_STAGE' → logprob: -13.375127792358398
    4. '_step' → logprob: -14.500127792358398
    5. '_(' → logprob: -14.625127792358398
    6. '_arr' → logprob: -15.000127792358398
    7. '(stage' → logprob: -15.000127792358398
    8. '_st' → logprob: -15.250127792358398
    9. '(arr' → logprob: -15.250127792358398
    10. '(Stage' → logprob: -16.2501277923584

Token 232: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014120421838015318
    2. '2' → logprob: -8.875141143798828
    3. '_' → logprob: -13.625141143798828
    4. '3' → logprob: -17.250141143798828
    5. '(' → logprob: -17.875141143798828
    6. '１' → logprob: -18.000141143798828
    7. ' ' → logprob: -18.125141143798828
    8. '0' → logprob: -18.250141143798828
    9. '```' → logprob: -18.562641143798828
    10. 'def' → logprob: -18.625141143798828

Token 233: '(arr' (ID: 19646)
  Prédit: '(arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(arr' → logprob: -0.0017064863350242376
    2. '(' → logprob: -6.376706600189209
    3. '(array' → logprob: -13.50170612335205
    4. '(
' → logprob: -13.62670612335205
    5. ' (' → logprob: -14.37670612335205
    6. '(ar' → logprob: -14.75170612335205
    7. 'arr' → logprob: -16.126707077026367
    8. '_arr' → logprob: -16.501707077026367
    9. '[arr' → logprob: -16.501707077026367
    10. '<arr' → logprob: -16.501707077026367

Token 234: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.392202976712724e-06
    2. ' ,' → logprob: -12.500006675720215
    3. 'arr' → logprob: -14.125006675720215
    4. '(arr' → logprob: -14.125006675720215
    5. ',
' → logprob: -14.750006675720215
    6. ',array' → logprob: -15.875006675720215
    7. '‌,' → logprob: -16.0000057220459
    8. '_,' → logprob: -16.2500057220459
    9. '   ' → logprob: -16.7500057220459
    10. '):' → logprob: -16.8750057220459

Token 235: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.06604646891355515
    2. ' MOD' → logprob: -2.8160464763641357
    3. 'mod' → logprob: -6.691046237945557
    4. ')' → logprob: -6.816046237945557
    5. 'arr' → logprob: -6.941046237945557
    6. ' ' → logprob: -8.816046714782715
    7. 'np' → logprob: -9.441046714782715
    8. ' arr' → logprob: -9.691046714782715
    9. '_MOD' → logprob: -9.691046714782715
    10. 'def' → logprob: -9.941046714782715

Token 236: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.070975071750581e-05
    2. '):' → logprob: -11.250030517578125
    3. ' ,' → logprob: -11.750030517578125
    4. '):
' → logprob: -12.125030517578125
    5. ',
' → logprob: -13.125030517578125
    6. '   ' → logprob: -13.875030517578125
    7. '_,' → logprob: -14.750030517578125
    8. '‌,' → logprob: -16.375030517578125
    9. 'def' → logprob: -16.500030517578125
    10. ',n' → logprob: -16.625030517578125

Token 237: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.0789048820734024
    2. ' L' → logprob: -2.578904867172241
    3. ' ' → logprob: -12.32890510559082
    4. 'U' → logprob: -12.82890510559082
    5. '1' → logprob: -13.57890510559082
    6. '   ' → logprob: -13.70390510559082
    7. 'arr' → logprob: -13.82890510559082
    8. 'size' → logprob: -14.32890510559082
    9. 'Ls' → logprob: -14.57890510559082
    10. '	L' → logprob: -14.82890510559082

Token 238: 'sq' (ID: 57619)
  Prédit: 'sq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sq' → logprob: -5.073596548754722e-05
    2. ')' → logprob: -10.87505054473877
    3. '):
' → logprob: -10.87505054473877
    4. '_sq' → logprob: -12.00005054473877
    5. '):' → logprob: -13.00005054473877
    6. ',' → logprob: -13.25005054473877
    7. '):

' → logprob: -14.12505054473877
    8. '
' → logprob: -14.62505054473877
    9. '```' → logprob: -14.87505054473877
    10. '_' → logprob: -15.25005054473877

Token 239: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3879542350769043
    2. '):
' → logprob: -1.1379542350769043
    3. ',' → logprob: -6.887954235076904
    4. '):
' → logprob: -10.012954711914062
    5. ')' → logprob: -12.137954711914062
    6. '   ' → logprob: -12.262954711914062
    7. '):

' → logprob: -12.762954711914062
    8. ' ):' → logprob: -13.012954711914062
    9. ':' → logprob: -13.637954711914062
    10. ' ):
' → logprob: -14.512954711914062

Token 240: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09116631746292114
    2. ':' → logprob: -3.4661662578582764
    3. 'for' → logprob: -3.8411662578582764
    4. 'arr' → logprob: -4.7161664962768555
    5. ' for' → logprob: -4.8411664962768555
    6. ',' → logprob: -5.4661664962768555
    7. ' arr' → logprob: -5.7161664962768555
    8. '):' → logprob: -6.0911664962768555
    9. '[' → logprob: -6.2161664962768555
    10. ')' → logprob: -6.3411664962768555

Token 241: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.19375549256801605
    2. '   ' → logprob: -2.1937553882598877
    3. ' for' → logprob: -3.0687553882598877
    4. 'arr' → logprob: -4.068755626678467
    5. '    
' → logprob: -8.318755149841309
    6. 'np' → logprob: -8.318755149841309
    7. ' arr' → logprob: -8.818755149841309
    8. 'i' → logprob: -8.943755149841309
    9. 'res' → logprob: -9.693755149841309
    10. 'def' → logprob: -9.943755149841309

Token 242: ' n' (ID: 297)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.04028838500380516
    2. 'i' → logprob: -3.2902884483337402
    3. ' j' → logprob: -7.16528844833374
    4. ' row' → logprob: -8.040287971496582
    5. ' y' → logprob: -8.415287971496582
    6. ' r' → logprob: -8.540287971496582
    7. ' x' → logprob: -8.665287971496582
    8. ' _' → logprob: -9.165287971496582
    9. 'j' → logprob: -9.415287971496582
    10. '_' → logprob: -9.790287971496582

Token 243: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.28579196333885193
    2. 'in' → logprob: -1.4107919931411743
    3. ',' → logprob: -5.535791873931885
    4. '   ' → logprob: -8.285792350769043
    5. ' ' → logprob: -8.535792350769043
    6. '	in' → logprob: -9.535792350769043
    7. ')' → logprob: -10.285792350769043
    8. ' ,' → logprob: -11.035792350769043
    9. 'i' → logprob: -11.285792350769043
    10. '[' → logprob: -11.285792350769043

Token 244: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.06207367032766342
    2. ' range' → logprob: -2.8120737075805664
    3. '   ' → logprob: -9.562073707580566
    4. ' ' → logprob: -11.437073707580566
    5. '  ' → logprob: -12.187073707580566
    6. '	range' → logprob: -12.312073707580566
    7. '(range' → logprob: -12.562073707580566
    8. ')' → logprob: -12.812073707580566
    9. '    ' → logprob: -12.937073707580566
    10. 're' → logprob: -13.187073707580566

Token 245: '(' (ID: 7)
  Prédit: '(L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.2519598603248596
    2. '(' → logprob: -1.5019598007202148
    3. '1' → logprob: -11.001959800720215
    4. 'L' → logprob: -12.376959800720215
    5. '(arr' → logprob: -13.001959800720215
    6. '(len' → logprob: -13.376959800720215
    7. 'arr' → logprob: -13.626959800720215
    8. '(
' → logprob: -13.751959800720215
    9. '((' → logprob: -14.251959800720215
    10. '   ' → logprob: -15.001959800720215

Token 246: '1' (ID: 16)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.05530140921473503
    2. '1' → logprob: -2.9303014278411865
    3. '0' → logprob: -8.930301666259766
    4. '(L' → logprob: -9.180301666259766
    5. 'arr' → logprob: -9.680301666259766
    6. '(' → logprob: -9.930301666259766
    7. '2' → logprob: -10.055301666259766
    8. ' L' → logprob: -10.930301666259766
    9. '   ' → logprob: -12.305301666259766
    10. ' ' → logprob: -13.805301666259766

Token 247: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00037490393151529133
    2. ' ,' → logprob: -8.375374794006348
    3. ',L' → logprob: -8.875374794006348
    4. 'L' → logprob: -12.750374794006348
    5. ',
' → logprob: -15.000374794006348
    6. '

' → logprob: -15.125374794006348
    7. '
' → logprob: -15.125374794006348
    8. '):' → logprob: -15.250374794006348
    9. '):
' → logprob: -15.750374794006348
    10. ',len' → logprob: -16.125375747680664

Token 248: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.0005594660760834813
    2. ' L' → logprob: -7.500559329986572
    3. 'arr' → logprob: -12.12555980682373
    4. '   ' → logprob: -14.12555980682373
    5. '	L' → logprob: -17.125558853149414
    6. '    ' → logprob: -17.375558853149414
    7. 'len' → logprob: -17.500558853149414
    8. ')' → logprob: -17.750558853149414
    9. 'int' → logprob: -18.000558853149414
    10. ' ' → logprob: -18.000558853149414

Token 249: 'sq' (ID: 57619)
  Prédit: 'sq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sq' → logprob: -4.4849443838757e-06
    2. '_sq' → logprob: -13.375004768371582
    3. ')' → logprob: -13.750004768371582
    4. '):' → logprob: -14.250004768371582
    5. ',' → logprob: -14.875004768371582
    6. 'arr' → logprob: -15.250004768371582
    7. '):
' → logprob: -15.250004768371582
    8. 's' → logprob: -15.875004768371582
    9. '   ' → logprob: -16.250003814697266
    10. '[' → logprob: -17.375003814697266

Token 250: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6931719779968262
    2. '):' → logprob: -0.6931719779968262
    3. ':' → logprob: -11.943172454833984
    4. ',' → logprob: -12.443172454833984
    5. '   ' → logprob: -12.693172454833984
    6. '):
' → logprob: -12.943172454833984
    7. '**' → logprob: -13.068172454833984
    8. ')' → logprob: -13.443172454833984
    9. '():
' → logprob: -14.068172454833984
    10. ' ):' → logprob: -14.068172454833984

Token 251: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004373509436845779
    2. 'arr' → logprob: -6.004373550415039
    3. ' arr' → logprob: -7.379373550415039
    4. ' for' → logprob: -7.754373550415039
    5. ',' → logprob: -8.504373550415039
    6. '[arr' → logprob: -9.004373550415039
    7. '[' → logprob: -9.254373550415039
    8. 'for' → logprob: -9.254373550415039
    9. '	arr' → logprob: -9.504373550415039
    10. '<|end|>' → logprob: -9.879373550415039

Token 252: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' (adapté à ' arr') → logprob: -0.020051153376698494
    2. 'for' → logprob: -4.395051002502441
    3. '       ' → logprob: -5.145051002502441
    4. '   ' → logprob: -6.520051002502441
    5. ' arr' → logprob: -9.145051002502441
    6. ' for' → logprob: -10.020051002502441
    7. '	arr' → logprob: -10.270051002502441
    8. '```' → logprob: -11.645051002502441
    9. '_arr' → logprob: -12.645051002502441
    10. '[arr' → logprob: -13.020051002502441

Token 253: '[:,' (ID: 21158)
  Prédit: '[:,'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:,' → logprob: -0.4360850751399994
    2. '[n' → logprob: -1.0610851049423218
    3. '[:' → logprob: -5.186085224151611
    4. '[' → logprob: -6.686085224151611
    5. '[...,' → logprob: -8.311084747314453
    6. '[:,:,' → logprob: -8.561084747314453
    7. '[:]' → logprob: -10.811084747314453
    8. ' [:' → logprob: -11.061084747314453
    9. ' *=' → logprob: -11.811084747314453
    10. '*=' → logprob: -12.311084747314453

Token 254: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0015996063593775034
    2. '0' → logprob: -6.5015997886657715
    3. ' n' → logprob: -9.376599311828613
    4. '   ' → logprob: -12.126599311828613
    5. ' ' → logprob: -13.626599311828613
    6. ']' → logprob: -13.876599311828613
    7. '	n' → logprob: -14.126599311828613
    8. ':' → logprob: -14.376599311828613
    9. '[n' → logprob: -14.376599311828613
    10. ':n' → logprob: -14.376599311828613

Token 255: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00011856284982059151
    2. ']=' → logprob: -9.500118255615234
    3. ' ]' → logprob: -11.250118255615234
    4. ']*' → logprob: -11.500118255615234
    5. ':]' → logprob: -11.750118255615234
    6. '-' → logprob: -12.125118255615234
    7. ']=(' → logprob: -13.250118255615234
    8. ']+=' → logprob: -13.375118255615234
    9. ',' → logprob: -14.000118255615234
    10. '*' → logprob: -14.125118255615234

Token 256: ' *=' (ID: 25253)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.821370005607605
    2. '=' → logprob: -1.071370005607605
    3. ']=' → logprob: -2.0713701248168945
    4. '*=' → logprob: -2.4463701248168945
    5. '*' → logprob: -6.1963701248168945
    6. ']*' → logprob: -6.4463701248168945
    7. ']+=' → logprob: -7.0713701248168945
    8. ']=(' → logprob: -8.446370124816895
    9. ' =' → logprob: -8.946370124816895
    10. '```' → logprob: -9.696370124816895

Token 257: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.003827987238764763
    2. ' arr' → logprob: -5.753828048706055
    3. '   ' → logprob: -7.378828048706055
    4. '  ' → logprob: -11.628828048706055
    5. '	arr' → logprob: -11.878828048706055
    6. ' ' → logprob: -12.003828048706055
    7. '(arr' → logprob: -13.503828048706055
    8. '    ' → logprob: -14.753828048706055
    9. 'np' → logprob: -15.128828048706055
    10. '$arr' → logprob: -15.253828048706055

Token 258: '[:,' (ID: 21158)
  Prédit: '[:,'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:,' → logprob: -3.2020991056924686e-05
    2. '[:' → logprob: -11.375032424926758
    3. '   ' → logprob: -12.250032424926758
    4. '][:' → logprob: -12.250032424926758
    5. '(:,' → logprob: -12.500032424926758
    6. ' ' → logprob: -13.125032424926758
    7. ':,' → logprob: -13.375032424926758
    8. ' [:' → logprob: -13.875032424926758
    9. ',' → logprob: -14.000032424926758
    10. ' :,' → logprob: -14.750032424926758

Token 259: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -9.627176768844947e-05
    2. ' n' → logprob: -9.375096321105957
    3. '   ' → logprob: -11.750096321105957
    4. '[n' → logprob: -13.375096321105957
    5. '(n' → logprob: -14.125096321105957
    6. '	n' → logprob: -14.750096321105957
    7. ' ' → logprob: -15.000096321105957
    8. '-' → logprob: -15.750096321105957
    9. '-n' → logprob: -16.25009536743164
    10. ',n' → logprob: -16.62509536743164

Token 260: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.009768958203494549
    2. ' -' → logprob: -4.634768962860107
    3. ' ' → logprob: -12.13476848602295
    4. '   ' → logprob: -12.50976848602295
    5. ']' → logprob: -12.88476848602295
    6. '1' → logprob: -14.63476848602295
    7. 'n' → logprob: -14.75976848602295
    8. '[' → logprob: -16.259769439697266
    9. '
' → logprob: -16.384769439697266
    10. '  ' → logprob: -16.759769439697266

Token 261: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7385154428193346e-05
    2. ' ' → logprob: -10.37503719329834
    3. ']' → logprob: -13.06253719329834
    4. '   ' → logprob: -14.25003719329834
    5. 'arr' → logprob: -14.50003719329834
    6. '```' → logprob: -14.50003719329834
    7. 'def' → logprob: -15.12503719329834
    8. '
' → logprob: -15.56253719329834
    9. 'np' → logprob: -16.437538146972656
    10. 'for' → logprob: -16.625038146972656

Token 262: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4021237802808173e-05
    2. ' ' → logprob: -11.500014305114746
    3. '   ' → logprob: -14.250014305114746
    4. 'arr' → logprob: -14.687514305114746
    5. '```' → logprob: -14.937514305114746
    6. '
' → logprob: -15.125014305114746
    7. ']' → logprob: -15.125014305114746
    8. 'def' → logprob: -15.437514305114746
    9. 'np' → logprob: -16.12501335144043
    10. '2' → logprob: -16.31251335144043

Token 263: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05662497878074646
    2. ']
' → logprob: -3.1816248893737793
    3. ']%' → logprob: -4.306624889373779
    4. ' ]' → logprob: -11.181625366210938
    5. '];' → logprob: -11.306625366210938
    6. ']
' → logprob: -11.681625366210938
    7. '%' → logprob: -11.931625366210938
    8. ']

' → logprob: -12.681625366210938
    9. ')' → logprob: -13.181625366210938
    10. '];
' → logprob: -13.431625366210938

Token 264: '       ' (ID: 309)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.3498811423778534
    2. '<|end|>' → logprob: -2.349881172180176
    3. ' %=' → logprob: -2.474881172180176
    4. ' %' → logprob: -2.849881172180176
    5. '       ' → logprob: -4.224881172180176
    6. 'arr' → logprob: -4.474881172180176
    7. ')' → logprob: -4.974881172180176
    8. '%=' → logprob: -4.974881172180176
    9. '   ' → logprob: -5.599881172180176
    10. ' arr' → logprob: -5.724881172180176

Token 265: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' (adapté à ' arr') → logprob: -0.09694492816925049
    2. ' arr' → logprob: -2.471944808959961
    3. '       ' → logprob: -4.846944808959961
    4. '	arr' → logprob: -9.971944808959961
    5. '=' → logprob: -10.721944808959961
    6. '   ' → logprob: -10.846944808959961
    7. ' =' → logprob: -12.221944808959961
    8. '[arr' → logprob: -12.346944808959961
    9. '_arr' → logprob: -12.596944808959961
    10. ' ' → logprob: -12.596944808959961

Token 266: '[:,' (ID: 21158)
  Prédit: '[:,'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:,' → logprob: -0.003953967243432999
    2. '%=' → logprob: -5.62895393371582
    3. '%' → logprob: -8.75395393371582
    4. '[:' → logprob: -9.12895393371582
    5. '=' → logprob: -10.00395393371582
    6. ' %=' → logprob: -10.75395393371582
    7. '][:' → logprob: -11.75395393371582
    8. '[:]' → logprob: -12.12895393371582
    9. '(:,' → logprob: -12.87895393371582
    10. '[:,:,' → logprob: -13.00395393371582

Token 267: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0010349531657993793
    2. ' n' → logprob: -6.876034736633301
    3. '   ' → logprob: -13.8760347366333
    4. '	n' → logprob: -14.6260347366333
    5. ':' → logprob: -15.3760347366333
    6. '       ' → logprob: -15.8760347366333
    7. ':n' → logprob: -15.8760347366333
    8. ' ' → logprob: -15.8760347366333
    9. '     ' → logprob: -17.251035690307617
    10. '    ' → logprob: -17.376035690307617

Token 268: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -3.166338137816638e-05
    2. ']%' → logprob: -11.375031471252441
    3. ' ]' → logprob: -12.250031471252441
    4. ']=' → logprob: -12.250031471252441
    5. '%=' → logprob: -12.250031471252441
    6. '%' → logprob: -13.000031471252441
    7. ')' → logprob: -13.500031471252441
    8. '```' → logprob: -14.375031471252441
    9. ',' → logprob: -15.000031471252441
    10. ']+=' → logprob: -15.125031471252441

Token 269: ' %=' (ID: 117035)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.0008046258008107543
    2. '%' → logprob: -7.750804424285889
    3. ' %=' → logprob: -8.000804901123047
    4. '=' → logprob: -10.500804901123047
    5. '```' → logprob: -12.250804901123047
    6. ']' → logprob: -13.625804901123047
    7. '%s' → logprob: -14.125804901123047
    8. '	' → logprob: -14.125804901123047
    9. '//=' → logprob: -14.250804901123047
    10. ')' → logprob: -14.750804901123047

Token 270: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -1.676292231422849e-05
    2. ' MOD' → logprob: -11.000017166137695
    3. '_MOD' → logprob: -20.500017166137695
    4. 'MO' → logprob: -21.625017166137695
    5. '.MOD' → logprob: -22.000017166137695
    6. 'MODE' → logprob: -22.375017166137695
    7. '   ' → logprob: -23.000017166137695
    8. ' ' → logprob: -24.375017166137695
    9. 'MODULE' → logprob: -24.375017166137695
    10. 'MD' → logprob: -24.625017166137695

Token 271: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 272: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013000923208892345
    2. '<|end|>' → logprob: -5.013000965118408
    3. '```' → logprob: -6.138000965118408
    4. '\n' → logprob: -6.638000965118408
    5. '    
' → logprob: -7.138000965118408
    6. 'for' → logprob: -7.513000965118408
    7. ' for' → logprob: -8.01300048828125
    8. '
' → logprob: -8.76300048828125
    9. ')' → logprob: -9.01300048828125
    10. '       ' → logprob: -9.13800048828125

Token 273: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0350150391459465
    2. 'for' → logprob: -3.785015106201172
    3. ' for' → logprob: -4.660015106201172
    4. 'return' (adapté à ' return') → logprob: -7.285015106201172
    5. '    
' → logprob: -7.910015106201172
    6. '	for' → logprob: -8.035015106201172
    7. '
' → logprob: -8.160015106201172
    8. '	return' → logprob: -8.535015106201172
    9. ' return' → logprob: -8.660015106201172
    10. '```' → logprob: -10.035015106201172

Token 274: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.07889022678136826
    2. ' arr' → logprob: -2.578890323638916
    3. '(arr' → logprob: -15.828889846801758
    4. '	arr' → logprob: -16.453889846801758
    5. '_arr' → logprob: -16.578889846801758
    6. 'np' → logprob: -16.703889846801758
    7. ' ' → logprob: -17.953889846801758
    8. ' np' → logprob: -18.578889846801758
    9. ' ' → logprob: -19.078889846801758
    10. 'array' → logprob: -19.203889846801758

Token 275: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 276: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0036933126393705606
    2. '```' → logprob: -5.753693103790283
    3. '
' → logprob: -7.628693103790283
    4. '

' → logprob: -11.503693580627441
    5. '``' → logprob: -11.878693580627441
    6. ' def' → logprob: -12.253693580627441
    7. '<|end|>' → logprob: -12.503693580627441
    8. '  
' → logprob: -13.878693580627441
    9. '\' → logprob: -14.253693580627441
    10. '    
' → logprob: -14.753693580627441

Token 277: ' cum' (ID: 10023)
  Prédit: 'cum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cum' → logprob: -0.5231574773788452
    2. ' cum' → logprob: -0.8981574773788452
    3. 'c' → logprob: -10.773157119750977
    4. 'def' → logprob: -11.773157119750977
    5. '_c' → logprob: -13.773157119750977
    6. ' ' → logprob: -14.023157119750977
    7. 'cul' → logprob: -14.585657119750977
    8. ' cumulative' → logprob: -15.335657119750977
    9. ' cumul' → logprob: -15.335657119750977
    10. ' def' → logprob: -15.460657119750977

Token 278: 'prod' (ID: 36781)
  Prédit: 'prod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prod' → logprob: -5.512236498361744e-07
    2. 'prob' → logprob: -15.500000953674316
    3. 'product' → logprob: -15.625000953674316
    4. 'pow' → logprob: -16.75
    5. 'proc' → logprob: -17.0
    6. 'pro' → logprob: -17.375
    7. 'prof' → logprob: -18.125
    8. '_prod' → logprob: -18.5
    9. 'proj' → logprob: -19.25
    10. 'def' → logprob: -19.875

Token 279: '_stage' (ID: 83584)
  Prédit: '_stage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_stage' → logprob: -6.869017852295656e-06
    2. '_' → logprob: -12.125006675720215
    3. '_s' → logprob: -14.875006675720215
    4. '_step' → logprob: -15.000006675720215
    5. '_STAGE' → logprob: -15.625006675720215
    6. ' _' → logprob: -15.875006675720215
    7. '_st' → logprob: -16.25000762939453
    8. '_phase' → logprob: -17.12500762939453
    9. '_layer' → logprob: -17.25000762939453
    10. '_start' → logprob: -17.25000762939453

Token 280: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.1008713702030946e-06
    2. '_' → logprob: -14.500001907348633
    3. '```' → logprob: -15.125001907348633
    4. ' ' → logprob: -15.375001907348633
    5. 'def' → logprob: -15.375001907348633
    6. '3' → logprob: -15.750001907348633
    7. '(arr' → logprob: -15.875001907348633
    8. '(' → logprob: -16.125001907348633
    9. '1' → logprob: -16.562501907348633
    10. 'arr' → logprob: -16.937501907348633

Token 281: '(arr' (ID: 19646)
  Prédit: '(arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(arr' → logprob: 0.0
    2. 'arr' → logprob: -18.625
    3. '[arr' → logprob: -18.625
    4. '<arr' → logprob: -19.125
    5. ' (' → logprob: -19.25
    6. '(
' → logprob: -19.875
    7. '(' → logprob: -20.5
    8. ' arr' → logprob: -20.75
    9. '	arr' → logprob: -22.25
    10. '(ar' → logprob: -22.625

Token 282: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.9385402993066236e-05
    2. ' ,' → logprob: -10.875019073486328
    3. 'arr' → logprob: -16.000019073486328
    4. '_,' → logprob: -16.250019073486328
    5. 'def' → logprob: -16.500019073486328
    6. ',
' → logprob: -16.625019073486328
    7. '   ' → logprob: -17.375019073486328
    8. '[:,' → logprob: -18.375019073486328
    9. '[],' → logprob: -18.625019073486328
    10. '‌,' → logprob: -18.875019073486328

Token 283: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.10020958632230759
    2. ' MOD' → logprob: -2.3502094745635986
    3. '   ' → logprob: -13.72520923614502
    4. '_MOD' → logprob: -14.35020923614502
    5. 'arr' → logprob: -14.72520923614502
    6. ' ' → logprob: -14.97520923614502
    7. '.MOD' → logprob: -15.60020923614502
    8. ')' → logprob: -16.350210189819336
    9. 'mod' → logprob: -16.475210189819336
    10. 'def' → logprob: -16.850210189819336

Token 284: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.856408536899835e-05
    2. ' ,' → logprob: -10.625028610229492
    3. '   ' → logprob: -13.125028610229492
    4. ',n' → logprob: -13.750028610229492
    5. ',
' → logprob: -14.000028610229492
    6. ',int' → logprob: -16.375028610229492
    7. '‌,' → logprob: -17.125028610229492
    8. ',size' → logprob: -17.125028610229492
    9. ',L' → logprob: -17.500028610229492
    10. '):
' → logprob: -17.500028610229492

Token 285: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.008616108447313309
    2. ' L' → logprob: -4.758615970611572
    3. '   ' → logprob: -13.75861644744873
    4. ' ' → logprob: -15.25861644744873
    5. '	L' → logprob: -16.633615493774414
    6. 'def' → logprob: -17.133615493774414
    7. '  ' → logprob: -17.133615493774414
    8. '    ' → logprob: -17.258615493774414
    9. 'arr' → logprob: -17.633615493774414
    10. '       ' → logprob: -18.258615493774414

Token 286: 'sq' (ID: 57619)
  Prédit: 'sq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sq' → logprob: -0.00020628207130357623
    2. ')' → logprob: -9.500205993652344
    3. '):
' → logprob: -9.750205993652344
    4. '   ' → logprob: -10.750205993652344
    5. ',' → logprob: -10.875205993652344
    6. '):' → logprob: -11.375205993652344
    7. '```' → logprob: -11.625205993652344
    8. ':' → logprob: -13.625205993652344
    9. '),' → logprob: -13.875205993652344
    10. '
' → logprob: -14.000205993652344

Token 287: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.02331361174583435
    2. '):' → logprob: -3.773313522338867
    3. '):
' → logprob: -9.648313522338867
    4. ')' → logprob: -13.398313522338867
    5. '):

' → logprob: -13.898313522338867
    6. '   ' → logprob: -14.398313522338867
    7. ' ):
' → logprob: -15.398313522338867
    8. ':' → logprob: -15.898313522338867
    9. ':
' → logprob: -16.023313522338867
    10. '():
' → logprob: -16.398313522338867

Token 288: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3992832899093628
    2. 'for' → logprob: -1.1492832899093628
    3. ' for' → logprob: -4.399283409118652
    4. '```' → logprob: -10.024283409118652
    5. '	for' → logprob: -12.274283409118652
    6. 'arr' → logprob: -16.149282455444336
    7. 'import' → logprob: -16.399282455444336
    8. '[' → logprob: -16.649282455444336
    9. '``' → logprob: -16.649282455444336
    10. '   ' → logprob: -16.649282455444336

Token 289: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00018006093159783632
    2. ' for' → logprob: -8.7501802444458
    3. '   ' → logprob: -10.8751802444458
    4. 'arr' → logprob: -13.0001802444458
    5. '```' → logprob: -14.8751802444458
    6. '	for' → logprob: -17.250179290771484
    7. 'import' → logprob: -17.750179290771484
    8. '
' → logprob: -17.875179290771484
    9. '``' → logprob: -19.500179290771484
    10. 'def' → logprob: -19.500179290771484

Token 290: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5876710414886475
    2. ' n' → logprob: -0.8376710414886475
    3. 'm' → logprob: -5.462671279907227
    4. ' m' → logprob: -5.962671279907227
    5. 'i' → logprob: -6.087671279907227
    6. ' i' → logprob: -6.462671279907227
    7. 'r' → logprob: -8.837671279907227
    8. '   ' → logprob: -9.087671279907227
    9. ' ' → logprob: -9.337671279907227
    10. 'l' → logprob: -9.337671279907227

Token 291: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5760819315910339
    2. 'in' → logprob: -0.8260819315910339
    3. 'range' → logprob: -9.326082229614258
    4. '   ' → logprob: -10.326082229614258
    5. '1' → logprob: -12.076082229614258
    6. ' ' → logprob: -12.201082229614258
    7. ' range' → logprob: -13.076082229614258
    8. 'n' → logprob: -13.576082229614258
    9. '
' → logprob: -13.576082229614258
    10. '(' → logprob: -14.201082229614258

Token 292: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0059310514479875565
    2. ' range' → logprob: -5.1309309005737305
    3. 'in' → logprob: -14.00593090057373
    4. '(range' → logprob: -14.88093090057373
    5. ' ' → logprob: -15.38093090057373
    6. '1' → logprob: -15.50593090057373
    7. '[' → logprob: -15.50593090057373
    8. '   ' → logprob: -15.63093090057373
    9. ' in' → logprob: -16.255931854248047
    10. '
' → logprob: -16.380931854248047

Token 293: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08653142303228378
    2. 'range' → logprob: -3.086531400680542
    3. ' range' → logprob: -3.336531400680542
    4. '(range' → logprob: -7.086531639099121
    5. ' in' → logprob: -7.461531639099121
    6. 'in' → logprob: -8.836531639099121
    7. ',' → logprob: -9.836531639099121
    8. '1' → logprob: -10.836531639099121
    9. '(L' → logprob: -11.086531639099121
    10. ' (' → logprob: -11.461531639099121

Token 294: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.696077227592468e-05
    2. 'L' → logprob: -10.125077247619629
    3. ' ' → logprob: -11.125077247619629
    4. '0' → logprob: -11.875077247619629
    5. '(' → logprob: -12.250077247619629
    6. '   ' → logprob: -12.375077247619629
    7. '
' → logprob: -12.750077247619629
    8. ')' → logprob: -14.312577247619629
    9. '

' → logprob: -14.437577247619629
    10. ',' → logprob: -15.250077247619629

Token 295: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.580929347255733e-05
    2. ',L' → logprob: -11.500016212463379
    3. ' ,' → logprob: -12.375016212463379
    4. 'L' → logprob: -13.750016212463379
    5. 'range' → logprob: -16.250015258789062
    6. ' L' → logprob: -16.625015258789062
    7. '_,' → logprob: -16.875015258789062
    8. '   ' → logprob: -17.000015258789062
    9. '(L' → logprob: -17.000015258789062
    10. ',
' → logprob: -18.625015258789062

Token 296: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.0008089098846539855
    2. ' L' → logprob: -7.1258087158203125
    3. '   ' → logprob: -12.375808715820312
    4. '	L' → logprob: -16.375808715820312
    5. 'Ls' → logprob: -16.750808715820312
    6. '       ' → logprob: -17.375808715820312
    7. ' ' → logprob: -18.000808715820312
    8. '    ' → logprob: -18.500808715820312
    9. 'LS' → logprob: -19.000808715820312
    10. '  ' → logprob: -19.375808715820312

Token 297: 'sq' (ID: 57619)
  Prédit: 'sq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sq' → logprob: -7.896309739408025e-07
    2. ')' → logprob: -15.125000953674316
    3. '_sq' → logprob: -15.125000953674316
    4. '**' → logprob: -15.750000953674316
    5. 'arr' → logprob: -18.25
    6. '   ' → logprob: -18.375
    7. '```' → logprob: -18.375
    8. ')**' → logprob: -19.25
    9. '):
' → logprob: -19.5
    10. ' sq' → logprob: -19.75

Token 298: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0019310165662318468
    2. '):' → logprob: -6.251931190490723
    3. '):
' → logprob: -13.751931190490723
    4. '   ' → logprob: -14.626931190490723
    5. '):

' → logprob: -15.251931190490723
    6. ':
' → logprob: -15.376931190490723
    7. ' ):
' → logprob: -15.626931190490723
    8. ')' → logprob: -16.001930236816406
    9. ',' → logprob: -16.001930236816406
    10. ':' → logprob: -17.001930236816406

Token 299: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6732245087623596
    2. 'arr' → logprob: -0.9232245087623596
    3. '       ' → logprob: -2.548224449157715
    4. 'for' → logprob: -4.548224449157715
    5. ' for' → logprob: -6.298224449157715
    6. ' arr' → logprob: -6.798224449157715
    7. '```' → logprob: -7.298224449157715
    8. '	arr' → logprob: -8.673224449157715
    9. '[arr' → logprob: -9.798224449157715
    10. ' ' → logprob: -11.798224449157715

Token 300: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' (adapté à ' arr') → logprob: -0.004542862065136433
    2. '   ' → logprob: -5.754542827606201
    3. '       ' → logprob: -7.254542827606201
    4. ' arr' → logprob: -7.379542827606201
    5. 'for' → logprob: -11.12954330444336
    6. '	arr' → logprob: -11.25454330444336
    7. ' ' → logprob: -12.87954330444336
    8. '```' → logprob: -14.62954330444336
    9. '[arr' → logprob: -14.62954330444336
    10. ' for' → logprob: -14.75454330444336

Token 301: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.011619601398706436
    2. '[:,' → logprob: -4.511619567871094
    3. '[:' → logprob: -7.636619567871094
    4. '[' → logprob: -9.636619567871094
    5. 'n' → logprob: -11.511619567871094
    6. '
' → logprob: -12.761619567871094
    7. ' [' → logprob: -12.886619567871094
    8. '   ' → logprob: -13.636619567871094
    9. '[:]' → logprob: -13.761619567871094
    10. '=' → logprob: -13.886619567871094

Token 302: ']' (ID: 60)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011197428219020367
    2. ':,' → logprob: -5.011197566986084
    3. ']' → logprob: -5.761197566986084
    4. ',:' → logprob: -7.136197566986084
    5. ',:,' → logprob: -7.886197566986084
    6. '][:' → logprob: -9.886197090148926
    7. ' :,' → logprob: -10.261197090148926
    8. '[:,' → logprob: -10.761197090148926
    9. ' ,' → logprob: -11.261197090148926
    10. ':]' → logprob: -11.886197090148926

Token 303: ' *=' (ID: 25253)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14896634221076965
    2. ',:' → logprob: -2.5239663124084473
    3. '[:,' → logprob: -3.3989663124084473
    4. ':,' → logprob: -4.773966312408447
    5. ']' → logprob: -5.023966312408447
    6. ',:,' → logprob: -5.273966312408447
    7. '[:' → logprob: -6.773966312408447
    8. '*=' → logprob: -7.023966312408447
    9. '][:' → logprob: -8.148966789245605
    10. '*' → logprob: -8.148966789245605

Token 304: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.0015222413931041956
    2. ' arr' → logprob: -6.501522064208984
    3. '   ' → logprob: -11.001522064208984
    4. '
' → logprob: -14.626522064208984
    5. '       ' → logprob: -14.751522064208984
    6. ' ' → logprob: -14.751522064208984
    7. '    ' → logprob: -14.751522064208984
    8. '  ' → logprob: -14.876522064208984
    9. 'np' → logprob: -14.876522064208984
    10. '	arr' → logprob: -15.126522064208984

Token 305: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.16141216456890106
    2. 'n' → logprob: -1.9114121198654175
    3. '[' → logprob: -7.286412239074707
    4. '0' → logprob: -8.911412239074707
    5. '[:,' → logprob: -8.911412239074707
    6. ',n' → logprob: -9.661412239074707
    7. '(n' → logprob: -9.661412239074707
    8. '
' → logprob: -10.411412239074707
    9. ',' → logprob: -10.786412239074707
    10. '[:' → logprob: -10.911412239074707

Token 306: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.03815842047333717
    2. ' -' → logprob: -3.288158416748047
    3. ',' → logprob: -9.788158416748047
    4. ':,' → logprob: -10.663158416748047
    5. '-,' → logprob: -11.913158416748047
    6. ' ' → logprob: -12.163158416748047
    7. ' :,' → logprob: -12.163158416748047
    8. '   ' → logprob: -12.288158416748047
    9. '[:,' → logprob: -12.663158416748047
    10. ']' → logprob: -12.788158416748047

Token 307: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00021021578868385404
    2. ' ' → logprob: -8.50020980834961
    3. '   ' → logprob: -12.25020980834961
    4. '```' → logprob: -14.31270980834961
    5. 'arr' → logprob: -15.18770980834961
    6. '0' → logprob: -15.25020980834961
    7. '       ' → logprob: -16.31270980834961
    8. '  ' → logprob: -16.37520980834961
    9. '-' → logprob: -16.62520980834961
    10. ']' → logprob: -16.93770980834961

Token 308: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.9186317482963204e-05
    2. ' ' → logprob: -10.000049591064453
    3. 'arr' → logprob: -13.812549591064453
    4. '   ' → logprob: -14.000049591064453
    5. 'L' → logprob: -15.000049591064453
    6. '
' → logprob: -15.187549591064453
    7. '```' → logprob: -15.625049591064453
    8. 'prev' → logprob: -15.812549591064453
    9. '0' → logprob: -16.500049591064453
    10. '-' → logprob: -16.500049591064453

Token 309: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11338900029659271
    2. ']' → logprob: -3.363389015197754
    3. ',:' → logprob: -3.363389015197754
    4. ']
' → logprob: -4.113389015197754
    5. '][:' → logprob: -4.238389015197754
    6. '[:,' → logprob: -5.363389015197754
    7. ',:,' → logprob: -6.863389015197754
    8. ',
' → logprob: -7.988389015197754
    9. ',n' → logprob: -8.238389015197754
    10. ',:)' → logprob: -8.238389015197754

Token 310: ' -' (ID: 533)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3604575991630554
    2. '-' → logprob: -1.2354576587677002
    3. ':]' → logprob: -5.360457420349121
    4. 'n' → logprob: -6.235457420349121
    5. ' -' → logprob: -6.610457420349121
    6. '-L' → logprob: -6.610457420349121
    7. ':' → logprob: -7.110457420349121
    8. ' ' → logprob: -8.235457420349121
    9. 'L' → logprob: -8.360457420349121
    10. ':].' → logprob: -8.485457420349121

Token 311: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.625
    3. '   ' → logprob: -16.6875
    4. '```' → logprob: -17.875
    5. ']' → logprob: -17.9375
    6. '0' → logprob: -18.0
    7. 'n' → logprob: -18.125
    8. '１' → logprob: -18.1875
    9. '
' → logprob: -18.3125
    10. '2' → logprob: -18.875

Token 312: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.3869868814945221
    2. ']' → logprob: -1.1369868516921997
    3. ']
' → logprob: -9.51198673248291
    4. ' ]
' → logprob: -10.76198673248291
    5. ' ]' → logprob: -11.88698673248291
    6. '       ' → logprob: -12.01198673248291
    7. ']

' → logprob: -12.63698673248291
    8. ']%' → logprob: -13.26198673248291
    9. '   ' → logprob: -13.63698673248291
    10. ')
' → logprob: -14.88698673248291

Token 313: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010634170612320304
    2. '   ' → logprob: -7.001063346862793
    3. '
' → logprob: -10.126063346862793
    4. 'arr' → logprob: -10.626063346862793
    5. '```' → logprob: -10.626063346862793
    6. '<|end|>' → logprob: -10.626063346862793
    7. '[arr' → logprob: -11.501063346862793
    8. '	arr' → logprob: -12.126063346862793
    9. ' arr' → logprob: -12.251063346862793
    10. '        
' → logprob: -12.751063346862793

Token 314: ' arr' (ID: 1724)
  Prédit: ' arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arr' → logprob: -0.3869633376598358
    2. 'arr' (adapté à ' arr') → logprob: -1.1369633674621582
    3. '       ' → logprob: -9.386962890625
    4. '[arr' → logprob: -12.761962890625
    5. '	arr' → logprob: -13.011962890625
    6. '   ' → logprob: -13.511962890625
    7. '(arr' → logprob: -13.886962890625
    8. '```' → logprob: -15.511962890625
    9. '[' → logprob: -15.886962890625
    10. '$arr' → logprob: -16.011962890625

Token 315: '[n' (ID: 15433)
  Prédit: '[:,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:,' → logprob: -0.8972657918930054
    2. '[n' → logprob: -1.1472657918930054
    3. '%=' → logprob: -1.7722657918930054
    4. ' %=' → logprob: -2.897265911102295
    5. '%' → logprob: -3.522265911102295
    6. '[:' → logprob: -4.772265911102295
    7. '[:]' → logprob: -5.647265911102295
    8. '[' → logprob: -5.897265911102295
    9. 'n' → logprob: -6.397265911102295
    10. '%n' → logprob: -6.897265911102295

Token 316: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00013858173042535782
    2. ']%' → logprob: -9.250138282775879
    3. ',' → logprob: -10.375138282775879
    4. '%' → logprob: -12.500138282775879
    5. ':]' → logprob: -13.125138282775879
    6. ' ]' → logprob: -13.125138282775879
    7. '][:' → logprob: -13.250138282775879
    8. '][' → logprob: -14.250138282775879
    9. ' %=' → logprob: -15.750138282775879
    10. ',:' → logprob: -15.875138282775879

Token 317: ' %=' (ID: 117035)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.00884406827390194
    2. ' %=' → logprob: -4.758843898773193
    3. '%' → logprob: -8.383844375610352
    4. '=' → logprob: -15.133844375610352
    5. ' %' → logprob: -15.258844375610352
    6. ')%' → logprob: -16.13384437561035
    7. '%s' → logprob: -16.50884437561035
    8. '	' → logprob: -16.50884437561035
    9. '％' → logprob: -16.75884437561035
    10. '%,' → logprob: -17.25884437561035

Token 318: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.029750604182481766
    2. ' MOD' → logprob: -3.5297505855560303
    3. '_MOD' → logprob: -16.77975082397461
    4. '.MOD' → logprob: -18.65475082397461
    5. ' ' → logprob: -18.90475082397461
    6. '   ' → logprob: -19.02975082397461
    7. 'mod' → logprob: -19.40475082397461
    8. 'M' → logprob: -20.02975082397461
    9. 'MO' → logprob: -21.40475082397461
    10. '(M' → logprob: -21.52975082397461

Token 319: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011036602081730962
    2. 'return' → logprob: -7.37610387802124
    3. '
' → logprob: -8.126103401184082
    4. ' return' → logprob: -9.126103401184082
    5. '	return' → logprob: -10.251103401184082
    6. '    
' → logprob: -11.126103401184082
    7. '<|end|>' → logprob: -11.126103401184082
    8. ':return' → logprob: -12.751103401184082
    9. '```' → logprob: -13.376103401184082
    10. '  
' → logprob: -14.501103401184082

Token 320: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0026264311745762825
    2. 'return' → logprob: -6.127626419067383
    3. ' return' → logprob: -7.752626419067383
    4. '	return' → logprob: -11.752626419067383
    5. '```' → logprob: -13.377626419067383
    6. ':return' → logprob: -13.627626419067383
    7. '<|end|>' → logprob: -14.877626419067383
    8. '    
' → logprob: -15.127626419067383
    9. '   ' → logprob: -16.127626419067383
    10. ',' → logprob: -16.502626419067383

Token 321: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.03028898686170578
    2. '   ' → logprob: -3.5302889347076416
    3. ' return' → logprob: -7.530289173126221
    4. '	return' → logprob: -14.030288696289062
    5. '```' → logprob: -14.155288696289062
    6. '    
' → logprob: -16.655288696289062
    7. '{return' → logprob: -16.905288696289062
    8. 'eturn' → logprob: -17.405288696289062
    9. ' ' → logprob: -17.780288696289062
    10. ':return' → logprob: -17.905288696289062

Token 322: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.0009114635176956654
    2. ' arr' → logprob: -7.000911235809326
    3. '(arr' → logprob: -18.250911712646484
    4. '	arr' → logprob: -19.625911712646484
    5. '_arr' → logprob: -21.250911712646484
    6. 'array' → logprob: -21.750911712646484
    7. '$arr' → logprob: -22.250911712646484
    8. 'np' → logprob: -22.375911712646484
    9. '[arr' → logprob: -23.000911712646484
    10. '.arr' → logprob: -23.250911712646484

Token 323: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 324: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00015872348740231246
    2. 'import' → logprob: -9.250158309936523
    3. '#' → logprob: -10.000158309936523
    4. '<|end|>' → logprob: -11.875158309936523
    5. 'from' → logprob: -12.250158309936523
    6. 'class' → logprob: -13.250158309936523
    7. '```' → logprob: -13.875158309936523
    8. '@' → logprob: -14.125158309936523
    9. 'if' → logprob: -14.875158309936523
    10. ')' → logprob: -15.375158309936523

Token 325: ' make' (ID: 1520)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.009904945269227028
    2. ' solve' → logprob: -4.759904861450195
    3. 'main' → logprob: -7.134904861450195
    4. ' factorial' → logprob: -9.259904861450195
    5. 'solve' → logprob: -9.759904861450195
    6. ' process' → logprob: -9.884904861450195
    7. ' multiply' → logprob: -10.259904861450195
    8. ' mod' → logprob: -10.259904861450195
    9. ' cum' → logprob: -10.509904861450195
    10. ' solution' → logprob: -10.759904861450195

Token 326: '_fact' (ID: 111916)
  Prédit: '_arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_arr' → logprob: -0.7464460730552673
    2. '_array' → logprob: -1.621446132659912
    3. '_mod' → logprob: -2.496446132659912
    4. '_' → logprob: -3.121446132659912
    5. '_factor' → logprob: -3.121446132659912
    6. '_c' → logprob: -3.371446132659912
    7. '_dp' → logprob: -3.871446132659912
    8. '_power' → logprob: -4.621446132659912
    9. '_pow' → logprob: -4.621446132659912
    10. '_matrix' → logprob: -5.121446132659912

Token 327: '(U' (ID: 27452)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'or' → logprob: -1.5058244466781616
    2. '(N' → logprob: -1.6308244466781616
    3. 's' → logprob: -1.8808244466781616
    4. '(n' → logprob: -2.505824565887451
    5. '(size' → logprob: -2.505824565887451
    6. 'ory' → logprob: -2.880824565887451
    7. 'rial' → logprob: -3.005824565887451
    8. '_array' → logprob: -3.255824565887451
    9. '_arr' → logprob: -3.380824565887451
    10. '(L' → logprob: -3.755824565887451

Token 328: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1277194768190384
    2. ',' → logprob: -2.2527194023132324
    3. '):
' → logprob: -4.252719402313232
    4. ')' → logprob: -7.627719402313232
    5. '):
' → logprob: -11.00271987915039
    6. ' ):' → logprob: -11.12771987915039
    7. ',U' → logprob: -11.25271987915039
    8. '   ' → logprob: -11.87771987915039
    9. '):

' → logprob: -12.37771987915039
    10. ':' → logprob: -13.12771987915039

Token 329: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.14725938439369202
    2. 'mod' → logprob: -2.022259473800659
    3. ' MOD' → logprob: -5.77225923538208
    4. '):' → logprob: -8.272259712219238
    5. ' mod' → logprob: -8.647259712219238
    6. '):
' → logprob: -8.647259712219238
    7. 'M' → logprob: -8.647259712219238
    8. 'def' → logprob: -8.772259712219238
    9. '   ' → logprob: -8.897259712219238
    10. 'get' → logprob: -9.147259712219238

Token 330: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00413812231272459
    2. '):
' → logprob: -5.754137992858887
    3. ',' → logprob: -7.004137992858887
    4. '):
' → logprob: -10.504137992858887
    5. ')' → logprob: -11.254137992858887
    6. ' ):' → logprob: -11.629137992858887
    7. '   ' → logprob: -13.504137992858887
    8. ':' → logprob: -14.504137992858887
    9. '):

' → logprob: -15.129137992858887
    10. '=' → logprob: -16.254138946533203

Token 331: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013013073476031423
    2. 'fact' → logprob: -6.876301288604736
    3. 'arr' → logprob: -8.626301765441895
    4. ' fact' → logprob: -10.126301765441895
    5. '```' → logprob: -10.751301765441895
    6. ' arr' → logprob: -11.376301765441895
    7. 'fac' → logprob: -12.251301765441895
    8. 'f' → logprob: -13.126301765441895
    9. '	arr' → logprob: -13.126301765441895
    10. '	f' → logprob: -13.126301765441895

Token 332: ' x' (ID: 1215)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.30378657579421997
    2. 'arr' → logprob: -1.4287865161895752
    3. '   ' → logprob: -4.303786754608154
    4. ' fact' → logprob: -5.678786754608154
    5. 'f' → logprob: -6.303786754608154
    6. 'fac' → logprob: -6.303786754608154
    7. ' arr' → logprob: -6.678786754608154
    8. 'facts' → logprob: -8.803786277770996
    9. 'res' → logprob: -9.553786277770996
    10. 'np' → logprob: -9.928786277770996

Token 333: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5248130559921265
    2. ' =' → logprob: -0.8998130559921265
    3. '=np' → logprob: -6.524813175201416
    4. 'arr' → logprob: -9.274812698364258
    5. 's' → logprob: -9.899812698364258
    6. '_arr' → logprob: -11.149812698364258
    7. 'fact' → logprob: -11.274812698364258
    8. 'p' → logprob: -11.774812698364258
    9. '=[]
' → logprob: -11.899812698364258
    10. ',' → logprob: -12.024812698364258

Token 334: ' as' (ID: 472)
  Prédit: ' np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' np' → logprob: -0.2520342469215393
    2. 'np' → logprob: -1.5020341873168945
    3. ' as' → logprob: -9.627034187316895
    4. ' [' → logprob: -10.502034187316895
    5. '[' → logprob: -12.377034187316895
    6. '(np' → logprob: -13.377034187316895
    7. 'as' → logprob: -13.377034187316895
    8. '[np' → logprob: -13.377034187316895
    9. ' ' → logprob: -13.627034187316895
    10. '=np' → logprob: -14.377034187316895

Token 335: '_np' (ID: 102996)
  Prédit: '_np'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_np' → logprob: -0.0008102210704237223
    2. 'np' → logprob: -7.125810146331787
    3. '_numpy' → logprob: -12.625810623168945
    4. '_py' → logprob: -14.250810623168945
    5. 'Np' → logprob: -14.750810623168945
    6. 'numpy' → logprob: -14.875810623168945
    7. ' np' → logprob: -15.375810623168945
    8. 'NP' → logprob: -16.125810623168945
    9. 'int' → logprob: -16.250810623168945
    10. 'import' → logprob: -16.625810623168945

Token 336: '_ar' (ID: 54153)
  Prédit: '_ar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ar' → logprob: -0.0025005098432302475
    2. 'ar' → logprob: -6.002500534057617
    3. '_arr' → logprob: -10.877500534057617
    4. '.arange' → logprob: -12.377500534057617
    5. '_array' → logprob: -14.377500534057617
    6. 'arr' → logprob: -15.377500534057617
    7. 'range' → logprob: -15.627500534057617
    8. ' ar' → logprob: -15.627500534057617
    9. '	ar' → logprob: -15.752500534057617
    10. '_' → logprob: -16.627500534057617

Token 337: 'ange' (ID: 1052)
  Prédit: 'ange'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ange' → logprob: -0.0063616083934903145
    2. 'nge' → logprob: -5.131361484527588
    3. 'range' → logprob: -8.131361961364746
    4. 'ge' → logprob: -9.381361961364746
    5. 'age' → logprob: -10.006361961364746
    6. 'ar' → logprob: -13.131361961364746
    7. 'ng' → logprob: -13.131361961364746
    8. 'nage' → logprob: -13.506361961364746
    9. 'r' → logprob: -14.756361961364746
    10. 'ang' → logprob: -14.881361961364746

Token 338: '(U' (ID: 27452)
  Prédit: '(U'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(U' → logprob: -0.0002615742268972099
    2. '(' → logprob: -8.250261306762695
    3. 'U' → logprob: -16.250261306762695
    4. ' (' → logprob: -17.125261306762695
    5. '(UI' → logprob: -17.750261306762695
    6. '<|end|>' → logprob: -17.750261306762695
    7. '(
' → logprob: -18.125261306762695
    8. '(I' → logprob: -18.375261306762695
    9. '((' → logprob: -18.625261306762695
    10. '```' → logprob: -19.000261306762695

Token 339: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4975796937942505
    2. ',' → logprob: -1.6225796937942505
    3. ')
' → logprob: -1.7475796937942505
    4. '+' → logprob: -4.247579574584961
    5. ')+' → logprob: -5.497579574584961
    6. ' ,' → logprob: -7.497579574584961
    7. ',d' → logprob: -8.247579574584961
    8. ')
' → logprob: -8.497579574584961
    9. ' +' → logprob: -8.622579574584961
    10. ' )' → logprob: -9.122579574584961

Token 340: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028180759400129318
    2. '
' → logprob: -4.2781805992126465
    3. 'x' → logprob: -4.7781805992126465
    4. ',' → logprob: -6.6531805992126465
    5. '```' → logprob: -7.0281805992126465
    6. ')' → logprob: -7.1531805992126465
    7. '    
' → logprob: -7.5281805992126465
    8. '**' → logprob: -8.278181076049805
    9. '[' → logprob: -8.278181076049805
    10. 'fact' → logprob: -8.653181076049805

Token 341: ' x' (ID: 1215)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5680665969848633
    2. 'x' (adapté à ' x') → logprob: -0.9430665969848633
    3. 'for' → logprob: -4.068066596984863
    4. '
' → logprob: -4.443066596984863
    5. 'fact' → logprob: -4.568066596984863
    6. ' x' → logprob: -6.568066596984863
    7. ' for' → logprob: -7.193066596984863
    8. '    
' → logprob: -7.818066596984863
    9. 'f' → logprob: -8.068066596984863
    10. ' ' → logprob: -8.318066596984863

Token 342: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.22606199979782104
    2. '+=' → logprob: -1.9760620594024658
    3. ' +=' → logprob: -2.851062059402466
    4. ' =' → logprob: -5.476061820983887
    5. '[:]' → logprob: -6.976061820983887
    6. '.fill' → logprob: -8.726061820983887
    7. '[:' → logprob: -8.851061820983887
    8. '=' → logprob: -9.101061820983887
    9. '[x' → logprob: -9.101061820983887
    10. '+' → logprob: -9.851061820983887

Token 343: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06523755192756653
    2. '1' → logprob: -2.815237522125244
    3. ' ' → logprob: -6.190237522125244
    4. ':' → logprob: -7.065237522125244
    5. '[' → logprob: -9.440237998962402
    6. 'x' → logprob: -9.690237998962402
    7. ' :' → logprob: -10.190237998962402
    8. '>' → logprob: -10.565237998962402
    9. '   ' → logprob: -10.565237998962402
    10. '...' → logprob: -10.815237998962402

Token 344: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.000712670327629894
    2. ']=' → logprob: -7.250712871551514
    3. ' ]' → logprob: -13.250712394714355
    4. ']==' → logprob: -15.000712394714355
    5. '[' → logprob: -15.250712394714355
    6. ':]' → logprob: -15.750712394714355
    7. ']
' → logprob: -16.750713348388672
    8. '()]' → logprob: -16.875713348388672
    9. '...]' → logprob: -17.250713348388672
    10. ':' → logprob: -17.250713348388672

Token 345: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0007235141238197684
    2. ' =' → logprob: -7.250723361968994
    3. ']=' → logprob: -12.125723838806152
    4. '[' → logprob: -13.625723838806152
    5. '.fill' → logprob: -13.625723838806152
    6. 'x' → logprob: -13.750723838806152
    7. '+=' → logprob: -13.750723838806152
    8. '.=' → logprob: -14.500723838806152
    9. '[:]' → logprob: -14.500723838806152
    10. '_=' → logprob: -14.625723838806152

Token 346: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.868328920158092e-05
    2. ' ' → logprob: -10.500028610229492
    3. '0' → logprob: -13.875028610229492
    4. '   ' → logprob: -16.500028610229492
    5. '  ' → logprob: -18.250028610229492
    6. 'x' → logprob: -18.625028610229492
    7. '۱' → logprob: -19.125028610229492
    8. 'int' → logprob: -19.875028610229492
    9. '    ' → logprob: -20.250028610229492
    10. '=' → logprob: -20.250028610229492

Token 347: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. '0' → logprob: -14.625000953674316
    3. ' ' → logprob: -15.125000953674316
    4. 'x' → logprob: -15.875000953674316
    5. '۱' → logprob: -17.75
    6. 'int' → logprob: -18.5
    7. '১' → logprob: -18.75
    8. '' → logprob: -19.375
    9. '१' → logprob: -19.375
    10. '１' → logprob: -19.5625

Token 348: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0023390199057757854
    2. '<|end|>' → logprob: -6.252338886260986
    3. 'x' → logprob: -8.627339363098145
    4. '  
' → logprob: -9.502339363098145
    5. '
' → logprob: -9.877339363098145
    6. '    
' → logprob: -10.502339363098145
    7. '```' → logprob: -11.377339363098145
    8. '

' → logprob: -11.752339363098145
    9. '<|end|>' → logprob: -11.752339363098145
    10. ',' → logprob: -11.877339363098145

Token 349: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3460790514945984
    2. ' for' → logprob: -1.5960791110992432
    3. '   ' → logprob: -2.971079111099243
    4. 'for' → logprob: -3.596079111099243
    5. 'x' → logprob: -4.846078872680664
    6. '    
' → logprob: -6.971078872680664
    7. ',' → logprob: -7.346078872680664
    8. '```' → logprob: -7.596078872680664
    9. '<|end|>' → logprob: -8.346078872680664
    10. ' x' → logprob: -8.346078872680664

Token 350: ' fact' (ID: 2840)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0042353430762887
    2. '   ' → logprob: -6.12923526763916
    3. 'x' → logprob: -7.00423526763916
    4. ' for' → logprob: -7.00423526763916
    5. 'np' → logprob: -8.50423526763916
    6. 'def' → logprob: -11.25423526763916
    7. '```' → logprob: -12.87923526763916
    8. '1' → logprob: -13.12923526763916
    9. '    
' → logprob: -13.12923526763916
    10. '
' → logprob: -13.25423526763916

Token 351: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.714285671710968
    2. '[' → logprob: -0.964285671710968
    3. '=' → logprob: -2.0892856121063232
    4. '[:]' → logprob: -5.339285850524902
    5. ']' → logprob: -9.214285850524902
    6. 's' → logprob: -9.589285850524902
    7. '```' → logprob: -9.589285850524902
    8. '=np' → logprob: -9.839285850524902
    9. ',' → logprob: -9.964285850524902
    10. ' ' → logprob: -9.964285850524902

Token 352: ' cum' (ID: 10023)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3875162601470947
    2. 'np' → logprob: -1.1375162601470947
    3. ' x' → logprob: -8.137516021728516
    4. ' np' → logprob: -8.637516021728516
    5. '1' → logprob: -8.887516021728516
    6. 'as' → logprob: -11.012516021728516
    7. '(np' → logprob: -11.387516021728516
    8. '(x' → logprob: -13.012516021728516
    9. '(' → logprob: -13.387516021728516
    10. 'numpy' → logprob: -13.887516021728516

Token 353: 'prod' (ID: 36781)
  Prédit: 'prod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prod' → logprob: -3.690834273584187e-05
    2. 'product' → logprob: -10.62503719329834
    3. 'x' → logprob: -11.75003719329834
    4. 'arr' → logprob: -12.75003719329834
    5. '```' → logprob: -14.12503719329834
    6. 'np' → logprob: -15.25003719329834
    7. '   ' → logprob: -15.62503719329834
    8. 'pow' → logprob: -15.75003719329834
    9. '_prod' → logprob: -15.87503719329834
    10. '1' → logprob: -16.750036239624023

Token 354: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0011271213879808784
    2. '_stage' → logprob: -6.876127243041992
    3. '(' → logprob: -9.751127243041992
    4. 'Stage' → logprob: -11.751127243041992
    5. '(
' → logprob: -12.126127243041992
    6. ' (' → logprob: -12.376127243041992
    7. '(np' → logprob: -12.501127243041992
    8. 'x' → logprob: -12.626127243041992
    9. '(arr' → logprob: -12.626127243041992
    10. 'stage' → logprob: -12.876127243041992

Token 355: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.065608562901616e-05
    2. ' ,' → logprob: -10.125081062316895
    3. ')' → logprob: -10.375081062316895
    4. ',)' → logprob: -12.000081062316895
    5. ',
' → logprob: -13.250081062316895
    6. '[' → logprob: -13.750081062316895
    7. '   ' → logprob: -16.750080108642578
    8. ',U' → logprob: -17.125080108642578
    9. ',[' → logprob: -17.250080108642578
    10. ',:)' → logprob: -17.625080108642578

Token 356: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -4.5491004129871726e-05
    2. ' MOD' → logprob: -10.000045776367188
    3. '   ' → logprob: -17.375045776367188
    4. 'mod' → logprob: -17.625045776367188
    5. 'MO' → logprob: -17.625045776367188
    6. '_MOD' → logprob: -18.125045776367188
    7. ' ' → logprob: -18.375045776367188
    8. 'M' → logprob: -19.000045776367188
    9. '.MOD' → logprob: -20.000045776367188
    10. '  ' → logprob: -20.375045776367188

Token 357: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2471589798224159e-05
    2. ')
' → logprob: -11.375012397766113
    3. ' )' → logprob: -14.125012397766113
    4. '   ' → logprob: -15.625012397766113
    5. ')

' → logprob: -18.12501335144043
    6. ').' → logprob: -18.62501335144043
    7. '),' → logprob: -18.87501335144043
    8. ')
' → logprob: -18.87501335144043
    9. ')#' → logprob: -19.00001335144043
    10. '))' → logprob: -19.25001335144043

Token 358: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1565248966217041
    2. '
' → logprob: -2.031524896621704
    3. ' return' → logprob: -5.406524658203125
    4. ')' → logprob: -6.031524658203125
    5. '<|end|>' → logprob: -6.031524658203125
    6. 'return' → logprob: -6.406524658203125
    7. '    
' → logprob: -7.031524658203125
    8. '[' → logprob: -7.656524658203125
    9. '```' → logprob: -8.281524658203125
    10. ',' → logprob: -8.281524658203125

Token 359: ' y' (ID: 342)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.1259661614894867
    2. 'return' → logprob: -2.2509660720825195
    3. '   ' → logprob: -4.3759660720825195
    4. ' inv' → logprob: -8.37596607208252
    5. 'x' → logprob: -9.62596607208252
    6. ' return' → logprob: -9.87596607208252
    7. 'ifact' → logprob: -10.12596607208252
    8. 'rev' → logprob: -10.87596607208252
    9. '_inv' → logprob: -11.25096607208252
    10. 'inverse' → logprob: -11.37596607208252

Token 360: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759565830230713
    2. '=' → logprob: -0.8259565830230713
    3. '=np' → logprob: -11.825956344604492
    4. '[' → logprob: -12.450956344604492
    5. ',' → logprob: -12.700956344604492
    6. 'x' → logprob: -14.575956344604492
    7. ' ' → logprob: -15.075956344604492
    8. '   ' → logprob: -15.200956344604492
    9. '＝' → logprob: -15.325956344604492
    10. '[:]' → logprob: -15.325956344604492

Token 361: ' as' (ID: 472)
  Prédit: ' np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' np' → logprob: -0.9642465114593506
    2. ' fact' → logprob: -1.7142465114593506
    3. ' as' → logprob: -1.8392465114593506
    4. 'np' → logprob: -1.9642465114593506
    5. 'fact' → logprob: -2.4642465114593506
    6. 'as' → logprob: -4.08924674987793
    7. ' x' → logprob: -4.33924674987793
    8. 'x' → logprob: -5.08924674987793
    9. ' (' → logprob: -5.83924674987793
    10. ' U' → logprob: -5.96424674987793

Token 362: '_np' (ID: 102996)
  Prédit: '_np'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_np' → logprob: -0.0024870727211236954
    2. 'np' → logprob: -6.0024871826171875
    3. 'int' → logprob: -12.252487182617188
    4. '_numpy' → logprob: -13.127487182617188
    5. '[' → logprob: -14.127487182617188
    6. '[np' → logprob: -14.377487182617188
    7. 'numpy' → logprob: -14.627487182617188
    8. '_py' → logprob: -14.877487182617188
    9. '_nt' → logprob: -15.127487182617188
    10. 'n' → logprob: -15.127487182617188

Token 363: '_ar' (ID: 54153)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.0789036676287651
    2. '_ar' → logprob: -2.5789036750793457
    3. '.arange' → logprob: -11.953903198242188
    4. 'Ar' → logprob: -13.328903198242188
    5. 'dtype' → logprob: -13.578903198242188
    6. 'arr' → logprob: -13.828903198242188
    7. '_arr' → logprob: -14.328903198242188
    8. 'range' → logprob: -14.953903198242188
    9. 'array' → logprob: -15.203903198242188
    10. 'arang' → logprob: -15.328903198242188

Token 364: 'ange' (ID: 1052)
  Prédit: 'ange'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ange' → logprob: -0.0006703823455609381
    2. 'nge' → logprob: -7.375670433044434
    3. 'range' → logprob: -10.375670433044434
    4. 'ge' → logprob: -12.000670433044434
    5. 'age' → logprob: -12.375670433044434
    6. 'ar' → logprob: -14.125670433044434
    7. 'an' → logprob: -14.875670433044434
    8. 'ang' → logprob: -15.625670433044434
    9. 'angep' → logprob: -15.750670433044434
    10. 'nage' → logprob: -15.750670433044434

Token 365: '(U' (ID: 27452)
  Prédit: '(U'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(U' → logprob: -0.0015031944494694471
    2. '(' → logprob: -6.501502990722656
    3. '((' → logprob: -14.626502990722656
    4. 'U' → logprob: -16.126502990722656
    5. '1' → logprob: -17.126502990722656
    6. '(L' → logprob: -17.376502990722656
    7. '(F' → logprob: -17.376502990722656
    8. '(I' → logprob: -17.501502990722656
    9. '(T' → logprob: -17.626502990722656
    10. '(N' → logprob: -17.626502990722656

Token 366: ',' (ID: 11)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.3669208884239197
    2. ',' → logprob: -1.3669209480285645
    3. ')' → logprob: -3.4919209480285645
    4. ' ,' → logprob: -4.9919209480285645
    5. ' )
' → logprob: -5.2419209480285645
    6. '[' → logprob: -5.6169209480285645
    7. '[::-' → logprob: -6.2419209480285645
    8. ',d' → logprob: -6.4919209480285645
    9. ')[' → logprob: -6.6169209480285645
    10. '-' → logprob: -7.7419209480285645

Token 367: ' dtype' (ID: 29770)
  Prédit: 'dtype'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dtype' → logprob: -0.010618101805448532
    2. 'np' → logprob: -4.760618209838867
    3. ')' → logprob: -6.510618209838867
    4. ' dtype' → logprob: -8.135618209838867
    5. 'x' → logprob: -10.135618209838867
    6. '1' → logprob: -10.260618209838867
    7. '2' → logprob: -10.635618209838867
    8. 'int' → logprob: -10.760618209838867
    9. ')
' → logprob: -11.010618209838867
    10. '   ' → logprob: -11.510618209838867

Token 368: '=np' (ID: 40593)
  Prédit: '=np'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=np' → logprob: -0.00047702479059807956
    2. '=' → logprob: -8.000476837158203
    3. '=x' → logprob: -9.000476837158203
    4. '=int' → logprob: -11.125476837158203
    5. '=y' → logprob: -13.250476837158203
    6. '=u' → logprob: -14.375476837158203
    7. '=(' → logprob: -15.000476837158203
    8. '=n' → logprob: -15.125476837158203
    9. '=obj' → logprob: -16.250476837158203
    10. '=float' → logprob: -16.375476837158203

Token 369: '.int' (ID: 21499)
  Prédit: '.int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.int' → logprob: -0.018310541287064552
    2. '.uint' → logprob: -4.018310546875
    3. '.object' → logprob: -9.268310546875
    4. 'int' → logprob: -10.268310546875
    5. '.float' → logprob: -10.893310546875
    6. '.bool' → logprob: -12.018310546875
    7. '=int' → logprob: -12.893310546875
    8. '.dtype' → logprob: -13.643310546875
    9. 'uint' → logprob: -13.893310546875
    10. '.' → logprob: -14.518310546875

Token 370: '64' (ID: 2220)
  Prédit: '64'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '64' → logprob: -0.0024982523173093796
    2. '32' → logprob: -6.002498149871826
    3. 'p' → logprob: -10.752498626708984
    4. 'c' → logprob: -13.877498626708984
    5. '8' → logprob: -17.002498626708984
    6. '128' → logprob: -17.127498626708984
    7. '_' → logprob: -17.627498626708984
    8. ')' → logprob: -17.877498626708984
    9. '```' → logprob: -18.252498626708984
    10. '
' → logprob: -18.877498626708984

Token 371: ')[' (ID: 13637)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.3947063982486725
    2. ')' → logprob: -1.51970636844635
    3. ')[' → logprob: -2.2697064876556396
    4. '[::-' → logprob: -5.7697062492370605
    5. '[' → logprob: -7.8947062492370605
    6. '   ' → logprob: -9.269706726074219
    7. ')
' → logprob: -9.644706726074219
    8. '1' → logprob: -9.769706726074219
    9. ',' → logprob: -9.894706726074219
    10. ')+' → logprob: -9.894706726074219

Token 372: '::-' (ID: 96612)
  Prédit: '::-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '::-' → logprob: -0.07095722109079361
    2. '1' → logprob: -2.9459571838378906
    3. ':' → logprob: -4.570957183837891
    4. '::' → logprob: -5.445957183837891
    5. '
' → logprob: -7.945957183837891
    6. ' ::' → logprob: -8.69595718383789
    7. ':]' → logprob: -8.94595718383789
    8. '0' → logprob: -8.94595718383789
    9. ' :' → logprob: -9.07095718383789
    10. '[::-' → logprob: -9.44595718383789

Token 373: '1' (ID: 16)
  Prédit: '64'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '64' → logprob: -3.128163257315464e-07
    2. 'p' → logprob: -15.375
    3. '32' → logprob: -17.0
    4. 'int' → logprob: -19.375
    5. '8' → logprob: -19.75
    6. 'c' → logprob: -20.125
    7. 'dtype' → logprob: -20.375
    8. 'np' → logprob: -20.5
    9. '6' → logprob: -20.875
    10. '```' → logprob: -21.25

Token 374: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.014652194455265999
    2. ']
' → logprob: -4.264652252197266
    3. ']+' → logprob: -8.764652252197266
    4. ')' → logprob: -8.889652252197266
    5. ' ]' → logprob: -9.264652252197266
    6. '])' → logprob: -10.139652252197266
    7. ']

' → logprob: -11.014652252197266
    8. ')
' → logprob: -11.639652252197266
    9. ')]' → logprob: -11.639652252197266
    10. '].' → logprob: -12.389652252197266

Token 375: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10076966136693954
    2. '<|end|>' → logprob: -2.8507697582244873
    3. ' y' → logprob: -4.100769519805908
    4. '
' → logprob: -4.475769519805908
    5. 'y' → logprob: -4.975769519805908
    6. ')' → logprob: -6.850769519805908
    7. '[' → logprob: -7.850769519805908
    8. ',' → logprob: -7.850769519805908
    9. ',y' → logprob: -7.975769519805908
    10. 'x' → logprob: -9.225769996643066

Token 376: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.011167495511472225
    2. 'inv' → logprob: -5.011167526245117
    3. ' y' → logprob: -6.011167526245117
    4. 'fact' → logprob: -6.761167526245117
    5. 'inverse' → logprob: -8.261167526245117
    6. 'factor' → logprob: -8.761167526245117
    7. 'x' → logprob: -9.261167526245117
    8. 'invert' → logprob: -9.386167526245117
    9. '_inv' → logprob: -9.761167526245117
    10. '```' → logprob: -10.636167526245117

Token 377: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0002470350591465831
    2. ' =' → logprob: -9.87524700164795
    3. '[y' → logprob: -10.00024700164795
    4. '=' → logprob: -10.12524700164795
    5. '[:-' → logprob: -10.12524700164795
    6. '[-' → logprob: -11.12524700164795
    7. '-=' → logprob: -11.25024700164795
    8. ' -=' → logprob: -11.50024700164795
    9. '[:]' → logprob: -11.62524700164795
    10. '[::-' → logprob: -11.75024700164795

Token 378: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1466992348432541
    2. '-' → logprob: -2.1466991901397705
    3. '1' → logprob: -4.02169942855835
    4. '-U' → logprob: -7.52169942855835
    5. '
' → logprob: -8.146698951721191
    6. '::-' → logprob: -8.896698951721191
    7. ' -' → logprob: -9.021698951721191
    8. ':' → logprob: -9.271698951721191
    9. ' ' → logprob: -9.396698951721191
    10. '>' → logprob: -9.646698951721191

Token 379: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0002814775798469782
    2. ']=' → logprob: -8.87528133392334
    3. ' ]' → logprob: -8.87528133392334
    4. '=' → logprob: -13.50028133392334
    5. ',' → logprob: -15.50028133392334
    6. ']
' → logprob: -17.500282287597656
    7. ' =' → logprob: -17.500282287597656
    8. ':]' → logprob: -17.625282287597656
    9. ']==' → logprob: -18.375282287597656
    10. '[' → logprob: -18.375282287597656

Token 380: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014175502583384514
    2. ' =' → logprob: -4.2641754150390625
    3. ']=' → logprob: -11.889175415039062
    4. ']' → logprob: -13.139175415039062
    5. '=
' → logprob: -14.389175415039062
    6. '[' → logprob: -14.639175415039062
    7. ')=' → logprob: -14.764175415039062
    8. '+=' → logprob: -14.889175415039062
    9. ',' → logprob: -15.139175415039062
    10. '=np' → logprob: -15.264175415039062

Token 381: ' power' (ID: 3470)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00024370834580622613
    2. ' ' → logprob: -8.750244140625
    3. '0' → logprob: -9.375244140625
    4. '998' → logprob: -15.750244140625
    5. '=' → logprob: -17.937744140625
    6. '(' → logprob: -18.000244140625
    7. '[' → logprob: -18.312744140625
    8. '999' → logprob: -18.500244140625
    9. '-' → logprob: -18.687744140625
    10. '۱' → logprob: -18.750244140625

Token 382: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -2.629921436891891e-05
    2. 'y' → logprob: -11.75002670288086
    3. 'mod' → logprob: -11.75002670288086
    4. '(' → logprob: -12.37502670288086
    5. '_MOD' → logprob: -13.25002670288086
    6. 'Mod' → logprob: -14.00002670288086
    7. '_' → logprob: -14.00002670288086
    8. '(y' → logprob: -14.87502670288086
    9. 'def' → logprob: -14.87502670288086
    10. ' ' → logprob: -15.00002670288086

Token 383: '(f' (ID: 1526)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07471565157175064
    2. '(y' → logprob: -2.6997156143188477
    3. '<|end|>' → logprob: -6.074715614318848
    4. 'y' → logprob: -6.699715614318848
    5. '(x' → logprob: -7.449715614318848
    6. '2' → logprob: -8.574715614318848
    7. '1' → logprob: -9.199715614318848
    8. '('' → logprob: -9.449715614318848
    9. '(
' → logprob: -9.449715614318848
    10. ',y' → logprob: -10.199715614318848

Token 384: 'act' (ID: 588)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.32675984501838684
    2. 'act' → logprob: -1.3267598152160645
    3. '(y' → logprob: -5.3267598152160645
    4. '[y' → logprob: -6.4517598152160645
    5. 'x' → logprob: -6.7017598152160645
    6. '(' → logprob: -6.7017598152160645
    7. '1' → logprob: -7.5767598152160645
    8. ')' → logprob: -7.8267598152160645
    9. '0' → logprob: -7.9517598152160645
    10. 'a' → logprob: -8.076760292053223

Token 385: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.2869642674922943
    2. '[' → logprob: -1.5369642972946167
    3. '(' → logprob: -4.286964416503906
    4. '(U' → logprob: -4.786964416503906
    5. '(-' → logprob: -5.036964416503906
    6. ',' → logprob: -5.286964416503906
    7. ',-' → logprob: -8.661964416503906
    8. ',U' → logprob: -9.161964416503906
    9. '[y' → logprob: -9.536964416503906
    10. '(y' → logprob: -9.661964416503906

Token 386: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.816591434879228e-05
    2. ' ' → logprob: -10.12508773803711
    3. '2' → logprob: -10.75008773803711
    4. '0' → logprob: -12.68758773803711
    5. '11' → logprob: -12.87508773803711
    6. '   ' → logprob: -12.93758773803711
    7. '```' → logprob: -13.31258773803711
    8. '  ' → logprob: -13.50008773803711
    9. ',' → logprob: -13.62508773803711
    10. '
' → logprob: -13.68758773803711

Token 387: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14353203773498535
    2. '],' → logprob: -2.0185320377349854
    3. ' ,' → logprob: -7.393531799316406
    4. '[' → logprob: -9.518531799316406
    5. '),' → logprob: -9.893531799316406
    6. ']' → logprob: -10.893531799316406
    7. 'y' → logprob: -11.143531799316406
    8. '>,' → logprob: -11.268531799316406
    9. '},' → logprob: -11.393531799316406
    10. ' ' → logprob: -11.518531799316406

Token 388: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.08042796701192856
    2. '998' → logprob: -3.080427885055542
    3. '-' → logprob: -3.580427885055542
    4. ' MOD' → logprob: -6.330428123474121
    5. 'get' → logprob: -7.955428123474121
    6. ' -' → logprob: -8.580428123474121
    7. '_MOD' → logprob: -8.580428123474121
    8. 'mod' → logprob: -8.705428123474121
    9. ' ' → logprob: -8.830428123474121
    10. '997' → logprob: -8.955428123474121

Token 389: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.02054247073829174
    2. ' -' → logprob: -3.8955423831939697
    3. ' ' → logprob: -15.02054214477539
    4. ',' → logprob: -16.52054214477539
    5. '  ' → logprob: -16.77054214477539
    6. '```' → logprob: -16.89554214477539
    7. '   ' → logprob: -17.77054214477539
    8. '–' → logprob: -17.89554214477539
    9. '−' → logprob: -18.14554214477539
    10. ')' → logprob: -18.39554214477539

Token 390: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1041145626222715e-05
    2. '
' → logprob: -12.625011444091797
    3. '-' → logprob: -12.750011444091797
    4. ' ' → logprob: -13.375011444091797
    5. '```' → logprob: -13.625011444091797
    6. '

' → logprob: -13.875011444091797
    7. '
' → logprob: -15.687511444091797
    8. '   ' → logprob: -15.812511444091797
    9. ' -' → logprob: -16.187511444091797
    10. ' ' → logprob: -16.250011444091797

Token 391: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.8550976164988242e-05
    2. '-' → logprob: -11.375018119812012
    3. '
' → logprob: -13.000018119812012
    4. '```' → logprob: -13.000018119812012
    5. '

' → logprob: -14.250018119812012
    6. ' ' → logprob: -14.500018119812012
    7. ' -' → logprob: -15.625018119812012
    8. '
' → logprob: -15.750018119812012
    9. '   ' → logprob: -16.437519073486328
    10. '3' → logprob: -16.437519073486328

Token 392: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06243816763162613
    2. ')' → logprob: -2.8124382495880127
    3. ' ,' → logprob: -7.812438011169434
    4. ' )' → logprob: -10.437438011169434
    5. '   ' → logprob: -11.187438011169434
    6. ',
' → logprob: -11.562438011169434
    7. ',)' → logprob: -12.187438011169434
    8. ' ' → logprob: -13.062438011169434
    9. '),' → logprob: -13.812438011169434
    10. ')
' → logprob: -13.812438011169434

Token 393: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.008618474006652832
    2. ' MOD' → logprob: -4.758618354797363
    3. '998' → logprob: -12.758618354797363
    4. 'mod' → logprob: -14.758618354797363
    5. '_MOD' → logprob: -15.133618354797363
    6. 'Mod' → logprob: -15.383618354797363
    7. ')' → logprob: -15.508618354797363
    8. '.MOD' → logprob: -17.25861930847168
    9. '   ' → logprob: -17.88361930847168
    10. ' ' → logprob: -18.00861930847168

Token 394: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00038407891406677663
    2. ')
' → logprob: -7.8753838539123535
    3. ' )' → logprob: -13.000384330749512
    4. ',' → logprob: -14.500384330749512
    5. ')

' → logprob: -15.000384330749512
    6. '   ' → logprob: -15.000384330749512
    7. '),' → logprob: -16.000383377075195
    8. ')
' → logprob: -16.000383377075195
    9. ')y' → logprob: -16.500383377075195
    10. '))' → logprob: -16.750383377075195

Token 395: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5719082951545715
    2. 'for' → logprob: -0.9469082951545715
    3. ' for' → logprob: -3.0719082355499268
    4. '<|end|>' → logprob: -7.446908473968506
    5. 'fact' → logprob: -9.071907997131348
    6. 'y' → logprob: -9.196907997131348
    7. '
' → logprob: -9.321907997131348
    8. ',' → logprob: -9.321907997131348
    9. '```' → logprob: -9.321907997131348
    10. 'def' → logprob: -9.321907997131348

Token 396: ' fact' (ID: 2840)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00030566859641112387
    2. ' for' → logprob: -8.125306129455566
    3. 'def' → logprob: -12.000306129455566
    4. '   ' → logprob: -13.500306129455566
    5. '```' → logprob: -13.750306129455566
    6. 'y' → logprob: -14.000306129455566
    7. '
' → logprob: -16.00030517578125
    8. '	for' → logprob: -16.50030517578125
    9. 'i' → logprob: -18.62530517578125
    10. '``' → logprob: -18.62530517578125

Token 397: '_inv' (ID: 53427)
  Prédit: '_inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inv' → logprob: -0.3879450261592865
    2. '_inverse' → logprob: -2.1379449367523193
    3. '=' → logprob: -2.6379449367523193
    4. ' =' → logprob: -3.1379449367523193
    5. '[' → logprob: -3.1379449367523193
    6. '[::-' → logprob: -3.7629449367523193
    7. '_' → logprob: -4.637945175170898
    8. '_reverse' → logprob: -5.637945175170898
    9. '_rev' → logprob: -5.762945175170898
    10. '[:]' → logprob: -6.762945175170898

Token 398: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07094179093837738
    2. ' =' → logprob: -2.695941686630249
    3. '[' → logprob: -6.945941925048828
    4. '[:]' → logprob: -10.945941925048828
    5. '=np' → logprob: -12.195941925048828
    6. ',' → logprob: -12.820941925048828
    7. ']' → logprob: -12.820941925048828
    8. ')' → logprob: -12.945941925048828
    9. '_=' → logprob: -13.070941925048828
    10. '   ' → logprob: -13.195941925048828

Token 399: ' cum' (ID: 10023)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.46859583258628845
    2. 'resize' → logprob: -1.4685958623886108
    3. ' np' → logprob: -2.4685957431793213
    4. 'cum' → logprob: -3.3435957431793213
    5. ' resize' → logprob: -4.7185959815979
    6. 'y' → logprob: -5.2185959815979
    7. ' cum' → logprob: -5.3435959815979
    8. ' y' → logprob: -6.3435959815979
    9. 'as' → logprob: -6.4685959815979
    10. ' as' → logprob: -7.2185959815979

Token 400: 'prod' (ID: 36781)
  Prédit: 'prod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prod' → logprob: -1.6240566083070007e-06
    2. 'product' → logprob: -13.750001907348633
    3. 'pro' → logprob: -15.875001907348633
    4. '```' → logprob: -16.125001907348633
    5. 'pow' → logprob: -16.250001907348633
    6. '_prod' → logprob: -16.500001907348633
    7. '[' → logprob: -18.750001907348633
    8. '   ' → logprob: -19.000001907348633
    9. 'prof' → logprob: -19.375001907348633
    10. ' prod' → logprob: -19.375001907348633

Token 401: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.0015855696983635426
    2. '_stage' → logprob: -6.626585483551025
    3. '(' → logprob: -9.126585960388184
    4. 'Stage' → logprob: -9.626585960388184
    5. '(np' → logprob: -10.251585960388184
    6. 'y' → logprob: -11.251585960388184
    7. '[::-' → logprob: -11.626585960388184
    8. '((' → logprob: -12.251585960388184
    9. ' (' → logprob: -12.626585960388184
    10. 'def' → logprob: -12.876585960388184

Token 402: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6520897746086121
    2. '[::-' → logprob: -0.7770897746086121
    3. ')[' → logprob: -4.402089595794678
    4. ')' → logprob: -5.027089595794678
    5. ',[' → logprob: -8.402090072631836
    6. ')
' → logprob: -9.277090072631836
    7. ' ,' → logprob: -9.527090072631836
    8. ',)' → logprob: -10.027090072631836
    9. '[:' → logprob: -11.277090072631836
    10. ',
' → logprob: -12.152090072631836

Token 403: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.038044821470975876
    2. ' MOD' → logprob: -3.2880449295043945
    3. '_MOD' → logprob: -13.913044929504395
    4. ' ' → logprob: -14.163044929504395
    5. '.MOD' → logprob: -14.163044929504395
    6. '998' → logprob: -15.038044929504395
    7. '   ' → logprob: -15.413044929504395
    8. 'mod' → logprob: -16.163043975830078
    9. ')' → logprob: -16.288043975830078
    10. 'M' → logprob: -16.288043975830078

Token 404: ')[' (ID: 13637)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018160004168748856
    2. ')
' → logprob: -4.018159866333008
    3. '   ' → logprob: -12.393159866333008
    4. ')

' → logprob: -12.518159866333008
    5. ')[' → logprob: -13.768159866333008
    6. ')
' → logprob: -14.393159866333008
    7. '[::-' → logprob: -15.518159866333008
    8. ' )' → logprob: -16.143159866333008
    9. '[' → logprob: -16.643159866333008
    10. ').' → logprob: -16.768159866333008

Token 405: '::-' (ID: 96612)
  Prédit: '::-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '::-' → logprob: -0.027629757300019264
    2. '[::-' → logprob: -3.902629852294922
    3. ':' → logprob: -5.902629852294922
    4. '::' → logprob: -6.027629852294922
    5. ':]' → logprob: -6.777629852294922
    6. ']' → logprob: -7.527629852294922
    7. ' ::' → logprob: -9.027629852294922
    8. '
' → logprob: -10.652629852294922
    9. '][' → logprob: -10.902629852294922
    10. ' :]' → logprob: -10.902629852294922

Token 406: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000918604782782495
    2. '-' → logprob: -8.6259183883667
    3. '0' → logprob: -8.7509183883667
    4. 'None' → logprob: -9.0009183883667
    5. '])' → logprob: -9.8759183883667
    6. 'int' → logprob: -10.0009183883667
    7. 'idx' → logprob: -10.1259183883667
    8. 'max' → logprob: -10.1259183883667
    9. 'index' → logprob: -10.6259183883667
    10. 'L' → logprob: -10.6259183883667

Token 407: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01050108764320612
    2. ']' → logprob: -4.635500907897949
    3. ')
' → logprob: -7.385500907897949
    4. '   ' → logprob: -10.01050090789795
    5. ' )' → logprob: -10.38550090789795
    6. ')]' → logprob: -10.51050090789795
    7. ',' → logprob: -12.01050090789795
    8. '()' → logprob: -12.88550090789795
    9. ')return' → logprob: -13.01050090789795
    10. ']
' → logprob: -13.01050090789795

Token 408: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -9.519893501419574e-05
    2. 'return' → logprob: -9.37509536743164
    3. ' return' → logprob: -11.50009536743164
    4. 'def' → logprob: -15.87509536743164
    5. '	return' → logprob: -16.87509536743164
    6. '```' → logprob: -17.62509536743164
    7. ' ' → logprob: -17.87509536743164
    8. '       ' → logprob: -18.87509536743164
    9. '  ' → logprob: -19.25009536743164
    10. '<|end|>' → logprob: -20.00009536743164

Token 409: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.3213854432106018
    2. '   ' → logprob: -1.321385383605957
    3. ' return' → logprob: -4.821385383605957
    4. '
' → logprob: -11.196385383605957
    5. 'fact' → logprob: -11.821385383605957
    6. 'def' → logprob: -12.196385383605957
    7. ' ' → logprob: -12.571385383605957
    8. '	return' → logprob: -12.821385383605957
    9. '```' → logprob: -13.321385383605957
    10. '  ' → logprob: -14.571385383605957

Token 410: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.0005532711511477828
    2. ' fact' → logprob: -7.500553131103516
    3. '(f' → logprob: -15.500553131103516
    4. '_fact' → logprob: -17.250553131103516
    5. 'facts' → logprob: -17.625553131103516
    6. 'Fact' → logprob: -17.750553131103516
    7. 'factor' → logprob: -18.500553131103516
    8. 'fac' → logprob: -19.875553131103516
    9. ' (' → logprob: -20.250553131103516
    10. 'f' → logprob: -20.375553131103516

Token 411: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013121402589604259
    2. ',
' → logprob: -7.626312255859375
    3. ',_' → logprob: -8.001312255859375
    4. '_,' → logprob: -8.501312255859375
    5. '<|end|>' → logprob: -9.251312255859375
    6. ' ,' → logprob: -9.751312255859375
    7. '_fact' → logprob: -10.126312255859375
    8. '_inv' → logprob: -10.751312255859375
    9. '_' → logprob: -11.126312255859375
    10. '[' → logprob: -12.001312255859375

Token 412: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.029750604182481766
    2. ' fact' → logprob: -3.5297505855560303
    3. '_fact' → logprob: -16.52975082397461
    4. 'Fact' → logprob: -17.90475082397461
    5. '   ' → logprob: -18.02975082397461
    6. 'factor' → logprob: -18.65475082397461
    7. 'facts' → logprob: -19.65475082397461
    8. '.fact' → logprob: -19.65475082397461
    9. '    ' → logprob: -20.02975082397461
    10. 'f' → logprob: -20.02975082397461

Token 413: '_inv' (ID: 53427)
  Prédit: '_inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inv' → logprob: -0.00019936825265176594
    2. '_fact' → logprob: -9.500199317932129
    3. '_inverse' → logprob: -9.625199317932129
    4. '_fac' → logprob: -11.500199317932129
    5. '_in' → logprob: -11.625199317932129
    6. '_inf' → logprob: -12.000199317932129
    7. '[' → logprob: -12.000199317932129
    8. 'inv' → logprob: -12.250199317932129
    9. ',_' → logprob: -12.250199317932129
    10. '_val' → logprob: -12.750199317932129

Token 414: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 415: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -8.363617962459102e-05
    2. ')' → logprob: -10.625083923339844
    3. '#' → logprob: -10.750083923339844
    4. '<|end|>' → logprob: -10.750083923339844
    5. '(' → logprob: -12.375083923339844
    6. 'import' → logprob: -12.500083923339844
    7. '```' → logprob: -12.625083923339844
    8. ' def' → logprob: -13.875083923339844
    9. '(
' → logprob: -14.250083923339844
    10. '[' → logprob: -14.250083923339844

Token 416: ' make' (ID: 1520)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.4876161217689514
    2. 'factor' → logprob: -1.6126160621643066
    3. 'fact' → logprob: -2.3626160621643066
    4. ' comb' → logprob: -3.6126160621643066
    5. 'n' → logprob: -4.112616062164307
    6. 'main' → logprob: -4.237616062164307
    7. ' factorial' → logprob: -4.862616062164307
    8. 'def' → logprob: -5.237616062164307
    9. ' n' → logprob: -5.862616062164307
    10. 'combine' → logprob: -5.862616062164307

Token 417: '_comb' (ID: 105956)
  Prédit: '_comb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_comb' → logprob: -0.8726907968521118
    2. '_fact' → logprob: -0.8726907968521118
    3. '_inv' → logprob: -2.8726906776428223
    4. '_factor' → logprob: -3.3726906776428223
    5. '_com' → logprob: -4.497690677642822
    6. '_combo' → logprob: -4.497690677642822
    7. 'fact' → logprob: -4.747690677642822
    8. '_fac' → logprob: -4.747690677642822
    9. '```' → logprob: -5.872690677642822
    10. 'comb' → logprob: -5.997690677642822

Token 418: 'N' (ID: 45)
  Prédit: '(U'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(U' → logprob: -0.003114853287115693
    2. '(N' → logprob: -6.253114700317383
    3. '(n' → logprob: -6.753114700317383
    4. 'ination' → logprob: -11.878114700317383
    5. '(' → logprob: -11.878114700317383
    6. '():' → logprob: -14.253114700317383
    7. '(size' → logprob: -14.628114700317383
    8. 'U' → logprob: -14.753114700317383
    9. '(
' → logprob: -14.878114700317383
    10. '```' → logprob: -15.128114700317383

Token 419: '(N' (ID: 10564)
  Prédit: '(U'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(U' → logprob: -0.03382239118218422
    2. '(N' → logprob: -3.4088222980499268
    3. '(' → logprob: -9.658822059631348
    4. 'def' → logprob: -10.783822059631348
    5. '(n' → logprob: -10.908822059631348
    6. '(P' → logprob: -11.033822059631348
    7. 'U' → logprob: -11.033822059631348
    8. 'ination' → logprob: -12.533822059631348
    9. '():
' → logprob: -12.783822059631348
    10. '(L' → logprob: -13.033822059631348

Token 420: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.28549137711524963
    2. ',' → logprob: -1.4104913473129272
    3. '+' → logprob: -6.035491466522217
    4. ')' → logprob: -7.035491466522217
    5. '):
' → logprob: -7.160491466522217
    6. ' ):' → logprob: -8.910490989685059
    7. ' ,' → logprob: -9.785490989685059
    8. ':' → logprob: -10.910490989685059
    9. '):
' → logprob: -12.035490989685059
    10. '   ' → logprob: -12.035490989685059

Token 421: ' fact' (ID: 2840)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.012314792722463608
    2. ' MOD' → logprob: -5.137314796447754
    3. 'mod' → logprob: -6.012314796447754
    4. 'U' → logprob: -6.262314796447754
    5. 'M' → logprob: -6.637314796447754
    6. 'fact' → logprob: -8.887314796447754
    7. ')' → logprob: -9.012314796447754
    8. 'get' → logprob: -9.137314796447754
    9. '):
' → logprob: -9.887314796447754
    10. ' ' → logprob: -9.887314796447754

Token 422: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.015718642622232437
    2. '):' → logprob: -4.265718460083008
    3. '):
' → logprob: -6.890718460083008
    4. '_,' → logprob: -8.640718460083008
    5. ' ,' → logprob: -9.140718460083008
    6. ')' → logprob: -9.140718460083008
    7. ',U' → logprob: -10.140718460083008
    8. ',
' → logprob: -10.765718460083008
    9. 'U' → logprob: -10.765718460083008
    10. '   ' → logprob: -11.515718460083008

Token 423: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.004085878375917673
    2. ' fact' → logprob: -5.504086017608643
    3. 'inv' → logprob: -12.504085540771484
    4. '   ' → logprob: -14.129085540771484
    5. '_fact' → logprob: -14.129085540771484
    6. ' ' → logprob: -14.754085540771484
    7. 'factor' → logprob: -15.004085540771484
    8. '  ' → logprob: -15.254085540771484
    9. ')' → logprob: -15.379085540771484
    10. 'f' → logprob: -15.754085540771484

Token 424: '_inv' (ID: 53427)
  Prédit: '_inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inv' → logprob: -0.0003122247871942818
    2. 'inv' → logprob: -8.750311851501465
    3. ',' → logprob: -9.000311851501465
    4. '):
' → logprob: -12.000311851501465
    5. '):' → logprob: -12.125311851501465
    6. ')' → logprob: -12.500311851501465
    7. ',_' → logprob: -12.750311851501465
    8. '_,' → logprob: -13.250311851501465
    9. '_inverse' → logprob: -13.500311851501465
    10. '_INV' → logprob: -13.625311851501465

Token 425: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18916183710098267
    2. '):' → logprob: -1.814161777496338
    3. '):
' → logprob: -4.689161777496338
    4. ' ,' → logprob: -9.564162254333496
    5. ')' → logprob: -10.189162254333496
    6. '   ' → logprob: -10.439162254333496
    7. '):
' → logprob: -11.314162254333496
    8. ',N' → logprob: -11.564162254333496
    9. ',
' → logprob: -12.189162254333496
    10. ' ):' → logprob: -12.314162254333496

Token 426: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.09468019753694534
    2. ' MOD' → logprob: -3.0946803092956543
    3. 'k' → logprob: -3.9696803092956543
    4. 'mod' → logprob: -5.219680309295654
    5. 'r' → logprob: -5.344680309295654
    6. 'K' → logprob: -5.344680309295654
    7. 'fact' → logprob: -5.844680309295654
    8. 'M' → logprob: -5.969680309295654
    9. 'n' → logprob: -6.094680309295654
    10. 'i' → logprob: -7.219680309295654

Token 427: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01621313765645027
    2. '):
' → logprob: -4.1412129402160645
    3. ')' → logprob: -9.641213417053223
    4. '):
' → logprob: -9.766213417053223
    5. ',' → logprob: -9.891213417053223
    6. '   ' → logprob: -12.391213417053223
    7. ':' → logprob: -14.641213417053223
    8. ' ):' → logprob: -14.766213417053223
    9. '):

' → logprob: -15.141213417053223
    10. '=None' → logprob: -15.391213417053223

Token 428: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05511719733476639
    2. 'def' → logprob: -2.930117130279541
    3. ' def' → logprob: -8.9301176071167
    4. 'arr' → logprob: -10.1801176071167
    5. 'return' → logprob: -10.4301176071167
    6. '	def' → logprob: -11.5551176071167
    7. 'L' → logprob: -11.8051176071167
    8. 'x' → logprob: -12.9301176071167
    9. '```' → logprob: -13.0551176071167
    10. '    
' → logprob: -13.3051176071167

Token 429: ' a' (ID: 261)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0028765571769326925
    2. 'L' → logprob: -6.8778767585754395
    3. 'comb' → logprob: -7.3778767585754395
    4. 'return' → logprob: -7.6278767585754395
    5. '   ' → logprob: -8.502876281738281
    6. 'C' → logprob: -9.002876281738281
    7. 'c' → logprob: -9.002876281738281
    8. 'arr' → logprob: -9.127876281738281
    9. 'x' → logprob: -9.752876281738281
    10. ' def' → logprob: -10.127876281738281

Token 430: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.46128514409065247
    2. ' =' → logprob: -1.21128511428833
    3. 'rr' → logprob: -3.21128511428833
    4. '=np' → logprob: -4.08628511428833
    5. 'r' → logprob: -5.58628511428833
    6. 'ns' → logprob: -5.83628511428833
    7. 'rray' → logprob: -5.96128511428833
    8. 's' → logprob: -6.46128511428833
    9. 'def' → logprob: -7.21128511428833
    10. ',' → logprob: -7.46128511428833

Token 431: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.028833623975515366
    2. 'np' → logprob: -4.153833389282227
    3. ' fact' → logprob: -4.653833389282227
    4. 'as' → logprob: -7.153833389282227
    5. ' np' → logprob: -7.278833389282227
    6. '(np' → logprob: -8.153833389282227
    7. '(as' → logprob: -8.278833389282227
    8. 'N' → logprob: -8.403833389282227
    9. '(' → logprob: -9.278833389282227
    10. ' as' → logprob: -9.403833389282227

Token 432: '[N' (ID: 49776)
  Prédit: '[N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[N' → logprob: -6.034592388459714e-06
    2. 'N' → logprob: -12.125005722045898
    3. '[' → logprob: -15.625005722045898
    4. '(N' → logprob: -15.875005722045898
    5. '[:' → logprob: -16.0000057220459
    6. '[n' → logprob: -16.2500057220459
    7. '	N' → logprob: -17.2500057220459
    8. '[np' → logprob: -18.1250057220459
    9. '_N' → logprob: -18.3750057220459
    10. ',N' → logprob: -19.0000057220459

Token 433: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06231418251991272
    2. ']
' → logprob: -2.81231427192688
    3. ']*' → logprob: -8.8123140335083
    4. ']
' → logprob: -9.4373140335083
    5. ' ]' → logprob: -9.9373140335083
    6. '-' → logprob: -10.5623140335083
    7. ']

' → logprob: -11.4373140335083
    8. ' ' → logprob: -12.3123140335083
    9. ' ]
' → logprob: -12.3123140335083
    10. '   ' → logprob: -12.3123140335083

Token 434: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8335570096969604
    2. '   ' → logprob: -1.0835570096969604
    3. ' *' → logprob: -2.20855712890625
    4. '*' → logprob: -3.33355712890625
    5. '-' → logprob: -3.33355712890625
    6. ',' → logprob: -3.95855712890625
    7. '  ' → logprob: -4.20855712890625
    8. '
' → logprob: -5.95855712890625
    9. ' -' → logprob: -6.45855712890625
    10. ' ' → logprob: -6.70855712890625

Token 435: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.015114925801753998
    2. 'def' → logprob: -4.515114784240723
    3. '   ' → logprob: -5.765114784240723
    4. ' b' → logprob: -7.765114784240723
    5. 'n' → logprob: -8.765114784240723
    6. 'a' → logprob: -8.890114784240723
    7. 'inv' → logprob: -9.890114784240723
    8. 'fact' → logprob: -10.015114784240723
    9. ' def' → logprob: -10.140114784240723
    10. 'return' → logprob: -11.140114784240723

Token 436: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759604573249817
    2. '=' → logprob: -0.8259604573249817
    3. ',' → logprob: -10.950960159301758
    4. ' ' → logprob: -14.075960159301758
    5. 'a' → logprob: -14.575960159301758
    6. 'def' → logprob: -14.825960159301758
    7. '   ' → logprob: -14.825960159301758
    8. '*' → logprob: -15.075960159301758
    9. ')' → logprob: -15.825960159301758
    10. ' =
' → logprob: -16.075960159301758

Token 437: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.006776000373065472
    2. ' fact' → logprob: -5.006775856018066
    3. '(f' → logprob: -9.881775856018066
    4. 'factor' → logprob: -12.131775856018066
    5. ' (' → logprob: -14.006775856018066
    6. '(' → logprob: -14.131775856018066
    7. '_fact' → logprob: -14.131775856018066
    8. 'fac' → logprob: -15.131775856018066
    9. '.fact' → logprob: -15.131775856018066
    10. '   ' → logprob: -15.381775856018066

Token 438: '_inv' (ID: 53427)
  Prédit: '[N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[N' → logprob: -0.08025756478309631
    2. 'N' → logprob: -2.5802576541900635
    3. '[' → logprob: -7.705257415771484
    4. '   ' → logprob: -7.955257415771484
    5. '_inv' → logprob: -9.330257415771484
    6. '(N' → logprob: -9.455257415771484
    7. '[-' → logprob: -9.830257415771484
    8. 'a' → logprob: -9.955257415771484
    9. '_N' → logprob: -10.080257415771484
    10. '```' → logprob: -10.330257415771484

Token 439: '[:' (ID: 7808)
  Prédit: '[N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[N' → logprob: -0.004724057391285896
    2. 'N' → logprob: -6.004724025726318
    3. '[' → logprob: -6.379724025726318
    4. '   ' → logprob: -8.129724502563477
    5. '[a' → logprob: -9.504724502563477
    6. 'a' → logprob: -9.629724502563477
    7. '[len' → logprob: -10.754724502563477
    8. '[n' → logprob: -11.004724502563477
    9. '[-' → logprob: -11.129724502563477
    10. '
' → logprob: -11.379724502563477

Token 440: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0012358223320916295
    2. '0' → logprob: -7.7512359619140625
    3. '1' → logprob: -8.001235961914062
    4. '2' → logprob: -8.001235961914062
    5. ' N' → logprob: -10.126235961914062
    6. '[N' → logprob: -10.626235961914062
    7. 'a' → logprob: -10.876235961914062
    8. '   ' → logprob: -11.251235961914062
    9. '100' → logprob: -11.626235961914062
    10. '(N' → logprob: -11.876235961914062

Token 441: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.05792833864688873
    2. ']' → logprob: -3.4329283237457275
    3. ' +' → logprob: -4.057928562164307
    4. '   ' → logprob: -6.057928562164307
    5. '1' → logprob: -6.182928562164307
    6. 'N' → logprob: -7.182928562164307
    7. ' ' → logprob: -7.557928562164307
    8. '[' → logprob: -7.932928562164307
    9. ']
' → logprob: -8.557928085327148
    10. '[N' → logprob: -9.307928085327148

Token 442: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000353100651409477
    2. '+' → logprob: -8.00035285949707
    3. ' ' → logprob: -11.00035285949707
    4. '   ' → logprob: -14.37535285949707
    5. ' +' → logprob: -15.37535285949707
    6. '-' → logprob: -16.00035285949707
    7. '```' → logprob: -17.37535285949707
    8. ' -' → logprob: -17.62535285949707
    9. '2' → logprob: -18.62535285949707
    10. '
' → logprob: -18.87535285949707

Token 443: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004338614176958799
    2. ']
' → logprob: -5.50433874130249
    3. ' ]' → logprob: -9.629338264465332
    4. '   ' → logprob: -9.754338264465332
    5. '[' → logprob: -10.254338264465332
    6. '[N' → logprob: -11.004338264465332
    7. '][' → logprob: -11.129338264465332
    8. ']*' → logprob: -11.254338264465332
    9. ']

' → logprob: -11.629338264465332
    10. 'a' → logprob: -12.129338264465332

Token 444: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05783575028181076
    2. '[' → logprob: -3.182835817337036
    3. '**' → logprob: -4.932835578918457
    4. '[:]' → logprob: -5.682835578918457
    5. '*' → logprob: -6.432835578918457
    6. '
' → logprob: -7.807835578918457
    7. ',' → logprob: -7.932835578918457
    8. '[a' → logprob: -8.307835578918457
    9. ')' → logprob: -8.807835578918457
    10. ' ' → logprob: -8.807835578918457

Token 445: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.015369217842817307
    2. '   ' → logprob: -4.265369415283203
    3. 'return' → logprob: -7.390369415283203
    4. ' c' → logprob: -8.390369415283203
    5. 'a' → logprob: -9.390369415283203
    6. 'res' → logprob: -9.640369415283203
    7. '*c' → logprob: -9.640369415283203
    8. '[' → logprob: -10.390369415283203
    9. '
' → logprob: -10.890369415283203
    10. '```' → logprob: -11.140369415283203

Token 446: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20141403377056122
    2. ' =' → logprob: -1.7014139890670776
    3. ',' → logprob: -14.326414108276367
    4. ' ' → logprob: -16.451414108276367
    5. '=
' → logprob: -16.826414108276367
    6. ' =
' → logprob: -17.701414108276367
    7. 's' → logprob: -18.451414108276367
    8. '=np' → logprob: -18.576414108276367
    9. '  ' → logprob: -18.701414108276367
    10. 'a' → logprob: -18.701414108276367

Token 447: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.029926475137472153
    2. ' fact' → logprob: -3.5299265384674072
    3. 'np' → logprob: -8.904926300048828
    4. ' np' → logprob: -11.529926300048828
    5. 'a' → logprob: -12.029926300048828
    6. 'arr' → logprob: -12.279926300048828
    7. '_fact' → logprob: -12.779926300048828
    8. '[' → logprob: -12.904926300048828
    9. ' ' → logprob: -13.029926300048828
    10. 'facts' → logprob: -13.279926300048828

Token 448: '_inv' (ID: 53427)
  Prédit: '_inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inv' → logprob: -0.16165731847286224
    2. '[N' → logprob: -1.9116573333740234
    3. '[:' → logprob: -7.286657333374023
    4. '[' → logprob: -7.911657333374023
    5. 'inv' → logprob: -8.661657333374023
    6. 'Inv' → logprob: -9.536657333374023
    7. '_INV' → logprob: -9.661657333374023
    8. '
' → logprob: -10.286657333374023
    9. '[:-' → logprob: -12.036657333374023
    10. 'N' → logprob: -12.411657333374023

Token 449: '[N' (ID: 49776)
  Prédit: '[N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[N' → logprob: -0.16490808129310608
    2. '[:' → logprob: -1.9149080514907837
    3. '[' → logprob: -5.414907932281494
    4. '[-' → logprob: -9.039908409118652
    5. '[:]' → logprob: -9.914908409118652
    6. '[:-' → logprob: -10.789908409118652
    7. 'N' → logprob: -10.914908409118652
    8. '[::-' → logprob: -12.164908409118652
    9. '[n' → logprob: -13.289908409118652
    10. '[np' → logprob: -13.289908409118652

Token 450: '::-' (ID: 96612)
  Prédit: '::-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '::-' → logprob: -0.7785546779632568
    2. '-' → logprob: -1.6535546779632568
    3. ' -' → logprob: -1.9035546779632568
    4. ']' → logprob: -2.403554677963257
    5. '-N' → logprob: -3.028554677963257
    6. ':' → logprob: -3.528554677963257
    7. ':]' → logprob: -3.653554677963257
    8. '-n' → logprob: -6.528554916381836
    9. '+' → logprob: -6.528554916381836
    10. ':N' → logprob: -7.153554916381836

Token 451: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.226628895296017e-06
    2. '-' → logprob: -11.875007629394531
    3. ' ' → logprob: -16.12500762939453
    4. '   ' → logprob: -16.62500762939453
    5. ' -' → logprob: -17.62500762939453
    6. '```' → logprob: -18.50000762939453
    7. '１' → logprob: -18.75000762939453
    8. ',' → logprob: -19.06250762939453
    9. ']' → logprob: -19.50000762939453
    10. '  ' → logprob: -19.68750762939453

Token 452: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0006078407750464976
    2. ']
' → logprob: -8.12560749053955
    3. ' ]' → logprob: -9.25060749053955
    4. '][:' → logprob: -9.62560749053955
    5. '])' → logprob: -9.87560749053955
    6. '1' → logprob: -10.50060749053955
    7. ']

' → logprob: -10.75060749053955
    8. '].' → logprob: -11.75060749053955
    9. ' ' → logprob: -11.87560749053955
    10. ',' → logprob: -12.12560749053955

Token 453: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.35778436064720154
    2. '   ' → logprob: -1.857784390449524
    3. '<|end|>' → logprob: -2.8577842712402344
    4. '
' → logprob: -3.7327842712402344
    5. '[' → logprob: -3.9827842712402344
    6. ' ' → logprob: -4.732784271240234
    7. '```' → logprob: -4.732784271240234
    8. '**' → logprob: -5.232784271240234
    9. '[:]' → logprob: -5.482784271240234
    10. '  ' → logprob: -6.107784271240234

Token 454: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.986338198184967
    2. 'def' → logprob: -1.2363381385803223
    3. 'return' → logprob: -1.4863381385803223
    4. ')' → logprob: -2.3613381385803223
    5. '
' → logprob: -5.236338138580322
    6. '```' → logprob: -5.736338138580322
    7. ' return' → logprob: -6.111338138580322
    8. 'result' → logprob: -6.236338138580322
    9. ')
' → logprob: -6.736338138580322
    10. '[' → logprob: -8.11133861541748

Token 455: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931848526000977
    2. ' =' → logprob: -0.6931848526000977
    3. 'ef' → logprob: -11.943184852600098
    4. ',' → logprob: -11.943184852600098
    5. '=np' → logprob: -12.318184852600098
    6. '[:]' → logprob: -12.318184852600098
    7. '=[]' → logprob: -12.943184852600098
    8. 'a' → logprob: -13.068184852600098
    9. '[' → logprob: -13.443184852600098
    10. 'f' → logprob: -13.818184852600098

Token 456: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.051350124180316925
    2. '(a' → logprob: -3.9263501167297363
    3. 'b' → logprob: -4.176350116729736
    4. ' a' → logprob: -4.551350116729736
    5. ' (' → logprob: -6.551350116729736
    6. 'np' → logprob: -6.926350116729736
    7. 'fact' → logprob: -7.426350116729736
    8. ' b' → logprob: -7.551350116729736
    9. '(b' → logprob: -7.926350116729736
    10. '(np' → logprob: -8.176350593566895

Token 457: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.3037797212600708
    2. '*' → logprob: -1.4287797212600708
    3. '*b' → logprob: -3.9287796020507812
    4. '*np' → logprob: -7.553779602050781
    5. '*d' → logprob: -7.678779602050781
    6. '=' → logprob: -7.678779602050781
    7. 'b' → logprob: -8.178779602050781
    8. '*(' → logprob: -8.678779602050781
    9. ' ' → logprob: -8.678779602050781
    10. '*a' → logprob: -8.928779602050781

Token 458: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0807546079158783
    2. ' b' → logprob: -2.580754518508911
    3. '(b' → logprob: -6.70575475692749
    4. ' (' → logprob: -7.45575475692749
    5. '(' → logprob: -10.330754280090332
    6. ' ' → logprob: -11.080754280090332
    7. '   ' → logprob: -12.330754280090332
    8. 'c' → logprob: -12.955754280090332
    9. '(np' → logprob: -13.455754280090332
    10. 'np' → logprob: -13.830754280090332

Token 459: ' %' (ID: 1851)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.16224230825901031
    2. '*' → logprob: -1.9122422933578491
    3. '*c' → logprob: -6.787242412567139
    4. '<|end|>' → logprob: -7.662242412567139
    5. '*d' → logprob: -8.53724193572998
    6. '   ' → logprob: -9.91224193572998
    7. ' ' → logprob: -10.16224193572998
    8. '*np' → logprob: -10.53724193572998
    9. '%' → logprob: -11.16224193572998
    10. '[' → logprob: -11.16224193572998

Token 460: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.000558512459974736
    2. ' MOD' → logprob: -7.500558376312256
    3. 'mod' → logprob: -12.125558853149414
    4. '_MOD' → logprob: -16.250558853149414
    5. ' mod' → logprob: -17.500558853149414
    6. ' ' → logprob: -18.000558853149414
    7. '.MOD' → logprob: -18.250558853149414
    8. '   ' → logprob: -18.250558853149414
    9. 'Mod' → logprob: -19.500558853149414
    10. '  ' → logprob: -19.875558853149414

Token 461: '
' (ID: 198)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.4412243366241455
    2. '   ' → logprob: -1.1912243366241455
    3. '
' → logprob: -3.6912243366241455
    4. '*' → logprob: -4.566224098205566
    5. ' ' → logprob: -4.941224098205566
    6. ' %' → logprob: -5.941224098205566
    7. '%' → logprob: -6.191224098205566
    8. '  ' → logprob: -6.566224098205566
    9. ' 
' → logprob: -6.691224098205566
    10. '    
' → logprob: -6.816224098205566

Token 462: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0035005267709493637
    2. ' *' → logprob: -6.753500461578369
    3. '
' → logprob: -7.003500461578369
    4. '*c' → logprob: -7.628500461578369
    5. '    
' → logprob: -8.753500938415527
    6. '*' → logprob: -8.878500938415527
    7. '```' → logprob: -9.003500938415527
    8. '  ' → logprob: -9.128500938415527
    9. ' ' → logprob: -9.253500938415527
    10. '%' → logprob: -9.503500938415527

Token 463: ' e' (ID: 319)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.011951349675655365
    2. 'c' → logprob: -5.386951446533203
    3. ' d' → logprob: -5.511951446533203
    4. '   ' → logprob: -5.886951446533203
    5. 'e' (adapté à ' e') → logprob: -7.886951446533203
    6. '*d' → logprob: -9.511951446533203
    7. ' c' → logprob: -11.386951446533203
    8. '*c' → logprob: -11.636951446533203
    9. '*' → logprob: -12.011951446533203
    10. ' e' → logprob: -12.386951446533203

Token 464: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38687199354171753
    2. ' =' → logprob: -1.1368720531463623
    3. 'd' → logprob: -14.636872291564941
    4. ' ' → logprob: -15.761872291564941
    5. ',' → logprob: -16.386871337890625
    6. '*' → logprob: -16.886871337890625
    7. '=
' → logprob: -17.136871337890625
    8. 'e' → logprob: -17.261871337890625
    9. 'f' → logprob: -17.261871337890625
    10. 's' → logprob: -17.386871337890625

Token 465: ' d' (ID: 272)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.32325977087020874
    2. 'd' → logprob: -1.8232598304748535
    3. '(c' → logprob: -3.0732598304748535
    4. ' c' → logprob: -3.4482598304748535
    5. '(d' → logprob: -3.8232598304748535
    6. ' d' → logprob: -4.3232598304748535
    7. ' (' → logprob: -6.9482598304748535
    8. '   ' → logprob: -8.448259353637695
    9. ' ' → logprob: -8.823259353637695
    10. '(' → logprob: -8.948259353637695

Token 466: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5797905325889587
    2. ' *' → logprob: -0.8297905325889587
    3. '*c' → logprob: -5.9547905921936035
    4. '*=' → logprob: -7.0797905921936035
    5. '=' → logprob: -8.204790115356445
    6. ' *=' → logprob: -9.204790115356445
    7. ' =' → logprob: -10.704790115356445
    8. 'c' → logprob: -12.329790115356445
    9. ' ' → logprob: -13.704790115356445
    10. '*a' → logprob: -14.079790115356445

Token 467: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0024775585625320673
    2. ' c' → logprob: -6.002477645874023
    3. '   ' → logprob: -13.627477645874023
    4. ' ' → logprob: -14.877477645874023
    5. '  ' → logprob: -16.252477645874023
    6. '	c' → logprob: -16.377477645874023
    7. ')c' → logprob: -17.502477645874023
    8. '
' → logprob: -17.752477645874023
    9. '```' → logprob: -18.127477645874023
    10. '(c' → logprob: -18.127477645874023

Token 468: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.009763410314917564
    2. '%' → logprob: -4.634763240814209
    3. ' %=' → logprob: -12.759763717651367
    4. ' ' → logprob: -13.009763717651367
    5. ')' → logprob: -13.884763717651367
    6. ' %#' → logprob: -14.884763717651367
    7. ')%' → logprob: -15.009763717651367
    8. '<|end|>' → logprob: -15.634763717651367
    9. ' %
' → logprob: -16.134763717651367
    10. '
' → logprob: -16.634763717651367

Token 469: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.01815064437687397
    2. ' MOD' → logprob: -4.018150806427002
    3. '_MOD' → logprob: -14.768150329589844
    4. 'mod' → logprob: -15.018150329589844
    5. ' ' → logprob: -16.643150329589844
    6. 'Mod' → logprob: -17.143150329589844
    7. '.MOD' → logprob: -17.268150329589844
    8. '   ' → logprob: -18.518150329589844
    9. ' mod' → logprob: -19.018150329589844
    10. 'MO' → logprob: -19.768150329589844

Token 470: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0855521485209465
    2. 'return' → logprob: -3.085552215576172
    3. ' return' → logprob: -4.210552215576172
    4. '	return' → logprob: -4.585552215576172
    5. '<|end|>' → logprob: -4.835552215576172
    6. '
' → logprob: -6.835552215576172
    7. ')' → logprob: -7.710552215576172
    8. '    
' → logprob: -7.710552215576172
    9. '  ' → logprob: -7.835552215576172
    10. ' ' → logprob: -8.335552215576172

Token 471: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24866749346256256
    2. ')' → logprob: -2.2486674785614014
    3. '\n' → logprob: -2.8736674785614014
    4. '<|end|>' → logprob: -3.2486674785614014
    5. ' ' → logprob: -5.6236677169799805
    6. '    
' → logprob: -6.1236677169799805
    7. ' return' → logprob: -6.4986677169799805
    8. '	return' → logprob: -6.8736677169799805
    9. 'return' → logprob: -6.8736677169799805
    10. '  
' → logprob: -6.9986677169799805

Token 472: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0352422334253788
    2. ' return' → logprob: -3.4102423191070557
    3. '   ' → logprob: -6.785242080688477
    4. ')' → logprob: -8.535242080688477
    5. '\n' → logprob: -9.910242080688477
    6. '```' → logprob: -10.285242080688477
    7. 'f' → logprob: -10.535242080688477
    8. ':return' → logprob: -10.910242080688477
    9. 'e' → logprob: -11.035242080688477
    10. '	return' → logprob: -11.035242080688477

Token 473: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.029750952497124672
    2. ' e' → logprob: -3.5297510623931885
    3. 'np' → logprob: -15.15475082397461
    4. ' np' → logprob: -16.27975082397461
    5. ' ' → logprob: -17.15475082397461
    6. 'array' → logprob: -17.52975082397461
    7. 'arr' → logprob: -17.90475082397461
    8. '	e' → logprob: -18.02975082397461
    9. '
' → logprob: -18.77975082397461
    10. '   ' → logprob: -19.27975082397461

Token 474: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 475: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 476: ' polynomial' (ID: 113464)
  Prédit: ' comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' comb' → logprob: -1.1385774612426758
    2. ' main' → logprob: -1.3885774612426758
    3. ' solve' → logprob: -1.8885774612426758
    4. ' factorial' → logprob: -2.138577461242676
    5. ' make' → logprob: -2.388577461242676
    6. ' combination' → logprob: -3.888577461242676
    7. ' combine' → logprob: -4.263577461242676
    8. ' pow' → logprob: -5.013577461242676
    9. ' power' → logprob: -5.513577461242676
    10. ' fact' → logprob: -5.638577461242676

Token 477: '_mult' (ID: 44050)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0150967836380005
    2. '_e' → logprob: -1.2650967836380005
    3. '_coeff' → logprob: -2.140096664428711
    4. '_degree' → logprob: -2.890096664428711
    5. '_m' → logprob: -3.265096664428711
    6. '_mul' → logprob: -3.640096664428711
    7. '_mult' → logprob: -3.890096664428711
    8. '_eval' → logprob: -4.265096664428711
    9. '(' → logprob: -4.640096664428711
    10. '_add' → logprob: -4.765096664428711

Token 478: '(P' (ID: 8952)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.13750673830509186
    2. '(' → logprob: -3.0125067234039307
    3. 'ip' → logprob: -3.5125067234039307
    4. '_poly' → logprob: -5.38750696182251
    5. '_ip' → logprob: -5.76250696182251
    6. '_' → logprob: -5.76250696182251
    7. '```' → logprob: -5.88750696182251
    8. '(arr' → logprob: -6.01250696182251
    9. ' (' → logprob: -6.01250696182251
    10. 'y' → logprob: -6.01250696182251

Token 479: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003404687449801713
    2. '1' → logprob: -9.125340461730957
    3. '_,' → logprob: -9.375340461730957
    4. ' ,' → logprob: -10.125340461730957
    5. 'A' → logprob: -10.625340461730957
    6. ',p' → logprob: -10.625340461730957
    7. ',P' → logprob: -11.000340461730957
    8. 'a' → logprob: -11.500340461730957
    9. 's' → logprob: -11.625340461730957
    10. ',
' → logprob: -11.875340461730957

Token 480: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.0009144435753114522
    2. ' Q' → logprob: -7.000914573669434
    3. '	Q' → logprob: -14.125914573669434
    4. 'P' → logprob: -14.875914573669434
    5. ' ' → logprob: -15.125914573669434
    6. ')' → logprob: -15.125914573669434
    7. 'A' → logprob: -15.875914573669434
    8. 'C' → logprob: -16.000913619995117
    9. 'Qs' → logprob: -16.063413619995117
    10. '```' → logprob: -16.125913619995117

Token 481: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.16054946184158325
    2. ',' → logprob: -1.9105494022369385
    3. '):
' → logprob: -8.16054916381836
    4. ')' → logprob: -11.03554916381836
    5. ':' → logprob: -11.91054916381836
    6. ' ):' → logprob: -11.91054916381836
    7. '   ' → logprob: -12.66054916381836
    8. ']:' → logprob: -14.03554916381836
    9. '):
' → logprob: -14.03554916381836
    10. '[]):' → logprob: -14.28554916381836

Token 482: ' X' (ID: 2127)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.2123565822839737
    2. ' MOD' → logprob: -2.0873565673828125
    3. 'mod' → logprob: -2.8373565673828125
    4. ' mod' → logprob: -5.2123565673828125
    5. 'M' → logprob: -6.4623565673828125
    6. ')' → logprob: -6.7123565673828125
    7. ' M' → logprob: -8.962356567382812
    8. 'Mod' → logprob: -9.337356567382812
    9. '_MOD' → logprob: -10.087356567382812
    10. ' ' → logprob: -10.462356567382812

Token 483: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01802046410739422
    2. '):
' → logprob: -4.5180206298828125
    3. ',' → logprob: -5.0180206298828125
    4. ')' → logprob: -8.393020629882812
    5. ' ):' → logprob: -9.643020629882812
    6. '):
' → logprob: -11.393020629882812
    7. '=' → logprob: -11.893020629882812
    8. '):

' → logprob: -12.268020629882812
    9. ':' → logprob: -12.268020629882812
    10. ' ,' → logprob: -13.893020629882812

Token 484: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.20307166874408722
    2. ' MOD' → logprob: -2.3280715942382812
    3. 'mod' → logprob: -2.9530715942382812
    4. 'M' → logprob: -3.9530715942382812
    5. ' mod' → logprob: -5.453071594238281
    6. ')' → logprob: -5.703071594238281
    7. ' M' → logprob: -6.328071594238281
    8. 'N' → logprob: -6.578071594238281
    9. '):
' → logprob: -7.203071594238281
    10. 'n' → logprob: -7.703071594238281

Token 485: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -9.591415437171236e-05
    2. '):
' → logprob: -9.500096321105957
    3. ')' → logprob: -11.000096321105957
    4. ',' → logprob: -12.750096321105957
    5. ':' → logprob: -14.250096321105957
    6. ' ):' → logprob: -15.000096321105957
    7. '):
' → logprob: -15.250096321105957
    8. '   ' → logprob: -16.62509536743164
    9. '):

' → logprob: -17.12509536743164
    10. '():' → logprob: -17.25009536743164

Token 486: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3630262017250061
    2. 'res' → logprob: -2.1130261421203613
    3. 'result' → logprob: -3.1130261421203613
    4. 'n' → logprob: -3.2380261421203613
    5. 'L' → logprob: -3.4880261421203613
    6. 'return' → logprob: -4.488026142120361
    7. 'r' → logprob: -4.863026142120361
    8. 'p' → logprob: -5.238026142120361
    9. 'z' → logprob: -5.238026142120361
    10. 'c' → logprob: -5.488026142120361

Token 487: ' d' (ID: 272)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.9626872539520264
    2. 'return' → logprob: -1.8376872539520264
    3. 'len' → logprob: -2.3376872539520264
    4. 'm' → logprob: -2.5876872539520264
    5. 'result' → logprob: -2.5876872539520264
    6. 'P' → logprob: -3.4626872539520264
    7. 'R' → logprob: -3.5876872539520264
    8. 'L' → logprob: -3.5876872539520264
    9. 'M' → logprob: -3.5876872539520264
    10. 'size' → logprob: -3.7126872539520264

Token 488: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.20638804137706757
    2. ' =' → logprob: -2.831387996673584
    3. 'p' → logprob: -2.956387996673584
    4. 'eg' → logprob: -3.331387996673584
    5. 'im' → logprob: -4.456387996673584
    6. 'ef' → logprob: -4.706387996673584
    7. '_p' → logprob: -5.081387996673584
    8. '_P' → logprob: -5.081387996673584
    9. '=' → logprob: -5.956387996673584
    10. '=P' → logprob: -6.456387996673584

Token 489: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5777931809425354
    2. ' =' → logprob: -0.8277931809425354
    3. ',' → logprob: -6.452793121337891
    4. '=len' → logprob: -9.82779312133789
    5. '=np' → logprob: -9.95279312133789
    6. '   ' → logprob: -11.07779312133789
    7. 'egree' → logprob: -11.07779312133789
    8. 'f' → logprob: -11.07779312133789
    9. '=P' → logprob: -11.07779312133789
    10. 'x' → logprob: -11.20279312133789

Token 490: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.02477778121829033
    2. '(len' → logprob: -4.274777889251709
    3. 'P' → logprob: -5.024777889251709
    4. 'np' → logprob: -5.899777889251709
    5. '[len' → logprob: -7.399777889251709
    6. ' len' → logprob: -8.52477741241455
    7. '(P' → logprob: -9.02477741241455
    8. '[P' → logprob: -9.64977741241455
    9. '[' → logprob: -10.02477741241455
    10. '(' → logprob: -10.14977741241455

Token 491: '(P' (ID: 8952)
  Prédit: '(P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(P' → logprob: -0.0003428528143558651
    2. 'P' → logprob: -8.000343322753906
    3. '(' → logprob: -12.000343322753906
    4. '(Q' → logprob: -14.125343322753906
    5. '(X' → logprob: -15.875343322753906
    6. '(
' → logprob: -16.875343322753906
    7. ')' → logprob: -17.000343322753906
    8. '[P' → logprob: -17.125343322753906
    9. ' P' → logprob: -17.750343322753906
    10. ' (' → logprob: -18.000343322753906

Token 492: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0044591971673071384
    2. ')
' → logprob: -5.629459381103516
    3. ' )' → logprob: -7.254459381103516
    4. ')+' → logprob: -9.129459381103516
    5. ' )
' → logprob: -11.129459381103516
    6. '   ' → logprob: -11.504459381103516
    7. '+' → logprob: -11.754459381103516
    8. ')*' → logprob: -12.754459381103516
    9. ')-' → logprob: -13.629459381103516
    10. ' +' → logprob: -14.004459381103516

Token 493: ' -' (ID: 533)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5426576733589172
    2. ' +' → logprob: -0.9176576733589172
    3. '+d' → logprob: -4.417657852172852
    4. '   ' → logprob: -5.042657852172852
    5. '+
' → logprob: -8.167657852172852
    6. 'd' → logprob: -8.792657852172852
    7. '
' → logprob: -9.292657852172852
    8. ')' → logprob: -9.667657852172852
    9. ' ' → logprob: -9.917657852172852
    10. ' +
' → logprob: -9.917657852172852

Token 494: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.1424973713001236e-05
    2. ' ' → logprob: -10.375031471252441
    3. '   ' → logprob: -15.750031471252441
    4. '<|end|>' → logprob: -18.000030517578125
    5. '0' → logprob: -18.500030517578125
    6. '```' → logprob: -18.875030517578125
    7. '  ' → logprob: -19.750030517578125
    8. '[' → logprob: -20.125030517578125
    9. '2' → logprob: -20.250030517578125
    10. ',' → logprob: -20.250030517578125

Token 495: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. '   ' → logprob: -18.250001907348633
    4. '2' → logprob: -18.875001907348633
    5. '<|end|>' → logprob: -19.125001907348633
    6. '```' → logprob: -19.250001907348633
    7. '{' → logprob: -19.437501907348633
    8. '
' → logprob: -19.875001907348633
    9. '0' → logprob: -20.125001907348633
    10. '[' → logprob: -20.312501907348633

Token 496: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7380182147026062
    2. ')' → logprob: -1.863018274307251
    3. '   ' → logprob: -1.988018274307251
    4. ' +' → logprob: -2.238018274307251
    5. '
' → logprob: -2.613018274307251
    6. ' ' → logprob: -4.238018035888672
    7. 'd' → logprob: -4.738018035888672
    8. '<|end|>' → logprob: -5.238018035888672
    9. ' 
' → logprob: -5.863018035888672
    10. ')
' → logprob: -5.863018035888672

Token 497: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00524454889819026
    2. 'd' → logprob: -5.630244731903076
    3. ' d' → logprob: -6.505244731903076
    4. '+' → logprob: -10.255244255065918
    5. '    
' → logprob: -10.255244255065918
    6. '*d' → logprob: -11.130244255065918
    7. '
' → logprob: -11.380244255065918
    8. '	d' → logprob: -11.505244255065918
    9. ' +' → logprob: -11.630244255065918
    10. '+d' → logprob: -12.255244255065918

Token 498: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.0003821716527454555
    2. '   ' → logprob: -8.250382423400879
    3. ' d' → logprob: -9.875382423400879
    4. ' ' → logprob: -11.375382423400879
    5. 'len' → logprob: -11.375382423400879
    6. 'result' → logprob: -11.625382423400879
    7. 'res' → logprob: -11.625382423400879
    8. 'deg' → logprob: -12.125382423400879
    9. 'n' → logprob: -12.500382423400879
    10. 'L' → logprob: -12.625382423400879

Token 499: 'Q' (ID: 48)
  Prédit: 'Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.000499297515489161
    2. 'd' → logprob: -8.375499725341797
    3. 'P' → logprob: -9.375499725341797
    4. ' =' → logprob: -9.500499725341797
    5. '=' → logprob: -10.125499725341797
    6. ' Q' → logprob: -10.125499725341797
    7. '_Q' → logprob: -12.125499725341797
    8. ' ' → logprob: -12.250499725341797
    9. '+' → logprob: -12.750499725341797
    10. 'X' → logprob: -13.375499725341797

Token 500: ' =' (ID: 314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6229709386825562
    2. ' +' → logprob: -1.1229709386825562
    3. ' ' → logprob: -2.9979710578918457
    4. ' =' → logprob: -3.1229710578918457
    5. ')' → logprob: -3.9979710578918457
    6. '<|end|>' → logprob: -4.497971057891846
    7. '=' → logprob: -4.622971057891846
    8. ' +=' → logprob: -6.872971057891846
    9. '<|end|>' → logprob: -7.247971057891846
    10. '   ' → logprob: -7.372971057891846

Token 501: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.011051355861127377
    2. ' len' → logprob: -4.511051177978516
    3. '(len' → logprob: -12.636051177978516
    4. '[len' → logprob: -16.511051177978516
    5. '=len' → logprob: -16.636051177978516
    6. '   ' → logprob: -17.761051177978516
    7. '	len' → logprob: -18.136051177978516
    8. ' ' → logprob: -18.136051177978516
    9. 'd' → logprob: -19.136051177978516
    10. '<len' → logprob: -19.386051177978516

Token 502: '(Q' (ID: 14437)
  Prédit: '(Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Q' → logprob: -0.0010336418636143208
    2. 'Q' → logprob: -6.876033782958984
    3. '(' → logprob: -15.626033782958984
    4. 'd' → logprob: -15.876033782958984
    5. '	Q' → logprob: -16.126033782958984
    6. ')' → logprob: -16.126033782958984
    7. ' Q' → logprob: -16.251033782958984
    8. '[' → logprob: -16.501033782958984
    9. 'len' → logprob: -17.001033782958984
    10. '<Q' → logprob: -17.126033782958984

Token 503: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.338466093642637e-05
    2. ')-' → logprob: -10.250073432922363
    3. ' )' → logprob: -11.125073432922363
    4. ')
' → logprob: -11.250073432922363
    5. '-' → logprob: -12.125073432922363
    6. '-)' → logprob: -13.375073432922363
    7. '   ' → logprob: -13.750073432922363
    8. ']' → logprob: -14.750073432922363
    9. ' -' → logprob: -14.750073432922363
    10. ')+' → logprob: -15.500073432922363

Token 504: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.20912405848503113
    2. ' -' → logprob: -1.7091240882873535
    3. '   ' → logprob: -5.7091240882873535
    4. ')' → logprob: -5.7091240882873535
    5. ' ' → logprob: -8.209123611450195
    6. '-
' → logprob: -8.584123611450195
    7. '+' → logprob: -8.709123611450195
    8. '<|end|>' → logprob: -9.584123611450195
    9. 'def' → logprob: -9.834123611450195
    10. '=' → logprob: -10.334123611450195

Token 505: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002967320033349097
    2. ' ' → logprob: -8.125296592712402
    3. 'len' → logprob: -14.750296592712402
    4. '   ' → logprob: -15.625296592712402
    5. '0' → logprob: -17.18779754638672
    6. '  ' → logprob: -17.56279754638672
    7. 'd' → logprob: -17.68779754638672
    8. '
' → logprob: -17.81279754638672
    9. 'Q' → logprob: -17.93779754638672
    10. '2' → logprob: -18.00029754638672

Token 506: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.8087270038668066e-05
    2. ' ' → logprob: -10.500027656555176
    3. '   ' → logprob: -16.187528610229492
    4. 'Q' → logprob: -16.375028610229492
    5. 'len' → logprob: -16.375028610229492
    6. '2' → logprob: -17.125028610229492
    7. '0' → logprob: -17.187528610229492
    8. '  ' → logprob: -18.250028610229492
    9. '
' → logprob: -18.312528610229492
    10. '```' → logprob: -18.687528610229492

Token 507: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00046928023220971227
    2. '    
' → logprob: -8.500469207763672
    3. '
' → logprob: -8.625469207763672
    4. 'result' → logprob: -10.375469207763672
    5. ')' → logprob: -10.875469207763672
    6. 'd' → logprob: -11.500469207763672
    7. ',' → logprob: -11.500469207763672
    8. ' result' → logprob: -12.500469207763672
    9. 'n' → logprob: -12.750469207763672
    10. ')
' → logprob: -13.500469207763672

Token 508: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.054002273827791214
    2. 'd' → logprob: -3.054002285003662
    3. 'L' → logprob: -5.679002285003662
    4. 'result' → logprob: -7.429002285003662
    5. ' d' → logprob: -8.179001808166504
    6. 'res' → logprob: -8.429001808166504
    7. ' L' → logprob: -8.554001808166504
    8. 'R' → logprob: -9.429001808166504
    9. '    
' → logprob: -9.554001808166504
    10. 'D' → logprob: -9.679001808166504

Token 509: ' if' (ID: 538)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.8311936855316162
    2. 'R' → logprob: -0.9561936855316162
    3. 'res' → logprob: -2.206193685531616
    4. 'result' → logprob: -3.706193685531616
    5. 'L' → logprob: -4.331193923950195
    6. 'deg' → logprob: -5.081193923950195
    7. '   ' → logprob: -5.206193923950195
    8. 'ans' → logprob: -5.706193923950195
    9. 'size' → logprob: -6.081193923950195
    10. 'n' → logprob: -6.331193923950195

Token 510: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6987323760986328
    2. ' d' → logprob: -0.6987323760986328
    3. 'len' → logprob: -5.948732376098633
    4. ' len' → logprob: -6.073732376098633
    5. ' not' → logprob: -8.948732376098633
    6. ' ' → logprob: -8.948732376098633
    7. '   ' → logprob: -8.948732376098633
    8. ' (' → logprob: -10.198732376098633
    9. '(d' → logprob: -10.323732376098633
    10. ' P' → logprob: -10.448732376098633

Token 511: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.00040993880247697234
    2. 'Q' → logprob: -7.875410079956055
    3. '=' → logprob: -12.500410079956055
    4. 'd' → logprob: -12.625410079956055
    5. ' <=' → logprob: -12.625410079956055
    6. '>' → logprob: -13.000410079956055
    7. ' ' → logprob: -13.000410079956055
    8. ' <' → logprob: -13.000410079956055
    9. 'p' → logprob: -13.375410079956055
    10. ' P' → logprob: -13.500410079956055

Token 512: ' <' (ID: 464)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6523292660713196
    2. '<' → logprob: -1.9023292064666748
    3. '==' → logprob: -2.152329206466675
    4. ' <' → logprob: -2.277329206466675
    5. ' +' → logprob: -2.652329206466675
    6. ' ==' → logprob: -3.402329206466675
    7. '>' → logprob: -6.652329444885254
    8. '<=' → logprob: -6.777329444885254
    9. '>=' → logprob: -7.152329444885254
    10. '<len' → logprob: -7.652329444885254

Token 513: ' d' (ID: 272)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.023950468748807907
    2. '=' → logprob: -4.273950576782227
    3. 'd' → logprob: -5.273950576782227
    4. ' ' → logprob: -5.648950576782227
    5. '1' → logprob: -7.648950576782227
    6. 'len' → logprob: -9.273950576782227
    7. '100' → logprob: -9.398950576782227
    8. '=d' → logprob: -9.648950576782227
    9. '10' → logprob: -9.898950576782227
    10. ' d' → logprob: -10.148950576782227

Token 514: 'Q' (ID: 48)
  Prédit: 'Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.047254592180252075
    2. '0' → logprob: -3.1722545623779297
    3. ' ' → logprob: -6.04725456237793
    4. '1' → logprob: -6.92225456237793
    5. '   ' → logprob: -8.67225456237793
    6. 'P' → logprob: -8.67225456237793
    7. '=' → logprob: -8.79725456237793
    8. ' Q' → logprob: -8.92225456237793
    9. '+' → logprob: -9.29725456237793
    10. 'd' → logprob: -10.04725456237793

Token 515: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01879570074379444
    2. ':
' → logprob: -4.018795490264893
    3. ' or' → logprob: -8.14379596710205
    4. ' :' → logprob: -9.01879596710205
    5. '   ' → logprob: -9.26879596710205
    6. ' and' → logprob: -9.76879596710205
    7. ':return' → logprob: -10.01879596710205
    8. ' :
' → logprob: -11.76879596710205
    9. '+' → logprob: -12.01879596710205
    10. '    ' → logprob: -12.64379596710205

Token 516: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006993603892624378
    2. ':' → logprob: -6.131993770599365
    3. '   ' → logprob: -6.381993770599365
    4. ',' → logprob: -7.006993770599365
    5. '[' → logprob: -7.631993770599365
    6. ' return' → logprob: -8.131993293762207
    7. '        
' → logprob: -8.131993293762207
    8. '
' → logprob: -8.631993293762207
    9. '<|end|>' → logprob: -8.631993293762207
    10. ':
' → logprob: -8.756993293762207

Token 517: ' d' (ID: 272)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.08317062258720398
    2. '       ' → logprob: -3.2081706523895264
    3. ' P' → logprob: -3.3331706523895264
    4. 'return' → logprob: -6.583170413970947
    5. ' return' → logprob: -7.208170413970947
    6. '(P' → logprob: -7.708170413970947
    7. 'Q' → logprob: -8.083170890808105
    8. '   ' → logprob: -8.333170890808105
    9. ',' → logprob: -8.708170890808105
    10. '(' → logprob: -10.083170890808105

Token 518: 'P' (ID: 47)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.31332018971443176
    2. 'P' → logprob: -1.3133201599121094
    3. '+' → logprob: -10.68832015991211
    4. 'd' → logprob: -10.68832015991211
    5. '=' → logprob: -12.93832015991211
    6. ' Q' → logprob: -13.31332015991211
    7. 'PQ' → logprob: -13.56332015991211
    8. 'p' → logprob: -13.93832015991211
    9. ')' → logprob: -14.31332015991211
    10. 'q' → logprob: -14.56332015991211

Token 519: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3838934004306793
    2. '=' → logprob: -2.2588934898376465
    3. ' +=' → logprob: -2.2588934898376465
    4. '+=' → logprob: -2.7588934898376465
    5. ' =' → logprob: -4.0088934898376465
    6. '+' → logprob: -4.5088934898376465
    7. ' +' → logprob: -5.1338934898376465
    8. ',d' → logprob: -5.5088934898376465
    9. ' ,' → logprob: -6.0088934898376465
    10. '   ' → logprob: -6.2588934898376465

Token 520: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.045958202332258224
    2. ' d' → logprob: -3.6709582805633545
    3. 'P' → logprob: -4.045958042144775
    4. ' P' → logprob: -6.420958042144775
    5. '<|end|>' → logprob: -8.670958518981934
    6. 'Q' → logprob: -9.170958518981934
    7. ' ' → logprob: -10.920958518981934
    8. 'X' → logprob: -11.295958518981934
    9. '   ' → logprob: -11.545958518981934
    10. ' Q' → logprob: -11.670958518981934

Token 521: 'Q' (ID: 48)
  Prédit: 'Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.0002920830447692424
    2. 'P' → logprob: -8.25029182434082
    3. 'd' → logprob: -10.87529182434082
    4. ' Q' → logprob: -12.75029182434082
    5. '   ' → logprob: -12.75029182434082
    6. ' =' → logprob: -13.25029182434082
    7. '=' → logprob: -13.37529182434082
    8. 'X' → logprob: -14.62529182434082
    9. ' ' → logprob: -15.12529182434082
    10. ',' → logprob: -15.62529182434082

Token 522: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.074831023812294
    2. ' =' → logprob: -2.699831008911133
    3. ',' → logprob: -5.324831008911133
    4. '   ' → logprob: -12.324831008911133
    5. '    ' → logprob: -13.199831008911133
    6. 'd' → logprob: -13.324831008911133
    7. '=
' → logprob: -14.199831008911133
    8. '        ' → logprob: -14.324831008911133
    9. '       ' → logprob: -14.449831008911133
    10. '<|end|>' → logprob: -14.449831008911133

Token 523: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.31335878372192383
    2. ' d' → logprob: -1.3133587837219238
    3. '   ' → logprob: -9.313358306884766
    4. '       ' → logprob: -13.063358306884766
    5. '	d' → logprob: -13.188358306884766
    6. '    ' → logprob: -13.688358306884766
    7. ' ' → logprob: -13.813358306884766
    8. '  ' → logprob: -15.188358306884766
    9. '           ' → logprob: -16.063358306884766
    10. '     ' → logprob: -16.813358306884766

Token 524: 'Q' (ID: 48)
  Prédit: 'Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.00015800826076883823
    2. ' Q' → logprob: -9.125158309936523
    3. 'P' → logprob: -10.125158309936523
    4. 'd' → logprob: -12.625158309936523
    5. '   ' → logprob: -12.750158309936523
    6. ' ' → logprob: -13.500158309936523
    7. ' d' → logprob: -15.000158309936523
    8. ',' → logprob: -15.375158309936523
    9. '  ' → logprob: -16.125158309936523
    10. '(Q' → logprob: -16.250158309936523

Token 525: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008944261819124222
    2. ',d' → logprob: -5.008944034576416
    3. 'd' → logprob: -7.008944034576416
    4. ',
' → logprob: -7.383944034576416
    5. ' ,' → logprob: -7.633944034576416
    6. ' d' → logprob: -9.758944511413574
    7. '
' → logprob: -9.883944511413574
    8. '       ' → logprob: -10.383944511413574
    9. '   ' → logprob: -11.008944511413574
    10. '+' → logprob: -11.133944511413574

Token 526: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0021934446413069963
    2. ' d' → logprob: -6.127193450927734
    3. '
' → logprob: -12.502193450927734
    4. '   ' → logprob: -12.752193450927734
    5. '<|end|>' → logprob: -14.002193450927734
    6. ' ' → logprob: -15.377193450927734
    7. '       ' → logprob: -16.002193450927734
    8. '  ' → logprob: -16.002193450927734
    9. '0' → logprob: -16.252193450927734
    10. 'def' → logprob: -16.377193450927734

Token 527: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.00020771251001860946
    2. 'd' → logprob: -9.125207901000977
    3. '1' → logprob: -9.500207901000977
    4. 'Q' → logprob: -10.750207901000977
    5. ' P' → logprob: -14.250207901000977
    6. 'p' → logprob: -14.625207901000977
    7. ' ' → logprob: -14.750207901000977
    8. '```' → logprob: -15.000207901000977
    9. '0' → logprob: -16.000207901000977
    10. ' d' → logprob: -16.125207901000977

Token 528: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.22203804552555084
    2. '   ' → logprob: -2.3470380306243896
    3. '    
' → logprob: -2.7220380306243896
    4. '<|end|>' → logprob: -4.222038269042969
    5. ',' → logprob: -4.597038269042969
    6. ' 
' → logprob: -5.472038269042969
    7. '  
' → logprob: -5.472038269042969
    8. ',
' → logprob: -6.097038269042969
    9. '<|end|>' → logprob: -7.347038269042969
    10. '
' → logprob: -7.722038269042969

Token 529: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022573092952370644
    2. '
' → logprob: -4.272572994232178
    3. ' P' → logprob: -5.522572994232178
    4. '    
' → logprob: -6.147572994232178
    5. ',' → logprob: -7.397572994232178
    6. 'P' → logprob: -7.522572994232178
    7. '       ' → logprob: -8.522573471069336
    8. 'X' → logprob: -8.647573471069336
    9. ' for' → logprob: -9.647573471069336
    10. 'd' → logprob: -9.897573471069336

Token 530: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' (adapté à ' P') → logprob: -0.00219866749830544
    2. 'X' → logprob: -6.502198696136475
    3. 'Q' → logprob: -8.127198219299316
    4. 'd' → logprob: -8.252198219299316
    5. '   ' → logprob: -9.127198219299316
    6. 'return' → logprob: -11.127198219299316
    7. ' P' → logprob: -11.877198219299316
    8. '(P' → logprob: -12.877198219299316
    9. 'p' → logprob: -13.752198219299316
    10. 'x' → logprob: -14.377198219299316

Token 531: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00041148843592964113
    2. ',Q' → logprob: -7.875411510467529
    3. 'Q' → logprob: -10.375411033630371
    4. ' ,' → logprob: -16.125411987304688
    5. ' Q' → logprob: -18.500411987304688
    6. '=' → logprob: -19.000411987304688
    7. ',
' → logprob: -20.000411987304688
    8. '<Q' → logprob: -20.125411987304688
    9. '_,' → logprob: -21.000411987304688
    10. ',\
' → logprob: -21.375411987304688

Token 532: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.0017023178515955806
    2. ' Q' → logprob: -6.376702308654785
    3. '	Q' → logprob: -16.7517032623291
    4. '<|end|>' → logprob: -17.6267032623291
    5. '   ' → logprob: -18.6267032623291
    6. ' ' → logprob: -18.6267032623291
    7. '  ' → logprob: -18.7517032623291
    8. '    ' → logprob: -19.2517032623291
    9. ',Q' → logprob: -19.2517032623291
    10. 'import' → logprob: -19.3767032623291

Token 533: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.017715539783239365
    2. ' =' → logprob: -4.1427154541015625
    3. ',' → logprob: -6.3927154541015625
    4. '[' → logprob: -12.517715454101562
    5. '   ' → logprob: -14.892715454101562
    6. ' ' → logprob: -14.892715454101562
    7. '<|end|>' → logprob: -14.892715454101562
    8. ')' → logprob: -15.017715454101562
    9. '=
' → logprob: -15.642715454101562
    10. 'Q' → logprob: -15.642715454101562

Token 534: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.00015920029545668513
    2. ' Q' → logprob: -8.75015926361084
    3. '   ' → logprob: -14.50015926361084
    4. ' ' → logprob: -16.125158309936523
    5. '	Q' → logprob: -17.250158309936523
    6. '  ' → logprob: -17.750158309936523
    7. '(Q' → logprob: -18.250158309936523
    8. 'P' → logprob: -19.125158309936523
    9. '<Q' → logprob: -20.375158309936523
    10. '    ' → logprob: -20.375158309936523

Token 535: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02159569039940834
    2. '<|end|>' → logprob: -3.8965957164764404
    3. '<|end|>' → logprob: -7.771595478057861
    4. ',
' → logprob: -8.64659595489502
    5. '[' → logprob: -8.77159595489502
    6. '   ' → logprob: -9.14659595489502
    7. ' ,' → logprob: -9.89659595489502
    8. ' ' → logprob: -10.02159595489502
    9. '    
' → logprob: -10.89659595489502
    10. '
' → logprob: -11.02159595489502

Token 536: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.001502717612311244
    2. ' P' → logprob: -6.501502513885498
    3. ' ' → logprob: -15.001502990722656
    4. 'p' → logprob: -16.751502990722656
    5. '   ' → logprob: -18.501502990722656
    6. '  ' → logprob: -18.501502990722656
    7. '[' → logprob: -19.251502990722656
    8. '[P' → logprob: -19.376502990722656
    9. '"P' → logprob: -19.501502990722656
    10. 'Q' → logprob: -19.814002990722656

Token 537: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3794221580028534
    2. '    
' → logprob: -2.129422187805176
    3. ' 
' → logprob: -2.254422187805176
    4. '   ' → logprob: -2.754422187805176
    5. '  
' → logprob: -3.754422187805176
    6. '   
' → logprob: -6.129422187805176
    7. ',' → logprob: -7.879422187805176
    8. '\n' → logprob: -7.879422187805176
    9. '<|end|>' → logprob: -7.879422187805176
    10. '[' → logprob: -8.004422187805176

Token 538: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03386145085096359
    2. '
' → logprob: -3.7838613986968994
    3. ' result' → logprob: -5.5338616371154785
    4. '    
' → logprob: -5.6588616371154785
    5. ' res' → logprob: -6.7838616371154785
    6. 'result' → logprob: -7.4088616371154785
    7. '       ' → logprob: -8.65886116027832
    8. '```' → logprob: -8.78386116027832
    9. ' d' → logprob: -8.90886116027832
    10. ' n' → logprob: -9.53386116027832

Token 539: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' (adapté à ' R') → logprob: -0.32675451040267944
    2. 'res' → logprob: -1.5767545700073242
    3. 'result' → logprob: -3.076754570007324
    4. '   ' → logprob: -4.826754570007324
    5. 'ans' → logprob: -5.701754570007324
    6. 'r' → logprob: -6.326754570007324
    7. 'd' → logprob: -6.576754570007324
    8. 'PQ' → logprob: -6.701754570007324
    9. 'out' → logprob: -6.826754570007324
    10. 'deg' → logprob: -7.201754570007324

Token 540: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10026761144399643
    2. '=' → logprob: -2.3502676486968994
    3. ' ' → logprob: -10.22526741027832
    4. '_' → logprob: -12.22526741027832
    5. '   ' → logprob: -12.22526741027832
    6. '[' → logprob: -12.35026741027832
    7. ',' → logprob: -12.47526741027832
    8. '  ' → logprob: -13.35026741027832
    9. '=[]' → logprob: -13.97526741027832
    10. '=np' → logprob: -14.35026741027832

Token 541: ' np' (ID: 5374)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.33683568239212036
    2. '[' → logprob: -1.5868356227874756
    3. '[np' → logprob: -2.5868356227874756
    4. '[P' → logprob: -5.586835861206055
    5. '[X' → logprob: -6.711835861206055
    6. '(np' → logprob: -7.961835861206055
    7. ' np' → logprob: -8.211835861206055
    8. ' [' → logprob: -8.711835861206055
    9. '[p' → logprob: -9.086835861206055
    10. '[len' → logprob: -10.086835861206055

Token 542: '.zeros' (ID: 29146)
  Prédit: '.zeros'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.zeros' → logprob: -0.06816357374191284
    2. 'zeros' → logprob: -2.8181636333465576
    3. 'empty' → logprob: -5.4431633949279785
    4. 'con' → logprob: -6.4431633949279785
    5. 'array' → logprob: -8.943163871765137
    6. '.empty' → logprob: -9.693163871765137
    7. ' zeros' → logprob: -10.693163871765137
    8. 'zero' → logprob: -10.693163871765137
    9. '.con' → logprob: -11.818163871765137
    10. 'poly' → logprob: -12.693163871765137

Token 543: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.16065271198749542
    2. '(len' → logprob: -1.910652756690979
    3. '((' → logprob: -7.9106526374816895
    4. '(' → logprob: -9.785653114318848
    5. 'len' → logprob: -12.910653114318848
    6. 'd' → logprob: -13.785653114318848
    7. '(shape' → logprob: -14.035653114318848
    8. '(dtype' → logprob: -14.785653114318848
    9. ' (' → logprob: -15.535653114318848
    10. '(
' → logprob: -16.41065216064453

Token 544: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -1.1994775377388578e-05
    2. 'Q' → logprob: -11.500012397766113
    3. 'p' → logprob: -14.250012397766113
    4. '_P' → logprob: -14.875012397766113
    5. 'd' → logprob: -15.375012397766113
    6. '+' → logprob: -15.750012397766113
    7. ')' → logprob: -16.250011444091797
    8. ' P' → logprob: -16.437511444091797
    9. 'M' → logprob: -16.937511444091797
    10. 'П' → logprob: -17.000011444091797

Token 545: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5645594596862793
    2. ' +' → logprob: -1.1895594596862793
    3. '+d' → logprob: -2.0645594596862793
    4. '*' → logprob: -9.314559936523438
    5. '+D' → logprob: -10.189559936523438
    6. ' ' → logprob: -11.064559936523438
    7. 'd' → logprob: -12.314559936523438
    8. '+n' → logprob: -13.189559936523438
    9. '
' → logprob: -13.939559936523438
    10. ' *' → logprob: -14.064559936523438

Token 546: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -6.52788148727268e-05
    2. ' d' → logprob: -9.750064849853516
    3. '1' → logprob: -12.000064849853516
    4. ' ' → logprob: -15.375064849853516
    5. 'len' → logprob: -15.500064849853516
    6. '	d' → logprob: -16.125064849853516
    7. '
' → logprob: -16.250064849853516
    8. '   ' → logprob: -16.500064849853516
    9. '+d' → logprob: -18.500064849853516
    10. '  ' → logprob: -18.875064849853516

Token 547: 'Q' (ID: 48)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0012568994425237179
    2. 'Q' → logprob: -7.251256942749023
    3. '1' → logprob: -7.876256942749023
    4. ' d' → logprob: -8.876256942749023
    5. 'P' → logprob: -11.376256942749023
    6. 'len' → logprob: -12.626256942749023
    7. ' ' → logprob: -12.876256942749023
    8. ')d' → logprob: -13.251256942749023
    9. 'q' → logprob: -13.376256942749023
    10. '+d' → logprob: -13.501256942749023

Token 548: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.12693366408348083
    2. ' +' → logprob: -2.1269335746765137
    3. ')' → logprob: -12.626934051513672
    4. '1' → logprob: -14.876934051513672
    5. ' ' → logprob: -14.876934051513672
    6. ',' → logprob: -15.251934051513672
    7. '[' → logprob: -15.501934051513672
    8. '2' → logprob: -15.751934051513672
    9. '+
' → logprob: -15.876934051513672
    10. ')+' → logprob: -15.876934051513672

Token 549: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.016065223142504692
    2. '2' → logprob: -4.1410651206970215
    3. ' ' → logprob: -10.64106559753418
    4. '3' → logprob: -12.14106559753418
    5. '7' → logprob: -14.51606559753418
    6. '0' → logprob: -14.89106559753418
    7. '11' → logprob: -16.01606559753418
    8. '+' → logprob: -16.45356559753418
    9. '5' → logprob: -16.57856559753418
    10. '```' → logprob: -16.64106559753418

Token 550: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010395983699709177
    2. '2' → logprob: -6.876039505004883
    3. ' ' → logprob: -12.001039505004883
    4. '3' → logprob: -16.001039505004883
    5. '0' → logprob: -16.126039505004883
    6. '۱' → logprob: -16.251039505004883
    7. '11' → logprob: -16.438539505004883
    8. '10' → logprob: -17.813539505004883
    9. '```' → logprob: -17.813539505004883
    10. '<|end|>' → logprob: -18.063539505004883

Token 551: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.038197897374629974
    2. ')' → logprob: -3.2881979942321777
    3. ' ,' → logprob: -9.41319751739502
    4. ',d' → logprob: -9.91319751739502
    5. 'dtype' → logprob: -11.16319751739502
    6. ')
' → logprob: -12.16319751739502
    7. ',)' → logprob: -13.28819751739502
    8. '```' → logprob: -13.91319751739502
    9. ',
' → logprob: -14.16319751739502
    10. '),' → logprob: -14.78819751739502

Token 552: ' np' (ID: 5374)
  Prédit: 'dtype'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dtype' → logprob: -0.0009156247251667082
    2. ' dtype' → logprob: -7.25091552734375
    3. 'np' → logprob: -8.50091552734375
    4. '   ' → logprob: -13.62591552734375
    5. 'int' → logprob: -14.25091552734375
    6. ' np' → logprob: -15.50091552734375
    7. '(dtype' → logprob: -16.50091552734375
    8. ')' → logprob: -17.12591552734375
    9. '       ' → logprob: -17.37591552734375
    10. 'd' → logprob: -17.37591552734375

Token 553: '.int' (ID: 21499)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.3888513445854187
    2. '.int' → logprob: -1.1388514041900635
    3. 'object' → logprob: -6.388851165771484
    4. '.uint' → logprob: -9.138851165771484
    5. '.object' → logprob: -9.513851165771484
    6. 'uint' → logprob: -9.888851165771484
    7. '   ' → logprob: -11.013851165771484
    8. '```' → logprob: -11.513851165771484
    9. '_int' → logprob: -11.638851165771484
    10. 'dtype' → logprob: -11.888851165771484

Token 554: '64' (ID: 2220)
  Prédit: '64'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '64' → logprob: 0.0
    2. '32' → logprob: -17.25
    3. 'int' → logprob: -19.875
    4. 'c' → logprob: -20.0
    5. 'p' → logprob: -20.5
    6. '6' → logprob: -20.75
    7. '128' → logprob: -21.5
    8. '63' → logprob: -22.25
    9. ')' → logprob: -23.0
    10. '_' → logprob: -23.125

Token 555: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013294065138325095
    2. ')
' → logprob: -6.62632942199707
    3. ')
' → logprob: -13.00132942199707
    4. ')

' → logprob: -14.25132942199707
    5. ' )' → logprob: -15.12632942199707
    6. ')`' → logprob: -16.62632942199707
    7. '),' → logprob: -17.50132942199707
    8. '```' → logprob: -17.62632942199707
    9. ')`
' → logprob: -17.75132942199707
    10. ')#' → logprob: -17.87632942199707

Token 556: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2655065059661865
    2. ' for' → logprob: -1.6405065059661865
    3. 'for' → logprob: -3.2655065059661865
    4. ' i' → logprob: -8.015506744384766
    5. 'i' → logprob: -8.765506744384766
    6. '    
' → logprob: -9.015506744384766
    7. ' idx' → logprob: -9.015506744384766
    8. '```' → logprob: -9.265506744384766
    9. ' P' → logprob: -9.765506744384766
    10. 'idx' → logprob: -10.015506744384766

Token 557: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.010243181139230728
    2. ' for' → logprob: -4.7602434158325195
    3. '   ' → logprob: -6.5102434158325195
    4. 'i' → logprob: -9.13524341583252
    5. 'idx' → logprob: -11.26024341583252
    6. 'p' → logprob: -12.38524341583252
    7. 'x' → logprob: -12.38524341583252
    8. 'j' → logprob: -12.88524341583252
    9. ')' → logprob: -13.88524341583252
    10. '	for' → logprob: -14.01024341583252

Token 558: ' n' (ID: 297)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.021444248035550117
    2. ' i' → logprob: -4.646444320678711
    3. 'j' → logprob: -5.271444320678711
    4. 'p' → logprob: -6.146444320678711
    5. 'n' → logprob: -6.271444320678711
    6. 'q' → logprob: -6.521444320678711
    7. 'k' → logprob: -7.646444320678711
    8. 'x' → logprob: -9.146444320678711
    9. ' j' → logprob: -9.146444320678711
    10. 'm' → logprob: -10.021444320678711

Token 559: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.4765510857105255
    2. ' in' → logprob: -0.9765510559082031
    3. ' ' → logprob: -6.976551055908203
    4. 'n' → logprob: -7.601551055908203
    5. ',' → logprob: -7.726551055908203
    6. '=' → logprob: -8.351551055908203
    7. '_' → logprob: -8.351551055908203
    8. '	in' → logprob: -10.851551055908203
    9. ' =' → logprob: -11.101551055908203
    10. '0' → logprob: -11.101551055908203

Token 560: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.004080301150679588
    2. ' range' → logprob: -5.504080295562744
    3. ' ' → logprob: -13.879080772399902
    4. '   ' → logprob: -14.379080772399902
    5. 'r' → logprob: -15.879080772399902
    6. '(range' → logprob: -16.379079818725586
    7. 'd' → logprob: -16.879079818725586
    8. '  ' → logprob: -17.379079818725586
    9. ')' → logprob: -17.754079818725586
    10. '	range' → logprob: -18.379079818725586

Token 561: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.10036183893680573
    2. '(len' → logprob: -2.3503618240356445
    3. '(' → logprob: -8.975361824035645
    4. 'len' → logprob: -11.100361824035645
    5. 'd' → logprob: -11.350361824035645
    6. '((' → logprob: -14.225361824035645
    7. ' (' → logprob: -15.225361824035645
    8. '(n' → logprob: -15.350361824035645
    9. ' len' → logprob: -16.47536277770996
    10. '(l' → logprob: -16.60036277770996

Token 562: 'Q' (ID: 48)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.006723653059452772
    2. ')' → logprob: -5.881723880767822
    3. 'Q' → logprob: -6.006723880767822
    4. '+' → logprob: -7.256723880767822
    5. '   ' → logprob: -8.256723403930664
    6. '1' → logprob: -8.506723403930664
    7. 'len' → logprob: -10.131723403930664
    8. ' ' → logprob: -10.131723403930664
    9. ' +' → logprob: -10.381723403930664
    10. '  ' → logprob: -10.756723403930664

Token 563: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.05662813410162926
    2. ' +' → logprob: -2.9316282272338867
    3. '):
' → logprob: -6.931628227233887
    4. '):' → logprob: -7.306628227233887
    5. '   ' → logprob: -9.806628227233887
    6. '+
' → logprob: -11.681628227233887
    7. '1' → logprob: -11.806628227233887
    8. '+d' → logprob: -11.931628227233887
    9. '+n' → logprob: -12.681628227233887
    10. ')' → logprob: -13.056628227233887

Token 564: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006266250740736723
    2. ' ' → logprob: -5.131266117095947
    3. '   ' → logprob: -8.756266593933105
    4. '):
' → logprob: -9.506266593933105
    5. 'n' → logprob: -10.631266593933105
    6. ')' → logprob: -11.006266593933105
    7. '):' → logprob: -11.256266593933105
    8. 'd' → logprob: -11.506266593933105
    9. '+' → logprob: -11.506266593933105
    10. ' n' → logprob: -11.756266593933105

Token 565: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.215330409351736e-05
    2. ' ' → logprob: -10.125041961669922
    3. '0' → logprob: -14.250041961669922
    4. '   ' → logprob: -14.625041961669922
    5. '
' → logprob: -15.500041961669922
    6. 'n' → logprob: -15.500041961669922
    7. 'len' → logprob: -16.000041961669922
    8. 'd' → logprob: -16.250041961669922
    9. ')' → logprob: -16.375041961669922
    10. '2' → logprob: -16.875041961669922

Token 566: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.08925700187683105
    2. '):' → logprob: -2.464257001876831
    3. '   ' → logprob: -8.83925724029541
    4. ':' → logprob: -9.21425724029541
    5. '):
' → logprob: -9.71425724029541
    6. ':
' → logprob: -12.33925724029541
    7. '+' → logprob: -12.83925724029541
    8. ')' → logprob: -12.83925724029541
    9. '():
' → logprob: -13.96425724029541
    10. '):

' → logprob: -14.58925724029541

Token 567: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12733657658100128
    2. '       ' → logprob: -2.2523365020751953
    3. ' R' → logprob: -4.377336502075195
    4. 'R' → logprob: -7.627336502075195
    5. ' for' → logprob: -7.877336502075195
    6. '+' → logprob: -8.877336502075195
    7. '   ' → logprob: -9.002336502075195
    8. 'for' → logprob: -9.252336502075195
    9. '```' → logprob: -9.377336502075195
    10. '[' → logprob: -9.627336502075195

Token 568: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' (adapté à ' R') → logprob: -0.29082512855529785
    2. '   ' → logprob: -1.5408251285552979
    3. ' R' → logprob: -3.290825128555298
    4. 'for' → logprob: -7.415824890136719
    5. ' for' → logprob: -8.915824890136719
    6. '       ' → logprob: -9.415824890136719
    7. ' ' → logprob: -10.290824890136719
    8. '	R' → logprob: -10.915824890136719
    9. 'i' → logprob: -11.665824890136719
    10. '    ' → logprob: -11.790824890136719

Token 569: '[n' (ID: 15433)
  Prédit: '[:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.193020761013031
    2. '[n' → logprob: -1.9430208206176758
    3. '[d' → logprob: -3.693020820617676
    4. '[' → logprob: -5.443020820617676
    5. '[P' → logprob: -6.193020820617676
    6. '[:]' → logprob: -7.568020820617676
    7. '[:-' → logprob: -8.818020820617676
    8. '[np' → logprob: -9.443020820617676
    9. '+=' → logprob: -9.818020820617676
    10. '[N' → logprob: -9.943020820617676

Token 570: ':n' (ID: 20109)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5515462160110474
    2. ':]' → logprob: -1.0515462160110474
    3. ']+=' → logprob: -3.176546096801758
    4. ':d' → logprob: -4.676546096801758
    5. ':' → logprob: -4.801546096801758
    6. '+d' → logprob: -5.551546096801758
    7. ':n' → logprob: -5.676546096801758
    8. '   ' → logprob: -6.301546096801758
    9. '+' → logprob: -6.426546096801758
    10. ' :]' → logprob: -7.176546096801758

Token 571: ' +' (ID: 659)
  Prédit: '+d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+d' → logprob: -0.5803154706954956
    2. '+n' → logprob: -1.3303154706954956
    3. '+' → logprob: -2.080315589904785
    4. ' +' → logprob: -3.205315589904785
    5. 'd' → logprob: -5.205315589904785
    6. '   ' → logprob: -5.830315589904785
    7. 'len' → logprob: -6.955315589904785
    8. 'n' → logprob: -7.330315589904785
    9. '+(' → logprob: -8.955315589904785
    10. ' ' → logprob: -9.580315589904785

Token 572: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0001612267515156418
    2. 'len' → logprob: -8.875161170959473
    3. ' d' → logprob: -10.875161170959473
    4. '   ' → logprob: -13.250161170959473
    5. ' ' → logprob: -14.625161170959473
    6. ' len' → logprob: -16.00016212463379
    7. '(d' → logprob: -17.12516212463379
    8. '  ' → logprob: -17.25016212463379
    9. '	d' → logprob: -17.75016212463379
    10. '(len' → logprob: -17.75016212463379

Token 573: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.014168089255690575
    2. 'Q' → logprob: -4.2641682624816895
    3. '.shape' → logprob: -13.764167785644531
    4. 'p' → logprob: -14.264167785644531
    5. ')' → logprob: -14.639167785644531
    6. '[' → logprob: -15.264167785644531
    7. 'PQ' → logprob: -15.389167785644531
    8. '
' → logprob: -15.639167785644531
    9. '

' → logprob: -15.889167785644531
    10. 'n' → logprob: -15.889167785644531

Token 574: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.001931970240548253
    2. ' +' → logprob: -6.251932144165039
    3. ']+' → logprob: -14.001932144165039
    4. '+n' → logprob: -14.376932144165039
    5. '+]' → logprob: -14.501932144165039
    6. '   ' → logprob: -14.876932144165039
    7. '+d' → logprob: -15.376932144165039
    8. ']' → logprob: -15.751932144165039
    9. '+
' → logprob: -15.751932144165039
    10. '()+' → logprob: -15.751932144165039

Token 575: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9385402993066236e-05
    2. '+' → logprob: -11.250019073486328
    3. ' ' → logprob: -12.250019073486328
    4. '   ' → logprob: -13.750019073486328
    5. ' +' → logprob: -15.375019073486328
    6. '2' → logprob: -16.500019073486328
    7. 'n' → logprob: -16.500019073486328
    8. '       ' → logprob: -18.375019073486328
    9. '  ' → logprob: -18.687519073486328
    10. '```' → logprob: -18.937519073486328

Token 576: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -14.125000953674316
    3. '2' → logprob: -15.750000953674316
    4. '+' → logprob: -15.750000953674316
    5. '   ' → logprob: -16.750001907348633
    6. '۱' → logprob: -19.250001907348633
    7. '```' → logprob: -19.562501907348633
    8. '
' → logprob: -19.562501907348633
    9. '１' → logprob: -19.750001907348633
    10. 'n' → logprob: -20.625001907348633

Token 577: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0009393315413035452
    2. ']+=' → logprob: -7.00093936920166
    3. ' ]' → logprob: -11.25093936920166
    4. '   ' → logprob: -11.75093936920166
    5. '+' → logprob: -12.75093936920166
    6. '+]' → logprob: -14.37593936920166
    7. '+=' → logprob: -14.50093936920166
    8. '()]' → logprob: -14.87593936920166
    9. '[' → logprob: -14.87593936920166
    10. '']' → logprob: -15.25093936920166

Token 578: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.1850927472114563
    2. ' +=' → logprob: -1.8100926876068115
    3. ']+=' → logprob: -5.310092926025391
    4. '   ' → logprob: -8.43509292602539
    5. '+' → logprob: -9.68509292602539
    6. ')' → logprob: -10.06009292602539
    7. '    ' → logprob: -10.31009292602539
    8. '```' → logprob: -11.68509292602539
    9. ']' → logprob: -11.81009292602539
    10. '=' → logprob: -12.56009292602539

Token 579: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.14556871354579926
    2. ' Q' → logprob: -2.270568609237671
    3. 'P' → logprob: -3.645568609237671
    4. ' P' → logprob: -5.14556884765625
    5. 'np' → logprob: -8.89556884765625
    6. '(P' → logprob: -10.39556884765625
    7. '(Q' → logprob: -10.52056884765625
    8. ' (' → logprob: -10.77056884765625
    9. '(' → logprob: -11.14556884765625
    10. ' np' → logprob: -11.27056884765625

Token 580: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.0001975802006199956
    2. 'n' → logprob: -8.750197410583496
    3. '[' → logprob: -10.875197410583496
    4. '[
' → logprob: -12.500197410583496
    5. '   ' → logprob: -12.625197410583496
    6. '[:' → logprob: -12.625197410583496
    7. ' [' → logprob: -13.375197410583496
    8. '[:,' → logprob: -13.500197410583496
    9. '
' → logprob: -14.000197410583496
    10. '[m' → logprob: -14.000197410583496

Token 581: ']' (ID: 60)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.0025797015987336636
    2. ' *' → logprob: -6.627579689025879
    3. '[' → logprob: -8.002579689025879
    4. '[np' → logprob: -8.127579689025879
    5. '*' → logprob: -8.627579689025879
    6. ',' → logprob: -9.127579689025879
    7. ']' → logprob: -9.627579689025879
    8. ',n' → logprob: -9.877579689025879
    9. '[:]' → logprob: -10.002579689025879
    10. '[:' → logprob: -10.377579689025879

Token 582: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.16027845442295074
    2. '*' → logprob: -1.9102784395217896
    3. '*np' → logprob: -10.5352783203125
    4. ' ' → logprob: -11.6602783203125
    5. '[' → logprob: -12.4102783203125
    6. '[:,' → logprob: -12.9102783203125
    7. 'P' → logprob: -13.0352783203125
    8. '*object' → logprob: -13.4102783203125
    9. '   ' → logprob: -13.5352783203125
    10. ' P' → logprob: -13.9102783203125

Token 583: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.002185472520068288
    2. ' P' → logprob: -6.127185344696045
    3. ' ' → logprob: -15.502185821533203
    4. 'np' → logprob: -17.252185821533203
    5. '	P' → logprob: -17.502185821533203
    6. '(P' → logprob: -17.502185821533203
    7. '   ' → logprob: -17.502185821533203
    8. '.P' → logprob: -18.752185821533203
    9. '<|end|>' → logprob: -18.752185821533203
    10. '[P' → logprob: -18.877185821533203

Token 584: ' %' (ID: 1851)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 585: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.005234002135694027
    2. ' MOD' → logprob: -5.2552337646484375
    3. '_MOD' → logprob: -16.130233764648438
    4. 'mod' → logprob: -16.380233764648438
    5. '.MOD' → logprob: -17.630233764648438
    6. ' ' → logprob: -18.880233764648438
    7. ' mod' → logprob: -20.005233764648438
    8. '(mod' → logprob: -21.880233764648438
    9. 'MO' → logprob: -22.005233764648438
    10. ' ' → logprob: -22.505233764648438

Token 586: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 587: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 588: ' R' (ID: 460)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 589: ' %=' (ID: 117035)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.16480669379234314
    2. ' %=' → logprob: -1.9148067235946655
    3. '%' → logprob: -5.414806842803955
    4. '[' → logprob: -10.289806365966797
    5. ' %' → logprob: -10.289806365966797
    6. '[:' → logprob: -11.039806365966797
    7. '[:]' → logprob: -11.289806365966797
    8. '```' → logprob: -11.664806365966797
    9. '[%' → logprob: -12.664806365966797
    10. '=' → logprob: -12.914806365966797

Token 590: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0040785204619169235
    2. ' MOD' → logprob: -5.504078388214111
    3. '_MOD' → logprob: -17.254077911376953
    4. ' ' → logprob: -17.629077911376953
    5. 'MO' → logprob: -18.379077911376953
    6. '.MOD' → logprob: -18.379077911376953
    7. '   ' → logprob: -19.754077911376953
    8. 'X' → logprob: -20.254077911376953
    9. 'MODE' → logprob: -20.254077911376953
    10. 'MD' → logprob: -20.254077911376953

Token 591: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 592: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10057736188173294
    2. '<|end|>' → logprob: -3.8505773544311523
    3. '    
' → logprob: -4.225577354431152
    4. '[' → logprob: -4.350577354431152
    5. ' ' → logprob: -4.600577354431152
    6. '  
' → logprob: -4.725577354431152
    7. '\n' → logprob: -4.725577354431152
    8. ' 
' → logprob: -4.975577354431152
    9. '
' → logprob: -5.600577354431152
    10. '```' → logprob: -6.225577354431152

Token 593: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.250644713640213
    2. 'return' (adapté à ' return') → logprob: -1.8756446838378906
    3. ' return' → logprob: -2.8756446838378906
    4. ' ' → logprob: -5.625644683837891
    5. '<|end|>' → logprob: -5.875644683837891
    6. '	return' → logprob: -6.000644683837891
    7. ':return' → logprob: -6.500644683837891
    8. ')' → logprob: -7.750644683837891
    9. '[' → logprob: -8.12564468383789
    10. '  ' → logprob: -8.25064468383789

Token 594: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.12692810595035553
    2. ' R' → logprob: -2.1269280910491943
    3. ' ' → logprob: -17.376928329467773
    4. ' ' → logprob: -17.626928329467773
    5. '(R' → logprob: -17.876928329467773
    6. '	R' → logprob: -18.751928329467773
    7. 'tuple' → logprob: -18.876928329467773
    8. 'np' → logprob: -19.251928329467773
    9. '_R' → logprob: -19.251928329467773
    10. '<R' → logprob: -20.126928329467773

Token 595: '[:' (ID: 7808)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 596: 'X' (ID: 55)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.002633088268339634
    2. '(d' → logprob: -6.127633094787598
    3. 'len' → logprob: -8.377633094787598
    4. ' d' → logprob: -9.377633094787598
    5. '(' → logprob: -9.502633094787598
    6. '(len' → logprob: -10.377633094787598
    7. '-d' → logprob: -11.377633094787598
    8. '-(' → logprob: -11.877633094787598
    9. ' (' → logprob: -12.127633094787598
    10. '-' → logprob: -14.252633094787598

Token 597: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0013976184418424964
    2. '+' → logprob: -6.751397609710693
    3. ')' → logprob: -9.751398086547852
    4. ' ]' → logprob: -9.751398086547852
    5. ']
' → logprob: -9.751398086547852
    6. '[:' → logprob: -11.001398086547852
    7. ' +' → logprob: -11.001398086547852
    8. '[' → logprob: -12.001398086547852
    9. '+]' → logprob: -13.001398086547852
    10. 'X' → logprob: -13.251398086547852

Token 598: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 599: ' polynomial' (ID: 113464)
  Prédit: 'pol'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pol' → logprob: -0.8075750470161438
    2. 'pow' → logprob: -2.432574987411499
    3. ' polynomial' → logprob: -2.432574987411499
    4. ' main' → logprob: -2.682574987411499
    5. 'poly' → logprob: -2.932574987411499
    6. 'main' → logprob: -3.057574987411499
    7. 'con' → logprob: -3.057574987411499
    8. ' pow' → logprob: -3.682574987411499
    9. ' solve' → logprob: -4.182575225830078
    10. 'factor' → logprob: -4.557575225830078

Token 600: '_power' (ID: 51623)
  Prédit: '_mult'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_mult' → logprob: -0.03304130211472511
    2. '_add' → logprob: -4.033041477203369
    3. '_mul' → logprob: -4.783041477203369
    4. '_m' → logprob: -5.158041477203369
    5. '_' → logprob: -8.283041000366211
    6. '_mod' → logprob: -9.658041000366211
    7. '_poly' → logprob: -10.158041000366211
    8. '_sub' → logprob: -10.283041000366211
    9. '_eval' → logprob: -10.658041000366211
    10. '_con' → logprob: -10.658041000366211

Token 601: '(P' (ID: 8952)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1449718028306961
    2. '(P' → logprob: -2.0199718475341797
    3. ' (' → logprob: -6.51997184753418
    4. '(poly' → logprob: -8.14497184753418
    5. '(pol' → logprob: -9.26997184753418
    6. '(p' → logprob: -9.64497184753418
    7. '_poly' → logprob: -9.64497184753418
    8. '(
' → logprob: -10.39497184753418
    9. '(_' → logprob: -10.39497184753418
    10. '(power' → logprob: -10.51997184753418

Token 602: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016503063961863518
    2. '(' → logprob: -7.376650333404541
    3. '(P' → logprob: -7.376650333404541
    4. ',P' → logprob: -8.501649856567383
    5. ' ,' → logprob: -9.126649856567383
    6. ' (' → logprob: -10.126649856567383
    7. '[' → logprob: -11.626649856567383
    8. '   ' → logprob: -11.751649856567383
    9. ',
' → logprob: -12.001649856567383
    10. ')' → logprob: -12.126649856567383

Token 603: ' n' (ID: 297)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.11885858327150345
    2. ' X' → logprob: -2.368858575820923
    3. '2' → logprob: -4.118858814239502
    4. ' ' → logprob: -7.118858814239502
    5. 'n' → logprob: -7.868858814239502
    6. '1' → logprob: -7.868858814239502
    7. '0' → logprob: -8.743858337402344
    8. ' n' → logprob: -9.243858337402344
    9. 'x' → logprob: -9.493858337402344
    10. '3' → logprob: -9.743858337402344

Token 604: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015577126760035753
    2. ' ,' → logprob: -6.62655782699585
    3. '(' → logprob: -9.126557350158691
    4. '   ' → logprob: -10.001557350158691
    5. '):' → logprob: -11.001557350158691
    6. ',P' → logprob: -11.251557350158691
    7. '[' → logprob: -11.376557350158691
    8. '(P' → logprob: -11.376557350158691
    9. ' (' → logprob: -12.376557350158691
    10. '_,' → logprob: -12.501557350158691

Token 605: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.010203643701970577
    2. ' X' → logprob: -5.010203838348389
    3. '0' → logprob: -6.510203838348389
    4. 'MOD' → logprob: -6.510203838348389
    5. 'n' → logprob: -8.51020336151123
    6. 'mod' → logprob: -9.26020336151123
    7. ')' → logprob: -10.38520336151123
    8. ' ' → logprob: -10.63520336151123
    9. ' MOD' → logprob: -10.63520336151123
    10. 'len' → logprob: -10.88520336151123

Token 606: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.796184723294573e-06
    2. '   ' → logprob: -13.375005722045898
    3. ',
' → logprob: -13.500005722045898
    4. '):
' → logprob: -13.875005722045898
    5. '):' → logprob: -13.875005722045898
    6. ' ,' → logprob: -14.125005722045898
    7. ',P' → logprob: -15.625005722045898
    8. ',p' → logprob: -18.3750057220459
    9. '‌,' → logprob: -18.8750057220459
    10. '_,' → logprob: -18.8750057220459

Token 607: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0059936209581792355
    2. ' MOD' → logprob: -5.130993843078613
    3. 'mod' → logprob: -9.880993843078613
    4. '_MOD' → logprob: -11.755993843078613
    5. '   ' → logprob: -13.255993843078613
    6. 'M' → logprob: -13.380993843078613
    7. 'Mod' → logprob: -14.130993843078613
    8. ' ' → logprob: -14.255993843078613
    9. '.MOD' → logprob: -14.630993843078613
    10. ' mod' → logprob: -15.505993843078613

Token 608: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02326749451458454
    2. '):
' → logprob: -3.7732675075531006
    3. ',' → logprob: -11.52326774597168
    4. ':' → logprob: -12.02326774597168
    5. '):
' → logprob: -12.39826774597168
    6. '   ' → logprob: -13.64826774597168
    7. ')' → logprob: -14.64826774597168
    8. '):

' → logprob: -15.89826774597168
    9. ' ):' → logprob: -16.27326774597168
    10. ']:' → logprob: -16.89826774597168

Token 609: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024273749440908432
    2. 'res' → logprob: -4.524273872375488
    3. ' res' → logprob: -5.524273872375488
    4. 'result' → logprob: -5.649273872375488
    5. ' if' → logprob: -6.149273872375488
    6. 'if' → logprob: -6.399273872375488
    7. 'R' → logprob: -6.774273872375488
    8. ' result' → logprob: -7.774273872375488
    9. ' R' → logprob: -8.774273872375488
    10. 'r' → logprob: -10.149273872375488

Token 610: ' if' (ID: 538)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.13720010221004486
    2. 'result' → logprob: -2.387200117111206
    3. 'res' → logprob: -4.137199878692627
    4. 'if' (adapté à ' if') → logprob: -4.262199878692627
    5. '   ' → logprob: -5.137199878692627
    6. 'r' → logprob: -8.762200355529785
    7. ' R' → logprob: -9.762200355529785
    8. ' result' → logprob: -10.262200355529785
    9. 'def' → logprob: -10.387200355529785
    10. '```' → logprob: -10.512200355529785

Token 611: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.054904624819755554
    2. 'n' → logprob: -2.9299046993255615
    3. ' not' → logprob: -11.17990493774414
    4. '0' → logprob: -12.92990493774414
    5. ' ' → logprob: -13.42990493774414
    6. '(n' → logprob: -13.92990493774414
    7. 'not' → logprob: -14.61740493774414
    8. ' ' → logprob: -14.74240493774414
    9. '
' → logprob: -14.80490493774414
    10. '1' → logprob: -14.99240493774414

Token 612: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.08900533616542816
    2. ' ==' → logprob: -2.4640052318573
    3. '=' → logprob: -10.339005470275879
    4. '<=' → logprob: -10.964005470275879
    5. '0' → logprob: -12.339005470275879
    6. '<' → logprob: -12.839005470275879
    7. '[' → logprob: -13.089005470275879
    8. '==
' → logprob: -13.464005470275879
    9. ' ' → logprob: -13.589005470275879
    10. ' <=' → logprob: -13.839005470275879

Token 613: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0032092039473354816
    2. ' ' → logprob: -5.753209114074707
    3. '1' → logprob: -10.378209114074707
    4. '   ' → logprob: -15.003209114074707
    5. '  ' → logprob: -16.815710067749023
    6. '۰' → logprob: -17.378210067749023
    7. '2' → logprob: -17.565710067749023
    8. '    ' → logprob: -17.753210067749023
    9. '(' → logprob: -18.128210067749023
    10. '=' → logprob: -18.440710067749023

Token 614: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.553032628493384e-05
    2. '1' → logprob: -10.125075340270996
    3. ' ' → logprob: -10.250075340270996
    4. '۰' → logprob: -17.375076293945312
    5. '   ' → logprob: -18.750076293945312
    6. '(' → logprob: -18.875076293945312
    7. '-' → logprob: -18.875076293945312
    8. '  ' → logprob: -19.000076293945312
    9. '2' → logprob: -19.625076293945312
    10. '=' → logprob: -19.750076293945312

Token 615: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04904943332076073
    2. ':
' → logprob: -3.0490493774414062
    3. ':return' → logprob: -7.799049377441406
    4. '[' → logprob: -11.424049377441406
    5. ' :' → logprob: -11.549049377441406
    6. '   ' → logprob: -11.674049377441406
    7. ',' → logprob: -11.674049377441406
    8. '):' → logprob: -13.174049377441406
    9. ':
' → logprob: -13.299049377441406
    10. ':

' → logprob: -13.549049377441406

Token 616: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22740937769412994
    2. ':' → logprob: -2.4774093627929688
    3. '       ' → logprob: -2.4774093627929688
    4. ' return' → logprob: -4.227409362792969
    5. ':
' → logprob: -5.102409362792969
    6. ' np' → logprob: -5.852409362792969
    7. ':return' → logprob: -5.977409362792969
    8. 'return' → logprob: -6.102409362792969
    9. '(np' → logprob: -6.102409362792969
    10. '(' → logprob: -6.977409362792969

Token 617: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.05495111644268036
    2. '   ' → logprob: -3.5549511909484863
    3. '       ' → logprob: -4.429951190948486
    4. ' return' → logprob: -4.554951190948486
    5. 'np' → logprob: -6.179951190948486
    6. 'R' → logprob: -9.304950714111328
    7. 'arr' → logprob: -9.804950714111328
    8. 'result' → logprob: -9.804950714111328
    9. '	return' → logprob: -9.929950714111328
    10. 'import' → logprob: -10.429950714111328

Token 618: ' np' (ID: 5374)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'np' → logprob: -3.35706390615087e-05
    2. ' np' → logprob: -10.375033378601074
    3. '(np' → logprob: -13.375033378601074
    4. '   ' → logprob: -15.375033378601074
    5. 'poly' → logprob: -15.375033378601074
    6. 'pol' → logprob: -15.750033378601074
    7. '1' → logprob: -16.25003433227539
    8. 'numpy' → logprob: -16.87503433227539
    9. 'P' → logprob: -17.75003433227539
    10. 'Np' → logprob: -18.00003433227539

Token 619: '.array' (ID: 14557)
  Prédit: 'array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'array' → logprob: -0.12755517661571503
    2. '.array' → logprob: -2.2525551319122314
    3. '.zeros' → logprob: -4.6275553703308105
    4. '.ones' → logprob: -5.6275553703308105
    5. 'zeros' → logprob: -7.3775553703308105
    6. '_array' → logprob: -9.002554893493652
    7. 'ones' → logprob: -9.127554893493652
    8. ' array' → logprob: -9.502554893493652
    9. '(array' → logprob: -9.502554893493652
    10. '.arange' → logprob: -9.752554893493652

Token 620: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.00020544764993246645
    2. '[' → logprob: -8.500205039978027
    3. '(' → logprob: -13.625205039978027
    4. '([],' → logprob: -14.250205039978027
    5. '([]' → logprob: -16.750205993652344
    6. '(([' → logprob: -17.000205993652344
    7. '(np' → logprob: -18.625205993652344
    8. '((' → logprob: -19.375205993652344
    9. ' ([' → logprob: -19.375205993652344
    10. '[np' → logprob: -19.375205993652344

Token 621: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.5
    3. '   ' → logprob: -16.75
    4. '[' → logprob: -17.25
    5. '(' → logprob: -19.375
    6. 'int' → logprob: -19.5
    7. '１' → logprob: -19.875
    8. 'np' → logprob: -20.0
    9. '۱' → logprob: -20.625
    10. '  ' → logprob: -20.875

Token 622: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.024368222802877426
    2. ']' → logprob: -4.0243682861328125
    3. ']+' → logprob: -5.1493682861328125
    4. ',' → logprob: -8.649368286132812
    5. '])' → logprob: -8.649368286132812
    6. ' ],' → logprob: -11.524368286132812
    7. '   ' → logprob: -11.774368286132812
    8. '0' → logprob: -12.024368286132812
    9. 'dtype' → logprob: -12.524368286132812
    10. '],[' → logprob: -12.649368286132812

Token 623: ' dtype' (ID: 29770)
  Prédit: 'dtype'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dtype' → logprob: -0.3884612023830414
    2. 'np' → logprob: -1.1384612321853638
    3. ' np' → logprob: -7.138461112976074
    4. ' dtype' → logprob: -7.138461112976074
    5. 'int' → logprob: -14.763461112976074
    6. 'nd' → logprob: -16.26346206665039
    7. '(np' → logprob: -16.63846206665039
    8. '   ' → logprob: -16.63846206665039
    9. '[np' → logprob: -16.63846206665039
    10. ',np' → logprob: -17.01346206665039

Token 624: '=np' (ID: 40593)
  Prédit: '=np'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=np' → logprob: -0.0040818434208631516
    2. 'np' → logprob: -5.504081726074219
    3. ' np' → logprob: -13.629081726074219
    4. '(np' → logprob: -14.004081726074219
    5. '   ' → logprob: -14.504081726074219
    6. '[np' → logprob: -14.504081726074219
    7. '=int' → logprob: -15.629081726074219
    8. ',np' → logprob: -16.00408172607422
    9. '=' → logprob: -16.50408172607422
    10. 'P' → logprob: -17.37908172607422

Token 625: '.int' (ID: 21499)
  Prédit: '.int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.int' → logprob: -0.575950026512146
    2. 'int' → logprob: -0.825950026512146
    3. ' int' → logprob: -12.575949668884277
    4. 'uint' → logprob: -13.075949668884277
    5. '=int' → logprob: -13.325949668884277
    6. 'np' → logprob: -13.700949668884277
    7. '.uint' → logprob: -13.700949668884277
    8. '_int' → logprob: -14.950949668884277
    9. '```' → logprob: -15.950949668884277
    10. '   ' → logprob: -15.950949668884277

Token 626: '64' (ID: 2220)
  Prédit: '64'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '64' → logprob: 0.0
    2. 'p' → logprob: -22.375
    3. '32' → logprob: -22.375
    4. 'c' → logprob: -23.625
    5. 'int' → logprob: -23.875
    6. '66' → logprob: -23.875
    7. 'array' → logprob: -24.25
    8. '63' → logprob: -24.5
    9. '6' → logprob: -25.0
    10. ' ' → logprob: -25.375

Token 627: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00044616201194003224
    2. ')
' → logprob: -8.125446319580078
    3. '   ' → logprob: -9.125446319580078
    4. ' )' → logprob: -10.250446319580078
    5. ',' → logprob: -13.375446319580078
    6. '[' → logprob: -13.625446319580078
    7. '),' → logprob: -14.500446319580078
    8. ')[' → logprob: -14.625446319580078
    9. ' ' → logprob: -15.000446319580078
    10. ').' → logprob: -15.250446319580078

Token 628: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7021159529685974
    2. '[' → logprob: -0.9521159529685974
    3. '<|end|>' → logprob: -3.327116012573242
    4. '
' → logprob: -4.327116012573242
    5. ')' → logprob: -4.327116012573242
    6. '    
' → logprob: -4.452116012573242
    7. ':' → logprob: -4.827116012573242
    8. '[
' → logprob: -4.827116012573242
    9. '```' → logprob: -4.952116012573242
    10. '(' → logprob: -5.202116012573242

Token 629: ' Q' (ID: 1486)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.618709921836853
    2. ' ' → logprob: -1.868709921836853
    3. ' 
' → logprob: -2.6187100410461426
    4. '
' → logprob: -3.6187100410461426
    5. '[' → logprob: -3.6187100410461426
    6. '```' → logprob: -3.6187100410461426
    7. '  
' → logprob: -3.7437100410461426
    8. ':' → logprob: -3.7437100410461426
    9. '    
' → logprob: -3.9937100410461426
    10. ' else' → logprob: -4.243710041046143

Token 630: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10020710527896881
    2. ' =' → logprob: -2.3502070903778076
    3. '=np' → logprob: -15.725207328796387
    4. ',' → logprob: -15.975207328796387
    5. '=P' → logprob: -16.10020637512207
    6. '=
' → logprob: -16.47520637512207
    7. '  ' → logprob: -16.72520637512207
    8. ' ' → logprob: -16.97520637512207
    9. '   ' → logprob: -17.60020637512207
    10. '=p' → logprob: -18.10020637512207

Token 631: ' polynomial' (ID: 113464)
  Prédit: 'pol'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pol' → logprob: -0.6786670684814453
    2. 'P' → logprob: -0.9286670684814453
    3. 'np' → logprob: -3.1786670684814453
    4. ' polynomial' → logprob: -3.5536670684814453
    5. ' P' → logprob: -3.9286670684814453
    6. ' np' → logprob: -5.178667068481445
    7. ' pol' → logprob: -6.553667068481445
    8. 'poly' → logprob: -8.428667068481445
    9. 'p' → logprob: -8.553667068481445
    10. ' ' → logprob: -9.428667068481445

Token 632: '_power' (ID: 51623)
  Prédit: '_power'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_power' → logprob: -0.25240597128868103
    2. '_mult' → logprob: -1.5024060010910034
    3. '_m' → logprob: -8.627406120300293
    4. '_pow' → logprob: -8.627406120300293
    5. '_mul' → logprob: -9.752406120300293
    6. 'mult' → logprob: -10.252406120300293
    7. 'power' → logprob: -10.752406120300293
    8. '_' → logprob: -14.002406120300293
    9. ' power' → logprob: -14.127406120300293
    10. 'pow' → logprob: -14.627406120300293

Token 633: '(P' (ID: 8952)
  Prédit: '(P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(P' → logprob: -0.018245702609419823
    2. '(' → logprob: -4.018245697021484
    3. '(
' → logprob: -9.268245697021484
    4. '(Py' → logprob: -14.768245697021484
    5. '(PR' → logprob: -15.518245697021484
    6. ' ' → logprob: -16.143245697021484
    7. ' (' → logprob: -16.268245697021484
    8. '(Q' → logprob: -16.268245697021484
    9. '(p' → logprob: -16.268245697021484
    10. '(

' → logprob: -16.518245697021484

Token 634: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0048524304293096066
    2. ',n' → logprob: -5.629852294921875
    3. ' ,' → logprob: -6.754852294921875
    4. '   ' → logprob: -10.629852294921875
    5. '(' → logprob: -10.754852294921875
    6. '(n' → logprob: -11.504852294921875
    7. ',
' → logprob: -11.504852294921875
    8. ' ' → logprob: -11.754852294921875
    9. ' n' → logprob: -12.379852294921875
    10. 'n' → logprob: -12.754852294921875

Token 635: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.009775448590517044
    2. ' n' → logprob: -4.634775638580322
    3. '(n' → logprob: -11.509775161743164
    4. '   ' → logprob: -11.884775161743164
    5. ' ' → logprob: -13.634775161743164
    6. ' (' → logprob: -14.634775161743164
    7. '	n' → logprob: -14.759775161743164
    8. '    ' → logprob: -15.634775161743164
    9. '
' → logprob: -16.134775161743164
    10. 'int' → logprob: -16.634775161743164

Token 636: ' //' (ID: 602)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.06231698393821716
    2. ' -' → logprob: -2.81231689453125
    3. ' //' → logprob: -9.06231689453125
    4. '//' → logprob: -9.06231689453125
    5. ' ' → logprob: -9.56231689453125
    6. '   ' → logprob: -10.43731689453125
    7. ',' → logprob: -11.93731689453125
    8. '>>' → logprob: -12.56231689453125
    9. '1' → logprob: -12.68731689453125
    10. '  ' → logprob: -13.93731689453125

Token 637: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0017024369444698095
    2. ' ' → logprob: -6.376702308654785
    3. '   ' → logprob: -15.751702308654785
    4. '```' → logprob: -16.5017032623291
    5. '  ' → logprob: -17.8767032623291
    6. '    ' → logprob: -18.5017032623291
    7. '=' → logprob: -18.5017032623291
    8. '>' → logprob: -19.2517032623291
    9. '
' → logprob: -19.9392032623291
    10. '3' → logprob: -20.3142032623291

Token 638: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.517272024415433e-05
    2. ' ' → logprob: -9.500075340270996
    3. '```' → logprob: -15.875075340270996
    4. '   ' → logprob: -16.37507438659668
    5. '  ' → logprob: -17.12507438659668
    6. '
' → logprob: -17.50007438659668
    7. '3' → logprob: -18.00007438659668
    8. '    ' → logprob: -18.62507438659668
    9. '[' → logprob: -18.87507438659668
    10. '=' → logprob: -19.06257438659668

Token 639: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5150309205055237
    2. ')
' → logprob: -1.265030860900879
    3. ')' → logprob: -2.140030860900879
    4. '   ' → logprob: -6.390030860900879
    5. ',
' → logprob: -7.640030860900879
    6. ' ,' → logprob: -8.390030860900879
    7. ')
' → logprob: -9.765030860900879
    8. ' ' → logprob: -10.140030860900879
    9. ' )
' → logprob: -10.265030860900879
    10. ',)
' → logprob: -10.640030860900879

Token 640: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.00018387178715784103
    2. ' X' → logprob: -8.625184059143066
    3. '(X' → logprob: -13.125184059143066
    4. '   ' → logprob: -13.375184059143066
    5. ' ' → logprob: -14.500184059143066
    6. '  ' → logprob: -16.37518310546875
    7. '	X' → logprob: -16.62518310546875
    8. '(' → logprob: -16.75018310546875
    9. ' (' → logprob: -17.37518310546875
    10. 'max' → logprob: -18.37518310546875

Token 641: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0058024669997394085
    2. ')' → logprob: -5.255802631378174
    3. ' ,' → logprob: -7.630802631378174
    4. ')
' → logprob: -10.005802154541016
    5. '   ' → logprob: -11.505802154541016
    6. ',Q' → logprob: -11.755802154541016
    7. ',P' → logprob: -12.505802154541016
    8. ',
' → logprob: -12.505802154541016
    9. ' ' → logprob: -12.755802154541016
    10. '  ' → logprob: -13.255802154541016

Token 642: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.00132976402528584
    2. ' MOD' → logprob: -6.6263298988342285
    3. '   ' → logprob: -13.62632942199707
    4. ' ' → logprob: -13.62632942199707
    5. 'mod' → logprob: -14.50132942199707
    6. '_MOD' → logprob: -14.87632942199707
    7. 'X' → logprob: -15.62632942199707
    8. 'M' → logprob: -15.87632942199707
    9. 'MAX' → logprob: -16.12632942199707
    10. '  ' → logprob: -16.12632942199707

Token 643: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.054994553327560425
    2. ')' → logprob: -2.929994583129883
    3. '   ' → logprob: -9.554994583129883
    4. ',' → logprob: -11.304994583129883
    5. ' )
' → logprob: -11.429994583129883
    6. ')

' → logprob: -12.179994583129883
    7. ')
' → logprob: -12.179994583129883
    8. ' ' → logprob: -12.554994583129883
    9. 'def' → logprob: -13.929994583129883
    10. '
' → logprob: -14.179994583129883

Token 644: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23745104670524597
    2. 'if' → logprob: -2.6124510765075684
    3. '    
' → logprob: -3.1124510765075684
    4. '
' → logprob: -3.3624510765075684
    5. ' if' → logprob: -3.4874510765075684
    6. '```' → logprob: -3.8624510765075684
    7. '``' → logprob: -6.737451076507568
    8. '  
' → logprob: -6.737451076507568
    9. ' 
' → logprob: -6.987451076507568
    10. '	if' → logprob: -7.237451076507568

Token 645: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' (adapté à ' Q') → logprob: -0.0008344047237187624
    2. ' Q' → logprob: -7.6258344650268555
    3. 'R' → logprob: -8.000834465026855
    4. 'P' → logprob: -12.625834465026855
    5. 'if' → logprob: -12.875834465026855
    6. '   ' → logprob: -13.125834465026855
    7. 'res' → logprob: -14.250834465026855
    8. '	Q' → logprob: -14.625834465026855
    9. '```' → logprob: -14.875834465026855
    10. ' R' → logprob: -15.000834465026855

Token 646: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.026361610740423203
    2. ' =' → logprob: -3.6513617038726807
    3. 'p' → logprob: -10.776361465454102
    4. '_=' → logprob: -11.026361465454102
    5. '_squared' → logprob: -12.526361465454102
    6. 'Q' → logprob: -12.651361465454102
    7. '_sq' → logprob: -12.776361465454102
    8. '2' → logprob: -12.901361465454102
    9. '*=' → logprob: -13.026361465454102
    10. '=p' → logprob: -13.151361465454102

Token 647: ' polynomial' (ID: 113464)
  Prédit: 'pol'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pol' → logprob: -0.00018077615823131055
    2. ' polynomial' → logprob: -8.625181198120117
    3. 'poly' → logprob: -14.250181198120117
    4. ' pol' → logprob: -15.000181198120117
    5. '(pol' → logprob: -15.375181198120117
    6. 'python' → logprob: -18.000181198120117
    7. 'p' → logprob: -18.125181198120117
    8. 'np' → logprob: -18.750181198120117
    9. 'polygon' → logprob: -19.125181198120117
    10. 'Polynomial' → logprob: -19.500181198120117

Token 648: '_mult' (ID: 44050)
  Prédit: '_mult'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mult' → logprob: -0.00021438424300868064
    2. '_power' → logprob: -8.625214576721191
    3. '_m' → logprob: -10.500214576721191
    4. '_mod' → logprob: -13.000214576721191
    5. '_mul' → logprob: -13.375214576721191
    6. '_' → logprob: -14.125214576721191
    7. 'mult' → logprob: -14.375214576721191
    8. '_pow' → logprob: -14.500214576721191
    9. 'Mult' → logprob: -14.875214576721191
    10. '_pol' → logprob: -15.125214576721191

Token 649: '(Q' (ID: 14437)
  Prédit: '(Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Q' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -15.75
    3. '(
' → logprob: -18.5
    4. '(P' → logprob: -18.625
    5. 'Q' → logprob: -19.125
    6. '```' → logprob: -19.625
    7. ' (' → logprob: -19.75
    8. '(Qt' → logprob: -20.125
    9. '(np' → logprob: -20.75
    10. '(R' → logprob: -21.0

Token 650: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12262332439422607
    2. ',Q' → logprob: -2.3726234436035156
    3. '(Q' → logprob: -3.8726234436035156
    4. 'Q' → logprob: -7.247623443603516
    5. ' ,' → logprob: -7.872623443603516
    6. ' Q' → logprob: -8.497623443603516
    7. '(' → logprob: -10.122623443603516
    8. ' (' → logprob: -11.122623443603516
    9. ')' → logprob: -11.872623443603516
    10. ' ' → logprob: -13.622623443603516

Token 651: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.0019287518225610256
    2. ' Q' → logprob: -6.251928806304932
    3. '	Q' → logprob: -15.751928329467773
    4. '(Q' → logprob: -17.001928329467773
    5. '   ' → logprob: -17.376928329467773
    6. ',Q' → logprob: -18.751928329467773
    7. ' ' → logprob: -18.876928329467773
    8. '<Q' → logprob: -19.626928329467773
    9. '.Q' → logprob: -20.876928329467773
    10. ')' → logprob: -21.126928329467773

Token 652: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016361083544325083
    2. ' ,' → logprob: -8.750164031982422
    3. '   ' → logprob: -12.750164031982422
    4. ')' → logprob: -13.250164031982422
    5. ',
' → logprob: -15.875164031982422
    6. ',Q' → logprob: -16.625164031982422
    7. '[' → logprob: -17.000164031982422
    8. '  ' → logprob: -17.375164031982422
    9. '    ' → logprob: -17.375164031982422
    10. '```' → logprob: -17.625164031982422

Token 653: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -1.676292231422849e-05
    2. ' X' → logprob: -11.000017166137695
    3. '   ' → logprob: -18.000017166137695
    4. '(X' → logprob: -18.750017166137695
    5. '	X' → logprob: -19.375017166137695
    6. ' ' → logprob: -20.000017166137695
    7. '>X' → logprob: -21.000017166137695
    8. '(' → logprob: -21.625017166137695
    9. '2' → logprob: -21.750017166137695
    10. 'Q' → logprob: -21.875017166137695

Token 654: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00021676832693628967
    2. ' ,' → logprob: -8.500216484069824
    3. ')' → logprob: -11.625216484069824
    4. '   ' → logprob: -12.500216484069824
    5. ',Q' → logprob: -15.125216484069824
    6. '```' → logprob: -15.375216484069824
    7. '),' → logprob: -17.12521743774414
    8. ',
' → logprob: -17.37521743774414
    9. '  ' → logprob: -17.37521743774414
    10. '    ' → logprob: -18.00021743774414

Token 655: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.00033546582562848926
    2. ' MOD' → logprob: -8.000335693359375
    3. '_MOD' → logprob: -18.875335693359375
    4. '   ' → logprob: -19.375335693359375
    5. 'mod' → logprob: -19.375335693359375
    6. ' ' → logprob: -20.750335693359375
    7. '.MOD' → logprob: -21.875335693359375
    8. 'M' → logprob: -22.125335693359375
    9. 'MO' → logprob: -22.750335693359375
    10. 'MODE' → logprob: -22.875335693359375

Token 656: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010367410723119974
    2. '   ' → logprob: -7.001036643981934
    3. ')
' → logprob: -9.001036643981934
    4. ' )' → logprob: -13.751036643981934
    5. '	' → logprob: -15.876036643981934
    6. ',' → logprob: -15.876036643981934
    7. ')
' → logprob: -16.00103759765625
    8. ' ' → logprob: -16.25103759765625
    9. ')

' → logprob: -16.75103759765625
    10. ')return' → logprob: -16.75103759765625

Token 657: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6077249050140381
    2. '   ' → logprob: -1.107724905014038
    3. ' if' → logprob: -2.107724905014038
    4. '```' → logprob: -6.857725143432617
    5. 'Q' → logprob: -7.232725143432617
    6. '
' → logprob: -7.482725143432617
    7. '    
' → logprob: -7.607725143432617
    8. ' ' → logprob: -7.857725143432617
    9. '	if' → logprob: -9.232725143432617
    10. '[' → logprob: -9.357725143432617

Token 658: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.001775022828951478
    2. ' if' → logprob: -6.501774787902832
    3. '   ' → logprob: -8.376774787902832
    4. '```' → logprob: -10.126774787902832
    5. '``' → logprob: -14.126774787902832
    6. ' ' → logprob: -14.126774787902832
    7. 'If' → logprob: -15.126774787902832
    8. '
' → logprob: -15.251774787902832
    9. '    
' → logprob: -15.376774787902832
    10. '	if' → logprob: -15.501774787902832

Token 659: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.1430606096982956
    2. 'n' → logprob: -2.0180606842041016
    3. '(n' → logprob: -8.018060684204102
    4. ' (' → logprob: -9.893060684204102
    5. '(' → logprob: -12.393060684204102
    6. ' ' → logprob: -14.143060684204102
    7. ' ' → logprob: -16.0180606842041
    8. '	n' → logprob: -16.2680606842041
    9. '   ' → logprob: -16.3930606842041
    10. '_n' → logprob: -16.5180606842041

Token 660: ' &' (ID: 827)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.19297556579113007
    2. ' %' → logprob: -1.8179755210876465
    3. '&' → logprob: -4.5679755210876465
    4. ' &' → logprob: -6.0679755210876465
    5. ' ' → logprob: -8.192975997924805
    6. '>' → logprob: -9.442975997924805
    7. '[' → logprob: -10.817975997924805
    8. '&amp' → logprob: -10.942975997924805
    9. ' ' → logprob: -11.192975997924805
    10. '
' → logprob: -11.442975997924805

Token 661: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10020678490400314
    2. ' ' → logprob: -2.3502068519592285
    3. ' ' → logprob: -17.47520637512207
    4. '   ' → logprob: -17.60020637512207
    5. ' (' → logprob: -17.97520637512207
    6. 'nbsp' → logprob: -18.22520637512207
    7. '  ' → logprob: -18.35020637512207
    8. 'n' → logprob: -18.35020637512207
    9. '(' → logprob: -19.22520637512207
    10. '```' → logprob: -19.35020637512207

Token 662: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '{' → logprob: -20.62500762939453
    4. 'n' → logprob: -21.00000762939453
    5. '' → logprob: -21.62500762939453
    6. '(' → logprob: -21.87500762939453
    7. '１' → logprob: -22.00000762939453
    8. '-' → logprob: -22.37500762939453
    9. '01' → logprob: -22.50000762939453
    10. '127' → logprob: -22.62500762939453

Token 663: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10050544887781143
    2. ':
' → logprob: -2.3505053520202637
    3. '==' → logprob: -8.600505828857422
    4. '>' → logprob: -10.100505828857422
    5. '=' → logprob: -10.600505828857422
    6. ' ==' → logprob: -11.100505828857422
    7. '{' → logprob: -12.100505828857422
    8. '):
' → logprob: -12.350505828857422
    9. ' :' → logprob: -12.475505828857422
    10. '1' → logprob: -12.725505828857422

Token 664: '       ' (ID: 309)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7314229607582092
    2. ' =' → logprob: -1.4814229011535645
    3. '   ' → logprob: -1.8564229011535645
    4. ' ' → logprob: -2.8564229011535645
    5. ' Q' → logprob: -3.7314229011535645
    6. '    ' → logprob: -3.9814229011535645
    7. 'Q' → logprob: -4.6064229011535645
    8. '       ' → logprob: -5.2314229011535645
    9. '    
' → logprob: -5.6064229011535645
    10. ',' → logprob: -5.7314229011535645

Token 665: ' return' (ID: 622)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.1002325564622879
    2. ' Q' → logprob: -2.3502326011657715
    3. '   ' → logprob: -11.600232124328613
    4. 'return' (adapté à ' return') → logprob: -12.100232124328613
    5. '	Q' → logprob: -12.225232124328613
    6. ' return' → logprob: -12.850232124328613
    7. '```' → logprob: -14.350232124328613
    8. '(Q' → logprob: -14.475232124328613
    9. '       ' → logprob: -14.475232124328613
    10. ' ' → logprob: -14.725232124328613

Token 666: ' polynomial' (ID: 113464)
  Prédit: 'pol'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pol' → logprob: -0.31365492939949036
    2. ' polynomial' → logprob: -1.313654899597168
    3. 'poly' → logprob: -7.938654899597168
    4. ' pol' → logprob: -10.688654899597168
    5. '(pol' → logprob: -11.563654899597168
    6. 'np' → logprob: -13.813654899597168
    7. ' polym' → logprob: -14.313654899597168
    8. ' poly' → logprob: -14.813654899597168
    9. ' polymer' → logprob: -14.938654899597168
    10. 'Polynomial' → logprob: -15.063654899597168

Token 667: '_mult' (ID: 44050)
  Prédit: '_mult'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mult' → logprob: -1.0280383548888494e-06
    2. '_power' → logprob: -14.125000953674316
    3. 'mult' → logprob: -15.625000953674316
    4. '```' → logprob: -16.875001907348633
    5. '_m' → logprob: -17.000001907348633
    6. '_pol' → logprob: -17.375001907348633
    7. '_mod' → logprob: -18.625001907348633
    8. 'Mult' → logprob: -19.750001907348633
    9. '_mul' → logprob: -20.000001907348633
    10. '_' → logprob: -20.000001907348633

Token 668: '(P' (ID: 8952)
  Prédit: '(Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Q' → logprob: -5.512236498361744e-07
    2. '(P' → logprob: -14.750000953674316
    3. '(' → logprob: -16.5
    4. '(
' → logprob: -18.875
    5. ' (' → logprob: -19.5
    6. '(Qt' → logprob: -21.25
    7. '   ' → logprob: -22.625
    8. '((' → logprob: -22.75
    9. '(Py' → logprob: -22.75
    10. '(np' → logprob: -22.875

Token 669: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10002095252275467
    2. ',Q' → logprob: -2.4750208854675293
    3. '(Q' → logprob: -4.850020885467529
    4. 'Q' → logprob: -6.225020885467529
    5. ' Q' → logprob: -6.850020885467529
    6. ' ,' → logprob: -9.350021362304688
    7. ')' → logprob: -10.225021362304688
    8. '),' → logprob: -11.100021362304688
    9. '	Q' → logprob: -12.225021362304688
    10. ',
' → logprob: -12.475021362304688

Token 670: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.02324605919420719
    2. ' Q' → logprob: -3.7732460498809814
    3. '	Q' → logprob: -14.773245811462402
    4. ',Q' → logprob: -17.02324676513672
    5. '<Q' → logprob: -17.89824676513672
    6. '(Q' → logprob: -18.14824676513672
    7. '   ' → logprob: -18.52324676513672
    8. '.Q' → logprob: -18.77324676513672
    9. ' ' → logprob: -19.14824676513672
    10. '[' → logprob: -19.64824676513672

Token 671: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005052540800534189
    2. ',X' → logprob: -7.625505447387695
    3. ' ,' → logprob: -11.125505447387695
    4. 'X' → logprob: -13.875505447387695
    5. ',Q' → logprob: -14.000505447387695
    6. '(X' → logprob: -14.750505447387695
    7. '(' → logprob: -15.875505447387695
    8. ' X' → logprob: -16.375505447387695
    9. ',
' → logprob: -16.625505447387695
    10. '```' → logprob: -17.875505447387695

Token 672: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.0005530327325686812
    2. ' X' → logprob: -7.500553131103516
    3. '   ' → logprob: -17.500553131103516
    4. ' ' → logprob: -18.375553131103516
    5. '	X' → logprob: -20.125553131103516
    6. '  ' → logprob: -20.375553131103516
    7. ',' → logprob: -20.625553131103516
    8. '>X' → logprob: -21.125553131103516
    9. '[' → logprob: -21.250553131103516
    10. ')' → logprob: -21.375553131103516

Token 673: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003682285314425826
    2. ' ,' → logprob: -8.125368118286133
    3. ',X' → logprob: -9.625368118286133
    4. ')' → logprob: -12.875368118286133
    5. ' X' → logprob: -13.250368118286133
    6. 'X' → logprob: -13.625368118286133
    7. '   ' → logprob: -15.375368118286133
    8. '(X' → logprob: -15.625368118286133
    9. ',Q' → logprob: -17.500368118286133
    10. '[' → logprob: -17.500368118286133

Token 674: ' MOD' (ID: 32868)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.10062716156244278
    2. 'MOD' → logprob: -2.3506271839141846
    3. ' X' → logprob: -8.350626945495605
    4. ' MOD' → logprob: -8.600626945495605
    5. 'mod' → logprob: -15.975626945495605
    6. ' ' → logprob: -16.850627899169922
    7. '_MOD' → logprob: -17.100627899169922
    8. 'Mod' → logprob: -17.850627899169922
    9. '```' → logprob: -17.850627899169922
    10. '0' → logprob: -18.350627899169922

Token 675: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20151479542255402
    2. ',' → logprob: -1.7015148401260376
    3. '   ' → logprob: -9.701515197753906
    4. ' ,' → logprob: -11.326515197753906
    5. ' )' → logprob: -11.701515197753906
    6. ',)' → logprob: -11.826515197753906
    7. ')
' → logprob: -11.951515197753906
    8. '),' → logprob: -12.576515197753906
    9. ')}' → logprob: -14.451515197753906
    10. ',Q' → logprob: -14.576515197753906

Token 676: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.8299656510353088
    2. ' else' → logprob: -1.204965591430664
    3. '   ' → logprob: -1.454965591430664
    4. ' return' → logprob: -4.704965591430664
    5. 'return' → logprob: -4.704965591430664
    6. ' ' → logprob: -5.454965591430664
    7. '<|end|>' → logprob: -6.329965591430664
    8. ')' → logprob: -6.579965591430664
    9. '    
' → logprob: -6.829965591430664
    10. '	else' → logprob: -7.204965591430664

Token 677: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.6819143295288086
    2. '   ' → logprob: -1.3069143295288086
    3. 'return' → logprob: -2.3069143295288086
    4. ' else' → logprob: -2.3069143295288086
    5. ' return' → logprob: -3.8069143295288086
    6. ':return' → logprob: -7.431914329528809
    7. ' ' → logprob: -7.556914329528809
    8. '    
' → logprob: -8.181914329528809
    9. '	return' → logprob: -8.931914329528809
    10. ' 
' → logprob: -8.931914329528809

Token 678: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009150175377726555
    2. ':' → logprob: -6.00915002822876
    3. '   ' → logprob: -6.00915002822876
    4. 'return' → logprob: -6.13415002822876
    5. ':return' → logprob: -6.75915002822876
    6. ':
' → logprob: -7.63415002822876
    7. ' return' → logprob: -8.009150505065918
    8. '	return' → logprob: -10.384150505065918
    9. '{return' → logprob: -12.509150505065918
    10. '<|end|>' → logprob: -13.009150505065918

Token 679: '       ' (ID: 309)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0015491410158574581
    2. '       ' → logprob: -7.251549243927002
    3. ' return' → logprob: -7.251549243927002
    4. '   ' → logprob: -9.126548767089844
    5. 'Q' → logprob: -11.376548767089844
    6. '{return' → logprob: -12.251548767089844
    7. '	return' → logprob: -12.751548767089844
    8. ':return' → logprob: -13.376548767089844
    9. '```' → logprob: -16.001548767089844
    10. '           ' → logprob: -17.626548767089844

Token 680: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -1.0802738870552275e-05
    2. ' return' → logprob: -11.50001049041748
    3. '       ' → logprob: -15.00001049041748
    4. '   ' → logprob: -15.50001049041748
    5. '	return' → logprob: -17.625011444091797
    6. '{return' → logprob: -17.750011444091797
    7. ':return' → logprob: -18.500011444091797
    8. '
' → logprob: -19.750011444091797
    9. '        
' → logprob: -19.750011444091797
    10. '```' → logprob: -20.250011444091797

Token 681: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -2.7610454708337784e-05
    2. ' Q' → logprob: -10.500027656555176
    3. '	Q' → logprob: -18.50002670288086
    4. '(Q' → logprob: -18.87502670288086
    5. '   ' → logprob: -21.00002670288086
    6. '<Q' → logprob: -21.12502670288086
    7. ',Q' → logprob: -23.25002670288086
    8. ' ' → logprob: -23.37502670288086
    9. 'q' → logprob: -23.75002670288086
    10. '  ' → logprob: -23.87502670288086

Token 682: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06794306635856628
    2. '<|end|>' → logprob: -2.8179430961608887
    3. '```' → logprob: -6.442943096160889
    4. ')' → logprob: -6.442943096160889
    5. '^' → logprob: -6.817943096160889
    6. '#' → logprob: -7.692943096160889
    7. '[' → logprob: -7.817943096160889
    8. '.' → logprob: -8.19294261932373
    9. '+' → logprob: -9.31794261932373
    10. 'import' → logprob: -9.44294261932373

Token 683: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.021361984312534332
    2. '<|end|>' → logprob: -4.021361827850342
    3. '```' → logprob: -6.021361827850342
    4. '
' → logprob: -7.896361827850342
    5. 'import' → logprob: -8.7713623046875
    6. '#' → logprob: -9.0213623046875
    7. '[' → logprob: -10.6463623046875
    8. '\' → logprob: -10.7713623046875
    9. '<|end|>' → logprob: -10.7713623046875
    10. ' def' → logprob: -10.8963623046875

Token 684: ' F' (ID: 454)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.3710465431213379
    2. ' main' → logprob: -1.496046543121338
    3. 'solve' → logprob: -3.246046543121338
    4. 'pol' → logprob: -4.246046543121338
    5. ' solve' → logprob: -4.871046543121338
    6. 'count' → logprob: -5.621046543121338
    7. 'make' → logprob: -5.871046543121338
    8. 'poly' → logprob: -5.871046543121338
    9. 'comb' → logprob: -5.996046543121338
    10. 'calc' → logprob: -6.621046543121338

Token 685: '1' (ID: 16)
  Prédit: '_power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_power' → logprob: -0.8952405452728271
    2. '(N' → logprob: -2.145240545272827
    3. 'ac' → logprob: -2.395240545272827
    4. 'ull' → logprob: -2.770240545272827
    5. 'P' → logprob: -3.020240545272827
    6. 'actor' → logprob: -3.145240545272827
    7. '_poly' → logprob: -3.645240545272827
    8. '_pol' → logprob: -3.645240545272827
    9. 'AC' → logprob: -4.145240783691406
    10. 'power' → logprob: -4.395240783691406

Token 686: '_prepare' (ID: 121133)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.3306432366371155
    2. '(' → logprob: -2.8306431770324707
    3. '1' → logprob: -2.8306431770324707
    4. '(X' → logprob: -2.8306431770324707
    5. '(n' → logprob: -3.0806431770324707
    6. '(x' → logprob: -4.330643177032471
    7. '(P' → logprob: -4.955643177032471
    8. 'irst' → logprob: -5.705643177032471
    9. '_power' → logprob: -5.830643177032471
    10. '(L' → logprob: -5.955643177032471

Token 687: '_poly' (ID: 99075)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.37517276406288147
    2. '(' → logprob: -1.375172734260559
    3. '(P' → logprob: -2.8751728534698486
    4. '(U' → logprob: -7.1251726150512695
    5. '(X' → logprob: -7.3751726150512695
    6. '()' → logprob: -7.7501726150512695
    7. ':' → logprob: -8.50017261505127
    8. '(:' → logprob: -8.50017261505127
    9. '(F' → logprob: -8.87517261505127
    10. '(N' → logprob: -9.00017261505127

Token 688: '():
' (ID: 8595)
  Prédit: '(P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(P' → logprob: -0.2756224274635315
    2. '(' → logprob: -1.5256223678588867
    3. '():' → logprob: -4.525622367858887
    4. '(n' → logprob: -6.400622367858887
    5. '(a' → logprob: -6.650622367858887
    6. '(N' → logprob: -6.775622367858887
    7. '(X' → logprob: -6.900622367858887
    8. '(U' → logprob: -7.025622367858887
    9. '(p' → logprob: -7.150622367858887
    10. '(s' → logprob: -7.275622367858887

Token 689: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006234417669475079
    2. 'U' → logprob: -8.62562370300293
    3. 'P' → logprob: -9.25062370300293
    4. '```' → logprob: -9.25062370300293
    5. 'x' → logprob: -10.12562370300293
    6. ' return' → logprob: -10.37562370300293
    7. 'return' → logprob: -10.37562370300293
    8. 'n' → logprob: -10.62562370300293
    9. '   ' → logprob: -11.00062370300293
    10. 'L' → logprob: -11.00062370300293

Token 690: ' return' (ID: 622)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'P' → logprob: -1.309813380241394
    2. '   ' → logprob: -1.559813380241394
    3. 'U' → logprob: -1.809813380241394
    4. 'L' → logprob: -2.0598134994506836
    5. 'N' → logprob: -2.5598134994506836
    6. 'x' → logprob: -2.8098134994506836
    7. 'size' → logprob: -3.9348134994506836
    8. 'deg' → logprob: -4.309813499450684
    9. 'n' → logprob: -4.559813499450684
    10. 'degree' → logprob: -4.559813499450684

Token 691: ' np' (ID: 5374)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.0003528622619342059
    2. ' np' → logprob: -8.12535285949707
    3. '(np' → logprob: -9.87535285949707
    4. '[np' → logprob: -13.00035285949707
    5. '1' → logprob: -14.50035285949707
    6. '[' → logprob: -14.87535285949707
    7. '   ' → logprob: -15.00035285949707
    8. '[]' → logprob: -15.37535285949707
    9. 'numpy' → logprob: -15.37535285949707
    10. '  ' → logprob: -15.37535285949707

Token 692: '.array' (ID: 14557)
  Prédit: '.array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.array' → logprob: -0.004134799353778362
    2. '.arange' → logprob: -5.754134654998779
    3. '.ones' → logprob: -7.504134654998779
    4. '.zeros' → logprob: -8.004135131835938
    5. 'array' → logprob: -10.504135131835938
    6. '.' → logprob: -11.004135131835938
    7. '.asarray' → logprob: -12.004135131835938
    8. '.linspace' → logprob: -12.004135131835938
    9. '.concatenate' → logprob: -12.879135131835938
    10. '.eye' → logprob: -13.129135131835938

Token 693: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.0007369658560492098
    2. '(' → logprob: -7.625737190246582
    3. '[' → logprob: -8.750737190246582
    4. '([
' → logprob: -10.000737190246582
    5. '([]' → logprob: -10.750737190246582
    6. '([...' → logprob: -12.000737190246582
    7. '<|end|>' → logprob: -12.125737190246582
    8. '(([' → logprob: -12.250737190246582
    9. '([[' → logprob: -12.875737190246582
    10. '([],' → logprob: -13.250737190246582

Token 694: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.025053365156054497
    2. '0' → logprob: -3.9000532627105713
    3. '2' → logprob: -6.40005350112915
    4. '-' → logprob: -6.77505350112915
    5. '3' → logprob: -7.52505350112915
    6. '998' → logprob: -8.275053024291992
    7. '4' → logprob: -8.525053024291992
    8. '5' → logprob: -9.275053024291992
    9. '6' → logprob: -10.025053024291992
    10. '7' → logprob: -10.025053024291992

Token 695: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017030329909175634
    2. '],' → logprob: -6.876703262329102
    3. '])' → logprob: -7.876703262329102
    4. ' ,' → logprob: -8.251703262329102
    5. '1' → logprob: -11.126703262329102
    6. ',
' → logprob: -12.501703262329102
    7. ']),' → logprob: -12.751703262329102
    8. '0' → logprob: -12.876703262329102
    9. ' ],' → logprob: -13.751703262329102
    10. '2' → logprob: -14.376703262329102

Token 696: ' ' (ID: 220)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5292198657989502
    2. '1' → logprob: -1.0292198657989502
    3. '998' → logprob: -3.65421986579895
    4. '2' → logprob: -4.404219627380371
    5. '100' → logprob: -5.654219627380371
    6. '3' → logprob: -6.029219627380371
    7. ' -' → logprob: -6.154219627380371
    8. '999' → logprob: -6.404219627380371
    9. '4' → logprob: -6.529219627380371
    10. '5' → logprob: -7.404219627380371

Token 697: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4172065258026123
    2. '-' → logprob: -1.2922065258026123
    3. '2' → logprob: -3.4172065258026123
    4. '998' → logprob: -3.6672065258026123
    5. '3' → logprob: -5.917206764221191
    6. '4' → logprob: -6.792206764221191
    7. '999' → logprob: -7.042206764221191
    8. '0' → logprob: -7.167206764221191
    9. '100' → logprob: -7.417206764221191
    10. '10' → logprob: -7.917206764221191

Token 698: ',' (ID: 11)
  Prédit: '],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.20249302685260773
    2. '])' → logprob: -1.7024930715560913
    3. ',' → logprob: -6.952493190765381
    4. ']' → logprob: -9.202492713928223
    5. ')' → logprob: -11.577492713928223
    6. '),' → logprob: -12.452492713928223
    7. '   ' → logprob: -13.077492713928223
    8. ' ],' → logprob: -13.202492713928223
    9. ' ])' → logprob: -13.452492713928223
    10. '])
' → logprob: -13.827492713928223

Token 699: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009082017466425896
    2. '2' → logprob: -5.759081840515137
    3. '-' → logprob: -6.009081840515137
    4. '3' → logprob: -7.009081840515137
    5. '998' → logprob: -7.384081840515137
    6. ' ' → logprob: -7.509081840515137
    7. '4' → logprob: -8.009081840515137
    8. '0' → logprob: -8.759081840515137
    9. '5' → logprob: -8.884081840515137
    10. '499' → logprob: -9.009081840515137

Token 700: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004636841826140881
    2. '2' → logprob: -6.129636764526367
    3. '-' → logprob: -7.004636764526367
    4. '3' → logprob: -7.254636764526367
    5. '0' → logprob: -8.254636764526367
    6. '4' → logprob: -8.504636764526367
    7. '5' → logprob: -9.379636764526367
    8. '6' → logprob: -9.629636764526367
    9. '998' → logprob: -9.754636764526367
    10. ' ' → logprob: -10.754636764526367

Token 701: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.02981807105243206
    2. '])' → logprob: -3.654818058013916
    3. ',' → logprob: -5.654818058013916
    4. ']' → logprob: -12.529818534851074
    5. ' ],' → logprob: -12.529818534851074
    6. '),' → logprob: -13.654818534851074
    7. '1' → logprob: -13.904818534851074
    8. '])
' → logprob: -14.404818534851074
    9. ' ])' → logprob: -15.654818534851074
    10. '3' → logprob: -15.904818534851074

Token 702: ' np' (ID: 5374)
  Prédit: 'dtype'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dtype' → logprob: -0.017450707033276558
    2. 'np' → logprob: -4.76745080947876
    3. ' dtype' → logprob: -4.76745080947876
    4. ' np' → logprob: -8.142450332641602
    5. '(dtype' → logprob: -12.892450332641602
    6. ')' → logprob: -13.767450332641602
    7. '[np' → logprob: -15.142450332641602
    8. ',np' → logprob: -15.642450332641602
    9. '_dtype' → logprob: -15.892450332641602
    10. '(np' → logprob: -16.0174503326416

Token 703: '.int' (ID: 21499)
  Prédit: '.int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.int' → logprob: -4.429896944202483e-05
    2. 'int' → logprob: -10.500043869018555
    3. '.uint' → logprob: -11.000043869018555
    4. '=int' → logprob: -18.000043869018555
    5. ' int' → logprob: -18.125043869018555
    6. '_int' → logprob: -18.750043869018555
    7. '.array' → logprob: -18.750043869018555
    8. '.dtype' → logprob: -19.000043869018555
    9. '.ndarray' → logprob: -19.750043869018555
    10. '```' → logprob: -19.750043869018555

Token 704: '64' (ID: 2220)
  Prédit: '64'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '64' → logprob: -1.5048530030981055e-06
    2. 'int' → logprob: -14.125001907348633
    3. '8' → logprob: -14.250001907348633
    4. '6' → logprob: -17.000001907348633
    5. '32' → logprob: -17.375001907348633
    6. '66' → logprob: -19.750001907348633
    7. 'c' → logprob: -19.750001907348633
    8. 'p' → logprob: -20.250001907348633
    9. 'array' → logprob: -20.500001907348633
    10. '16' → logprob: -20.875001907348633

Token 705: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1472419600977446e-06
    2. ')
' → logprob: -14.000000953674316
    3. ' )' → logprob: -16.250001907348633
    4. '())' → logprob: -17.125001907348633
    5. '),' → logprob: -17.625001907348633
    6. ')return' → logprob: -18.625001907348633
    7. '()' → logprob: -18.625001907348633
    8. ')#' → logprob: -18.625001907348633
    9. '))' → logprob: -18.750001907348633
    10. ')`' → logprob: -18.875001907348633

Token 706: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 707: ' F' (ID: 454)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.2531294524669647
    2. ' F' → logprob: -1.503129482269287
    3. 'def' → logprob: -8.128129005432129
    4. 'solve' → logprob: -8.628129005432129
    5. 'main' → logprob: -9.503129005432129
    6. 'G' → logprob: -9.940629005432129
    7. ' main' → logprob: -10.253129005432129
    8. '_' → logprob: -10.253129005432129
    9. ' solve' → logprob: -10.315629005432129
    10. 'f' → logprob: -10.378129005432129

Token 708: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.023647109046578407
    2. '2' → logprob: -3.7736470699310303
    3. '3' → logprob: -8.52364730834961
    4. '_' → logprob: -10.02364730834961
    5. '4' → logprob: -10.39864730834961
    6. '(' → logprob: -10.64864730834961
    7. 'unction' → logprob: -11.14864730834961
    8. 'F' → logprob: -11.14864730834961
    9. 'irst' → logprob: -11.27364730834961
    10. '5' → logprob: -12.02364730834961

Token 709: '(N' (ID: 10564)
  Prédit: '_prepare'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_prepare' → logprob: -7.73183855926618e-05
    2. '_' → logprob: -10.250077247619629
    3. '_define' → logprob: -11.875077247619629
    4. '()' → logprob: -12.250077247619629
    5. '_finalize' → logprob: -12.625077247619629
    6. '(' → logprob: -13.125077247619629
    7. '_power' → logprob: -13.125077247619629
    8. '_expand' → logprob: -13.375077247619629
    9. '():
' → logprob: -13.500077247619629
    10. '_pre' → logprob: -13.500077247619629

Token 710: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10249822586774826
    2. '):
' → logprob: -2.8524982929229736
    3. ',' → logprob: -3.2274982929229736
    4. '):
' → logprob: -10.602498054504395
    5. ')' → logprob: -11.352498054504395
    6. '+' → logprob: -11.977498054504395
    7. '-' → logprob: -12.477498054504395
    8. '   ' → logprob: -12.602498054504395
    9. ',
' → logprob: -12.852498054504395
    10. ':' → logprob: -12.852498054504395

Token 711: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.763108491897583
    2. 'MOD' → logprob: -1.388108491897583
    3. 'K' → logprob: -1.763108491897583
    4. 'M' → logprob: -2.763108491897583
    5. ' MOD' → logprob: -4.888108253479004
    6. 'P' → logprob: -5.013108253479004
    7. 'U' → logprob: -5.388108253479004
    8. 'L' → logprob: -5.388108253479004
    9. ' X' → logprob: -5.388108253479004
    10. ')' → logprob: -5.638108253479004

Token 712: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1275949478149414
    2. '):
' → logprob: -2.1275949478149414
    3. ',' → logprob: -7.377594947814941
    4. '):
' → logprob: -10.752594947814941
    5. ')' → logprob: -11.127594947814941
    6. ' ):' → logprob: -13.627594947814941
    7. '):

' → logprob: -13.752594947814941
    8. ':' → logprob: -13.877594947814941
    9. '=' → logprob: -13.877594947814941
    10. '   ' → logprob: -14.252594947814941

Token 713: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.004841984249651432
    2. ' MOD' → logprob: -5.3798418045043945
    3. 'M' → logprob: -8.879841804504395
    4. 'mod' → logprob: -9.879841804504395
    5. ')' → logprob: -11.879841804504395
    6. '   ' → logprob: -12.129841804504395
    7. ' ' → logprob: -12.504841804504395
    8. '_MOD' → logprob: -12.629841804504395
    9. 'P' → logprob: -12.754841804504395
    10. 'MO' → logprob: -13.379841804504395

Token 714: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004089443478733301
    2. '):
' → logprob: -5.50408935546875
    3. ':' → logprob: -11.87908935546875
    4. ')' → logprob: -12.87908935546875
    5. ',' → logprob: -14.00408935546875
    6. '):
' → logprob: -15.00408935546875
    7. ' ):' → logprob: -15.37908935546875
    8. '   ' → logprob: -16.75408935546875
    9. '):

' → logprob: -16.75408935546875
    10. '():' → logprob: -17.00408935546875

Token 715: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0024800582323223352
    2. 'P' → logprob: -6.8774800300598145
    3. '```' → logprob: -7.3774800300598145
    4. 'p' → logprob: -7.8774800300598145
    5. 'poly' → logprob: -8.002480506896973
    6. ' P' → logprob: -10.127480506896973
    7. 'pol' → logprob: -11.252480506896973
    8. ' poly' → logprob: -11.377480506896973
    9. '``' → logprob: -12.127480506896973
    10. 'if' → logprob: -12.127480506896973

Token 716: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' (adapté à ' P') → logprob: -0.1381579488515854
    2. '   ' → logprob: -2.138157844543457
    3. 'p' → logprob: -5.263157844543457
    4. 'poly' → logprob: -5.513157844543457
    5. 'F' → logprob: -6.888157844543457
    6. ' P' → logprob: -8.138157844543457
    7. 'if' → logprob: -8.388157844543457
    8. 'f' → logprob: -9.638157844543457
    9. '```' → logprob: -9.638157844543457
    10. 'return' → logprob: -10.013157844543457

Token 717: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.061977993696928024
    2. ' =' → logprob: -2.8119781017303467
    3. ',' → logprob: -11.686978340148926
    4. '[' → logprob: -14.811978340148926
    5. '=np' → logprob: -14.811978340148926
    6. ')' → logprob: -14.811978340148926
    7. '   ' → logprob: -15.061978340148926
    8. '(' → logprob: -15.561978340148926
    9. '=
' → logprob: -15.686978340148926
    10. ' ' → logprob: -16.81197738647461

Token 718: ' F' (ID: 454)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.16280731558799744
    2. 'np' → logprob: -1.9128073453903198
    3. ' F' → logprob: -6.662807464599609
    4. ' np' → logprob: -7.162807464599609
    5. 'pol' → logprob: -7.912807464599609
    6. 'poly' → logprob: -9.03780746459961
    7. '(np' → logprob: -11.78780746459961
    8. ' polynomial' → logprob: -12.28780746459961
    9. ' ' → logprob: -12.35030746459961
    10. '   ' → logprob: -12.66280746459961

Token 719: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '```' → logprob: -17.75
    3. '
' → logprob: -18.625
    4. '(' → logprob: -18.625
    5. '[' → logprob: -19.5
    6. '`' → logprob: -19.625
    7. ')' → logprob: -20.875
    8. '(P' → logprob: -21.0
    9. ' ' → logprob: -21.125
    10. '(F' → logprob: -21.25

Token 720: '_prepare' (ID: 121133)
  Prédit: '_prepare'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prepare' → logprob: -7.226628895296017e-06
    2. 'prepare' → logprob: -12.125007629394531
    3. '(N' → logprob: -13.375007629394531
    4. '(' → logprob: -17.12500762939453
    5. 'Prepare' → logprob: -17.37500762939453
    6. '1' → logprob: -18.25000762939453
    7. '```' → logprob: -18.37500762939453
    8. '_generate' → logprob: -18.50000762939453
    9. '\' → logprob: -18.75000762939453
    10. '_p' → logprob: -19.00000762939453

Token 721: '_poly' (ID: 99075)
  Prédit: '_poly'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_poly' → logprob: -1.0802738870552275e-05
    2. 'poly' → logprob: -11.50001049041748
    3. '_pol' → logprob: -14.50001049041748
    4. '_pow' → logprob: -17.500011444091797
    5. 'Poly' → logprob: -17.625011444091797
    6. '_p' → logprob: -18.750011444091797
    7. '(poly' → logprob: -19.000011444091797
    8. 'P' → logprob: -20.125011444091797
    9. '```' → logprob: -20.250011444091797
    10. '(P' → logprob: -21.000011444091797

Token 722: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.006717267446219921
    2. '()
' → logprob: -5.006717205047607
    3. '()
' → logprob: -14.131717681884766
    4. '()

' → logprob: -14.631717681884766
    5. '()`' → logprob: -15.256717681884766
    6. '(' → logprob: -15.881717681884766
    7. ' ()' → logprob: -16.006717681884766
    8. '()[' → logprob: -16.131717681884766
    9. '()\' → logprob: -17.256717681884766
    10. '(N' → logprob: -17.381717681884766

Token 723: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04713064804673195
    2. 'return' → logprob: -3.672130584716797
    3. 'R' → logprob: -4.672130584716797
    4. 'result' → logprob: -4.797130584716797
    5. '
' → logprob: -7.172130584716797
    6. 'res' → logprob: -7.547130584716797
    7. ' return' → logprob: -7.922130584716797
    8. 'Q' → logprob: -8.047130584716797
    9. '```' → logprob: -8.672130584716797
    10. ',' → logprob: -8.672130584716797

Token 724: ' Q' (ID: 1486)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0027479345444589853
    2. '   ' → logprob: -6.002748012542725
    3. ' return' → logprob: -8.752747535705566
    4. 'R' → logprob: -9.502747535705566
    5. 'result' → logprob: -11.002747535705566
    6. 'res' → logprob: -11.502747535705566
    7. 'Q' (adapté à ' Q') → logprob: -11.627747535705566
    8. '```' → logprob: -13.002747535705566
    9. '	return' → logprob: -14.377747535705566
    10. ' ' → logprob: -15.127747535705566

Token 725: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02975071594119072
    2. ' =' → logprob: -3.5297508239746094
    3. ',' → logprob: -15.52975082397461
    4. '[' → logprob: -16.27975082397461
    5. '=np' → logprob: -17.77975082397461
    6. ')' → logprob: -18.02975082397461
    7. '=P' → logprob: -18.02975082397461
    8. '(' → logprob: -18.27975082397461
    9. ' ' → logprob: -18.27975082397461
    10. '=p' → logprob: -18.40475082397461

Token 726: ' polynomial' (ID: 113464)
  Prédit: 'pol'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pol' → logprob: -0.03379403427243233
    2. ' polynomial' → logprob: -3.4087939262390137
    3. ' pol' → logprob: -9.158794403076172
    4. 'poly' → logprob: -11.408794403076172
    5. '   ' → logprob: -11.533794403076172
    6. '(pol' → logprob: -11.533794403076172
    7. ' ' → logprob: -12.908794403076172
    8. 'np' → logprob: -13.908794403076172
    9. ' polym' → logprob: -14.033794403076172
    10. 'python' → logprob: -14.033794403076172

Token 727: '_power' (ID: 51623)
  Prédit: '_power'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_power' → logprob: -6.2729995988775045e-06
    2. '_pow' → logprob: -12.125006675720215
    3. '_' → logprob: -14.625006675720215
    4. 'power' → logprob: -16.1250057220459
    5. '_p' → logprob: -16.7500057220459
    6. '_mult' → logprob: -17.3750057220459
    7. '```' → logprob: -18.6250057220459
    8. ' power' → logprob: -18.7500057220459
    9. '_POWER' → logprob: -19.2500057220459
    10. 'pow' → logprob: -19.6250057220459

Token 728: '(P' (ID: 8952)
  Prédit: '(P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(P' → logprob: -1.318681188422488e-05
    2. '(' → logprob: -11.50001335144043
    3. '(
' → logprob: -13.75001335144043
    4. '(Q' → logprob: -14.12501335144043
    5. '(Py' → logprob: -14.62501335144043
    6. '```' → logprob: -15.12501335144043
    7. '(F' → logprob: -15.62501335144043
    8. 'P' → logprob: -16.37501335144043
    9. ' (' → logprob: -16.50001335144043
    10. '<|end|>' → logprob: -16.87501335144043

Token 729: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009655343601480126
    2. ' ,' → logprob: -8.125965118408203
    3. '(N' → logprob: -8.125965118408203
    4. '(' → logprob: -8.500965118408203
    5. ',N' → logprob: -9.375965118408203
    6. ',Q' → logprob: -9.625965118408203
    7. ',P' → logprob: -12.000965118408203
    8. '(P' → logprob: -12.750965118408203
    9. ',n' → logprob: -13.000965118408203
    10. '(X' → logprob: -13.625965118408203

Token 730: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.058108314871788025
    2. ' N' → logprob: -3.058108329772949
    3. 'X' → logprob: -4.683108329772949
    4. ' X' → logprob: -8.43310832977295
    5. ' ' → logprob: -12.30810832977295
    6. '   ' → logprob: -13.55810832977295
    7. '2' → logprob: -13.80810832977295
    8. '3' → logprob: -14.80810832977295
    9. '	N' → logprob: -15.43310832977295
    10. '(N' → logprob: -16.183107376098633

Token 731: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010068230039905757
    2. ' ,' → logprob: -9.625101089477539
    3. '[' → logprob: -10.625101089477539
    4. ',X' → logprob: -11.875101089477539
    5. ')' → logprob: -13.750101089477539
    6. '(' → logprob: -15.125101089477539
    7. 'X' → logprob: -15.250101089477539
    8. '```' → logprob: -15.375101089477539
    9. '<|end|>' → logprob: -15.500101089477539
    10. ',
' → logprob: -15.625101089477539

Token 732: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.00317783304490149
    2. ' X' → logprob: -5.753177642822266
    3. '   ' → logprob: -16.378177642822266
    4. '	X' → logprob: -17.128177642822266
    5. '(X' → logprob: -17.878177642822266
    6. ' ' → logprob: -18.128177642822266
    7. '[' → logprob: -18.378177642822266
    8. 'x' → logprob: -18.878177642822266
    9. '[X' → logprob: -19.003177642822266
    10. '>X' → logprob: -19.253177642822266

Token 733: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16029216349124908
    2. ')' → logprob: -1.910292148590088
    3. '   ' → logprob: -10.160292625427246
    4. ',)' → logprob: -11.035292625427246
    5. ')
' → logprob: -12.160292625427246
    6. ',
' → logprob: -12.785292625427246
    7. ' ,' → logprob: -13.160292625427246
    8. '),' → logprob: -13.910292625427246
    9. ' )' → logprob: -14.660292625427246
    10. '<|end|>' → logprob: -15.035292625427246

Token 734: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0005545823951251805
    2. ' MOD' → logprob: -7.50055456161499
    3. 'X' → logprob: -13.625555038452148
    4. '_MOD' → logprob: -15.000555038452148
    5. 'mod' → logprob: -16.62555503845215
    6. 'Mod' → logprob: -17.62555503845215
    7. ' ' → logprob: -17.75055503845215
    8. ')' → logprob: -17.87555503845215
    9. '.MOD' → logprob: -18.37555503845215
    10. '   ' → logprob: -19.12555503845215

Token 735: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002627662615850568
    2. ')
' → logprob: -8.250263214111328
    3. '   ' → logprob: -14.375263214111328
    4. ')
' → logprob: -14.375263214111328
    5. ')return' → logprob: -15.500263214111328
    6. ' )' → logprob: -16.250263214111328
    7. '))' → logprob: -18.000263214111328
    8. ')

' → logprob: -18.375263214111328
    9. '),' → logprob: -18.500263214111328
    10. ').' → logprob: -18.750263214111328

Token 736: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005112105864100158
    2. 'return' → logprob: -7.750511169433594
    3. ' return' → logprob: -10.375511169433594
    4. '	return' → logprob: -10.875511169433594
    5. ':return' → logprob: -11.750511169433594
    6. '<|end|>' → logprob: -11.750511169433594
    7. '
' → logprob: -12.250511169433594
    8. '{return' → logprob: -13.000511169433594
    9. '[' → logprob: -13.375511169433594
    10. '```' → logprob: -13.500511169433594

Token 737: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.011382253840565681
    2. '   ' → logprob: -4.511382102966309
    3. ' return' → logprob: -8.136382102966309
    4. '	return' → logprob: -10.386382102966309
    5. '```' → logprob: -11.886382102966309
    6. ':return' → logprob: -13.136382102966309
    7. '
' → logprob: -14.136382102966309
    8. '{return' → logprob: -14.261382102966309
    9. 'eturn' → logprob: -16.011383056640625
    10. ' ' → logprob: -16.136383056640625

Token 738: ' F' (ID: 454)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.004620949272066355
    2. ' Q' → logprob: -5.3796210289001465
    3. '(Q' → logprob: -14.754620552062988
    4. 'np' → logprob: -15.379620552062988
    5. '	Q' → logprob: -15.629620552062988
    6. ' ' → logprob: -17.254621505737305
    7. ' ' → logprob: -18.129621505737305
    8. '_Q' → logprob: -18.754621505737305
    9. '<Q' → logprob: -18.754621505737305
    10. '```' → logprob: -18.754621505737305

Token 739: '1' (ID: 16)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.0450705960392952
    2. '1' → logprob: -3.1700706481933594
    3. '(Q' → logprob: -6.795070648193359
    4. '```' → logprob: -8.17007064819336
    5. 'np' → logprob: -9.42007064819336
    6. 'or' → logprob: -9.42007064819336
    7. '`' → logprob: -9.79507064819336
    8. '[' → logprob: -9.92007064819336
    9. '(np' → logprob: -10.04507064819336
    10. 'return' → logprob: -10.17007064819336

Token 740: '_final' (ID: 46468)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.025775784626603127
    2. 'return' → logprob: -4.775775909423828
    3. '_prepare' → logprob: -5.025775909423828
    4. '(' → logprob: -5.525775909423828
    5. 'Q' → logprob: -6.025775909423828
    6. '(Q' → logprob: -6.275775909423828
    7. '_return' → logprob: -7.275775909423828
    8. '```' → logprob: -8.400775909423828
    9. '_' → logprob: -8.525775909423828
    10. '(P' → logprob: -9.150775909423828

Token 741: '_sum' (ID: 29859)
  Prédit: '(Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(Q' → logprob: -0.04353756457567215
    2. '(' → logprob: -3.9185376167297363
    3. '(N' → logprob: -4.168537616729736
    4. 'Q' → logprob: -5.418537616729736
    5. '(P' → logprob: -6.418537616729736
    6. '(X' → logprob: -7.168537616729736
    7. '[' → logprob: -8.543537139892578
    8. '```' → logprob: -10.543537139892578
    9. '_Q' → logprob: -10.668537139892578
    10. '(n' → logprob: -10.668537139892578

Token 742: '(Q' (ID: 14437)
  Prédit: '(Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Q' → logprob: -0.010713987983763218
    2. '(' → logprob: -4.635714054107666
    3. 'Q' → logprob: -7.885714054107666
    4. '(X' → logprob: -8.260713577270508
    5. '(P' → logprob: -9.260713577270508
    6. '[' → logprob: -9.385713577270508
    7. '(N' → logprob: -9.510713577270508
    8. '(np' → logprob: -10.760713577270508
    9. '(
' → logprob: -11.385713577270508
    10. '((' → logprob: -12.135713577270508

Token 743: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07049006223678589
    2. ',' → logprob: -2.6954901218414307
    3. '   ' → logprob: -8.070489883422852
    4. '[' → logprob: -9.445489883422852
    5. '[:' → logprob: -9.695489883422852
    6. ',)' → logprob: -10.945489883422852
    7. '```' → logprob: -11.070489883422852
    8. ')
' → logprob: -11.445489883422852
    9. '[:,' → logprob: -11.570489883422852
    10. '[...,' → logprob: -11.695489883422852

Token 744: ' MOD' (ID: 32868)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.00240846979431808
    2. ' X' → logprob: -6.627408504486084
    3. 'N' → logprob: -6.877408504486084
    4. '0' → logprob: -11.002408027648926
    5. 'MOD' → logprob: -11.627408027648926
    6. 'np' → logprob: -12.002408027648926
    7. ')' → logprob: -12.127408027648926
    8. 'len' → logprob: -12.502408027648926
    9. ' ' → logprob: -13.002408027648926
    10. ' N' → logprob: -13.002408027648926

Token 745: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.630610641877865e-06
    2. ',' → logprob: -12.125006675720215
    3. '   ' → logprob: -14.500006675720215
    4. ')
' → logprob: -15.875006675720215
    5. ' )' → logprob: -15.875006675720215
    6. '))' → logprob: -16.0000057220459
    7. ',)' → logprob: -16.1250057220459
    8. '),' → logprob: -16.7500057220459
    9. '())' → logprob: -17.3750057220459
    10. '()' → logprob: -17.8750057220459

Token 746: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.000293751887511462
    2. '```' → logprob: -8.250293731689453
    3. '+' → logprob: -11.125293731689453
    4. '``' → logprob: -12.250293731689453
    5. '
' → logprob: -12.375293731689453
    6. ':def' → logprob: -12.500293731689453
    7. ' def' → logprob: -13.125293731689453
    8. '\' → logprob: -14.000293731689453
    9. '[' → logprob: -14.250293731689453
    10. '-def' → logprob: -14.875293731689453

Token 747: ' F' (ID: 454)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.012236841022968292
    2. ' F' → logprob: -4.887237071990967
    3. '1' → logprob: -5.887237071990967
    4. 'def' → logprob: -6.512237071990967
    5. '_F' → logprob: -9.387236595153809
    6. '2' → logprob: -9.512236595153809
    7. '_' → logprob: -9.637236595153809
    8. ' def' → logprob: -9.762236595153809
    9. '#' → logprob: -11.262236595153809
    10. '```' → logprob: -11.637236595153809

Token 748: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0052464487962424755
    2. '2' → logprob: -5.255246639251709
    3. 'inal' → logprob: -12.75524616241455
    4. '3' → logprob: -13.00524616241455
    5. 'irst' → logprob: -13.00524616241455
    6. '0' → logprob: -14.00524616241455
    7. '(' → logprob: -14.13024616241455
    8. 'I' → logprob: -14.63024616241455
    9. 'i' → logprob: -15.00524616241455
    10. 'inish' → logprob: -15.00524616241455

Token 749: '_final' (ID: 46468)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9230316877365112
    2. '_final' → logprob: -1.2980316877365112
    3. '_prepare' → logprob: -1.9230316877365112
    4. '_finalize' → logprob: -1.9230316877365112
    5. '(' → logprob: -4.048031806945801
    6. '(N' → logprob: -4.673031806945801
    7. '_(' → logprob: -5.048031806945801
    8. '_raw' → logprob: -7.548031806945801
    9. '_sum' → logprob: -7.673031806945801
    10. '(_' → logprob: -8.4230318069458

Token 750: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -1.1472419600977446e-06
    2. 'sum' → logprob: -14.625000953674316
    3. '_' → logprob: -16.125001907348633
    4. '```' → logprob: -16.250001907348633
    5. '_split' → logprob: -16.500001907348633
    6. '_s' → logprob: -16.625001907348633
    7. '_return' → logprob: -17.125001907348633
    8. '_SUM' → logprob: -17.125001907348633
    9. '_finalize' → logprob: -17.500001907348633
    10. '_add' → logprob: -18.125001907348633

Token 751: '(Q' (ID: 14437)
  Prédit: '(Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Q' → logprob: -0.005364198237657547
    2. '(R' → logprob: -5.255364418029785
    3. '(P' → logprob: -9.380364418029785
    4. '(' → logprob: -10.255364418029785
    5. '(q' → logprob: -12.630364418029785
    6. '(arr' → logprob: -13.630364418029785
    7. '(poly' → logprob: -13.755364418029785
    8. '(A' → logprob: -14.255364418029785
    9. '((' → logprob: -14.380364418029785
    10. '(pol' → logprob: -14.505364418029785

Token 752: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004192606080323458
    2. '):' → logprob: -5.62919282913208
    3. '):
' → logprob: -7.62919282913208
    4. ',Q' → logprob: -9.629192352294922
    5. ')' → logprob: -10.629192352294922
    6. ',
' → logprob: -12.129192352294922
    7. ' ,' → logprob: -12.754192352294922
    8. '   ' → logprob: -12.754192352294922
    9. '):
' → logprob: -13.504192352294922
    10. ',)' → logprob: -14.379192352294922

Token 753: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.011055245995521545
    2. ' MOD' → logprob: -4.5110554695129395
    3. ')' → logprob: -12.511054992675781
    4. '_MOD' → logprob: -13.886054992675781
    5. '0' → logprob: -14.511054992675781
    6. 'mod' → logprob: -14.636054992675781
    7. '
' → logprob: -14.886054992675781
    8. ' ' → logprob: -14.886054992675781
    9. '   ' → logprob: -15.011054992675781
    10. 'None' → logprob: -15.261054992675781

Token 754: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3883485198020935
    2. '):
' → logprob: -1.1383485794067383
    3. ',' → logprob: -6.638348579406738
    4. '):
' → logprob: -8.888348579406738
    5. ')' → logprob: -11.138348579406738
    6. '   ' → logprob: -11.388348579406738
    7. '):

' → logprob: -13.638348579406738
    8. ':' → logprob: -14.513348579406738
    9. ' ' → logprob: -14.638348579406738
    10. ' ):' → logprob: -14.763348579406738

Token 755: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.14967262744903564
    2. 'res' → logprob: -2.524672508239746
    3. '   ' → logprob: -3.899672508239746
    4. 'result' → logprob: -4.274672508239746
    5. '```' → logprob: -4.274672508239746
    6. 'total' → logprob: -5.524672508239746
    7. 's' → logprob: -5.649672508239746
    8. 'sum' → logprob: -7.149672508239746
    9. 'def' → logprob: -7.274672508239746
    10. 'ans' → logprob: -7.399672508239746

Token 756: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.010804329998791218
    2. 'res' → logprob: -4.885804176330566
    3. 'result' → logprob: -6.635804176330566
    4. 's' → logprob: -7.135804176330566
    5. 'ans' → logprob: -7.635804176330566
    6. 'total' → logprob: -8.135804176330566
    7. '   ' → logprob: -9.010804176330566
    8. 'def' → logprob: -9.260804176330566
    9. 'ret' → logprob: -10.010804176330566
    10. 'r' → logprob: -11.510804176330566

Token 757: ' Q' (ID: 1486)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.7133398056030273
    2. 'Q' → logprob: -0.8383398056030273
    3. 'int' → logprob: -2.5883398056030273
    4. '(Q' → logprob: -6.963339805603027
    5. '(np' → logprob: -7.338339805603027
    6. 'sum' → logprob: -7.588339805603027
    7. ' Q' → logprob: -9.213339805603027
    8. ' np' → logprob: -9.213339805603027
    9. '(int' → logprob: -9.713339805603027
    10. ' int' → logprob: -10.463339805603027

Token 758: '.sum' (ID: 35381)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 759: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.20143809914588928
    2. '()%' → logprob: -1.701438069343567
    3. '(' → logprob: -11.951437950134277
    4. '%' → logprob: -12.326437950134277
    5. '()<' → logprob: -12.451437950134277
    6. '()(' → logprob: -13.326437950134277
    7. '()>' → logprob: -13.326437950134277
    8. '()
' → logprob: -13.576437950134277
    9. '().' → logprob: -13.826437950134277
    10. '()`' → logprob: -14.201437950134277

Token 760: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.02774929627776146
    2. ' %' → logprob: -3.6527493000030518
    3. '()%' → logprob: -7.027749061584473
    4. '<|end|>' → logprob: -7.777749061584473
    5. '()' → logprob: -9.402749061584473
    6. ')' → logprob: -11.027749061584473
    7. ')%' → logprob: -11.902749061584473
    8. '%A' → logprob: -12.027749061584473
    9. ' ' → logprob: -12.152749061584473
    10. '   ' → logprob: -12.402749061584473

Token 761: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.00033546582562848926
    2. ' MOD' → logprob: -8.000335693359375
    3. '_MOD' → logprob: -17.500335693359375
    4. '.MOD' → logprob: -19.750335693359375
    5. 'MO' → logprob: -21.625335693359375
    6. 'MD' → logprob: -23.250335693359375
    7. 'M' → logprob: -23.500335693359375
    8. 'mod' → logprob: -23.625335693359375
    9. 'MODE' → logprob: -24.000335693359375
    10. 'Mod' → logprob: -24.375335693359375

Token 762: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 763: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06397219002246857
    2. '<|end|>' → logprob: -2.938972234725952
    3. '#' → logprob: -5.188971996307373
    4. '```' → logprob: -5.813971996307373
    5. '<|end|>' → logprob: -8.188972473144531
    6. '\' → logprob: -10.313972473144531
    7. '
' → logprob: -10.438972473144531
    8. 'import' → logprob: -10.688972473144531
    9. ')' → logprob: -10.938972473144531
    10. '...' → logprob: -11.063972473144531

Token 764: ' F' (ID: 454)
  Prédit: ' F'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' F' → logprob: -0.07503397762775421
    2. 'F' → logprob: -2.7000339031219482
    3. ' main' → logprob: -5.700034141540527
    4. ' solve' → logprob: -7.825034141540527
    5. 'main' → logprob: -8.200034141540527
    6. ' factorial' → logprob: -8.450034141540527
    7. 'solve' → logprob: -9.262534141540527
    8. ' parse' → logprob: -9.387534141540527
    9. ' G' → logprob: -9.450034141540527
    10. ' read' → logprob: -9.762534141540527

Token 765: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.14435093104839325
    2. '2' → logprob: -2.019351005554199
    3. 'inal' → logprob: -6.644351005554199
    4. '3' → logprob: -8.7693510055542
    5. 'inish' → logprob: -9.5193510055542
    6. 'INAL' → logprob: -10.3943510055542
    7. 'IN' → logprob: -11.3943510055542
    8. 'I' → logprob: -11.6443510055542
    9. '4' → logprob: -11.7693510055542
    10. '(N' → logprob: -12.1443510055542

Token 766: '_loop' (ID: 40621)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0249942541122437
    2. '_' → logprob: -1.0249942541122437
    3. '(N' → logprob: -1.5249942541122437
    4. '(_' → logprob: -3.649994373321533
    5. '_prepare' → logprob: -3.774994373321533
    6. '_(' → logprob: -5.149994373321533
    7. '():' → logprob: -6.899994373321533
    8. '_split' → logprob: -7.399994373321533
    9. '_poly' → logprob: -7.524994373321533
    10. '(Q' → logprob: -7.649994373321533

Token 767: '_range' (ID: 22022)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.26992741227149963
    2. '(' → logprob: -2.519927501678467
    3. '(P' → logprob: -2.644927501678467
    4. '():' → logprob: -3.269927501678467
    5. '(Q' → logprob: -3.394927501678467
    6. 'def' → logprob: -5.769927501678467
    7. '(n' → logprob: -6.144927501678467
    8. '(F' → logprob: -6.394927501678467
    9. '(:' → logprob: -6.519927501678467
    10. '(L' → logprob: -7.269927501678467

Token 768: '(X' (ID: 17061)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -1.0045342445373535
    2. '():' → logprob: -1.1295342445373535
    3. '(' → logprob: -1.2545342445373535
    4. '(L' → logprob: -4.7545342445373535
    5. '(X' → logprob: -5.5045342445373535
    6. '()' → logprob: -5.8795342445373535
    7. '(n' → logprob: -6.2545342445373535
    8. '(U' → logprob: -6.2545342445373535
    9. '(size' → logprob: -6.3795342445373535
    10. '(:' → logprob: -7.0045342445373535

Token 769: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02082272246479988
    2. ',' → logprob: -4.270822525024414
    3. '):
' → logprob: -5.020822525024414
    4. ')' → logprob: -11.020822525024414
    5. ':' → logprob: -11.270822525024414
    6. ' ):' → logprob: -13.270822525024414
    7. '   ' → logprob: -13.395822525024414
    8. '=' → logprob: -13.645822525024414
    9. ',
' → logprob: -13.770822525024414
    10. '):
' → logprob: -13.895822525024414

Token 770: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04714782536029816
    2. 'return' → logprob: -3.172147750854492
    3. ' return' → logprob: -5.547147750854492
    4. 'def' → logprob: -9.172147750854492
    5. '```' → logprob: -9.547147750854492
    6. 'range' → logprob: -10.797147750854492
    7. 'for' → logprob: -11.047147750854492
    8. ' for' → logprob: -11.922147750854492
    9. '
' → logprob: -12.047147750854492
    10. ' range' → logprob: -12.172147750854492

Token 771: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0004971518646925688
    2. 'range' → logprob: -8.125496864318848
    3. 'def' → logprob: -9.625496864318848
    4. '   ' → logprob: -9.875496864318848
    5. ' return' → logprob: -9.875496864318848
    6. 'for' → logprob: -10.500496864318848
    7. 'max' → logprob: -13.250496864318848
    8. 'import' → logprob: -14.750496864318848
    9. '```' → logprob: -14.750496864318848
    10. 'min' → logprob: -14.875496864318848

Token 772: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5511299967765808
    2. 'X' → logprob: -0.9261299967765808
    3. '(X' → logprob: -4.6761298179626465
    4. 'np' → logprob: -5.8011298179626465
    5. ' range' → logprob: -5.8011298179626465
    6. 'max' → logprob: -6.0511298179626465
    7. '(range' → logprob: -6.0511298179626465
    8. 'as' → logprob: -6.1761298179626465
    9. '(' → logprob: -6.3011298179626465
    10. ' X' → logprob: -6.5511298179626465

Token 773: '(X' (ID: 17061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4742533266544342
    2. '(X' → logprob: -0.9742532968521118
    3. '((' → logprob: -9.09925365447998
    4. '(-' → logprob: -10.59925365447998
    5. '1' → logprob: -11.22425365447998
    6. '(x' → logprob: -12.34925365447998
    7. '(Q' → logprob: -12.34925365447998
    8. '(len' → logprob: -12.47425365447998
    9. 'X' → logprob: -12.72425365447998
    10. '(int' → logprob: -13.09925365447998

Token 774: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000681457226164639
    2. '-' → logprob: -8.25068187713623
    3. '//' → logprob: -8.37568187713623
    4. '+' → logprob: -9.37568187713623
    5. '))' → logprob: -10.00068187713623
    6. ' -' → logprob: -11.12568187713623
    7. ' )' → logprob: -11.75068187713623
    8. ',' → logprob: -11.87568187713623
    9. ' //' → logprob: -12.00068187713623
    10. '())' → logprob: -12.12568187713623

Token 775: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.4498052223643754e-05
    2. '<|end|>' → logprob: -11.875014305114746
    3. '```' → logprob: -12.000014305114746
    4. '\' → logprob: -14.500014305114746
    5. ' def' → logprob: -15.500014305114746
    6. '<|end|>' → logprob: -15.500014305114746
    7. '
' → logprob: -16.000015258789062
    8. '#' → logprob: -16.500015258789062
    9. ':def' → logprob: -16.625015258789062
    10. '``' → logprob: -16.750015258789062

Token 776: ' F' (ID: 454)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.022393006831407547
    2. 'solve' → logprob: -4.522393226623535
    3. 'main' → logprob: -5.272393226623535
    4. 'def' → logprob: -6.647393226623535
    5. 'factor' → logprob: -7.522393226623535
    6. ' F' → logprob: -7.522393226623535
    7. 'pol' → logprob: -7.772393226623535
    8. 'read' → logprob: -8.272393226623535
    9. 'f' → logprob: -8.397393226623535
    10. 'count' → logprob: -8.522393226623535

Token 777: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.018184473738074303
    2. '1' → logprob: -4.018184661865234
    3. '3' → logprob: -10.393184661865234
    4. '4' → logprob: -13.768184661865234
    5. '(' → logprob: -14.393184661865234
    6. 'unction' → logprob: -14.393184661865234
    7. '_' → logprob: -14.768184661865234
    8. '5' → logprob: -15.143184661865234
    9. 'inal' → logprob: -15.268184661865234
    10. '0' → logprob: -15.643184661865234

Token 778: '_calc' (ID: 107191)
  Prédit: '_loop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_loop' → logprob: -0.0020357032772153616
    2. '(X' → logprob: -6.627035617828369
    3. '(N' → logprob: -8.002036094665527
    4. '(' → logprob: -8.627036094665527
    5. '(F' → logprob: -9.877036094665527
    6. '_range' → logprob: -10.002036094665527
    7. '(_' → logprob: -10.377036094665527
    8. '(loop' → logprob: -10.502036094665527
    9. '(L' → logprob: -11.002036094665527
    10. '_LOOP' → logprob: -11.752036094665527

Token 779: '_m' (ID: 1285)
  Prédit: '(X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(X' → logprob: -0.3287585377693176
    2. '(i' → logprob: -2.203758478164673
    3. '(n' → logprob: -3.328758478164673
    4. '(' → logprob: -3.328758478164673
    5. '(N' → logprob: -3.453758478164673
    6. '(A' → logprob: -4.203758716583252
    7. '(P' → logprob: -4.453758716583252
    8. '(a' → logprob: -4.703758716583252
    9. '(x' → logprob: -4.953758716583252
    10. '(k' → logprob: -5.328758716583252

Token 780: '(X' (ID: 17061)
  Prédit: 'ax'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ax' → logprob: -0.6141998767852783
    2. 'ult' → logprob: -1.4891998767852783
    3. 'od' → logprob: -2.3641998767852783
    4. 'range' → logprob: -3.1141998767852783
    5. 'ul' → logprob: -3.2391998767852783
    6. 'ultip' → logprob: -4.114199638366699
    7. '(X' → logprob: -4.614199638366699
    8. 'ultiply' → logprob: -4.739199638366699
    9. 'ask' → logprob: -5.114199638366699
    10. '(x' → logprob: -6.114199638366699

Token 781: ',' (ID: 11)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.4779317080974579
    2. '):' → logprob: -0.9779317378997803
    3. ',' → logprob: -6.227931499481201
    4. ')' → logprob: -6.602931499481201
    5. '-' → logprob: -8.35293197631836
    6. '+' → logprob: -8.47793197631836
    7. '):
' → logprob: -10.97793197631836
    8. '):

' → logprob: -11.10293197631836
    9. '   ' → logprob: -11.60293197631836
    10. ',n' → logprob: -12.72793197631836

Token 782: ' n' (ID: 297)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.12214276194572449
    2. ' X' → logprob: -3.497142791748047
    3. ')' → logprob: -3.997142791748047
    4. 'x' → logprob: -4.372142791748047
    5. 'n' → logprob: -4.497142791748047
    6. '1' → logprob: -5.247142791748047
    7. '0' → logprob: -5.622142791748047
    8. 'lambda' → logprob: -5.622142791748047
    9. '):' → logprob: -5.747142791748047
    10. 'range' → logprob: -5.872142791748047

Token 783: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.01782304421067238
    2. '):' → logprob: -4.517823219299316
    3. ',' → logprob: -5.017823219299316
    4. ')' → logprob: -10.267823219299316
    5. '):

' → logprob: -10.517823219299316
    6. '   ' → logprob: -10.642823219299316
    7. '):
' → logprob: -10.767823219299316
    8. 'def' → logprob: -12.142823219299316
    9. ' ):
' → logprob: -12.392823219299316
    10. '()):
' → logprob: -12.517823219299316

Token 784: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36399126052856445
    2. ' return' → logprob: -1.7389912605285645
    3. 'return' → logprob: -2.1139912605285645
    4. 'n' → logprob: -5.2389912605285645
    5. '(n' → logprob: -6.8639912605285645
    6. ' n' → logprob: -6.9889912605285645
    7. ' (' → logprob: -7.3639912605285645
    8. 'X' → logprob: -7.7389912605285645
    9. '(X' → logprob: -9.613990783691406
    10. ' X' → logprob: -9.738990783691406

Token 785: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.21284908056259155
    2. 'n' → logprob: -2.3378491401672363
    3. '(n' → logprob: -3.2128491401672363
    4. 'X' → logprob: -3.7128491401672363
    5. '(X' → logprob: -3.8378491401672363
    6. 'min' → logprob: -5.712849140167236
    7. 'max' → logprob: -6.712849140167236
    8. '(' → logprob: -6.837849140167236
    9. '((' → logprob: -6.962849140167236
    10. '(min' → logprob: -7.462849140167236

Token 786: ' (' (ID: 350)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.6725597977638245
    2. 'n' → logprob: -1.6725597381591797
    3. '(X' → logprob: -1.6725597381591797
    4. '(n' → logprob: -2.4225597381591797
    5. 'min' → logprob: -4.67255973815918
    6. '(' → logprob: -5.17255973815918
    7. 'max' → logprob: -6.04755973815918
    8. '(min' → logprob: -6.04755973815918
    9. '((' → logprob: -6.17255973815918
    10. '2' → logprob: -7.04755973815918

Token 787: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.07553715258836746
    2. 'n' → logprob: -3.0755372047424316
    3. '(X' → logprob: -3.8255372047424316
    4. '(n' → logprob: -5.950537204742432
    5. '2' → logprob: -6.825537204742432
    6. '(' → logprob: -7.450537204742432
    7. '1' → logprob: -9.450536727905273
    8. '((' → logprob: -9.450536727905273
    9. '3' → logprob: -9.825536727905273
    10. ' X' → logprob: -10.075536727905273

Token 788: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3490167558193207
    2. '-' → logprob: -1.224016785621643
    3. ' ' → logprob: -8.599017143249512
    4. '+' → logprob: -9.099017143249512
    5. '-n' → logprob: -9.099017143249512
    6. ')' → logprob: -9.724017143249512
    7. ' +' → logprob: -10.224017143249512
    8. '>' → logprob: -11.474017143249512
    9. '>>' → logprob: -11.474017143249512
    10. ',' → logprob: -11.849017143249512

Token 789: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1285640150308609
    2. 'n' → logprob: -2.1285641193389893
    3. ' n' → logprob: -7.12856388092041
    4. '2' → logprob: -7.87856388092041
    5. ' ' → logprob: -8.25356388092041
    6. '(n' → logprob: -9.50356388092041
    7. '(' → logprob: -10.25356388092041
    8. 'F' → logprob: -10.37856388092041
    9. '3' → logprob: -11.12856388092041
    10. ' (' → logprob: -12.37856388092041

Token 790: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3878821134567261
    2. 'n' → logprob: -1.137882113456726
    3. '2' → logprob: -7.262882232666016
    4. '(n' → logprob: -8.887882232666016
    5. ' n' → logprob: -10.012882232666016
    6. '(' → logprob: -10.387882232666016
    7. '3' → logprob: -10.512882232666016
    8. 'F' → logprob: -10.637882232666016
    9. ' ' → logprob: -11.950382232666016
    10. '   ' → logprob: -12.512882232666016

Token 791: ')' (ID: 8)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.6810325384140015
    2. '-' → logprob: -1.1810325384140015
    3. ')' → logprob: -1.6810325384140015
    4. ',' → logprob: -8.681032180786133
    5. '   ' → logprob: -8.681032180786133
    6. '+' → logprob: -9.181032180786133
    7. ')-' → logprob: -9.306032180786133
    8. ' ' → logprob: -10.181032180786133
    9. '-n' → logprob: -10.181032180786133
    10. ' )' → logprob: -10.306032180786133

Token 792: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0555252879858017
    2. '-' → logprob: -2.930525302886963
    3. '+' → logprob: -8.305524826049805
    4. '-n' → logprob: -8.805524826049805
    5. '<|end|>' → logprob: -9.180524826049805
    6. ' +' → logprob: -9.305524826049805
    7. ')' → logprob: -10.805524826049805
    8. ' ' → logprob: -11.805524826049805
    9. '[' → logprob: -12.805524826049805
    10. '*' → logprob: -12.930524826049805

Token 793: ' (' (ID: 350)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.007908257655799389
    2. ' n' → logprob: -4.882908344268799
    3. '(n' → logprob: -8.88290786743164
    4. '2' → logprob: -9.38290786743164
    5. '(' → logprob: -10.38290786743164
    6. ' (' → logprob: -10.88290786743164
    7. 'X' → logprob: -11.63290786743164
    8. '(X' → logprob: -11.63290786743164
    9. '((' → logprob: -12.63290786743164
    10. ' ' → logprob: -12.88290786743164

Token 794: '2' (ID: 17)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0016967225819826126
    2. ' n' → logprob: -6.501696586608887
    3. '2' → logprob: -9.126696586608887
    4. '(n' → logprob: -10.001696586608887
    5. 'X' → logprob: -10.751696586608887
    6. '(' → logprob: -12.251696586608887
    7. ' (' → logprob: -12.626696586608887
    8. ')n' → logprob: -13.126696586608887
    9. ' ' → logprob: -13.501696586608887
    10. '   ' → logprob: -13.501696586608887

Token 795: ' +' (ID: 659)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.43770870566368103
    2. ' *' → logprob: -1.5627087354660034
    3. '*n' → logprob: -1.9377087354660034
    4. 'n' → logprob: -7.812708854675293
    5. ')' → logprob: -8.062708854675293
    6. ' n' → logprob: -9.812708854675293
    7. '**' → logprob: -10.437708854675293
    8. '*m' → logprob: -10.937708854675293
    9. '   ' → logprob: -11.437708854675293
    10. ' ' → logprob: -11.437708854675293

Token 796: ' ' (ID: 220)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.004936174023896456
    2. ' n' → logprob: -5.379936218261719
    3. '(n' → logprob: -8.629936218261719
    4. '2' → logprob: -9.379936218261719
    5. '(' → logprob: -11.129936218261719
    6. ' (' → logprob: -11.504936218261719
    7. '3' → logprob: -12.129936218261719
    8. ')n' → logprob: -12.379936218261719
    9. 'X' → logprob: -12.629936218261719
    10. '
' → logprob: -12.754936218261719

Token 797: '2' (ID: 17)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0001370320824207738
    2. '(n' → logprob: -9.500137329101562
    3. '2' → logprob: -10.125137329101562
    4. ' n' → logprob: -11.500137329101562
    5. '(' → logprob: -12.500137329101562
    6. '1' → logprob: -12.875137329101562
    7. '3' → logprob: -13.250137329101562
    8. ')n' → logprob: -13.750137329101562
    9. 'X' → logprob: -14.375137329101562
    10. '*n' → logprob: -15.250137329101562

Token 798: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.7500383257865906
    2. '*n' → logprob: -0.7500383257865906
    3. ' *' → logprob: -3.0000383853912354
    4. 'n' → logprob: -5.250038146972656
    5. ' n' → logprob: -9.500038146972656
    6. '*(' → logprob: -9.750038146972656
    7. '*m' → logprob: -10.125038146972656
    8. ')' → logprob: -10.375038146972656
    9. ' ' → logprob: -11.625038146972656
    10. '*)' → logprob: -11.875038146972656

Token 799: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00023298001906368881
    2. ' n' → logprob: -8.625232696533203
    3. '(n' → logprob: -9.875232696533203
    4. '(' → logprob: -13.750232696533203
    5. ')n' → logprob: -15.000232696533203
    6. '_n' → logprob: -16.125232696533203
    7. '*n' → logprob: -16.250232696533203
    8. ' (' → logprob: -16.375232696533203
    9. '	n' → logprob: -16.375232696533203
    10. '```' → logprob: -16.500232696533203

Token 800: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010491237044334412
    2. ' )' → logprob: -7.001049041748047
    3. '   ' → logprob: -10.501049041748047
    4. '+' → logprob: -10.626049041748047
    5. ')*' → logprob: -11.001049041748047
    6. '))' → logprob: -11.126049041748047
    7. '*' → logprob: -11.501049041748047
    8. ')))' → logprob: -11.501049041748047
    9. '')' → logprob: -12.501049041748047
    10. '*)' → logprob: -12.751049041748047

Token 801: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.268842875957489
    2. '<|end|>' → logprob: -2.018842935562134
    3. '*' → logprob: -3.268842935562134
    4. '+' → logprob: -3.643842935562134
    5. ')' → logprob: -3.893842935562134
    6. '```' → logprob: -5.268842697143555
    7. '(' → logprob: -5.393842697143555
    8. '(
' → logprob: -6.893842697143555
    9. '(n' → logprob: -7.018842697143555
    10. 'return' → logprob: -7.143842697143555

Token 802: ' F' (ID: 454)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.0334937684237957
    2. ' F' → logprob: -3.908493757247925
    3. 'def' → logprob: -4.408493995666504
    4. ' def' → logprob: -7.408493995666504
    5. 'user' → logprob: -11.533493995666504
    6. ' user' → logprob: -11.783493995666504
    7. 'range' → logprob: -11.783493995666504
    8. '_F' → logprob: -12.033493995666504
    9. '_' → logprob: -12.283493995666504
    10. 'code' → logprob: -12.408493995666504

Token 803: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0008076059748418629
    2. '3' → logprob: -7.250807762145996
    3. '1' → logprob: -9.375807762145996
    4. '(' → logprob: -13.000807762145996
    5. 'inal' → logprob: -13.250807762145996
    6. '_' → logprob: -13.500807762145996
    7. 'def' → logprob: -13.875807762145996
    8. '4' → logprob: -14.000807762145996
    9. 'unction' → logprob: -14.250807762145996
    10. 'reeze' → logprob: -14.500807762145996

Token 804: '_construct' (ID: 187414)
  Prédit: '_calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_calc' → logprob: -0.011898690834641457
    2. '_loop' → logprob: -5.136898517608643
    3. 'def' → logprob: -6.011898517608643
    4. '_range' → logprob: -6.761898517608643
    5. '_cal' → logprob: -7.136898517608643
    6. '(' → logprob: -7.386898517608643
    7. 'calc' → logprob: -8.1368989944458
    8. '_def' → logprob: -9.1368989944458
    9. '(X' → logprob: -9.6368989944458
    10. '_final' → logprob: -9.6368989944458

Token 805: '_two' (ID: 54305)
  Prédit: '_poly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_poly' → logprob: -0.13690656423568726
    2. '_pol' → logprob: -3.136906623840332
    3. '(X' → logprob: -3.261906623840332
    4. '(P' → logprob: -3.511906623840332
    5. '(Q' → logprob: -5.261906623840332
    6. '(' → logprob: -6.261906623840332
    7. '(F' → logprob: -6.386906623840332
    8. 'poly' → logprob: -6.636906623840332
    9. '_array' → logprob: -6.886906623840332
    10. '(N' → logprob: -7.136906623840332

Token 806: '_and' (ID: 18645)
  Prédit: '_poly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_poly' → logprob: -0.1984950751066208
    2. '_pol' → logprob: -1.9484950304031372
    3. '_arrays' → logprob: -3.8234951496124268
    4. 'poly' → logprob: -5.198494911193848
    5. '()' → logprob: -5.823494911193848
    6. '_array' → logprob: -6.698494911193848
    7. '_' → logprob: -6.698494911193848
    8. '_lists' → logprob: -7.198494911193848
    9. '(' → logprob: -7.448494911193848
    10. 'Poly' → logprob: -8.073494911193848

Token 807: '_one' (ID: 26979)
  Prédit: '_one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_one' → logprob: -1.007055640220642
    2. '_poly' → logprob: -1.007055640220642
    3. '_' → logprob: -2.3820557594299316
    4. '_array' → logprob: -3.1320557594299316
    5. '_arr' → logprob: -3.8820557594299316
    6. '_arrays' → logprob: -4.132055759429932
    7. '_points' → logprob: -4.382055759429932
    8. '_pol' → logprob: -4.882055759429932
    9. '_pow' → logprob: -5.007055759429932
    10. 'poly' → logprob: -5.382055759429932

Token 808: '(m' (ID: 2145)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.481251060962677
    2. '(X' → logprob: -1.3562510013580322
    3. '(' → logprob: -2.4812510013580322
    4. '()' → logprob: -3.9812510013580322
    5. '():
' → logprob: -5.481251239776611
    6. '(n' → logprob: -5.481251239776611
    7. '(N' → logprob: -5.731251239776611
    8. 's' → logprob: -5.856251239776611
    9. '(F' → logprob: -6.481251239776611
    10. '(x' → logprob: -6.606251239776611

Token 809: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.27524489164352417
    2. ',' → logprob: -2.025244951248169
    3. '):
' → logprob: -3.025244951248169
    4. ')' → logprob: -3.150244951248169
    5. '(' → logprob: -4.27524471282959
    6. '(m' → logprob: -6.65024471282959
    7. '(X' → logprob: -8.02524471282959
    8. ')(' → logprob: -8.40024471282959
    9. 'm' → logprob: -8.40024471282959
    10. '):
' → logprob: -8.65024471282959

Token 810: '   ' (ID: 271)
  Prédit: '():
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.3247193992137909
    2. '   ' → logprob: -2.0747194290161133
    3. '():' → logprob: -2.0747194290161133
    4. 'def' → logprob: -4.199719429016113
    5. ':
' → logprob: -5.949719429016113
    6. ':' → logprob: -5.949719429016113
    7. '):
' → logprob: -6.699719429016113
    8. ' =' → logprob: -6.824719429016113
    9. '()' → logprob: -6.949719429016113
    10. '(m' → logprob: -6.949719429016113

Token 811: ' two' (ID: 1920)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.04057791084051132
    2. '   ' → logprob: -3.9155778884887695
    3. 'np' → logprob: -4.5405778884887695
    4. 'if' → logprob: -5.2905778884887695
    5. 'def' → logprob: -5.5405778884887695
    6. ' return' → logprob: -8.66557788848877
    7. '```' → logprob: -11.79057788848877
    8. 'two' (adapté à ' two') → logprob: -12.29057788848877
    9. 'import' → logprob: -12.41557788848877
    10. ' np' → logprob: -13.04057788848877

Token 812: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6338874101638794
    2. '=' → logprob: -0.7588874101638794
    3. ',' → logprob: -6.75888729095459
    4. 's' → logprob: -9.50888729095459
    5. 'def' → logprob: -11.25888729095459
    6. '[' → logprob: -11.38388729095459
    7. '*' → logprob: -12.25888729095459
    8. ')' → logprob: -12.38388729095459
    9. ' ' → logprob: -13.00888729095459
    10. '   ' → logprob: -13.13388729095459

Token 813: ' np' (ID: 5374)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.06879786401987076
    2. '2' → logprob: -3.0687978267669678
    3. '(' → logprob: -4.818798065185547
    4. '(np' → logprob: -4.943798065185547
    5. 'm' → logprob: -6.318798065185547
    6. '(m' → logprob: -6.693798065185547
    7. ' np' → logprob: -7.068798065185547
    8. '1' → logprob: -7.818798065185547
    9. 'max' → logprob: -8.693798065185547
    10. '[' → logprob: -9.693798065185547

Token 814: '.arange' (ID: 57220)
  Prédit: '.array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.array' → logprob: -0.002649855799973011
    2. 'array' → logprob: -6.377649784088135
    3. '.full' → logprob: -7.377649784088135
    4. '.zeros' → logprob: -8.377650260925293
    5. '.ones' → logprob: -9.502650260925293
    6. '.arange' → logprob: -11.377650260925293
    7. 'int' → logprob: -13.627650260925293
    8. '_array' → logprob: -13.752650260925293
    9. ' array' → logprob: -14.127650260925293
    10. 'full' → logprob: -14.252650260925293

Token 815: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.5764687657356262
    2. '(' → logprob: -0.8264687657356262
    3. '2' → logprob: -7.9514689445495605
    4. 'm' → logprob: -8.951468467712402
    5. '1' → logprob: -10.701468467712402
    6. '((' → logprob: -11.451468467712402
    7. '(two' → logprob: -11.701468467712402
    8. '(start' → logprob: -13.826468467712402
    9. '(max' → logprob: -13.951468467712402
    10. '0' → logprob: -13.951468467712402

Token 816: ' //' (ID: 602)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.33138343691825867
    2. ',' → logprob: -1.331383466720581
    3. '-' → logprob: -4.831383228302002
    4. ' -' → logprob: -6.081383228302002
    5. '2' → logprob: -6.206383228302002
    6. '(' → logprob: -6.581383228302002
    7. ' ,' → logprob: -7.206383228302002
    8. '+' → logprob: -7.206383228302002
    9. ')+' → logprob: -7.331383228302002
    10. '   ' → logprob: -7.831383228302002

Token 817: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0001182052365038544
    2. ' ' → logprob: -10.000118255615234
    3. '1' → logprob: -10.250118255615234
    4. '3' → logprob: -11.500118255615234
    5. '   ' → logprob: -12.000118255615234
    6. '(' → logprob: -12.250118255615234
    7. '4' → logprob: -12.375118255615234
    8. '```' → logprob: -12.750118255615234
    9. '  ' → logprob: -13.812618255615234
    10. ',' → logprob: -13.812618255615234

Token 818: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.7755875129951164e-05
    2. ' ' → logprob: -11.25004768371582
    3. '4' → logprob: -11.50004768371582
    4. '1' → logprob: -11.50004768371582
    5. '3' → logprob: -11.62504768371582
    6. '```' → logprob: -13.81254768371582
    7. '   ' → logprob: -14.12504768371582
    8. '6' → logprob: -14.81254768371582
    9. '  ' → logprob: -15.12504768371582
    10. '5' → logprob: -15.18754768371582

Token 819: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7314379215240479
    2. ',' → logprob: -0.9814379215240479
    3. ' +' → logprob: -2.981437921524048
    4. '+' → logprob: -3.106437921524048
    5. ')*' → logprob: -3.981437921524048
    6. '*' → logprob: -4.106437683105469
    7. ' ,' → logprob: -5.106437683105469
    8. ' *' → logprob: -6.356437683105469
    9. '2' → logprob: -6.731437683105469
    10. '0' → logprob: -7.231437683105469

Token 820: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008734668954275548
    2. '2' → logprob: -7.250873565673828
    3. ' ' → logprob: -8.750873565673828
    4. '0' → logprob: -12.750873565673828
    5. '3' → logprob: -14.625873565673828
    6. '(' → logprob: -14.813373565673828
    7. 'm' → logprob: -15.125873565673828
    8. ',' → logprob: -15.188373565673828
    9. ' m' → logprob: -15.813373565673828
    10. '+' → logprob: -15.813373565673828

Token 821: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.729906196298543e-06
    2. '2' → logprob: -12.125009536743164
    3. ' ' → logprob: -12.375009536743164
    4. '0' → logprob: -17.375009536743164
    5. '(' → logprob: -17.562509536743164
    6. '   ' → logprob: -18.375009536743164
    7. '3' → logprob: -18.500009536743164
    8. '+' → logprob: -18.625009536743164
    9. '  ' → logprob: -19.187509536743164
    10. '```' → logprob: -20.062509536743164

Token 822: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.028308242559432983
    2. ',' → logprob: -3.778308153152466
    3. ')*' → logprob: -5.653308391571045
    4. ' )' → logprob: -7.278308391571045
    5. ' ,' → logprob: -8.028307914733887
    6. '(' → logprob: -9.153307914733887
    7. ')[' → logprob: -9.778307914733887
    8. '```' → logprob: -9.903307914733887
    9. ')
' → logprob: -10.028307914733887
    10. '()' → logprob: -10.278307914733887

Token 823: ' dtype' (ID: 29770)
  Prédit: 'dtype'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dtype' → logprob: -0.0283063855022192
    2. ' dtype' → logprob: -4.028306484222412
    3. '2' → logprob: -4.778306484222412
    4. 'np' → logprob: -6.528306484222412
    5. ' np' → logprob: -9.278306007385254
    6. '1' → logprob: -9.403306007385254
    7. '3' → logprob: -11.153306007385254
    8. ')' → logprob: -11.278306007385254
    9. ' ' → logprob: -11.653306007385254
    10. 'step' → logprob: -12.528306007385254

Token 824: '=np' (ID: 40593)
  Prédit: '=np'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=np' → logprob: -1.0280383548888494e-06
    2. 'np' → logprob: -14.125000953674316
    3. '=int' → logprob: -15.875000953674316
    4. '(np' → logprob: -17.375001907348633
    5. ' =' → logprob: -18.000001907348633
    6. '[np' → logprob: -18.375001907348633
    7. '=' → logprob: -18.500001907348633
    8. ' np' → logprob: -18.875001907348633
    9. '=
' → logprob: -19.500001907348633
    10. '=n' → logprob: -19.750001907348633

Token 825: '.int' (ID: 21499)
  Prédit: '.int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.int' → logprob: -0.0004954866599291563
    2. 'int' → logprob: -7.625495433807373
    3. '.uint' → logprob: -12.125495910644531
    4. '=int' → logprob: -14.250495910644531
    5. 'np' → logprob: -14.625495910644531
    6. ' int' → logprob: -14.875495910644531
    7. '.float' → logprob: -15.375495910644531
    8. '.bool' → logprob: -16.75049591064453
    9. '[int' → logprob: -17.12549591064453
    10. ',int' → logprob: -17.37549591064453

Token 826: '64' (ID: 2220)
  Prédit: '64'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '64' → logprob: -3.173704271830502e-06
    2. '32' → logprob: -12.87500286102295
    3. '8' → logprob: -15.12500286102295
    4. 'p' → logprob: -16.000003814697266
    5. 'c' → logprob: -16.500003814697266
    6. 'int' → logprob: -17.000003814697266
    7. '16' → logprob: -19.750003814697266
    8. 'np' → logprob: -20.250003814697266
    9. '6' → logprob: -21.000003814697266
    10. ')' → logprob: -21.625003814697266

Token 827: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005043004639446735
    2. ')*' → logprob: -8.375504493713379
    3. ')
' → logprob: -8.750504493713379
    4. ')+' → logprob: -9.500504493713379
    5. ' )' → logprob: -10.625504493713379
    6. ')[' → logprob: -12.875504493713379
    7. '),' → logprob: -13.125504493713379
    8. ')-' → logprob: -13.250504493713379
    9. ')

' → logprob: -13.500504493713379
    10. ')**' → logprob: -13.625504493713379

Token 828: '   ' (ID: 271)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.6280561089515686
    2. 'two' → logprob: -1.7530560493469238
    3. ' one' → logprob: -2.003056049346924
    4. '<|end|>' → logprob: -2.628056049346924
    5. '```' → logprob: -4.128056049346924
    6. '[' → logprob: -4.128056049346924
    7. '   ' → logprob: -4.503056049346924
    8. '
' → logprob: -4.878056049346924
    9. ',' → logprob: -5.253056049346924
    10. '_one' → logprob: -5.753056049346924

Token 829: ' one' (ID: 1001)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' (adapté à ' one') → logprob: -0.00043853666284121573
    2. 'ones' → logprob: -8.250438690185547
    3. 'two' → logprob: -9.250438690185547
    4. ' one' → logprob: -9.875438690185547
    5. '   ' → logprob: -11.250438690185547
    6. 'def' → logprob: -13.125438690185547
    7. '_one' → logprob: -13.250438690185547
    8. 'return' → logprob: -13.250438690185547
    9. 'onec' → logprob: -13.250438690185547
    10. 'One' → logprob: -13.875438690185547

Token 830: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889419049024582
    2. ' =' → logprob: -2.5788941383361816
    3. '=np' → logprob: -13.20389461517334
    4. '[' → logprob: -14.45389461517334
    5. ',' → logprob: -14.70389461517334
    6. 'two' → logprob: -15.07889461517334
    7. '   ' → logprob: -15.32889461517334
    8. '=
' → logprob: -15.32889461517334
    9. ' ' → logprob: -15.95389461517334
    10. 's' → logprob: -16.203893661499023

Token 831: ' m' (ID: 284)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.05273040384054184
    2. ' np' → logprob: -3.0527303218841553
    3. 'two' → logprob: -5.677730560302734
    4. ' two' → logprob: -7.802730560302734
    5. '(np' → logprob: -9.177730560302734
    6. 'm' → logprob: -10.052730560302734
    7. ' ' → logprob: -10.177730560302734
    8. '2' → logprob: -10.552730560302734
    9. '1' → logprob: -11.177730560302734
    10. '0' → logprob: -11.365230560302734

Token 832: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.8082523345947266
    2. ' -' → logprob: -0.8082523345947266
    3. '//' → logprob: -3.0582523345947266
    4. '%' → logprob: -3.3082523345947266
    5. ' //' → logprob: -5.058252334594727
    6. 'two' → logprob: -5.433252334594727
    7. '2' → logprob: -6.058252334594727
    8. '+' → logprob: -6.308252334594727
    9. ')' → logprob: -6.683252334594727
    10. '-two' → logprob: -6.683252334594727

Token 833: ' ' (ID: 220)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.06269077956676483
    2. '2' → logprob: -2.9376907348632812
    3. ' two' → logprob: -5.187690734863281
    4. '1' → logprob: -7.062690734863281
    5. 'np' → logprob: -7.312690734863281
    6. ' ' → logprob: -7.937690734863281
    7. '(' → logprob: -8.937690734863281
    8. '(two' → logprob: -9.437690734863281
    9. '0' → logprob: -10.187690734863281
    10. 'one' → logprob: -11.312690734863281

Token 834: '2' (ID: 17)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.22836992144584656
    2. '2' → logprob: -1.603369951248169
    3. 'np' → logprob: -6.97836971282959
    4. '(' → logprob: -7.22836971282959
    5. '(two' → logprob: -7.35336971282959
    6. ' two' → logprob: -8.10336971282959
    7. '1' → logprob: -8.60336971282959
    8. ' ' → logprob: -9.22836971282959
    9. '(np' → logprob: -10.85336971282959
    10. '   ' → logprob: -11.47836971282959

Token 835: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.02338232286274433
    2. ' *' → logprob: -3.7733824253082275
    3. 'two' → logprob: -9.148382186889648
    4. ' two' → logprob: -11.273382186889648
    5. '(two' → logprob: -11.648382186889648
    6. '*np' → logprob: -12.148382186889648
    7. '*t' → logprob: -13.648382186889648
    8. '**' → logprob: -14.273382186889648
    9. '*(' → logprob: -14.398382186889648
    10. '.two' → logprob: -15.148382186889648

Token 836: ' two' (ID: 1920)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.0003365350130479783
    2. ' two' → logprob: -8.000336647033691
    3. '(two' → logprob: -14.375336647033691
    4. 'np' → logprob: -14.750336647033691
    5. '_two' → logprob: -16.000335693359375
    6. 'tw' → logprob: -17.750335693359375
    7. '_' → logprob: -19.250335693359375
    8. '.two' → logprob: -19.250335693359375
    9. 'Two' → logprob: -19.750335693359375
    10. '   ' → logprob: -19.750335693359375

Token 837: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 838: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00010950337309623137
    2. 'return' → logprob: -9.375109672546387
    3. ' return' → logprob: -11.125109672546387
    4. '<|end|>' → logprob: -12.375109672546387
    5. '	return' → logprob: -13.125109672546387
    6. '
' → logprob: -13.375109672546387
    7. ',' → logprob: -13.750109672546387
    8. '```' → logprob: -15.125109672546387
    9. 'def' → logprob: -15.500109672546387
    10. ':return' → logprob: -16.12510871887207

Token 839: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.15017831325531006
    2. '   ' → logprob: -2.4001784324645996
    3. ' return' → logprob: -3.0251784324645996
    4. '	return' → logprob: -10.025177955627441
    5. ' ' → logprob: -10.150177955627441
    6. 'one' → logprob: -10.275177955627441
    7. 'two' → logprob: -10.650177955627441
    8. '  ' → logprob: -11.775177955627441
    9. '
' → logprob: -11.900177955627441
    10. ' one' → logprob: -12.275177955627441

Token 840: ' two' (ID: 1920)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.1155335009098053
    2. 'one' → logprob: -2.6155335903167725
    3. ' two' → logprob: -3.9905335903167725
    4. '(two' → logprob: -4.240533351898193
    5. '(one' → logprob: -6.365533351898193
    6. ' one' → logprob: -6.990533351898193
    7. '(' → logprob: -8.240533828735352
    8. ' (' → logprob: -8.740533828735352
    9. '(t' → logprob: -11.240533828735352
    10. 'np' → logprob: -12.990533828735352

Token 841: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010664248111424968
    2. ',t' → logprob: -9.375106811523438
    3. '<|end|>' → logprob: -11.375106811523438
    4. ' ,' → logprob: -11.625106811523438
    5. ',
' → logprob: -14.750106811523438
    6. '[' → logprob: -14.750106811523438
    7. ',np' → logprob: -16.500106811523438
    8. '```' → logprob: -16.875106811523438
    9. 'two' → logprob: -17.125106811523438
    10. ' and' → logprob: -17.250106811523438

Token 842: ' one' (ID: 1001)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.0067156096920371056
    2. ' one' → logprob: -5.006715774536133
    3. '(one' → logprob: -15.381715774536133
    4. '.one' → logprob: -18.881715774536133
    5. '_one' → logprob: -19.756715774536133
    6. '1' → logprob: -19.881715774536133
    7. 'One' → logprob: -20.006715774536133
    8. '   ' → logprob: -20.006715774536133
    9. ' ' → logprob: -20.506715774536133
    10. 'two' → logprob: -20.881715774536133

Token 843: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0021621601190418005
    2. '<|end|>' → logprob: -6.377161979675293
    3. '```' → logprob: -7.877161979675293
    4. 'two' → logprob: -10.002161979675293
    5. 'Two' → logprob: -12.002161979675293
    6. '#' → logprob: -12.127161979675293
    7. '<|end|>' → logprob: -12.377161979675293
    8. ')' → logprob: -13.002161979675293
    9. '_two' → logprob: -13.002161979675293
    10. ',' → logprob: -13.252161979675293

Token 844: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -7.636475493200123e-05
    2. '```' → logprob: -10.000076293945312
    3. '<|end|>' → logprob: -11.000076293945312
    4. '
' → logprob: -11.875076293945312
    5. 'import' → logprob: -12.375076293945312
    6. ' def' → logprob: -13.625076293945312
    7. '``' → logprob: -14.750076293945312
    8. '<|end|>' → logprob: -14.875076293945312
    9. '#' → logprob: -15.250076293945312
    10. '\' → logprob: -16.000076293945312

Token 845: ' F' (ID: 454)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.007224538829177618
    2. ' F' → logprob: -5.0072245597839355
    3. 'def' → logprob: -8.632224082946777
    4. 'solve' → logprob: -9.507224082946777
    5. 'read' → logprob: -9.882224082946777
    6. 'pol' → logprob: -10.132224082946777
    7. 'parse' → logprob: -11.257224082946777
    8. 'f' → logprob: -11.257224082946777
    9. 'main' → logprob: -11.757224082946777
    10. 'compute' → logprob: -11.757224082946777

Token 846: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.8325677703833207e-05
    2. '1' → logprob: -10.500028610229492
    3. '_' → logprob: -15.250028610229492
    4. 'unction' → logprob: -15.625028610229492
    5. '3' → logprob: -16.125028610229492
    6. 'def' → logprob: -16.875028610229492
    7. '```' → logprob: -17.125028610229492
    8. 'or' → logprob: -17.875028610229492
    9. '4' → logprob: -17.875028610229492
    10. '₂' → logprob: -18.000028610229492

Token 847: '_calc' (ID: 107191)
  Prédit: '_loop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_loop' → logprob: -0.1059906929731369
    2. '_calc' → logprob: -2.3559906482696533
    3. '_range' → logprob: -5.730990886688232
    4. '_construct' → logprob: -7.480990886688232
    5. '_cal' → logprob: -8.105990409851074
    6. '(' → logprob: -8.355990409851074
    7. '(_' → logprob: -9.105990409851074
    8. '_compute' → logprob: -9.230990409851074
    9. '_def' → logprob: -9.230990409851074
    10. '_for' → logprob: -9.480990409851074

Token 848: '_coef' (ID: 162984)
  Prédit: '_m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.024928955361247063
    2. '(X' → logprob: -4.024929046630859
    3. 'm' → logprob: -5.774929046630859
    4. '(' → logprob: -6.524929046630859
    5. '_n' → logprob: -6.649929046630859
    6. '(n' → logprob: -8.52492904663086
    7. '_(' → logprob: -8.77492904663086
    8. 'def' → logprob: -9.52492904663086
    9. '(N' → logprob: -9.64992904663086
    10. '_' → logprob: -9.89992904663086

Token 849: '(f' (ID: 1526)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.009558930061757565
    2. '(' → logprob: -5.259559154510498
    3. '(X' → logprob: -6.134559154510498
    4. '(M' → logprob: -6.884559154510498
    5. '(F' → logprob: -7.634559154510498
    6. '(two' → logprob: -8.00955867767334
    7. '(n' → logprob: -9.25955867767334
    8. '(x' → logprob: -10.13455867767334
    9. '(s' → logprob: -10.50955867767334
    10. '(one' → logprob: -10.63455867767334

Token 850: 'act' (ID: 588)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.9809055328369141
    2. '_two' → logprob: -1.355905532836914
    3. 'n' → logprob: -2.355905532836914
    4. 'two' → logprob: -2.605905532836914
    5. 'our' → logprob: -3.730905532836914
    6. 'irst' → logprob: -3.730905532836914
    7. 'X' → logprob: -3.730905532836914
    8. '1' → logprob: -3.855905532836914
    9. 'actor' → logprob: -3.980905532836914
    10. 'or' → logprob: -4.230905532836914

Token 851: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004125575942452997
    2. ',f' → logprob: -9.125412940979004
    3. '_,' → logprob: -9.250412940979004
    4. '_inv' → logprob: -10.375412940979004
    5. ',int' → logprob: -10.750412940979004
    6. '[' → logprob: -10.875412940979004
    7. ',n' → logprob: -11.000412940979004
    8. ' ,' → logprob: -11.125412940979004
    9. ',_' → logprob: -11.250412940979004
    10. ',F' → logprob: -11.375412940979004

Token 852: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.012444545514881611
    2. ' fact' → logprob: -4.887444496154785
    3. 'm' → logprob: -6.137444496154785
    4. 'two' → logprob: -6.512444496154785
    5. 'F' → logprob: -8.137444496154785
    6. 'factor' → logprob: -8.137444496154785
    7. ' m' → logprob: -9.137444496154785
    8. 'f' → logprob: -9.512444496154785
    9. ' two' → logprob: -9.762444496154785
    10. 'inv' → logprob: -9.887444496154785

Token 853: '_inv' (ID: 53427)
  Prédit: '_inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inv' → logprob: -0.003452291479334235
    2. ',' → logprob: -5.878452301025391
    3. 'inv' → logprob: -7.503452301025391
    4. '[' → logprob: -10.12845230102539
    5. ')' → logprob: -11.25345230102539
    6. '_INV' → logprob: -11.75345230102539
    7. '<|end|>' → logprob: -12.37845230102539
    8. ' ,' → logprob: -12.50345230102539
    9. '_,' → logprob: -12.75345230102539
    10. ',
' → logprob: -12.75345230102539

Token 854: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.815280696377158e-05
    2. ' ,' → logprob: -10.875078201293945
    3. ',m' → logprob: -11.125078201293945
    4. ',F' → logprob: -11.625078201293945
    5. '<|end|>' → logprob: -11.875078201293945
    6. ',n' → logprob: -12.125078201293945
    7. 'def' → logprob: -12.375078201293945
    8. ',X' → logprob: -12.625078201293945
    9. ',Q' → logprob: -13.375078201293945
    10. ',
' → logprob: -13.375078201293945

Token 855: ' one' (ID: 1001)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.08019980788230896
    2. 'X' → logprob: -2.705199718475342
    3. 'n' → logprob: -5.955199718475342
    4. '2' → logprob: -6.205199718475342
    5. ' m' → logprob: -6.205199718475342
    6. '0' → logprob: -6.955199718475342
    7. 'F' → logprob: -7.080199718475342
    8. 'two' → logprob: -7.830199718475342
    9. ' ' → logprob: -8.4552001953125
    10. '<|end|>' → logprob: -8.5802001953125

Token 856: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009714908665046096
    2. '):
' → logprob: -7.62597131729126
    3. '):' → logprob: -8.000971794128418
    4. ' ,' → logprob: -9.375971794128418
    5. ',
' → logprob: -10.875971794128418
    6. '   ' → logprob: -11.750971794128418
    7. ',n' → logprob: -11.750971794128418
    8. 's' → logprob: -12.000971794128418
    9. '[' → logprob: -12.875971794128418
    10. '_,' → logprob: -12.875971794128418

Token 857: ' two' (ID: 1920)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.31333473324775696
    2. ' two' → logprob: -1.3133347034454346
    3. 'm' → logprob: -10.438334465026855
    4. '   ' → logprob: -11.438334465026855
    5. '(two' → logprob: -11.438334465026855
    6. ' m' → logprob: -12.188334465026855
    7. 'tw' → logprob: -12.313334465026855
    8. '2' → logprob: -12.438334465026855
    9. ' ' → logprob: -12.563334465026855
    10. 'one' → logprob: -14.063334465026855

Token 858: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.15322358906269073
    2. '):' → logprob: -2.5282235145568848
    3. '):
' → logprob: -2.7782235145568848
    4. '):
' → logprob: -9.528223991394043
    5. ')' → logprob: -11.653223991394043
    6. '   ' → logprob: -11.778223991394043
    7. ',
' → logprob: -12.028223991394043
    8. '):

' → logprob: -12.153223991394043
    9. ',f' → logprob: -12.403223991394043
    10. ' ,' → logprob: -12.778223991394043

Token 859: ' MOD' (ID: 32868)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.9073299169540405
    2. 'm' → logprob: -1.5323299169540405
    3. 'MOD' → logprob: -2.15733003616333
    4. ' m' → logprob: -2.40733003616333
    5. ' X' → logprob: -2.53233003616333
    6. ')' → logprob: -3.15733003616333
    7. ' MOD' → logprob: -3.90733003616333
    8. 'n' → logprob: -4.40733003616333
    9. ' n' → logprob: -4.78233003616333
    10. 'mod' → logprob: -5.78233003616333

Token 860: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003850312903523445
    2. '):
' → logprob: -5.87885046005249
    3. ',' → logprob: -6.87885046005249
    4. '):
' → logprob: -11.628849983215332
    5. '   ' → logprob: -12.253849983215332
    6. ')' → logprob: -14.003849983215332
    7. ':' → logprob: -14.628849983215332
    8. ' ):' → logprob: -15.128849983215332
    9. '):

' → logprob: -15.878849983215332
    10. ' ' → logprob: -17.25385093688965

Token 861: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007972388411872089
    2. 'c' → logprob: -8.000797271728516
    3. 'return' → logprob: -8.375797271728516
    4. 'C' → logprob: -9.500797271728516
    5. 'comb' → logprob: -10.125797271728516
    6. 'n' → logprob: -10.500797271728516
    7. 'a' → logprob: -11.000797271728516
    8. '```' → logprob: -11.000797271728516
    9. 'inv' → logprob: -11.250797271728516
    10. 'coef' → logprob: -11.625797271728516

Token 862: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0432825088500977
    2. 'return' (adapté à ' return') → logprob: -1.0432825088500977
    3. 'c' → logprob: -2.1682825088500977
    4. 'a' → logprob: -2.4182825088500977
    5. 'comb' → logprob: -2.9182825088500977
    6. 'fact' → logprob: -4.418282508850098
    7. 'C' → logprob: -5.543282508850098
    8. 'def' → logprob: -5.793282508850098
    9. 'num' → logprob: -5.918282508850098
    10. 'b' → logprob: -6.043282508850098

Token 863: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.04242956265807152
    2. '(f' → logprob: -3.2924294471740723
    3. '((' → logprob: -6.292429447174072
    4. ' fact' → logprob: -6.917429447174072
    5. '(' → logprob: -7.292429447174072
    6. ' (' → logprob: -7.917429447174072
    7. '(((' → logprob: -8.29242992401123
    8. '(np' → logprob: -9.16742992401123
    9. '(
' → logprob: -10.16742992401123
    10. '_fact' → logprob: -11.16742992401123

Token 864: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.008820313960313797
    2. '[t' → logprob: -5.133820533752441
    3. '_inv' → logprob: -6.758820533752441
    4. '[np' → logprob: -7.133820533752441
    5. 'one' → logprob: -8.008820533752441
    6. 'inv' → logprob: -8.758820533752441
    7. '[in' → logprob: -9.258820533752441
    8. '_one' → logprob: -9.508820533752441
    9. '[m' → logprob: -9.758820533752441
    10. '[f' → logprob: -9.883820533752441

Token 865: 'one' (ID: 690)
  Prédit: 'one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.018918411806225777
    2. '(one' → logprob: -4.268918514251709
    3. 'two' → logprob: -5.768918514251709
    4. '[' → logprob: -6.893918514251709
    5. 'm' → logprob: -8.89391803741455
    6. '(two' → logprob: -8.89391803741455
    7. '2' → logprob: -9.26891803741455
    8. '(' → logprob: -9.51891803741455
    9. ']' → logprob: -9.64391803741455
    10. ' one' → logprob: -10.26891803741455

Token 866: ' +' (ID: 659)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07415442168712616
    2. '+' → logprob: -2.6991543769836426
    3. ' +' → logprob: -5.949154376983643
    4. ']*' → logprob: -6.574154376983643
    5. '   ' → logprob: -9.6991548538208
    6. '[' → logprob: -10.1991548538208
    7. ' ]' → logprob: -10.3241548538208
    8. '+t' → logprob: -11.1991548538208
    9. '+]' → logprob: -11.8241548538208
    10. ' ' → logprob: -11.9491548538208

Token 867: ' two' (ID: 1920)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.023282986134290695
    2. ' two' → logprob: -3.773283004760742
    3. '(two' → logprob: -10.773283004760742
    4. ' ' → logprob: -12.023283004760742
    5. 'tw' → logprob: -12.148283004760742
    6. '   ' → logprob: -12.898283004760742
    7. '2' → logprob: -13.148283004760742
    8. '_two' → logprob: -15.273283004760742
    9. '.two' → logprob: -15.773283004760742
    10. 't' → logprob: -16.398283004760742

Token 868: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0003086486831307411
    2. ']*' → logprob: -8.125308990478516
    3. ' ]' → logprob: -12.125308990478516
    4. '[' → logprob: -12.750308990478516
    5. ']*(' → logprob: -13.875308990478516
    6. '   ' → logprob: -14.500308990478516
    7. ' ' → logprob: -14.875308990478516
    8. '']' → logprob: -14.875308990478516
    9. '],' → logprob: -15.125308990478516
    10. '+' → logprob: -15.125308990478516

Token 869: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.18663263320922852
    2. '*' → logprob: -1.8116326332092285
    3. '[' → logprob: -5.4366326332092285
    4. '   ' → logprob: -7.3116326332092285
    5. '```' → logprob: -7.5616326332092285
    6. '<|end|>' → logprob: -7.8116326332092285
    7. '[:]' → logprob: -8.31163215637207
    8. '[...,' → logprob: -8.81163215637207
    9. 'def' → logprob: -8.93663215637207
    10. '*(' → logprob: -9.68663215637207

Token 870: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.00014096579980105162
    2. ' fact' → logprob: -8.875141143798828
    3. 'factor' → logprob: -15.375141143798828
    4. '_fact' → logprob: -15.500141143798828
    5. '   ' → logprob: -15.625141143798828
    6. '.fact' → logprob: -15.625141143798828
    7. '  ' → logprob: -16.375141143798828
    8. 'fac' → logprob: -16.625141143798828
    9. 'ifact' → logprob: -17.250141143798828
    10. '
' → logprob: -17.250141143798828

Token 871: '_inv' (ID: 53427)
  Prédit: '_inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inv' → logprob: -0.0038954415358603
    2. '[t' → logprob: -6.503895282745361
    3. 'inv' → logprob: -6.628895282745361
    4. '[' → logprob: -7.003895282745361
    5. 'two' → logprob: -9.50389575958252
    6. '[np' → logprob: -10.87889575958252
    7. '[-' → logprob: -11.12889575958252
    8. '[...,' → logprob: -11.75389575958252
    9. '_INV' → logprob: -11.87889575958252
    10. '_two' → logprob: -12.00389575958252

Token 872: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.029811127111315727
    2. '[t' → logprob: -3.529811143875122
    3. '[np' → logprob: -10.029810905456543
    4. '[[' → logprob: -11.904810905456543
    5. '[(' → logprob: -12.404810905456543
    6. 'two' → logprob: -13.904810905456543
    7. '   ' → logprob: -14.029810905456543
    8. '[f' → logprob: -14.279810905456543
    9. '[...,' → logprob: -14.654810905456543
    10. 't' → logprob: -14.779810905456543

Token 873: 'one' (ID: 690)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.038276609033346176
    2. '[t' → logprob: -3.2882766723632812
    3. 'one' → logprob: -8.538276672363281
    4. 'two' → logprob: -11.038276672363281
    5. 't' → logprob: -11.663276672363281
    6. '   ' → logprob: -13.163276672363281
    7. ']' → logprob: -13.538276672363281
    8. '```' → logprob: -13.538276672363281
    9. '2' → logprob: -13.913276672363281
    10. '1' → logprob: -13.913276672363281

Token 874: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01302527915686369
    2. '+' → logprob: -4.388025283813477
    3. ']*' → logprob: -7.888025283813477
    4. ' +' → logprob: -10.263025283813477
    5. '[' → logprob: -10.888025283813477
    6. '   ' → logprob: -11.013025283813477
    7. '+]' → logprob: -11.013025283813477
    8. ' ]' → logprob: -11.263025283813477
    9. '*' → logprob: -11.388025283813477
    10. ']+' → logprob: -12.763025283813477

Token 875: ' %' (ID: 1851)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.4533337950706482
    2. ' *' → logprob: -1.203333854675293
    3. '%' → logprob: -3.203333854675293
    4. '   ' → logprob: -4.953333854675293
    5. '<|end|>' → logprob: -5.203333854675293
    6. '[...,' → logprob: -5.328333854675293
    7. '[' → logprob: -5.828333854675293
    8. '```' → logprob: -6.828333854675293
    9. ' %' → logprob: -7.328333854675293
    10. ' ' → logprob: -8.078333854675293

Token 876: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0003368926409166306
    2. ' MOD' → logprob: -8.000336647033691
    3. '_MOD' → logprob: -13.750336647033691
    4. '.MOD' → logprob: -16.250337600708008
    5. 'Mod' → logprob: -16.375337600708008
    6. 'mod' → logprob: -16.500337600708008
    7. '```' → logprob: -17.000337600708008
    8. '{' → logprob: -17.875337600708008
    9. '_mod' → logprob: -18.375337600708008
    10. 'MO' → logprob: -19.000337600708008

Token 877: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.23804838955402374
    2. '   ' → logprob: -1.7380484342575073
    3. '<|end|>' → logprob: -3.8630483150482178
    4. '*' → logprob: -4.613048553466797
    5. '%' → logprob: -6.613048553466797
    6. '[' → logprob: -6.988048553466797
    7. '  ' → logprob: -7.738048553466797
    8. 'def' → logprob: -8.113048553466797
    9. '```' → logprob: -8.113048553466797
    10. ' %' → logprob: -8.113048553466797

Token 878: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -2.165027217415627e-05
    2. ' fact' → logprob: -10.750021934509277
    3. 'factor' → logprob: -17.37502098083496
    4. '   ' → logprob: -17.50002098083496
    5. 'facts' → logprob: -17.50002098083496
    6. '_fact' → logprob: -17.50002098083496
    7. '.fact' → logprob: -17.75002098083496
    8. '```' → logprob: -18.87502098083496
    9. 'fac' → logprob: -19.00002098083496
    10. '  ' → logprob: -19.25002098083496

Token 879: '_inv' (ID: 53427)
  Prédit: '_inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inv' → logprob: -0.007219919469207525
    2. '[t' → logprob: -5.0072197914123535
    3. '[' → logprob: -7.8822197914123535
    4. 'inv' → logprob: -9.257220268249512
    5. '[_' → logprob: -11.007220268249512
    6. 'two' → logprob: -12.632220268249512
    7. '[f' → logprob: -13.007220268249512
    8. 'Inv' → logprob: -13.132220268249512
    9. '```' → logprob: -13.507220268249512
    10. '_inf' → logprob: -13.632220268249512

Token 880: '[t' (ID: 32184)
  Prédit: '[t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[t' → logprob: -0.00016098834748845547
    2. '[' → logprob: -8.750161170959473
    3. '[[' → logprob: -14.000161170959473
    4. '   ' → logprob: -15.125161170959473
    5. 'two' → logprob: -15.250161170959473
    6. '[to' → logprob: -15.625161170959473
    7. '[
' → logprob: -15.875161170959473
    8. '[(' → logprob: -15.875161170959473
    9. '```' → logprob: -16.000160217285156
    10. '\[' → logprob: -16.000160217285156

Token 881: 'wo' (ID: 1338)
  Prédit: 'wo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wo' → logprob: -6.587483221665025e-05
    2. 'w' → logprob: -10.125065803527832
    3. 'two' → logprob: -10.625065803527832
    4. '[' → logprob: -15.125065803527832
    5. 'one' → logprob: -15.500065803527832
    6. 'o' → logprob: -16.00006675720215
    7. '```' → logprob: -16.00006675720215
    8. 'wor' → logprob: -16.62506675720215
    9. '(two' → logprob: -16.62506675720215
    10. '+' → logprob: -16.75006675720215

Token 882: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03802381828427315
    2. '%' → logprob: -3.4130237102508545
    3. ']%' → logprob: -5.538023948669434
    4. ' ]' → logprob: -8.538023948669434
    5. ' %' → logprob: -8.913023948669434
    6. '[' → logprob: -10.413023948669434
    7. ')' → logprob: -10.538023948669434
    8. '}' → logprob: -12.038023948669434
    9. '']' → logprob: -12.163023948669434
    10. '   ' → logprob: -12.288023948669434

Token 883: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.7668847441673279
    2. '<|end|>' → logprob: -0.8918847441673279
    3. ' %' → logprob: -2.3918848037719727
    4. '[' → logprob: -4.516884803771973
    5. ')' → logprob: -4.516884803771973
    6. 'def' → logprob: -5.266884803771973
    7. '```' → logprob: -5.891884803771973
    8. '<|end|>' → logprob: -6.516884803771973
    9. ' ' → logprob: -7.016884803771973
    10. '   ' → logprob: -7.641884803771973

Token 884: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -1.4974866644479334e-05
    2. ' MOD' → logprob: -11.125015258789062
    3. '_MOD' → logprob: -15.625015258789062
    4. '(M' → logprob: -16.750015258789062
    5. '```' → logprob: -17.250015258789062
    6. 'MO' → logprob: -18.125015258789062
    7. 'MODE' → logprob: -18.625015258789062
    8. '(Mod' → logprob: -18.875015258789062
    9. '(' → logprob: -19.125015258789062
    10. '.MOD' → logprob: -19.625015258789062

Token 885: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.32167133688926697
    2. '<|end|>' → logprob: -1.6966713666915894
    3. ')' → logprob: -2.9466712474823
    4. '```' → logprob: -4.196671485900879
    5. '*' → logprob: -5.071671485900879
    6. '%' → logprob: -5.196671485900879
    7. '(' → logprob: -5.446671485900879
    8. ' def' → logprob: -6.821671485900879
    9. '[' → logprob: -6.946671485900879
    10. '   ' → logprob: -7.196671485900879

Token 886: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5389196872711182
    2. '<|end|>' → logprob: -1.6639196872711182
    3. ')' → logprob: -2.788919687271118
    4. '```' → logprob: -3.538919687271118
    5. 'two' → logprob: -3.663919687271118
    6. '+' → logprob: -3.663919687271118
    7. '%' → logprob: -3.913919687271118
    8. '(two' → logprob: -4.038919448852539
    9. '(' → logprob: -4.663919448852539
    10. '#' → logprob: -4.788919448852539

Token 887: ' F' (ID: 454)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.4815810024738312
    2. ' F' → logprob: -0.9815809726715088
    3. 'def' → logprob: -4.981581211090088
    4. ' def' → logprob: -8.35658073425293
    5. 'user' → logprob: -9.98158073425293
    6. 'solve' → logprob: -9.98158073425293
    7. ' user' → logprob: -10.41908073425293
    8. '_F' → logprob: -10.60658073425293
    9. ' ' → logprob: -10.79408073425293
    10. ' solve' → logprob: -11.04408073425293

Token 888: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.73446003627032e-05
    2. '1' → logprob: -9.875097274780273
    3. 'actor' → logprob: -10.625097274780273
    4. 'def' → logprob: -11.625097274780273
    5. 'act' → logprob: -12.375097274780273
    6. 'inal' → logprob: -13.500097274780273
    7. '```' → logprob: -13.750097274780273
    8. '_' → logprob: -14.000097274780273
    9. 'ac' → logprob: -14.125097274780273
    10. 'or' → logprob: -14.500097274780273

Token 889: '_filter' (ID: 19830)
  Prédit: '_loop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_loop' → logprob: -0.21004045009613037
    2. '_calc' → logprob: -1.7100404500961304
    3. '_cal' → logprob: -6.71004056930542
    4. '_def' → logprob: -6.83504056930542
    5. '_range' → logprob: -6.96004056930542
    6. '(' → logprob: -7.21004056930542
    7. '_' → logprob: -7.33504056930542
    8. '_prepare' → logprob: -8.210040092468262
    9. '_compute' → logprob: -8.335040092468262
    10. '(_' → logprob: -8.335040092468262

Token 890: '_rest' (ID: 70749)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.8281446695327759
    2. '(' → logprob: -0.9531446695327759
    3. 'def' → logprob: -2.5781445503234863
    4. '(f' → logprob: -3.8281445503234863
    5. '(two' → logprob: -4.203144550323486
    6. '(arr' → logprob: -4.578144550323486
    7. '=lambda' → logprob: -5.203144550323486
    8. '(X' → logprob: -5.453144550323486
    9. '(one' → logprob: -5.453144550323486
    10. '(filter' → logprob: -5.578144550323486

Token 891: '(rest' (ID: 117922)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6173596382141113
    2. '(lambda' → logprob: -2.1173596382141113
    3. '(arr' → logprob: -2.2423596382141113
    4. '(rest' → logprob: -2.2423596382141113
    5. '(lst' → logprob: -3.2423596382141113
    6. '(f' → logprob: -3.8673596382141113
    7. '(_' → logprob: -4.867359638214111
    8. '(filter' → logprob: -5.242359638214111
    9. '_' → logprob: -5.617359638214111
    10. '(indices' → logprob: -5.742359638214111

Token 892: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18469035625457764
    2. '):' → logprob: -1.8096903562545776
    3. '):
' → logprob: -6.684690475463867
    4. '[' → logprob: -7.184690475463867
    5. '   ' → logprob: -7.434690475463867
    6. ')' → logprob: -7.684690475463867
    7. ' ,' → logprob: -7.934690475463867
    8. ':' → logprob: -8.184690475463867
    9. '(rest' → logprob: -8.559690475463867
    10. '_rest' → logprob: -9.184690475463867

Token 893: ' coef' (ID: 107584)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -1.484824299812317
    2. ' fact' → logprob: -1.859824299812317
    3. 'MOD' → logprob: -1.859824299812317
    4. 'two' → logprob: -2.6098241806030273
    5. ' MOD' → logprob: -2.6098241806030273
    6. 'one' → logprob: -2.7348241806030273
    7. ' two' → logprob: -2.8598241806030273
    8. 'X' → logprob: -3.2348241806030273
    9. ' one' → logprob: -3.4848241806030273
    10. 'F' → logprob: -4.109824180603027

Token 894: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.17024827003479004
    2. '):' → logprob: -1.92024827003479
    3. '):
' → logprob: -4.920248031616211
    4. '):
' → logprob: -6.795248031616211
    5. ')' → logprob: -7.420248031616211
    6. '[' → logprob: -7.795248031616211
    7. ' ,' → logprob: -8.670248031616211
    8. '==' → logprob: -9.670248031616211
    9. '   ' → logprob: -10.420248031616211
    10. '=' → logprob: -10.670248031616211

Token 895: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0022349476348608732
    2. '(rest' → logprob: -7.127234935760498
    3. 'rest' → logprob: -7.752234935760498
    4. ':' → logprob: -8.127235412597656
    5. ':
' → logprob: -8.752235412597656
    6. '=' → logprob: -8.877235412597656
    7. ',' → logprob: -9.252235412597656
    8. '):
' → logprob: -9.627235412597656
    9. ' =' → logprob: -10.252235412597656
    10. '```' → logprob: -10.502235412597656

Token 896: ' ind' (ID: 1383)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.447262167930603
    2. '   ' → logprob: -1.072262167930603
    3. ' return' → logprob: -4.197262287139893
    4. 'mask' → logprob: -6.072262287139893
    5. 'rest' → logprob: -7.072262287139893
    6. ' mask' → logprob: -9.447261810302734
    7. 'idx' → logprob: -10.822261810302734
    8. 'def' → logprob: -10.947261810302734
    9. ' rest' → logprob: -11.322261810302734
    10. '	return' → logprob: -11.447261810302734

Token 897: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.1570446491241455
    2. 'ices' → logprob: -1.2820446491241455
    3. 'ex' → logprob: -1.5320446491241455
    4. 's' → logprob: -1.7820446491241455
    5. '=' → logprob: -3.9070446491241455
    6. '=np' → logprob: -6.532044410705566
    7. 'icies' → logprob: -7.157044410705566
    8. '_mask' → logprob: -8.157044410705566
    9. '_arr' → logprob: -9.032044410705566
    10. 'es' → logprob: -9.032044410705566

Token 898: ' rest' (ID: 2867)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.10815902799367905
    2. 'np' → logprob: -2.608159065246582
    3. '(rest' → logprob: -3.858159065246582
    4. '(np' → logprob: -5.483159065246582
    5. ' rest' → logprob: -6.358159065246582
    6. 'coef' → logprob: -6.983159065246582
    7. ' np' → logprob: -7.358159065246582
    8. '(' → logprob: -9.733159065246582
    9. '(co' → logprob: -9.733159065246582
    10. '[np' → logprob: -9.983159065246582

Token 899: ' >=' (ID: 5064)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<=' → logprob: -1.1700398921966553
    2. '<' → logprob: -1.6700398921966553
    3. '[' → logprob: -1.9200398921966553
    4. '>=' → logprob: -2.2950398921966553
    5. '==' → logprob: -2.5450398921966553
    6. '!=' → logprob: -2.7950398921966553
    7. '%' → logprob: -3.4200398921966553
    8. '>' → logprob: -3.7950398921966553
    9. ' <=' → logprob: -4.295040130615234
    10. '=' → logprob: -4.545040130615234

Token 900: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2870692312717438
    2. 'coef' → logprob: -1.6620692014694214
    3. 'two' → logprob: -3.412069320678711
    4. '2' → logprob: -4.912069320678711
    5. '1' → logprob: -4.912069320678711
    6. 'one' → logprob: -5.287069320678711
    7. 'len' → logprob: -6.162069320678711
    8. ' ' → logprob: -6.787069320678711
    9. ' coef' → logprob: -6.787069320678711
    10. ' two' → logprob: -7.537069320678711

Token 901: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0016306709730997682
    2. 'coef' → logprob: -6.626630783081055
    3. 'two' → logprob: -8.876630783081055
    4. '2' → logprob: -9.501630783081055
    5. '1' → logprob: -9.876630783081055
    6. 'co' → logprob: -11.876630783081055
    7. ' ' → logprob: -11.876630783081055
    8. 'len' → logprob: -12.376630783081055
    9. '-' → logprob: -12.501630783081055
    10. 'zero' → logprob: -13.126630783081055

Token 902: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2722722291946411
    2. 'rest' → logprob: -1.8972722291946411
    3. 'and' → logprob: -2.8972721099853516
    4. '&' → logprob: -4.397272109985352
    5. '
' → logprob: -4.772272109985352
    6. ' and' → logprob: -5.647272109985352
    7. '```' → logprob: -6.022272109985352
    8. ')' → logprob: -6.772272109985352
    9. ' &' → logprob: -7.147272109985352
    10. 'return' → logprob: -7.147272109985352

Token 903: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3632645308971405
    2. 'return' → logprob: -1.488264560699463
    3. 'rest' → logprob: -2.613264560699463
    4. ' return' → logprob: -5.488264560699463
    5. '	return' → logprob: -6.988264560699463
    6. '```' → logprob: -8.363264083862305
    7. 'filtered' → logprob: -9.488264083862305
    8. ' rest' → logprob: -9.613264083862305
    9. '_rest' → logprob: -10.363264083862305
    10. '
' → logprob: -11.238264083862305

Token 904: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.1772373765707016
    2. 'rest' → logprob: -2.5522372722625732
    3. '   ' → logprob: -2.8022372722625732
    4. ' return' → logprob: -3.8022372722625732
    5. 'coef' → logprob: -6.677237510681152
    6. ' rest' → logprob: -9.302237510681152
    7. ' coef' → logprob: -9.927237510681152
    8. 'result' → logprob: -10.677237510681152
    9. '```' → logprob: -11.052237510681152
    10. 'filtered' → logprob: -11.052237510681152

Token 905: ' rest' (ID: 2867)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.0013832130935043097
    2. ' rest' → logprob: -7.501383304595947
    3. 'coef' → logprob: -7.501383304595947
    4. '   ' → logprob: -8.626382827758789
    5. '(rest' → logprob: -10.251382827758789
    6. 'ind' → logprob: -10.251382827758789
    7. 'np' → logprob: -11.501382827758789
    8. ' coef' → logprob: -12.001382827758789
    9. '  ' → logprob: -13.376382827758789
    10. ' ' → logprob: -13.626382827758789

Token 906: '[ind' (ID: 68064)
  Prédit: '[ind'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[ind' → logprob: -0.0003199730417691171
    2. '[' → logprob: -8.250320434570312
    3. 'ind' → logprob: -10.375320434570312
    4. '   ' → logprob: -11.000320434570312
    5. '```' → logprob: -12.625320434570312
    6. ' ind' → logprob: -14.000320434570312
    7. '[np' → logprob: -14.125320434570312
    8. '*' → logprob: -14.250320434570312
    9. ' [' → logprob: -14.375320434570312
    10. '[
' → logprob: -14.375320434570312

Token 907: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.3076627552509308
    2. ',' → logprob: -1.5576627254486084
    3. ']' → logprob: -2.9326627254486084
    4. ' ,' → logprob: -7.1826629638671875
    5. ' ],' → logprob: -9.307662963867188
    6. '][:' → logprob: -10.932662963867188
    7. '][' → logprob: -11.557662963867188
    8. '),' → logprob: -11.557662963867188
    9. '],[' → logprob: -11.682662963867188
    10. '[' → logprob: -12.307662963867188

Token 908: ' coef' (ID: 107584)
  Prédit: 'coef'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coef' → logprob: -0.1004813015460968
    2. ' coef' → logprob: -2.3504812717437744
    3. 'ind' → logprob: -8.975481033325195
    4. '   ' → logprob: -9.850481033325195
    5. ' ind' → logprob: -10.225481033325195
    6. 'coe' → logprob: -10.850481033325195
    7. 'co' → logprob: -11.475481033325195
    8. 'coeff' → logprob: -11.850481033325195
    9. ' ' → logprob: -12.100481033325195
    10. '    ' → logprob: -12.225481033325195

Token 909: '[ind' (ID: 68064)
  Prédit: '[ind'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[ind' → logprob: -0.3237325847148895
    2. ',' → logprob: -1.448732614517212
    3. 'ind' → logprob: -3.198732614517212
    4. '(ind' → logprob: -7.698732376098633
    5. ' ind' → logprob: -8.573732376098633
    6. '```' → logprob: -9.073732376098633
    7. '
' → logprob: -10.448732376098633
    8. ',
' → logprob: -10.948732376098633
    9. '_ind' → logprob: -11.073732376098633
    10. ' ,' → logprob: -11.323732376098633

Token 910: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0023574524093419313
    2. '<|end|>' → logprob: -6.502357482910156
    3. ' ]' → logprob: -7.502357482910156
    4. ',' → logprob: -8.377357482910156
    5. '<|end|>' → logprob: -10.877357482910156
    6. ']

' → logprob: -10.877357482910156
    7. '],' → logprob: -11.252357482910156
    8. 'def' → logprob: -12.627357482910156
    9. '}' → logprob: -12.752357482910156
    10. ']
' → logprob: -13.002357482910156

Token 911: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -4.320199877838604e-07
    2. '```' → logprob: -15.125
    3. ' def' → logprob: -17.0
    4. 'import' → logprob: -17.25
    5. '
' → logprob: -18.25
    6. 'rest' → logprob: -18.75
    7. '<|end|>' → logprob: -18.875
    8. 'F' → logprob: -19.5
    9. 'for' → logprob: -19.75
    10. '\' → logprob: -19.875

Token 912: ' F' (ID: 454)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.1162453293800354
    2. ' F' → logprob: -2.3662452697753906
    3. 'def' → logprob: -4.241245269775391
    4. ' def' → logprob: -7.741245269775391
    5. 'rest' → logprob: -7.991245269775391
    6. 'main' → logprob: -8.99124526977539
    7. '_F' → logprob: -9.74124526977539
    8. ' main' → logprob: -9.74124526977539
    9. ' rest' → logprob: -9.99124526977539
    10. 'solve' → logprob: -9.99124526977539

Token 913: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.005374510306864977
    2. 'ilter' → logprob: -5.255374431610107
    3. 'def' → logprob: -9.130374908447266
    4. 'ILTER' → logprob: -11.005374908447266
    5. '1' → logprob: -11.755374908447266
    6. 'ilters' → logprob: -13.505374908447266
    7. 'inal' → logprob: -13.505374908447266
    8. 'ilt' → logprob: -13.755374908447266
    9. 'rest' → logprob: -14.130374908447266
    10. '```' → logprob: -14.755374908447266

Token 914: '_update' (ID: 19528)
  Prédit: '_calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_calc' → logprob: -0.8627939820289612
    2. '_filter' → logprob: -1.2377939224243164
    3. '_loop' → logprob: -1.6127939224243164
    4. '_sum' → logprob: -3.2377939224243164
    5. '_rest' → logprob: -4.862793922424316
    6. '_final' → logprob: -5.612793922424316
    7. '_range' → logprob: -5.987793922424316
    8. '_continue' → logprob: -6.112793922424316
    9. '_cal' → logprob: -6.237793922424316
    10. '_construct' → logprob: -6.237793922424316

Token 915: '_x' (ID: 7054)
  Prédit: '(rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(rest' → logprob: -0.10000293701887131
    2. 'def' → logprob: -3.3500030040740967
    3. '_rest' → logprob: -4.100002765655518
    4. '(f' → logprob: -4.725002765655518
    5. '(two' → logprob: -5.600002765655518
    6. '_two' → logprob: -5.600002765655518
    7. '(F' → logprob: -5.975002765655518
    8. '(arr' → logprob: -6.225002765655518
    9. '(co' → logprob: -6.350002765655518
    10. 'rest' → logprob: -6.350002765655518

Token 916: '(x' (ID: 4061)
  Prédit: '(X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -0.06610985845327377
    2. '(x' → logprob: -3.1911098957061768
    3. '(' → logprob: -4.691109657287598
    4. '(rest' → logprob: -5.441109657287598
    5. 'def' → logprob: -5.941109657287598
    6. '(F' → logprob: -6.066109657287598
    7. '(lambda' → logprob: -7.191109657287598
    8. ',' → logprob: -7.441109657287598
    9. ' =' → logprob: -7.941109657287598
    10. '(prev' → logprob: -8.191109657287598

Token 917: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02031354047358036
    2. '):' → logprob: -4.895313739776611
    3. '+' → logprob: -5.020313739776611
    4. ']:' → logprob: -7.020313739776611
    5. ' +' → logprob: -7.020313739776611
    6. '[' → logprob: -7.145313739776611
    7. ']' → logprob: -7.395313739776611
    8. ',n' → logprob: -7.520313739776611
    9. '   ' → logprob: -7.895313739776611
    10. '):
' → logprob: -8.145313262939453

Token 918: ' rest' (ID: 2867)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.6581525802612305
    2. ' rest' → logprob: -1.6581525802612305
    3. ' two' → logprob: -2.2831525802612305
    4. 'two' → logprob: -3.0331525802612305
    5. 'coef' → logprob: -3.2831525802612305
    6. ' coef' → logprob: -3.4081525802612305
    7. 'x' → logprob: -3.4081525802612305
    8. ' x' → logprob: -4.7831525802612305
    9. 'n' → logprob: -5.1581525802612305
    10. ' n' → logprob: -5.9081525802612305

Token 919: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014257101574912667
    2. ',x' → logprob: -7.126425743103027
    3. '+' → logprob: -8.251425743103027
    4. ' ,' → logprob: -9.126425743103027
    5. '[' → logprob: -9.376425743103027
    6. '(rest' → logprob: -10.501425743103027
    7. '),' → logprob: -10.876425743103027
    8. 'rest' → logprob: -11.001425743103027
    9. ')' → logprob: -11.126425743103027
    10. '+,' → logprob: -11.501425743103027

Token 920: ' coef' (ID: 107584)
  Prédit: 'coef'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coef' → logprob: -0.06229928135871887
    2. ' coef' → logprob: -3.1872992515563965
    3. 'two' → logprob: -4.4372992515563965
    4. ' two' → logprob: -5.5622992515563965
    5. '   ' → logprob: -7.0622992515563965
    6. 'one' → logprob: -7.4372992515563965
    7. 'rest' → logprob: -7.4372992515563965
    8. 'n' → logprob: -8.687299728393555
    9. 'ind' → logprob: -8.937299728393555
    10. ' ' → logprob: -9.062299728393555

Token 921: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006307095172815025
    2. '):
' → logprob: -8.125630378723145
    3. '   ' → logprob: -9.000630378723145
    4. ',x' → logprob: -9.375630378723145
    5. '):' → logprob: -9.625630378723145
    6. ' ,' → logprob: -10.000630378723145
    7. ',
' → logprob: -12.625630378723145
    8. ',y' → logprob: -13.000630378723145
    9. '[' → logprob: -13.625630378723145
    10. '):
' → logprob: -13.875630378723145

Token 922: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007112398743629456
    2. 'x' → logprob: -7.375711441040039
    3. 'return' → logprob: -9.875711441040039
    4. 'for' → logprob: -11.000711441040039
    5. ' x' → logprob: -12.375711441040039
    6. ' return' → logprob: -12.500711441040039
    7. '	x' → logprob: -13.125711441040039
    8. '       ' → logprob: -13.375711441040039
    9. ' for' → logprob: -13.500711441040039
    10. '	return' → logprob: -13.750711441040039

Token 923: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.09564042836427689
    2. '   ' → logprob: -2.8456404209136963
    3. 'for' → logprob: -3.8456404209136963
    4. 'return' → logprob: -4.970640659332275
    5. ' x' → logprob: -5.470640659332275
    6. ' for' → logprob: -8.220640182495117
    7. ' return' → logprob: -8.970640182495117
    8. 'np' → logprob: -9.470640182495117
    9. 'if' → logprob: -9.720640182495117
    10. 'idx' → logprob: -10.345640182495117

Token 924: '[' (ID: 58)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.012936200946569443
    2. ' +=' → logprob: -4.762936115264893
    3. '[' → logprob: -6.512936115264893
    4. '=' → logprob: -6.512936115264893
    5. '+' → logprob: -6.762936115264893
    6. '[x' → logprob: -9.51293659210205
    7. '   ' → logprob: -10.63793659210205
    8. '-=' → logprob: -11.01293659210205
    9. '[:]' → logprob: -11.01293659210205
    10. '[:' → logprob: -11.13793659210205

Token 925: 'rest' (ID: 7134)
  Prédit: 'rest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.001080683316104114
    2. ' rest' → logprob: -7.251080513000488
    3. '(rest' → logprob: -8.751080513000488
    4. ']' → logprob: -10.126080513000488
    5. 'F' → logprob: -10.501080513000488
    6. '0' → logprob: -10.501080513000488
    7. ':]' → logprob: -11.001080513000488
    8. '   ' → logprob: -11.001080513000488
    9. '-' → logprob: -11.251080513000488
    10. ':' → logprob: -11.501080513000488

Token 926: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002067587338387966
    2. ']+=' → logprob: -6.377067565917969
    3. '[' → logprob: -8.877067565917969
    4. '+' → logprob: -9.377067565917969
    5. ' ]' → logprob: -9.377067565917969
    6. '+=' → logprob: -10.627067565917969
    7. ',' → logprob: -12.002067565917969
    8. ']+' → logprob: -12.252067565917969
    9. '+]' → logprob: -12.252067565917969
    10. ' +=' → logprob: -12.627067565917969

Token 927: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.19267749786376953
    2. ']' → logprob: -2.1926774978637695
    3. ']+=' → logprob: -2.8176774978637695
    4. ' +=' → logprob: -6.1926774978637695
    5. '=' → logprob: -6.5676774978637695
    6. '+' → logprob: -8.81767749786377
    7. '[' → logprob: -9.44267749786377
    8. '*=' → logprob: -10.06767749786377
    9. '   ' → logprob: -10.19267749786377
    10. '```' → logprob: -10.31767749786377

Token 928: ' coef' (ID: 107584)
  Prédit: 'coef'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coef' → logprob: -0.00026884564431384206
    2. ' coef' → logprob: -8.375268936157227
    3. '   ' → logprob: -10.750268936157227
    4. 'co' → logprob: -11.875268936157227
    5. 'coe' → logprob: -12.625268936157227
    6. 'x' → logprob: -12.875268936157227
    7. '(co' → logprob: -13.625268936157227
    8. '(' → logprob: -14.500268936157227
    9. '1' → logprob: -14.500268936157227
    10. ' ' → logprob: -14.750268936157227

Token 929: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.424580454826355
    2. '%' → logprob: -1.799580454826355
    3. '<|end|>' → logprob: -2.0495805740356445
    4. '   ' → logprob: -3.5495805740356445
    5. '*' → logprob: -5.2995805740356445
    6. ' %' → logprob: -5.5495805740356445
    7. '```' → logprob: -6.0495805740356445
    8. 'def' → logprob: -6.2995805740356445
    9. '    
' → logprob: -6.4245805740356445
    10. ' *' → logprob: -6.5495805740356445

Token 930: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008656646125018597
    2. '<|end|>' → logprob: -5.1336565017700195
    3. '
' → logprob: -7.2586565017700195
    4. 'def' → logprob: -7.8836565017700195
    5. '```' → logprob: -8.25865650177002
    6. 'return' → logprob: -8.38365650177002
    7. ' x' → logprob: -8.38365650177002
    8. ' return' → logprob: -8.75865650177002
    9. 'x' → logprob: -9.00865650177002
    10. '    
' → logprob: -9.38365650177002

Token 931: ' return' (ID: 622)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7720280885696411
    2. '   ' → logprob: -1.0220280885696411
    3. ' x' → logprob: -1.8970280885696411
    4. 'return' (adapté à ' return') → logprob: -3.8970279693603516
    5. ' return' → logprob: -5.147027969360352
    6. '```' → logprob: -7.522027969360352
    7. ' ' → logprob: -7.647027969360352
    8. '<|end|>' → logprob: -7.897027969360352
    9. '%' → logprob: -9.522027969360352
    10. 'import' → logprob: -9.647027969360352

Token 932: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -2.3080716346157715e-05
    2. ' x' → logprob: -10.750022888183594
    3. 'None' → logprob: -13.375022888183594
    4. '<|end|>' → logprob: -19.000022888183594
    5. ' None' → logprob: -19.125022888183594
    6. '	x' → logprob: -20.500022888183594
    7. ' ' → logprob: -21.250022888183594
    8. '"x' → logprob: -21.500022888183594
    9. '(x' → logprob: -21.500022888183594
    10. ''x' → logprob: -22.875022888183594

Token 933: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05227263644337654
    2. '<|end|>' → logprob: -3.0522725582122803
    3. '
' → logprob: -5.677272796630859
    4. '<|end|>' → logprob: -9.55227279663086
    5. '[' → logprob: -9.67727279663086
    6. '

' → logprob: -9.67727279663086
    7. '[
' → logprob: -11.42727279663086
    8. '```' → logprob: -11.80227279663086
    9. ')' → logprob: -11.92727279663086
    10. '  
' → logprob: -12.05227279663086

Token 934: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.2233183042553719e-05
    2. 'import' → logprob: -12.375012397766113
    3. '```' → logprob: -12.500012397766113
    4. '#' → logprob: -13.375012397766113
    5. '
' → logprob: -14.000012397766113
    6. ' def' → logprob: -14.750012397766113
    7. '<|end|>' → logprob: -14.750012397766113
    8. '\' → logprob: -16.000011444091797
    9. 'x' → logprob: -16.000011444091797
    10. 'class' → logprob: -16.500011444091797

Token 935: ' F' (ID: 454)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.13211950659751892
    2. ' F' → logprob: -2.1321194171905518
    3. ' main' → logprob: -6.007119655609131
    4. 'main' → logprob: -6.507119655609131
    5. ' solve' → logprob: -7.757119655609131
    6. 'solve' → logprob: -7.757119655609131
    7. 'def' → logprob: -9.507119178771973
    8. 'run' → logprob: -9.882119178771973
    9. ' run' → logprob: -9.882119178771973
    10. 'solution' → logprob: -10.382119178771973

Token 936: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0007237526006065309
    2. '1' → logprob: -7.250723838806152
    3. 'ilter' → logprob: -12.000723838806152
    4. 'or' → logprob: -13.000723838806152
    5. 'inal' → logprob: -13.000723838806152
    6. 'unction' → logprob: -14.000723838806152
    7. '_' → logprob: -14.625723838806152
    8. 'irst' → logprob: -15.375723838806152
    9. 'unc' → logprob: -15.375723838806152
    10. '(' → logprob: -15.500723838806152

Token 937: '_finish' (ID: 109520)
  Prédit: '_loop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_loop' → logprob: -0.26175937056541443
    2. '_calc' → logprob: -1.8867594003677368
    3. '_update' → logprob: -4.386759281158447
    4. '(N' → logprob: -4.636759281158447
    5. '_compute' → logprob: -4.636759281158447
    6. '_cal' → logprob: -4.761759281158447
    7. '(' → logprob: -4.886759281158447
    8. '_x' → logprob: -5.261759281158447
    9. 'def' → logprob: -5.761759281158447
    10. '_run' → logprob: -5.886759281158447

Token 938: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.03684002906084061
    2. '():' → logprob: -4.286839962005615
    3. '(' → logprob: -4.661839962005615
    4. '(X' → logprob: -4.911839962005615
    5. 'def' → logprob: -6.286839962005615
    6. '_x' → logprob: -6.411839962005615
    7. '()' → logprob: -7.036839962005615
    8. '():
' → logprob: -7.661839962005615
    9. 'x' → logprob: -7.661839962005615
    10. 'X' → logprob: -9.536840438842773

Token 939: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.7593489289283752
    2. ',' → logprob: -0.8843489289283752
    3. '):
' → logprob: -2.1343488693237305
    4. ')' → logprob: -8.00934886932373
    5. ',x' → logprob: -9.25934886932373
    6. '   ' → logprob: -9.50934886932373
    7. 'def' → logprob: -10.63434886932373
    8. '):
' → logprob: -10.63434886932373
    9. ',
' → logprob: -10.63434886932373
    10. '(x' → logprob: -10.88434886932373

Token 940: ' comb' (ID: 4134)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.17044693231582642
    2. ' MOD' → logprob: -2.6704468727111816
    3. 'X' → logprob: -3.1704468727111816
    4. 'fact' → logprob: -3.7954468727111816
    5. 'rest' → logprob: -5.045446872711182
    6. 'F' → logprob: -5.545446872711182
    7. ')' → logprob: -5.670446872711182
    8. ' X' → logprob: -6.420446872711182
    9. ' fact' → logprob: -6.795446872711182
    10. 'x' → logprob: -6.795446872711182

Token 941: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.008917675353586674
    2. ',' → logprob: -5.258917808532715
    3. ')' → logprob: -6.508917808532715
    4. '):
' → logprob: -7.133917808532715
    5. '[N' → logprob: -8.258917808532715
    6. 'x' → logprob: -8.383917808532715
    7. '_N' → logprob: -8.758917808532715
    8. '(N' → logprob: -9.008917808532715
    9. '```' → logprob: -9.133917808532715
    10. 'X' → logprob: -9.508917808532715

Token 942: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08084256947040558
    2. '):' → logprob: -3.2058424949645996
    3. '):
' → logprob: -3.3308424949645996
    4. ')' → logprob: -6.9558424949646
    5. '):
' → logprob: -9.455842971801758
    6. '   ' → logprob: -9.705842971801758
    7. ',
' → logprob: -9.705842971801758
    8. ',N' → logprob: -9.705842971801758
    9. ' ,' → logprob: -10.455842971801758
    10. ',F' → logprob: -10.580842971801758

Token 943: ' MOD' (ID: 32868)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.9166030883789062
    2. 'MOD' → logprob: -1.2916030883789062
    3. 'fact' → logprob: -1.7916030883789062
    4. 'F' → logprob: -3.2916030883789062
    5. ' MOD' → logprob: -3.2916030883789062
    6. ' fact' → logprob: -3.4166030883789062
    7. ' X' → logprob: -3.7916030883789062
    8. 'N' → logprob: -4.541603088378906
    9. '   ' → logprob: -5.916603088378906
    10. 'rest' → logprob: -6.166603088378906

Token 944: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.47953000664711
    2. '):
' → logprob: -1.3545299768447876
    3. '):' → logprob: -2.104530096054077
    4. '   ' → logprob: -7.104529857635498
    5. '):
' → logprob: -9.729530334472656
    6. ',x' → logprob: -10.104530334472656
    7. ')' → logprob: -11.229530334472656
    8. ':' → logprob: -12.604530334472656
    9. '):

' → logprob: -12.854530334472656
    10. '(x' → logprob: -12.979530334472656

Token 945: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0529610738158226
    2. 'return' → logprob: -3.4279611110687256
    3. 'x' → logprob: -4.0529608726501465
    4. '```' → logprob: -6.6779608726501465
    5. ' return' → logprob: -7.9279608726501465
    6. 'def' → logprob: -9.677961349487305
    7. 'for' → logprob: -10.677961349487305
    8. ' x' → logprob: -10.927961349487305
    9. 'result' → logprob: -11.302961349487305
    10. '``' → logprob: -11.427961349487305

Token 946: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.2593182921409607
    2. 'x' → logprob: -2.0093183517456055
    3. '   ' → logprob: -2.3843183517456055
    4. ' return' → logprob: -7.3843183517456055
    5. 'for' → logprob: -7.8843183517456055
    6. 'result' → logprob: -7.8843183517456055
    7. 'res' → logprob: -8.009318351745605
    8. 'N' → logprob: -9.509318351745605
    9. 'L' → logprob: -9.634318351745605
    10. 'inv' → logprob: -10.134318351745605

Token 947: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.4454481899738312
    2. 'x' → logprob: -1.4454481601715088
    3. 'np' → logprob: -2.695448160171509
    4. '(np' → logprob: -3.445448160171509
    5. ' (' → logprob: -4.945448398590088
    6. ' x' → logprob: -5.195448398590088
    7. 'int' → logprob: -5.445448398590088
    8. '(int' → logprob: -5.945448398590088
    9. '((' → logprob: -6.195448398590088
    10. '(' → logprob: -6.820448398590088

Token 948: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.007300871890038252
    2. '(x' → logprob: -5.132300853729248
    3. 'np' → logprob: -6.757300853729248
    4. ' x' → logprob: -9.507301330566406
    5. '(np' → logprob: -9.507301330566406
    6. '(' → logprob: -10.757301330566406
    7. 'comb' → logprob: -11.882301330566406
    8. ' (' → logprob: -11.882301330566406
    9. '((' → logprob: -12.132301330566406
    10. '   ' → logprob: -12.257301330566406

Token 949: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6712753176689148
    2. ' *' → logprob: -0.9212753176689148
    3. '.sum' → logprob: -3.5462753772735596
    4. '[' → logprob: -3.7962753772735596
    5. '%' → logprob: -3.9212753772735596
    6. '@' → logprob: -4.4212751388549805
    7. '[-' → logprob: -5.6712751388549805
    8. ' %' → logprob: -6.1712751388549805
    9. ' @' → logprob: -7.2962751388549805
    10. '.dot' → logprob: -7.6712751388549805

Token 950: ' comb' (ID: 4134)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.018421143293380737
    2. ' comb' → logprob: -4.018421173095703
    3. 'com' → logprob: -8.893421173095703
    4. '   ' → logprob: -9.518421173095703
    5. 'fact' → logprob: -10.143421173095703
    6. '  ' → logprob: -12.018421173095703
    7. '(com' → logprob: -12.143421173095703
    8. ' ' → logprob: -13.893421173095703
    9. '
' → logprob: -14.018421173095703
    10. '    ' → logprob: -14.018421173095703

Token 951: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: 0.0
    2. ' N' → logprob: -18.5
    3. 'n' → logprob: -18.875
    4. '[N' → logprob: -19.625
    5. '   ' → logprob: -20.0
    6. '(N' → logprob: -20.5
    7. '[' → logprob: -20.75
    8. '```' → logprob: -21.5
    9. '       ' → logprob: -21.75
    10. '	N' → logprob: -22.0

Token 952: ' %' (ID: 1851)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.35478636622428894
    2. ')' → logprob: -1.2297863960266113
    3. '%' → logprob: -6.104786396026611
    4. ')%' → logprob: -6.104786396026611
    5. '[' → logprob: -6.604786396026611
    6. '[::-' → logprob: -8.729785919189453
    7. '[:' → logprob: -8.979785919189453
    8. ' %' → logprob: -10.104785919189453
    9. ' ).' → logprob: -10.729785919189453
    10. '%).' → logprob: -10.729785919189453

Token 953: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.00031508569372817874
    2. ' MOD' → logprob: -8.125314712524414
    3. '998' → logprob: -11.250314712524414
    4. ')' → logprob: -13.000314712524414
    5. '_MOD' → logprob: -13.250314712524414
    6. '.MOD' → logprob: -13.875314712524414
    7. '   ' → logprob: -15.125314712524414
    8. 'Mod' → logprob: -16.125314712524414
    9. 'MODE' → logprob: -16.375314712524414
    10. 'get' → logprob: -16.375314712524414

Token 954: ').' (ID: 741)
  Prédit: ').'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.00371160008944571
    2. ')' → logprob: -5.628711700439453
    3. '   ' → logprob: -9.503711700439453
    4. ')%' → logprob: -10.503711700439453
    5. ' ).' → logprob: -12.128711700439453
    6. '  ' → logprob: -13.628711700439453
    7. '%' → logprob: -14.253711700439453
    8. ')[' → logprob: -14.378711700439453
    9. ' ' → logprob: -15.128711700439453
    10. '       ' → logprob: -15.378711700439453

Token 955: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -1.9361264946837764e-07
    2. '.sum' → logprob: -16.375
    3. ' sum' → logprob: -16.875
    4. '```' → logprob: -19.625
    5. '_sum' → logprob: -20.25
    6. 'astype' → logprob: -21.125
    7. 'tolist' → logprob: -21.125
    8. '(sum' → logprob: -21.5
    9. '
' → logprob: -22.125
    10. 'dot' → logprob: -22.375

Token 956: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.003686413401737809
    2. '()%' → logprob: -5.753686428070068
    3. '(' → logprob: -7.628686428070068
    4. '()
' → logprob: -11.75368595123291
    5. '()<' → logprob: -12.62868595123291
    6. '()[' → logprob: -13.37868595123291
    7. '()]' → logprob: -13.75368595123291
    8. '(),' → logprob: -13.87868595123291
    9. '()+' → logprob: -14.25368595123291
    10. ' ()' → logprob: -14.37868595123291

Token 957: ' %' (ID: 1851)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.35969218611717224
    2. '<|end|>' → logprob: -1.6096922159194946
    3. '
' → logprob: -2.484692096710205
    4. '(
' → logprob: -4.484692096710205
    5. '(' → logprob: -5.984692096710205
    6. '```' → logprob: -6.359692096710205
    7. '

' → logprob: -6.609692096710205
    8. '(def' → logprob: -7.734692096710205
    9. '()' → logprob: -8.109692573547363
    10. '<|end|>' → logprob: -8.359692573547363

Token 958: ' MOD' (ID: 32868)
  Prédit: '998'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '998' → logprob: -0.7041077613830566
    2. 'MOD' → logprob: -0.7041077613830566
    3. 'get' → logprob: -4.579107761383057
    4. ' MOD' → logprob: -7.704107761383057
    5. 'mod' → logprob: -10.079107284545898
    6. ' ' → logprob: -10.829107284545898
    7. '_MOD' → logprob: -10.829107284545898
    8. '```' → logprob: -10.829107284545898
    9. '(' → logprob: -11.079107284545898
    10. '   ' → logprob: -11.329107284545898

Token 959: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.14334996044635773
    2. '<|end|>' → logprob: -2.0183498859405518
    3. '
' → logprob: -8.018349647521973
    4. '```' → logprob: -8.893349647521973
    5. '<|end|>' → logprob: -9.268349647521973
    6. '#' → logprob: -9.893349647521973
    7. ')' → logprob: -11.143349647521973
    8. '\n' → logprob: -11.518349647521973
    9. '[' → logprob: -11.518349647521973
    10. '\' → logprob: -11.893349647521973

Token 960: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -6.0868278524139896e-05
    2. '```' → logprob: -9.75006103515625
    3. ' def' → logprob: -14.62506103515625
    4. '``' → logprob: -14.87506103515625
    5. 'import' → logprob: -14.87506103515625
    6. 'ndef' → logprob: -15.12506103515625
    7. '<|end|>' → logprob: -15.25006103515625
    8. ':def' → logprob: -15.25006103515625
    9. '\' → logprob: -16.00006103515625
    10. '#' → logprob: -16.00006103515625

Token 961: ' F' (ID: 454)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.9227908253669739
    2. ' F' → logprob: -1.047790765762329
    3. 'F' → logprob: -2.172790765762329
    4. ' solve' → logprob: -2.297790765762329
    5. 'main' → logprob: -4.672791004180908
    6. 'solve' → logprob: -4.672791004180908
    7. ' run' → logprob: -5.047791004180908
    8. ' solution' → logprob: -5.422791004180908
    9. ' calc' → logprob: -6.297791004180908
    10. ' compute' → logprob: -7.547791004180908

Token 962: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.06223408877849579
    2. '1' → logprob: -2.8122341632843018
    3. '3' → logprob: -9.187233924865723
    4. 'inish' → logprob: -9.937233924865723
    5. 'inal' → logprob: -10.812233924865723
    6. '(' → logprob: -10.937233924865723
    7. 'def' → logprob: -11.187233924865723
    8. '_complete' → logprob: -11.687233924865723
    9. 'IN' → logprob: -12.062233924865723
    10. '_' → logprob: -12.312233924865723

Token 963: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.28541943430900574
    2. '(' → logprob: -2.285419464111328
    3. '_loop' → logprob: -2.910419464111328
    4. '(_' → logprob: -3.660419464111328
    5. '_' → logprob: -4.035419464111328
    6. '_(' → logprob: -4.285419464111328
    7. '(X' → logprob: -4.660419464111328
    8. '(F' → logprob: -4.785419464111328
    9. '_calc' → logprob: -6.160419464111328
    10. '_def' → logprob: -6.535419464111328

Token 964: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.7729658540920354e-05
    2. ',X' → logprob: -11.375027656555176
    3. ' ,' → logprob: -11.750027656555176
    4. '   ' → logprob: -12.625027656555176
    5. ',
' → logprob: -13.000027656555176
    6. '):
' → logprob: -14.125027656555176
    7. ',N' → logprob: -14.250027656555176
    8. '):' → logprob: -15.000027656555176
    9. '+' → logprob: -15.750027656555176
    10. ',x' → logprob: -16.000028610229492

Token 965: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.12716758251190186
    2. ' X' → logprob: -2.1271677017211914
    3. 'N' → logprob: -9.502167701721191
    4. '   ' → logprob: -9.877167701721191
    5. ' ' → logprob: -11.002167701721191
    6. ',' → logprob: -11.252167701721191
    7. '):
' → logprob: -11.252167701721191
    8. ' N' → logprob: -11.377167701721191
    9. 'K' → logprob: -11.752167701721191
    10. '2' → logprob: -11.877167701721191

Token 966: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16874393820762634
    2. '):
' → logprob: -1.9187439680099487
    3. '):' → logprob: -4.793744087219238
    4. '   ' → logprob: -9.043744087219238
    5. '):
' → logprob: -9.793744087219238
    6. ',
' → logprob: -11.543744087219238
    7. '):

' → logprob: -12.418744087219238
    8. ',N' → logprob: -12.793744087219238
    9. ',x' → logprob: -12.918744087219238
    10. 'def' → logprob: -13.168744087219238

Token 967: ' fact' (ID: 2840)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0011790355201810598
    2. ' MOD' → logprob: -6.751179218292236
    3. '   ' → logprob: -12.501178741455078
    4. 'mod' → logprob: -12.626178741455078
    5. '_MOD' → logprob: -14.626178741455078
    6. ' ' → logprob: -15.001178741455078
    7. 'M' → logprob: -15.876178741455078
    8. '       ' → logprob: -15.876178741455078
    9. '.MOD' → logprob: -16.251178741455078
    10. '           ' → logprob: -16.626178741455078

Token 968: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.596781946020201e-05
    2. ',f' → logprob: -10.625045776367188
    3. ',
' → logprob: -11.250045776367188
    4. ',F' → logprob: -12.875045776367188
    5. ' ,' → logprob: -13.250045776367188
    6. '_,' → logprob: -13.500045776367188
    7. ',int' → logprob: -14.250045776367188
    8. '‌,' → logprob: -14.750045776367188
    9. ',
' → logprob: -15.125045776367188
    10. 's' → logprob: -15.875045776367188

Token 969: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.02721279114484787
    2. ' fact' → logprob: -3.9022128582000732
    3. 'F' → logprob: -6.402212619781494
    4. 'f' → logprob: -6.902212619781494
    5. ')' → logprob: -7.527212619781494
    6. 'pow' → logprob: -7.839712619781494
    7. 'def' → logprob: -7.964712619781494
    8. 'factor' → logprob: -7.964712619781494
    9. ' ' → logprob: -8.089713096618652
    10. 'get' → logprob: -8.527213096618652

Token 970: '_inv' (ID: 53427)
  Prédit: '_inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inv' → logprob: -0.0015134313143789768
    2. 'inv' → logprob: -6.501513481140137
    3. ',' → logprob: -12.001513481140137
    4. '   ' → logprob: -13.126513481140137
    5. 'Inv' → logprob: -14.126513481140137
    6. '_INV' → logprob: -14.376513481140137
    7. '=' → logprob: -15.251513481140137
    8. '```' → logprob: -15.626513481140137
    9. 'INV' → logprob: -15.751513481140137
    10. '
' → logprob: -15.876513481140137

Token 971: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023608578369021416
    2. '):
' → logprob: -4.148608684539795
    3. '):' → logprob: -4.898608684539795
    4. '   ' → logprob: -9.898608207702637
    5. ',
' → logprob: -11.398608207702637
    6. ',x' → logprob: -11.398608207702637
    7. '):
' → logprob: -12.148608207702637
    8. ')' → logprob: -12.523608207702637
    9. ' ,' → logprob: -12.648608207702637
    10. 'def' → logprob: -13.398608207702637

Token 972: ' comb' (ID: 4134)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.018769025802612305
    2. ' MOD' → logprob: -4.018769264221191
    3. 'get' → logprob: -8.393769264221191
    4. '998' → logprob: -9.268769264221191
    5. '   ' → logprob: -9.643769264221191
    6. 'mod' → logprob: -9.643769264221191
    7. ' get' → logprob: -10.268769264221191
    8. ' ' → logprob: -10.268769264221191
    9. '_MOD' → logprob: -10.268769264221191
    10. ')' → logprob: -11.393769264221191

Token 973: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.5048530030981055e-06
    2. ',' → logprob: -13.750001907348633
    3. ')' → logprob: -16.500001907348633
    4. '   ' → logprob: -16.500001907348633
    5. '_N' → logprob: -16.625001907348633
    6. '
' → logprob: -16.750001907348633
    7. '[N' → logprob: -17.125001907348633
    8. '```' → logprob: -17.500001907348633
    9. ',N' → logprob: -17.750001907348633
    10. ' N' → logprob: -18.125001907348633

Token 974: ',' (ID: 11)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.268037348985672
    2. ',' → logprob: -2.1430373191833496
    3. '):' → logprob: -2.1430373191833496
    4. '):
' → logprob: -7.89303731918335
    5. '   ' → logprob: -9.518037796020508
    6. ')' → logprob: -10.018037796020508
    7. '):

' → logprob: -11.143037796020508
    8. 'def' → logprob: -11.893037796020508
    9. ' ):
' → logprob: -13.143037796020508
    10. ')
' → logprob: -13.518037796020508

Token 975: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0699995756149292
    2. ' MOD' → logprob: -2.6949996948242188
    3. '   ' → logprob: -10.194999694824219
    4. ' ' → logprob: -11.444999694824219
    5. 'mod' → logprob: -12.569999694824219
    6. '_MOD' → logprob: -12.944999694824219
    7. ')' → logprob: -13.069999694824219
    8. ',' → logprob: -13.694999694824219
    9. '       ' → logprob: -13.819999694824219
    10. '.MOD' → logprob: -14.319999694824219

Token 976: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06200186535716057
    2. '):
' → logprob: -2.812001943588257
    3. ':' → logprob: -10.812002182006836
    4. ')' → logprob: -11.812002182006836
    5. '):
' → logprob: -12.312002182006836
    6. '   ' → logprob: -13.312002182006836
    7. '):

' → logprob: -15.687002182006836
    8. ':
' → logprob: -16.812002182006836
    9. ' ):' → logprob: -17.187002182006836
    10. ',' → logprob: -17.187002182006836

Token 977: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011330705601722002
    2. '```' → logprob: -7.001132965087891
    3. ':' → logprob: -9.25113296508789
    4. '(' → logprob: -10.62613296508789
    5. '[' → logprob: -10.75113296508789
    6. 'x' → logprob: -11.00113296508789
    7. '	x' → logprob: -11.00113296508789
    8. '    
' → logprob: -11.25113296508789
    9. '(x' → logprob: -11.25113296508789
    10. ':
' → logprob: -13.25113296508789

Token 978: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.1278609037399292
    2. '   ' → logprob: -2.1278610229492188
    3. '```' → logprob: -7.377861022949219
    4. ' x' → logprob: -8.877861022949219
    5. 'X' → logprob: -9.002861022949219
    6. '``' → logprob: -10.377861022949219
    7. '
' → logprob: -12.252861022949219
    8. '	x' → logprob: -13.002861022949219
    9. 'result' → logprob: -13.002861022949219
    10. '       ' → logprob: -13.502861022949219

Token 979: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2254459112882614
    2. ' =' → logprob: -1.6004458665847778
    3. '=np' → logprob: -10.975445747375488
    4. ' ' → logprob: -11.725445747375488
    5. '   ' → logprob: -12.100445747375488
    6. '  ' → logprob: -14.725445747375488
    7. '```' → logprob: -14.725445747375488
    8. ',' → logprob: -14.975445747375488
    9. '=
' → logprob: -15.225445747375488
    10. 'x' → logprob: -15.475445747375488

Token 980: ' np' (ID: 5374)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.0009131324477493763
    2. ' np' → logprob: -7.000913143157959
    3. '   ' → logprob: -14.5009126663208
    4. '0' → logprob: -14.6259126663208
    5. 'numpy' → logprob: -14.8759126663208
    6. '(np' → logprob: -15.2509126663208
    7. ' ' → logprob: -17.125913619995117
    8. '=np' → logprob: -17.375913619995117
    9. '```' → logprob: -17.375913619995117
    10. 'import' → logprob: -17.750913619995117

Token 981: '.zeros' (ID: 29146)
  Prédit: '.zeros'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.zeros' → logprob: -0.007932743057608604
    2. 'zeros' → logprob: -4.882932662963867
    3. 'array' → logprob: -8.257932662963867
    4. ' zeros' → logprob: -10.382932662963867
    5. '0' → logprob: -11.257932662963867
    6. 'np' → logprob: -11.382932662963867
    7. '.array' → logprob: -11.882932662963867
    8. '.arange' → logprob: -13.507932662963867
    9. '.ones' → logprob: -13.632932662963867
    10. 'Zeros' → logprob: -13.882932662963867

Token 982: '(N' (ID: 10564)
  Prédit: '(X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -0.004867857322096825
    2. '((' → logprob: -5.379868030548096
    3. '(' → logprob: -8.629867553710938
    4. 'X' → logprob: -9.629867553710938
    5. ' (' → logprob: -14.254867553710938
    6. '[X' → logprob: -14.504867553710938
    7. '(N' → logprob: -14.504867553710938
    8. '([' → logprob: -15.254867553710938
    9. '=X' → logprob: -15.379867553710938
    10. ',X' → logprob: -15.629867553710938

Token 983: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1649797409772873
    2. ',' → logprob: -2.0399796962738037
    3. ')' → logprob: -4.539979934692383
    4. ' +' → logprob: -4.664979934692383
    5. '),' → logprob: -7.164979934692383
    6. ')
' → logprob: -7.789979934692383
    7. '   ' → logprob: -8.039979934692383
    8. ' ,' → logprob: -8.664979934692383
    9. '+,' → logprob: -9.414979934692383
    10. ',)' → logprob: -9.914979934692383

Token 984: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0014765332452952862
    2. '2' → logprob: -7.251476764678955
    3. 'X' → logprob: -7.751476764678955
    4. ' ' → logprob: -8.126476287841797
    5. 'N' → logprob: -11.126476287841797
    6. '3' → logprob: -11.876476287841797
    7. ' X' → logprob: -12.251476287841797
    8. '   ' → logprob: -12.751476287841797
    9. '10' → logprob: -13.188976287841797
    10. '(' → logprob: -13.688976287841797

Token 985: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007808784954249859
    2. '2' → logprob: -5.507808685302734
    3. 'X' → logprob: -5.632808685302734
    4. '3' → logprob: -9.632808685302734
    5. 'N' → logprob: -10.382808685302734
    6. '10' → logprob: -11.007808685302734
    7. ' ' → logprob: -11.632808685302734
    8. '4' → logprob: -12.757808685302734
    9. '11' → logprob: -12.757808685302734
    10. '5' → logprob: -12.882808685302734

Token 986: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.259079363080673e-05
    2. ')' → logprob: -12.250012397766113
    3. ',d' → logprob: -12.625012397766113
    4. ' ,' → logprob: -13.000012397766113
    5. ',np' → logprob: -14.625012397766113
    6. 'dtype' → logprob: -14.750012397766113
    7. ',
' → logprob: -14.875012397766113
    8. '+' → logprob: -15.000012397766113
    9. '   ' → logprob: -15.125012397766113
    10. ',int' → logprob: -16.37501335144043

Token 987: ' np' (ID: 5374)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.023580050095915794
    2. 'dtype' → logprob: -3.7735800743103027
    3. ' np' → logprob: -8.023579597473145
    4. ' dtype' → logprob: -12.523579597473145
    5. '[np' → logprob: -13.523579597473145
    6. '(np' → logprob: -14.023579597473145
    7. ')' → logprob: -14.898579597473145
    8. '=np' → logprob: -15.273579597473145
    9. ',np' → logprob: -15.523579597473145
    10. 'int' → logprob: -16.39858055114746

Token 988: '.int' (ID: 21499)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.02220485359430313
    2. '.int' → logprob: -3.897204875946045
    3. 'dtype' → logprob: -7.022204875946045
    4. '64' → logprob: -7.897204875946045
    5. '=int' → logprob: -9.397204399108887
    6. ',int' → logprob: -9.647204399108887
    7. ' int' → logprob: -9.772204399108887
    8. '```' → logprob: -9.897204399108887
    9. 'uint' → logprob: -10.397204399108887
    10. ']int' → logprob: -10.522204399108887

Token 989: '64' (ID: 2220)
  Prédit: '64'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '64' → logprob: -4.320199877838604e-07
    2. 'int' → logprob: -14.875
    3. '6' → logprob: -19.5
    4. ')' → logprob: -21.5
    5. 'np' → logprob: -21.625
    6. 'dtype' → logprob: -21.75
    7. '   ' → logprob: -22.25
    8. '8' → logprob: -22.375
    9. 'array' → logprob: -22.5
    10. 'Int' → logprob: -23.0

Token 990: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.038053546100854874
    2. ')
' → logprob: -3.288053512573242
    3. ')
' → logprob: -11.913053512573242
    4. '   ' → logprob: -12.788053512573242
    5. ')

' → logprob: -13.663053512573242
    6. ')`
' → logprob: -14.413053512573242
    7. ' )' → logprob: -15.038053512573242
    8. '()' → logprob: -15.788053512573242
    9. ')`' → logprob: -16.538053512573242
    10. ' )
' → logprob: -16.538053512573242

Token 991: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023813238367438316
    2. ' for' → logprob: -3.898813247680664
    3. 'for' → logprob: -6.023813247680664
    4. '```' → logprob: -7.773813247680664
    5. '<|end|>' → logprob: -8.898813247680664
    6. ',' → logprob: -8.898813247680664
    7. '
' → logprob: -10.023813247680664
    8. '    
' → logprob: -10.148813247680664
    9. '	for' → logprob: -11.273813247680664
    10. ':' → logprob: -12.148813247680664

Token 992: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.07941745966672897
    2. ' for' → logprob: -2.5794174671173096
    3. '   ' → logprob: -7.5794172286987305
    4. '```' → logprob: -11.57941722869873
    5. 'm' → logprob: -12.20441722869873
    6. '	for' → logprob: -13.57941722869873
    7. '
' → logprob: -15.07941722869873
    8. '    
' → logprob: -15.20441722869873
    9. '``' → logprob: -15.20441722869873
    10. 'X' → logprob: -16.704418182373047

Token 993: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.01077177468687296
    2. 'm' → logprob: -5.135771751403809
    3. 'i' → logprob: -5.885771751403809
    4. ' n' → logprob: -6.635771751403809
    5. '_n' → logprob: -9.010771751403809
    6. 'k' → logprob: -9.010771751403809
    7. 'nn' → logprob: -9.135771751403809
    8. 'X' → logprob: -9.635771751403809
    9. 'j' → logprob: -9.885771751403809
    10. 'd' → logprob: -10.260771751403809

Token 994: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.34846067428588867
    2. 'in' → logprob: -1.2234606742858887
    3. ' ' → logprob: -12.223461151123047
    4. '   ' → logprob: -12.723461151123047
    5. '	in' → logprob: -13.348461151123047
    6. ',' → logprob: -13.473461151123047
    7. 'n' → logprob: -13.598461151123047
    8. 'In' → logprob: -14.723461151123047
    9. '    ' → logprob: -14.848461151123047
    10. '0' → logprob: -14.848461151123047

Token 995: ' F' (ID: 454)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.13536597788333893
    2. ' range' → logprob: -2.1353659629821777
    3. 'F' → logprob: -5.635365962982178
    4. 'in' → logprob: -6.010365962982178
    5. ' in' → logprob: -6.510365962982178
    6. ' F' → logprob: -7.260365962982178
    7. 'X' → logprob: -9.385366439819336
    8. '(range' → logprob: -10.385366439819336
    9. ' X' → logprob: -11.135366439819336
    10. '0' → logprob: -11.260366439819336

Token 996: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.246537173457909e-06
    2. 'or' → logprob: -12.375003814697266
    3. '1' → logprob: -17.750003814697266
    4. '(' → logprob: -19.750003814697266
    5. 'range' → logprob: -19.875003814697266
    6. '```' → logprob: -20.125003814697266
    7. 'OR' → logprob: -20.500003814697266
    8. 'unction' → logprob: -21.000003814697266
    9. '_' → logprob: -21.375003814697266
    10. '`' → logprob: -21.375003814697266

Token 997: '_loop' (ID: 40621)
  Prédit: '_loop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_loop' → logprob: -0.01827601157128811
    2. '_range' → logprob: -4.018276214599609
    3. '_calc' → logprob: -10.01827621459961
    4. 'loop' → logprob: -10.51827621459961
    5. 'range' → logprob: -10.76827621459961
    6. '```' → logprob: -11.89327621459961
    7. '(_' → logprob: -12.26827621459961
    8. '(' → logprob: -12.39327621459961
    9. '(n' → logprob: -12.76827621459961
    10. '(loop' → logprob: -12.89327621459961

Token 998: '_range' (ID: 22022)
  Prédit: '_range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_range' → logprob: -2.093505099765025e-05
    2. 'range' → logprob: -11.125020980834961
    3. 'ange' → logprob: -12.500020980834961
    4. 'Range' → logprob: -13.250020980834961
    5. '(range' → logprob: -14.750020980834961
    6. '(R' → logprob: -16.75002098083496
    7. ' range' → logprob: -17.62502098083496
    8. '(' → logprob: -17.62502098083496
    9. '_R' → logprob: -17.75002098083496
    10. '```' → logprob: -17.75002098083496

Token 999: '(X' (ID: 17061)
  Prédit: '(X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -0.005319139454513788
    2. '(' → logprob: -5.255319118499756
    3. '(N' → logprob: -9.630319595336914
    4. '((' → logprob: -11.630319595336914
    5. '(
' → logprob: -12.880319595336914
    6. '(x' → logprob: -13.255319595336914
    7. ' (' → logprob: -13.255319595336914
    8. '(n' → logprob: -13.505319595336914
    9. '(range' → logprob: -13.505319595336914
    10. '(A' → logprob: -14.755319595336914

Token 1000: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.38843613862991333
    2. '):
' → logprob: -1.1384360790252686
    3. '()):
' → logprob: -7.013436317443848
    4. '():' → logprob: -7.888436317443848
    5. '():
' → logprob: -8.888436317443848
    6. '()' → logprob: -9.138436317443848
    7. '):
' → logprob: -11.013436317443848
    8. '(' → logprob: -11.888436317443848
    9. ':' → logprob: -12.138436317443848
    10. '   ' → logprob: -12.263436317443848

Token 1001: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005066179670393467
    2. '```' → logprob: -6.130066394805908
    3. '   ' → logprob: -6.880066394805908
    4. 'rest' → logprob: -7.505066394805908
    5. '(rest' → logprob: -7.755066394805908
    6. ',' → logprob: -7.755066394805908
    7. ' rest' → logprob: -8.38006591796875
    8. ' two' → logprob: -9.88006591796875
    9. ':' → logprob: -10.63006591796875
    10. '_rest' → logprob: -10.63006591796875

Token 1002: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' (adapté à ' m') → logprob: -0.024042649194598198
    2. '   ' → logprob: -3.8990426063537598
    3. ' m' → logprob: -5.77404260635376
    4. '       ' → logprob: -8.149043083190918
    5. '```' → logprob: -9.399043083190918
    6. 'rest' → logprob: -12.149043083190918
    7. '	m' → logprob: -13.024043083190918
    8. 'if' → logprob: -13.399043083190918
    9. '``' → logprob: -13.524043083190918
    10. '_m' → logprob: -13.649043083190918

Token 1003: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029751067981123924
    2. '=' → logprob: -3.5297510623931885
    3. '＝' → logprob: -15.90475082397461
    4. ' =
' → logprob: -16.15475082397461
    5. ' ' → logprob: -16.27975082397461
    6. ',' → logprob: -16.40475082397461
    7. '	' → logprob: -16.52975082397461
    8. ')' → logprob: -17.15475082397461
    9. ' =)' → logprob: -17.27975082397461
    10. ' =(' → logprob: -17.65475082397461

Token 1004: ' F' (ID: 454)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.001194990472868085
    2. ' F' → logprob: -6.751194953918457
    3. '(F' → logprob: -11.626194953918457
    4. ' (' → logprob: -11.876194953918457
    5. '(' → logprob: -12.626194953918457
    6. '   ' → logprob: -12.751194953918457
    7. '(X' → logprob: -13.376194953918457
    8. 'f' → logprob: -14.001194953918457
    9. ' ' → logprob: -16.251195907592773
    10. '       ' → logprob: -17.126195907592773

Token 1005: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.5954712075181305e-05
    2. '(X' → logprob: -10.750036239624023
    3. '(' → logprob: -11.250036239624023
    4. '(n' → logprob: -14.875036239624023
    5. '1' → logprob: -15.125036239624023
    6. '```' → logprob: -15.250036239624023
    7. 'unction' → logprob: -15.625036239624023
    8. '(x' → logprob: -15.875036239624023
    9. 'n' → logprob: -16.000036239624023
    10. 'X' → logprob: -16.500036239624023

Token 1006: '_calc' (ID: 107191)
  Prédit: '_calc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_calc' → logprob: -9.491498531133402e-06
    2. '_cal' → logprob: -12.875009536743164
    3. 'Calc' → logprob: -13.125009536743164
    4. 'calc' → logprob: -13.250009536743164
    5. '(X' → logprob: -14.250009536743164
    6. '```' → logprob: -14.375009536743164
    7. '(n' → logprob: -15.375009536743164
    8. '(C' → logprob: -15.750009536743164
    9. 'n' → logprob: -15.875009536743164
    10. '(calc' → logprob: -16.000009536743164

Token 1007: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.3316623866558075
    2. '(X' → logprob: -1.4566624164581299
    3. 'm' → logprob: -3.08166241645813
    4. ',' → logprob: -6.831662178039551
    5. '(x' → logprob: -6.956662178039551
    6. '_n' → logprob: -7.581662178039551
    7. 'n' → logprob: -8.20666217803955
    8. '(' → logprob: -8.70666217803955
    9. '   ' → logprob: -8.95666217803955
    10. '```' → logprob: -9.95666217803955

Token 1008: '(X' (ID: 17061)
  Prédit: '(X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -0.0004599823441822082
    2. '(' → logprob: -7.875460147857666
    3. '(x' → logprob: -9.625459671020508
    4. '(N' → logprob: -11.750459671020508
    5. '(n' → logprob: -12.875459671020508
    6. 'X' → logprob: -13.875459671020508
    7. ' (' → logprob: -14.125459671020508
    8. '```' → logprob: -14.500459671020508
    9. '=' → logprob: -15.250459671020508
    10. '(
' → logprob: -15.500459671020508

Token 1009: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016439596191048622
    2. ',n' → logprob: -4.141439437866211
    3. '(n' → logprob: -8.391439437866211
    4. ' ,' → logprob: -8.891439437866211
    5. '       ' → logprob: -11.016439437866211
    6. '   ' → logprob: -11.766439437866211
    7. '[n' → logprob: -12.266439437866211
    8. 'n' → logprob: -12.641439437866211
    9. '```' → logprob: -13.141439437866211
    10. ',
' → logprob: -13.891439437866211

Token 1010: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0002036595979006961
    2. ' n' → logprob: -8.500204086303711
    3. '(n' → logprob: -16.12520408630371
    4. '	n' → logprob: -16.62520408630371
    5. '
' → logprob: -16.75020408630371
    6. '   ' → logprob: -17.37520408630371
    7. ')n' → logprob: -17.50020408630371
    8. '_n' → logprob: -17.62520408630371
    9. ')' → logprob: -17.75020408630371
    10. '[n' → logprob: -18.50020408630371

Token 1011: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0487673394382
    2. ')
' → logprob: -3.048767328262329
    3. '()' → logprob: -9.42376708984375
    4. '   ' → logprob: -9.67376708984375
    5. ')
' → logprob: -11.42376708984375
    6. '())' → logprob: -11.42376708984375
    7. '())
' → logprob: -12.42376708984375
    8. '()
' → logprob: -13.29876708984375
    9. ' )' → logprob: -13.29876708984375
    10. ')

' → logprob: -13.54876708984375

Token 1012: '       ' (ID: 309)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.7668759226799011
    2. '       ' → logprob: -1.016875982284546
    3. ' two' → logprob: -1.891875982284546
    4. '	t' → logprob: -4.391875743865967
    5. '(two' → logprob: -4.891875743865967
    6. ',t' → logprob: -6.891875743865967
    7. '   ' → logprob: -7.516875743865967
    8. ',' → logprob: -7.516875743865967
    9. '_two' → logprob: -8.516876220703125
    10. '	if' → logprob: -8.516876220703125

Token 1013: ' if' (ID: 538)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.08284302055835724
    2. ' two' → logprob: -3.082843065261841
    3. '	t' → logprob: -4.207842826843262
    4. '   ' → logprob: -4.707842826843262
    5. '       ' → logprob: -4.707842826843262
    6. '(two' → logprob: -7.457842826843262
    7. '[t' → logprob: -9.457842826843262
    8. '           ' → logprob: -10.957842826843262
    9. ',t' → logprob: -11.082842826843262
    10. '```' → logprob: -11.207842826843262

Token 1014: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.6932311058044434
    2. ' m' → logprob: -0.6932311058044434
    3. ' not' → logprob: -10.568231582641602
    4. 'n' → logprob: -10.943231582641602
    5. ' n' → logprob: -11.193231582641602
    6. 'not' → logprob: -11.443231582641602
    7. '(m' → logprob: -11.568231582641602
    8. '(' → logprob: -14.068231582641602
    9. 'x' → logprob: -14.068231582641602
    10. ' two' → logprob: -14.068231582641602

Token 1015: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.4779124855995178
    2. '<' → logprob: -1.102912425994873
    3. ' >=' → logprob: -4.227912425994873
    4. '>=' → logprob: -4.602912425994873
    5. ' <=' → logprob: -4.727912425994873
    6. '<=' → logprob: -4.977912425994873
    7. '>' → logprob: -5.102912425994873
    8. ' >' → logprob: -6.477912425994873
    9. ' ' → logprob: -11.602912902832031
    10. '=' → logprob: -11.602912902832031

Token 1016: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00017815368482843041
    2. ' ' → logprob: -9.250178337097168
    3. '2' → logprob: -9.625178337097168
    4. '4' → logprob: -12.375178337097168
    5. '1' → logprob: -12.500178337097168
    6. '=' → logprob: -13.500178337097168
    7. '3' → logprob: -13.625178337097168
    8. '
' → logprob: -13.625178337097168
    9. '   ' → logprob: -13.625178337097168
    10. '```' → logprob: -13.750178337097168

Token 1017: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003258103388361633
    2. '2' → logprob: -8.375326156616211
    3. '4' → logprob: -10.500326156616211
    4. '1' → logprob: -10.875326156616211
    5. ' ' → logprob: -11.000326156616211
    6. '3' → logprob: -11.125326156616211
    7. '=' → logprob: -12.500326156616211
    8. '-' → logprob: -12.500326156616211
    9. '(' → logprob: -12.750326156616211
    10. '6' → logprob: -13.375326156616211

Token 1018: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19511038064956665
    2. ':' → logprob: -2.195110321044922
    3. ':
' → logprob: -3.070110321044922
    4. '           ' → logprob: -3.945110321044922
    5. ',' → logprob: -10.195110321044922
    6. '():
' → logprob: -11.070110321044922
    7. ' or' → logprob: -11.070110321044922
    8. '   ' → logprob: -11.320110321044922
    9. '               ' → logprob: -11.320110321044922
    10. ':return' → logprob: -11.695110321044922

Token 1019: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004513312131166458
    2. '       ' → logprob: -5.504513263702393
    3. 'continue' → logprob: -8.50451374053955
    4. ' continue' → logprob: -9.12951374053955
    5. '```' → logprob: -10.00451374053955
    6. '	       ' → logprob: -10.50451374053955
    7. '               ' → logprob: -10.62951374053955
    8. '<|end|>' → logprob: -11.87951374053955
    9. '		' → logprob: -12.37951374053955
    10. 'break' → logprob: -12.75451374053955

Token 1020: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7074912786483765
    2. 'break' (adapté à ' break') → logprob: -0.7074912786483765
    3. 'continue' → logprob: -4.457491397857666
    4. ' break' → logprob: -6.582491397857666
    5. '       ' → logprob: -7.082491397857666
    6. 'return' → logprob: -9.082490921020508
    7. '	break' → logprob: -9.207490921020508
    8. '               ' → logprob: -9.457490921020508
    9. ' continue' → logprob: -9.957490921020508
    10. '
' → logprob: -10.082490921020508

Token 1021: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004467623773962259
    2. ' two' → logprob: -5.754467487335205
    3. 'two' → logprob: -7.004467487335205
    4. 'Two' → logprob: -9.004467964172363
    5. '<|end|>' → logprob: -9.754467964172363
    6. '```' → logprob: -10.004467964172363
    7. ',' → logprob: -10.254467964172363
    8. '(two' → logprob: -10.379467964172363
    9. '        
' → logprob: -10.754467964172363
    10. '
' → logprob: -11.129467964172363

Token 1022: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019303778186440468
    2. 'two' → logprob: -4.144303798675537
    3. ' two' → logprob: -5.769303798675537
    4. 'continue' → logprob: -9.644303321838379
    5. '```' → logprob: -10.769303321838379
    6. '   ' → logprob: -11.269303321838379
    7. '(two' → logprob: -11.394303321838379
    8. 'Two' → logprob: -11.644303321838379
    9. '
' → logprob: -11.644303321838379
    10. '           ' → logprob: -11.894303321838379

Token 1023: ' two' (ID: 1920)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' (adapté à ' two') → logprob: -0.24423466622829437
    2. '       ' → logprob: -1.6192346811294556
    3. ' two' → logprob: -3.994234561920166
    4. '   ' → logprob: -9.369235038757324
    5. '(two' → logprob: -9.369235038757324
    6. '           ' → logprob: -11.369235038757324
    7. '	t' → logprob: -11.994235038757324
    8. '_two' → logprob: -12.119235038757324
    9. '.two' → logprob: -12.244235038757324
    10. 'rest' → logprob: -12.494235038757324

Token 1024: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015278366627171636
    2. ' =' → logprob: -7.126527786254883
    3. '=' → logprob: -7.376527786254883
    4. ' ,' → logprob: -9.626527786254883
    5. ',t' → logprob: -11.501527786254883
    6. ' +=' → logprob: -12.126527786254883
    7. '+=' → logprob: -12.251527786254883
    8. '[:,' → logprob: -13.001527786254883
    9. '[:]' → logprob: -13.876527786254883
    10. ',
' → logprob: -14.001527786254883

Token 1025: ' one' (ID: 1001)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.3868717551231384
    2. ' one' → logprob: -1.1368718147277832
    3. '(one' → logprob: -14.761871337890625
    4. '_one' → logprob: -15.511871337890625
    5. 'One' → logprob: -16.386871337890625
    6. '.one' → logprob: -17.136871337890625
    7. '1' → logprob: -18.136871337890625
    8. ' ' → logprob: -18.886871337890625
    9. '   ' → logprob: -19.011871337890625
    10. ' ' → logprob: -19.386871337890625

Token 1026: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519378066062927
    2. ' =' → logprob: -1.5019378662109375
    3. ',' → logprob: -11.751937866210938
    4. ')' → logprob: -15.376937866210938
    5. '=np' → logprob: -16.001937866210938
    6. '＝' → logprob: -16.376937866210938
    7. '=
' → logprob: -16.501937866210938
    8. '=t' → logprob: -16.751937866210938
    9. ')=' → logprob: -16.876937866210938
    10. ' ' → logprob: -17.126937866210938

Token 1027: ' F' (ID: 454)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.16025479137897491
    2. ' F' → logprob: -1.9102548360824585
    3. '(F' → logprob: -10.53525447845459
    4. ' =' → logprob: -13.91025447845459
    5. '_F' → logprob: -14.53525447845459
    6. '	F' → logprob: -14.53525447845459
    7. ' (' → logprob: -14.66025447845459
    8. ' ' → logprob: -14.78525447845459
    9. '<F' → logprob: -15.16025447845459
    10. '(' → logprob: -15.28525447845459

Token 1028: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0752323642373085
    2. '_construct' → logprob: -3.0752322673797607
    3. '_two' → logprob: -4.20023250579834
    4. 'two' → logprob: -5.57523250579834
    5. '(two' → logprob: -5.95023250579834
    6. '_and' → logprob: -5.95023250579834
    7. 'and' → logprob: -7.20023250579834
    8. 'construct' → logprob: -7.57523250579834
    9. 'F' → logprob: -8.32523250579834
    10. '```' → logprob: -9.32523250579834

Token 1029: '_construct' (ID: 187414)
  Prédit: '_construct'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_construct' → logprob: -0.00034714414505288005
    2. 'construct' → logprob: -8.500347137451172
    3. '_two' → logprob: -10.375347137451172
    4. 'two' → logprob: -10.750347137451172
    5. '_calc' → logprob: -11.000347137451172
    6. '(two' → logprob: -11.250347137451172
    7. '_convert' → logprob: -11.500347137451172
    8. '_cal' → logprob: -11.500347137451172
    9. '(' → logprob: -11.500347137451172
    10. '_Construct' → logprob: -11.750347137451172

Token 1030: '_two' (ID: 54305)
  Prédit: '_two'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_two' → logprob: -0.5317319631576538
    2. '(m' → logprob: -1.2817319631576538
    3. '(two' → logprob: -2.5317320823669434
    4. 'two' → logprob: -2.9067320823669434
    5. '(' → logprob: -8.281731605529785
    6. '_m' → logprob: -8.906731605529785
    7. '```' → logprob: -9.156731605529785
    8. 'm' → logprob: -9.781731605529785
    9. '_one' → logprob: -10.156731605529785
    10. ' two' → logprob: -10.781731605529785

Token 1031: '_and' (ID: 18645)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.13390395045280457
    2. 'and' → logprob: -2.258903980255127
    3. '_and' → logprob: -3.883903980255127
    4. 'm' → logprob: -8.883903503417969
    5. '(' → logprob: -9.758903503417969
    6. '(two' → logprob: -10.633903503417969
    7. 'And' → logprob: -11.008903503417969
    8. ' and' → logprob: -11.008903503417969
    9. '(and' → logprob: -11.383903503417969
    10. 'two' → logprob: -12.258903503417969

Token 1032: '_one' (ID: 26979)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.04285130649805069
    2. 'm' → logprob: -3.542851209640503
    3. 'one' → logprob: -4.792851448059082
    4. '(m' → logprob: -5.667851448059082
    5. '(two' → logprob: -6.917851448059082
    6. '_two' → logprob: -8.667851448059082
    7. 'np' → logprob: -9.792851448059082
    8. '(one' → logprob: -11.667851448059082
    9. '[m' → logprob: -12.042851448059082
    10. '<m' → logprob: -12.167851448059082

Token 1033: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -16.25
    3. 'm' → logprob: -17.0
    4. '(
' → logprob: -17.375
    5. '   ' → logprob: -17.625
    6. ' (' → logprob: -18.5
    7. '[m' → logprob: -18.625
    8. ',m' → logprob: -18.875
    9. '	m' → logprob: -19.375
    10. '```' → logprob: -19.5

Token 1034: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.021439924836158752
    2. ')
' → logprob: -3.896440029144287
    3. '   ' → logprob: -7.021440029144287
    4. ',' → logprob: -13.146439552307129
    5. '       ' → logprob: -14.021439552307129
    6. ')
' → logprob: -14.646439552307129
    7. '()' → logprob: -14.646439552307129
    8. ' )' → logprob: -15.521439552307129
    9. ',)' → logprob: -15.646439552307129
    10. '[' → logprob: -15.771439552307129

Token 1035: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07362211495637894
    2. '   ' → logprob: -3.198622226715088
    3. 'coef' → logprob: -3.823622226715088
    4. 'rest' → logprob: -5.448622226715088
    5. '```' → logprob: -6.323622226715088
    6. ' coef' → logprob: -6.948622226715088
    7. ',' → logprob: -7.073622226715088
    8. ' rest' → logprob: -8.57362174987793
    9. '(rest' → logprob: -10.19862174987793
    10. '
' → logprob: -10.57362174987793

Token 1036: ' coef' (ID: 107584)
  Prédit: 'coef'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coef' (adapté à ' coef') → logprob: -0.02022780105471611
    2. '   ' → logprob: -4.020227909088135
    3. 'rest' → logprob: -6.770227909088135
    4. '       ' → logprob: -7.020227909088135
    5. ' coef' → logprob: -11.770227432250977
    6. '```' → logprob: -11.895227432250977
    7. 'coeff' → logprob: -12.270227432250977
    8. 'co' → logprob: -12.520227432250977
    9. '           ' → logprob: -12.645227432250977
    10. 'coe' → logprob: -12.770227432250977

Token 1037: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740773141384125
    2. ' =' → logprob: -0.9740773439407349
    3. 's' → logprob: -15.974077224731445
    4. ',' → logprob: -16.224077224731445
    5. '=
' → logprob: -17.974077224731445
    6. 'F' → logprob: -17.974077224731445
    7. ')' → logprob: -18.474077224731445
    8. '=f' → logprob: -18.474077224731445
    9. '＝' → logprob: -18.724077224731445
    10. ' ' → logprob: -18.849077224731445

Token 1038: ' F' (ID: 454)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.00975927896797657
    2. ' F' → logprob: -4.634759426116943
    3. '(F' → logprob: -13.884758949279785
    4. '   ' → logprob: -13.884758949279785
    5. 'f' → logprob: -14.509758949279785
    6. 'np' → logprob: -15.134758949279785
    7. ' ' → logprob: -15.134758949279785
    8. '(' → logprob: -15.634758949279785
    9. '_F' → logprob: -16.0097599029541
    10. '	F' → logprob: -16.3847599029541

Token 1039: '2' (ID: 17)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.23457768559455872
    2. 'act' → logprob: -1.6095776557922363
    3. '[
' → logprob: -6.359577655792236
    4. '[np' → logprob: -6.359577655792236
    5. 'actor' → logprob: -6.484577655792236
    6. 'two' → logprob: -6.734577655792236
    7. '2' → logprob: -6.859577655792236
    8. 'fact' → logprob: -7.609577655792236
    9. '[:' → logprob: -8.484578132629395
    10. '[[' → logprob: -8.734578132629395

Token 1040: '_calc' (ID: 107191)
  Prédit: '_calc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_calc' → logprob: -0.0012524925405159593
    2. 'calc' → logprob: -6.7512526512146
    3. '_mul' → logprob: -10.251252174377441
    4. '_coef' → logprob: -10.751252174377441
    5. '_cal' → logprob: -11.001252174377441
    6. '.calc' → logprob: -13.751252174377441
    7. 'Calc' → logprob: -13.751252174377441
    8. '_compute' → logprob: -13.876252174377441
    9. '```' → logprob: -14.001252174377441
    10. 'coef' → logprob: -14.251252174377441

Token 1041: '_coef' (ID: 162984)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.001421664608642459
    2. ',f' → logprob: -7.5014214515686035
    3. ',' → logprob: -7.8764214515686035
    4. 'fact' → logprob: -8.376421928405762
    5. 'coef' → logprob: -8.626421928405762
    6. '(' → logprob: -10.376421928405762
    7. '_coef' → logprob: -11.251421928405762
    8. 'f' → logprob: -11.501421928405762
    9. '```' → logprob: -11.626421928405762
    10. 'factor' → logprob: -12.376421928405762

Token 1042: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.0003000696888193488
    2. '(' → logprob: -8.125300407409668
    3. '(
' → logprob: -13.500300407409668
    4. ',' → logprob: -13.750300407409668
    5. ',f' → logprob: -14.250300407409668
    6. '```' → logprob: -15.375300407409668
    7. '(fun' → logprob: -15.875300407409668
    8. '(F' → logprob: -16.00029945373535
    9. ' (' → logprob: -16.25029945373535
    10. '(fi' → logprob: -17.00029945373535

Token 1043: 'act' (ID: 588)
  Prédit: 'act'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'act' → logprob: -0.2815055847167969
    2. 'fact' → logprob: -1.4065055847167969
    3. '[' → logprob: -9.281505584716797
    4. ' fact' → logprob: -9.906505584716797
    5. ',' → logprob: -10.031505584716797
    6. '```' → logprob: -10.156505584716797
    7. '(act' → logprob: -10.156505584716797
    8. '_fact' → logprob: -10.281505584716797
    9. 'ct' → logprob: -11.531505584716797
    10. '.fact' → logprob: -12.031505584716797

Token 1044: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002969703928101808
    2. ',f' → logprob: -8.250296592712402
    3. ' ,' → logprob: -11.750296592712402
    4. ',
' → logprob: -11.875296592712402
    5. '[' → logprob: -11.875296592712402
    6. ',t' → logprob: -12.375296592712402
    7. '=' → logprob: -13.750296592712402
    8. 'f' → logprob: -13.875296592712402
    9. ')' → logprob: -14.000296592712402
    10. '```' → logprob: -14.125296592712402

Token 1045: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.006719871424138546
    2. ' fact' → logprob: -5.006720066070557
    3. 'factor' → logprob: -12.881719589233398
    4. '_fact' → logprob: -14.881719589233398
    5. 'F' → logprob: -15.006719589233398
    6. 'f' → logprob: -15.256719589233398
    7. 'rest' → logprob: -15.381719589233398
    8. '.fact' → logprob: -15.631719589233398
    9. 'coef' → logprob: -15.881719589233398
    10. '```' → logprob: -15.881719589233398

Token 1046: '_inv' (ID: 53427)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.0006608496769331396
    2. ',' → logprob: -7.8756608963012695
    3. 'inv' → logprob: -9.00066089630127
    4. ' one' → logprob: -9.50066089630127
    5. '(one' → logprob: -10.37566089630127
    6. 'two' → logprob: -11.00066089630127
    7. '_inv' → logprob: -11.12566089630127
    8. '
' → logprob: -11.25066089630127
    9. '_one' → logprob: -13.25066089630127
    10. '```' → logprob: -13.50066089630127

Token 1047: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03311154246330261
    2. '(one' → logprob: -3.533111572265625
    3. '(two' → logprob: -6.283111572265625
    4. 'one' → logprob: -7.283111572265625
    5. ',t' → logprob: -7.408111572265625
    6. 'two' → logprob: -8.658111572265625
    7. ' one' → logprob: -11.783111572265625
    8. ' ,' → logprob: -12.283111572265625
    9. ' two' → logprob: -12.533111572265625
    10. '(' → logprob: -13.408111572265625

Token 1048: ' one' (ID: 1001)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.0005535095697268844
    2. ' one' → logprob: -7.500553607940674
    3. '(one' → logprob: -15.125553131103516
    4. 'two' → logprob: -16.125553131103516
    5. '   ' → logprob: -16.500553131103516
    6. '
' → logprob: -16.875553131103516
    7. '1' → logprob: -17.375553131103516
    8. '.one' → logprob: -20.000553131103516
    9. '```' → logprob: -20.375553131103516
    10. ' ' → logprob: -20.375553131103516

Token 1049: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006388116744346917
    2. ',t' → logprob: -7.375638961791992
    3. ' ,' → logprob: -11.625638961791992
    4. 'two' → logprob: -14.000638961791992
    5. ',
' → logprob: -14.125638961791992
    6. '[' → logprob: -14.625638961791992
    7. ' two' → logprob: -15.250638961791992
    8. '```' → logprob: -15.375638961791992
    9. '[:,' → logprob: -15.500638961791992
    10. '[t' → logprob: -15.875638961791992

Token 1050: ' two' (ID: 1920)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.0788901224732399
    2. ' two' → logprob: -2.578890085220337
    3. '(two' → logprob: -15.078889846801758
    4. 'tw' → logprob: -17.203889846801758
    5. 'Two' → logprob: -18.578889846801758
    6. '_two' → logprob: -18.953889846801758
    7. '   ' → logprob: -19.453889846801758
    8. ' ' → logprob: -19.453889846801758
    9. '.two' → logprob: -19.453889846801758
    10. '
' → logprob: -20.828889846801758

Token 1051: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.538490950129926e-05
    2. ' ,' → logprob: -9.875055313110352
    3. '```' → logprob: -13.375055313110352
    4. ')' → logprob: -13.500055313110352
    5. ',
' → logprob: -15.500055313110352
    6. '%' → logprob: -15.500055313110352
    7. '   ' → logprob: -15.875055313110352
    8. '[' → logprob: -16.25005531311035
    9. '%,' → logprob: -16.50005531311035
    10. '[:,' → logprob: -16.87505531311035

Token 1052: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.00033546582562848926
    2. ' MOD' → logprob: -8.000335693359375
    3. '_MOD' → logprob: -17.625335693359375
    4. '.MOD' → logprob: -19.000335693359375
    5. 'M' → logprob: -20.250335693359375
    6. 'MODE' → logprob: -22.000335693359375
    7. 'mod' → logprob: -22.750335693359375
    8. '[' → logprob: -23.000335693359375
    9. 'MODULE' → logprob: -23.000335693359375
    10. '
' → logprob: -23.375335693359375

Token 1053: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0019279246916994452
    2. ' )' → logprob: -6.751927852630615
    3. '   ' → logprob: -8.126928329467773
    4. ',' → logprob: -8.626928329467773
    5. '<|end|>' → logprob: -8.876928329467773
    6. ')
' → logprob: -10.001928329467773
    7. '%' → logprob: -10.876928329467773
    8. '[' → logprob: -11.001928329467773
    9. '%)' → logprob: -11.376928329467773
    10. ')%' → logprob: -11.501928329467773

Token 1054: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39007049798965454
    2. '<|end|>' → logprob: -1.7650704383850098
    3. '       ' → logprob: -2.6400704383850098
    4. 'rest' → logprob: -3.3900704383850098
    5. '(rest' → logprob: -4.14007043838501
    6. '```' → logprob: -4.89007043838501
    7. ',' → logprob: -5.14007043838501
    8. '[ind' → logprob: -5.14007043838501
    9. ' rest' → logprob: -5.76507043838501
    10. '.rest' → logprob: -6.64007043838501

Token 1055: ' rest' (ID: 2867)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' (adapté à ' rest') → logprob: -0.008218562230467796
    2. '       ' → logprob: -5.008218765258789
    3. 'two' → logprob: -6.758218765258789
    4. 'coef' → logprob: -8.633218765258789
    5. 'x' → logprob: -9.758218765258789
    6. ' rest' → logprob: -10.008218765258789
    7. 'one' → logprob: -10.883218765258789
    8. '   ' → logprob: -11.008218765258789
    9. '(rest' → logprob: -12.133218765258789
    10. 'coeff' → logprob: -12.383218765258789

Token 1056: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1036447212100029
    2. '=' → logprob: -2.478644609451294
    3. ' =' → logprob: -4.228644847869873
    4. ' ,' → logprob: -10.853644371032715
    5. '=np' → logprob: -14.228644371032715
    6. '<|end|>' → logprob: -14.353644371032715
    7. '‌,' → logprob: -14.853644371032715
    8. ',F' → logprob: -15.103644371032715
    9. ',x' → logprob: -15.228644371032715
    10. '   ' → logprob: -15.228644371032715

Token 1057: ' N' (ID: 478)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.6423712968826294
    2. 'np' → logprob: -1.7673712968826294
    3. 'N' → logprob: -2.39237117767334
    4. 'X' → logprob: -2.64237117767334
    5. ' one' → logprob: -2.89237117767334
    6. 'n' → logprob: -3.14237117767334
    7. 'two' → logprob: -4.51737117767334
    8. ' np' → logprob: -4.89237117767334
    9. ' N' → logprob: -5.26737117767334
    10. ' X' → logprob: -5.39237117767334

Token 1058: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5761032700538635
    2. '-' → logprob: -0.8261032700538635
    3. '-n' → logprob: -8.951103210449219
    4. '=' → logprob: -11.576103210449219
    5. '[' → logprob: -11.701103210449219
    6. '-two' → logprob: -12.576103210449219
    7. ' ' → logprob: -13.076103210449219
    8. '-F' → logprob: -13.451103210449219
    9. '   ' → logprob: -13.451103210449219
    10. '<|end|>' → logprob: -14.076103210449219

Token 1059: ' one' (ID: 1001)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.989713191986084
    2. '(' → logprob: -1.114713191986084
    3. 'one' → logprob: -1.489713191986084
    4. 'two' → logprob: -3.739713191986084
    5. '(one' → logprob: -3.864713191986084
    6. 'n' → logprob: -4.614713191986084
    7. '(n' → logprob: -5.114713191986084
    8. '(two' → logprob: -5.114713191986084
    9. ' (' → logprob: -5.989713191986084
    10. '1' → logprob: -6.114713191986084

Token 1060: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.07898396998643875
    2. '-' → logprob: -2.578984022140503
    3. '-two' → logprob: -9.703984260559082
    4. ' two' → logprob: -11.078984260559082
    5. '-t' → logprob: -11.578984260559082
    6. '```' → logprob: -13.453984260559082
    7. '_two' → logprob: -13.453984260559082
    8. '[' → logprob: -13.703984260559082
    9. ' ' → logprob: -14.078984260559082
    10. 'Two' → logprob: -14.328984260559082

Token 1061: ' two' (ID: 1920)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.009896686300635338
    2. 'two' → logprob: -5.009896755218506
    3. '(' → logprob: -6.509896755218506
    4. ' ' → logprob: -7.259896755218506
    5. 'n' → logprob: -7.884896755218506
    6. '(two' → logprob: -8.134896278381348
    7. '(n' → logprob: -9.134896278381348
    8. '   ' → logprob: -9.759896278381348
    9. ' two' → logprob: -10.259896278381348
    10. '1' → logprob: -10.634896278381348

Token 1062: ' -' (ID: 533)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006456597708165646
    2. '<|end|>' → logprob: -5.38145637512207
    3. '       ' → logprob: -6.63145637512207
    4. '   ' → logprob: -8.75645637512207
    5. ' ,' → logprob: -8.75645637512207
    6. '[' → logprob: -9.75645637512207
    7. '<|end|>' → logprob: -9.75645637512207
    8. '[...,' → logprob: -11.63145637512207
    9. ',t' → logprob: -11.75645637512207
    10. ',
' → logprob: -11.88145637512207

Token 1063: ' (' (ID: 350)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.16784609854221344
    2. '2' → logprob: -2.167846202850342
    3. 'two' → logprob: -3.917846202850342
    4. '(' → logprob: -4.667846202850342
    5. '(n' → logprob: -5.417846202850342
    6. '   ' → logprob: -6.792846202850342
    7. '1' → logprob: -6.792846202850342
    8. '(two' → logprob: -7.042846202850342
    9. '3' → logprob: -7.167846202850342
    10. ' n' → logprob: -7.167846202850342

Token 1064: '2' (ID: 17)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3278108537197113
    2. '2' → logprob: -1.3278108835220337
    3. 'two' → logprob: -5.077810764312744
    4. '(' → logprob: -5.702810764312744
    5. '(n' → logprob: -6.202810764312744
    6. '1' → logprob: -6.702810764312744
    7. ' n' → logprob: -8.077811241149902
    8. '3' → logprob: -8.327811241149902
    9. '(two' → logprob: -8.327811241149902
    10. ' ' → logprob: -8.452811241149902

Token 1065: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.3204624056816101
    2. ' *' → logprob: -1.3204624652862549
    3. '*n' → logprob: -4.945462226867676
    4. 'n' → logprob: -10.945462226867676
    5. ')' → logprob: -11.820462226867676
    6. ' ' → logprob: -12.070462226867676
    7. '*)' → logprob: -12.070462226867676
    8. '   ' → logprob: -12.070462226867676
    9. ' n' → logprob: -13.320462226867676
    10. ' ' → logprob: -13.695462226867676

Token 1066: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00010044389637187123
    2. 'two' → logprob: -9.875100135803223
    3. ' n' → logprob: -10.125100135803223
    4. 'np' → logprob: -12.500100135803223
    5. '*n' → logprob: -14.000100135803223
    6. '
' → logprob: -14.125100135803223
    7. ')n' → logprob: -14.375100135803223
    8. '(n' → logprob: -14.625100135803223
    9. '(two' → logprob: -14.750100135803223
    10. ' two' → logprob: -15.125100135803223

Token 1067: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023422615602612495
    2. ')
' → logprob: -3.7734227180480957
    3. '-' → logprob: -9.898422241210938
    4. '*' → logprob: -10.773422241210938
    5. '[' → logprob: -10.898422241210938
    6. ')

' → logprob: -10.898422241210938
    7. '<|end|>' → logprob: -11.273422241210938
    8. ' )' → logprob: -11.523422241210938
    9. '```' → logprob: -11.648422241210938
    10. '   ' → logprob: -11.898422241210938

Token 1068: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2161847949028015
    2. '1' → logprob: -1.7161848545074463
    3. '3' → logprob: -4.341184616088867
    4. ' ' → logprob: -7.341184616088867
    5. '4' → logprob: -7.466184616088867
    6. '0' → logprob: -8.216184616088867
    7. '```' → logprob: -9.841184616088867
    8. '   ' → logprob: -10.716184616088867
    9. 'np' → logprob: -10.716184616088867
    10. '5' → logprob: -11.466184616088867

Token 1069: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.525428831577301
    2. '1' → logprob: -0.900428831577301
    3. '3' → logprob: -6.150428771972656
    4. '0' → logprob: -9.525428771972656
    5. '4' → logprob: -9.650428771972656
    6. ' ' → logprob: -11.025428771972656
    7. '```' → logprob: -12.150428771972656
    8. 'F' → logprob: -12.775428771972656
    9. '   ' → logprob: -12.900428771972656
    10. '5' → logprob: -13.587928771972656

Token 1070: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007862843573093414
    2. ')
' → logprob: -4.8828630447387695
    3. ' )' → logprob: -9.00786304473877
    4. '*' → logprob: -10.63286304473877
    5. '+' → logprob: -10.63286304473877
    6. '[' → logprob: -10.88286304473877
    7. ')

' → logprob: -11.13286304473877
    8. 'def' → logprob: -11.13286304473877
    9. '   ' → logprob: -11.88286304473877
    10. '```' → logprob: -12.50786304473877

Token 1071: '       ' (ID: 309)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.27869316935539246
    2. '       ' → logprob: -1.5286931991577148
    3. 'rest' → logprob: -4.528693199157715
    4. '   ' → logprob: -4.903693199157715
    5. '(rest' → logprob: -5.903693199157715
    6. '<|end|>' → logprob: -5.903693199157715
    7. ' rest' → logprob: -7.153693199157715
    8. ',
' → logprob: -7.403693199157715
    9. '
' → logprob: -7.653693199157715
    10. ' two' → logprob: -9.153693199157715

Token 1072: ' rest' (ID: 2867)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' (adapté à ' rest') → logprob: -0.023422032594680786
    2. 'two' → logprob: -4.1484222412109375
    3. '       ' → logprob: -5.5234222412109375
    4. ' two' → logprob: -6.3984222412109375
    5. ' rest' → logprob: -7.1484222412109375
    6. 'coef' → logprob: -7.3984222412109375
    7. 'coeff' → logprob: -9.523422241210938
    8. 'ind' → logprob: -9.523422241210938
    9. 'co' → logprob: -9.898422241210938
    10. '(rest' → logprob: -10.398422241210938

Token 1073: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006503270473331213
    2. '=' → logprob: -5.131503105163574
    3. ' =' → logprob: -8.006503105163574
    4. '<|end|>' → logprob: -9.006503105163574
    5. '>=' → logprob: -10.631503105163574
    6. '_rest' → logprob: -11.006503105163574
    7. ' ,' → logprob: -11.256503105163574
    8. '_,' → logprob: -11.881503105163574
    9. '_filtered' → logprob: -12.131503105163574
    10. '_coef' → logprob: -12.131503105163574

Token 1074: ' coef' (ID: 107584)
  Prédit: 'coef'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coef' → logprob: -0.47407862544059753
    2. ' coef' → logprob: -0.9740786552429199
    3. 'co' → logprob: -14.349078178405762
    4. '_coef' → logprob: -14.724078178405762
    5. 'coe' → logprob: -14.974078178405762
    6. 'coeff' → logprob: -15.849078178405762
    7. '(co' → logprob: -16.849079132080078
    8. '=' → logprob: -17.974079132080078
    9. '   ' → logprob: -17.974079132080078
    10. ' cole' → logprob: -18.349079132080078

Token 1075: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05500065162777901
    2. ' =' → logprob: -2.9300005435943604
    3. ',' → logprob: -9.055000305175781
    4. '=
' → logprob: -14.305000305175781
    5. '<|end|>' → logprob: -15.680000305175781
    6. '=x' → logprob: -16.05500030517578
    7. '=_' → logprob: -16.18000030517578
    8. ')' → logprob: -16.43000030517578
    9. '=user' → logprob: -17.05500030517578
    10. '=np' → logprob: -17.18000030517578

Token 1076: ' F' (ID: 454)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.0024763736873865128
    2. ' F' → logprob: -6.002476215362549
    3. '(F' → logprob: -15.127476692199707
    4. 'rest' → logprob: -16.25247573852539
    5. 'np' → logprob: -16.75247573852539
    6. '   ' → logprob: -16.87747573852539
    7. '_F' → logprob: -17.25247573852539
    8. '(' → logprob: -17.37747573852539
    9. '	F' → logprob: -17.62747573852539
    10. ' rest' → logprob: -17.75247573852539

Token 1077: '2' (ID: 17)
  Prédit: '_filter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_filter' → logprob: -0.06849468499422073
    2. '2' → logprob: -2.9434947967529297
    3. 'ilter' → logprob: -4.56849479675293
    4. 'filter' → logprob: -5.81849479675293
    5. 'Filter' → logprob: -9.44349479675293
    6. 'F' → logprob: -9.94349479675293
    7. 'ILTER' → logprob: -11.19349479675293
    8. 'FILTER' → logprob: -11.44349479675293
    9. '_Filter' → logprob: -11.81849479675293
    10. '-filter' → logprob: -12.19349479675293

Token 1078: '_filter' (ID: 19830)
  Prédit: '_filter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_filter' → logprob: -0.0430377833545208
    2. '=' → logprob: -3.6680378913879395
    3. 'filter' → logprob: -4.2930378913879395
    4. 'rest' → logprob: -6.0430378913879395
    5. 'Filter' → logprob: -8.668037414550781
    6. '_Filter' → logprob: -9.168037414550781
    7. '-filter' → logprob: -10.293037414550781
    8. '_FILTER' → logprob: -10.418037414550781
    9. '_rest' → logprob: -10.418037414550781
    10. 'ilter' → logprob: -10.418037414550781

Token 1079: '_rest' (ID: 70749)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.18008607625961304
    2. '(rest' → logprob: -1.9300861358642578
    3. '_rest' → logprob: -3.930086135864258
    4. ' rest' → logprob: -11.055086135864258
    5. '.rest' → logprob: -12.555086135864258
    6. '```' → logprob: -13.305086135864258
    7. '   ' → logprob: -14.055086135864258
    8. '(' → logprob: -14.430086135864258
    9. '[' → logprob: -14.805086135864258
    10. '(Rest' → logprob: -15.180086135864258

Token 1080: '(rest' (ID: 117922)
  Prédit: '(rest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(rest' → logprob: -0.000553151941858232
    2. 'rest' → logprob: -7.500553131103516
    3. '.rest' → logprob: -16.125553131103516
    4. '_rest' → logprob: -17.125553131103516
    5. '(Rest' → logprob: -18.125553131103516
    6. ' rest' → logprob: -18.250553131103516
    7. '(' → logprob: -18.250553131103516
    8. '/rest' → logprob: -18.375553131103516
    9. '```' → logprob: -18.500553131103516
    10. '   ' → logprob: -19.000553131103516

Token 1081: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020735491125378758
    2. '[ind' → logprob: -8.87520694732666
    3. ' ,' → logprob: -10.37520694732666
    4. '[' → logprob: -11.12520694732666
    5. ',
' → logprob: -11.75020694732666
    6. '```' → logprob: -12.87520694732666
    7. '   ' → logprob: -13.00020694732666
    8. '(ind' → logprob: -13.75020694732666
    9. ',index' → logprob: -13.75020694732666
    10. '(),' → logprob: -13.75020694732666

Token 1082: ' coef' (ID: 107584)
  Prédit: 'coef'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coef' → logprob: -0.0015041481237858534
    2. ' coef' → logprob: -6.501503944396973
    3. 'coe' → logprob: -13.876503944396973
    4. 'co' → logprob: -14.376503944396973
    5. '   ' → logprob: -15.501503944396973
    6. 'coeff' → logprob: -16.62650489807129
    7. '    ' → logprob: -18.00150489807129
    8. '```' → logprob: -18.12650489807129
    9. '     ' → logprob: -18.25150489807129
    10. '
' → logprob: -18.25150489807129

Token 1083: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7287535071372986
    2. ')
' → logprob: -1.2287535667419434
    3. ',' → logprob: -1.8537535667419434
    4. '   ' → logprob: -2.7287535667419434
    5. '),' → logprob: -6.978753566741943
    6. '       ' → logprob: -7.103753566741943
    7. '<|end|>' → logprob: -7.603753566741943
    8. '[' → logprob: -9.103753089904785
    9. ')
' → logprob: -9.353753089904785
    10. ' ' → logprob: -9.603753089904785

Token 1084: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35242488980293274
    2. '       ' → logprob: -1.3524248600006104
    3. 'x' → logprob: -3.7274248600006104
    4. '```' → logprob: -4.3524250984191895
    5. '<|end|>' → logprob: -7.8524250984191895
    6. 'for' → logprob: -7.8524250984191895
    7. ' x' → logprob: -8.477424621582031
    8. ' for' → logprob: -8.727424621582031
    9. ' ' → logprob: -9.727424621582031
    10. 'import' → logprob: -9.852424621582031

Token 1085: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.0003754999197553843
    2. '   ' → logprob: -8.500375747680664
    3. '       ' → logprob: -8.875375747680664
    4. ' x' → logprob: -10.500375747680664
    5. 'for' → logprob: -13.000375747680664
    6. '```' → logprob: -13.375375747680664
    7. 'F' → logprob: -14.875375747680664
    8. 'import' → logprob: -15.750375747680664
    9. '	x' → logprob: -16.125375747680664
    10. '
' → logprob: -16.125375747680664

Token 1086: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0036525758914649487
    2. ' =' → logprob: -5.628652572631836
    3. ',' → logprob: -10.003652572631836
    4. '+=' → logprob: -12.128652572631836
    5. '[' → logprob: -13.753652572631836
    6. ' +=' → logprob: -14.378652572631836
    7. '[:]' → logprob: -16.628652572631836
    8. '=
' → logprob: -16.878652572631836
    9. '=}' → logprob: -17.253652572631836
    10. '.=' → logprob: -17.378652572631836

Token 1087: ' F' (ID: 454)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.0001239196863025427
    2. ' F' → logprob: -9.000123977661133
    3. 'x' → logprob: -14.875123977661133
    4. 'np' → logprob: -16.000123977661133
    5. '_F' → logprob: -17.625123977661133
    6. '(F' → logprob: -18.625123977661133
    7. ' ' → logprob: -18.750123977661133
    8. '   ' → logprob: -18.875123977661133
    9. '	F' → logprob: -19.500123977661133
    10. '
' → logprob: -20.125123977661133

Token 1088: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00010235115041723475
    2. 'update' → logprob: -9.875102043151855
    3. '_update' → logprob: -10.250102043151855
    4. 'inish' → logprob: -12.375102043151855
    5. '_' → logprob: -13.250102043151855
    6. 'unction' → logprob: -13.500102043151855
    7. '.update' → logprob: -13.500102043151855
    8. '(update' → logprob: -13.875102043151855
    9. 'ilter' → logprob: -14.125102043151855
    10. '₂' → logprob: -14.375102043151855

Token 1089: '_update' (ID: 19528)
  Prédit: '_update'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_update' → logprob: -0.00012737659562844783
    2. 'update' → logprob: -9.500127792358398
    3. '```' → logprob: -10.375127792358398
    4. '(x' → logprob: -12.250127792358398
    5. 'Update' → logprob: -12.625127792358398
    6. '_add' → logprob: -13.125127792358398
    7. '.update' → logprob: -13.750127792358398
    8. '_updated' → logprob: -13.750127792358398
    9. '_UPDATE' → logprob: -14.125127792358398
    10. '+=' → logprob: -14.125127792358398

Token 1090: '_x' (ID: 7054)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.03818148747086525
    2. 'x' → logprob: -3.2881815433502197
    3. '```' → logprob: -9.03818130493164
    4. '(' → logprob: -11.41318130493164
    5. '_x' → logprob: -11.66318130493164
    6. ' x' → logprob: -14.53818130493164
    7. ' (' → logprob: -14.66318130493164
    8. '(
' → logprob: -15.41318130493164
    9. '[x' → logprob: -15.78818130493164
    10. ',x' → logprob: -16.66318130493164

Token 1091: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -4.191489642835222e-05
    2. 'x' → logprob: -10.250041961669922
    3. '(' → logprob: -12.375041961669922
    4. '```' → logprob: -13.625041961669922
    5. '(
' → logprob: -14.250041961669922
    6. ' (' → logprob: -14.750041961669922
    7. ' x' → logprob: -18.000041961669922
    8. '``' → logprob: -19.875041961669922
    9. '`' → logprob: -19.875041961669922
    10. 'def' → logprob: -20.000041961669922

Token 1092: ',' (ID: 11)
  Prédit: '(rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(rest' → logprob: -0.25336208939552307
    2. ',' → logprob: -1.5033620595932007
    3. ',x' → logprob: -7.50336217880249
    4. '(x' → logprob: -7.87836217880249
    5. '(' → logprob: -8.003361701965332
    6. 'rest' → logprob: -9.128361701965332
    7. '```' → logprob: -10.628361701965332
    8. ' ,' → logprob: -11.128361701965332
    9. ' rest' → logprob: -12.128361701965332
    10. '       ' → logprob: -12.628361701965332

Token 1093: ' rest' (ID: 2867)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' → logprob: -2.8444881536415778e-05
    2. ' rest' → logprob: -10.500028610229492
    3. 'x' → logprob: -14.750028610229492
    4. '(rest' → logprob: -15.125028610229492
    5. '   ' → logprob: -16.875028610229492
    6. '
' → logprob: -18.250028610229492
    7. 'rests' → logprob: -18.875028610229492
    8. '```' → logprob: -19.250028610229492
    9. '.rest' → logprob: -19.375028610229492
    10. '       ' → logprob: -19.750028610229492

Token 1094: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002627662615850568
    2. ' ,' → logprob: -8.250263214111328
    3. ',
' → logprob: -14.750263214111328
    4. '```' → logprob: -15.000263214111328
    5. '[' → logprob: -15.125263214111328
    6. '‌,' → logprob: -15.500263214111328
    7. '<|end|>' → logprob: -16.375263214111328
    8. '   ' → logprob: -16.875263214111328
    9. '+' → logprob: -16.875263214111328
    10. ',c' → logprob: -17.000263214111328

Token 1095: ' coef' (ID: 107584)
  Prédit: 'coef'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coef' → logprob: -0.005243002902716398
    2. ' coef' → logprob: -5.255242824554443
    3. 'coe' → logprob: -12.005243301391602
    4. '   ' → logprob: -13.630243301391602
    5. 'co' → logprob: -13.880243301391602
    6. 'coeff' → logprob: -14.755243301391602
    7. ' ' → logprob: -15.880243301391602
    8. '_coef' → logprob: -16.1302433013916
    9. '    ' → logprob: -16.1302433013916
    10. '     ' → logprob: -16.6302433013916

Token 1096: ')
' (ID: 446)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1097: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002719449403230101
    2. '<|end|>' → logprob: -9.125271797180176
    3. ' return' → logprob: -9.750271797180176
    4. '```' → logprob: -10.125271797180176
    5. '	return' → logprob: -10.500271797180176
    6. 'return' → logprob: -10.750271797180176
    7. 'def' → logprob: -12.500271797180176
    8. '   ' → logprob: -12.750271797180176
    9. '+' → logprob: -13.375271797180176
    10. '       ' → logprob: -13.625271797180176

Token 1098: ' x' (ID: 1215)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010043471120297909
    2. 'return' → logprob: -7.126004219055176
    3. ' return' → logprob: -8.626004219055176
    4. '```' → logprob: -11.126004219055176
    5. '	return' → logprob: -12.501004219055176
    6. 'def' → logprob: -13.876004219055176
    7. 'x' (adapté à ' x') → logprob: -15.501004219055176
    8. ',' → logprob: -15.751004219055176
    9. '<|end|>' → logprob: -15.876004219055176
    10. '       ' → logprob: -16.251005172729492

Token 1099: ' %=' (ID: 117035)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1100: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -4.4656579120783135e-05
    2. ' MOD' → logprob: -10.125044822692871
    3. '(M' → logprob: -13.125044822692871
    4. '998' → logprob: -13.875044822692871
    5. '_MOD' → logprob: -14.375044822692871
    6. '(' → logprob: -15.000044822692871
    7. '.MOD' → logprob: -15.375044822692871
    8. '[' → logprob: -16.125043869018555
    9. 'MODE' → logprob: -17.125043869018555
    10. '(Mod' → logprob: -17.250043869018555

Token 1101: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00016432604752480984
    2. 'def' → logprob: -9.250164031982422
    3. '<|end|>' → logprob: -10.125164031982422
    4. '
' → logprob: -11.375164031982422
    5. 'return' → logprob: -11.500164031982422
    6. '    
' → logprob: -13.000164031982422
    7. '	return' → logprob: -13.625164031982422
    8. '```' → logprob: -13.750164031982422
    9. ' return' → logprob: -14.250164031982422
    10. '       ' → logprob: -15.250164031982422

Token 1102: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.034391649067401886
    2. 'def' → logprob: -3.4093916416168213
    3. 'return' → logprob: -7.2843918800354
    4. '```' → logprob: -10.534391403198242
    5. '<|end|>' → logprob: -11.159391403198242
    6. 'x' → logprob: -12.659391403198242
    7. ' return' → logprob: -12.784391403198242
    8. '	return' → logprob: -13.034391403198242
    9. ' ' → logprob: -13.159391403198242
    10. ' def' → logprob: -13.409391403198242

Token 1103: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.01019941084086895
    2. '   ' → logprob: -4.635199546813965
    3. 'result' → logprob: -8.260199546813965
    4. 'def' → logprob: -9.760199546813965
    5. 'res' → logprob: -10.135199546813965
    6. 'x' → logprob: -10.260199546813965
    7. ' return' → logprob: -10.635199546813965
    8. 'ans' → logprob: -11.385199546813965
    9. 'answer' → logprob: -11.760199546813965
    10. 's' → logprob: -13.260199546813965

Token 1104: ' F' (ID: 454)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.013883627019822598
    2. '(x' → logprob: -4.888883590698242
    3. ' x' → logprob: -5.138883590698242
    4. ' (' → logprob: -8.638883590698242
    5. 'F' → logprob: -9.638883590698242
    6. '(F' → logprob: -9.763883590698242
    7. 'np' → logprob: -9.888883590698242
    8. '(np' → logprob: -10.888883590698242
    9. '(' → logprob: -11.138883590698242
    10. ' np' → logprob: -12.763883590698242

Token 1105: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.869639476761222e-05
    2. '(' → logprob: -10.250039100646973
    3. '(x' → logprob: -13.375039100646973
    4. '1' → logprob: -14.125039100646973
    5. 'x' → logprob: -15.375039100646973
    6. 'unction' → logprob: -15.625039100646973
    7. '(N' → logprob: -15.750039100646973
    8. '```' → logprob: -15.750039100646973
    9. '
' → logprob: -16.750038146972656
    10. '[' → logprob: -17.000038146972656

Token 1106: '_finish' (ID: 109520)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.2995295226573944
    2. '(' → logprob: -1.9245295524597168
    3. '<|end|>' → logprob: -2.799529552459717
    4. '(x' → logprob: -4.549529552459717
    5. 'def' → logprob: -4.924529552459717
    6. '(
' → logprob: -5.049529552459717
    7. '```' → logprob: -5.174529552459717
    8. '_return' → logprob: -5.174529552459717
    9. '
' → logprob: -5.924529552459717
    10. 'x' → logprob: -6.174529552459717

Token 1107: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -6.511406809295295e-06
    2. 'x' → logprob: -12.000006675720215
    3. '```' → logprob: -15.625006675720215
    4. '(' → logprob: -17.1250057220459
    5. ' (' → logprob: -17.5000057220459
    6. '`' → logprob: -18.2500057220459
    7. '
' → logprob: -20.2500057220459
    8. 'def' → logprob: -20.3750057220459
    9. '(
' → logprob: -20.6250057220459
    10. ' x' → logprob: -21.1250057220459

Token 1108: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004230954684317112
    2. '(' → logprob: -5.504230976104736
    3. ')' → logprob: -9.879230499267578
    4. '(M' → logprob: -10.629230499267578
    5. '(Mod' → logprob: -11.004230499267578
    6. '(N' → logprob: -11.379230499267578
    7. '(com' → logprob: -11.879230499267578
    8. ' ,' → logprob: -11.879230499267578
    9. '```' → logprob: -12.004230499267578
    10. ',
' → logprob: -12.379230499267578

Token 1109: ' comb' (ID: 4134)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comb' → logprob: -9.627176768844947e-05
    2. ' comb' → logprob: -9.250096321105957
    3. 'com' → logprob: -15.750096321105957
    4. '   ' → logprob: -17.87509536743164
    5. 'Comb' → logprob: -18.37509536743164
    6. 'combo' → logprob: -18.87509536743164
    7. 'combine' → logprob: -19.75009536743164
    8. '```' → logprob: -20.75009536743164
    9. 'combined' → logprob: -20.75009536743164
    10. '_comb' → logprob: -21.00009536743164

Token 1110: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -9.031157969729975e-05
    2. 'comb' → logprob: -9.375090599060059
    3. '[' → logprob: -12.750090599060059
    4. 'b' → logprob: -13.750090599060059
    5. '_comb' → logprob: -14.250090599060059
    6. 'x' → logprob: -14.750090599060059
    7. '[N' → logprob: -16.125089645385742
    8. 'o' → logprob: -16.250089645385742
    9. '(N' → logprob: -17.125089645385742
    10. '(' → logprob: -17.250089645385742

Token 1111: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.5332478142227046e-05
    2. ' ,' → logprob: -11.375015258789062
    3. ')' → logprob: -13.500015258789062
    4. ',
' → logprob: -13.875015258789062
    5. '```' → logprob: -15.125015258789062
    6. ',N' → logprob: -15.625015258789062
    7. '   ' → logprob: -15.750015258789062
    8. ',)' → logprob: -15.875015258789062
    9. '`,' → logprob: -15.875015258789062
    10. '(' → logprob: -16.375015258789062

Token 1112: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0015045057516545057
    2. ' MOD' → logprob: -6.501504421234131
    3. '   ' → logprob: -13.876504898071289
    4. '_MOD' → logprob: -15.126504898071289
    5. ' ' → logprob: -15.376504898071289
    6. '.MOD' → logprob: -15.501504898071289
    7. '[' → logprob: -16.12650489807129
    8. 'mod' → logprob: -16.37650489807129
    9. '  ' → logprob: -16.62650489807129
    10. '```' → logprob: -16.75150489807129

Token 1113: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8789383830153383e-05
    2. ')
' → logprob: -11.000019073486328
    3. ' )' → logprob: -14.500019073486328
    4. ')}' → logprob: -15.375019073486328
    5. ')#' → logprob: -15.375019073486328
    6. '   ' → logprob: -15.750019073486328
    7. ')return' → logprob: -16.125019073486328
    8. ')

' → logprob: -16.125019073486328
    9. ')**' → logprob: -16.250019073486328
    10. '}' → logprob: -16.375019073486328

Token 1114: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -7.028536492725834e-05
    2. '#' → logprob: -10.250070571899414
    3. '```' → logprob: -10.750070571899414
    4. '<|end|>' → logprob: -11.500070571899414
    5. 'import' → logprob: -13.875070571899414
    6. ' def' → logprob: -14.500070571899414
    7. 'if' → logprob: -15.000070571899414
    8. '<|end|>' → logprob: -15.125070571899414
    9. 'print' → logprob: -15.375070571899414
    10. 'ndef' → logprob: -15.500070571899414

Token 1115: ' is' (ID: 382)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.3919411897659302
    2. 'main' → logprob: -1.1419411897659302
    3. ' solve' → logprob: -6.141941070556641
    4. 'solve' → logprob: -6.641941070556641
    5. 'F' → logprob: -7.641941070556641
    6. '_main' → logprob: -8.26694107055664
    7. ' F' → logprob: -8.26694107055664
    8. 'def' → logprob: -8.51694107055664
    9. ' run' → logprob: -9.64194107055664
    10. 'G' → logprob: -9.64194107055664

Token 1116: '_X' (ID: 16245)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6029860973358154
    2. '_prime' → logprob: -1.4779860973358154
    3. '_pal' → logprob: -1.8529860973358154
    4. '_valid' → logprob: -3.8529860973358154
    5. '_lower' → logprob: -4.7279863357543945
    6. '_power' → logprob: -5.3529863357543945
    7. '_alpha' → logprob: -5.8529863357543945
    8. '_a' → logprob: -5.8529863357543945
    9. '__' → logprob: -5.9779863357543945
    10. '_even' → logprob: -6.2279863357543945

Token 1117: '_even' (ID: 186029)
  Prédit: '_valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_valid' → logprob: -0.6876232028007507
    2. '_equal' → logprob: -1.8126232624053955
    3. '_g' → logprob: -2.0626232624053955
    4. '_less' → logprob: -3.3126232624053955
    5. '(' → logprob: -3.5626232624053955
    6. '_even' → logprob: -3.8126232624053955
    7. '_in' → logprob: -4.062623023986816
    8. '_le' → logprob: -4.187623023986816
    9. '(X' → logprob: -4.187623023986816
    10. '_' → logprob: -4.437623023986816

Token 1118: '(X' (ID: 17061)
  Prédit: '(X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -0.00010020548506872728
    2. '(' → logprob: -9.500100135803223
    3. 'def' → logprob: -11.375100135803223
    4. '(
' → logprob: -11.875100135803223
    5. '(x' → logprob: -12.375100135803223
    6. '((' → logprob: -14.375100135803223
    7. '(N' → logprob: -14.375100135803223
    8. 'X' → logprob: -14.625100135803223
    9. '():' → logprob: -15.750100135803223
    10. '```' → logprob: -15.750100135803223

Token 1119: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.18145853281021118
    2. '):
' → logprob: -1.8064584732055664
    3. '():' → logprob: -6.931458473205566
    4. ')' → logprob: -7.806458473205566
    5. '():
' → logprob: -8.431458473205566
    6. '()):
' → logprob: -10.431458473205566
    7. '   ' → logprob: -10.806458473205566
    8. '()' → logprob: -11.056458473205566
    9. '(' → logprob: -11.556458473205566
    10. '):

' → logprob: -11.931458473205566

Token 1120: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0027494807727634907
    2. 'return' → logprob: -6.752749443054199
    3. '(X' → logprob: -7.127749443054199
    4. ' return' → logprob: -7.752749443054199
    5. 'def' → logprob: -8.7527494430542
    6. 'X' → logprob: -9.6277494430542
    7. '	return' → logprob: -9.8777494430542
    8. '  ' → logprob: -11.1277494430542
    9. '    
' → logprob: -11.5027494430542
    10. '	X' → logprob: -11.8777494430542

Token 1121: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.007124880328774452
    2. 'def' → logprob: -5.132124900817871
    3. 'X' → logprob: -7.257124900817871
    4. ' return' → logprob: -7.882124900817871
    5. '   ' → logprob: -10.007124900817871
    6. '```' → logprob: -10.382124900817871
    7. '(X' → logprob: -10.882124900817871
    8. '`' → logprob: -11.632124900817871
    9. '(' → logprob: -13.132124900817871
    10. '
' → logprob: -13.257124900817871

Token 1122: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.07896700501441956
    2. '(X' → logprob: -2.5789670944213867
    3. ' X' → logprob: -9.578967094421387
    4. ' (' → logprob: -12.578967094421387
    5. '(' → logprob: -13.328967094421387
    6. '   ' → logprob: -13.703967094421387
    7. '_X' → logprob: -14.453967094421387
    8. '((' → logprob: -14.703967094421387
    9. '	X' → logprob: -15.453967094421387
    10. '[X' → logprob: -15.953967094421387

Token 1123: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.16023530066013336
    2. ' %' → logprob: -1.9102352857589722
    3. '[' → logprob: -11.910235404968262
    4. '   ' → logprob: -13.785235404968262
    5. 'def' → logprob: -14.160235404968262
    6. ' ' → logprob: -14.535235404968262
    7. '
' → logprob: -14.785235404968262
    8. '0' → logprob: -14.910235404968262
    9. '()%' → logprob: -15.285235404968262
    10. ' ' → logprob: -15.535235404968262

Token 1124: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.531315314830863e-06
    2. ' ' → logprob: -12.625003814697266
    3. '```' → logprob: -16.125003814697266
    4. '(' → logprob: -16.750003814697266
    5. '   ' → logprob: -17.875003814697266
    6. '=' → logprob: -19.375003814697266
    7. '==' → logprob: -19.625003814697266
    8. '  ' → logprob: -20.250003814697266
    9. '۲' → logprob: -20.500003814697266
    10. '0' → logprob: -20.500003814697266

Token 1125: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.625001907348633
    3. '```' → logprob: -16.375001907348633
    4. '(' → logprob: -16.500001907348633
    5. '   ' → logprob: -18.000001907348633
    6. '
' → logprob: -19.000001907348633
    7. '  ' → logprob: -19.875001907348633
    8. '==' → logprob: -19.875001907348633
    9. '{' → logprob: -20.250001907348633
    10. '3' → logprob: -20.375001907348633

Token 1126: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.006062344182282686
    2. ' ==' → logprob: -5.2560625076293945
    3. '=' → logprob: -7.1310625076293945
    4. '==
' → logprob: -11.256062507629395
    5. '()==' → logprob: -12.131062507629395
    6. '0' → logprob: -12.381062507629395
    7. ' ' → logprob: -13.006062507629395
    8. '===' → logprob: -13.881062507629395
    9. 'def' → logprob: -13.881062507629395
    10. '2' → logprob: -14.631062507629395

Token 1127: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.961759259458631e-06
    2. '2' → logprob: -12.750004768371582
    3. ' ' → logprob: -13.125004768371582
    4. '```' → logprob: -18.1250057220459
    5. '   ' → logprob: -19.0000057220459
    6. '==' → logprob: -19.0000057220459
    7. '=' → logprob: -19.8750057220459
    8. '
' → logprob: -20.6250057220459
    9. '۰' → logprob: -21.3750057220459
    10. '00' → logprob: -22.0000057220459

Token 1128: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007101670489646494
    2. '2' → logprob: -7.2507100105285645
    3. ' ' → logprob: -15.750710487365723
    4. '```' → logprob: -18.375709533691406
    5. '   ' → logprob: -20.000709533691406
    6. '
' → logprob: -20.250709533691406
    7. '==' → logprob: -20.875709533691406
    8. '=' → logprob: -21.500709533691406
    9. '00' → logprob: -22.375709533691406
    10. '۰' → logprob: -22.625709533691406

Token 1129: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02699732594192028
    2. '<|end|>' → logprob: -3.6519973278045654
    3. '```' → logprob: -8.401997566223145
    4. '
' → logprob: -8.401997566223145
    5. '#' → logprob: -8.776997566223145
    6. '<|end|>' → logprob: -9.901997566223145
    7. ')' → logprob: -11.151997566223145
    8. '\' → logprob: -12.276997566223145
    9. '[' → logprob: -12.526997566223145
    10. ' def' → logprob: -12.526997566223145

Token 1130: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0004972710739821196
    2. '```' → logprob: -7.625497341156006
    3. '``' → logprob: -12.000496864318848
    4. ':def' → logprob: -13.875496864318848
    5. '
' → logprob: -14.125496864318848
    6. 'ndef' → logprob: -14.500496864318848
    7. '\' → logprob: -15.000496864318848
    8. ' def' → logprob: -15.250496864318848
    9. '-def' → logprob: -16.250497817993164
    10. '_def' → logprob: -16.375497817993164

Token 1131: ' F' (ID: 454)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.15344549715518951
    2. ' main' → logprob: -2.4034454822540283
    3. 'solve' → logprob: -3.5284454822540283
    4. 'F' → logprob: -4.153445720672607
    5. ' solve' → logprob: -5.903445720672607
    6. 'def' → logprob: -7.403445720672607
    7. ' F' → logprob: -7.653445720672607
    8. 'is' → logprob: -7.778445720672607
    9. 'compute' → logprob: -7.903445720672607
    10. 'run' → logprob: -8.15344524383545

Token 1132: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.8837054371833801
    2. '1' → logprob: -1.0087053775787354
    3. '3' → logprob: -1.5087053775787354
    4. '4' → logprob: -7.3837056159973145
    5. '5' → logprob: -9.383705139160156
    6. '(' → logprob: -9.633705139160156
    7. 'X' → logprob: -10.883705139160156
    8. 'A' → logprob: -11.383705139160156
    9. '0' → logprob: -11.508705139160156
    10. 'I' → logprob: -12.008705139160156

Token 1133: '_check' (ID: 15847)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.009333842433989048
    2. '(X' → logprob: -5.009333610534668
    3. '(' → logprob: -6.134333610534668
    4. 'def' → logprob: -8.009333610534668
    5. '(F' → logprob: -10.384333610534668
    6. '(_' → logprob: -10.509333610534668
    7. ' (' → logprob: -11.259333610534668
    8. '_def' → logprob: -11.259333610534668
    9. ' def' → logprob: -11.509333610534668
    10. '_(' → logprob: -12.134333610534668

Token 1134: '_X' (ID: 16245)
  Prédit: '(X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -0.002969261258840561
    2. '(N' → logprob: -6.377969264984131
    3. '(' → logprob: -7.377969264984131
    4. 'def' → logprob: -8.002968788146973
    5. '_X' → logprob: -9.127968788146973
    6. '(F' → logprob: -9.752968788146973
    7. 'X' → logprob: -9.877968788146973
    8. '_' → logprob: -11.377968788146973
    9. '(x' → logprob: -11.502968788146973
    10. '```' → logprob: -11.752968788146973

Token 1135: '_even' (ID: 186029)
  Prédit: '(X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -0.005842515733093023
    2. '_equal' → logprob: -6.130842685699463
    3. '_equals' → logprob: -6.755842685699463
    4. '_even' → logprob: -7.380842685699463
    5. '_is' → logprob: -7.630842685699463
    6. '(' → logprob: -7.630842685699463
    7. '_eq' → logprob: -8.755842208862305
    8. 'def' → logprob: -8.755842208862305
    9. '(_' → logprob: -8.880842208862305
    10. '_exact' → logprob: -9.755842208862305

Token 1136: '(X' (ID: 17061)
  Prédit: '(X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -2.8206473871250637e-05
    2. '(' → logprob: -10.625028610229492
    3. '():' → logprob: -13.000028610229492
    4. '(
' → logprob: -14.750028610229492
    5. 'def' → logprob: -14.875028610229492
    6. '():
' → logprob: -15.500028610229492
    7. '(x' → logprob: -15.750028610229492
    8. ':' → logprob: -16.125028610229492
    9. '((' → logprob: -16.250028610229492
    10. '(N' → logprob: -16.250028610229492

Token 1137: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02684473991394043
    2. '):
' → logprob: -3.6518447399139404
    3. '():' → logprob: -7.9018449783325195
    4. ')' → logprob: -9.27684497833252
    5. ':' → logprob: -9.90184497833252
    6. '():
' → logprob: -10.90184497833252
    7. '   ' → logprob: -12.27684497833252
    8. '):
' → logprob: -12.65184497833252
    9. ',' → logprob: -13.77684497833252
    10. ' ):' → logprob: -14.15184497833252

Token 1138: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0001612267515156418
    2. 'return' → logprob: -8.750161170959473
    3. ' return' → logprob: -13.250161170959473
    4. '```' → logprob: -14.250161170959473
    5. 'if' → logprob: -15.125161170959473
    6. '	return' → logprob: -16.00016212463379
    7. 'def' → logprob: -16.75016212463379
    8. '       ' → logprob: -18.37516212463379
    9. '   ' → logprob: -18.37516212463379
    10. '    
' → logprob: -18.50016212463379

Token 1139: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.2983326315879822
    2. 'if' → logprob: -1.548332691192627
    3. '   ' → logprob: -3.298332691192627
    4. 'assert' → logprob: -4.798332691192627
    5. ' return' → logprob: -9.173332214355469
    6. ' if' → logprob: -10.423332214355469
    7. '```' → logprob: -10.923332214355469
    8. 'pass' → logprob: -13.798332214355469
    9. ' assert' → logprob: -14.173332214355469
    10. 'raise' → logprob: -14.173332214355469

Token 1140: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.08581507951021194
    2. 'X' → logprob: -2.585815191268921
    3. ' is' → logprob: -5.210814952850342
    4. 'not' → logprob: -7.460814952850342
    5. 'True' → logprob: -7.710814952850342
    6. ' X' → logprob: -8.3358154296875
    7. '(is' → logprob: -9.9608154296875
    8. 'False' → logprob: -10.3358154296875
    9. ' not' → logprob: -11.0858154296875
    10. 'F' → logprob: -11.0858154296875

Token 1141: '_X' (ID: 16245)
  Prédit: '_X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_X' → logprob: -2.093505099765025e-05
    2. 'X' → logprob: -10.875020980834961
    3. '(X' → logprob: -13.375020980834961
    4. '_' → logprob: -15.125020980834961
    5. '```' → logprob: -17.00002098083496
    6. ')' → logprob: -17.87502098083496
    7. '`' → logprob: -18.12502098083496
    8. '__' → logprob: -18.25002098083496
    9. '[X' → logprob: -18.25002098083496
    10. '	X' → logprob: -18.25002098083496

Token 1142: '_even' (ID: 186029)
  Prédit: '_even'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_even' → logprob: -0.02975292131304741
    2. 'even' → logprob: -3.5297529697418213
    3. '(X' → logprob: -13.404752731323242
    4. 'evenodd' → logprob: -14.904752731323242
    5. 'Even' → logprob: -15.529752731323242
    6. ' even' → logprob: -16.029752731323242
    7. '_equal' → logprob: -16.029752731323242
    8. '_' → logprob: -17.404752731323242
    9. '```' → logprob: -17.529752731323242
    10. '-even' → logprob: -18.279752731323242

Token 1143: '(X' (ID: 17061)
  Prédit: '(X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -0.0002319071936653927
    2. '(' → logprob: -8.375231742858887
    3. 'X' → logprob: -13.875231742858887
    4. '(
' → logprob: -14.750231742858887
    5. ' (' → logprob: -17.500232696533203
    6. '((' → logprob: -17.750232696533203
    7. '(x' → logprob: -17.875232696533203
    8. ')' → logprob: -19.125232696533203
    9. '```' → logprob: -19.750232696533203
    10. ',' → logprob: -19.875232696533203

Token 1144: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00016039233014453202
    2. '())' → logprob: -8.875160217285156
    3. ' )' → logprob: -11.875160217285156
    4. ')
' → logprob: -12.250160217285156
    5. ')

' → logprob: -13.375160217285156
    6. '<|end|>' → logprob: -13.500160217285156
    7. '))' → logprob: -13.750160217285156
    8. '()' → logprob: -14.000160217285156
    9. ')==' → logprob: -14.000160217285156
    10. '(X' → logprob: -14.250160217285156

Token 1145: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01315105427056551
    2. '```' → logprob: -4.388151168823242
    3. ':def' → logprob: -8.263151168823242
    4. '\' → logprob: -9.013151168823242
    5. ':' → logprob: -9.138151168823242
    6. '<|end|>' → logprob: -10.013151168823242
    7. '
' → logprob: -10.888151168823242
    8. '``' → logprob: -10.888151168823242
    9. '#' → logprob: -11.388151168823242
    10. '(def' → logprob: -11.888151168823242

Token 1146: ' F' (ID: 454)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.22003474831581116
    2. 'main' → logprob: -1.8450347185134888
    3. 'def' → logprob: -4.720034599304199
    4. 'is' → logprob: -4.720034599304199
    5. 'read' → logprob: -5.470034599304199
    6. 'solve' → logprob: -5.470034599304199
    7. 'parse' → logprob: -5.845034599304199
    8. ' main' → logprob: -5.970034599304199
    9. 'get' → logprob: -5.970034599304199
    10. ' F' → logprob: -6.470034599304199

Token 1147: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.010464751161634922
    2. '1' → logprob: -5.260464668273926
    3. '2' → logprob: -5.385464668273926
    4. '4' → logprob: -7.385464668273926
    5. '(' → logprob: -12.260464668273926
    6. '5' → logprob: -12.635464668273926
    7. 'unction' → logprob: -13.510464668273926
    8. 'X' → logprob: -13.760464668273926
    9. '<|end|>' → logprob: -14.760464668273926
    10. '0' → logprob: -15.072964668273926

Token 1148: '_check' (ID: 15847)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.31998613476753235
    2. 'def' → logprob: -1.81998610496521
    3. '(X' → logprob: -2.19498610496521
    4. '(' → logprob: -8.944986343383789
    5. ' def' → logprob: -9.444986343383789
    6. 'X' → logprob: -10.069986343383789
    7. '_def' → logprob: -10.194986343383789
    8. '_check' → logprob: -10.194986343383789
    9. '_return' → logprob: -10.444986343383789
    10. '```' → logprob: -11.694986343383789

Token 1149: '_X' (ID: 16245)
  Prédit: '(X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -0.13465763628482819
    2. 'X' → logprob: -2.884657621383667
    3. '_X' → logprob: -3.509657621383667
    4. 'def' → logprob: -4.384657859802246
    5. '_even' → logprob: -4.509657859802246
    6. '_not' → logprob: -5.009657859802246
    7. '(' → logprob: -6.384657859802246
    8. 'not' → logprob: -6.384657859802246
    9. '_is' → logprob: -6.509657859802246
    10. '_' → logprob: -6.634657859802246

Token 1150: '_gt' (ID: 87310)
  Prédit: '_even'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_even' → logprob: -0.011173728853464127
    2. 'even' → logprob: -5.261173725128174
    3. 'def' → logprob: -5.636173725128174
    4. '(X' → logprob: -6.386173725128174
    5. '_is' → logprob: -8.761174201965332
    6. '_' → logprob: -9.011174201965332
    7. '_equal' → logprob: -9.136174201965332
    8. '_less' → logprob: -10.261174201965332
    9. '```' → logprob: -10.261174201965332
    10. '_not' → logprob: -10.886174201965332

Token 1151: '_N' (ID: 3080)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.8172979950904846
    2. '2' → logprob: -0.9422979950904846
    3. '(X' → logprob: -2.31729793548584
    4. '3' → logprob: -3.81729793548584
    5. '0' → logprob: -4.06729793548584
    6. '(N' → logprob: -4.81729793548584
    7. '(' → logprob: -5.19229793548584
    8. '4' → logprob: -5.44229793548584
    9. '=' → logprob: -6.06729793548584
    10. '(Q' → logprob: -7.19229793548584

Token 1152: '(X' (ID: 17061)
  Prédit: '(X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -0.07025983929634094
    2. '(N' → logprob: -2.6952598094940186
    3. '(' → logprob: -8.195260047912598
    4. '(
' → logprob: -10.195260047912598
    5. 'def' → logprob: -12.195260047912598
    6. ',' → logprob: -13.945260047912598
    7. '():
' → logprob: -14.445260047912598
    8. 'X' → logprob: -14.445260047912598
    9. '((' → logprob: -14.820260047912598
    10. '(x' → logprob: -15.320260047912598

Token 1153: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19999073445796967
    2. '):' → logprob: -2.199990749359131
    3. '):
' → logprob: -2.699990749359131
    4. ')' → logprob: -5.949990749359131
    5. '(N' → logprob: -8.074990272521973
    6. ',N' → logprob: -9.074990272521973
    7. '   ' → logprob: -9.199990272521973
    8. ',
' → logprob: -10.324990272521973
    9. ' ,' → logprob: -11.074990272521973
    10. '):

' → logprob: -11.199990272521973

Token 1154: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.005173751153051853
    2. ' N' → logprob: -5.505173683166504
    3. 'lambda' → logprob: -7.005173683166504
    4. ' lambda' → logprob: -8.755173683166504
    5. ')' → logprob: -11.505173683166504
    6. '   ' → logprob: -11.880173683166504
    7. 'def' → logprob: -12.380173683166504
    8. '	N' → logprob: -13.130173683166504
    9. 'None' → logprob: -13.630173683166504
    10. 'X' → logprob: -14.005173683166504

Token 1155: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.20150505006313324
    2. '):' → logprob: -1.7015050649642944
    3. ')' → logprob: -10.076504707336426
    4. '):
' → logprob: -10.451504707336426
    5. '):

' → logprob: -11.576504707336426
    6. '():
' → logprob: -12.326504707336426
    7. '   ' → logprob: -12.451504707336426
    8. ',' → logprob: -13.951504707336426
    9. ':' → logprob: -14.451504707336426
    10. ')
' → logprob: -15.076504707336426

Token 1156: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -8.804671233519912e-05
    2. 'return' → logprob: -9.50008773803711
    3. ' return' → logprob: -11.50008773803711
    4. '	return' → logprob: -13.12508773803711
    5. '```' → logprob: -14.62508773803711
    6. '{
' → logprob: -15.37508773803711
    7. '{return' → logprob: -15.37508773803711
    8. '       ' → logprob: -16.50008773803711
    9. ':return' → logprob: -17.75008773803711
    10. '<|end|>' → logprob: -17.75008773803711

Token 1157: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0029523817356675863
    2. ' return' → logprob: -5.877952575683594
    3. '   ' → logprob: -9.127952575683594
    4. 'X' → logprob: -11.002952575683594
    5. '```' → logprob: -11.627952575683594
    6. '	return' → logprob: -12.377952575683594
    7. '{return' → logprob: -12.752952575683594
    8. 'import' → logprob: -13.502952575683594
    9. ':return' → logprob: -14.127952575683594
    10. '<|end|>' → logprob: -14.252952575683594

Token 1158: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -6.098748053773306e-05
    2. ' X' → logprob: -9.75006103515625
    3. '(X' → logprob: -14.00006103515625
    4. 'False' → logprob: -14.37506103515625
    5. 'True' → logprob: -14.87506103515625
    6. '   ' → logprob: -15.00006103515625
    7. ' ' → logprob: -15.50006103515625
    8. 'not' → logprob: -16.25006103515625
    9. '	X' → logprob: -16.37506103515625
    10. 'is' → logprob: -17.12506103515625

Token 1159: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.31441280245780945
    2. ' >' → logprob: -1.3144128322601318
    3. ' ' → logprob: -7.189412593841553
    4. '>X' → logprob: -8.689413070678711
    5. '>N' → logprob: -9.564413070678711
    6. ' <=' → logprob: -10.564413070678711
    7. '>=' → logprob: -10.939413070678711
    8. '[' → logprob: -11.314413070678711
    9. ' >=' → logprob: -11.439413070678711
    10. '   ' → logprob: -11.439413070678711

Token 1160: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.306760805164231e-05
    2. ' N' → logprob: -11.25001335144043
    3. '   ' → logprob: -18.25001335144043
    4. '	N' → logprob: -19.00001335144043
    5. '0' → logprob: -19.50001335144043
    6. '[N' → logprob: -21.00001335144043
    7. '[' → logprob: -21.12501335144043
    8. ' ' → logprob: -21.25001335144043
    9. '>N' → logprob: -21.37501335144043
    10. '(N' → logprob: -21.62501335144043

Token 1161: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0919606015086174
    2. '<|end|>' → logprob: -2.4669606685638428
    3. '
' → logprob: -6.841960430145264
    4. '```' → logprob: -7.216960430145264
    5. '

' → logprob: -8.216960906982422
    6. ')' → logprob: -8.466960906982422
    7. '#' → logprob: -8.841960906982422
    8. ':' → logprob: -8.841960906982422
    9. '<|end|>' → logprob: -9.091960906982422
    10. ' def' → logprob: -9.591960906982422

Token 1162: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.039705969393253326
    2. '```' → logprob: -3.289705991744995
    3. '\' → logprob: -7.539705753326416
    4. ':def' → logprob: -7.664705753326416
    5. '
' → logprob: -8.289706230163574
    6. '

' → logprob: -9.164706230163574
    7. '``' → logprob: -9.164706230163574
    8. ':' → logprob: -10.039706230163574
    9. ' def' → logprob: -10.164706230163574
    10. '<|end|>' → logprob: -10.539706230163574

Token 1163: ' F' (ID: 454)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.052339036017656326
    2. 'F' → logprob: -3.1773390769958496
    3. ' def' → logprob: -5.05233907699585
    4. 'main' → logprob: -6.67733907699585
    5. ' F' → logprob: -7.30233907699585
    6. 'solve' → logprob: -7.30233907699585
    7. ' main' → logprob: -8.927338600158691
    8. ' solve' → logprob: -9.677338600158691
    9. 'combine' → logprob: -10.927338600158691
    10. 'run' → logprob: -11.052338600158691

Token 1164: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.017369642853736877
    2. '2' → logprob: -4.642369747161865
    3. '1' → logprob: -4.892369747161865
    4. '4' → logprob: -9.767369270324707
    5. '(' → logprob: -12.142369270324707
    6. '()' → logprob: -12.767369270324707
    7. '(N' → logprob: -13.142369270324707
    8. '_' → logprob: -13.392369270324707
    9. '```' → logprob: -13.392369270324707
    10. 'X' → logprob: -13.892369270324707

Token 1165: '_check' (ID: 15847)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.1337831020355225
    2. '_check' → logprob: -1.1337831020355225
    3. '(N' → logprob: -1.3837831020355225
    4. '(X' → logprob: -2.2587831020355225
    5. '```' → logprob: -7.883783340454102
    6. '(' → logprob: -8.508783340454102
    7. 'check' → logprob: -9.133783340454102
    8. 'Check' → logprob: -9.258783340454102
    9. ' def' → logprob: -9.258783340454102
    10. '(F' → logprob: -9.383783340454102

Token 1166: '_n' (ID: 2170)
  Prédit: '_N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_N' → logprob: -0.5030730962753296
    2. '(N' → logprob: -1.5030730962753296
    3. '_X' → logprob: -2.503073215484619
    4. '(X' → logprob: -3.128073215484619
    5. 'def' → logprob: -3.878073215484619
    6. 'N' → logprob: -4.753073215484619
    7. 'X' → logprob: -5.128073215484619
    8. 'is' → logprob: -5.628073215484619
    9. '```' → logprob: -6.253073215484619
    10. '_is' → logprob: -6.503073215484619

Token 1167: '(N' (ID: 10564)
  Prédit: '(X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -0.045458756387233734
    2. '(N' → logprob: -3.6704587936401367
    3. '(' → logprob: -4.920458793640137
    4. '(
' → logprob: -5.795458793640137
    5. 'def' → logprob: -6.170458793640137
    6. '(n' → logprob: -7.170458793640137
    7. '_' → logprob: -7.420458793640137
    8. '_range' → logprob: -7.420458793640137
    9. '```' → logprob: -7.420458793640137
    10. 'range' → logprob: -7.670458793640137

Token 1168: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0018899721326306462
    2. '):' → logprob: -6.751890182495117
    3. '):
' → logprob: -7.626890182495117
    4. ',X' → logprob: -9.251890182495117
    5. ' ,' → logprob: -10.126890182495117
    6. ')' → logprob: -11.001890182495117
    7. '<|end|>' → logprob: -11.001890182495117
    8. 'def' → logprob: -11.501890182495117
    9. '(X' → logprob: -11.626890182495117
    10. '   ' → logprob: -11.876890182495117

Token 1169: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.06231921538710594
    2. 'n' → logprob: -3.062319278717041
    3. '0' → logprob: -5.437319278717041
    4. ' X' → logprob: -5.562319278717041
    5. ')' → logprob: -6.437319278717041
    6. 'N' → logprob: -6.937319278717041
    7. '2' → logprob: -7.187319278717041
    8. ' n' → logprob: -7.562319278717041
    9. '1' → logprob: -7.562319278717041
    10. '):
' → logprob: -8.687318801879883

Token 1170: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004953675088472664
    2. '):
' → logprob: -8.250494956970215
    3. '):' → logprob: -8.750494956970215
    4. ' ,' → logprob: -10.250494956970215
    5. '   ' → logprob: -11.250494956970215
    6. ',X' → logprob: -11.625494956970215
    7. ',
' → logprob: -12.000494956970215
    8. ',n' → logprob: -12.500494956970215
    9. ')' → logprob: -12.625494956970215
    10. ',N' → logprob: -13.625494956970215

Token 1171: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005544631858356297
    2. 'return' → logprob: -8.375554084777832
    3. ' return' → logprob: -8.500554084777832
    4. 'def' → logprob: -9.250554084777832
    5. '```' → logprob: -11.375554084777832
    6. 'for' → logprob: -12.250554084777832
    7. ' for' → logprob: -12.375554084777832
    8. '       ' → logprob: -13.875554084777832
    9. ' def' → logprob: -14.000554084777832
    10. '	return' → logprob: -14.375554084777832

Token 1172: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.08735714852809906
    2. '   ' → logprob: -2.5873570442199707
    3. ' return' → logprob: -5.337357044219971
    4. 'for' → logprob: -5.712357044219971
    5. 'n' → logprob: -9.087357521057129
    6. '```' → logprob: -9.337357521057129
    7. '
' → logprob: -9.587357521057129
    8. 'def' → logprob: -10.837357521057129
    9. ' for' → logprob: -10.962357521057129
    10. '       ' → logprob: -12.462357521057129

Token 1173: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.12418533116579056
    2. 'X' → logprob: -2.49918532371521
    3. 'n' → logprob: -4.124185562133789
    4. '0' → logprob: -5.374185562133789
    5. 'np' → logprob: -5.874185562133789
    6. '(N' → logprob: -6.124185562133789
    7. '(X' → logprob: -6.374185562133789
    8. '(' → logprob: -6.499185562133789
    9. ' N' → logprob: -6.874185562133789
    10. 'lambda' → logprob: -7.124185562133789

Token 1174: ' -' (ID: 533)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.19406282901763916
    2. '<|end|>' → logprob: -3.0690627098083496
    3. ' +' → logprob: -3.1940627098083496
    4. ' >=' → logprob: -3.4440627098083496
    5. '>=' → logprob: -3.4440627098083496
    6. ' ' → logprob: -4.06906270980835
    7. '>' → logprob: -6.44406270980835
    8. ' >' → logprob: -6.69406270980835
    9. ' <' → logprob: -7.06906270980835
    10. '<' → logprob: -7.19406270980835

Token 1175: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.005863612983375788
    2. '(X' → logprob: -6.130863666534424
    3. '(' → logprob: -6.255863666534424
    4. '1' → logprob: -6.880863666534424
    5. ' X' → logprob: -8.005863189697266
    6. '2' → logprob: -8.755863189697266
    7. ' (' → logprob: -8.880863189697266
    8. '((' → logprob: -10.130863189697266
    9. 'N' → logprob: -11.255863189697266
    10. '0' → logprob: -11.630863189697266

Token 1176: ' +' (ID: 659)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1177: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00022988072305452079
    2. '0' → logprob: -9.125229835510254
    3. '2' → logprob: -9.500229835510254
    4. ' ' → logprob: -10.125229835510254
    5. 'n' → logprob: -12.500229835510254
    6. 'X' → logprob: -14.875229835510254
    7. '3' → logprob: -14.875229835510254
    8. '-' → logprob: -14.875229835510254
    9. 'N' → logprob: -15.750229835510254
    10. '(' → logprob: -15.750229835510254

Token 1178: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003554847207851708
    2. '2' → logprob: -8.37535572052002
    3. 'n' → logprob: -9.12535572052002
    4. '0' → logprob: -11.75035572052002
    5. '3' → logprob: -13.50035572052002
    6. 'X' → logprob: -13.68785572052002
    7. '-' → logprob: -13.75035572052002
    8. ' ' → logprob: -14.00035572052002
    9. 'N' → logprob: -14.06285572052002
    10. '(n' → logprob: -14.68785572052002

Token 1179: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1180: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.018356775864958763
    2. '<|end|>' → logprob: -4.268356800079346
    3. '```' → logprob: -5.893356800079346
    4. ':' → logprob: -7.768356800079346
    5. ')' → logprob: -8.018356323242188
    6. ':def' → logprob: -8.518356323242188
    7. '
' → logprob: -8.768356323242188
    8. '\' → logprob: -9.518356323242188
    9. '[' → logprob: -9.768356323242188
    10. '#' → logprob: -9.768356323242188

Token 1181: ' F' (ID: 454)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1276828646659851
    2. 'F' → logprob: -2.12768292427063
    3. ' def' → logprob: -7.627682685852051
    4. ' F' → logprob: -9.62768268585205
    5. '
' → logprob: -9.62768268585205
    6. '_F' → logprob: -11.37768268585205
    7. 'get' → logprob: -11.50268268585205
    8. 'X' → logprob: -11.50268268585205
    9. 'N' → logprob: -11.87768268585205
    10. '```' → logprob: -11.87768268585205

Token 1182: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0033262416254729033
    2. '1' → logprob: -5.878326416015625
    3. '2' → logprob: -7.628326416015625
    4. '4' → logprob: -10.753326416015625
    5. '(N' → logprob: -12.128326416015625
    6. 'def' → logprob: -13.003326416015625
    7. '(X' → logprob: -13.753326416015625
    8. '(' → logprob: -14.253326416015625
    9. 'unction' → logprob: -14.878326416015625
    10. 'ibonacci' → logprob: -14.878326416015625

Token 1183: '(N' (ID: 10564)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5282715559005737
    2. '_check' → logprob: -1.0282715559005737
    3. '(N' → logprob: -3.1532716751098633
    4. '(X' → logprob: -6.528271675109863
    5. '(' → logprob: -6.653271675109863
    6. '_calc' → logprob: -6.903271675109863
    7. '_def' → logprob: -6.903271675109863
    8. '_return' → logprob: -7.278271675109863
    9. '(n' → logprob: -7.403271675109863
    10. '_define' → logprob: -7.528271675109863

Token 1184: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.702754474943504e-05
    2. ' ,' → logprob: -11.00003719329834
    3. ',X' → logprob: -11.50003719329834
    4. 'def' → logprob: -12.50003719329834
    5. '   ' → logprob: -12.62503719329834
    6. ',
' → logprob: -14.12503719329834
    7. '):
' → logprob: -14.25003719329834
    8. '```' → logprob: -14.75003719329834
    9. ' def' → logprob: -15.00003719329834
    10. '_,' → logprob: -15.37503719329834

Token 1185: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.018152514472603798
    2. ' X' → logprob: -4.018152713775635
    3. ' ' → logprob: -13.643152236938477
    4. 'def' → logprob: -14.893152236938477
    5. 'N' → logprob: -15.768152236938477
    6. ')' → logprob: -15.893152236938477
    7. '0' → logprob: -16.143152236938477
    8. '...' → logprob: -16.268152236938477
    9. 'x' → logprob: -16.393152236938477
    10. 'M' → logprob: -17.018152236938477

Token 1186: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001426346570951864
    2. '):
' → logprob: -9.500143051147461
    3. '   ' → logprob: -10.000143051147461
    4. '```' → logprob: -11.750143051147461
    5. '):' → logprob: -12.000143051147461
    6. ' ,' → logprob: -12.875143051147461
    7. ',
' → logprob: -13.000143051147461
    8. 'def' → logprob: -13.500143051147461
    9. ',X' → logprob: -14.750143051147461
    10. ',x' → logprob: -14.750143051147461

Token 1187: ' comb' (ID: 4134)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.6588625907897949
    2. 'fact' → logprob: -0.7838625907897949
    3. ' MOD' → logprob: -4.283862590789795
    4. ' fact' → logprob: -5.158862590789795
    5. 'comb' → logprob: -6.158862590789795
    6. ')' → logprob: -6.408862590789795
    7. 'mod' → logprob: -7.783862590789795
    8. '):
' → logprob: -8.158863067626953
    9. '0' → logprob: -8.283863067626953
    10. 'pow' → logprob: -8.408863067626953

Token 1188: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.9027791495318525e-05
    2. '[N' → logprob: -11.500019073486328
    3. '[' → logprob: -12.500019073486328
    4. ',' → logprob: -12.625019073486328
    5. '```' → logprob: -14.750019073486328
    6. ')' → logprob: -15.250019073486328
    7. '(N' → logprob: -15.375019073486328
    8. 'n' → logprob: -15.750019073486328
    9. '[
' → logprob: -15.750019073486328
    10. ',N' → logprob: -15.750019073486328

Token 1189: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004524584859609604
    2. '):
' → logprob: -5.5045247077941895
    3. '):' → logprob: -7.7545247077941895
    4. ' ,' → logprob: -11.379524230957031
    5. ',
' → logprob: -13.254524230957031
    6. '):
' → logprob: -13.379524230957031
    7. '   ' → logprob: -13.629524230957031
    8. ')' → logprob: -14.754524230957031
    9. '):

' → logprob: -14.754524230957031
    10. '```' → logprob: -16.50452423095703

Token 1190: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.017091598361730576
    2. ' MOD' → logprob: -4.392091751098633
    3. 'fact' → logprob: -5.517091751098633
    4. ' fact' → logprob: -7.642091751098633
    5. 'mod' → logprob: -10.392091751098633
    6. ')' → logprob: -11.517091751098633
    7. '_MOD' → logprob: -12.142091751098633
    8. '   ' → logprob: -12.517091751098633
    9. 'pow' → logprob: -12.517091751098633
    10. ' ' → logprob: -12.517091751098633

Token 1191: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.02334168180823326
    2. '):' → logprob: -3.773341655731201
    3. '):
' → logprob: -9.64834213256836
    4. ',' → logprob: -10.64834213256836
    5. '   ' → logprob: -11.89834213256836
    6. '):

' → logprob: -14.64834213256836
    7. ')' → logprob: -14.77334213256836
    8. ' ):
' → logprob: -16.02334213256836
    9. ' ' → logprob: -16.39834213256836
    10. ':' → logprob: -17.77334213256836

Token 1192: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0022294751834124327
    2. '```' → logprob: -6.502229690551758
    3. 'if' → logprob: -7.752229690551758
    4. 'x' → logprob: -8.502229690551758
    5. 'result' → logprob: -10.377229690551758
    6. '
' → logprob: -11.127229690551758
    7. '``' → logprob: -11.377229690551758
    8. ' if' → logprob: -11.502229690551758
    9. 'return' → logprob: -11.877229690551758
    10. '    
' → logprob: -12.502229690551758

Token 1193: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.1307240128517151
    2. 'return' → logprob: -2.5057239532470703
    3. 'x' → logprob: -3.2557239532470703
    4. 'res' → logprob: -7.00572395324707
    5. 'r' → logprob: -8.00572395324707
    6. 'result' → logprob: -8.13072395324707
    7. 'ans' → logprob: -8.25572395324707
    8. 'a' → logprob: -9.38072395324707
    9. 'ret' → logprob: -9.50572395324707
    10. 'c' → logprob: -9.50572395324707

Token 1194: ' F' (ID: 454)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -1.193342924118042
    2. ' F' → logprob: -1.318342924118042
    3. ' X' → logprob: -1.568342924118042
    4. 'X' → logprob: -1.568342924118042
    5. ' not' → logprob: -4.943343162536621
    6. '   ' → logprob: -5.943343162536621
    7. ' is' → logprob: -7.318343162536621
    8. 'not' → logprob: -7.318343162536621
    9. ' N' → logprob: -7.443343162536621
    10. 'N' → logprob: -7.443343162536621

Token 1195: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -9.13388703338569e-06
    2. '1' → logprob: -11.625009536743164
    3. '2' → logprob: -16.125009536743164
    4. '_' → logprob: -18.625009536743164
    5. ' ' → logprob: -19.000009536743164
    6. '```' → logprob: -19.250009536743164
    7. '(' → logprob: -19.500009536743164
    8. '   ' → logprob: -19.812509536743164
    9. '``' → logprob: -19.875009536743164
    10. 'X' → logprob: -19.937509536743164

Token 1196: '_check' (ID: 15847)
  Prédit: '_check'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_check' → logprob: -1.5048530030981055e-06
    2. '_Check' → logprob: -14.375001907348633
    3. '_CHECK' → logprob: -14.625001907348633
    4. 'Check' → logprob: -16.500001907348633
    5. 'check' → logprob: -17.000001907348633
    6. '_' → logprob: -17.125001907348633
    7. '_checker' → logprob: -17.250001907348633
    8. '1' → logprob: -17.375001907348633
    9. '```' → logprob: -17.375001907348633
    10. '_chk' → logprob: -17.750001907348633

Token 1197: '_X' (ID: 16245)
  Prédit: '_X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_X' → logprob: -0.009360887110233307
    2. 'X' → logprob: -4.7593607902526855
    3. '(X' → logprob: -7.2593607902526855
    4. '_N' → logprob: -10.759361267089844
    5. '   ' → logprob: -12.634361267089844
    6. '`' → logprob: -12.884361267089844
    7. '```' → logprob: -12.884361267089844
    8. '	X' → logprob: -13.384361267089844
    9. ' X' → logprob: -13.509361267089844
    10. '
' → logprob: -14.009361267089844

Token 1198: '_even' (ID: 186029)
  Prédit: '_even'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_even' → logprob: -0.09524881094694138
    2. '_gt' → logprob: -2.7202486991882324
    3. 'even' → logprob: -4.220248699188232
    4. 'gt' → logprob: -4.595248699188232
    5. '_equal' → logprob: -9.59524917602539
    6. '>' → logprob: -10.34524917602539
    7. '_g' → logprob: -10.59524917602539
    8. '_eq' → logprob: -11.84524917602539
    9. '
' → logprob: -11.97024917602539
    10. ' even' → logprob: -12.09524917602539

Token 1199: '(X' (ID: 17061)
  Prédit: '(X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -0.0013921386562287807
    2. '(' → logprob: -6.626392364501953
    3. ' (' → logprob: -10.751392364501953
    4. '==' → logprob: -11.001392364501953
    5. ')' → logprob: -12.001392364501953
    6. '(N' → logprob: -12.126392364501953
    7. '(
' → logprob: -12.501392364501953
    8. ',' → logprob: -12.626392364501953
    9. '   ' → logprob: -13.376392364501953
    10. '```' → logprob: -13.501392364501953

Token 1200: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3266768753528595
    2. '):
' → logprob: -1.451676845550537
    3. '==' → logprob: -4.076676845550537
    4. ')' → logprob: -4.326676845550537
    5. ' and' → logprob: -5.201676845550537
    6. '   ' → logprob: -5.951676845550537
    7. ' ==' → logprob: -6.201676845550537
    8. ':' → logprob: -6.576676845550537
    9. 'and' → logprob: -6.701676845550537
    10. ',' → logprob: -6.951676845550537

Token 1201: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0027222526259720325
    2. '   ' → logprob: -6.127722263336182
    3. ' return' → logprob: -8.252721786499023
    4. '```' → logprob: -9.002721786499023
    5. '<|end|>' → logprob: -10.377721786499023
    6. 'return' → logprob: -10.377721786499023
    7. ' and' → logprob: -10.752721786499023
    8. ':
' → logprob: -10.752721786499023
    9. ':' → logprob: -11.377721786499023
    10. ':return' → logprob: -11.752721786499023

Token 1202: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.1447201669216156
    2. '       ' → logprob: -2.3947200775146484
    3. '   ' → logprob: -3.1447200775146484
    4. ' return' → logprob: -7.894720077514648
    5. 'if' → logprob: -9.769720077514648
    6. '```' → logprob: -10.894720077514648
    7. '	return' → logprob: -12.394720077514648
    8. '           ' → logprob: -13.144720077514648
    9. '    ' → logprob: -14.269720077514648
    10. '     ' → logprob: -14.519720077514648

Token 1203: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004530638922005892
    2. '(' → logprob: -5.629530429840088
    3. 'comb' → logprob: -8.129530906677246
    4. '1' → logprob: -8.504530906677246
    5. ' ' → logprob: -9.254530906677246
    6. '(com' → logprob: -9.379530906677246
    7. 'np' → logprob: -9.629530906677246
    8. 'pow' → logprob: -9.879530906677246
    9. '(F' → logprob: -10.504530906677246
    10. 'F' → logprob: -10.504530906677246

Token 1204: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06795508414506912
    2. '(' → logprob: -2.9429550170898438
    3. 'comb' → logprob: -5.192955017089844
    4. '(com' → logprob: -5.567955017089844
    5. '1' → logprob: -6.442955017089844
    6. 'F' → logprob: -7.067955017089844
    7. '(F' → logprob: -7.567955017089844
    8. '((' → logprob: -8.692955017089844
    9. '(N' → logprob: -9.192955017089844
    10. 'pow' → logprob: -9.192955017089844

Token 1205: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6403381824493408
    2. '   ' → logprob: -0.8903381824493408
    3. '<|end|>' → logprob: -2.890338182449341
    4. '    
' → logprob: -5.140337944030762
    5. ')' → logprob: -8.265337944030762
    6. '\n' → logprob: -8.640337944030762
    7. '<|end|>' → logprob: -9.015337944030762
    8. '  
' → logprob: -9.640337944030762
    9. ' 
' → logprob: -10.015337944030762
    10. ' if' → logprob: -10.765337944030762

Token 1206: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09139514714479446
    2. '   ' → logprob: -2.716395139694214
    3. '<|end|>' → logprob: -4.216395378112793
    4. '    
' → logprob: -5.216395378112793
    5. '  
' → logprob: -8.091395378112793
    6. ')' → logprob: -8.966395378112793
    7. ' 
' → logprob: -9.466395378112793
    8. ' if' → logprob: -9.466395378112793
    9. '\n' → logprob: -9.591395378112793
    10. ' ' → logprob: -10.091395378112793

Token 1207: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.03692895174026489
    2. 'res' → logprob: -4.536929130554199
    3. 'x' → logprob: -5.661929130554199
    4. 'y' → logprob: -6.036929130554199
    5. 'elif' → logprob: -6.036929130554199
    6. 's' → logprob: -6.411929130554199
    7. 'a' → logprob: -6.536929130554199
    8. 'return' → logprob: -6.536929130554199
    9. 'ans' → logprob: -6.536929130554199
    10. 'n' → logprob: -6.536929130554199

Token 1208: ' F' (ID: 454)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.011625607497990131
    2. ' F' → logprob: -4.88662576675415
    3. 'X' → logprob: -5.63662576675415
    4. 'not' → logprob: -8.136625289916992
    5. ' not' → logprob: -9.386625289916992
    6. ' X' → logprob: -10.011625289916992
    7. 'is' → logprob: -11.636625289916992
    8. '   ' → logprob: -12.261625289916992
    9. ' ' → logprob: -12.386625289916992
    10. '  ' → logprob: -13.261625289916992

Token 1209: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -9.088346359931165e-07
    2. '1' → logprob: -14.250000953674316
    3. '2' → logprob: -17.0
    4. '```' → logprob: -17.0
    5. 'unction' → logprob: -17.25
    6. ' ' → logprob: -17.5
    7. '0' → logprob: -17.625
    8. '   ' → logprob: -17.625
    9. '(N' → logprob: -17.875
    10. '#' → logprob: -18.0

Token 1210: '_check' (ID: 15847)
  Prédit: '_check'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_check' → logprob: -0.001772638875991106
    2. 'check' → logprob: -6.501772403717041
    3. '>' → logprob: -9.5017728805542
    4. 'X' → logprob: -10.1267728805542
    5. 'Check' → logprob: -10.3767728805542
    6. '(N' → logprob: -10.7517728805542
    7. '(X' → logprob: -10.8767728805542
    8. 'N' → logprob: -11.2517728805542
    9. '>X' → logprob: -12.0017728805542
    10. '   ' → logprob: -12.1267728805542

Token 1211: '_X' (ID: 16245)
  Prédit: '_X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_X' → logprob: -0.08777991682291031
    2. 'X' → logprob: -2.962779998779297
    3. '_N' → logprob: -3.462779998779297
    4. 'N' → logprob: -7.087779998779297
    5. '_n' → logprob: -9.212779998779297
    6. '(X' → logprob: -10.962779998779297
    7. 'n' → logprob: -11.087779998779297
    8. '```' → logprob: -11.087779998779297
    9. '`' → logprob: -11.962779998779297
    10. '#' → logprob: -12.462779998779297

Token 1212: '_gt' (ID: 87310)
  Prédit: '_gt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_gt' → logprob: -0.043029215186834335
    2. 'gt' → logprob: -3.168029308319092
    3. '(gt' → logprob: -11.793028831481934
    4. '>' → logprob: -12.543028831481934
    5. '_g' → logprob: -13.043028831481934
    6. '_N' → logprob: -13.168028831481934
    7. '
' → logprob: -13.168028831481934
    8. '_lt' → logprob: -13.293028831481934
    9. '```' → logprob: -13.418028831481934
    10. '_GT' → logprob: -13.543028831481934

Token 1213: '_N' (ID: 3080)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.12940949201583862
    2. '(N' → logprob: -2.1294095516204834
    3. 'X' → logprob: -6.379409313201904
    4. ' N' → logprob: -7.754409313201904
    5. '_N' → logprob: -9.004409790039062
    6. '(X' → logprob: -9.754409790039062
    7. '   ' → logprob: -10.254409790039062
    8. '```' → logprob: -10.379409790039062
    9. '[N' → logprob: -10.379409790039062
    10. ' (' → logprob: -11.004409790039062

Token 1214: '(X' (ID: 17061)
  Prédit: '(X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -2.339278580620885e-06
    2. ' (' → logprob: -13.500001907348633
    3. '   ' → logprob: -14.875001907348633
    4. '(' → logprob: -15.625001907348633
    5. '(N' → logprob: -16.375001907348633
    6. '(
' → logprob: -16.375001907348633
    7. '```' → logprob: -16.500001907348633
    8. 'X' → logprob: -16.875001907348633
    9. '==' → logprob: -17.875001907348633
    10. '[X' → logprob: -18.125001907348633

Token 1215: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013875007862225175
    2. '):
' → logprob: -7.501387596130371
    3. ',N' → logprob: -8.001387596130371
    4. '):' → logprob: -8.626387596130371
    5. ' ,' → logprob: -8.626387596130371
    6. '   ' → logprob: -9.501387596130371
    7. '(N' → logprob: -10.376387596130371
    8. ',
' → logprob: -11.626387596130371
    9. '==' → logprob: -12.251387596130371
    10. ')' → logprob: -12.376387596130371

Token 1216: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00014013137842994183
    2. ' N' → logprob: -8.875140190124512
    3. '   ' → logprob: -15.625140190124512
    4. '	N' → logprob: -17.250139236450195
    5. '  ' → logprob: -19.875139236450195
    6. ' ' → logprob: -20.000139236450195
    7. '[N' → logprob: -20.125139236450195
    8. '    ' → logprob: -20.750139236450195
    9. '_N' → logprob: -20.750139236450195
    10. 'X' → logprob: -20.750139236450195

Token 1217: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2521219849586487
    2. '):' → logprob: -1.502121925354004
    3. '   ' → logprob: -8.877121925354004
    4. ' ):
' → logprob: -11.252121925354004
    5. '):
' → logprob: -11.627121925354004
    6. '       ' → logprob: -11.752121925354004
    7. ')' → logprob: -11.877121925354004
    8. ':' → logprob: -12.252121925354004
    9. '):

' → logprob: -12.627121925354004
    10. ' ):' → logprob: -12.877121925354004

Token 1218: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0022009287495166063
    2. '   ' → logprob: -6.252201080322266
    3. 'return' → logprob: -9.377201080322266
    4. '	return' → logprob: -9.377201080322266
    5. ' return' → logprob: -9.502201080322266
    6. '0' → logprob: -11.627201080322266
    7. '```' → logprob: -12.377201080322266
    8. ':return' → logprob: -12.752201080322266
    9. '	' → logprob: -13.252201080322266
    10. '<|end|>' → logprob: -13.377201080322266

Token 1219: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.23806586861610413
    2. '       ' → logprob: -1.7380658388137817
    3. '0' → logprob: -3.8630659580230713
    4. '   ' → logprob: -4.238065719604492
    5. ' return' → logprob: -7.613065719604492
    6. '1' → logprob: -10.613065719604492
    7. '	return' → logprob: -12.238065719604492
    8. '```' → logprob: -12.613065719604492
    9. '
' → logprob: -12.863065719604492
    10. ' ' → logprob: -12.988065719604492

Token 1220: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004081247374415398
    2. ' ' → logprob: -5.5040812492370605
    3. '(' → logprob: -13.879080772399902
    4. '1' → logprob: -14.129080772399902
    5. '   ' → logprob: -14.879080772399902
    6. ' (' → logprob: -15.504080772399902
    7. 'None' → logprob: -15.879080772399902
    8. '  ' → logprob: -16.25408172607422
    9. 'np' → logprob: -16.50408172607422
    10. 'pow' → logprob: -16.81658172607422

Token 1221: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002719449403230101
    2. '(' → logprob: -9.625271797180176
    3. '1' → logprob: -9.625271797180176
    4. '-' → logprob: -9.875271797180176
    5. 'F' → logprob: -11.000271797180176
    6. '(N' → logprob: -11.125271797180176
    7. 'N' → logprob: -11.500271797180176
    8. 'pow' → logprob: -11.750271797180176
    9. ' ' → logprob: -11.875271797180176
    10. 'comb' → logprob: -12.125271797180176

Token 1222: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008799867704510689
    2. '
' → logprob: -4.758800029754639
    3. 'def' → logprob: -9.63379955291748
    4. 'return' → logprob: -10.25879955291748
    5. '    
' → logprob: -11.00879955291748
    6. '```' → logprob: -11.00879955291748
    7. '<|end|>' → logprob: -11.50879955291748
    8. 'import' → logprob: -11.88379955291748
    9. 'from' → logprob: -12.13379955291748
    10. 'if' → logprob: -12.25879955291748

Token 1223: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1292385458946228
    2. '
' → logprob: -2.1292386054992676
    3. '```' → logprob: -6.254238605499268
    4. '    
' → logprob: -8.37923812866211
    5. 'return' → logprob: -9.50423812866211
    6. '``' → logprob: -11.00423812866211
    7. 'if' → logprob: -11.25423812866211
    8. '
' → logprob: -11.37923812866211
    9. 'def' → logprob: -11.50423812866211
    10. '`' → logprob: -12.62923812866211

Token 1224: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -1.7469414472579956
    2. 'x' → logprob: -1.7469414472579956
    3. 'return' → logprob: -1.8719414472579956
    4. 'res' → logprob: -1.8719414472579956
    5. '   ' → logprob: -2.621941566467285
    6. 'ans' → logprob: -2.996941566467285
    7. 'result' → logprob: -2.996941566467285
    8. 'r' → logprob: -3.121941566467285
    9. 'ret' → logprob: -3.621941566467285
    10. 'a' → logprob: -3.871941566467285

Token 1225: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.015713246539235115
    2. '=' → logprob: -5.140713214874268
    3. '_max' → logprob: -5.640713214874268
    4. '_range' → logprob: -6.265713214874268
    5. '_min' → logprob: -6.640713214874268
    6. 'max' → logprob: -7.515713214874268
    7. '_' → logprob: -7.765713214874268
    8. '_start' → logprob: -8.015713691711426
    9. '_values' → logprob: -8.265713691711426
    10. '_val' → logprob: -8.390713691711426

Token 1226: ' F' (ID: 454)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.1443077176809311
    2. 'F' → logprob: -2.0193076133728027
    3. ' N' → logprob: -6.519307613372803
    4. ' F' → logprob: -9.144308090209961
    5. 'X' → logprob: -10.769308090209961
    6. ' ' → logprob: -11.144308090209961
    7. '(N' → logprob: -12.394308090209961
    8. '(' → logprob: -12.644308090209961
    9. '0' → logprob: -13.144308090209961
    10. '   ' → logprob: -13.644308090209961

Token 1227: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.00014334988372866064
    2. '(N' → logprob: -8.875143051147461
    3. 'check' → logprob: -14.000143051147461
    4. '_check' → logprob: -14.375143051147461
    5. '
' → logprob: -15.125143051147461
    6. '_' → logprob: -15.125143051147461
    7. '`' → logprob: -15.250143051147461
    8. ' ' → logprob: -15.625143051147461
    9. '```' → logprob: -15.750143051147461
    10. 'C' → logprob: -16.25014305114746

Token 1228: '_check' (ID: 15847)
  Prédit: '_check'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_check' → logprob: -0.0011393846943974495
    2. ' =' → logprob: -7.001139163970947
    3. '(N' → logprob: -8.876139640808105
    4. 'check' → logprob: -10.626139640808105
    5. '=' → logprob: -10.751139640808105
    6. 'Check' → logprob: -11.376139640808105
    7. '_calc' → logprob: -11.501139640808105
    8. '=N' → logprob: -12.501139640808105
    9. '_return' → logprob: -13.126139640808105
    10. ' ' → logprob: -13.376139640808105

Token 1229: '_n' (ID: 2170)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.07612711936235428
    2. '_n' → logprob: -2.951127052307129
    3. 'n' → logprob: -3.951127052307129
    4. '(n' → logprob: -6.826127052307129
    5. 'N' → logprob: -8.576127052307129
    6. '(X' → logprob: -9.076127052307129
    7. '3' → logprob: -9.201127052307129
    8. '_N' → logprob: -9.451127052307129
    9. '(' → logprob: -9.826127052307129
    10. '_check' → logprob: -10.451127052307129

Token 1230: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.01168910600244999
    2. '(X' → logprob: -4.636689186096191
    3. 'N' → logprob: -6.511689186096191
    4. 'X' → logprob: -8.011689186096191
    5. '(' → logprob: -9.261689186096191
    6. '```' → logprob: -11.136689186096191
    7. '(n' → logprob: -13.511689186096191
    8. '(
' → logprob: -14.261689186096191
    9. '	N' → logprob: -15.386689186096191
    10. '   ' → logprob: -15.386689186096191

Token 1231: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00026574634830467403
    2. ',X' → logprob: -8.625266075134277
    3. ' ,' → logprob: -9.625266075134277
    4. ',
' → logprob: -11.750266075134277
    5. '   ' → logprob: -12.500266075134277
    6. 'X' → logprob: -12.875266075134277
    7. '(X' → logprob: -13.125266075134277
    8. 'def' → logprob: -13.875266075134277
    9. ')' → logprob: -14.250266075134277
    10. '<|end|>' → logprob: -15.125266075134277

Token 1232: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.00028624574770219624
    2. 'N' → logprob: -8.250286102294922
    3. ' X' → logprob: -10.625286102294922
    4. '   ' → logprob: -14.500286102294922
    5. ' N' → logprob: -17.250286102294922
    6. ' ' → logprob: -17.500286102294922
    7. '  ' → logprob: -18.250286102294922
    8. '	X' → logprob: -19.250286102294922
    9. 'XN' → logprob: -19.500286102294922
    10. '```' → logprob: -19.875286102294922

Token 1233: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2824710011482239
    2. ')' → logprob: -1.407470941543579
    3. '   ' → logprob: -6.782471179962158
    4. ')
' → logprob: -8.657470703125
    5. ' )
' → logprob: -13.407470703125
    6. '-' → logprob: -13.407470703125
    7. '()' → logprob: -13.657470703125
    8. ')return' → logprob: -13.907470703125
    9. 'def' → logprob: -14.157470703125
    10. ' ' → logprob: -14.282470703125

Token 1234: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005537479883059859
    2. '```' → logprob: -8.000554084777832
    3. '<|end|>' → logprob: -9.875554084777832
    4. 'def' → logprob: -9.875554084777832
    5. '       ' → logprob: -10.875554084777832
    6. 'return' → logprob: -11.000554084777832
    7. ',' → logprob: -11.375554084777832
    8. '
' → logprob: -11.875554084777832
    9. ':' → logprob: -12.125554084777832
    10. 'comb' → logprob: -12.250554084777832

Token 1235: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010527156293392181
    2. 'return' (adapté à ' return') → logprob: -4.63552713394165
    3. 'r' → logprob: -8.260527610778809
    4. 'res' → logprob: -8.635527610778809
    5. 'a' → logprob: -9.385527610778809
    6. 't' → logprob: -10.010527610778809
    7. 'c' → logprob: -10.385527610778809
    8. 's' → logprob: -10.385527610778809
    9. 'R' → logprob: -10.760527610778809
    10. ' return' → logprob: -11.010527610778809

Token 1236: ' comb' (ID: 4134)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.27090689539909363
    2. '(com' → logprob: -1.645906925201416
    3. ' comb' → logprob: -3.395906925201416
    4. '(' → logprob: -5.395906925201416
    5. '(n' → logprob: -6.020906925201416
    6. ' (' → logprob: -6.395906925201416
    7. 'com' → logprob: -6.895906925201416
    8. 'np' → logprob: -8.270906448364258
    9. '(int' → logprob: -8.520906448364258
    10. 'n' → logprob: -8.520906448364258

Token 1237: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -4.246537173457909e-06
    2. 'n' → logprob: -12.375003814697266
    3. '(N' → logprob: -17.000003814697266
    4. '(' → logprob: -17.500003814697266
    5. '[' → logprob: -18.375003814697266
    6. '[N' → logprob: -18.500003814697266
    7. 'e' → logprob: -20.125003814697266
    8. '(n' → logprob: -20.375003814697266
    9. 'int' → logprob: -20.375003814697266
    10. 'ination' → logprob: -20.625003814697266

Token 1238: '[:' (ID: 7808)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.0017361093778163195
    2. '[' → logprob: -6.751736164093018
    3. '[N' → logprob: -8.87673568725586
    4. '(n' → logprob: -9.37673568725586
    5. '[:' → logprob: -9.75173568725586
    6. 'n' → logprob: -10.00173568725586
    7. '[...,' → logprob: -10.00173568725586
    8. '<|end|>' → logprob: -10.62673568725586
    9. '[:]' → logprob: -10.75173568725586
    10. '```' → logprob: -10.87673568725586

Token 1239: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -7.004696090007201e-05
    2. 'X' → logprob: -10.500069618225098
    3. '(n' → logprob: -10.500069618225098
    4. ' n' → logprob: -12.125069618225098
    5. '(' → logprob: -12.250069618225098
    6. 'N' → logprob: -13.125069618225098
    7. ',' → logprob: -14.000069618225098
    8. ',n' → logprob: -14.375069618225098
    9. '[n' → logprob: -15.375069618225098
    10. '1' → logprob: -15.375069618225098

Token 1240: '].' (ID: 1651)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.008615399710834026
    2. '[' → logprob: -5.758615493774414
    3. '[X' → logprob: -5.883615493774414
    4. '[n' → logprob: -6.758615493774414
    5. '].' → logprob: -7.133615493774414
    6. '+' → logprob: -7.758615493774414
    7. '][' → logprob: -9.883615493774414
    8. '[-' → logprob: -10.258615493774414
    9. 'n' → logprob: -10.633615493774414
    10. ']
' → logprob: -10.883615493774414

Token 1241: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -9.253090865968261e-06
    2. 'copy' → logprob: -12.000009536743164
    3. 'tolist' → logprob: -12.875009536743164
    4. '.sum' → logprob: -15.375009536743164
    5. ' sum' → logprob: -16.125009536743164
    6. 'astype' → logprob: -16.750009536743164
    7. 'dot' → logprob: -17.250009536743164
    8. '	sum' → logprob: -18.500009536743164
    9. '_sum' → logprob: -18.625009536743164
    10. 'max' → logprob: -19.375009536743164

Token 1242: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0009202735964208841
    2. '()%' → logprob: -7.000920295715332
    3. '(' → logprob: -12.500920295715332
    4. '()+' → logprob: -12.875920295715332
    5. '()]' → logprob: -14.375920295715332
    6. '()>' → logprob: -15.000920295715332
    7. '()<' → logprob: -15.125920295715332
    8. '()
' → logprob: -15.375920295715332
    9. '().' → logprob: -15.375920295715332
    10. ' ()' → logprob: -15.375920295715332

Token 1243: ' %' (ID: 1851)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1244: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0004307884373702109
    2. ' MOD' → logprob: -7.750430583953857
    3. '_MOD' → logprob: -18.375431060791016
    4. '.MOD' → logprob: -18.500431060791016
    5. 'MO' → logprob: -18.750431060791016
    6. '998' → logprob: -18.875431060791016
    7. ' ' → logprob: -19.250431060791016
    8. 'mod' → logprob: -19.875431060791016
    9. 'MODE' → logprob: -21.125431060791016
    10. 'MD' → logprob: -21.750431060791016

Token 1245: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1246: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1247: ' answer' (ID: 6052)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.06982593238353729
    2. '__' → logprob: -3.1948258876800537
    3. 'solve' → logprob: -4.194826126098633
    4. 'def' → logprob: -5.319826126098633
    5. ' main' → logprob: -5.944826126098633
    6. 'F' → logprob: -6.444826126098633
    7. 'run' → logprob: -7.069826126098633
    8. 'combine' → logprob: -8.069826126098633
    9. 'read' → logprob: -8.319826126098633
    10. 'solution' → logprob: -8.819826126098633

Token 1248: '_sum' (ID: 29859)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.599155068397522
    2. '(N' → logprob: -0.849155068397522
    3. ' =' → logprob: -4.474154949188232
    4. '(' → logprob: -4.974154949188232
    5. ' def' → logprob: -6.099154949188232
    6. '=' → logprob: -7.974154949188232
    7. '(n' → logprob: -8.09915542602539
    8. '(def' → logprob: -8.09915542602539
    9. '(_' → logprob: -8.84915542602539
    10. '(*' → logprob: -9.22415542602539

Token 1249: '(a' (ID: 6271)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.41311344504356384
    2. 'def' → logprob: -2.0381133556365967
    3. '(' → logprob: -2.1631133556365967
    4. '(*' → logprob: -2.7881133556365967
    5. '(_' → logprob: -4.288113594055176
    6. '(A' → logprob: -5.538113594055176
    7. '(X' → logprob: -6.038113594055176
    8. ' =' → logprob: -6.288113594055176
    9. '(s' → logprob: -7.038113594055176
    10. '(n' → logprob: -7.163113594055176

Token 1250: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2675115466117859
    2. 'rr' → logprob: -2.0175116062164307
    3. '):' → logprob: -3.3925116062164307
    4. 'rray' → logprob: -3.3925116062164307
    5. 's' → logprob: -4.017511367797852
    6. '):
' → logprob: -5.267511367797852
    7. 'r' → logprob: -5.517511367797852
    8. ',b' → logprob: -6.142511367797852
    9. '[' → logprob: -6.392511367797852
    10. ',r' → logprob: -7.017511367797852

Token 1251: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0009196776081807911
    2. ' b' → logprob: -7.375919818878174
    3. 'mod' → logprob: -8.750919342041016
    4. 'MOD' → logprob: -9.500919342041016
    5. 'a' → logprob: -11.250919342041016
    6. 'len' → logprob: -11.375919342041016
    7. 'm' → logprob: -12.250919342041016
    8. 'M' → logprob: -12.500919342041016
    9. 'N' → logprob: -12.500919342041016
    10. ')' → logprob: -12.750919342041016

Token 1252: ',' (ID: 11)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5765423774719238
    2. '):' → logprob: -0.8265423774719238
    3. '):
' → logprob: -7.951542377471924
    4. ',' → logprob: -8.951541900634766
    5. ')' → logprob: -9.076541900634766
    6. '):

' → logprob: -13.201541900634766
    7. '   ' → logprob: -13.326541900634766
    8. ':' → logprob: -13.576541900634766
    9. '=' → logprob: -14.326541900634766
    10. 'a' → logprob: -15.826541900634766

Token 1253: ' c' (ID: 274)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.017210299149155617
    2. 'mod' → logprob: -4.392210483551025
    3. ' MOD' → logprob: -6.142210483551025
    4. 'c' → logprob: -6.267210483551025
    5. ')' → logprob: -8.142210006713867
    6. 'M' → logprob: -9.142210006713867
    7. 'N' → logprob: -9.767210006713867
    8. ' mod' → logprob: -10.017210006713867
    9. '):
' → logprob: -10.642210006713867
    10. 'm' → logprob: -10.767210006713867

Token 1254: ',' (ID: 11)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.08095526695251465
    2. '):' → logprob: -2.5809552669525146
    3. '):
' → logprob: -6.205955505371094
    4. ',' → logprob: -10.455955505371094
    5. ')' → logprob: -11.705955505371094
    6. '):

' → logprob: -12.080955505371094
    7. '   ' → logprob: -13.955955505371094
    8. ')
' → logprob: -14.455955505371094
    9. ' ):
' → logprob: -15.330955505371094
    10. '_' → logprob: -15.705955505371094

Token 1255: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.08780951052904129
    2. 'd' → logprob: -3.2128095626831055
    3. ' MOD' → logprob: -4.0878095626831055
    4. 'N' → logprob: -4.8378095626831055
    5. 'mod' → logprob: -4.8378095626831055
    6. 'X' → logprob: -5.2128095626831055
    7. ' d' → logprob: -6.3378095626831055
    8. ')' → logprob: -6.3378095626831055
    9. '   ' → logprob: -8.087809562683105
    10. ' N' → logprob: -8.212809562683105

Token 1256: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.12701620161533356
    2. '):' → logprob: -2.127016305923462
    3. '):
' → logprob: -9.877016067504883
    4. ')' → logprob: -11.127016067504883
    5. '   ' → logprob: -11.127016067504883
    6. ':' → logprob: -12.752016067504883
    7. '):

' → logprob: -13.127016067504883
    8. '():
' → logprob: -14.002016067504883
    9. ',' → logprob: -14.502016067504883
    10. '=' → logprob: -14.877016067504883

Token 1257: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.47531819343566895
    2. '   ' → logprob: -0.975318193435669
    3. ' return' → logprob: -6.85031795501709
    4. '	return' → logprob: -8.85031795501709
    5. '(' → logprob: -10.72531795501709
    6. '(return' → logprob: -12.22531795501709
    7. '```' → logprob: -12.72531795501709
    8. '{return' → logprob: -12.97531795501709
    9. '(a' → logprob: -13.22531795501709
    10. 'def' → logprob: -13.85031795501709

Token 1258: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0006834837258793414
    2. '   ' → logprob: -8.250683784484863
    3. '(a' → logprob: -8.375683784484863
    4. ' return' → logprob: -8.875683784484863
    5. '(return' → logprob: -10.000683784484863
    6. '((' → logprob: -13.500683784484863
    7. '{return' → logprob: -13.500683784484863
    8. 'a' → logprob: -13.875683784484863
    9. '(ans' → logprob: -14.125683784484863
    10. '	return' → logprob: -14.500683784484863

Token 1259: ' (' (ID: 350)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -1.0564331205387134e-05
    2. ' (' → logprob: -11.62501049041748
    3. '((' → logprob: -14.00001049041748
    4. '(' → logprob: -14.37501049041748
    5. 'a' → logprob: -15.75001049041748
    6. '
' → logprob: -17.250011444091797
    7. '(np' → logprob: -18.000011444091797
    8. '(ans' → logprob: -18.125011444091797
    9. '(A' → logprob: -18.250011444091797
    10. '(int' → logprob: -18.750011444091797

Token 1260: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.25194936990737915
    2. '(a' → logprob: -1.5019493103027344
    3. '(' → logprob: -11.876949310302734
    4. ' a' → logprob: -12.126949310302734
    5. ' (' → logprob: -12.126949310302734
    6. '((' → logprob: -13.126949310302734
    7. '(
' → logprob: -15.876949310302734
    8. '[a' → logprob: -16.001949310302734
    9. '   ' → logprob: -16.876949310302734
    10. '```' → logprob: -17.126949310302734

Token 1261: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5759552121162415
    2. '+' → logprob: -0.8259552121162415
    3. '+b' → logprob: -11.075955390930176
    4. '+
' → logprob: -16.32595443725586
    5. ' ' → logprob: -16.70095443725586
    6. '＋' → logprob: -17.20095443725586
    7. '+c' → logprob: -17.82595443725586
    8. '+=' → logprob: -17.95095443725586
    9. ' ' → logprob: -18.20095443725586
    10. '%' → logprob: -18.20095443725586

Token 1262: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.002482434967532754
    2. ' b' → logprob: -6.0024824142456055
    3. '(b' → logprob: -12.002482414245605
    4. ' (' → logprob: -15.002482414245605
    5. '(' → logprob: -15.502482414245605
    6. 'c' → logprob: -18.127483367919922
    7. '   ' → logprob: -19.252483367919922
    8. ' ' → logprob: -19.877483367919922
    9. '
' → logprob: -20.127483367919922
    10. '	b' → logprob: -20.877483367919922

Token 1263: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4742259383201599
    2. ' +' → logprob: -0.9742259383201599
    3. ')' → logprob: -9.224225997924805
    4. '+c' → logprob: -9.974225997924805
    5. '%' → logprob: -13.099225997924805
    6. '+
' → logprob: -13.974225997924805
    7. ' +
' → logprob: -15.599225997924805
    8. '
' → logprob: -16.599225997924805
    9. '```' → logprob: -16.724225997924805
    10. '<|end|>' → logprob: -16.849225997924805

Token 1264: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0003802680876106024
    2. ' c' → logprob: -7.875380039215088
    3. ')c' → logprob: -16.75037956237793
    4. '(c' → logprob: -16.87537956237793
    5. '
' → logprob: -17.37537956237793
    6. '   ' → logprob: -18.62537956237793
    7. '	c' → logprob: -19.62537956237793
    8. '    ' → logprob: -20.00037956237793
    9. '%c' → logprob: -20.00037956237793
    10. '
' → logprob: -20.25037956237793

Token 1265: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1041145626222715e-05
    2. ')%' → logprob: -11.500011444091797
    3. ' )' → logprob: -14.125011444091797
    4. '）' → logprob: -17.000011444091797
    5. '   ' → logprob: -17.875011444091797
    6. '```' → logprob: -19.000011444091797
    7. ')
' → logprob: -19.250011444091797
    8. '%' → logprob: -19.625011444091797
    9. '`)' → logprob: -20.625011444091797
    10. '")' → logprob: -21.375011444091797

Token 1266: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.5759923458099365
    2. ' %' → logprob: -0.8259923458099365
    3. ')' → logprob: -10.450992584228516
    4. '<|end|>' → logprob: -11.825992584228516
    5. 'def' → logprob: -12.075992584228516
    6. '%A' → logprob: -13.200992584228516
    7. '%D' → logprob: -13.325992584228516
    8. ')%' → logprob: -13.325992584228516
    9. '%B' → logprob: -13.450992584228516
    10. '   ' → logprob: -13.450992584228516

Token 1267: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0007100477814674377
    2. ' MOD' → logprob: -7.2507100105285645
    3. '_MOD' → logprob: -18.000709533691406
    4. '.MOD' → logprob: -19.625709533691406
    5. ' ' → logprob: -20.500709533691406
    6. ' ' → logprob: -20.750709533691406
    7. '(M' → logprob: -21.000709533691406
    8. '```' → logprob: -21.250709533691406
    9. 'MO' → logprob: -21.375709533691406
    10. 'MODE' → logprob: -22.000709533691406

Token 1268: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -4.632542913896032e-05
    2. 'if' → logprob: -11.000046730041504
    3. '```' → logprob: -11.125046730041504
    4. 'import' → logprob: -11.625046730041504
    5. '#' → logprob: -12.875046730041504
    6. 'for' → logprob: -14.125046730041504
    7. '<|end|>' → logprob: -14.250046730041504
    8. 'ndef' → logprob: -14.625046730041504
    9. ' def' → logprob: -15.375046730041504
    10. '``' → logprob: -15.375046730041504

Token 1269: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.000320565392030403
    2. '```' → logprob: -8.125320434570312
    3. 'if' → logprob: -11.125320434570312
    4. 'for' → logprob: -12.750320434570312
    5. '``' → logprob: -13.250320434570312
    6. 'import' → logprob: -13.250320434570312
    7. '
' → logprob: -14.000320434570312
    8. ' def' → logprob: -14.625320434570312
    9. 'code' → logprob: -15.000320434570312
    10. 'n' → logprob: -15.125320434570312

Token 1270: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.00011749001714633778
    2. ' main' → logprob: -9.750117301940918
    3. 'solve' → logprob: -9.750117301940918
    4. '__' → logprob: -15.250117301940918
    5. 'def' → logprob: -15.500117301940918
    6. 'solution' → logprob: -15.750117301940918
    7. 'answer' → logprob: -16.500118255615234
    8. '_main' → logprob: -17.000118255615234
    9. 'run' → logprob: -17.375118255615234
    10. 'process' → logprob: -17.375118255615234

Token 1271: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.100211963057518
    2. '():
' → logprob: -2.3502118587493896
    3. '():
' → logprob: -13.225212097167969
    4. '()' → logprob: -13.725212097167969
    5. ' ():' → logprob: -13.725212097167969
    6. '():

' → logprob: -14.600212097167969
    7. '(argv' → logprob: -14.725212097167969
    8. 'def' → logprob: -14.975212097167969
    9. '();' → logprob: -16.60021209716797
    10. '(argc' → logprob: -17.85021209716797

Token 1272: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004157226532697678
    2. 'import' → logprob: -5.754157066345215
    3. 'data' → logprob: -7.879157066345215
    4. '```' → logprob: -8.379157066345215
    5. 'input' → logprob: -9.629157066345215
    6. '	import' → logprob: -9.629157066345215
    7. ' import' → logprob: -9.754157066345215
    8. ' data' → logprob: -10.379157066345215
    9. '	data' → logprob: -10.629157066345215
    10. '	line' → logprob: -10.754157066345215

Token 1273: ' input' (ID: 3422)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.512190580368042
    2. 'data' → logprob: -1.887190580368042
    3. 'args' → logprob: -2.262190580368042
    4. '   ' → logprob: -2.637190580368042
    5. 'input' (adapté à ' input') → logprob: -3.262190580368042
    6. 'inputs' → logprob: -3.762190580368042
    7. 'argv' → logprob: -5.262190818786621
    8. 'stdin' → logprob: -6.137190818786621
    9. 'tokens' → logprob: -6.637190818786621
    10. 'L' → logprob: -7.262190818786621

Token 1274: '_lst' (ID: 72474)
  Prédit: '_data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_data' → logprob: -0.44201260805130005
    2. '()' → logprob: -1.6920125484466553
    3. '_' → logprob: -2.3170125484466553
    4. '_tokens' → logprob: -3.0670125484466553
    5. 's' → logprob: -4.692012786865234
    6. 'data' → logprob: -5.567012786865234
    7. '_line' → logprob: -5.692012786865234
    8. '_=' → logprob: -5.817012786865234
    9. '_lines' → logprob: -6.567012786865234
    10. '_list' → logprob: -6.567012786865234

Token 1275: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12696485221385956
    2. ' =' → logprob: -2.126964807510376
    3. '   ' → logprob: -11.001964569091797
    4. '()' → logprob: -11.126964569091797
    5. '＝' → logprob: -13.126964569091797
    6. '=
' → logprob: -14.126964569091797
    7. '_=' → logprob: -14.376964569091797
    8. 's' → logprob: -14.876964569091797
    9. '```' → logprob: -14.876964569091797
    10. '_' → logprob: -15.126964569091797

Token 1276: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.007212341297417879
    2. ' read' → logprob: -5.257212162017822
    3. 'sys' → logprob: -6.257212162017822
    4. ' sys' → logprob: -9.88221263885498
    5. 'list' → logprob: -11.75721263885498
    6. '(read' → logprob: -15.00721263885498
    7. '	read' → logprob: -15.75721263885498
    8. ' list' → logprob: -15.88221263885498
    9. ' ' → logprob: -16.132211685180664
    10. '   ' → logprob: -16.257211685180664

Token 1277: '_st' (ID: 2518)
  Prédit: '_st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_st' → logprob: -0.002546293195337057
    2. '()' → logprob: -6.127546310424805
    3. '_' → logprob: -8.627546310424805
    4. '().' → logprob: -9.877546310424805
    5. '_stdout' → logprob: -10.752546310424805
    6. '_split' → logprob: -11.002546310424805
    7. 'stdin' → logprob: -11.002546310424805
    8. '_sys' → logprob: -11.377546310424805
    9. '_line' → logprob: -11.502546310424805
    10. '(stdin' → logprob: -12.127546310424805

Token 1278: 'din' (ID: 28388)
  Prédit: 'din'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'din' → logprob: -0.010239406488835812
    2. 'd' → logprob: -4.760239601135254
    3. 'in' → logprob: -6.510239601135254
    4. 'di' → logprob: -10.135239601135254
    5. 'dx' → logprob: -10.885239601135254
    6. 'stdin' → logprob: -10.885239601135254
    7. 'td' → logprob: -11.510239601135254
    8. 'dp' → logprob: -11.510239601135254
    9. 'input' → logprob: -12.135239601135254
    10. '()
' → logprob: -12.635239601135254

Token 1279: '_split' (ID: 39921)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.4107573628425598
    2. '()' → logprob: -1.160757303237915
    3. '_split' → logprob: -3.785757303237915
    4. '()
' → logprob: -7.285757541656494
    5. 'split' → logprob: -8.660757064819336
    6. '_' → logprob: -11.410757064819336
    7. '   ' → logprob: -11.660757064819336
    8. '()[' → logprob: -11.910757064819336
    9. ' ()' → logprob: -12.410757064819336
    10. '_line' → logprob: -13.160757064819336

Token 1280: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.25264686346054077
    2. '()
' → logprob: -1.5026469230651855
    3. '   ' → logprob: -7.3776469230651855
    4. 'def' → logprob: -10.127646446228027
    5. '()\' → logprob: -10.877646446228027
    6. '()
' → logprob: -12.002646446228027
    7. '()

' → logprob: -12.127646446228027
    8. '()[' → logprob: -12.127646446228027
    9. '
' → logprob: -13.002646446228027
    10. '())' → logprob: -13.377646446228027

Token 1281: '   ' (ID: 271)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.06317972391843796
    2. '   ' → logprob: -2.8131797313690186
    3. ' N' → logprob: -6.9381794929504395
    4. ',' → logprob: -8.938179969787598
    5. '```' → logprob: -9.938179969787598
    6. '(N' → logprob: -10.813179969787598
    7. ',N' → logprob: -11.313179969787598
    8. 'n' → logprob: -11.813179969787598
    9. '[N' → logprob: -12.063179969787598
    10. '	N' → logprob: -12.813179969787598

Token 1282: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -1.8550976164988242e-05
    2. '   ' → logprob: -11.250018119812012
    3. ' N' → logprob: -12.500018119812012
    4. '[N' → logprob: -13.500018119812012
    5. '(N' → logprob: -15.875018119812012
    6. 'n' → logprob: -15.875018119812012
    7. '    
' → logprob: -16.625019073486328
    8. '[' → logprob: -17.250019073486328
    9. '```' → logprob: -17.250019073486328
    10. ' ' → logprob: -17.375019073486328

Token 1283: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.17586871981620789
    2. ' =' → logprob: -2.0508687496185303
    3. '=' → logprob: -3.4258687496185303
    4. '   ' → logprob: -10.05086898803711
    5. ',X' → logprob: -10.42586898803711
    6. '=int' → logprob: -10.80086898803711
    7. ' ,' → logprob: -11.17586898803711
    8. ' ' → logprob: -12.67586898803711
    9. ',
' → logprob: -12.80086898803711
    10. ' =
' → logprob: -12.80086898803711

Token 1284: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.0005358747439458966
    2. ' X' → logprob: -8.25053596496582
    3. 'K' → logprob: -8.50053596496582
    4. '=' → logprob: -9.75053596496582
    5. ' =' → logprob: -12.12553596496582
    6. 'M' → logprob: -12.25053596496582
    7. 'Q' → logprob: -13.87553596496582
    8. ' ' → logprob: -14.87553596496582
    9. 'N' → logprob: -14.87553596496582
    10. '   ' → logprob: -15.00053596496582

Token 1285: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16209755837917328
    2. ' =' → logprob: -1.9120975732803345
    3. ',' → logprob: -6.287097454071045
    4. '   ' → logprob: -12.162097930908203
    5. '[' → logprob: -12.912097930908203
    6. ' ' → logprob: -12.912097930908203
    7. ')' → logprob: -15.162097930908203
    8. ' ,' → logprob: -15.287097930908203
    9. '  ' → logprob: -15.412097930908203
    10. '    ' → logprob: -16.037097930908203

Token 1286: ' parse' (ID: 8420)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.5311062932014465
    2. 'parse' → logprob: -1.0311062335968018
    3. ' map' → logprob: -3.1561062335968018
    4. ' parse' → logprob: -4.406106472015381
    5. 'int' → logprob: -8.031105995178223
    6. 'list' → logprob: -9.031105995178223
    7. 'tuple' → logprob: -9.406105995178223
    8. 'read' → logprob: -10.781105995178223
    9. 'next' → logprob: -10.906105995178223
    10. '   ' → logprob: -11.031105995178223

Token 1287: '_int' (ID: 12285)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.9832869172096252
    2. '(input' → logprob: -0.9832869172096252
    3. '_int' → logprob: -1.7332868576049805
    4. 'int' → logprob: -2.6082868576049805
    5. '=input' → logprob: -7.4832868576049805
    6. '(int' → logprob: -8.85828685760498
    7. '[input' → logprob: -8.85828685760498
    8. ' input' → logprob: -9.10828685760498
    9. '<input' → logprob: -9.23328685760498
    10. 'Int' → logprob: -9.48328685760498

Token 1288: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.003624188946560025
    2. 'sts' → logprob: -6.628623962402344
    3. '_lst' → logprob: -7.253623962402344
    4. '(input' → logprob: -7.378623962402344
    5. 'lst' → logprob: -7.378623962402344
    6. 'int' → logprob: -9.128623962402344
    7. 'ints' → logprob: -9.628623962402344
    8. '(N' → logprob: -10.628623962402344
    9. '_int' → logprob: -11.003623962402344
    10. '(lst' → logprob: -11.128623962402344

Token 1289: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -1.306760805164231e-05
    2. 'input' → logprob: -11.25001335144043
    3. '=input' → logprob: -17.75001335144043
    4. ',input' → logprob: -18.37501335144043
    5. ' input' → logprob: -18.87501335144043
    6. '(' → logprob: -19.00001335144043
    7. '<input' → logprob: -20.00001335144043
    8. '(
' → logprob: -20.62501335144043
    9. '[input' → logprob: -20.62501335144043
    10. '(import' → logprob: -21.50001335144043

Token 1290: '_lst' (ID: 72474)
  Prédit: '_lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lst' → logprob: -6.704273118884885e-07
    2. 'lst' → logprob: -14.375000953674316
    3. '(lst' → logprob: -18.25
    4. '_list' → logprob: -18.625
    5. 's' → logprob: -19.75
    6. '_cnt' → logprob: -19.875
    7. '\' → logprob: -20.375
    8. '_' → logprob: -20.625
    9. '_tbl' → logprob: -20.625
    10. '_ls' → logprob: -20.75

Token 1291: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4230734705924988
    2. '(input' → logprob: -1.1730735301971436
    3. '(' → logprob: -4.1730732917785645
    4. ',input' → logprob: -4.2980732917785645
    5. '(),' → logprob: -6.2980732917785645
    6. '   ' → logprob: -6.2980732917785645
    7. ')' → logprob: -6.9230732917785645
    8. 'input' → logprob: -7.4230732917785645
    9. '),' → logprob: -7.7980732917785645
    10. ' ,' → logprob: -8.548073768615723

Token 1292: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5732132196426392
    2. 'MOD' → logprob: -0.9482132196426392
    3. '
' → logprob: -3.0732131004333496
    4. '    
' → logprob: -7.19821310043335
    5. '```' → logprob: -7.32321310043335
    6. ' MOD' → logprob: -7.32321310043335
    7. 'mod' → logprob: -7.94821310043335
    8. '``' → logprob: -9.823213577270508
    9. '_MOD' → logprob: -10.448213577270508
    10. '`
' → logprob: -10.948213577270508

Token 1293: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' (adapté à ' MOD') → logprob: -0.001089735422283411
    2. '   ' → logprob: -6.876089572906494
    3. 'mod' → logprob: -10.251090049743652
    4. ' MOD' → logprob: -10.876090049743652
    5. '
' → logprob: -13.251090049743652
    6. '```' → logprob: -14.626090049743652
    7. '    
' → logprob: -15.626090049743652
    8. '_MOD' → logprob: -15.751090049743652
    9. '.MOD' → logprob: -16.751089096069336
    10. '  ' → logprob: -17.251089096069336

Token 1294: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47407791018486023
    2. '=' → logprob: -0.9740779399871826
    3. '   ' → logprob: -14.349078178405762
    4. '    ' → logprob: -15.724078178405762
    5. '＝' → logprob: -16.474077224731445
    6. '	' → logprob: -17.599077224731445
    7. ' ' → logprob: -18.099077224731445
    8. '=get' → logprob: -18.349077224731445
    9. '()' → logprob: -19.099077224731445
    10. ',' → logprob: -19.099077224731445

Token 1295: ' get' (ID: 717)
  Prédit: '998'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '998' → logprob: -0.3172852694988251
    2. 'get' → logprob: -1.3172852993011475
    3. ' get' → logprob: -5.567285060882568
    4. ' ' → logprob: -8.817285537719727
    5. '999' → logprob: -10.067285537719727
    6. '(get' → logprob: -13.192285537719727
    7. '997' → logprob: -14.192285537719727
    8. '   ' → logprob: -14.942285537719727
    9. '[get' → logprob: -14.942285537719727
    10. '	get' → logprob: -15.692285537719727

Token 1296: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -0.0013442812487483025
    2. '_' → logprob: -7.126344203948975
    3. '_MOD' → logprob: -7.751344203948975
    4. 'mod' → logprob: -9.876344680786133
    5. 'MOD' → logprob: -10.251344680786133
    6. ' _' → logprob: -11.501344680786133
    7. ' MOD' → logprob: -12.501344680786133
    8. '()' → logprob: -13.501344680786133
    9. ' ' → logprob: -13.751344680786133
    10. '_Mod' → logprob: -13.751344680786133

Token 1297: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03433981537818909
    2. '
' → logprob: -3.7843399047851562
    3. '    
' → logprob: -4.534339904785156
    4. 'fact' → logprob: -8.659339904785156
    5. '```' → logprob: -9.784339904785156
    6. '  
' → logprob: -10.659339904785156
    7. '   
' → logprob: -11.534339904785156
    8. '<|end|>' → logprob: -11.659339904785156
    9. '
' → logprob: -12.159339904785156
    10. '        
' → logprob: -12.534339904785156

Token 1298: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004904143046587706
    2. 'fact' → logprob: -5.379904270172119
    3. '```' → logprob: -8.254903793334961
    4. ' fact' → logprob: -11.504903793334961
    5. '
' → logprob: -12.004903793334961
    6. '    
' → logprob: -12.629903793334961
    7. '``' → logprob: -13.754903793334961
    8. 'factor' → logprob: -14.004903793334961
    9. '_fact' → logprob: -14.754903793334961
    10. '   ' → logprob: -15.129903793334961

Token 1299: ' U' (ID: 601)
  Prédit: 'U'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'U' (adapté à ' U') → logprob: -0.7942528128623962
    2. 'fact' → logprob: -0.9192528128623962
    3. '   ' → logprob: -1.919252872467041
    4. ' U' → logprob: -6.419252872467041
    5. ' fact' → logprob: -7.169252872467041
    6. '```' → logprob: -10.544252395629883
    7. 'factor' → logprob: -10.544252395629883
    8. '	U' → logprob: -10.919252395629883
    9. ' ' → logprob: -11.419252395629883
    10. '    
' → logprob: -11.544252395629883

Token 1300: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012510590255260468
    2. '=' → logprob: -4.387510776519775
    3. '   ' → logprob: -14.762510299682617
    4. ',' → logprob: -15.012510299682617
    5. '    ' → logprob: -16.512510299682617
    6. '=N' → logprob: -16.512510299682617
    7. '	' → logprob: -17.512510299682617
    8. ')' → logprob: -17.637510299682617
    9. '＝' → logprob: -18.137510299682617
    10. '=int' → logprob: -18.887510299682617

Token 1301: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.11285968869924545
    2. ' get' → logprob: -2.2378597259521484
    3. 'N' → logprob: -11.237859725952148
    4. '(get' → logprob: -11.612859725952148
    5. ' N' → logprob: -12.612859725952148
    6. ' ' → logprob: -12.862859725952148
    7. '=get' → logprob: -13.987859725952148
    8. '   ' → logprob: -14.112859725952148
    9. '[get' → logprob: -14.112859725952148
    10. '100' → logprob: -14.112859725952148

Token 1302: '_U' (ID: 13856)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.05314275249838829
    2. 'U' → logprob: -3.303142786026001
    3. 'N' → logprob: -4.553142547607422
    4. 'X' → logprob: -5.928142547607422
    5. '(' → logprob: -7.553142547607422
    6. '(U' → logprob: -7.678142547607422
    7. '(X' → logprob: -8.053142547607422
    8. '_U' → logprob: -9.428142547607422
    9. 'int' → logprob: -9.678142547607422
    10. '((' → logprob: -9.678142547607422

Token 1303: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.006718690041452646
    2. 'N' → logprob: -5.006718635559082
    3. '(' → logprob: -13.006718635559082
    4. 'X' → logprob: -14.881718635559082
    5. '(X' → logprob: -15.256718635559082
    6. '   ' → logprob: -15.881718635559082
    7. '```' → logprob: -16.6317195892334
    8. '	N' → logprob: -16.8817195892334
    9. '(
' → logprob: -17.0067195892334
    10. '
' → logprob: -17.2567195892334

Token 1304: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00038932388997636735
    2. ')
' → logprob: -7.875389099121094
    3. '   ' → logprob: -12.375389099121094
    4. '())' → logprob: -12.750389099121094
    5. '()' → logprob: -14.250389099121094
    6. ' )' → logprob: -14.500389099121094
    7. '))' → logprob: -15.875389099121094
    8. ')#' → logprob: -16.125389099121094
    9. ')
' → logprob: -16.250389099121094
    10. '),' → logprob: -16.250389099121094

Token 1305: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5284967422485352
    2. 'fact' → logprob: -0.9034967422485352
    3. ' fact' → logprob: -5.278496742248535
    4. '```' → logprob: -8.653496742248535
    5. '
' → logprob: -9.778496742248535
    6. '    
' → logprob: -12.278496742248535
    7. '_fact' → logprob: -12.403496742248535
    8. 'factor' → logprob: -12.778496742248535
    9. 'facts' → logprob: -13.028496742248535
    10. 'Fact' → logprob: -13.403496742248535

Token 1306: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' (adapté à ' fact') → logprob: -1.6240566083070007e-06
    2. ' fact' → logprob: -13.500001907348633
    3. 'factor' → logprob: -16.250001907348633
    4. '   ' → logprob: -16.750001907348633
    5. '```' → logprob: -18.625001907348633
    6. '
' → logprob: -18.750001907348633
    7. '_fact' → logprob: -18.750001907348633
    8. 'facts' → logprob: -19.125001907348633
    9. 'fac' → logprob: -19.250001907348633
    10. '.fact' → logprob: -19.625001907348633

Token 1307: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.5776860184123507e-06
    2. ',f' → logprob: -13.62500286102295
    3. '=' → logprob: -14.25000286102295
    4. ' ,' → logprob: -15.00000286102295
    5. '‌,' → logprob: -15.75000286102295
    6. ',e' → logprob: -17.000001907348633
    7. ',
' → logprob: -17.000001907348633
    8. ',U' → logprob: -17.250001907348633
    9. ',b' → logprob: -17.500001907348633
    10. ' =' → logprob: -17.625001907348633

Token 1308: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.5759400129318237
    2. ' fact' → logprob: -0.8259400129318237
    3. '_fact' → logprob: -14.825940132141113
    4. '.fact' → logprob: -16.450939178466797
    5. 'Fact' → logprob: -16.950939178466797
    6. 'factor' → logprob: -17.575939178466797
    7. 'facts' → logprob: -17.950939178466797
    8. 'fac' → logprob: -18.200939178466797
    9. ' fakt' → logprob: -18.200939178466797
    10. '   ' → logprob: -18.700939178466797

Token 1309: '_inv' (ID: 53427)
  Prédit: '_inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inv' → logprob: -2.1008713702030946e-06
    2. '_inf' → logprob: -14.375001907348633
    3. '_in' → logprob: -15.750001907348633
    4. '_int' → logprob: -15.750001907348633
    5. ',_' → logprob: -15.750001907348633
    6. 'inv' → logprob: -15.875001907348633
    7. '=' → logprob: -16.000001907348633
    8. '_INV' → logprob: -16.250001907348633
    9. '_inverse' → logprob: -16.250001907348633
    10. '_' → logprob: -16.375001907348633

Token 1310: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004163164179772139
    2. ' =' → logprob: -5.5041632652282715
    3. ',' → logprob: -9.379162788391113
    4. '=f' → logprob: -16.75416374206543
    5. '=create' → logprob: -16.87916374206543
    6. '=
' → logprob: -17.00416374206543
    7. '＝' → logprob: -17.00416374206543
    8. '=com' → logprob: -18.87916374206543
    9. '=user' → logprob: -18.87916374206543
    10. '=get' → logprob: -19.00416374206543

Token 1311: ' make' (ID: 1520)
  Prédit: 'make'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'make' → logprob: -0.029750484973192215
    2. ' make' → logprob: -3.5297505855560303
    3. '(make' → logprob: -17.40475082397461
    4. '	make' → logprob: -18.27975082397461
    5. '.make' → logprob: -21.15475082397461
    6. '_make' → logprob: -22.52975082397461
    7. '
' → logprob: -23.27975082397461
    8. '   ' → logprob: -23.90475082397461
    9. '```' → logprob: -24.15475082397461
    10. ' ' → logprob: -24.52975082397461

Token 1312: '_fact' (ID: 111916)
  Prédit: '_fact'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fact' → logprob: -0.023245712742209435
    2. 'fact' → logprob: -3.7732458114624023
    3. ' fact' → logprob: -15.773245811462402
    4. '_fac' → logprob: -16.398244857788086
    5. 'Fact' → logprob: -16.648244857788086
    6. '```' → logprob: -18.523244857788086
    7. '_FACT' → logprob: -18.648244857788086
    8. '
' → logprob: -19.398244857788086
    9. '.fact' → logprob: -19.398244857788086
    10. '_' → logprob: -19.773244857788086

Token 1313: '(U' (ID: 27452)
  Prédit: '(U'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(U' → logprob: -9.491498531133402e-06
    2. 'U' → logprob: -11.625009536743164
    3. '```' → logprob: -14.875009536743164
    4. '(' → logprob: -16.625009536743164
    5. '(UI' → logprob: -17.125009536743164
    6. '(User' → logprob: -17.375009536743164
    7. '(M' → logprob: -17.875009536743164
    8. '	U' → logprob: -18.000009536743164
    9. '<U' → logprob: -18.125009536743164
    10. '(USER' → logprob: -18.375009536743164

Token 1314: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.796184723294573e-06
    2. ' ,' → logprob: -12.250005722045898
    3. '   ' → logprob: -14.125005722045898
    4. '‌,' → logprob: -16.3750057220459
    5. ',
' → logprob: -16.5000057220459
    6. ')' → logprob: -17.1250057220459
    7. '),' → logprob: -17.2500057220459
    8. '_,' → logprob: -18.3750057220459
    9. '(),' → logprob: -18.5000057220459
    10. '[' → logprob: -18.5000057220459

Token 1315: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0007104054093360901
    2. ' MOD' → logprob: -7.250710487365723
    3. '   ' → logprob: -15.125710487365723
    4. '_MOD' → logprob: -16.250709533691406
    5. '.MOD' → logprob: -17.625709533691406
    6. ')' → logprob: -17.750709533691406
    7. '```' → logprob: -19.125709533691406
    8. '
' → logprob: -19.500709533691406
    9. 'MO' → logprob: -19.750709533691406
    10. ' ' → logprob: -20.375709533691406

Token 1316: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.994086627149954e-05
    2. '   ' → logprob: -9.625080108642578
    3. ')
' → logprob: -11.250080108642578
    4. ',' → logprob: -14.625080108642578
    5. ' )' → logprob: -15.750080108642578
    6. ',)' → logprob: -16.750080108642578
    7. '),' → logprob: -17.375080108642578
    8. '))' → logprob: -18.250080108642578
    9. ')`' → logprob: -18.875080108642578
    10. ' ' → logprob: -18.875080108642578

Token 1317: '   ' (ID: 271)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.5823739767074585
    2. '   ' → logprob: -0.8323739767074585
    3. ' comb' → logprob: -5.082374095916748
    4. 'com' → logprob: -9.08237361907959
    5. '```' → logprob: -9.58237361907959
    6. '_comb' → logprob: -11.58237361907959
    7. '(com' → logprob: -12.33237361907959
    8. '  ' → logprob: -12.45737361907959
    9. 'Comb' → logprob: -13.45737361907959
    10. '``' → logprob: -13.70737361907959

Token 1318: ' comb' (ID: 4134)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comb' (adapté à ' comb') → logprob: -5.455048449221067e-05
    2. '   ' → logprob: -9.875054359436035
    3. ' comb' → logprob: -12.750054359436035
    4. '
' → logprob: -16.37505531311035
    5. '```' → logprob: -16.87505531311035
    6. '    
' → logprob: -18.00005531311035
    7. 'com' → logprob: -18.37505531311035
    8. 'Comb' → logprob: -19.25005531311035
    9. '  ' → logprob: -19.62505531311035
    10. 'combined' → logprob: -19.75005531311035

Token 1319: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -4.842555426876061e-06
    2. '_N' → logprob: -12.625004768371582
    3. '=' → logprob: -13.750004768371582
    4. ' =' → logprob: -15.000004768371582
    5. '=N' → logprob: -17.3750057220459
    6. '_' → logprob: -18.1250057220459
    7. '```' → logprob: -18.3750057220459
    8. ' N' → logprob: -18.5000057220459
    9. '[N' → logprob: -18.5000057220459
    10. '(N' → logprob: -20.2500057220459

Token 1320: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141392946243286
    2. '=' → logprob: -1.701413869857788
    3. ',' → logprob: -14.701414108276367
    4. '[' → logprob: -15.576414108276367
    5. 's' → logprob: -17.701414108276367
    6. '＝' → logprob: -18.076414108276367
    7. '=N' → logprob: -18.451414108276367
    8. '   ' → logprob: -18.576414108276367
    9. '=[' → logprob: -18.701414108276367
    10. ' =
' → logprob: -18.826414108276367

Token 1321: ' make' (ID: 1520)
  Prédit: 'make'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'make' → logprob: -0.003179975086823106
    2. ' make' → logprob: -5.753180027008057
    3. 'fact' → logprob: -13.253179550170898
    4. '(make' → logprob: -14.628179550170898
    5. '	make' → logprob: -16.7531795501709
    6. ' fact' → logprob: -18.7531795501709
    7. 'factor' → logprob: -19.2531795501709
    8. ' ' → logprob: -19.5031795501709
    9. '   ' → logprob: -19.5031795501709
    10. 'np' → logprob: -19.5031795501709

Token 1322: '_comb' (ID: 105956)
  Prédit: '_comb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_comb' → logprob: -0.00034833617974072695
    2. 'comb' → logprob: -8.000348091125488
    3. '_fact' → logprob: -11.375348091125488
    4. 'fact' → logprob: -14.250348091125488
    5. 'Comb' → logprob: -14.375348091125488
    6. '```' → logprob: -17.125349044799805
    7. 'cmb' → logprob: -17.750349044799805
    8. ' comb' → logprob: -18.375349044799805
    9. '_factor' → logprob: -18.500349044799805
    10. '_fac' → logprob: -18.750349044799805

Token 1323: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00011224505578866228
    2. '(N' → logprob: -9.125112533569336
    3. 'U' → logprob: -12.750112533569336
    4. '[N' → logprob: -15.375112533569336
    5. '(' → logprob: -16.000112533569336
    6. 'int' → logprob: -17.625112533569336
    7. '`' → logprob: -17.750112533569336
    8. '
' → logprob: -18.500112533569336
    9. 'n' → logprob: -18.500112533569336
    10. 'X' → logprob: -18.625112533569336

Token 1324: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0011709370883181691
    2. 'N' → logprob: -6.751171112060547
    3. '(' → logprob: -14.251171112060547
    4. '[N' → logprob: -17.001171112060547
    5. '(U' → logprob: -17.626171112060547
    6. '(
' → logprob: -18.126171112060547
    7. '```' → logprob: -18.376171112060547
    8. 'X' → logprob: -18.376171112060547
    9. '(X' → logprob: -18.751171112060547
    10. 'U' → logprob: -19.251171112060547

Token 1325: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007177923689596355
    2. ',N' → logprob: -8.000718116760254
    3. ' ,' → logprob: -8.625718116760254
    4. '(N' → logprob: -9.250718116760254
    5. '   ' → logprob: -9.500718116760254
    6. ')' → logprob: -11.250718116760254
    7. ',U' → logprob: -11.625718116760254
    8. '(' → logprob: -12.375718116760254
    9. ',
' → logprob: -13.375718116760254
    10. '```' → logprob: -13.750718116760254

Token 1326: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.14476719498634338
    2. 'N' → logprob: -2.3947672843933105
    3. 'MOD' → logprob: -3.2697672843933105
    4. 'U' → logprob: -5.7697672843933105
    5. ' fact' → logprob: -6.5197672843933105
    6. ')' → logprob: -7.3947672843933105
    7. ' MOD' → logprob: -9.269766807556152
    8. 'factor' → logprob: -9.519766807556152
    9. '```' → logprob: -10.394766807556152
    10. ' N' → logprob: -10.769766807556152

Token 1327: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013357517309486866
    2. ',
' → logprob: -9.625133514404297
    3. ' ,' → logprob: -10.250133514404297
    4. ')' → logprob: -11.875133514404297
    5. '   ' → logprob: -12.375133514404297
    6. '<|end|>' → logprob: -12.750133514404297
    7. '[' → logprob: -12.875133514404297
    8. ',f' → logprob: -13.125133514404297
    9. ',[' → logprob: -13.625133514404297
    10. ',int' → logprob: -13.625133514404297

Token 1328: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.0011708177626132965
    2. ' fact' → logprob: -6.751170635223389
    3. '
' → logprob: -14.501171112060547
    4. '   ' → logprob: -16.876171112060547
    5. '_fact' → logprob: -18.126171112060547
    6. '```' → logprob: -18.126171112060547
    7. ' ' → logprob: -18.376171112060547
    8. 'f' → logprob: -18.751171112060547
    9. 'factor' → logprob: -19.001171112060547
    10. 'Fact' → logprob: -19.251171112060547

Token 1329: '_inv' (ID: 53427)
  Prédit: '_inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inv' → logprob: -0.0007110013975761831
    2. 'inv' → logprob: -7.250710964202881
    3. '_INV' → logprob: -15.625711441040039
    4. 'Inv' → logprob: -16.00071144104004
    5. ',' → logprob: -16.12571144104004
    6. ' inv' → logprob: -16.12571144104004
    7. '```' → logprob: -16.12571144104004
    8. '[' → logprob: -16.62571144104004
    9. ')' → logprob: -16.62571144104004
    10. '_inverse' → logprob: -16.87571144104004

Token 1330: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.629921436891891e-05
    2. '(' → logprob: -11.50002670288086
    3. ' ,' → logprob: -11.50002670288086
    4. '   ' → logprob: -13.00002670288086
    5. ')' → logprob: -13.25002670288086
    6. '[' → logprob: -14.62502670288086
    7. '(M' → logprob: -14.62502670288086
    8. ',
' → logprob: -15.37502670288086
    9. '```' → logprob: -15.50002670288086
    10. '(),' → logprob: -16.12502670288086

Token 1331: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0002613358374219388
    2. ' MOD' → logprob: -8.250261306762695
    3. '_MOD' → logprob: -16.875261306762695
    4. 'mod' → logprob: -17.375261306762695
    5. 'M' → logprob: -18.875261306762695
    6. '   ' → logprob: -19.125261306762695
    7. 'Mod' → logprob: -19.875261306762695
    8. '[' → logprob: -19.875261306762695
    9. '
' → logprob: -20.125261306762695
    10. ' ' → logprob: -20.250261306762695

Token 1332: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01818365789949894
    2. ')
' → logprob: -4.018183708190918
    3. '   ' → logprob: -10.393183708190918
    4. ',' → logprob: -13.393183708190918
    5. ')
' → logprob: -13.893183708190918
    6. ')

' → logprob: -15.268183708190918
    7. ' )' → logprob: -15.768183708190918
    8. '),' → logprob: -16.2681827545166
    9. ').' → logprob: -16.7681827545166
    10. ' ' → logprob: -17.2681827545166

Token 1333: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02329893410205841
    2. 'a' → logprob: -3.773298978805542
    3. '```' → logprob: -11.023299217224121
    4. '    
' → logprob: -11.273299217224121
    5. 'F' → logprob: -11.773299217224121
    6. ' a' → logprob: -12.023299217224121
    7. '
' → logprob: -12.523299217224121
    8. '	a' → logprob: -13.148299217224121
    9. 'A' → logprob: -13.398299217224121
    10. 'f' → logprob: -13.648299217224121

Token 1334: ' ans' (ID: 3345)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0005790081340819597
    2. '   ' → logprob: -8.625578880310059
    3. 'res' → logprob: -8.750578880310059
    4. 'f' → logprob: -9.625578880310059
    5. 'result' → logprob: -9.750578880310059
    6. 'r' → logprob: -9.875578880310059
    7. '```' → logprob: -10.250578880310059
    8. 'F' → logprob: -10.875578880310059
    9. '    
' → logprob: -12.500578880310059
    10. ' a' → logprob: -13.250578880310059

Token 1335: '1' (ID: 16)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12187358736991882
    2. '=' → logprob: -2.496873617172241
    3. '_' → logprob: -4.621873378753662
    4. '   ' → logprob: -4.746873378753662
    5. 'or' → logprob: -4.871873378753662
    6. '```' → logprob: -6.246873378753662
    7. 'ow' → logprob: -6.746873378753662
    8. ' =
' → logprob: -7.746873378753662
    9. '=
' → logprob: -7.746873378753662
    10. 'o' → logprob: -8.24687385559082

Token 1336: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25532427430152893
    2. '=' → logprob: -1.5053242444992065
    3. ',' → logprob: -6.005324363708496
    4. '_' → logprob: -7.130324363708496
    5. '1' → logprob: -9.255324363708496
    6. ' =
' → logprob: -12.255324363708496
    7. '_=' → logprob: -12.255324363708496
    8. ')' → logprob: -13.130324363708496
    9. ' ,' → logprob: -13.130324363708496
    10. ' +=' → logprob: -13.130324363708496

Token 1337: ' F' (ID: 454)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -2.15310683415737e-05
    2. ' F' → logprob: -10.750021934509277
    3. 'Ｆ' → logprob: -21.75002098083496
    4. '   ' → logprob: -22.00002098083496
    5. '	F' → logprob: -22.25002098083496
    6. '(F' → logprob: -23.37502098083496
    7. '_F' → logprob: -23.50002098083496
    8. 'f' → logprob: -23.75002098083496
    9. '0' → logprob: -25.75002098083496
    10. ' ' → logprob: -26.00002098083496

Token 1338: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. '(' → logprob: -15.375000953674316
    3. '2' → logprob: -15.375000953674316
    4. ''' → logprob: -16.0
    5. '```' → logprob: -16.125
    6. '('' → logprob: -16.625
    7. '"' → logprob: -16.75
    8. '3' → logprob: -17.75
    9. '`' → logprob: -17.875
    10. ' ' → logprob: -18.25

Token 1339: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.03807947784662247
    2. '(' → logprob: -3.2880795001983643
    3. ' (' → logprob: -10.788079261779785
    4. '(
' → logprob: -11.538079261779785
    5. '((' → logprob: -12.163079261779785
    6. '```' → logprob: -14.663079261779785
    7. '(n' → logprob: -15.163079261779785
    8. '\(' → logprob: -15.288079261779785
    9. ' ' → logprob: -15.538079261779785
    10. '1' → logprob: -15.663079261779785

Token 1340: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.339278580620885e-06
    2. ' ,' → logprob: -13.250001907348633
    3. ',
' → logprob: -14.875001907348633
    4. '   ' → logprob: -15.875001907348633
    5. ')' → logprob: -17.750001907348633
    6. ',X' → logprob: -18.000001907348633
    7. '‌,' → logprob: -18.250001907348633
    8. '```' → logprob: -18.375001907348633
    9. '),' → logprob: -18.500001907348633
    10. '_,' → logprob: -19.625001907348633

Token 1341: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -5.836499985889532e-05
    2. ' X' → logprob: -9.7500581741333
    3. '   ' → logprob: -17.000059127807617
    4. ')' → logprob: -19.875059127807617
    5. '	X' → logprob: -20.125059127807617
    6. '[' → logprob: -20.500059127807617
    7. ' ' → logprob: -20.625059127807617
    8. '<|end|>' → logprob: -21.000059127807617
    9. '>X' → logprob: -21.000059127807617
    10. 'Xs' → logprob: -21.500059127807617

Token 1342: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013560164370574057
    2. '   ' → logprob: -9.00013542175293
    3. ' ,' → logprob: -11.37513542175293
    4. ',
' → logprob: -15.25013542175293
    5. '  ' → logprob: -15.87513542175293
    6. ')
' → logprob: -16.37513542175293
    7. ')' → logprob: -16.37513542175293
    8. '```' → logprob: -16.62513542175293
    9. ' ans' → logprob: -17.87513542175293
    10. '`,' → logprob: -18.00013542175293

Token 1343: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -7.465036105713807e-06
    2. ' MOD' → logprob: -12.250007629394531
    3. 'ans' → logprob: -12.875007629394531
    4. 'mod' → logprob: -16.62500762939453
    5. '   ' → logprob: -17.75000762939453
    6. '_MOD' → logprob: -18.25000762939453
    7. '.MOD' → logprob: -18.75000762939453
    8. 'comb' → logprob: -19.12500762939453
    9. ' ' → logprob: -19.75000762939453
    10. '  ' → logprob: -19.75000762939453

Token 1344: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02058824896812439
    2. ')
' → logprob: -4.145588397979736
    3. '   ' → logprob: -5.395588397979736
    4. ',' → logprob: -13.145587921142578
    5. ')
' → logprob: -13.770587921142578
    6. '```' → logprob: -13.895587921142578
    7. '),' → logprob: -14.270587921142578
    8. '
' → logprob: -15.270587921142578
    9. ' )' → logprob: -15.395587921142578
    10. ')`' → logprob: -15.520587921142578

Token 1345: '   ' (ID: 271)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.1308269202709198
    2. '   ' → logprob: -2.130826950073242
    3. '
' → logprob: -6.255826950073242
    4. ' ans' → logprob: -7.005826950073242
    5. '```' → logprob: -7.505826950073242
    6. '	ans' → logprob: -8.005826950073242
    7. '(ans' → logprob: -8.755826950073242
    8. '    
' → logprob: -11.380826950073242
    9. '`' → logprob: -12.380826950073242
    10. '``' → logprob: -12.755826950073242

Token 1346: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.0002895834331866354
    2. ' ans' → logprob: -8.250289916992188
    3. '   ' → logprob: -10.500289916992188
    4. '	ans' → logprob: -14.250289916992188
    5. '(ans' → logprob: -16.625289916992188
    6. '```' → logprob: -17.125289916992188
    7. 'anst' → logprob: -18.750289916992188
    8. '_ans' → logprob: -18.875289916992188
    9. ' ' → logprob: -19.250289916992188
    10. '
' → logprob: -19.625289916992188

Token 1347: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9385402993066236e-05
    2. '_' → logprob: -10.875019073486328
    3. ',' → logprob: -16.625019073486328
    4. '3' → logprob: -16.750019073486328
    5. ' =' → logprob: -16.750019073486328
    6. ' ' → logprob: -17.000019073486328
    7. '=' → logprob: -17.000019073486328
    8. '_,' → logprob: -17.500019073486328
    9. '+' → logprob: -17.625019073486328
    10. '₂' → logprob: -17.875019073486328

Token 1348: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.474078506231308
    2. '=' → logprob: -0.9740785360336304
    3. ',' → logprob: -13.474078178405762
    4. '   ' → logprob: -16.224079132080078
    5. '＝' → logprob: -17.599079132080078
    6. ')' → logprob: -18.724079132080078
    7. ' ' → logprob: -18.849079132080078
    8. ' =
' → logprob: -18.974079132080078
    9. '=
' → logprob: -18.974079132080078
    10. '	' → logprob: -20.224079132080078

Token 1349: ' F' (ID: 454)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.005233882926404476
    2. ' F' → logprob: -5.2552337646484375
    3. '   ' → logprob: -17.130233764648438
    4. '(F' → logprob: -19.380233764648438
    5. 'def' → logprob: -20.630233764648438
    6. '	F' → logprob: -21.380233764648438
    7. 'Ｆ' → logprob: -22.755233764648438
    8. '_F' → logprob: -22.880233764648438
    9. ' ' → logprob: -23.380233764648438
    10. '  ' → logprob: -23.630233764648438

Token 1350: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.313856840133667
    2. '(N' → logprob: -1.313856840133667
    3. '3' → logprob: -8.313857078552246
    4. '(' → logprob: -8.563857078552246
    5. '1' → logprob: -9.063857078552246
    6. '```' → logprob: -11.188857078552246
    7. '(X' → logprob: -11.438857078552246
    8. 'O' → logprob: -12.563857078552246
    9. 'def' → logprob: -12.813857078552246
    10. '(
' → logprob: -12.938857078552246

Token 1351: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -6.933173426659778e-05
    2. '(' → logprob: -9.625069618225098
    3. ' (' → logprob: -14.000069618225098
    4. '```' → logprob: -14.000069618225098
    5. '(
' → logprob: -14.125069618225098
    6. '   ' → logprob: -14.125069618225098
    7. '(n' → logprob: -18.00006866455078
    8. ' ' → logprob: -18.37506866455078
    9. '(None' → logprob: -18.50006866455078
    10. '(X' → logprob: -18.62506866455078

Token 1352: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.432518421206623e-05
    2. ' ,' → logprob: -9.8750638961792
    3. ',X' → logprob: -11.8750638961792
    4. '   ' → logprob: -12.5000638961792
    5. ',
' → logprob: -14.6250638961792
    6. '‌,' → logprob: -14.7500638961792
    7. ',N' → logprob: -14.7500638961792
    8. '```' → logprob: -15.5000638961792
    9. '(' → logprob: -15.8750638961792
    10. '),' → logprob: -16.000064849853516

Token 1353: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -3.5597102396423e-05
    2. ' X' → logprob: -10.250035285949707
    3. '   ' → logprob: -16.625036239624023
    4. '[' → logprob: -17.000036239624023
    5. '<|end|>' → logprob: -17.000036239624023
    6. '```' → logprob: -17.750036239624023
    7. 'x' → logprob: -17.875036239624023
    8. ' ' → logprob: -17.875036239624023
    9. '(X' → logprob: -18.750036239624023
    10. '       ' → logprob: -19.000036239624023

Token 1354: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.432518421206623e-05
    2. '   ' → logprob: -10.3750638961792
    3. ' ,' → logprob: -11.6250638961792
    4. ',
' → logprob: -11.7500638961792
    5. ')' → logprob: -11.7500638961792
    6. '<|end|>' → logprob: -12.8750638961792
    7. '```' → logprob: -13.7500638961792
    8. '(' → logprob: -14.2500638961792
    9. '),' → logprob: -14.2500638961792
    10. 'def' → logprob: -14.3750638961792

Token 1355: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.02643115073442459
    2. 'MOD' → logprob: -3.651431083679199
    3. ' fact' → logprob: -9.4014310836792
    4. ' MOD' → logprob: -10.9014310836792
    5. 'comb' → logprob: -11.2764310836792
    6. '   ' → logprob: -12.0264310836792
    7. 'mod' → logprob: -12.6514310836792
    8. 'factor' → logprob: -12.7764310836792
    9. ' ' → logprob: -13.4014310836792
    10. '    ' → logprob: -14.2764310836792

Token 1356: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.537180211627856e-05
    2. ',f' → logprob: -11.250045776367188
    3. ' ,' → logprob: -11.625045776367188
    4. ',
' → logprob: -11.875045776367188
    5. ')' → logprob: -12.000045776367188
    6. '<|end|>' → logprob: -12.875045776367188
    7. '   ' → logprob: -13.375045776367188
    8. '‌,' → logprob: -14.000045776367188
    9. '[' → logprob: -14.000045776367188
    10. '```' → logprob: -14.125045776367188

Token 1357: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.029751179739832878
    2. ' fact' → logprob: -3.5297510623931885
    3. '_fact' → logprob: -14.90475082397461
    4. '.fact' → logprob: -15.40475082397461
    5. 'factor' → logprob: -16.52975082397461
    6. 'Fact' → logprob: -16.90475082397461
    7. '```' → logprob: -17.77975082397461
    8. 'f' → logprob: -18.27975082397461
    9. '   ' → logprob: -18.27975082397461
    10. '
' → logprob: -18.40475082397461

Token 1358: '_inv' (ID: 53427)
  Prédit: '_inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inv' → logprob: -0.002626192755997181
    2. 'inv' → logprob: -6.002626419067383
    3. ',' → logprob: -8.877626419067383
    4. '```' → logprob: -13.002626419067383
    5. '_INV' → logprob: -13.252626419067383
    6. ',
' → logprob: -13.377626419067383
    7. '_,' → logprob: -14.002626419067383
    8. '   ' → logprob: -14.127626419067383
    9. 'Inv' → logprob: -14.252626419067383
    10. ',_' → logprob: -14.377626419067383

Token 1359: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010723850573413074
    2. '   ' → logprob: -9.375106811523438
    3. ' ,' → logprob: -11.625106811523438
    4. ')' → logprob: -11.750106811523438
    5. ',
' → logprob: -12.375106811523438
    6. '```' → logprob: -14.375106811523438
    7. '),' → logprob: -15.125106811523438
    8. '(com' → logprob: -15.500106811523438
    9. ' comb' → logprob: -16.000106811523438
    10. '[' → logprob: -17.000106811523438

Token 1360: ' comb' (ID: 4134)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comb' → logprob: -7.493430894101039e-05
    2. ' comb' → logprob: -9.500075340270996
    3. 'com' → logprob: -17.12507438659668
    4. '   ' → logprob: -17.25007438659668
    5. '```' → logprob: -18.87507438659668
    6. 'combo' → logprob: -19.50007438659668
    7. '(com' → logprob: -20.12507438659668
    8. '    ' → logprob: -20.37507438659668
    9. 'Comb' → logprob: -20.50007438659668
    10. ' ' → logprob: -20.50007438659668

Token 1361: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: 0.0
    2. 'ans' → logprob: -19.625
    3. 'n' → logprob: -19.625
    4. '[' → logprob: -19.875
    5. 'a' → logprob: -20.25
    6. 'i' → logprob: -20.625
    7. 's' → logprob: -20.75
    8. '_N' → logprob: -21.125
    9. 'e' → logprob: -21.25
    10. '
' → logprob: -21.375

Token 1362: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0636368840932846
    2. ')' → logprob: -2.8136367797851562
    3. '   ' → logprob: -6.438636779785156
    4. ',)' → logprob: -10.688636779785156
    5. ' ,' → logprob: -11.063636779785156
    6. ')
' → logprob: -11.688636779785156
    7. ',
' → logprob: -11.688636779785156
    8. '```' → logprob: -12.438636779785156
    9. '  ' → logprob: -12.688636779785156
    10. '),' → logprob: -12.938636779785156

Token 1363: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.00015860427811276168
    2. ' MOD' → logprob: -8.750158309936523
    3. '_MOD' → logprob: -17.375158309936523
    4. '   ' → logprob: -19.000158309936523
    5. '.MOD' → logprob: -19.875158309936523
    6. ' ' → logprob: -20.750158309936523
    7. 'MODE' → logprob: -21.375158309936523
    8. 'mod' → logprob: -21.375158309936523
    9. 'MODULE' → logprob: -21.500158309936523
    10. '0' → logprob: -21.875158309936523

Token 1364: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011305990628898144
    2. ')
' → logprob: -5.011305809020996
    3. '   ' → logprob: -5.386305809020996
    4. ')
' → logprob: -15.136305809020996
    5. ' )' → logprob: -15.511305809020996
    6. '),' → logprob: -16.011306762695312
    7. ' ' → logprob: -16.136306762695312
    8. ',' → logprob: -16.261306762695312
    9. '
' → logprob: -16.386306762695312
    10. ')

' → logprob: -16.636306762695312

Token 1365: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47522929310798645
    2. 'ans' → logprob: -0.9752292633056641
    3. '	ans' → logprob: -7.225229263305664
    4. ' ans' → logprob: -8.350229263305664
    5. '```' → logprob: -9.100229263305664
    6. '(ans' → logprob: -9.725229263305664
    7. '``' → logprob: -12.475229263305664
    8. '`' → logprob: -12.975229263305664
    9. '_ans' → logprob: -12.975229263305664
    10. '    
' → logprob: -13.225229263305664

Token 1366: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -6.392202976712724e-06
    2. '   ' → logprob: -12.250006675720215
    3. ' ans' → logprob: -13.500006675720215
    4. '(ans' → logprob: -16.7500057220459
    5. '	ans' → logprob: -16.8750057220459
    6. '```' → logprob: -17.2500057220459
    7. '
' → logprob: -19.1250057220459
    8. '_ans' → logprob: -19.5000057220459
    9. 'answer' → logprob: -19.8750057220459
    10. 'anst' → logprob: -20.7500057220459

Token 1367: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.00017112065688706934
    2. ' =' → logprob: -9.000170707702637
    3. '   ' → logprob: -11.125170707702637
    4. '_' → logprob: -11.250170707702637
    5. '_three' → logprob: -11.500170707702637
    6. '```' → logprob: -13.250170707702637
    7. ' ' → logprob: -13.375170707702637
    8. 's' → logprob: -13.500170707702637
    9. '=' → logprob: -13.750170707702637
    10. '³' → logprob: -14.375170707702637

Token 1368: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022422909736633
    2. ' =' → logprob: -1.910224199295044
    3. '＝' → logprob: -17.91022491455078
    4. ' ' → logprob: -18.91022491455078
    5. '=
' → logprob: -19.03522491455078
    6. ',' → logprob: -19.28522491455078
    7. ')' → logprob: -19.28522491455078
    8. '```' → logprob: -20.03522491455078
    9. ' =
' → logprob: -20.28522491455078
    10. '   ' → logprob: -20.28522491455078

Token 1369: ' F' (ID: 454)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.02325631119310856
    2. ' F' → logprob: -3.773256301879883
    3. '0' → logprob: -11.523256301879883
    4. ' ' → logprob: -14.898256301879883
    5. '   ' → logprob: -15.148256301879883
    6. '(F' → logprob: -15.648256301879883
    7. '	F' → logprob: -16.523256301879883
    8. '_F' → logprob: -17.148256301879883
    9. '  ' → logprob: -17.648256301879883
    10. '(' → logprob: -17.898256301879883

Token 1370: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.002831864869222045
    2. '(N' → logprob: -5.877831935882568
    3. '(X' → logprob: -11.00283145904541
    4. '(' → logprob: -12.00283145904541
    5. '1' → logprob: -13.25283145904541
    6. 'X' → logprob: -14.00283145904541
    7. '(
' → logprob: -14.37783145904541
    8. '```' → logprob: -15.37783145904541
    9. '2' → logprob: -15.87783145904541
    10. 'S' → logprob: -16.252832412719727

Token 1371: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -2.045823566731997e-05
    2. '(' → logprob: -11.000020027160645
    3. ' (' → logprob: -13.250020027160645
    4. '(
' → logprob: -14.125020027160645
    5. '```' → logprob: -14.125020027160645
    6. '   ' → logprob: -16.00002098083496
    7. '\(' → logprob: -16.37502098083496
    8. '(None' → logprob: -16.62502098083496
    9. '(n' → logprob: -16.62502098083496
    10. '((' → logprob: -17.25002098083496

Token 1372: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.657694418914616e-05
    2. ' ,' → logprob: -10.250056266784668
    3. ',X' → logprob: -11.125056266784668
    4. ',
' → logprob: -12.625056266784668
    5. '   ' → logprob: -13.500056266784668
    6. ',N' → logprob: -14.500056266784668
    7. 'X' → logprob: -15.125056266784668
    8. '```' → logprob: -15.500056266784668
    9. '(' → logprob: -15.750056266784668
    10. '(N' → logprob: -16.000057220458984

Token 1373: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -1.676292231422849e-05
    2. ' X' → logprob: -11.000017166137695
    3. '   ' → logprob: -16.875017166137695
    4. '	X' → logprob: -21.125017166137695
    5. ' ' → logprob: -21.375017166137695
    6. '  ' → logprob: -22.250017166137695
    7. 'N' → logprob: -22.250017166137695
    8. '>X' → logprob: -22.375017166137695
    9. '
' → logprob: -22.500017166137695
    10. '```' → logprob: -22.875017166137695

Token 1374: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013250234769657254
    2. ')' → logprob: -9.12513256072998
    3. ',
' → logprob: -11.75013256072998
    4. ' ,' → logprob: -11.87513256072998
    5. '   ' → logprob: -12.25013256072998
    6. ')
' → logprob: -13.25013256072998
    7. '```' → logprob: -14.00013256072998
    8. '),' → logprob: -14.37513256072998
    9. 'def' → logprob: -15.62513256072998
    10. ' ' → logprob: -16.500131607055664

Token 1375: ' comb' (ID: 4134)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.004673156887292862
    2. 'comb' → logprob: -5.504673004150391
    3. ' MOD' → logprob: -7.754673004150391
    4. 'fact' → logprob: -8.75467300415039
    5. 'mod' → logprob: -13.12967300415039
    6. '   ' → logprob: -13.12967300415039
    7. ' comb' → logprob: -13.50467300415039
    8. 'COM' → logprob: -14.12967300415039
    9. '  ' → logprob: -14.62967300415039
    10. 'com' → logprob: -14.75467300415039

Token 1376: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: 0.0
    2. '(N' → logprob: -19.0
    3. 'n' → logprob: -19.375
    4. '[' → logprob: -20.375
    5. '(' → logprob: -20.625
    6. '[N' → logprob: -21.125
    7. 'comb' → logprob: -21.125
    8. ' N' → logprob: -21.375
    9. '_N' → logprob: -21.75
    10. '
' → logprob: -22.125

Token 1377: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2113979209971149e-05
    2. ' ,' → logprob: -11.750012397766113
    3. '   ' → logprob: -12.500012397766113
    4. ')' → logprob: -15.125012397766113
    5. '  ' → logprob: -16.875011444091797
    6. '```' → logprob: -17.125011444091797
    7. ',
' → logprob: -17.375011444091797
    8. ')
' → logprob: -17.500011444091797
    9. '),' → logprob: -19.125011444091797
    10. '    ' → logprob: -19.500011444091797

Token 1378: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.00020354038861114532
    2. ' MOD' → logprob: -8.500203132629395
    3. '_MOD' → logprob: -18.25020408630371
    4. '   ' → logprob: -18.75020408630371
    5. ' ' → logprob: -19.37520408630371
    6. '.MOD' → logprob: -20.00020408630371
    7. 'mod' → logprob: -20.50020408630371
    8. '    ' → logprob: -21.75020408630371
    9. '  ' → logprob: -21.75020408630371
    10. '0' → logprob: -21.87520408630371

Token 1379: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.003733925987035036
    2. ')' → logprob: -5.753734111785889
    3. '   ' → logprob: -7.503734111785889
    4. ')
' → logprob: -12.25373363494873
    5. ' )
' → logprob: -16.253734588623047
    6. ')`
' → logprob: -17.128734588623047
    7. ' ' → logprob: -17.503734588623047
    8. ')

' → logprob: -17.503734588623047
    9. '())
' → logprob: -18.003734588623047
    10. '  ' → logprob: -19.628734588623047

Token 1380: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003261679667048156
    2. '```' → logprob: -8.875326156616211
    3. 'print' → logprob: -9.500326156616211
    4. 'ans' → logprob: -9.750326156616211
    5. '    
' → logprob: -10.500326156616211
    6. '
' → logprob: -10.750326156616211
    7. '	ans' → logprob: -13.500326156616211
    8. '``' → logprob: -13.500326156616211
    9. 'result' → logprob: -14.500326156616211
    10. 'answer' → logprob: -14.875326156616211

Token 1381: ' answer' (ID: 6052)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.35355570912361145
    2. '   ' → logprob: -1.603555679321289
    3. 'ans' → logprob: -2.353555679321289
    4. '```' → logprob: -7.353555679321289
    5. 'result' → logprob: -7.603555679321289
    6. 'answer' (adapté à ' answer') → logprob: -8.353555679321289
    7. '
' → logprob: -9.103555679321289
    8. ' ans' → logprob: -10.353555679321289
    9. ' print' → logprob: -10.353555679321289
    10. 'res' → logprob: -11.353555679321289

Token 1382: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12734454870224
    2. '=' → logprob: -2.6273446083068848
    3. '_' → logprob: -4.002344608306885
    4. '_sum' → logprob: -4.127344608306885
    5. '   ' → logprob: -4.877344608306885
    6. 's' → logprob: -6.377344608306885
    7. '_s' → logprob: -6.752344608306885
    8. '=s' → logprob: -7.627344608306885
    9. '=_' → logprob: -7.877344608306885
    10. '1' → logprob: -8.252344131469727

Token 1383: ' answer' (ID: 6052)
  Prédit: ' answer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' answer' → logprob: -0.3634623885154724
    2. 'answer' → logprob: -1.7384624481201172
    3. ' (' → logprob: -2.238462448120117
    4. '(answer' → logprob: -4.613462448120117
    5. '(ans' → logprob: -5.238462448120117
    6. ' ans' → logprob: -5.363462448120117
    7. '(a' → logprob: -6.863462448120117
    8. 'ans' → logprob: -7.238462448120117
    9. '(' → logprob: -7.488462448120117
    10. 'a' → logprob: -10.113462448120117

Token 1384: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.0005429040757007897
    2. '(' → logprob: -8.625542640686035
    3. 'sum' → logprob: -8.750542640686035
    4. '_' → logprob: -9.500542640686035
    5. '(a' → logprob: -9.500542640686035
    6. '(answer' → logprob: -11.250542640686035
    7. '_SUM' → logprob: -12.000542640686035
    8. '```' → logprob: -12.125542640686035
    9. '(sum' → logprob: -12.375542640686035
    10. '+' → logprob: -12.500542640686035

Token 1385: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -6.153795766294934e-06
    2. '(' → logprob: -12.500005722045898
    3. '(answer' → logprob: -13.750005722045898
    4. 'ans' → logprob: -14.000005722045898
    5. ' (' → logprob: -14.875005722045898
    6. '(
' → logprob: -16.1250057220459
    7. '(abs' → logprob: -19.7500057220459
    8. '	ans' → logprob: -19.7500057220459
    9. '```' → logprob: -20.3750057220459
    10. '(an' → logprob: -20.5000057220459

Token 1386: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '
' → logprob: -17.75
    3. '１' → logprob: -17.875
    4. 's' → logprob: -17.875
    5. ' ' → logprob: -18.75
    6. '3' → logprob: -19.25
    7. '_' → logprob: -19.5
    8. ')' → logprob: -19.625
    9. '১' → logprob: -19.75
    10. ',' → logprob: -20.0

Token 1387: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.015305552864447e-05
    2. ' ,' → logprob: -10.250060081481934
    3. '(ans' → logprob: -10.750060081481934
    4. ',
' → logprob: -13.625060081481934
    5. '   ' → logprob: -14.125060081481934
    6. '(' → logprob: -15.000060081481934
    7. '(answer' → logprob: -15.375060081481934
    8. 'ans' → logprob: -15.875060081481934
    9. ' ans' → logprob: -16.00006103515625
    10. '+' → logprob: -16.00006103515625

Token 1388: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.029753616079688072
    2. ' ans' → logprob: -3.5297536849975586
    3. '(ans' → logprob: -13.154753684997559
    4. 'answer' → logprob: -13.904753684997559
    5. '	ans' → logprob: -15.404753684997559
    6. '   ' → logprob: -18.029752731323242
    7. '_ans' → logprob: -18.529752731323242
    8. ' answer' → logprob: -18.654752731323242
    9. 'Ans' → logprob: -19.779752731323242
    10. '
' → logprob: -19.904752731323242

Token 1389: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. '3' → logprob: -18.125
    3. '₂' → logprob: -18.25
    4. '２' → logprob: -18.875
    5. 's' → logprob: -19.25
    6. '۲' → logprob: -19.875
    7. 'ans' → logprob: -20.625
    8. '_' → logprob: -20.75
    9. '```' → logprob: -21.5
    10. ' ' → logprob: -21.5

Token 1390: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.36574100604048e-06
    2. ' ,' → logprob: -13.250004768371582
    3. '(ans' → logprob: -13.750004768371582
    4. ',
' → logprob: -13.875004768371582
    5. '(' → logprob: -15.625004768371582
    6. '(answer' → logprob: -16.875003814697266
    7. '```' → logprob: -16.875003814697266
    8. '
' → logprob: -17.375003814697266
    9. '_,' → logprob: -17.500003814697266
    10. '   ' → logprob: -18.125003814697266

Token 1391: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -9.65101717156358e-05
    2. ' ans' → logprob: -9.250096321105957
    3. '(ans' → logprob: -15.375096321105957
    4. '   ' → logprob: -16.250097274780273
    5. '	ans' → logprob: -16.375097274780273
    6. 'answer' → logprob: -18.250097274780273
    7. '
' → logprob: -19.875097274780273
    8. '_ans' → logprob: -20.375097274780273
    9. '       ' → logprob: -20.625097274780273
    10. '  ' → logprob: -21.000097274780273

Token 1392: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: 0.0
    2. 'er' → logprob: -18.625
    3. 'wer' → logprob: -18.625
    4. 'swer' → logprob: -18.625
    5. 'ser' → logprob: -19.0
    6. '３' → logprob: -20.125
    7. ' third' → logprob: -20.125
    8. 'third' → logprob: -20.125
    9. 'w' → logprob: -21.375
    10. '```' → logprob: -21.625

Token 1393: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.988221684878226e-06
    2. ' ,' → logprob: -12.750006675720215
    3. '   ' → logprob: -13.125006675720215
    4. ')' → logprob: -13.375006675720215
    5. ',
' → logprob: -15.000006675720215
    6. ')
' → logprob: -16.37500762939453
    7. '```' → logprob: -16.62500762939453
    8. '
' → logprob: -19.00000762939453
    9. '%' → logprob: -19.12500762939453
    10. '(' → logprob: -19.25000762939453

Token 1394: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.003177952254191041
    2. ' MOD' → logprob: -5.753178119659424
    3. '998' → logprob: -16.128177642822266
    4. ' ' → logprob: -17.003177642822266
    5. '   ' → logprob: -17.003177642822266
    6. '_MOD' → logprob: -18.253177642822266
    7. ')' → logprob: -18.753177642822266
    8. '.MOD' → logprob: -19.628177642822266
    9. 'MO' → logprob: -20.128177642822266
    10. '999' → logprob: -20.503177642822266

Token 1395: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.06216318532824516
    2. ')' → logprob: -2.8121631145477295
    3. '   ' → logprob: -8.562163352966309
    4. ')
' → logprob: -12.937163352966309
    5. ')`
' → logprob: -13.937163352966309
    6. ' )
' → logprob: -14.437163352966309
    7. ' ' → logprob: -15.937163352966309
    8. ')

' → logprob: -16.312162399291992
    9. ' )' → logprob: -16.937162399291992
    10. ')`' → logprob: -17.187162399291992

Token 1396: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016649115830659866
    2. 'print' → logprob: -4.26664924621582
    3. '
' → logprob: -6.64164924621582
    4. '```' → logprob: -7.01664924621582
    5. '    
' → logprob: -8.26664924621582
    6. '``' → logprob: -11.51664924621582
    7. ' print' → logprob: -12.89164924621582
    8. '	print' → logprob: -13.01664924621582
    9. 'import' → logprob: -13.01664924621582
    10. '  
' → logprob: -13.39164924621582

Token 1397: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0033257647883147
    2. '   ' → logprob: -5.753325939178467
    3. ' print' → logprob: -9.003325462341309
    4. '```' → logprob: -10.878325462341309
    5. '
' → logprob: -12.128325462341309
    6. 'sys' → logprob: -15.003325462341309
    7. '``' → logprob: -15.503325462341309
    8. '	print' → logprob: -16.253326416015625
    9. 'return' → logprob: -16.628326416015625
    10. '    
' → logprob: -16.878326416015625

Token 1398: '(answer' (ID: 78433)
  Prédit: '(answer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(answer' → logprob: -0.0019274478545412421
    2. '()' → logprob: -6.626927375793457
    3. '(' → logprob: -7.876927375793457
    4. 'answer' → logprob: -8.626927375793457
    5. '(ans' → logprob: -11.126927375793457
    6. '(f' → logprob: -11.626927375793457
    7. '('' → logprob: -12.251927375793457
    8. '(
' → logprob: -12.501927375793457
    9. '((' → logprob: -12.501927375793457
    10. ' (' → logprob: -13.501927375793457

Token 1399: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004366390407085419
    2. '()' → logprob: -5.629366397857666
    3. '())' → logprob: -7.254366397857666
    4. ')
' → logprob: -10.754365921020508
    5. '`)' → logprob: -11.379365921020508
    6. ')`' → logprob: -12.004365921020508
    7. '   ' → logprob: -12.254365921020508
    8. ' )' → logprob: -12.379365921020508
    9. '')' → logprob: -12.629365921020508
    10. '(' → logprob: -13.004365921020508

Token 1400: 'main' (ID: 7731)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0028956905007362366
    2. '
' → logprob: -6.127895832061768
    3. 'main' → logprob: -7.752895832061768
    4. '```' → logprob: -8.87789535522461
    5. '<|end|>' → logprob: -9.50289535522461
    6. ' if' → logprob: -10.12789535522461
    7. '#' → logprob: -11.12789535522461
    8. '\n' → logprob: -13.25289535522461
    9. '[' → logprob: -13.37789535522461
    10. '(main' → logprob: -13.62789535522461

Token 1401: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1399
Tokens correctement prédits (1ère position, stricte): 573
Tokens correctement prédits (1ère position, avec adaptation): 632
Tokens correctement prédits (top 10): 1214
Précision stricte (1ère position): 40.96%
Précision adaptée (1ère position): 45.18%
Précision (top 10): 86.78%
================================================================================
