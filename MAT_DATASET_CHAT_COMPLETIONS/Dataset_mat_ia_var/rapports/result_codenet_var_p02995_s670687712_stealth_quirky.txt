================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:54:47
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def ggcd(x,y): # yes, ggcd, why not
    while x and y:
        x,y = y%x, x
    return y or x

lcmish = lambda a,b: a*b//ggcd(a,b)

_a,_b,_c,_d=map(int,input().split())

tot = -~(_b - _a)

xy = lcmish(_c,_d)

def range_divs(zlo,zhi,by):
    # Some unconventional style: hacky ceiling/floors
    lo = (zlo+by-1)//by
    hi = zhi//by
    return max(hi-lo+1,0)

nC=range_divs(_a,_b,_c)
nD=range_divs(_a,_b,_d)
nXY=range_divs(_a,_b,xy)

print(tot-nC-nD+nXY)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' gg' (ID: 87993)
  → Token d'amorce (pas de prédiction)

Token 2: 'cd' (ID: 8301)
  → Token d'amorce (pas de prédiction)

Token 3: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.013615068979561329
    2. '_' → logprob: -4.513615131378174
    3. ' (' → logprob: -6.138615131378174
    4. '```' → logprob: -9.638614654541016
    5. '(a' → logprob: -10.013614654541016
    6. '<|end|>' → logprob: -10.263614654541016
    7. '(
' → logprob: -10.513614654541016
    8. 'g' → logprob: -10.513614654541016
    9. '_g' → logprob: -10.638614654541016
    10. 'def' → logprob: -10.638614654541016

Token 4: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010367542505264282
    2. ')' → logprob: -4.885367393493652
    3. '):' → logprob: -6.510367393493652
    4. ',y' → logprob: -7.260367393493652
    5. ' ,' → logprob: -9.135367393493652
    6. ',a' → logprob: -9.635367393493652
    7. ',)' → logprob: -9.760367393493652
    8. 'y' → logprob: -9.885367393493652
    9. '.' → logprob: -10.260367393493652
    10. ',x' → logprob: -10.385367393493652

Token 5: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10079734772443771
    2. ')' → logprob: -2.350797414779663
    3. ':' → logprob: -8.100797653198242
    4. ',' → logprob: -8.725797653198242
    5. ''):' → logprob: -10.225797653198242
    6. '):
' → logprob: -11.100797653198242
    7. '>):' → logprob: -11.850797653198242
    8. '**' → logprob: -11.975797653198242
    9. '=' → logprob: -11.975797653198242
    10. ')>' → logprob: -12.475797653198242

Token 6: ' #' (ID: 1069)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6877507567405701
    2. '   ' → logprob: -0.8127507567405701
    3. ' ' → logprob: -3.937750816345215
    4. '```' → logprob: -4.937750816345215
    5. '\' → logprob: -5.687750816345215
    6. ''' → logprob: -6.062750816345215
    7. '(' → logprob: -6.187750816345215
    8. '    
' → logprob: -6.312750816345215
    9. ':
' → logprob: -6.312750816345215
    10. ' 
' → logprob: -6.437750816345215

Token 7: ' yes' (ID: 14531)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0031215064227581024
    2. ' """' → logprob: -7.378121376037598
    3. '  ' → logprob: -7.628121376037598
    4. '   ' → logprob: -7.878121376037598
    5. ' if' → logprob: -8.003121376037598
    6. ' return' → logprob: -8.003121376037598
    7. ''' → logprob: -8.878121376037598
    8. ' ,' → logprob: -9.128121376037598
    9. ' '''' → logprob: -9.128121376037598
    10. ' i' → logprob: -9.253121376037598

Token 8: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005190943833440542
    2. ' :' → logprob: -5.505190849304199
    3. ':
' → logprob: -7.880190849304199
    4. '   ' → logprob: -8.2551908493042
    5. ':return' → logprob: -9.5051908493042
    6. '):' → logprob: -9.6301908493042
    7. ' ' → logprob: -9.7551908493042
    8. '():' → logprob: -9.8801908493042
    9. ',' → logprob: -10.0051908493042
    10. '':' → logprob: -10.1301908493042

Token 9: ' gg' (ID: 87993)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14311742782592773
    2. '   ' → logprob: -2.2681174278259277
    3. ' return' → logprob: -5.143117427825928
    4. ':' → logprob: -5.268117427825928
    5. '    ' → logprob: -5.518117427825928
    6. ' :' → logprob: -5.768117427825928
    7. ' 
' → logprob: -6.018117427825928
    8. '  ' → logprob: -6.143117427825928
    9. ''' → logprob: -6.518117427825928
    10. '"' → logprob: -7.268117427825928

Token 10: 'cd' (ID: 8301)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03674200922250748
    2. '   ' → logprob: -4.036742210388184
    3. '():' → logprob: -5.161742210388184
    4. '```' → logprob: -5.286742210388184
    5. '``' → logprob: -6.661742210388184
    6. '':' → logprob: -7.161742210388184
    7. '(' → logprob: -7.286742210388184
    8. ' ' → logprob: -7.411742210388184
    9. ' :' → logprob: -7.411742210388184
    10. '):' → logprob: -7.661742210388184

Token 11: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02811029553413391
    2. '   ' → logprob: -4.028110504150391
    3. ':
' → logprob: -5.653110504150391
    4. '```' → logprob: -6.403110504150391
    5. ' :' → logprob: -6.653110504150391
    6. ' ' → logprob: -7.403110504150391
    7. ':return' → logprob: -7.653110504150391
    8. '():' → logprob: -8.27811050415039
    9. '':' → logprob: -8.40311050415039
    10. '``' → logprob: -8.77811050415039

Token 12: ' why' (ID: 4436)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09248337894678116
    2. '```' → logprob: -3.9674832820892334
    3. ' ' → logprob: -4.4674835205078125
    4. ':' → logprob: -4.7174835205078125
    5. '(' → logprob: -5.0924835205078125
    6. ' return' → logprob: -5.4674835205078125
    7. '    
' → logprob: -5.4674835205078125
    8. '():' → logprob: -5.7174835205078125
    9. '    ' → logprob: -5.8424835205078125
    10. '``' → logprob: -5.8424835205078125

Token 13: ' not' (ID: 625)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2611912786960602
    2. '():' → logprob: -2.3861913681030273
    3. '   ' → logprob: -2.5111913681030273
    4. '```' → logprob: -3.3861913681030273
    5. '(' → logprob: -4.886191368103027
    6. '``' → logprob: -5.886191368103027
    7. ':
' → logprob: -6.761191368103027
    8. '_' → logprob: -6.761191368103027
    9. '():
' → logprob: -6.886191368103027
    10. '):' → logprob: -6.886191368103027

Token 14: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005757664795964956
    2. ':
' → logprob: -6.505757808685303
    3. '():' → logprob: -6.880757808685303
    4. ' :' → logprob: -7.130757808685303
    5. '(' → logprob: -7.255757808685303
    6. '   ' → logprob: -7.380757808685303
    7. ':return' → logprob: -8.380757331848145
    8. '):' → logprob: -8.755757331848145
    9. '```' → logprob: -8.755757331848145
    10. '':' → logprob: -9.255757331848145

Token 15: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3363133370876312
    2. '   ' → logprob: -1.3363133668899536
    3. ':
' → logprob: -4.711313247680664
    4. '```' → logprob: -4.961313247680664
    5. ' ' → logprob: -6.711313247680664
    6. ':return' → logprob: -7.211313247680664
    7. ':\' → logprob: -7.461313247680664
    8. '``' → logprob: -7.461313247680664
    9. '\n' → logprob: -7.711313247680664
    10. '    
' → logprob: -7.836313247680664

Token 16: ' while' (ID: 2049)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7190845012664795
    2. ' ' → logprob: -1.5940845012664795
    3. '   ' → logprob: -1.7190845012664795
    4. 'r' → logprob: -2.7190845012664795
    5. ' i' → logprob: -3.3440845012664795
    6. ' if' → logprob: -4.594084739685059
    7. ' return' → logprob: -5.344084739685059
    8. 'if' → logprob: -5.594084739685059
    9. '    ' → logprob: -6.344084739685059
    10. ':' → logprob: -6.344084739685059

Token 17: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.024337278679013252
    2. ' ' → logprob: -3.8993372917175293
    3. ' y' → logprob: -6.149337291717529
    4. 'x' → logprob: -7.149337291717529
    5. ' not' → logprob: -7.399337291717529
    6. ' (' → logprob: -8.524336814880371
    7. 'y' → logprob: -11.024336814880371
    8. '(x' → logprob: -11.274336814880371
    9. ' ' → logprob: -11.774336814880371
    10. '  ' → logprob: -12.149336814880371

Token 18: ' and' (ID: 326)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.7266102433204651
    2. ' %' → logprob: -1.1016101837158203
    3. ' >' → logprob: -1.8516101837158203
    4. '>' → logprob: -4.47661018371582
    5. ' ' → logprob: -4.85161018371582
    6. '!=' → logprob: -5.85161018371582
    7. '%' → logprob: -5.97661018371582
    8. '   ' → logprob: -7.72661018371582
    9. ' >=' → logprob: -8.22661018371582
    10. '    ' → logprob: -8.22661018371582

Token 19: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.16024281084537506
    2. 'y' → logprob: -1.9102427959442139
    3. '	y' → logprob: -11.410243034362793
    4. ' ' → logprob: -12.785243034362793
    5. '   ' → logprob: -13.660243034362793
    6. '(y' → logprob: -14.160243034362793
    7. '    ' → logprob: -14.410243034362793
    8. ''y' → logprob: -14.535243034362793
    9. '```' → logprob: -15.035243034362793
    10. ',y' → logprob: -15.160243034362793

Token 20: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16923604905605316
    2. ' :' → logprob: -2.294235944747925
    3. '   ' → logprob: -3.669235944747925
    4. '       ' → logprob: -4.919236183166504
    5. '    ' → logprob: -5.419236183166504
    6. ':
' → logprob: -5.544236183166504
    7. ' and' → logprob: -6.044236183166504
    8. ' :
' → logprob: -6.044236183166504
    9. ',' → logprob: -6.544236183166504
    10. '<|end|>' → logprob: -6.669236183166504

Token 21: '       ' (ID: 309)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.9774174094200134
    2. '   ' → logprob: -1.2274174690246582
    3. ':' → logprob: -1.7274174690246582
    4. '       ' → logprob: -2.852417469024658
    5. ' :' → logprob: -3.477417469024658
    6. ':
' → logprob: -4.477417469024658
    7. ' ' → logprob: -4.727417469024658
    8. '```' → logprob: -4.977417469024658
    9. ',' → logprob: -5.102417469024658
    10. '=' → logprob: -5.602417469024658

Token 22: ' x' (ID: 1215)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7457284927368164
    2. ' if' → logprob: -0.9957284927368164
    3. '    ' → logprob: -2.6207284927368164
    4. '        ' → logprob: -3.4957284927368164
    5. ' x' → logprob: -3.7457284927368164
    6. '   ' → logprob: -4.620728492736816
    7. 'if' → logprob: -5.620728492736816
    8. ' ' → logprob: -5.870728492736816
    9. '```' → logprob: -5.870728492736816
    10. 'x' (adapté à ' x') → logprob: -5.995728492736816

Token 23: ',y' (ID: 16103)
  Prédit: ' %='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %=' → logprob: -0.3248978853225708
    2. ' %' → logprob: -2.1998977661132812
    3. '%' → logprob: -2.9498977661132812
    4. ',' → logprob: -3.0748977661132812
    5. ' -=' → logprob: -3.5748977661132812
    6. ' =' → logprob: -3.9498977661132812
    7. '=' → logprob: -4.949897766113281
    8. ' ^=' → logprob: -5.074897766113281
    9. '%=' → logprob: -5.949897766113281
    10. ' ,' → logprob: -6.449897766113281

Token 24: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0181526318192482
    2. ' =' → logprob: -4.018152713775635
    3. ',' → logprob: -14.018152236938477
    4. '=x' → logprob: -15.018152236938477
    5. '   ' → logprob: -15.518152236938477
    6. '=

' → logprob: -15.518152236938477
    7. '=}' → logprob: -15.643152236938477
    8. ' ' → logprob: -15.768152236938477
    9. '.=' → logprob: -16.143152236938477
    10. ' =)' → logprob: -16.268152236938477

Token 25: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.47410640120506287
    2. 'y' → logprob: -0.9741064310073853
    3. '(y' → logprob: -11.599106788635254
    4. '   ' → logprob: -11.724106788635254
    5. '	y' → logprob: -12.599106788635254
    6. ' (' → logprob: -12.724106788635254
    7. ' ' → logprob: -12.974106788635254
    8. 'x' → logprob: -13.724106788635254
    9. '    ' → logprob: -13.849106788635254
    10. '  ' → logprob: -14.474106788635254

Token 26: '%x' (ID: 67285)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.022142814472317696
    2. ' ,' → logprob: -3.8971428871154785
    3. ',x' → logprob: -6.6471428871154785
    4. ' %' → logprob: -8.52214241027832
    5. ',y' → logprob: -10.39714241027832
    6. '%' → logprob: -10.52214241027832
    7. ' x' → logprob: -11.02214241027832
    8. '%x' → logprob: -11.14714241027832
    9. ' ' → logprob: -11.64714241027832
    10. ',%' → logprob: -13.89714241027832

Token 27: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0771273523569107
    2. ' ,' → logprob: -2.702127456665039
    3. ',y' → logprob: -4.952127456665039
    4. ',x' → logprob: -9.702127456665039
    5. ' ' → logprob: -11.202127456665039
    6. ',
' → logprob: -11.952127456665039
    7. 'y' → logprob: -12.577127456665039
    8. ' y' → logprob: -12.702127456665039
    9. ' ,
' → logprob: -13.702127456665039
    10. ',...' → logprob: -13.952127456665039

Token 28: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.008615872822701931
    2. ' x' → logprob: -4.758615970611572
    3. ' ' → logprob: -14.633615493774414
    4. '%x' → logprob: -15.008615493774414
    5. 'y' → logprob: -15.258615493774414
    6. '	x' → logprob: -15.633615493774414
    7. ' y' → logprob: -17.383615493774414
    8. '   ' → logprob: -18.008615493774414
    9. ''x' → logprob: -18.133615493774414
    10. ')x' → logprob: -18.383615493774414

Token 29: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.33000272512435913
    2. ' 
' → logprob: -2.205002784729004
    3. '   ' → logprob: -2.705002784729004
    4. '  
' → logprob: -3.455002784729004
    5. '<|end|>' → logprob: -3.830002784729004
    6. '\n' → logprob: -4.205002784729004
    7. '    
' → logprob: -4.330002784729004
    8. ' return' → logprob: -4.580002784729004
    9. ' ' → logprob: -6.080002784729004
    10. '   
' → logprob: -6.205002784729004

Token 30: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20971731841564178
    2. '<|end|>' → logprob: -2.334717273712158
    3. '\n' → logprob: -3.584717273712158
    4. ' 
' → logprob: -4.084717273712158
    5. ')' → logprob: -4.459717273712158
    6. ':return' → logprob: -4.834717273712158
    7. '    
' → logprob: -5.084717273712158
    8. ' return' → logprob: -5.584717273712158
    9. ':' → logprob: -5.584717273712158
    10. ' ' → logprob: -5.709717273712158

Token 31: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2989896833896637
    2. '\n' → logprob: -2.048989772796631
    3. ' 
' → logprob: -2.673989772796631
    4. ' return' → logprob: -4.298989772796631
    5. 'return' (adapté à ' return') → logprob: -4.923989772796631
    6. '<|end|>' → logprob: -4.923989772796631
    7. '```' → logprob: -4.923989772796631
    8. '    
' → logprob: -5.173989772796631
    9. ' ' → logprob: -5.923989772796631
    10. '\xe2\x86' → logprob: -6.173989772796631

Token 32: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.7191174030303955
    2. ' y' → logprob: -1.3441174030303955
    3. 'x' → logprob: -1.4691174030303955
    4. ' x' → logprob: -3.8441174030303955
    5. ' max' → logprob: -7.969117164611816
    6. 'max' → logprob: -8.844117164611816
    7. ' ' → logprob: -11.844117164611816
    8. 'abs' → logprob: -12.344117164611816
    9. ' abs' → logprob: -12.844117164611816
    10. '   ' → logprob: -13.094117164611816

Token 33: ' or' (ID: 503)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 34: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0031784253660589457
    2. ' x' → logprob: -5.753178596496582
    3. ' ' → logprob: -14.503178596496582
    4. '	x' → logprob: -15.878178596496582
    5. '1' → logprob: -16.378177642822266
    6. '   ' → logprob: -17.503177642822266
    7. '0' → logprob: -17.878177642822266
    8. '%x' → logprob: -18.878177642822266
    9. ''x' → logprob: -18.878177642822266
    10. '"x' → logprob: -19.378177642822266

Token 35: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 36: 'l' (ID: 75)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 37: 'cm' (ID: 7871)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.011308110319077969
    2. 'i' → logprob: -5.136308193206787
    3. 'en' → logprob: -5.886308193206787
    4. 'l' → logprob: -6.261308193206787
    5. 's' → logprob: -8.636307716369629
    6. 'a' → logprob: -8.886307716369629
    7. 'g' → logprob: -9.386307716369629
    8. 'o' → logprob: -9.761307716369629
    9. 'ist' → logprob: -9.886307716369629
    10. 'is' → logprob: -10.386307716369629

Token 38: 'ish' (ID: 1109)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00031699295504949987
    2. '(x' → logprob: -8.625316619873047
    3. ' (' → logprob: -9.250316619873047
    4. '(a' → logprob: -11.250316619873047
    5. 'def' → logprob: -11.375316619873047
    6. '=' → logprob: -12.125316619873047
    7. ' =' → logprob: -12.875316619873047
    8. '_' → logprob: -13.750316619873047
    9. '(l' → logprob: -13.875316619873047
    10. '(s' → logprob: -14.250316619873047

Token 39: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0008873990154825151
    2. '_' → logprob: -8.000887870788574
    3. ' (' → logprob: -8.500887870788574
    4. '(x' → logprob: -8.875887870788574
    5. 's' → logprob: -9.125887870788574
    6. '=' → logprob: -10.125887870788574
    7. ' =' → logprob: -11.125887870788574
    8. 'def' → logprob: -12.250887870788574
    9. 'a' → logprob: -12.375887870788574
    10. '\(' → logprob: -12.375887870788574

Token 40: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.04540032520890236
    2. ' lambda' → logprob: -3.920400381088257
    3. 'x' → logprob: -4.045400142669678
    4. '(lambda' → logprob: -5.295400142669678
    5. 'l' → logprob: -6.795400142669678
    6. ' x' → logprob: -7.545400142669678
    7. '1' → logprob: -9.670400619506836
    8. '(' → logprob: -9.920400619506836
    9. ' ' → logprob: -10.420400619506836
    10. '(x' → logprob: -10.420400619506836

Token 41: ' a' (ID: 261)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.11958041787147522
    2. ' lambda' → logprob: -2.4945805072784424
    3. 'x' → logprob: -3.8695805072784424
    4. ' a' → logprob: -5.119580268859863
    5. 'lambda' → logprob: -6.119580268859863
    6. ' ' → logprob: -7.369580268859863
    7. 'a' → logprob: -7.994580268859863
    8. '(lambda' → logprob: -9.869580268859863
    9. ' (' → logprob: -10.369580268859863
    10. '  ' → logprob: -10.994580268859863

Token 42: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.5786809921264648
    2. ',' → logprob: -0.8286809921264648
    3. ' ,' → logprob: -6.328680992126465
    4. ',y' → logprob: -8.078680992126465
    5. 'b' → logprob: -8.328680992126465
    6. ',x' → logprob: -8.453680992126465
    7. ',a' → logprob: -8.953680992126465
    8. ' b' → logprob: -10.703680992126465
    9. '_,' → logprob: -11.328680992126465
    10. 'x' → logprob: -12.453680992126465

Token 43: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005493545439094305
    2. ':a' → logprob: -5.755493640899658
    3. ' :' → logprob: -6.755493640899658
    4. ':(' → logprob: -6.880493640899658
    5. '=' → logprob: -10.0054931640625
    6. 'a' → logprob: -11.0054931640625
    7. '=a' → logprob: -11.3804931640625
    8. ':b' → logprob: -11.5054931640625
    9. ' :(' → logprob: -11.6304931640625
    10. '=(' → logprob: -11.7554931640625

Token 44: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5466395616531372
    2. ' a' → logprob: -0.9216395616531372
    3. '(a' → logprob: -4.046639442443848
    4. ' (' → logprob: -5.921639442443848
    5. ' abs' → logprob: -6.296639442443848
    6. 'abs' → logprob: -6.921639442443848
    7. '(abs' → logprob: -8.921639442443848
    8. '(' → logprob: -10.546639442443848
    9. ' ' → logprob: -10.796639442443848
    10. '	a' → logprob: -11.046639442443848

Token 45: '*b' (ID: 72162)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.26643526554107666
    2. ' *' → logprob: -2.141435146331787
    3. '*b' → logprob: -2.266435146331787
    4. '//' → logprob: -4.641435146331787
    5. ' //' → logprob: -6.641435146331787
    6. '*y' → logprob: -7.016435146331787
    7. '*l' → logprob: -7.516435146331787
    8. '*a' → logprob: -9.266435623168945
    9. '//*' → logprob: -9.516435623168945
    10. '*x' → logprob: -10.516435623168945

Token 46: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.16032302379608154
    2. ' //' → logprob: -1.9103230237960815
    3. '/' → logprob: -9.410323143005371
    4. ' /' → logprob: -11.535323143005371
    5. '#' → logprob: -13.535323143005371
    6. ' ' → logprob: -13.535323143005371
    7. ' ' → logprob: -13.660323143005371
    8. '//=' → logprob: -14.285323143005371
    9. '//'' → logprob: -14.660323143005371
    10. ')//' → logprob: -15.035323143005371

Token 47: 'gg' (ID: 3249)
  Prédit: 'gg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gg' → logprob: -0.0014048750745132565
    2. ' gg' → logprob: -6.876404762268066
    3. 'g' → logprob: -8.501404762268066
    4. '(' → logprob: -9.626404762268066
    5. '.gg' → logprob: -9.876404762268066
    6. 'abs' → logprob: -11.126404762268066
    7. 'a' → logprob: -12.251404762268066
    8. 'max' → logprob: -12.626404762268066
    9. '   ' → logprob: -12.876404762268066
    10. 'x' → logprob: -13.251404762268066

Token 48: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -2.816093228830141e-06
    2. 'c' → logprob: -13.00000286102295
    3. '	cd' → logprob: -15.37500286102295
    4. '_cd' → logprob: -16.250001907348633
    5. 'cdn' → logprob: -16.500001907348633
    6. '(cd' → logprob: -18.125001907348633
    7. 'cdf' → logprob: -18.125001907348633
    8. 'xcd' → logprob: -18.250001907348633
    9. 'cdr' → logprob: -18.375001907348633
    10. 'cod' → logprob: -18.625001907348633

Token 49: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.008618239313364029
    2. '(' → logprob: -4.758618354797363
    3. '(x' → logprob: -12.883618354797363
    4. '(b' → logprob: -14.508618354797363
    5. '(
' → logprob: -14.758618354797363
    6. 'a' → logprob: -15.508618354797363
    7. '(ab' → logprob: -16.258617401123047
    8. ' (' → logprob: -16.633617401123047
    9. '(abs' → logprob: -17.133617401123047
    10. '(

' → logprob: -17.883617401123047

Token 50: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.03172817826271057
    2. ',' → logprob: -3.5317282676696777
    3. 'b' → logprob: -6.281728267669678
    4. ' ,' → logprob: -9.28172779083252
    5. ',y' → logprob: -11.65672779083252
    6. ' b' → logprob: -13.28172779083252
    7. ' ' → logprob: -14.40672779083252
    8. ')b' → logprob: -14.53172779083252
    9. ')' → logprob: -15.15672779083252
    10. ',
' → logprob: -15.40672779083252

Token 51: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7432603272027336e-06
    2. ' )' → logprob: -14.750001907348633
    3. ')
' → logprob: -15.125001907348633
    4. '))' → logprob: -15.375001907348633
    5. ')a' → logprob: -15.875001907348633
    6. '(' → logprob: -16.125001907348633
    7. '<|end|>' → logprob: -16.375001907348633
    8. 'a' → logprob: -16.750001907348633
    9. ')>' → logprob: -16.750001907348633
    10. '),' → logprob: -16.875001907348633

Token 52: '_a' (ID: 10852)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7626429796218872
    2. 'print' → logprob: -2.0126428604125977
    3. 'a' → logprob: -2.1376428604125977
    4. '
' → logprob: -2.7626428604125977
    5. 'def' → logprob: -3.1376428604125977
    6. 'n' → logprob: -3.2626428604125977
    7. '```' → logprob: -3.5126428604125977
    8. 'l' → logprob: -3.7626428604125977
    9. '(' → logprob: -4.387642860412598
    10. 'x' → logprob: -4.512642860412598

Token 53: ',_' (ID: 46431)
  Prédit: 'dd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dd' → logprob: -0.7929883599281311
    2. ' =' → logprob: -2.4179883003234863
    3. 'bc' → logprob: -2.4179883003234863
    4. ',b' → logprob: -2.6679883003234863
    5. 'r' → logprob: -3.4179883003234863
    6. ',' → logprob: -3.6679883003234863
    7. 'b' → logprob: -3.6679883003234863
    8. '_b' → logprob: -3.7929883003234863
    9. 'l' → logprob: -4.042988300323486
    10. 'rg' → logprob: -4.167988300323486

Token 54: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0016462645726278424
    2. '_b' → logprob: -6.626646041870117
    3. '=' → logprob: -9.376646041870117
    4. 'a' → logprob: -9.501646041870117
    5. '_' → logprob: -10.126646041870117
    6. ',' → logprob: -10.501646041870117
    7. ' =' → logprob: -10.626646041870117
    8. ',b' → logprob: -11.001646041870117
    9. ',_' → logprob: -11.376646041870117
    10. '_a' → logprob: -11.376646041870117

Token 55: ',_' (ID: 46431)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1798836588859558
    2. '=' → logprob: -1.8048837184906006
    3. ',' → logprob: -9.42988395690918
    4. '_' → logprob: -11.17988395690918
    5. ' ' → logprob: -11.17988395690918
    6. ' ,' → logprob: -12.05488395690918
    7. '=_' → logprob: -12.55488395690918
    8. '_=' → logprob: -12.80488395690918
    9. '<|end|>' → logprob: -13.17988395690918
    10. '  ' → logprob: -13.55488395690918

Token 56: 'c' (ID: 66)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14414454996585846
    2. '=' → logprob: -2.0191445350646973
    3. ' ' → logprob: -6.769144535064697
    4. '_' → logprob: -9.144145011901855
    5. '<|end|>' → logprob: -9.269145011901855
    6. ',' → logprob: -10.144145011901855
    7. '  ' → logprob: -11.644145011901855
    8. 's' → logprob: -11.769145011901855
    9. '<|end|>' → logprob: -11.769145011901855
    10. '_=' → logprob: -12.144145011901855

Token 57: ',_' (ID: 46431)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4747762084007263
    2. ' =' → logprob: -0.9747762084007263
    3. ',' → logprob: -7.599776268005371
    4. '_' → logprob: -9.599776268005371
    5. '=_' → logprob: -9.724776268005371
    6. ',_' → logprob: -10.849776268005371
    7. '_=' → logprob: -11.099776268005371
    8. ' ,' → logprob: -12.724776268005371
    9. '=int' → logprob: -12.974776268005371
    10. ' ' → logprob: -12.974776268005371

Token 58: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5893266201019287
    2. 'c' → logprob: -0.8393266201019287
    3. ' =' → logprob: -4.839326858520508
    4. '_c' → logprob: -5.964326858520508
    5. '=' → logprob: -6.089326858520508
    6. 'x' → logprob: -8.464326858520508
    7. '_d' → logprob: -8.964326858520508
    8. ',' → logprob: -10.589326858520508
    9. '_' → logprob: -10.714326858520508
    10. 'a' → logprob: -11.214326858520508

Token 59: '=' (ID: 28)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2822595238685608
    2. '=' → logprob: -1.407259464263916
    3. ',' → logprob: -6.907259464263916
    4. '=_' → logprob: -10.907259941101074
    5. ',_' → logprob: -10.907259941101074
    6. ' ,' → logprob: -11.657259941101074
    7. '_' → logprob: -12.157259941101074
    8. ' ' → logprob: -12.532259941101074
    9. '=int' → logprob: -12.657259941101074
    10. '```' → logprob: -12.657259941101074

Token 60: 'map' (ID: 3726)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.8088119626045227
    2. '0' → logprob: -1.308811902999878
    3. ' ' → logprob: -1.808811902999878
    4. '10' → logprob: -3.933811902999878
    5. '(' → logprob: -4.308812141418457
    6. '12' → logprob: -4.308812141418457
    7. '5' → logprob: -4.558812141418457
    8. '6' → logprob: -4.558812141418457
    9. '2' → logprob: -4.933812141418457
    10. '3' → logprob: -5.058812141418457

Token 61: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.011271928437054157
    2. '(' → logprob: -4.511271953582764
    3. '(lambda' → logprob: -9.136271476745605
    4. 'int' → logprob: -9.886271476745605
    5. '(input' → logprob: -10.386271476745605
    6. '(eval' → logprob: -11.761271476745605
    7. '<|end|>' → logprob: -11.761271476745605
    8. '<int' → logprob: -12.386271476745605
    9. '[int' → logprob: -12.511271476745605
    10. '(
' → logprob: -12.511271476745605

Token 62: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.014613431878387928
    2. ')' → logprob: -4.889613628387451
    3. 'input' → logprob: -5.639613628387451
    4. ',input' → logprob: -6.389613628387451
    5. '(' → logprob: -6.764613628387451
    6. ' input' → logprob: -8.764613151550293
    7. ')(' → logprob: -8.889613151550293
    8. '=input' → logprob: -9.764613151550293
    9. '()' → logprob: -9.889613151550293
    10. '<|end|>' → logprob: -10.014613151550293

Token 63: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.01790887489914894
    2. '()' → logprob: -4.142909049987793
    3. '())' → logprob: -6.392909049987793
    4. '(' → logprob: -9.767909049987793
    5. '());' → logprob: -10.142909049987793
    6. ')' → logprob: -10.642909049987793
    7. '()>' → logprob: -11.267909049987793
    8. '();)' → logprob: -11.267909049987793
    9. '()?>' → logprob: -12.142909049987793
    10. '();' → logprob: -12.267909049987793

Token 64: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.1080467781284824e-05
    2. 'strip' → logprob: -10.500041007995605
    3. ' split' → logprob: -12.125041007995605
    4. '(split' → logprob: -12.250041007995605
    5. 's' → logprob: -13.500041007995605
    6. 'rstrip' → logprob: -14.250041007995605
    7. 'spl' → logprob: -14.625041007995605
    8. ')' → logprob: -15.125041007995605
    9. 'sp' → logprob: -16.125041961669922
    10. ' ' → logprob: -16.375041961669922

Token 65: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00839495100080967
    2. '()' → logprob: -5.508394718170166
    3. '()))' → logprob: -5.508394718170166
    4. '('' → logprob: -8.758395195007324
    5. ')' → logprob: -10.508395195007324
    6. '(' → logprob: -10.758395195007324
    7. ' ())' → logprob: -11.383395195007324
    8. '();)' → logprob: -12.008395195007324
    9. '()),' → logprob: -12.133395195007324
    10. '().' → logprob: -12.258395195007324

Token 66: 'tot' (ID: 25645)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3658124506473541
    2. 'if' → logprob: -1.2408124208450317
    3. 'e' → logprob: -4.990812301635742
    4. 'result' → logprob: -5.990812301635742
    5. 'for' → logprob: -6.365812301635742
    6. 'l' → logprob: -6.490812301635742
    7. '_' → logprob: -6.615812301635742
    8. 'res' → logprob: -7.240812301635742
    9. 'x' → logprob: -7.615812301635742
    10. 'n' → logprob: -7.865812301635742

Token 67: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03502321615815163
    2. ' =' → logprob: -3.5350232124328613
    3. '_=' → logprob: -6.410023212432861
    4. '_' → logprob: -6.535023212432861
    5. '+=' → logprob: -7.285023212432861
    6. '=_' → logprob: -7.285023212432861
    7. 's' → logprob: -8.41002368927002
    8. '=int' → logprob: -8.53502368927002
    9. '=sum' → logprob: -9.16002368927002
    10. '=l' → logprob: -10.66002368927002

Token 68: ' -' (ID: 533)
  Prédit: '_a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.7230883240699768
    2. '_l' → logprob: -1.473088264465332
    3. ' _' → logprob: -2.348088264465332
    4. '(_' → logprob: -3.098088264465332
    5. '_b' → logprob: -3.598088264465332
    6. 'max' → logprob: -3.723088264465332
    7. '_c' → logprob: -4.098088264465332
    8. 'min' → logprob: -4.223088264465332
    9. 'l' → logprob: -4.348088264465332
    10. ' l' → logprob: -4.473088264465332

Token 69: '~' (ID: 93)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_c' → logprob: -1.4139708280563354
    2. '_a' → logprob: -1.4139708280563354
    3. '(_' → logprob: -1.6639708280563354
    4. 'min' → logprob: -1.9139708280563354
    5. 'l' → logprob: -3.038970947265625
    6. '_l' → logprob: -3.288970947265625
    7. '_b' → logprob: -3.663970947265625
    8. 'max' → logprob: -3.913970947265625
    9. '1' → logprob: -4.038970947265625
    10. 'a' → logprob: -5.038970947265625

Token 70: '(_' (ID: 4963)
  Prédit: '_a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.4469524919986725
    2. '_b' → logprob: -1.44695246219635
    3. '_c' → logprob: -2.4469525814056396
    4. '(_' → logprob: -3.4469525814056396
    5. '_l' → logprob: -6.0719523429870605
    6. '_d' → logprob: -6.4469523429870605
    7. '_' → logprob: -7.3219523429870605
    8. 'a' → logprob: -7.3219523429870605
    9. '(' → logprob: -7.4469523429870605
    10. '_g' → logprob: -7.6969523429870605

Token 71: 'b' (ID: 65)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.016128329560160637
    2. '_a' → logprob: -4.2661285400390625
    3. 'c' → logprob: -6.8911285400390625
    4. 'b' → logprob: -7.8911285400390625
    5. '_c' → logprob: -7.8911285400390625
    6. '_b' → logprob: -9.016128540039062
    7. 'd' → logprob: -9.766128540039062
    8. '_d' → logprob: -11.516128540039062
    9. ' a' → logprob: -12.391128540039062
    10. '_' → logprob: -13.266128540039062

Token 72: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.41043224930763245
    2. '-' → logprob: -1.78543221950531
    3. '-_' → logprob: -1.78543221950531
    4. ')' → logprob: -7.7854323387146
    5. '-a' → logprob: -8.285431861877441
    6. '+' → logprob: -9.035431861877441
    7. ' )' → logprob: -9.410431861877441
    8. ')-' → logprob: -10.535431861877441
    9. ' _' → logprob: -10.535431861877441
    10. ' ' → logprob: -10.660431861877441

Token 73: ' _' (ID: 1175)
  Prédit: '_a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.003923568408936262
    2. '_c' → logprob: -6.253923416137695
    3. ' _' → logprob: -6.378923416137695
    4. '_b' → logprob: -8.628923416137695
    5. ' ' → logprob: -10.503923416137695
    6. 'a' → logprob: -10.878923416137695
    7. '_' → logprob: -11.128923416137695
    8. '   ' → logprob: -11.253923416137695
    9. '1' → logprob: -11.378923416137695
    10. ')' → logprob: -11.878923416137695

Token 74: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.004259208217263222
    2. '_a' → logprob: -5.75425910949707
    3. 'c' → logprob: -6.87925910949707
    4. '_c' → logprob: -10.00425910949707
    5. ')' → logprob: -13.37925910949707
    6. ' a' → logprob: -13.62925910949707
    7. 'd' → logprob: -14.12925910949707
    8. 'b' → logprob: -14.25425910949707
    9. '_' → logprob: -14.37925910949707
    10. ' ' → logprob: -14.37925910949707

Token 75: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04830695688724518
    2. '+' → logprob: -3.298306941986084
    3. ')*' → logprob: -4.798306941986084
    4. ')+' → logprob: -7.173306941986084
    5. ' +' → logprob: -7.548306941986084
    6. ' )' → logprob: -8.048307418823242
    7. ')*(' → logprob: -8.798307418823242
    8. '-' → logprob: -9.298307418823242
    9. '*' → logprob: -10.423307418823242
    10. ')**' → logprob: -11.173307418823242

Token 76: 'xy' (ID: 6077)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.711425244808197
    2. '+' → logprob: -1.0864253044128418
    3. '-' → logprob: -2.836425304412842
    4. 'if' → logprob: -3.086425304412842
    5. '_' → logprob: -4.211425304412842
    6. '_c' → logprob: -4.586425304412842
    7. ' +' → logprob: -5.336425304412842
    8. 'tot' → logprob: -5.586425304412842
    9. ' *' → logprob: -5.711425304412842
    10. 'for' → logprob: -5.961425304412842

Token 77: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4767429828643799
    2. ' =' → logprob: -0.9767429828643799
    3. ' ' → logprob: -6.851742744445801
    4. '_' → logprob: -7.226742744445801
    5. ',' → logprob: -8.3517427444458
    6. '=[]' → logprob: -8.8517427444458
    7. '=_' → logprob: -9.2267427444458
    8. '_=' → logprob: -9.8517427444458
    9. '1' → logprob: -9.9767427444458
    10. '  ' → logprob: -10.3517427444458

Token 78: ' l' (ID: 305)
  Prédit: '(_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(_' → logprob: -1.171541690826416
    2. '[_' → logprob: -1.546541690826416
    3. '[' → logprob: -1.796541690826416
    4. '[]' → logprob: -2.796541690826416
    5. 'list' → logprob: -3.171541690826416
    6. '_a' → logprob: -3.421541690826416
    7. '_b' → logprob: -3.546541690826416
    8. '(' → logprob: -3.546541690826416
    9. '_' → logprob: -4.171541690826416
    10. '[(' → logprob: -4.296541690826416

Token 79: 'cm' (ID: 7871)
  Prédit: 'ist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.5278590321540833
    2. 'ambda' → logprob: -1.9028589725494385
    3. 'amb' → logprob: -2.1528589725494385
    4. 'c' → logprob: -2.9028589725494385
    5. 'cm' → logprob: -3.0278589725494385
    6. 'st' → logprob: -4.402859210968018
    7. 'am' → logprob: -4.527859210968018
    8. '_c' → logprob: -5.652859210968018
    9. 'mb' → logprob: -5.777859210968018
    10. 'a' → logprob: -6.152859210968018

Token 80: 'ish' (ID: 1109)
  Prédit: 'ish'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ish' → logprob: -0.00019209683523513377
    2. '(' → logprob: -8.625191688537598
    3. '-ish' → logprob: -12.375191688537598
    4. '(_' → logprob: -13.250191688537598
    5. '(x' → logprob: -13.750191688537598
    6. '_' → logprob: -14.000191688537598
    7. ' ish' → logprob: -14.375191688537598
    8. 's' → logprob: -14.375191688537598
    9. '```' → logprob: -14.500191688537598
    10. 'ist' → logprob: -15.125191688537598

Token 81: '(_' (ID: 4963)
  Prédit: '(_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(_' → logprob: -0.004806395620107651
    2. '(' → logprob: -5.3798065185546875
    3. '(_,' → logprob: -9.254806518554688
    4. '((' → logprob: -10.879806518554688
    5. '(t' → logprob: -11.004806518554688
    6. '(x' → logprob: -11.254806518554688
    7. '((_' → logprob: -11.379806518554688
    8. '(
' → logprob: -11.879806518554688
    9. '(a' → logprob: -12.129806518554688
    10. ' (_' → logprob: -12.254806518554688

Token 82: 'c' (ID: 66)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.1215388774871826
    2. '_c' → logprob: -1.3715388774871826
    3. 'c' → logprob: -1.9965388774871826
    4. '_a' → logprob: -1.9965388774871826
    5. '_b' → logprob: -2.2465388774871826
    6. 'b' → logprob: -3.2465388774871826
    7. '_d' → logprob: -6.121539115905762
    8. 'd' → logprob: -6.246539115905762
    9. '_' → logprob: -10.371539115905762
    10. '_x' → logprob: -11.559039115905762

Token 83: ',_' (ID: 46431)
  Prédit: ',_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',_' → logprob: -0.5303980112075806
    2. ',' → logprob: -0.9053980112075806
    3. ' ,' → logprob: -5.030397891998291
    4. ',t' → logprob: -8.28039836883545
    5. ',d' → logprob: -8.78039836883545
    6. ' ' → logprob: -9.90539836883545
    7. '_,' → logprob: -10.15539836883545
    8. ',
' → logprob: -10.53039836883545
    9. ',(' → logprob: -11.15539836883545
    10. ' _' → logprob: -11.53039836883545

Token 84: 'd' (ID: 67)
  Prédit: '_d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.4290936589241028
    2. 'd' → logprob: -1.054093599319458
    3. '_b' → logprob: -8.679093360900879
    4. '_a' → logprob: -9.179093360900879
    5. 'a' → logprob: -9.804093360900879
    6. 'b' → logprob: -10.804093360900879
    7. ' d' → logprob: -11.179093360900879
    8. '_c' → logprob: -11.429093360900879
    9. '_' → logprob: -12.304093360900879
    10. ' _' → logprob: -13.054093360900879

Token 85: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00040910433745011687
    2. ')
' → logprob: -8.250409126281738
    3. ' )' → logprob: -9.875409126281738
    4. ')

' → logprob: -10.375409126281738
    5. ')*' → logprob: -10.375409126281738
    6. '))' → logprob: -12.125409126281738
    7. ')`' → logprob: -12.250409126281738
    8. ')
' → logprob: -12.375409126281738
    9. ')_' → logprob: -13.000409126281738
    10. ')+' → logprob: -13.000409126281738

Token 86: 'def' (ID: 1314)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.09258857369422913
    2. 'if' → logprob: -2.5925886631011963
    3. 'ans' → logprob: -5.342588424682617
    4. 'n' → logprob: -6.092588424682617
    5. 'for' → logprob: -6.717588424682617
    6. 'p' → logprob: -7.467588424682617
    7. 'res' → logprob: -7.467588424682617
    8. 'tot' → logprob: -7.842588424682617
    9. 'cnt' → logprob: -7.967588424682617
    10. 'q' → logprob: -8.092588424682617

Token 87: ' range' (ID: 3352)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -1.0081696510314941
    2. ' l' → logprob: -1.6331696510314941
    3. ' gcd' → logprob: -2.508169651031494
    4. ' solve' → logprob: -3.633169651031494
    5. ' max' → logprob: -3.758169651031494
    6. ' is' → logprob: -4.008169651031494
    7. ' f' → logprob: -4.133169651031494
    8. ' g' → logprob: -4.133169651031494
    9. ' min' → logprob: -4.258169651031494
    10. ' find' → logprob: -4.445669651031494

Token 88: '_div' (ID: 36926)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6635041832923889
    2. '(' → logprob: -1.7885041236877441
    3. '_overlap' → logprob: -2.163504123687744
    4. '_(' → logprob: -3.663504123687744
    5. '_sum' → logprob: -3.663504123687744
    6. '(_' → logprob: -3.788504123687744
    7. '_range' → logprob: -3.788504123687744
    8. '_in' → logprob: -4.413504123687744
    9. '_over' → logprob: -4.413504123687744
    10. '_cover' → logprob: -4.788504123687744

Token 89: 's' (ID: 82)
  Prédit: 'isible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isible' → logprob: -0.02674097567796707
    2. 'ides' → logprob: -4.026741027832031
    3. 'isor' → logprob: -5.401741027832031
    4. 'ide' → logprob: -6.401741027832031
    5. 'isable' → logprob: -7.276741027832031
    6. '(' → logprob: -7.776741027832031
    7. 'is' → logprob: -8.776741027832031
    8. '(x' → logprob: -8.901741027832031
    9. '(start' → logprob: -8.901741027832031
    10. 's' → logprob: -9.276741027832031

Token 90: '(z' (ID: 27674)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.7805837392807007
    2. '(start' → logprob: -1.6555837392807007
    3. '(' → logprob: -1.7805837392807007
    4. '(x' → logprob: -2.4055838584899902
    5. '(range' → logprob: -3.2805838584899902
    6. '(a' → logprob: -3.9055838584899902
    7. '(i' → logprob: -5.15558385848999
    8. 'isor' → logprob: -5.28058385848999
    9. '(end' → logprob: -5.53058385848999
    10. '(_' → logprob: -5.90558385848999

Token 91: 'lo' (ID: 746)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16613684594631195
    2. '):' → logprob: -2.4161367416381836
    3. ',z' → logprob: -3.2911367416381836
    4. ',n' → logprob: -4.041136741638184
    5. ' ,' → logprob: -5.541136741638184
    6. ',a' → logprob: -7.166136741638184
    7. ',y' → logprob: -7.666136741638184
    8. ',_' → logprob: -7.791136741638184
    9. ',k' → logprob: -7.791136741638184
    10. ',x' → logprob: -7.791136741638184

Token 92: ',z' (ID: 54920)
  Prédit: ',z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',z' → logprob: -0.2826234996318817
    2. ',' → logprob: -1.407623529434204
    3. ' ,' → logprob: -7.157623291015625
    4. ',n' → logprob: -8.282623291015625
    5. ',_' → logprob: -8.657623291015625
    6. '_,' → logprob: -9.907623291015625
    7. ',r' → logprob: -10.407623291015625
    8. ',Z' → logprob: -11.032623291015625
    9. ',y' → logprob: -11.532623291015625
    10. ',k' → logprob: -11.657623291015625

Token 93: 'hi' (ID: 3686)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.003076586639508605
    2. ',' → logprob: -6.753076553344727
    3. 'hi' → logprob: -7.003076553344727
    4. '```' → logprob: -8.378076553344727
    5. ',o' → logprob: -9.378076553344727
    6. '_hi' → logprob: -9.628076553344727
    7. 'oh' → logprob: -9.753076553344727
    8. 'i' → logprob: -9.753076553344727
    9. 'os' → logprob: -9.753076553344727
    10. 'oo' → logprob: -9.878076553344727

Token 94: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08120743185281754
    2. ',' → logprob: -2.581207513809204
    3. ',z' → logprob: -6.706207275390625
    4. ')' → logprob: -7.581207275390625
    5. ',n' → logprob: -9.331207275390625
    6. ':' → logprob: -9.456207275390625
    7. ' ):' → logprob: -9.581207275390625
    8. ',y' → logprob: -10.081207275390625
    9. ',a' → logprob: -10.331207275390625
    10. ' ,' → logprob: -10.831207275390625

Token 95: 'by' (ID: 2345)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.9586746096611023
    2. 'div' → logprob: -1.583674669265747
    3. 'z' → logprob: -1.708674669265747
    4. 'x' → logprob: -2.333674669265747
    5. 'n' → logprob: -3.208674669265747
    6. 'k' → logprob: -3.208674669265747
    7. 'm' → logprob: -4.333674430847168
    8. ' d' → logprob: -5.083674430847168
    9. ' div' → logprob: -5.083674430847168
    10. ' z' → logprob: -5.708674430847168

Token 96: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00043496055877767503
    2. '):
' → logprob: -8.125434875488281
    3. ')' → logprob: -9.250434875488281
    4. '=' → logprob: -11.125434875488281
    5. '):
' → logprob: -11.250434875488281
    6. ' ):' → logprob: -12.625434875488281
    7. ':' → logprob: -12.750434875488281
    8. '):

' → logprob: -12.750434875488281
    9. '_' → logprob: -13.125434875488281
    10. ',' → logprob: -13.125434875488281

Token 97: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002326224057469517
    2. ':' → logprob: -9.250232696533203
    3. '       ' → logprob: -9.875232696533203
    4. ' ' → logprob: -10.625232696533203
    5. '```' → logprob: -11.000232696533203
    6. 'n' → logprob: -11.625232696533203
    7. '
' → logprob: -11.750232696533203
    8. '    
' → logprob: -12.375232696533203
    9. '    ' → logprob: -12.750232696533203
    10. 'count' → logprob: -13.125232696533203

Token 98: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3434743285179138
    2. 'return' → logprob: -2.3434743881225586
    3. 'r' → logprob: -2.5934743881225586
    4. 'cnt' → logprob: -3.2184743881225586
    5. 'count' → logprob: -3.9684743881225586
    6. 'res' → logprob: -4.218474388122559
    7. ' return' → logprob: -4.843474388122559
    8. 'start' → logprob: -5.218474388122559
    9. 'ret' → logprob: -5.468474388122559
    10. 's' → logprob: -5.593474388122559

Token 99: ' Some' (ID: 6083)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.167435646057129
    2. 'return' → logprob: -1.667435646057129
    3. 'r' → logprob: -1.917435646057129
    4. 'res' → logprob: -2.417435646057129
    5. 'cnt' → logprob: -2.792435646057129
    6. 'ret' → logprob: -3.167435646057129
    7. ' return' → logprob: -3.667435646057129
    8. ' res' → logprob: -4.167435646057129
    9. 'for' → logprob: -4.417435646057129
    10. 'i' → logprob: -4.542435646057129

Token 100: ' unconventional' (ID: 124893)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'div' → logprob: -1.659238338470459
    2. 'result' → logprob: -1.659238338470459
    3. 'res' → logprob: -2.159238338470459
    4. '   ' → logprob: -2.409238338470459
    5. 'r' → logprob: -2.409238338470459
    6. 'def' → logprob: -2.534238338470459
    7. ' res' → logprob: -2.909238338470459
    8. ' code' → logprob: -3.534238338470459
    9. 'count' → logprob: -3.784238338470459
    10. 'code' → logprob: -3.784238338470459

Token 101: ' style' (ID: 2713)
  Prédit: ' code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' code' → logprob: -1.2031803131103516
    2. 'code' → logprob: -1.4531803131103516
    3. ' logic' → logprob: -1.8281803131103516
    4. '   ' → logprob: -1.9531803131103516
    5. 'logic' → logprob: -3.8281803131103516
    6. 'ranges' → logprob: -3.8281803131103516
    7. ' lines' → logprob: -4.203180313110352
    8. 'count' → logprob: -4.328180313110352
    9. 'div' → logprob: -4.703180313110352
    10. '
' → logprob: -4.953180313110352

Token 102: ':' (ID: 25)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1517341583967209
    2. ':' → logprob: -2.1517341136932373
    3. '
' → logprob: -4.151734352111816
    4. ':
' → logprob: -5.401734352111816
    5. 'def' → logprob: -6.276734352111816
    6. ' for' → logprob: -7.901734352111816
    7. '```' → logprob: -8.026734352111816
    8. 'n' → logprob: -8.151734352111816
    9. 's' → logprob: -8.526734352111816
    10. '       ' → logprob: -8.651734352111816

Token 103: ' hack' (ID: 27750)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19059491157531738
    2. ' res' → logprob: -3.4405949115753174
    3. ' cnt' → logprob: -4.440594673156738
    4. ' count' → logprob: -4.565594673156738
    5. '    ' → logprob: -4.565594673156738
    6. ' return' → logprob: -4.690594673156738
    7. ' r' → logprob: -4.815594673156738
    8. '       ' → logprob: -4.940594673156738
    9. ' i' → logprob: -4.940594673156738
    10. ' for' → logprob: -4.940594673156738

Token 104: 'y' (ID: 88)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10088270902633667
    2. '
' → logprob: -2.9758827686309814
    3. 'def' → logprob: -3.8508827686309814
    4. ' for' → logprob: -4.850882530212402
    5. '       ' → logprob: -5.975882530212402
    6. '```' → logprob: -6.100882530212402
    7. ' return' → logprob: -6.725882530212402
    8. 'er' → logprob: -6.850882530212402
    9. 'return' → logprob: -6.850882530212402
    10. ' to' → logprob: -6.975882530212402

Token 105: ' ceiling' (ID: 32727)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6112338900566101
    2. ' return' → logprob: -1.9862339496612549
    3. '
' → logprob: -2.361233949661255
    4. ' for' → logprob: -2.611233949661255
    5. 'def' → logprob: -2.611233949661255
    6. 'return' → logprob: -3.736233949661255
    7. ' def' → logprob: -4.236233711242676
    8. 'for' → logprob: -4.986233711242676
    9. ' ' → logprob: -5.111233711242676
    10. ' 
' → logprob: -5.361233711242676

Token 106: '/f' (ID: 11502)
  Prédit: '_div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_div' → logprob: -0.4928426742553711
    2. 'div' → logprob: -1.117842674255371
    3. ' =' → logprob: -3.367842674255371
    4. 'def' → logprob: -4.492842674255371
    5. '=' → logprob: -5.242842674255371
    6. ' division' → logprob: -5.867842674255371
    7. ' return' → logprob: -6.117842674255371
    8. 'return' → logprob: -7.242842674255371
    9. ' def' → logprob: -7.367842674255371
    10. '_val' → logprob: -7.617842674255371

Token 107: 'lo' (ID: 746)
  Prédit: 'loor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'loor' → logprob: -0.7987815737724304
    2. 'div' → logprob: -1.0487816333770752
    3. 'def' → logprob: -2.298781633377075
    4. '   ' → logprob: -3.923781633377075
    5. '_div' → logprob: -3.923781633377075
    6. '#' → logprob: -4.048781394958496
    7. 'lo' → logprob: -4.298781394958496
    8. 'loat' → logprob: -4.798781394958496
    9. 'or' → logprob: -4.923781394958496
    10. 'iv' → logprob: -6.048781394958496

Token 108: 'ors' (ID: 914)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.01759127341210842
    2. 'ord' → logprob: -4.89259147644043
    3. 'oring' → logprob: -6.51759147644043
    4. '   ' → logprob: -6.51759147644043
    5. 'r' → logprob: -6.76759147644043
    6. 'oor' → logprob: -6.89259147644043
    7. 'div' → logprob: -7.26759147644043
    8. '(or' → logprob: -7.39259147644043
    9. '_div' → logprob: -7.51759147644043
    10. 'orz' → logprob: -7.64259147644043

Token 109: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04155614972114563
    2. 'def' → logprob: -4.041556358337402
    3. ':' → logprob: -4.291556358337402
    4. 'div' → logprob: -6.041556358337402
    5. ':
' → logprob: -6.291556358337402
    6. '```' → logprob: -7.166556358337402
    7. '=' → logprob: -7.291556358337402
    8. ' for' → logprob: -7.541556358337402
    9. '(n' → logprob: -7.666556358337402
    10. '):
' → logprob: -7.916556358337402

Token 110: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08324061334133148
    2. 'def' → logprob: -3.083240509033203
    3. '```' → logprob: -3.833240509033203
    4. ':' → logprob: -5.083240509033203
    5. '``' → logprob: -6.708240509033203
    6. 'div' → logprob: -6.833240509033203
    7. ' by' → logprob: -7.333240509033203
    8. '=' → logprob: -7.708240509033203
    9. ' def' → logprob: -8.208240509033203
    10. ':
' → logprob: -8.208240509033203

Token 111: ' lo' (ID: 1445)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.033580806106328964
    2. ' return' → logprob: -4.158580780029297
    3. 'return' → logprob: -5.783580780029297
    4. ' s' → logprob: -6.158580780029297
    5. ' lo' → logprob: -6.283580780029297
    6. '    ' → logprob: -6.658580780029297
    7. 's' → logprob: -7.158580780029297
    8. 'r' → logprob: -7.283580780029297
    9. 'n' → logprob: -7.283580780029297
    10. ' ' → logprob: -7.408580780029297

Token 112: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.26593852043151855
    2. '=' → logprob: -1.5159385204315186
    3. '   ' → logprob: -4.515938758850098
    4. ',' → logprob: -6.765938758850098
    5. ' ' → logprob: -7.515938758850098
    6. '=int' → logprob: -8.265938758850098
    7. '  ' → logprob: -8.890938758850098
    8. 'r' → logprob: -9.390938758850098
    9. '    ' → logprob: -9.390938758850098
    10. '=_' → logprob: -9.390938758850098

Token 113: ' (' (ID: 350)
  Prédit: '(z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(z' → logprob: -0.07166530936956406
    2. ' (' → logprob: -2.6966652870178223
    3. 'z' → logprob: -7.821665287017822
    4. '(' → logprob: -7.821665287017822
    5. ' z' → logprob: -8.57166576385498
    6. '   ' → logprob: -8.57166576385498
    7. '-' → logprob: -8.82166576385498
    8. '-(' → logprob: -8.94666576385498
    9. ' ' → logprob: -9.44666576385498
    10. ' -' → logprob: -9.57166576385498

Token 114: 'z' (ID: 89)
  Prédit: 'z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.002459248760715127
    2. ' z' → logprob: -6.7524590492248535
    3. '(z' → logprob: -7.3774590492248535
    4. '   ' → logprob: -7.6274590492248535
    5. '-z' → logprob: -9.627459526062012
    6. '	z' → logprob: -10.252459526062012
    7. ' ' → logprob: -10.502459526062012
    8. '  ' → logprob: -11.127459526062012
    9. '-' → logprob: -11.752459526062012
    10. '
' → logprob: -12.502459526062012

Token 115: 'lo' (ID: 746)
  Prédit: 'lo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lo' → logprob: -0.0005393316387198865
    2. 'z' → logprob: -8.625539779663086
    3. '_lo' → logprob: -9.250539779663086
    4. 'zo' → logprob: -9.250539779663086
    5. '(lo' → logprob: -10.500539779663086
    6. '   ' → logprob: -10.625539779663086
    7. ' lo' → logprob: -10.875539779663086
    8. '  ' → logprob: -11.000539779663086
    9. 'hi' → logprob: -11.375539779663086
    10. 'zi' → logprob: -11.875539779663086

Token 116: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.034550249576568604
    2. ' +' → logprob: -3.409550189971924
    3. '+(' → logprob: -7.659550189971924
    4. '-' → logprob: -8.034550666809082
    5. '   ' → logprob: -9.784550666809082
    6. ' -' → logprob: -11.159550666809082
    7. '+
' → logprob: -11.909550666809082
    8. ' ' → logprob: -12.159550666809082
    9. '+b' → logprob: -12.534550666809082
    10. '+)' → logprob: -12.784550666809082

Token 117: 'by' (ID: 2345)
  Prédit: 'by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'by' → logprob: -0.0002910102193709463
    2. '(by' → logprob: -8.875290870666504
    3. ' by' → logprob: -9.125290870666504
    4. '   ' → logprob: -10.625290870666504
    5. '-by' → logprob: -12.125290870666504
    6. '(' → logprob: -12.250290870666504
    7. '-' → logprob: -12.750290870666504
    8. ' ' → logprob: -13.500290870666504
    9. ' (' → logprob: -13.625290870666504
    10. '(-' → logprob: -14.375290870666504

Token 118: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.016043519601225853
    2. ' -' → logprob: -4.141043663024902
    3. '-by' → logprob: -12.016043663024902
    4. 'by' → logprob: -13.891043663024902
    5. ' ' → logprob: -14.266043663024902
    6. '1' → logprob: -14.266043663024902
    7. ' by' → logprob: -14.641043663024902
    8. '   ' → logprob: -15.141043663024902
    9. ')' → logprob: -15.516043663024902
    10. '  ' → logprob: -16.016042709350586

Token 119: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.5577775128767826e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -17.1250057220459
    4. '```' → logprob: -18.5000057220459
    5. ')' → logprob: -18.8750057220459
    6. '  ' → logprob: -19.6250057220459
    7. '-' → logprob: -19.8750057220459
    8. '
' → logprob: -20.1250057220459
    9. '

' → logprob: -20.7500057220459
    10. '...' → logprob: -20.8125057220459

Token 120: ')//' (ID: 60375)
  Prédit: ')//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')//' → logprob: -0.00865499209612608
    2. ')' → logprob: -4.758655071258545
    3. ' )' → logprob: -10.133654594421387
    4. ')#' → logprob: -15.258654594421387
    5. '//' → logprob: -16.133655548095703
    6. '   ' → logprob: -16.258655548095703
    7. ')
' → logprob: -16.508655548095703
    8. ')/' → logprob: -17.133655548095703
    9. ' ' → logprob: -17.258655548095703
    10. ')%' → logprob: -17.383655548095703

Token 121: 'by' (ID: 2345)
  Prédit: 'by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'by' → logprob: -0.00015860427811276168
    2. ' by' → logprob: -8.750158309936523
    3. '   ' → logprob: -16.625158309936523
    4. ' ' → logprob: -18.375158309936523
    5. 'bys' → logprob: -18.750158309936523
    6. '  ' → logprob: -20.000158309936523
    7. 'b' → logprob: -20.250158309936523
    8. '    ' → logprob: -21.375158309936523
    9. 'by's' → logprob: -21.375158309936523
    10. '
' → logprob: -21.375158309936523

Token 122: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4435155391693115
    2. '<|end|>' → logprob: -1.6935155391693115
    3. '   ' → logprob: -1.9435155391693115
    4. '    
' → logprob: -3.9435155391693115
    5. '<|end|>' → logprob: -5.318515777587891
    6. '  
' → logprob: -5.693515777587891
    7. ' 
' → logprob: -6.818515777587891
    8. '   
' → logprob: -8.19351577758789
    9. ',' → logprob: -8.19351577758789
    10. '	
' → logprob: -8.19351577758789

Token 123: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004526250064373016
    2. '
' → logprob: -6.129526138305664
    3. '    
' → logprob: -6.504526138305664
    4. 'hi' → logprob: -8.254526138305664
    5. 'zhi' → logprob: -9.004526138305664
    6. '  ' → logprob: -9.254526138305664
    7. ',' → logprob: -9.254526138305664
    8. '   
' → logprob: -9.879526138305664
    9. '_hi' → logprob: -10.004526138305664
    10. '  
' → logprob: -10.254526138305664

Token 124: ' hi' (ID: 5911)
  Prédit: 'hi'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hi' (adapté à ' hi') → logprob: -0.0030865666922181845
    2. '   ' → logprob: -6.253086566925049
    3. ' hi' → logprob: -7.003086566925049
    4. 'zhi' → logprob: -8.62808609008789
    5. '_hi' → logprob: -10.37808609008789
    6. 'hiq' → logprob: -11.50308609008789
    7. '  ' → logprob: -12.62808609008789
    8. ' ' → logprob: -12.62808609008789
    9. '       ' → logprob: -12.75308609008789
    10. '```' → logprob: -12.87808609008789

Token 125: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12710008025169373
    2. '=' → logprob: -2.1270999908447266
    3. '=z' → logprob: -8.752099990844727
    4. ' =(' → logprob: -12.377099990844727
    5. '   ' → logprob: -12.752099990844727
    6. '=int' → logprob: -13.127099990844727
    7. '=(' → logprob: -13.502099990844727
    8. ' ' → logprob: -13.877099990844727
    9. '=len' → logprob: -14.627099990844727
    10. '=b' → logprob: -15.127099990844727

Token 126: ' z' (ID: 579)
  Prédit: ' z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' z' → logprob: -0.5805431604385376
    2. 'zhi' → logprob: -0.8305431604385376
    3. 'z' → logprob: -6.080543041229248
    4. '   ' → logprob: -6.830543041229248
    5. '(z' → logprob: -7.830543041229248
    6. ' (' → logprob: -7.955543041229248
    7. '	z' → logprob: -8.455543518066406
    8. 'zh' → logprob: -9.705543518066406
    9. ' ' → logprob: -9.955543518066406
    10. ' zih' → logprob: -10.705543518066406

Token 127: 'hi' (ID: 3686)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00024215869780164212
    2. '//' → logprob: -8.625242233276367
    3. 'hi' → logprob: -10.625242233276367
    4. '_i' → logprob: -11.000242233276367
    5. '_hi' → logprob: -11.375242233276367
    6. ' ' → logprob: -12.875242233276367
    7. '   ' → logprob: -13.375242233276367
    8. '[i' → logprob: -14.000242233276367
    9. ' //' → logprob: -14.375242233276367
    10. '
' → logprob: -14.375242233276367

Token 128: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.0015292633324861526
    2. ' //' → logprob: -6.501529216766357
    3. '
' → logprob: -12.126529693603516
    4. ' ' → logprob: -12.376529693603516
    5. '   ' → logprob: -12.501529693603516
    6. '#' → logprob: -12.751529693603516
    7. '//@' → logprob: -12.876529693603516
    8. '/by' → logprob: -13.126529693603516
    9. '//=' → logprob: -13.126529693603516
    10. 'by' → logprob: -13.501529693603516

Token 129: 'by' (ID: 2345)
  Prédit: 'by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'by' → logprob: -1.6240566083070007e-06
    2. ' by' → logprob: -13.375001907348633
    3. ' ' → logprob: -18.625001907348633
    4. 'b' → logprob: -19.625001907348633
    5. 'by's' → logprob: -20.375001907348633
    6. '(by' → logprob: -20.750001907348633
    7. 'bys' → logprob: -21.250001907348633
    8. '   ' → logprob: -22.125001907348633
    9. 'byt' → logprob: -22.375001907348633
    10. '  ' → logprob: -22.625001907348633

Token 130: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001113189267925918
    2. '
' → logprob: -7.376113414764404
    3. 'return' → logprob: -8.626112937927246
    4. '    
' → logprob: -8.876112937927246
    5. ' return' → logprob: -9.251112937927246
    6. '	return' → logprob: -10.001112937927246
    7. 'def' → logprob: -12.001112937927246
    8. '<|end|>' → logprob: -12.251112937927246
    9. ',' → logprob: -12.501112937927246
    10. ')' → logprob: -12.876112937927246

Token 131: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00017410075815860182
    2. 'return' → logprob: -9.625174522399902
    3. '
' → logprob: -10.375174522399902
    4. '    
' → logprob: -10.750174522399902
    5. ' return' → logprob: -10.875174522399902
    6. '<|end|>' → logprob: -10.875174522399902
    7. '	return' → logprob: -11.125174522399902
    8. 'def' → logprob: -13.875174522399902
    9. '<|end|>' → logprob: -14.625174522399902
    10. '       ' → logprob: -15.125174522399902

Token 132: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4337104558944702
    2. 'return' (adapté à ' return') → logprob: -1.0587104558944702
    3. ' return' → logprob: -5.68371057510376
    4. 'count' → logprob: -7.68371057510376
    5. 'if' → logprob: -7.80871057510376
    6. 'def' → logprob: -8.933710098266602
    7. 'res' → logprob: -9.058710098266602
    8. '
' → logprob: -9.183710098266602
    9. '    
' → logprob: -9.433710098266602
    10. 'ret' → logprob: -9.683710098266602

Token 133: ' max' (ID: 2999)
  Prédit: 'hi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hi' → logprob: -0.12572218477725983
    2. 'max' → logprob: -3.0007221698760986
    3. ' hi' → logprob: -3.5007221698760986
    4. 'range' → logprob: -3.8757221698760986
    5. ' max' → logprob: -5.125722408294678
    6. 'list' → logprob: -5.625722408294678
    7. 'set' → logprob: -6.000722408294678
    8. ' range' → logprob: -6.125722408294678
    9. '(' → logprob: -6.750722408294678
    10. ' list' → logprob: -7.625722408294678

Token 134: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0006170084234327078
    2. '0' → logprob: -7.750617027282715
    3. '(lo' → logprob: -8.625617027282715
    4. ' (' → logprob: -13.000617027282715
    5. '(
' → logprob: -13.250617027282715
    6. '((' → logprob: -13.625617027282715
    7. ' ' → logprob: -13.875617027282715
    8. '(

' → logprob: -15.625617027282715
    9. 'hi' → logprob: -16.1256160736084
    10. '(min' → logprob: -16.3756160736084

Token 135: 'hi' (ID: 3686)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003328734077513218
    2. 'hi' → logprob: -6.128328800201416
    3. ' ' → logprob: -7.378328800201416
    4. '(' → logprob: -7.628328800201416
    5. '   ' → logprob: -11.378328323364258
    6. 'ho' → logprob: -12.253328323364258
    7. '
' → logprob: -12.753328323364258
    8. '  ' → logprob: -12.878328323364258
    9. ' hi' → logprob: -13.003328323364258
    10. ' (' → logprob: -13.003328323364258

Token 136: '-lo' (ID: 26299)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.07710031419992447
    2. '-lo' → logprob: -2.8271002769470215
    3. '-' → logprob: -4.2021002769470215
    4. '-Lo' → logprob: -10.45210075378418
    5. ' ' → logprob: -12.45210075378418
    6. '(lo' → logprob: -12.45210075378418
    7. '-
' → logprob: -12.70210075378418
    8. '-los' → logprob: -12.82710075378418
    9. ' -
' → logprob: -13.07710075378418
    10. ',' → logprob: -13.20210075378418

Token 137: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.011310238391160965
    2. ' +' → logprob: -4.51131010055542
    3. ',' → logprob: -8.386310577392578
    4. ',+' → logprob: -11.261310577392578
    5. ' ,' → logprob: -12.136310577392578
    6. '+,' → logprob: -12.386310577392578
    7. '+
' → logprob: -12.636310577392578
    8. ')+' → logprob: -13.011310577392578
    9. '0' → logprob: -13.386310577392578
    10. '1' → logprob: -13.761310577392578

Token 138: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.570319702499546e-05
    2. ' ' → logprob: -10.625025749206543
    3. '0' → logprob: -13.625025749206543
    4. '   ' → logprob: -15.875025749206543
    5. ')' → logprob: -16.875024795532227
    6. ',' → logprob: -17.375024795532227
    7. '```' → logprob: -18.500024795532227
    8. '  ' → logprob: -19.437524795532227
    9. '
' → logprob: -20.312524795532227
    10. '{' → logprob: -20.437524795532227

Token 139: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008215418201871216
    2. ' ,' → logprob: -7.125821590423584
    3. '0' → logprob: -11.000821113586426
    4. ' ' → logprob: -15.500821113586426
    5. ')' → logprob: -16.000822067260742
    6. '),' → logprob: -17.375822067260742
    7. '   ' → logprob: -17.875822067260742
    8. ',
' → logprob: -18.125822067260742
    9. '1' → logprob: -18.625822067260742
    10. '  ' → logprob: -18.750822067260742

Token 140: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.662937372922897e-05
    2. ' ' → logprob: -9.250096321105957
    3. '   ' → logprob: -14.625096321105957
    4. '
' → logprob: -17.500097274780273
    5. '```' → logprob: -17.625097274780273
    6. '  ' → logprob: -17.750097274780273
    7. ')' → logprob: -17.750097274780273
    8. '۰' → logprob: -19.062597274780273
    9. '1' → logprob: -19.125097274780273
    10. '    ' → logprob: -19.812597274780273

Token 141: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0325924449716695e-05
    2. ')
' → logprob: -11.75001049041748
    3. ' )' → logprob: -13.87501049041748
    4. '<|end|>' → logprob: -13.87501049041748
    5. ')

' → logprob: -15.50001049041748
    6. ')return' → logprob: -16.250009536743164
    7. '())' → logprob: -16.875009536743164
    8. ')}' → logprob: -17.125009536743164
    9. '),' → logprob: -17.375009536743164
    10. '}' → logprob: -17.625009536743164

Token 142: 'n' (ID: 77)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5449365377426147
    2. 'ans' → logprob: -1.4199365377426147
    3. 'res' → logprob: -2.7949366569519043
    4. 'out' → logprob: -3.2949366569519043
    5. 'def' → logprob: -3.9199366569519043
    6. 'for' → logprob: -5.169936656951904
    7. 'tot' → logprob: -5.294936656951904
    8. 'result' → logprob: -5.294936656951904
    9. 'answer' → logprob: -5.419936656951904
    10. 'div' → logprob: -5.669936656951904

Token 143: 'C' (ID: 34)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6133043766021729
    2. ' =' → logprob: -0.8633043766021729
    3. ',' → logprob: -4.113304138183594
    4. 'o' → logprob: -5.488304138183594
    5. 'um' → logprob: -5.738304138183594
    6. '_' → logprob: -6.238304138183594
    7. 'ow' → logprob: -6.363304138183594
    8. ',_' → logprob: -6.363304138183594
    9. 'ot' → logprob: -6.613304138183594
    10. 'ext' → logprob: -7.113304138183594

Token 144: '=' (ID: 28)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.14077980816364288
    2. 'r' → logprob: -2.515779733657837
    3. 'k' → logprob: -3.265779733657837
    4. '_r' → logprob: -5.640779972076416
    5. '_' → logprob: -5.890779972076416
    6. '(' → logprob: -6.390779972076416
    7. 'omb' → logprob: -7.515779972076416
    8. '3' → logprob: -7.765779972076416
    9. '(n' → logprob: -7.765779972076416
    10. 'R' → logprob: -7.890779972076416

Token 145: 'range' (ID: 20967)
  Prédit: 'range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.387268990278244
    2. 'tot' → logprob: -1.5122690200805664
    3. ' range' → logprob: -3.2622690200805664
    4. '_a' → logprob: -4.762269020080566
    5. '_' → logprob: -4.887269020080566
    6. ' tot' → logprob: -4.887269020080566
    7. '(range' → logprob: -5.387269020080566
    8. '0' → logprob: -5.512269020080566
    9. '(_' → logprob: -5.887269020080566
    10. 'lambda' → logprob: -5.887269020080566

Token 146: '_div' (ID: 36926)
  Prédit: '_div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_div' → logprob: -3.845798710244708e-05
    2. 'div' → logprob: -10.250038146972656
    3. '(' → logprob: -14.125038146972656
    4. '<div' → logprob: -14.500038146972656
    5. '_def' → logprob: -14.625038146972656
    6. 'Div' → logprob: -15.250038146972656
    7. 's' → logprob: -15.375038146972656
    8. '(_' → logprob: -15.500038146972656
    9. '_DIV' → logprob: -15.500038146972656
    10. '(div' → logprob: -15.750038146972656

Token 147: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -5.200166469876422e-06
    2. 'ds' → logprob: -12.750004768371582
    3. 'is' → logprob: -14.125004768371582
    4. 'div' → logprob: -15.000004768371582
    5. '(s' → logprob: -15.375004768371582
    6. '(' → logprob: -15.625004768371582
    7. ' s' → logprob: -15.875004768371582
    8. 'rs' → logprob: -16.0000057220459
    9. '   ' → logprob: -16.3750057220459
    10. '_s' → logprob: -16.7500057220459

Token 148: '(_' (ID: 4963)
  Prédit: '(_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(_' → logprob: -0.008802352473139763
    2. '(' → logprob: -5.00880241394043
    3. '_a' → logprob: -6.38380241394043
    4. '_t' → logprob: -8.38380241394043
    5. '(t' → logprob: -9.75880241394043
    6. '(a' → logprob: -10.25880241394043
    7. '_c' → logprob: -10.88380241394043
    8. '(n' → logprob: -11.88380241394043
    9. '_tot' → logprob: -12.25880241394043
    10. '_b' → logprob: -12.38380241394043

Token 149: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3620673716068268
    2. '_a' → logprob: -1.2370673418045044
    3. '_c' → logprob: -4.862067222595215
    4. 'c' → logprob: -5.487067222595215
    5. '_b' → logprob: -6.737067222595215
    6. 'b' → logprob: -7.737067222595215
    7. 'd' → logprob: -11.112067222595215
    8. '_d' → logprob: -11.987067222595215
    9. ' a' → logprob: -12.737067222595215
    10. ' _' → logprob: -12.987067222595215

Token 150: ',_' (ID: 46431)
  Prédit: ',_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',_' → logprob: -0.03832467272877693
    2. ',' → logprob: -3.5383245944976807
    3. ' ,' → logprob: -5.03832483291626
    4. ',n' → logprob: -7.66332483291626
    5. '+' → logprob: -8.038324356079102
    6. '_c' → logprob: -8.038324356079102
    7. '_b' → logprob: -8.288324356079102
    8. ' _' → logprob: -9.038324356079102
    9. ',b' → logprob: -9.288324356079102
    10. ' ' → logprob: -9.288324356079102

Token 151: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0036024407017976046
    2. '_b' → logprob: -5.753602504730225
    3. 'a' → logprob: -8.503602027893066
    4. 'd' → logprob: -9.003602027893066
    5. 'c' → logprob: -9.503602027893066
    6. '_d' → logprob: -11.503602027893066
    7. '_c' → logprob: -12.253602027893066
    8. '_a' → logprob: -12.753602027893066
    9. ' b' → logprob: -13.378602027893066
    10. '	b' → logprob: -13.753602027893066

Token 152: ',_' (ID: 46431)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05320650711655617
    2. ',_' → logprob: -3.303206443786621
    3. ' ,' → logprob: -4.428206443786621
    4. ',x' → logprob: -6.678206443786621
    5. 'xy' → logprob: -7.803206443786621
    6. '_xy' → logprob: -8.053206443786621
    7. '_,' → logprob: -8.553206443786621
    8. '   ' → logprob: -8.678206443786621
    9. ',n' → logprob: -9.178206443786621
    10. ' xy' → logprob: -9.303206443786621

Token 153: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0003787184541579336
    2. '_c' → logprob: -8.500378608703613
    3. 'd' → logprob: -8.875378608703613
    4. 'a' → logprob: -10.375378608703613
    5. '_d' → logprob: -13.875378608703613
    6. ' c' → logprob: -14.125378608703613
    7. '
' → logprob: -14.250378608703613
    8. 'b' → logprob: -14.375378608703613
    9. '_a' → logprob: -15.125378608703613
    10. '   ' → logprob: -15.500378608703613

Token 154: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002825561910867691
    2. ')+' → logprob: -6.502825736999512
    3. ')
' → logprob: -7.252825736999512
    4. ')-' → logprob: -7.627825736999512
    5. ')

' → logprob: -10.252825736999512
    6. ')*' → logprob: -10.377825736999512
    7. ' )' → logprob: -10.752825736999512
    8. '),' → logprob: -11.377825736999512
    9. ' ' → logprob: -12.502825736999512
    10. ')_' → logprob: -12.752825736999512

Token 155: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.47501203417778015
    2. 'm' → logprob: -0.9750120639801025
    3. 'p' → logprob: -7.975011825561523
    4. 'o' → logprob: -8.600011825561523
    5. 'd' → logprob: -8.725011825561523
    6. '_n' → logprob: -10.350011825561523
    7. '_' → logprob: -10.725011825561523
    8. 'r' → logprob: -10.850011825561523
    9. 'k' → logprob: -10.975011825561523
    10. '_m' → logprob: -11.100011825561523

Token 156: 'D' (ID: 35)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.007284192368388176
    2. 'D' → logprob: -5.507284164428711
    3. 'd' → logprob: -6.007284164428711
    4. '_d' → logprob: -7.632284164428711
    5. 'n' → logprob: -9.007284164428711
    6. '=' → logprob: -10.007284164428711
    7. '_div' → logprob: -10.132284164428711
    8. 'div' → logprob: -11.257284164428711
    9. ' =' → logprob: -12.007284164428711
    10. '_' → logprob: -12.132284164428711

Token 157: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -2.248469718324486e-05
    2. ' =' → logprob: -11.000022888183594
    3. '=r' → logprob: -12.375022888183594
    4. '=_' → logprob: -14.375022888183594
    5. '=
' → logprob: -14.875022888183594
    6. '=

' → logprob: -14.875022888183594
    7. 'range' → logprob: -17.000022888183594
    8. '_=' → logprob: -17.000022888183594
    9. '=n' → logprob: -17.125022888183594
    10. '=}' → logprob: -17.625022888183594

Token 158: 'range' (ID: 20967)
  Prédit: 'range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -3.7697225252486533e-06
    2. ' range' → logprob: -12.500003814697266
    3. '(range' → logprob: -17.875003814697266
    4. '	range' → logprob: -20.375003814697266
    5. '_range' → logprob: -21.000003814697266
    6. '=' → logprob: -22.500003814697266
    7. ' ' → logprob: -23.125003814697266
    8. '.range' → logprob: -23.250003814697266
    9. '   ' → logprob: -23.500003814697266
    10. 'ranges' → logprob: -24.250003814697266

Token 159: '_div' (ID: 36926)
  Prédit: '_div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_div' → logprob: -1.688212614681106e-05
    2. 'div' → logprob: -11.500017166137695
    3. 's' → logprob: -12.500017166137695
    4. 'is' → logprob: -13.750017166137695
    5. 'Div' → logprob: -14.250017166137695
    6. '_DIV' → logprob: -15.250017166137695
    7. 'ish' → logprob: -15.375017166137695
    8. '_def' → logprob: -16.375017166137695
    9. 'isl' → logprob: -16.500017166137695
    10. '_dis' → logprob: -16.625017166137695

Token 160: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00014251544780563563
    2. '_div' → logprob: -9.250142097473145
    3. 'div' → logprob: -10.250142097473145
    4. 'is' → logprob: -12.625142097473145
    5. 'ivs' → logprob: -13.000142097473145
    6. 'iv' → logprob: -13.750142097473145
    7. 'ds' → logprob: -13.875142097473145
    8. 'es' → logprob: -14.125142097473145
    9. 'Div' → logprob: -15.000142097473145
    10. 'fs' → logprob: -15.000142097473145

Token 161: '(_' (ID: 4963)
  Prédit: '(_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(_' → logprob: -6.869017852295656e-06
    2. '(' → logprob: -12.625006675720215
    3. '_a' → logprob: -12.750006675720215
    4. '_b' → logprob: -15.250006675720215
    5. '(
' → logprob: -16.00000762939453
    6. '_c' → logprob: -16.50000762939453
    7. '_' → logprob: -17.25000762939453
    8. ' (_' → logprob: -17.87500762939453
    9. '((_' → logprob: -18.25000762939453
    10. ' _' → logprob: -18.50000762939453

Token 162: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.003473913297057152
    2. '_a' → logprob: -6.25347375869751
    3. 'b' → logprob: -6.75347375869751
    4. 'd' → logprob: -8.503474235534668
    5. '_b' → logprob: -9.378474235534668
    6. '_d' → logprob: -9.378474235534668
    7. '_' → logprob: -12.378474235534668
    8. '_c' → logprob: -14.628474235534668
    9. 'c' → logprob: -14.753474235534668
    10. ' a' → logprob: -14.878474235534668

Token 163: ',_' (ID: 46431)
  Prédit: ',_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',_' → logprob: -0.0010861629853025079
    2. ',' → logprob: -6.876086235046387
    3. ' ,' → logprob: -10.126086235046387
    4. ',
' → logprob: -11.501086235046387
    5. '(_' → logprob: -14.251086235046387
    6. '_,' → logprob: -14.376086235046387
    7. ',#' → logprob: -14.626086235046387
    8. '_' → logprob: -15.501086235046387
    9. ',b' → logprob: -15.501086235046387
    10. ',
' → logprob: -15.751086235046387

Token 164: 'b' (ID: 65)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.159735307097435
    2. 'b' → logprob: -2.0347352027893066
    3. '_d' → logprob: -4.159735202789307
    4. '_b' → logprob: -6.659735202789307
    5. 'c' → logprob: -11.284735679626465
    6. '_c' → logprob: -12.284735679626465
    7. ' d' → logprob: -13.534735679626465
    8. '_' → logprob: -13.659735679626465
    9. 'a' → logprob: -13.659735679626465
    10. ' _' → logprob: -15.784735679626465

Token 165: ',_' (ID: 46431)
  Prédit: ',_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',_' → logprob: -0.021672453731298447
    2. ',' → logprob: -3.896672487258911
    3. '(_' → logprob: -7.146672248840332
    4. ' ,' → logprob: -8.146672248840332
    5. '_,' → logprob: -11.521672248840332
    6. '_c' → logprob: -11.521672248840332
    7. '_d' → logprob: -11.896672248840332
    8. ',d' → logprob: -12.146672248840332
    9. ',
' → logprob: -12.271672248840332
    10. '(' → logprob: -12.271672248840332

Token 166: 'd' (ID: 67)
  Prédit: '_d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.06197306513786316
    2. 'd' → logprob: -2.8119730949401855
    3. '_c' → logprob: -12.936972618103027
    4. ' _' → logprob: -14.061972618103027
    5. '_b' → logprob: -14.561972618103027
    6. '_' → logprob: -14.686972618103027
    7. ' d' → logprob: -15.061972618103027
    8. '{' → logprob: -15.561972618103027
    9. '_a' → logprob: -15.936972618103027
    10. '
' → logprob: -16.311973571777344

Token 167: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0019361276645213366
    2. ')
' → logprob: -6.251935958862305
    3. ')

' → logprob: -12.501935958862305
    4. ')n' → logprob: -14.001935958862305
    5. ')
' → logprob: -14.126935958862305
    6. '   ' → logprob: -14.376935958862305
    7. ' )' → logprob: -14.501935958862305
    8. '))' → logprob: -15.876935958862305
    9. '),' → logprob: -15.876935958862305
    10. 'def' → logprob: -16.126935958862305

Token 168: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.004758222494274378
    2. 'nd' → logprob: -5.754758358001709
    3. 'nt' → logprob: -7.754758358001709
    4. 'nn' → logprob: -8.12975788116455
    5. 'both' → logprob: -8.87975788116455
    6. 'nm' → logprob: -9.25475788116455
    7. 'nc' → logprob: -9.87975788116455
    8. 'ng' → logprob: -10.12975788116455
    9. 'm' → logprob: -10.12975788116455
    10. 'nab' → logprob: -10.25475788116455

Token 169: 'XY' (ID: 27825)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.12359174340963364
    2. '=' → logprob: -2.748591661453247
    3. 'E' → logprob: -4.373591899871826
    4. '_' → logprob: -4.373591899871826
    5. ' =' → logprob: -4.623591899871826
    6. 'CD' → logprob: -4.998591899871826
    7. '_C' → logprob: -5.373591899871826
    8. '_cd' → logprob: -6.873591899871826
    9. '_=' → logprob: -6.998591899871826
    10. '_CD' → logprob: -6.998591899871826

Token 170: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -2.2127087504486553e-05
    2. ' =' → logprob: -10.750021934509277
    3. '=r' → logprob: -15.375021934509277
    4. '=_' → logprob: -15.750021934509277
    5. '_=' → logprob: -16.375022888183594
    6. '=
' → logprob: -16.625022888183594
    7. '=n' → logprob: -17.125022888183594
    8. 'range' → logprob: -17.125022888183594
    9. '=}' → logprob: -18.125022888183594
    10. '=len' → logprob: -18.250022888183594

Token 171: 'range' (ID: 20967)
  Prédit: 'range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -2.2961512513575144e-05
    2. ' range' → logprob: -10.750022888183594
    3. '(range' → logprob: -13.500022888183594
    4. '	range' → logprob: -18.750022888183594
    5. '   ' → logprob: -19.750022888183594
    6. ' ' → logprob: -20.125022888183594
    7. '
' → logprob: -20.750022888183594
    8. '(' → logprob: -20.750022888183594
    9. '=' → logprob: -21.250022888183594
    10. '`' → logprob: -21.875022888183594

Token 172: '_div' (ID: 36926)
  Prédit: '_div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_div' → logprob: -0.009546407498419285
    2. 'div' → logprob: -4.884546279907227
    3. 's' → logprob: -6.384546279907227
    4. 'ish' → logprob: -8.884546279907227
    5. 'Div' → logprob: -10.009546279907227
    6. 'range' → logprob: -11.009546279907227
    7. 'iv' → logprob: -11.509546279907227
    8. 'ivs' → logprob: -11.509546279907227
    9. 'is' → logprob: -11.759546279907227
    10. '_DIV' → logprob: -13.134546279907227

Token 173: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -3.786196975852363e-05
    2. '_div' → logprob: -11.625038146972656
    3. 'is' → logprob: -11.750038146972656
    4. 'div' → logprob: -12.000038146972656
    5. 'ds' → logprob: -13.000038146972656
    6. 'range' → logprob: -13.250038146972656
    7. '(s' → logprob: -14.000038146972656
    8. 'xy' → logprob: -14.000038146972656
    9. '(x' → logprob: -14.250038146972656
    10. '_s' → logprob: -14.250038146972656

Token 174: '(_' (ID: 4963)
  Prédit: '(_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(_' → logprob: -4.723352049040841e-06
    2. '(' → logprob: -12.500004768371582
    3. '(
' → logprob: -14.125004768371582
    4. '_a' → logprob: -16.125003814697266
    5. '(__' → logprob: -17.750003814697266
    6. '((_' → logprob: -18.000003814697266
    7. ' (_' → logprob: -18.625003814697266
    8. '(_,' → logprob: -19.125003814697266
    9. '_' → logprob: -19.375003814697266
    10. '_range' → logprob: -19.625003814697266

Token 175: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0014043983537703753
    2. '_a' → logprob: -6.751404285430908
    3. 'c' → logprob: -8.626404762268066
    4. 'xy' → logprob: -10.376404762268066
    5. '_c' → logprob: -11.001404762268066
    6. '_xy' → logprob: -12.251404762268066
    7. 'b' → logprob: -14.501404762268066
    8. '```' → logprob: -15.001404762268066
    9. '_' → logprob: -15.501404762268066
    10. ' a' → logprob: -15.626404762268066

Token 176: ',_' (ID: 46431)
  Prédit: ',_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',_' → logprob: -0.001099968678317964
    2. ',' → logprob: -6.876100063323975
    3. '(_' → logprob: -10.376099586486816
    4. '_xy' → logprob: -10.751099586486816
    5. ',
' → logprob: -12.251099586486816
    6. ' ,' → logprob: -12.376099586486816
    7. '_,' → logprob: -13.751099586486816
    8. ' _' → logprob: -13.751099586486816
    9. 'xy' → logprob: -14.126099586486816
    10. '_b' → logprob: -14.376099586486816

Token 177: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.016069678589701653
    2. '_b' → logprob: -4.1410698890686035
    3. 'd' → logprob: -11.641069412231445
    4. '_xy' → logprob: -11.641069412231445
    5. 'c' → logprob: -12.016069412231445
    6. ' b' → logprob: -12.516069412231445
    7. 'xy' → logprob: -13.266069412231445
    8. 'a' → logprob: -13.391069412231445
    9. '_c' → logprob: -13.641069412231445
    10. '_d' → logprob: -13.766069412231445

Token 178: ',' (ID: 11)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.7405148148536682
    2. ',' → logprob: -0.8655148148536682
    3. '(' → logprob: -2.4905147552490234
    4. '(_' → logprob: -5.115514755249023
    5. ',_' → logprob: -5.490514755249023
    6. '_xy' → logprob: -5.490514755249023
    7. 'xy' → logprob: -6.740514755249023
    8. '(
' → logprob: -6.865514755249023
    9. '(_,' → logprob: -6.865514755249023
    10. '_,' → logprob: -6.990514755249023

Token 179: 'xy' (ID: 6077)
  Prédit: 'xy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xy' → logprob: -5.1689596148207784e-05
    2. ' xy' → logprob: -10.250051498413086
    3. '_xy' → logprob: -11.125051498413086
    4. '(x' → logprob: -14.125051498413086
    5. 'xyz' → logprob: -15.500051498413086
    6. '
' → logprob: -15.625051498413086
    7. '   ' → logprob: -15.625051498413086
    8. ' ' → logprob: -16.000051498413086
    9. ')' → logprob: -17.000051498413086
    10. '.xy' → logprob: -17.125051498413086

Token 180: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.550411151489243e-05
    2. ')
' → logprob: -9.875055313110352
    3. ' )' → logprob: -13.500055313110352
    4. '   ' → logprob: -13.875055313110352
    5. '))' → logprob: -15.000055313110352
    6. ')

' → logprob: -15.000055313110352
    7. ')n' → logprob: -15.750055313110352
    8. ')return' → logprob: -15.875055313110352
    9. '_)' → logprob: -16.12505531311035
    10. '),' → logprob: -16.37505531311035

Token 181: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0921107605099678
    2. 'ans' → logprob: -2.9671108722686768
    3. 'res' → logprob: -3.9671108722686768
    4. 'result' → logprob: -5.217110633850098
    5. 'out' → logprob: -5.342110633850098
    6. 'answer' → logprob: -5.967110633850098
    7. 'tot' → logprob: -5.967110633850098
    8. '_ans' → logprob: -8.342110633850098
    9. 'ret' → logprob: -8.467110633850098
    10. 'pr' → logprob: -8.592110633850098

Token 182: '(t' (ID: 2025)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.001868425402790308
    2. '(' → logprob: -6.50186824798584
    3. 'n' → logprob: -8.75186824798584
    4. '(t' → logprob: -9.00186824798584
    5. '(max' → logprob: -10.75186824798584
    6. '((' → logprob: -10.87686824798584
    7. ' (' → logprob: -10.87686824798584
    8. '(_' → logprob: -11.37686824798584
    9. '(f' → logprob: -12.25186824798584
    10. ' n' → logprob: -12.75186824798584

Token 183: 'ot' (ID: 346)
  Prédit: 'ot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ot' → logprob: -0.0010617482475936413
    2. 'o' → logprob: -6.876061916351318
    3. '_ot' → logprob: -11.50106143951416
    4. 'otal' → logprob: -12.37606143951416
    5. '_' → logprob: -12.50106143951416
    6. ' ot' → logprob: -12.75106143951416
    7. '_o' → logprob: -13.00106143951416
    8. 'от' → logprob: -13.68856143951416
    9. '``' → logprob: -15.18856143951416
    10. 'ots' → logprob: -15.25106143951416

Token 184: '-n' (ID: 5219)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.08200354874134064
    2. '-' → logprob: -2.582003593444824
    3. '-n' → logprob: -5.832003593444824
    4. '-(' → logprob: -8.832003593444824
    5. ' -(' → logprob: -10.957003593444824
    6. ')' → logprob: -12.582003593444824
    7. ' ' → logprob: -13.082003593444824
    8. ')-(' → logprob: -13.207003593444824
    9. ')-' → logprob: -13.582003593444824
    10. '-num' → logprob: -14.582003593444824

Token 185: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -3.523948907968588e-05
    2. '_C' → logprob: -10.875035285949707
    3. 'n' → logprob: -12.000035285949707
    4. 'D' → logprob: -12.500035285949707
    5. '_c' → logprob: -13.625035285949707
    6. '(n' → logprob: -13.750035285949707
    7. ')' → logprob: -14.250035285949707
    8. '(' → logprob: -14.750035285949707
    9. '(C' → logprob: -14.750035285949707
    10. 'c' → logprob: -15.000035285949707

Token 186: '-n' (ID: 5219)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.7022654414176941
    2. '-n' → logprob: -0.7022654414176941
    3. '-' → logprob: -4.70226526260376
    4. '-N' → logprob: -13.827265739440918
    5. ')' → logprob: -15.202265739440918
    6. ' ' → logprob: -15.577265739440918
    7. '-н' → logprob: -15.702265739440918
    8. '-
' → logprob: -16.3272647857666
    9. '-num' → logprob: -16.8272647857666
    10. '-m' → logprob: -16.9522647857666

Token 187: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.0041504609398543835
    2. 'n' → logprob: -5.504150390625
    3. 'd' → logprob: -10.004150390625
    4. '_D' → logprob: -10.629150390625
    5. '_d' → logprob: -13.254150390625
    6. ' n' → logprob: -15.629150390625
    7. ' D' → logprob: -16.504150390625
    8. '_' → logprob: -17.004150390625
    9. 'XY' → logprob: -17.129150390625
    10. 'print' → logprob: -17.129150390625

Token 188: '+n' (ID: 87683)
  Prédit: '+n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+n' → logprob: -0.0019546831026673317
    2. ' +' → logprob: -6.626954555511475
    3. '+' → logprob: -7.376954555511475
    4. '+
' → logprob: -13.876955032348633
    5. ')+' → logprob: -14.376955032348633
    6. '+x' → logprob: -15.751955032348633
    7. '-n' → logprob: -15.751955032348633
    8. '+t' → logprob: -15.876955032348633
    9. '+y' → logprob: -16.251955032348633
    10. '+#' → logprob: -16.251955032348633

Token 189: 'XY' (ID: 27825)
  Prédit: 'XY'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'XY' → logprob: -2.696889623621246e-06
    2. '_xy' → logprob: -12.87500286102295
    3. ' XY' → logprob: -16.750001907348633
    4. 'xy' → logprob: -17.625001907348633
    5. 'X' → logprob: -17.875001907348633
    6. 'PY' → logprob: -18.500001907348633
    7. '_' → logprob: -18.625001907348633
    8. ')' → logprob: -18.750001907348633
    9. 'XYZ' → logprob: -18.875001907348633
    10. 'C' → logprob: -19.375001907348633

Token 190: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.8889261304575484e-06
    2. ' )' → logprob: -13.125003814697266
    3. '))' → logprob: -14.000003814697266
    4. ')
' → logprob: -14.250003814697266
    5. '`)' → logprob: -16.000003814697266
    6. ')`' → logprob: -16.125003814697266
    7. ')#' → logprob: -17.875003814697266
    8. '')' → logprob: -18.000003814697266
    9. '#' → logprob: -18.250003814697266
    10. '_)' → logprob: -18.500003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 188
Tokens correctement prédits (1ère position, stricte): 82
Tokens correctement prédits (1ère position, avec adaptation): 83
Tokens correctement prédits (top 10): 138
Précision stricte (1ère position): 43.62%
Précision adaptée (1ère position): 44.15%
Précision (top 10): 73.40%
================================================================================
