================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:34:51
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def read_input():
    return input()

def to_int(s):
    return int(s)

def process_input():
    return to_int(read_input())

def should_continue(n):
    return n + 1 != 0

def get_initial_point():
    return 1 + 0j

def get_iteration_range(n):
    return range(n - 1)

def get_direction(p):
    return p * 1j

def normalize_direction(d):
    return d / abs(d)

def update_position(p, d):
    return p + d

def format_real(p):
    return "{:.2f}".format(p.real)

def format_imag(p):
    return "{:.2f}".format(p.imag)

def print_results(p):
    print(format_real(p))
    print(format_imag(p))

def iterate_point(n, p):
    for _ in get_iteration_range(n):
        d = get_direction(p)
        d = normalize_direction(d)
        p = update_position(p, d)
    return p

def main():
    while True:
        n = process_input()
        if not should_continue(n):
            break
        p = get_initial_point()
        p = iterate_point(n, p)
        print_results(p)

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' read' (ID: 1729)
  → Token d'amorce (pas de prédiction)

Token 2: '_input' (ID: 12507)
  → Token d'amorce (pas de prédiction)

Token 3: '():
' (ID: 8595)
  Prédit: '(:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(:' → logprob: -0.06235460564494133
    2. '():' → logprob: -2.812354564666748
    3. '(' → logprob: -9.062355041503906
    4. '(_:' → logprob: -9.562355041503906
    5. ':' → logprob: -9.937355041503906
    6. '(::' → logprob: -10.312355041503906
    7. '(':' → logprob: -10.437355041503906
    8. '(":' → logprob: -11.062355041503906
    9. '()' → logprob: -11.312355041503906
    10. '::' → logprob: -11.937355041503906

Token 4: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009542173356749117
    2. 'pass' → logprob: -7.1259541511535645
    3. '```' → logprob: -9.125954627990723
    4. '  ' → logprob: -11.375954627990723
    5. ' pass' → logprob: -11.750954627990723
    6. '   ' → logprob: -12.125954627990723
    7. 'return' → logprob: -12.375954627990723
    8. '    ' → logprob: -13.250954627990723
    9. 'Pass' → logprob: -13.375954627990723
    10. ' ' → logprob: -13.500954627990723

Token 5: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18167681992053986
    2. 'pass' → logprob: -1.8066768646240234
    3. '```' → logprob: -6.806676864624023
    4. 'return' (adapté à ' return') → logprob: -7.431676864624023
    5. ' pass' → logprob: -9.056676864624023
    6. '	pass' → logprob: -10.431676864624023
    7. 'Pass' → logprob: -10.931676864624023
    8. '  ' → logprob: -11.556676864624023
    9. '`' → logprob: -11.681676864624023
    10. '<' → logprob: -11.681676864624023

Token 6: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.46637162566185
    2. 'None' → logprob: -1.3413716554641724
    3. '""' → logprob: -2.841371536254883
    4. '```' → logprob: -4.216371536254883
    5. '   ' → logprob: -4.591371536254883
    6. '''' → logprob: -5.216371536254883
    7. '()' → logprob: -5.466371536254883
    8. '"' → logprob: -5.591371536254883
    9. '"""' → logprob: -5.841371536254883
    10. ' ' → logprob: -6.341371536254883

Token 7: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -2.176947600673884e-05
    2. '()`' → logprob: -11.000021934509277
    3. '(' → logprob: -13.125021934509277
    4. '().' → logprob: -13.625021934509277
    5. '("' → logprob: -15.375021934509277
    6. '())' → logprob: -15.500021934509277
    7. '("")' → logprob: -15.625021934509277
    8. '(_)' → logprob: -15.750021934509277
    9. '   ' → logprob: -16.00002098083496
    10. '()"' → logprob: -16.12502098083496

Token 8: 'def' (ID: 1314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.31648746132850647
    2. '   ' → logprob: -1.691487431526184
    3. '```' → logprob: -2.6914875507354736
    4. '(' → logprob: -4.8164873123168945
    5. '<|end|>' → logprob: -5.0664873123168945
    6. ':' → logprob: -6.6914873123168945
    7. 'def' → logprob: -7.4414873123168945
    8. '`' → logprob: -7.6914873123168945
    9. '  ' → logprob: -8.066487312316895
    10. ' ' → logprob: -8.316487312316895

Token 9: ' to' (ID: 316)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.07497525960206985
    2. ' process' → logprob: -2.6999752521514893
    3. 'parse' → logprob: -6.574975490570068
    4. 'calculate' → logprob: -7.324975490570068
    5. 'execute' → logprob: -7.699975490570068
    6. 'write' → logprob: -7.699975490570068
    7. 'get' → logprob: -7.824975490570068
    8. 'read' → logprob: -8.19997501373291
    9. 'my' → logprob: -8.44997501373291
    10. 'run' → logprob: -8.94997501373291

Token 10: '_int' (ID: 12285)
  Prédit: '_upper'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_upper' → logprob: -0.9827178716659546
    2. '_lower' → logprob: -1.3577178716659546
    3. '_' → logprob: -2.357717990875244
    4. '_text' → logprob: -2.607717990875244
    5. '_string' → logprob: -3.982717990875244
    6. '_x' → logprob: -3.982717990875244
    7. '_output' → logprob: -4.107717990875244
    8. '_input' → logprob: -4.357717990875244
    9. '_t' → logprob: -4.607717990875244
    10. '_json' → logprob: -4.982717990875244

Token 11: '(s' (ID: 1858)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00046391604701057076
    2. '(:' → logprob: -8.000463485717773
    3. '()' → logprob: -9.250463485717773
    4. ' ():' → logprob: -11.250463485717773
    5. '():
' → logprob: -11.625463485717773
    6. ':' → logprob: -12.375463485717773
    7. '(_:' → logprob: -12.875463485717773
    8. '(' → logprob: -13.750463485717773
    9. '():

' → logprob: -14.000463485717773
    10. '(":' → logprob: -14.375463485717773

Token 12: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.015272485092282295
    2. '):
' → logprob: -4.640272617340088
    3. ':' → logprob: -5.265272617340088
    4. '   ' → logprob: -8.26527214050293
    5. '):

' → logprob: -10.26527214050293
    6. ')' → logprob: -11.14027214050293
    7. ''):' → logprob: -12.01527214050293
    8. '():' → logprob: -12.14027214050293
    9. '):
' → logprob: -12.51527214050293
    10. '"):' → logprob: -12.89027214050293

Token 13: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4378848391061183e-05
    2. 'return' → logprob: -11.750014305114746
    3. '  ' → logprob: -12.250014305114746
    4. ' ' → logprob: -14.375014305114746
    5. '    ' → logprob: -14.625014305114746
    6. ' return' → logprob: -14.750014305114746
    7. '	return' → logprob: -16.250015258789062
    8. '       ' → logprob: -17.375015258789062
    9. '   ' → logprob: -17.500015258789062
    10. '```' → logprob: -17.625015258789062

Token 14: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5759626626968384
    2. 'return' (adapté à ' return') → logprob: -0.8259626626968384
    3. ' return' → logprob: -10.825963020324707
    4. '	return' → logprob: -12.950963020324707
    5. 'try' → logprob: -15.075963020324707
    6. '  ' → logprob: -15.200963020324707
    7. '{return' → logprob: -16.45096206665039
    8. ':return' → logprob: -16.57596206665039
    9. 'returns' → logprob: -16.95096206665039
    10. '```' → logprob: -17.32596206665039

Token 15: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.47409066557884216
    2. ' int' → logprob: -0.9740906953811646
    3. '   ' → logprob: -11.974090576171875
    4. '(int' → logprob: -13.099090576171875
    5. '	int' → logprob: -13.224090576171875
    6. '<int' → logprob: -13.599090576171875
    7. ' ' → logprob: -14.099090576171875
    8. '=int' → logprob: -15.099090576171875
    9. '.int' → logprob: -15.099090576171875
    10. '  ' → logprob: -15.599090576171875

Token 16: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.00022094044834375381
    2. '(' → logprob: -8.625221252441406
    3. '()(' → logprob: -10.750221252441406
    4. '(S' → logprob: -12.625221252441406
    5. '   ' → logprob: -12.750221252441406
    6. '()' → logprob: -13.250221252441406
    7. '(n' → logprob: -13.625221252441406
    8. '(a' → logprob: -14.125221252441406
    9. '(e' → logprob: -14.125221252441406
    10. '(x' → logprob: -14.250221252441406

Token 17: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011534435179783031
    2. '.strip' → logprob: -9.125115394592285
    3. ')
' → logprob: -13.000115394592285
    4. ')

' → logprob: -13.500115394592285
    5. ')`' → logprob: -14.000115394592285
    6. '))' → logprob: -14.250115394592285
    7. ').' → logprob: -14.875115394592285
    8. '.rstrip' → logprob: -15.125115394592285
    9. '   ' → logprob: -15.875115394592285
    10. '")' → logprob: -16.25011444091797

Token 18: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.017101909965276718
    2. '<|end|>' → logprob: -4.392101764678955
    3. '   ' → logprob: -5.642101764678955
    4. '```' → logprob: -8.142102241516113
    5. '<|end|>' → logprob: -8.392102241516113
    6. 's' → logprob: -9.267102241516113
    7. ':def' → logprob: -9.392102241516113
    8. ' def' → logprob: -9.517102241516113
    9. '#' → logprob: -9.892102241516113
    10. '  ' → logprob: -10.642102241516113

Token 19: ' process' (ID: 2273)
  Prédit: ' process'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' process' → logprob: -0.3834994435310364
    2. ' to' → logprob: -1.8834993839263916
    3. ' add' → logprob: -2.8834993839263916
    4. ' convert' → logprob: -3.6334993839263916
    5. ' multiply' → logprob: -3.8834993839263916
    6. 'process' → logprob: -4.008499622344971
    7. ' from' → logprob: -4.383499622344971
    8. 'to' → logprob: -4.633499622344971
    9. ' calculate' → logprob: -5.258499622344971
    10. ' parse' → logprob: -5.883499622344971

Token 20: '_input' (ID: 12507)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.6403547525405884
    2. '_input' → logprob: -0.7653547525405884
    3. '_data' → logprob: -6.140354633331299
    4. '():
' → logprob: -6.265354633331299
    5. '_output' → logprob: -6.515354633331299
    6. '_' → logprob: -6.765354633331299
    7. '(_' → logprob: -8.390355110168457
    8. '_inputs' → logprob: -8.515355110168457
    9. '()' → logprob: -9.140355110168457
    10. 'Input' → logprob: -9.390355110168457

Token 21: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00018661346985027194
    2. '(:' → logprob: -9.625186920166016
    3. '():
' → logprob: -10.125186920166016
    4. '()' → logprob: -10.375186920166016
    5. ' ():' → logprob: -10.750186920166016
    6. '(_:' → logprob: -11.250186920166016
    7. '():

' → logprob: -12.500186920166016
    8. '_' → logprob: -12.625186920166016
    9. '(' → logprob: -13.250186920166016
    10. ':' → logprob: -13.375186920166016

Token 22: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -6.551721889991313e-05
    2. 's' → logprob: -9.750065803527832
    3. '  ' → logprob: -12.625065803527832
    4. 'pass' → logprob: -12.625065803527832
    5. ' ' → logprob: -15.500065803527832
    6. '    ' → logprob: -15.875065803527832
    7. 'input' → logprob: -15.875065803527832
    8. '```' → logprob: -17.125064849853516
    9. 'return' → logprob: -17.375064849853516
    10. 'data' → logprob: -18.875064849853516

Token 23: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3904552161693573
    2. 's' → logprob: -1.1404552459716797
    3. 'input' → logprob: -6.14045524597168
    4. 'pass' → logprob: -6.89045524597168
    5. 'data' → logprob: -8.64045524597168
    6. 'value' → logprob: -9.51545524597168
    7. 'return' (adapté à ' return') → logprob: -10.39045524597168
    8. 'user' → logprob: -10.51545524597168
    9. 'result' → logprob: -10.64045524597168
    10. '  ' → logprob: -11.14045524597168

Token 24: ' to' (ID: 316)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -1.0647412538528442
    2. ' read' → logprob: -1.3147412538528442
    3. '   ' → logprob: -1.5647412538528442
    4. 'to' → logprob: -2.3147411346435547
    5. ' to' → logprob: -2.8147411346435547
    6. 'None' → logprob: -5.064741134643555
    7. ' ' → logprob: -5.189741134643555
    8. ' None' → logprob: -5.689741134643555
    9. '       ' → logprob: -7.189741134643555
    10. '    ' → logprob: -7.189741134643555

Token 25: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.010186777450144291
    2. 'int' → logprob: -6.135186672210693
    3. '   ' → logprob: -6.510186672210693
    4. '_' → logprob: -7.010186672210693
    5. '_n' → logprob: -7.885186672210693
    6. '_in' → logprob: -7.885186672210693
    7. '_s' → logprob: -7.885186672210693
    8. '"_' → logprob: -7.885186672210693
    9. '_input' → logprob: -8.010187149047852
    10. '_t' → logprob: -8.510187149047852

Token 26: '(read' (ID: 45738)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00615345872938633
    2. '(input' → logprob: -5.506153583526611
    3. '(' → logprob: -6.756153583526611
    4. '(s' → logprob: -7.381153583526611
    5. '()(' → logprob: -8.756153106689453
    6. '(_)' → logprob: -10.006153106689453
    7. '()`' → logprob: -10.131153106689453
    8. '("")' → logprob: -12.131153106689453
    9. '().' → logprob: -12.256153106689453
    10. '   ' → logprob: -12.506153106689453

Token 27: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -7.32654589228332e-05
    2. '_' → logprob: -11.125073432922363
    3. '_in' → logprob: -11.375073432922363
    4. '"_' → logprob: -11.750073432922363
    5. '_output' → logprob: -12.250073432922363
    6. '_INPUT' → logprob: -12.250073432922363
    7. ')_' → logprob: -12.375073432922363
    8. '('_' → logprob: -12.750073432922363
    9. '("_' → logprob: -12.875073432922363
    10. '}_' → logprob: -13.000073432922363

Token 28: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.38689306378364563
    2. '()' → logprob: -1.1368930339813232
    3. '())
' → logprob: -12.511893272399902
    4. '().' → logprob: -12.636893272399902
    5. '(' → logprob: -13.011893272399902
    6. '()`' → logprob: -13.136893272399902
    7. '()).' → logprob: -13.386893272399902
    8. ')' → logprob: -14.011893272399902
    9. '());' → logprob: -14.011893272399902
    10. '()))' → logprob: -14.011893272399902

Token 29: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 30: ' should' (ID: 1757)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.002035584067925811
    2. ' process' → logprob: -7.002035617828369
    3. 'main' → logprob: -7.377035617828369
    4. 'get' → logprob: -8.877035140991211
    5. 'execute' → logprob: -9.252035140991211
    6. 'calculate' → logprob: -9.377035140991211
    7. 'handle' → logprob: -10.627035140991211
    8. 'run' → logprob: -10.877035140991211
    9. 'compute' → logprob: -10.877035140991211
    10. 'read' → logprob: -11.502035140991211

Token 31: '_continue' (ID: 188911)
  Prédit: '_process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_process' → logprob: -0.5333980321884155
    2. '_continue' → logprob: -1.4083980321884155
    3. '_return' → logprob: -3.408398151397705
    4. '_be' → logprob: -3.533398151397705
    5. '():' → logprob: -3.908398151397705
    6. '_handle' → logprob: -4.283398151397705
    7. '_end' → logprob: -4.783398151397705
    8. '_check' → logprob: -5.658398151397705
    9. '_' → logprob: -5.908398151397705
    10. '_stop' → logprob: -6.033398151397705

Token 32: '(n' (ID: 2406)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -2.7848862373502925e-05
    2. '():
' → logprob: -10.875027656555176
    3. '()' → logprob: -12.250027656555176
    4. ' ():' → logprob: -13.000027656555176
    5. '():

' → logprob: -13.875027656555176
    6. '(:' → logprob: -14.625027656555176
    7. ':' → logprob: -15.500027656555176
    8. '():
' → logprob: -16.500028610229492
    9. '(_:' → logprob: -17.250028610229492
    10. '(' → logprob: -18.000028610229492

Token 33: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12724442780017853
    2. '):
' → logprob: -2.127244472503662
    3. '):

' → logprob: -8.377243995666504
    4. ':' → logprob: -9.627243995666504
    5. '):
' → logprob: -11.377243995666504
    6. ')' → logprob: -12.502243995666504
    7. '   ' → logprob: -13.252243995666504
    8. ')):' → logprob: -14.127243995666504
    9. ')):
' → logprob: -15.002243995666504
    10. '()):
' → logprob: -15.127243995666504

Token 34: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -5.319370302458992e-06
    2. 'return' → logprob: -12.250005722045898
    3. '  ' → logprob: -14.750005722045898
    4. ' return' → logprob: -16.7500057220459
    5. '	return' → logprob: -17.2500057220459
    6. ' ' → logprob: -18.0000057220459
    7. '    ' → logprob: -18.1250057220459
    8. '       ' → logprob: -19.3750057220459
    9. '   ' → logprob: -19.3750057220459
    10. '   ' → logprob: -19.5000057220459

Token 35: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -1.3856492842023727e-06
    2. '   ' → logprob: -14.000000953674316
    3. ' return' → logprob: -14.625000953674316
    4. 'if' → logprob: -17.125001907348633
    5. '	return' → logprob: -18.375001907348633
    6. 'n' → logprob: -19.750001907348633
    7. 'returns' → logprob: -19.750001907348633
    8. ':return' → logprob: -19.750001907348633
    9. 'pass' → logprob: -19.875001907348633
    10. 'ret' → logprob: -20.000001907348633

Token 36: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00033593899570405483
    2. ' n' → logprob: -8.000335693359375
    3. '   ' → logprob: -14.875335693359375
    4. 'True' → logprob: -16.750335693359375
    5. 'bool' → logprob: -16.750335693359375
    6. '	n' → logprob: -16.875335693359375
    7. '(n' → logprob: -17.000335693359375
    8. ' ' → logprob: -17.875335693359375
    9. '  ' → logprob: -17.875335693359375
    10. '_n' → logprob: -18.625335693359375

Token 37: ' +' (ID: 659)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.007146298885345459
    2. ' >' → logprob: -5.25714635848999
    3. '>=' → logprob: -6.88214635848999
    4. '<' → logprob: -7.88214635848999
    5. ' >=' → logprob: -8.632145881652832
    6. '!=' → logprob: -8.757145881652832
    7. '<=' → logprob: -9.632145881652832
    8. '==' → logprob: -9.757145881652832
    9. ' !=' → logprob: -10.257145881652832
    10. ' <' → logprob: -12.382145881652832

Token 38: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.375000953674316
    3. '2' → logprob: -15.500000953674316
    4. '5' → logprob: -17.25
    5. '3' → logprob: -18.625
    6. 'n' → logprob: -19.875
    7. '10' → logprob: -20.0
    8. '１' → logprob: -20.625
    9. '=' → logprob: -21.125
    10. '4' → logprob: -21.125

Token 39: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. '2' → logprob: -14.250000953674316
    3. '5' → logprob: -15.750000953674316
    4. '3' → logprob: -17.625
    5. '10' → logprob: -18.125
    6. ' ' → logprob: -19.5
    7. '4' → logprob: -20.125
    8. '0' → logprob: -20.125
    9. 'should' → logprob: -21.5
    10. '7' → logprob: -21.75

Token 40: ' !=' (ID: 1666)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.3112257421016693
    2. 'def' → logprob: -1.6862257719039917
    3. 'if' → logprob: -3.061225652694702
    4. 'return' → logprob: -4.811225891113281
    5. '==' → logprob: -5.061225891113281
    6. '```' → logprob: -5.561225891113281
    7. '<' → logprob: -5.686225891113281
    8. '>=' → logprob: -5.936225891113281
    9. 'n' → logprob: -6.186225891113281
    10. ':' → logprob: -6.186225891113281

Token 41: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0034279352985322475
    2. 'n' → logprob: -6.878427982330322
    3. '10' → logprob: -7.128427982330322
    4. '2' → logprob: -7.128427982330322
    5. '3' → logprob: -8.128427505493164
    6. '1' → logprob: -8.378427505493164
    7. '5' → logprob: -8.753427505493164
    8. '42' → logprob: -10.253427505493164
    9. 'stop' → logprob: -10.753427505493164
    10. '100' → logprob: -11.878427505493164

Token 42: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.028007367625832558
    2. '10' → logprob: -3.6530072689056396
    3. '5' → logprob: -7.028007507324219
    4. 'n' → logprob: -8.528007507324219
    5. '3' → logprob: -8.778007507324219
    6. '42' → logprob: -8.903007507324219
    7. '1' → logprob: -9.153007507324219
    8. '2' → logprob: -9.653007507324219
    9. '100' → logprob: -9.903007507324219
    10. 'stop' → logprob: -9.903007507324219

Token 43: '

' (ID: 279)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0576459169387817
    2. 'def' → logprob: -1.1826459169387817
    3. '   ' → logprob: -1.3076459169387817
    4. ':def' → logprob: -3.432645797729492
    5. ':return' → logprob: -4.807645797729492
    6. '```' → logprob: -4.807645797729492
    7. '#' → logprob: -5.057645797729492
    8. 'n' → logprob: -5.307645797729492
    9. '<|end|>' → logprob: -5.307645797729492
    10. 'return' → logprob: -6.182645797729492

Token 44: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.12074397504329681
    2. '   ' → logprob: -2.245743989944458
    3. '#' → logprob: -6.245743751525879
    4. ':' → logprob: -6.870743751525879
    5. '```' → logprob: -6.870743751525879
    6. 'print' → logprob: -7.245743751525879
    7. 'n' → logprob: -7.245743751525879
    8. ':def' → logprob: -7.370743751525879
    9. 'if' → logprob: -7.620743751525879
    10. 'return' → logprob: -8.245743751525879

Token 45: ' get' (ID: 717)
  Prédit: 'should'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'should' → logprob: -0.028438018634915352
    2. 'process' → logprob: -4.153438091278076
    3. 'main' → logprob: -5.403438091278076
    4. 'continue' → logprob: -5.653438091278076
    5. ' should' → logprob: -6.653438091278076
    6. 'execute' → logprob: -7.153438091278076
    7. 'check' → logprob: -7.403438091278076
    8. 'start' → logprob: -8.403437614440918
    9. 'run' → logprob: -8.528437614440918
    10. 'terminate' → logprob: -8.903437614440918

Token 46: '_initial' (ID: 45740)
  Prédit: '_input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.04387076199054718
    2. '_output' → logprob: -3.418870687484741
    3. '_' → logprob: -5.54387092590332
    4. '_data' → logprob: -6.04387092590332
    5. '_value' → logprob: -6.91887092590332
    6. '_t' → logprob: -7.29387092590332
    7. '_next' → logprob: -7.79387092590332
    8. '_inputs' → logprob: -8.29387092590332
    9. '_result' → logprob: -8.54387092590332
    10. '_line' → logprob: -9.04387092590332

Token 47: '_point' (ID: 15466)
  Prédit: '_input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_input' → logprob: -1.465152382850647
    2. '_' → logprob: -1.590152382850647
    3. '_state' → logprob: -1.715152382850647
    4. '()' → logprob: -1.965152382850647
    5. '():' → logprob: -1.965152382850647
    6. '_value' → logprob: -3.7151522636413574
    7. '_def' → logprob: -4.465152263641357
    8. '_initial' → logprob: -4.465152263641357
    9. '_values' → logprob: -4.965152263641357
    10. '_parameters' → logprob: -4.965152263641357

Token 48: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0020840009674429893
    2. '(:' → logprob: -6.252083778381348
    3. '()' → logprob: -9.627083778381348
    4. ' ():' → logprob: -10.377083778381348
    5. '():
' → logprob: -10.502083778381348
    6. '(_:' → logprob: -11.627083778381348
    7. '(":' → logprob: -12.502083778381348
    8. '(' → logprob: -12.502083778381348
    9. '():

' → logprob: -12.502083778381348
    10. '(':' → logprob: -12.627083778381348

Token 49: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002537104592192918
    2. 'return' → logprob: -8.375253677368164
    3. 'pass' → logprob: -11.000253677368164
    4. '  ' → logprob: -12.500253677368164
    5. '	return' → logprob: -14.125253677368164
    6. '```' → logprob: -14.375253677368164
    7. '    ' → logprob: -14.750253677368164
    8. ' return' → logprob: -15.000253677368164
    9. ' ' → logprob: -15.500253677368164
    10. '	pass' → logprob: -15.625253677368164

Token 50: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.05023075267672539
    2. 'pass' → logprob: -3.0502307415008545
    3. '   ' → logprob: -6.425230979919434
    4. '#' → logprob: -10.925230979919434
    5. 'print' → logprob: -13.550230979919434
    6. ' return' → logprob: -13.800230979919434
    7. 'x' → logprob: -14.425230979919434
    8. '	return' → logprob: -15.300230979919434
    9. '	pass' → logprob: -15.425230979919434
    10. ' pass' → logprob: -15.550230979919434

Token 51: ' ' (ID: 220)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1273493766784668
    2. '0' → logprob: -2.127349376678467
    3. '()' → logprob: -8.502349853515625
    4. 'None' → logprob: -8.752349853515625
    5. ' (' → logprob: -11.002349853515625
    6. '(None' → logprob: -11.627349853515625
    7. '1' → logprob: -11.752349853515625
    8. '(int' → logprob: -12.002349853515625
    9. '(float' → logprob: -12.502349853515625
    10. ' ' → logprob: -12.627349853515625

Token 52: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.38691189885139465
    2. '0' → logprob: -1.1369118690490723
    3. 'None' → logprob: -10.88691234588623
    4. '1' → logprob: -11.51191234588623
    5. '()' → logprob: -12.51191234588623
    6. '(int' → logprob: -13.51191234588623
    7. '{"' → logprob: -13.63691234588623
    8. '(float' → logprob: -13.76191234588623
    9. '(None' → logprob: -13.88691234588623
    10. '[' → logprob: -14.01191234588623

Token 53: ' +' (ID: 659)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1445775032043457
    2. '<|end|>' → logprob: -2.2695775032043457
    3. '   ' → logprob: -4.019577503204346
    4. '<|end|>' → logprob: -5.019577503204346
    5. '()' → logprob: -6.144577503204346
    6. '```' → logprob: -6.144577503204346
    7. ':def' → logprob: -7.644577503204346
    8. '  ' → logprob: -7.894577503204346
    9. '#' → logprob: -8.019577026367188
    10. ' def' → logprob: -8.269577026367188

Token 54: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.27253732085227966
    2. 'n' → logprob: -2.1475372314453125
    3. '2' → logprob: -2.7725372314453125
    4. '0' → logprob: -3.0225372314453125
    5. ' ' → logprob: -4.7725372314453125
    6. 'random' → logprob: -7.2725372314453125
    7. ' n' → logprob: -7.3975372314453125
    8. '3' → logprob: -8.022537231445312
    9. '5' → logprob: -9.022537231445312
    10. 'int' → logprob: -9.397537231445312

Token 55: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.41086605191230774
    2. '2' → logprob: -1.9108660221099854
    3. 'n' → logprob: -2.1608660221099854
    4. '0' → logprob: -2.6608660221099854
    5. 'random' → logprob: -6.1608662605285645
    6. '3' → logprob: -6.9108662605285645
    7. 'len' → logprob: -8.285865783691406
    8. '5' → logprob: -8.535865783691406
    9. 'rand' → logprob: -8.910865783691406
    10. 'get' → logprob: -10.160865783691406

Token 56: 'j' (ID: 73)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 57: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.178822323679924
    2. '<|end|>' → logprob: -1.9288222789764404
    3. '   ' → logprob: -4.5538225173950195
    4. '#' → logprob: -5.6788225173950195
    5. '<|end|>' → logprob: -5.8038225173950195
    6. '```' → logprob: -7.0538225173950195
    7. '  ' → logprob: -8.67882251739502
    8. ' ' → logprob: -9.67882251739502
    9. ' def' → logprob: -9.80382251739502
    10. ':def' → logprob: -10.05382251739502

Token 58: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.007187376730144024
    2. '<|end|>' → logprob: -5.132187366485596
    3. '   ' → logprob: -7.382187366485596
    4. '#' → logprob: -8.007187843322754
    5. '<|end|>' → logprob: -9.132187843322754
    6. '```' → logprob: -9.257187843322754
    7. ' def' → logprob: -10.257187843322754
    8. 'print' → logprob: -11.132187843322754
    9. 'return' → logprob: -12.007187843322754
    10. ':def' → logprob: -12.007187843322754

Token 59: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.06687792390584946
    2. ' get' → logprob: -2.816877841949463
    3. 'set' → logprob: -5.691877841949463
    4. 'calculate' → logprob: -8.066878318786621
    5. ' set' → logprob: -8.191878318786621
    6. 'process' → logprob: -8.316878318786621
    7. 'generate' → logprob: -9.191878318786621
    8. ' process' → logprob: -9.691878318786621
    9. 'next' → logprob: -9.691878318786621
    10. ' calculate' → logprob: -9.816878318786621

Token 60: '_iteration' (ID: 161656)
  Prédit: '_initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_initial' → logprob: -0.0015360506949946284
    2. '_t' → logprob: -7.251535892486572
    3. '_' → logprob: -8.25153636932373
    4. '_point' → logprob: -9.37653636932373
    5. '_next' → logprob: -9.87653636932373
    6. 't' → logprob: -10.00153636932373
    7. '_input' → logprob: -10.12653636932373
    8. '_current' → logprob: -10.37653636932373
    9. '_output' → logprob: -10.37653636932373
    10. '_init' → logprob: -10.75153636932373

Token 61: '_range' (ID: 22022)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.13663250207901
    2. '_' → logprob: -3.0116324424743652
    3. '():' → logprob: -3.1366324424743652
    4. '_point' → logprob: -4.386632442474365
    5. '():
' → logprob: -5.761632442474365
    6. '_count' → logprob: -6.011632442474365
    7. 's' → logprob: -6.136632442474365
    8. 'tion' → logprob: -6.511632442474365
    9. '_function' → logprob: -6.636632442474365
    10. '(' → logprob: -6.886632442474365

Token 62: '(n' (ID: 2406)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0002900565741583705
    2. '(:' → logprob: -9.000289916992188
    3. '()' → logprob: -9.250289916992188
    4. ' ():' → logprob: -10.625289916992188
    5. '():
' → logprob: -11.125289916992188
    6. '(_:' → logprob: -11.250289916992188
    7. '(' → logprob: -11.625289916992188
    8. '(":' → logprob: -13.250289916992188
    9. '():

' → logprob: -13.500289916992188
    10. '().' → logprob: -13.875289916992188

Token 63: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2022428810596466
    2. '):
' → logprob: -1.7022428512573242
    3. '):

' → logprob: -7.577242851257324
    4. ':' → logprob: -8.827242851257324
    5. '   ' → logprob: -9.577242851257324
    6. ',' → logprob: -9.827242851257324
    7. '):
' → logprob: -10.577242851257324
    8. ')' → logprob: -11.327242851257324
    9. ''):' → logprob: -13.202242851257324
    10. '-' → logprob: -13.327242851257324

Token 64: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -2.618001053633634e-05
    2. 'return' → logprob: -10.625025749206543
    3. '  ' → logprob: -13.750025749206543
    4. '	return' → logprob: -14.750025749206543
    5. ' return' → logprob: -16.25002670288086
    6. '    ' → logprob: -16.50002670288086
    7. '       ' → logprob: -16.62502670288086
    8. ' ' → logprob: -16.87502670288086
    9. '   ' → logprob: -18.00002670288086
    10. 'def' → logprob: -18.25002670288086

Token 65: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.07892405241727829
    2. '   ' → logprob: -2.5789239406585693
    3. 'range' → logprob: -10.578924179077148
    4. 'for' → logprob: -11.828924179077148
    5. ' return' → logprob: -13.828924179077148
    6. '	return' → logprob: -15.203924179077148
    7. '  ' → logprob: -15.953924179077148
    8. 'returns' → logprob: -17.20392417907715
    9. '       ' → logprob: -17.70392417907715
    10. '返回' → logprob: -17.70392417907715

Token 66: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -3.2020991056924686e-05
    2. ' range' → logprob: -10.500032424926758
    3. '(range' → logprob: -12.625032424926758
    4. '	range' → logprob: -14.000032424926758
    5. '   ' → logprob: -16.375032424926758
    6. 'list' → logprob: -16.500032424926758
    7. '.range' → logprob: -17.375032424926758
    8. ' ' → logprob: -17.750032424926758
    9. '_range' → logprob: -17.750032424926758
    10. 'rang' → logprob: -19.000032424926758

Token 67: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.52419513463974
    2. '(n' → logprob: -0.89919513463974
    3. '(len' → logprob: -7.524195194244385
    4. '()' → logprob: -9.274194717407227
    5. '(num' → logprob: -9.649194717407227
    6. '(...)' → logprob: -9.649194717407227
    7. '(int' → logprob: -9.774194717407227
    8. '(range' → logprob: -9.899194717407227
    9. '(`' → logprob: -10.149194717407227
    10. '(np' → logprob: -10.649194717407227

Token 68: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01417996734380722
    2. '):' → logprob: -4.2641801834106445
    3. '))' → logprob: -11.514180183410645
    4. ')`' → logprob: -12.639180183410645
    5. '):
' → logprob: -13.639180183410645
    6. ')
' → logprob: -15.139180183410645
    7. ')**' → logprob: -15.264180183410645
    8. ' +' → logprob: -15.389180183410645
    9. ')):' → logprob: -15.514180183410645
    10. '```' → logprob: -15.639180183410645

Token 69: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.961759259458631e-06
    2. '2' → logprob: -12.375004768371582
    3. '0' → logprob: -14.375004768371582
    4. ' ' → logprob: -15.875004768371582
    5. '3' → logprob: -17.7500057220459
    6. '5' → logprob: -20.6250057220459
    7. '10' → logprob: -20.6250057220459
    8. '4' → logprob: -21.0000057220459
    9. '   ' → logprob: -21.5000057220459
    10. '```' → logprob: -21.5000057220459

Token 70: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8550976164988242e-05
    2. '2' → logprob: -11.250018119812012
    3. '0' → logprob: -12.125018119812012
    4. '3' → logprob: -17.000019073486328
    5. ' ' → logprob: -19.750019073486328
    6. '5' → logprob: -20.375019073486328
    7. '4' → logprob: -20.500019073486328
    8. '10' → logprob: -20.750019073486328
    9. '-' → logprob: -21.375019073486328
    10. '6' → logprob: -22.500019073486328

Token 71: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10453037172555923
    2. '):' → logprob: -2.3545303344726562
    3. ',' → logprob: -5.479530334472656
    4. ')`' → logprob: -9.354530334472656
    5. '))' → logprob: -10.854530334472656
    6. '),' → logprob: -11.479530334472656
    7. '):
' → logprob: -11.854530334472656
    8. ',)' → logprob: -12.604530334472656
    9. ')]' → logprob: -12.729530334472656
    10. ')**' → logprob: -12.979530334472656

Token 72: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004543692339211702
    2. '   ' → logprob: -5.504543781280518
    3. '```' → logprob: -8.50454330444336
    4. '<|end|>' → logprob: -10.00454330444336
    5. ':def' → logprob: -10.12954330444336
    6. '    
' → logprob: -10.25454330444336
    7. 'n' → logprob: -10.25454330444336
    8. ' def' → logprob: -10.37954330444336
    9. '<|end|>' → logprob: -11.12954330444336
    10. '#' → logprob: -11.25454330444336

Token 73: ' get' (ID: 717)
  Prédit: ' get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.7860181927680969
    2. 'get' → logprob: -1.2860181331634521
    3. ' process' → logprob: -1.6610181331634521
    4. 'process' → logprob: -2.911018133163452
    5. ' iterate' → logprob: -5.536018371582031
    6. ' calculate' → logprob: -5.661018371582031
    7. 'calculate' → logprob: -6.036018371582031
    8. ' compute' → logprob: -6.161018371582031
    9. ' ' → logprob: -6.536018371582031
    10. ' generate' → logprob: -6.911018371582031

Token 74: '_direction' (ID: 64332)
  Prédit: '_iteration'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_iteration' → logprob: -0.0801994726061821
    2. '_initial' → logprob: -2.9551994800567627
    3. '_' → logprob: -4.705199241638184
    4. '_iterations' → logprob: -5.455199241638184
    5. '_output' → logprob: -6.455199241638184
    6. '_iter' → logprob: -6.705199241638184
    7. '_next' → logprob: -7.205199241638184
    8. '_final' → logprob: -7.455199241638184
    9. '_t' → logprob: -7.455199241638184
    10. '_function' → logprob: -7.580199241638184

Token 75: '(p' (ID: 2407)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0007327937055379152
    2. '()' → logprob: -7.375732898712158
    3. '():
' → logprob: -10.000732421875
    4. '_' → logprob: -11.000732421875
    5. ' ():' → logprob: -11.625732421875
    6. '(' → logprob: -11.750732421875
    7. '(_:' → logprob: -12.000732421875
    8. '().' → logprob: -12.500732421875
    9. '(_' → logprob: -12.625732421875
    10. '(:' → logprob: -12.750732421875

Token 76: '):
' (ID: 1883)
  Prédit: 'oint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oint' → logprob: -0.3856160342693329
    2. '):
' → logprob: -1.6356160640716553
    3. '):' → logprob: -2.2606160640716553
    4. ')' → logprob: -4.885615825653076
    5. 'oints' → logprob: -5.510615825653076
    6. 'ar' → logprob: -6.010615825653076
    7. '):

' → logprob: -6.510615825653076
    8. 'osition' → logprob: -7.010615825653076
    9. ',' → logprob: -7.135615825653076
    10. 'aram' → logprob: -7.385615825653076

Token 77: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004905993700958788
    2. 'return' → logprob: -7.625490665435791
    3. '  ' → logprob: -13.625490188598633
    4. '	return' → logprob: -14.000490188598633
    5. ' return' → logprob: -15.625490188598633
    6. '    ' → logprob: -15.875490188598633
    7. '       ' → logprob: -15.875490188598633
    8. ' ' → logprob: -16.375490188598633
    9. 'pass' → logprob: -17.000490188598633
    10. '   ' → logprob: -17.750490188598633

Token 78: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.04872884601354599
    2. '   ' → logprob: -3.0487289428710938
    3. 'if' → logprob: -8.923728942871094
    4. 'pass' → logprob: -12.423728942871094
    5. ' return' → logprob: -13.048728942871094
    6. '#' → logprob: -14.048728942871094
    7. '	return' → logprob: -14.798728942871094
    8. 'returns' → logprob: -15.298728942871094
    9. 'direction' → logprob: -15.798728942871094
    10. '  ' → logprob: -16.173728942871094

Token 79: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.028429673984646797
    2. '(p' → logprob: -4.7784295082092285
    3. '1' → logprob: -4.9034295082092285
    4. '-' → logprob: -4.9034295082092285
    5. '0' → logprob: -5.7784295082092285
    6. 'None' → logprob: -8.028429985046387
    7. 'cmath' → logprob: -8.028429985046387
    8. ' p' → logprob: -8.403429985046387
    9. '   ' → logprob: -8.903429985046387
    10. '"' → logprob: -9.153429985046387

Token 80: ' *' (ID: 425)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.7542603611946106
    2. '*' → logprob: -1.7542603015899658
    3. '.real' → logprob: -1.7542603015899658
    4. '+' → logprob: -2.504260301589966
    5. ' *' → logprob: -4.004260540008545
    6. '.direction' → logprob: -4.129260540008545
    7. '.copy' → logprob: -5.004260540008545
    8. '.con' → logprob: -5.004260540008545
    9. '<|end|>' → logprob: -5.254260540008545
    10. '.get' → logprob: -5.379260540008545

Token 81: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.38424474000930786
    2. '-' → logprob: -1.759244680404663
    3. '0' → logprob: -2.009244680404663
    4. '2' → logprob: -4.509244918823242
    5. '(-' → logprob: -7.384244918823242
    6. 'con' → logprob: -8.009244918823242
    7. '3' → logprob: -8.509244918823242
    8. '(' → logprob: -8.759244918823242
    9. 'complex' → logprob: -8.759244918823242
    10. 'cmath' → logprob: -9.634244918823242

Token 82: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.128384530544281
    2. '-' → logprob: -2.503384590148926
    3. '0' → logprob: -3.503384590148926
    4. '2' → logprob: -5.003384590148926
    5. '(-' → logprob: -7.253384590148926
    6. 'con' → logprob: -7.628384590148926
    7. '(' → logprob: -8.378384590148926
    8. 'complex' → logprob: -8.628384590148926
    9. '3' → logprob: -9.253384590148926
    10. 'cmath' → logprob: -9.378384590148926

Token 83: 'j' (ID: 73)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 84: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.18338452279567719
    2. '<|end|>' → logprob: -1.8083845376968384
    3. '<|end|>' → logprob: -6.433384418487549
    4. '   ' → logprob: -6.433384418487549
    5. '```' → logprob: -8.183384895324707
    6. '  ' → logprob: -10.558384895324707
    7. 'return' → logprob: -10.933384895324707
    8. '<' → logprob: -11.058384895324707
    9. '    
' → logprob: -11.308384895324707
    10. '_def' → logprob: -11.433384895324707

Token 85: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0002883913984987885
    2. '   ' → logprob: -8.250288009643555
    3. '<|end|>' → logprob: -11.000288009643555
    4. '#' → logprob: -12.750288009643555
    5. '```' → logprob: -13.000288009643555
    6. ' def' → logprob: -13.500288009643555
    7. '<|end|>' → logprob: -13.750288009643555
    8. 'print' → logprob: -13.750288009643555
    9. 'if' → logprob: -15.125288009643555
    10. ':def' → logprob: -15.250288009643555

Token 86: ' normalize' (ID: 44464)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.6332820057868958
    2. 'get' → logprob: -0.7582820057868958
    3. ' process' → logprob: -9.008281707763672
    4. ' ' → logprob: -9.133281707763672
    5. ' move' → logprob: -9.383281707763672
    6. 'process' → logprob: -9.508281707763672
    7. ' set' → logprob: -9.758281707763672
    8. 'set' → logprob: -9.883281707763672
    9. 'move' → logprob: -10.633281707763672
    10. ' rotate' → logprob: -10.633281707763672

Token 87: '_direction' (ID: 64332)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.23286506533622742
    2. '(p' → logprob: -2.73286509513855
    3. '(_' → logprob: -2.73286509513855
    4. '(_:' → logprob: -3.60786509513855
    5. '()' → logprob: -3.73286509513855
    6. '(' → logprob: -4.982864856719971
    7. '(_)' → logprob: -4.982864856719971
    8. '_' → logprob: -5.107864856719971
    9. '():
' → logprob: -7.107864856719971
    10. '_(' → logprob: -7.107864856719971

Token 88: '(d' (ID: 2572)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0005744783557020128
    2. '(p' → logprob: -8.250574111938477
    3. '()' → logprob: -8.625574111938477
    4. '():
' → logprob: -10.250574111938477
    5. '(_:' → logprob: -10.250574111938477
    6. '(:' → logprob: -10.875574111938477
    7. '(' → logprob: -11.125574111938477
    8. '(_' → logprob: -11.750574111938477
    9. ' ():' → logprob: -11.750574111938477
    10. '(":' → logprob: -12.875574111938477

Token 89: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06378576159477234
    2. '):
' → logprob: -2.8137857913970947
    3. 'irection' → logprob: -7.188785552978516
    4. ':' → logprob: -7.813785552978516
    5. '):

' → logprob: -8.063785552978516
    6. ')' → logprob: -8.438785552978516
    7. '):
' → logprob: -10.688785552978516
    8. '   ' → logprob: -10.813785552978516
    9. 'irect' → logprob: -10.813785552978516
    10. 'irections' → logprob: -11.563785552978516

Token 90: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.5451681974809617e-05
    2. 'return' → logprob: -11.250015258789062
    3. '	return' → logprob: -13.625015258789062
    4. '  ' → logprob: -13.875015258789062
    5. ' return' → logprob: -16.625015258789062
    6. '    ' → logprob: -16.750015258789062
    7. ' ' → logprob: -17.250015258789062
    8. '       ' → logprob: -17.500015258789062
    9. '	' → logprob: -18.750015258789062
    10. '   ' → logprob: -18.750015258789062

Token 91: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.3139430582523346
    2. '   ' → logprob: -1.3139430284500122
    3. 'd' → logprob: -7.313942909240723
    4. ' return' → logprob: -11.313942909240723
    5. '	return' → logprob: -13.188942909240723
    6. 'pass' → logprob: -15.688942909240723
    7. '  ' → logprob: -15.688942909240723
    8. 'if' → logprob: -15.938942909240723
    9. '       ' → logprob: -16.56394386291504
    10. 'returns' → logprob: -16.68894386291504

Token 92: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.00012415809032972902
    2. ' d' → logprob: -9.000123977661133
    3. '(d' → logprob: -15.000123977661133
    4. '   ' → logprob: -15.125123977661133
    5. '	d' → logprob: -16.750123977661133
    6. '  ' → logprob: -18.125123977661133
    7. ' ' → logprob: -18.625123977661133
    8. 'c' → logprob: -18.750123977661133
    9. '_d' → logprob: -18.750123977661133
    10. ' д' → logprob: -19.000123977661133

Token 93: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.5907544493675232
    2. ' /' → logprob: -0.9657544493675232
    3. '.normal' → logprob: -3.215754508972168
    4. '.real' → logprob: -4.715754508972168
    5. '.normalize' → logprob: -4.965754508972168
    6. '.norm' → logprob: -5.215754508972168
    7. '/n' → logprob: -6.090754508972168
    8. '.con' → logprob: -7.465754508972168
    9. '<|end|>' → logprob: -8.715754508972168
    10. '.Normalize' → logprob: -9.090754508972168

Token 94: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.020950909703969955
    2. ' abs' → logprob: -3.8959507942199707
    3. '(abs' → logprob: -8.395951271057129
    4. '.abs' → logprob: -9.645951271057129
    5. 'cmath' → logprob: -10.020951271057129
    6. 'd' → logprob: -10.520951271057129
    7. 'np' → logprob: -11.020951271057129
    8. 'numpy' → logprob: -12.020951271057129
    9. '_abs' → logprob: -12.020951271057129
    10. 'absolute' → logprob: -12.395951271057129

Token 95: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.000836312014143914
    2. '(_' → logprob: -7.750836372375488
    3. '(_)' → logprob: -9.000836372375488
    4. '(' → logprob: -9.125836372375488
    5. '(direction' → logprob: -9.500836372375488
    6. '_(' → logprob: -9.875836372375488
    7. '(D' → logprob: -11.750836372375488
    8. '(abs' → logprob: -12.125836372375488
    9. '(dir' → logprob: -12.250836372375488
    10. '(dx' → logprob: -12.375836372375488

Token 96: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.088346359931165e-07
    2. ')
' → logprob: -14.500000953674316
    3. '))' → logprob: -15.500000953674316
    4. ')

' → logprob: -15.750000953674316
    5. ').' → logprob: -17.5
    6. '）' → logprob: -18.375
    7. ')**' → logprob: -18.625
    8. ')`' → logprob: -18.875
    9. ' )' → logprob: -19.0
    10. ')}' → logprob: -20.125

Token 97: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -2.558399319241289e-05
    2. '   ' → logprob: -10.875025749206543
    3. '#' → logprob: -12.750025749206543
    4. ' def' → logprob: -13.625025749206543
    5. '```' → logprob: -14.250025749206543
    6. '<|end|>' → logprob: -15.000025749206543
    7. '    
' → logprob: -15.125025749206543
    8. 'return' → logprob: -15.500025749206543
    9. 'pass' → logprob: -15.500025749206543
    10. ':def' → logprob: -15.625025749206543

Token 98: ' update' (ID: 4027)
  Prédit: 'normalize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'normalize' → logprob: -0.02545333467423916
    2. 'get' → logprob: -4.025453567504883
    3. 'process' → logprob: -6.150453567504883
    4. ' normalize' → logprob: -7.025453567504883
    5. 'set' → logprob: -7.275453567504883
    6. 'calculate' → logprob: -7.525453567504883
    7. 'generate' → logprob: -7.525453567504883
    8. 'normal' → logprob: -7.900453567504883
    9. 'scale' → logprob: -8.025453567504883
    10. 'rotate' → logprob: -8.150453567504883

Token 99: '_position' (ID: 23739)
  Prédit: '_direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_direction' → logprob: -0.0022199610248208046
    2. '_position' → logprob: -7.002220153808594
    3. '_input' → logprob: -7.752220153808594
    4. '_point' → logprob: -8.377220153808594
    5. '_d' → logprob: -8.502220153808594
    6. '_location' → logprob: -10.377220153808594
    7. '_state' → logprob: -10.377220153808594
    8. '_iteration' → logprob: -10.377220153808594
    9. '_angle' → logprob: -10.502220153808594
    10. '_output' → logprob: -10.627220153808594

Token 100: '(p' (ID: 2407)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.003228456014767289
    2. '(p' → logprob: -7.128228664398193
    3. '(:' → logprob: -7.253228664398193
    4. '()' → logprob: -7.378228664398193
    5. '():
' → logprob: -7.878228664398193
    6. '(' → logprob: -8.378228187561035
    7. '(_:' → logprob: -8.878228187561035
    8. '(_' → logprob: -9.503228187561035
    9. '(position' → logprob: -10.128228187561035
    10. '(":' → logprob: -10.753228187561035

Token 101: ',' (ID: 11)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.4915226399898529
    2. ',' → logprob: -1.7415226697921753
    3. '):' → logprob: -1.7415226697921753
    4. ')' → logprob: -4.116522789001465
    5. ' +' → logprob: -4.116522789001465
    6. '):

' → logprob: -6.366522789001465
    7. '+' → logprob: -6.616522789001465
    8. '   ' → logprob: -6.991522789001465
    9. '):
' → logprob: -8.241522789001465
    10. '),' → logprob: -8.491522789001465

Token 102: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.010190323926508427
    2. ' d' → logprob: -4.635190486907959
    3. ',' → logprob: -8.3851900100708
    4. 'n' → logprob: -9.0101900100708
    5. '):' → logprob: -11.2601900100708
    6. '):
' → logprob: -11.5101900100708
    7. 'm' → logprob: -11.6351900100708
    8. '   ' → logprob: -11.6351900100708
    9. ':' → logprob: -11.6351900100708
    10. 't' → logprob: -11.8851900100708

Token 103: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.049529556185007095
    2. '):' → logprob: -3.049529552459717
    3. ',' → logprob: -7.674529552459717
    4. '):

' → logprob: -7.924529552459717
    5. '   ' → logprob: -10.049530029296875
    6. '):
' → logprob: -10.299530029296875
    7. ')' → logprob: -10.424530029296875
    8. ')):
' → logprob: -12.299530029296875
    9. ')):' → logprob: -13.799530029296875
    10. ''):
' → logprob: -14.674530029296875

Token 104: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.5048530030981055e-06
    2. '  ' → logprob: -14.000001907348633
    3. 'return' → logprob: -14.750001907348633
    4. '	return' → logprob: -16.125001907348633
    5. ' ' → logprob: -17.000001907348633
    6. ' return' → logprob: -17.500001907348633
    7. '    ' → logprob: -18.125001907348633
    8. '       ' → logprob: -18.875001907348633
    9. '   ' → logprob: -19.500001907348633
    10. '   ' → logprob: -19.750001907348633

Token 105: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0052360063418745995
    2. 'return' (adapté à ' return') → logprob: -5.2552361488342285
    3. '	return' → logprob: -13.50523567199707
    4. ' return' → logprob: -14.88023567199707
    5. 'p' → logprob: -15.13023567199707
    6. '  ' → logprob: -16.00523567199707
    7. '       ' → logprob: -17.88023567199707
    8. '    ' → logprob: -19.25523567199707
    9. ' ' → logprob: -19.75523567199707
    10. '返回' → logprob: -20.13023567199707

Token 106: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.31326571106910706
    2. ' p' → logprob: -1.3132656812667847
    3. '   ' → logprob: -12.563265800476074
    4. '	p' → logprob: -15.313265800476074
    5. '(p' → logprob: -16.063264846801758
    6. ' ' → logprob: -16.563264846801758
    7. ' п' → logprob: -17.188264846801758
    8. '  ' → logprob: -18.313264846801758
    9. '.p' → logprob: -18.938264846801758
    10. '    ' → logprob: -19.313264846801758

Token 107: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -1.1041145626222715e-05
    2. '+' → logprob: -12.000011444091797
    3. '+d' → logprob: -12.250011444091797
    4. ' ' → logprob: -19.000011444091797
    5. '   ' → logprob: -20.000011444091797
    6. '+D' → logprob: -21.125011444091797
    7. '+c' → logprob: -21.250011444091797
    8. '+p' → logprob: -21.500011444091797
    9. ' +=' → logprob: -21.750011444091797
    10. '  ' → logprob: -21.875011444091797

Token 108: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0004307884373702109
    2. ' d' → logprob: -7.750430583953857
    3. '	d' → logprob: -17.750431060791016
    4. '_d' → logprob: -18.500431060791016
    5. '   ' → logprob: -18.625431060791016
    6. ' д' → logprob: -18.625431060791016
    7. '(d' → logprob: -18.750431060791016
    8. ' ' → logprob: -19.625431060791016
    9. ' ' → logprob: -20.125431060791016
    10. '.d' → logprob: -20.625431060791016

Token 109: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 110: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.001440353924408555
    2. '   ' → logprob: -7.126440525054932
    3. '```' → logprob: -8.126440048217773
    4. '#' → logprob: -8.251440048217773
    5. 'if' → logprob: -11.251440048217773
    6. 'pass' → logprob: -11.376440048217773
    7. 'return' → logprob: -11.376440048217773
    8. ' def' → logprob: -11.501440048217773
    9. '<|end|>' → logprob: -11.751440048217773
    10. ':def' → logprob: -12.251440048217773

Token 111: ' format' (ID: 6011)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'update' → logprob: -0.386726438999176
    2. 'get' → logprob: -1.6367263793945312
    3. ' update' → logprob: -2.8867263793945312
    4. 'process' → logprob: -3.5117263793945312
    5. 'calculate' → logprob: -4.386726379394531
    6. 'set' → logprob: -5.136726379394531
    7. ' get' → logprob: -5.136726379394531
    8. 'move' → logprob: -6.011726379394531
    9. ' process' → logprob: -6.261726379394531
    10. 'generate' → logprob: -6.886726379394531

Token 112: '_real' (ID: 38743)
  Prédit: '_output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_output' → logprob: -0.12524375319480896
    2. '_input' → logprob: -2.500243663787842
    3. '_position' → logprob: -3.375243663787842
    4. '_pos' → logprob: -8.000244140625
    5. '_result' → logprob: -8.125244140625
    6. '_code' → logprob: -9.000244140625
    7. '_response' → logprob: -9.250244140625
    8. '_string' → logprob: -9.625244140625
    9. '_' → logprob: -10.000244140625
    10. '_print' → logprob: -10.250244140625

Token 113: '(p' (ID: 2407)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1038175821304321
    2. '(_' → logprob: -2.8538174629211426
    3. '(p' → logprob: -3.1038174629211426
    4. '_output' → logprob: -3.1038174629211426
    5. '_position' → logprob: -3.3538174629211426
    6. '_format' → logprob: -3.3538174629211426
    7. '```' → logprob: -3.3538174629211426
    8. '_part' → logprob: -3.7288174629211426
    9. '_real' → logprob: -3.7288174629211426
    10. '()' → logprob: -4.103817462921143

Token 114: '):
' (ID: 1883)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.21233075857162476
    2. '):' → logprob: -2.0873308181762695
    3. '):
' → logprob: -3.7123308181762695
    4. ',' → logprob: -3.8373308181762695
    5. ')' → logprob: -4.7123308181762695
    6. '.real' → logprob: -5.0873308181762695
    7. '.format' → logprob: -6.0873308181762695
    8. '),' → logprob: -7.4623308181762695
    9. '):

' → logprob: -7.5873308181762695
    10. '   ' → logprob: -7.5873308181762695

Token 115: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -3.619311974034645e-05
    2. 'return' → logprob: -10.250036239624023
    3. '  ' → logprob: -14.375036239624023
    4. '	return' → logprob: -16.125036239624023
    5. ' return' → logprob: -17.125036239624023
    6. '    ' → logprob: -17.375036239624023
    7. '       ' → logprob: -18.000036239624023
    8. ' ' → logprob: -18.125036239624023
    9. '```' → logprob: -18.500036239624023
    10. '   ' → logprob: -19.125036239624023

Token 116: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.3869059979915619
    2. '   ' → logprob: -1.1369060277938843
    3. ' return' → logprob: -10.386905670166016
    4. '	return' → logprob: -13.386905670166016
    5. 'format' → logprob: -13.886905670166016
    6. '  ' → logprob: -14.386905670166016
    7. '{return' → logprob: -14.386905670166016
    8. 'str' → logprob: -16.386905670166016
    9. ':return' → logprob: -16.636905670166016
    10. ' ' → logprob: -16.761905670166016

Token 117: ' "{' (ID: 29585)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.34634941816329956
    2. 'format' → logprob: -2.0963494777679443
    3. '"{' → logprob: -2.4713494777679443
    4. 'f' → logprob: -2.8463494777679443
    5. ' str' → logprob: -4.346349239349365
    6. 'round' → logprob: -5.096349239349365
    7. 'p' → logprob: -5.846349239349365
    8. ' "{' → logprob: -6.846349239349365
    9. ' f' → logprob: -6.971349239349365
    10. ''{' → logprob: -6.971349239349365

Token 118: ':.' (ID: 27474)
  Prédit: ':.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':.' → logprob: -0.00021212305000517517
    2. ':' → logprob: -8.625211715698242
    3. '0' → logprob: -10.875211715698242
    4. ':+' → logprob: -11.375211715698242
    5. ':p' → logprob: -13.500211715698242
    6. ':<' → logprob: -15.250211715698242
    7. 'p' → logprob: -15.375211715698242
    8. ':g' → logprob: -15.625211715698242
    9. ':f' → logprob: -17.875211715698242
    10. ':,' → logprob: -17.875211715698242

Token 119: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.6902733445167542
    2. '6' → logprob: -1.3152732849121094
    3. 'f' → logprob: -2.3152732849121094
    4. '1' → logprob: -2.9402732849121094
    5. '4' → logprob: -3.5652732849121094
    6. '3' → logprob: -3.9402732849121094
    7. '5' → logprob: -4.065273284912109
    8. '10' → logprob: -4.940273284912109
    9. '12' → logprob: -6.440273284912109
    10. '8' → logprob: -6.815273284912109

Token 120: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -7.896309739408025e-07
    2. ' f' → logprob: -14.875000953674316
    3. '   ' → logprob: -15.875000953674316
    4. 'g' → logprob: -16.375
    5. '(f' → logprob: -17.0
    6. '<f' → logprob: -17.125
    7. '	f' → logprob: -17.5
    8. 'ф' → logprob: -17.625
    9. ''f' → logprob: -18.5
    10. ':f' → logprob: -18.625

Token 121: '}".' (ID: 53576)
  Prédit: '}".'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}".' → logprob: -0.0005276533775031567
    2. 'f' → logprob: -8.500527381896973
    3. '}"' → logprob: -8.625527381896973
    4. '}.' → logprob: -9.375527381896973
    5. '}'.' → logprob: -10.875527381896973
    6. '}",' → logprob: -11.375527381896973
    7. '}"
' → logprob: -11.625527381896973
    8. '".' → logprob: -11.875527381896973
    9. '}' → logprob: -12.000527381896973
    10. 'g' → logprob: -13.375527381896973

Token 122: 'format' (ID: 4078)
  Prédit: 'format'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'format' → logprob: -1.1472419600977446e-06
    2. '.format' → logprob: -14.375000953674316
    3. ' format' → logprob: -16.000001907348633
    4. 'formatted' → logprob: -16.750001907348633
    5. 'formatter' → logprob: -17.000001907348633
    6. 'f' → logprob: -17.125001907348633
    7. '_format' → logprob: -17.250001907348633
    8. '	format' → logprob: -17.750001907348633
    9. 'FORMAT' → logprob: -18.000001907348633
    10. 'form' → logprob: -18.625001907348633

Token 123: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -5.9153885558771435e-06
    2. '(' → logprob: -12.625005722045898
    3. '(real' → logprob: -13.000005722045898
    4. '(abs' → logprob: -16.0000057220459
    5. '(re' → logprob: -17.0000057220459
    6. '(float' → logprob: -17.0000057220459
    7. ' p' → logprob: -17.8750057220459
    8. '(m' → logprob: -18.0000057220459
    9. '(d' → logprob: -18.1250057220459
    10. '(f' → logprob: -18.2500057220459

Token 124: '.real' (ID: 63800)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008503117598593235
    2. '.real' → logprob: -4.883502960205078
    3. ')}' → logprob: -7.883502960205078
    4. ').' → logprob: -8.008502960205078
    5. '})' → logprob: -9.133502960205078
    6. '}' → logprob: -10.008502960205078
    7. 'real' → logprob: -11.883502960205078
    8. '）' → logprob: -12.383502960205078
    9. ')
' → logprob: -13.008502960205078
    10. '}")' → logprob: -13.133502960205078

Token 125: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6166903151315637e-05
    2. ').' → logprob: -11.875016212463379
    3. ')}' → logprob: -13.000016212463379
    4. '})' → logprob: -13.250016212463379
    5. '))' → logprob: -13.875016212463379
    6. ')p' → logprob: -14.125016212463379
    7. '```' → logprob: -14.125016212463379
    8. ')
' → logprob: -14.500016212463379
    9. ')`' → logprob: -14.500016212463379
    10. ')

' → logprob: -15.000016212463379

Token 126: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -5.200166469876422e-06
    2. ' def' → logprob: -12.375004768371582
    3. '<|end|>' → logprob: -14.500004768371582
    4. '_def' → logprob: -16.0000057220459
    5. ':def' → logprob: -16.2500057220459
    6. '<|end|>' → logprob: -17.0000057220459
    7. '.def' → logprob: -17.0000057220459
    8. '-def' → logprob: -17.1250057220459
    9. '```' → logprob: -18.0000057220459
    10. '	def' → logprob: -18.0000057220459

Token 127: ' format' (ID: 6011)
  Prédit: 'format'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'format' → logprob: -1.9361264946837764e-07
    2. ' format' → logprob: -16.125
    3. 'formatted' → logprob: -18.375
    4. 'get' → logprob: -18.75
    5. '_format' → logprob: -18.75
    6. 'form' → logprob: -19.0
    7. '	format' → logprob: -19.5
    8. 'process' → logprob: -19.75
    9. 'print' → logprob: -20.0
    10. 'formatter' → logprob: -20.0

Token 128: '_im' (ID: 44020)
  Prédit: '_real'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_real' → logprob: -0.6866212487220764
    2. '_complex' → logprob: -0.8116212487220764
    3. '_im' → logprob: -3.6866211891174316
    4. '_p' → logprob: -5.436621189117432
    5. '(p' → logprob: -6.436621189117432
    6. '_angle' → logprob: -6.811621189117432
    7. '_phase' → logprob: -6.811621189117432
    8. '_output' → logprob: -6.936621189117432
    9. '_number' → logprob: -7.061621189117432
    10. '_decimal' → logprob: -7.186621189117432

Token 129: 'ag' (ID: 348)
  Prédit: 'ag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ag' → logprob: -0.028300361707806587
    2. 'agin' → logprob: -4.7783002853393555
    3. '(p' → logprob: -5.0283002853393555
    4. ' ag' → logprob: -5.2783002853393555
    5. '(a' → logprob: -6.4033002853393555
    6. 'agina' → logprob: -6.6533002853393555
    7. ' Ag' → logprob: -7.6533002853393555
    8. 'аг' → logprob: -7.8408002853393555
    9. 'agine' → logprob: -7.9033002853393555
    10. 'aj' → logprob: -8.153300285339355

Token 130: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.02339828386902809
    2. '(e' → logprob: -3.8983983993530273
    3. 'inary' → logprob: -6.523398399353027
    4. '(' → logprob: -7.523398399353027
    5. 'e' → logprob: -7.898398399353027
    6. '(in' → logprob: -8.648398399353027
    7. 'ine' → logprob: -9.648398399353027
    8. 'in' → logprob: -10.023398399353027
    9. '(m' → logprob: -10.523398399353027
    10. '(a' → logprob: -10.898398399353027

Token 131: '):
' (ID: 1883)
  Prédit: '.imag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.imag' → logprob: -0.05609709396958351
    2. ').' → logprob: -3.0560970306396484
    3. '.format' → logprob: -5.431097030639648
    4. '.im' → logprob: -7.306097030639648
    5. '.' → logprob: -7.556097030639648
    6. 'imag' → logprob: -8.306097030639648
    7. ')' → logprob: -8.431097030639648
    8. '.img' → logprob: -8.806097030639648
    9. '`.' → logprob: -8.806097030639648
    10. 'Imag' → logprob: -9.181097030639648

Token 132: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -4.787507714354433e-05
    2. 'return' → logprob: -10.00004768371582
    3. '  ' → logprob: -13.37504768371582
    4. ' return' → logprob: -14.75004768371582
    5. '       ' → logprob: -15.62504768371582
    6. '    ' → logprob: -16.12504768371582
    7. '	return' → logprob: -16.50004768371582
    8. '{return' → logprob: -17.62504768371582
    9. ':return' → logprob: -17.75004768371582
    10. '     ' → logprob: -17.87504768371582

Token 133: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.3874177932739258
    2. '   ' → logprob: -1.1374177932739258
    3. ' return' → logprob: -8.012417793273926
    4. '"{' → logprob: -8.637417793273926
    5. '	return' → logprob: -10.887417793273926
    6. '"' → logprob: -12.137417793273926
    7. '{return' → logprob: -12.387417793273926
    8. '       ' → logprob: -12.762417793273926
    9. '  ' → logprob: -13.137417793273926
    10. ':return' → logprob: -13.512417793273926

Token 134: ' "{' (ID: 29585)
  Prédit: '"{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"{' → logprob: -9.674858301877975e-05
    2. ' "{' → logprob: -9.375096321105957
    3. '"' → logprob: -11.875096321105957
    4. '("{' → logprob: -12.375096321105957
    5. '="{' → logprob: -15.250096321105957
    6. '   ' → logprob: -15.625096321105957
    7. '".' → logprob: -16.625097274780273
    8. ' ' → logprob: -17.125097274780273
    9. ''{' → logprob: -17.125097274780273
    10. '"\' → logprob: -18.000097274780273

Token 135: ':.' (ID: 27474)
  Prédit: ':.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':.' → logprob: -4.961759259458631e-06
    2. ':' → logprob: -12.250004768371582
    3. ':+' → logprob: -16.8750057220459
    4. '.' → logprob: -17.7500057220459
    5. ':.

' → logprob: -17.8750057220459
    6. ':,' → logprob: -18.7500057220459
    7. ' :.' → logprob: -18.8750057220459
    8. '}.' → logprob: -18.8750057220459
    9. '.:' → logprob: -19.1250057220459
    10. '}".' → logprob: -19.6250057220459

Token 136: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.12258882028982e-05
    2. 'f' → logprob: -9.87506103515625
    3. '{' → logprob: -12.62506103515625
    4. '02' → logprob: -13.37506103515625
    5. 'two' → logprob: -13.87506103515625
    6. 'fi' → logprob: -14.50006103515625
    7. '²' → logprob: -14.75006103515625
    8. '<' → logprob: -15.00006103515625
    9. 'fmt' → logprob: -15.00006103515625
    10. 'nf' → logprob: -15.00006103515625

Token 137: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -3.857719275401905e-05
    2. '.f' → logprob: -10.250038146972656
    3. '}.' → logprob: -13.500038146972656
    4. '.' → logprob: -14.625038146972656
    5. '}' → logprob: -14.750038146972656
    6. '<f' → logprob: -15.625038146972656
    7. '(f' → logprob: -15.750038146972656
    8. ' f' → logprob: -15.750038146972656
    9. ':f' → logprob: -16.000038146972656
    10. 'ф' → logprob: -16.375038146972656

Token 138: '}".' (ID: 53576)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0028778647538274527
    2. '}".' → logprob: -5.877877712249756
    3. '}.' → logprob: -9.877878189086914
    4. '}' → logprob: -11.252878189086914
    5. '}{' → logprob: -13.127878189086914
    6. '.f' → logprob: -13.377878189086914
    7. '}"' → logprob: -13.502878189086914
    8. '}",' → logprob: -13.877878189086914
    9. '}'.' → logprob: -14.252878189086914
    10. '}\' → logprob: -14.377878189086914

Token 139: 'format' (ID: 4078)
  Prédit: 'format'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'format' → logprob: 0.0
    2. '.format' → logprob: -17.25
    3. '	format' → logprob: -17.375
    4. ' format' → logprob: -17.5
    5. 'f' → logprob: -18.0
    6. 'form' → logprob: -19.25
    7. '_format' → logprob: -19.25
    8. '=format' → logprob: -19.5
    9. '(format' → logprob: -19.75
    10. 'FORMAT' → logprob: -20.125

Token 140: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: 0.0
    2. '(abs' → logprob: -17.625
    3. '(' → logprob: -17.875
    4. '(f' → logprob: -21.625
    5. '(np' → logprob: -21.875
    6. '(b' → logprob: -22.25
    7. '(pp' → logprob: -22.25
    8. ' p' → logprob: -22.25
    9. '(m' → logprob: -22.375
    10. '(c' → logprob: -22.625

Token 141: '.imag' (ID: 171484)
  Prédit: '.imag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.imag' → logprob: -5.228561349213123e-05
    2. '.im' → logprob: -10.625052452087402
    3. 'imag' → logprob: -10.750052452087402
    4. 'Imag' → logprob: -13.125052452087402
    5. ' Imag' → logprob: -13.250052452087402
    6. '.' → logprob: -13.875052452087402
    7. ' imag' → logprob: -14.000052452087402
    8. ' imagin' → logprob: -15.500052452087402
    9. '.img' → logprob: -15.625052452087402
    10. '.Im' → logprob: -16.000051498413086

Token 142: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.080963092041202e-06
    2. ')}' → logprob: -12.625004768371582
    3. ')
' → logprob: -14.500004768371582
    4. '}' → logprob: -14.500004768371582
    5. '))' → logprob: -15.625004768371582
    6. ')

' → logprob: -16.0000057220459
    7. ')`' → logprob: -16.0000057220459
    8. '})' → logprob: -16.2500057220459
    9. '```' → logprob: -16.2500057220459
    10. ')p' → logprob: -16.7500057220459

Token 143: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005292219575494528
    2. '<|end|>' → logprob: -5.2552924156188965
    3. '```' → logprob: -10.505291938781738
    4. ' def' → logprob: -11.005291938781738
    5. '<|end|>' → logprob: -12.255291938781738
    6. '   ' → logprob: -12.505291938781738
    7. ':def' → logprob: -13.505291938781738
    8. '_def' → logprob: -13.755291938781738
    9. '  ' → logprob: -14.630291938781738
    10. 'Def' → logprob: -14.755291938781738

Token 144: ' print' (ID: 2123)
  Prédit: 'format'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'format' → logprob: -0.4424266219139099
    2. 'process' → logprob: -1.5674266815185547
    3. 'print' → logprob: -3.1924266815185547
    4. 'get' → logprob: -3.3174266815185547
    5. 'output' → logprob: -3.8174266815185547
    6. 'main' → logprob: -4.192426681518555
    7. 'calculate' → logprob: -4.442426681518555
    8. 'display' → logprob: -4.692426681518555
    9. 'generate' → logprob: -6.317426681518555
    10. 'to' → logprob: -6.567426681518555

Token 145: '_results' (ID: 31049)
  Prédit: '_output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_output' → logprob: -0.4954606890678406
    2. '(' → logprob: -2.1204607486724854
    3. '()' → logprob: -2.4954607486724854
    4. '(p' → logprob: -2.7454607486724854
    5. '_result' → logprob: -3.9954607486724854
    6. '_' → logprob: -4.120460510253906
    7. '(_)' → logprob: -4.495460510253906
    8. '_input' → logprob: -4.995460510253906
    9. '(...)' → logprob: -4.995460510253906
    10. '(_' → logprob: -5.120460510253906

Token 146: '(p' (ID: 2407)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00042531240615062416
    2. '()' → logprob: -8.000425338745117
    3. '():
' → logprob: -10.375425338745117
    4. '(:' → logprob: -10.750425338745117
    5. ' ():' → logprob: -10.875425338745117
    6. '   ' → logprob: -12.250425338745117
    7. '(' → logprob: -13.000425338745117
    8. '(":' → logprob: -13.125425338745117
    9. '(_:' → logprob: -13.250425338745117
    10. '():

' → logprob: -13.625425338745117

Token 147: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6985040307044983
    2. '):' → logprob: -0.6985040307044983
    3. ',' → logprob: -5.6985039710998535
    4. '):

' → logprob: -6.6985039710998535
    5. ')' → logprob: -7.8235039710998535
    6. '):
' → logprob: -8.823504447937012
    7. '   ' → logprob: -9.323504447937012
    8. '"):' → logprob: -9.948504447937012
    9. '"):
' → logprob: -10.448504447937012
    10. ''):' → logprob: -11.698504447937012

Token 148: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -4.723352049040841e-06
    2. 'print' → logprob: -12.375004768371582
    3. '  ' → logprob: -14.875004768371582
    4. '	print' → logprob: -17.750003814697266
    5. '    ' → logprob: -18.125003814697266
    6. ' ' → logprob: -18.125003814697266
    7. ' print' → logprob: -18.625003814697266
    8. '       ' → logprob: -19.125003814697266
    9. '```' → logprob: -19.625003814697266
    10. '   ' → logprob: -20.750003814697266

Token 149: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07889044284820557
    2. 'print' (adapté à ' print') → logprob: -2.578890323638916
    3. ' print' → logprob: -14.953890800476074
    4. '  ' → logprob: -15.203890800476074
    5. '	print' → logprob: -16.453889846801758
    6. 'result' → logprob: -17.078889846801758
    7. 'pass' → logprob: -17.203889846801758
    8. 'formatted' → logprob: -17.203889846801758
    9. ' ' → logprob: -17.703889846801758
    10. '    ' → logprob: -18.078889846801758

Token 150: '(format' (ID: 39668)
  Prédit: '_results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_results' → logprob: -0.8909714221954346
    2. '("' → logprob: -1.2659714221954346
    3. '("("' → logprob: -1.7659714221954346
    4. '(f' → logprob: -3.6409714221954346
    5. '("(' → logprob: -3.6409714221954346
    6. '("_' → logprob: -3.7659714221954346
    7. '(p' → logprob: -3.8909714221954346
    8. '()' → logprob: -4.6409711837768555
    9. '(results' → logprob: -4.7659711837768555
    10. '(' → logprob: -5.2659711837768555

Token 151: '_real' (ID: 38743)
  Prédit: '_real'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_real' → logprob: -0.00026884564431384206
    2. '(real' → logprob: -8.750268936157227
    3. '_results' → logprob: -9.250268936157227
    4. '_REAL' → logprob: -11.750268936157227
    5. '_re' → logprob: -13.500268936157227
    6. 'Real' → logprob: -13.625268936157227
    7. '.real' → logprob: -13.875268936157227
    8. '_im' → logprob: -14.250268936157227
    9. '<Real' → logprob: -14.875268936157227
    10. ' Real' → logprob: -14.875268936157227

Token 152: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -8.061054359131958e-06
    2. '(' → logprob: -11.750007629394531
    3. '(pr' → logprob: -17.62500762939453
    4. '(f' → logprob: -17.75000762939453
    5. '(m' → logprob: -18.00000762939453
    6. '(np' → logprob: -18.25000762939453
    7. '()(' → logprob: -18.62500762939453
    8. ' (' → logprob: -18.87500762939453
    9. '(pp' → logprob: -18.87500762939453
    10. '(pe' → logprob: -19.00000762939453

Token 153: '))
' (ID: 2210)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.04949051886796951
    2. ')' → logprob: -3.049490451812744
    3. ').' → logprob: -8.049490928649902
    4. ')+' → logprob: -8.424490928649902
    5. '))' → logprob: -8.799490928649902
    6. '),
' → logprob: -9.299490928649902
    7. '.real' → logprob: -9.549490928649902
    8. ')،' → logprob: -11.924490928649902
    9. ')),' → logprob: -11.924490928649902
    10. ')、' → logprob: -12.549490928649902

Token 154: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004636011086404324
    2. 'print' → logprob: -5.379635810852051
    3. 'def' → logprob: -11.25463581085205
    4. '  ' → logprob: -14.12963581085205
    5. ' print' → logprob: -14.12963581085205
    6. '	print' → logprob: -14.37963581085205
    7. '       ' → logprob: -15.00463581085205
    8. '```' → logprob: -15.12963581085205
    9. '.print' → logprob: -15.75463581085205
    10. '    ' → logprob: -16.504636764526367

Token 155: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.06197093799710274
    2. '   ' → logprob: -2.8119709491729736
    3. ' print' → logprob: -12.811970710754395
    4. '	print' → logprob: -14.561970710754395
    5. '.print' → logprob: -16.06197166442871
    6. 'println' → logprob: -17.18697166442871
    7. 'prints' → logprob: -18.06197166442871
    8. 'Print' → logprob: -18.18697166442871
    9. '_print' → logprob: -18.56197166442871
    10. '```' → logprob: -18.68697166442871

Token 156: '(format' (ID: 39668)
  Prédit: '(format'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(format' → logprob: -4.127333340875339e-06
    2. '(' → logprob: -13.500003814697266
    3. '=format' → logprob: -13.750003814697266
    4. '(form' → logprob: -14.250003814697266
    5. '_format' → logprob: -15.000003814697266
    6. '(fmt' → logprob: -15.125003814697266
    7. '(f' → logprob: -15.875003814697266
    8. '(print' → logprob: -16.625003814697266
    9. '.format' → logprob: -17.250003814697266
    10. '(results' → logprob: -17.500003814697266

Token 157: '_im' (ID: 44020)
  Prédit: '_im'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_im' → logprob: -1.676292231422849e-05
    2. '_' → logprob: -12.125017166137695
    3. '_IM' → logprob: -12.875017166137695
    4. '(im' → logprob: -13.000017166137695
    5. '_real' → logprob: -13.125017166137695
    6. '_i' → logprob: -15.125017166137695
    7. '_(' → logprob: -15.250017166137695
    8. '_img' → logprob: -15.250017166137695
    9. '_re' → logprob: -15.375017166137695
    10. '_imp' → logprob: -15.500017166137695

Token 158: 'ag' (ID: 348)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.7618715167045593
    2. '().' → logprob: -1.511871576309204
    3. '.' → logprob: -2.386871576309204
    4. '.p' → logprob: -2.886871576309204
    5. '()' → logprob: -3.636871576309204
    6. 'osition' → logprob: -4.511871337890625
    7. '(a' → logprob: -4.761871337890625
    8. '())' → logprob: -4.761871337890625
    9. '(' → logprob: -4.886871337890625
    10. '(.' → logprob: -4.886871337890625

Token 159: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: 0.0
    2. '(' → logprob: -18.125
    3. '(f' → logprob: -20.375
    4. '(pr' → logprob: -20.375
    5. '(m' → logprob: -20.75
    6. '(b' → logprob: -21.125
    7. '(P' → logprob: -21.375
    8. '(pp' → logprob: -21.625
    9. '(c' → logprob: -21.75
    10. ' (' → logprob: -21.875

Token 160: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0001777960715116933
    2. '))
' → logprob: -10.125177383422852
    3. '.imag' → logprob: -10.250177383422852
    4. '()))' → logprob: -10.500177383422852
    5. ')))' → logprob: -11.000177383422852
    6. '))

' → logprob: -11.125177383422852
    7. ')' → logprob: -11.500177383422852
    8. ''))' → logprob: -12.625177383422852
    9. '.' → logprob: -12.750177383422852
    10. '))


' → logprob: -13.125177383422852

Token 161: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0250766072422266
    2. 'print' → logprob: -4.650076389312744
    3. '```' → logprob: -5.525076389312744
    4. '<|end|>' → logprob: -5.525076389312744
    5. 'if' → logprob: -5.900076389312744
    6. 'p' → logprob: -6.150076389312744
    7. '   ' → logprob: -6.900076389312744
    8. 'return' → logprob: -7.400076389312744
    9. 'n' → logprob: -8.025076866149902
    10. '<|end|>' → logprob: -8.900076866149902

Token 162: ' iterate' (ID: 63166)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.670156717300415
    2. 'process' → logprob: -1.545156717300415
    3. 'calculate' → logprob: -1.920156717300415
    4. 'execute' → logprob: -3.420156717300415
    5. 'run' → logprob: -3.670156717300415
    6. 'print' → logprob: -3.670156717300415
    7. 'compute' → logprob: -3.795156717300415
    8. 'perform' → logprob: -4.545156478881836
    9. 'get' → logprob: -5.545156478881836
    10. 'set' → logprob: -6.420156478881836

Token 163: '_point' (ID: 15466)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.005412453785538673
    2. '()' → logprob: -6.130412578582764
    3. '_' → logprob: -7.005412578582764
    4. '(_:' → logprob: -7.255412578582764
    5. '(_' → logprob: -7.380412578582764
    6. '():
' → logprob: -7.755412578582764
    7. '(p' → logprob: -9.380412101745605
    8. '_:' → logprob: -9.505412101745605
    9. '   ' → logprob: -9.755412101745605
    10. '(:' → logprob: -9.880412101745605

Token 164: '(n' (ID: 2406)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0002004410926019773
    2. '(:' → logprob: -9.750200271606445
    3. '():
' → logprob: -9.875200271606445
    4. '()' → logprob: -10.000200271606445
    5. ' ():' → logprob: -11.500200271606445
    6. '(p' → logprob: -11.625200271606445
    7. '(_:' → logprob: -11.875200271606445
    8. '(' → logprob: -12.500200271606445
    9. '(":' → logprob: -12.750200271606445
    10. '():

' → logprob: -12.750200271606445

Token 165: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07929830998182297
    2. '):
' → logprob: -2.579298257827759
    3. ',' → logprob: -8.45429801940918
    4. '):

' → logprob: -8.70429801940918
    5. ')' → logprob: -11.57929801940918
    6. '):
' → logprob: -11.57929801940918
    7. '   ' → logprob: -11.82929801940918
    8. ')):' → logprob: -14.20429801940918
    9. ''):' → logprob: -14.20429801940918
    10. ':' → logprob: -14.45429801940918

Token 166: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.001993227982893586
    2. 'd' → logprob: -6.501993179321289
    3. ' p' → logprob: -7.626993179321289
    4. '   ' → logprob: -13.251993179321289
    5. 'm' → logprob: -14.001993179321289
    6. ' d' → logprob: -15.001993179321289
    7. ' ' → logprob: -15.751993179321289
    8. 'g' → logprob: -16.00199317932129
    9. 'c' → logprob: -16.00199317932129
    10. 't' → logprob: -16.12699317932129

Token 167: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6223708987236023
    2. '):
' → logprob: -0.8723708987236023
    3. ',' → logprob: -3.122370958328247
    4. '):

' → logprob: -6.997370719909668
    5. ')' → logprob: -8.622370719909668
    6. '   ' → logprob: -8.747370719909668
    7. '):
' → logprob: -10.372370719909668
    8. ')):' → logprob: -11.122370719909668
    9. ')):
' → logprob: -11.997370719909668
    10. '),' → logprob: -11.997370719909668

Token 168: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -4.127333340875339e-06
    2. '  ' → logprob: -13.000003814697266
    3. 'return' → logprob: -14.000003814697266
    4. ' ' → logprob: -15.125003814697266
    5. '    ' → logprob: -15.500003814697266
    6. 'd' → logprob: -16.125003814697266
    7. '	return' → logprob: -16.375003814697266
    8. '```' → logprob: -16.500003814697266
    9. '   ' → logprob: -17.000003814697266
    10. ' return' → logprob: -17.125003814697266

Token 169: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03809954971075058
    2. 'd' → logprob: -3.288099527359009
    3. 'return' → logprob: -9.91309928894043
    4. 'direction' → logprob: -12.03809928894043
    5. 'for' (adapté à ' for') → logprob: -14.28809928894043
    6. ' d' → logprob: -14.41309928894043
    7. '  ' → logprob: -14.53809928894043
    8. 'dir' → logprob: -14.91309928894043
    9. 'if' → logprob: -16.03809928894043
    10. 'p' → logprob: -16.03809928894043

Token 170: ' _' (ID: 1175)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0024806505534797907
    2. 'i' → logprob: -6.627480506896973
    3. ' d' → logprob: -7.127480506896973
    4. ' ' → logprob: -8.627480506896973
    5. ' in' → logprob: -9.752480506896973
    6. '   ' → logprob: -10.252480506896973
    7. ' _' → logprob: -11.127480506896973
    8. 'd' → logprob: -11.127480506896973
    9. '    ' → logprob: -11.252480506896973
    10. '  ' → logprob: -11.377480506896973

Token 171: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.10456451773643494
    2. ' in' → logprob: -2.3545644283294678
    3. ':' → logprob: -5.979564666748047
    4. 'iter' → logprob: -7.729564666748047
    5. '   ' → logprob: -8.229564666748047
    6. 'iteration' → logprob: -8.479564666748047
    7. 'range' → logprob: -8.479564666748047
    8. 'i' → logprob: -8.604564666748047
    9. 'n' → logprob: -8.854564666748047
    10. 'p' → logprob: -9.104564666748047

Token 172: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.07890157401561737
    2. 'range' → logprob: -2.578901529312134
    3. ' range' → logprob: -11.953901290893555
    4. ' get' → logprob: -12.453901290893555
    5. '   ' → logprob: -13.828901290893555
    6. ' ' → logprob: -16.203901290893555
    7. '.get' → logprob: -16.203901290893555
    8. '  ' → logprob: -16.328901290893555
    9. '	range' → logprob: -17.078901290893555
    10. '(range' → logprob: -17.453901290893555

Token 173: '_iteration' (ID: 161656)
  Prédit: '_iteration'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_iteration' → logprob: -2.7133641196996905e-05
    2. '_initial' → logprob: -11.00002670288086
    3. '_iterations' → logprob: -12.87502670288086
    4. '_iter' → logprob: -12.87502670288086
    5. '_iterator' → logprob: -13.00002670288086
    6. 'Iteration' → logprob: -13.12502670288086
    7. 'iteration' → logprob: -14.62502670288086
    8. '_direction' → logprob: -15.12502670288086
    9. '_inter' → logprob: -15.87502670288086
    10. '_ITER' → logprob: -17.62502670288086

Token 174: '_range' (ID: 22022)
  Prédit: '_range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_range' → logprob: -0.0010014898143708706
    2. 's' → logprob: -7.501001358032227
    3. 'range' → logprob: -8.626001358032227
    4. '_s' → logprob: -8.751001358032227
    5. '_RANGE' → logprob: -10.501001358032227
    6. '_age' → logprob: -11.376001358032227
    7. '_ranges' → logprob: -11.626001358032227
    8. '   ' → logprob: -11.876001358032227
    9. ' range' → logprob: -12.001001358032227
    10. '_' → logprob: -12.001001358032227

Token 175: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00022690063633490354
    2. '(' → logprob: -8.500226974487305
    3. '(_' → logprob: -12.625226974487305
    4. '(m' → logprob: -13.250226974487305
    5. '(p' → logprob: -13.625226974487305
    6. '(np' → logprob: -13.625226974487305
    7. '(N' → logprob: -13.750226974487305
    8. '(len' → logprob: -13.750226974487305
    9. '(i' → logprob: -13.875226974487305
    10. '(num' → logprob: -14.000226974487305

Token 176: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.10043256729841232
    2. '):' → logprob: -2.3504326343536377
    3. '):

' → logprob: -8.975432395935059
    4. '   ' → logprob: -9.850432395935059
    5. '):
' → logprob: -10.225432395935059
    6. ')' → logprob: -11.725432395935059
    7. ')):
' → logprob: -13.475432395935059
    8. ')):' → logprob: -14.600432395935059
    9. '-' → logprob: -15.600432395935059
    10. '       ' → logprob: -16.100433349609375

Token 177: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.641841820150148e-05
    2. '   ' → logprob: -10.75002670288086
    3. '      ' → logprob: -13.12502670288086
    4. '     ' → logprob: -13.37502670288086
    5. 'p' → logprob: -14.12502670288086
    6. '        ' → logprob: -15.12502670288086
    7. '    ' → logprob: -15.62502670288086
    8. '           ' → logprob: -15.75002670288086
    9. 'd' → logprob: -17.50002670288086
    10. '         ' → logprob: -17.50002670288086

Token 178: ' d' (ID: 272)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023316634818911552
    2. 'p' → logprob: -3.7733166217803955
    3. '   ' → logprob: -10.023316383361816
    4. 'd' (adapté à ' d') → logprob: -10.648316383361816
    5. '      ' → logprob: -14.023316383361816
    6. '     ' → logprob: -14.398316383361816
    7. '           ' → logprob: -14.398316383361816
    8. ' p' → logprob: -14.898316383361816
    9. '        ' → logprob: -15.398316383361816
    10. 'print' → logprob: -15.773316383361816

Token 179: ' =' (ID: 314)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15705808997154236
    2. '=' → logprob: -2.407058000564575
    3. ' =' → logprob: -2.907058000564575
    4. '=get' → logprob: -8.282057762145996
    5. '  ' → logprob: -8.532057762145996
    6. ' ' → logprob: -9.907057762145996
    7. '    ' → logprob: -9.907057762145996
    8. '       ' → logprob: -10.282057762145996
    9. '     ' → logprob: -10.782057762145996
    10. '=d' → logprob: -11.282057762145996

Token 180: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -6.704273118884885e-07
    2. ' get' → logprob: -15.000000953674316
    3. '   ' → logprob: -15.625000953674316
    4. '	get' → logprob: -18.0
    5. '.get' → logprob: -19.125
    6. '(get' → logprob: -21.375
    7. '       ' → logprob: -22.0
    8. '_get' → logprob: -22.0
    9. 'normalize' → logprob: -23.25
    10. '  ' → logprob: -23.375

Token 181: '_direction' (ID: 64332)
  Prédit: '_direction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_direction' → logprob: -5.438573680294212e-06
    2. '_directory' → logprob: -12.750005722045898
    3. '_DIRECTION' → logprob: -13.750005722045898
    4. '_direct' → logprob: -14.000005722045898
    5. 'direction' → logprob: -15.625005722045898
    6. 'Direction' → logprob: -16.6250057220459
    7. '.direction' → logprob: -16.6250057220459
    8. '_dimension' → logprob: -16.7500057220459
    9. '_dir' → logprob: -17.2500057220459
    10. '_iteration' → logprob: -17.5000057220459

Token 182: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: 0.0
    2. '(' → logprob: -17.375
    3. '(P' → logprob: -19.75
    4. '(d' → logprob: -21.0
    5. '(n' → logprob: -21.125
    6. '(m' → logprob: -21.25
    7. '(e' → logprob: -21.5
    8. '(f' → logprob: -21.625
    9. '(pp' → logprob: -21.75
    10. '(pa' → logprob: -21.75

Token 183: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2014842927455902
    2. ')
' → logprob: -1.7014843225479126
    3. '   ' → logprob: -10.451484680175781
    4. ')

' → logprob: -10.826484680175781
    5. ')
' → logprob: -11.576484680175781
    6. ').' → logprob: -11.826484680175781
    7. '       ' → logprob: -12.951484680175781
    8. '))' → logprob: -14.826484680175781
    9. ')`' → logprob: -14.826484680175781
    10. ')d' → logprob: -14.951484680175781

Token 184: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.319370302458992e-06
    2. 'p' → logprob: -12.500005722045898
    3. '   ' → logprob: -14.000005722045898
    4. '      ' → logprob: -15.250005722045898
    5. '     ' → logprob: -15.875005722045898
    6. '           ' → logprob: -16.2500057220459
    7. '        ' → logprob: -16.6250057220459
    8. 'd' → logprob: -17.5000057220459
    9. '    ' → logprob: -18.5000057220459
    10. '        
' → logprob: -18.6250057220459

Token 185: ' d' (ID: 272)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005729567725211382
    2. 'p' → logprob: -5.255729675292969
    3. 'd' (adapté à ' d') → logprob: -7.630729675292969
    4. '   ' → logprob: -11.880729675292969
    5. '      ' → logprob: -13.380729675292969
    6. '     ' → logprob: -13.630729675292969
    7. '        ' → logprob: -15.380729675292969
    8. '           ' → logprob: -15.630729675292969
    9. ' p' → logprob: -16.63072967529297
    10. '    ' → logprob: -16.63072967529297

Token 186: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.028430484235286713
    2. '=' → logprob: -3.653430461883545
    3. '   ' → logprob: -6.903430461883545
    4. ' ' → logprob: -8.653430938720703
    5. 'normalize' → logprob: -8.653430938720703
    6. '.normalize' → logprob: -8.653430938720703
    7. '  ' → logprob: -9.153430938720703
    8. 'orm' → logprob: -9.278430938720703
    9. 'n' → logprob: -9.528430938720703
    10. 'norm' → logprob: -9.528430938720703

Token 187: ' normalize' (ID: 44464)
  Prédit: 'normalize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'normalize' → logprob: -2.0339031834737398e-05
    2. '   ' → logprob: -11.125020027160645
    3. ' normalize' → logprob: -12.125020027160645
    4. 'normal' → logprob: -16.25002098083496
    5. 'norm' → logprob: -16.50002098083496
    6. '.normalize' → logprob: -17.25002098083496
    7. '       ' → logprob: -18.25002098083496
    8. '  ' → logprob: -19.37502098083496
    9. 'normalized' → logprob: -20.00002098083496
    10. ' ' → logprob: -21.00002098083496

Token 188: '_direction' (ID: 64332)
  Prédit: '_direction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_direction' → logprob: -0.00046332005877047777
    2. '_d' → logprob: -8.375463485717773
    3. '_directory' → logprob: -9.875463485717773
    4. '_DIRECTION' → logprob: -10.500463485717773
    5. '"_' → logprob: -10.625463485717773
    6. '_direct' → logprob: -10.875463485717773
    7. '_angle' → logprob: -12.125463485717773
    8. '_dir' → logprob: -12.375463485717773
    9. ''_' → logprob: -12.500463485717773
    10. '}_' → logprob: -12.625463485717773

Token 189: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -4.320199877838604e-07
    2. '(' → logprob: -14.875
    3. '(b' → logprob: -18.25
    4. '(D' → logprob: -19.0
    5. '(e' → logprob: -19.125
    6. '   ' → logprob: -19.375
    7. '(c' → logprob: -19.5
    8. '(de' → logprob: -19.625
    9. '(a' → logprob: -20.125
    10. '(f' → logprob: -20.125

Token 190: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.026719162240624428
    2. ')' → logprob: -3.651719093322754
    3. '   ' → logprob: -8.651719093322754
    4. '       ' → logprob: -8.651719093322754
    5. ')

' → logprob: -10.026719093322754
    6. ')d' → logprob: -11.776719093322754
    7. ').' → logprob: -12.026719093322754
    8. ')
' → logprob: -12.651719093322754
    9. '))
' → logprob: -13.526719093322754
    10. '())
' → logprob: -13.651719093322754

Token 191: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.9361264946837764e-07
    2. 'p' → logprob: -16.125
    3. '   ' → logprob: -17.375
    4. '      ' → logprob: -17.625
    5. '     ' → logprob: -18.375
    6. '        ' → logprob: -19.375
    7. '           ' → logprob: -20.0
    8. '        
' → logprob: -21.0
    9. '    ' → logprob: -21.5
    10. '         ' → logprob: -21.75

Token 192: ' p' (ID: 275)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006716317031532526
    2. 'p' (adapté à ' p') → logprob: -5.006716251373291
    3. '   ' → logprob: -14.13171672821045
    4. '      ' → logprob: -16.131715774536133
    5. '     ' → logprob: -16.381715774536133
    6. ' p' → logprob: -17.256715774536133
    7. '        ' → logprob: -17.881715774536133
    8. '           ' → logprob: -18.256715774536133
    9. 'd' → logprob: -18.381715774536133
    10. '	p' → logprob: -18.756715774536133

Token 193: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -6.945094355614856e-05
    2. '=' → logprob: -10.000069618225098
    3. ' +=' → logprob: -11.125069618225098
    4. '   ' → logprob: -11.750069618225098
    5. ' ' → logprob: -13.750069618225098
    6. '    ' → logprob: -15.875069618225098
    7. '       ' → logprob: -16.12506866455078
    8. '  ' → logprob: -17.00006866455078
    9. '     ' → logprob: -17.50006866455078
    10. '+=' → logprob: -17.75006866455078

Token 194: ' update' (ID: 4027)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' → logprob: -2.339278580620885e-06
    2. ' update' → logprob: -13.000001907348633
    3. '.update' → logprob: -18.375001907348633
    4. '	update' → logprob: -18.375001907348633
    5. '   ' → logprob: -19.750001907348633
    6. '_update' → logprob: -20.625001907348633
    7. '       ' → logprob: -21.000001907348633
    8. 'updated' → logprob: -21.000001907348633
    9. '更新' → logprob: -21.250001907348633
    10. 'Update' → logprob: -22.000001907348633

Token 195: '_position' (ID: 23739)
  Prédit: '_position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_position' → logprob: -0.00010127831774298102
    2. '_pos' → logprob: -10.375101089477539
    3. '_POSITION' → logprob: -11.000101089477539
    4. '_' → logprob: -11.000101089477539
    5. '_post' → logprob: -12.125101089477539
    6. '_positions' → logprob: -12.750101089477539
    7. '   ' → logprob: -13.000101089477539
    8. '_p' → logprob: -13.125101089477539
    9. '_location' → logprob: -13.250101089477539
    10. '_Position' → logprob: -13.375101089477539

Token 196: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -2.45848218582978e-06
    2. '(' → logprob: -13.00000286102295
    3. '(d' → logprob: -17.125001907348633
    4. '(P' → logprob: -19.000001907348633
    5. '(m' → logprob: -19.250001907348633
    6. '(c' → logprob: -19.250001907348633
    7. ' (' → logprob: -19.250001907348633
    8. '(t' → logprob: -19.375001907348633
    9. '(f' → logprob: -19.500001907348633
    10. '(
' → logprob: -19.500001907348633

Token 197: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.45848218582978e-06
    2. ',d' → logprob: -13.12500286102295
    3. ' ,' → logprob: -15.25000286102295
    4. '   ' → logprob: -16.375001907348633
    5. '，' → logprob: -17.500001907348633
    6. ')' → logprob: -18.000001907348633
    7. '       ' → logprob: -18.375001907348633
    8. ' +' → logprob: -18.625001907348633
    9. ',
' → logprob: -19.375001907348633
    10. ' ' → logprob: -19.500001907348633

Token 198: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.580929347255733e-05
    2. 'p' → logprob: -11.125016212463379
    3. ' d' → logprob: -13.875016212463379
    4. '   ' → logprob: -20.000015258789062
    5. '	d' → logprob: -20.875015258789062
    6. '       ' → logprob: -21.625015258789062
    7. '(d' → logprob: -21.625015258789062
    8. ' д' → logprob: -22.000015258789062
    9. ' ' → logprob: -22.500015258789062
    10. '.d' → logprob: -22.500015258789062

Token 199: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.07874656468629837
    2. ')' → logprob: -2.7037465572357178
    3. '       ' → logprob: -4.828746795654297
    4. '   ' → logprob: -7.453746795654297
    5. '           ' → logprob: -9.078746795654297
    6. ')

' → logprob: -9.953746795654297
    7. '         ' → logprob: -11.703746795654297
    8. '))
' → logprob: -12.078746795654297
    9. '     ' → logprob: -12.453746795654297
    10. '())
' → logprob: -12.453746795654297

Token 200: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.8624639324116288e-06
    2. '       ' → logprob: -13.375001907348633
    3. 'return' → logprob: -15.625001907348633
    4. '    
' → logprob: -16.250001907348633
    5. '  ' → logprob: -16.875001907348633
    6. '        
' → logprob: -18.500001907348633
    7. '	return' → logprob: -19.375001907348633
    8. '   ' → logprob: -19.625001907348633
    9. '    ' → logprob: -20.000001907348633
    10. '
' → logprob: -20.375001907348633

Token 201: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001172129064798355
    2. 'return' (adapté à ' return') → logprob: -6.751172065734863
    3. '       ' → logprob: -14.126172065734863
    4. '	return' → logprob: -14.376172065734863
    5. ' return' → logprob: -14.876172065734863
    6. '  ' → logprob: -15.751172065734863
    7. '    
' → logprob: -17.37617301940918
    8. ':return' → logprob: -17.62617301940918
    9. '```' → logprob: -17.87617301940918
    10. '    ' → logprob: -18.25117301940918

Token 202: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0013432084815576673
    2. ' p' → logprob: -6.626343250274658
    3. 'd' → logprob: -11.2513427734375
    4. 'print' → logprob: -13.5013427734375
    5. '   ' → logprob: -14.0013427734375
    6. '(p' → logprob: -14.2513427734375
    7. ' п' → logprob: -14.8763427734375
    8. '	p' → logprob: -15.0013427734375
    9. ' ' → logprob: -16.1263427734375
    10. 'None' → logprob: -16.2513427734375

Token 203: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06776773184537888
    2. '```' → logprob: -3.19276762008667
    3. 'def' → logprob: -4.19276762008667
    4. '       ' → logprob: -5.81776762008667
    5. 'return' → logprob: -5.81776762008667
    6. 'p' → logprob: -6.81776762008667
    7. '<|end|>' → logprob: -6.81776762008667
    8. '`' → logprob: -7.94276762008667
    9. '<|end|>' → logprob: -7.94276762008667
    10. 'n' → logprob: -9.692768096923828

Token 204: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.17304480075836182
    2. '   ' → logprob: -2.9230446815490723
    3. 'p' → logprob: -3.1730446815490723
    4. '```' → logprob: -3.1730446815490723
    5. '<|end|>' → logprob: -4.173044681549072
    6. 'return' → logprob: -6.173044681549072
    7. 'n' → logprob: -6.548044681549072
    8. 'print' → logprob: -7.423044681549072
    9. '       ' → logprob: -7.798044681549072
    10. '<|end|>' → logprob: -8.04804515838623

Token 205: ' main' (ID: 2758)
  Prédit: 'iterate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'iterate' → logprob: -0.010522440075874329
    2. 'process' → logprob: -4.635522365570068
    3. 'main' → logprob: -8.510522842407227
    4. ' iterate' → logprob: -9.260522842407227
    5. 'get' → logprob: -9.385522842407227
    6. 'calculate' → logprob: -9.760522842407227
    7. 'perform' → logprob: -9.885522842407227
    8. 'iter' → logprob: -10.135522842407227
    9. 'print' → logprob: -10.260522842407227
    10. 'execute' → logprob: -10.760522842407227

Token 206: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -6.957014556974173e-05
    2. '():
' → logprob: -10.125069618225098
    3. '()' → logprob: -11.125069618225098
    4. ' ():' → logprob: -11.500069618225098
    5. '():

' → logprob: -13.500069618225098
    6. '(:' → logprob: -13.625069618225098
    7. ':' → logprob: -13.750069618225098
    8. '(":' → logprob: -15.500069618225098
    9. '   ' → logprob: -15.750069618225098
    10. '():
' → logprob: -16.00006866455078

Token 207: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1472419600977446e-06
    2. '  ' → logprob: -14.625000953674316
    3. 'n' → logprob: -14.750000953674316
    4. 'p' → logprob: -15.625000953674316
    5. '    ' → logprob: -18.125001907348633
    6. ' ' → logprob: -18.500001907348633
    7. ' p' → logprob: -19.000001907348633
    8. '	n' → logprob: -19.625001907348633
    9. '	p' → logprob: -19.750001907348633
    10. ' n' → logprob: -20.750001907348633

Token 208: ' while' (ID: 2049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007878691889345646
    2. 'n' → logprob: -5.00787878036499
    3. 'p' → logprob: -6.75787878036499
    4. '  ' → logprob: -14.382878303527832
    5. ' n' → logprob: -15.632878303527832
    6. ' p' → logprob: -15.632878303527832
    7. 'pass' → logprob: -16.63287925720215
    8. 'print' → logprob: -16.88287925720215
    9. '	n' → logprob: -17.25787925720215
    10. '    ' → logprob: -18.00787925720215

Token 209: ' True' (ID: 6432)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1305343508720398
    2. ' True' → logprob: -2.3805344104766846
    3. ' ' → logprob: -4.6305341720581055
    4. 'True' → logprob: -4.7555341720581055
    5. '    ' → logprob: -5.6305341720581055
    6. '  ' → logprob: -6.1305341720581055
    7. 'continue' → logprob: -6.3805341720581055
    8. '       ' → logprob: -6.3805341720581055
    9. ' continue' → logprob: -6.5055341720581055
    10. '     ' → logprob: -7.8805341720581055

Token 210: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0692114308476448
    2. ':
' → logprob: -2.819211483001709
    3. '   ' → logprob: -5.069211483001709
    4. '       ' → logprob: -7.319211483001709
    5. ':

' → logprob: -9.81921100616455
    6. '():' → logprob: -10.06921100616455
    7. '():
' → logprob: -10.44421100616455
    8. ':\' → logprob: -10.56921100616455
    9. '":' → logprob: -10.69421100616455
    10. ':`' → logprob: -10.81921100616455

Token 211: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.8193366486229934e-05
    2. '   ' → logprob: -11.625018119812012
    3. 'n' → logprob: -11.875018119812012
    4. '      ' → logprob: -14.000018119812012
    5. '     ' → logprob: -14.125018119812012
    6. '        ' → logprob: -14.875018119812012
    7. '           ' → logprob: -16.000019073486328
    8. '    ' → logprob: -16.625019073486328
    9. 'if' → logprob: -17.250019073486328
    10. 'p' → logprob: -17.500019073486328

Token 212: ' n' (ID: 297)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01221999991685152
    2. 'n' (adapté à ' n') → logprob: -4.5122199058532715
    3. '           ' → logprob: -6.7622199058532715
    4. '   ' → logprob: -11.88722038269043
    5. 'if' → logprob: -12.13722038269043
    6. 'print' → logprob: -14.38722038269043
    7. 'process' → logprob: -14.76222038269043
    8. '        ' → logprob: -14.88722038269043
    9. '         ' → logprob: -15.26222038269043
    10. ' n' → logprob: -15.26222038269043

Token 213: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.022922342643141747
    2. '=' → logprob: -4.397922515869141
    3. '       ' → logprob: -5.147922515869141
    4. '   ' → logprob: -5.522922515869141
    5. ':' → logprob: -8.14792251586914
    6. '=int' → logprob: -9.14792251586914
    7. '    ' → logprob: -10.52292251586914
    8. ',' → logprob: -10.64792251586914
    9. '=input' → logprob: -10.89792251586914
    10. '     ' → logprob: -10.89792251586914

Token 214: ' process' (ID: 2273)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -1.3306015716807451e-05
    2. ' process' → logprob: -11.25001335144043
    3. 'read' → logprob: -15.50001335144043
    4. '       ' → logprob: -16.25001335144043
    5. '.process' → logprob: -17.75001335144043
    6. '	process' → logprob: -18.37501335144043
    7. '_process' → logprob: -18.87501335144043
    8. 'Process' → logprob: -19.50001335144043
    9. '   ' → logprob: -20.25001335144043
    10. 'input' → logprob: -20.37501335144043

Token 215: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -4.632542913896032e-05
    2. '_INPUT' → logprob: -11.500046730041504
    3. '_in' → logprob: -11.625046730041504
    4. '"_' → logprob: -12.250046730041504
    5. '_inputs' → logprob: -12.500046730041504
    6. '_output' → logprob: -13.000046730041504
    7. '_int' → logprob: -13.375046730041504
    8. '       ' → logprob: -13.625046730041504
    9. 'input' → logprob: -13.625046730041504
    10. '_Input' → logprob: -13.625046730041504

Token 216: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0030135957058519125
    2. '()
' → logprob: -5.878013610839844
    3. '       ' → logprob: -8.878013610839844
    4. '   ' → logprob: -10.378013610839844
    5. '()`' → logprob: -11.503013610839844
    6. '()

' → logprob: -11.753013610839844
    7. '().' → logprob: -12.753013610839844
    8. '__()
' → logprob: -12.753013610839844
    9. '()
' → logprob: -12.878013610839844
    10. '()\' → logprob: -12.878013610839844

Token 217: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.128163257315464e-07
    2. '      ' → logprob: -16.375
    3. 'if' → logprob: -17.0
    4. '   ' → logprob: -17.25
    5. '     ' → logprob: -17.625
    6. '        ' → logprob: -17.625
    7. '           ' → logprob: -18.0
    8. '        
' → logprob: -19.375
    9. '               ' → logprob: -20.25
    10. '         ' → logprob: -20.625

Token 218: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2352385965641588e-05
    2. 'if' (adapté à ' if') → logprob: -11.375012397766113
    3. '   ' → logprob: -14.250012397766113
    4. '     ' → logprob: -16.375011444091797
    5. '      ' → logprob: -16.625011444091797
    6. '           ' → logprob: -18.125011444091797
    7. '        ' → logprob: -18.250011444091797
    8. '    ' → logprob: -20.375011444091797
    9. '               ' → logprob: -20.625011444091797
    10. '         ' → logprob: -20.875011444091797

Token 219: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.10600462555885315
    2. 'should' → logprob: -2.7310047149658203
    3. '       ' → logprob: -3.6060047149658203
    4. '   ' → logprob: -5.23100471496582
    5. ' not' → logprob: -6.23100471496582
    6. '           ' → logprob: -7.10600471496582
    7. '               ' → logprob: -10.23100471496582
    8. ' should' → logprob: -10.48100471496582
    9. '!' → logprob: -11.10600471496582
    10. '	not' → logprob: -11.35600471496582

Token 220: ' should' (ID: 1757)
  Prédit: 'should'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'should' → logprob: -4.320199877838604e-07
    2. ' should' → logprob: -15.25
    3. '.should' → logprob: -16.0
    4. 'shall' → logprob: -17.75
    5. '   ' → logprob: -18.25
    6. '_should' → logprob: -18.875
    7. '       ' → logprob: -20.875
    8. 'sure' → logprob: -21.375
    9. 'Should' → logprob: -21.875
    10. '应该' → logprob: -22.5

Token 221: '_continue' (ID: 188911)
  Prédit: '_continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_continue' → logprob: -0.001118307700380683
    2. 'continue' → logprob: -6.876118183135986
    3. '_cont' → logprob: -10.126118659973145
    4. 'Continue' → logprob: -10.501118659973145
    5. '       ' → logprob: -11.251118659973145
    6. '_CONT' → logprob: -13.001118659973145
    7. ' continue' → logprob: -14.501118659973145
    8. '继续' → logprob: -14.626118659973145
    9. '	continue' → logprob: -14.751118659973145
    10. '_repeat' → logprob: -15.626118659973145

Token 222: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -16.0
    3. '(m' → logprob: -18.625
    4. '(N' → logprob: -19.5
    5. 'n' → logprob: -19.875
    6. ' (' → logprob: -20.0
    7. '(num' → logprob: -20.5
    8. '(a' → logprob: -20.5
    9. '(nn' → logprob: -20.875
    10. '(nt' → logprob: -20.875

Token 223: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.011090856045484543
    2. '):' → logprob: -4.5110907554626465
    3. '):
' → logprob: -10.761091232299805
    4. '):

' → logprob: -10.886091232299805
    5. ')' → logprob: -13.511091232299805
    6. ')):
' → logprob: -13.886091232299805
    7. '   ' → logprob: -15.011091232299805
    8. '       ' → logprob: -15.761091232299805
    9. '"):
' → logprob: -16.136091232299805
    10. ''):
' → logprob: -16.636091232299805

Token 224: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -4.127333340875339e-06
    2. '          ' → logprob: -13.750003814697266
    3. '         ' → logprob: -13.875003814697266
    4. 'break' → logprob: -13.875003814697266
    5. '       ' → logprob: -14.625003814697266
    6. '               ' → logprob: -15.000003814697266
    7. '            ' → logprob: -15.250003814697266
    8. '             ' → logprob: -17.250003814697266
    9. '   ' → logprob: -18.250003814697266
    10. '        ' → logprob: -18.625003814697266

Token 225: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.011082838289439678
    2. '           ' → logprob: -4.511082649230957
    3. ' break' → logprob: -10.511082649230957
    4. 'return' → logprob: -12.636082649230957
    5. 'print' → logprob: -12.636082649230957
    6. '               ' → logprob: -13.886082649230957
    7. 'Break' → logprob: -15.886082649230957
    8. 'bre' → logprob: -16.261083602905273
    9. '       ' → logprob: -16.761083602905273
    10. 'continue' → logprob: -17.011083602905273

Token 226: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005556552205234766
    2. '   ' → logprob: -7.500555515289307
    3. '           ' → logprob: -13.625555992126465
    4. '      ' → logprob: -14.250555992126465
    5. '     ' → logprob: -14.500555992126465
    6. '        ' → logprob: -15.875555992126465
    7. '    ' → logprob: -16.50055503845215
    8. '  ' → logprob: -16.75055503845215
    9. '         ' → logprob: -17.75055503845215
    10. 'print' → logprob: -17.75055503845215

Token 227: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.038046084344387054
    2. '   ' → logprob: -3.28804612159729
    3. '           ' → logprob: -13.538045883178711
    4. '     ' → logprob: -14.038045883178711
    5. 'p' → logprob: -14.163045883178711
    6. '      ' → logprob: -14.288045883178711
    7. '  ' → logprob: -14.788045883178711
    8. '    ' → logprob: -15.038045883178711
    9. 'print' → logprob: -15.163045883178711
    10. '        ' → logprob: -16.03804588317871

Token 228: ' p' (ID: 275)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00020520923135336488
    2. 'p' (adapté à ' p') → logprob: -8.500205039978027
    3. '   ' → logprob: -13.375205039978027
    4. '      ' → logprob: -16.500205993652344
    5. '           ' → logprob: -16.750205993652344
    6. '     ' → logprob: -16.875205993652344
    7. '        ' → logprob: -17.875205993652344
    8. 'print' → logprob: -18.750205993652344
    9. ' p' → logprob: -19.500205993652344
    10. '               ' → logprob: -19.625205993652344

Token 229: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0013307139743119478
    2. '=' → logprob: -6.626330852508545
    3. '   ' → logprob: -12.751330375671387
    4. ' ' → logprob: -13.376330375671387
    5. '  ' → logprob: -15.751330375671387
    6. '       ' → logprob: -16.876331329345703
    7. '    ' → logprob: -16.876331329345703
    8. '     ' → logprob: -18.251331329345703
    9. '=get' → logprob: -18.376331329345703
    10. '=int' → logprob: -18.626331329345703

Token 230: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: 0.0
    2. ' get' → logprob: -17.25
    3. '.get' → logprob: -20.75
    4. '	get' → logprob: -21.0
    5. '_get' → logprob: -23.25
    6. 'gete' → logprob: -23.5
    7. '(get' → logprob: -24.0
    8. 'ge' → logprob: -24.625
    9. '   ' → logprob: -25.0
    10. 'gett' → logprob: -25.125

Token 231: '_initial' (ID: 45740)
  Prédit: '_initial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_initial' → logprob: 0.0
    2. '_INITIAL' → logprob: -17.0
    3. '_init' → logprob: -18.125
    4. '初' → logprob: -19.25
    5. '_initialized' → logprob: -19.75
    6. '_in' → logprob: -20.375
    7. 'initial' → logprob: -20.625
    8. '	initial' → logprob: -20.625
    9. 'Initial' → logprob: -21.125
    10. '.initial' → logprob: -21.125

Token 232: '_point' (ID: 15466)
  Prédit: '_point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_point' → logprob: -1.0445127372804563e-05
    2. '_POINT' → logprob: -12.00001049041748
    3. 'Point' → logprob: -14.25001049041748
    4. '_points' → logprob: -14.25001049041748
    5. '_pointer' → logprob: -14.62501049041748
    6. '_position' → logprob: -14.62501049041748
    7. '_Point' → logprob: -14.87501049041748
    8. 'point' → logprob: -15.00001049041748
    9. '_line' → logprob: -15.50001049041748
    10. '-point' → logprob: -15.75001049041748

Token 233: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -4.096126576769166e-05
    2. '()
' → logprob: -10.750041007995605
    3. '()`' → logprob: -11.875041007995605
    4. '().' → logprob: -12.625041007995605
    5. '   ' → logprob: -13.000041007995605
    6. '()(' → logprob: -13.625041007995605
    7. '       ' → logprob: -13.875041007995605
    8. '()

' → logprob: -13.875041007995605
    9. '()\' → logprob: -14.125041007995605
    10. '(' → logprob: -14.375041007995605

Token 234: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.320199877838604e-07
    2. '   ' → logprob: -16.125
    3. '      ' → logprob: -16.125
    4. 'p' → logprob: -16.375
    5. '     ' → logprob: -17.375
    6. '        ' → logprob: -17.75
    7. '           ' → logprob: -18.5
    8. '    ' → logprob: -20.125
    9. '         ' → logprob: -20.125
    10. '```' → logprob: -20.25

Token 235: ' p' (ID: 275)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008614808320999146
    2. 'p' (adapté à ' p') → logprob: -4.758615016937256
    3. '      ' → logprob: -15.883614540100098
    4. '   ' → logprob: -16.008615493774414
    5. '     ' → logprob: -17.008615493774414
    6. 'print' → logprob: -17.508615493774414
    7. '        ' → logprob: -17.508615493774414
    8. ' p' → logprob: -18.258615493774414
    9. '           ' → logprob: -18.258615493774414
    10. '        
' → logprob: -19.758615493774414

Token 236: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04859054833650589
    2. '=' → logprob: -3.048590660095215
    3. '   ' → logprob: -13.673590660095215
    4. ' ' → logprob: -14.798590660095215
    5. ' +=' → logprob: -15.048590660095215
    6. '=d' → logprob: -15.298590660095215
    7. '=p' → logprob: -15.548590660095215
    8. '       ' → logprob: -15.673590660095215
    9. '+=' → logprob: -15.923590660095215
    10. '=`' → logprob: -16.2985897064209

Token 237: ' iterate' (ID: 63166)
  Prédit: 'iterate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iterate' → logprob: -8.554343366995454e-05
    2. ' iterate' → logprob: -9.375085830688477
    3. 'iter' → logprob: -14.500085830688477
    4. '   ' → logprob: -18.250085830688477
    5. 'iterator' → logprob: -18.250085830688477
    6. 'Iter' → logprob: -18.375085830688477
    7. 'itter' → logprob: -19.000085830688477
    8. '_iter' → logprob: -19.625085830688477
    9. 'ite' → logprob: -19.750085830688477
    10. 'itate' → logprob: -20.000085830688477

Token 238: '_point' (ID: 15466)
  Prédit: '_point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_point' → logprob: -0.001969673437997699
    2. '   ' → logprob: -6.751969814300537
    3. '_position' → logprob: -8.251969337463379
    4. '       ' → logprob: -8.251969337463379
    5. '_points' → logprob: -9.626969337463379
    6. '_POINT' → logprob: -10.126969337463379
    7. '_' → logprob: -11.001969337463379
    8. '"_' → logprob: -11.126969337463379
    9. '_Point' → logprob: -11.376969337463379
    10. '_pointer' → logprob: -11.376969337463379

Token 239: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -2.963691804325208e-05
    2. '(' → logprob: -10.750029563903809
    3. '(p' → logprob: -11.875029563903809
    4. '(m' → logprob: -14.750029563903809
    5. '(np' → logprob: -15.875029563903809
    6. '(a' → logprob: -16.625030517578125
    7. 'n' → logprob: -17.125030517578125
    8. '(t' → logprob: -17.125030517578125
    9. '(e' → logprob: -17.250030517578125
    10. '(i' → logprob: -17.250030517578125

Token 240: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005384230054914951
    2. ')' → logprob: -5.25538444519043
    3. '       ' → logprob: -9.63038444519043
    4. '   ' → logprob: -10.25538444519043
    5. ')
' → logprob: -10.50538444519043
    6. '),' → logprob: -11.38038444519043
    7. ',p' → logprob: -13.00538444519043
    8. ',)' → logprob: -13.25538444519043
    9. ')

' → logprob: -13.50538444519043
    10. '           ' → logprob: -13.50538444519043

Token 241: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0001584850688232109
    2. ' p' → logprob: -8.750158309936523
    3. '	p' → logprob: -18.500158309936523
    4. '   ' → logprob: -20.750158309936523
    5. '(p' → logprob: -20.875158309936523
    6. ')p' → logprob: -21.125158309936523
    7. '.p' → logprob: -21.625158309936523
    8. ' п' → logprob: -22.125158309936523
    9. '<p' → logprob: -22.125158309936523
    10. '$p' → logprob: -22.250158309936523

Token 242: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.05606869235634804
    2. ')' → logprob: -3.0560686588287354
    3. '       ' → logprob: -4.9310688972473145
    4. '   ' → logprob: -8.556068420410156
    5. ')

' → logprob: -10.681068420410156
    6. '           ' → logprob: -11.556068420410156
    7. ')
' → logprob: -12.306068420410156
    8. '     ' → logprob: -13.806068420410156
    9. '         ' → logprob: -13.931068420410156
    10. '      ' → logprob: -14.931068420410156

Token 243: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.438573680294212e-06
    2. 'print' → logprob: -12.625005722045898
    3. '   ' → logprob: -13.125005722045898
    4. '      ' → logprob: -16.7500057220459
    5. '     ' → logprob: -17.8750057220459
    6. '           ' → logprob: -18.6250057220459
    7. '        ' → logprob: -18.8750057220459
    8. '    ' → logprob: -20.5000057220459
    9. '               ' → logprob: -20.6250057220459
    10. ' print' → logprob: -20.8750057220459

Token 244: ' print' (ID: 2123)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4740801155567169
    2. 'print' (adapté à ' print') → logprob: -0.9740800857543945
    3. ' print' → logprob: -12.849080085754395
    4. '   ' → logprob: -15.599080085754395
    5. '.print' → logprob: -15.599080085754395
    6. '	print' → logprob: -16.22408103942871
    7. '      ' → logprob: -16.97408103942871
    8. '     ' → logprob: -17.59908103942871
    9. '_print' → logprob: -17.97408103942871
    10. '           ' → logprob: -18.22408103942871

Token 245: '_results' (ID: 31049)
  Prédit: '_results'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_results' → logprob: -0.00011808603449026123
    2. '("_' → logprob: -9.375118255615234
    3. '_RESULTS' → logprob: -11.125118255615234
    4. 'Results' → logprob: -12.125118255615234
    5. '('_' → logprob: -12.250118255615234
    6. '_result' → logprob: -13.125118255615234
    7. 'results' → logprob: -13.625118255615234
    8. '_scores' → logprob: -14.375118255615234
    9. '_outputs' → logprob: -14.500118255615234
    10. '(_' → logprob: -14.500118255615234

Token 246: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -1.3782830137643032e-05
    2. '(' → logprob: -11.25001335144043
    3. '(m' → logprob: -16.00001335144043
    4. '(pp' → logprob: -16.50001335144043
    5. '(np' → logprob: -17.00001335144043
    6. '(n' → logprob: -17.00001335144043
    7. '   ' → logprob: -17.12501335144043
    8. ' (' → logprob: -17.25001335144043
    9. '(pr' → logprob: -17.37501335144043
    10. '(pe' → logprob: -17.37501335144043

Token 247: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.4849443838757e-06
    2. '```' → logprob: -13.625004768371582
    3. ')`' → logprob: -14.125004768371582
    4. '   ' → logprob: -14.125004768371582
    5. ')
' → logprob: -14.500004768371582
    6. '))' → logprob: -14.750004768371582
    7. '       ' → logprob: -15.000004768371582
    8. '())' → logprob: -15.250004768371582
    9. ')

' → logprob: -16.250003814697266
    10. ' )' → logprob: -16.500003814697266

Token 248: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.38801732659339905
    2. 'if' → logprob: -1.1380172967910767
    3. '   ' → logprob: -7.263017177581787
    4. '```' → logprob: -8.638017654418945
    5. 'def' → logprob: -9.013017654418945
    6. 'print' → logprob: -9.513017654418945
    7. '#' → logprob: -10.638017654418945
    8. '"""' → logprob: -11.638017654418945
    9. 'Main' → logprob: -12.263017654418945
    10. '}' → logprob: -12.263017654418945

Token 249: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -8.895480277715251e-06
    2. '()(' → logprob: -12.625008583068848
    3. '()`' → logprob: -12.875008583068848
    4. '(' → logprob: -13.125008583068848
    5. '()
' → logprob: -15.750008583068848
    6. '().' → logprob: -15.750008583068848
    7. '())' → logprob: -16.125009536743164
    8. ' ()' → logprob: -16.625009536743164
    9. '()"' → logprob: -16.625009536743164
    10. ']()' → logprob: -16.625009536743164


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 247
Tokens correctement prédits (1ère position, stricte): 100
Tokens correctement prédits (1ère position, avec adaptation): 109
Tokens correctement prédits (top 10): 195
Précision stricte (1ère position): 40.49%
Précision adaptée (1ère position): 44.13%
Précision (top 10): 78.95%
================================================================================
