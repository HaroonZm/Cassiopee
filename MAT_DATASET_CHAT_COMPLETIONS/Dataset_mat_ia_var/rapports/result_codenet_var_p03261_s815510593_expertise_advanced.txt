================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:08:43
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from sys import stdin

def main():
    lines = iter(stdin.read().split())
    n = int(next(lines))
    words = [next(lines) for _ in range(n)]

    if len(set(words)) != n or any(w1[-1] != w2[0] for w1, w2 in zip(words, words[1:])):
        print("No")
    else:
        print("Yes")

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' stdin' (ID: 75143)
  Prédit: 'argv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'argv' → logprob: -0.05142802372574806
    2. ' argv' → logprob: -3.4264280796051025
    3. 'exit' → logprob: -4.176427841186523
    4. ' exit' → logprob: -6.801427841186523
    5. 'stdout' → logprob: -7.301427841186523
    6. 'stdin' → logprob: -8.426427841186523
    7. 'path' → logprob: -8.801427841186523
    8. 'import' → logprob: -10.176427841186523
    9. 'stderr' → logprob: -10.426427841186523
    10. 'version' → logprob: -10.676427841186523

Token 4: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0006454797694459558
    2. '.readline' → logprob: -8.250645637512207
    3. '\n' → logprob: -8.500645637512207
    4. '.
' → logprob: -10.125645637512207
    5. 'import' → logprob: -10.250645637512207
    6. '\' → logprob: -10.375645637512207
    7. '```' → logprob: -10.875645637512207
    8. '.read' → logprob: -10.875645637512207
    9. '' → logprob: -12.000645637512207
    10. ',' → logprob: -12.125645637512207

Token 5: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.026680389419198036
    2. '.readline' → logprob: -3.9016804695129395
    3. '.read' → logprob: -6.2766804695129395
    4. '\n' → logprob: -7.0266804695129395
    5. ',' → logprob: -7.4016804695129395
    6. 'for' → logprob: -7.5266804695129395
    7. 'print' → logprob: -7.7766804695129395
    8. 'import' → logprob: -7.9016804695129395
    9. '
' → logprob: -8.151679992675781
    10. '```' → logprob: -8.276679992675781

Token 6: ' main' (ID: 2758)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07206425070762634
    2. ' read' → logprob: -2.822064161300659
    3. ' process' → logprob: -5.572064399719238
    4. '_read' → logprob: -6.697064399719238
    5. ' readline' → logprob: -7.072064399719238
    6. ' ' → logprob: -7.197064399719238
    7. ' space' → logprob: -7.197064399719238
    8. ' parse' → logprob: -7.447064399719238
    9. 'read' → logprob: -8.197064399719238
    10. ' main' → logprob: -8.322064399719238

Token 7: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11979860067367554
    2. '():' → logprob: -2.3697986602783203
    3. ':' → logprob: -4.24479866027832
    4. '(:' → logprob: -5.36979866027832
    5. '```' → logprob: -9.61979866027832
    6. '):' → logprob: -9.74479866027832
    7. '(":' → logprob: -9.74479866027832
    8. ' (' → logprob: -9.86979866027832
    9. '(
' → logprob: -10.36979866027832
    10. ' ():' → logprob: -10.49479866027832

Token 8: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006648583337664604
    2. ':' → logprob: -5.881648540496826
    3. '(' → logprob: -6.756648540496826
    4. '    ' → logprob: -7.506648540496826
    5. 'print' → logprob: -7.756648540496826
    6. '    
' → logprob: -8.506649017333984
    7. ' ' → logprob: -8.506649017333984
    8. '(stdin' → logprob: -8.506649017333984
    9. '\' → logprob: -8.631649017333984
    10. '```' → logprob: -8.756649017333984

Token 9: ' lines' (ID: 8698)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -1.1997177600860596
    2. 'for' → logprob: -1.1997177600860596
    3. '   ' → logprob: -1.9497177600860596
    4. ' for' → logprob: -1.9497177600860596
    5. ' data' → logprob: -3.0747177600860596
    6. 'n' → logprob: -3.4497177600860596
    7. 'line' → logprob: -4.6997175216674805
    8. 'input' → logprob: -4.9497175216674805
    9. ' line' → logprob: -5.0747175216674805
    10. ' ' → logprob: -5.8247175216674805

Token 10: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011588136665523052
    2. '=' → logprob: -4.636588096618652
    3. '.' → logprob: -6.636588096618652
    4. '.append' → logprob: -8.386588096618652
    5. '.readline' → logprob: -9.261588096618652
    6. ')' → logprob: -10.261588096618652
    7. '[:]' → logprob: -10.511588096618652
    8. '[' → logprob: -11.011588096618652
    9. '=[]' → logprob: -11.136588096618652
    10. '.extend' → logprob: -11.136588096618652

Token 11: ' iter' (ID: 10621)
  Prédit: ' stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' stdin' → logprob: -0.05557456612586975
    2. 'stdin' → logprob: -2.930574655532837
    3. '(stdin' → logprob: -7.805574417114258
    4. '.stdin' → logprob: -8.305574417114258
    5. ' []' → logprob: -11.055574417114258
    6. '[]' → logprob: -11.680574417114258
    7. ' list' → logprob: -12.180574417114258
    8. '   ' → logprob: -13.305574417114258
    9. ' std' → logprob: -13.555574417114258
    10. ' [' → logprob: -13.680574417114258

Token 12: '(stdin' (ID: 176594)
  Prédit: '(stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(stdin' → logprob: -0.038277413696050644
    2. '(' → logprob: -3.2882773876190186
    3. '(st' → logprob: -8.663277626037598
    4. '(std' → logprob: -10.163277626037598
    5. '(stdout' → logprob: -11.788277626037598
    6. '(lines' → logprob: -12.163277626037598
    7. '(
' → logprob: -12.538277626037598
    8. '(stderr' → logprob: -13.413277626037598
    9. '(input' → logprob: -13.663277626037598
    10. '(s' → logprob: -13.788277626037598

Token 13: '.read' (ID: 7211)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.21688462793827057
    2. ')' → logprob: -1.7168846130371094
    3. '.readlines' → logprob: -4.216884613037109
    4. '.' → logprob: -7.716884613037109
    5. '.read' → logprob: -9.34188461303711
    6. '))' → logprob: -9.96688461303711
    7. '.)' → logprob: -11.09188461303711
    8. ').' → logprob: -12.34188461303711
    9. '())' → logprob: -13.34188461303711
    10. ' readline' → logprob: -14.09188461303711

Token 14: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.019011054188013077
    2. '()' → logprob: -4.0190110206604
    3. '().' → logprob: -7.2690110206604
    4. ')' → logprob: -8.894011497497559
    5. ' ())' → logprob: -11.019011497497559
    6. 'lines' → logprob: -12.769011497497559
    7. '(' → logprob: -13.144011497497559
    8. 'line' → logprob: -13.769011497497559
    9. '());' → logprob: -14.269011497497559
    10. '();)' → logprob: -14.394011497497559

Token 15: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.01109545398503542
    2. 'strip' → logprob: -4.5110955238342285
    3. 'decode' → logprob: -10.26109504699707
    4. 'rstrip' → logprob: -12.01109504699707
    5. 'read' → logprob: -13.13609504699707
    6. ' split' → logprob: -13.26109504699707
    7. '```' → logprob: -13.38609504699707
    8. ')' → logprob: -14.01109504699707
    9. '(split' → logprob: -15.13609504699707
    10. 'lines' → logprob: -16.76109504699707

Token 16: '())
' (ID: 4574)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.08222383260726929
    2. '('' → logprob: -3.457223892211914
    3. '('\' → logprob: -3.457223892211914
    4. '()' → logprob: -4.332223892211914
    5. '())' → logprob: -6.707223892211914
    6. '("("' → logprob: -7.457223892211914
    7. '(' → logprob: -7.457223892211914
    8. '("\' → logprob: -8.332223892211914
    9. '("' → logprob: -10.207223892211914
    10. 'line' → logprob: -10.332223892211914

Token 17: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38188832998275757
    2. 'for' → logprob: -1.6318883895874023
    3. ' for' → logprob: -2.6318883895874023
    4. ':' → logprob: -4.131888389587402
    5. '    
' → logprob: -4.756888389587402
    6. ')' → logprob: -4.881888389587402
    7. '.' → logprob: -5.756888389587402
    8. ' ' → logprob: -6.131888389587402
    9. '()' → logprob: -6.381888389587402
    10. '```' → logprob: -6.381888389587402

Token 18: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.3181278705596924
    2. 'for' → logprob: -1.9431278705596924
    3. 'a' → logprob: -3.4431278705596924
    4. 'x' → logprob: -3.8181278705596924
    5. 'word' → logprob: -4.443127632141113
    6. '   ' → logprob: -4.568127632141113
    7. 'try' → logprob: -4.693127632141113
    8. 'w' → logprob: -4.943127632141113
    9. 'i' → logprob: -5.318127632141113
    10. '_' → logprob: -5.443127632141113

Token 19: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17458170652389526
    2. '=' → logprob: -1.92458176612854
    3. ' ' → logprob: -4.924581527709961
    4. '_' → logprob: -6.049581527709961
    5. ')' → logprob: -6.549581527709961
    6. ',' → logprob: -6.799581527709961
    7. '  ' → logprob: -7.049581527709961
    8. '.' → logprob: -8.049581527709961
    9. '_space' → logprob: -8.299581527709961
    10. 'space' → logprob: -9.174581527709961

Token 20: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.4760143756866455
    2. 'int' → logprob: -0.9760143756866455
    3. ' next' → logprob: -6.351014137268066
    4. 'next' → logprob: -8.601014137268066
    5. ' ' → logprob: -12.101014137268066
    6. '  ' → logprob: -14.601014137268066
    7. '   ' → logprob: -15.851014137268066
    8. '(int' → logprob: -16.476015090942383
    9. '	int' → logprob: -16.476015090942383
    10. '10' → logprob: -17.101015090942383

Token 21: '(next' (ID: 28757)
  Prédit: '(lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lines' → logprob: -0.011491859331727028
    2. '(' → logprob: -4.511491775512695
    3. '(next' → logprob: -7.761491775512695
    4. '(line' → logprob: -11.136491775512695
    5. '(n' → logprob: -13.886491775512695
    6. '(tokens' → logprob: -14.636491775512695
    7. '(
' → logprob: -14.886491775512695
    8. 'lines' → logprob: -15.011491775512695
    9. ' (' → logprob: -15.261491775512695
    10. '((' → logprob: -15.386491775512695

Token 22: '(lines' (ID: 73839)
  Prédit: '(lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lines' → logprob: -0.0046334033831954
    2. '(' → logprob: -5.37963342666626
    3. '(n' → logprob: -12.129632949829102
    4. ' (' → logprob: -13.004632949829102
    5. '()' → logprob: -13.879632949829102
    6. ' ' → logprob: -13.879632949829102
    7. '(line' → logprob: -14.254632949829102
    8. '(stdin' → logprob: -14.379632949829102
    9. '(l' → logprob: -15.129632949829102
    10. '(
' → logprob: -15.504632949829102

Token 23: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.5760593414306641
    2. ')' → logprob: -0.8260593414306641
    3. '()))' → logprob: -9.951059341430664
    4. '())' → logprob: -10.326059341430664
    5. '()' → logprob: -11.326059341430664
    6. ')))' → logprob: -11.701059341430664
    7. '))
' → logprob: -11.826059341430664
    8. ')
' → logprob: -11.951059341430664
    9. ' ))' → logprob: -13.451059341430664
    10. '),' → logprob: -13.701059341430664

Token 24: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20113502442836761
    2. ' ' → logprob: -2.3261349201202393
    3. ')' → logprob: -3.3261349201202393
    4. '    ' → logprob: -4.076135158538818
    5. '    
' → logprob: -4.451135158538818
    6. 'for' → logprob: -5.076135158538818
    7. '  ' → logprob: -5.701135158538818
    8. '\n' → logprob: -6.201135158538818
    9. ' for' → logprob: -6.451135158538818
    10. '   
' → logprob: -7.076135158538818

Token 25: ' words' (ID: 6391)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.865777313709259
    2. 'for' → logprob: -1.7407772541046143
    3. ' ' → logprob: -1.8657772541046143
    4. '   ' → logprob: -2.4907772541046143
    5. 'a' → logprob: -2.7407772541046143
    6. 'd' → logprob: -3.7407772541046143
    7. 's' → logprob: -4.240777492523193
    8. '    ' → logprob: -4.615777492523193
    9. ' for' → logprob: -4.865777492523193
    10. 'r' → logprob: -5.240777492523193

Token 26: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08353563398122787
    2. '=' → logprob: -2.583535671234131
    3. '.' → logprob: -6.333535671234131
    4. '_' → logprob: -6.958535671234131
    5. '.append' → logprob: -7.083535671234131
    6. ')' → logprob: -7.708535671234131
    7. '   ' → logprob: -8.583535194396973
    8. '[' → logprob: -8.833535194396973
    9. ' ' → logprob: -9.458535194396973
    10. '=[]' → logprob: -9.583535194396973

Token 27: ' [' (ID: 723)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.7116340398788452
    2. '[' → logprob: -1.3366340398788452
    3. '[next' → logprob: -1.7116340398788452
    4. ' [' → logprob: -3.4616341590881348
    5. '[int' → logprob: -4.086634159088135
    6. '[]' → logprob: -4.711634159088135
    7. '[n' → logprob: -5.461634159088135
    8. ' []' → logprob: -6.836634159088135
    9. 'list' → logprob: -7.086634159088135
    10. '[len' → logprob: -7.211634159088135

Token 28: 'next' (ID: 7311)
  Prédit: 'next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.0008327359100803733
    2. ' next' → logprob: -7.625832557678223
    3. 'int' → logprob: -8.250832557678223
    4. 'str' → logprob: -10.000832557678223
    5. '(next' → logprob: -10.375832557678223
    6. '   ' → logprob: -13.125832557678223
    7. '[next' → logprob: -13.125832557678223
    8. 'word' → logprob: -13.500832557678223
    9. '.next' → logprob: -14.875832557678223
    10. '	next' → logprob: -15.250832557678223

Token 29: '(lines' (ID: 73839)
  Prédit: '(lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lines' → logprob: -2.2200749754119897e-06
    2. '(words' → logprob: -13.500001907348633
    3. '(' → logprob: -14.625001907348633
    4. ' lines' → logprob: -16.125001907348633
    5. '	lines' → logprob: -16.250001907348633
    6. 'lines' → logprob: -16.875001907348633
    7. '(line' → logprob: -18.500001907348633
    8. '(tokens' → logprob: -18.875001907348633
    9. ' (' → logprob: -19.000001907348633
    10. '(strings' → logprob: -19.625001907348633

Token 30: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006196353584527969
    2. '())' → logprob: -5.13119649887085
    3. ')]' → logprob: -8.506196022033691
    4. '()' → logprob: -9.756196022033691
    5. '))' → logprob: -13.006196022033691
    6. ' )' → logprob: -13.381196022033691
    7. '()]' → logprob: -13.756196022033691
    8. ')
' → logprob: -14.131196022033691
    9. ')`' → logprob: -14.881196022033691
    10. ']' → logprob: -15.381196022033691

Token 31: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1431661993265152
    2. ' for' → logprob: -2.3931663036346436
    3. 'for' → logprob: -3.5181663036346436
    4. '()' → logprob: -4.6431660652160645
    5. ')]' → logprob: -6.6431660652160645
    6. ' )' → logprob: -7.3931660652160645
    7. ' ' → logprob: -8.268166542053223
    8. '   ' → logprob: -8.268166542053223
    9. ']' → logprob: -8.768166542053223
    10. '())' → logprob: -9.518166542053223

Token 32: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.23440749943256378
    2. ' _' → logprob: -1.7344075441360474
    3. ' ' → logprob: -3.984407424926758
    4. ' range' → logprob: -4.359407424926758
    5. 'range' → logprob: -7.609407424926758
    6. ' in' → logprob: -8.234407424926758
    7. '_range' → logprob: -8.609407424926758
    8. ' i' → logprob: -9.609407424926758
    9. '(range' → logprob: -11.484407424926758
    10. ' xrange' → logprob: -11.609407424926758

Token 33: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.8196015954017639
    2. 'range' → logprob: -1.0696015357971191
    3. ' range' → logprob: -2.319601535797119
    4. 'in' → logprob: -2.569601535797119
    5. '(' → logprob: -3.444601535797119
    6. '(range' → logprob: -5.319601535797119
    7. ' ' → logprob: -6.194601535797119
    8. ')' → logprob: -6.944601535797119
    9. ' (' → logprob: -8.069602012634277
    10. 'lines' → logprob: -8.194602012634277

Token 34: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.002815455198287964
    2. ' range' → logprob: -5.877815246582031
    3. '(range' → logprob: -11.877815246582031
    4. '[' → logprob: -13.752815246582031
    5. 'n' → logprob: -14.127815246582031
    6. '   ' → logprob: -14.752815246582031
    7. '	range' → logprob: -14.877815246582031
    8. 'r' → logprob: -15.502815246582031
    9. 'rang' → logprob: -15.502815246582031
    10. ')' → logprob: -16.00281524658203

Token 35: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0005535095697268844
    2. '(' → logprob: -7.500553607940674
    3. ' (' → logprob: -14.625553131103516
    4. 'n' → logprob: -17.375553131103516
    5. ' n' → logprob: -18.375553131103516
    6. ')' → logprob: -18.750553131103516
    7. '(
' → logprob: -18.875553131103516
    8. ')n' → logprob: -18.875553131103516
    9. '(len' → logprob: -19.000553131103516
    10. '(

' → logprob: -19.250553131103516

Token 36: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0003111519617959857
    2. ')' → logprob: -8.250310897827148
    3. ']' → logprob: -10.000310897827148
    4. ')])' → logprob: -13.125310897827148
    5. ')]
' → logprob: -13.750310897827148
    6. '])]' → logprob: -14.875310897827148
    7. '))' → logprob: -15.000310897827148
    8. ')
' → logprob: -15.625310897827148
    9. '')]' → logprob: -15.875310897827148
    10. '])' → logprob: -16.25031089782715

Token 37: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19532209634780884
    2. ')' → logprob: -2.445322036743164
    3. '<|end|>' → logprob: -2.695322036743164
    4. '
' → logprob: -4.445322036743164
    5. '    
' → logprob: -5.070322036743164
    6. '#' → logprob: -6.695322036743164
    7. '```' → logprob: -7.445322036743164
    8. 'for' → logprob: -7.570322036743164
    9. '\n' → logprob: -8.195322036743164
    10. ']' → logprob: -8.320322036743164

Token 38: ' if' (ID: 538)
  Prédit: 'word'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'word' → logprob: -1.4891560077667236
    2. 'for' → logprob: -1.7391560077667236
    3. 'counts' → logprob: -2.2391560077667236
    4. 'result' → logprob: -2.3641560077667236
    5. 'words' → logprob: -2.4891560077667236
    6. 'count' → logprob: -2.6141560077667236
    7. 'max' → logprob: -2.9891560077667236
    8. 'freq' → logprob: -3.1141560077667236
    9. 'frequency' → logprob: -3.4891560077667236
    10. 'counter' → logprob: -4.1141557693481445

Token 39: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.7204885482788086
    2. ' words' → logprob: -0.8454885482788086
    3. ' n' → logprob: -3.0954885482788086
    4. ' ' → logprob: -4.095488548278809
    5. ' not' → logprob: -4.845488548278809
    6. ' all' → logprob: -4.970488548278809
    7. 'len' → logprob: -5.595488548278809
    8. 'words' → logprob: -6.595488548278809
    9. 'n' → logprob: -7.220488548278809
    10. ' any' → logprob: -7.470488548278809

Token 40: '(set' (ID: 25904)
  Prédit: '(words'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(words' → logprob: -0.04875053092837334
    2. '(' → logprob: -3.048750638961792
    3. '(set' → logprob: -9.798750877380371
    4. '(word' → logprob: -9.923750877380371
    5. ' (' → logprob: -10.173750877380371
    6. '(s' → logprob: -11.923750877380371
    7. ' words' → logprob: -12.423750877380371
    8. '(w' → logprob: -12.548750877380371
    9. ' ' → logprob: -13.923750877380371
    10. '('' → logprob: -14.048750877380371

Token 41: '(words' (ID: 80550)
  Prédit: '(words'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(words' → logprob: -6.73052782076411e-05
    2. '(' → logprob: -9.625067710876465
    3. '(word' → logprob: -15.000067710876465
    4. ')' → logprob: -15.125067710876465
    5. 'words' → logprob: -15.500067710876465
    6. ' (' → logprob: -15.625067710876465
    7. ' words' → logprob: -17.00006675720215
    8. '(tokens' → logprob: -17.25006675720215
    9. '(lines' → logprob: -17.50006675720215
    10. '(items' → logprob: -18.00006675720215

Token 42: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11695738136768341
    2. '))' → logprob: -2.241957426071167
    3. '())' → logprob: -5.741957187652588
    4. ' )' → logprob: -7.741957187652588
    5. '   ' → logprob: -8.616957664489746
    6. '()))' → logprob: -9.491957664489746
    7. ' ' → logprob: -9.616957664489746
    8. ' ))' → logprob: -10.241957664489746
    9. '    ' → logprob: -10.366957664489746
    10. '()' → logprob: -10.616957664489746

Token 43: ' !=' (ID: 1666)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1876530796289444
    2. ' <' → logprob: -2.187653064727783
    3. '==' → logprob: -3.562653064727783
    4. ' !=' → logprob: -3.812653064727783
    5. '<' → logprob: -6.062653064727783
    6. ' ' → logprob: -6.062653064727783
    7. ' >' → logprob: -6.812653064727783
    8. ')' → logprob: -7.687653064727783
    9. '<|end|>' → logprob: -7.937653064727783
    10. ' >=' → logprob: -8.062653541564941

Token 44: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.39008525013923645
    2. 'n' → logprob: -1.140085220336914
    3. ' len' → logprob: -6.515085220336914
    4. 'len' → logprob: -6.640085220336914
    5. ' ' → logprob: -8.015085220336914
    6. '1' → logprob: -10.390085220336914
    7. '	n' → logprob: -10.765085220336914
    8. '   ' → logprob: -11.015085220336914
    9. '0' → logprob: -11.640085220336914
    10. '  ' → logprob: -12.265085220336914

Token 45: ' or' (ID: 503)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -2.5107177862082608e-05
    2. '):' → logprob: -11.250024795532227
    3. ' :' → logprob: -12.250024795532227
    4. ':**' → logprob: -12.875024795532227
    5. ':
' → logprob: -13.000024795532227
    6. ':return' → logprob: -13.125024795532227
    7. '>:' → logprob: -15.875024795532227
    8. '   ' → logprob: -16.500024795532227
    9. '():' → logprob: -16.875024795532227
    10. ' or' → logprob: -17.250024795532227

Token 46: ' any' (ID: 1062)
  Prédit: ' any'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' any' → logprob: -0.6642900705337524
    2. ' not' → logprob: -1.5392900705337524
    3. ' len' → logprob: -2.039289951324463
    4. ' n' → logprob: -3.164289951324463
    5. 'len' → logprob: -3.289289951324463
    6. 'any' → logprob: -3.789289951324463
    7. ' words' → logprob: -4.289289951324463
    8. ' all' → logprob: -4.914289951324463
    9. 'not' → logprob: -5.289289951324463
    10. 'n' → logprob: -5.414289951324463

Token 47: '(w' (ID: 7420)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.428469181060791
    2. '(word' → logprob: -1.178469181060791
    3. '(lambda' → logprob: -4.053469181060791
    4. '(not' → logprob: -4.428469181060791
    5. '(' → logprob: -4.678469181060791
    6. '(w' → logprob: -6.553469181060791
    7. '(words' → logprob: -7.803469181060791
    8. '(c' → logprob: -9.428468704223633
    9. '((' → logprob: -9.928468704223633
    10. '(x' → logprob: -10.553468704223633

Token 48: '1' (ID: 16)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.7875574231147766
    2. ' ==' → logprob: -1.2875573635101318
    3. '.' → logprob: -1.7875573635101318
    4. ' not' → logprob: -3.662557363510132
    5. ' !=' → logprob: -4.162557601928711
    6. '.count' → logprob: -4.287557601928711
    7. ' for' → logprob: -4.912557601928711
    8. ' in' → logprob: -5.037557601928711
    9. '!=' → logprob: -5.412557601928711
    10. ' ' → logprob: -5.537557601928711

Token 49: '[-' (ID: 17503)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2623705565929413
    2. '==' → logprob: -1.5123705863952637
    3. '.startswith' → logprob: -5.637370586395264
    4. ' in' → logprob: -6.012370586395264
    5. ' not' → logprob: -6.387370586395264
    6. ' ' → logprob: -6.637370586395264
    7. ' !=' → logprob: -7.137370586395264
    8. '.count' → logprob: -9.262370109558105
    9. '!=' → logprob: -9.387370109558105
    10. '.endswith' → logprob: -9.387370109558105

Token 50: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004091935232281685
    2. '2' → logprob: -5.629091739654541
    3. '3' → logprob: -8.8790922164917
    4. ' ' → logprob: -9.2540922164917
    5. 'char' → logprob: -10.5665922164917
    6. '=' → logprob: -10.6290922164917
    7. '-' → logprob: -10.6915922164917
    8. 'l' → logprob: -10.7540922164917
    9. 'len' → logprob: -10.9415922164917
    10. 's' → logprob: -11.1915922164917

Token 51: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08651579171419144
    2. ']!=' → logprob: -2.7115159034729004
    3. ']==' → logprob: -4.3365159034729
    4. '!=' → logprob: -6.2115159034729
    5. ' ]' → logprob: -7.9615159034729
    6. ':]' → logprob: -8.336515426635742
    7. '[' → logprob: -8.711515426635742
    8. '==' → logprob: -9.086515426635742
    9. '```' → logprob: -9.961515426635742
    10. ' ' → logprob: -9.961515426635742

Token 52: ' !=' (ID: 1666)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.7806618213653564
    2. '!=' → logprob: -1.6556618213653564
    3. ' !=' → logprob: -1.7806618213653564
    4. ' ==' → logprob: -1.7806618213653564
    5. ' ' → logprob: -4.905661582946777
    6. ')' → logprob: -6.655661582946777
    7. ' not' → logprob: -7.030661582946777
    8. '=' → logprob: -7.280661582946777
    9. '[' → logprob: -7.405661582946777
    10. '```' → logprob: -7.655661582946777

Token 53: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.062248650938272476
    2. ' w' → logprob: -2.812248706817627
    3. ''w' → logprob: -8.437248229980469
    4. ' ' → logprob: -11.062248229980469
    5. '   ' → logprob: -11.562248229980469
    6. ')' → logprob: -12.312248229980469
    7. ''' → logprob: -12.562248229980469
    8. '_w' → logprob: -12.562248229980469
    9. ' '' → logprob: -12.812248229980469
    10. '    ' → logprob: -12.937248229980469

Token 54: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04448608309030533
    2. 'ords' → logprob: -4.044486045837402
    3. '2' → logprob: -4.294486045837402
    4. '_words' → logprob: -5.169486045837402
    5. '[' → logprob: -5.669486045837402
    6. '_' → logprob: -7.544486045837402
    7. 'words' → logprob: -7.669486045837402
    8. '[i' → logprob: -7.794486045837402
    9. '[-' → logprob: -8.419486045837402
    10. ' ' → logprob: -8.544486045837402

Token 55: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03052106499671936
    2. '[-' → logprob: -3.5305211544036865
    3. ' for' → logprob: -8.030521392822266
    4. 'for' → logprob: -8.780521392822266
    5. ')' → logprob: -10.030521392822266
    6. ''' → logprob: -10.405521392822266
    7. '['' → logprob: -10.405521392822266
    8. ' ' → logprob: -10.780521392822266
    9. '  ' → logprob: -11.030521392822266
    10. ' [' → logprob: -11.280521392822266

Token 56: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002406090497970581
    2. ' ' → logprob: -8.875240325927734
    3. '[' → logprob: -9.625240325927734
    4. '-' → logprob: -10.875240325927734
    5. 'i' → logprob: -12.875240325927734
    6. '_' → logprob: -13.125240325927734
    7. '
' → logprob: -13.125240325927734
    8. '1' → logprob: -13.375240325927734
    9. ':' → logprob: -13.625240325927734
    10. '   ' → logprob: -13.625240325927734

Token 57: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18034988641738892
    2. ' for' → logprob: -1.9303498268127441
    3. 'for' → logprob: -4.180349826812744
    4. ' ' → logprob: -5.930349826812744
    5. ' )' → logprob: -7.555349826812744
    6. ']' → logprob: -8.305350303649902
    7. 'or' → logprob: -8.305350303649902
    8. '    ' → logprob: -8.555350303649902
    9. '   ' → logprob: -8.680350303649902
    10. '')' → logprob: -8.805350303649902

Token 58: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.21499614417552948
    2. 'for' → logprob: -1.964996099472046
    3. ')' → logprob: -3.089996099472046
    4. ' ' → logprob: -5.464996337890625
    5. ''' → logprob: -6.839996337890625
    6. '(' → logprob: -7.589996337890625
    7. '    ' → logprob: -7.714996337890625
    8. ' or' → logprob: -8.214996337890625
    9. '   ' → logprob: -8.339996337890625
    10. 'or' → logprob: -8.714996337890625

Token 59: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.31345289945602417
    2. ' w' → logprob: -1.313452959060669
    3. '(w' → logprob: -9.43845272064209
    4. ',' → logprob: -9.56345272064209
    5. ',w' → logprob: -10.56345272064209
    6. ' (' → logprob: -12.56345272064209
    7. '   ' → logprob: -12.93845272064209
    8. ' i' → logprob: -13.31345272064209
    9. 'i' → logprob: -13.43845272064209
    10. '	w' → logprob: -13.43845272064209

Token 60: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05216344818472862
    2. ' in' → logprob: -3.0521633625030518
    3. 'in' → logprob: -6.427163600921631
    4. '2' → logprob: -6.552163600921631
    5. ',' → logprob: -8.677163124084473
    6. '_' → logprob: -9.427163124084473
    7. '_words' → logprob: -10.052163124084473
    8. 'for' → logprob: -10.302163124084473
    9. ' ' → logprob: -10.552163124084473
    10. '   ' → logprob: -10.677163124084473

Token 61: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.027756253257393837
    2. ' ,' → logprob: -4.277756214141846
    3. ',w' → logprob: -4.527756214141846
    4. ' in' → logprob: -6.277756214141846
    5. 'w' → logprob: -7.777756214141846
    6. 'in' → logprob: -9.027756690979004
    7. ',next' → logprob: -9.902756690979004
    8. ' ' → logprob: -10.152756690979004
    9. ',_' → logprob: -10.152756690979004
    10. '_,' → logprob: -10.777756690979004

Token 62: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.6932170987129211
    2. ' w' → logprob: -0.6932170987129211
    3. ',' → logprob: -10.568217277526855
    4. ',w' → logprob: -10.693217277526855
    5. '(w' → logprob: -11.443217277526855
    6. ' (' → logprob: -13.068217277526855
    7. '_w' → logprob: -13.193217277526855
    8. ' ' → logprob: -13.443217277526855
    9. '  ' → logprob: -13.693217277526855
    10. '    ' → logprob: -13.943217277526855

Token 63: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.024287013337016106
    2. '1' → logprob: -3.774286985397339
    3. ',' → logprob: -7.649287223815918
    4. 'ords' → logprob: -7.774287223815918
    5. '_' → logprob: -10.399287223815918
    6. ' ' → logprob: -10.524287223815918
    7. '   ' → logprob: -11.524287223815918
    8. '```' → logprob: -11.649287223815918
    9. ',_' → logprob: -11.774287223815918
    10. ' ,' → logprob: -11.961787223815918

Token 64: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014214513823390007
    2. 'in' → logprob: -4.264214515686035
    3. ')' → logprob: -10.764214515686035
    4. ',' → logprob: -11.139214515686035
    5. ' ' → logprob: -11.764214515686035
    6. '),' → logprob: -13.389214515686035
    7. 's' → logprob: -13.389214515686035
    8. ' i' → logprob: -14.014214515686035
    9. '_in' → logprob: -14.139214515686035
    10. '<|end|>' → logprob: -14.514214515686035

Token 65: ' zip' (ID: 16216)
  Prédit: ' zip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' zip' → logprob: -0.005250710528343916
    2. 'zip' → logprob: -5.255250930786133
    3. '(zip' → logprob: -11.005250930786133
    4. '.zip' → logprob: -16.380250930786133
    5. ' pair' → logprob: -16.880250930786133
    6. '_zip' → logprob: -17.880250930786133
    7. ' ' → logprob: -18.630250930786133
    8. 'pair' → logprob: -19.130250930786133
    9. 'Zip' → logprob: -20.880250930786133
    10. '   ' → logprob: -21.255250930786133

Token 66: '(words' (ID: 80550)
  Prédit: '(words'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(words' → logprob: -3.128163257315464e-07
    2. '(' → logprob: -16.0
    3. 'words' → logprob: -16.25
    4. ' words' → logprob: -18.625
    5. '(users' → logprob: -18.75
    6. '(word' → logprob: -19.0
    7. '(points' → logprob: -19.375
    8. '(
' → logprob: -19.625
    9. '(strings' → logprob: -19.875
    10. '(w' → logprob: -20.0

Token 67: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6708557605743408
    2. '[:-' → logprob: -0.7958557605743408
    3. '[' → logprob: -3.295855760574341
    4. ')' → logprob: -8.420855522155762
    5. '))' → logprob: -9.045855522155762
    6. '   ' → logprob: -9.795855522155762
    7. ' ,' → logprob: -10.295855522155762
    8. '[:' → logprob: -11.295855522155762
    9. ',)' → logprob: -11.545855522155762
    10. '[::-' → logprob: -11.795855522155762

Token 68: ' words' (ID: 6391)
  Prédit: 'words'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'words' → logprob: -0.10580731183290482
    2. ' words' → logprob: -2.355807304382324
    3. '   ' → logprob: -5.230807304382324
    4. '(words' → logprob: -8.980807304382324
    5. ' ' → logprob: -10.230807304382324
    6. '  ' → logprob: -10.730807304382324
    7. '    ' → logprob: -10.730807304382324
    8. '       ' → logprob: -11.355807304382324
    9. '.words' → logprob: -11.855807304382324
    10. 'word' → logprob: -12.855807304382324

Token 69: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: 0.0
    2. '1' → logprob: -18.875
    3. '   ' → logprob: -19.25
    4. '[:-' → logprob: -19.625
    5. '[
' → logprob: -20.5
    6. '[::-' → logprob: -20.5
    7. '```' → logprob: -21.25
    8. '[-' → logprob: -21.375
    9. '[:' → logprob: -21.875
    10. '
' → logprob: -21.875

Token 70: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. '-' → logprob: -13.75000286102295
    3. ' ' → logprob: -13.75000286102295
    4. '   ' → logprob: -15.12500286102295
    5. '[' → logprob: -15.87500286102295
    6. '[:-' → logprob: -16.250003814697266
    7. '```' → logprob: -16.500003814697266
    8. ':-' → logprob: -16.500003814697266
    9. '0' → logprob: -17.625003814697266
    10. ':' → logprob: -18.000003814697266

Token 71: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0017181389266625047
    2. ']))' → logprob: -7.251718044281006
    3. ':]' → logprob: -7.751718044281006
    4. ')):' → logprob: -7.876718044281006
    5. '))' → logprob: -9.626718521118164
    6. '])):
' → logprob: -10.001718521118164
    7. '):' → logprob: -10.251718521118164
    8. '']))' → logprob: -10.501718521118164
    9. '():' → logprob: -12.251718521118164
    10. '()))' → logprob: -12.376718521118164

Token 72: '])):
' (ID: 145266)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.05751786008477211
    2. '))' → logprob: -3.3075177669525146
    3. ')):
' → logprob: -4.057518005371094
    4. ')' → logprob: -7.182518005371094
    5. '):' → logprob: -7.307518005371094
    6. ')):
' → logprob: -7.932518005371094
    7. '   ' → logprob: -9.807518005371094
    8. ' ))' → logprob: -9.932518005371094
    9. ':' → logprob: -10.182518005371094
    10. ' ' → logprob: -10.807518005371094

Token 73: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006718054646626115
    2. ':' → logprob: -7.375671863555908
    3. '   ' → logprob: -10.37567138671875
    4. ' return' → logprob: -13.00067138671875
    5. ' :' → logprob: -13.37567138671875
    6. '):' → logprob: -13.50067138671875
    7. ':return' → logprob: -13.75067138671875
    8. ',' → logprob: -13.87567138671875
    9. '      ' → logprob: -14.00067138671875
    10. '           ' → logprob: -14.25067138671875

Token 74: ' print' (ID: 2123)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18409575521945953
    2. '   ' → logprob: -2.809095859527588
    3. ' print' → logprob: -2.809095859527588
    4. 'print' (adapté à ' print') → logprob: -3.184095859527588
    5. ' return' → logprob: -5.434095859527588
    6. 'return' → logprob: -6.809095859527588
    7. '
' → logprob: -8.05909538269043
    8. '```' → logprob: -8.68409538269043
    9. '    ' → logprob: -9.18409538269043
    10. '\n' → logprob: -10.43409538269043

Token 75: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.32274341583251953
    2. '(' → logprob: -1.3227434158325195
    3. '(-' → logprob: -5.3227434158325195
    4. '('' → logprob: -5.5727434158325195
    5. '()' → logprob: -8.57274341583252
    6. '(False' → logprob: -8.57274341583252
    7. '("("' → logprob: -8.69774341583252
    8. '("")' → logprob: -9.07274341583252
    9. '(None' → logprob: -10.07274341583252
    10. '("(' → logprob: -10.57274341583252

Token 76: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.23610323667526245
    2. '"' → logprob: -2.6111032962799072
    3. '"No' → logprob: -2.7361032962799072
    4. 'Yes' → logprob: -3.7361032962799072
    5. 'Impossible' → logprob: -4.486103057861328
    6. 'None' → logprob: -5.111103057861328
    7. '-' → logprob: -5.361103057861328
    8. '\n' → logprob: -5.611103057861328
    9. 'Incorrect' → logprob: -6.111103057861328
    10. 'IMP' → logprob: -6.486103057861328

Token 77: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.028096849098801613
    2. '")
' → logprob: -3.778096914291382
    3. ')' → logprob: -5.903096675872803
    4. ')")' → logprob: -6.528096675872803
    5. ')")
' → logprob: -7.778096675872803
    6. '!")' → logprob: -9.028097152709961
    7. ')
' → logprob: -10.278097152709961
    8. '")
' → logprob: -10.653097152709961
    9. '"' → logprob: -11.153097152709961
    10. ' ")' → logprob: -11.653097152709961

Token 78: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00045807508286088705
    2. '       ' → logprob: -8.125457763671875
    3. 'else' → logprob: -9.750457763671875
    4. '<|end|>' → logprob: -9.875457763671875
    5. ' else' → logprob: -10.500457763671875
    6. '```' → logprob: -11.625457763671875
    7. ')' → logprob: -11.875457763671875
    8. '    
' → logprob: -12.500457763671875
    9. '	else' → logprob: -13.000457763671875
    10. '<|end|>' → logprob: -13.875457763671875

Token 79: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024025775492191315
    2. ' else' → logprob: -4.024025917053223
    3. 'else' (adapté à ' else') → logprob: -5.149025917053223
    4. '	else' → logprob: -10.274025917053223
    5. ' ' → logprob: -11.899025917053223
    6. '<|end|>' → logprob: -11.899025917053223
    7. '```' → logprob: -13.649025917053223
    8. '       ' → logprob: -13.774025917053223
    9. ')' → logprob: -14.399025917053223
    10. '  ' → logprob: -14.649025917053223

Token 80: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.013445020653307438
    2. '       ' → logprob: -4.388444900512695
    3. ':
' → logprob: -7.013444900512695
    4. '   ' → logprob: -11.513444900512695
    5. '):' → logprob: -11.513444900512695
    6. '<|end|>' → logprob: -12.138444900512695
    7. '():' → logprob: -12.888444900512695
    8. ',' → logprob: -13.513444900512695
    9. '```' → logprob: -14.388444900512695
    10. '):
' → logprob: -14.513444900512695

Token 81: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.339278580620885e-06
    2. 'print' → logprob: -14.000001907348633
    3. '   ' → logprob: -14.125001907348633
    4. ' print' → logprob: -14.375001907348633
    5. '           ' → logprob: -16.625001907348633
    6. '      ' → logprob: -17.500001907348633
    7. '	   ' → logprob: -17.500001907348633
    8. '```' → logprob: -17.625001907348633
    9. '<|end|>' → logprob: -17.625001907348633
    10. '     ' → logprob: -18.125001907348633

Token 82: ' print' (ID: 2123)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6712630987167358
    2. 'print' (adapté à ' print') → logprob: -0.9212630987167358
    3. ' print' → logprob: -2.4212632179260254
    4. '   ' → logprob: -6.171263217926025
    5. '	print' → logprob: -11.921262741088867
    6. ' ' → logprob: -12.046262741088867
    7. '           ' → logprob: -12.296262741088867
    8. '    ' → logprob: -13.046262741088867
    9. '```' → logprob: -13.796262741088867
    10. '  ' → logprob: -14.421262741088867

Token 83: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.023321880027651787
    2. '(' → logprob: -3.7733218669891357
    3. '("("' → logprob: -9.523322105407715
    4. '('' → logprob: -13.523322105407715
    5. '("""' → logprob: -14.273322105407715
    6. '("(' → logprob: -15.023322105407715
    7. '(
' → logprob: -15.023322105407715
    8. '("")' → logprob: -15.148322105407715
    9. '(""' → logprob: -16.7733211517334
    10. '()' → logprob: -16.7733211517334

Token 84: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -1.1517960956552997e-05
    2. '"' → logprob: -11.500011444091797
    3. 'Ye' → logprob: -13.875011444091797
    4. 'YES' → logprob: -15.875011444091797
    5. ' Yes' → logprob: -16.500011444091797
    6. '“Yes' → logprob: -16.750011444091797
    7. 'Yeah' → logprob: -17.875011444091797
    8. 'Oui' → logprob: -18.875011444091797
    9. 'Ok' → logprob: -19.000011444091797
    10. 'OK' → logprob: -19.500011444091797

Token 85: '")

' (ID: 10822)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06215309351682663
    2. '")' → logprob: -2.8121531009674072
    3. ')")' → logprob: -8.687152862548828
    4. ')
' → logprob: -12.062152862548828
    5. '())' → logprob: -12.812152862548828
    6. '`)' → logprob: -13.437152862548828
    7. '()' → logprob: -13.437152862548828
    8. ' )' → logprob: -13.562152862548828
    9. '')' → logprob: -13.687152862548828
    10. '```' → logprob: -13.812152862548828

Token 86: 'if' (ID: 366)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6772781014442444
    2. '<|end|>' → logprob: -1.3022780418395996
    3. '\n' → logprob: -2.0522780418395996
    4. 'if' → logprob: -3.4272780418395996
    5. '#' → logprob: -3.5522780418395996
    6. '```' → logprob: -4.1772780418396
    7. '\' → logprob: -4.8022780418396
    8. '<|end|>' → logprob: -6.4272780418396
    9. '[' → logprob: -7.4272780418396
    10. '_' → logprob: -7.5522780418396

Token 87: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.11305655539035797
    2. '__' → logprob: -2.2380566596984863
    3. ' ' → logprob: -9.238056182861328
    4. ' ' → logprob: -9.988056182861328
    5. '_' → logprob: -10.113056182861328
    6. '<|end|>' → logprob: -11.488056182861328
    7. ''' → logprob: -11.863056182861328
    8. 'name' → logprob: -12.238056182861328
    9. '  ' → logprob: -12.488056182861328
    10. '___' → logprob: -12.863056182861328

Token 88: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.06866909563541412
    2. '.__' → logprob: -3.568669080734253
    3. '__.__' → logprob: -3.693669080734253
    4. '==' → logprob: -5.693669319152832
    5. ' ==' → logprob: -5.818669319152832
    6. '.' → logprob: -5.943669319152832
    7. '__.' → logprob: -6.693669319152832
    8. ' __' → logprob: -7.193669319152832
    9. 'name' → logprob: -7.943669319152832
    10. '```' → logprob: -8.068669319152832

Token 89: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0005056116497144103
    2. '__.__' → logprob: -7.625505447387695
    3. '___' → logprob: -12.125505447387695
    4. '__.' → logprob: -12.500505447387695
    5. '__["' → logprob: -12.875505447387695
    6. '____' → logprob: -13.000505447387695
    7. '_' → logprob: -13.750505447387695
    8. '__[' → logprob: -13.750505447387695
    9. '__
' → logprob: -14.625505447387695
    10. '==' → logprob: -15.500505447387695

Token 90: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.06799974292516708
    2. ' ==' → logprob: -3.067999839782715
    3. '==' → logprob: -4.067999839782715
    4. '=="' → logprob: -7.317999839782715
    5. '```' → logprob: -7.817999839782715
    6. '<|end|>' → logprob: -7.817999839782715
    7. '=='' → logprob: -8.692999839782715
    8. '___' → logprob: -9.067999839782715
    9. '[' → logprob: -9.067999839782715
    10. '__.__' → logprob: -10.442999839782715

Token 91: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.061976756900548935
    2. ''' → logprob: -2.811976671218872
    3. ' "' → logprob: -11.936976432800293
    4. '__' → logprob: -13.936976432800293
    5. ' "__' → logprob: -14.186976432800293
    6. '"user' → logprob: -14.561976432800293
    7. '`' → logprob: -15.561976432800293
    8. ' '' → logprob: -16.06197738647461
    9. ''"' → logprob: -17.18697738647461
    10. ''s' → logprob: -17.43697738647461

Token 92: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0007018264150246978
    2. 'name' → logprob: -7.750701904296875
    3. '__' → logprob: -8.375701904296875
    4. '"' → logprob: -10.500701904296875
    5. '_main' → logprob: -12.375701904296875
    6. ' main' → logprob: -12.750701904296875
    7. 'python' → logprob: -13.625701904296875
    8. '__":
' → logprob: -13.750701904296875
    9. 'built' → logprob: -13.875701904296875
    10. 'ma' → logprob: -14.375701904296875

Token 93: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.5768641233444214
    2. '__' → logprob: -0.8268641233444214
    3. '__.' → logprob: -7.201864242553711
    4. '__["' → logprob: -9.951864242553711
    5. '__:' → logprob: -10.201864242553711
    6. '__':
' → logprob: -10.326864242553711
    7. '__.__' → logprob: -10.576864242553711
    8. '_' → logprob: -11.076864242553711
    9. '.' → logprob: -11.701864242553711
    10. '__("' → logprob: -13.076864242553711

Token 94: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8570926785469055
    2. ' main' → logprob: -0.8570926785469055
    3. 'main' → logprob: -2.4820926189422607
    4. '	main' → logprob: -2.7320926189422607
    5. '    
' → logprob: -6.35709285736084
    6. '```' → logprob: -8.10709285736084
    7. '_main' → logprob: -9.23209285736084
    8. ' ' → logprob: -9.60709285736084
    9. '<|end|>' → logprob: -9.98209285736084
    10. '(main' → logprob: -9.98209285736084

Token 95: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.735893965815194e-05
    2. ' main' → logprob: -11.000017166137695
    3. '	main' → logprob: -14.375017166137695
    4. '   ' → logprob: -17.625017166137695
    5. '_main' → logprob: -21.125017166137695
    6. '(main' → logprob: -21.500017166137695
    7. '.main' → logprob: -22.250017166137695
    8. 'Main' → logprob: -22.875017166137695
    9. '  ' → logprob: -23.000017166137695
    10. '    
' → logprob: -23.500017166137695

Token 96: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.04316623508930206
    2. '(' → logprob: -3.168166160583496
    3. '()
' → logprob: -9.168166160583496
    4. '(
' → logprob: -10.418166160583496
    5. '```' → logprob: -12.043166160583496
    6. '()

' → logprob: -12.293166160583496
    7. '()`' → logprob: -12.668166160583496
    8. '(

' → logprob: -12.918166160583496
    9. '`()' → logprob: -13.293166160583496
    10. ')' → logprob: -13.293166160583496


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 94
Tokens correctement prédits (1ère position, stricte): 48
Tokens correctement prédits (1ère position, avec adaptation): 50
Tokens correctement prédits (top 10): 80
Précision stricte (1ère position): 51.06%
Précision adaptée (1ère position): 53.19%
Précision (top 10): 85.11%
================================================================================
