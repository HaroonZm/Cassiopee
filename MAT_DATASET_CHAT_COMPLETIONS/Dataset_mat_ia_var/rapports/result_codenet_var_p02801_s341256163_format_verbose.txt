================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:30:36
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
user_input_character = input()

unicode_code_point_of_input = ord(user_input_character)

unicode_code_point_of_next_character = unicode_code_point_of_input + 1

next_character = chr(unicode_code_point_of_next_character)

print(next_character)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'user' (ID: 1428)
  → Token d'amorce (pas de prédiction)

Token 1: '_input' (ID: 12507)
  → Token d'amorce (pas de prédiction)

Token 2: '_character' (ID: 99888)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.29922375082969666
    2. '_' → logprob: -2.6742236614227295
    3. ':' → logprob: -2.6742236614227295
    4. '.' → logprob: -3.0492236614227295
    5. ' =' → logprob: -3.4242236614227295
    6. ')' → logprob: -4.674223899841309
    7. 's' → logprob: -4.924223899841309
    8. '[' → logprob: -4.924223899841309
    9. ',' → logprob: -5.674223899841309
    10. ''' → logprob: -5.924223899841309

Token 4: ' input' (ID: 3422)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.02024824358522892
    2. ' '' → logprob: -4.5202484130859375
    3. '"' → logprob: -4.7702484130859375
    4. ''a' → logprob: -8.770248413085938
    5. ''user' → logprob: -9.395248413085938
    6. '''' → logprob: -9.520248413085938
    7. ' ' → logprob: -9.520248413085938
    8. ' "' → logprob: -10.020248413085938
    9. ''s' → logprob: -10.395248413085938
    10. ''e' → logprob: -10.520248413085938

Token 5: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010098977014422417
    2. ''' → logprob: -5.010098934173584
    3. '('' → logprob: -5.885098934173584
    4. '"' → logprob: -8.010099411010742
    5. '("("' → logprob: -9.135099411010742
    6. '(
' → logprob: -10.010099411010742
    7. '```' → logprob: -10.760099411010742
    8. '[' → logprob: -10.760099411010742
    9. '_' → logprob: -11.260099411010742
    10. ' (' → logprob: -11.635099411010742

Token 6: 'unicode' (ID: 107456)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3056687116622925
    2. 'if' → logprob: -1.5556687116622925
    3. ' if' → logprob: -4.180668830871582
    4. '.lower' → logprob: -4.430668830871582
    5. '=' → logprob: -4.930668830871582
    6. '.strip' → logprob: -5.180668830871582
    7. '_' → logprob: -6.055668830871582
    8. '+' → logprob: -6.305668830871582
    9. '.upper' → logprob: -6.305668830871582
    10. '==' → logprob: -6.430668830871582

Token 7: '_code' (ID: 8330)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.03219196945428848
    2. '_code' → logprob: -4.532191753387451
    3. '(' → logprob: -4.907191753387451
    4. '_value' → logprob: -5.657191753387451
    5. ' =' → logprob: -6.032191753387451
    6. '_val' → logprob: -6.657191753387451
    7. 's' → logprob: -6.907191753387451
    8. '=' → logprob: -7.282191753387451
    9. '_ord' → logprob: -7.407191753387451
    10. '_str' → logprob: -7.657191753387451

Token 8: '_point' (ID: 15466)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.014646444469690323
    2. ' =' → logprob: -4.889646530151367
    3. '=' → logprob: -5.389646530151367
    4. '(' → logprob: -6.639646530151367
    5. '_point' → logprob: -7.014646530151367
    6. 's' → logprob: -9.389646530151367
    7. 'point' → logprob: -10.389646530151367
    8. '_=' → logprob: -10.514646530151367
    9. ' ' → logprob: -10.764646530151367
    10. '_space' → logprob: -10.889646530151367

Token 9: '_of' (ID: 8023)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12499088048934937
    2. '=' → logprob: -2.499990940093994
    3. '_' → logprob: -3.874990940093994
    4. ' =' → logprob: -4.374990940093994
    5. 's' → logprob: -6.499990940093994
    6. '(
' → logprob: -8.249990463256836
    7. '[' → logprob: -10.249990463256836
    8. 'space' → logprob: -10.374990463256836
    9. '_space' → logprob: -10.499990463256836
    10. '("("' → logprob: -10.749990463256836

Token 10: '_input' (ID: 12507)
  Prédit: 'user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'user' → logprob: -0.5679114460945129
    2. '(' → logprob: -1.0679113864898682
    3. ' user' → logprob: -2.692911386489868
    4. '_' → logprob: -4.192911624908447
    5. '_user' → logprob: -5.442911624908447
    6. '(user' → logprob: -6.692911624908447
    7. ' ' → logprob: -7.442911624908447
    8. ''' → logprob: -8.317911148071289
    9. '"user' → logprob: -9.317911148071289
    10. ' (' → logprob: -9.817911148071289

Token 11: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.19004932045936584
    2. '(' → logprob: -2.190049409866333
    3. 'user' → logprob: -3.940049409866333
    4. '[' → logprob: -4.440049171447754
    5. '(user' → logprob: -4.815049171447754
    6. ' =' → logprob: -5.065049171447754
    7. '_user' → logprob: -5.065049171447754
    8. 's' → logprob: -5.815049171447754
    9. '=' → logprob: -6.315049171447754
    10. '[user' → logprob: -6.440049171447754

Token 12: ' ord' (ID: 6608)
  Prédit: 'ord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ord' → logprob: -0.6932192444801331
    2. ' ord' → logprob: -0.6932192444801331
    3. 'user' → logprob: -10.068219184875488
    4. '(ord' → logprob: -11.193219184875488
    5. ' user' → logprob: -11.693219184875488
    6. ' ' → logprob: -12.443219184875488
    7. ' ' → logprob: -13.818219184875488
    8. 'hex' → logprob: -14.068219184875488
    9. 'ords' → logprob: -14.943219184875488
    10. ' hex' → logprob: -15.068219184875488

Token 13: '(user' (ID: 7195)
  Prédit: '(user'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(user' → logprob: -0.20190103352069855
    2. '(' → logprob: -1.7019010782241821
    3. 'user' → logprob: -7.701900959014893
    4. '("("' → logprob: -11.70190143585205
    5. '(u' → logprob: -12.20190143585205
    6. '('' → logprob: -12.32690143585205
    7. '(use' → logprob: -12.57690143585205
    8. ' user' → logprob: -12.70190143585205
    9. ' (' → logprob: -13.07690143585205
    10. '_user' → logprob: -13.57690143585205

Token 14: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.00041386886732652783
    2. '_' → logprob: -8.12541389465332
    3. 'input' → logprob: -10.00041389465332
    4. 'put' → logprob: -10.62541389465332
    5. '_user' → logprob: -11.25041389465332
    6. '_character' → logprob: -11.62541389465332
    7. '```' → logprob: -12.37541389465332
    8. ')' → logprob: -12.37541389465332
    9. '_output' → logprob: -12.75041389465332
    10. '_put' → logprob: -12.87541389465332

Token 15: '_character' (ID: 99888)
  Prédit: '_character'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_character' → logprob: -0.0022821726743131876
    2. '_' → logprob: -6.37728214263916
    3. '_)' → logprob: -8.25228214263916
    4. '_char' → logprob: -8.62728214263916
    5. ')_' → logprob: -9.62728214263916
    6. ')' → logprob: -10.00228214263916
    7. 'character' → logprob: -11.25228214263916
    8. '_CHARACTER' → logprob: -12.00228214263916
    9. '_c' → logprob: -12.50228214263916
    10. '_ch' → logprob: -13.25228214263916

Token 16: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.7491250875755213e-05
    2. '(' → logprob: -11.125027656555176
    3. '`)' → logprob: -12.750027656555176
    4. '[' → logprob: -13.000027656555176
    5. '))' → logprob: -13.000027656555176
    6. ' )' → logprob: -13.250027656555176
    7. ')`' → logprob: -13.500027656555176
    8. ')
' → logprob: -14.625027656555176
    9. '')' → logprob: -14.750027656555176
    10. 'user' → logprob: -15.500027656555176

Token 17: 'unicode' (ID: 107456)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.40889835357666016
    2. ')' → logprob: -1.7838983535766602
    3. '#' → logprob: -2.40889835357666
    4. '+' → logprob: -3.53389835357666
    5. '(' → logprob: -4.40889835357666
    6. '```' → logprob: -4.53389835357666
    7. '%' → logprob: -5.28389835357666
    8. 'newline' → logprob: -5.78389835357666
    9. ' ' → logprob: -5.90889835357666
    10. '<|end|>' → logprob: -5.90889835357666

Token 18: '_code' (ID: 8330)
  Prédit: '_code'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_code' → logprob: -0.004136222414672375
    2. '_' → logprob: -5.504136085510254
    3. '_CODE' → logprob: -11.129136085510254
    4. '_Code' → logprob: -12.004136085510254
    5. '```' → logprob: -12.004136085510254
    6. '_cod' → logprob: -12.254136085510254
    7. '_codes' → logprob: -12.379136085510254
    8. '_unicode' → logprob: -12.504136085510254
    9. '__' → logprob: -12.629136085510254
    10. 'Code' → logprob: -13.129136085510254

Token 19: '_point' (ID: 15466)
  Prédit: '_point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_point' → logprob: -0.14295366406440735
    2. '_code' → logprob: -2.392953634262085
    3. '_' → logprob: -3.392953634262085
    4. '_points' → logprob: -5.142953872680664
    5. '_value' → logprob: -8.142953872680664
    6. '```' → logprob: -8.142953872680664
    7. '_pointer' → logprob: -8.392953872680664
    8. '_unit' → logprob: -9.392953872680664
    9. '_output' → logprob: -9.517953872680664
    10. '_token' → logprob: -9.642953872680664

Token 20: '_of' (ID: 8023)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5810098052024841
    2. '_of' → logprob: -0.8310098052024841
    3. '_code' → logprob: -5.331009864807129
    4. '```' → logprob: -9.831009864807129
    5. '_)' → logprob: -10.581009864807129
    6. '_
' → logprob: -10.831009864807129
    7. '__' → logprob: -10.956009864807129
    8. '_

' → logprob: -11.081009864807129
    9. ' _' → logprob: -11.206009864807129
    10. ')' → logprob: -11.706009864807129

Token 21: '_next' (ID: 25436)
  Prédit: '_input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.00011784763046307489
    2. '_user' → logprob: -9.875118255615234
    3. 'input' → logprob: -10.250118255615234
    4. '_' → logprob: -10.875118255615234
    5. '_character' → logprob: -11.500118255615234
    6. '_in' → logprob: -14.500118255615234
    7. '_char' → logprob: -14.750118255615234
    8. '_code' → logprob: -15.375118255615234
    9. '_string' → logprob: -15.500118255615234
    10. 'user' → logprob: -15.750118255615234

Token 22: '_character' (ID: 99888)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.28133606910705566
    2. '_character' → logprob: -1.6563360691070557
    3. ' =' → logprob: -3.4063360691070557
    4. '=' → logprob: -4.531335830688477
    5. '_char' → logprob: -4.656335830688477
    6. '_=' → logprob: -7.281335830688477
    7. 'character' → logprob: -9.531335830688477
    8. '_input' → logprob: -9.656335830688477
    9. '_code' → logprob: -10.656335830688477
    10. '_user' → logprob: -11.156335830688477

Token 23: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7737669944763184
    2. '=' → logprob: -0.8987669944763184
    3. '+' → logprob: -2.1487669944763184
    4. ' +' → logprob: -4.523766994476318
    5. '(' → logprob: -5.898766994476318
    6. '_' → logprob: -7.398766994476318
    7. '(user' → logprob: -8.023767471313477
    8. ' ' → logprob: -8.523767471313477
    9. '+=' → logprob: -9.773767471313477
    10. ' +=' → logprob: -9.898767471313477

Token 24: ' unicode' (ID: 64420)
  Prédit: 'unicode'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unicode' → logprob: -0.11283476650714874
    2. ' unicode' → logprob: -2.2378346920013428
    3. 'user' → logprob: -12.987834930419922
    4. ' user' → logprob: -13.112834930419922
    5. 'unic' → logprob: -13.237834930419922
    6. ' ' → logprob: -13.362834930419922
    7. '_unicode' → logprob: -13.612834930419922
    8. 'un' → logprob: -14.237834930419922
    9. 'unix' → logprob: -14.612834930419922
    10. ' Unicode' → logprob: -14.987834930419922

Token 25: '_code' (ID: 8330)
  Prédit: '_code'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_code' → logprob: -1.0280383548888494e-06
    2. '_' → logprob: -15.125000953674316
    3. '_CODE' → logprob: -15.625000953674316
    4. '```' → logprob: -16.000001907348633
    5. '_codes' → logprob: -16.125001907348633
    6. 'Code' → logprob: -16.125001907348633
    7. 'code' → logprob: -16.625001907348633
    8. '_Code' → logprob: -17.000001907348633
    9. '_cod' → logprob: -17.375001907348633
    10. ')' → logprob: -18.000001907348633

Token 26: '_point' (ID: 15466)
  Prédit: '_point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_point' → logprob: -0.033803604543209076
    2. '_code' → logprob: -3.408803701400757
    3. '_points' → logprob: -9.283803939819336
    4. 'point' → logprob: -10.033803939819336
    5. '_' → logprob: -11.408803939819336
    6. '```' → logprob: -12.533803939819336
    7. 'points' → logprob: -13.408803939819336
    8. '_p' → logprob: -13.533803939819336
    9. 'p' → logprob: -14.908803939819336
    10. 'int' → logprob: -15.033803939819336

Token 27: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.0036190778482705355
    2. '_' → logprob: -5.628619194030762
    3. 'of' → logprob: -12.503619194030762
    4. '+' → logprob: -12.503619194030762
    5. '```' → logprob: -12.503619194030762
    6. '_character' → logprob: -13.003619194030762
    7. '__' → logprob: -13.753619194030762
    8. '_plus' → logprob: -14.003619194030762
    9. '_code' → logprob: -14.128619194030762
    10. '_next' → logprob: -15.003619194030762

Token 28: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.4743049144744873
    2. 'input' → logprob: -0.9743049144744873
    3. '_next' → logprob: -8.849305152893066
    4. 'next' → logprob: -9.599305152893066
    5. ' input' → logprob: -11.599305152893066
    6. 'inp' → logprob: -13.849305152893066
    7. '_in' → logprob: -13.974305152893066
    8. 'in' → logprob: -13.974305152893066
    9. '_character' → logprob: -14.349305152893066
    10. '```' → logprob: -14.349305152893066

Token 29: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.018151111900806427
    2. ' +' → logprob: -4.01815128326416
    3. ' plus' → logprob: -14.76815128326416
    4. '+
' → logprob: -15.01815128326416
    5. '<|end|>' → logprob: -15.14315128326416
    6. ' +
' → logprob: -16.393150329589844
    7. 'plus' → logprob: -17.268150329589844
    8. '＋' → logprob: -17.393150329589844
    9. '+</' → logprob: -18.393150329589844
    10. '+

' → logprob: -18.393150329589844

Token 30: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008614808320999146
    2. ' ' → logprob: -4.758615016937256
    3. ' ' → logprob: -15.758614540100098
    4. '   ' → logprob: -16.258615493774414
    5. '```' → logprob: -16.633615493774414
    6. '  ' → logprob: -19.008615493774414
    7. '	' → logprob: -19.571115493774414
    8. '2' → logprob: -19.821115493774414
    9. '１' → logprob: -19.821115493774414
    10. '' → logprob: -19.946115493774414

Token 31: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.375011444091797
    3. '   ' → logprob: -18.375011444091797
    4. '```' → logprob: -18.625011444091797
    5. ' ' → logprob: -19.625011444091797
    6. '  ' → logprob: -20.500011444091797
    7. '１' → logprob: -20.625011444091797
    8. '`' → logprob: -20.875011444091797
    9. '' → logprob: -20.875011444091797
    10. '۱' → logprob: -21.625011444091797

Token 32: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 33: 'next' (ID: 7311)
  Prédit: 'next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.04246440529823303
    2. '
' → logprob: -3.2924644947052
    3. ' next' → logprob: -6.667464256286621
    4. 'print' → logprob: -7.042464256286621
    5. '[next' → logprob: -7.167464256286621
    6. '_next' → logprob: -8.292464256286621
    7. '<|end|>' → logprob: -8.542464256286621
    8. '(next' → logprob: -8.542464256286621
    9. 'newline' → logprob: -8.667464256286621
    10. '```' → logprob: -9.042464256286621

Token 34: '_character' (ID: 99888)
  Prédit: '_character'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_character' → logprob: -0.0010311421938240528
    2. '_char' → logprob: -7.251030921936035
    3. '_' → logprob: -8.126030921936035
    4. 'character' → logprob: -11.376030921936035
    5. '_unicode' → logprob: -11.626030921936035
    6. '_space' → logprob: -13.876030921936035
    7. '_code' → logprob: -14.001030921936035
    8. '_chr' → logprob: -14.376030921936035
    9. '```' → logprob: -14.626030921936035
    10. '__' → logprob: -14.876030921936035

Token 35: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16220197081565857
    2. ' =' → logprob: -1.912202000617981
    3. '_' → logprob: -6.287201881408691
    4. ')' → logprob: -10.162201881408691
    5. '<|end|>' → logprob: -10.787201881408691
    6. '```' → logprob: -11.162201881408691
    7. ' ' → logprob: -11.537201881408691
    8. '_=' → logprob: -12.162201881408691
    9. 's' → logprob: -12.787201881408691
    10. '(' → logprob: -13.037201881408691

Token 36: ' chr' (ID: 42767)
  Prédit: 'chr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chr' → logprob: -0.005238736979663372
    2. ' chr' → logprob: -5.2552385330200195
    3. '(chr' → logprob: -12.25523853302002
    4. '_chr' → logprob: -15.63023853302002
    5. 'char' → logprob: -19.130239486694336
    6. 'Chr' → logprob: -20.130239486694336
    7. ' ' → logprob: -20.380239486694336
    8. '```' → logprob: -20.630239486694336
    9. 'ch' → logprob: -21.505239486694336
    10. ' Chr' → logprob: -21.880239486694336

Token 37: '(un' (ID: 33694)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20503289997577667
    2. '(un' → logprob: -1.7050329446792603
    3. '(next' → logprob: -6.080032825469971
    4. '(user' → logprob: -6.705032825469971
    5. 'unicode' → logprob: -10.830033302307129
    6. ' (' → logprob: -11.205033302307129
    7. '(u' → logprob: -11.455033302307129
    8. '(ord' → logprob: -11.455033302307129
    9. '(
' → logprob: -11.580033302307129
    10. '(unit' → logprob: -11.705033302307129

Token 38: 'icode' (ID: 21778)
  Prédit: 'icode'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icode' → logprob: -4.246537173457909e-06
    2. 'code' → logprob: -12.875003814697266
    3. 'ICODE' → logprob: -13.500003814697266
    4. 'i' → logprob: -15.375003814697266
    5. 'ic' → logprob: -17.750003814697266
    6. 'ique' → logprob: -18.625003814697266
    7. 'icide' → logprob: -19.250003814697266
    8. 'ocode' → logprob: -19.875003814697266
    9. 'unicode' → logprob: -20.250003814697266
    10. 'incode' → logprob: -20.750003814697266

Token 39: '_code' (ID: 8330)
  Prédit: '_code'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_code' → logprob: -3.128163257315464e-07
    2. 'code' → logprob: -16.375
    3. '_cod' → logprob: -17.0
    4. '_CODE' → logprob: -17.125
    5. '_co' → logprob: -17.625
    6. '_Code' → logprob: -17.875
    7. '_' → logprob: -18.125
    8. ')' → logprob: -18.125
    9. '_unicode' → logprob: -18.25
    10. 'Code' → logprob: -18.625

Token 40: '_point' (ID: 15466)
  Prédit: '_code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_code' → logprob: -0.0028764382004737854
    2. '_point' → logprob: -5.877876281738281
    3. 'code' → logprob: -9.752876281738281
    4. 'point' → logprob: -11.627876281738281
    5. '_points' → logprob: -13.877876281738281
    6. 'of' → logprob: -14.252876281738281
    7. '```' → logprob: -14.502876281738281
    8. 'de' → logprob: -14.752876281738281
    9. 'Code' → logprob: -15.002876281738281
    10. 'unicode' → logprob: -15.002876281738281

Token 41: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -2.236549335066229e-05
    2. '_next' → logprob: -11.500021934509277
    3. '_unicode' → logprob: -12.000021934509277
    4. 'of' → logprob: -12.750021934509277
    5. ')' → logprob: -13.250021934509277
    6. ')_' → logprob: -15.250021934509277
    7. 'unicode' → logprob: -15.625021934509277
    8. '_)' → logprob: -15.750021934509277
    9. '+' → logprob: -16.000022888183594
    10. '_to' → logprob: -16.125022888183594

Token 42: '_next' (ID: 25436)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.1300848126411438
    2. 'input' → logprob: -2.130084753036499
    3. '_next' → logprob: -6.005084991455078
    4. '_input' → logprob: -7.380084991455078
    5. ' next' → logprob: -9.880084991455078
    6. '(next' → logprob: -12.880084991455078
    7. 'output' → logprob: -13.755084991455078
    8. '1' → logprob: -14.005084991455078
    9. ' input' → logprob: -14.005084991455078
    10. '	next' → logprob: -14.255084991455078

Token 43: '_character' (ID: 99888)
  Prédit: '_character'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_character' → logprob: -0.00023739055905025452
    2. 'character' → logprob: -8.375237464904785
    3. '_char' → logprob: -13.000237464904785
    4. '_' → logprob: -13.250237464904785
    5. '_CHARACTER' → logprob: -13.250237464904785
    6. '_code' → logprob: -14.125237464904785
    7. '_token' → logprob: -17.25023651123047
    8. '_c' → logprob: -17.50023651123047
    9. 'Character' → logprob: -18.00023651123047
    10. 'char' → logprob: -18.37523651123047

Token 44: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5048530030981055e-06
    2. '))' → logprob: -14.000001907348633
    3. ' )' → logprob: -14.875001907348633
    4. ')`' → logprob: -16.000001907348633
    5. ')
' → logprob: -16.250001907348633
    6. ')}' → logprob: -17.500001907348633
    7. '')' → logprob: -17.625001907348633
    8. ')))' → logprob: -18.000001907348633
    9. ')#' → logprob: -18.500001907348633
    10. '),' → logprob: -18.625001907348633

Token 45: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.747814349073451e-05
    2. ' print' → logprob: -11.750017166137695
    3. '<|end|>' → logprob: -12.625017166137695
    4. '```' → logprob: -13.250017166137695
    5. '#print' → logprob: -13.375017166137695
    6. '(print' → logprob: -13.625017166137695
    7. ')' → logprob: -14.500017166137695
    8. '#' → logprob: -14.875017166137695
    9. '
' → logprob: -15.375017166137695
    10. '.print' → logprob: -15.500017166137695

Token 46: '(next' (ID: 28757)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03820202127099037
    2. '(next' → logprob: -3.2882020473480225
    3. '("("' → logprob: -9.288202285766602
    4. '('' → logprob: -9.788202285766602
    5. '()' → logprob: -13.038202285766602
    6. '((' → logprob: -13.163202285766602
    7. '(print' → logprob: -13.288202285766602
    8. '(`' → logprob: -13.913202285766602
    9. '(f' → logprob: -14.038202285766602
    10. '(

' → logprob: -14.663202285766602

Token 47: '_character' (ID: 99888)
  Prédit: '_character'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_character' → logprob: -6.704273118884885e-07
    2. '_char' → logprob: -14.625000953674316
    3. '_CHARACTER' → logprob: -16.5
    4. 'character' → logprob: -16.75
    5. '_' → logprob: -16.875
    6. '_)' → logprob: -18.25
    7. '_car' → logprob: -19.75
    8. 'Character' → logprob: -19.75
    9. '<Character' → logprob: -20.625
    10. ')_' → logprob: -20.625

Token 48: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0280383548888494e-06
    2. '))' → logprob: -14.500000953674316
    3. ' )' → logprob: -15.625000953674316
    4. ')`' → logprob: -15.750000953674316
    5. '`)' → logprob: -16.250001907348633
    6. '')' → logprob: -17.000001907348633
    7. ')
' → logprob: -18.000001907348633
    8. '）' → logprob: -19.250001907348633
    9. '()' → logprob: -19.250001907348633
    10. ')}' → logprob: -19.375001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 46
Tokens correctement prédits (1ère position, stricte): 20
Tokens correctement prédits (1ère position, avec adaptation): 20
Tokens correctement prédits (top 10): 36
Précision stricte (1ère position): 43.48%
Précision adaptée (1ère position): 43.48%
Précision (top 10): 78.26%
================================================================================
