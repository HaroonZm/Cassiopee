================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:22:30
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
H,W=[int(x)for x in input().split()]
def F(a,b):
 return 1 if a==1 or b==1 else (a*(b//2) if b%2<1 else a*(b//2)+-~(a//2-1))
print(F(H,W))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'H' (ID: 39)
  → Token d'amorce (pas de prédiction)

Token 1: ',W' (ID: 117252)
  → Token d'amorce (pas de prédiction)

Token 2: '=[' (ID: 13370)
  → Token d'amorce (pas de prédiction)

Token 3: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.9456112384796143
    2. '32' → logprob: -1.5706112384796143
    3. ']' → logprob: -2.3206112384796143
    4. '0' → logprob: -2.5706112384796143
    5. ']int' → logprob: -2.9456112384796143
    6. '64' → logprob: -3.1956112384796143
    7. '100' → logprob: -3.4456112384796143
    8. '224' → logprob: -3.6956112384796143
    9. '240' → logprob: -3.9456112384796143
    10. '256' → logprob: -4.195611000061035

Token 4: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.39791983366012573
    2. '(i' → logprob: -1.3979198932647705
    3. '(' → logprob: -2.5229198932647705
    4. '(s' → logprob: -7.647919654846191
    5. '(input' → logprob: -8.522919654846191
    6. ']' → logprob: -9.272919654846191
    7. '(a' → logprob: -9.772919654846191
    8. '(item' → logprob: -10.022919654846191
    9. '(c' → logprob: -11.272919654846191
    10. '(
' → logprob: -11.397919654846191

Token 5: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006559623870998621
    2. '(x' → logprob: -8.375656127929688
    3. '(i' → logprob: -8.750656127929688
    4. 'for' → logprob: -9.375656127929688
    5. ')i' → logprob: -9.875656127929688
    6. ' for' → logprob: -10.000656127929688
    7. '())' → logprob: -10.875656127929688
    8. ' )' → logprob: -11.500656127929688
    9. ')x' → logprob: -11.625656127929688
    10. '(' → logprob: -11.750656127929688

Token 6: 'for' (ID: 1938)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2732582986354828
    2. '(x' → logprob: -2.0232582092285156
    3. 'for' → logprob: -3.5232582092285156
    4. '(i' → logprob: -3.7732582092285156
    5. ']' → logprob: -4.648258209228516
    6. '(input' → logprob: -4.898258209228516
    7. '(line' → logprob: -5.148258209228516
    8. '(code' → logprob: -5.273258209228516
    9. ' for' → logprob: -5.398258209228516
    10. '(s' → logprob: -5.523258209228516

Token 7: ' x' (ID: 1215)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.23026858270168304
    2. 'input' → logprob: -1.6052685976028442
    3. ' x' → logprob: -5.730268478393555
    4. 'x' → logprob: -7.105268478393555
    5. ' ' → logprob: -8.105268478393555
    6. ' in' → logprob: -8.605268478393555
    7. '_' → logprob: -9.480268478393555
    8. '=input' → logprob: -9.605268478393555
    9. 'in' → logprob: -9.730268478393555
    10. '_input' → logprob: -10.230268478393555

Token 8: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14895083010196686
    2. 'in' → logprob: -2.0239508152008057
    3. 'input' → logprob: -5.148951053619385
    4. ' input' → logprob: -8.148950576782227
    5. ' ' → logprob: -9.273950576782227
    6. '=input' → logprob: -10.398950576782227
    7. '<|end|>' → logprob: -11.273950576782227
    8. 'inp' → logprob: -12.648950576782227
    9. '_' → logprob: -12.773950576782227
    10. '  ' → logprob: -13.273950576782227

Token 9: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3868756890296936
    2. ' input' → logprob: -1.1368756294250488
    3. '(input' → logprob: -13.011876106262207
    4. '<input' → logprob: -13.886876106262207
    5. '=input' → logprob: -14.511876106262207
    6. ',input' → logprob: -15.011876106262207
    7. '[input' → logprob: -15.136876106262207
    8. '.input' → logprob: -16.13687515258789
    9. 'list' → logprob: -16.51187515258789
    10. '```' → logprob: -17.01187515258789

Token 10: '().' (ID: 1454)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.00903511606156826
    2. '().' → logprob: -5.259035110473633
    3. '()' → logprob: -5.634035110473633
    4. '()].' → logprob: -9.009035110473633
    5. '()][' → logprob: -9.759035110473633
    6. '())' → logprob: -10.759035110473633
    7. '()],' → logprob: -11.884035110473633
    8. '()>' → logprob: -12.884035110473633
    9. ']' → logprob: -12.884035110473633
    10. '(' → logprob: -13.759035110473633

Token 11: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0001137947037932463
    2. 'strip' → logprob: -9.250113487243652
    3. 'rstrip' → logprob: -11.000113487243652
    4. ' split' → logprob: -14.250113487243652
    5. '(split' → logprob: -15.875113487243652
    6. 'read' → logprob: -16.12511444091797
    7. 'spl' → logprob: -16.25011444091797
    8. 'replace' → logprob: -18.75011444091797
    9. 's' → logprob: -19.50011444091797
    10. '```' → logprob: -19.87511444091797

Token 12: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.0002695608709473163
    2. '(' → logprob: -9.125269889831543
    3. ']' → logprob: -9.625269889831543
    4. '()' → logprob: -9.875269889831543
    5. ')]' → logprob: -10.875269889831543
    6. ']()' → logprob: -11.375269889831543
    7. '())' → logprob: -11.750269889831543
    8. '()],' → logprob: -13.250269889831543
    9. '`]' → logprob: -14.625269889831543
    10. '()][' → logprob: -14.625269889831543

Token 13: 'def' (ID: 1314)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.2642825841903687
    2. '#' → logprob: -1.3892825841903687
    3. ',' → logprob: -2.264282703399658
    4. 'n' → logprob: -2.889282703399658
    5. '
' → logprob: -2.889282703399658
    6. 'for' → logprob: -2.889282703399658
    7. '*' → logprob: -3.764282703399658
    8. ']' → logprob: -3.889282703399658
    9. 'x' → logprob: -4.014282703399658
    10. '[' → logprob: -4.139282703399658

Token 14: ' F' (ID: 454)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -1.4913341999053955
    2. ' f' → logprob: -1.6163341999053955
    3. ' ' → logprob: -1.7413341999053955
    4. ' dfs' → logprob: -2.2413341999053955
    5. ' solve' → logprob: -2.4913341999053955
    6. ' max' → logprob: -2.6163341999053955
    7. ' solution' → logprob: -3.7413341999053955
    8. ' count' → logprob: -4.491333961486816
    9. ' draw' → logprob: -4.616333961486816
    10. ' find' → logprob: -4.616333961486816

Token 15: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.047375909984111786
    2. 'u' → logprob: -3.2973759174346924
    3. '(u' → logprob: -5.172375679016113
    4. 'unction' → logprob: -7.297375679016113
    5. '_' → logprob: -7.422375679016113
    6. '(a' → logprob: -7.922375679016113
    7. 'a' → logprob: -8.047375679016113
    8. ' (' → logprob: -8.047375679016113
    9. '[' → logprob: -8.797375679016113
    10. ' u' → logprob: -9.047375679016113

Token 16: ',b' (ID: 17568)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04838964343070984
    2. ')' → logprob: -3.2983896732330322
    3. ',' → logprob: -5.423389434814453
    4. 'u' → logprob: -5.923389434814453
    5. '_' → logprob: -6.798389434814453
    6. '[' → logprob: -7.048389434814453
    7. 'a' → logprob: -7.298389434814453
    8. ' ):' → logprob: -9.423389434814453
    9. '[]):' → logprob: -9.798389434814453
    10. '(' → logprob: -9.798389434814453

Token 17: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03389614075422287
    2. ')' → logprob: -3.4088962078094482
    3. ',' → logprob: -8.533896446228027
    4. ' ):' → logprob: -11.033896446228027
    5. ',a' → logprob: -11.408896446228027
    6. ':' → logprob: -11.908896446228027
    7. ']:' → logprob: -12.908896446228027
    8. ',b' → logprob: -13.283896446228027
    9. '):
' → logprob: -13.408896446228027
    10. '),' → logprob: -13.658896446228027

Token 18: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028845908120274544
    2. ' ' → logprob: -4.52884578704834
    3. ':' → logprob: -5.15384578704834
    4. ' if' → logprob: -5.52884578704834
    5. '\t' → logprob: -6.65384578704834
    6. ' return' → logprob: -6.77884578704834
    7. '    ' → logprob: -6.90384578704834
    8. '	return' → logprob: -6.90384578704834
    9. '       ' → logprob: -7.02884578704834
    10. ':return' → logprob: -7.27884578704834

Token 19: ' ' (ID: 220)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7062568664550781
    2. ' a' → logprob: -0.7062568664550781
    3. '0' → logprob: -5.831256866455078
    4. ' (' → logprob: -5.956256866455078
    5. ' ' → logprob: -6.206256866455078
    6. ' max' → logprob: -6.456256866455078
    7. 'abs' → logprob: -6.831256866455078
    8. ' abs' → logprob: -6.956256866455078
    9. '(a' → logprob: -7.581256866455078
    10. '(' → logprob: -7.956256866455078

Token 20: '1' (ID: 16)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.06479810178279877
    2. 'abs' → logprob: -3.93979811668396
    3. 'max' → logprob: -4.189797878265381
    4. '0' → logprob: -4.689797878265381
    5. '1' → logprob: -5.064797878265381
    6. '(a' → logprob: -5.439797878265381
    7. ' a' → logprob: -6.189797878265381
    8. 'min' → logprob: -6.439797878265381
    9. 'b' → logprob: -7.189797878265381
    10. '(' → logprob: -7.189797878265381

Token 21: ' if' (ID: 538)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.13895918428897858
    2. '*' → logprob: -2.8889591693878174
    3. '(' → logprob: -3.5139591693878174
    4. '0' → logprob: -3.5139591693878174
    5. ' ' → logprob: -5.7639594078063965
    6. '\' → logprob: -6.3889594078063965
    7. '\n' → logprob: -6.3889594078063965
    8. '+
' → logprob: -6.5139594078063965
    9. ')' → logprob: -6.7639594078063965
    10. ',' → logprob: -7.3889594078063965

Token 22: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.31349924206733704
    2. 'a' → logprob: -1.3134992122650146
    3. ' b' → logprob: -9.063499450683594
    4. 'b' → logprob: -9.813499450683594
    5. ' (' → logprob: -10.813499450683594
    6. ' not' → logprob: -10.813499450683594
    7. '(a' → logprob: -10.938499450683594
    8. ' ' → logprob: -12.313499450683594
    9. '0' → logprob: -13.688499450683594
    10. ' abs' → logprob: -13.688499450683594

Token 23: '==' (ID: 560)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.4425896108150482
    2. ' >' → logprob: -1.5675896406173706
    3. '==' → logprob: -2.692589521408081
    4. ' ==' → logprob: -3.567589521408081
    5. '<' → logprob: -3.817589521408081
    6. ' <' → logprob: -4.69258975982666
    7. '>=' → logprob: -4.81758975982666
    8. ' >=' → logprob: -4.94258975982666
    9. ' ' → logprob: -6.06758975982666
    10. '<=' → logprob: -6.31758975982666

Token 24: '1' (ID: 16)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.007464881986379623
    2. ' b' → logprob: -5.50746488571167
    3. '0' → logprob: -5.75746488571167
    4. ' ' → logprob: -8.632464408874512
    5. '1' → logprob: -10.132464408874512
    6. 'a' → logprob: -13.632464408874512
    7. '=b' → logprob: -14.757464408874512
    8. '>b' → logprob: -14.882464408874512
    9. ')b' → logprob: -15.507464408874512
    10. '2' → logprob: -15.757464408874512

Token 25: ' or' (ID: 503)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.07290854305028915
    2. 'and' → logprob: -3.197908639907837
    3. ' else' → logprob: -3.572908639907837
    4. ' or' → logprob: -7.197908401489258
    5. 'else' → logprob: -7.947908401489258
    6. ' ' → logprob: -8.197908401489258
    7. '0' → logprob: -11.822908401489258
    8. '  ' → logprob: -12.947908401489258
    9. 'or' → logprob: -13.072908401489258
    10. '    ' → logprob: -14.072908401489258

Token 26: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5759441256523132
    2. ' b' → logprob: -0.8259441256523132
    3. ' ' → logprob: -12.700943946838379
    4. 'a' → logprob: -14.075943946838379
    5. '1' → logprob: -14.825943946838379
    6. ' ' → logprob: -15.825943946838379
    7. ' a' → logprob: -16.075944900512695
    8. '	b' → logprob: -16.575944900512695
    9. '>b' → logprob: -17.200944900512695
    10. ',b' → logprob: -17.450944900512695

Token 27: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.06206594035029411
    2. ' ==' → logprob: -2.812065839767456
    3. '<|end|>' → logprob: -9.812066078186035
    4. ' ' → logprob: -11.062066078186035
    5. ' ' → logprob: -12.562066078186035
    6. '=' → logprob: -12.562066078186035
    7. '```' → logprob: -12.687066078186035
    8. '[' → logprob: -13.062066078186035
    9. ']==' → logprob: -13.062066078186035
    10. '==
' → logprob: -13.312066078186035

Token 28: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007989077712409198
    2. '0' → logprob: -7.25079870223999
    3. ' ' → logprob: -9.375799179077148
    4. 'H' → logprob: -13.625799179077148
    5. '2' → logprob: -14.000799179077148
    6. 'W' → logprob: -14.563299179077148
    7. '```' → logprob: -14.875799179077148
    8. '   ' → logprob: -15.813299179077148
    9. '-' → logprob: -15.875799179077148
    10. '  ' → logprob: -16.37579917907715

Token 29: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.004920162260532379
    2. ' or' → logprob: -5.75492000579834
    3. 'else' → logprob: -6.87992000579834
    4. ' and' → logprob: -8.12992000579834
    5. ' ' → logprob: -8.37992000579834
    6. ' return' → logprob: -9.00492000579834
    7. '0' → logprob: -11.62992000579834
    8. ' ' → logprob: -11.75492000579834
    9. '	else' → logprob: -12.00492000579834
    10. ' 
' → logprob: -12.12992000579834

Token 30: ' (' (ID: 350)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5619295835494995
    2. ' a' → logprob: -1.1869295835494995
    3. 'F' → logprob: -2.686929702758789
    4. ' F' → logprob: -2.936929702758789
    5. '0' → logprob: -7.186929702758789
    6. '(a' → logprob: -7.186929702758789
    7. ' (' → logprob: -7.436929702758789
    8. ' ' → logprob: -7.561929702758789
    9. ' max' → logprob: -8.186929702758789
    10. ' min' → logprob: -8.811929702758789

Token 31: 'a' (ID: 64)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.34765154123306274
    2. ' F' → logprob: -1.722651481628418
    3. 'a' → logprob: -2.347651481628418
    4. ' a' → logprob: -3.972651481628418
    5. ' (' → logprob: -8.222651481628418
    6. '(a' → logprob: -8.472651481628418
    7. ' ' → logprob: -9.222651481628418
    8. '(' → logprob: -10.722651481628418
    9. ')' → logprob: -11.972651481628418
    10. '0' → logprob: -12.597651481628418

Token 32: '*(' (ID: 14793)
  Prédit: '*b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*b' → logprob: -0.6450456380844116
    2. '*' → logprob: -0.7700456380844116
    3. ' *' → logprob: -4.645045757293701
    4. '-' → logprob: -7.020045757293701
    5. '*f' → logprob: -7.645045757293701
    6. '%' → logprob: -8.020045280456543
    7. '**' → logprob: -8.020045280456543
    8. '%b' → logprob: -8.645045280456543
    9. ' ' → logprob: -9.020045280456543
    10. '*a' → logprob: -9.770045280456543

Token 33: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0019376773852854967
    2. 'F' → logprob: -7.0019378662109375
    3. ' b' → logprob: -7.2519378662109375
    4. '(b' → logprob: -8.876937866210938
    5. 'a' → logprob: -9.626937866210938
    6. '1' → logprob: -10.876937866210938
    7. ' ' → logprob: -11.126937866210938
    8. '(a' → logprob: -11.251937866210938
    9. ' (' → logprob: -11.251937866210938
    10. 'H' → logprob: -11.501937866210938

Token 34: '//' (ID: 393)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.05586928874254227
    2. ' -' → logprob: -3.0558693408966064
    3. '+' → logprob: -5.055869102478027
    4. ')' → logprob: -7.805869102478027
    5. ')-' → logprob: -8.305869102478027
    6. ' )' → logprob: -9.305869102478027
    7. ' +' → logprob: -9.930869102478027
    8. '-)' → logprob: -10.430869102478027
    9. '))' → logprob: -10.930869102478027
    10. '//' → logprob: -11.680869102478027

Token 35: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.021268269047141075
    2. 'a' → logprob: -4.021268367767334
    3. '1' → logprob: -5.896268367767334
    4. ' ' → logprob: -8.521267890930176
    5. '3' → logprob: -10.271267890930176
    6. 'b' → logprob: -10.396267890930176
    7. ' a' → logprob: -11.146267890930176
    8. 'H' → logprob: -11.208767890930176
    9. 'W' → logprob: -11.521267890930176
    10. '4' → logprob: -11.521267890930176

Token 36: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25687819719314575
    2. ')+' → logprob: -2.131878137588501
    3. '+' → logprob: -3.256878137588501
    4. '))' → logprob: -3.506878137588501
    5. ')+(' → logprob: -4.25687837600708
    6. ' )' → logprob: -4.38187837600708
    7. ' +' → logprob: -5.00687837600708
    8. ')))' → logprob: -6.13187837600708
    9. ')*' → logprob: -6.38187837600708
    10. '*' → logprob: -7.13187837600708

Token 37: ' if' (ID: 538)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8140733242034912
    2. ')' → logprob: -1.1890733242034912
    3. ')+' → logprob: -2.189073324203491
    4. ' +' → logprob: -2.314073324203491
    5. ')+(' → logprob: -3.689073324203491
    6. ' )' → logprob: -4.31407356262207
    7. '+(' → logprob: -7.43907356262207
    8. '+)' → logprob: -7.56407356262207
    9. '*' → logprob: -7.81407356262207
    10. ')*' → logprob: -8.06407356262207

Token 38: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.38908651471138
    2. ' a' → logprob: -1.5140864849090576
    3. 'b' → logprob: -2.6390864849090576
    4. 'a' → logprob: -3.5140864849090576
    5. ' (' → logprob: -7.889086723327637
    6. '(a' → logprob: -8.389086723327637
    7. ' ' → logprob: -8.514086723327637
    8. '(b' → logprob: -9.264086723327637
    9. ' H' → logprob: -9.514086723327637
    10. ' not' → logprob: -10.264086723327637

Token 39: '%' (ID: 4)
  Prédit: '%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.0220143124461174
    2. '==' → logprob: -4.397014141082764
    3. ' %' → logprob: -4.772014141082764
    4. '<=' → logprob: -8.272014617919922
    5. '>=' → logprob: -8.522014617919922
    6. '<|end|>' → logprob: -9.022014617919922
    7. ' ==' → logprob: -9.147014617919922
    8. ' ' → logprob: -9.647014617919922
    9. '2' → logprob: -10.272014617919922
    10. '1' → logprob: -10.834514617919922

Token 40: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0006671638693660498
    2. ' ' → logprob: -7.375667095184326
    3. '==' → logprob: -11.125667572021484
    4. '```' → logprob: -11.750667572021484
    5. '202' → logprob: -12.375667572021484
    6. '0' → logprob: -13.125667572021484
    7. '20' → logprob: -13.563167572021484
    8. '>' → logprob: -13.875667572021484
    9. '<|end|>' → logprob: -14.063167572021484
    10. '...' → logprob: -14.500667572021484

Token 41: '<' (ID: 27)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.027494417503476143
    2. ' ==' → logprob: -3.902494430541992
    3. ' else' → logprob: -5.902494430541992
    4. '0' → logprob: -6.027494430541992
    5. 'else' → logprob: -6.402494430541992
    6. ' ' → logprob: -10.277494430541992
    7. '!=' → logprob: -10.777494430541992
    8. '==
' → logprob: -11.027494430541992
    9. ')==' → logprob: -11.277494430541992
    10. '=' → logprob: -11.777494430541992

Token 42: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001975503284484148
    2. '2' → logprob: -6.7519755363464355
    3. ' ' → logprob: -7.2519755363464355
    4. '>' → logprob: -9.876975059509277
    5. '=' → logprob: -10.876975059509277
    6. 'b' → logprob: -11.751975059509277
    7. '0' → logprob: -12.001975059509277
    8. '```' → logprob: -13.189475059509277
    9. 'a' → logprob: -13.814475059509277
    10. '[' → logprob: -14.189475059509277

Token 43: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.00862213596701622
    2. 'else' → logprob: -4.758622169494629
    3. ' ' → logprob: -12.133622169494629
    4. '	else' → logprob: -13.883622169494629
    5. ')' → logprob: -14.008622169494629
    6. ' )' → logprob: -15.633622169494629
    7. '_else' → logprob: -16.383621215820312
    8. '```' → logprob: -16.633621215820312
    9. ' ' → logprob: -17.008621215820312
    10. 'Else' → logprob: -17.258621215820312

Token 44: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.5617052912712097
    2. 'a' → logprob: -1.1867053508758545
    3. ' (' → logprob: -2.5617053508758545
    4. '(a' → logprob: -3.4367053508758545
    5. ' F' → logprob: -5.561705112457275
    6. ' max' → logprob: -5.811705112457275
    7. ' ' → logprob: -6.061705112457275
    8. 'F' → logprob: -6.311705112457275
    9. '(' → logprob: -6.936705112457275
    10. ' ((' → logprob: -7.061705112457275

Token 45: '*(' (ID: 14793)
  Prédit: '*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*(' → logprob: -0.9121904969215393
    2. '*((' → logprob: -1.0371904373168945
    3. '*' → logprob: -1.4121904373168945
    4. '*b' → logprob: -9.162190437316895
    5. '**' → logprob: -9.412190437316895
    6. ' *' → logprob: -9.912190437316895
    7. ' *((' → logprob: -11.162190437316895
    8. ' *(' → logprob: -12.037190437316895
    9. '*[' → logprob: -12.037190437316895
    10. '*f' → logprob: -12.162190437316895

Token 46: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5528263449668884
    2. '(b' → logprob: -0.9278263449668884
    3. ' b' → logprob: -3.927826404571533
    4. ' (' → logprob: -4.802826404571533
    5. '(' → logprob: -7.302826404571533
    6. '((' → logprob: -7.927826404571533
    7. ' ' → logprob: -8.552825927734375
    8. '1' → logprob: -10.302825927734375
    9. '  ' → logprob: -11.115325927734375
    10. '   ' → logprob: -11.240325927734375

Token 47: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -4.1557283111615106e-05
    2. ' //' → logprob: -10.500041961669922
    3. '2' → logprob: -12.125041961669922
    4. '-' → logprob: -13.250041961669922
    5. '//=' → logprob: -13.500041961669922
    6. '#' → logprob: -13.750041961669922
    7. '>>' → logprob: -13.750041961669922
    8. '```' → logprob: -14.375041961669922
    9. '1' → logprob: -14.500041961669922
    10. ' ' → logprob: -15.000041961669922

Token 48: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.741137283621356e-05
    2. ' ' → logprob: -9.875057220458984
    3. '1' → logprob: -12.625057220458984
    4. '<|end|>' → logprob: -14.125057220458984
    5. '3' → logprob: -14.750057220458984
    6. ')' → logprob: -14.750057220458984
    7. '```' → logprob: -15.125057220458984
    8. '+' → logprob: -15.812557220458984
    9. '(' → logprob: -16.500057220458984
    10. '>' → logprob: -16.562557220458984

Token 49: ')+' (ID: 16161)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.11407353729009628
    2. ' +' → logprob: -2.8640735149383545
    3. ')+' → logprob: -3.1140735149383545
    4. ')' → logprob: -5.989073753356934
    5. ')+(' → logprob: -6.239073753356934
    6. '+b' → logprob: -7.114073753356934
    7. ' )' → logprob: -7.364073753356934
    8. '+)' → logprob: -8.489073753356934
    9. '+(' → logprob: -9.864073753356934
    10. '+a' → logprob: -10.364073753356934

Token 50: '-' (ID: 12)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.006695122458040714
    2. '1' → logprob: -6.00669527053833
    3. ' a' → logprob: -6.00669527053833
    4. '(a' → logprob: -6.50669527053833
    5. ' (' → logprob: -9.381694793701172
    6. 'F' → logprob: -9.381694793701172
    7. '(' → logprob: -9.631694793701172
    8. ' ' → logprob: -11.506694793701172
    9. ' F' → logprob: -13.006694793701172
    10. '((' → logprob: -13.131694793701172

Token 51: '~' (ID: 93)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.45245423913002014
    2. '(a' → logprob: -1.7024542093276978
    3. '1' → logprob: -2.4524543285369873
    4. ' a' → logprob: -3.0774543285369873
    5. ' (' → logprob: -3.2024543285369873
    6. '(' → logprob: -4.952454090118408
    7. ' ' → logprob: -7.202454090118408
    8. '((' → logprob: -7.327454090118408
    9. '2' → logprob: -9.452454566955566
    10. ' ((' → logprob: -9.827454566955566

Token 52: '(' (ID: 7)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.03302065283060074
    2. '(a' → logprob: -3.6580207347869873
    3. ' a' → logprob: -5.658020496368408
    4. ' (' → logprob: -6.033020496368408
    5. '(' → logprob: -7.158020496368408
    6. ')a' → logprob: -12.033020973205566
    7. ' ' → logprob: -12.408020973205566
    8. '((' → logprob: -12.408020973205566
    9. '(
' → logprob: -12.908020973205566
    10. '	a' → logprob: -13.158020973205566

Token 53: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0002627662615850568
    2. ' a' → logprob: -8.250263214111328
    3. ' ' → logprob: -14.625263214111328
    4. ')a' → logprob: -15.000263214111328
    5. '(a' → logprob: -15.625263214111328
    6. '	a' → logprob: -15.625263214111328
    7. '  ' → logprob: -16.375263214111328
    8. ')' → logprob: -16.500263214111328
    9. '1' → logprob: -16.875263214111328
    10. '   ' → logprob: -17.125263214111328

Token 54: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.9383969306945801
    2. ')' → logprob: -1.31339693069458
    3. ' //' → logprob: -2.81339693069458
    4. ')//' → logprob: -2.81339693069458
    5. '-' → logprob: -2.93839693069458
    6. '1' → logprob: -3.18839693069458
    7. '(' → logprob: -3.56339693069458
    8. '(a' → logprob: -4.31339693069458
    9. 'b' → logprob: -4.43839693069458
    10. ' )' → logprob: -4.68839693069458

Token 55: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00040767391328699887
    2. ' ' → logprob: -8.125407218933105
    3. '1' → logprob: -9.125407218933105
    4. ')' → logprob: -13.500407218933105
    5. '```' → logprob: -15.437907218933105
    6. '-' → logprob: -15.812907218933105
    7. '3' → logprob: -15.937907218933105
    8. '~' → logprob: -16.312908172607422
    9. '(' → logprob: -16.625408172607422
    10. '  ' → logprob: -16.687908172607422

Token 56: '-' (ID: 12)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.09429493546485901
    2. ')' → logprob: -2.719295024871826
    3. ')))' → logprob: -3.844295024871826
    4. ' ))' → logprob: -6.969295024871826
    5. ')*' → logprob: -7.594295024871826
    6. ' )' → logprob: -8.469294548034668
    7. ')a' → logprob: -8.594294548034668
    8. ')+' → logprob: -8.719294548034668
    9. '))*' → logprob: -9.469294548034668
    10. '))))' → logprob: -9.469294548034668

Token 57: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007362406235188246
    2. '0' → logprob: -5.757362365722656
    3. ')' → logprob: -5.882362365722656
    4. ' ' → logprob: -6.632362365722656
    5. '<|end|>' → logprob: -9.882362365722656
    6. '-' → logprob: -12.507362365722656
    7. '2' → logprob: -12.507362365722656
    8. ')a' → logprob: -12.757362365722656
    9. ' )' → logprob: -12.882362365722656
    10. ')>' → logprob: -14.257362365722656

Token 58: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05695531517267227
    2. '))' → logprob: -3.181955337524414
    3. ')))' → logprob: -5.056955337524414
    4. ' )' → logprob: -5.431955337524414
    5. ')*' → logprob: -6.681955337524414
    6. ')+' → logprob: -7.806955337524414
    7. ')])' → logprob: -8.056955337524414
    8. '+' → logprob: -8.431955337524414
    9. ' ' → logprob: -8.681955337524414
    10. '1' → logprob: -9.056955337524414

Token 59: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 60: '(F' (ID: 12044)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0007706748438067734
    2. '((' → logprob: -8.875770568847656
    3. '('' → logprob: -9.000770568847656
    4. '(print' → logprob: -9.125770568847656
    5. '(eval' → logprob: -9.625770568847656
    6. '("("' → logprob: -9.875770568847656
    7. '(f' → logprob: -10.125770568847656
    8. '()' → logprob: -10.125770568847656
    9. '(end' → logprob: -10.375770568847656
    10. '(F' → logprob: -10.375770568847656

Token 61: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.08244603127241135
    2. '(W' → logprob: -2.5824460983276367
    3. '(' → logprob: -5.707446098327637
    4. ')' → logprob: -9.207446098327637
    5. '((' → logprob: -9.707446098327637
    6. ')(' → logprob: -10.332446098327637
    7. 'H' → logprob: -11.457446098327637
    8. '(F' → logprob: -12.707446098327637
    9. '(w' → logprob: -12.707446098327637
    10. ' (' → logprob: -13.207446098327637

Token 62: ',W' (ID: 117252)
  Prédit: ',W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',W' → logprob: -0.4756269156932831
    2. ',' → logprob: -0.9756269454956055
    3. ',F' → logprob: -7.1006269454956055
    4. ',H' → logprob: -7.7256269454956055
    5. ' ,' → logprob: -9.225626945495605
    6. ',w' → logprob: -10.225626945495605
    7. ',K' → logprob: -10.725626945495605
    8. ')' → logprob: -10.850626945495605
    9. ',I' → logprob: -11.225626945495605
    10. ',S' → logprob: -11.225626945495605

Token 63: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.04331270977854729
    2. ')' → logprob: -3.1683127880096436
    3. ')))' → logprob: -8.918313026428223
    4. ' ))' → logprob: -9.043313026428223
    5. ' )' → logprob: -10.418313026428223
    6. '),' → logprob: -11.043313026428223
    7. '))
' → logprob: -12.043313026428223
    8. ' ' → logprob: -12.918313026428223
    9. ',' → logprob: -13.168313026428223
    10. ')}' → logprob: -14.668313026428223


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 61
Tokens correctement prédits (1ère position, stricte): 29
Tokens correctement prédits (1ère position, avec adaptation): 29
Tokens correctement prédits (top 10): 48
Précision stricte (1ère position): 47.54%
Précision adaptée (1ère position): 47.54%
Précision (top 10): 78.69%
================================================================================
