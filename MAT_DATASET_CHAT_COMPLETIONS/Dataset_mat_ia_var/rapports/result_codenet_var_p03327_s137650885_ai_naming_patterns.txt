================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:16:20
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
user_input_value = int(input())

if user_input_value <= 999:
    output_label = "ABC"
else:
    output_label = "ABD"

print(output_label)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'user' (ID: 1428)
  → Token d'amorce (pas de prédiction)

Token 1: '_input' (ID: 12507)
  → Token d'amorce (pas de prédiction)

Token 2: '_value' (ID: 6734)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.31462135910987854
    2. '[' → logprob: -2.1896214485168457
    3. '.' → logprob: -2.8146214485168457
    4. '=' → logprob: -2.9396214485168457
    5. ')' → logprob: -4.064621448516846
    6. '```' → logprob: -4.689621448516846
    7. ' ' → logprob: -5.064621448516846
    8. ']' → logprob: -5.689621448516846
    9. ' =' → logprob: -5.689621448516846
    10. '+' → logprob: -6.689621448516846

Token 4: ' int' (ID: 677)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -1.1419508457183838
    2. ' "' → logprob: -1.6419508457183838
    3. ' ' → logprob: -1.7669508457183838
    4. 'input' → logprob: -1.8919508457183838
    5. '"' → logprob: -2.266950845718384
    6. ' '' → logprob: -3.766950845718384
    7. ' ""' → logprob: -4.516950607299805
    8. ''' → logprob: -4.891950607299805
    9. '""' → logprob: -5.016950607299805
    10. ' ''' → logprob: -5.141950607299805

Token 5: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007597992196679115
    2. '(user' → logprob: -5.882597923278809
    3. 'user' → logprob: -6.132597923278809
    4. '('' → logprob: -7.507597923278809
    5. '```' → logprob: -7.632597923278809
    6. ''' → logprob: -7.632597923278809
    7. '[' → logprob: -8.632597923278809
    8. '`' → logprob: -8.632597923278809
    9. ')' → logprob: -9.132597923278809
    10. '("("' → logprob: -9.132597923278809

Token 6: '())

' (ID: 27654)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0394771471619606
    2. ')' → logprob: -3.7894771099090576
    3. '()' → logprob: -4.664477348327637
    4. '('' → logprob: -5.914477348327637
    5. '())' → logprob: -6.164477348327637
    6. '("("' → logprob: -7.539477348327637
    7. '(user' → logprob: -7.914477348327637
    8. '(
' → logprob: -8.414477348327637
    9. '(()' → logprob: -9.039477348327637
    10. '(""))' → logprob: -9.039477348327637

Token 7: 'if' (ID: 366)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.32540082931518555
    2. '*' → logprob: -1.5754008293151855
    3. ')' → logprob: -3.2004008293151855
    4. 'if' → logprob: -4.4504008293151855
    5. '%' → logprob: -5.2004008293151855
    6. ' ' → logprob: -5.7004008293151855
    7. ' if' → logprob: -6.2004008293151855
    8. '.' → logprob: -6.4504008293151855
    9. '#' → logprob: -6.7004008293151855
    10. ' +' → logprob: -7.0754008293151855

Token 8: ' user' (ID: 1825)
  Prédit: ' user'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' user' → logprob: -0.019191987812519073
    2. ' ' → logprob: -4.144192218780518
    3. 'user' → logprob: -5.769192218780518
    4. '  ' → logprob: -10.64419174194336
    5. ' ' → logprob: -13.14419174194336
    6. '"user' → logprob: -13.89419174194336
    7. ' not' → logprob: -14.14419174194336
    8. '	user' → logprob: -14.26919174194336
    9. '_user' → logprob: -14.51919174194336
    10. '(user' → logprob: -15.14419174194336

Token 9: '_input' (ID: 12507)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3617636263370514
    2. '_input' → logprob: -1.236763596534729
    3. '._' → logprob: -5.2367634773254395
    4. ' _' → logprob: -5.2367634773254395
    5. '_user' → logprob: -7.1117634773254395
    6. '.' → logprob: -8.111763954162598
    7. '_value' → logprob: -8.361763954162598
    8. '_.' → logprob: -8.486763954162598
    9. '```' → logprob: -8.486763954162598
    10. '_put' → logprob: -8.611763954162598

Token 10: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.008185925893485546
    2. '_' → logprob: -4.883185863494873
    3. '_val' → logprob: -7.508185863494873
    4. '```' → logprob: -11.883186340332031
    5. ')_' → logprob: -12.133186340332031
    6. ' _' → logprob: -12.883186340332031
    7. '_Value' → logprob: -13.008186340332031
    8. '_v' → logprob: -13.258186340332031
    9. '_code' → logprob: -13.508186340332031
    10. '_values' → logprob: -13.633186340332031

Token 11: ' <=' (ID: 5017)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.050478097051382065
    2. ' ==' → logprob: -4.050477981567383
    3. '>' → logprob: -4.675477981567383
    4. ' ' → logprob: -4.675477981567383
    5. ' >=' → logprob: -5.300477981567383
    6. ' <' → logprob: -5.425477981567383
    7. '  ' → logprob: -6.675477981567383
    8. ' %' → logprob: -6.925477981567383
    9. ')' → logprob: -7.675477981567383
    10. ' <=' → logprob: -8.300477981567383

Token 12: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.002004768932238221
    2. '10' → logprob: -6.377004623413086
    3. '0' → logprob: -8.377004623413086
    4. '5' → logprob: -10.252004623413086
    5. '100' → logprob: -10.627004623413086
    6. '20' → logprob: -12.377004623413086
    7. '50' → logprob: -12.627004623413086
    8. '1' → logprob: -13.877004623413086
    9. '9' → logprob: -13.877004623413086
    10. '  ' → logprob: -14.002004623413086

Token 13: '999' (ID: 9130)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.5893582105636597
    2. '0' → logprob: -1.3393582105636597
    3. ' ' → logprob: -1.8393582105636597
    4. '100' → logprob: -3.839358329772949
    5. '5' → logprob: -6.339358329772949
    6. '50' → logprob: -7.464358329772949
    7. '1' → logprob: -8.71435832977295
    8. '18' → logprob: -9.58935832977295
    9. '  ' → logprob: -9.58935832977295
    10. '20' → logprob: -9.71435832977295

Token 14: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.747814349073451e-05
    2. '':' → logprob: -12.375017166137695
    3. ':**' → logprob: -12.375017166137695
    4. '):' → logprob: -12.500017166137695
    5. '':'' → logprob: -13.375017166137695
    6. ':
' → logprob: -13.375017166137695
    7. '>:' → logprob: -14.000017166137695
    8. ' and' → logprob: -14.875017166137695
    9. ' :' → logprob: -15.375017166137695
    10. '":' → logprob: -15.625017166137695

Token 15: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013156707398593426
    2. ':' → logprob: -5.263156890869141
    3. '    
' → logprob: -5.888156890869141
    4. 'print' → logprob: -6.638156890869141
    5. '\n' → logprob: -6.888156890869141
    6. ':
' → logprob: -7.013156890869141
    7. ' print' → logprob: -7.638156890869141
    8. '    ' → logprob: -7.763156890869141
    9. '\' → logprob: -8.01315689086914
    10. ' ' → logprob: -9.26315689086914

Token 16: ' output' (ID: 4733)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.4551001489162445
    2. '   ' → logprob: -1.330100178718567
    3. 'print' → logprob: -2.3301000595092773
    4. '    ' → logprob: -5.705100059509277
    5. ' ' → logprob: -8.955100059509277
    6. ' pass' → logprob: -9.080100059509277
    7. '       ' → logprob: -9.580100059509277
    8. '    
' → logprob: -9.955100059509277
    9. '	print' → logprob: -10.080100059509277
    10. ' ' → logprob: -10.830100059509277

Token 17: '_label' (ID: 13175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.16282159090042114
    2. '(' → logprob: -3.2878215312957764
    3. '_value' → logprob: -3.6628215312957764
    4. '()' → logprob: -3.7878215312957764
    5. '"' → logprob: -3.9128215312957764
    6. ' =' → logprob: -4.5378217697143555
    7. ')' → logprob: -4.7878217697143555
    8. '```' → logprob: -5.6628217697143555
    9. '.' → logprob: -6.0378217697143555
    10. '\' → logprob: -6.1628217697143555

Token 18: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.004649776499718428
    2. '.config' → logprob: -6.629649639129639
    3. ' .' → logprob: -6.879649639129639
    4. '.value' → logprob: -7.254649639129639
    5. '.text' → logprob: -7.379649639129639
    6. ' =' → logprob: -8.754650115966797
    7. '.configure' → logprob: -8.754650115966797
    8. '.set' → logprob: -8.879650115966797
    9. '.write' → logprob: -9.004650115966797
    10. ').' → logprob: -10.004650115966797

Token 19: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.7064112424850464
    2. ' "' → logprob: -1.2064112424850464
    3. ''' → logprob: -2.831411361694336
    4. '"user' → logprob: -2.956411361694336
    5. ' '' → logprob: -3.456411361694336
    6. ' user' → logprob: -3.456411361694336
    7. ' str' → logprob: -4.456411361694336
    8. 'user' → logprob: -4.706411361694336
    9. ''user' → logprob: -5.581411361694336
    10. 'str' → logprob: -5.706411361694336

Token 20: 'ABC' (ID: 44197)
  Prédit: 'Low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Low' → logprob: -0.7667760252952576
    2. '"' → logprob: -1.6417760848999023
    3. 'Valid' → logprob: -2.8917760848999023
    4. ''' → logprob: -3.2667760848999023
    5. 'Good' → logprob: -3.3917760848999023
    6. 'low' → logprob: -3.7667760848999023
    7. '三' → logprob: -3.8917760848999023
    8. 'Less' → logprob: -4.016776084899902
    9. '999' → logprob: -4.391776084899902
    10. 'Three' → logprob: -4.391776084899902

Token 21: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.00564528675749898
    2. '123' → logprob: -6.755645275115967
    3. 'def' → logprob: -7.130645275115967
    4. '"""' → logprob: -7.255645275115967
    5. '")' → logprob: -7.505645275115967
    6. '_' → logprob: -7.505645275115967
    7. 'DEF' → logprob: -7.630645275115967
    8. '_"' → logprob: -7.630645275115967
    9. 'D' → logprob: -9.005645751953125
    10. '"}' → logprob: -9.005645751953125

Token 22: 'else' (ID: 2807)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.8023579716682434
    2. 'else' → logprob: -1.3023579120635986
    3. '<|end|>' → logprob: -1.9273579120635986
    4. ' else' → logprob: -3.0523579120635986
    5. ':' → logprob: -3.8023579120635986
    6. '   ' → logprob: -3.9273579120635986
    7. ' elif' → logprob: -4.302358150482178
    8. '
' → logprob: -4.427358150482178
    9. '<|end|>' → logprob: -5.927358150482178
    10. '+' → logprob: -6.052358150482178

Token 23: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.3425219549390022e-05
    2. ':
' → logprob: -11.37501335144043
    3. ' :' → logprob: -13.50001335144043
    4. '   ' → logprob: -16.37501335144043
    5. ':**' → logprob: -16.50001335144043
    6. '):' → logprob: -16.50001335144043
    7. '<|end|>' → logprob: -17.00001335144043
    8. 'if' → logprob: -17.12501335144043
    9. '```' → logprob: -17.87501335144043
    10. '=' → logprob: -17.87501335144043

Token 24: '   ' (ID: 271)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.1468740999698639
    2. ' "' → logprob: -2.021874189376831
    3. '   ' → logprob: -5.521873950958252
    4. ''' → logprob: -9.89687442779541
    5. '    ' → logprob: -10.02187442779541
    6. ' ' → logprob: -10.77187442779541
    7. '"user' → logprob: -11.64687442779541
    8. '"""' → logprob: -11.95937442779541
    9. '""' → logprob: -12.33437442779541
    10. '  ' → logprob: -12.45937442779541

Token 25: ' output' (ID: 4733)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.05563252046704292
    2. ' "' → logprob: -3.1806325912475586
    3. ' output' → logprob: -5.305632591247559
    4. 'output' (adapté à ' output') → logprob: -6.055632591247559
    5. '   ' → logprob: -6.180632591247559
    6. '    ' → logprob: -6.555632591247559
    7. ''' → logprob: -6.930632591247559
    8. ' ' → logprob: -7.930632591247559
    9. ' '' → logprob: -9.430632591247559
    10. '`' → logprob: -10.055632591247559

Token 26: '_label' (ID: 13175)
  Prédit: '_label'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_label' → logprob: -0.002191660227254033
    2. '_' → logprob: -6.877191543579102
    3. '_value' → logprob: -7.502191543579102
    4. '_labels' → logprob: -7.877191543579102
    5. '_lbl' → logprob: -9.752191543579102
    6. '_l' → logprob: -10.127191543579102
    7. '_s' → logprob: -10.877191543579102
    8. '_line' → logprob: -11.127191543579102
    9. '_text' → logprob: -11.502191543579102
    10. '_output' → logprob: -11.627191543579102

Token 27: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008634308353066444
    2. '=' → logprob: -4.758634090423584
    3. ' +=' → logprob: -11.508634567260742
    4. ' ' → logprob: -11.883634567260742
    5. '_' → logprob: -13.883634567260742
    6. '<|end|>' → logprob: -14.758634567260742
    7. ')' → logprob: -14.883634567260742
    8. ' ==' → logprob: -15.133634567260742
    9. ' =)' → logprob: -15.633634567260742
    10. '   ' → logprob: -16.258634567260742

Token 28: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.4290342330932617
    2. ' "' → logprob: -1.0540342330932617
    3. '""' → logprob: -9.054034233093262
    4. ''' → logprob: -9.179034233093262
    5. ' ' → logprob: -10.054034233093262
    6. ' ""' → logprob: -10.429034233093262
    7. ' '' → logprob: -11.179034233093262
    8. '"""' → logprob: -12.054034233093262
    9. ' None' → logprob: -12.429034233093262
    10. ' ' → logprob: -12.491534233093262

Token 29: 'ABD' (ID: 193992)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.009065833874046803
    2. ' "' → logprob: -5.634065628051758
    3. 'XYZ' → logprob: -6.384065628051758
    4. '""' → logprob: -6.759065628051758
    5. '"C' → logprob: -7.759065628051758
    6. 'DEF' → logprob: -7.884065628051758
    7. ''' → logprob: -8.134065628051758
    8. '"D' → logprob: -8.384065628051758
    9. 'def' → logprob: -8.634065628051758
    10. ' XYZ' → logprob: -8.884065628051758

Token 30: '"

' (ID: 2678)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -8.180258191714529e-06
    2. '```' → logprob: -12.750008583068848
    3. '"
' → logprob: -12.875008583068848
    4. '"`' → logprob: -14.250008583068848
    5. '"""' → logprob: -14.500008583068848
    6. '")' → logprob: -14.500008583068848
    7. ''"' → logprob: -15.500008583068848
    8. '"A' → logprob: -16.00000762939453
    9. ' "' → logprob: -16.00000762939453
    10. '"

' → logprob: -16.12500762939453

Token 31: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 32: '(output' (ID: 22485)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.013219759799540043
    2. '(output' → logprob: -4.388219833374023
    3. '(user' → logprob: -7.263219833374023
    4. '("("' → logprob: -13.513219833374023
    5. 'user' → logprob: -13.638219833374023
    6. '()' → logprob: -13.638219833374023
    7. '('' → logprob: -13.763219833374023
    8. ' (' → logprob: -14.138219833374023
    9. '(input' → logprob: -14.138219833374023
    10. '(print' → logprob: -14.638219833374023

Token 33: '_label' (ID: 13175)
  Prédit: '_label'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_label' → logprob: -0.9932712912559509
    2. 'ut' → logprob: -1.4932713508605957
    3. '_ut' → logprob: -2.3682713508605957
    4. '_output' → logprob: -2.6182713508605957
    5. 't' → logprob: -2.6182713508605957
    6. '_t' → logprob: -2.8682713508605957
    7. '_' → logprob: -2.8682713508605957
    8. ')' → logprob: -4.493271350860596
    9. '_value' → logprob: -4.493271350860596
    10. '_put' → logprob: -5.118271350860596

Token 34: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.088346359931165e-07
    2. '))' → logprob: -14.250000953674316
    3. ' )' → logprob: -16.5
    4. '`)' → logprob: -17.25
    5. '')' → logprob: -17.625
    6. '")' → logprob: -17.625
    7. ')`' → logprob: -17.625
    8. ')
' → logprob: -19.75
    9. ')))' → logprob: -20.25
    10. '）' → logprob: -20.5


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 32
Tokens correctement prédits (1ère position, stricte): 8
Tokens correctement prédits (1ère position, avec adaptation): 8
Tokens correctement prédits (top 10): 22
Précision stricte (1ère position): 25.00%
Précision adaptée (1ère position): 25.00%
Précision (top 10): 68.75%
================================================================================
