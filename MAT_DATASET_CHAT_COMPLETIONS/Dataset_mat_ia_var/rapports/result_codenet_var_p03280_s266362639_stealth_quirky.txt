================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:11:01
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def $(*_):return[*map(int,input().split())]
__=lambda a,b:a*b-(1*a+1*b-1)
exec('x,y=$()\nprint(__(x,y))')
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' $' (ID: 548)
  → Token d'amorce (pas de prédiction)

Token 2: '(*' (ID: 9000)
  → Token d'amorce (pas de prédiction)

Token 3: '_' (ID: 62)
  Prédit: 'args'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'args' → logprob: -0.0013978567440062761
    2. '*' → logprob: -7.501398086547852
    3. 'argv' → logprob: -7.501398086547852
    4. ')' → logprob: -9.251398086547852
    5. 'arg' → logprob: -9.501398086547852
    6. '_args' → logprob: -10.876398086547852
    7. '$' → logprob: -10.876398086547852
    8. 's' → logprob: -10.876398086547852
    9. 'self' → logprob: -10.876398086547852
    10. 'w' → logprob: -11.751398086547852

Token 4: '):' (ID: 3127)
  Prédit: 'args'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'args' → logprob: -1.0484765768051147
    2. '*' → logprob: -1.1734765768051147
    3. '_' → logprob: -1.5484765768051147
    4. '$' → logprob: -2.7984766960144043
    5. ')' → logprob: -3.4234766960144043
    6. '(' → logprob: -4.048476696014404
    7. 'def' → logprob: -4.923476696014404
    8. 'a' → logprob: -6.173476696014404
    9. 'argv' → logprob: -6.923476696014404
    10. 'params' → logprob: -7.048476696014404

Token 5: 'return' (ID: 1034)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.45693519711494446
    2. '*' → logprob: -1.331935167312622
    3. ' ' → logprob: -3.206935167312622
    4. '_' → logprob: -3.331935167312622
    5. 'a' → logprob: -5.081935405731201
    6. ')' → logprob: -5.456935405731201
    7. ' (' → logprob: -5.456935405731201
    8. '**' → logprob: -5.831935405731201
    9. 's' → logprob: -6.081935405731201
    10. 'def' → logprob: -6.456935405731201

Token 6: '[*' (ID: 79141)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.027083078399300575
    2. ' None' → logprob: -4.152082920074463
    3. ' lambda' → logprob: -5.652082920074463
    4. '_' → logprob: -6.027082920074463
    5. ' _' → logprob: -6.402082920074463
    6. 'lambda' → logprob: -6.902082920074463
    7. ' True' → logprob: -7.527082920074463
    8. 'None' → logprob: -7.527082920074463
    9. ' []' → logprob: -8.277083396911621
    10. ''' → logprob: -8.402083396911621

Token 7: 'map' (ID: 3726)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.29518991708755493
    2. '_*' → logprob: -1.5451898574829102
    3. '*_' → logprob: -3.42018985748291
    4. '*' → logprob: -5.92018985748291
    5. '__' → logprob: -6.04518985748291
    6. '_]' → logprob: -6.54518985748291
    7. '___' → logprob: -7.17018985748291
    8. '$' → logprob: -7.29518985748291
    9. '_)' → logprob: -7.79518985748291
    10. '*)' → logprob: -8.67018985748291

Token 8: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6312033534049988
    2. '(lambda' → logprob: -1.1312034130096436
    3. '(str' → logprob: -2.6312034130096436
    4. '(int' → logprob: -3.0062034130096436
    5. '(eval' → logprob: -4.6312031745910645
    6. 'list' → logprob: -5.2562031745910645
    7. '(list' → logprob: -5.7562031745910645
    8. '(iter' → logprob: -6.1312031745910645
    9. 'lambda' → logprob: -7.3812031745910645
    10. 'str' → logprob: -7.6312031745910645

Token 9: ',input' (ID: 123014)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 10: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.3520124852657318
    2. '()]' → logprob: -1.8520125150680542
    3. '()' → logprob: -3.1020123958587646
    4. '(' → logprob: -3.2270123958587646
    5. '().' → logprob: -3.4770123958587646
    6. '(()' → logprob: -4.977012634277344
    7. ')]' → logprob: -5.477012634277344
    8. '(),' → logprob: -5.602012634277344
    9. '('' → logprob: -5.852012634277344
    10. '());' → logprob: -6.977012634277344

Token 11: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00013929695705883205
    2. 'strip' → logprob: -9.875139236450195
    3. 'read' → logprob: -10.375139236450195
    4. 'rstrip' → logprob: -10.375139236450195
    5. ' split' → logprob: -10.875139236450195
    6. 'spl' → logprob: -12.250139236450195
    7. '(split' → logprob: -14.250139236450195
    8. 's' → logprob: -15.250139236450195
    9. 'startswith' → logprob: -15.250139236450195
    10. '__' → logprob: -16.000139236450195

Token 12: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0042536272667348385
    2. '()))' → logprob: -6.00425386428833
    3. '('' → logprob: -7.12925386428833
    4. '()' → logprob: -7.50425386428833
    5. '(' → logprob: -8.754253387451172
    6. '()]' → logprob: -9.129253387451172
    7. ')]' → logprob: -10.129253387451172
    8. '()),' → logprob: -10.254253387451172
    9. '())))' → logprob: -10.754253387451172
    10. ')' → logprob: -11.004253387451172

Token 13: ']
' (ID: 1592)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0009381395066156983
    2. ')' → logprob: -7.2509379386901855
    3. ']' → logprob: -8.875938415527344
    4. ')])' → logprob: -10.375938415527344
    5. ',' → logprob: -10.625938415527344
    6. '')]' → logprob: -12.375938415527344
    7. ')][' → logprob: -12.500938415527344
    8. ')],' → logprob: -12.625938415527344
    9. '])' → logprob: -12.750938415527344
    10. ')}' → logprob: -13.000938415527344

Token 14: '__' (ID: 771)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.027398385107517242
    2. '_' → logprob: -3.9023983478546143
    3. 'a' → logprob: -6.777398586273193
    4. 'newline' → logprob: -7.027398586273193
    5. '\(' → logprob: -7.152398586273193
    6. 'def' → logprob: -7.652398586273193
    7. '[' → logprob: -7.777398586273193
    8. '()' → logprob: -8.152398109436035
    9. '(a' → logprob: -8.402398109436035
    10. '$' → logprob: -8.527398109436035

Token 15: '=' (ID: 28)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.3912283480167389
    2. 'name' → logprob: -1.1412283182144165
    3. '_' → logprob: -6.641228199005127
    4. 'main' → logprob: -7.641228199005127
    5. 'input' → logprob: -8.141228675842285
    6. 'in' → logprob: -8.141228675842285
    7. '_import' → logprob: -8.141228675842285
    8. 'built' → logprob: -8.266228675842285
    9. 'imports' → logprob: -8.516228675842285
    10. 'code' → logprob: -8.766228675842285

Token 16: 'lambda' (ID: 35280)
  Prédit: 'lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.09572438895702362
    2. '__' → logprob: -3.47072434425354
    3. 'int' → logprob: -3.72072434425354
    4. 'input' → logprob: -4.595724582672119
    5. '[*' → logprob: -4.845724582672119
    6. 'sum' → logprob: -5.345724582672119
    7. '*' → logprob: -5.345724582672119
    8. 'map' → logprob: -6.345724582672119
    9. 'len' → logprob: -6.470724582672119
    10. 'list' → logprob: -6.470724582672119

Token 17: ' a' (ID: 261)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.9562479257583618
    2. 'int' → logprob: -1.9562479257583618
    3. 'input' → logprob: -2.2062478065490723
    4. 'x' → logprob: -2.3312478065490723
    5. ' x' → logprob: -2.3312478065490723
    6. '_' → logprob: -2.5812478065490723
    7. 'range' → logprob: -2.9562478065490723
    8. 's' → logprob: -3.4562478065490723
    9. ' input' → logprob: -3.5812478065490723
    10. 'sorted' → logprob: -3.9562478065490723

Token 18: ',b' (ID: 17568)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.057390570640564
    2. ',' → logprob: -1.682390570640564
    3. ',a' → logprob: -2.6823906898498535
    4. ':a' → logprob: -2.6823906898498535
    5. ':max' → logprob: -2.8073906898498535
    6. ':list' → logprob: -3.0573906898498535
    7. ',b' → logprob: -3.1823906898498535
    8. '[:' → logprob: -3.1823906898498535
    9. ',:' → logprob: -3.5573906898498535
    10. ':[' → logprob: -3.9323906898498535

Token 19: ':a' (ID: 77025)
  Prédit: ':a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':a' → logprob: -0.2280973345041275
    2. ':' → logprob: -1.7280973196029663
    3. ':b' → logprob: -4.478097438812256
    4. ',:' → logprob: -5.978097438812256
    5. ',a' → logprob: -5.978097438812256
    6. ':(' → logprob: -6.478097438812256
    7. ':max' → logprob: -6.853097438812256
    8. ':`' → logprob: -7.228097438812256
    9. ' :' → logprob: -7.353097438812256
    10. ':+' → logprob: -7.603097438812256

Token 20: '*b' (ID: 72162)
  Prédit: '+b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+b' → logprob: -0.42142635583877563
    2. '+' → logprob: -1.6714262962341309
    3. '%b' → logprob: -2.296426296234131
    4. '>b' → logprob: -3.796426296234131
    5. '%' → logprob: -4.421426296234131
    6. '*b' → logprob: -5.421426296234131
    7. 'b' → logprob: -5.796426296234131
    8. '-b' → logprob: -5.796426296234131
    9. ' if' → logprob: -6.046426296234131
    10. '>' → logprob: -7.046426296234131

Token 21: '-(' (ID: 18825)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9387657046318054
    2. '<|end|>' → logprob: -1.1887657642364502
    3. '*' → logprob: -1.5637657642364502
    4. '_' → logprob: -3.81376576423645
    5. ')' → logprob: -4.063765525817871
    6. ' ' → logprob: -4.188765525817871
    7. '+' → logprob: -4.688765525817871
    8. '**' → logprob: -4.938765525817871
    9. ',' → logprob: -5.438765525817871
    10. '
' → logprob: -5.938765525817871

Token 22: '1' (ID: 16)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.03443817421793938
    2. 'b' → logprob: -3.784438133239746
    3. 'min' → logprob: -5.034438133239746
    4. ' a' → logprob: -6.284438133239746
    5. ' min' → logprob: -7.159438133239746
    6. 'int' → logprob: -8.034438133239746
    7. '(min' → logprob: -8.034438133239746
    8. '(a' → logprob: -8.159438133239746
    9. ' b' → logprob: -8.659438133239746
    10. '__' → logprob: -8.909438133239746

Token 23: '*a' (ID: 78448)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12251807749271393
    2. ')*' → logprob: -2.4975180625915527
    3. ' )' → logprob: -5.122518062591553
    4. '+' → logprob: -5.247518062591553
    5. ',)' → logprob: -5.247518062591553
    6. '-' → logprob: -5.997518062591553
    7. ',' → logprob: -5.997518062591553
    8. '-)' → logprob: -6.747518062591553
    9. '*)' → logprob: -6.872518062591553
    10. '//' → logprob: -6.997518062591553

Token 24: '+' (ID: 10)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.058121368288993835
    2. '+' → logprob: -3.5581214427948
    3. '-' → logprob: -5.308121204376221
    4. '|' → logprob: -5.558121204376221
    5. '+b' → logprob: -5.933121204376221
    6. '*' → logprob: -6.433121204376221
    7. ' )' → logprob: -6.433121204376221
    8. '<|end|>' → logprob: -6.433121204376221
    9. ')*' → logprob: -6.933121204376221
    10. ')+' → logprob: -7.058121204376221

Token 25: '1' (ID: 16)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.009156910702586174
    2. ' b' → logprob: -4.759156703948975
    3. '1' → logprob: -8.259157180786133
    4. '2' → logprob: -8.384157180786133
    5. 'a' → logprob: -11.259157180786133
    6. ')b' → logprob: -11.384157180786133
    7. ' ' → logprob: -11.634157180786133
    8. '*b' → logprob: -11.884157180786133
    9. '-' → logprob: -12.884157180786133
    10. '	b' → logprob: -13.259157180786133

Token 26: '*b' (ID: 72162)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.7385984063148499
    2. '*b' → logprob: -0.7385984063148499
    3. ')b' → logprob: -3.613598346710205
    4. ' b' → logprob: -5.113598346710205
    5. ')' → logprob: -5.238598346710205
    6. '*' → logprob: -6.613598346710205
    7. '_b' → logprob: -6.988598346710205
    8. '_' → logprob: -7.613598346710205
    9. ' *' → logprob: -7.738598346710205
    10. ' ' → logprob: -7.738598346710205

Token 27: '-' (ID: 12)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02874096855521202
    2. '+' → logprob: -3.903740882873535
    3. ')+' → logprob: -5.278740882873535
    4. ')**' → logprob: -7.278740882873535
    5. ')*' → logprob: -7.403740882873535
    6. '-' → logprob: -7.403740882873535
    7. '+)' → logprob: -8.403740882873535
    8. '))' → logprob: -9.153740882873535
    9. ' )' → logprob: -9.528740882873535
    10. ')>>' → logprob: -9.528740882873535

Token 28: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04882081225514412
    2. '2' → logprob: -3.048820734024048
    3. ')' → logprob: -9.173820495605469
    4. ' ' → logprob: -9.298820495605469
    5. 'a' → logprob: -11.798820495605469
    6. '-' → logprob: -11.923820495605469
    7. '3' → logprob: -12.048820495605469
    8. '```' → logprob: -12.173820495605469
    9. '__' → logprob: -12.673820495605469
    10. '<|end|>' → logprob: -12.923820495605469

Token 29: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0035397247411310673
    2. ')*' → logprob: -6.378539562225342
    3. ')**' → logprob: -6.503539562225342
    4. ' )' → logprob: -9.0035400390625
    5. '+' → logprob: -10.3785400390625
    6. ')
' → logprob: -10.8785400390625
    7. ')}' → logprob: -11.1285400390625
    8. '))' → logprob: -11.2535400390625
    9. ')^' → logprob: -11.3785400390625
    10. '**' → logprob: -11.6285400390625

Token 30: 'exec' (ID: 31592)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.023812074214220047
    2. '_' → logprob: -4.523812294006348
    3. '(
' → logprob: -5.398812294006348
    4. '#' → logprob: -6.398812294006348
    5. ')' → logprob: -6.773812294006348
    6. '*' → logprob: -7.273812294006348
    7. '\' → logprob: -7.398812294006348
    8. '__' → logprob: -7.398812294006348
    9. ',' → logprob: -8.023812294006348
    10. '```' → logprob: -8.148812294006348

Token 31: '('' (ID: 706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07700959593057632
    2. '(input' → logprob: -3.077009677886963
    3. '('' → logprob: -3.827009677886963
    4. '("("' → logprob: -6.202009677886963
    5. '("""' → logprob: -6.452009677886963
    6. '("' → logprob: -7.077009677886963
    7. '(open' → logprob: -7.577009677886963
    8. '(eval' → logprob: -7.577009677886963
    9. '(*' → logprob: -8.952009201049805
    10. '((' → logprob: -9.577009201049805

Token 32: 'x' (ID: 87)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.3131444454193115
    2. '"' → logprob: -2.1881444454193115
    3. '__' → logprob: -2.3131444454193115
    4. ''' → logprob: -2.3131444454193115
    5. 'a' → logprob: -2.9381444454193115
    6. 'f' → logprob: -3.0631444454193115
    7. 'print' → logprob: -3.1881444454193115
    8. 'input' → logprob: -3.3131444454193115
    9. ''*' → logprob: -3.4381444454193115
    10. '''' → logprob: -3.6881444454193115

Token 33: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.05209849402308464
    2. ',' → logprob: -4.177098274230957
    3. '=input' → logprob: -4.302098274230957
    4. ',*' → logprob: -4.552098274230957
    5. ',x' → logprob: -5.302098274230957
    6. ',input' → logprob: -6.052098274230957
    7. '=' → logprob: -6.927098274230957
    8. '=int' → logprob: -7.552098274230957
    9. 'y' → logprob: -7.677098274230957
    10. ' ,' → logprob: -8.302098274230957

Token 34: '=$' (ID: 7423)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8585951328277588
    2. '=input' → logprob: -0.9835951328277588
    3. ')=' → logprob: -1.6085951328277588
    4. ' =' → logprob: -6.73359489440918
    5. ')' → logprob: -7.73359489440918
    6. '=*' → logprob: -8.98359489440918
    7. '=list' → logprob: -9.48359489440918
    8. ']=' → logprob: -10.10859489440918
    9. '=data' → logprob: -10.73359489440918
    10. '*=' → logprob: -10.85859489440918

Token 35: '()\' (ID: 163376)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.1961393654346466
    2. '()' → logprob: -1.8211393356323242
    3. '().' → logprob: -5.446139335632324
    4. ')' → logprob: -5.446139335632324
    5. '());' → logprob: -6.571139335632324
    6. '()]' → logprob: -6.821139335632324
    7. '(),' → logprob: -6.946139335632324
    8. ' ())' → logprob: -7.196139335632324
    9. '();' → logprob: -7.446139335632324
    10. '();)' → logprob: -7.446139335632324

Token 36: 'n' (ID: 77)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011573758907616138
    2. ')\' → logprob: -5.261573791503906
    3. '')' → logprob: -5.636573791503906
    4. ');' → logprob: -6.886573791503906
    5. ')')
' → logprob: -7.386573791503906
    6. ')
' → logprob: -7.886573791503906
    7. ')'' → logprob: -8.261573791503906
    8. '))' → logprob: -8.886573791503906
    9. '\n' → logprob: -10.136573791503906
    10. ')")' → logprob: -10.136573791503906

Token 37: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.34347110986709595
    2. 'z' → logprob: -1.7184710502624512
    3. 'if' → logprob: -3.343471050262451
    4. 'r' → logprob: -3.968471050262451
    5. 'p' → logprob: -4.093471050262451
    6. 'x' → logprob: -4.593471050262451
    7. '__' → logprob: -4.968471050262451
    8. 'n' → logprob: -5.843471050262451
    9. '_' → logprob: -6.093471050262451
    10. 'a' → logprob: -6.218471050262451

Token 38: '(' (ID: 7)
  Prédit: '(__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(__' → logprob: -0.757206916809082
    2. '(' → logprob: -1.507206916809082
    3. '__(' → logprob: -1.632206916809082
    4. '__('' → logprob: -3.132206916809082
    5. '(__('' → logprob: -3.757206916809082
    6. '__((' → logprob: -4.382206916809082
    7. '((' → logprob: -4.632206916809082
    8. '(x' → logprob: -5.007206916809082
    9. '(abs' → logprob: -5.757206916809082
    10. '__' → logprob: -5.757206916809082

Token 39: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.22266259789466858
    2. '__' → logprob: -2.3476626873016357
    3. '__[' → logprob: -3.0976626873016357
    4. '__((' → logprob: -4.222662448883057
    5. '__))' → logprob: -4.472662448883057
    6. '__)' → logprob: -4.722662448883057
    7. '__.__' → logprob: -4.972662448883057
    8. '__('' → logprob: -5.347662448883057
    9. '__.' → logprob: -5.972662448883057
    10. '__("' → logprob: -6.472662448883057

Token 40: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0003013809327967465
    2. ' x' → logprob: -8.250301361083984
    3. ')' → logprob: -11.375301361083984
    4. '(x' → logprob: -11.625301361083984
    5. ')x' → logprob: -11.750301361083984
    6. ''x' → logprob: -12.625301361083984
    7. '"x' → logprob: -13.000301361083984
    8. '))' → logprob: -13.625301361083984
    9. '*x' → logprob: -13.625301361083984
    10. ' ' → logprob: -14.375301361083984

Token 41: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.0062093776650726795
    2. ',' → logprob: -5.131209373474121
    3. ' ,' → logprob: -8.256209373474121
    4. 'y' → logprob: -12.006209373474121
    5. ',
' → logprob: -12.881209373474121
    6. ' y' → logprob: -13.006209373474121
    7. '-' → logprob: -13.381209373474121
    8. '*,' → logprob: -13.506209373474121
    9. ' ' → logprob: -13.631209373474121
    10. '+,' → logprob: -14.506209373474121

Token 42: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.000983862322755158
    2. ')' → logprob: -7.500983715057373
    3. ')))' → logprob: -7.875983715057373
    4. ''))' → logprob: -10.375984191894531
    5. '))
' → logprob: -11.125984191894531
    6. ' ))' → logprob: -13.375984191894531
    7. '),' → logprob: -14.625984191894531
    8. '));' → logprob: -14.625984191894531
    9. ')
' → logprob: -14.875984191894531
    10. '')' → logprob: -15.000984191894531

Token 43: '')' (ID: 1542)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07083140313625336
    2. '))' → logprob: -2.945831298828125
    3. '')' → logprob: -4.195831298828125
    4. ')))' → logprob: -8.070831298828125
    5. ''))' → logprob: -8.320831298828125
    6. '")' → logprob: -9.695831298828125
    7. ')")' → logprob: -9.945831298828125
    8. ' )' → logprob: -10.945831298828125
    9. '```' → logprob: -11.320831298828125
    10. ')'' → logprob: -11.320831298828125


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 41
Tokens correctement prédits (1ère position, stricte): 11
Tokens correctement prédits (1ère position, avec adaptation): 11
Tokens correctement prédits (top 10): 23
Précision stricte (1ère position): 26.83%
Précision adaptée (1ère position): 26.83%
Précision (top 10): 56.10%
================================================================================
