================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:36:43
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
shift_value = int(input())
input_string = input()
result_string = ""
for char_index in range(len(input_string)):
    char_code = ord(input_string[char_index])
    shifted_code = char_code + shift_value
    if shifted_code <= 90:
        result_string += chr(shifted_code)
    else:
        result_string += chr(shifted_code - 26)
print(result_string)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'shift' (ID: 27472)
  → Token d'amorce (pas de prédiction)

Token 1: '_value' (ID: 6734)
  → Token d'amorce (pas de prédiction)

Token 2: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 3: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03318661078810692
    2. '1' → logprob: -3.658186674118042
    3. '3' → logprob: -5.658186435699463
    4. '5' → logprob: -6.533186435699463
    5. '2' → logprob: -6.783186435699463
    6. '4' → logprob: -7.533186435699463
    7. '32' → logprob: -9.408186912536621
    8. '42' → logprob: -9.533186912536621
    9. '0' → logprob: -9.783186912536621
    10. '10' → logprob: -11.283186912536621

Token 4: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003993296413682401
    2. '('' → logprob: -8.250399589538574
    3. '_' → logprob: -10.000399589538574
    4. ' (' → logprob: -10.875399589538574
    5. '```' → logprob: -11.375399589538574
    6. '[' → logprob: -11.625399589538574
    7. '("("' → logprob: -11.875399589538574
    8. ' ' → logprob: -12.125399589538574
    9. '(user' → logprob: -12.125399589538574
    10. '_shift' → logprob: -12.125399589538574

Token 5: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.015054568648338318
    2. ')' → logprob: -4.390054702758789
    3. '()' → logprob: -7.515054702758789
    4. '('' → logprob: -7.515054702758789
    5. '("("' → logprob: -8.140054702758789
    6. '```' → logprob: -8.265054702758789
    7. '(
' → logprob: -8.640054702758789
    8. '())' → logprob: -9.015054702758789
    9. '<|end|>' → logprob: -9.265054702758789
    10. '[' → logprob: -9.765054702758789

Token 6: 'input' (ID: 2586)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.04751267656683922
    2. 'cipher' → logprob: -4.547512531280518
    3. '+' → logprob: -5.047512531280518
    4. 's' → logprob: -5.547512531280518
    5. 'result' → logprob: -5.672512531280518
    6. 'shift' → logprob: -5.672512531280518
    7. 'text' → logprob: -5.797512531280518
    8. 'for' → logprob: -6.047512531280518
    9. 'x' → logprob: -6.672512531280518
    10. 'a' → logprob: -6.672512531280518

Token 7: '_string' (ID: 8609)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.067262053489685
    2. '_str' → logprob: -1.442262053489685
    3. '_string' → logprob: -1.692262053489685
    4. '()' → logprob: -2.5672621726989746
    5. '_value' → logprob: -3.0672621726989746
    6. '_' → logprob: -3.1922621726989746
    7. '_text' → logprob: -4.192262172698975
    8. '_data' → logprob: -4.442262172698975
    9. '('' → logprob: -4.567262172698975
    10. '_char' → logprob: -5.442262172698975

Token 8: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.02631528116762638
    2. '+' → logprob: -4.276315212249756
    3. '[:]' → logprob: -5.526315212249756
    4. '=' → logprob: -6.651315212249756
    5. '.strip' → logprob: -7.151315212249756
    6. '.' → logprob: -7.151315212249756
    7. '[input' → logprob: -7.151315212249756
    8. '```' → logprob: -7.276315212249756
    9. '[token' → logprob: -7.526315212249756
    10. '[next' → logprob: -7.901315212249756

Token 9: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.3485828936100006
    2. 'input' → logprob: -1.2235828638076782
    3. ' ' → logprob: -10.098583221435547
    4. '(input' → logprob: -10.473583221435547
    5. '=input' → logprob: -10.723583221435547
    6. '"' → logprob: -11.598583221435547
    7. ' "' → logprob: -12.098583221435547
    8. '<input' → logprob: -12.098583221435547
    9. ' str' → logprob: -12.473583221435547
    10. 'str' → logprob: -12.598583221435547

Token 10: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01766190491616726
    2. '()' → logprob: -4.142662048339844
    3. '('' → logprob: -7.142662048339844
    4. ')' → logprob: -7.642662048339844
    5. ' (' → logprob: -9.142662048339844
    6. '```' → logprob: -9.767662048339844
    7. '("("' → logprob: -10.142662048339844
    8. ''' → logprob: -10.767662048339844
    9. '())' → logprob: -10.767662048339844
    10. '(
' → logprob: -11.017662048339844

Token 11: 'result' (ID: 2521)
  Prédit: 'result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.1660926192998886
    2. 'output' → logprob: -2.41609263420105
    3. 'shift' → logprob: -3.66609263420105
    4. 'decoded' → logprob: -4.041092395782471
    5. 'encoded' → logprob: -4.291092395782471
    6. 'for' → logprob: -6.041092395782471
    7. 'encrypted' → logprob: -6.541092395782471
    8. 'cipher' → logprob: -7.166092395782471
    9. 'res' → logprob: -7.541092395782471
    10. 'new' → logprob: -8.166092872619629

Token 12: '_string' (ID: 8609)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5179951190948486
    2. '_' → logprob: -1.1429951190948486
    3. '=' → logprob: -2.5179951190948486
    4. '[' → logprob: -6.7679948806762695
    5. ' ' → logprob: -6.7679948806762695
    6. '_space' → logprob: -7.6429948806762695
    7. '(' → logprob: -7.8929948806762695
    8. '[:]' → logprob: -7.8929948806762695
    9. '.' → logprob: -8.14299488067627
    10. '_string' → logprob: -8.51799488067627

Token 13: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.40738445520401
    2. '=' → logprob: -1.1573843955993652
    3. ' +=' → logprob: -4.532384395599365
    4. '_' → logprob: -5.907384395599365
    5. '[' → logprob: -6.157384395599365
    6. ' ' → logprob: -6.157384395599365
    7. '+' → logprob: -7.282384395599365
    8. '[:]' → logprob: -7.782384395599365
    9. '+=' → logprob: -7.782384395599365
    10. '<|end|>' → logprob: -7.907384395599365

Token 14: ' ""
' (ID: 18061)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '""' → logprob: -0.0742131918668747
    2. '"' → logprob: -2.8242132663726807
    3. '''' → logprob: -4.949213027954102
    4. ' ""' → logprob: -5.449213027954102
    5. ''' → logprob: -7.449213027954102
    6. ' ' → logprob: -9.699213027954102
    7. '""""' → logprob: -9.824213027954102
    8. ' ''' → logprob: -10.449213027954102
    9. ' "' → logprob: -10.699213027954102
    10. '"""' → logprob: -11.324213027954102

Token 15: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0016887469682842493
    2. '
' → logprob: -7.2516889572143555
    3. ' for' → logprob: -7.6266889572143555
    4. '\n' → logprob: -8.126688957214355
    5. '```' → logprob: -9.001688957214355
    6. 'f' → logprob: -10.376688957214355
    7. '' → logprob: -11.501688957214355
    8. '\' → logprob: -11.751688957214355
    9. 'i' → logprob: -12.251688957214355
    10. ' 
' → logprob: -12.501688957214355

Token 16: ' char' (ID: 1826)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3169342875480652
    2. ' i' → logprob: -1.31693434715271
    3. ' char' → logprob: -6.816934108734131
    4. ' c' → logprob: -7.316934108734131
    5. ' _' → logprob: -7.566934108734131
    6. ' token' → logprob: -7.566934108734131
    7. '_' → logprob: -8.066934585571289
    8. ' s' → logprob: -9.316934585571289
    9. ' variable' → logprob: -9.691934585571289
    10. ' string' → logprob: -9.691934585571289

Token 17: '_index' (ID: 7748)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006632478442043066
    2. 'in' → logprob: -5.131632328033447
    3. ' ' → logprob: -7.381632328033447
    4. '  ' → logprob: -9.881632804870605
    5. '<|end|>' → logprob: -11.381632804870605
    6. 's' → logprob: -12.631632804870605
    7. ' ,' → logprob: -12.881632804870605
    8. ' i' → logprob: -13.256632804870605
    9. '	in' → logprob: -13.631632804870605
    10. '<|end|>' → logprob: -13.881632804870605

Token 18: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10144801437854767
    2. 'in' → logprob: -2.3514480590820312
    3. ' ' → logprob: -6.976448059082031
    4. '[' → logprob: -8.976448059082031
    5. '<|end|>' → logprob: -9.976448059082031
    6. '  ' → logprob: -10.726448059082031
    7. ',' → logprob: -10.976448059082031
    8. ' ,' → logprob: -11.476448059082031
    9. ')' → logprob: -12.038948059082031
    10. '	in' → logprob: -12.101448059082031

Token 19: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.03804321587085724
    2. 'range' → logprob: -3.288043260574341
    3. '	range' → logprob: -14.413043022155762
    4. '(range' → logprob: -14.538043022155762
    5. ' ' → logprob: -15.038043022155762
    6. ' xrange' → logprob: -15.163043022155762
    7. '_range' → logprob: -16.913043975830078
    8. ' input' → logprob: -17.413043975830078
    9. '.range' → logprob: -17.663043975830078
    10. ' rang' → logprob: -18.038043975830078

Token 20: '(len' (ID: 14990)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6931775212287903
    2. '(len' → logprob: -0.6931775212287903
    3. '(length' → logprob: -10.693177223205566
    4. ' (' → logprob: -12.443177223205566
    5. '(ord' → logprob: -13.568177223205566
    6. '(
' → logprob: -14.318177223205566
    7. '(l' → logprob: -15.068177223205566
    8. '(range' → logprob: -15.318177223205566
    9. '(

' → logprob: -15.818177223205566
    10. '(s' → logprob: -15.943177223205566

Token 21: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.008617527782917023
    2. '(' → logprob: -4.758617401123047
    3. '(
' → logprob: -13.258617401123047
    4. ' (' → logprob: -14.633617401123047
    5. '(

' → logprob: -15.008617401123047
    6. 'input' → logprob: -15.133617401123047
    7. '(s' → logprob: -15.758617401123047
    8. '(in' → logprob: -17.008617401123047
    9. '(output' → logprob: -17.633617401123047
    10. '(inp' → logprob: -18.133617401123047

Token 22: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -3.7697225252486533e-06
    2. 'string' → logprob: -13.250003814697266
    3. '_' → logprob: -15.000003814697266
    4. 'String' → logprob: -15.000003814697266
    5. ')' → logprob: -15.250003814697266
    6. '_str' → logprob: -15.375003814697266
    7. '(_' → logprob: -15.625003814697266
    8. '```' → logprob: -15.625003814697266
    9. '_String' → logprob: -16.125003814697266
    10. '_strings' → logprob: -16.125003814697266

Token 23: ')):
' (ID: 22530)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.11180190742015839
    2. '):' → logprob: -2.361801862716675
    3. '))' → logprob: -4.611802101135254
    4. ')' → logprob: -6.861802101135254
    5. ')):
' → logprob: -8.486802101135254
    6. '+' → logprob: -8.861802101135254
    7. ' ):' → logprob: -9.611802101135254
    8. ')):
' → logprob: -10.361802101135254
    9. ')+' → logprob: -10.736802101135254
    10. ' ))' → logprob: -10.736802101135254

Token 24: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6211701035499573
    2. '   ' → logprob: -1.3711700439453125
    3. '    ' → logprob: -2.2461700439453125
    4. '```' → logprob: -3.1211700439453125
    5. ' ```' → logprob: -4.1211700439453125
    6. ' char' → logprob: -4.1211700439453125
    7. ' if' → logprob: -4.9961700439453125
    8. '     
' → logprob: -5.3711700439453125
    9. ' ,' → logprob: -6.2461700439453125
    10. 'char' → logprob: -6.4961700439453125

Token 25: ' char' (ID: 1826)
  Prédit: ' char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' char' → logprob: -0.3693558871746063
    2. ' if' → logprob: -1.4943559169769287
    3. 'char' (adapté à ' char') → logprob: -2.9943559169769287
    4. ' c' → logprob: -4.49435567855835
    5. '   ' → logprob: -4.86935567855835
    6. ' current' → logprob: -5.61935567855835
    7. 'c' → logprob: -5.74435567855835
    8. '```' → logprob: -5.99435567855835
    9. ' ```' → logprob: -6.49435567855835
    10. 'if' → logprob: -6.49435567855835

Token 26: '_code' (ID: 8330)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7041493058204651
    2. '_' → logprob: -0.8291493058204651
    3. '=' → logprob: -2.7041492462158203
    4. '_=' → logprob: -7.32914924621582
    5. 's' → logprob: -7.82914924621582
    6. '_index' → logprob: -8.32914924621582
    7. '<|end|>' → logprob: -8.57914924621582
    8. ')' → logprob: -8.70414924621582
    9. '_value' → logprob: -9.45414924621582
    10. ' ' → logprob: -9.57914924621582

Token 27: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0072863162495195866
    2. '=' → logprob: -5.257286548614502
    3. ' +=' → logprob: -7.132286548614502
    4. ' ' → logprob: -7.507286548614502
    5. ' +' → logprob: -7.882286548614502
    6. '+' → logprob: -8.257286071777344
    7. '+=' → logprob: -11.382286071777344
    8. '   ' → logprob: -11.382286071777344
    9. ')' → logprob: -11.507286071777344
    10. '    ' → logprob: -12.007286071777344

Token 28: ' ord' (ID: 6608)
  Prédit: ' ord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ord' → logprob: -0.026755714789032936
    2. 'ord' → logprob: -3.6517558097839355
    3. '   ' → logprob: -8.151755332946777
    4. '(ord' → logprob: -8.776755332946777
    5. ' ' → logprob: -11.776755332946777
    6. ' (' → logprob: -13.901755332946777
    7. ' input' → logprob: -14.276755332946777
    8. '  ' → logprob: -14.401755332946777
    9. 'ords' → logprob: -14.526755332946777
    10. '```' → logprob: -14.651755332946777

Token 29: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.008628170937299728
    2. '(' → logprob: -4.7586283683776855
    3. 'input' → logprob: -12.258627891540527
    4. '(
' → logprob: -12.633627891540527
    5. ' (' → logprob: -13.258627891540527
    6. '('' → logprob: -13.633627891540527
    7. '("("' → logprob: -14.008627891540527
    8. '(

' → logprob: -14.383627891540527
    9. '(in' → logprob: -14.508627891540527
    10. '((' → logprob: -15.258627891540527

Token 30: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -0.00012035090912831947
    2. '_char' → logprob: -9.875120162963867
    3. 'string' → logprob: -10.125120162963867
    4. '_' → logprob: -11.375120162963867
    5. 'String' → logprob: -11.875120162963867
    6. '_character' → logprob: -12.000120162963867
    7. ')' → logprob: -14.250120162963867
    8. 'char' → logprob: -14.375120162963867
    9. '_String' → logprob: -14.375120162963867
    10. '_STRING' → logprob: -14.500120162963867

Token 31: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.8961017202818766e-05
    2. ' [' → logprob: -10.375059127807617
    3. ')' → logprob: -10.875059127807617
    4. ')[' → logprob: -12.125059127807617
    5. '[
' → logprob: -13.500059127807617
    6. '[input' → logprob: -14.625059127807617
    7. '   ' → logprob: -15.125059127807617
    8. ' ' → logprob: -16.125059127807617
    9. '<char' → logprob: -16.250059127807617
    10. '```' → logprob: -16.375059127807617

Token 32: 'char' (ID: 3257)
  Prédit: 'char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'char' → logprob: -0.0006365468143485487
    2. ' char' → logprob: -7.375636577606201
    3. ' ' → logprob: -12.750636100769043
    4. ')' → logprob: -13.375636100769043
    5. '_char' → logprob: -13.625636100769043
    6. '])' → logprob: -14.000636100769043
    7. ']' → logprob: -14.250636100769043
    8. '   ' → logprob: -14.500636100769043
    9. '<char' → logprob: -14.625636100769043
    10. 'c' → logprob: -14.750636100769043

Token 33: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.00012296605564188212
    2. 'index' → logprob: -9.250123023986816
    3. 'ex' → logprob: -11.250123023986816
    4. 'x' → logprob: -12.000123023986816
    5. 'e' → logprob: -13.375123023986816
    6. 'dex' → logprob: -13.375123023986816
    7. '_' → logprob: -13.500123023986816
    8. 'Index' → logprob: -13.750123023986816
    9. 'd' → logprob: -14.625123023986816
    10. '_idx' → logprob: -15.125123023986816

Token 34: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001370320824207738
    2. '))' → logprob: -9.125137329101562
    3. ' )' → logprob: -11.250137329101562
    4. ' ' → logprob: -12.375137329101562
    5. ')+' → logprob: -12.375137329101562
    6. ']' → logprob: -13.500137329101562
    7. '])' → logprob: -13.750137329101562
    8. '`)' → logprob: -13.875137329101562
    9. '+' → logprob: -14.000137329101562
    10. '）' → logprob: -14.000137329101562

Token 35: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.3538122177124023
    2. '   ' → logprob: -1.6038122177124023
    3. ' ' → logprob: -1.8538122177124023
    4. '```' → logprob: -1.8538122177124023
    5. 'if' → logprob: -2.2288122177124023
    6. '+' → logprob: -2.8538122177124023
    7. '<|end|>' → logprob: -4.103812217712402
    8. '    ' → logprob: -4.228812217712402
    9. '[' → logprob: -5.478812217712402
    10. ')' → logprob: -5.603812217712402

Token 36: ' shifted' (ID: 58644)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02957737259566784
    2. '    ' → logprob: -4.154577255249023
    3. 'if' → logprob: -5.404577255249023
    4. '   ' → logprob: -5.529577255249023
    5. ' if' → logprob: -6.154577255249023
    6. '```' → logprob: -7.154577255249023
    7. '     
' → logprob: -7.404577255249023
    8. 'i' → logprob: -7.529577255249023
    9. '  ' → logprob: -8.779577255249023
    10. '+' → logprob: -8.779577255249023

Token 37: '_code' (ID: 8330)
  Prédit: '_code'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_code' → logprob: -0.5414528846740723
    2. '_char' → logprob: -1.1664528846740723
    3. '_value' → logprob: -2.4164528846740723
    4. '_' → logprob: -4.166452884674072
    5. '_val' → logprob: -6.916452884674072
    6. '_character' → logprob: -8.541452407836914
    7. '_chars' → logprob: -9.166452407836914
    8. '```' → logprob: -9.291452407836914
    9. 'char' → logprob: -9.416452407836914
    10. '95' → logprob: -10.416452407836914

Token 38: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06207120418548584
    2. '=' → logprob: -2.8120713233947754
    3. ' +=' → logprob: -9.562070846557617
    4. ' ' → logprob: -10.687070846557617
    5. '_' → logprob: -12.562070846557617
    6. '+' → logprob: -13.437070846557617
    7. '+=' → logprob: -13.812070846557617
    8. ')' → logprob: -14.187070846557617
    9. '   ' → logprob: -14.312070846557617
    10. '    ' → logprob: -14.562070846557617

Token 39: ' char' (ID: 1826)
  Prédit: ' char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' char' → logprob: -0.6988688111305237
    2. 'char' → logprob: -0.9488688111305237
    3. '(char' → logprob: -2.698868751525879
    4. ' (' → logprob: -3.073868751525879
    5. '(' → logprob: -6.823868751525879
    6. '((' → logprob: -7.448868751525879
    7. ' ((' → logprob: -8.448868751525879
    8. ' ' → logprob: -10.198868751525879
    9. '   ' → logprob: -10.323868751525879
    10. ' chr' → logprob: -10.448868751525879

Token 40: '_code' (ID: 8330)
  Prédit: '_code'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_code' → logprob: -7.3458322731312364e-06
    2. 'code' → logprob: -13.000007629394531
    3. '```' → logprob: -13.875007629394531
    4. '_' → logprob: -14.000007629394531
    5. '_CODE' → logprob: -14.125007629394531
    6. 'Code' → logprob: -14.375007629394531
    7. '_value' → logprob: -14.750007629394531
    8. ')' → logprob: -15.000007629394531
    9. '_Code' → logprob: -15.500007629394531
    10. '   ' → logprob: -16.12500762939453

Token 41: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5759820342063904
    2. ' +' → logprob: -0.8259820342063904
    3. ' ' → logprob: -10.950982093811035
    4. '-' → logprob: -11.325982093811035
    5. ' -' → logprob: -11.825982093811035
    6. ' +
' → logprob: -13.700982093811035
    7. '<|end|>' → logprob: -13.950982093811035
    8. ')' → logprob: -14.325982093811035
    9. ' plus' → logprob: -14.450982093811035
    10. '+
' → logprob: -15.200982093811035

Token 42: ' shift' (ID: 12847)
  Prédit: ' shift'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' shift' → logprob: -0.12693022191524506
    2. 'shift' → logprob: -2.1269302368164062
    3. ' ' → logprob: -13.626930236816406
    4. '1' → logprob: -15.751930236816406
    5. 'space' → logprob: -15.751930236816406
    6. '   ' → logprob: -16.001930236816406
    7. ' space' → logprob: -16.376930236816406
    8. ' ' → logprob: -16.501930236816406
    9. 'sh' → logprob: -16.626930236816406
    10. ' shifted' → logprob: -17.001930236816406

Token 43: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -4.429896944202483e-05
    2. '_' → logprob: -11.000043869018555
    3. '_val' → logprob: -11.000043869018555
    4. 'ed' → logprob: -12.375043869018555
    5. ' _' → logprob: -12.500043869018555
    6. 's' → logprob: -15.000043869018555
    7. 'value' → logprob: -15.000043869018555
    8. '_values' → logprob: -15.250043869018555
    9. '```' → logprob: -15.250043869018555
    10. ')_' → logprob: -15.375043869018555

Token 44: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6572548747062683
    2. 'if' → logprob: -1.907254934310913
    3. ' if' → logprob: -2.032254934310913
    4. '<|end|>' → logprob: -2.032254934310913
    5. '\n' → logprob: -3.532254934310913
    6. '   ' → logprob: -4.282254695892334
    7. '```' → logprob: -4.907254695892334
    8. ' 
' → logprob: -5.657254695892334
    9. ' ' → logprob: -5.782254695892334
    10. '    
' → logprob: -5.782254695892334

Token 45: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2729196548461914
    2. '
' → logprob: -2.1479196548461914
    3. ' if' → logprob: -2.7729196548461914
    4. 'if' → logprob: -3.5229196548461914
    5. '<|end|>' → logprob: -4.272919654846191
    6. '    
' → logprob: -4.897919654846191
    7. '```' → logprob: -5.272919654846191
    8. '  
' → logprob: -6.897919654846191
    9. '<|end|>' → logprob: -7.647919654846191
    10. ' 
' → logprob: -7.897919654846191

Token 46: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3204188644886017
    2. ' if' → logprob: -2.0704188346862793
    3. 'if' (adapté à ' if') → logprob: -2.1954188346862793
    4. '```' → logprob: -3.9454188346862793
    5. '    
' → logprob: -5.070418834686279
    6. ' 
' → logprob: -5.820418834686279
    7. ' ' → logprob: -5.820418834686279
    8. '
' → logprob: -7.070418834686279
    9. '<|end|>' → logprob: -7.070418834686279
    10. '   
' → logprob: -7.070418834686279

Token 47: ' shifted' (ID: 58644)
  Prédit: ' shifted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' shifted' → logprob: -0.29104292392730713
    2. ' ' → logprob: -2.5410428047180176
    3. ' (' → logprob: -2.6660428047180176
    4. 'shift' → logprob: -3.7910428047180176
    5. ' chr' → logprob: -3.9160428047180176
    6. ' char' → logprob: -4.166042804718018
    7. '32' → logprob: -4.791042804718018
    8. ' input' → logprob: -4.916042804718018
    9. ' '' → logprob: -5.041042804718018
    10. '65' → logprob: -5.291042804718018

Token 48: '_code' (ID: 8330)
  Prédit: '_code'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_code' → logprob: -0.00023452966706827283
    2. '_value' → logprob: -8.750234603881836
    3. '_char' → logprob: -10.500234603881836
    4. '_' → logprob: -10.875234603881836
    5. '_string' → logprob: -11.125234603881836
    6. '_cod' → logprob: -12.375234603881836
    7. '_CODE' → logprob: -13.500234603881836
    8. '```' → logprob: -13.625234603881836
    9. 'code' → logprob: -13.750234603881836
    10. ' _' → logprob: -13.875234603881836

Token 49: ' <=' (ID: 5017)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.01662730984389782
    2. '>' → logprob: -4.766627311706543
    3. ' >=' → logprob: -5.141627311706543
    4. ' <' → logprob: -6.641627311706543
    5. ' <=' → logprob: -7.266627311706543
    6. '>=' → logprob: -9.391627311706543
    7. '<' → logprob: -10.766627311706543
    8. '<=' → logprob: -11.766627311706543
    9. ' ' → logprob: -11.891627311706543
    10. '<|end|>' → logprob: -13.016627311706543

Token 50: ' ' (ID: 220)
  Prédit: '122'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '122' → logprob: -0.08586607128381729
    2. '90' → logprob: -2.7108659744262695
    3. '126' → logprob: -4.3358659744262695
    4. ' ' → logprob: -6.2108659744262695
    5. 'ord' → logprob: -7.7108659744262695
    6. '127' → logprob: -8.71086597442627
    7. '(ord' → logprob: -10.58586597442627
    8. '255' → logprob: -11.21086597442627
    9. 'z' → logprob: -11.33586597442627
    10. ' ord' → logprob: -11.83586597442627

Token 51: '90' (ID: 2744)
  Prédit: '122'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '122' → logprob: -0.2061648815870285
    2. '90' → logprob: -1.706164836883545
    3. '126' → logprob: -5.706164836883545
    4. 'ord' → logprob: -6.956164836883545
    5. '57' → logprob: -8.956165313720703
    6. ' ' → logprob: -9.081165313720703
    7. '127' → logprob: -9.331165313720703
    8. '(ord' → logprob: -10.331165313720703
    9. '255' → logprob: -10.456165313720703
    10. ''z' → logprob: -11.331165313720703

Token 52: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0440719909965992
    2. ' and' → logprob: -3.294071912765503
    3. ' :' → logprob: -5.669072151184082
    4. ':
' → logprob: -6.294072151184082
    5. 'and' → logprob: -7.544072151184082
    6. '):' → logprob: -9.544072151184082
    7. '   ' → logprob: -10.044072151184082
    8. ' :
' → logprob: -10.919072151184082
    9. ' or' → logprob: -11.044072151184082
    10. ' ' → logprob: -11.919072151184082

Token 53: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07870502769947052
    2. ':' → logprob: -2.703705072402954
    3. ' :' → logprob: -5.703704833984375
    4. 'result' → logprob: -6.078704833984375
    5. '   ' → logprob: -6.953704833984375
    6. '<|end|>' → logprob: -7.203704833984375
    7. ':
' → logprob: -7.953704833984375
    8. '        
' → logprob: -8.578704833984375
    9. '#' → logprob: -9.703704833984375
    10. '    ' → logprob: -9.828704833984375

Token 54: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.027279485017061234
    2. ' result' → logprob: -4.152279376983643
    3. '       ' → logprob: -4.527279376983643
    4. '   ' → logprob: -8.7772798538208
    5. '           ' → logprob: -9.7772798538208
    6. '	result' → logprob: -10.6522798538208
    7. ' 
' → logprob: -10.6522798538208
    8. '        ' → logprob: -10.9022798538208
    9. '    ' → logprob: -11.0272798538208
    10. '        
' → logprob: -11.5272798538208

Token 55: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -7.994086627149954e-05
    2. '_' → logprob: -9.500080108642578
    3. '_str' → logprob: -13.500080108642578
    4. 'string' → logprob: -13.750080108642578
    5. '_s' → logprob: -14.250080108642578
    6. '_char' → logprob: -15.000080108642578
    7. 'String' → logprob: -15.000080108642578
    8. '_strings' → logprob: -15.125080108642578
    9. '```' → logprob: -15.625080108642578
    10. '_String' → logprob: -15.875080108642578

Token 56: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.029895000159740448
    2. '+=' → logprob: -3.529895067214966
    3. '+' → logprob: -9.154894828796387
    4. ' +' → logprob: -10.404894828796387
    5. '+='' → logprob: -12.404894828796387
    6. '+="' → logprob: -13.279894828796387
    7. '=' → logprob: -13.904894828796387
    8. '.append' → logprob: -14.404894828796387
    9. ' =' → logprob: -14.529894828796387
    10. '+=(' → logprob: -15.029894828796387

Token 57: ' chr' (ID: 42767)
  Prédit: 'chr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chr' → logprob: -0.023276111111044884
    2. ' chr' → logprob: -3.7732760906219482
    3. '(chr' → logprob: -10.523276329040527
    4. '   ' → logprob: -13.773276329040527
    5. ' ' → logprob: -14.023276329040527
    6. 'char' → logprob: -14.273276329040527
    7. '  ' → logprob: -14.898276329040527
    8. '     ' → logprob: -15.523276329040527
    9. '_chr' → logprob: -15.773276329040527
    10. '      ' → logprob: -16.02327537536621

Token 58: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.6240566083070007e-06
    2. 'shift' → logprob: -13.375001907348633
    3. ' (' → logprob: -17.750001907348633
    4. '_shift' → logprob: -20.625001907348633
    5. 'Shift' → logprob: -20.750001907348633
    6. '(
' → logprob: -21.500001907348633
    7. ' shifted' → logprob: -21.625001907348633
    8. '((' → logprob: -21.625001907348633
    9. '()' → logprob: -21.750001907348633
    10. '(ord' → logprob: -21.875001907348633

Token 59: 'shift' (ID: 27472)
  Prédit: 'shift'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shift' → logprob: -1.318681188422488e-05
    2. ' shifted' → logprob: -11.25001335144043
    3. ')' → logprob: -17.25001335144043
    4. '   ' → logprob: -17.25001335144043
    5. 'sh' → logprob: -17.62501335144043
    6. ' shift' → logprob: -19.00001335144043
    7. '_shift' → logprob: -19.12501335144043
    8. ' ' → logprob: -19.50001335144043
    9. 'Shift' → logprob: -19.62501335144043
    10. '.shift' → logprob: -19.75001335144043

Token 60: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.0016807749634608626
    2. 'ted' → logprob: -6.501680850982666
    3. '_value' → logprob: -9.376680374145508
    4. 't' → logprob: -10.751680374145508
    5. 'f' → logprob: -11.501680374145508
    6. 'eded' → logprob: -11.626680374145508
    7. '_code' → logprob: -12.001680374145508
    8. 'ft' → logprob: -12.251680374145508
    9. 'ift' → logprob: -12.376680374145508
    10. 'shift' → logprob: -12.501680374145508

Token 61: '_code' (ID: 8330)
  Prédit: '_code'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_code' → logprob: -0.0003709701995830983
    2. 'code' → logprob: -8.750370979309082
    3. 'ed' → logprob: -9.250370979309082
    4. '_value' → logprob: -10.000370979309082
    5. 'shift' → logprob: -10.625370979309082
    6. '_' → logprob: -10.875370979309082
    7. '_shift' → logprob: -11.750370979309082
    8. 'd' → logprob: -12.875370979309082
    9. 'coded' → logprob: -12.875370979309082
    10. '_cod' → logprob: -13.125370979309082

Token 62: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01079513132572174
    2. ')
' → logprob: -4.7607951164245605
    3. '   ' → logprob: -6.1357951164245605
    4. 'else' → logprob: -11.760795593261719
    5. ' )' → logprob: -13.260795593261719
    6. ')
' → logprob: -14.135795593261719
    7. '       ' → logprob: -14.135795593261719
    8. ')

' → logprob: -14.260795593261719
    9. ' else' → logprob: -14.510795593261719
    10. '}' → logprob: -15.010795593261719

Token 63: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.7729578614234924
    2. ' else' → logprob: -1.3979578018188477
    3. 'elif' → logprob: -1.7729578018188477
    4. '   ' → logprob: -2.2729578018188477
    5. ' elif' → logprob: -4.022957801818848
    6. '```' → logprob: -8.272957801818848
    7. '	else' → logprob: -9.772957801818848
    8. '	elif' → logprob: -9.772957801818848
    9. 'el' → logprob: -10.272957801818848
    10. '    
' → logprob: -10.772957801818848

Token 64: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.6406904458999634
    2. ' else' → logprob: -1.3906904458999634
    3. 'elif' → logprob: -1.6406904458999634
    4. ' elif' → logprob: -3.515690326690674
    5. '   ' → logprob: -7.515690326690674
    6. '	elif' → logprob: -11.140690803527832
    7. 'e' → logprob: -11.140690803527832
    8. '	else' → logprob: -11.640690803527832
    9. 'el' → logprob: -12.265690803527832
    10. ' ' → logprob: -13.015690803527832

Token 65: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00041458409396000206
    2. ':
' → logprob: -8.375414848327637
    3. ' :' → logprob: -8.875414848327637
    4. '   ' → logprob: -11.125414848327637
    5. '       ' → logprob: -11.250414848327637
    6. '    ' → logprob: -12.000414848327637
    7. ':return' → logprob: -12.500414848327637
    8. ' if' → logprob: -13.625414848327637
    9. 'if' → logprob: -13.875414848327637
    10. '        ' → logprob: -14.500414848327637

Token 66: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08813776075839996
    2. '        ' → logprob: -2.9631378650665283
    3. 'result' → logprob: -3.7131378650665283
    4. '32' → logprob: -5.713137626647949
    5. ' result' → logprob: -6.463137626647949
    6. '    ' → logprob: -6.963137626647949
    7. ' ' → logprob: -7.963137626647949
    8. '           ' → logprob: -8.46313762664795
    9. '   ' → logprob: -8.46313762664795
    10. '      ' → logprob: -8.58813762664795

Token 67: ' result' (ID: 1534)
  Prédit: ' result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.34872087836265564
    2. 'result' (adapté à ' result') → logprob: -1.223720908164978
    3. ' shifted' → logprob: -8.47372055053711
    4. 'shift' → logprob: -11.22372055053711
    5. '        ' → logprob: -11.47372055053711
    6. '       ' → logprob: -11.59872055053711
    7. '    ' → logprob: -12.22372055053711
    8. '           ' → logprob: -12.59872055053711
    9. ' chr' → logprob: -12.72372055053711
    10. ' 
' → logprob: -12.72372055053711

Token 68: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -6.2729995988775045e-06
    2. '_' → logprob: -12.375006675720215
    3. '"_' → logprob: -14.625006675720215
    4. 'string' → logprob: -14.625006675720215
    5. '_s' → logprob: -14.875006675720215
    6. 'String' → logprob: -15.750006675720215
    7. '_str' → logprob: -15.875006675720215
    8. 's' → logprob: -16.5000057220459
    9. '_strings' → logprob: -16.6250057220459
    10. '```' → logprob: -16.6250057220459

Token 69: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.6364508867263794
    2. '+=' → logprob: -0.7614508867263794
    3. '=' → logprob: -6.13645076751709
    4. ' =' → logprob: -6.88645076751709
    5. ' -=' → logprob: -8.13645076751709
    6. '+' → logprob: -9.38645076751709
    7. '-' → logprob: -9.88645076751709
    8. '-=' → logprob: -9.88645076751709
    9. '+='' → logprob: -10.26145076751709
    10. ')' → logprob: -10.51145076751709

Token 70: ' chr' (ID: 42767)
  Prédit: 'chr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chr' → logprob: -0.6935533881187439
    2. ' chr' → logprob: -0.6935533881187439
    3. '(chr' → logprob: -7.818553447723389
    4. ' ' → logprob: -13.44355297088623
    5. '"' → logprob: -14.06855297088623
    6. '_chr' → logprob: -14.19355297088623
    7. ' ' → logprob: -15.19355297088623
    8. '  ' → logprob: -15.69355297088623
    9. 'char' → logprob: -15.94355297088623
    10. ''' → logprob: -16.068553924560547

Token 71: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.029861222952604294
    2. '((' → logprob: -3.5298612117767334
    3. '(ord' → logprob: -9.404861450195312
    4. '(chr' → logprob: -11.279861450195312
    5. '(((' → logprob: -11.904861450195312
    6. 'shift' → logprob: -12.654861450195312
    7. '(sh' → logprob: -13.529861450195312
    8. '("("' → logprob: -13.654861450195312
    9. '(s' → logprob: -14.029861450195312
    10. '((((' → logprob: -14.404861450195312

Token 72: 'shift' (ID: 27472)
  Prédit: 'shift'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shift' → logprob: -0.08511803299188614
    2. '65' → logprob: -2.835118055343628
    3. '64' → logprob: -4.210117816925049
    4. '(' → logprob: -5.335117816925049
    5. '90' → logprob: -6.335117816925049
    6. ' shifted' → logprob: -7.460117816925049
    7. ' ' → logprob: -7.960117816925049
    8. '((' → logprob: -9.210118293762207
    9. '(ord' → logprob: -9.210118293762207
    10. 'chr' → logprob: -9.335118293762207

Token 73: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.08898058533668518
    2. '_value' → logprob: -2.4639806747436523
    3. '_code' → logprob: -10.588980674743652
    4. '_shift' → logprob: -12.338980674743652
    5. 'ted' → logprob: -12.713980674743652
    6. 'shift' → logprob: -13.338980674743652
    7. '_' → logprob: -13.463980674743652
    8. ')' → logprob: -14.463980674743652
    9. '_val' → logprob: -14.463980674743652
    10. 'eted' → logprob: -14.838980674743652

Token 74: '_code' (ID: 8330)
  Prédit: '_code'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_code' → logprob: -0.0022630211897194386
    2. '_value' → logprob: -6.252263069152832
    3. '_shift' → logprob: -8.627263069152832
    4. 'ed' → logprob: -9.752263069152832
    5. 'shift' → logprob: -10.002263069152832
    6. 'code' → logprob: -11.127263069152832
    7. '_' → logprob: -11.377263069152832
    8. '-' → logprob: -12.002263069152832
    9. '```' → logprob: -12.127263069152832
    10. ')' → logprob: -12.877263069152832

Token 75: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.01823153719305992
    2. '-' → logprob: -4.018231391906738
    3. ')' → logprob: -9.643231391906738
    4. '   ' → logprob: -11.643231391906738
    5. ' ' → logprob: -12.643231391906738
    6. '  ' → logprob: -13.268231391906738
    7. ' )' → logprob: -13.768231391906738
    8. '```' → logprob: -14.768231391906738
    9. '32' → logprob: -15.643231391906738
    10. '45' → logprob: -15.768231391906738

Token 76: ' ' (ID: 220)
  Prédit: '26'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '26' → logprob: -6.217951886355877e-05
    2. ' ' → logprob: -9.750061988830566
    3. '90' → logprob: -12.875061988830566
    4. '(' → logprob: -14.125061988830566
    5. '91' → logprob: -15.375061988830566
    6. '```' → logprob: -16.125062942504883
    7. '   ' → logprob: -16.250062942504883
    8. ' (' → logprob: -17.250062942504883
    9. '
' → logprob: -17.500062942504883
    10. 'Z' → logprob: -17.875062942504883

Token 77: '26' (ID: 2109)
  Prédit: '26'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '26' → logprob: -4.36574100604048e-06
    2. ' ' → logprob: -13.125004768371582
    3. '90' → logprob: -13.125004768371582
    4. '2' → logprob: -16.375003814697266
    5. '(' → logprob: -16.500003814697266
    6. '91' → logprob: -16.750003814697266
    7. '   ' → logprob: -16.875003814697266
    8. '```' → logprob: -17.000003814697266
    9. '{' → logprob: -18.375003814697266
    10. '
' → logprob: -18.500003814697266

Token 78: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.4121114822482923e-06
    2. ')
' → logprob: -12.750003814697266
    3. ' )' → logprob: -15.500003814697266
    4. '))' → logprob: -16.375003814697266
    5. '   ' → logprob: -16.500003814697266
    6. '')' → logprob: -17.875003814697266
    7. ')`' → logprob: -18.125003814697266
    8. '`)' → logprob: -18.750003814697266
    9. '")' → logprob: -19.000003814697266
    10. ')))' → logprob: -19.125003814697266

Token 79: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2680948078632355
    2. '<|end|>' → logprob: -1.768094778060913
    3. '```' → logprob: -3.143094778060913
    4. '\n' → logprob: -4.143095016479492
    5. '#' → logprob: -6.393095016479492
    6. '
' → logprob: -7.018095016479492
    7. ')' → logprob: -7.518095016479492
    8. '\' → logprob: -7.643095016479492
    9. 'newline' → logprob: -7.643095016479492
    10. '[' → logprob: -8.893095016479492

Token 80: '(result' (ID: 8111)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0012822567950934172
    2. '("("' → logprob: -7.251282215118408
    3. '('' → logprob: -8.001282691955566
    4. '(result' → logprob: -8.376282691955566
    5. '(`' → logprob: -13.501282691955566
    6. '()' → logprob: -14.126282691955566
    7. '(
' → logprob: -14.376282691955566
    8. '((' → logprob: -14.501282691955566
    9. '("")' → logprob: -14.751282691955566
    10. '("""' → logprob: -14.876282691955566

Token 81: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -3.4121114822482923e-06
    2. 'string' → logprob: -13.875003814697266
    3. '_str' → logprob: -14.125003814697266
    4. '_' → logprob: -14.375003814697266
    5. '_strings' → logprob: -14.750003814697266
    6. 'String' → logprob: -15.250003814697266
    7. '_String' → logprob: -15.875003814697266
    8. '_s' → logprob: -16.000003814697266
    9. 't' → logprob: -17.125003814697266
    10. '_STRING' → logprob: -17.125003814697266

Token 82: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. ' )' → logprob: -14.375000953674316
    3. '))' → logprob: -16.875
    4. ')
' → logprob: -18.125
    5. ')`' → logprob: -18.75
    6. '`)' → logprob: -19.375
    7. '')' → logprob: -19.75
    8. '()' → logprob: -20.0
    9. '")' → logprob: -20.125
    10. ']' → logprob: -20.25


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 80
Tokens correctement prédits (1ère position, stricte): 46
Tokens correctement prédits (1ère position, avec adaptation): 48
Tokens correctement prédits (top 10): 69
Précision stricte (1ère position): 57.50%
Précision adaptée (1ère position): 60.00%
Précision (top 10): 86.25%
================================================================================
