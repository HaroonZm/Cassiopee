================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:30:54
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N = int(input())
playlist={}   # on passe par un dico pour les playlists
taiou = dict()

for i in range(N):
    s,t = input().split()
    taiou[s]= i
    playlist[i]= int(t)
    # Peut-être qu'on aurait pu stocker différemment...

X = input()

cnt=0
for k in range(taiou[X], N):  # on commence par l'indice trouvé
    cnt=cnt+playlist[k]
    # print('cumul:',cnt)  # debug inutile

# - on enlève le premier morceau finalement
print(cnt-playlist[taiou[X]])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003874166286550462
    2. '('' → logprob: -8.750387191772461
    3. ''' → logprob: -9.125387191772461
    4. '(N' → logprob: -9.875387191772461
    5. '```' → logprob: -10.625387191772461
    6. '`' → logprob: -11.625387191772461
    7. '()' → logprob: -11.625387191772461
    8. '("("' → logprob: -11.875387191772461
    9. '[' → logprob: -12.000387191772461
    10. '(
' → logprob: -12.750387191772461

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2372170090675354
    2. ')' → logprob: -1.7372169494628906
    3. '()' → logprob: -3.4872169494628906
    4. '())' → logprob: -5.737216949462891
    5. '```' → logprob: -7.987216949462891
    6. '(
' → logprob: -8.23721694946289
    7. '`' → logprob: -9.61221694946289
    8. '(()' → logprob: -9.61221694946289
    9. '("("' → logprob: -9.61221694946289
    10. '")' → logprob: -9.73721694946289

Token 5: 'playlist' (ID: 70742)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5391327142715454
    2. 'if' → logprob: -2.289132595062256
    3. 's' → logprob: -2.664132595062256
    4. 'a' → logprob: -2.664132595062256
    5. 'x' → logprob: -3.539132595062256
    6. 'i' → logprob: -3.539132595062256
    7. ' ' → logprob: -4.039132595062256
    8. 'f' → logprob: -4.164132595062256
    9. '[' → logprob: -4.539132595062256
    10. ' for' → logprob: -4.664132595062256

Token 6: '={}' (ID: 168862)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.08275632560253143
    2. '.' → logprob: -2.582756280899048
    3. '.append' → logprob: -6.082756519317627
    4. '[:]' → logprob: -7.957756519317627
    5. '[]' → logprob: -8.207756042480469
    6. '_' → logprob: -8.707756042480469
    7. '[i' → logprob: -9.082756042480469
    8. '\[' → logprob: -9.207756042480469
    9. '['' → logprob: -9.582756042480469
    10. '=' → logprob: -9.832756042480469

Token 7: '  ' (ID: 256)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3890237510204315
    2. '
' → logprob: -1.514023780822754
    3. ' for' → logprob: -3.139023780822754
    4. '\n' → logprob: -4.139023780822754
    5. '[' → logprob: -4.389023780822754
    6. '<|end|>' → logprob: -4.514023780822754
    7. ' 
' → logprob: -4.764023780822754
    8. '' → logprob: -5.389023780822754
    9. '[
' → logprob: -6.764023780822754
    10. '[n' → logprob: -7.139023780822754

Token 8: ' #' (ID: 1069)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.01340432371944189
    2. '[
' → logprob: -5.263404369354248
    3. 'for' → logprob: -5.388404369354248
    4. '\[' → logprob: -7.638404369354248
    5. '[n' → logprob: -7.888404369354248
    6. '.' → logprob: -8.13840389251709
    7. '\n' → logprob: -8.51340389251709
    8. '[p' → logprob: -8.51340389251709
    9. '[user' → logprob: -8.63840389251709
    10. '' → logprob: -8.63840389251709

Token 9: ' on' (ID: 402)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1745635271072388
    2. '[' → logprob: -1.2995635271072388
    3. 'for' → logprob: -1.6745635271072388
    4. '#' → logprob: -2.299563407897949
    5. ' for' → logprob: -2.424563407897949
    6. ''' → logprob: -5.049563407897949
    7. '[
' → logprob: -5.299563407897949
    8. ''s' → logprob: -5.424563407897949
    9. '.' → logprob: -5.924563407897949
    10. '[]' → logprob: -6.049563407897949

Token 10: ' passe' (ID: 22210)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0701860636472702
    2. ':' → logprob: -4.195186138153076
    3. ' ' → logprob: -4.445186138153076
    4. '=' → logprob: -4.820186138153076
    5. '_' → logprob: -4.945186138153076
    6. 'for' → logprob: -5.320186138153076
    7. ')' → logprob: -5.570186138153076
    8. '[user' → logprob: -6.195186138153076
    9. ',' → logprob: -6.445186138153076
    10. '[]' → logprob: -6.570186138153076

Token 11: ' par' (ID: 686)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.055415667593479156
    2. 'for' → logprob: -3.430415630340576
    3. '[
' → logprob: -5.555415630340576
    4. ' ' → logprob: -6.305415630340576
    5. '[n' → logprob: -6.305415630340576
    6. '[player' → logprob: -6.430415630340576
    7. ' for' → logprob: -6.555415630340576
    8. '[N' → logprob: -6.555415630340576
    9. '[user' → logprob: -6.555415630340576
    10. '
' → logprob: -6.930415630340576

Token 12: ' un' (ID: 537)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -1.309727668762207
    2. 'une' → logprob: -1.559727668762207
    3. '[]' → logprob: -1.934727668762207
    4. ' une' → logprob: -2.309727668762207
    5. 'la' → logprob: -2.934727668762207
    6. ' des' → logprob: -3.309727668762207
    7. 'dict' → logprob: -3.434727668762207
    8. ' la' → logprob: -3.559727668762207
    9. ' un' → logprob: -3.809727668762207
    10. 'un' → logprob: -3.934727668762207

Token 13: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.4212333858013153
    2. ' diction' → logprob: -1.1712334156036377
    3. 'for' → logprob: -4.546233177185059
    4. ' d' → logprob: -5.046233177185059
    5. 'dict' → logprob: -6.171233177185059
    6. 'default' → logprob: -6.171233177185059
    7. ' for' → logprob: -6.171233177185059
    8. ' defaultdict' → logprob: -6.421233177185059
    9. 'string' → logprob: -7.046233177185059
    10. 's' → logprob: -7.046233177185059

Token 14: 'ico' (ID: 2424)
  Prédit: 'iction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iction' → logprob: -0.6779227256774902
    2. 'ict' → logprob: -1.1779227256774902
    3. 'i' → logprob: -2.4279227256774902
    4. 'ic' → logprob: -3.0529227256774902
    5. 'ictionary' → logprob: -3.1779227256774902
    6. 'e' → logprob: -6.05292272567749
    7. 'ico' → logprob: -6.30292272567749
    8. 'icto' → logprob: -7.80292272567749
    9. '{}' → logprob: -7.80292272567749
    10. ' ' → logprob: -8.302923202514648

Token 15: ' pour' (ID: 1930)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005373560823500156
    2. ' for' → logprob: -5.630373477935791
    3. '[' → logprob: -6.755373477935791
    4. '
' → logprob: -7.880373477935791
    5. '\n' → logprob: -9.50537395477295
    6. '[
' → logprob: -9.63037395477295
    7. '[n' → logprob: -10.88037395477295
    8. '.' → logprob: -11.38037395477295
    9. 'f' → logprob: -12.00537395477295
    10. '' → logprob: -12.25537395477295

Token 16: ' les' (ID: 1341)
  Prédit: ' stock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' stock' → logprob: -0.5094337463378906
    2. ' gérer' → logprob: -2.7594337463378906
    3. 'avoir' → logprob: -3.0094337463378906
    4. 'g' → logprob: -3.1344337463378906
    5. 'aj' → logprob: -3.3844337463378906
    6. ' pouvoir' → logprob: -3.5094337463378906
    7. ' avoir' → logprob: -3.5094337463378906
    8. ' garder' → logprob: -3.6344337463378906
    9. ' éviter' → logprob: -3.8844337463378906
    10. 'stock' → logprob: -4.259433746337891

Token 17: ' playlists' (ID: 115109)
  Prédit: ' titres'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' titres' → logprob: -2.2355759143829346
    2. 'm' → logprob: -2.3605759143829346
    3. ' morceaux' → logprob: -2.3605759143829346
    4. ' chansons' → logprob: -2.3605759143829346
    5. ' mus' → logprob: -2.8605759143829346
    6. 'ch' → logprob: -2.8605759143829346
    7. 'indices' → logprob: -2.9855759143829346
    8. 'tit' → logprob: -3.1105759143829346
    9. 'mus' → logprob: -3.6105759143829346
    10. 'clé' → logprob: -3.6105759143829346

Token 18: '
' (ID: 198)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3364928662776947
    2. 'for' → logprob: -1.461492896080017
    3. '[
' → logprob: -3.3364927768707275
    4. '
' → logprob: -5.711493015289307
    5. '[n' → logprob: -5.711493015289307
    6. ' for' → logprob: -5.711493015289307
    7. '.' → logprob: -6.336493015289307
    8. '\n' → logprob: -7.211493015289307
    9. '[user' → logprob: -7.211493015289307
    10. '[player' → logprob: -7.211493015289307

Token 19: 'tai' (ID: 170666)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.023933131247758865
    2. '
' → logprob: -4.148932933807373
    3. ' for' → logprob: -5.523932933807373
    4. '\n' → logprob: -6.273932933807373
    5. '[' → logprob: -6.648932933807373
    6. '[
' → logprob: -8.648933410644531
    7. '\' → logprob: -9.398933410644531
    8. '[n' → logprob: -9.523933410644531
    9. 'n' → logprob: -9.773933410644531
    10. ':' → logprob: -10.023933410644531

Token 20: 'ou' (ID: 283)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.3277078866958618
    2. 'lle' → logprob: -2.0777077674865723
    3. 'll' → logprob: -2.8277077674865723
    4. 't' → logprob: -3.4527077674865723
    5. 'ls' → logprob: -3.4527077674865723
    6. 'le' → logprob: -4.077707767486572
    7. 'lles' → logprob: -5.577707767486572
    8. 'len' → logprob: -5.952707767486572
    9. 'x' → logprob: -6.702707767486572
    10. 'ller' → logprob: -6.827707767486572

Token 21: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5056791305541992
    2. '[' → logprob: -1.8806791305541992
    3. ' =' → logprob: -2.255679130554199
    4. 't' → logprob: -3.505679130554199
    5. '={}' → logprob: -3.505679130554199
    6. 'l' → logprob: -4.130679130554199
    7. '_' → logprob: -4.755679130554199
    8. '[]' → logprob: -4.880679130554199
    9. 'n' → logprob: -5.005679130554199
    10. '[t' → logprob: -5.255679130554199

Token 22: ' dict' (ID: 11878)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.07129673659801483
    2. '[]' → logprob: -3.3212966918945312
    3. '0' → logprob: -3.6962966918945312
    4. 'int' → logprob: -6.071296691894531
    5. '{' → logprob: -6.321296691894531
    6. 'playlist' → logprob: -7.446296691894531
    7. 'input' → logprob: -7.571296691894531
    8. '""' → logprob: -7.571296691894531
    9. '"' → logprob: -8.071296691894531
    10. 'True' → logprob: -8.071296691894531

Token 23: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.23055224120616913
    2. '(' → logprob: -1.6055521965026855
    3. '.setdefault' → logprob: -6.2305521965026855
    4. '({' → logprob: -7.2305521965026855
    5. '(t' → logprob: -7.7305521965026855
    6. '[' → logprob: -8.605552673339844
    7. '(dict' → logprob: -8.605552673339844
    8. '()
' → logprob: -8.730552673339844
    9. '.' → logprob: -8.980552673339844
    10. '([(' → logprob: -8.980552673339844

Token 24: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0011803467059507966
    2. '
' → logprob: -7.376180171966553
    3. ' for' → logprob: -8.126180648803711
    4. 'f' → logprob: -9.376180648803711
    5. 'n' → logprob: -9.376180648803711
    6. '[' → logprob: -10.001180648803711
    7. '\n' → logprob: -11.376180648803711
    8. '' → logprob: -12.376180648803711
    9. '\' → logprob: -12.376180648803711
    10. 'i' → logprob: -13.001180648803711

Token 25: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2938858270645142
    2. ' i' → logprob: -1.2938858270645142
    3. ' song' → logprob: -1.2938858270645142
    4. ' _' → logprob: -2.0438857078552246
    5. ' key' → logprob: -4.418885707855225
    6. ' item' → logprob: -4.793885707855225
    7. ' playlist' → logprob: -4.918885707855225
    8. ' element' → logprob: -6.293885707855225
    9. ' artist' → logprob: -6.418885707855225
    10. ' s' → logprob: -6.543885707855225

Token 26: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018766917288303375
    2. 'in' → logprob: -4.0187668800354
    3. ' ' → logprob: -7.5187668800354
    4. 'range' → logprob: -9.768767356872559
    5. '  ' → logprob: -12.018767356872559
    6. ' range' → logprob: -12.893767356872559
    7. '```' → logprob: -13.268767356872559
    8. '_' → logprob: -13.518767356872559
    9. 'n' → logprob: -13.643767356872559
    10. ' ' → logprob: -14.268767356872559

Token 27: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.1602262556552887
    2. 'range' → logprob: -1.9102262258529663
    3. 'rang' → logprob: -14.160225868225098
    4. '	range' → logprob: -14.785225868225098
    5. ' ' → logprob: -15.035225868225098
    6. '(range' → logprob: -15.535225868225098
    7. 'ran' → logprob: -16.035226821899414
    8. ' rang' → logprob: -16.535226821899414
    9. 'Range' → logprob: -16.785226821899414
    10. ' ran' → logprob: -17.035226821899414

Token 28: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05985771119594574
    2. '(N' → logprob: -2.9348576068878174
    3. ' (' → logprob: -5.3098578453063965
    4. '(n' → logprob: -11.434857368469238
    5. '(
' → logprob: -12.934857368469238
    6. ' N' → logprob: -13.809857368469238
    7. '(len' → logprob: -13.809857368469238
    8. '(s' → logprob: -14.059857368469238
    9. '(int' → logprob: -14.184857368469238
    10. '(i' → logprob: -14.309857368469238

Token 29: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0038351137191057205
    2. ')' → logprob: -5.753835201263428
    3. ' ):' → logprob: -7.378835201263428
    4. ':' → logprob: -10.87883472442627
    5. '+' → logprob: -12.25383472442627
    6. '):
' → logprob: -12.37883472442627
    7. ' )' → logprob: -12.87883472442627
    8. ',' → logprob: -14.37883472442627
    9. ' :' → logprob: -14.75383472442627
    10. '():' → logprob: -15.12883472442627

Token 30: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27875322103500366
    2. ' ' → logprob: -1.5287532806396484
    3. '    ' → logprob: -5.028753280639648
    4. '  ' → logprob: -5.153753280639648
    5. '    
' → logprob: -6.403753280639648
    6. 'input' → logprob: -6.528753280639648
    7. ' ' → logprob: -6.653753280639648
    8. '_' → logprob: -6.778753280639648
    9. ' 
' → logprob: -6.903753280639648
    10. '[' → logprob: -7.278753280639648

Token 31: ' s' (ID: 265)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.7921193838119507
    2. ' song' → logprob: -1.1671193838119507
    3. 'song' → logprob: -2.6671195030212402
    4. 'playlist' → logprob: -3.1671195030212402
    5. 'line' → logprob: -3.7921195030212402
    6. ' playlist' → logprob: -3.7921195030212402
    7. ' title' → logprob: -4.29211950302124
    8. ' name' → logprob: -4.41711950302124
    9. 'name' → logprob: -4.66711950302124
    10. 'title' → logprob: -4.79211950302124

Token 32: ',t' (ID: 26927)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11901172995567322
    2. '=input' → logprob: -2.869011640548706
    3. '=' → logprob: -3.244011640548706
    4. 'tr' → logprob: -4.369011878967285
    5. 'tring' → logprob: -6.369011878967285
    6. 'ong' → logprob: -6.994011878967285
    7. 'input' → logprob: -8.869011878967285
    8. 'ongs' → logprob: -8.869011878967285
    9. 'p' → logprob: -8.869011878967285
    10. 'trip' → logprob: -9.494011878967285

Token 33: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5524460673332214
    2. '=' → logprob: -0.9274460673332214
    3. '=input' → logprob: -3.677446126937866
    4. 'okens' → logprob: -6.552445888519287
    5. ',' → logprob: -7.802445888519287
    6. '=s' → logprob: -8.177446365356445
    7. '=line' → logprob: -8.302446365356445
    8. ',s' → logprob: -8.552446365356445
    9. ',input' → logprob: -9.052446365356445
    10. ',a' → logprob: -9.302446365356445

Token 34: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5760695338249207
    2. 'input' → logprob: -0.8260695338249207
    3. ' map' → logprob: -9.451069831848145
    4. 'map' → logprob: -10.076069831848145
    5. ' ' → logprob: -12.076069831848145
    6. '(input' → logprob: -13.576069831848145
    7. '[input' → logprob: -14.076069831848145
    8. '=input' → logprob: -14.826069831848145
    9. '	input' → logprob: -15.076069831848145
    10. 'list' → logprob: -15.451069831848145

Token 35: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0005830573500134051
    2. '()' → logprob: -7.500583171844482
    3. '(' → logprob: -10.500582695007324
    4. '('' → logprob: -13.625582695007324
    5. ' ().' → logprob: -14.500582695007324
    6. '("' → logprob: -15.500582695007324
    7. '('').' → logprob: -15.875582695007324
    8. '("").' → logprob: -16.00058364868164
    9. '("("' → logprob: -16.25058364868164
    10. ')' → logprob: -16.37558364868164

Token 36: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -5.5861724831629544e-05
    2. 'strip' → logprob: -9.875056266784668
    3. 'rstrip' → logprob: -12.750056266784668
    4. ' split' → logprob: -13.875056266784668
    5. 'spl' → logprob: -15.250056266784668
    6. 'rs' → logprob: -16.00005531311035
    7. '```' → logprob: -17.25005531311035
    8. '(split' → logprob: -17.50005531311035
    9. '.split' → logprob: -17.75005531311035
    10. 'replace' → logprob: -18.37505531311035

Token 37: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.015103893354535103
    2. '(' → logprob: -4.265103816986084
    3. '('' → logprob: -7.015103816986084
    4. '("' → logprob: -11.515104293823242
    5. '("("' → logprob: -11.640104293823242
    6. '())' → logprob: -12.515104293823242
    7. '```' → logprob: -12.890104293823242
    8. '()]' → logprob: -13.140104293823242
    9. ' ()' → logprob: -13.390104293823242
    10. ')' → logprob: -13.515104293823242

Token 38: '   ' (ID: 271)
  Prédit: 'tai'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tai' → logprob: -0.5985908508300781
    2. '   ' → logprob: -1.3485908508300781
    3. ' if' → logprob: -2.723590850830078
    4. ' tai' → logprob: -3.473590850830078
    5. 'playlist' → logprob: -3.973590850830078
    6. '
' → logprob: -4.223590850830078
    7. '\t' → logprob: -4.348590850830078
    8. 't' → logprob: -4.473590850830078
    9. 'if' → logprob: -4.848590850830078
    10. '    
' → logprob: -4.848590850830078

Token 39: ' tai' (ID: 20424)
  Prédit: 'tai'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tai' (adapté à ' tai') → logprob: -1.1296035051345825
    2. ' if' → logprob: -1.2546035051345825
    3. 'playlist' → logprob: -1.6296035051345825
    4. 'if' → logprob: -1.7546035051345825
    5. ' playlist' → logprob: -4.379603385925293
    6. ' tai' → logprob: -5.004603385925293
    7. '   ' → logprob: -7.004603385925293
    8. 't' → logprob: -7.004603385925293
    9. '```' → logprob: -7.754603385925293
    10. 's' → logprob: -9.317103385925293

Token 40: 'ou' (ID: 283)
  Prédit: 'ou'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ou' → logprob: -0.001705175032839179
    2. 'o' → logprob: -6.376705169677734
    3. 'u' → logprob: -13.626705169677734
    4. 'ō' → logprob: -14.001705169677734
    5. 'о' → logprob: -15.001705169677734
    6. 'оу' → logprob: -15.876705169677734
    7. '	o' → logprob: -16.126705169677734
    8. 'au' → logprob: -16.501705169677734
    9. 'out' → logprob: -17.001705169677734
    10. '[o' → logprob: -17.126705169677734

Token 41: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.007526297587901354
    2. '[t' → logprob: -5.007526397705078
    3. '[' → logprob: -7.382526397705078
    4. '.setdefault' → logprob: -9.632526397705078
    5. '[(' → logprob: -10.007526397705078
    6. '[i' → logprob: -10.507526397705078
    7. 's' → logprob: -11.632526397705078
    8. ' [' → logprob: -11.882526397705078
    9. '[str' → logprob: -12.132526397705078
    10. '[int' → logprob: -12.882526397705078

Token 42: ']=' (ID: 9539)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07921130955219269
    2. ']=' → logprob: -2.5792112350463867
    3. ' ]' → logprob: -9.704211235046387
    4. '].' → logprob: -9.704211235046387
    5. ']+=' → logprob: -9.829211235046387
    6. ']==' → logprob: -10.079211235046387
    7. ']=(' → logprob: -10.454211235046387
    8. '][' → logprob: -10.704211235046387
    9. ']={' → logprob: -11.454211235046387
    10. '[' → logprob: -11.704211235046387

Token 43: ' i' (ID: 575)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.007048771250993013
    2. 'int' → logprob: -5.757048606872559
    3. ' t' → logprob: -6.507048606872559
    4. '[t' → logprob: -6.757048606872559
    5. '[int' → logprob: -8.132048606872559
    6. '1' → logprob: -8.257048606872559
    7. '[' → logprob: -8.382048606872559
    8. '[]' → logprob: -8.882048606872559
    9. '0' → logprob: -10.007048606872559
    10. '{' → logprob: -10.132048606872559

Token 44: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 45: '   ' (ID: 271)
  Prédit: 'playlist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'playlist' → logprob: -0.48402413725852966
    2. '<|end|>' → logprob: -1.109024167060852
    3. ' ' → logprob: -4.2340240478515625
    4. ' playlist' → logprob: -4.9840240478515625
    5. ')' → logprob: -5.3590240478515625
    6. '\t' → logprob: -5.7340240478515625
    7. '\n' → logprob: -5.9840240478515625
    8. '_playlist' → logprob: -5.9840240478515625
    9. '<|end|>' → logprob: -6.1090240478515625
    10. 't' → logprob: -6.2340240478515625

Token 46: ' playlist' (ID: 46585)
  Prédit: 'playlist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'playlist' (adapté à ' playlist') → logprob: -0.023037094622850418
    2. ' playlist' → logprob: -4.273036956787109
    3. 'tai' → logprob: -5.773036956787109
    4. 't' → logprob: -6.273036956787109
    5. '<|end|>' → logprob: -7.523036956787109
    6. ' ' → logprob: -7.523036956787109
    7. 's' → logprob: -8.02303695678711
    8. 'play' → logprob: -8.39803695678711
    9. ' t' → logprob: -8.39803695678711
    10. '_playlist' → logprob: -8.52303695678711

Token 47: '[i' (ID: 1768)
  Prédit: '[s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.6831909418106079
    2. '.setdefault' → logprob: -0.8081909418106079
    3. '[t' → logprob: -3.0581908226013184
    4. '[' → logprob: -6.558190822601318
    5. '.' → logprob: -7.808190822601318
    6. 's' → logprob: -8.058191299438477
    7. '.s' → logprob: -10.058191299438477
    8. '.update' → logprob: -10.183191299438477
    9. '.append' → logprob: -10.558191299438477
    10. '[i' → logprob: -10.683191299438477

Token 48: ']=' (ID: 9539)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03824218362569809
    2. ']=' → logprob: -3.2882421016693115
    3. ' ]' → logprob: -9.66324234008789
    4. '].' → logprob: -9.78824234008789
    5. ']=(' → logprob: -10.03824234008789
    6. ']={' → logprob: -11.16324234008789
    7. '=' → logprob: -12.03824234008789
    8. ']+=' → logprob: -12.28824234008789
    9. '][' → logprob: -12.66324234008789
    10. '[' → logprob: -13.28824234008789

Token 49: ' int' (ID: 677)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.2135011851787567
    2. '[' → logprob: -2.963501214981079
    3. '[t' → logprob: -3.088501214981079
    4. 'set' → logprob: -3.463501214981079
    5. '[int' → logprob: -4.2135009765625
    6. '[s' → logprob: -4.2135009765625
    7. 't' → logprob: -4.2135009765625
    8. '{' → logprob: -5.2135009765625
    9. '{}' → logprob: -5.3385009765625
    10. '0' → logprob: -5.7135009765625

Token 50: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.0004647504829335958
    2. '(' → logprob: -7.875464916229248
    3. '(s' → logprob: -9.87546443939209
    4. 't' → logprob: -10.62546443939209
    5. ' ' → logprob: -13.12546443939209
    6. ' (' → logprob: -13.12546443939209
    7. '()' → logprob: -13.75046443939209
    8. '(
' → logprob: -13.87546443939209
    9. '((' → logprob: -14.50046443939209
    10. '	t' → logprob: -14.75046443939209

Token 51: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5570885807392187e-05
    2. ' )' → logprob: -11.500015258789062
    3. ')
' → logprob: -12.750015258789062
    4. '))' → logprob: -13.500015258789062
    5. '`)' → logprob: -15.500015258789062
    6. '')' → logprob: -16.125015258789062
    7. '])' → logprob: -16.250015258789062
    8. '})' → logprob: -16.500015258789062
    9. ')}' → logprob: -16.500015258789062
    10. ')`' → logprob: -16.500015258789062

Token 52: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 53: ' #' (ID: 1069)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.1216571182012558
    2. '<|end|>' → logprob: -2.496657133102417
    3. '
' → logprob: -4.246656894683838
    4. ')' → logprob: -5.121656894683838
    5. '\' → logprob: -6.121656894683838
    6. ' ' → logprob: -6.246656894683838
    7. '```' → logprob: -6.621656894683838
    8. '+' → logprob: -6.746656894683838
    9. '#' (adapté à ' #') → logprob: -6.871656894683838
    10. '(' → logprob: -7.496656894683838

Token 54: ' Peut' (ID: 116891)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.10483010858297348
    2. '<|end|>' → logprob: -3.229830026626587
    3. '\n' → logprob: -4.604830265045166
    4. ')' → logprob: -4.604830265045166
    5. ' ' → logprob: -4.854830265045166
    6. '-' → logprob: -5.354830265045166
    7. '```' → logprob: -5.729830265045166
    8. '+' → logprob: -5.979830265045166
    9. 's' → logprob: -6.104830265045166
    10. ' #' → logprob: -6.354830265045166

Token 55: '-être' (ID: 33599)
  Prédit: 'être'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'être' → logprob: -1.1303740739822388
    2. ' continuer' → logprob: -2.130373954772949
    3. '   ' → logprob: -2.380373954772949
    4. 'êt' → logprob: -2.630373954772949
    5. ' ' → logprob: -3.380373954772949
    6. 'etre' → logprob: -3.505373954772949
    7. 's' → logprob: -3.880373954772949
    8. 't' → logprob: -4.255373954772949
    9. 'ent' → logprob: -4.255373954772949
    10. ' être' → logprob: -4.255373954772949

Token 56: ' qu' (ID: 474)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0867317914962769
    2. '   ' → logprob: -1.3367317914962769
    3. ' continuer' → logprob: -2.4617319107055664
    4. '    ' → logprob: -2.5867319107055664
    5. ' continue' → logprob: -3.5867319107055664
    6. ' .' → logprob: -3.7117319107055664
    7. 's' → logprob: -3.7117319107055664
    8. '.' → logprob: -4.086731910705566
    9. ' if' → logprob: -4.211731910705566
    10. '  ' → logprob: -4.711731910705566

Token 57: ''on' (ID: 25812)
  Prédit: ''il'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''il' → logprob: -0.7739037871360779
    2. ''' → logprob: -1.2739038467407227
    3. ''on' → logprob: -2.6489038467407227
    4. ' on' → logprob: -3.5239038467407227
    5. 'e' → logprob: -3.6489038467407227
    6. ' il' → logprob: -3.6489038467407227
    7. ''un' → logprob: -4.148903846740723
    8. 'a' → logprob: -4.148903846740723
    9. ' ' → logprob: -4.523903846740723
    10. '   ' → logprob: -4.648903846740723

Token 58: ' aurait' (ID: 48306)
  Prédit: ' pourrait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pourrait' → logprob: -2.02012300491333
    2. ' pourra' → logprob: -2.02012300491333
    3. ' devra' → logprob: -2.02012300491333
    4. 'pour' → logprob: -2.14512300491333
    5. ' va' → logprob: -2.89512300491333
    6. ' faudra' → logprob: -2.89512300491333
    7. 'a' → logprob: -3.02012300491333
    8. ' peut' → logprob: -3.27012300491333
    9. 'voud' → logprob: -3.77012300491333
    10. ' ' → logprob: -3.89512300491333

Token 59: ' pu' (ID: 2923)
  Prédit: 'pu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pu' → logprob: -0.930797278881073
    2. 'd' → logprob: -1.1807973384857178
    3. 's' → logprob: -2.9307973384857178
    4. 'u' → logprob: -3.5557973384857178
    5. '<|end|>' → logprob: -3.8057973384857178
    6. ' dû' → logprob: -3.9307973384857178
    7. 'f' → logprob: -4.055797100067139
    8. 'aj' → logprob: -4.430797100067139
    9. 'b' → logprob: -4.555797100067139
    10. 'm' → logprob: -4.680797100067139

Token 60: ' stock' (ID: 6546)
  Prédit: ' utiliser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' utiliser' → logprob: -0.4991171061992645
    2. 'util' → logprob: -2.374117136001587
    3. 'contin' → logprob: -2.624117136001587
    4. 's' → logprob: -3.124117136001587
    5. ' continuer' → logprob: -3.249117136001587
    6. 'mettre' → logprob: -3.249117136001587
    7. ''utiliser' → logprob: -4.249116897583008
    8. 'faire' → logprob: -4.749116897583008
    9. ' ' → logprob: -4.999116897583008
    10. 'prendre' → logprob: -5.124116897583008

Token 61: 'er' (ID: 259)
  Prédit: 'érer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érer' → logprob: -0.0029143576975911856
    2. 'er' → logprob: -6.0029144287109375
    3. 'erer' → logprob: -8.627914428710938
    4. 'rer' → logprob: -9.877914428710938
    5. 'ér' → logprob: -10.252914428710938
    6. 'urer' → logprob: -10.377914428710938
    7. '   ' → logprob: -10.627914428710938
    8. 'errer' → logprob: -10.877914428710938
    9. 'é' → logprob: -11.127914428710938
    10. 'éer' → logprob: -11.502914428710938

Token 62: ' diff' (ID: 8868)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 63: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.2609768807888031
    2. 'érent' → logprob: -2.760976791381836
    3. 'érents' → logprob: -3.010976791381836
    4. 'ére' → logprob: -3.010976791381836
    5. 'ér' → logprob: -3.510976791381836
    6. 'éré' → logprob: -4.510976791381836
    7. 'érence' → logprob: -5.510976791381836
    8. 'èrent' → logprob: -5.635976791381836
    9. 'er' → logprob: -5.635976791381836
    10. 'èrement' → logprob: -5.760976791381836

Token 64: 'rem' (ID: 1935)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.05129372328519821
    2. 'rent' → logprob: -3.4262936115264893
    3. 'rence' → logprob: -4.301293849945068
    4. 'rem' → logprob: -5.801293849945068
    5. 'rer' → logprob: -7.801293849945068
    6. ' rents' → logprob: -8.55129337310791
    7. 'rement' → logprob: -9.05129337310791
    8. 'ren' → logprob: -9.92629337310791
    9. 're' → logprob: -10.42629337310791
    10. 'rend' → logprob: -11.17629337310791

Token 65: 'ment' (ID: 508)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.0007640030235052109
    2. 'ents' → logprob: -7.750763893127441
    3. 'ment' → logprob: -8.375763893127441
    4. 'ént' → logprob: -10.750763893127441
    5. 'entes' → logprob: -11.125763893127441
    6. 'ently' → logprob: -11.625763893127441
    7. 'entemente' → logprob: -11.875763893127441
    8. 'e' → logprob: -12.000763893127441
    9. 'ente' → logprob: -12.000763893127441
    10. 'ент' → logprob: -12.125763893127441

Token 66: '...

' (ID: 2161)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9257034063339233
    2. '<|end|>' → logprob: -1.3007034063339233
    3. '#' → logprob: -2.675703525543213
    4. 's' → logprob: -2.800703525543213
    5. ')' → logprob: -2.925703525543213
    6. 'i' → logprob: -3.300703525543213
    7. ',' → logprob: -4.300703525543213
    8. 'n' → logprob: -4.425703525543213
    9. '
' → logprob: -4.550703525543213
    10. 't' → logprob: -4.800703525543213

Token 67: 'X' (ID: 55)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.077662467956543
    2. '<|end|>' → logprob: -1.827662467956543
    3. ' ' → logprob: -2.327662467956543
    4. '
' → logprob: -2.577662467956543
    5. 'for' → logprob: -2.702662467956543
    6. 'n' → logprob: -2.952662467956543
    7. '\n' → logprob: -3.327662467956543
    8. 's' → logprob: -3.577662467956543
    9. ')' → logprob: -3.952662467956543
    10. '```' → logprob: -4.202662467956543

Token 68: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25934478640556335
    2. ' =' → logprob: -1.5093448162078857
    3. '_' → logprob: -5.509344577789307
    4. '.' → logprob: -6.884344577789307
    5. '=int' → logprob: -7.009344577789307
    6. 's' → logprob: -8.134345054626465
    7. 'for' → logprob: -8.384345054626465
    8. ')' → logprob: -8.759345054626465
    9. ',' → logprob: -8.884345054626465
    10. 't' → logprob: -9.134345054626465

Token 69: ' input' (ID: 3422)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.06793627887964249
    2. ' int' → logprob: -2.9429361820220947
    3. 'input' → logprob: -4.567936420440674
    4. ' input' → logprob: -6.942936420440674
    5. 'tai' → logprob: -7.942936420440674
    6. 'len' → logprob: -8.192935943603516
    7. 'playlist' → logprob: -8.192935943603516
    8. ' tai' → logprob: -8.817935943603516
    9. ' playlist' → logprob: -9.567935943603516
    10. '[int' → logprob: -9.692935943603516

Token 70: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.14293360710144043
    2. '(' → logprob: -2.0179336071014404
    3. '().' → logprob: -9.64293384552002
    4. '(
' → logprob: -10.39293384552002
    5. '"' → logprob: -10.76793384552002
    6. '('' → logprob: -10.89293384552002
    7. '("("' → logprob: -11.26793384552002
    8. ' ()' → logprob: -11.39293384552002
    9. '("' → logprob: -11.39293384552002
    10. ')' → logprob: -11.39293384552002

Token 71: 'cnt' (ID: 33160)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4553147554397583
    2. 'for' → logprob: -1.2053147554397583
    3. 'i' → logprob: -3.3303146362304688
    4. 'print' → logprob: -5.580314636230469
    5. 'current' → logprob: -5.705314636230469
    6. 'while' → logprob: -5.830314636230469
    7. 'max' → logprob: -6.205314636230469
    8. 's' → logprob: -6.330314636230469
    9. 'result' → logprob: -6.455314636230469
    10. 'n' → logprob: -6.455314636230469

Token 72: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.612405002117157
    2. '_' → logprob: -0.862405002117157
    3. ' =' → logprob: -3.6124050617218018
    4. '[' → logprob: -5.362404823303223
    5. 's' → logprob: -5.987404823303223
    6. '_=' → logprob: -7.612404823303223
    7. 'er' → logprob: -8.612404823303223
    8. '={}' → logprob: -8.737404823303223
    9. '(' → logprob: -9.112404823303223
    10. '[]' → logprob: -9.487404823303223

Token 73: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005368818063288927
    2. '{}' → logprob: -5.380368709564209
    3. ' ' → logprob: -7.505368709564209
    4. '{' → logprob: -8.630369186401367
    5. ' {}' → logprob: -11.630369186401367
    6. '1' → logprob: -12.130369186401367
    7. 'dict' → logprob: -13.880369186401367
    8. '[' → logprob: -14.005369186401367
    9. '{}
' → logprob: -14.130369186401367
    10. ' defaultdict' → logprob: -14.630369186401367

Token 74: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3592851161956787
    2. '<|end|>' → logprob: -1.3592851161956787
    3. '
' → logprob: -3.6092851161956787
    4. ' for' → logprob: -4.109285354614258
    5. 'if' → logprob: -7.484285354614258
    6. '<|end|>' → logprob: -7.609285354614258
    7. ' ' → logprob: -9.109285354614258
    8. '\n' → logprob: -9.484285354614258
    9. '.' → logprob: -10.734285354614258
    10. ')' → logprob: -10.734285354614258

Token 75: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0032420014031231403
    2. '
' → logprob: -6.128242015838623
    3. ' for' → logprob: -7.128242015838623
    4. '<|end|>' → logprob: -8.503241539001465
    5. 'if' → logprob: -10.503241539001465
    6. '\n' → logprob: -12.003241539001465
    7. 's' → logprob: -12.503241539001465
    8. 'while' → logprob: -12.628241539001465
    9. '' → logprob: -13.003241539001465
    10. '\' → logprob: -13.628241539001465

Token 76: ' k' (ID: 372)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3486630916595459
    2. ' s' → logprob: -2.348663091659546
    3. '_' → logprob: -2.848663091659546
    4. ' _' → logprob: -2.973663091659546
    5. 'i' → logprob: -3.348663091659546
    6. ' key' → logprob: -3.723663091659546
    7. 's' → logprob: -4.598663330078125
    8. ' song' → logprob: -5.223663330078125
    9. ' k' → logprob: -5.473663330078125
    10. ' playlist' → logprob: -6.473663330078125

Token 77: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.13240964710712433
    2. 'in' → logprob: -2.1324095726013184
    3. ',' → logprob: -5.382409572601318
    4. ',in' → logprob: -8.257410049438477
    5. ' ,' → logprob: -8.507410049438477
    6. ',v' → logprob: -8.757410049438477
    7. ',t' → logprob: -9.632410049438477
    8. ' ' → logprob: -10.507410049438477
    9. ',k' → logprob: -10.632410049438477
    10. 's' → logprob: -10.882410049438477

Token 78: ' range' (ID: 3352)
  Prédit: ' tai'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tai' → logprob: -0.7297672033309937
    2. 'tai' → logprob: -0.8547672033309937
    3. ' playlist' → logprob: -3.229767322540283
    4. ' range' → logprob: -3.729767322540283
    5. 'playlist' → logprob: -3.729767322540283
    6. 'range' → logprob: -5.354767322540283
    7. 'tail' → logprob: -9.729766845703125
    8. 'list' → logprob: -9.979766845703125
    9. 't' → logprob: -10.229766845703125
    10. '(t' → logprob: -10.604766845703125

Token 79: '(t' (ID: 2025)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.03120698779821396
    2. '(len' → logprob: -4.281207084655762
    3. '(X' → logprob: -4.906207084655762
    4. '(' → logprob: -5.031207084655762
    5. '(t' → logprob: -5.906207084655762
    6. '(n' → logprob: -9.156207084655762
    7. ' (' → logprob: -10.656207084655762
    8. '(cnt' → logprob: -10.656207084655762
    9. 'N' → logprob: -11.281207084655762
    10. '(k' → logprob: -11.656207084655762

Token 80: 'ai' (ID: 1361)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0391217470169067
    2. 'N' → logprob: -1.2891217470169067
    3. 'ai' → logprob: -2.164121627807617
    4. 'ail' → logprob: -2.414121627807617
    5. 'otal' → logprob: -3.414121627807617
    6. 'X' → logprob: -3.789121627807617
    7. '(' → logprob: -4.539121627807617
    8. 'ime' → logprob: -4.539121627807617
    9. 'A' → logprob: -4.789121627807617
    10. 'imes' → logprob: -5.039121627807617

Token 81: 'ou' (ID: 283)
  Prédit: 'ou'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ou' → logprob: -0.008510438725352287
    2. 'o' → logprob: -4.883510589599609
    3. 'au' → logprob: -7.758510589599609
    4. 'u' → logprob: -8.63351058959961
    5. 'ous' → logprob: -10.25851058959961
    6. 't' → logprob: -10.25851058959961
    7. 's' → logprob: -10.50851058959961
    8. 'oi' → logprob: -10.75851058959961
    9. 'out' → logprob: -11.25851058959961
    10. 'm' → logprob: -11.38351058959961

Token 82: '[X' (ID: 118621)
  Prédit: '[X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[X' → logprob: -0.07470282912254333
    2. '(X' → logprob: -2.699702739715576
    3. ')' → logprob: -6.199702739715576
    4. '[' → logprob: -7.324702739715576
    5. 'X' → logprob: -7.324702739715576
    6. '.values' → logprob: -8.574703216552734
    7. '):
' → logprob: -8.699703216552734
    8. '[s' → logprob: -8.824703216552734
    9. '):' → logprob: -9.074703216552734
    10. '.keys' → logprob: -9.324703216552734

Token 83: '],' (ID: 2155)
  Prédit: ']+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+' → logprob: -0.18771791458129883
    2. '],' → logprob: -2.187717914581299
    3. ']):' → logprob: -3.437717914581299
    4. ']' → logprob: -3.687717914581299
    5. '])' → logprob: -7.937717914581299
    6. ']:' → logprob: -8.06271743774414
    7. ']-' → logprob: -8.18771743774414
    8. '])+' → logprob: -8.56271743774414
    9. '+' → logprob: -8.68771743774414
    10. ']):
' → logprob: -9.31271743774414

Token 84: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.052743300795555115
    2. 'tai' → logprob: -3.8027431964874268
    3. ' N' → logprob: -4.052743434906006
    4. 'len' → logprob: -4.677743434906006
    5. ' tai' → logprob: -6.427743434906006
    6. ' len' → logprob: -8.052742958068848
    7. ' ' → logprob: -9.177742958068848
    8. '   ' → logprob: -9.802742958068848
    9. 'n' → logprob: -9.927742958068848
    10. '  ' → logprob: -10.177742958068848

Token 85: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0003076950670219958
    2. '):
' → logprob: -8.6253080368042
    3. ' ):' → logprob: -9.6253080368042
    4. ')' → logprob: -9.8753080368042
    5. ':' → logprob: -11.6253080368042
    6. '}:' → logprob: -14.3753080368042
    7. '):

' → logprob: -15.2503080368042
    8. ',' → logprob: -15.5003080368042
    9. '):
' → logprob: -15.7503080368042
    10. '():' → logprob: -15.8753080368042

Token 86: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16948018968105316
    2. '<|end|>' → logprob: -2.544480085372925
    3. ' if' → logprob: -3.294480085372925
    4. '    
' → logprob: -4.294480323791504
    5. '
' → logprob: -4.419480323791504
    6. ' 
' → logprob: -4.919480323791504
    7. ' ' → logprob: -6.044480323791504
    8. '  
' → logprob: -7.169480323791504
    9. '<|end|>' → logprob: -7.294480323791504
    10. '	if' → logprob: -7.419480323791504

Token 87: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25098079442977905
    2. ' if' → logprob: -1.6259808540344238
    3. 'if' → logprob: -4.500980854034424
    4. 'cnt' → logprob: -5.000980854034424
    5. '<|end|>' → logprob: -5.750980854034424
    6. ' cnt' → logprob: -6.125980854034424
    7. ' ' → logprob: -8.000980377197266
    8. '	cnt' → logprob: -8.125980377197266
    9. '    
' → logprob: -8.250980377197266
    10. '
' → logprob: -8.250980377197266

Token 88: ' on' (ID: 402)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.38646677136421204
    2. ' if' → logprob: -1.5114667415618896
    3. '   ' → logprob: -2.6364667415618896
    4. 'cnt' → logprob: -3.7614667415618896
    5. ' cnt' → logprob: -6.886466979980469
    6. '<|end|>' → logprob: -7.386466979980469
    7. '	if' → logprob: -7.761466979980469
    8. ' ' → logprob: -8.011466979980469
    9. '	cnt' → logprob: -8.011466979980469
    10. '
' → logprob: -8.011466979980469

Token 89: ' commence' (ID: 44755)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5735504627227783
    2. 'if' → logprob: -1.0735504627227783
    3. '   ' → logprob: -3.3235504627227783
    4. ':' → logprob: -4.073550224304199
    5. '+' → logprob: -4.698550224304199
    6. 's' → logprob: -5.073550224304199
    7. 'in' → logprob: -5.573550224304199
    8. ')' → logprob: -5.698550224304199
    9. '<|end|>' → logprob: -6.073550224304199
    10. ' +=' → logprob: -6.323550224304199

Token 90: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.5501489639282227
    2. '<|end|>' → logprob: -1.5501489639282227
    3. ' par' → logprob: -2.4251489639282227
    4. ' à' → logprob: -3.1751489639282227
    5. 'if' → logprob: -3.4251489639282227
    6. ' if' → logprob: -4.050148963928223
    7. 'à' → logprob: -4.925148963928223
    8. '<|end|>' → logprob: -5.300148963928223
    9. ' by' → logprob: -5.800148963928223
    10. '   ' → logprob: -6.050148963928223

Token 91: ' l' (ID: 305)
  Prédit: 'playlist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'playlist' → logprob: -0.8308237791061401
    2. ' if' → logprob: -1.8308237791061401
    3. 'if' → logprob: -1.9558237791061401
    4. 'cnt' → logprob: -2.0808238983154297
    5. ' playlist' → logprob: -2.5808238983154297
    6. '   ' → logprob: -3.9558238983154297
    7. ' cnt' → logprob: -4.08082389831543
    8. ' k' → logprob: -4.83082389831543
    9. 'k' → logprob: -5.08082389831543
    10. ' ' → logprob: -6.08082389831543

Token 92: ''ind' (ID: 82245)
  Prédit: 'playlist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'playlist' → logprob: -0.6016186475753784
    2. 'a' → logprob: -1.4766186475753784
    3. 'e' → logprob: -2.101618766784668
    4. ''' → logprob: -4.226618766784668
    5. 'iste' → logprob: -4.226618766784668
    6. 'à' → logprob: -4.351618766784668
    7. 'range' → logprob: -4.726618766784668
    8. ' playlist' → logprob: -4.976618766784668
    9. 'index' → logprob: -5.476618766784668
    10. 'play' → logprob: -5.601618766784668

Token 93: 'ice' (ID: 603)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.015469823963940144
    2. 'ice' → logprob: -4.265470027923584
    3. 'e' → logprob: -7.015470027923584
    4. 'expl' → logprob: -8.890469551086426
    5. 'exe' → logprob: -9.390469551086426
    6. 'ce' → logprob: -10.515469551086426
    7. 'ic' → logprob: -10.515469551086426
    8. 'ixe' → logprob: -11.015469551086426
    9. ' ex' → logprob: -11.390469551086426
    10. 'ect' → logprob: -11.890469551086426

Token 94: ' trouvé' (ID: 60081)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8878780007362366
    2. '   ' → logprob: -1.0128779411315918
    3. 'if' → logprob: -2.137877941131592
    4. ':' → logprob: -2.637877941131592
    5. '  ' → logprob: -5.012877941131592
    6. ')' → logprob: -5.012877941131592
    7. ' ' → logprob: -5.637877941131592
    8. '):' → logprob: -5.762877941131592
    9. 's' → logprob: -6.762877941131592
    10. '[' → logprob: -6.762877941131592

Token 95: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3976891338825226
    2. ':' → logprob: -1.6476891040802002
    3. ' if' → logprob: -2.2726891040802
    4. ':
' → logprob: -5.147689342498779
    5. '+' → logprob: -5.397689342498779
    6. '<|end|>' → logprob: -5.397689342498779
    7. ')' → logprob: -5.522689342498779
    8. ' ' → logprob: -5.772689342498779
    9. ' :' → logprob: -6.522689342498779
    10. '):' → logprob: -6.647689342498779

Token 96: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38991260528564453
    2. ' if' → logprob: -1.3899126052856445
    3. ':' → logprob: -3.3899126052856445
    4. '<|end|>' → logprob: -3.8899126052856445
    5. 'if' → logprob: -5.2649126052856445
    6. ' ' → logprob: -5.3899126052856445
    7. ':
' → logprob: -5.6399126052856445
    8. '	if' → logprob: -6.0149126052856445
    9. '    
' → logprob: -7.2649126052856445
    10. '  ' → logprob: -7.5149126052856445

Token 97: ' cnt' (ID: 27340)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.780536949634552
    2. ' if' → logprob: -0.780536949634552
    3. '   ' → logprob: -2.6555368900299072
    4. 'cnt' (adapté à ' cnt') → logprob: -4.405537128448486
    5. ' cnt' → logprob: -7.280537128448486
    6. '	if' → logprob: -9.155536651611328
    7. '  ' → logprob: -9.405536651611328
    8. ' ' → logprob: -9.405536651611328
    9. '    
' → logprob: -9.780536651611328
    10. '	cnt' → logprob: -9.780536651611328

Token 98: '=' (ID: 28)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.029800361022353172
    2. ' +=' → logprob: -3.5298004150390625
    3. '+' → logprob: -10.154800415039062
    4. '=' → logprob: -12.279800415039062
    5. ']+=' → logprob: -12.404800415039062
    6. '+=(' → logprob: -13.529800415039062
    7. '>=' → logprob: -15.529800415039062
    8. '   ' → logprob: -16.029800415039062
    9. '+='' → logprob: -16.154800415039062
    10. '+="' → logprob: -16.154800415039062

Token 99: 'cnt' (ID: 33160)
  Prédit: 'cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.3173101842403412
    2. 'playlist' → logprob: -1.6923102140426636
    3. 'max' → logprob: -3.192310094833374
    4. ' cnt' → logprob: -3.817310094833374
    5. ' playlist' → logprob: -3.942310094833374
    6. ' max' → logprob: -5.817310333251953
    7. '(cnt' → logprob: -6.567310333251953
    8. '0' → logprob: -7.567310333251953
    9. '+' → logprob: -9.317310333251953
    10. ' ' → logprob: -9.567310333251953

Token 100: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10028322786092758
    2. ' +' → logprob: -2.350283145904541
    3. '+t' → logprob: -9.8502836227417
    4. 'playlist' → logprob: -11.9752836227417
    5. '+k' → logprob: -12.4752836227417
    6. '+=' → logprob: -12.9752836227417
    7. '+
' → logprob: -13.3502836227417
    8. '+c' → logprob: -13.8502836227417
    9. ' plus' → logprob: -13.9752836227417
    10. ' ' → logprob: -13.9752836227417

Token 101: 'playlist' (ID: 70742)
  Prédit: 'playlist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'playlist' → logprob: -0.0052398028783500195
    2. ' playlist' → logprob: -5.255239963531494
    3. 'play' → logprob: -12.630239486694336
    4. '   ' → logprob: -13.630239486694336
    5. ' ' → logprob: -14.380239486694336
    6. '  ' → logprob: -15.505239486694336
    7. 'int' → logprob: -15.880239486694336
    8. '1' → logprob: -15.880239486694336
    9. 'plist' → logprob: -16.505239486694336
    10. 'player' → logprob: -17.130239486694336

Token 102: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.0014674883568659425
    2. '[' → logprob: -6.751467704772949
    3. 'k' → logprob: -8.12646770477295
    4. '(k' → logprob: -14.37646770477295
    5. '{k' → logprob: -15.00146770477295
    6. ' [' → logprob: -15.25146770477295
    7. '[
' → logprob: -15.62646770477295
    8. ' k' → logprob: -16.001466751098633
    9. '[i' → logprob: -16.126466751098633
    10. '[c' → logprob: -17.001466751098633

Token 103: ']
' (ID: 1592)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.2703787088394165
    2. ')' → logprob: -2.020378589630127
    3. ']' → logprob: -2.270378589630127
    4. '[k' → logprob: -7.645378589630127
    5. ')]' → logprob: -8.145379066467285
    6. '[' → logprob: -9.770379066467285
    7. '])
' → logprob: -10.020379066467285
    8. ')
' → logprob: -10.145379066467285
    9. ')])' → logprob: -10.395379066467285
    10. ' )' → logprob: -11.020379066467285

Token 104: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00014942926645744592
    2. '   ' → logprob: -9.250149726867676
    3. ' print' → logprob: -10.625149726867676
    4. 'if' → logprob: -10.625149726867676
    5. '
' → logprob: -13.125149726867676
    6. '    
' → logprob: -14.375149726867676
    7. '#print' → logprob: -14.625149726867676
    8. '```' → logprob: -15.000149726867676
    9. ' if' → logprob: -15.625149726867676
    10. ')' → logprob: -15.750149726867676

Token 105: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.036209482699632645
    2. '   ' → logprob: -3.7862095832824707
    3. 'if' → logprob: -4.411209583282471
    4. ' if' → logprob: -7.661209583282471
    5. ' print' → logprob: -8.536209106445312
    6. ' ' → logprob: -10.786209106445312
    7. '    ' → logprob: -11.786209106445312
    8. '    
' → logprob: -11.786209106445312
    9. '<|end|>' → logprob: -12.036209106445312
    10. '  ' → logprob: -12.161209106445312

Token 106: ' print' (ID: 2123)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8013882040977478
    2. 'print' → logprob: -0.9263882040977478
    3. ' if' → logprob: -1.9263882637023926
    4. '   ' → logprob: -5.051388263702393
    5. ' print' → logprob: -5.801388263702393
    6. '#' → logprob: -9.926387786865234
    7. ' ' → logprob: -10.051387786865234
    8. '    ' → logprob: -10.301387786865234
    9. '#print' → logprob: -10.926387786865234
    10. '  ' → logprob: -11.301387786865234

Token 107: '('' (ID: 706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.768845796585083
    2. '()' → logprob: -1.268845796585083
    3. '(cnt' → logprob: -1.393845796585083
    4. '("' → logprob: -5.893845558166504
    5. '(f' → logprob: -6.893845558166504
    6. '(k' → logprob: -7.143845558166504
    7. '(t' → logprob: -7.268845558166504
    8. '("")' → logprob: -7.768845558166504
    9. '('' → logprob: -7.768845558166504
    10. '(count' → logprob: -7.893845558166504

Token 108: 'c' (ID: 66)
  Prédit: '(cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(cnt' → logprob: -0.24785466492176056
    2. '')' → logprob: -2.747854709625244
    3. '(k' → logprob: -2.872854709625244
    4. 'cnt' → logprob: -2.872854709625244
    5. '('' → logprob: -3.997854709625244
    6. '(',' → logprob: -4.997854709625244
    7. '',' → logprob: -5.247854709625244
    8. '(' → logprob: -5.247854709625244
    9. 'k' → logprob: -7.122854709625244
    10. ' ')' → logprob: -7.497854709625244

Token 109: 'umul' (ID: 34896)
  Prédit: 'nt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nt' → logprob: -0.7506899833679199
    2. 'omp' → logprob: -1.25068998336792
    3. 'ont' → logprob: -2.50068998336792
    4. 'pt' → logprob: -3.50068998336792
    5. 'ount' → logprob: -3.50068998336792
    6. 'on' → logprob: -4.25068998336792
    7. 'ounter' → logprob: -4.62568998336792
    8. 'om' → logprob: -4.87568998336792
    9. '')' → logprob: -4.87568998336792
    10. 'out' → logprob: -5.25068998336792

Token 110: ':',' (ID: 39112)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.36314693093299866
    2. '',' → logprob: -2.738147020339966
    3. ':' → logprob: -2.863147020339966
    4. ' =' → logprob: -3.363147020339966
    5. '=' → logprob: -3.488147020339966
    6. ' :' → logprob: -3.738147020339966
    7. ':',' → logprob: -3.738147020339966
    8. ' ')' → logprob: -4.613146781921387
    9. ' ',' → logprob: -4.863146781921387
    10. ')' → logprob: -4.863146781921387

Token 111: 'cnt' (ID: 33160)
  Prédit: 'cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.062382493168115616
    2. ' cnt' → logprob: -2.812382459640503
    3. 'playlist' → logprob: -8.312382698059082
    4. ' playlist' → logprob: -10.187382698059082
    5. '	cnt' → logprob: -10.187382698059082
    6. ' ' → logprob: -11.062382698059082
    7. 'c' → logprob: -11.187382698059082
    8. '(cnt' → logprob: -11.437382698059082
    9. ')' → logprob: -11.687382698059082
    10. 'count' → logprob: -11.937382698059082

Token 112: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000500370399095118
    2. '')' → logprob: -8.125500679016113
    3. ' )' → logprob: -9.250500679016113
    4. ',' → logprob: -10.125500679016113
    5. ')
' → logprob: -10.625500679016113
    6. '   ' → logprob: -10.750500679016113
    7. 'if' → logprob: -12.625500679016113
    8. ' if' → logprob: -13.000500679016113
    9. '))' → logprob: -13.375500679016113
    10. ' ' → logprob: -13.375500679016113

Token 113: ' ' (ID: 220)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.05132487043738365
    2. '   ' → logprob: -3.3013248443603516
    3. '<|end|>' → logprob: -5.051324844360352
    4. 'if' → logprob: -5.176324844360352
    5. ' if' → logprob: -7.301324844360352
    6. ' print' → logprob: -8.551324844360352
    7. '
' → logprob: -9.676324844360352
    8. ' ' → logprob: -10.051324844360352
    9. '    ' → logprob: -10.301324844360352
    10. '```' → logprob: -10.426324844360352

Token 114: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4249787926673889
    2. 'if' → logprob: -1.4249787330627441
    3. '   ' → logprob: -2.424978733062744
    4. ' if' → logprob: -4.174978733062744
    5. ' ' → logprob: -7.549978733062744
    6. ' print' → logprob: -7.674978733062744
    7. '<|end|>' → logprob: -8.299979209899902
    8. '    
' → logprob: -9.174979209899902
    9. '  ' → logprob: -9.299979209899902
    10. '	if' → logprob: -9.549979209899902

Token 115: ' debug' (ID: 15199)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8767697215080261
    2. ' if' → logprob: -1.126769781112671
    3. 'print' → logprob: -1.376769781112671
    4. ' print' → logprob: -5.126769542694092
    5. '   ' → logprob: -6.751769542694092
    6. '    ' → logprob: -9.37677001953125
    7. '<|end|>' → logprob: -9.87677001953125
    8. ' ' → logprob: -10.12677001953125
    9. '	if' → logprob: -10.25177001953125
    10. '#' → logprob: -11.50177001953125

Token 116: ' inutile' (ID: 157748)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.07500234246253967
    2. '   ' → logprob: -3.075002431869507
    3. 'if' → logprob: -3.825002431869507
    4. '<|end|>' → logprob: -5.950002193450928
    5. ' if' → logprob: -6.700002193450928
    6. ' print' → logprob: -8.700002670288086
    7. ' ' → logprob: -9.950002670288086
    8. '    ' → logprob: -10.200002670288086
    9. '```' → logprob: -10.450002670288086
    10. '  ' → logprob: -10.700002670288086

Token 117: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.07275005429983139
    2. '   ' → logprob: -3.4477500915527344
    3. 'if' → logprob: -3.9477500915527344
    4. '<|end|>' → logprob: -4.572750091552734
    5. ' if' → logprob: -5.072750091552734
    6. '
' → logprob: -7.072750091552734
    7. ' print' → logprob: -7.447750091552734
    8. '    
' → logprob: -8.197750091552734
    9. ' ' → logprob: -8.822750091552734
    10. '    ' → logprob: -9.072750091552734

Token 118: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0022875219583511353
    2. 'if' → logprob: -6.6272873878479
    3. '   ' → logprob: -7.1272873878479
    4. ' print' → logprob: -9.002287864685059
    5. ' if' → logprob: -10.752287864685059
    6. '<|end|>' → logprob: -13.002287864685059
    7. '```' → logprob: -13.127287864685059
    8. '    ' → logprob: -13.377287864685059
    9. '#print' → logprob: -13.377287864685059
    10. '    
' → logprob: -13.502287864685059

Token 119: ' -' (ID: 533)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.9623810658231378e-05
    2. ' print' → logprob: -10.875020027160645
    3. 'pr' → logprob: -15.375020027160645
    4. '#print' → logprob: -15.875020027160645
    5. '```' → logprob: -16.500019073486328
    6. '#' → logprob: -16.875019073486328
    7. ')' → logprob: -17.000019073486328
    8. 'prin' → logprob: -17.000019073486328
    9. 'if' → logprob: -17.125019073486328
    10. 'prit' → logprob: -17.500019073486328

Token 120: ' on' (ID: 402)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0005307526444084942
    2. ')' → logprob: -7.87553071975708
    3. ' print' → logprob: -8.875531196594238
    4. '<|end|>' → logprob: -12.500531196594238
    5. '#' → logprob: -13.500531196594238
    6. '#print' → logprob: -14.000531196594238
    7. '```' → logprob: -14.125531196594238
    8. 'pr' → logprob: -14.250531196594238
    9. 'return' → logprob: -14.500531196594238
    10. 'if' → logprob: -14.750531196594238

Token 121: ' enl' (ID: 116494)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.019998686388134956
    2. ' print' → logprob: -4.144998550415039
    3. 'if' → logprob: -6.394998550415039
    4. 'pr' → logprob: -7.394998550415039
    5. ' if' → logprob: -7.519998550415039
    6. '#' → logprob: -7.894998550415039
    7. '#print' → logprob: -8.769998550415039
    8. 'r' → logprob: -9.394998550415039
    9. 's' → logprob: -9.894998550415039
    10. 'p' → logprob: -10.019998550415039

Token 122: 'ève' (ID: 41151)
  Prédit: 'ève'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ève' → logprob: -0.43597814440727234
    2. 'ev' → logprob: -1.9359781742095947
    3. 'e' → logprob: -2.8109781742095947
    4. 'ver' → logprob: -2.9359781742095947
    5. 'ever' → logprob: -3.1859781742095947
    6. 'eve' → logprob: -3.6859781742095947
    7. 'ez' → logprob: -4.560977935791016
    8. 'ace' → logprob: -5.310977935791016
    9. 'èves' → logprob: -6.310977935791016
    10. 'er' → logprob: -6.310977935791016

Token 123: ' le' (ID: 505)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.3794976770877838
    2. ' cnt' → logprob: -1.2544976472854614
    3. 'playlist' → logprob: -3.879497766494751
    4. ' playlist' → logprob: -5.254497528076172
    5. 'tai' → logprob: -6.379497528076172
    6. 't' → logprob: -7.129497528076172
    7. '(cnt' → logprob: -7.754497528076172
    8. '[cnt' → logprob: -8.004497528076172
    9. ' tai' → logprob: -8.504497528076172
    10. '1' → logprob: -8.504497528076172

Token 124: ' premier' (ID: 15506)
  Prédit: 'playlist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'playlist' → logprob: -0.5341892838478088
    2. 'cnt' → logprob: -1.534189224243164
    3. ' playlist' → logprob: -2.034189224243164
    4. ' cnt' → logprob: -3.159189224243164
    5. 'prem' → logprob: -4.409189224243164
    6. '1' → logprob: -6.159189224243164
    7. ' premier' → logprob: -6.159189224243164
    8. 'tai' → logprob: -6.784189224243164
    9. ' dernier' → logprob: -7.284189224243164
    10. 'dern' → logprob: -7.284189224243164

Token 125: ' morceau' (ID: 160026)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.016816172748804092
    2. 'playlist' → logprob: -4.641816139221191
    3. 'print' → logprob: -5.641816139221191
    4. ' cnt' → logprob: -6.266816139221191
    5. 't' → logprob: -7.266816139221191
    6. 'token' → logprob: -8.641816139221191
    7. 'c' → logprob: -9.141816139221191
    8. '[cnt' → logprob: -9.141816139221191
    9. ' playlist' → logprob: -9.516816139221191
    10. '(cnt' → logprob: -9.891816139221191

Token 126: ' finalement' (ID: 77979)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.021012088283896446
    2. 'print' → logprob: -3.8960120677948
    3. ' cnt' → logprob: -8.021012306213379
    4. 'playlist' → logprob: -10.271012306213379
    5. '-' → logprob: -10.396012306213379
    6. '[cnt' → logprob: -11.021012306213379
    7. '
' → logprob: -11.396012306213379
    8. ' print' → logprob: -11.771012306213379
    9. '   ' → logprob: -12.146012306213379
    10. '-c' → logprob: -12.521012306213379

Token 127: '
' (ID: 198)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.05343480035662651
    2. 'print' → logprob: -3.0534348487854004
    3. '
' → logprob: -5.5534348487854
    4. '-' → logprob: -7.9284348487854
    5. ' cnt' → logprob: -8.053434371948242
    6. '-
' → logprob: -9.178434371948242
    7. '-c' → logprob: -10.178434371948242
    8. '[cnt' → logprob: -10.303434371948242
    9. ' print' → logprob: -11.178434371948242
    10. '\n' → logprob: -11.553434371948242

Token 128: 'print' (ID: 1598)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.006188414059579372
    2. '
' → logprob: -5.75618839263916
    3. ' cnt' → logprob: -6.25618839263916
    4. '\n' → logprob: -7.50618839263916
    5. '[cnt' → logprob: -8.38118839263916
    6. 'print' → logprob: -8.88118839263916
    7. '```' → logprob: -9.88118839263916
    8. '	cnt' → logprob: -10.63118839263916
    9. '<|end|>' → logprob: -10.63118839263916
    10. '(cnt' → logprob: -10.75618839263916

Token 129: '(cnt' (ID: 102125)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3183552324771881
    2. '(cnt' → logprob: -1.3183552026748657
    3. '('' → logprob: -5.568355083465576
    4. ' (' → logprob: -7.193355083465576
    5. '(c' → logprob: -8.818355560302734
    6. '(f' → logprob: -9.568355560302734
    7. '("' → logprob: -9.568355560302734
    8. '()' → logprob: -10.068355560302734
    9. '((' → logprob: -10.193355560302734
    10. '("("' → logprob: -10.318355560302734

Token 130: '-play' (ID: 48299)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.47779056429862976
    2. ' -' → logprob: -0.9777905941009521
    3. ')' → logprob: -5.852790355682373
    4. '-t' → logprob: -7.477790355682373
    5. '-)' → logprob: -8.727790832519531
    6. ' )' → logprob: -10.352790832519531
    7. '-c' → logprob: -11.727790832519531
    8. '-end' → logprob: -11.852790832519531
    9. '-k' → logprob: -11.852790832519531
    10. '-ex' → logprob: -11.852790832519531

Token 131: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -3.1424973713001236e-05
    2. 'ist' → logprob: -10.625031471252441
    3. 'alist' → logprob: -12.500031471252441
    4. 'ay' → logprob: -12.875031471252441
    5. 'lay' → logprob: -15.125031471252441
    6. 'y' → logprob: -15.500031471252441
    7. 'yst' → logprob: -15.625031471252441
    8. 'lst' → logprob: -17.625030517578125
    9. '1' → logprob: -18.250030517578125
    10. '_' → logprob: -18.500030517578125

Token 132: '[t' (ID: 32184)
  Prédit: '[t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[t' → logprob: -2.7252845029579476e-05
    2. '[' → logprob: -10.875027656555176
    3. 'tai' → logprob: -12.625027656555176
    4. 't' → logprob: -13.000027656555176
    5. ' [' → logprob: -13.750027656555176
    6. '[k' → logprob: -14.250027656555176
    7. '[i' → logprob: -15.250027656555176
    8. '[T' → logprob: -15.875027656555176
    9. '	t' → logprob: -16.12502670288086
    10. ' ' → logprob: -16.12502670288086

Token 133: 'ai' (ID: 1361)
  Prédit: 'ai'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ai' → logprob: -7.052377623040229e-05
    2. 'au' → logprob: -10.250070571899414
    3. 'tai' → logprob: -11.250070571899414
    4. 'i' → logprob: -11.625070571899414
    5. 'oi' → logprob: -11.750070571899414
    6. 'a' → logprob: -12.500070571899414
    7. '[' → logprob: -14.875070571899414
    8. 'ail' → logprob: -15.250070571899414
    9. ' tai' → logprob: -15.625070571899414
    10. '[i' → logprob: -16.000070571899414

Token 134: 'ou' (ID: 283)
  Prédit: 'ou'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ou' → logprob: -1.0564331205387134e-05
    2. 'o' → logprob: -11.62501049041748
    3. 'au' → logprob: -13.50001049041748
    4. 'oi' → logprob: -16.250011444091797
    5. '[' → logprob: -18.000011444091797
    6. 'oui' → logprob: -18.125011444091797
    7. 'oueur' → logprob: -18.375011444091797
    8. 'оу' → logprob: -18.500011444091797
    9. 'tai' → logprob: -18.750011444091797
    10. 'ouer' → logprob: -19.125011444091797

Token 135: '[X' (ID: 118621)
  Prédit: '[X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[X' → logprob: -1.1160349458805285e-05
    2. 'X' → logprob: -11.500011444091797
    3. '[' → logprob: -14.625011444091797
    4. '(X' → logprob: -15.000011444091797
    5. '[
' → logprob: -16.000011444091797
    6. '[x' → logprob: -16.750011444091797
    7. ' [' → logprob: -17.000011444091797
    8. '	X' → logprob: -18.500011444091797
    9. '][' → logprob: -19.000011444091797
    10. '<X' → logprob: -19.000011444091797

Token 136: ']])' (ID: 64959)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0014601160073652864
    2. ']])' → logprob: -7.376460075378418
    3. ']' → logprob: -7.501460075378418
    4. ')])' → logprob: -8.626460075378418
    5. ']))' → logprob: -10.501460075378418
    6. ' ])' → logprob: -11.001460075378418
    7. ')' → logprob: -11.501460075378418
    8. '])]' → logprob: -11.501460075378418
    9. ''])' → logprob: -11.876460075378418
    10. '[' → logprob: -11.876460075378418


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 134
Tokens correctement prédits (1ère position, stricte): 32
Tokens correctement prédits (1ère position, avec adaptation): 34
Tokens correctement prédits (top 10): 76
Précision stricte (1ère position): 23.88%
Précision adaptée (1ère position): 25.37%
Précision (top 10): 56.72%
================================================================================
