================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:09:16
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Ok, je vais essayer d'écrire ça comme je le ferais un dimanche soir

a, b, c, d = map(int, input().split())  # lecture un peu bourrine, mais ça fait le taf

# calcul des déplacements (flemme de nommer les variables mieux)
dx = c - a
dy = d - b

# on bidouille un peu les coordonnées
x1 = c - dy
y1 = d + dx
x2 = a - dy  # Là je crois que ça marche mais bon, faudrait vérifier...
y2 = b + dx

print(x1, y1, x2, y2)  # On affiche tout, normalement c'est bon ?
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Ok' (ID: 13927)
  → Token d'amorce (pas de prédiction)

Token 2: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 3: ' je' (ID: 1264)
  Prédit: ' let's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' let's' → logprob: -0.35529279708862305
    2. ' sure' → logprob: -2.605292797088623
    3. ' let' → logprob: -2.980292797088623
    4. ' so' → logprob: -3.605292797088623
    5. ' lets' → logprob: -3.730292797088623
    6. ' ' → logprob: -3.730292797088623
    7. ' what' → logprob: -4.230292797088623
    8. ' now' → logprob: -4.855292797088623
    9. ' how' → logprob: -4.855292797088623
    10. ' I' → logprob: -4.980292797088623

Token 4: ' vais' (ID: 42975)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8887077569961548
    2. ' vais' → logprob: -1.8887077569961548
    3. ' veux' → logprob: -2.5137076377868652
    4. '  ' → logprob: -2.5137076377868652
    5. '_' → logprob: -2.8887076377868652
    6. ' suis' → logprob: -3.2637076377868652
    7. ' v' → logprob: -3.6387076377868652
    8. ' n' → logprob: -3.7637076377868652
    9. 'n' → logprob: -3.7637076377868652
    10. ' continue' → logprob: -4.263707637786865

Token 5: ' essayer' (ID: 92713)
  Prédit: ' continuer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continuer' → logprob: -0.9731733798980713
    2. 'contin' → logprob: -1.3481733798980713
    3. 'faire' → logprob: -2.8481733798980713
    4. '```' → logprob: -3.2231733798980713
    5. ' faire' → logprob: -3.3481733798980713
    6. ' créer' → logprob: -3.3481733798980713
    7. ' ' → logprob: -3.7231733798980713
    8. 'vous' → logprob: -3.8481733798980713
    9. 'mettre' → logprob: -4.348173141479492
    10. ' écrire' → logprob: -4.473173141479492

Token 6: ' d' (ID: 272)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.5896742343902588
    2. '\' → logprob: -1.5896742343902588
    3. '!' → logprob: -1.9646742343902588
    4. '\n' → logprob: -1.9646742343902588
    5. '.' → logprob: -2.339674234390259
    6. ':' → logprob: -2.964674234390259
    7. ' ' → logprob: -2.964674234390259
    8. '
' → logprob: -3.214674234390259
    9. ',' → logprob: -3.589674234390259
    10. '  
' → logprob: -4.33967399597168

Token 7: ''é' (ID: 12728)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.3803060054779053
    2. 'e' → logprob: -1.5053060054779053
    3. 'a' → logprob: -2.8803060054779053
    4. '_' → logprob: -3.8803060054779053
    5. ''é' → logprob: -5.755306243896484
    6. ''aller' → logprob: -6.005306243896484
    7. ''utiliser' → logprob: -6.630306243896484
    8. 'é' → logprob: -6.630306243896484
    9. ' ' → logprob: -6.880306243896484
    10. ' '' → logprob: -7.005306243896484

Token 8: 'crire' (ID: 62436)
  Prédit: 'crire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'crire' → logprob: -0.0011792739387601614
    2. 'cr' → logprob: -7.376179218292236
    3. 'c' → logprob: -8.626179695129395
    4. 'chapper' → logprob: -10.001179695129395
    5. 'cris' → logprob: -10.126179695129395
    6. 'cri' → logprob: -10.376179695129395
    7. 'v' → logprob: -10.376179695129395
    8. 'x' → logprob: -10.501179695129395
    9. 'valuer' → logprob: -10.751179695129395
    10. 'criv' → logprob: -10.751179695129395

Token 9: ' ça' (ID: 13590)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.005489164497703314
    2. ' :' → logprob: -6.130489349365234
    3. ':' → logprob: -6.755489349365234
    4. ' un' → logprob: -7.755489349365234
    5. ' ```' → logprob: -8.130489349365234
    6. ' #' → logprob: -8.380489349365234
    7. '  ' → logprob: -8.505489349365234
    8. '.' → logprob: -9.005489349365234
    9. '```' → logprob: -9.005489349365234
    10. ' a' → logprob: -9.505489349365234

Token 10: ' comme' (ID: 7971)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.528050422668457
    2. '\n' → logprob: -2.153050422668457
    3. ':' → logprob: -2.403050422668457
    4. ' ' → logprob: -3.028050422668457
    5. '\' → logprob: -3.278050422668457
    6. ' :' → logprob: -3.403050422668457
    7. '!' → logprob: -3.653050422668457
    8. '#' → logprob: -4.278050422668457
    9. ',' → logprob: -4.528050422668457
    10. '```' → logprob: -5.153050422668457

Token 11: ' je' (ID: 1264)
  Prédit: 'ça'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ça' → logprob: -0.5744171738624573
    2. ' ça' → logprob: -2.1994171142578125
    3. 'du' → logprob: -2.4494171142578125
    4. 'une' → logprob: -2.5744171142578125
    5. 'un' → logprob: -2.9494171142578125
    6. ' du' → logprob: -3.3244171142578125
    7. 'cela' → logprob: -4.6994171142578125
    8. ' ceci' → logprob: -5.0744171142578125
    9. 'python' → logprob: -5.1994171142578125
    10. ' prévu' → logprob: -5.3244171142578125

Token 12: ' le' (ID: 505)
  Prédit: ' peux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' peux' → logprob: -0.8951682448387146
    2. 'pe' → logprob: -1.7701683044433594
    3. 'veux' → logprob: -2.2701683044433594
    4. 'f' → logprob: -2.2701683044433594
    5. 'le' → logprob: -3.2701683044433594
    6. ' fer' → logprob: -3.3951683044433594
    7. ' veux' → logprob: -4.020168304443359
    8. 'vais' → logprob: -4.020168304443359
    9. ' fais' → logprob: -4.145168304443359
    10. ' le' → logprob: -4.395168304443359

Token 13: ' fer' (ID: 8510)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.2024502754211426
    2. 'pe' → logprob: -1.3274502754211426
    3. 'veux' → logprob: -1.4524502754211426
    4. 'fer' → logprob: -2.9524502754211426
    5. 'vou' → logprob: -3.2024502754211426
    6. 'f' → logprob: -3.2024502754211426
    7. 'vo' → logprob: -3.9524502754211426
    8. 'voud' → logprob: -4.202450275421143
    9. ' peux' → logprob: -5.077450275421143
    10. 'sou' → logprob: -5.327450275421143

Token 14: 'ais' (ID: 1873)
  Prédit: 'ai'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ai' → logprob: -1.203348994255066
    2. 's' → logprob: -1.328348994255066
    3. 'a' → logprob: -1.703348994255066
    4. 'ais' → logprob: -2.2033491134643555
    5. 'r' → logprob: -3.0783491134643555
    6. 'd' → logprob: -4.0783491134643555
    7. '```' → logprob: -4.0783491134643555
    8. 'rais' → logprob: -4.2033491134643555
    9. 'e' → logprob: -4.3283491134643555
    10. 'rai' → logprob: -4.4533491134643555

Token 15: ' un' (ID: 537)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.47707951068878174
    2. ':' → logprob: -1.6020795106887817
    3. ' :' → logprob: -2.727079391479492
    4. ',' → logprob: -3.227079391479492
    5. ' ' → logprob: -4.102079391479492
    6. '#' → logprob: -4.352079391479492
    7. '\' → logprob: -4.352079391479492
    8. '\n' → logprob: -4.727079391479492
    9. '```' → logprob: -5.352079391479492
    10. '`' → logprob: -5.477079391479492

Token 16: ' dimanche' (ID: 56702)
  Prédit: 'pe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.9880793690681458
    2. ' peu' → logprob: -1.488079309463501
    3. '#' → logprob: -2.238079309463501
    4. ' commentaire' → logprob: -2.738079309463501
    5. 'e' → logprob: -2.988079309463501
    6. '```' → logprob: -3.488079309463501
    7. ' #' → logprob: -4.11307954788208
    8. 'fonction' → logprob: -4.11307954788208
    9. ' code' → logprob: -4.23807954788208
    10. ' script' → logprob: -4.23807954788208

Token 17: ' soir' (ID: 29623)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2483920007944107
    2. ',' → logprob: -1.7483919858932495
    3. ' :' → logprob: -4.748392105102539
    4. ' .' → logprob: -4.748392105102539
    5. ':' → logprob: -4.998392105102539
    6. '```' → logprob: -5.498392105102539
    7. ' ' → logprob: -5.623392105102539
    8. ' ,' → logprob: -5.748392105102539
    9. '...' → logprob: -5.998392105102539
    10. '#' → logprob: -6.123392105102539

Token 18: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3420678973197937
    2. ',' → logprob: -1.5920679569244385
    3. ' :' → logprob: -3.5920679569244385
    4. ':' → logprob: -4.092067718505859
    5. '```' → logprob: -4.342067718505859
    6. ' ' → logprob: -4.717067718505859
    7. ' .' → logprob: -5.592067718505859
    8. '#' → logprob: -5.717067718505859
    9. ' ,' → logprob: -5.717067718505859
    10. '...' → logprob: -5.842067718505859

Token 19: 'a' (ID: 64)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.34052935242652893
    2. ',' → logprob: -2.215529441833496
    3. ':' → logprob: -2.840529441833496
    4. '```' → logprob: -2.965529441833496
    5. '#' → logprob: -3.590529441833496
    6. ' :' → logprob: -4.090529441833496
    7. '`' → logprob: -5.215529441833496
    8. '\' → logprob: -5.465529441833496
    9. ' ' → logprob: -5.715529441833496
    10. '...' → logprob: -6.340529441833496

Token 20: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3026733696460724
    2. ' =' → logprob: -2.17767333984375
    3. ' ' → logprob: -3.05267333984375
    4. 'u' → logprob: -3.92767333984375
    5. 'm' → logprob: -4.05267333984375
    6. 'n' → logprob: -4.42767333984375
    7. '_' → logprob: -4.80267333984375
    8. 'd' → logprob: -4.92767333984375
    9. 'l' → logprob: -5.42767333984375
    10. 'r' → logprob: -5.42767333984375

Token 21: ' b' (ID: 287)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06836453825235367
    2. ' b' → logprob: -3.1933646202087402
    3. 'b' → logprob: -3.6933646202087402
    4. ' =' → logprob: -9.943364143371582
    5. 'space' → logprob: -10.568364143371582
    6. '_' → logprob: -10.818364143371582
    7. '  ' → logprob: -11.068364143371582
    8. ' ,' → logprob: -11.068364143371582
    9. '_b' → logprob: -11.568364143371582
    10. ',' → logprob: -13.068364143371582

Token 22: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008931386284530163
    2. ' ' → logprob: -5.5089311599731445
    3. ',' → logprob: -5.8839311599731445
    4. '=' → logprob: -6.2589311599731445
    5. ' ,' → logprob: -9.258931159973145
    6. ')' → logprob: -11.133931159973145
    7. '<|end|>' → logprob: -11.133931159973145
    8. '.' → logprob: -12.008931159973145
    9. ' +=' → logprob: -12.508931159973145
    10. ' =)' → logprob: -13.383931159973145

Token 23: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.2109462171792984
    2. ' =' → logprob: -1.7109462022781372
    3. ' ' → logprob: -5.335946083068848
    4. ',' → logprob: -6.210946083068848
    5. 'c' → logprob: -6.585946083068848
    6. '=' → logprob: -6.710946083068848
    7. ' ,' → logprob: -11.210946083068848
    8. ',c' → logprob: -11.460946083068848
    9. ' ' → logprob: -11.835946083068848
    10. '  ' → logprob: -11.960946083068848

Token 24: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00982869602739811
    2. '=' → logprob: -4.634828567504883
    3. ',' → logprob: -9.634828567504883
    4. ' ' → logprob: -12.259828567504883
    5. '.' → logprob: -14.634828567504883
    6. ')' → logprob: -14.759828567504883
    7. ' =
' → logprob: -15.259828567504883
    8. ' ' → logprob: -15.384828567504883
    9. '<|end|>' → logprob: -15.509828567504883
    10. ' ,' → logprob: -15.634828567504883

Token 25: ' d' (ID: 272)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00136988062877208
    2. ' ' → logprob: -7.251369953155518
    3. ' d' → logprob: -8.25136947631836
    4. '=' → logprob: -8.87636947631836
    5. 'd' → logprob: -9.00136947631836
    6. ',' → logprob: -9.00136947631836
    7. ' ,' → logprob: -12.00136947631836
    8. ' =)' → logprob: -13.37636947631836
    9. '  ' → logprob: -13.62636947631836
    10. ',d' → logprob: -14.12636947631836

Token 26: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0017562180291861296
    2. ',' → logprob: -7.001756191253662
    3. '=' → logprob: -7.126756191253662
    4. ' ' → logprob: -11.12675666809082
    5. ' ,' → logprob: -11.87675666809082
    6. ',e' → logprob: -12.37675666809082
    7. ' =
' → logprob: -12.62675666809082
    8. 'e' → logprob: -12.75175666809082
    9. 's' → logprob: -13.25175666809082
    10. ')' → logprob: -13.37675666809082

Token 27: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03492294251918793
    2. '1' → logprob: -4.034923076629639
    3. '0' → logprob: -4.534923076629639
    4. ' [' → logprob: -5.784923076629639
    5. ' None' → logprob: -6.784923076629639
    6. ' (' → logprob: -7.784923076629639
    7. '[' → logprob: -8.15992259979248
    8. '5' → logprob: -8.53492259979248
    9. ' input' → logprob: -8.53492259979248
    10. ' map' → logprob: -8.53492259979248

Token 28: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.3578076958656311
    2. '(' → logprob: -1.2328076362609863
    3. '(lambda' → logprob: -4.857807636260986
    4. '(str' → logprob: -6.607807636260986
    5. '(
' → logprob: -9.857808113098145
    6. '(list' → logprob: -9.982808113098145
    7. 'int' → logprob: -10.107808113098145
    8. '(input' → logprob: -11.107808113098145
    9. '(eval' → logprob: -11.357808113098145
    10. '<int' → logprob: -11.857808113098145

Token 29: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.03797905892133713
    2. '(' → logprob: -3.5379791259765625
    3. ')' → logprob: -4.9129791259765625
    4. '<|end|>' → logprob: -7.6629791259765625
    5. 'input' → logprob: -8.662979125976562
    6. ')(' → logprob: -10.287979125976562
    7. '=input' → logprob: -11.162979125976562
    8. '('' → logprob: -11.287979125976562
    9. '[input' → logprob: -11.287979125976562
    10. '<|end|>' → logprob: -11.412979125976562

Token 30: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.05523722991347313
    2. 'input' → logprob: -2.930237293243408
    3. ')' → logprob: -8.30523681640625
    4. ' )' → logprob: -9.30523681640625
    5. '(input' → logprob: -12.18023681640625
    6. '	input' → logprob: -12.43023681640625
    7. ' ' → logprob: -12.80523681640625
    8. '=input' → logprob: -13.05523681640625
    9. ',input' → logprob: -14.05523681640625
    10. '<input' → logprob: -14.55523681640625

Token 31: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6293553709983826
    2. '())' → logprob: -0.8793553709983826
    3. '().' → logprob: -3.3793554306030273
    4. '(' → logprob: -5.004355430603027
    5. '());' → logprob: -5.754355430603027
    6. ')' → logprob: -6.379355430603027
    7. '()))' → logprob: -6.504355430603027
    8. '(()' → logprob: -6.879355430603027
    9. '()),' → logprob: -6.879355430603027
    10. '();)' → logprob: -7.629355430603027

Token 32: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0001931696751853451
    2. 'strip' → logprob: -8.62519359588623
    3. ' split' → logprob: -11.50019359588623
    4. 'rstrip' → logprob: -12.87519359588623
    5. 'spl' → logprob: -14.50019359588623
    6. 's' → logprob: -15.62519359588623
    7. '(split' → logprob: -15.87519359588623
    8. ')' → logprob: -17.250192642211914
    9. 'replace' → logprob: -17.750192642211914
    10. ' ' → logprob: -18.375192642211914

Token 33: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.060490984469652176
    2. ')' → logprob: -3.1854910850524902
    3. '()))' → logprob: -4.68549108505249
    4. '()' → logprob: -5.18549108505249
    5. '))' → logprob: -6.06049108505249
    6. '(' → logprob: -9.560490608215332
    7. '('' → logprob: -9.810490608215332
    8. ' ())' → logprob: -11.310490608215332
    9. '())
' → logprob: -11.935490608215332
    10. '(','' → logprob: -12.310490608215332

Token 34: ' ' (ID: 220)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3355881869792938
    2. '<|end|>' → logprob: -1.8355882167816162
    3. ':' → logprob: -2.960588216781616
    4. '
' → logprob: -3.835588216781616
    5. ',' → logprob: -4.210587978363037
    6. '.' → logprob: -4.710587978363037
    7. '#' → logprob: -4.960587978363037
    8. '<|end|>' → logprob: -5.835587978363037
    9. 'if' → logprob: -6.210587978363037
    10. '  
' → logprob: -6.585587978363037

Token 35: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3509279489517212
    2. '<|end|>' → logprob: -1.3509279489517212
    3. '.' → logprob: -4.725927829742432
    4. '#' → logprob: -4.850927829742432
    5. ',' → logprob: -5.225927829742432
    6. '<|end|>' → logprob: -6.100927829742432
    7. ':' → logprob: -6.350927829742432
    8. ' ' → logprob: -6.350927829742432
    9. '
' → logprob: -6.475927829742432
    10. ';' → logprob: -6.600927829742432

Token 36: ' lecture' (ID: 31993)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3885960280895233
    2. ' #' → logprob: -2.0135960578918457
    3. ' a' → logprob: -2.5135960578918457
    4. '#' → logprob: -3.3885960578918457
    5. 'a' → logprob: -3.3885960578918457
    6. 'def' → logprob: -5.388596057891846
    7. ' Je' → logprob: -6.201096057891846
    8. 's' → logprob: -6.326096057891846
    9. ' sum' → logprob: -6.638596057891846
    10. ' la' → logprob: -6.638596057891846

Token 37: ' un' (ID: 537)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.017986157909035683
    2. ')' → logprob: -5.017986297607422
    3. '<|end|>' → logprob: -5.017986297607422
    4. 'a' → logprob: -6.892986297607422
    5. '<|end|>' → logprob: -6.892986297607422
    6. '(' → logprob: -7.142986297607422
    7. ',' → logprob: -7.517986297607422
    8. ' )' → logprob: -8.142986297607422
    9. 's' → logprob: -8.392986297607422
    10. ' des' → logprob: -9.017986297607422

Token 38: ' peu' (ID: 9235)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.016886144876480103
    2. ' e' → logprob: -4.516886234283447
    3. 'ique' → logprob: -5.266886234283447
    4. 'iquement' → logprob: -8.391885757446289
    5. ' seule' → logprob: -9.391885757446289
    6. ' seul' → logprob: -9.516885757446289
    7. '#' → logprob: -10.141885757446289
    8. '```' → logprob: -10.516885757446289
    9. ' a' → logprob: -10.641885757446289
    10. ' input' → logprob: -10.766885757446289

Token 39: ' bour' (ID: 63393)
  Prédit: ' optim'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' optim' → logprob: -0.7292137742042542
    2. ' rapide' → logprob: -1.9792137145996094
    3. 'optim' → logprob: -2.3542137145996094
    4. ' plus' → logprob: -2.6042137145996094
    5. 'br' → logprob: -3.3542137145996094
    6. ' brut' → logprob: -3.3542137145996094
    7. ' à' → logprob: -3.8542137145996094
    8. 'b' → logprob: -4.229213714599609
    9. ' brute' → logprob: -4.229213714599609
    10. ' br' → logprob: -4.854213714599609

Token 40: 'rine' (ID: 65670)
  Prédit: 'rée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rée' → logprob: -0.39551666378974915
    2. 'r' → logprob: -1.6455166339874268
    3. 'rine' → logprob: -2.3955166339874268
    4. 'rin' → logprob: -3.2705166339874268
    5. 'ré' → logprob: -6.270516872406006
    6. 're' → logprob: -6.770516872406006
    7. 'inne' → logprob: -7.770516872406006
    8. 'ree' → logprob: -8.145516395568848
    9. 'rés' → logprob: -8.770516395568848
    10. 'ée' → logprob: -8.770516395568848

Token 41: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 42: ' mais' (ID: 2899)
  Prédit: ' mais'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mais' → logprob: -0.04808464273810387
    2. ' but' → logprob: -3.6730847358703613
    3. ' ' → logprob: -5.423084735870361
    4. ' on' → logprob: -5.548084735870361
    5. 'mais' → logprob: -6.173084735870361
    6. ' a' → logprob: -6.423084735870361
    7. ' je' → logprob: -6.423084735870361
    8. ' et' → logprob: -7.048084735870361
    9. ' puis' → logprob: -7.048084735870361
    10. ' e' → logprob: -7.423084735870361

Token 43: ' ça' (ID: 13590)
  Prédit: 'ça'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ça' → logprob: -1.382928490638733
    2. ' efficace' → logprob: -1.757928490638733
    3. ' rapide' → logprob: -1.882928490638733
    4. ' ça' → logprob: -2.5079283714294434
    5. 'fonction' → logprob: -2.6329283714294434
    6. 'eff' → logprob: -2.7579283714294434
    7. 'simple' → logprob: -3.0079283714294434
    8. 'rap' → logprob: -3.2579283714294434
    9. 'c' → logprob: -3.5079283714294434
    10. ' pratique' → logprob: -4.257928371429443

Token 44: ' fait' (ID: 7473)
  Prédit: ' marche'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' marche' → logprob: -0.6608660221099854
    2. ' fonctionne' → logprob: -1.6608660221099854
    3. ' passe' → logprob: -1.9108660221099854
    4. 'fonction' → logprob: -2.9108660221099854
    5. ' ira' → logprob: -3.6608660221099854
    6. 'fait' → logprob: -4.160865783691406
    7. ' fait' → logprob: -4.660865783691406
    8. ' va' → logprob: -5.035865783691406
    9. ' devrait' → logprob: -5.035865783691406
    10. 'f' → logprob: -5.785865783691406

Token 45: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.2383420616388321
    2. 'l' → logprob: -1.613342046737671
    3. 'bien' → logprob: -5.23834228515625
    4. 'son' → logprob: -6.36334228515625
    5. 'a' → logprob: -6.73834228515625
    6. '```' → logprob: -6.98834228515625
    7. 'lé' → logprob: -8.11334228515625
    8. ' le' → logprob: -8.36334228515625
    9. 'tout' → logprob: -8.36334228515625
    10. 'fonction' → logprob: -8.36334228515625

Token 46: ' taf' (ID: 38625)
  Prédit: 'job'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'job' → logprob: -0.020424040034413338
    2. '```' → logprob: -5.145423889160156
    3. 't' → logprob: -5.270423889160156
    4. 'tr' → logprob: -5.895423889160156
    5. ' boulot' → logprob: -6.020423889160156
    6. ' job' → logprob: -6.520423889160156
    7. ' ' → logprob: -8.145423889160156
    8. '   ' → logprob: -8.270423889160156
    9. '_job' → logprob: -8.520423889160156
    10. 'trav' → logprob: -8.645423889160156

Token 47: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7970989346504211
    2. '<|end|>' → logprob: -2.1720988750457764
    3. ',' → logprob: -2.2970988750457764
    4. 'a' → logprob: -2.4220988750457764
    5. ' 
' → logprob: -2.9220988750457764
    6. '  
' → logprob: -3.2970988750457764
    7. ' ' → logprob: -3.6720988750457764
    8. ')' → logprob: -3.9220988750457764
    9. ' if' → logprob: -4.0470991134643555
    10. 'if' → logprob: -4.2970991134643555

Token 48: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.20202453434467316
    2. 'e' → logprob: -2.202024459838867
    3. 's' → logprob: -4.327024459838867
    4. ',' → logprob: -4.577024459838867
    5. '#' → logprob: -4.702024459838867
    6. 'x' → logprob: -4.827024459838867
    7. ' if' → logprob: -5.077024459838867
    8. 'a' → logprob: -5.202024459838867
    9. 'n' → logprob: -5.327024459838867
    10. '
' → logprob: -5.702024459838867

Token 49: ' calcul' (ID: 7559)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7392563223838806
    2. ' max' → logprob: -1.9892563819885254
    3. 'if' → logprob: -2.1142563819885254
    4. ' result' → logprob: -2.9892563819885254
    5. ' sum' → logprob: -3.1142563819885254
    6. 's' → logprob: -3.4892563819885254
    7. '#' → logprob: -3.8642563819885254
    8. ' total' → logprob: -3.9892563819885254
    9. ' #' → logprob: -4.614256381988525
    10. 'max' → logprob: -4.614256381988525

Token 50: ' des' (ID: 731)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9742465019226074
    2. 'e' → logprob: -1.5992465019226074
    3. 'max' → logprob: -2.2242465019226074
    4. 'a' → logprob: -2.5992465019226074
    5. 'result' → logprob: -2.8492465019226074
    6. 'x' → logprob: -3.2242465019226074
    7. 'sum' → logprob: -3.4742465019226074
    8. ' =' → logprob: -3.9742465019226074
    9. ' max' → logprob: -4.474246501922607
    10. 'total' → logprob: -4.599246501922607

Token 51: ' déplacements' (ID: 193957)
  Prédit: ' jours'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' jours' → logprob: -1.7614412307739258
    2. ' résultats' → logprob: -1.8864412307739258
    3. ' nombres' → logprob: -2.011441230773926
    4. ' max' → logprob: -2.261441230773926
    5. ' maximum' → logprob: -2.886441230773926
    6. ' distances' → logprob: -3.136441230773926
    7. ' scores' → logprob: -3.261441230773926
    8. ' temps' → logprob: -3.386441230773926
    9. ' coefficients' → logprob: -3.761441230773926
    10. ' facteurs' → logprob: -3.761441230773926

Token 52: ' (' (ID: 350)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.5828132033348083
    2. 'dist' → logprob: -2.332813262939453
    3. 'moves' → logprob: -2.332813262939453
    4. 'x' → logprob: -2.582813262939453
    5. ' dx' → logprob: -3.207813262939453
    6. 'delta' → logprob: -3.582813262939453
    7. 'steps' → logprob: -3.957813262939453
    8. 's' → logprob: -4.457813262939453
    9. 'distance' → logprob: -4.457813262939453
    10. 'diff' → logprob: -4.582813262939453

Token 53: 'f' (ID: 69)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2407144159078598
    2. ' )' → logprob: -2.4907143115997314
    3. ' abs' → logprob: -2.9907143115997314
    4. 'abs' → logprob: -3.2407143115997314
    5. 'a' → logprob: -3.7407143115997314
    6. 'd' → logprob: -5.9907145500183105
    7. ' a' → logprob: -6.1157145500183105
    8. ' d' → logprob: -6.3657145500183105
    9. 'diff' → logprob: -6.8657145500183105
    10. ' (' → logprob: -6.9907145500183105

Token 54: 'lemme' (ID: 142088)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'or' → logprob: -1.0258591175079346
    2. 'a' → logprob: -1.6508591175079346
    3. 'inal' → logprob: -2.1508591175079346
    4. 'rom' → logprob: -2.4008591175079346
    5. 'i' → logprob: -3.1508591175079346
    6. 'r' → logprob: -3.4008591175079346
    7. '=' → logprob: -3.6508591175079346
    8. 'orm' → logprob: -4.0258588790893555
    9. 'e' → logprob: -4.4008588790893555
    10. 'le' → logprob: -4.6508588790893555

Token 55: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31712374091148376
    2. ' )' → logprob: -1.3171237707138062
    3. ' ' → logprob: -6.817123889923096
    4. ',' → logprob: -7.067123889923096
    5. ' pour' → logprob: -7.817123889923096
    6. ' ' → logprob: -7.942123889923096
    7. ' de' → logprob: -8.192123413085938
    8. ' sur' → logprob: -8.192123413085938
    9. ' ,' → logprob: -8.692123413085938
    10. ' des' → logprob: -9.067123413085938

Token 56: ' nom' (ID: 8080)
  Prédit: ' coder'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' coder' → logprob: -0.37084054946899414
    2. 'coder' → logprob: -2.120840549468994
    3. 'faire' → logprob: -2.995840549468994
    4. ' faire' → logprob: -2.995840549468994
    5. ' comprendre' → logprob: -4.495840549468994
    6. 'com' → logprob: -4.995840549468994
    7. ' calcul' → logprob: -5.120840549468994
    8. 'r' → logprob: -5.120840549468994
    9. 'dé' → logprob: -5.245840549468994
    10. 'penser' → logprob: -5.620840549468994

Token 57: 'mer' (ID: 1159)
  Prédit: 'mer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mer' → logprob: -0.7862977385520935
    2. 'es' → logprob: -1.2862977981567383
    3. 'er' → logprob: -2.2862977981567383
    4. 'bres' → logprob: -2.5362977981567383
    5. 'br' → logprob: -3.1612977981567383
    6. 'mes' → logprob: -4.036297798156738
    7. 'mage' → logprob: -4.536297798156738
    8. 'm' → logprob: -5.036297798156738
    9. 'mages' → logprob: -5.161297798156738
    10. 'ber' → logprob: -6.286297798156738

Token 58: ' les' (ID: 1341)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.30816924571990967
    2. 'les' → logprob: -1.6831692457199097
    3. ' les' → logprob: -3.433169364929199
    4. ' )' → logprob: -3.433169364929199
    5. 'des' → logprob: -5.808169364929199
    6. ' ' → logprob: -6.183169364929199
    7. ' correctement' → logprob: -6.433169364929199
    8. 's' → logprob: -6.683169364929199
    9. 'tout' → logprob: -6.808169364929199
    10. ' variables' → logprob: -6.808169364929199

Token 59: ' variables' (ID: 13955)
  Prédit: 'variables'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'variables' → logprob: -0.3672817647457123
    2. ' variables' → logprob: -1.2422817945480347
    3. 'diff' → logprob: -5.367281913757324
    4. 'd' → logprob: -6.242281913757324
    5. 'dé' → logprob: -6.242281913757324
    6. ' ' → logprob: -6.617281913757324
    7. '_' → logprob: -7.117281913757324
    8. 'var' → logprob: -7.117281913757324
    9. ' déplacements' → logprob: -7.117281913757324
    10. 'variable' → logprob: -7.492281913757324

Token 60: ' mieux' (ID: 26345)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.5559199452400208
    2. ')' → logprob: -0.9309199452400208
    3. '_' → logprob: -4.430920124053955
    4. ' ' → logprob: -4.680920124053955
    5. 's' → logprob: -5.305920124053955
    6. '_)' → logprob: -6.430920124053955
    7. 'a' → logprob: -6.930920124053955
    8. ',' → logprob: -7.180920124053955
    9. ' ,' → logprob: -7.430920124053955
    10. ' ):' → logprob: -7.430920124053955

Token 61: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029892798513174057
    2. 's' → logprob: -3.904892683029175
    3. ' )' → logprob: -4.904892921447754
    4. ',' → logprob: -7.654892921447754
    5. 'a' → logprob: -7.779892921447754
    6. '):' → logprob: -8.404892921447754
    7. ')s' → logprob: -8.779892921447754
    8. 'e' → logprob: -9.154892921447754
    9. '...)' → logprob: -10.154892921447754
    10. 'es' → logprob: -10.154892921447754

Token 62: 'dx' (ID: 22100)
  Prédit: 'dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.5078228116035461
    2. 'x' → logprob: -1.2578227519989014
    3. 'delta' → logprob: -2.7578227519989014
    4. ' dx' → logprob: -3.7578227519989014
    5. 'de' → logprob: -5.3828229904174805
    6. 'a' → logprob: -5.5078229904174805
    7. 'dist' → logprob: -5.7578229904174805
    8. ' x' → logprob: -6.2578229904174805
    9. ' delta' → logprob: -6.3828229904174805
    10. 'u' → logprob: -6.6328229904174805

Token 63: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10389859229326248
    2. '1' → logprob: -2.728898525238037
    3. 'a' → logprob: -3.853898525238037
    4. ' ,' → logprob: -4.978898525238037
    5. 's' → logprob: -5.853898525238037
    6. '_,' → logprob: -7.228898525238037
    7. '_a' → logprob: -7.353898525238037
    8. '_' → logprob: -7.603898525238037
    9. ' =' → logprob: -8.728899002075195
    10. '=' → logprob: -9.103899002075195

Token 64: ' c' (ID: 274)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.5555778741836548
    2. ' abs' → logprob: -1.1805778741836548
    3. ' a' → logprob: -2.8055777549743652
    4. ' d' → logprob: -3.8055777549743652
    5. ' c' → logprob: -3.8055777549743652
    6. 'b' → logprob: -4.930577754974365
    7. 'abs' → logprob: -5.930577754974365
    8. 'a' → logprob: -6.180577754974365
    9. ' ' → logprob: -7.305577754974365
    10. 'd' → logprob: -7.680577754974365

Token 65: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.47461965680122375
    2. '-' → logprob: -0.9746196269989014
    3. '-a' → logprob: -8.09961986541748
    4. '-b' → logprob: -8.47461986541748
    5. ' ' → logprob: -11.09961986541748
    6. '-d' → logprob: -11.59961986541748
    7. 'a' → logprob: -13.09961986541748
    8. ' ' → logprob: -14.34961986541748
    9. ' a' → logprob: -14.47461986541748
    10. '-c' → logprob: -14.72461986541748

Token 66: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0011779663618654013
    2. ' a' → logprob: -6.751177787780762
    3. ' ' → logprob: -12.501177787780762
    4. 'b' → logprob: -12.751177787780762
    5. '	a' → logprob: -14.751177787780762
    6. ''a' → logprob: -15.626177787780762
    7. '   ' → logprob: -15.751177787780762
    8. '  ' → logprob: -16.001178741455078
    9. ')a' → logprob: -16.501178741455078
    10. 'e' → logprob: -16.626178741455078

Token 67: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.030193224549293518
    2. 'dy' → logprob: -4.905193328857422
    3. ' 
' → logprob: -4.905193328857422
    4. '<|end|>' → logprob: -5.280193328857422
    5. ' dy' → logprob: -5.780193328857422
    6. 'd' → logprob: -6.280193328857422
    7. '  
' → logprob: -6.655193328857422
    8. '
' → logprob: -6.905193328857422
    9. 'x' → logprob: -7.405193328857422
    10. 'dx' → logprob: -8.155193328857422

Token 68: 'dy' (ID: 7593)
  Prédit: ' dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dy' → logprob: -0.7943570017814636
    2. 'dy' → logprob: -1.4193570613861084
    3. '
' → logprob: -1.9193570613861084
    4. ' 
' → logprob: -2.7943570613861084
    5. '\' → logprob: -3.6693570613861084
    6. '  
' → logprob: -4.169356822967529
    7. ',' → logprob: -4.294356822967529
    8. ' ' → logprob: -4.419356822967529
    9. '\n' → logprob: -5.544356822967529
    10. '' → logprob: -5.544356822967529

Token 69: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029819343239068985
    2. '=' → logprob: -3.5298192501068115
    3. ' ' → logprob: -9.65481948852539
    4. '<|end|>' → logprob: -13.27981948852539
    5. ' =
' → logprob: -13.52981948852539
    6. 'd' → logprob: -13.90481948852539
    7. ' =)' → logprob: -16.27981948852539
    8. '_' → logprob: -16.27981948852539
    9. ')' → logprob: -16.40481948852539
    10. '.' → logprob: -16.65481948852539

Token 70: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.4825116991996765
    2. 'd' → logprob: -0.9825116991996765
    3. ' b' → logprob: -5.357511520385742
    4. 'b' → logprob: -5.607511520385742
    5. ' ' → logprob: -11.857511520385742
    6. ' (' → logprob: -12.232511520385742
    7. 's' → logprob: -13.607511520385742
    8. '(' → logprob: -13.607511520385742
    9. '(b' → logprob: -15.357511520385742
    10. '  ' → logprob: -15.357511520385742

Token 71: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.16029003262519836
    2. ' -' → logprob: -1.910290002822876
    3. ' ' → logprob: -9.785289764404297
    4. '-b' → logprob: -12.035289764404297
    5. 'b' → logprob: -13.535289764404297
    6. '_' → logprob: -14.535289764404297
    7. ' ' → logprob: -14.535289764404297
    8. ' b' → logprob: -15.035289764404297
    9. '  ' → logprob: -15.410289764404297
    10. '‌' → logprob: -16.160289764404297

Token 72: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0005530327325686812
    2. ' b' → logprob: -7.500553131103516
    3. '<|end|>' → logprob: -16.125553131103516
    4. '	b' → logprob: -16.875553131103516
    5. ' ' → logprob: -17.875553131103516
    6. '>b' → logprob: -20.000553131103516
    7. ')b' → logprob: -20.000553131103516
    8. '   ' → logprob: -20.125553131103516
    9. '_b' → logprob: -20.250553131103516
    10. '  ' → logprob: -21.375553131103516

Token 73: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 74: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1506972312927246
    2. '<|end|>' → logprob: -1.6506972312927246
    3. '
' → logprob: -2.4006972312927246
    4. '.' → logprob: -2.4006972312927246
    5. ',' → logprob: -3.0256972312927246
    6. '  
' → logprob: -3.1506972312927246
    7. '\n' → logprob: -3.2756972312927246
    8. 'print' → logprob: -3.7756972312927246
    9. ' 
' → logprob: -3.7756972312927246
    10. 'x' → logprob: -4.025697231292725

Token 75: ' on' (ID: 402)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7022476196289062
    2. 'if' → logprob: -1.7022476196289062
    3. ' if' → logprob: -2.0772476196289062
    4. ' print' → logprob: -2.4522476196289062
    5. '#' → logprob: -2.7022476196289062
    6. 'result' → logprob: -4.827247619628906
    7. 'x' → logprob: -4.827247619628906
    8. ' #' → logprob: -5.327247619628906
    9. ' result' → logprob: -5.827247619628906
    10. 'distance' → logprob: -6.077247619628906

Token 76: ' bid' (ID: 16023)
  Prédit: ' va'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' va' → logprob: -0.8445442318916321
    2. ' veut' → logprob: -1.5945441722869873
    3. ' calc' → logprob: -2.7195441722869873
    4. ' continue' → logprob: -2.7195441722869873
    5. '#' → logprob: -3.0945441722869873
    6. ' peut' → logprob: -3.0945441722869873
    7. ' regarde' → logprob: -4.094544410705566
    8. ' a' → logprob: -4.344544410705566
    9. ' prend' → logprob: -4.594544410705566
    10. ' print' → logprob: -4.844544410705566

Token 77: 'ouille' (ID: 170864)
  Prédit: 'ige'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ige' → logprob: -0.9947295188903809
    2. 'onne' → logprob: -1.1197295188903809
    3. 'o' → logprob: -2.869729518890381
    4. 'ouille' → logprob: -2.869729518890381
    5. 'e' → logprob: -3.869729518890381
    6. 'oit' → logprob: -3.994729518890381
    7. 'rige' → logprob: -4.369729518890381
    8. 'uge' → logprob: -4.369729518890381
    9. 'irection' → logprob: -4.494729518890381
    10. 'ge' → logprob: -4.619729518890381

Token 78: ' un' (ID: 537)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.9814543724060059
    2. ' dx' → logprob: -2.106454372406006
    3. ' if' → logprob: -2.231454372406006
    4. ' x' → logprob: -2.356454372406006
    5. 'dx' → logprob: -2.481454372406006
    6. ' ' → logprob: -2.481454372406006
    7. 'if' → logprob: -3.231454372406006
    8. '.' → logprob: -4.231454372406006
    9. 's' → logprob: -4.856454372406006
    10. ',' → logprob: -4.856454372406006

Token 79: ' peu' (ID: 9235)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.4096216559410095
    2. ' peu' → logprob: -1.1596217155456543
    3. 'pe' → logprob: -4.409621715545654
    4. ' e' → logprob: -5.159621715545654
    5. ' ' → logprob: -7.034621715545654
    6. ' peut' → logprob: -7.159621715545654
    7. ' =' → logprob: -8.034621238708496
    8. '=' → logprob: -8.534621238708496
    9. ' pe' → logprob: -8.659621238708496
    10. ' peux' → logprob: -8.659621238708496

Token 80: ' les' (ID: 1341)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.4136977791786194
    2. ' if' → logprob: -1.9136977195739746
    3. 'if' → logprob: -2.1636977195739746
    4. ',' → logprob: -3.9136977195739746
    5. ' x' → logprob: -3.9136977195739746
    6. ':' → logprob: -4.538697719573975
    7. '.' → logprob: -5.413697719573975
    8. ' ' → logprob: -5.538697719573975
    9. 'e' → logprob: -6.038697719573975
    10. 'dx' → logprob: -6.038697719573975

Token 81: ' coordonnées' (ID: 181895)
  Prédit: ' dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dx' → logprob: -1.0694659948349
    2. ' directions' → logprob: -1.8194659948349
    3. 'dx' → logprob: -2.1944661140441895
    4. ' angles' → logprob: -2.8194661140441895
    5. ' déplacements' → logprob: -3.1944661140441895
    6. 'x' → logprob: -3.3194661140441895
    7. ' cas' → logprob: -3.4444661140441895
    8. ' signes' → logprob: -3.5694661140441895
    9. 'sign' → logprob: -4.3194661140441895
    10. ' points' → logprob: -4.4444661140441895

Token 82: '
' (ID: 198)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.37973085045814514
    2. 'a' → logprob: -2.3797309398651123
    3. '.' → logprob: -3.0047309398651123
    4. ',' → logprob: -3.2547309398651123
    5. 'if' → logprob: -3.6297309398651123
    6. ' x' → logprob: -3.7547309398651123
    7. ' ' → logprob: -3.8797309398651123
    8. ' if' → logprob: -4.129730701446533
    9. 's' → logprob: -4.254730701446533
    10. ' ,' → logprob: -5.004730701446533

Token 83: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5318076610565186
    2. 'a' → logprob: -1.2818076610565186
    3. 'if' → logprob: -2.5318076610565186
    4. ' if' → logprob: -3.5318076610565186
    5. ' x' → logprob: -5.406807899475098
    6. 'dx' → logprob: -5.406807899475098
    7. ' a' → logprob: -5.531807899475098
    8. 'print' → logprob: -5.531807899475098
    9. 'new' → logprob: -5.906807899475098
    10. ' new' → logprob: -6.656807899475098

Token 84: '1' (ID: 16)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4534887671470642
    2. ',' → logprob: -1.078488826751709
    3. '1' → logprob: -4.703488826751709
    4. '_new' → logprob: -5.203488826751709
    5. ' ,' → logprob: -5.703488826751709
    6. '2' → logprob: -6.203488826751709
    7. '_' → logprob: -6.703488826751709
    8. ' +=' → logprob: -6.953488826751709
    9. '=' → logprob: -7.078488826751709
    10. 'new' → logprob: -7.703488826751709

Token 85: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6476680040359497
    2. ' =' → logprob: -0.8976680040359497
    3. ' +=' → logprob: -3.77266788482666
    4. ' ,' → logprob: -4.14766788482666
    5. '+' → logprob: -4.89766788482666
    6. '1' → logprob: -5.14766788482666
    7. '2' → logprob: -5.14766788482666
    8. ' +' → logprob: -5.27266788482666
    9. '=' → logprob: -5.64766788482666
    10. ' ' → logprob: -7.39766788482666

Token 86: ' c' (ID: 274)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.027801480144262314
    2. 'a' → logprob: -3.652801513671875
    3. ' ' → logprob: -7.527801513671875
    4. ' b' → logprob: -7.902801513671875
    5. ' dx' → logprob: -8.527801513671875
    6. '0' → logprob: -9.152801513671875
    7. ' c' → logprob: -9.652801513671875
    8. ' x' → logprob: -10.027801513671875
    9. ' -' → logprob: -10.715301513671875
    10. ' d' → logprob: -10.965301513671875

Token 87: ' -' (ID: 533)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4936840832233429
    2. '+' → logprob: -0.9936840534210205
    3. ' -' → logprob: -4.2436842918396
    4. '-' → logprob: -5.7436842918396
    5. '<|end|>' → logprob: -6.4936842918396
    6. ' ' → logprob: -8.618683815002441
    7. ',' → logprob: -9.743683815002441
    8. '+d' → logprob: -11.118683815002441
    9. '+y' → logprob: -11.243683815002441
    10. '+x' → logprob: -11.556183815002441

Token 88: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.5694928169250488
    2. 'dx' → logprob: -1.6944928169250488
    3. ' dy' → logprob: -1.8194928169250488
    4. '1' → logprob: -3.194492816925049
    5. ' dx' → logprob: -3.194492816925049
    6. ' ' → logprob: -6.319492816925049
    7. '2' → logprob: -6.319492816925049
    8. 'd' → logprob: -7.194492816925049
    9. '0' → logprob: -7.631992816925049
    10. '-' → logprob: -9.00699234008789

Token 89: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04406971484422684
    2. '<|end|>' → logprob: -3.294069766998291
    3. 'y' → logprob: -5.669069766998291
    4. '
' → logprob: -6.919069766998291
    5. 'x' → logprob: -7.044069766998291
    6. ' 
' → logprob: -8.794069290161133
    7. '  
' → logprob: -8.919069290161133
    8. ' y' → logprob: -9.294069290161133
    9. '<|end|>' → logprob: -9.294069290161133
    10. ' ' → logprob: -9.794069290161133

Token 90: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00022535098833031952
    2. ' y' → logprob: -9.375225067138672
    3. 'x' → logprob: -9.500225067138672
    4. '
' → logprob: -10.000225067138672
    5. '<|end|>' → logprob: -11.000225067138672
    6. ',y' → logprob: -14.375225067138672
    7. ';' → logprob: -14.375225067138672
    8. '
' → logprob: -14.375225067138672
    9. ';y' → logprob: -14.500225067138672
    10. ' ' → logprob: -15.250225067138672

Token 91: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.662937372922897e-05
    2. '=' → logprob: -10.375096321105957
    3. '<|end|>' → logprob: -10.500096321105957
    4. ' =' → logprob: -10.875096321105957
    5. ' ' → logprob: -11.375096321105957
    6. '2' → logprob: -12.625096321105957
    7. ',' → logprob: -13.625096321105957
    8. '_' → logprob: -14.625096321105957
    9. '   ' → logprob: -15.000096321105957
    10. '<|end|>' → logprob: -15.250096321105957

Token 92: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31326326727867126
    2. '=' → logprob: -1.3132632970809937
    3. ',' → logprob: -14.438262939453125
    4. ' ' → logprob: -14.688262939453125
    5. ')' → logprob: -15.813262939453125
    6. '<|end|>' → logprob: -16.063262939453125
    7. ' =
' → logprob: -16.563262939453125
    8. ' +=' → logprob: -16.563262939453125
    9. ' =)' → logprob: -17.063262939453125
    10. 's' → logprob: -17.188262939453125

Token 93: ' d' (ID: 272)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.023913336917757988
    2. ' c' → logprob: -4.398913383483887
    3. 'a' → logprob: -4.523913383483887
    4. ' a' → logprob: -8.398913383483887
    5. ' ' → logprob: -9.148913383483887
    6. '(c' → logprob: -9.898913383483887
    7. 'b' → logprob: -10.398913383483887
    8. '  ' → logprob: -10.773913383483887
    9. '   ' → logprob: -10.773913383483887
    10. ' (' → logprob: -11.523913383483887

Token 94: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3887750506401062
    2. ' +' → logprob: -1.138775110244751
    3. '<|end|>' → logprob: -7.138774871826172
    4. ' -' → logprob: -7.388774871826172
    5. '-' → logprob: -8.013774871826172
    6. '+a' → logprob: -9.763774871826172
    7. '+x' → logprob: -10.638774871826172
    8. ' +
' → logprob: -10.888774871826172
    9. '+
' → logprob: -11.013774871826172
    10. '#' → logprob: -11.638774871826172

Token 95: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.0003178273618686944
    2. ' dx' → logprob: -8.250317573547363
    3. 'x' → logprob: -9.875317573547363
    4. '1' → logprob: -13.000317573547363
    5. '_dx' → logprob: -14.125317573547363
    6. '0' → logprob: -14.500317573547363
    7. 'xd' → logprob: -14.625317573547363
    8. 'sx' → logprob: -15.125317573547363
    9. 'xdc' → logprob: -15.375317573547363
    10. '.dx' → logprob: -15.625317573547363

Token 96: '
' (ID: 198)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.590427577495575
    2. 'print' → logprob: -0.840427577495575
    3. '#' → logprob: -5.215427398681641
    4. '
' → logprob: -5.590427398681641
    5. '<|end|>' → logprob: -6.215427398681641
    6. 'if' → logprob: -6.840427398681641
    7. '\n' → logprob: -7.715427398681641
    8. '  
' → logprob: -8.09042739868164
    9. '\' → logprob: -8.09042739868164
    10. ' x' → logprob: -8.59042739868164

Token 97: 'x' (ID: 87)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4357570707798004
    2. 'x' → logprob: -1.060757040977478
    3. '<|end|>' → logprob: -5.560757160186768
    4. '#' → logprob: -6.435757160186768
    5. '
' → logprob: -7.685757160186768
    6. 'a' → logprob: -7.810757160186768
    7. ' print' → logprob: -8.18575668334961
    8. ')' → logprob: -9.18575668334961
    9. ' x' → logprob: -9.56075668334961
    10. ',' → logprob: -9.81075668334961

Token 98: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0038634969387203455
    2. '0' → logprob: -5.753863334655762
    3. '1' → logprob: -7.378863334655762
    4. ' =' → logprob: -10.253863334655762
    5. ',' → logprob: -10.753863334655762
    6. ' ' → logprob: -12.878863334655762
    7. '=' → logprob: -13.378863334655762
    8. '_' → logprob: -15.503863334655762
    9. '```' → logprob: -16.003864288330078
    10. '<|end|>' → logprob: -16.253864288330078

Token 99: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00392214534804225
    2. '=' → logprob: -5.628921985626221
    3. ',' → logprob: -8.128922462463379
    4. ' ' → logprob: -11.503922462463379
    5. ' ,' → logprob: -11.753922462463379
    6. '1' → logprob: -12.378922462463379
    7. '2' → logprob: -12.503922462463379
    8. ' =
' → logprob: -15.253922462463379
    9. '  ' → logprob: -16.003921508789062
    10. 'x' → logprob: -16.003921508789062

Token 100: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.056690316647291183
    2. ' a' → logprob: -2.931690216064453
    3. 'b' → logprob: -7.431690216064453
    4. 'c' → logprob: -7.806690216064453
    5. 'd' → logprob: -8.306690216064453
    6. ' c' → logprob: -8.431690216064453
    7. ' b' → logprob: -8.556690216064453
    8. ' d' → logprob: -9.306690216064453
    9. ' ' → logprob: -10.806690216064453
    10. '	a' → logprob: -10.806690216064453

Token 101: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0025568767450749874
    2. '-' → logprob: -6.002556800842285
    3. '<|end|>' → logprob: -10.002556800842285
    4. ' ' → logprob: -10.752556800842285
    5. ',' → logprob: -12.002556800842285
    6. ' +' → logprob: -12.502556800842285
    7. '<|end|>' → logprob: -14.002556800842285
    8. ' =' → logprob: -14.377556800842285
    9. '+' → logprob: -14.752556800842285
    10. ' -=' → logprob: -14.877556800842285

Token 102: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.0028212780598551035
    2. ' dy' → logprob: -5.877821445465088
    3. '.dy' → logprob: -11.50282096862793
    4. 'd' → logprob: -13.37782096862793
    5. 'dx' → logprob: -13.62782096862793
    6. '<|end|>' → logprob: -14.62782096862793
    7. 'dym' → logprob: -14.75282096862793
    8. '```' → logprob: -14.87782096862793
    9. 'Dy' → logprob: -15.12782096862793
    10. '	d' → logprob: -15.37782096862793

Token 103: ' ' (ID: 220)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.6268598437309265
    2. '<|end|>' → logprob: -0.8768598437309265
    3. ' y' → logprob: -3.3768599033355713
    4. '
' → logprob: -4.376859664916992
    5. ',' → logprob: -6.876859664916992
    6. ' ' → logprob: -7.376859664916992
    7. '```' → logprob: -8.001859664916992
    8. '\' → logprob: -8.626859664916992
    9. '<|end|>' → logprob: -8.626859664916992
    10. 'b' → logprob: -9.001859664916992

Token 104: ' #' (ID: 1069)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0046013654209673405
    2. '<|end|>' → logprob: -5.50460147857666
    3. ' y' → logprob: -8.25460147857666
    4. '
' → logprob: -8.62960147857666
    5. ',y' → logprob: -10.25460147857666
    6. '\' → logprob: -11.75460147857666
    7. '```' → logprob: -12.12960147857666
    8. ',' → logprob: -12.12960147857666
    9. ')' → logprob: -12.37960147857666
    10. '  
' → logprob: -12.62960147857666

Token 105: ' Là' (ID: 100386)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.011175147257745266
    2. '<|end|>' → logprob: -4.761175155639648
    3. ' y' → logprob: -6.261175155639648
    4. '
' → logprob: -7.636175155639648
    5. ',' → logprob: -9.886175155639648
    6. ',y' → logprob: -10.636175155639648
    7. 'n' → logprob: -10.886175155639648
    8. '<|end|>' → logprob: -11.386175155639648
    9. 'x' → logprob: -11.636175155639648
    10. 'b' → logprob: -11.636175155639648

Token 106: ' je' (ID: 1264)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.06662791222333908
    2. '<|end|>' → logprob: -3.1916279792785645
    3. ' y' → logprob: -3.9416279792785645
    4. ',' → logprob: -5.9416279792785645
    5. ',y' → logprob: -7.0666279792785645
    6. '
' → logprob: -8.441627502441406
    7. '<|end|>' → logprob: -9.191627502441406
    8. 'x' → logprob: -10.566627502441406
    9. ''y' → logprob: -10.691627502441406
    10. ',
' → logprob: -11.191627502441406

Token 107: ' crois' (ID: 65485)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.795309841632843
    2. '-' → logprob: -1.9203097820281982
    3. ' continue' → logprob: -2.4203097820281982
    4. '+' → logprob: -2.7953097820281982
    5. ' -' → logprob: -3.0453097820281982
    6. ' #' → logprob: -3.6703097820281982
    7. ',' → logprob: -4.045310020446777
    8. ' veux' → logprob: -4.045310020446777
    9. ' n' → logprob: -4.170310020446777
    10. ' ' → logprob: -4.295310020446777

Token 108: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.1993645280599594
    2. '#' → logprob: -2.574364423751831
    3. 'que' → logprob: -3.949364423751831
    4. ',' → logprob: -4.19936466217041
    5. ' ' → logprob: -4.32436466217041
    6. '```' → logprob: -4.57436466217041
    7. ' qu' → logprob: -4.94936466217041
    8. '<|end|>' → logprob: -4.94936466217041
    9. ' x' → logprob: -5.19936466217041
    10. ' #' → logprob: -5.19936466217041

Token 109: ' ça' (ID: 13590)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.0781327486038208
    2. ' c' → logprob: -1.0781327486038208
    3. ' y' → logprob: -2.4531326293945312
    4. 'd' → logprob: -2.7031326293945312
    5. ' d' → logprob: -3.5781326293945312
    6. ' ça' → logprob: -3.7031326293945312
    7. 'y' → logprob: -3.9531326293945312
    8. ' ' → logprob: -4.078132629394531
    9. 'a' → logprob: -4.203132629394531
    10. '```' → logprob: -4.578132629394531

Token 110: ' marche' (ID: 58191)
  Prédit: ' va'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' va' → logprob: -0.29809242486953735
    2. ' marche' → logprob: -2.5480923652648926
    3. ' veut' → logprob: -2.6730923652648926
    4. ' continue' → logprob: -3.2980923652648926
    5. ' vaut' → logprob: -4.923092365264893
    6. ' ne' → logprob: -4.923092365264893
    7. ' fait' → logprob: -5.048092365264893
    8. ' n' → logprob: -5.173092365264893
    9. 'continue' → logprob: -5.548092365264893
    10. ' s' → logprob: -5.673092365264893

Token 111: ' mais' (ID: 2899)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.3365291357040405
    2. '
' → logprob: -1.7115291357040405
    3. '<|end|>' → logprob: -2.33652925491333
    4. ',y' → logprob: -5.71152925491333
    5. ',' → logprob: -6.46152925491333
    6. ' y' → logprob: -6.58652925491333
    7. '  
' → logprob: -6.83652925491333
    8. '```' → logprob: -8.836528778076172
    9. '<|end|>' → logprob: -8.961528778076172
    10. 'n' → logprob: -9.086528778076172

Token 112: ' bon' (ID: 4846)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.06475328654050827
    2. 'y' → logprob: -2.814753293991089
    3. '<|end|>' → logprob: -6.31475305557251
    4. ' je' → logprob: -8.189753532409668
    5. '...' → logprob: -8.814753532409668
    6. 'x' → logprob: -9.689753532409668
    7. ' ' → logprob: -10.064753532409668
    8. ',' → logprob: -10.189753532409668
    9. ' faudrait' → logprob: -10.314753532409668
    10. '```' → logprob: -10.689753532409668

Token 113: ',' (ID: 11)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.03949799761176109
    2. '<|end|>' → logprob: -3.4144980907440186
    3. '
' → logprob: -5.9144978523254395
    4. ',y' → logprob: -6.6644978523254395
    5. ',' → logprob: -7.1644978523254395
    6. '  
' → logprob: -7.9144978523254395
    7. ' y' → logprob: -8.039498329162598
    8. '```' → logprob: -9.039498329162598
    9. ')' → logprob: -9.789498329162598
    10. ')
' → logprob: -10.414498329162598

Token 114: ' faudrait' (ID: 128958)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.3132686913013458
    2. 'y' → logprob: -1.3132686614990234
    3. ' ' → logprob: -13.188268661499023
    4. 'x' → logprob: -13.188268661499023
    5. '	y' → logprob: -14.313268661499023
    6. '  ' → logprob: -15.063268661499023
    7. '<|end|>' → logprob: -15.063268661499023
    8. ''y' → logprob: -15.188268661499023
    9. '...' → logprob: -15.313268661499023
    10. ' x' → logprob: -15.438268661499023

Token 115: ' vérifier' (ID: 93671)
  Prédit: ' tester'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tester' → logprob: -0.3459412455558777
    2. 'tester' → logprob: -1.4709413051605225
    3. ' vérifier' → logprob: -2.8459413051605225
    4. ' test' → logprob: -7.095941066741943
    5. 'test' → logprob: -7.095941066741943
    6. 'v' → logprob: -7.345941066741943
    7. ' vraiment' → logprob: -8.720941543579102
    8. ' checker' → logprob: -8.720941543579102
    9. '#' → logprob: -8.845941543579102
    10. ' ' → logprob: -8.970941543579102

Token 116: '...
' (ID: 4908)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.15581902861595154
    2. '<|end|>' → logprob: -2.1558189392089844
    3. '
' → logprob: -4.030818939208984
    4. ',y' → logprob: -5.155818939208984
    5. ',' → logprob: -6.155818939208984
    6. ' y' → logprob: -6.905818939208984
    7. '  
' → logprob: -7.030818939208984
    8. ')' → logprob: -8.530818939208984
    9. '```' → logprob: -9.280818939208984
    10. '<|end|>' → logprob: -9.280818939208984

Token 117: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -6.432518421206623e-05
    2. ' y' → logprob: -9.7500638961792
    3. '
' → logprob: -12.7500638961792
    4. '<|end|>' → logprob: -13.6250638961792
    5. ',y' → logprob: -13.8750638961792
    6. ',' → logprob: -14.5000638961792
    7. '```' → logprob: -15.7500638961792
    8. ''y' → logprob: -16.750064849853516
    9. '	y' → logprob: -17.125064849853516
    10. '   ' → logprob: -17.500064849853516

Token 118: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00012856863031629473
    2. ' ' → logprob: -9.375128746032715
    3. '=' → logprob: -10.375128746032715
    4. ' =' → logprob: -12.375128746032715
    5. '1' → logprob: -13.000128746032715
    6. 'a' → logprob: -13.375128746032715
    7. '   ' → logprob: -13.500128746032715
    8. '```' → logprob: -14.437628746032715
    9. '₂' → logprob: -14.500128746032715
    10. '  ' → logprob: -15.062628746032715

Token 119: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141470432281494
    2. '=' → logprob: -1.701414704322815
    3. ' ' → logprob: -13.826415061950684
    4. '=a' → logprob: -16.201414108276367
    5. '   ' → logprob: -16.576414108276367
    6. ',' → logprob: -16.701414108276367
    7. 'a' → logprob: -16.951414108276367
    8. ' =
' → logprob: -17.326414108276367
    9. ' =)' → logprob: -17.826414108276367
    10. '  ' → logprob: -17.951414108276367

Token 120: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.3566856384277344
    2. ' a' → logprob: -1.3566856384277344
    3. ' b' → logprob: -1.3566856384277344
    4. 'a' → logprob: -1.4816856384277344
    5. '   ' → logprob: -9.606685638427734
    6. '	a' → logprob: -9.981685638427734
    7. ' ' → logprob: -10.481685638427734
    8. '    ' → logprob: -10.731685638427734
    9. '	b' → logprob: -10.731685638427734
    10. '  ' → logprob: -10.856685638427734

Token 121: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.005943847820162773
    2. ' +' → logprob: -5.130943775177002
    3. '+
' → logprob: -12.38094425201416
    4. '+d' → logprob: -12.50594425201416
    5. '+x' → logprob: -13.13094425201416
    6. '   ' → logprob: -14.00594425201416
    7. '+

' → logprob: -14.00594425201416
    8. '-' → logprob: -14.38094425201416
    9. ' ' → logprob: -14.88094425201416
    10. '+y' → logprob: -15.00594425201416

Token 122: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.04859236627817154
    2. ' dx' → logprob: -3.0485923290252686
    3. '_dx' → logprob: -12.923592567443848
    4. '.dx' → logprob: -13.423592567443848
    5. '(dx' → logprob: -13.923592567443848
    6. ' ' → logprob: -16.29859161376953
    7. 'adx' → logprob: -17.04859161376953
    8. '  ' → logprob: -17.17359161376953
    9. '   ' → logprob: -18.04859161376953
    10. 'xd' → logprob: -18.79859161376953

Token 123: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.45904216170310974
    2. ')' → logprob: -1.0840421915054321
    3. '#' → logprob: -4.584042072296143
    4. '<|end|>' → logprob: -4.709042072296143
    5. 'x' → logprob: -5.334042072296143
    6. ',' → logprob: -5.834042072296143
    7. ')
' → logprob: -6.959042072296143
    8. ' print' → logprob: -7.084042072296143
    9. '
' → logprob: -7.709042072296143
    10. 'a' → logprob: -8.7090425491333

Token 124: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.003571565030142665
    2. ')' → logprob: -6.003571510314941
    3. '#' → logprob: -7.378571510314941
    4. ' print' → logprob: -8.128571510314941
    5. ',' → logprob: -9.253571510314941
    6. '<|end|>' → logprob: -10.253571510314941
    7. '#print' → logprob: -11.003571510314941
    8. 'x' → logprob: -11.878571510314941
    9. '```' → logprob: -12.753571510314941
    10. '
' → logprob: -12.753571510314941

Token 125: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2524624764919281
    2. '(x' → logprob: -1.5024625062942505
    3. '((' → logprob: -8.127462387084961
    4. '(f' → logprob: -8.502462387084961
    5. '(a' → logprob: -11.502462387084961
    6. '(
' → logprob: -11.627462387084961
    7. '("("' → logprob: -12.627462387084961
    8. '('' → logprob: -12.752462387084961
    9. ' (' → logprob: -12.877462387084961
    10. '()' → logprob: -13.252462387084961

Token 126: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006268949946388602
    2. '2' → logprob: -7.375627040863037
    3. ')' → logprob: -16.125627517700195
    4. '```' → logprob: -16.500627517700195
    5. ',' → logprob: -16.875627517700195
    6. ' ' → logprob: -17.125627517700195
    7. '
' → logprob: -17.875627517700195
    8. '

' → logprob: -17.875627517700195
    9. '"' → logprob: -18.250627517700195
    10. '１' → logprob: -18.563127517700195

Token 127: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003609680861700326
    2. ')' → logprob: -8.250361442565918
    3. ' ,' → logprob: -9.625361442565918
    4. ',y' → logprob: -10.375361442565918
    5. ',
' → logprob: -14.000361442565918
    6. ' y' → logprob: -14.375361442565918
    7. ' )' → logprob: -15.250361442565918
    8. ',)' → logprob: -15.375361442565918
    9. '1' → logprob: -15.625361442565918
    10. '2' → logprob: -16.5003604888916

Token 128: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.011049231514334679
    2. ' y' → logprob: -4.511049270629883
    3. ')' → logprob: -13.636049270629883
    4. ' ' → logprob: -15.761049270629883
    5. ',y' → logprob: -17.011049270629883
    6. ',' → logprob: -17.136049270629883
    7. ''y' → logprob: -17.261049270629883
    8. '    ' → logprob: -17.761049270629883
    9. '	y' → logprob: -17.886049270629883
    10. '  ' → logprob: -18.011049270629883

Token 129: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1517960956552997e-05
    2. '2' → logprob: -11.375011444091797
    3. ')' → logprob: -18.250011444091797
    4. ' ' → logprob: -20.000011444091797
    5. '１' → logprob: -21.250011444091797
    6. '```' → logprob: -21.375011444091797
    7. '_' → logprob: -22.500011444091797
    8. '​' → logprob: -22.750011444091797
    9. '۱' → logprob: -23.500011444091797
    10. '3' → logprob: -23.500011444091797

Token 130: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.38691508769989014
    2. ',' → logprob: -1.1369150876998901
    3. ' )' → logprob: -11.13691520690918
    4. ' ,' → logprob: -11.63691520690918
    5. ',x' → logprob: -11.76191520690918
    6. ')
' → logprob: -12.13691520690918
    7. ',)' → logprob: -12.51191520690918
    8. 'x' → logprob: -14.13691520690918
    9. '),' → logprob: -14.26191520690918
    10. ',
' → logprob: -14.63691520690918

Token 131: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00033546582562848926
    2. ' x' → logprob: -8.000335693359375
    3. ' ' → logprob: -19.250335693359375
    4. '   ' → logprob: -19.875335693359375
    5. 'end' → logprob: -20.250335693359375
    6. ')' → logprob: -20.250335693359375
    7. '  ' → logprob: -21.125335693359375
    8. '	x' → logprob: -21.375335693359375
    9. ',' → logprob: -21.875335693359375
    10. '"x' → logprob: -21.875335693359375

Token 132: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.127333340875339e-06
    2. '₂' → logprob: -12.875003814697266
    3. ',' → logprob: -14.375003814697266
    4. ')' → logprob: -15.125003814697266
    5. ' ' → logprob: -15.375003814697266
    6. '۲' → logprob: -16.125003814697266
    7. '```' → logprob: -16.125003814697266
    8. '２' → logprob: -16.375003814697266
    9. '٢' → logprob: -16.875003814697266
    10. '২' → logprob: -17.125003814697266

Token 133: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009159822366200387
    2. ')' → logprob: -7.000916004180908
    3. ' ,' → logprob: -12.87591552734375
    4. '2' → logprob: -13.50091552734375
    5. ',)' → logprob: -15.50091552734375
    6. ',y' → logprob: -15.62591552734375
    7. ',x' → logprob: -16.25091552734375
    8. ' ' → logprob: -17.00091552734375
    9. ' )' → logprob: -17.50091552734375
    10. ',end' → logprob: -18.25091552734375

Token 134: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.31326186656951904
    2. 'y' → logprob: -1.313261866569519
    3. ' ' → logprob: -15.813261985778809
    4. 'x' → logprob: -17.813261032104492
    5. '	y' → logprob: -17.938261032104492
    6. ',' → logprob: -18.188261032104492
    7. ')' → logprob: -18.188261032104492
    8. ',y' → logprob: -19.188261032104492
    9. ' ' → logprob: -19.313261032104492
    10. ' x' → logprob: -19.688261032104492

Token 135: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.128163257315464e-07
    2. ')' → logprob: -15.5
    3. ' ' → logprob: -17.5
    4. '```' → logprob: -17.75
    5. '₂' → logprob: -19.25
    6. '۲' → logprob: -19.5
    7. '２' → logprob: -19.5
    8. '1' → logprob: -20.875
    9. 'c' → logprob: -21.5
    10. '[' → logprob: -21.875

Token 136: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ' )' → logprob: -15.75
    3. ')`' → logprob: -16.625
    4. '))' → logprob: -17.0
    5. ')
' → logprob: -17.375
    6. '')' → logprob: -18.25
    7. '),' → logprob: -19.25
    8. ')}' → logprob: -19.375
    9. ')#' → logprob: -19.375
    10. '`)' → logprob: -19.625

Token 137: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 138: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014961452223360538
    2. '<|end|>' → logprob: -4.514961242675781
    3. '#' → logprob: -5.889961242675781
    4. ' )' → logprob: -8.264961242675781
    5. ',' → logprob: -8.389961242675781
    6. ' ' → logprob: -8.764961242675781
    7. 'x' → logprob: -9.014961242675781
    8. '```' → logprob: -9.639961242675781
    9. 'a' → logprob: -9.764961242675781
    10. '')' → logprob: -10.139961242675781

Token 139: ' On' (ID: 2160)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 140: ' affiche' (ID: 127479)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.3597817122936249
    2. ' continue' → logprob: -2.2347817420959473
    3. 'print' → logprob: -3.2347817420959473
    4. ' n' → logprob: -3.3597817420959473
    5. ' imprime' → logprob: -3.9847817420959473
    6. ' ' → logprob: -4.109781742095947
    7. '.print' → logprob: -4.859781742095947
    8. '#' → logprob: -4.984781742095947
    9. ' complète' → logprob: -5.234781742095947
    10. ' peux' → logprob: -5.359781742095947

Token 141: ' tout' (ID: 5501)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 142: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 143: ' normalement' (ID: 164432)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.331732153892517
    2. 'sans' → logprob: -1.331732153892517
    3. 'fin' → logprob: -2.8317322731018066
    4. '<|end|>' → logprob: -2.8317322731018066
    5. '#' → logprob: -2.9567322731018066
    6. 'comme' → logprob: -3.2067322731018066
    7. 'end' → logprob: -3.4567322731018066
    8. 'ça' → logprob: -3.5817322731018066
    9. 'r' → logprob: -3.9567322731018066
    10. 'c' → logprob: -3.9567322731018066

Token 144: ' c' (ID: 274)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 145: ''est' (ID: 6616)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 146: ' bon' (ID: 4846)
  Prédit: 'bon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bon' → logprob: -0.3258509635925293
    2. 'les' → logprob: -2.4508509635925293
    3. 'tout' → logprob: -2.7008509635925293
    4. 'correct' → logprob: -3.0758509635925293
    5. 'ok' → logprob: -3.7008509635925293
    6. 'un' → logprob: -4.700850963592529
    7. 'par' → logprob: -4.700850963592529
    8. 'le' → logprob: -4.700850963592529
    9. 'l' → logprob: -5.200850963592529
    10. 'OK' → logprob: -5.325850963592529

Token 147: ' ?' (ID: 1423)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 145
Tokens correctement prédits (1ère position, stricte): 36
Tokens correctement prédits (1ère position, avec adaptation): 36
Tokens correctement prédits (top 10): 85
Précision stricte (1ère position): 24.83%
Précision adaptée (1ère position): 24.83%
Précision (top 10): 58.62%
================================================================================
