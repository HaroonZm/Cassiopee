================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:16:39
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import bisect as BSC

n = int(input())
A_ = tuple(map(int, input().split()))[::-1][::-1]  # double reverse for no reason

# graph is a dictionary instead of a list of lists
G = {k: [] for k in range(n)}
for j in range(-~(n-2)):  # ~ for -1, -~ for +1, so -~(n-2) is n-1
    x0, y0 = map(int, input().split())
    for u, v in ((x0, y0), (y0, x0)):
        G[u-1] += [v-1]

MAGIC = (2 << 33)  # an unnecessarily weird way to define a large "inf"
dp_row = [MAGIC] * n
Len = [None] * n
taskz = [(None, 0, None, 0)]
while taskz:
    parent, here, _, flag = taskz.pop()
    if flag:
        dp_row[parent] = _
        continue
    idx = BSC.bisect_left(dp_row, A_[here])
    taskz += [(here, idx, dp_row[idx], 1)]
    dp_row[idx] = A_[here]
    Len[here] = BSC.bisect_left(dp_row, MAGIC)
    children = G[here][::-1]  # reverse traversal because why not
    for ch in children:
        if ch ^ parent:  # xor instead of !=
            taskz.append((here, ch, None, 0))
print('\n'.join(map(str, Len)))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' bis' (ID: 7204)
  → Token d'amorce (pas de prédiction)

Token 2: 'ect' (ID: 534)
  → Token d'amorce (pas de prédiction)

Token 3: ' as' (ID: 472)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0002931558701675385
    2. '(' → logprob: -8.625292778015137
    3. '.b' → logprob: -10.500292778015137
    4. '\' → logprob: -11.375292778015137
    5. '\n' → logprob: -11.375292778015137
    6. '.
' → logprob: -12.125292778015137
    7. '
' → logprob: -12.125292778015137
    8. '.\' → logprob: -12.250292778015137
    9. '' → logprob: -12.500292778015137
    10. '```' → logprob: -12.500292778015137

Token 4: ' B' (ID: 418)
  Prédit: 'bs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bs' → logprob: -0.7874416708946228
    2. ' bs' → logprob: -1.0374417304992676
    3. 'bis' → logprob: -1.7874417304992676
    4. ' bis' → logprob: -4.037441730499268
    5. 'b' → logprob: -5.662441730499268
    6. ' ' → logprob: -7.162441730499268
    7. '_bs' → logprob: -7.412441730499268
    8. '```' → logprob: -8.66244125366211
    9. ' b' → logprob: -8.78744125366211
    10. '`' → logprob: -9.16244125366211

Token 5: 'SC' (ID: 10231)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00012511172099038959
    2. ' .' → logprob: -10.87512493133545
    3. '\' → logprob: -11.00012493133545
    4. '.b' → logprob: -12.00012493133545
    5. '(' → logprob: -12.12512493133545
    6. '```' → logprob: -12.12512493133545
    7. '' → logprob: -12.25012493133545
    8. '.\' → logprob: -12.25012493133545
    9. '.e' → logprob: -12.37512493133545
    10. '.
' → logprob: -12.37512493133545

Token 6: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00044496997725218534
    2. '\' → logprob: -9.875445365905762
    3. '' → logprob: -10.125445365905762
    4. '\n' → logprob: -10.125445365905762
    5. '
' → logprob: -10.625445365905762
    6. '(' → logprob: -10.625445365905762
    7. '```' → logprob: -11.000445365905762
    8. '.b' → logprob: -11.250445365905762
    9. '[' → logprob: -11.250445365905762
    10. '.\' → logprob: -11.375445365905762

Token 7: 'n' (ID: 77)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0001146291324403137
    2. '(' → logprob: -10.875114440917969
    3. ',' → logprob: -11.250114440917969
    4. '.b' → logprob: -11.250114440917969
    5. '[' → logprob: -11.750114440917969
    6. '\' → logprob: -12.000114440917969
    7. '.B' → logprob: -12.375114440917969
    8. ';' → logprob: -12.375114440917969
    9. ' .' → logprob: -12.375114440917969
    10. '```' → logprob: -12.625114440917969

Token 8: ' =' (ID: 314)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4656175673007965
    2. '=' → logprob: -1.8406175374984741
    3. ' =' → logprob: -1.9656175374984741
    4. '.' → logprob: -3.7156176567077637
    5. 'u' → logprob: -3.9656176567077637
    6. ',' → logprob: -4.215617656707764
    7. '_' → logprob: -5.215617656707764
    8. ')' → logprob: -5.590617656707764
    9. ' )' → logprob: -5.840617656707764
    10. 'a' → logprob: -6.465617656707764

Token 9: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.18655061721801758
    2. ' int' → logprob: -1.9365506172180176
    3. '10' → logprob: -4.186550617218018
    4. 'int' → logprob: -5.186550617218018
    5. '0' → logprob: -5.811550617218018
    6. '5' → logprob: -6.311550617218018
    7. '20' → logprob: -9.18655014038086
    8. '[int' → logprob: -9.56155014038086
    9. ' []' → logprob: -9.56155014038086
    10. '3' → logprob: -10.68655014038086

Token 10: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003485745983198285
    2. '(input' → logprob: -8.125349044799805
    3. '('' → logprob: -10.750349044799805
    4. ' (' → logprob: -11.625349044799805
    5. '("' → logprob: -11.875349044799805
    6. '()' → logprob: -12.125349044799805
    7. '(`' → logprob: -12.375349044799805
    8. 'input' → logprob: -13.625349044799805
    9. '(n' → logprob: -13.750349044799805
    10. ' ' → logprob: -14.000349044799805

Token 11: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03485559672117233
    2. '()' → logprob: -4.409855365753174
    3. '(' → logprob: -4.534855365753174
    4. '())' → logprob: -4.909855365753174
    5. '))' → logprob: -5.784855365753174
    6. '")' → logprob: -7.909855365753174
    7. '')' → logprob: -8.534855842590332
    8. '`)' → logprob: -8.784855842590332
    9. '(
' → logprob: -9.409855842590332
    10. ' )' → logprob: -10.784855842590332

Token 12: 'A' (ID: 32)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.35015198588371277
    2. 'a' → logprob: -2.100152015686035
    3. 'array' → logprob: -2.475152015686035
    4. 'data' → logprob: -2.975152015686035
    5. 'lst' → logprob: -3.725152015686035
    6. ' arr' → logprob: -6.225152015686035
    7. 's' → logprob: -6.350152015686035
    8. ' array' → logprob: -6.850152015686035
    9. 'list' → logprob: -6.850152015686035
    10. 'nums' → logprob: -7.100152015686035

Token 13: '_' (ID: 62)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5913133025169373
    2. '.' → logprob: -0.8413133025169373
    3. '[]' → logprob: -5.216313362121582
    4. '.append' → logprob: -5.591313362121582
    5. '[:]' → logprob: -6.216313362121582
    6. ' =' → logprob: -7.341313362121582
    7. '=' → logprob: -7.341313362121582
    8. '[n' → logprob: -7.591313362121582
    9. '[A' → logprob: -7.591313362121582
    10. '_' → logprob: -8.216313362121582

Token 14: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20608387887477875
    2. '=' → logprob: -1.95608389377594
    3. 'A' → logprob: -3.8310837745666504
    4. 'n' → logprob: -4.70608377456665
    5. ' ' → logprob: -5.83108377456665
    6. '[]' → logprob: -6.08108377456665
    7. 'N' → logprob: -7.08108377456665
    8. 'P' → logprob: -7.08108377456665
    9. '_' → logprob: -7.33108377456665
    10. ')' → logprob: -7.45608377456665

Token 15: ' tuple' (ID: 31311)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.6607910990715027
    2. ' list' → logprob: -1.4107911586761475
    3. '[]' → logprob: -2.5357911586761475
    4. ' [' → logprob: -2.6607911586761475
    5. ' []' → logprob: -3.4107911586761475
    6. '[list' → logprob: -3.4107911586761475
    7. '[' → logprob: -4.285790920257568
    8. '[input' → logprob: -4.785790920257568
    9. '[int' → logprob: -6.410790920257568
    10. 'input' → logprob: -8.785791397094727

Token 16: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.019839633256196976
    2. '(input' → logprob: -4.269839763641357
    3. '(B' → logprob: -6.019839763641357
    4. '(int' → logprob: -6.519839763641357
    5. '(range' → logprob: -7.769839763641357
    6. '(list' → logprob: -8.0198392868042
    7. '(
' → logprob: -8.2698392868042
    8. '(A' → logprob: -8.5198392868042
    9. '(map' → logprob: -9.1448392868042
    10. '(sorted' → logprob: -9.2698392868042

Token 17: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.02544078417122364
    2. '(' → logprob: -4.400440692901611
    3. '(str' → logprob: -4.400440692901611
    4. 'int' → logprob: -8.27544116973877
    5. '(lambda' → logprob: -9.15044116973877
    6. '(eval' → logprob: -10.02544116973877
    7. 'str' → logprob: -10.27544116973877
    8. 'list' → logprob: -11.02544116973877
    9. '(input' → logprob: -11.15044116973877
    10. '(ord' → logprob: -11.27544116973877

Token 18: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.1552702784538269
    2. ',input' → logprob: -2.1552703380584717
    3. ',' → logprob: -3.6552703380584717
    4. '(' → logprob: -6.530270099639893
    5. 'input' → logprob: -8.28027057647705
    6. '=input' → logprob: -9.03027057647705
    7. ' ,' → logprob: -9.53027057647705
    8. '(eval' → logprob: -10.28027057647705
    9. ' (' → logprob: -10.40527057647705
    10. ')' → logprob: -10.65527057647705

Token 19: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.07889474183320999
    2. ' input' → logprob: -2.578894853591919
    3. '(input' → logprob: -12.95389461517334
    4. ',input' → logprob: -13.82889461517334
    5. '=input' → logprob: -14.20389461517334
    6. '	input' → logprob: -14.70389461517334
    7. ')' → logprob: -15.20389461517334
    8. ' ' → logprob: -16.453895568847656
    9. '<input' → logprob: -16.578895568847656
    10. '_input' → logprob: -16.703895568847656

Token 20: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.04208581894636154
    2. '()))' → logprob: -3.917085886001587
    3. '()' → logprob: -4.292085647583008
    4. '())' → logprob: -5.167085647583008
    5. ')' → logprob: -7.417085647583008
    6. '(' → logprob: -7.792085647583008
    7. '()));' → logprob: -7.792085647583008
    8. '))' → logprob: -8.167085647583008
    9. '(),' → logprob: -9.167085647583008
    10. '());' → logprob: -10.292085647583008

Token 21: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -8.923874702304602e-05
    2. 'strip' → logprob: -9.375089645385742
    3. 'rstrip' → logprob: -13.000089645385742
    4. ' split' → logprob: -13.375089645385742
    5. '(split' → logprob: -14.875089645385742
    6. 'spl' → logprob: -15.875089645385742
    7. ')' → logprob: -17.375089645385742
    8. 's' → logprob: -17.750089645385742
    9. '.split' → logprob: -18.625089645385742
    10. '```' → logprob: -19.125089645385742

Token 22: '()))' (ID: 16829)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.25954315066337585
    2. ')' → logprob: -2.0095431804656982
    3. '()))' → logprob: -2.5095431804656982
    4. '())' → logprob: -4.509542942047119
    5. '()' → logprob: -6.759542942047119
    6. '(' → logprob: -7.009542942047119
    7. ')))' → logprob: -9.884543418884277
    8. ''))' → logprob: -10.509543418884277
    9. '),' → logprob: -10.634543418884277
    10. '(','' → logprob: -11.759543418884277

Token 23: '[::-' (ID: 159890)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.8780829310417175
    2. '
' → logprob: -0.8780829310417175
    3. '_
' → logprob: -3.1280829906463623
    4. 'B' → logprob: -4.003082752227783
    5. '
' → logprob: -4.128082752227783
    6. ')
' → logprob: -4.128082752227783
    7. '' → logprob: -4.378082752227783
    8. '\n' → logprob: -4.378082752227783
    9. '\' → logprob: -5.253082752227783
    10. '_' → logprob: -5.503082752227783

Token 24: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4021237802808173e-05
    2. '```' → logprob: -11.875014305114746
    3. ')' → logprob: -13.125014305114746
    4. ' ' → logprob: -13.750014305114746
    5. '[::-' → logprob: -13.875014305114746
    6. '``' → logprob: -14.125014305114746
    7. '])' → logprob: -14.875014305114746
    8. '-' → logprob: -15.500014305114746
    9. 'reverse' → logprob: -15.500014305114746
    10. '`)' → logprob: -15.812514305114746

Token 25: '][' (ID: 2696)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -9.253090865968261e-06
    2. '`)' → logprob: -12.250009536743164
    3. ')
' → logprob: -13.125009536743164
    4. '))' → logprob: -14.500009536743164
    5. ')`' → logprob: -14.500009536743164
    6. '')' → logprob: -14.875009536743164
    7. ' )' → logprob: -15.375009536743164
    8. '),' → logprob: -15.750009536743164
    9. '```' → logprob: -15.875009536743164
    10. '）' → logprob: -16.375009536743164

Token 26: '::-' (ID: 96612)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1538311243057251
    2. ':' → logprob: -2.6538310050964355
    3. ']' → logprob: -3.5288310050964355
    4. ':]' → logprob: -4.1538310050964355
    5. ':)' → logprob: -5.4038310050964355
    6. '0' → logprob: -5.4038310050964355
    7. '])' → logprob: -5.5288310050964355
    8. ')]' → logprob: -5.6538310050964355
    9. ')])' → logprob: -5.6538310050964355
    10. '1' → logprob: -5.9038310050964355

Token 27: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00027921271976083517
    2. '2' → logprob: -8.500279426574707
    3. '3' → logprob: -10.250279426574707
    4. '])' → logprob: -11.875279426574707
    5. ']' → logprob: -12.125279426574707
    6. '4' → logprob: -12.500279426574707
    7. '6' → logprob: -12.625279426574707
    8. ':' → logprob: -12.875279426574707
    9. '5' → logprob: -13.187779426574707
    10. '-' → logprob: -13.250279426574707

Token 28: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9981420336989686e-05
    2. ']' → logprob: -12.250020027160645
    3. '])' → logprob: -12.500020027160645
    4. '[' → logprob: -13.125020027160645
    5. '))' → logprob: -13.250020027160645
    6. ')])' → logprob: -13.375020027160645
    7. '`)' → logprob: -13.500020027160645
    8. ')
' → logprob: -13.625020027160645
    9. ')`' → logprob: -14.375020027160645
    10. '）' → logprob: -14.750020027160645

Token 29: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 30: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6912763118743896
    2. '
' → logprob: -1.6912763118743896
    3. '<|end|>' → logprob: -2.1912763118743896
    4. '[' → logprob: -3.1912763118743896
    5. 'A' → logprob: -3.5662763118743896
    6. '.' → logprob: -3.5662763118743896
    7. '' → logprob: -4.191276550292969
    8. ')' → logprob: -4.191276550292969
    9. ' ' → logprob: -4.316276550292969
    10. 'B' → logprob: -4.316276550292969

Token 31: ' double' (ID: 3503)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.24622423946857452
    2. ' A' → logprob: -2.7462241649627686
    3. '<|end|>' → logprob: -2.9962241649627686
    4. '[::-' → logprob: -3.7462241649627686
    5. '#' → logprob: -3.8712241649627686
    6. ' The' → logprob: -4.496224403381348
    7. ' #' → logprob: -4.871224403381348
    8. '[' → logprob: -4.996224403381348
    9. ' split' → logprob: -5.621224403381348
    10. '<|end|>' → logprob: -5.621224403381348

Token 32: ' reverse' (ID: 18199)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.21336346864700317
    2. ' ' → logprob: -2.2133634090423584
    3. 'A' → logprob: -3.3383634090423584
    4. '[' → logprob: -4.3383636474609375
    5. '[::-' → logprob: -4.4633636474609375
    6. ' A' → logprob: -4.5883636474609375
    7. ' _' → logprob: -6.7133636474609375
    8. '[:]' → logprob: -6.8383636474609375
    9. '<|end|>' → logprob: -6.8383636474609375
    10. '#' → logprob: -6.9633636474609375

Token 33: ' for' (ID: 395)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.4481381177902222
    2. '#' → logprob: -1.5731381177902222
    3. '[' → logprob: -1.6981381177902222
    4. 'A' → logprob: -2.1981382369995117
    5. '.' → logprob: -2.4481382369995117
    6. ')' → logprob: -3.3231382369995117
    7. 'B' → logprob: -3.4481382369995117
    8. '<|end|>' → logprob: -3.8231382369995117
    9. 'a' → logprob: -4.823138236999512
    10. 'n' → logprob: -4.948138236999512

Token 34: ' no' (ID: 860)
  Prédit: ' no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' no' → logprob: -0.8693920373916626
    2. 'A' → logprob: -1.8693920373916626
    3. ' A' → logprob: -2.869391918182373
    4. 'no' → logprob: -3.119391918182373
    5. ' clarity' → logprob: -3.369391918182373
    6. ' preserving' → logprob: -3.369391918182373
    7. ' the' → logprob: -3.494391918182373
    8. 'a' → logprob: -3.869391918182373
    9. ' a' → logprob: -4.119391918182373
    10. 'the' → logprob: -4.494391918182373

Token 35: ' reason' (ID: 5207)
  Prédit: ' change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' change' → logprob: -0.2389077991247177
    2. 'change' → logprob: -1.988907814025879
    3. ' effect' → logprob: -3.488907814025879
    4. ' changes' → logprob: -4.113907814025879
    5. 'effect' → logprob: -5.238907814025879
    6. 'op' → logprob: -5.613907814025879
    7. 'space' → logprob: -5.863907814025879
    8. ')' → logprob: -5.988907814025879
    9. '<|end|>' → logprob: -6.863907814025879
    10. 't' → logprob: -6.988907814025879

Token 36: '

' (ID: 279)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.41774025559425354
    2. 'a' → logprob: -2.4177403450012207
    3. '
' → logprob: -2.4177403450012207
    4. 'B' → logprob: -3.0427403450012207
    5. 'for' → logprob: -3.4177403450012207
    6. '#' → logprob: -4.417740345001221
    7. '_
' → logprob: -4.792740345001221
    8. '\n' → logprob: -4.917740345001221
    9. 's' → logprob: -5.042740345001221
    10. 'i' → logprob: -5.167740345001221

Token 37: '#' (ID: 2)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.4473690688610077
    2. 'for' → logprob: -2.19736909866333
    3. 'a' → logprob: -2.69736909866333
    4. 'B' → logprob: -3.32236909866333
    5. '
' → logprob: -3.82236909866333
    6. 'i' → logprob: -3.82236909866333
    7. 's' → logprob: -4.19736909866333
    8. '#' → logprob: -4.57236909866333
    9. 'max' → logprob: -4.69736909866333
    10. 'x' → logprob: -4.82236909866333

Token 38: ' graph' (ID: 7465)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.1245412528514862
    2. 'sorted' → logprob: -3.1245412826538086
    3. 'B' → logprob: -3.9995412826538086
    4. 'dp' → logprob: -4.999541282653809
    5. ' A' → logprob: -5.124541282653809
    6. 'pos' → logprob: -5.249541282653809
    7. 's' → logprob: -5.374541282653809
    8. 'idx' → logprob: -5.499541282653809
    9. 'cnt' → logprob: -5.749541282653809
    10. 'lst' → logprob: -6.374541282653809

Token 39: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1615326702594757
    2. 'G' → logprob: -2.9115326404571533
    3. ' G' → logprob: -3.0365326404571533
    4. '=' → logprob: -4.161532878875732
    5. 'graph' → logprob: -5.661532878875732
    6. '[]' → logprob: -5.911532878875732
    7. '=[]' → logprob: -6.036532878875732
    8. '[' → logprob: -6.161532878875732
    9. 'g' → logprob: -6.411532878875732
    10. 'adj' → logprob: -6.536532878875732

Token 40: ' a' (ID: 261)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.947330892086029
    2. '[]' → logprob: -1.1973309516906738
    3. ' [[]' → logprob: -2.197330951690674
    4. ' {}' → logprob: -2.572330951690674
    5. '{}' → logprob: -2.822330951690674
    6. ' {' → logprob: -3.447330951690674
    7. '[' → logprob: -4.572330951690674
    8. ' defaultdict' → logprob: -4.822330951690674
    9. '{' → logprob: -5.072330951690674
    10. ' [' → logprob: -5.197330951690674

Token 41: ' dictionary' (ID: 22131)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.6075093746185303
    2. ' defaultdict' → logprob: -1.8575093746185303
    3. 'list' → logprob: -2.2325093746185303
    4. 'n' → logprob: -2.9825093746185303
    5. 'dict' → logprob: -3.2325093746185303
    6. ' dict' → logprob: -3.3575093746185303
    7. ' dictionary' → logprob: -4.482509613037109
    8. 'default' → logprob: -5.357509613037109
    9. ' [[]' → logprob: -5.357509613037109
    10. '[]' → logprob: -5.357509613037109

Token 42: ' instead' (ID: 7665)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.8340036869049072
    2. 'graph' → logprob: -1.5840036869049072
    3. ' =' → logprob: -1.7090036869049072
    4. '=' → logprob: -2.8340036869049072
    5. ',' → logprob: -3.0840036869049072
    6. '[' → logprob: -4.709003448486328
    7. '<|end|>' → logprob: -4.709003448486328
    8. '
' → logprob: -5.209003448486328
    9. '{
' → logprob: -5.334003448486328
    10. '_' → logprob: -5.334003448486328

Token 43: ' of' (ID: 328)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -1.081481695175171
    2. ' =' → logprob: -1.581481695175171
    3. '=' → logprob: -1.956481695175171
    4. ',' → logprob: -2.206481695175171
    5. '{' → logprob: -2.456481695175171
    6. '
' → logprob: -4.45648193359375
    7. ':' → logprob: -4.45648193359375
    8. 'g' → logprob: -4.45648193359375
    9. '{}' → logprob: -4.58148193359375
    10. '.' → logprob: -4.58148193359375

Token 44: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8856855034828186
    2. '[]' → logprob: -1.3856854438781738
    3. ' a' → logprob: -2.135685443878174
    4. 'list' → logprob: -2.385685443878174
    5. 'default' → logprob: -2.635685443878174
    6. ' defaultdict' → logprob: -3.885685443878174
    7. ' list' → logprob: -4.385685443878174
    8. ' an' → logprob: -4.885685443878174
    9. 'an' → logprob: -5.135685443878174
    10. ' []' → logprob: -5.885685443878174

Token 45: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.7816647291183472
    2. ' list' → logprob: -1.0316647291183472
    3. 'default' → logprob: -2.1566648483276367
    4. ' defaultdict' → logprob: -2.9066648483276367
    5. 'rray' → logprob: -5.781664848327637
    6. ' default' → logprob: -6.656664848327637
    7. 'matrix' → logprob: -7.031664848327637
    8. 'n' → logprob: -7.156664848327637
    9. 'graph' → logprob: -7.281664848327637
    10. 'd' → logprob: -7.281664848327637

Token 46: ' of' (ID: 328)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.4392912983894348
    2. ',' → logprob: -2.31429123878479
    3. 'g' → logprob: -2.56429123878479
    4. '
' → logprob: -2.93929123878479
    5. 'G' → logprob: -3.56429123878479
    6. '{' → logprob: -3.93929123878479
    7. ' =' → logprob: -4.564291477203369
    8. ' graph' → logprob: -4.564291477203369
    9. '_graph' → logprob: -4.814291477203369
    10. ',
' → logprob: -4.939291477203369

Token 47: ' lists' (ID: 19471)
  Prédit: 'lists'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lists' → logprob: -0.1730404943227768
    2. ' lists' → logprob: -2.6730403900146484
    3. 'sets' → logprob: -3.4230403900146484
    4. 'neighbors' → logprob: -3.5480403900146484
    5. 'edges' → logprob: -4.298040390014648
    6. 'list' → logprob: -5.048040390014648
    7. ' sets' → logprob: -6.298040390014648
    8. 'adj' → logprob: -6.548040390014648
    9. 'dict' → logprob: -6.923040390014648
    10. '[]' → logprob: -7.298040390014648

Token 48: '
' (ID: 198)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.8751676082611084
    2. 'g' → logprob: -1.0001676082611084
    3. 'G' → logprob: -2.6251676082611084
    4. ',' → logprob: -3.0001676082611084
    5. '
' → logprob: -3.5001676082611084
    6. '```' → logprob: -4.8751678466796875
    7. ' =' → logprob: -5.0001678466796875
    8. '\n' → logprob: -5.2501678466796875
    9. '\' → logprob: -5.2501678466796875
    10. ',
' → logprob: -5.3751678466796875

Token 49: 'G' (ID: 38)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.44087865948677063
    2. 'G' → logprob: -1.0658786296844482
    3. 'g' → logprob: -4.565878868103027
    4. ' graph' → logprob: -7.440878868103027
    5. '```' → logprob: -8.565878868103027
    6. 'neighbors' → logprob: -8.690878868103027
    7. 'gr' → logprob: -9.315878868103027
    8. 'edges' → logprob: -9.440878868103027
    9. ' G' → logprob: -9.815878868103027
    10. '
' → logprob: -9.815878868103027

Token 50: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.34869006276130676
    2. '=' → logprob: -1.2236900329589844
    3. '{' → logprob: -9.598690032958984
    4. ' ={' → logprob: -9.598690032958984
    5. '={}' → logprob: -10.723690032958984
    6. '={' → logprob: -10.973690032958984
    7. ' =
' → logprob: -11.598690032958984
    8. '={'' → logprob: -11.598690032958984
    9. ',' → logprob: -11.723690032958984
    10. ' ' → logprob: -11.848690032958984

Token 51: ' {' (ID: 354)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.04941212758421898
    2. ' {}' → logprob: -3.0494120121002197
    3. 'default' → logprob: -7.924412250518799
    4. 'dict' → logprob: -8.04941177368164
    5. ' defaultdict' → logprob: -9.54941177368164
    6. ' dict' → logprob: -10.04941177368164
    7. '{' → logprob: -10.54941177368164
    8. ' {' → logprob: -14.29941177368164
    9. '{})' → logprob: -15.17441177368164
    10. ' default' → logprob: -15.17441177368164

Token 52: 'k' (ID: 74)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.022575538605451584
    2. 'k' → logprob: -3.897575616836548
    3. 'u' → logprob: -7.647575378417969
    4. '   ' → logprob: -8.022575378417969
    5. '}' → logprob: -8.147575378417969
    6. 'v' → logprob: -8.272575378417969
    7. 'x' → logprob: -8.647575378417969
    8. ' i' → logprob: -8.897575378417969
    9. '_' → logprob: -9.147575378417969
    10. '_i' → logprob: -9.272575378417969

Token 53: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00013238313840702176
    2. ':k' → logprob: -9.75013256072998
    3. ' :' → logprob: -10.62513256072998
    4. ':list' → logprob: -10.87513256072998
    5. ':[' → logprob: -11.87513256072998
    6. ':i' → logprob: -12.00013256072998
    7. 'k' → logprob: -12.12513256072998
    8. ':set' → logprob: -12.25013256072998
    9. ':{}' → logprob: -12.75013256072998
    10. 'for' → logprob: -13.75013256072998

Token 54: ' []' (ID: 6126)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.023071693256497383
    2. ' []' → logprob: -4.023071765899658
    3. 'set' → logprob: -5.648071765899658
    4. '[]}' → logprob: -6.773071765899658
    5. ' set' → logprob: -8.7730712890625
    6. '[]
' → logprob: -10.0230712890625
    7. 'list' → logprob: -11.2730712890625
    8. ' ' → logprob: -11.8980712890625
    9. '[]

' → logprob: -11.8980712890625
    10. '[],' → logprob: -13.1480712890625

Token 55: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.11301140487194061
    2. 'for' → logprob: -2.238011360168457
    3. ' ' → logprob: -9.488011360168457
    4. ',' → logprob: -9.738011360168457
    5. '	for' → logprob: -10.613011360168457
    6. '   ' → logprob: -11.113011360168457
    7. '}' → logprob: -11.738011360168457
    8. 'k' → logprob: -13.238011360168457
    9. '  ' → logprob: -13.488011360168457
    10. ')' → logprob: -13.613011360168457

Token 56: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -1.1420915126800537
    2. 'k' → logprob: -1.2670915126800537
    3. ' range' → logprob: -1.2670915126800537
    4. 'range' → logprob: -2.1420915126800537
    5. '_' → logprob: -10.392091751098633
    6. ' ' → logprob: -11.267091751098633
    7. '	range' → logprob: -11.267091751098633
    8. 'r' → logprob: -11.517091751098633
    9. '(range' → logprob: -11.517091751098633
    10. 'i' → logprob: -11.517091751098633

Token 57: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026519961655139923
    2. 'in' → logprob: -3.651520013809204
    3. 'n' → logprob: -8.651519775390625
    4. ' ' → logprob: -11.151519775390625
    5. 'range' → logprob: -11.151519775390625
    6. 'In' → logprob: -12.901519775390625
    7. 'k' → logprob: -13.026519775390625
    8. ',' → logprob: -13.401519775390625
    9. '  ' → logprob: -14.151519775390625
    10. ' n' → logprob: -14.401519775390625

Token 58: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0619952529668808
    2. ' range' → logprob: -2.811995267868042
    3. 'A' → logprob: -10.686995506286621
    4. ' A' → logprob: -13.061995506286621
    5. '(range' → logprob: -14.186995506286621
    6. '	range' → logprob: -14.311995506286621
    7. ' ' → logprob: -14.686995506286621
    8. 'r' → logprob: -15.811995506286621
    9. 'rang' → logprob: -16.061994552612305
    10. '```' → logprob: -16.561994552612305

Token 59: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.020544106140732765
    2. '(' → logprob: -3.8955440521240234
    3. 'n' → logprob: -14.395544052124023
    4. '1' → logprob: -14.520544052124023
    5. ' (' → logprob: -14.895544052124023
    6. '(k' → logprob: -15.520544052124023
    7. '(len' → logprob: -15.645544052124023
    8. '(
' → logprob: -15.895544052124023
    9. ' n' → logprob: -16.395544052124023
    10. '(N' → logprob: -16.645544052124023

Token 60: ')}
' (ID: 19324)
  Prédit: ')}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')}' → logprob: -0.0003191386058460921
    2. ')' → logprob: -8.125319480895996
    3. ' )' → logprob: -11.625319480895996
    4. '}' → logprob: -12.000319480895996
    5. ')}
' → logprob: -13.250319480895996
    6. ');}' → logprob: -13.375319480895996
    7. ')}

' → logprob: -13.875319480895996
    8. '+' → logprob: -13.875319480895996
    9. '")}' → logprob: -14.375319480895996
    10. '})' → logprob: -14.500319480895996

Token 61: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03751540184020996
    2. 'i' → logprob: -3.91251540184021
    3. '
' → logprob: -5.537515640258789
    4. 'p' → logprob: -5.662515640258789
    5. 'f' → logprob: -6.662515640258789
    6. ' for' → logprob: -6.787515640258789
    7. 'u' → logprob: -7.162515640258789
    8. 'a' → logprob: -7.412515640258789
    9. 's' → logprob: -7.412515640258789
    10. 'q' → logprob: -7.537515640258789

Token 62: ' j' (ID: 441)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.06107328459620476
    2. ' i' → logprob: -3.3110733032226562
    3. '_' → logprob: -3.8110733032226562
    4. ' ' → logprob: -8.186073303222656
    5. '_i' → logprob: -9.061073303222656
    6. ' k' → logprob: -9.186073303222656
    7. ' range' → logprob: -9.811073303222656
    8. 'i' → logprob: -10.311073303222656
    9. ' u' → logprob: -10.686073303222656
    10. ' j' → logprob: -12.686073303222656

Token 63: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0712265744805336
    2. 'in' → logprob: -2.6962265968322754
    3. ' ' → logprob: -7.196226596832275
    4. ',' → logprob: -7.821226596832275
    5. 'n' → logprob: -9.821226119995117
    6. ' ,' → logprob: -10.821226119995117
    7. '_' → logprob: -11.321226119995117
    8. '  ' → logprob: -11.821226119995117
    9. 'range' → logprob: -12.071226119995117
    10. '1' → logprob: -12.196226119995117

Token 64: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.06994899362325668
    2. 'range' → logprob: -2.69494891166687
    3. ' ' → logprob: -12.44494915008545
    4. 'r' → logprob: -13.31994915008545
    5. 'ra' → logprob: -13.56994915008545
    6. '_' → logprob: -13.69494915008545
    7. '	range' → logprob: -13.69494915008545
    8. '(range' → logprob: -14.56994915008545
    9. ' ra' → logprob: -14.69494915008545
    10. '  ' → logprob: -14.69494915008545

Token 65: '(-' (ID: 8087)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.026314113289117813
    2. '(' → logprob: -3.6513140201568604
    3. 'n' → logprob: -11.651313781738281
    4. ' (' → logprob: -13.276313781738281
    5. '1' → logprob: -13.901313781738281
    6. '(i' → logprob: -14.401313781738281
    7. '(j' → logprob: -14.526313781738281
    8. '(
' → logprob: -14.901313781738281
    9. ' n' → logprob: -15.276313781738281
    10. '(k' → logprob: -15.526313781738281

Token 66: '~' (ID: 93)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.14926621317863464
    2. '1' → logprob: -2.024266242980957
    3. '3' → logprob: -6.024266242980957
    4. '2' → logprob: -6.274266242980957
    5. '5' → logprob: -7.899266242980957
    6. '-' → logprob: -8.149266242980957
    7. ' n' → logprob: -8.399266242980957
    8. '10' → logprob: -8.399266242980957
    9. '4' → logprob: -8.524266242980957
    10. 'j' → logprob: -8.899266242980957

Token 67: '(' (ID: 7)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.012410636991262436
    2. '0' → logprob: -5.137410640716553
    3. 'j' → logprob: -6.012410640716553
    4. '1' → logprob: -6.387410640716553
    5. 'k' → logprob: -6.637410640716553
    6. ' n' → logprob: -7.512410640716553
    7. '(n' → logprob: -8.637410163879395
    8. ' ' → logprob: -9.887410163879395
    9. '2' → logprob: -10.387410163879395
    10. '9' → logprob: -10.512410163879395

Token 68: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.025360820814967155
    2. '0' → logprob: -4.400360584259033
    3. 'j' → logprob: -4.650360584259033
    4. ' n' → logprob: -6.400360584259033
    5. ' ' → logprob: -7.275360584259033
    6. 'k' → logprob: -8.025361061096191
    7. '1' → logprob: -8.525361061096191
    8. '   ' → logprob: -9.525361061096191
    9. 'i' → logprob: -9.900361061096191
    10. '2' → logprob: -10.150361061096191

Token 69: '-' (ID: 12)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6384580731391907
    2. 'n' → logprob: -2.138458013534546
    3. '):' → logprob: -2.138458013534546
    4. ')):' → logprob: -2.263458013534546
    5. '-' → logprob: -3.638458013534546
    6. ' ' → logprob: -3.888458013534546
    7. 'j' → logprob: -4.138458251953125
    8. ')n' → logprob: -4.138458251953125
    9. '))' → logprob: -4.763458251953125
    10. ')):
' → logprob: -4.888458251953125

Token 70: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.028737489134073257
    2. '2' → logprob: -3.6537375450134277
    3. ' ' → logprob: -6.403737545013428
    4. 'j' → logprob: -7.653737545013428
    5. '0' → logprob: -8.65373706817627
    6. '3' → logprob: -10.15373706817627
    7. 'k' → logprob: -10.90373706817627
    8. 'n' → logprob: -11.34123706817627
    9. 'i' → logprob: -11.46623706817627
    10. '  ' → logprob: -11.71623706817627

Token 71: ')):' (ID: 92037)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.29599663615226746
    2. ')):' → logprob: -1.5459966659545898
    3. ')' → logprob: -3.79599666595459
    4. ' ):' → logprob: -5.04599666595459
    5. ')):
' → logprob: -5.29599666595459
    6. '):
' → logprob: -5.29599666595459
    7. '))' → logprob: -5.67099666595459
    8. '),' → logprob: -8.79599666595459
    9. ' ' → logprob: -8.92099666595459
    10. ' ))' → logprob: -9.04599666595459

Token 72: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3229960501194
    2. '   ' → logprob: -2.572996139526367
    3. ':' → logprob: -2.697996139526367
    4. ' n' → logprob: -3.447996139526367
    5. '<|end|>' → logprob: -4.072996139526367
    6. ')' → logprob: -4.322996139526367
    7. 'n' → logprob: -4.447996139526367
    8. ' :' → logprob: -4.572996139526367
    9. '    ' → logprob: -4.947996139526367
    10. '  ' → logprob: -4.947996139526367

Token 73: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.804887592792511
    2. ' ' → logprob: -1.0548875331878662
    3. ':' → logprob: -2.554887533187866
    4. '<|end|>' → logprob: -3.679887533187866
    5. ' n' → logprob: -3.929887533187866
    6. '  ' → logprob: -4.179887771606445
    7. 'n' → logprob: -4.429887771606445
    8. '
' → logprob: -4.554887771606445
    9. ' 
' → logprob: -4.929887771606445
    10. '    
' → logprob: -5.554887771606445

Token 74: ' ~' (ID: 6574)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6841958165168762
    2. ' n' → logprob: -0.8091958165168762
    3. ' ' → logprob: -4.1841959953308105
    4. '2' → logprob: -4.4341959953308105
    5. '1' → logprob: -5.1841959953308105
    6. ')' → logprob: -5.1841959953308105
    7. '<|end|>' → logprob: -5.9341959953308105
    8. 'j' → logprob: -6.0591959953308105
    9. '0' → logprob: -6.1841959953308105
    10. ')n' → logprob: -6.5591959953308105

Token 75: ' for' (ID: 395)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6933910846710205
    2. '-' → logprob: -1.6933910846710205
    3. ')' → logprob: -2.8183910846710205
    4. '1' → logprob: -2.9433910846710205
    5. '0' → logprob: -3.0683910846710205
    6. '<|end|>' → logprob: -3.6933910846710205
    7. 'j' → logprob: -3.8183910846710205
    8. ' ' → logprob: -3.9433910846710205
    9. ' n' → logprob: -3.9433910846710205
    10. '2' → logprob: -4.443390846252441

Token 76: ' -' (ID: 533)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.8645964860916138
    2. ' bit' → logprob: -1.8645964860916138
    3. ' n' → logprob: -2.489596366882324
    4. ' j' → logprob: -2.489596366882324
    5. ' ' → logprob: -2.739596366882324
    6. 'i' → logprob: -2.739596366882324
    7. 'n' → logprob: -3.114596366882324
    8. ')' → logprob: -3.239596366882324
    9. ' range' → logprob: -3.489596366882324
    10. ' neg' → logprob: -3.864596366882324

Token 77: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.831901490688324
    2. '1' → logprob: -0.956901490688324
    3. 'n' → logprob: -1.9569015502929688
    4. '<|end|>' → logprob: -4.706901550292969
    5. 'j' → logprob: -4.831901550292969
    6. '0' → logprob: -5.456901550292969
    7. ' ' → logprob: -5.956901550292969
    8. '-n' → logprob: -6.081901550292969
    9. '2' → logprob: -6.331901550292969
    10. ')' → logprob: -6.581901550292969

Token 78: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 79: ' -' (ID: 533)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.6410322785377502
    2. ' ' → logprob: -1.1410322189331055
    3. 'n' → logprob: -2.7660322189331055
    4. ' j' → logprob: -3.7660322189331055
    5. '1' → logprob: -4.2660322189331055
    6. ')' → logprob: -4.7660322189331055
    7. '<|end|>' → logprob: -4.8910322189331055
    8. ' range' → logprob: -5.2660322189331055
    9. '0' → logprob: -5.3910322189331055
    10. 'j' → logprob: -5.6410322189331055

Token 80: '~' (ID: 93)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7014985680580139
    2. '1' → logprob: -1.5764985084533691
    3. 'n' → logprob: -1.7014985084533691
    4. '0' → logprob: -3.701498508453369
    5. '<|end|>' → logprob: -4.076498508453369
    6. '2' → logprob: -4.201498508453369
    7. ' n' → logprob: -4.326498508453369
    8. '~' → logprob: -4.451498508453369
    9. ' ' → logprob: -4.826498508453369
    10. '-n' → logprob: -5.201498508453369

Token 81: ' for' (ID: 395)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.7946529984474182
    2. 'n' → logprob: -1.2946529388427734
    3. ' range' → logprob: -2.5446529388427734
    4. ' n' → logprob: -3.2946529388427734
    5. 'range' → logprob: -3.5446529388427734
    6. 'j' → logprob: -3.6696529388427734
    7. '(range' → logprob: -3.6696529388427734
    8. ' (' → logprob: -4.044652938842773
    9. ')' → logprob: -4.294652938842773
    10. '(' → logprob: -4.419652938842773

Token 82: ' +' (ID: 659)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5078577995300293
    2. '+' → logprob: -1.7578577995300293
    3. '2' → logprob: -1.7578577995300293
    4. '0' → logprob: -2.0078577995300293
    5. ' ' → logprob: -2.0078577995300293
    6. 'n' → logprob: -3.1328577995300293
    7. ' +' → logprob: -3.5078577995300293
    8. ' n' → logprob: -3.7578577995300293
    9. 'range' → logprob: -3.8828577995300293
    10. ' range' → logprob: -4.757857799530029

Token 83: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07798270881175995
    2. '2' → logprob: -2.7029826641082764
    3. ' ' → logprob: -5.2029829025268555
    4. '0' → logprob: -6.8279829025268555
    5. '(' → logprob: -7.5779829025268555
    6. '<|end|>' → logprob: -8.202982902526855
    7. '+' → logprob: -8.327982902526855
    8. '-' → logprob: -9.327982902526855
    9. 'j' → logprob: -9.702982902526855
    10. 'n' → logprob: -10.077982902526855

Token 84: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03845120966434479
    2. '<|end|>' → logprob: -4.163451194763184
    3. '):' → logprob: -5.163451194763184
    4. ':
' → logprob: -5.413451194763184
    5. ' :' → logprob: -5.913451194763184
    6. 'n' → logprob: -6.538451194763184
    7. ',' → logprob: -6.788451194763184
    8. ' ' → logprob: -7.163451194763184
    9. '   ' → logprob: -7.163451194763184
    10. ')' → logprob: -7.163451194763184

Token 85: ' so' (ID: 813)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.18743963539600372
    2. 'n' → logprob: -2.5624396800994873
    3. ' j' → logprob: -3.5624396800994873
    4. ')' → logprob: -4.312439441680908
    5. ' ' → logprob: -4.312439441680908
    6. 'j' → logprob: -4.937439441680908
    7. ' range' → logprob: -5.062439441680908
    8. '<|end|>' → logprob: -5.562439441680908
    9. 'range' → logprob: -5.687439441680908
    10. '1' → logprob: -5.687439441680908

Token 86: ' -' (ID: 533)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.6372360587120056
    2. 'j' → logprob: -1.0122361183166504
    3. ' n' → logprob: -3.6372361183166504
    4. 'n' → logprob: -3.6372361183166504
    5. 'range' → logprob: -3.7622361183166504
    6. ' range' → logprob: -3.8872361183166504
    7. ' ' → logprob: -5.51223611831665
    8. '1' → logprob: -6.51223611831665
    9. '2' → logprob: -7.13723611831665
    10. '0' → logprob: -7.26223611831665

Token 87: '~' (ID: 93)
  Prédit: '~'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '~' → logprob: -0.04016780108213425
    2. '1' → logprob: -3.790167808532715
    3. 'n' → logprob: -5.165167808532715
    4. '-' → logprob: -5.915167808532715
    5. '0' → logprob: -6.290167808532715
    6. '2' → logprob: -6.415167808532715
    7. '~-' → logprob: -6.665167808532715
    8. ' ' → logprob: -7.165167808532715
    9. ' ~' → logprob: -7.665167808532715
    10. ' n' → logprob: -7.790167808532715

Token 88: '(' (ID: 7)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.13551516830921173
    2. 'n' → logprob: -3.2605152130126953
    3. '(' → logprob: -3.3855152130126953
    4. 'j' → logprob: -3.6355152130126953
    5. '(j' → logprob: -4.010515213012695
    6. ' (' → logprob: -5.760515213012695
    7. '(
' → logprob: -6.260515213012695
    8. '1' → logprob: -6.885515213012695
    9. ')' → logprob: -7.260515213012695
    10. '2' → logprob: -7.510515213012695

Token 89: 'n' (ID: 77)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.2798956334590912
    2. 'n' → logprob: -1.5298956632614136
    3. '(' → logprob: -4.779895782470703
    4. 'j' → logprob: -5.279895782470703
    5. ' (' → logprob: -5.529895782470703
    6. ')' → logprob: -6.154895782470703
    7. ' n' → logprob: -6.279895782470703
    8. ')n' → logprob: -6.279895782470703
    9. '(j' → logprob: -7.279895782470703
    10. '2' → logprob: -7.279895782470703

Token 90: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.012163002043962479
    2. ' -' → logprob: -5.762163162231445
    3. '2' → logprob: -6.262163162231445
    4. '(' → logprob: -6.262163162231445
    5. ')' → logprob: -6.512163162231445
    6. '(n' → logprob: -6.762163162231445
    7. '1' → logprob: -6.887163162231445
    8. '(-' → logprob: -7.637163162231445
    9. '3' → logprob: -8.762163162231445
    10. 'n' → logprob: -9.262163162231445

Token 91: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.03255701810121536
    2. '3' → logprob: -4.032557010650635
    3. '1' → logprob: -4.282557010650635
    4. ' ' → logprob: -7.782557010650635
    5. '```' → logprob: -10.782557487487793
    6. '4' → logprob: -10.907557487487793
    7. ')' → logprob: -10.907557487487793
    8. '   ' → logprob: -12.782557487487793
    9. '-' → logprob: -13.345057487487793
    10. '  ' → logprob: -13.407557487487793

Token 92: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08214279264211655
    2. ')' → logprob: -2.7071428298950195
    3. '+' → logprob: -4.5821428298950195
    4. '):
' → logprob: -7.3321428298950195
    5. ')+' → logprob: -7.7071428298950195
    6. ':' → logprob: -8.33214282989502
    7. '-' → logprob: -9.33214282989502
    8. ' ):' → logprob: -9.33214282989502
    9. ')):' → logprob: -9.58214282989502
    10. '))' → logprob: -9.70714282989502

Token 93: ' is' (ID: 382)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03606841713190079
    2. '):' → logprob: -3.6610684394836426
    3. '-' → logprob: -5.661068439483643
    4. '+' → logprob: -6.161068439483643
    5. ':
' → logprob: -6.786068439483643
    6. ' -' → logprob: -7.411068439483643
    7. ')' → logprob: -7.786068439483643
    8. ' :' → logprob: -7.911068439483643
    9. '<|end|>' → logprob: -7.911068439483643
    10. '+:' → logprob: -8.661067962646484

Token 94: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.2329017072916031
    2. 'n' → logprob: -1.607901692390442
    3. '(n' → logprob: -5.357901573181152
    4. ' (' → logprob: -6.107901573181152
    5. ' range' → logprob: -8.607901573181152
    6. 'range' → logprob: -8.982901573181152
    7. ' ' → logprob: -9.482901573181152
    8. '(' → logprob: -9.732901573181152
    9. '1' → logprob: -10.607901573181152
    10. '2' → logprob: -10.857901573181152

Token 95: '-' (ID: 12)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08698010444641113
    2. '):' → logprob: -3.711980104446411
    3. '-' → logprob: -3.961980104446411
    4. ':
' → logprob: -4.336979866027832
    5. '<|end|>' → logprob: -4.336979866027832
    6. '+' → logprob: -5.211979866027832
    7. ')' → logprob: -5.461979866027832
    8. '):
' → logprob: -6.211979866027832
    9. '```' → logprob: -8.086979866027832
    10. '**' → logprob: -8.336979866027832

Token 96: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006982121616601944
    2. '2' → logprob: -5.006982326507568
    3. ' ' → logprob: -8.63198184967041
    4. '3' → logprob: -9.38198184967041
    5. '0' → logprob: -12.63198184967041
    6. '  ' → logprob: -15.81948184967041
    7. ')' → logprob: -15.88198184967041
    8. '(' → logprob: -16.506982803344727
    9. '4' → logprob: -16.881982803344727
    10. '   ' → logprob: -17.069482803344727

Token 97: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0163345336914062
    2. 'for' → logprob: -1.2663345336914062
    3. ':
' → logprob: -1.3913345336914062
    4. ' for' → logprob: -2.8913345336914062
    5. '):
' → logprob: -4.141334533691406
    6. '
' → logprob: -4.641334533691406
    7. '   ' → logprob: -4.891334533691406
    8. '<|end|>' → logprob: -5.141334533691406
    9. ')' → logprob: -5.391334533691406
    10. '):' → logprob: -6.141334533691406

Token 98: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5656772255897522
    2. ':
' → logprob: -1.5656771659851074
    3. '   ' → logprob: -1.5656771659851074
    4. '
' → logprob: -5.440677165985107
    5. '):
' → logprob: -6.065677165985107
    6. ' ' → logprob: -6.440677165985107
    7. 'n' → logprob: -6.690677165985107
    8. '<|end|>' → logprob: -6.815677165985107
    9. '):' → logprob: -7.440677165985107
    10. ',' → logprob: -7.815677165985107

Token 99: ' x' (ID: 1215)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.19279833137989044
    2. 'a' → logprob: -2.192798376083374
    3. ' u' → logprob: -3.442798376083374
    4. '   ' → logprob: -4.817798137664795
    5. 's' → logprob: -5.067798137664795
    6. 'x' (adapté à ' x') → logprob: -5.192798137664795
    7. 'i' → logprob: -5.692798137664795
    8. ' a' → logprob: -6.067798137664795
    9. 'p' → logprob: -6.442798137664795
    10. 'l' → logprob: -6.942798137664795

Token 100: '0' (ID: 15)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02374677173793316
    2. ',y' → logprob: -3.7737467288970947
    3. ' ,' → logprob: -8.648746490478516
    4. ',x' → logprob: -8.898746490478516
    5. '=' → logprob: -9.898746490478516
    6. ' =' → logprob: -10.398746490478516
    7. '_,' → logprob: -10.898746490478516
    8. ',k' → logprob: -11.273746490478516
    9. ',input' → logprob: -11.523746490478516
    10. ',j' → logprob: -11.523746490478516

Token 101: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0024529455695301294
    2. ',y' → logprob: -6.502452850341797
    3. ' ,' → logprob: -7.127452850341797
    4. ',x' → logprob: -9.252452850341797
    5. ',j' → logprob: -10.877452850341797
    6. ' =' → logprob: -11.627452850341797
    7. '=' → logprob: -11.752452850341797
    8. '_,' → logprob: -12.502452850341797
    9. ' ' → logprob: -12.752452850341797
    10. ',n' → logprob: -12.877452850341797

Token 102: ' y' (ID: 342)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.033879198133945465
    2. 'y' → logprob: -3.408879280090332
    3. ' x' → logprob: -9.033879280090332
    4. ' y' → logprob: -9.158879280090332
    5. '<|end|>' → logprob: -12.783879280090332
    6. ' ' → logprob: -13.658879280090332
    7. 'a' → logprob: -14.158879280090332
    8. 'Y' → logprob: -14.658879280090332
    9. '*x' → logprob: -14.908879280090332
    10. 'v' → logprob: -15.033879280090332

Token 103: '0' (ID: 15)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.46104398369789124
    2. '0' → logprob: -1.4610439538955688
    3. ' =' → logprob: -2.3360440731048584
    4. ',' → logprob: -3.2110440731048584
    5. ',x' → logprob: -9.086044311523438
    6. '1' → logprob: -9.586044311523438
    7. '_' → logprob: -10.711044311523438
    8. '=int' → logprob: -10.711044311523438
    9. ' ,' → logprob: -10.961044311523438
    10. 'x' → logprob: -11.086044311523438

Token 104: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10119497030973434
    2. ' =' → logprob: -2.3511948585510254
    3. ',' → logprob: -6.976194858551025
    4. '=input' → logprob: -10.101195335388184
    5. 'x' → logprob: -11.976195335388184
    6. ',x' → logprob: -13.101195335388184
    7. '=int' → logprob: -13.351195335388184
    8. ' ' → logprob: -14.601195335388184
    9. '=x' → logprob: -14.976195335388184
    10. ')' → logprob: -14.976195335388184

Token 105: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.20141801238059998
    2. ' map' → logprob: -1.7014180421829224
    3. '   ' → logprob: -13.076417922973633
    4. 'int' → logprob: -14.076417922973633
    5. '	map' → logprob: -14.201417922973633
    6. ' ' → logprob: -14.701417922973633
    7. 'input' → logprob: -14.701417922973633
    8. '  ' → logprob: -15.951417922973633
    9. ' input' → logprob: -16.826417922973633
    10. '[' → logprob: -17.201417922973633

Token 106: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -3.1782583391759545e-05
    2. 'int' → logprob: -10.875031471252441
    3. '(input' → logprob: -12.125031471252441
    4. '(' → logprob: -12.250031471252441
    5. '<int' → logprob: -13.750031471252441
    6. '[int' → logprob: -14.125031471252441
    7. '=int' → logprob: -15.000031471252441
    8. ',int' → logprob: -15.500031471252441
    9. '```' → logprob: -16.625032424926758
    10. ' int' → logprob: -16.875032424926758

Token 107: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.40374672412872314
    2. ',' → logprob: -1.1537467241287231
    3. '(input' → logprob: -4.153746604919434
    4. 'input' → logprob: -6.903746604919434
    5. '(' → logprob: -11.403746604919434
    6. '=input' → logprob: -12.278746604919434
    7. ' ,' → logprob: -12.903746604919434
    8. ')' → logprob: -13.528746604919434
    9. ' input' → logprob: -13.778746604919434
    10. '```' → logprob: -14.028746604919434

Token 108: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.12693022191524506
    2. ' input' → logprob: -2.1269302368164062
    3. '(input' → logprob: -13.751930236816406
    4. ',input' → logprob: -14.876930236816406
    5. ')' → logprob: -15.376930236816406
    6. '=input' → logprob: -15.501930236816406
    7. ' ' → logprob: -15.876930236816406
    8. '[input' → logprob: -16.251930236816406
    9. '	input' → logprob: -16.501930236816406
    10. '   ' → logprob: -18.251930236816406

Token 109: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.531315314830863e-06
    2. '()' → logprob: -12.875003814697266
    3. ')' → logprob: -14.750003814697266
    4. ' ().' → logprob: -15.125003814697266
    5. '())' → logprob: -16.250003814697266
    6. '.' → logprob: -16.875003814697266
    7. '().__' → logprob: -18.250003814697266
    8. ').' → logprob: -18.625003814697266
    9. '>().' → logprob: -18.625003814697266
    10. '()
' → logprob: -18.875003814697266

Token 110: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -7.896309739408025e-07
    2. 'strip' → logprob: -14.500000953674316
    3. ' split' → logprob: -16.375
    4. 'spl' → logprob: -17.125
    5. '(split' → logprob: -17.125
    6. 'rstrip' → logprob: -19.5
    7. 'read' → logprob: -21.25
    8. 's' → logprob: -21.5
    9. '_split' → logprob: -21.625
    10. '.split' → logprob: -22.25

Token 111: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.03126729279756546
    2. ')' → logprob: -3.5312674045562744
    3. '()' → logprob: -7.156267166137695
    4. '())
' → logprob: -7.281267166137695
    5. '(' → logprob: -11.406267166137695
    6. ' ())' → logprob: -11.781267166137695
    7. ')
' → logprob: -12.156267166137695
    8. '()))' → logprob: -12.406267166137695
    9. '())

' → logprob: -12.656267166137695
    10. '();)' → logprob: -13.031267166137695

Token 112: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016429981216788292
    2. 'G' → logprob: -4.641429901123047
    3. '<|end|>' → logprob: -5.266429901123047
    4. ' G' → logprob: -7.391429901123047
    5. ')' → logprob: -8.641429901123047
    6. '
' → logprob: -8.766429901123047
    7. '  ' → logprob: -9.141429901123047
    8. '    
' → logprob: -9.266429901123047
    9. 'x' → logprob: -10.016429901123047
    10. '	G' → logprob: -10.266429901123047

Token 113: ' for' (ID: 395)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.01697685942053795
    2. '   ' → logprob: -4.516976833343506
    3. ' G' → logprob: -5.391976833343506
    4. 'x' → logprob: -6.891976833343506
    5. '<|end|>' → logprob: -8.391977310180664
    6. ')' → logprob: -10.516977310180664
    7. 'B' → logprob: -11.141977310180664
    8. 'A' → logprob: -11.141977310180664
    9. '#' → logprob: -11.516977310180664
    10. '	G' → logprob: -11.891977310180664

Token 114: ' u' (ID: 337)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -1.0576756000518799
    2. ' i' → logprob: -1.3076756000518799
    3. ' x' → logprob: -2.43267560005188
    4. 'k' → logprob: -2.80767560005188
    5. ' v' → logprob: -2.93267560005188
    6. 'i' → logprob: -3.55767560005188
    7. ' u' → logprob: -3.80767560005188
    8. 'x' → logprob: -4.057675361633301
    9. ' z' → logprob: -4.307675361633301
    10. ' y' → logprob: -4.432675361633301

Token 115: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.638460636138916
    2. 'in' → logprob: -0.763460636138916
    3. ',' → logprob: -5.263460636138916
    4. '0' → logprob: -8.763460159301758
    5. ' ,' → logprob: -9.013460159301758
    6. ' ' → logprob: -9.638460159301758
    7. 'x' → logprob: -9.763460159301758
    8. ',x' → logprob: -9.763460159301758
    9. ')' → logprob: -10.013460159301758
    10. ',u' → logprob: -10.138460159301758

Token 116: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.019144849851727486
    2. ' v' → logprob: -4.0191450119018555
    3. 'w' → logprob: -7.7691450119018555
    4. '(v' → logprob: -9.144145011901855
    5. 'u' → logprob: -9.269145011901855
    6. 'x' → logprob: -9.269145011901855
    7. ' ' → logprob: -10.519145011901855
    8. '   ' → logprob: -10.644145011901855
    9. 'y' → logprob: -10.769145011901855
    10. '

' → logprob: -10.894145011901855

Token 117: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2523972988128662
    2. 'in' → logprob: -1.5023972988128662
    3. ',' → logprob: -8.877397537231445
    4. ' ' → logprob: -9.252397537231445
    5. ' =' → logprob: -9.627397537231445
    6. '=' → logprob: -9.752397537231445
    7. ')' → logprob: -10.377397537231445
    8. '   ' → logprob: -10.627397537231445
    9. '  ' → logprob: -12.002397537231445
    10. '_in' → logprob: -12.002397537231445

Token 118: ' ((' (ID: 3536)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.342146098613739
    2. '((' → logprob: -1.5921461582183838
    3. ' [(' → logprob: -2.842146158218384
    4. ' ((' → logprob: -3.967146158218384
    5. '(x' → logprob: -5.092145919799805
    6. ' (' → logprob: -6.217145919799805
    7. ' zip' → logprob: -7.967145919799805
    8. '([(' → logprob: -8.717145919799805
    9. '[x' → logprob: -9.092145919799805
    10. '(' → logprob: -9.592145919799805

Token 119: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.1474137008190155
    2. '(x' → logprob: -2.022413730621338
    3. '0' → logprob: -6.397413730621338
    4. ' x' → logprob: -6.522413730621338
    5. ' (' → logprob: -7.522413730621338
    6. '(' → logprob: -7.772413730621338
    7. '   ' → logprob: -7.897413730621338
    8. 'j' → logprob: -9.64741325378418
    9. ',x' → logprob: -9.89741325378418
    10. '(j' → logprob: -10.14741325378418

Token 120: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.143808109802194e-05
    2. ',' → logprob: -10.500041007995605
    3. '-' → logprob: -11.625041007995605
    4. ',j' → logprob: -13.500041007995605
    5. ' -' → logprob: -13.750041007995605
    6. ' ,' → logprob: -14.250041007995605
    7. ' ' → logprob: -14.875041007995605
    8. '_,' → logprob: -15.125041007995605
    9. ',y' → logprob: -15.250041007995605
    10. '
' → logprob: -16.125041961669922

Token 121: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0812457948923111
    2. '-' → logprob: -2.7062458992004395
    3. '0' → logprob: -5.2062458992004395
    4. ' -' → logprob: -5.4562458992004395
    5. ',y' → logprob: -7.3312458992004395
    6. ' ,' → logprob: -7.3312458992004395
    7. ',u' → logprob: -9.956245422363281
    8. '   ' → logprob: -10.081245422363281
    9. ',v' → logprob: -10.956245422363281
    10. '+' → logprob: -11.331245422363281

Token 122: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.04317525401711464
    2. ' y' → logprob: -3.168175220489502
    3. ' ' → logprob: -10.04317569732666
    4. '   ' → logprob: -10.04317569732666
    5. 'x' → logprob: -10.41817569732666
    6. '  ' → logprob: -11.04317569732666
    7. '    ' → logprob: -11.16817569732666
    8. '0' → logprob: -11.41817569732666
    9. 'u' → logprob: -12.98067569732666
    10. '	y' → logprob: -13.23067569732666

Token 123: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002482553943991661
    2. '),' → logprob: -6.5024824142456055
    3. '1' → logprob: -7.0024824142456055
    4. '),(' → logprob: -10.627482414245605
    5. 'u' → logprob: -11.377482414245605
    6. '[u' → logprob: -11.502482414245605
    7. 'o' → logprob: -12.377482414245605
    8. '[' → logprob: -12.502482414245605
    9. '   ' → logprob: -12.877482414245605
    10. '-' → logprob: -12.877482414245605

Token 124: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.06177550181746483
    2. '),(' → logprob: -2.9367754459381104
    3. ' ),' → logprob: -5.3117756843566895
    4. '),
' → logprob: -6.5617756843566895
    5. '))' → logprob: -9.311775207519531
    6. '-' → logprob: -9.311775207519531
    7. '   ' → logprob: -9.936775207519531
    8. ')),' → logprob: -9.936775207519531
    9. ')' → logprob: -9.936775207519531
    10. '):' → logprob: -10.311775207519531

Token 125: ' (' (ID: 350)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.07565110176801682
    2. ' (' → logprob: -2.700651168823242
    3. '(y' → logprob: -5.200651168823242
    4. '(' → logprob: -9.575651168823242
    5. '(x' → logprob: -9.700651168823242
    6. '   ' → logprob: -10.450651168823242
    7. 'v' → logprob: -11.575651168823242
    8. '((' → logprob: -12.450651168823242
    9. ' v' → logprob: -12.950651168823242
    10. '(u' → logprob: -13.075651168823242

Token 126: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.11679692566394806
    2. ' y' → logprob: -2.3667969703674316
    3. 'v' → logprob: -4.116796970367432
    4. ' v' → logprob: -8.866796493530273
    5. ' ' → logprob: -12.366796493530273
    6. 'x' → logprob: -12.491796493530273
    7. '   ' → logprob: -12.991796493530273
    8. '(y' → logprob: -13.991796493530273
    9. '	y' → logprob: -14.241796493530273
    10. '  ' → logprob: -14.491796493530273

Token 127: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.228561349213123e-05
    2. ',' → logprob: -9.875052452087402
    3. 'u' → logprob: -15.250052452087402
    4. ' ,' → logprob: -16.375051498413086
    5. '_,' → logprob: -16.625051498413086
    6. '۰' → logprob: -16.625051498413086
    7. '_' → logprob: -16.750051498413086
    8. ' ' → logprob: -16.750051498413086
    9. '[' → logprob: -17.125051498413086
    10. 'o' → logprob: -17.250051498413086

Token 128: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005202664178796113
    2. ',x' → logprob: -7.7505202293396
    3. 'x' → logprob: -9.875520706176758
    4. ' ,' → logprob: -10.750520706176758
    5. '0' → logprob: -11.125520706176758
    6. ' x' → logprob: -14.125520706176758
    7. '),' → logprob: -15.125520706176758
    8. ',
' → logprob: -15.250520706176758
    9. '1' → logprob: -16.250520706176758
    10. 'u' → logprob: -16.250520706176758

Token 129: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0011709370883181691
    2. ' x' → logprob: -6.751171112060547
    3. ' ' → logprob: -15.001171112060547
    4. 'u' → logprob: -15.876171112060547
    5. ')x' → logprob: -16.126171112060547
    6. '   ' → logprob: -17.001171112060547
    7. '	x' → logprob: -17.251171112060547
    8. ')' → logprob: -17.626171112060547
    9. '0' → logprob: -17.751171112060547
    10. '  ' → logprob: -18.001171112060547

Token 130: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.981667537620524e-06
    2. '_' → logprob: -14.000001907348633
    3. 'u' → logprob: -14.125001907348633
    4. 'o' → logprob: -16.250001907348633
    5. ')' → logprob: -16.500001907348633
    6. '))' → logprob: -17.500001907348633
    7. ',' → logprob: -17.500001907348633
    8. '```' → logprob: -17.500001907348633
    9. ' ' → logprob: -17.875001907348633
    10. '[' → logprob: -17.875001907348633

Token 131: ')):
' (ID: 22530)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.0948793888092041
    2. '):' → logprob: -2.844879388809204
    3. ')):
' → logprob: -3.969879388809204
    4. '))' → logprob: -4.469879150390625
    5. ')' → logprob: -6.969879150390625
    6. '):
' → logprob: -7.469879150390625
    7. '),' → logprob: -8.094879150390625
    8. ')):
' → logprob: -9.219879150390625
    9. '):

' → logprob: -10.594879150390625
    10. ')}' → logprob: -10.719879150390625

Token 132: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008387615904211998
    2. ':' → logprob: -5.758387565612793
    3. ' G' → logprob: -6.258387565612793
    4. 'G' → logprob: -7.133387565612793
    5. '   ' → logprob: -7.258387565612793
    6. '<|end|>' → logprob: -8.258387565612793
    7. ',' → logprob: -8.633387565612793
    8. '):
' → logprob: -8.758387565612793
    9. '):' → logprob: -8.883387565612793
    10. '	' → logprob: -8.883387565612793

Token 133: ' G' (ID: 499)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' (adapté à ' G') → logprob: -0.07940710335969925
    2. ' G' → logprob: -2.579407215118408
    3. '   ' → logprob: -8.45440673828125
    4. '           ' → logprob: -8.82940673828125
    5. '	G' → logprob: -9.45440673828125
    6. '       ' → logprob: -10.07940673828125
    7. ' ' → logprob: -11.07940673828125
    8. ' ' → logprob: -12.20440673828125
    9. ' if' → logprob: -12.82940673828125
    10. 'if' → logprob: -12.95440673828125

Token 134: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.01005212590098381
    2. '[G' → logprob: -5.13505220413208
    3. '[v' → logprob: -5.51005220413208
    4. '[' → logprob: -10.135051727294922
    5. '[x' → logprob: -10.885051727294922
    6. '[g' → logprob: -13.260051727294922
    7. 'G' → logprob: -13.635051727294922
    8. '[k' → logprob: -13.885051727294922
    9. '.setdefault' → logprob: -14.135051727294922
    10. '[I' → logprob: -14.385051727294922

Token 135: '-' (ID: 12)
  Prédit: '].'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0014601160073652864
    2. '][' → logprob: -7.126460075378418
    3. ']' → logprob: -8.251460075378418
    4. '[u' → logprob: -8.251460075378418
    5. ' ].' → logprob: -9.501460075378418
    6. ']).' → logprob: -11.001460075378418
    7. ').' → logprob: -11.001460075378418
    8. '[' → logprob: -11.626460075378418
    9. '.append' → logprob: -12.626460075378418
    10. '   ' → logprob: -12.626460075378418

Token 136: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.107425062713446e-06
    2. ' ' → logprob: -12.000006675720215
    3. '<|end|>' → logprob: -15.000006675720215
    4. ')' → logprob: -16.00000762939453
    5. '0' → logprob: -16.50000762939453
    6. '2' → logprob: -16.62500762939453
    7. '```' → logprob: -16.62500762939453
    8. ']' → logprob: -16.87500762939453
    9. ',' → logprob: -17.00000762939453
    10. '   ' → logprob: -17.00000762939453

Token 137: ']' (ID: 60)
  Prédit: '].'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.010030055418610573
    2. ').' → logprob: -4.635030269622803
    3. '.append' → logprob: -9.135029792785645
    4. ']' → logprob: -9.260029792785645
    5. ']).' → logprob: -10.385029792785645
    6. ')].' → logprob: -11.010029792785645
    7. ' ].' → logprob: -11.135029792785645
    8. '.' → logprob: -13.010029792785645
    9. ''].' → logprob: -13.385029792785645
    10. ')' → logprob: -13.510029792785645

Token 138: ' +=' (ID: 2757)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.2054101973772049
    2. '].' → logprob: -1.7054102420806885
    3. '.' → logprob: -5.830410003662109
    4. ').' → logprob: -7.080410003662109
    5. '.setdefault' → logprob: -9.08041000366211
    6. ' .' → logprob: -10.08041000366211
    7. '}.' → logprob: -10.70541000366211
    8. ']' → logprob: -11.33041000366211
    9. '   ' → logprob: -12.70541000366211
    10. '.add' → logprob: -12.95541000366211

Token 139: ' [' (ID: 723)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.05102438107132912
    2. ' [' → logprob: -3.0510244369506836
    3. '[' → logprob: -6.176024436950684
    4. '[u' → logprob: -8.051024436950684
    5. ' v' → logprob: -10.801024436950684
    6. 'v' → logprob: -12.176024436950684
    7. '[j' → logprob: -12.926024436950684
    8. ' ' → logprob: -13.176024436950684
    9. '[x' → logprob: -13.551024436950684
    10. '[f' → logprob: -13.551024436950684

Token 140: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.6047699318733066e-05
    2. ' v' → logprob: -11.125016212463379
    3. '(v' → logprob: -14.500016212463379
    4. '   ' → logprob: -15.125016212463379
    5. '[v' → logprob: -15.875016212463379
    6. '	v' → logprob: -15.875016212463379
    7. '
' → logprob: -16.500015258789062
    8. ')v' → logprob: -16.750015258789062
    9. ' ' → logprob: -18.750015258789062
    10. '  ' → logprob: -19.250015258789062

Token 141: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0059310514479875565
    2. ' -' → logprob: -5.1309309005737305
    3. ']' → logprob: -13.88093090057373
    4. '1' → logprob: -14.00593090057373
    5. '[' → logprob: -15.50593090057373
    6. ' ' → logprob: -15.50593090057373
    7. '   ' → logprob: -15.63093090057373
    8. ']-' → logprob: -16.505931854248047
    9. ')' → logprob: -17.255931854248047
    10. '0' → logprob: -17.380931854248047

Token 142: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001370320824207738
    2. ' ' → logprob: -9.250137329101562
    3. ']' → logprob: -10.250137329101562
    4. '-' → logprob: -14.312637329101562
    5. ')' → logprob: -14.625137329101562
    6. '2' → logprob: -14.687637329101562
    7. ',' → logprob: -14.875137329101562
    8. '```' → logprob: -14.875137329101562
    9. '11' → logprob: -15.125137329101562
    10. ' ]' → logprob: -15.312637329101562

Token 143: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.000356199947418645
    2. ' ]' → logprob: -8.125356674194336
    3. ',' → logprob: -11.000356674194336
    4. ')]' → logprob: -11.250356674194336
    5. ']
' → logprob: -11.250356674194336
    6. '   ' → logprob: -12.375356674194336
    7. ']}' → logprob: -12.625356674194336
    8. '<|end|>' → logprob: -12.750356674194336
    9. ')' → logprob: -12.875356674194336
    10. '}' → logprob: -14.375356674194336

Token 144: 'MAG' (ID: 135115)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.8563182950019836
    2. 'dp' → logprob: -1.1063182353973389
    3. 'Q' → logprob: -3.231318235397339
    4. 'q' → logprob: -3.481318235397339
    5. 'visited' → logprob: -3.606318235397339
    6. 'd' → logprob: -3.731318235397339
    7. 'A' → logprob: -4.106318473815918
    8. 'for' → logprob: -4.356318473815918
    9. 'import' → logprob: -4.606318473815918
    10. 'depth' → logprob: -4.731318473815918

Token 145: 'IC' (ID: 2022)
  Prédit: 'IC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IC' → logprob: -0.004514969885349274
    2. 'I' → logprob: -6.129515171051025
    3. 'A' → logprob: -6.754515171051025
    4. 'N' → logprob: -7.754515171051025
    5. 'C' → logprob: -8.879514694213867
    6. ' =' → logprob: -9.504514694213867
    7. '1' → logprob: -9.629514694213867
    8. '0' → logprob: -9.629514694213867
    9. 'ic' → logprob: -10.379514694213867
    10. 'ENTA' → logprob: -10.504514694213867

Token 146: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1072281077504158
    2. '=' → logprob: -2.6072280406951904
    3. '_NUMBER' → logprob: -4.3572282791137695
    4. 'NUMBER' → logprob: -5.9822282791137695
    5. ',' → logprob: -6.7322282791137695
    6. 'NUM' → logprob: -6.9822282791137695
    7. 'S' → logprob: -7.1072282791137695
    8. '_CONST' → logprob: -7.4822282791137695
    9. 'MAG' → logprob: -7.4822282791137695
    10. '_NUM' → logprob: -7.6072282791137695

Token 147: ' (' (ID: 350)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.1679694652557373
    2. '100' → logprob: -2.7929694652557373
    3. 'float' → logprob: -4.167969703674316
    4. '1' → logprob: -4.542969703674316
    5. 'n' → logprob: -4.792969703674316
    6. '999' → logprob: -5.167969703674316
    7. ' ' → logprob: -5.292969703674316
    8. '-' → logprob: -5.292969703674316
    9. '2' → logprob: -5.292969703674316
    10. '998' → logprob: -5.792969703674316

Token 148: '2' (ID: 17)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.5020661950111389
    2. '1' → logprob: -1.2520661354064941
    3. '2' → logprob: -3.627066135406494
    4. 'n' → logprob: -3.752066135406494
    5. '3' → logprob: -4.752066135406494
    6. '100' → logprob: -4.752066135406494
    7. '-' → logprob: -4.877066135406494
    8. '0' → logprob: -5.252066135406494
    9. '(' → logprob: -6.002066135406494
    10. 'int' → logprob: -6.252066135406494

Token 149: ' <<' (ID: 2256)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.12832488119602203
    2. ' **' → logprob: -2.3783249855041504
    3. '<<' → logprob: -5.25332498550415
    4. '*' → logprob: -5.25332498550415
    5. ' <<' → logprob: -5.50332498550415
    6. ' *' → logprob: -5.50332498550415
    7. '*n' → logprob: -6.00332498550415
    8. '0' → logprob: -6.37832498550415
    9. ')' → logprob: -7.12832498550415
    10. '5' → logprob: -7.87832498550415

Token 150: ' ' (ID: 220)
  Prédit: '19'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '19' → logprob: -0.9019280076026917
    2. '20' → logprob: -1.4019279479980469
    3. '18' → logprob: -2.276927947998047
    4. '29' → logprob: -3.026927947998047
    5. '17' → logprob: -3.651927947998047
    6. '16' → logprob: -3.651927947998047
    7. '30' → logprob: -3.901927947998047
    8. '21' → logprob: -4.026927947998047
    9. '22' → logprob: -4.026927947998047
    10. '15' → logprob: -4.401927947998047

Token 151: '33' (ID: 2546)
  Prédit: '20'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '20' → logprob: -1.3120332956314087
    2. '19' → logprob: -1.3120332956314087
    3. '18' → logprob: -1.8120332956314087
    4. '17' → logprob: -2.812033176422119
    5. '30' → logprob: -3.062033176422119
    6. '29' → logprob: -3.187033176422119
    7. '16' → logprob: -3.312033176422119
    8. '15' → logprob: -3.812033176422119
    9. '10' → logprob: -4.437033176422119
    10. '21' → logprob: -4.437033176422119

Token 152: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011069044470787048
    2. ')-' → logprob: -4.636068820953369
    3. ' )' → logprob: -7.511068820953369
    4. '-' → logprob: -8.011069297790527
    5. ')+' → logprob: -8.011069297790527
    6. '1' → logprob: -10.636069297790527
    7. ')
' → logprob: -11.386069297790527
    8. '7' → logprob: -11.761069297790527
    9. '3' → logprob: -11.761069297790527
    10. '0' → logprob: -12.261069297790527

Token 153: ' ' (ID: 220)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3494901955127716
    2. '-' → logprob: -2.974490165710449
    3. ' +' → logprob: -3.349490165710449
    4. '**' → logprob: -3.599490165710449
    5. ' ' → logprob: -3.599490165710449
    6. '36' → logprob: -3.599490165710449
    7. '4' → logprob: -4.349490165710449
    8. '7' → logprob: -4.349490165710449
    9. '3' → logprob: -4.474490165710449
    10. ' -' → logprob: -4.724490165710449

Token 154: ' #' (ID: 1069)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7464492917060852
    2. '-' → logprob: -0.7464492917060852
    3. ' -' → logprob: -3.6214492321014404
    4. '#' → logprob: -4.8714494705200195
    5. ' +' → logprob: -5.2464494705200195
    6. '<|end|>' → logprob: -6.2464494705200195
    7. ')' → logprob: -6.4964494705200195
    8. '
' → logprob: -6.8714494705200195
    9. 'def' → logprob: -6.8714494705200195
    10. ' ' → logprob: -7.2464494705200195

Token 155: ' an' (ID: 448)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.40859726071357727
    2. '<|end|>' → logprob: -2.033597230911255
    3. '0' → logprob: -3.658597230911255
    4. '32' → logprob: -3.783597230911255
    5. '-' → logprob: -3.908597230911255
    6. '#' → logprob: -4.033597469329834
    7. 'n' → logprob: -4.158597469329834
    8. ')' → logprob: -4.533597469329834
    9. '2' → logprob: -4.658597469329834
    10. '1' → logprob: -4.783597469329834

Token 156: ' unnecessarily' (ID: 169842)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.9827146530151367
    2. '=' → logprob: -1.3577146530151367
    3. 'n' → logprob: -1.9827146530151367
    4. ' =' → logprob: -2.6077146530151367
    5. 't' → logprob: -3.3577146530151367
    6. ' int' → logprob: -3.8577146530151367
    7. '<<' → logprob: -4.107714653015137
    8. 'swer' → logprob: -4.232714653015137
    9. 'int' → logprob: -4.357714653015137
    10. '=int' → logprob: -4.982714653015137

Token 157: ' weird' (ID: 28783)
  Prédit: 'large'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'large' → logprob: -0.010646767914295197
    2. ' large' → logprob: -4.635646820068359
    3. 'high' → logprob: -8.51064682006836
    4. 'hu' → logprob: -8.63564682006836
    5. '**' → logprob: -8.76064682006836
    6. 'big' → logprob: -8.76064682006836
    7. '*' → logprob: -10.63564682006836
    8. '<<' → logprob: -10.88564682006836
    9. 'over' → logprob: -11.26064682006836
    10. '1' → logprob: -11.51064682006836

Token 158: ' way' (ID: 2006)
  Prédit: ' number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' number' → logprob: -1.593888521194458
    2. 'number' → logprob: -1.968888521194458
    3. 'shift' → logprob: -2.218888521194458
    4. '1' → logprob: -2.593888521194458
    5. '**' → logprob: -2.968888521194458
    6. ' shift' → logprob: -3.343888521194458
    7. 'constant' → logprob: -3.343888521194458
    8. '+' → logprob: -3.468888521194458
    9. ' expression' → logprob: -3.718888521194458
    10. '```' → logprob: -3.843888521194458

Token 159: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.4234567880630493
    2. 'to' → logprob: -1.9234567880630493
    3. '-' → logprob: -3.0484566688537598
    4. '**' → logprob: -3.1734566688537598
    5. '+' → logprob: -3.4234566688537598
    6. ')' → logprob: -3.7984566688537598
    7. '#' → logprob: -4.17345666885376
    8. '=' → logprob: -4.67345666885376
    9. ' of' → logprob: -5.04845666885376
    10. ' ' → logprob: -5.42345666885376

Token 160: ' define' (ID: 13174)
  Prédit: 'define'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'define' → logprob: -0.43934327363967896
    2. 'write' → logprob: -1.4393432140350342
    3. 'express' → logprob: -2.814343214035034
    4. 'set' → logprob: -3.564343214035034
    5. 'represent' → logprob: -3.939343214035034
    6. 'get' → logprob: -5.564343452453613
    7. 'declare' → logprob: -6.689343452453613
    8. 'make' → logprob: -7.439343452453613
    9. 'calculate' → logprob: -7.564343452453613
    10. 'shift' → logprob: -7.689343452453613

Token 161: ' a' (ID: 261)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.352253258228302
    2. '858' → logprob: -2.2272531986236572
    3. '2' → logprob: -2.7272531986236572
    4. '429' → logprob: -3.3522531986236572
    5. 'int' → logprob: -3.6022531986236572
    6. 'MAG' → logprob: -3.6022531986236572
    7. 'pow' → logprob: -5.227253437042236
    8. 'INT' → logprob: -5.727253437042236
    9. 'a' → logprob: -5.977253437042236
    10. '1' → logprob: -5.977253437042236

Token 162: ' large' (ID: 4410)
  Prédit: 'MAG'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MAG' → logprob: -1.144738793373108
    2. 'value' → logprob: -1.644738793373108
    3. 'magic' → logprob: -1.769738793373108
    4. 'large' → logprob: -2.0197386741638184
    5. 'int' → logprob: -3.2697386741638184
    6. 'pow' → logprob: -3.5197386741638184
    7. 'INT' → logprob: -4.644738674163818
    8. '858' → logprob: -4.644738674163818
    9. 'number' → logprob: -4.644738674163818
    10. '343' → logprob: -4.769738674163818

Token 163: ' "' (ID: 392)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'number' → logprob: -0.2586529850959778
    2. ' number' → logprob: -1.508652925491333
    3. 'integer' → logprob: -5.508653163909912
    4. 'int' → logprob: -6.758653163909912
    5. ' integer' → logprob: -8.008652687072754
    6. 'constant' → logprob: -8.133652687072754
    7. '```' → logprob: -8.508652687072754
    8. '_number' → logprob: -8.508652687072754
    9. 'value' → logprob: -8.883652687072754
    10. 'NUMBER' → logprob: -9.133652687072754

Token 164: 'inf' (ID: 22226)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'number' → logprob: -0.03344258666038513
    2. 'int' → logprob: -4.158442497253418
    3. 'constant' → logprob: -5.658442497253418
    4. 'integer' → logprob: -5.783442497253418
    5. 'NUMBER' → logprob: -6.283442497253418
    6. 'INF' → logprob: -6.408442497253418
    7. 'prime' → logprob: -6.783442497253418
    8. 'INT' → logprob: -6.908442497253418
    9. ' number' → logprob: -6.908442497253418
    10. 'value' → logprob: -7.283442497253418

Token 165: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.4612927734851837
    2. 'inity' → logprob: -1.5862927436828613
    3. ')' → logprob: -2.8362927436828613
    4. '")' → logprob: -3.5862927436828613
    5. 'inty' → logprob: -3.7112927436828613
    6. '```' → logprob: -3.9612927436828613
    7. '=' → logprob: -5.086292743682861
    8. 'int' → logprob: -5.086292743682861
    9. ' =' → logprob: -5.336292743682861
    10. '">' → logprob: -5.461292743682861

Token 166: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6304501295089722
    2. 'INF' → logprob: -1.7554501295089722
    3. 'DP' → logprob: -2.1304502487182617
    4. 'dist' → logprob: -2.2554502487182617
    5. 'def' → logprob: -4.130450248718262
    6. 'D' → logprob: -4.505450248718262
    7. 'MAG' → logprob: -5.505450248718262
    8. 'Q' → logprob: -5.505450248718262
    9. 'inf' → logprob: -5.630450248718262
    10. 'MOD' → logprob: -6.005450248718262

Token 167: '_row' (ID: 19157)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026706863194704056
    2. '=' → logprob: -3.6517069339752197
    3. '_' → logprob: -8.52670669555664
    4. ' ' → logprob: -8.77670669555664
    5. '[' → logprob: -10.40170669555664
    6. '  ' → logprob: -12.65170669555664
    7. '0' → logprob: -12.65170669555664
    8. '   ' → logprob: -13.15170669555664
    9. ',' → logprob: -13.27670669555664
    10. '.' → logprob: -13.40170669555664

Token 168: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07944278419017792
    2. '=' → logprob: -2.5794427394866943
    3. '0' → logprob: -8.329442977905273
    4. 's' → logprob: -8.704442977905273
    5. ' ' → logprob: -9.954442977905273
    6. '_' → logprob: -10.329442977905273
    7. '[' → logprob: -10.954442977905273
    8. ',' → logprob: -11.204442977905273
    9. '=[' → logprob: -11.579442977905273
    10. '1' → logprob: -12.079442977905273

Token 169: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1390058696269989
    2. '[-' → logprob: -3.0140058994293213
    3. '[n' → logprob: -3.1390058994293213
    4. ' [' → logprob: -3.8890058994293213
    5. '[M' → logprob: -4.514005661010742
    6. '[A' → logprob: -5.889005661010742
    7. '{' → logprob: -7.264005661010742
    8. ' [-' → logprob: -7.264005661010742
    9. '[[' → logprob: -7.389005661010742
    10. '[(' → logprob: -8.139005661010742

Token 170: 'MAG' (ID: 135115)
  Prédit: 'MAG'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MAG' → logprob: -0.5973243117332458
    2. '-M' → logprob: -1.3473243713378906
    3. '-' → logprob: -1.8473243713378906
    4. '0' → logprob: -3.8473243713378906
    5. 'float' → logprob: -4.847324371337891
    6. '[-' → logprob: -7.472324371337891
    7. 'None' → logprob: -8.09732437133789
    8. 'False' → logprob: -8.09732437133789
    9. '-(' → logprob: -8.09732437133789
    10. '(-' → logprob: -8.47232437133789

Token 171: 'IC' (ID: 2022)
  Prédit: 'IC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IC' → logprob: -1.2664456789934775e-06
    2. 'I' → logprob: -14.375000953674316
    3. 'C' → logprob: -16.000001907348633
    4. '1' → logprob: -16.250001907348633
    5. '

' → logprob: -16.500001907348633
    6. '!' → logprob: -16.500001907348633
    7. 'IG' → logprob: -16.625001907348633
    8. '
' → logprob: -17.000001907348633
    9. 'ICY' → logprob: -17.875001907348633
    10. '   ' → logprob: -18.000001907348633

Token 172: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0038975838106125593
    2. ']*' → logprob: -6.003897666931152
    3. ' for' → logprob: -7.503897666931152
    4. ']*(' → logprob: -7.878897666931152
    5. '+' → logprob: -8.378897666931152
    6. ' ]' → logprob: -9.003897666931152
    7. 'for' → logprob: -9.753897666931152
    8. ']+' → logprob: -10.378897666931152
    9. ' +' → logprob: -10.628897666931152
    10. ',' → logprob: -12.628897666931152

Token 173: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.45560070872306824
    2. ' for' → logprob: -2.7056007385253906
    3. ' *' → logprob: -2.9556007385253906
    4. '*' → logprob: -2.9556007385253906
    5. 'for' → logprob: -3.0806007385253906
    6. ',' → logprob: -3.3306007385253906
    7. '+' → logprob: -3.5806007385253906
    8. '<|end|>' → logprob: -3.9556007385253906
    9. '[' → logprob: -4.080600738525391
    10. ' ]' → logprob: -4.205600738525391

Token 174: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4208195209503174
    2. '(n' → logprob: -1.1708195209503174
    3. '(' → logprob: -3.5458195209503174
    4. ' (' → logprob: -6.045819282531738
    5. ' n' → logprob: -6.920819282531738
    6. '(M' → logprob: -7.920819282531738
    7. '(m' → logprob: -9.170819282531738
    8. '100' → logprob: -9.670819282531738
    9. ' ' → logprob: -9.795819282531738
    10. '(B' → logprob: -9.983319282531738

Token 175: '
' (ID: 198)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.030765004456043243
    2. '
' → logprob: -3.9057650566101074
    3. 'for' → logprob: -4.780765056610107
    4. '<|end|>' → logprob: -7.905765056610107
    5. ' dp' → logprob: -8.28076457977295
    6. 'print' → logprob: -8.40576457977295
    7. ' for' → logprob: -8.40576457977295
    8. '(dp' → logprob: -9.40576457977295
    9. '_dp' → logprob: -9.40576457977295
    10. '0' → logprob: -9.65576457977295

Token 176: 'Len' (ID: 16756)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.007556929253041744
    2. 'for' → logprob: -5.257556915283203
    3. '0' → logprob: -7.507556915283203
    4. 'print' → logprob: -7.757556915283203
    5. 'prev' → logprob: -7.882556915283203
    6. 'def' → logprob: -8.507556915283203
    7. 'A' → logprob: -8.632556915283203
    8. 'import' → logprob: -9.632556915283203
    9. 'idx' → logprob: -9.882556915283203
    10. 'max' → logprob: -10.132556915283203

Token 177: ' =' (ID: 314)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.48887842893600464
    2. ' =' → logprob: -1.4888784885406494
    3. '_' → logprob: -2.1138784885406494
    4. 'dp' → logprob: -4.36387825012207
    5. '=' → logprob: -4.86387825012207
    6. '_dp' → logprob: -5.36387825012207
    7. '_row' → logprob: -5.48887825012207
    8. 's' → logprob: -5.48887825012207
    9. '_=' → logprob: -5.73887825012207
    10. '_s' → logprob: -7.86387825012207

Token 178: ' [' (ID: 723)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.31516122817993164
    2. '[' → logprob: -1.4401612281799316
    3. 'n' → logprob: -4.315161228179932
    4. '[n' → logprob: -4.815161228179932
    5. '1' → logprob: -5.065161228179932
    6. ' [' → logprob: -5.815161228179932
    7. ' ' → logprob: -6.815161228179932
    8. '[int' → logprob: -7.065161228179932
    9. 'int' → logprob: -8.940160751342773
    10. '[]' → logprob: -9.315160751342773

Token 179: 'None' (ID: 8505)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.017827028408646584
    2. '1' → logprob: -4.267827033996582
    3. 'n' → logprob: -6.017827033996582
    4. '-' → logprob: -7.892827033996582
    5. ']' → logprob: -8.267827033996582
    6. ' ' → logprob: -8.767827033996582
    7. 'MAG' → logprob: -9.267827033996582
    8. '[' → logprob: -9.392827033996582
    9. '[n' → logprob: -9.767827033996582
    10. '(' → logprob: -10.267827033996582

Token 180: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.001974788261577487
    2. '(n' → logprob: -6.751974582672119
    3. ']*' → logprob: -8.001975059509277
    4. ' for' → logprob: -8.251975059509277
    5. ']*(' → logprob: -9.501975059509277
    6. ' ]' → logprob: -9.876975059509277
    7. 'for' → logprob: -10.626975059509277
    8. '()]' → logprob: -11.126975059509277
    9. ',' → logprob: -11.626975059509277
    10. ')' → logprob: -11.751975059509277

Token 181: ' *' (ID: 425)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.19496315717697144
    2. '(' → logprob: -2.444963216781616
    3. ']' → logprob: -3.819963216781616
    4. '0' → logprob: -4.194962978363037
    5. 'n' → logprob: -4.319962978363037
    6. ' =' → logprob: -4.444962978363037
    7. '=' → logprob: -4.694962978363037
    8. '[n' → logprob: -4.944962978363037
    9. '[' → logprob: -5.819962978363037
    10. '<|end|>' → logprob: -5.819962978363037

Token 182: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.05568631365895271
    2. '(n' → logprob: -2.9306862354278564
    3. ' (' → logprob: -7.6806864738464355
    4. '(' → logprob: -8.555685997009277
    5. ' n' → logprob: -9.180685997009277
    6. '(M' → logprob: -11.305685997009277
    7. ' ' → logprob: -11.805685997009277
    8. '   ' → logprob: -12.305685997009277
    9. '
' → logprob: -13.555685997009277
    10. '```' → logprob: -13.868185997009277

Token 183: '
' (ID: 198)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.49526867270469666
    2. 'for' → logprob: -0.995268702507019
    3. '
' → logprob: -4.245268821716309
    4. ' for' → logprob: -6.620268821716309
    5. 'prev' → logprob: -6.620268821716309
    6. 'def' → logprob: -6.870268821716309
    7. 'max' → logprob: -7.245268821716309
    8. 'idx' → logprob: -7.870268821716309
    9. '#' → logprob: -8.245268821716309
    10. 'A' → logprob: -8.495268821716309

Token 184: 'task' (ID: 15921)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1837463527917862
    2. 'dp' → logprob: -1.933746337890625
    3. 'def' → logprob: -5.558746337890625
    4. 'i' → logprob: -5.808746337890625
    5. 'idx' → logprob: -5.933746337890625
    6. 'max' → logprob: -5.933746337890625
    7. ')' → logprob: -6.058746337890625
    8. '0' → logprob: -6.683746337890625
    9. 'prev' → logprob: -6.808746337890625
    10. ' for' → logprob: -7.058746337890625

Token 185: 'z' (ID: 89)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4382835924625397
    2. '=' → logprob: -1.9382835626602173
    3. 'dp' → logprob: -2.188283681869507
    4. ' =' → logprob: -3.313283681869507
    5. 'i' → logprob: -4.688283443450928
    6. '_' → logprob: -4.813283443450928
    7. 'def' → logprob: -5.063283443450928
    8. 'idx' → logprob: -5.438283443450928
    9. ')' → logprob: -5.563283443450928
    10. '#' → logprob: -5.688283443450928

Token 186: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1756865382194519
    2. 's' → logprob: -2.6756865978240967
    3. '=' → logprob: -2.8006865978240967
    4. '_' → logprob: -4.175686359405518
    5. '_queue' → logprob: -5.175686359405518
    6. '_stack' → logprob: -6.300686359405518
    7. '_len' → logprob: -6.550686359405518
    8. '=[]' → logprob: -6.925686359405518
    9. '_count' → logprob: -7.050686359405518
    10. '_s' → logprob: -7.550686359405518

Token 187: ' [(' (ID: 43900)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.03790101036429405
    2. '[(' → logprob: -3.787900924682617
    3. '[' → logprob: -4.662900924682617
    4. '0' → logprob: -6.662900924682617
    5. 'set' → logprob: -6.912900924682617
    6. '[n' → logprob: -7.412900924682617
    7. '[[' → logprob: -7.662900924682617
    8. '[B' → logprob: -7.912900924682617
    9. '{}' → logprob: -8.162900924682617
    10. 'B' → logprob: -8.287900924682617

Token 188: 'None' (ID: 8505)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1614413857460022
    2. '(' → logprob: -2.1614413261413574
    3. '(n' → logprob: -4.911441326141357
    4. '-' → logprob: -5.536441326141357
    5. 'MAG' → logprob: -5.536441326141357
    6. '(-' → logprob: -5.661441326141357
    7. '(M' → logprob: -5.661441326141357
    8. '(A' → logprob: -5.911441326141357
    9. ')' → logprob: -6.036441326141357
    10. 'A' → logprob: -6.161441326141357

Token 189: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0027786085847765207
    2. ',None' → logprob: -7.12777853012085
    3. ',n' → logprob: -7.62777853012085
    4. 'None' → logprob: -8.002779006958008
    5. ')]' → logprob: -8.127779006958008
    6. ' ,' → logprob: -8.502779006958008
    7. ',)' → logprob: -8.627779006958008
    8. '0' → logprob: -9.002779006958008
    9. ',
' → logprob: -9.252779006958008
    10. ')' → logprob: -9.627779006958008

Token 190: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03171606734395027
    2. '-' → logprob: -4.6567158699035645
    3. 'None' → logprob: -4.6567158699035645
    4. 'n' → logprob: -5.2817158699035645
    5. ' ' → logprob: -6.0317158699035645
    6. ')' → logprob: -6.6567158699035645
    7. 'MAG' → logprob: -7.0317158699035645
    8. ')]' → logprob: -7.2817158699035645
    9. '[]' → logprob: -8.531716346740723
    10. ' None' → logprob: -8.781716346740723

Token 191: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.035111721605062485
    2. '-' → logprob: -3.660111665725708
    3. 'None' → logprob: -5.535111904144287
    4. 'n' → logprob: -6.535111904144287
    5. ')' → logprob: -6.660111904144287
    6. ')]' → logprob: -7.785111904144287
    7. 'MAG' → logprob: -7.785111904144287
    8. ' ' → logprob: -8.535111427307129
    9. '[])' → logprob: -9.160111427307129
    10. '[]' → logprob: -9.160111427307129

Token 192: ',' (ID: 11)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0278385728597641
    2. ',' → logprob: -3.7778384685516357
    3. '),' → logprob: -5.652838706970215
    4. ')' → logprob: -7.652838706970215
    5. ' )' → logprob: -8.652838706970215
    6. ']' → logprob: -9.027838706970215
    7. ')]
' → logprob: -9.402838706970215
    8. ')][' → logprob: -9.777838706970215
    9. '),(' → logprob: -10.527838706970215
    10. ',)' → logprob: -11.027838706970215

Token 193: ' None' (ID: 4662)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12515686452388763
    2. 'None' → logprob: -3.250156879425049
    3. '-' → logprob: -3.750156879425049
    4. 'n' → logprob: -4.375156879425049
    5. ')]' → logprob: -4.375156879425049
    6. 'A' → logprob: -4.500156879425049
    7. '[]' → logprob: -5.500156879425049
    8. ')' → logprob: -5.625156879425049
    9. 'MAG' → logprob: -5.875156879425049
    10. ' ' → logprob: -6.375156879425049

Token 194: ',' (ID: 11)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.011171958409249783
    2. ',' → logprob: -4.761171817779541
    3. '),' → logprob: -6.136171817779541
    4. ')' → logprob: -8.3861722946167
    5. ' )' → logprob: -10.2611722946167
    6. ']' → logprob: -10.3861722946167
    7. ')][' → logprob: -10.6361722946167
    8. '),(' → logprob: -11.1361722946167
    9. ')]
' → logprob: -11.1361722946167
    10. ')],' → logprob: -11.7611722946167

Token 195: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4011562168598175
    2. 'None' → logprob: -1.4011561870574951
    3. ')]' → logprob: -3.526156187057495
    4. 'False' → logprob: -4.276156425476074
    5. 'n' → logprob: -4.526156425476074
    6. '-' → logprob: -4.651156425476074
    7. '[]' → logprob: -4.776156425476074
    8. 'A' → logprob: -6.151156425476074
    9. '1' → logprob: -6.526156425476074
    10. 'len' → logprob: -6.901156425476074

Token 196: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4408733546733856
    2. 'None' → logprob: -1.315873384475708
    3. 'n' → logprob: -3.190873384475708
    4. '-' → logprob: -4.315873146057129
    5. ')]' → logprob: -5.065873146057129
    6. '[]' → logprob: -5.190873146057129
    7. 'MAG' → logprob: -5.190873146057129
    8. '1' → logprob: -5.315873146057129
    9. 'False' → logprob: -5.690873146057129
    10. 'A' → logprob: -6.440873146057129

Token 197: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00932026281952858
    2. ',' → logprob: -4.884320259094238
    3. '),' → logprob: -6.884320259094238
    4. ')' → logprob: -7.509320259094238
    5. ']' → logprob: -9.884320259094238
    6. ' )' → logprob: -10.259320259094238
    7. ')][' → logprob: -11.509320259094238
    8. ')],' → logprob: -11.634320259094238
    9. ')]
' → logprob: -12.134320259094238
    10. '),(' → logprob: -12.759320259094238

Token 198: 'while' (ID: 7032)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9135962128639221
    2. 'for' → logprob: -1.2885961532592773
    3. ']' → logprob: -2.0385961532592773
    4. ',' → logprob: -2.6635961532592773
    5. 'dp' → logprob: -3.5385961532592773
    6. 'def' → logprob: -3.9135961532592773
    7. 'while' → logprob: -4.163596153259277
    8. ',
' → logprob: -4.663596153259277
    9. 'i' → logprob: -5.038596153259277
    10. '#' → logprob: -5.163596153259277

Token 199: ' task' (ID: 5296)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.9501543641090393
    2. ' n' → logprob: -1.0751543045043945
    3. ' task' → logprob: -2.0751543045043945
    4. ' len' → logprob: -2.8251543045043945
    5. 'True' → logprob: -3.3251543045043945
    6. 'n' → logprob: -4.3251543045043945
    7. ' dp' → logprob: -4.3251543045043945
    8. ' not' → logprob: -4.5751543045043945
    9. 'task' → logprob: -5.0751543045043945
    10. 'dp' → logprob: -6.4501543045043945

Token 200: 'z' (ID: 89)
  Prédit: 'z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.0005675682332366705
    2. '[-' → logprob: -8.875567436218262
    3. '_' → logprob: -9.000567436218262
    4. '[' → logprob: -9.250567436218262
    5. '.append' → logprob: -10.125567436218262
    6. '_z' → logprob: -10.375567436218262
    7. 'з' → logprob: -11.250567436218262
    8. 'q' → logprob: -11.375567436218262
    9. 'sz' → logprob: -11.375567436218262
    10. '```' → logprob: -11.500567436218262

Token 201: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01507981214672327
    2. '[-' → logprob: -4.515079975128174
    3. '.pop' → logprob: -5.890079975128174
    4. ':
' → logprob: -7.515079975128174
    5. ' and' → logprob: -8.140079498291016
    6. '>:' → logprob: -9.140079498291016
    7. '):' → logprob: -9.140079498291016
    8. 'and' → logprob: -9.765079498291016
    9. 'pop' → logprob: -10.015079498291016
    10. '!=' → logprob: -11.015079498291016

Token 202: '   ' (ID: 271)
  Prédit: 'task'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'task' → logprob: -0.22913411259651184
    2. 'cur' → logprob: -2.4791340827941895
    3. 't' → logprob: -3.2291340827941895
    4. ' task' → logprob: -3.7291340827941895
    5. 'node' → logprob: -4.3541340827941895
    6. 'type' → logprob: -5.3541340827941895
    7. 'curr' → logprob: -5.7291340827941895
    8. '   ' → logprob: -5.8541340827941895
    9. 'tsk' → logprob: -5.8541340827941895
    10. 'func' → logprob: -5.9791340827941895

Token 203: ' parent' (ID: 5980)
  Prédit: 'task'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'task' → logprob: -0.9596859812736511
    2. 'node' → logprob: -1.709686040878296
    3. 'cur' → logprob: -2.084686040878296
    4. 't' → logprob: -2.834686040878296
    5. 'typ' → logprob: -3.084686040878296
    6. 'v' → logprob: -3.084686040878296
    7. 'u' → logprob: -4.334685802459717
    8. 'type' → logprob: -4.459685802459717
    9. 'now' → logprob: -4.834685802459717
    10. 'c' → logprob: -4.959685802459717

Token 204: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.706686690449715e-05
    2. '=' → logprob: -10.375066757202148
    3. '_,' → logprob: -10.625066757202148
    4. ' ,' → logprob: -12.875066757202148
    5. 'task' → logprob: -13.500066757202148
    6. ',parent' → logprob: -13.500066757202148
    7. ' =' → logprob: -13.750066757202148
    8. ',,,' → logprob: -14.125066757202148
    9. ',,,,' → logprob: -14.625066757202148
    10. ',,' → logprob: -14.750066757202148

Token 205: ' here' (ID: 2105)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.8664730787277222
    2. 'u' → logprob: -1.1164730787277222
    3. 'v' → logprob: -1.9914730787277222
    4. 'cur' → logprob: -2.6164731979370117
    5. 'i' → logprob: -4.366473197937012
    6. 'curr' → logprob: -4.741473197937012
    7. 'idx' → logprob: -5.116473197937012
    8. 'now' → logprob: -5.616473197937012
    9. 'pos' → logprob: -6.241473197937012
    10. 'vertex' → logprob: -6.241473197937012

Token 206: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000411011598771438
    2. '=' → logprob: -7.875411033630371
    3. ' =' → logprob: -10.875411033630371
    4. ' ,' → logprob: -11.375411033630371
    5. '   ' → logprob: -15.750411033630371
    6. '_,' → logprob: -16.125410079956055
    7. ',current' → logprob: -17.625410079956055
    8. ' ' → logprob: -18.125410079956055
    9. ',index' → logprob: -18.125410079956055
    10. 't' → logprob: -18.250410079956055

Token 207: ' _,' (ID: 18042)
  Prédit: 'child'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'child' → logprob: -0.7321063876152039
    2. 'idx' → logprob: -1.8571064472198486
    3. 'state' → logprob: -2.2321064472198486
    4. 'depth' → logprob: -2.4821064472198486
    5. 'children' → logprob: -2.7321064472198486
    6. 'pos' → logprob: -4.2321062088012695
    7. 'neighbors' → logprob: -4.4821062088012695
    8. 'length' → logprob: -4.6071062088012695
    9. 'edge' → logprob: -4.8571062088012695
    10. 'index' → logprob: -4.8571062088012695

Token 208: ' flag' (ID: 9641)
  Prédit: 'depth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'depth' → logprob: -1.110306978225708
    2. 'idx' → logprob: -1.985306978225708
    3. 'child' → logprob: -2.735306978225708
    4. 'state' → logprob: -2.860306978225708
    5. 'length' → logprob: -2.985306978225708
    6. 'cost' → logprob: -3.110306978225708
    7. 'pos' → logprob: -3.360306978225708
    8. 'i' → logprob: -3.610306978225708
    9. 'dist' → logprob: -3.860306978225708
    10. 'cur' → logprob: -4.360306739807129

Token 209: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20141665637493134
    2. ' =' → logprob: -1.7014166116714478
    3. ' ' → logprob: -12.951416969299316
    4. '   ' → logprob: -14.326416969299316
    5. ',' → logprob: -15.576416969299316
    6. '  ' → logprob: -15.826416969299316
    7. ')' → logprob: -17.076416015625
    8. 'task' → logprob: -17.076416015625
    9. '	' → logprob: -17.951416015625
    10. ' ' → logprob: -18.326416015625

Token 210: ' task' (ID: 5296)
  Prédit: 'task'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'task' → logprob: -0.08106520771980286
    2. ' task' → logprob: -2.5810651779174805
    3. '   ' → logprob: -6.7060651779174805
    4. '0' → logprob: -7.2060651779174805
    5. ' ' → logprob: -9.70606517791748
    6. 'flag' → logprob: -10.83106517791748
    7. '(task' → logprob: -10.95606517791748
    8. '    ' → logprob: -11.20606517791748
    9. '1' → logprob: -11.20606517791748
    10. '	task' → logprob: -11.33106517791748

Token 211: 'z' (ID: 89)
  Prédit: 'z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -1.0280383548888494e-06
    2. 'sz' → logprob: -14.625000953674316
    3. '[' → logprob: -15.625000953674316
    4. 's' → logprob: -15.875000953674316
    5. 'з' → logprob: -16.375001907348633
    6. '[z' → logprob: -16.875001907348633
    7. '_z' → logprob: -17.625001907348633
    8. '[-' → logprob: -18.000001907348633
    9. '```' → logprob: -18.375001907348633
    10. '.append' → logprob: -18.375001907348633

Token 212: '.pop' (ID: 15746)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014170088805258274
    2. ' =' → logprob: -4.264170169830322
    3. '   ' → logprob: -12.889169692993164
    4. '.pop' → logprob: -13.139169692993164
    5. '-=' → logprob: -14.264169692993164
    6. '=
' → logprob: -14.764169692993164
    7. ' ' → logprob: -14.764169692993164
    8. '+=' → logprob: -15.639169692993164
    9. 'pop' → logprob: -15.764169692993164
    10. ',' → logprob: -16.514169692993164

Token 213: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.002354241209104657
    2. '(' → logprob: -6.377354145050049
    3. '()
' → logprob: -7.377354145050049
    4. '();' → logprob: -11.877354621887207
    5. '()

' → logprob: -12.252354621887207
    6. ' ()' → logprob: -12.252354621887207
    7. '(-' → logprob: -12.502354621887207
    8. '(
' → logprob: -13.002354621887207
    9. '()]' → logprob: -14.127354621887207
    10. '()\' → logprob: -14.252354621887207

Token 214: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3008984327316284
    2. ' if' → logprob: -1.6758984327316284
    3. 'if' → logprob: -2.675898551940918
    4. ':' → logprob: -5.675898551940918
    5. ':
' → logprob: -9.550898551940918
    6. '	if' → logprob: -9.800898551940918
    7. '    ' → logprob: -9.800898551940918
    8. ')' → logprob: -10.175898551940918
    9. ',' → logprob: -10.425898551940918
    10. '       ' → logprob: -10.550898551940918

Token 215: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0010733000235632062
    2. '   ' → logprob: -7.501073360443115
    3. ' if' → logprob: -8.126072883605957
    4. 'dp' → logprob: -9.251072883605957
    5. '#' → logprob: -10.626072883605957
    6. 'for' → logprob: -10.876072883605957
    7. 'A' → logprob: -11.251072883605957
    8. 'length' → logprob: -11.626072883605957
    9. 'flag' → logprob: -11.626072883605957
    10. '...' → logprob: -12.126072883605957

Token 216: ' flag' (ID: 9641)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.015810402110219002
    2. ' flag' → logprob: -4.265810489654541
    3. ' not' → logprob: -7.140810489654541
    4. 'not' → logprob: -7.140810489654541
    5. 'here' → logprob: -10.515810012817383
    6. ' here' → logprob: -11.265810012817383
    7. '(flag' → logprob: -11.890810012817383
    8. 'dp' → logprob: -12.515810012817383
    9. '   ' → logprob: -12.640810012817383
    10. '	flag' → logprob: -13.015810012817383

Token 217: ':
' (ID: 734)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5237095952033997
    2. '==' → logprob: -0.8987095952033997
    3. ':' → logprob: -7.523709774017334
    4. '==
' → logprob: -10.648709297180176
    5. ' ' → logprob: -12.023709297180176
    6. '=' → logprob: -12.398709297180176
    7. ' is' → logprob: -13.148709297180176
    8. '0' → logprob: -13.273709297180176
    9. ']==' → logprob: -13.648709297180176
    10. ':
' → logprob: -14.148709297180176

Token 218: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0701141357421875
    2. ' dp' → logprob: -1.4451141357421875
    3. 'dp' → logprob: -1.5701141357421875
    4. '   ' → logprob: -2.4451141357421875
    5. ' if' → logprob: -2.5701141357421875
    6. 'if' → logprob: -3.4451141357421875
    7. ' for' → logprob: -4.4451141357421875
    8. 'for' → logprob: -5.8201141357421875
    9. ' continue' → logprob: -6.9451141357421875
    10. '#' → logprob: -7.6951141357421875

Token 219: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.7109041213989258
    2. 'Len' → logprob: -0.9609041213989258
    3. 'if' → logprob: -3.085904121398926
    4. 'for' → logprob: -3.710904121398926
    5. 'len' → logprob: -4.710904121398926
    6. '   ' → logprob: -4.960904121398926
    7. 'L' → logprob: -5.085904121398926
    8. 'length' → logprob: -5.085904121398926
    9. 'res' → logprob: -5.335904121398926
    10. 'A' → logprob: -6.210904121398926

Token 220: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -0.0012621370842680335
    2. '[' → logprob: -7.251262187957764
    3. '_here' → logprob: -8.501261711120605
    4. '=' → logprob: -9.001261711120605
    5. ' =' → logprob: -9.376261711120605
    6. 'row' → logprob: -10.126261711120605
    7. '[row' → logprob: -10.626261711120605
    8. 'here' → logprob: -11.001261711120605
    9. '_value' → logprob: -11.876261711120605
    10. '_' → logprob: -12.126261711120605

Token 221: '[parent' (ID: 186852)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.225939872208983e-05
    2. '[h' → logprob: -12.125032424926758
    3. '[parent' → logprob: -12.250032424926758
    4. 'here' → logprob: -12.375032424926758
    5. ',' → logprob: -13.000032424926758
    6. '_here' → logprob: -13.000032424926758
    7. ' [' → logprob: -13.250032424926758
    8. ' =' → logprob: -13.750032424926758
    9. '[now' → logprob: -13.875032424926758
    10. '=' → logprob: -14.250032424926758

Token 222: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.014606730081140995
    2. ']=' → logprob: -5.264606952667236
    3. '][' → logprob: -5.514606952667236
    4. ' ]' → logprob: -5.639606952667236
    5. '],' → logprob: -7.389606952667236
    6. '=' → logprob: -8.889606475830078
    7. ']+=' → logprob: -8.889606475830078
    8. '[' → logprob: -9.014606475830078
    9. ']<' → logprob: -9.389606475830078
    10. ' ][' → logprob: -9.639606475830078

Token 223: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4737740755081177
    2. ' =' → logprob: -1.0987740755081177
    3. ']' → logprob: -3.973773956298828
    4. '[' → logprob: -4.348773956298828
    5. ' +=' → logprob: -5.348773956298828
    6. '+=' → logprob: -5.723773956298828
    7. '<' → logprob: -7.348773956298828
    8. '>' → logprob: -7.598773956298828
    9. ']=' → logprob: -7.598773956298828
    10. ' |=' → logprob: -8.223773956298828

Token 224: ' _
' (ID: 55146)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.5382691025733948
    2. 'dp' → logprob: -1.16326904296875
    3. 'max' → logprob: -2.41326904296875
    4. 'MAG' → logprob: -5.78826904296875
    5. ' min' → logprob: -5.91326904296875
    6. ' dp' → logprob: -6.78826904296875
    7. '0' → logprob: -6.78826904296875
    8. 'len' → logprob: -6.91326904296875
    9. '1' → logprob: -7.03826904296875
    10. 'here' → logprob: -7.28826904296875

Token 225: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 226: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.28718310594558716
    2. 'for' → logprob: -2.1621830463409424
    3. '   ' → logprob: -2.5371830463409424
    4. 'else' → logprob: -3.4121830463409424
    5. ' continue' → logprob: -4.9121832847595215
    6. 'if' → logprob: -5.1621832847595215
    7. 'elif' → logprob: -5.7871832847595215
    8. '       ' → logprob: -6.1621832847595215
    9. 'dp' → logprob: -6.6621832847595215
    10. ' for' → logprob: -7.1621832847595215

Token 227: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05448612943291664
    2. 'dp' → logprob: -4.179486274719238
    3. ' dp' → logprob: -4.679486274719238
    4. ' for' → logprob: -5.054486274719238
    5. ' task' → logprob: -5.179486274719238
    6. 'for' → logprob: -5.554486274719238
    7. 'task' → logprob: -5.804486274719238
    8. 'if' → logprob: -6.179486274719238
    9. ' if' → logprob: -6.179486274719238
    10. 'else' → logprob: -6.554486274719238

Token 228: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09533855319023132
    2. 'for' → logprob: -3.4703385829925537
    3. ' for' → logprob: -4.095338344573975
    4. 'task' → logprob: -4.345338344573975
    5. ' task' → logprob: -4.845338344573975
    6. 'if' → logprob: -4.970338344573975
    7. 'dp' → logprob: -5.095338344573975
    8. '       ' → logprob: -5.970338344573975
    9. ' if' → logprob: -6.095338344573975
    10. ')' → logprob: -6.970338344573975

Token 229: ' idx' (ID: 14016)
  Prédit: 'task'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'task' → logprob: -0.860820472240448
    2. '   ' → logprob: -1.1108205318450928
    3. ' task' → logprob: -1.4858205318450928
    4. ' for' → logprob: -5.110820293426514
    5. 'dp' → logprob: -5.110820293426514
    6. 'for' → logprob: -5.860820293426514
    7. ' dp' → logprob: -6.110820293426514
    8. 'if' → logprob: -6.235820293426514
    9. ' if' → logprob: -6.610820293426514
    10. 'flag' → logprob: -8.360820770263672

Token 230: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4935774803161621
    2. ' =' → logprob: -0.9935774803161621
    3. ',' → logprob: -3.993577480316162
    4. '_' → logprob: -7.868577480316162
    5. '   ' → logprob: -8.61857795715332
    6. ' ,' → logprob: -9.24357795715332
    7. ')' → logprob: -9.74357795715332
    8. '    ' → logprob: -10.36857795715332
    9. ' ' → logprob: -10.61857795715332
    10. '  ' → logprob: -11.36857795715332

Token 231: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.006520802620798349
    2. '0' → logprob: -5.631520748138428
    3. ' B' → logprob: -6.256520748138428
    4. 'A' → logprob: -8.131521224975586
    5. '_' → logprob: -9.006521224975586
    6. '-' → logprob: -9.006521224975586
    7. 'here' → logprob: -9.006521224975586
    8. 'dp' → logprob: -9.756521224975586
    9. 'len' → logprob: -10.006521224975586
    10. '_(' → logprob: -10.256521224975586

Token 232: 'SC' (ID: 10231)
  Prédit: 'SC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SC' → logprob: -9.710618905955926e-05
    2. 'sc' → logprob: -9.375097274780273
    3. '
' → logprob: -13.375097274780273
    4. 'dp' → logprob: -13.750097274780273
    5. 'B' → logprob: -13.875097274780273
    6. '

' → logprob: -14.125097274780273
    7. 'S' → logprob: -14.375097274780273
    8. '.SC' → logprob: -14.437597274780273
    9. 'CS' → logprob: -14.500097274780273
    10. '_SC' → logprob: -14.562597274780273

Token 233: '.b' (ID: 1292)
  Prédit: '.b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -8.470901229884475e-05
    2. '.' → logprob: -10.00008487701416
    3. '_left' → logprob: -10.62508487701416
    4. '.ins' → logprob: -11.50008487701416
    5. ' .' → logprob: -13.37508487701416
    6. '_right' → logprob: -13.75008487701416
    7. ' bis' → logprob: -14.25008487701416
    8. '.left' → logprob: -14.87508487701416
    9. '.a' → logprob: -15.12508487701416
    10. '.right' → logprob: -15.37508487701416

Token 234: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -2.7133641196996905e-05
    2. 'i' → logprob: -11.62502670288086
    3. 'search' → logprob: -12.12502670288086
    4. 'ip' → logprob: -12.50002670288086
    5. 'ins' → logprob: -12.62502670288086
    6. 'dp' → logprob: -14.87502670288086
    7. 'left' → logprob: -14.87502670288086
    8. 'ist' → logprob: -14.87502670288086
    9. 'isce' → logprob: -14.87502670288086
    10. 'in' → logprob: -15.12502670288086

Token 235: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -1.8624639324116288e-06
    2. 'e' → logprob: -14.250001907348633
    3. 'ct' → logprob: -15.000001907348633
    4. '```' → logprob: -15.625001907348633
    5. 'ext' → logprob: -15.875001907348633
    6. 'ec' → logprob: -16.375001907348633
    7. 'ected' → logprob: -16.750001907348633
    8. 'ects' → logprob: -16.875001907348633
    9. 'ectl' → logprob: -17.000001907348633
    10. 'sect' → logprob: -17.625001907348633

Token 236: '_left' (ID: 22189)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.08138713240623474
    2. '_left' → logprob: -2.5813870429992676
    3. 'left' → logprob: -6.331387042999268
    4. '_right' → logprob: -7.706387042999268
    5. 'dp' → logprob: -8.706387519836426
    6. 'right' → logprob: -9.831387519836426
    7. 'Left' → logprob: -10.331387519836426
    8. '
' → logprob: -12.706387519836426
    9. 'Right' → logprob: -13.456387519836426
    10. '(task' → logprob: -13.581387519836426

Token 237: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -4.9424725148128346e-05
    2. 'dp' → logprob: -10.250049591064453
    3. '(' → logprob: -11.375049591064453
    4. '(
' → logprob: -13.250049591064453
    5. '
' → logprob: -15.750049591064453
    6. '(d' → logprob: -16.375049591064453
    7. '	dp' → logprob: -16.500049591064453
    8. '(M' → logprob: -17.000049591064453
    9. '(task' → logprob: -17.125049591064453
    10. '```' → logprob: -17.125049591064453

Token 238: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -0.0001652796781854704
    2. 'row' → logprob: -9.750164985656738
    3. '(dp' → logprob: -10.125164985656738
    4. 'dp' → logprob: -10.375164985656738
    5. '_dp' → logprob: -11.000164985656738
    6. ')' → logprob: -12.375164985656738
    7. '_rows' → logprob: -13.125164985656738
    8. '   ' → logprob: -13.375164985656738
    9. '[' → logprob: -13.625164985656738
    10. '
' → logprob: -13.875164985656738

Token 239: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0025804166216403246
    2. '_,' → logprob: -6.127580642700195
    3. ',_' → logprob: -9.377580642700195
    4. '   ' → logprob: -9.502580642700195
    5. ',A' → logprob: -9.502580642700195
    6. ' ,' → logprob: -9.502580642700195
    7. '(_,' → logprob: -11.377580642700195
    8. ' ' → logprob: -11.502580642700195
    9. ',h' → logprob: -11.627580642700195
    10. ',
' → logprob: -12.002580642700195

Token 240: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0003951648832298815
    2. '_' → logprob: -9.000394821166992
    3. '_)' → logprob: -9.375394821166992
    4. ' A' → logprob: -9.750394821166992
    5. 'here' → logprob: -9.875394821166992
    6. 'dp' → logprob: -10.500394821166992
    7. '_A' → logprob: -10.625394821166992
    8. ')' → logprob: -12.375394821166992
    9. '_(' → logprob: -12.750394821166992
    10. '(A' → logprob: -12.750394821166992

Token 241: '_[' (ID: 27517)
  Prédit: '_['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_[' → logprob: -0.6396803259849548
    2. '[' → logprob: -0.7646803259849548
    3. '_' → logprob: -5.1396803855896
    4. '_)' → logprob: -8.264679908752441
    5. '_here' → logprob: -8.639679908752441
    6. '[_' → logprob: -8.764679908752441
    7. '[h' → logprob: -8.889679908752441
    8. '__[' → logprob: -9.139679908752441
    9. '_,' → logprob: -9.389679908752441
    10. 'here' → logprob: -9.514679908752441

Token 242: 'here' (ID: 19992)
  Prédit: 'here'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'here' → logprob: -0.001533547299914062
    2. '[' → logprob: -6.501533508300781
    3. ' here' → logprob: -10.876533508300781
    4. '
' → logprob: -11.751533508300781
    5. ']' → logprob: -13.626533508300781
    6. '   ' → logprob: -13.751533508300781
    7. '_here' → logprob: -14.001533508300781
    8. '][' → logprob: -15.126533508300781
    9. 'there' → logprob: -15.751533508300781
    10. 'her' → logprob: -16.00153350830078

Token 243: '])
' (ID: 5169)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2615465819835663
    2. '])' → logprob: -2.0115466117858887
    3. ')' → logprob: -2.3865466117858887
    4. ')
' → logprob: -6.136546611785889
    5. '])
' → logprob: -6.886546611785889
    6. ']' → logprob: -8.26154613494873
    7. '   ' → logprob: -8.63654613494873
    8. ' )' → logprob: -8.63654613494873
    9. '))' → logprob: -9.51154613494873
    10. ')])' → logprob: -9.51154613494873

Token 244: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9528782963752747
    2. 'if' → logprob: -1.0778782367706299
    3. '   ' → logprob: -2.20287823677063
    4. 'dp' → logprob: -2.32787823677063
    5. ')
' → logprob: -3.07787823677063
    6. ' if' → logprob: -4.452878475189209
    7. 'task' → logprob: -5.827878475189209
    8. '    
' → logprob: -6.077878475189209
    9. '  
' → logprob: -7.827878475189209
    10. '#' → logprob: -8.20287799835205

Token 245: ' task' (ID: 5296)
  Prédit: 'task'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'task' (adapté à ' task') → logprob: -0.42847442626953125
    2. 'dp' → logprob: -1.4284744262695312
    3. 'old' → logprob: -2.5534744262695312
    4. 'tmp' → logprob: -3.9284744262695312
    5. 'prev' → logprob: -5.678474426269531
    6. 'temp' → logprob: -5.803474426269531
    7. 'Len' → logprob: -6.803474426269531
    8. 'if' → logprob: -7.178474426269531
    9. '_len' → logprob: -7.428474426269531
    10. '_old' → logprob: -7.678474426269531

Token 246: 'z' (ID: 89)
  Prédit: 'z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: 0.0
    2. '_z' → logprob: -17.875
    3. 'sz' → logprob: -18.25
    4. 'з' → logprob: -18.25
    5. '.append' → logprob: -20.375
    6. 'x' → logprob: -20.5
    7. 's' → logprob: -20.75
    8. '_' → logprob: -20.75
    9. 'zs' → logprob: -20.75
    10. '[' → logprob: -20.875

Token 247: ' +=' (ID: 2757)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -2.951771421066951e-05
    2. '.' → logprob: -10.500029563903809
    3. '.app' → logprob: -14.375029563903809
    4. ' .' → logprob: -14.625029563903809
    5. '+=' → logprob: -15.250029563903809
    6. 'append' → logprob: -15.375029563903809
    7. '.ap' → logprob: -15.625029563903809
    8. ' +=' → logprob: -16.500028610229492
    9. '.extend' → logprob: -16.625028610229492
    10. '.pop' → logprob: -17.000028610229492

Token 248: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.0011074711801484227
    2. '[
' → logprob: -7.001107692718506
    3. '[' → logprob: -10.001107215881348
    4. '   ' → logprob: -10.376107215881348
    5. '((' → logprob: -10.376107215881348
    6. '[parent' → logprob: -10.501107215881348
    7. '[((' → logprob: -10.876107215881348
    8. '(' → logprob: -10.876107215881348
    9. ' [(' → logprob: -11.001107215881348
    10. '(parent' → logprob: -12.376107215881348

Token 249: 'here' (ID: 19992)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.11351893842220306
    2. 'here' → logprob: -2.2385189533233643
    3. ' parent' → logprob: -8.113518714904785
    4. '(parent' → logprob: -8.613518714904785
    5. ' here' → logprob: -9.113518714904785
    6. 'None' → logprob: -10.113518714904785
    7. ',parent' → logprob: -10.363518714904785
    8. '   ' → logprob: -11.363518714904785
    9. '[parent' → logprob: -12.238518714904785
    10. '
' → logprob: -12.988518714904785

Token 250: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002932750794570893
    2. ',parent' → logprob: -8.250293731689453
    3. ' ,' → logprob: -10.375293731689453
    4. ',None' → logprob: -14.625293731689453
    5. '   ' → logprob: -16.500293731689453
    6. 'parent' → logprob: -16.625293731689453
    7. ',
' → logprob: -16.750293731689453
    8. ',p' → logprob: -17.000293731689453
    9. ' ' → logprob: -17.375293731689453
    10. ',index' → logprob: -17.500293731689453

Token 251: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.004349417518824339
    2. ' idx' → logprob: -6.129349231719971
    3. '_,' → logprob: -6.254349231719971
    4. 'flag' → logprob: -9.129349708557129
    5. 'dp' → logprob: -9.629349708557129
    6. 'index' → logprob: -10.879349708557129
    7. '_' → logprob: -11.504349708557129
    8. ' _,' → logprob: -11.754349708557129
    9. '_idx' → logprob: -12.504349708557129
    10. '	idx' → logprob: -12.629349708557129

Token 252: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015499753644689918
    2. ' ,' → logprob: -6.501550197601318
    3. '   ' → logprob: -10.87654972076416
    4. '+' → logprob: -11.50154972076416
    5. ' ' → logprob: -12.25154972076416
    6. '  ' → logprob: -12.37654972076416
    7. 'None' → logprob: -13.12654972076416
    8. ',None' → logprob: -13.12654972076416
    9. ' +' → logprob: -13.87654972076416
    10. '_,' → logprob: -14.00154972076416

Token 253: ' dp' (ID: 21546)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1006699800491333
    2. '_,' → logprob: -1.6006699800491333
    3. 'None' → logprob: -1.6006699800491333
    4. 'dp' → logprob: -2.3506698608398438
    5. 'False' → logprob: -2.8506698608398438
    6. 'True' → logprob: -2.9756698608398438
    7. '1' → logprob: -4.225669860839844
    8. 'flag' → logprob: -4.475669860839844
    9. 'idx' → logprob: -4.850669860839844
    10. 'A' → logprob: -5.225669860839844

Token 254: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -0.0002724217774812132
    2. 'row' → logprob: -8.500272750854492
    3. '_' → logprob: -10.875272750854492
    4. '_ROW' → logprob: -11.250272750854492
    5. '_,' → logprob: -12.625272750854492
    6. '_idx' → logprob: -12.875272750854492
    7. '_Row' → logprob: -12.875272750854492
    8. ')' → logprob: -12.875272750854492
    9. '_
' → logprob: -13.125272750854492
    10. '_)' → logprob: -13.125272750854492

Token 255: '[idx' (ID: 25582)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04029353708028793
    2. '.copy' → logprob: -3.7902934551239014
    3. '[:' → logprob: -4.5402936935424805
    4. '[' → logprob: -6.2902936935424805
    5. '[parent' → logprob: -6.2902936935424805
    6. ',parent' → logprob: -7.1652936935424805
    7. '[:]' → logprob: -7.2902936935424805
    8. 'copy' → logprob: -8.04029369354248
    9. '),' → logprob: -8.41529369354248
    10. ' ,' → logprob: -8.91529369354248

Token 256: '],' (ID: 2155)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.04885781928896904
    2. ',' → logprob: -3.1738579273223877
    3. ')]' → logprob: -6.298857688903809
    4. '],' → logprob: -6.423857688903809
    5. ' ),' → logprob: -7.548857688903809
    6. ')],' → logprob: -7.798857688903809
    7. 'if' → logprob: -7.923857688903809
    8. ' ,' → logprob: -8.423857688903809
    9. ')' → logprob: -8.798857688903809
    10. ')]
' → logprob: -8.798857688903809

Token 257: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004739841446280479
    2. '0' → logprob: -5.629739761352539
    3. 'True' → logprob: -7.129739761352539
    4. ' ' → logprob: -8.379739761352539
    5. 'flag' → logprob: -9.629739761352539
    6. 'dp' → logprob: -11.754739761352539
    7. '
' → logprob: -12.004739761352539
    8. 'False' → logprob: -12.129739761352539
    9. ' True' → logprob: -12.129739761352539
    10. 'idx' → logprob: -12.629739761352539

Token 258: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07175963371992111
    2. '0' → logprob: -2.6967597007751465
    3. 'True' → logprob: -6.8217597007751465
    4. 'flag' → logprob: -7.5717597007751465
    5. ' ' → logprob: -8.821759223937988
    6. 'False' → logprob: -10.571759223937988
    7. 'dp' → logprob: -12.071759223937988
    8. '
' → logprob: -12.071759223937988
    9. '-' → logprob: -12.196759223937988
    10. '   ' → logprob: -12.821759223937988

Token 259: ')]
' (ID: 11587)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.1618177443742752
    2. ')]' → logprob: -2.661817789077759
    3. '),
' → logprob: -3.411817789077759
    4. ')' → logprob: -3.786817789077759
    5. '),(' → logprob: -3.786817789077759
    6. ')]
' → logprob: -7.28681755065918
    7. ')
' → logprob: -7.66181755065918
    8. ' ),' → logprob: -10.28681755065918
    9. ' )' → logprob: -10.78681755065918
    10. ',' → logprob: -11.53681755065918

Token 260: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36444178223609924
    2. 'dp' → logprob: -1.2394417524337769
    3. ' dp' → logprob: -4.239441871643066
    4. ',' → logprob: -6.864441871643066
    5. '	dp' → logprob: -8.739441871643066
    6. '_dp' → logprob: -9.614441871643066
    7. '       ' → logprob: -10.364441871643066
    8. '```' → logprob: -10.614441871643066
    9. 'task' → logprob: -10.739441871643066
    10. ',
' → logprob: -10.864441871643066

Token 261: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -5.526570384972729e-05
    2. '   ' → logprob: -10.250055313110352
    3. ' dp' → logprob: -10.875055313110352
    4. 'if' → logprob: -15.125055313110352
    5. '(dp' → logprob: -15.375055313110352
    6. 'task' → logprob: -15.625055313110352
    7. ' ' → logprob: -16.00005531311035
    8. '  ' → logprob: -16.62505531311035
    9. 'import' → logprob: -16.75005531311035
    10. '	dp' → logprob: -17.00005531311035

Token 262: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -1.4498052223643754e-05
    2. 'row' → logprob: -11.250014305114746
    3. '_ROW' → logprob: -14.750014305114746
    4. '_rows' → logprob: -15.125014305114746
    5. 'z' → logprob: -15.750014305114746
    6. '_' → logprob: -15.750014305114746
    7. '   ' → logprob: -15.875014305114746
    8. '_Row' → logprob: -16.250015258789062
    9. '_task' → logprob: -17.250015258789062
    10. 'Row' → logprob: -17.375015258789062

Token 263: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.011154168285429478
    2. '[:' → logprob: -4.5111541748046875
    3. '[' → logprob: -9.386154174804688
    4. '[:]' → logprob: -11.386154174804688
    5. '[index' → logprob: -12.386154174804688
    6. 'idx' → logprob: -13.386154174804688
    7. '[ind' → logprob: -13.886154174804688
    8. '[min' → logprob: -14.386154174804688
    9. '[pos' → logprob: -14.386154174804688
    10. '[id' → logprob: -15.136154174804688

Token 264: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0037447367794811726
    2. ']=' → logprob: -5.878744602203369
    3. '=' → logprob: -7.003744602203369
    4. ' =' → logprob: -10.753745079040527
    5. ')' → logprob: -11.753745079040527
    6. ' ]' → logprob: -13.878745079040527
    7. ')=' → logprob: -15.628745079040527
    8. '],' → logprob: -15.753745079040527
    9. ' ' → logprob: -15.878745079040527
    10. '>' → logprob: -16.00374412536621

Token 265: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06196824833750725
    2. ' =' → logprob: -2.8119683265686035
    3. '=A' → logprob: -14.561967849731445
    4. ' ' → logprob: -17.061967849731445
    5. ' ' → logprob: -17.186967849731445
    6. ')' → logprob: -17.186967849731445
    7. '_=' → logprob: -17.436967849731445
    8. ',' → logprob: -17.811967849731445
    9. '=B' → logprob: -18.061967849731445
    10. ')=' → logprob: -18.686967849731445

Token 266: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.0206720617134124e-05
    2. ' A' → logprob: -11.50001049041748
    3. '   ' → logprob: -16.750009536743164
    4. '	A' → logprob: -18.625009536743164
    5. '_A' → logprob: -21.875009536743164
    6. ' ' → logprob: -22.875009536743164
    7. '>A' → logprob: -23.250009536743164
    8. '  ' → logprob: -23.500009536743164
    9. ' ' → logprob: -24.625009536743164
    10. '(A' → logprob: -24.875009536743164

Token 267: '_[' (ID: 27517)
  Prédit: '_['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_[' → logprob: -0.0017089712200686336
    2. '[' → logprob: -6.501708984375
    3. '_' → logprob: -8.501708984375
    4. '__[' → logprob: -13.001708984375
    5. '_here' → logprob: -14.376708984375
    6. '_
' → logprob: -15.376708984375
    7. 'here' → logprob: -15.751708984375
    8. '```' → logprob: -16.751708984375
    9. '_{' → logprob: -17.501708984375
    10. '_

' → logprob: -17.751708984375

Token 268: 'here' (ID: 19992)
  Prédit: 'here'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'here' → logprob: -6.861651490908116e-05
    2. '[' → logprob: -9.625068664550781
    3. ' here' → logprob: -13.125068664550781
    4. '_here' → logprob: -15.875068664550781
    5. 'there' → logprob: -16.12506866455078
    6. '
' → logprob: -16.37506866455078
    7. '   ' → logprob: -16.62506866455078
    8. '[h' → logprob: -17.50006866455078
    9. 'her' → logprob: -17.87506866455078
    10. ']' → logprob: -19.00006866455078

Token 269: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000603668624535203
    2. ')
' → logprob: -8.125603675842285
    3. '<|end|>' → logprob: -8.875603675842285
    4. '   ' → logprob: -9.375603675842285
    5. ']' → logprob: -10.500603675842285
    6. ' )' → logprob: -10.750603675842285
    7. ')]' → logprob: -11.500603675842285
    8. '+' → logprob: -12.375603675842285
    9. ')return' → logprob: -13.000603675842285
    10. ')#' → logprob: -13.250603675842285

Token 270: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00880991481244564
    2. '   ' → logprob: -4.758810043334961
    3. 'task' → logprob: -9.008810043334961
    4. ' for' → logprob: -10.133810043334961
    5. 'else' → logprob: -11.008810043334961
    6. 'if' → logprob: -11.133810043334961
    7. '	for' → logprob: -14.133810043334961
    8. '```' → logprob: -14.758810043334961
    9. '    
' → logprob: -15.383810043334961
    10. 'neighbors' → logprob: -15.508810043334961

Token 271: ' Len' (ID: 38183)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004234154708683491
    2. 'task' → logprob: -5.504234313964844
    3. '   ' → logprob: -8.879234313964844
    4. ' for' → logprob: -11.629234313964844
    5. 'neighbors' → logprob: -13.004234313964844
    6. '    
' → logprob: -13.129234313964844
    7. 'if' → logprob: -13.629234313964844
    8. 'G' → logprob: -15.379234313964844
    9. 'children' → logprob: -15.629234313964844
    10. '#' → logprob: -15.629234313964844

Token 272: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.25251305103302
    2. '[parent' → logprob: -1.50251305103302
    3. '[idx' → logprob: -7.7525129318237305
    4. '[h' → logprob: -9.62751293182373
    5. '[now' → logprob: -10.00251293182373
    6. 'here' → logprob: -11.50251293182373
    7. '[index' → logprob: -12.37751293182373
    8. '[end' → logprob: -12.87751293182373
    9. '[ind' → logprob: -13.12751293182373
    10. 'Here' → logprob: -13.25251293182373

Token 273: 'here' (ID: 19992)
  Prédit: 'here'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'here' → logprob: -3.464347173576243e-05
    2. ']' → logprob: -11.00003433227539
    3. ' here' → logprob: -11.00003433227539
    4. 'idx' → logprob: -15.00003433227539
    5. '
' → logprob: -15.12503433227539
    6. ')' → logprob: -15.50003433227539
    7. '_here' → logprob: -15.75003433227539
    8. 'parent' → logprob: -16.50003433227539
    9. 'Here' → logprob: -16.87503433227539
    10. 'her' → logprob: -17.37503433227539

Token 274: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08811745792627335
    2. '=' → logprob: -2.7131173610687256
    3. ' =' → logprob: -4.088117599487305
    4. ']=' → logprob: -6.838117599487305
    5. ' ]' → logprob: -8.713117599487305
    6. ')' → logprob: -11.713117599487305
    7. ']+=' → logprob: -14.588117599487305
    8. ')=' → logprob: -15.713117599487305
    9. '=index' → logprob: -16.213117599487305
    10. ',' → logprob: -16.213117599487305

Token 275: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47407761216163635
    2. ' =' → logprob: -0.974077582359314
    3. ',' → logprob: -15.224077224731445
    4. ' +=' → logprob: -16.349077224731445
    5. ' ' → logprob: -16.724077224731445
    6. '+=' → logprob: -16.849077224731445
    7. '＝' → logprob: -17.099077224731445
    8. '=int' → logprob: -17.474077224731445
    9. ' =
' → logprob: -17.599077224731445
    10. ')' → logprob: -17.974077224731445

Token 276: ' B' (ID: 418)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.0038505515549331903
    2. 'max' → logprob: -5.62885046005249
    3. ' idx' → logprob: -8.878850936889648
    4. 'len' → logprob: -9.503850936889648
    5. 'B' → logprob: -10.878850936889648
    6. ' max' → logprob: -12.128850936889648
    7. '(idx' → logprob: -12.253850936889648
    8. '   ' → logprob: -13.628850936889648
    9. '	idx' → logprob: -13.628850936889648
    10. '1' → logprob: -13.628850936889648

Token 277: 'SC' (ID: 10231)
  Prédit: 'SC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SC' → logprob: -0.03257167339324951
    2. 'idx' → logprob: -3.657571792602539
    3. 'C' → logprob: -5.782571792602539
    4. 'S' → logprob: -6.657571792602539
    5. '[idx' → logprob: -7.032571792602539
    6. '(idx' → logprob: -8.032571792602539
    7. 'len' → logprob: -8.032571792602539
    8. ' idx' → logprob: -9.157571792602539
    9. 'Sc' → logprob: -10.157571792602539
    10. '0' → logprob: -10.657571792602539

Token 278: '.b' (ID: 1292)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.29256781935691833
    2. 'len' → logprob: -2.167567729949951
    3. '_idx' → logprob: -3.417567729949951
    4. '.b' → logprob: -3.542567729949951
    5. '.idx' → logprob: -3.667567729949951
    6. '_left' → logprob: -4.792567729949951
    7. 'b' → logprob: -5.042567729949951
    8. '[idx' → logprob: -5.042567729949951
    9. '.len' → logprob: -5.542567729949951
    10. '_len' → logprob: -5.667567729949951

Token 279: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.309386670589447
    2. 'sect' → logprob: -1.4343867301940918
    3. 'sc' → logprob: -4.559386730194092
    4. 's' → logprob: -4.559386730194092
    5. 'idx' → logprob: -6.059386730194092
    6. 'ect' → logprob: -6.309386730194092
    7. 'spect' → logprob: -7.184386730194092
    8. '```' → logprob: -7.184386730194092
    9. '`' → logprob: -8.934386253356934
    10. 'ct' → logprob: -9.184386253356934

Token 280: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.014386199414730072
    2. 'ct' → logprob: -4.264386177062988
    3. 'lect' → logprob: -9.389386177062988
    4. 'sect' → logprob: -9.764386177062988
    5. 'e' → logprob: -11.014386177062988
    6. '```' → logprob: -11.389386177062988
    7. 'n' → logprob: -11.514386177062988
    8. 'ectl' → logprob: -11.764386177062988
    9. 'pt' → logprob: -12.139386177062988
    10. 'ce' → logprob: -12.639386177062988

Token 281: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.00043341092532500625
    2. '_right' → logprob: -7.750433444976807
    3. 'left' → logprob: -13.125432968139648
    4. '_len' → logprob: -15.125432968139648
    5. '_row' → logprob: -16.62543296813965
    6. '_idx' → logprob: -16.87543296813965
    7. '_LEFT' → logprob: -16.87543296813965
    8. '_length' → logprob: -17.12543296813965
    9. '_le' → logprob: -17.50043296813965
    10. '```' → logprob: -17.50043296813965

Token 282: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.00019614976190496236
    2. 'dp' → logprob: -8.62519645690918
    3. '(' → logprob: -11.50019645690918
    4. '(L' → logprob: -12.62519645690918
    5. '(
' → logprob: -13.00019645690918
    6. '	dp' → logprob: -15.62519645690918
    7. '```' → logprob: -15.87519645690918
    8. ' (' → logprob: -15.87519645690918
    9. '(len' → logprob: -16.00019645690918
    10. '
' → logprob: -16.12519645690918

Token 283: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -0.00016516048344783485
    2. '(dp' → logprob: -8.875164985656738
    3. '_dp' → logprob: -11.375164985656738
    4. 'row' → logprob: -12.250164985656738
    5. 'dp' → logprob: -12.250164985656738
    6. 'Row' → logprob: -13.500164985656738
    7. '(row' → logprob: -14.875164985656738
    8. 'ow' → logprob: -15.125164985656738
    9. '_ROW' → logprob: -15.375164985656738
    10. '(_' → logprob: -15.375164985656738

Token 284: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005519157741218805
    2. '(idx' → logprob: -5.755519390106201
    3. '(' → logprob: -6.255519390106201
    4. ',(' → logprob: -8.755518913269043
    5. ' ,' → logprob: -9.505518913269043
    6. 'idx' → logprob: -10.005518913269043
    7. ',
' → logprob: -10.755518913269043
    8. '   ' → logprob: -11.380518913269043
    9. ',[' → logprob: -11.505518913269043
    10. ' (' → logprob: -11.755518913269043

Token 285: ' MAGIC' (ID: 105017)
  Prédit: 'MAG'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MAG' → logprob: -0.0024139422457665205
    2. 'A' → logprob: -6.627413749694824
    3. 'dp' → logprob: -8.002413749694824
    4. 'MAX' → logprob: -8.502413749694824
    5. '_' → logprob: -9.127413749694824
    6. '(M' → logprob: -10.127413749694824
    7. 'Magic' → logprob: -10.127413749694824
    8. 'M' → logprob: -10.252413749694824
    9. 'float' → logprob: -10.814913749694824
    10. '_MAG' → logprob: -10.877413749694824

Token 286: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0018768743611872196
    2. ')]' → logprob: -6.8768768310546875
    3. ',' → logprob: -7.2518768310546875
    4. ')
' → logprob: -10.126876831054688
    5. ' )' → logprob: -10.376876831054688
    6. ')-' → logprob: -11.001876831054688
    7. ')#' → logprob: -11.501876831054688
    8. ')])' → logprob: -11.876876831054688
    9. '(' → logprob: -12.626876831054688
    10. '))' → logprob: -12.751876831054688

Token 287: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2535904049873352
    2. 'for' → logprob: -1.7535903453826904
    3. ' for' → logprob: -3.8785903453826904
    4. 'task' → logprob: -4.1285905838012695
    5. 'if' → logprob: -5.0035905838012695
    6. 'else' → logprob: -6.2535905838012695
    7. '<|end|>' → logprob: -6.2535905838012695
    8. ' task' → logprob: -6.6285905838012695
    9. ')' → logprob: -6.8785905838012695
    10. ' if' → logprob: -7.8785905838012695

Token 288: ' children' (ID: 3953)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5173302888870239
    2. 'task' → logprob: -1.142330288887024
    3. '   ' → logprob: -2.6423301696777344
    4. 'if' → logprob: -4.517330169677734
    5. ' for' → logprob: -6.767330169677734
    6. 'dp' → logprob: -7.142330169677734
    7. ' task' → logprob: -8.517330169677734
    8. '```' → logprob: -8.892330169677734
    9. 'else' → logprob: -9.392330169677734
    10. '#' → logprob: -9.517330169677734

Token 289: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0623091422021389
    2. ' =' → logprob: -2.8123090267181396
    3. 'for' → logprob: -8.062309265136719
    4. ' for' → logprob: -10.812309265136719
    5. ':' → logprob: -12.437309265136719
    6. ' in' → logprob: -14.062309265136719
    7. 'in' → logprob: -14.937309265136719
    8. ' ' → logprob: -15.437309265136719
    9. '=
' → logprob: -15.562309265136719
    10. '=[]' → logprob: -15.812309265136719

Token 290: ' G' (ID: 499)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.0008975276723504066
    2. ' G' → logprob: -7.375897407531738
    3. '[G' → logprob: -8.875897407531738
    4. 'sorted' → logprob: -9.375897407531738
    5. '[(' → logprob: -10.875897407531738
    6. '   ' → logprob: -11.625897407531738
    7. 'list' → logprob: -12.375897407531738
    8. '(G' → logprob: -12.500897407531738
    9. '[]
' → logprob: -13.125897407531738
    10. 'enumer' → logprob: -13.250897407531738

Token 291: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00014025058771949261
    2. '.get' → logprob: -9.750140190124512
    3. '[parent' → logprob: -9.750140190124512
    4. '[h' → logprob: -10.875140190124512
    5. 'here' → logprob: -13.500140190124512
    6. '[now' → logprob: -13.750140190124512
    7. ' [' → logprob: -14.625140190124512
    8. '[get' → logprob: -14.750140190124512
    9. 'get' → logprob: -15.000140190124512
    10. '[current' → logprob: -15.500140190124512

Token 292: 'here' (ID: 19992)
  Prédit: 'here'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'here' → logprob: -1.1517960956552997e-05
    2. ' here' → logprob: -11.375011444091797
    3. 'her' → logprob: -19.500011444091797
    4. 'Here' → logprob: -19.625011444091797
    5. '_here' → logprob: -19.625011444091797
    6. 'parent' → logprob: -20.625011444091797
    7. '   ' → logprob: -21.000011444091797
    8. '[' → logprob: -21.000011444091797
    9. ')' → logprob: -21.125011444091797
    10. ']' → logprob: -21.250011444091797

Token 293: '][' (ID: 2696)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.026320040225982666
    2. ']
' → logprob: -3.651319980621338
    3. '   ' → logprob: -12.276320457458496
    4. ']

' → logprob: -12.776320457458496
    5. ')' → logprob: -13.401320457458496
    6. ']+' → logprob: -13.401320457458496
    7. ' ]' → logprob: -13.401320457458496
    8. ':]' → logprob: -13.776320457458496
    9. '][:' → logprob: -14.026320457458496
    10. '];' → logprob: -14.026320457458496

Token 294: '::-' (ID: 96612)
  Prédit: ':]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':]' → logprob: -0.049750182777643204
    2. ':' → logprob: -3.6747500896453857
    3. ':]
' → logprob: -3.7997500896453857
    4. '::-' → logprob: -7.924750328063965
    5. '0' → logprob: -8.799750328063965
    6. ':
' → logprob: -9.299750328063965
    7. ' :]' → logprob: -9.549750328063965
    8. ']' → logprob: -9.799750328063965
    9. ':]

' → logprob: -10.799750328063965
    10. '::' → logprob: -11.174750328063965

Token 295: '1' (ID: 16)
  Prédit: '::-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '::-' → logprob: -0.6969447731971741
    2. ':' → logprob: -0.8219447731971741
    3. ':]' → logprob: -2.8219447135925293
    4. '::' → logprob: -6.571944713592529
    5. '1' → logprob: -7.571944713592529
    6. ':-' → logprob: -7.696944713592529
    7. ']' → logprob: -8.946945190429688
    8. ':::' → logprob: -9.821945190429688
    9. ':)' → logprob: -9.821945190429688
    10. ':]
' → logprob: -10.196945190429688

Token 296: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.313356876373291
    2. ']
' → logprob: -1.313356876373291
    3. '   ' → logprob: -9.813356399536133
    4. ')' → logprob: -11.938356399536133
    5. '()]' → logprob: -12.063356399536133
    6. ']
' → logprob: -12.313356399536133
    7. ':]
' → logprob: -12.313356399536133
    8. ' ]' → logprob: -12.438356399536133
    9. ']:
' → logprob: -12.563356399536133
    10. ']

' → logprob: -13.063356399536133

Token 297: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1917152851819992
    2. 'for' → logprob: -1.8167152404785156
    3. ' for' → logprob: -4.441715240478516
    4. '	for' → logprob: -10.316715240478516
    5. 'task' → logprob: -10.316715240478516
    6. '    
' → logprob: -10.566715240478516
    7. '<|end|>' → logprob: -11.316715240478516
    8. '
' → logprob: -12.566715240478516
    9. '```' → logprob: -12.566715240478516
    10. '  ' → logprob: -12.941715240478516

Token 298: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.018172655254602432
    2. '   ' → logprob: -4.393172740936279
    3. ' for' → logprob: -5.643172740936279
    4. '
' → logprob: -6.393172740936279
    5. '<|end|>' → logprob: -8.018172264099121
    6. '    
' → logprob: -10.393172264099121
    7. '```' → logprob: -11.268172264099121
    8. ',' → logprob: -11.393172264099121
    9. '#' → logprob: -11.643172264099121
    10. '	for' → logprob: -12.143172264099121

Token 299: ' reverse' (ID: 18199)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.000874539720825851
    2. ' for' → logprob: -7.5008745193481445
    3. '   ' → logprob: -8.250874519348145
    4. 'task' → logprob: -9.750874519348145
    5. '
' → logprob: -13.250874519348145
    6. '	for' → logprob: -15.625874519348145
    7. '    
' → logprob: -16.00087547302246
    8. ' task' → logprob: -16.50087547302246
    9. 'if' → logprob: -17.25087547302246
    10. ' ' → logprob: -17.87587547302246

Token 300: ' traversal' (ID: 131388)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.021880775690078735
    2. ' for' → logprob: -4.271880626678467
    3. '   ' → logprob: -5.021880626678467
    4. ':
' → logprob: -7.396880626678467
    5. '
' → logprob: -8.271881103515625
    6. ':' → logprob: -9.646881103515625
    7. '):
' → logprob: -10.646881103515625
    8. '    
' → logprob: -10.896881103515625
    9. '```' → logprob: -11.146881103515625
    10. ',' → logprob: -11.396881103515625

Token 301: ' because' (ID: 2236)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009887595660984516
    2. 'for' → logprob: -4.8848876953125
    3. ' for' → logprob: -6.1348876953125
    4. '<|end|>' → logprob: -9.6348876953125
    5. '
' → logprob: -11.2598876953125
    6. '	for' → logprob: -11.3848876953125
    7. '    
' → logprob: -12.0098876953125
    8. ':' → logprob: -12.5098876953125
    9. ',' → logprob: -12.6348876953125
    10. ':
' → logprob: -12.8848876953125

Token 302: ' why' (ID: 4436)
  Prédit: 'task'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'task' → logprob: -0.07699646055698395
    2. 'stack' → logprob: -2.9519965648651123
    3. ' task' → logprob: -4.076996326446533
    4. 'children' → logprob: -5.951996326446533
    5. 'G' → logprob: -7.201996326446533
    6. ' stack' → logprob: -7.576996326446533
    7. 'the' → logprob: -8.701996803283691
    8. 'for' → logprob: -8.826996803283691
    9. 'append' → logprob: -8.951996803283691
    10. '   ' → logprob: -9.201996803283691

Token 303: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.5458133816719055
    2. 'not' → logprob: -0.9208133816719055
    3. 'children' → logprob: -4.17081356048584
    4. '?' → logprob: -5.79581356048584
    5. 'G' → logprob: -7.17081356048584
    6. ' children' → logprob: -7.17081356048584
    7. 'True' → logprob: -7.29581356048584
    8. '(children' → logprob: -8.29581356048584
    9. '[]' → logprob: -8.54581356048584
    10. '...' → logprob: -8.67081356048584

Token 304: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13404138386249542
    2. 'for' → logprob: -2.2590413093566895
    3. ' for' → logprob: -3.8840413093566895
    4. '
' → logprob: -8.384041786193848
    5. '    
' → logprob: -9.634041786193848
    6. '	for' → logprob: -9.884041786193848
    7. '<|end|>' → logprob: -10.134041786193848
    8. '```' → logprob: -11.134041786193848
    9. ':
' → logprob: -12.134041786193848
    10. ')' → logprob: -12.259041786193848

Token 305: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09172865748405457
    2. ' for' → logprob: -2.716728687286377
    3. '   ' → logprob: -3.841728687286377
    4. '	for' → logprob: -9.841728210449219
    5. '```' → logprob: -11.341728210449219
    6. 'task' → logprob: -11.466728210449219
    7. '<|end|>' → logprob: -11.716728210449219
    8. '[' → logprob: -11.966728210449219
    9. '
' → logprob: -12.591728210449219
    10. '    
' → logprob: -13.216728210449219

Token 306: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.2580256462097168
    2. '   ' → logprob: -1.7580256462097168
    3. 'task' → logprob: -3.258025646209717
    4. ' for' → logprob: -4.633025646209717
    5. '	for' → logprob: -5.258025646209717
    6. '\t' → logprob: -6.758025646209717
    7. '	task' → logprob: -8.383026123046875
    8. ' task' → logprob: -9.508026123046875
    9. '```' → logprob: -9.508026123046875
    10. '[' → logprob: -10.383026123046875

Token 307: ' ch' (ID: 549)
  Prédit: 'child'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'child' → logprob: -0.17769476771354675
    2. 'c' → logprob: -2.302694797515869
    3. ' child' → logprob: -2.927694797515869
    4. 'ch' → logprob: -5.302694797515869
    5. ' c' → logprob: -6.302694797515869
    6. 'v' → logprob: -6.677694797515869
    7. 'w' → logprob: -7.427694797515869
    8. ' ch' → logprob: -8.802694320678711
    9. 'x' → logprob: -9.302694320678711
    10. 'chi' → logprob: -9.302694320678711

Token 308: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.020275115966796875
    2. 'in' → logprob: -4.020275115966797
    3. 'ild' → logprob: -6.270275115966797
    4. ',' → logprob: -8.520275115966797
    5. ' ' → logprob: -11.020275115966797
    6. 'd' → logprob: -12.520275115966797
    7. 'il' → logprob: -12.770275115966797
    8. '  ' → logprob: -13.270275115966797
    9. ' ,' → logprob: -13.395275115966797
    10. 'i' → logprob: -13.645275115966797

Token 309: ' children' (ID: 3953)
  Prédit: 'children'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'children' → logprob: -0.011169955134391785
    2. ' children' → logprob: -4.511169910430908
    3. '(children' → logprob: -9.136170387268066
    4. 'G' → logprob: -11.636170387268066
    5. '	children' → logprob: -13.136170387268066
    6. 'child' → logprob: -13.386170387268066
    7. ' G' → logprob: -14.136170387268066
    8. '.children' → logprob: -14.511170387268066
    9. '   ' → logprob: -15.011170387268066
    10. ' ' → logprob: -15.886170387268066

Token 310: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5876496434211731
    2. '       ' → logprob: -1.2126495838165283
    3. ':
' → logprob: -2.2126495838165283
    4. '   ' → logprob: -3.4626495838165283
    5. ',' → logprob: -6.087649822235107
    6. ' task' → logprob: -6.337649822235107
    7. '(task' → logprob: -7.462649822235107
    8. ' :' → logprob: -7.837649822235107
    9. '):
' → logprob: -8.08764934539795
    10. ' :
' → logprob: -8.33764934539795

Token 311: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018229777924716473
    2. ' task' → logprob: -6.6268229484558105
    3. 'task' → logprob: -8.251823425292969
    4. '   ' → logprob: -8.501823425292969
    5. '	' → logprob: -11.751823425292969
    6. '           ' → logprob: -11.876823425292969
    7. '	   ' → logprob: -12.001823425292969
    8. '[' → logprob: -12.251823425292969
    9. '	task' → logprob: -13.001823425292969
    10. '    ' → logprob: -14.001823425292969

Token 312: ' if' (ID: 538)
  Prédit: 'task'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'task' → logprob: -0.4184590280056
    2. '   ' → logprob: -1.1684590578079224
    3. ' task' → logprob: -3.543458938598633
    4. '       ' → logprob: -6.168458938598633
    5. '	task' → logprob: -9.668458938598633
    6. 'if' (adapté à ' if') → logprob: -11.418458938598633
    7. '    ' → logprob: -12.543458938598633
    8. '           ' → logprob: -12.918458938598633
    9. ' ' → logprob: -13.293458938598633
    10. '  ' → logprob: -13.418458938598633

Token 313: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.08079330623149872
    2. 'Len' → logprob: -2.8307933807373047
    3. ' ch' → logprob: -4.580793380737305
    4. 'dp' → logprob: -5.830793380737305
    5. 'not' → logprob: -6.330793380737305
    6. 'len' → logprob: -6.955793380737305
    7. ' Len' → logprob: -7.955793380737305
    8. 'A' → logprob: -8.205793380737305
    9. 'here' → logprob: -8.205793380737305
    10. 'Ch' → logprob: -8.580793380737305

Token 314: ' ^' (ID: 7602)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.4548777937889099
    2. '!=' → logprob: -1.0798778533935547
    3. ' not' → logprob: -4.079877853393555
    4. '==' → logprob: -6.204877853393555
    5. ' in' → logprob: -6.329877853393555
    6. ' ==' → logprob: -6.704877853393555
    7. '>' → logprob: -7.079877853393555
    8. '<' → logprob: -7.329877853393555
    9. ' >' → logprob: -7.329877853393555
    10. 'not' → logprob: -7.954877853393555

Token 315: ' parent' (ID: 5980)
  Prédit: 'here'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'here' → logprob: -0.036840248852968216
    2. 'parent' → logprob: -3.9118402004241943
    3. ' here' → logprob: -4.411840438842773
    4. ' parent' → logprob: -5.911840438842773
    5. '-' → logprob: -7.036840438842773
    6. '(parent' → logprob: -8.911840438842773
    7. '0' → logprob: -9.911840438842773
    8. ' -' → logprob: -10.286840438842773
    9. ' n' → logprob: -10.286840438842773
    10. '-parent' → logprob: -10.286840438842773

Token 316: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1840881109237671
    2. ':
' → logprob: -1.809088110923767
    3. '!=' → logprob: -6.059088230133057
    4. ' !=' → logprob: -6.809088230133057
    5. '==' → logprob: -7.684088230133057
    6. ' and' → logprob: -9.184087753295898
    7. '):
' → logprob: -9.684087753295898
    8. ' :' → logprob: -9.809087753295898
    9. ' ==' → logprob: -9.934087753295898
    10. '=' → logprob: -10.059087753295898

Token 317: ' ' (ID: 220)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012712361291050911
    2. ' task' → logprob: -4.512712478637695
    3. 'task' → logprob: -6.512712478637695
    4. ':
' → logprob: -9.512712478637695
    5. '(task' → logprob: -10.512712478637695
    6. ':' → logprob: -11.012712478637695
    7. '
' → logprob: -11.262712478637695
    8. '```' → logprob: -11.762712478637695
    9. '	       ' → logprob: -12.012712478637695
    10. '.task' → logprob: -12.137712478637695

Token 318: ' #' (ID: 1069)
  Prédit: 'task'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'task' → logprob: -0.37632685899734497
    2. '           ' → logprob: -1.3763267993927002
    3. ' task' → logprob: -2.8763267993927
    4. '       ' → logprob: -5.626327037811279
    5. '(task' → logprob: -7.251327037811279
    6. '   ' → logprob: -8.001326560974121
    7. '(' → logprob: -9.376326560974121
    8. '               ' → logprob: -11.251326560974121
    9. ' (' → logprob: -11.751326560974121
    10. '          ' → logprob: -12.126326560974121

Token 319: ' xor' (ID: 106402)
  Prédit: ' task'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' task' → logprob: -0.6704293489456177
    2. 'task' → logprob: -0.9204293489456177
    3. '           ' → logprob: -2.420429229736328
    4. '   ' → logprob: -7.170429229736328
    5. '       ' → logprob: -7.920429229736328
    6. '	task' → logprob: -10.420429229736328
    7. '               ' → logprob: -10.795429229736328
    8. '
' → logprob: -11.045429229736328
    9. ' ' → logprob: -11.045429229736328
    10. '          ' → logprob: -11.795429229736328

Token 320: ' instead' (ID: 7665)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.060825418680906296
    2. ':
' → logprob: -3.9358253479003906
    3. '!=' → logprob: -3.9358253479003906
    4. ' !=' → logprob: -4.685825347900391
    5. ' and' → logprob: -5.560825347900391
    6. '   ' → logprob: -5.810825347900391
    7. '):' → logprob: -7.560825347900391
    8. 'and' → logprob: -7.685825347900391
    9. '0' → logprob: -7.810825347900391
    10. '):
' → logprob: -7.935825347900391

Token 321: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.3975038528442383
    2. '       ' → logprob: -1.3975038528442383
    3. '   ' → logprob: -3.8975038528442383
    4. 'of' → logprob: -4.147503852844238
    5. ':' → logprob: -4.647503852844238
    6. '           ' → logprob: -4.897503852844238
    7. '=' → logprob: -5.022503852844238
    8. ' for' → logprob: -5.397503852844238
    9. ':
' → logprob: -5.897503852844238
    10. ' (' → logprob: -6.147503852844238

Token 322: ' !=' (ID: 1666)
  Prédit: '(ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ch' → logprob: -0.2918974757194519
    2. 'ch' → logprob: -1.7918975353240967
    3. '!=' → logprob: -2.6668975353240967
    4. ' ch' → logprob: -4.291897296905518
    5. ' (' → logprob: -6.541897296905518
    6. ' !=' → logprob: -6.791897296905518
    7. 'not' → logprob: -8.791897773742676
    8. '==' → logprob: -9.041897773742676
    9. '(' → logprob: -9.166897773742676
    10. '[ch' → logprob: -9.541897773742676

Token 323: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2889583110809326
    2. '       ' → logprob: -2.0389583110809326
    3. ':
' → logprob: -2.9139583110809326
    4. '           ' → logprob: -3.7889583110809326
    5. '=' → logprob: -4.788958549499512
    6. '   ' → logprob: -5.038958549499512
    7. '0' → logprob: -5.538958549499512
    8. '==' → logprob: -5.663958549499512
    9. '):
' → logprob: -5.788958549499512
    10. ' :' → logprob: -5.788958549499512

Token 324: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09468378126621246
    2. ':
' → logprob: -2.969683885574341
    3. ':' → logprob: -3.594683885574341
    4. '       ' → logprob: -4.969683647155762
    5. ' task' → logprob: -5.844683647155762
    6. 'task' → logprob: -7.219683647155762
    7. '   ' → logprob: -8.344683647155762
    8. ' :
' → logprob: -8.344683647155762
    9. '(task' → logprob: -8.844683647155762
    10. '):
' → logprob: -9.094683647155762

Token 325: ' task' (ID: 5296)
  Prédit: 'task'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'task' (adapté à ' task') → logprob: -0.008732876740396023
    2. ' task' → logprob: -4.758732795715332
    3. '           ' → logprob: -9.383732795715332
    4. '   ' → logprob: -10.758732795715332
    5. '               ' → logprob: -12.008732795715332
    6. '	task' → logprob: -12.508732795715332
    7. '
' → logprob: -13.633732795715332
    8. '       ' → logprob: -13.758732795715332
    9. '(task' → logprob: -15.633732795715332
    10. '0' → logprob: -15.633732795715332

Token 326: 'z' (ID: 89)
  Prédit: 'z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: 0.0
    2. 'з' → logprob: -17.875
    3. 'sz' → logprob: -18.0
    4. '.append' → logprob: -18.125
    5. '_z' → logprob: -18.75
    6. 's' → logprob: -18.875
    7. 'x' → logprob: -19.25
    8. 'zs' → logprob: -19.375
    9. ' z' → logprob: -19.875
    10. '```' → logprob: -20.125

Token 327: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.23083080351352692
    2. ' +=' → logprob: -1.8558307886123657
    3. '+=' → logprob: -3.1058309078216553
    4. '.' → logprob: -5.605830669403076
    5. '+' → logprob: -7.480830669403076
    6. '+=(' → logprob: -7.605830669403076
    7. ' .' → logprob: -8.980831146240234
    8. '   ' → logprob: -9.855831146240234
    9. '+.' → logprob: -10.480831146240234
    10. '.extend' → logprob: -10.980831146240234

Token 328: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.006001671310514212
    2. '(h' → logprob: -5.5060014724731445
    3. '(' → logprob: -6.2560014724731445
    4. '   ' → logprob: -13.381001472473145
    5. '(
' → logprob: -14.631001472473145
    6. ' (' → logprob: -16.50600242614746
    7. '(('' → logprob: -16.50600242614746
    8. ' ((' → logprob: -16.63100242614746
    9. ' ' → logprob: -16.75600242614746
    10. '(((' → logprob: -16.88100242614746

Token 329: 'here' (ID: 19992)
  Prédit: 'here'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'here' → logprob: -6.098748053773306e-05
    2. ' here' → logprob: -9.75006103515625
    3. '   ' → logprob: -13.00006103515625
    4. 'Here' → logprob: -16.87506103515625
    5. 'her' → logprob: -17.12506103515625
    6. '  ' → logprob: -17.12506103515625
    7. '
' → logprob: -17.25006103515625
    8. ' ' → logprob: -17.25006103515625
    9. '_here' → logprob: -17.25006103515625
    10. 'heres' → logprob: -17.37506103515625

Token 330: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.048662763088941574
    2. ',ch' → logprob: -3.0486626625061035
    3. ' ,' → logprob: -9.548663139343262
    4. ' ch' → logprob: -13.173663139343262
    5. 'ch' → logprob: -13.548663139343262
    6. '   ' → logprob: -15.298663139343262
    7. ',
' → logprob: -15.423663139343262
    8. '	ch' → logprob: -15.798663139343262
    9. '           ' → logprob: -16.173662185668945
    10. '       ' → logprob: -16.798662185668945

Token 331: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -9.889424836728722e-05
    2. ' ch' → logprob: -9.250099182128906
    3. '           ' → logprob: -14.000099182128906
    4. '   ' → logprob: -14.500099182128906
    5. '          ' → logprob: -14.875099182128906
    6. '	ch' → logprob: -14.875099182128906
    7. '       ' → logprob: -15.250099182128906
    8. '         ' → logprob: -16.750099182128906
    9. '               ' → logprob: -16.750099182128906
    10. '        ' → logprob: -17.000099182128906

Token 332: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008104594890028238
    2. ' ,' → logprob: -7.250810623168945
    3. '0' → logprob: -9.375810623168945
    4. ' ' → logprob: -12.375810623168945
    5. '_,' → logprob: -12.625810623168945
    6. '  ' → logprob: -13.125810623168945
    7. '   ' → logprob: -13.250810623168945
    8. '          ' → logprob: -13.875810623168945
    9. '           ' → logprob: -14.000810623168945
    10. '       ' → logprob: -14.500810623168945

Token 333: ' None' (ID: 4662)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.48040392994880676
    2. '_' → logprob: -1.4804039001464844
    3. 'idx' → logprob: -2.7304039001464844
    4. 'A' → logprob: -3.6054039001464844
    5. 'dp' → logprob: -3.8554039001464844
    6. 'flag' → logprob: -3.9804039001464844
    7. 'None' → logprob: -5.230403900146484
    8. 'len' → logprob: -5.855403900146484
    9. '-' → logprob: -6.480403900146484
    10. 'Len' → logprob: -6.605403900146484

Token 334: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004231667553540319
    2. ' ,' → logprob: -8.375423431396484
    3. '0' → logprob: -8.625423431396484
    4. '))' → logprob: -11.500423431396484
    5. '1' → logprob: -14.250423431396484
    6. ' ' → logprob: -14.250423431396484
    7. '2' → logprob: -14.875423431396484
    8. ',
' → logprob: -15.000423431396484
    9. '   ' → logprob: -15.125423431396484
    10. '```' → logprob: -16.000423431396484

Token 335: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4021237802808173e-05
    2. ' ' → logprob: -11.250014305114746
    3. '   ' → logprob: -14.000014305114746
    4. '  ' → logprob: -17.06251335144043
    5. '           ' → logprob: -17.37501335144043
    6. ')' → logprob: -17.68751335144043
    7. '       ' → logprob: -17.75001335144043
    8. '۰' → logprob: -18.06251335144043
    9. '    ' → logprob: -18.12501335144043
    10. 'False' → logprob: -18.18751335144043

Token 336: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.375001907348633
    3. '   ' → logprob: -15.812501907348633
    4. '))' → logprob: -16.125001907348633
    5. ')' → logprob: -17.000001907348633
    6. '1' → logprob: -17.250001907348633
    7. '۰' → logprob: -17.812501907348633
    8. '```' → logprob: -18.187501907348633
    9. 'flag' → logprob: -18.250001907348633
    10. 'False' → logprob: -18.500001907348633

Token 337: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -3.4285862057004124e-05
    2. '))
' → logprob: -10.87503433227539
    3. ')' → logprob: -11.12503433227539
    4. ')))' → logprob: -15.00003433227539
    5. '   ' → logprob: -16.50003433227539
    6. '));' → logprob: -17.00003433227539
    7. ' ))' → logprob: -17.37503433227539
    8. '))

' → logprob: -18.50003433227539
    9. ')
' → logprob: -18.62503433227539
    10. '),' → logprob: -19.25003433227539

Token 338: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 339: '('\' (ID: 24345)
  Prédit: '(max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.0023051274474710226
    2. '(' → logprob: -7.002305030822754
    3. '(len' → logprob: -7.252305030822754
    4. '(L' → logprob: -7.752305030822754
    5. '(min' → logprob: -8.752305030822754
    6. 'max' → logprob: -9.502305030822754
    7. '(sum' → logprob: -11.627305030822754
    8. '('' → logprob: -12.377305030822754
    9. '(
' → logprob: -12.627305030822754
    10. '()' → logprob: -13.502305030822754

Token 340: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1610218584537506
    2. 'Len' → logprob: -2.0360219478607178
    3. 'max' → logprob: -4.536021709442139
    4. ' n' → logprob: -6.911021709442139
    5. 'len' → logprob: -7.161021709442139
    6. ' max' → logprob: -7.161021709442139
    7. 'Max' → logprob: -7.286021709442139
    8. ' Len' → logprob: -7.286021709442139
    9. 'd' → logprob: -7.911021709442139
    10. ' len' → logprob: -8.161022186279297

Token 341: ''.' (ID: 6120)
  Prédit: ''.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.006764160469174385
    2. 'join' → logprob: -5.131763935089111
    3. ''' → logprob: -7.881763935089111
    4. 'max' → logprob: -8.13176441192627
    5. '.join' → logprob: -9.50676441192627
    6. 'len' → logprob: -10.63176441192627
    7. '".' → logprob: -10.75676441192627
    8. '')' → logprob: -11.75676441192627
    9. '''.' → logprob: -12.00676441192627
    10. ' '.' → logprob: -12.25676441192627

Token 342: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -6.869017852295656e-06
    2. 'j' → logprob: -12.875006675720215
    3. ' join' → logprob: -13.125006675720215
    4. 'jo' → logprob: -13.250006675720215
    5. '```' → logprob: -15.875006675720215
    6. 'print' → logprob: -16.25000762939453
    7. ')' → logprob: -16.25000762939453
    8. '
' → logprob: -17.62500762939453
    9. ' ' → logprob: -17.87500762939453
    10. 'sep' → logprob: -18.00000762939453

Token 343: '(map' (ID: 16946)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.0233928095549345
    2. '(map' → logprob: -4.023392677307129
    3. 'str' → logprob: -5.273392677307129
    4. '(str' → logprob: -9.773392677307129
    5. ' map' → logprob: -10.148392677307129
    6. '   ' → logprob: -12.398392677307129
    7. '[str' → logprob: -13.898392677307129
    8. '	map' → logprob: -14.273392677307129
    9. ',map' → logprob: -14.523392677307129
    10. ' str' → logprob: -15.148392677307129

Token 344: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.0005666146171279252
    2. 'str' → logprob: -7.500566482543945
    3. '(len' → logprob: -12.125566482543945
    4. '(' → logprob: -12.125566482543945
    5. ' str' → logprob: -13.750566482543945
    6. '[str' → logprob: -14.625566482543945
    7. '```' → logprob: -15.250566482543945
    8. ')' → logprob: -15.875566482543945
    9. ' (' → logprob: -16.000566482543945
    10. '(lambda' → logprob: -16.125566482543945

Token 345: ',' (ID: 11)
  Prédit: '(L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.0014572588261216879
    2. ',' → logprob: -6.751457214355469
    3. '(len' → logprob: -8.751457214355469
    4. ',len' → logprob: -9.751457214355469
    5. ' (' → logprob: -10.501457214355469
    6. ',L' → logprob: -11.001457214355469
    7. ' ,' → logprob: -11.626457214355469
    8. ',(' → logprob: -11.876457214355469
    9. '(' → logprob: -12.876457214355469
    10. ')(' → logprob: -13.001457214355469

Token 346: ' Len' (ID: 38183)
  Prédit: 'Len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Len' → logprob: -0.005964699666947126
    2. ' Len' → logprob: -5.130964756011963
    3. '(L' → logprob: -10.755964279174805
    4. '   ' → logprob: -13.130964279174805
    5. 'Length' → logprob: -13.130964279174805
    6. 'Ln' → logprob: -13.130964279174805
    7. ' ' → logprob: -13.505964279174805
    8. '[' → logprob: -13.755964279174805
    9. 'len' → logprob: -13.755964279174805
    10. '(' → logprob: -13.755964279174805

Token 347: ')))' (ID: 15975)
  Prédit: ')))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.008755793794989586
    2. '))' → logprob: -4.758755683898926
    3. ')))
' → logprob: -10.133755683898926
    4. ')' → logprob: -10.258755683898926
    5. '))))' → logprob: -10.258755683898926
    6. ')));' → logprob: -11.508755683898926
    7. '(' → logprob: -11.633755683898926
    8. ' ' → logprob: -12.758755683898926
    9. '))
' → logprob: -12.883755683898926
    10. ')))

' → logprob: -13.133755683898926


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 345
Tokens correctement prédits (1ère position, stricte): 121
Tokens correctement prédits (1ère position, avec adaptation): 129
Tokens correctement prédits (top 10): 247
Précision stricte (1ère position): 35.07%
Précision adaptée (1ère position): 37.39%
Précision (top 10): 71.59%
================================================================================
