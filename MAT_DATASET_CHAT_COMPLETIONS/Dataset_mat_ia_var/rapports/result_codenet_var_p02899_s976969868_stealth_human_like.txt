================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:43:47
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())  # taille du tableau
row = []
for j in range(n):
    row.append(0)
row2 = list(map(int, input().split()))

for idx in range(n):
    # on remplit les valeurs en fonction de row2
    val = row2[idx] - 1
    row[val] = idx + 1

# affichage, un peu manuel...
for k in range(len(row)):
    print(row[k], end=" " if k != n - 1 else "\n")
# fin, ok
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003032881941180676
    2. '(n' → logprob: -9.250303268432617
    3. ''' → logprob: -9.625303268432617
    4. '```' → logprob: -10.375303268432617
    5. '('' → logprob: -10.625303268432617
    6. '`' → logprob: -11.000303268432617
    7. '()' → logprob: -11.000303268432617
    8. '("("' → logprob: -11.125303268432617
    9. ')' → logprob: -12.000303268432617
    10. 'n' → logprob: -12.125303268432617

Token 4: '())' (ID: 3516)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0733630508184433
    2. ')' → logprob: -2.8233630657196045
    3. '()' → logprob: -4.698362827301025
    4. '())' → logprob: -6.948362827301025
    5. '```' → logprob: -8.198363304138184
    6. '(
' → logprob: -8.448363304138184
    7. '('' → logprob: -8.948363304138184
    8. '(()' → logprob: -9.073363304138184
    9. '`' → logprob: -9.198363304138184
    10. '("("' → logprob: -9.698363304138184

Token 5: ' ' (ID: 220)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.11006953567266464
    2. '\' → logprob: -3.235069513320923
    3. 'for' → logprob: -4.110069751739502
    4. '
' → logprob: -4.235069751739502
    5. '```' → logprob: -4.235069751739502
    6. '\r' → logprob: -5.360069751739502
    7. '#' → logprob: -5.485069751739502
    8. '`' → logprob: -6.485069751739502
    9. 'if' → logprob: -6.735069751739502
    10. '' → logprob: -6.985069751739502

Token 6: ' #' (ID: 1069)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7931222915649414
    2. 's' → logprob: -1.9181222915649414
    3. 'if' → logprob: -2.2931222915649414
    4. 'for' → logprob: -2.2931222915649414
    5. ' ' → logprob: -3.2931222915649414
    6. '\n' → logprob: -3.6681222915649414
    7. '#' → logprob: -3.7931222915649414
    8. 'x' → logprob: -4.043122291564941
    9. 'a' → logprob: -4.293122291564941
    10. ''' → logprob: -4.418122291564941

Token 7: ' taille' (ID: 41644)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.042658500373363495
    2. ' \' → logprob: -3.667658567428589
    3. '\' → logprob: -5.41765832901001
    4. '  ' → logprob: -5.54265832901001
    5. '\n' → logprob: -6.29265832901001
    6. ''' → logprob: -6.91765832901001
    7. ' n' → logprob: -7.04265832901001
    8. 'n' → logprob: -7.91765832901001
    9. ' )' → logprob: -8.042658805847168
    10. ')' → logprob: -8.042658805847168

Token 8: ' du' (ID: 1462)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.3588804006576538
    2. '\' → logprob: -1.4838804006576538
    3. ' ' → logprob: -3.9838805198669434
    4. '#' → logprob: -4.608880519866943
    5. '\r' → logprob: -5.233880519866943
    6. 'for' → logprob: -5.233880519866943
    7. '```' → logprob: -5.233880519866943
    8. '
' → logprob: -5.483880519866943
    9. ')' → logprob: -5.608880519866943
    10. ' 
' → logprob: -5.983880519866943

Token 9: ' tableau' (ID: 67053)
  Prédit: 'table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'table' → logprob: -0.067512147128582
    2. 'plate' → logprob: -3.692512035369873
    3. 'triangle' → logprob: -4.817512035369873
    4. 'tab' → logprob: -5.067512035369873
    5. 'cube' → logprob: -5.192512035369873
    6. ' tableau' → logprob: -5.442512035369873
    7. 'c' → logprob: -5.817512035369873
    8. 'gr' → logprob: -5.942512035369873
    9. 's' → logprob: -6.567512035369873
    10. 'tabl' → logprob: -6.817512035369873

Token 10: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6647301912307739
    2. '\' → logprob: -1.664730191230774
    3. '\n' → logprob: -1.789730191230774
    4. '[' → logprob: -3.4147300720214844
    5. ' 
' → logprob: -3.7897300720214844
    6. 'a' → logprob: -4.289730072021484
    7. '' → logprob: -4.414730072021484
    8. ' ' → logprob: -4.914730072021484
    9. '[
' → logprob: -5.414730072021484
    10. '```' → logprob: -5.414730072021484

Token 11: 'row' (ID: 843)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.09898320585489273
    2. 't' → logprob: -3.2239832878112793
    3. '\' → logprob: -4.348983287811279
    4. '\n' → logprob: -4.848983287811279
    5. 'array' → logprob: -5.473983287811279
    6. '[' → logprob: -5.473983287811279
    7. '```' → logprob: -5.473983287811279
    8. 'data' → logprob: -5.723983287811279
    9. 'arr' → logprob: -5.723983287811279
    10. ' ' → logprob: -6.473983287811279

Token 12: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.08710489422082901
    2. '_' → logprob: -2.5871047973632812
    3. '[:]' → logprob: -5.837104797363281
    4. '[' → logprob: -6.087104797363281
    5. ' =' → logprob: -6.837104797363281
    6. '_s' → logprob: -6.837104797363281
    7. '[]' → logprob: -7.837104797363281
    8. ' ' → logprob: -8.837104797363281
    9. ']' → logprob: -9.962104797363281
    10. '=' → logprob: -10.212104797363281

Token 13: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.8062077760696411
    2. '[' → logprob: -1.0562077760696411
    3. ' [' → logprob: -2.1812076568603516
    4. ' []' → logprob: -2.4312076568603516
    5. '[n' → logprob: -5.806207656860352
    6. '[int' → logprob: -7.306207656860352
    7. '[input' → logprob: -8.056207656860352
    8. '[row' → logprob: -8.556207656860352
    9. '['' → logprob: -9.306207656860352
    10. '[len' → logprob: -9.556207656860352

Token 14: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10415512323379517
    2. '[' → logprob: -2.8541550636291504
    3. ' for' → logprob: -4.10415506362915
    4. ' ' → logprob: -4.72915506362915
    5. 'n' → logprob: -4.97915506362915
    6. 'i' → logprob: -6.22915506362915
    7. 'f' → logprob: -6.60415506362915
    8. 's' → logprob: -6.97915506362915
    9. '[]' → logprob: -7.60415506362915
    10. '\[' → logprob: -8.104155540466309

Token 15: ' j' (ID: 441)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6368524432182312
    2. ' ' → logprob: -0.7618524432182312
    3. ' _' → logprob: -6.761852264404297
    4. '_' → logprob: -6.761852264404297
    5. '  ' → logprob: -6.886852264404297
    6. 'i' → logprob: -7.386852264404297
    7. ' n' → logprob: -9.136852264404297
    8. ' range' → logprob: -10.136852264404297
    9. ' ' → logprob: -10.261852264404297
    10. ' ‌' → logprob: -10.386852264404297

Token 16: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0439835861325264
    2. 'in' → logprob: -3.2939836978912354
    3. ' ' → logprob: -5.418983459472656
    4. 'n' → logprob: -6.918983459472656
    5. '  ' → logprob: -8.543983459472656
    6. ' i' → logprob: -9.543983459472656
    7. ' n' → logprob: -10.043983459472656
    8. ' j' → logprob: -10.168983459472656
    9. '_' → logprob: -10.793983459472656
    10. 'j' → logprob: -10.793983459472656

Token 17: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.02324850670993328
    2. 'range' → logprob: -3.7732484340667725
    3. ' ' → logprob: -13.023248672485352
    4. '	range' → logprob: -15.023248672485352
    5. '(range' → logprob: -16.27324867248535
    6. 'n' → logprob: -16.27324867248535
    7. ' ' → logprob: -16.39824867248535
    8. ' n' → logprob: -16.77324867248535
    9. '  ' → logprob: -16.89824867248535
    10. ' xrange' → logprob: -17.02324867248535

Token 18: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16091863811016083
    2. '(n' → logprob: -1.9109185934066772
    3. ' (' → logprob: -7.410918712615967
    4. '(len' → logprob: -10.660918235778809
    5. '(space' → logprob: -11.160918235778809
    6. '(s' → logprob: -11.285918235778809
    7. '(range' → logprob: -12.160918235778809
    8. ' ' → logprob: -12.160918235778809
    9. '()' → logprob: -12.410918235778809
    10. '(
' → logprob: -12.660918235778809

Token 19: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002097326098009944
    2. ')' → logprob: -6.502097129821777
    3. '+' → logprob: -8.002097129821777
    4. '):
' → logprob: -9.002097129821777
    5. ' ):' → logprob: -9.127097129821777
    6. ':' → logprob: -11.127097129821777
    7. ',' → logprob: -12.752097129821777
    8. '**' → logprob: -12.877097129821777
    9. ' ' → logprob: -13.252097129821777
    10. ' +' → logprob: -13.627097129821777

Token 20: '   ' (ID: 271)
  Prédit: ' row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.7053324580192566
    2. ' ' → logprob: -1.4553325176239014
    3. '   ' → logprob: -2.0803325176239014
    4. 'row' → logprob: -2.3303325176239014
    5. '    ' → logprob: -3.3303325176239014
    6. '	row' → logprob: -5.705332279205322
    7. '     
' → logprob: -6.205332279205322
    8. ' 
' → logprob: -6.455332279205322
    9. '[row' → logprob: -6.955332279205322
    10. '[' → logprob: -6.955332279205322

Token 21: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' (adapté à ' row') → logprob: -0.2266165018081665
    2. ' row' → logprob: -1.6016165018081665
    3. '   ' → logprob: -7.226616382598877
    4. ' ' → logprob: -8.476616859436035
    5. 'rows' → logprob: -9.976616859436035
    6. 'line' → logprob: -10.601616859436035
    7. 'print' → logprob: -11.226616859436035
    8. 'x' → logprob: -11.351616859436035
    9. '	row' → logprob: -11.351616859436035
    10. 'n' → logprob: -11.476616859436035

Token 22: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.026328863576054573
    2. '.' → logprob: -3.6513288021087646
    3. ' .' → logprob: -11.526329040527344
    4. '.extend' → logprob: -11.651329040527344
    5. 'append' → logprob: -12.901329040527344
    6. '.app' → logprob: -13.276329040527344
    7. ' =' → logprob: -14.026329040527344
    8. '.insert' → logprob: -14.026329040527344
    9. '.push' → logprob: -14.526329040527344
    10. '.add' → logprob: -14.651329040527344

Token 23: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08500394970178604
    2. '(int' → logprob: -3.3350038528442383
    3. '([]' → logprob: -3.4600038528442383
    4. '(j' → logprob: -4.835003852844238
    5. '([' → logprob: -5.835003852844238
    6. '0' → logprob: -6.710003852844238
    7. '(i' → logprob: -7.710003852844238
    8. '(None' → logprob: -7.710003852844238
    9. '(False' → logprob: -8.085003852844238
    10. '((' → logprob: -8.335003852844238

Token 24: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0358658991754055
    2. 'int' → logprob: -3.4108657836914062
    3. 'j' → logprob: -7.535865783691406
    4. '[]' → logprob: -7.660865783691406
    5. '[])' → logprob: -7.785865783691406
    6. 'input' → logprob: -8.035865783691406
    7. ')' → logprob: -9.035865783691406
    8. '[int' → logprob: -9.160865783691406
    9. ' ' → logprob: -9.785865783691406
    10. '[j' → logprob: -9.910865783691406

Token 25: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. ' )' → logprob: -14.875000953674316
    3. ')
' → logprob: -15.250000953674316
    4. '))' → logprob: -16.875
    5. ']' → logprob: -17.25
    6. '[' → logprob: -17.5
    7. '')' → logprob: -17.75
    8. '`)' → logprob: -18.5
    9. ')

' → logprob: -18.75
    10. '   ' → logprob: -19.25

Token 26: 'row' (ID: 843)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2457765340805054
    2. '<|end|>' → logprob: -1.4957765340805054
    3. '
' → logprob: -1.9957765340805054
    4. 'for' → logprob: -2.370776653289795
    5. ' ' → logprob: -2.620776653289795
    6. 'n' → logprob: -2.745776653289795
    7. '\n' → logprob: -3.620776653289795
    8. '[n' → logprob: -3.745776653289795
    9. ']' → logprob: -3.995776653289795
    10. '[
' → logprob: -4.745776653289795

Token 27: '2' (ID: 17)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 28: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6981552839279175
    2. '.append' → logprob: -1.3231552839279175
    3. '[' → logprob: -1.6981552839279175
    4. ' =' → logprob: -3.573155403137207
    5. '=' → logprob: -4.948155403137207
    6. '[]' → logprob: -4.948155403137207
    7. '[:]' → logprob: -5.448155403137207
    8. 's' → logprob: -5.698155403137207
    9. '2' → logprob: -6.698155403137207
    10. ')' → logprob: -7.573155403137207

Token 29: ' list' (ID: 1562)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.2612325847148895
    2. '[]' → logprob: -1.761232614517212
    3. ' [' → logprob: -3.011232614517212
    4. '[' → logprob: -4.886232376098633
    5. '[row' → logprob: -7.136232376098633
    6. 'row' → logprob: -8.761232376098633
    7. ' row' → logprob: -9.136232376098633
    8. '[:]' → logprob: -9.511232376098633
    9. ' ' → logprob: -9.886232376098633
    10. '[]}' → logprob: -11.136232376098633

Token 30: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.39613667130470276
    2. '(range' → logprob: -1.2711366415023804
    3. '(row' → logprob: -3.14613676071167
    4. '()' → logprob: -5.89613676071167
    5. '([' → logprob: -8.521136283874512
    6. '(s' → logprob: -8.771136283874512
    7. '((' → logprob: -9.146136283874512
    8. '([]' → logprob: -9.646136283874512
    9. '(r' → logprob: -10.021136283874512
    10. '(
' → logprob: -10.521136283874512

Token 31: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.10074830800294876
    2. '(' → logprob: -2.350748300552368
    3. '(input' → logprob: -8.100748062133789
    4. '(lambda' → logprob: -8.600748062133789
    5. '(str' → logprob: -10.975748062133789
    6. '(
' → logprob: -10.975748062133789
    7. '<int' → logprob: -12.225748062133789
    8. ')' → logprob: -12.600748062133789
    9. 'int' → logprob: -13.100748062133789
    10. '(

' → logprob: -13.225748062133789

Token 32: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.004013576544821262
    2. '(' → logprob: -6.129013538360596
    3. ',input' → logprob: -6.379013538360596
    4. 'input' → logprob: -9.379014015197754
    5. ',' → logprob: -10.504014015197754
    6. ' (' → logprob: -11.504014015197754
    7. ' input' → logprob: -12.629014015197754
    8. ')' → logprob: -13.504014015197754
    9. ' ,' → logprob: -14.379014015197754
    10. '(
' → logprob: -14.629014015197754

Token 33: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.31347885727882385
    2. ' input' → logprob: -1.3134788274765015
    3. '(input' → logprob: -8.688478469848633
    4. ')' → logprob: -11.063478469848633
    5. ',input' → logprob: -11.313478469848633
    6. ' ' → logprob: -11.563478469848633
    7. '=input' → logprob: -13.438478469848633
    8. ' )' → logprob: -13.563478469848633
    9. ' (' → logprob: -13.688478469848633
    10. '	input' → logprob: -13.938478469848633

Token 34: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.14082981646060944
    2. '()))' → logprob: -3.0158298015594482
    3. '())' → logprob: -3.1408298015594482
    4. '().' → logprob: -4.015830039978027
    5. '(' → logprob: -4.015830039978027
    6. '()));' → logprob: -6.890830039978027
    7. '()>' → logprob: -7.890830039978027
    8. '())))' → logprob: -8.265830039978027
    9. '());' → logprob: -8.515830039978027
    10. '(()' → logprob: -8.765830039978027

Token 35: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0007249409682117403
    2. 'strip' → logprob: -7.250724792480469
    3. ' split' → logprob: -11.500724792480469
    4. 'rstrip' → logprob: -12.750724792480469
    5. '(split' → logprob: -13.250724792480469
    6. ')' → logprob: -15.875724792480469
    7. 'spl' → logprob: -16.00072479248047
    8. 'read' → logprob: -17.00072479248047
    9. ' strip' → logprob: -17.37572479248047
    10. 's' → logprob: -17.75072479248047

Token 36: '()))

' (ID: 125972)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.7163071036338806
    2. '()))' → logprob: -0.7163071036338806
    3. '()' → logprob: -3.8413071632385254
    4. '(' → logprob: -6.841307163238525
    5. ')' → logprob: -8.841306686401367
    6. '))' → logprob: -9.216306686401367
    7. '())))' → logprob: -9.591306686401367
    8. '()))
' → logprob: -11.716306686401367
    9. '()));' → logprob: -11.841306686401367
    10. '()),' → logprob: -11.966306686401367

Token 37: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.008143718354403973
    2. ' for' → logprob: -5.508143901824951
    3. '
' → logprob: -6.508143901824951
    4. 'n' → logprob: -7.633143901824951
    5. '\n' → logprob: -7.633143901824951
    6. '[' → logprob: -7.758143901824951
    7. 'if' → logprob: -8.008143424987793
    8. 'i' → logprob: -8.633143424987793
    9. '\' → logprob: -9.008143424987793
    10. 's' → logprob: -9.508143424987793

Token 38: ' idx' (ID: 14016)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2828863859176636
    2. ' i' → logprob: -1.5328863859176636
    3. ' j' → logprob: -3.532886505126953
    4. 'i' → logprob: -7.407886505126953
    5. 'j' → logprob: -8.657886505126953
    6. '_' → logprob: -8.657886505126953
    7. ' _' → logprob: -8.782886505126953
    8. '  ' → logprob: -9.657886505126953
    9. ' ' → logprob: -10.657886505126953
    10. ' row' → logprob: -10.782886505126953

Token 39: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.030242951586842537
    2. 'in' → logprob: -3.530242919921875
    3. ' ' → logprob: -7.905242919921875
    4. ',' → logprob: -9.280242919921875
    5. '  ' → logprob: -12.030242919921875
    6. ' ,' → logprob: -12.280242919921875
    7. ' ' → logprob: -12.655242919921875
    8. ')' → logprob: -12.905242919921875
    9. '   ' → logprob: -13.155242919921875
    10. '_' → logprob: -13.155242919921875

Token 40: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.16079594194889069
    2. ' range' → logprob: -1.9107959270477295
    3. 'row' → logprob: -7.535796165466309
    4. '(range' → logprob: -10.660796165466309
    5. ' row' → logprob: -11.410796165466309
    6. '	range' → logprob: -13.410796165466309
    7. ' ' → logprob: -14.410796165466309
    8. '(row' → logprob: -15.035796165466309
    9. 'enumer' → logprob: -15.285796165466309
    10. '```' → logprob: -15.785796165466309

Token 41: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.47423163056373596
    2. '(n' → logprob: -0.9742316007614136
    3. '(len' → logprob: -8.849231719970703
    4. ' (' → logprob: -11.599231719970703
    5. '(
' → logprob: -14.224231719970703
    6. '(

' → logprob: -14.974231719970703
    7. '(s' → logprob: -15.224231719970703
    8. '((' → logprob: -15.974231719970703
    9. '(length' → logprob: -16.724231719970703
    10. '()' → logprob: -16.849231719970703

Token 42: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.046316541731357574
    2. ')' → logprob: -3.171316623687744
    3. ' ):' → logprob: -5.796316623687744
    4. ' )' → logprob: -8.546316146850586
    5. ':' → logprob: -10.546316146850586
    6. '+' → logprob: -10.671316146850586
    7. '):
' → logprob: -10.796316146850586
    8. '-' → logprob: -13.421316146850586
    9. '>' → logprob: -13.796316146850586
    10. '   ' → logprob: -14.046316146850586

Token 43: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5065222978591919
    2. ':' → logprob: -1.631522297859192
    3. ' ' → logprob: -1.756522297859192
    4. ' if' → logprob: -5.006522178649902
    5. ' row' → logprob: -5.381522178649902
    6. ' :' → logprob: -5.756522178649902
    7. 'row' → logprob: -5.881522178649902
    8. '[' → logprob: -6.256522178649902
    9. '    ' → logprob: -6.256522178649902
    10. 'if' → logprob: -6.631522178649902

Token 44: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.01713835634291172
    2. ' row' → logprob: -5.142138481140137
    3. ' if' → logprob: -5.642138481140137
    4. 'row' → logprob: -6.142138481140137
    5. '<|end|>' → logprob: -6.267138481140137
    6. '   ' → logprob: -6.392138481140137
    7. '    ' → logprob: -7.267138481140137
    8. 'if' → logprob: -7.642138481140137
    9. '  ' → logprob: -8.517138481140137
    10. '_' → logprob: -9.892138481140137

Token 45: ' on' (ID: 402)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.06614800542593002
    2. ' row' → logprob: -3.566148042678833
    3. 'if' → logprob: -3.691148042678833
    4. ' ' → logprob: -5.691147804260254
    5. '   ' → logprob: -5.691147804260254
    6. 'row' → logprob: -5.816147804260254
    7. '    ' → logprob: -7.691147804260254
    8. ')' → logprob: -8.691147804260254
    9. ' i' → logprob: -9.191147804260254
    10. '  ' → logprob: -9.316147804260254

Token 46: ' rem' (ID: 1662)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.02960490621626377
    2. 'if' → logprob: -3.904604911804199
    3. ' ' → logprob: -5.279604911804199
    4. ' row' → logprob: -6.654604911804199
    5. ' a' → logprob: -8.5296049118042
    6. ' i' → logprob: -8.6546049118042
    7. ' ' → logprob: -8.6546049118042
    8. ' range' → logprob: -8.6546049118042
    9. ' print' → logprob: -8.6546049118042
    10. ' s' → logprob: -8.7796049118042

Token 47: 'plit' (ID: 4059)
  Prédit: 'plit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plit' → logprob: -0.056786730885505676
    2. 'place' → logprob: -3.1817867755889893
    3. 'pl' → logprob: -4.80678653717041
    4. 'p' → logprob: -5.43178653717041
    5. 'et' → logprob: -8.30678653717041
    6. 'plet' → logprob: -8.68178653717041
    7. 'ple' → logprob: -8.80678653717041
    8. 'pli' → logprob: -9.05678653717041
    9. 'plt' → logprob: -9.30678653717041
    10. 'pile' → logprob: -9.80678653717041

Token 48: ' les' (ID: 1341)
  Prédit: ' row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.5224327445030212
    2. 'row' → logprob: -1.772432804107666
    3. ' ' → logprob: -2.147432804107666
    4. '(row' → logprob: -2.397432804107666
    5. '  ' → logprob: -4.897432804107666
    6. '<|end|>' → logprob: -5.647432804107666
    7. '[row' → logprob: -5.897432804107666
    8. '	row' → logprob: -5.897432804107666
    9. ' ' → logprob: -6.022432804107666
    10. '   ' → logprob: -6.147432804107666

Token 49: ' valeurs' (ID: 73668)
  Prédit: ' lignes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lignes' → logprob: -1.556687831878662
    2. 'row' → logprob: -2.306687831878662
    3. ' éléments' → logprob: -2.931687831878662
    4. ' ' → logprob: -2.931687831878662
    5. 'élé' → logprob: -3.056687831878662
    6. ' row' → logprob: -3.056687831878662
    7. ' cases' → logprob: -3.056687831878662
    8. ' z' → logprob: -3.181687831878662
    9. ' valeurs' → logprob: -3.181687831878662
    10. 'cases' → logprob: -3.181687831878662

Token 50: ' en' (ID: 469)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6519667506217957
    2. ' row' → logprob: -1.6519668102264404
    3. '[row' → logprob: -2.5269668102264404
    4. ' ' → logprob: -2.6519668102264404
    5. '[' → logprob: -2.7769668102264404
    6. 'row' → logprob: -3.5269668102264404
    7. ' if' → logprob: -4.026966571807861
    8. '(row' → logprob: -5.151966571807861
    9. '    ' → logprob: -5.401966571807861
    10. ')' → logprob: -6.026966571807861

Token 51: ' fonction' (ID: 17610)
  Prédit: 'fonction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fonction' → logprob: -0.5399079918861389
    2. ' fonction' → logprob: -2.039907932281494
    3. 's' → logprob: -2.664907932281494
    4. 'row' → logprob: -2.914907932281494
    5. 'range' → logprob: -3.539907932281494
    6. ' ' → logprob: -3.664907932281494
    7. 'f' → logprob: -3.789907932281494
    8. ' row' → logprob: -4.414907932281494
    9. '   ' → logprob: -5.289907932281494
    10. 'j' → logprob: -5.664907932281494

Token 52: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.036010339856147766
    2. ' of' → logprob: -4.911010265350342
    3. 'de' → logprob: -5.036010265350342
    4. ' du' → logprob: -5.036010265350342
    5. ' des' → logprob: -5.036010265350342
    6. '   ' → logprob: -6.161010265350342
    7. '<|end|>' → logprob: -6.286010265350342
    8. '    ' → logprob: -6.911010265350342
    9. '(row' → logprob: -7.161010265350342
    10. ')' → logprob: -7.661010265350342

Token 53: ' row' (ID: 5225)
  Prédit: ' row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.6305503845214844
    2. 'row' → logprob: -0.8805503845214844
    3. 'l' → logprob: -3.7555503845214844
    4. ' la' → logprob: -4.505550384521484
    5. 'la' → logprob: -5.255550384521484
    6. ' l' → logprob: -5.255550384521484
    7. 'leur' → logprob: -6.505550384521484
    8. ' leur' → logprob: -6.630550384521484
    9. 'range' → logprob: -6.880550384521484
    10. ' ' → logprob: -6.880550384521484

Token 54: '2' (ID: 17)
  Prédit: '[idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.5825055837631226
    2. '[' → logprob: -0.8325055837631226
    3. '[row' → logprob: -6.332505702972412
    4. '[]' → logprob: -7.457505702972412
    5. ' [' → logprob: -7.707505702972412
    6. ' ' → logprob: -7.832505702972412
    7. '```' → logprob: -7.832505702972412
    8. '[
' → logprob: -7.957505702972412
    9. '[:]' → logprob: -7.957505702972412
    10. '   ' → logprob: -8.082505226135254

Token 55: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5256556272506714
    2. ' if' → logprob: -1.5256556272506714
    3. '[' → logprob: -2.150655746459961
    4. '[row' → logprob: -3.150655746459961
    5. ':' → logprob: -3.900655746459961
    6. 'if' → logprob: -5.025655746459961
    7. ' ' → logprob: -7.025655746459961
    8. 'row' → logprob: -7.400655746459961
    9. '[i' → logprob: -7.400655746459961
    10. '```' → logprob: -7.650655746459961

Token 56: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6821317672729492
    2. '[' → logprob: -1.4321317672729492
    3. '[row' → logprob: -1.9321317672729492
    4. ' if' → logprob: -2.432131767272949
    5. 'if' → logprob: -5.182131767272949
    6. 'row' → logprob: -5.307131767272949
    7. ' ' → logprob: -5.307131767272949
    8. ':' → logprob: -6.557131767272949
    9. ' row' → logprob: -6.682131767272949
    10. '```' → logprob: -7.057131767272949

Token 57: ' val' (ID: 1459)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18984296917915344
    2. ' if' → logprob: -2.564842939376831
    3. ' row' → logprob: -2.814842939376831
    4. 'row' → logprob: -4.56484317779541
    5. ' ' → logprob: -4.81484317779541
    6. '[row' → logprob: -4.93984317779541
    7. '[' → logprob: -5.81484317779541
    8. '    ' → logprob: -5.93984317779541
    9. 'if' → logprob: -6.56484317779541
    10. '```' → logprob: -7.43984317779541

Token 58: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0139607191085815
    2. 's' → logprob: -1.2639607191085815
    3. ' =' → logprob: -1.2639607191085815
    4. '[' → logprob: -4.388960838317871
    5. 'ue' → logprob: -4.388960838317871
    6. '=row' → logprob: -4.388960838317871
    7. '[row' → logprob: -4.513960838317871
    8. 'ues' → logprob: -5.013960838317871
    9. ' ' → logprob: -5.638960838317871
    10. '   ' → logprob: -6.013960838317871

Token 59: ' row' (ID: 5225)
  Prédit: ' row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.020553337410092354
    2. 'row' → logprob: -3.8955533504486084
    3. '0' → logprob: -13.145553588867188
    4. ' int' → logprob: -13.145553588867188
    5. '(row' → logprob: -13.645553588867188
    6. '[row' → logprob: -13.645553588867188
    7. 'int' → logprob: -13.770553588867188
    8. ' ' → logprob: -13.770553588867188
    9. '	row' → logprob: -14.145553588867188
    10. ' ' → logprob: -14.645553588867188

Token 60: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00018792471382766962
    2. '[idx' → logprob: -8.750187873840332
    3. '[' → logprob: -11.687687873840332
    4. ' ' → logprob: -12.687687873840332
    5. '```' → logprob: -12.750187873840332
    6. '２' → logprob: -13.437687873840332
    7. '۲' → logprob: -13.750187873840332
    8. '[index' → logprob: -13.812687873840332
    9. '[val' → logprob: -13.875187873840332
    10. '.append' → logprob: -14.000187873840332

Token 61: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.003290471388027072
    2. '[' → logprob: -5.75329065322876
    3. ' [' → logprob: -9.503290176391602
    4. 'idx' → logprob: -12.003290176391602
    5. ' idx' → logprob: -12.128290176391602
    6. '[index' → logprob: -12.253290176391602
    7. '[val' → logprob: -12.878290176391602
    8. '```' → logprob: -12.878290176391602
    9. '[j' → logprob: -13.128290176391602
    10. '[token' → logprob: -13.253290176391602

Token 62: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7306668758392334
    2. '])' → logprob: -1.1056668758392334
    3. ']' → logprob: -1.7306668758392334
    4. ' )' → logprob: -5.7306671142578125
    5. ')
' → logprob: -6.4806671142578125
    6. '+' → logprob: -6.9806671142578125
    7. '-' → logprob: -6.9806671142578125
    8. ' ])' → logprob: -6.9806671142578125
    9. ')])' → logprob: -7.4806671142578125
    10. ']+' → logprob: -7.7306671142578125

Token 63: ' -' (ID: 533)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 64: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.048090096563100815
    2. ' ' → logprob: -3.1730899810791016
    3. ' idx' → logprob: -6.173089981079102
    4. 'row' → logprob: -6.798089981079102
    5. 'idx' → logprob: -7.048089981079102
    6. ' row' → logprob: -7.173089981079102
    7. ' n' → logprob: -10.048089981079102
    8. '0' → logprob: -10.298089981079102
    9. 'j' → logprob: -10.798089981079102
    10. ' (' → logprob: -10.923089981079102

Token 65: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10008642822504044
    2. 'idx' → logprob: -2.4750864505767822
    3. 'row' → logprob: -4.725086212158203
    4. '(idx' → logprob: -6.975086212158203
    5. '(' → logprob: -8.100086212158203
    6. ' idx' → logprob: -8.600086212158203
    7. 'j' → logprob: -8.850086212158203
    8. 'val' → logprob: -8.850086212158203
    9. 'n' → logprob: -9.100086212158203
    10. ' ' → logprob: -9.475086212158203

Token 66: '
' (ID: 198)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7204428911209106
    2. '<|end|>' → logprob: -1.0954428911209106
    3. '
' → logprob: -2.095442771911621
    4. ')' → logprob: -3.595442771911621
    5. ' ' → logprob: -5.095442771911621
    6. '<|end|>' → logprob: -5.220442771911621
    7. ' if' → logprob: -5.595442771911621
    8. ' ]' → logprob: -6.220442771911621
    9. '\n' → logprob: -6.220442771911621
    10. '   ' → logprob: -6.720442771911621

Token 67: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 68: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' (adapté à ' row') → logprob: -0.7120936512947083
    2. '<|end|>' → logprob: -1.5870935916900635
    3. ' row' → logprob: -2.5870935916900635
    4. ' if' → logprob: -2.7120935916900635
    5. '
' → logprob: -2.8370935916900635
    6. '   ' → logprob: -3.5870935916900635
    7. ' ' → logprob: -3.8370935916900635
    8. ']' → logprob: -4.462093830108643
    9. 'if' → logprob: -4.462093830108643
    10. ')' → logprob: -5.212093830108643

Token 69: '[val' (ID: 162482)
  Prédit: '[val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[val' → logprob: -0.003776215948164463
    2. '[' → logprob: -5.6287760734558105
    3. ' [' → logprob: -9.128776550292969
    4. '[row' → logprob: -10.753776550292969
    5. '[col' → logprob: -11.753776550292969
    6. '[idx' → logprob: -11.753776550292969
    7. '][' → logprob: -11.753776550292969
    8. '\[' → logprob: -12.503776550292969
    9. '```' → logprob: -13.128776550292969
    10. ']' → logprob: -13.378776550292969

Token 70: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0014722455525770783
    2. ']=' → logprob: -7.126472473144531
    3. ' ]' → logprob: -7.626472473144531
    4. ']+=' → logprob: -8.751472473144531
    5. '=' → logprob: -11.626472473144531
    6. '[' → logprob: -12.626472473144531
    7. ']==' → logprob: -13.376472473144531
    8. ')' → logprob: -13.751472473144531
    9. ']+' → logprob: -13.876472473144531
    10. '][' → logprob: -13.876472473144531

Token 71: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2542322278022766
    2. '=' → logprob: -1.5042321681976318
    3. ' +=' → logprob: -6.254232406616211
    4. '+=' → logprob: -8.254232406616211
    5. '<|end|>' → logprob: -9.879232406616211
    6. ' ' → logprob: -10.129232406616211
    7. ' |=' → logprob: -11.879232406616211
    8. '=True' → logprob: -12.879232406616211
    9. ')' → logprob: -13.254232406616211
    10. ']' → logprob: -13.379232406616211

Token 72: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.27606093883514404
    2. '1' → logprob: -1.526060938835144
    3. 'row' → logprob: -4.526061058044434
    4. 'val' → logprob: -4.651061058044434
    5. 'j' → logprob: -6.026061058044434
    6. ' idx' → logprob: -8.401061058044434
    7. '0' → logprob: -8.901061058044434
    8. '(idx' → logprob: -9.026061058044434
    9. '(' → logprob: -9.838561058044434
    10. '-' → logprob: -9.901061058044434

Token 73: ' +' (ID: 659)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 74: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002647927321959287
    2. ' ' → logprob: -8.250265121459961
    3. '<|end|>' → logprob: -13.250265121459961
    4. '2' → logprob: -14.500265121459961
    5. '   ' → logprob: -15.437765121459961
    6. '  ' → logprob: -15.750265121459961
    7. '...' → logprob: -15.875265121459961
    8. '0' → logprob: -16.25026512145996
    9. '<|end|>' → logprob: -16.37526512145996
    10. 'space' → logprob: -16.56276512145996

Token 75: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.749814019713085e-06
    2. ' ' → logprob: -12.000006675720215
    3. '2' → logprob: -15.000006675720215
    4. '<|end|>' → logprob: -17.18750762939453
    5. '```' → logprob: -17.25000762939453
    6. '   ' → logprob: -17.25000762939453
    7. '`' → logprob: -17.81250762939453
    8. '0' → logprob: -17.87500762939453
    9. '১' → logprob: -18.18750762939453
    10. '  ' → logprob: -18.25000762939453

Token 76: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.15552785992622375
    2. '<|end|>' → logprob: -2.2805278301239014
    3. 'for' → logprob: -3.6555278301239014
    4. '```' → logprob: -4.7805280685424805
    5. 'row' → logprob: -6.0305280685424805
    6. '#' → logprob: -6.5305280685424805
    7. ' ' → logprob: -7.1555280685424805
    8. ' for' → logprob: -7.4055280685424805
    9. '[' → logprob: -7.9055280685424805
    10. 'n' → logprob: -7.9055280685424805

Token 77: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.024804532527923584
    2. '<|end|>' → logprob: -4.399804592132568
    3. 'for' → logprob: -4.524804592132568
    4. '```' → logprob: -7.274804592132568
    5. '#' → logprob: -8.39980411529541
    6. ' for' → logprob: -8.64980411529541
    7. 'row' → logprob: -9.64980411529541
    8. ' print' → logprob: -9.77480411529541
    9. '#print' → logprob: -10.27480411529541
    10. ' ' → logprob: -10.64980411529541

Token 78: ' affich' (ID: 90179)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0555858351290226
    2. ' print' → logprob: -3.4305858612060547
    3. 'for' → logprob: -4.305585861206055
    4. ' for' → logprob: -4.805585861206055
    5. 'row' → logprob: -11.930585861206055
    6. 'pr' → logprob: -12.555585861206055
    7. '#' → logprob: -13.055585861206055
    8. '```' → logprob: -13.430585861206055
    9. 'prin' → logprob: -13.680585861206055
    10. 'import' → logprob: -13.680585861206055

Token 79: 'age' (ID: 477)
  Prédit: '(row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.005574879236519337
    2. 'row' → logprob: -6.130574703216553
    3. '(' → logprob: -6.505574703216553
    4. 'print' → logprob: -7.130574703216553
    5. 'ow' → logprob: -7.630574703216553
    6. 'er' → logprob: -8.505575180053711
    7. '()' → logprob: -9.005575180053711
    8. ' row' → logprob: -9.880575180053711
    9. 'h' → logprob: -10.380575180053711
    10. 'on' → logprob: -10.505575180053711

Token 80: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6950657367706299
    2. 'for' → logprob: -0.6950657367706299
    3. ' for' → logprob: -6.320065498352051
    4. 'row' → logprob: -9.69506549835205
    5. ' print' → logprob: -10.19506549835205
    6. '```' → logprob: -10.94506549835205
    7. '`' → logprob: -16.320066452026367
    8. ' ' → logprob: -16.945066452026367
    9. '   ' → logprob: -17.070066452026367
    10. ')' → logprob: -17.195066452026367

Token 81: ' un' (ID: 537)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3442310690879822
    2. 'print' → logprob: -1.719231128692627
    3. ' for' → logprob: -2.219231128692627
    4. ' print' → logprob: -5.719231128692627
    5. 'row' → logprob: -10.594230651855469
    6. '```' → logprob: -10.719230651855469
    7. ' row' → logprob: -13.219230651855469
    8. ' ' → logprob: -13.594230651855469
    9. ')' → logprob: -13.594230651855469
    10. 'space' → logprob: -14.219230651855469

Token 82: ' peu' (ID: 9235)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.19010551273822784
    2. ' for' → logprob: -2.065105438232422
    3. 'print' → logprob: -3.565105438232422
    4. ' print' → logprob: -5.565105438232422
    5. '```' → logprob: -5.940105438232422
    6. 'space' → logprob: -6.065105438232422
    7. 'es' → logprob: -6.440105438232422
    8. ' ' → logprob: -6.815105438232422
    9. ' espace' → logprob: -6.940105438232422
    10. 'r' → logprob: -6.940105438232422

Token 83: ' manuel' (ID: 152919)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02124563790857792
    2. ' for' → logprob: -4.14624547958374
    3. 'print' → logprob: -5.77124547958374
    4. '(row' → logprob: -6.89624547958374
    5. ' pour' → logprob: -8.146245956420898
    6. 'row' → logprob: -8.146245956420898
    7. 'pour' → logprob: -8.521245956420898
    8. '(' → logprob: -8.896245956420898
    9. ' print' → logprob: -10.146245956420898
    10. ' row' → logprob: -10.646245956420898

Token 84: '...
' (ID: 4908)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.018290061503648758
    2. 'print' → logprob: -4.393290042877197
    3. '\n' → logprob: -5.893290042877197
    4. '
' → logprob: -6.518290042877197
    5. ' for' → logprob: -7.018290042877197
    6. '\' → logprob: -7.893290042877197
    7. '```' → logprob: -8.393290519714355
    8. '``' → logprob: -11.643290519714355
    9. 'n' → logprob: -11.768290519714355
    10. '[' → logprob: -12.393290519714355

Token 85: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.018177567049860954
    2. 'print' → logprob: -4.018177509307861
    3. ' for' → logprob: -10.89317798614502
    4. 'i' → logprob: -12.39317798614502
    5. '```' → logprob: -12.64317798614502
    6. 'row' → logprob: -14.39317798614502
    7. '
' → logprob: -15.14317798614502
    8. 'n' → logprob: -15.76817798614502
    9. 'result' → logprob: -15.89317798614502
    10. 'first' → logprob: -16.268177032470703

Token 86: ' k' (ID: 372)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.30572691559791565
    2. ' idx' → logprob: -1.5557268857955933
    3. 'i' → logprob: -3.430727005004883
    4. ' val' → logprob: -4.555727005004883
    5. 'idx' → logprob: -5.430727005004883
    6. ' v' → logprob: -7.055727005004883
    7. 'val' → logprob: -7.430727005004883
    8. ' j' → logprob: -7.555727005004883
    9. ' ' → logprob: -7.555727005004883
    10. ' x' → logprob: -7.930727005004883

Token 87: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01830212026834488
    2. 'in' → logprob: -4.018301963806152
    3. ' ' → logprob: -8.893301963806152
    4. 'n' → logprob: -12.768301963806152
    5. '	in' → logprob: -12.768301963806152
    6. ',' → logprob: -13.893301963806152
    7. '  ' → logprob: -14.018301963806152
    8. '_in' → logprob: -14.018301963806152
    9. 'range' → logprob: -14.018301963806152
    10. 'In' → logprob: -14.143301963806152

Token 88: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.11289822310209274
    2. ' range' → logprob: -2.237898111343384
    3. 'row' → logprob: -9.612897872924805
    4. ' row' → logprob: -12.862897872924805
    5. '(range' → logprob: -13.112897872924805
    6. ' ' → logprob: -13.487897872924805
    7. '  ' → logprob: -14.112897872924805
    8. '   ' → logprob: -14.237897872924805
    9. '	range' → logprob: -14.612897872924805
    10. 'r' → logprob: -15.487897872924805

Token 89: '(len' (ID: 14990)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.029844442382454872
    2. '(' → logprob: -3.5298445224761963
    3. ' (' → logprob: -9.779844284057617
    4. '(len' → logprob: -10.654844284057617
    5. ' n' → logprob: -11.529844284057617
    6. 'n' → logprob: -13.154844284057617
    7. '(
' → logprob: -13.529844284057617
    8. '(

' → logprob: -15.529844284057617
    9. '(s' → logprob: -16.154844284057617
    10. ' ' → logprob: -16.279844284057617

Token 90: '(row' (ID: 15945)
  Prédit: '(row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.0008112939540296793
    2. '(' → logprob: -7.1258111000061035
    3. ' (' → logprob: -12.500811576843262
    4. 'row' → logprob: -13.875811576843262
    5. '(rows' → logprob: -14.000811576843262
    6. ' row' → logprob: -14.750811576843262
    7. '(n' → logprob: -15.375811576843262
    8. '(column' → logprob: -15.625811576843262
    9. '(s' → logprob: -16.125810623168945
    10. '(
' → logprob: -16.250810623168945

Token 91: ')):
' (ID: 22530)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.07704799622297287
    2. '):' → logprob: -2.8270480632781982
    3. '))' → logprob: -4.827047824859619
    4. ')):
' → logprob: -5.202047824859619
    5. ')' → logprob: -6.827047824859619
    6. '):
' → logprob: -9.077048301696777
    7. ')):
' → logprob: -9.577048301696777
    8. ' ' → logprob: -9.827048301696777
    9. ' ):' → logprob: -9.952048301696777
    10. '   ' → logprob: -10.327048301696777

Token 92: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3392498195171356
    2. ' print' → logprob: -1.839249849319458
    3. 'print' → logprob: -2.089249849319458
    4. ' 
' → logprob: -6.339249610900879
    5. ' ' → logprob: -6.839249610900879
    6. '    
' → logprob: -6.964249610900879
    7. ')' → logprob: -7.839249610900879
    8. '    ' → logprob: -8.714249610900879
    9. '	print' → logprob: -8.964249610900879
    10. '(' → logprob: -9.464249610900879

Token 93: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.5760679841041565
    2. ' print' → logprob: -0.8260679841041565
    3. '   ' → logprob: -9.326067924499512
    4. ' if' → logprob: -10.701067924499512
    5. 'if' → logprob: -11.576067924499512
    6. '	print' → logprob: -13.201067924499512
    7. '.print' → logprob: -13.326067924499512
    8. '```' → logprob: -13.951067924499512
    9. ' prin' → logprob: -14.326067924499512
    10. 'prin' → logprob: -14.451067924499512

Token 94: '(row' (ID: 15945)
  Prédit: '(row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.01815216802060604
    2. '(' → logprob: -4.018152236938477
    3. 'row' → logprob: -13.768152236938477
    4. ' (' → logprob: -14.393152236938477
    5. '((' → logprob: -15.518152236938477
    6. '(column' → logprob: -15.893152236938477
    7. '(rows' → logprob: -17.143152236938477
    8. '(
' → logprob: -17.268152236938477
    9. '(Row' → logprob: -17.393152236938477
    10. '('' → logprob: -17.518152236938477

Token 95: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -4.4849443838757e-06
    2. '[' → logprob: -12.500004768371582
    3. 'k' → logprob: -15.250004768371582
    4. ')' → logprob: -15.250004768371582
    5. '(k' → logprob: -15.625004768371582
    6. ' [' → logprob: -16.875003814697266
    7. '[i' → logprob: -18.125003814697266
    8. ',k' → logprob: -18.375003814697266
    9. '{k' → logprob: -18.500003814697266
    10. '[j' → logprob: -18.625003814697266

Token 96: '],' (ID: 2155)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7060585618019104
    2. ',' → logprob: -1.2060585021972656
    3. '),' → logprob: -1.8310585021972656
    4. ',end' → logprob: -3.4560585021972656
    5. '))' → logprob: -4.331058502197266
    6. ' ,' → logprob: -6.581058502197266
    7. ' )' → logprob: -8.706058502197266
    8. ',k' → logprob: -9.081058502197266
    9. '},' → logprob: -9.206058502197266
    10. ',)' → logprob: -9.831058502197266

Token 97: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.004414451774209738
    2. ' end' → logprob: -6.0044145584106445
    3. '"' → logprob: -6.6294145584106445
    4. ''end' → logprob: -8.129414558410645
    5. ''' → logprob: -8.754414558410645
    6. ',end' → logprob: -10.129414558410645
    7. ')' → logprob: -10.629414558410645
    8. '"",' → logprob: -10.629414558410645
    9. ''',' → logprob: -11.254414558410645
    10. '(end' → logprob: -11.254414558410645

Token 98: '="' (ID: 580)
  Prédit: '=''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '='' → logprob: -0.0485178641974926
    2. '="' → logprob: -3.298517942428589
    3. '('' → logprob: -4.92351770401001
    4. '=' → logprob: -6.04851770401001
    5. '(' → logprob: -7.67351770401001
    6. '("' → logprob: -9.048518180847168
    7. '=',' → logprob: -9.298518180847168
    8. ''' → logprob: -9.923518180847168
    9. '=('' → logprob: -10.298518180847168
    10. '"' → logprob: -11.423518180847168

Token 99: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.09373707324266434
    2. ''' → logprob: -2.5937371253967285
    3. ' "' → logprob: -4.7187371253967285
    4. ' )' → logprob: -5.3437371253967285
    5. ')' → logprob: -7.4687371253967285
    6. ' ' → logprob: -7.9687371253967285
    7. ' '' → logprob: -9.46873664855957
    8. ' ' → logprob: -12.21873664855957
    9. '")' → logprob: -12.21873664855957
    10. ' ")' → logprob: -12.34373664855957

Token 100: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ')
' → logprob: -15.125
    3. ' )' → logprob: -17.25
    4. ')`' → logprob: -18.0
    5. '))' → logprob: -18.125
    6. '),' → logprob: -20.25
    7. ')

' → logprob: -20.25
    8. ')#' → logprob: -20.375
    9. '")' → logprob: -20.5
    10. '')' → logprob: -20.5

Token 101: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0007137430948205292
    2. ' k' → logprob: -7.25071382522583
    3. '(k' → logprob: -12.500713348388672
    4. ' ' → logprob: -16.750713348388672
    5. 'not' → logprob: -16.750713348388672
    6. ' not' → logprob: -17.750713348388672
    7. '(' → logprob: -18.375713348388672
    8. '	k' → logprob: -18.500713348388672
    9. ' (' → logprob: -18.750713348388672
    10. '   ' → logprob: -19.000713348388672

Token 102: ' !=' (ID: 1666)
  Prédit: '<len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<len' → logprob: -0.3009696900844574
    2. '<' → logprob: -1.5509697198867798
    3. '!=' → logprob: -3.1759696006774902
    4. '<n' → logprob: -5.30096960067749
    5. ' !=' → logprob: -7.42596960067749
    6. ' <' → logprob: -7.80096960067749
    7. '<size' → logprob: -10.300970077514648
    8. '<num' → logprob: -10.550970077514648
    9. '<int' → logprob: -11.050970077514648
    10. '!=(' → logprob: -11.550970077514648

Token 103: ' n' (ID: 297)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.011226660571992397
    2. ' len' → logprob: -4.511226654052734
    3. 'n' → logprob: -8.761226654052734
    4. ' n' → logprob: -11.261226654052734
    5. '(len' → logprob: -12.011226654052734
    6. '   ' → logprob: -14.011226654052734
    7. '	len' → logprob: -14.011226654052734
    8. ' ' → logprob: -14.886226654052734
    9. '  ' → logprob: -15.511226654052734
    10. '9' → logprob: -15.636226654052734

Token 104: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0005532711511477828
    2. ' -' → logprob: -7.500553131103516
    3. ' ' → logprob: -16.000553131103516
    4. '```' → logprob: -16.250553131103516
    5. '1' → logprob: -17.500553131103516
    6. '   ' → logprob: -18.500553131103516
    7. '
' → logprob: -18.500553131103516
    8. '-l' → logprob: -19.250553131103516
    9. '−' → logprob: -19.375553131103516
    10. '  ' → logprob: -19.750553131103516

Token 105: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1888679839321412e-05
    2. ' ' → logprob: -10.750021934509277
    3. '```' → logprob: -15.375021934509277
    4. '   ' → logprob: -16.12502098083496
    5. '-' → logprob: -17.75002098083496
    6. '  ' → logprob: -18.00002098083496
    7. '2' → logprob: -18.37502098083496
    8. '0' → logprob: -18.43752098083496
    9. '
' → logprob: -19.06252098083496
    10. '１' → logprob: -19.18752098083496

Token 106: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -13.00000286102295
    3. '```' → logprob: -16.000001907348633
    4. '2' → logprob: -16.312501907348633
    5. '   ' → logprob: -17.812501907348633
    6. '-' → logprob: -18.000001907348633
    7. '
' → logprob: -18.375001907348633
    8. 'print' → logprob: -18.750001907348633
    9. '<|end|>' → logprob: -18.812501907348633
    10. '１' → logprob: -18.812501907348633

Token 107: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.5767962336540222
    2. 'else' → logprob: -0.8267962336540222
    3. ')' → logprob: -7.076796054840088
    4. ' ' → logprob: -12.076796531677246
    5. ' )' → logprob: -12.451796531677246
    6. '"' → logprob: -13.701796531677246
    7. '	else' → logprob: -15.201796531677246
    8. '```' → logprob: -15.201796531677246
    9. '
' → logprob: -15.951796531677246
    10. '  ' → logprob: -16.45179557800293

Token 108: ' "\' (ID: 6512)
  Prédit: '"\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"\' → logprob: -9.579495235811919e-05
    2. ''\' → logprob: -9.75009536743164
    3. '"' → logprob: -10.75009536743164
    4. '""' → logprob: -11.12509536743164
    5. '\n' → logprob: -14.00009536743164
    6. ' "\' → logprob: -15.00009536743164
    7. '")' → logprob: -17.12509536743164
    8. ')' → logprob: -17.25009536743164
    9. '\"\' → logprob: -18.00009536743164
    10. '">\' → logprob: -18.00009536743164

Token 109: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0009118211455643177
    2. '\n' → logprob: -7.000911712646484
    3. '"\' → logprob: -15.000911712646484
    4. '\' → logprob: -19.375911712646484
    5. '")' → logprob: -19.500911712646484
    6. ' n' → logprob: -19.500911712646484
    7. '"' → logprob: -20.000911712646484
    8. ')' → logprob: -20.625911712646484
    9. 'newline' → logprob: -20.750911712646484
    10. '012' → logprob: -21.000911712646484

Token 110: '")
' (ID: 1896)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004733791574835777
    2. '))' → logprob: -5.754733562469482
    3. ')")' → logprob: -6.629733562469482
    4. '")' → logprob: -8.37973403930664
    5. ')))' → logprob: -13.62973403930664
    6. '')' → logprob: -13.87973403930664
    7. ')">' → logprob: -14.37973403930664
    8. ')
' → logprob: -14.37973403930664
    9. '"))' → logprob: -14.50473403930664
    10. ')"' → logprob: -15.12973403930664

Token 111: '#' (ID: 2)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1005276441574097
    2. 'n' → logprob: -1.2255276441574097
    3. '#' → logprob: -1.8505276441574097
    4. ')' → logprob: -1.9755276441574097
    5. '<|end|>' → logprob: -3.725527763366699
    6. 'row' → logprob: -4.600527763366699
    7. ',' → logprob: -4.850527763366699
    8. '[' → logprob: -5.350527763366699
    9. 'k' → logprob: -5.475527763366699
    10. '.' → logprob: -5.725527763366699

Token 112: ' fin' (ID: 2131)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0558736324310303
    2. ')' → logprob: -1.3058736324310303
    3. 'n' → logprob: -1.8058736324310303
    4. '#' → logprob: -2.4308736324310303
    5. '[' → logprob: -2.8058736324310303
    6. '<|end|>' → logprob: -3.1808736324310303
    7. ']' → logprob: -4.930873870849609
    8. ',' → logprob: -4.930873870849609
    9. '```' → logprob: -6.055873870849609
    10. '.' → logprob: -6.805873870849609

Token 113: ',' (ID: 11)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.227745771408081
    2. ' ' → logprob: -1.227745771408081
    3. '#' → logprob: -1.602745771408081
    4. ')' → logprob: -2.227745771408081
    5. '[' → logprob: -3.227745771408081
    6. '<|end|>' → logprob: -3.477745771408081
    7. '```' → logprob: -4.85274600982666
    8. '{' → logprob: -5.47774600982666
    9. ',' → logprob: -5.97774600982666
    10. ']' → logprob: -6.10274600982666

Token 114: ' ok' (ID: 4763)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7624258995056152
    2. ' ' → logprob: -1.6374258995056152
    3. 'n' → logprob: -1.7624258995056152
    4. '<|end|>' → logprob: -3.0124258995056152
    5. ')' → logprob: -3.7624258995056152
    6. 'row' → logprob: -4.012425899505615
    7. '[' → logprob: -4.387425899505615
    8. '.' → logprob: -4.637425899505615
    9. 'for' → logprob: -5.012425899505615
    10. '```' → logprob: -5.137425899505615


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 112
Tokens correctement prédits (1ère position, stricte): 33
Tokens correctement prédits (1ère position, avec adaptation): 36
Tokens correctement prédits (top 10): 73
Précision stricte (1ère position): 29.46%
Précision adaptée (1ère position): 32.14%
Précision (top 10): 65.18%
================================================================================
