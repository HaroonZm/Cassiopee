================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:03:19
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

for s in sys.stdin:
    n, w, h = map(float, s.split(","))
    if w / h ** 2 >= 25.0:
        print(int(n))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'for' (ID: 1938)
  Prédit: 'as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.19661454856395721
    2. 'os' → logprob: -1.9466145038604736
    3. 'import' → logprob: -3.6966145038604736
    4. 'print' → logprob: -5.696614742279053
    5. 'from' → logprob: -5.821614742279053
    6. 'sys' → logprob: -5.946614742279053
    7. '```' → logprob: -6.946614742279053
    8. 'numpy' → logprob: -8.196614265441895
    9. ' as' → logprob: -8.946614265441895
    10. '#' → logprob: -9.446614265441895

Token 4: ' s' (ID: 265)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.02594410628080368
    2. ' item' → logprob: -4.150944232940674
    3. ' x' → logprob: -5.525944232940674
    4. ' ' → logprob: -6.025944232940674
    5. ' line' → logprob: -6.275944232940674
    6. 'i' → logprob: -8.025943756103516
    7. ' in' → logprob: -8.150943756103516
    8. ' element' → logprob: -8.525943756103516
    9. ' key' → logprob: -9.650943756103516
    10. ' k' → logprob: -9.775943756103516

Token 5: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.13359662890434265
    2. ' in' → logprob: -2.508596658706665
    3. ':' → logprob: -3.133596658706665
    4. '_in' → logprob: -10.008596420288086
    5. 'In' → logprob: -10.508596420288086
    6. ':
' → logprob: -11.133596420288086
    7. '-in' → logprob: -12.758596420288086
    8. ':

' → logprob: -12.883596420288086
    9. 's' → logprob: -12.883596420288086
    10. ' ' → logprob: -13.008596420288086

Token 6: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.023082176223397255
    2. 'input' → logprob: -4.023082256317139
    3. 'range' → logprob: -5.773082256317139
    4. 'stdin' → logprob: -6.648082256317139
    5. ':' → logprob: -8.89808177947998
    6. 'open' → logprob: -10.14808177947998
    7. 'in' → logprob: -10.27308177947998
    8. '(sys' → logprob: -10.39808177947998
    9. 'data' → logprob: -10.39808177947998
    10. ' sys' → logprob: -10.52308177947998

Token 7: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3276125192642212
    2. '.import' → logprob: -1.7026125192642212
    3. '.iter' → logprob: -3.3276124000549316
    4. '.stdin' → logprob: -3.8276124000549316
    5. 'import' → logprob: -4.702612400054932
    6. '.argv' → logprob: -5.327612400054932
    7. '.in' → logprob: -5.452612400054932
    8. '.stdout' → logprob: -5.952612400054932
    9. '.items' → logprob: -6.327612400054932
    10. '.`' → logprob: -6.452612400054932

Token 8: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0015684263780713081
    2. '   ' → logprob: -6.62656831741333
    3. ':
' → logprob: -9.001568794250488
    4. '.strip' → logprob: -9.251568794250488
    5. ':\' → logprob: -12.251568794250488
    6. '.rstrip' → logprob: -12.626568794250488
    7. ' ' → logprob: -12.876568794250488
    8. '.readlines' → logprob: -13.126568794250488
    9. '.readline' → logprob: -13.376568794250488
    10. ':`' → logprob: -13.501568794250488

Token 9: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -3.023293538717553e-05
    2. '  ' → logprob: -11.375030517578125
    3. 'print' → logprob: -12.000030517578125
    4. 's' → logprob: -12.500030517578125
    5. ' ' → logprob: -12.750030517578125
    6. '    ' → logprob: -13.000030517578125
    7. 'pass' → logprob: -13.000030517578125
    8. '```' → logprob: -14.125030517578125
    9. '   ' → logprob: -15.500030517578125
    10. ' pass' → logprob: -16.375030517578125

Token 10: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009789855219423771
    2. 'print' → logprob: -4.759789943695068
    3. 's' → logprob: -7.259789943695068
    4. 'pass' → logprob: -7.759789943695068
    5. 'process' → logprob: -10.63478946685791
    6. '  ' → logprob: -11.50978946685791
    7. 'line' → logprob: -12.88478946685791
    8. '#' → logprob: -13.13478946685791
    9. ' ' → logprob: -13.38478946685791
    10. '    ' → logprob: -13.63478946685791

Token 11: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6370853781700134
    2. ' =' → logprob: -0.7620853781700134
    3. '=int' → logprob: -5.887085437774658
    4. '+=' → logprob: -6.887085437774658
    5. '=len' → logprob: -8.2620849609375
    6. ' +=' → logprob: -9.3870849609375
    7. ' ' → logprob: -9.6370849609375
    8. '=input' → logprob: -9.7620849609375
    9. '=n' → logprob: -10.0120849609375
    10. '   ' → logprob: -10.1370849609375

Token 12: ' w' (ID: 286)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.014586172997951508
    2. 'k' → logprob: -4.264585971832275
    3. 's' → logprob: -8.639586448669434
    4. 'a' → logprob: -9.639586448669434
    5. '=' → logprob: -10.139586448669434
    6. 'x' → logprob: -10.389586448669434
    7. 'n' → logprob: -10.889586448669434
    8. 'c' → logprob: -11.514586448669434
    9. 'l' → logprob: -11.514586448669434
    10. 'd' → logprob: -11.764586448669434

Token 13: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0027771780733019114
    2. ' =' → logprob: -6.252777099609375
    3. ',' → logprob: -7.127777099609375
    4. 'h' → logprob: -10.502777099609375
    5. 'hile' → logprob: -12.252777099609375
    6. '=int' → logprob: -13.002777099609375
    7. '=`' → logprob: -13.627777099609375
    8. '=h' → logprob: -13.877777099609375
    9. ' ' → logprob: -14.127777099609375
    10. '+=' → logprob: -14.377777099609375

Token 14: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -1.688212614681106e-05
    2. 'd' → logprob: -11.750017166137695
    3. 'l' → logprob: -12.125017166137695
    4. ' h' → logprob: -13.750017166137695
    5. 'c' → logprob: -14.125017166137695
    6. 'x' → logprob: -15.000017166137695
    7. 't' → logprob: -15.125017166137695
    8. 'm' → logprob: -15.625017166137695
    9. 'p' → logprob: -15.875017166137695
    10. 'g' → logprob: -15.875017166137695

Token 15: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008701913058757782
    2. ' =' → logprob: -4.758701801300049
    3. '   ' → logprob: -10.508702278137207
    4. ',' → logprob: -10.633702278137207
    5. '=int' → logprob: -11.008702278137207
    6. ' ' → logprob: -12.383702278137207
    7. '=input' → logprob: -13.508702278137207
    8. '=`' → logprob: -13.633702278137207
    9. '=line' → logprob: -13.758702278137207
    10. '.append' → logprob: -13.758702278137207

Token 16: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.0002627662615850568
    2. ' map' → logprob: -8.250263214111328
    3. '.map' → logprob: -14.375263214111328
    4. '(map' → logprob: -14.500263214111328
    5. '	map' → logprob: -15.625263214111328
    6. 'list' → logprob: -15.750263214111328
    7. 'input' → logprob: -17.750263214111328
    8. '_map' → logprob: -18.125263214111328
    9. '-map' → logprob: -18.125263214111328
    10. 'line' → logprob: -19.750263214111328

Token 17: '(float' (ID: 17830)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.726203203201294
    2. '(int' → logprob: -0.726203203201294
    3. '(lambda' → logprob: -4.476202964782715
    4. '(tuple' → logprob: -5.226202964782715
    5. '(float' → logprob: -5.351202964782715
    6. '(parse' → logprob: -5.851202964782715
    7. '(eval' → logprob: -6.601202964782715
    8. '(list' → logprob: -7.476202964782715
    9. '(map' → logprob: -7.476202964782715
    10. '((' → logprob: -7.601202964782715

Token 18: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2890574336051941
    2. '(sys' → logprob: -1.7890574932098389
    3. '(s' → logprob: -3.664057493209839
    4. '(*' → logprob: -4.28905725479126
    5. '())' → logprob: -4.41405725479126
    6. ')(' → logprob: -5.16405725479126
    7. '(input' → logprob: -5.66405725479126
    8. ')' → logprob: -5.91405725479126
    9. ').' → logprob: -6.41405725479126
    10. '   ' → logprob: -6.78905725479126

Token 19: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -9.729906196298543e-06
    2. 'line' → logprob: -12.000009536743164
    3. 'split' → logprob: -13.125009536743164
    4. 'input' → logprob: -14.125009536743164
    5. 'sys' → logprob: -14.250009536743164
    6. 'strip' → logprob: -16.125009536743164
    7. 'map' → logprob: -17.500009536743164
    8. ' s' → logprob: -17.625009536743164
    9. 'stdin' → logprob: -18.000009536743164
    10. '.s' → logprob: -20.500009536743164

Token 20: '.split' (ID: 10347)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.16042691469192505
    2. '.split' → logprob: -1.9104268550872803
    3. '.rstrip' → logprob: -8.78542709350586
    4. ').' → logprob: -10.53542709350586
    5. '.' → logprob: -10.78542709350586
    6. '.replace' → logprob: -13.78542709350586
    7. '.trim' → logprob: -14.91042709350586
    8. '[:-' → logprob: -15.03542709350586
    9. 'strip' → logprob: -15.03542709350586
    10. '.readline' → logprob: -15.66042709350586

Token 21: '(",' (ID: 23824)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.011335337534546852
    2. '()' → logprob: -4.511335372924805
    3. '(' → logprob: -8.386335372924805
    4. '())
' → logprob: -11.261335372924805
    5. ')' → logprob: -11.886335372924805
    6. '(()' → logprob: -11.886335372924805
    7. '())

' → logprob: -12.261335372924805
    8. '().' → logprob: -12.261335372924805
    9. '('' → logprob: -12.511335372924805
    10. '();)' → logprob: -12.511335372924805

Token 22: '"))
' (ID: 10990)
  Prédit: '"))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"))' → logprob: -0.40336892008781433
    2. '))' → logprob: -1.1533689498901367
    3. '"))
' → logprob: -5.403368949890137
    4. ' "))' → logprob: -5.653368949890137
    5. ')' → logprob: -5.778368949890137
    6. '"' → logprob: -5.778368949890137
    7. '")' → logprob: -6.528368949890137
    8. '   ' → logprob: -8.278368949890137
    9. '))
' → logprob: -8.528368949890137
    10. 'n' → logprob: -10.028368949890137

Token 23: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006147650070488453
    2. 'print' → logprob: -5.131147861480713
    3. 'n' → logprob: -9.756147384643555
    4. '  ' → logprob: -10.381147384643555
    5. '       ' → logprob: -10.506147384643555
    6. '#' → logprob: -10.506147384643555
    7. '    ' → logprob: -11.006147384643555
    8. 'pass' → logprob: -11.131147384643555
    9. 'w' → logprob: -11.256147384643555
    10. '```' → logprob: -11.506147384643555

Token 24: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026594143360853195
    2. 'print' → logprob: -3.6515941619873047
    3. '#' → logprob: -8.901594161987305
    4. 'pass' → logprob: -9.401594161987305
    5. 'if' (adapté à ' if') → logprob: -10.026594161987305
    6. '  ' → logprob: -11.151594161987305
    7. '       ' → logprob: -12.776594161987305
    8. '    ' → logprob: -13.151594161987305
    9. '```' → logprob: -13.151594161987305
    10. ' ' → logprob: -13.651594161987305

Token 25: ' w' (ID: 286)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.003656722605228424
    2. 'n' → logprob: -5.62865686416626
    3. ' ' → logprob: -11.378656387329102
    4. ':' → logprob: -11.378656387329102
    5. '(n' → logprob: -11.503656387329102
    6. ' (' → logprob: -11.628656387329102
    7. ' not' → logprob: -11.753656387329102
    8. '   ' → logprob: -13.253656387329102
    9. '  ' → logprob: -13.378656387329102
    10. ' h' → logprob: -13.503656387329102

Token 26: ' /' (ID: 820)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.02569700963795185
    2. '<=' → logprob: -3.7756969928741455
    3. '<' → logprob: -6.150697231292725
    4. '>=' → logprob: -8.400696754455566
    5. '==' → logprob: -9.400696754455566
    6. ' >' → logprob: -12.525696754455566
    7. '*' → logprob: -12.650696754455566
    8. ' <=' → logprob: -13.650696754455566
    9. '≤' → logprob: -15.275696754455566
    10. '!=' → logprob: -15.525696754455566

Token 27: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -1.9361264946837764e-07
    2. 'n' → logprob: -16.5
    3. ' h' → logprob: -18.125
    4. '<h' → logprob: -22.5
    5. 'float' → logprob: -22.75
    6. '	h' → logprob: -24.125
    7. '.h' → logprob: -24.25
    8. '(h' → logprob: -24.375
    9. '_h' → logprob: -24.75
    10. 'w' → logprob: -25.25

Token 28: ' **' (ID: 6240)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.012558032758533955
    2. '<=' → logprob: -4.8875579833984375
    3. '<' → logprob: -5.8875579833984375
    4. '>=' → logprob: -6.1375579833984375
    5. ' >' → logprob: -12.637557983398438
    6. '==' → logprob: -13.637557983398438
    7. ' <=' → logprob: -14.637557983398438
    8. ' >=' → logprob: -15.137557983398438
    9. '>`' → logprob: -16.262557983398438
    10. ' <' → logprob: -16.762557983398438

Token 29: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.084206375409849e-05
    2. '0' → logprob: -10.125041007995605
    3. '=' → logprob: -15.125041007995605
    4. '3' → logprob: -15.250041007995605
    5. '1' → logprob: -15.750041007995605
    6. '.' → logprob: -16.87504005432129
    7. '(' → logprob: -17.12504005432129
    8. ' ' → logprob: -17.37504005432129
    9. 'n' → logprob: -19.00004005432129
    10. '²' → logprob: -19.62504005432129

Token 30: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.5577775128767826e-06
    2. '0' → logprob: -12.250005722045898
    3. '1' → logprob: -14.875005722045898
    4. '3' → logprob: -15.625005722045898
    5. ' ' → logprob: -17.0000057220459
    6. '.' → logprob: -17.2500057220459
    7. '(' → logprob: -17.8750057220459
    8. '=' → logprob: -18.7500057220459
    9. '4' → logprob: -19.6250057220459
    10. '   ' → logprob: -19.8750057220459

Token 31: ' >=' (ID: 5064)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.001752891344949603
    2. '<' → logprob: -6.751752853393555
    3. '>=' → logprob: -7.751752853393555
    4. '<=' → logprob: -8.876752853393555
    5. ' >' → logprob: -11.376752853393555
    6. '==' → logprob: -14.501752853393555
    7. ' >=' → logprob: -14.751752853393555
    8. ':' → logprob: -15.876752853393555
    9. ' <' → logprob: -16.001752853393555
    10. ' ' → logprob: -16.251752853393555

Token 32: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.048173706978559494
    2. 'n' → logprob: -3.423173666000366
    3. '2' → logprob: -4.798173904418945
    4. '0' → logprob: -5.298173904418945
    5. '3' → logprob: -7.548173904418945
    6. '4' → logprob: -8.173173904418945
    7. '5' → logprob: -8.923173904418945
    8. '10' → logprob: -9.298173904418945
    9. '100' → logprob: -10.298173904418945
    10. '16' → logprob: -11.048173904418945

Token 33: '25' (ID: 1161)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03159317746758461
    2. '2' → logprob: -4.281593322753906
    3. 'n' → logprob: -4.781593322753906
    4. '0' → logprob: -5.156593322753906
    5. '4' → logprob: -6.781593322753906
    6. '3' → logprob: -6.906593322753906
    7. '10' → logprob: -8.031593322753906
    8. '5' → logprob: -8.156593322753906
    9. '100' → logprob: -8.906593322753906
    10. '6' → logprob: -9.656593322753906

Token 34: '.' (ID: 13)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -4.203409844194539e-05
    2. ':
' → logprob: -10.750041961669922
    3. '   ' → logprob: -11.500041961669922
    4. ':\' → logprob: -12.500041961669922
    5. ':`' → logprob: -12.750041961669922
    6. ':

' → logprob: -13.250041961669922
    7. ':#' → logprob: -14.500041961669922
    8. '       ' → logprob: -15.125041961669922
    9. ':<' → logprob: -15.500041961669922
    10. ':**' → logprob: -15.625041961669922

Token 35: '0' (ID: 15)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.22852835059165955
    2. ':' → logprob: -2.2285282611846924
    3. '       ' → logprob: -2.9785282611846924
    4. 'break' → logprob: -4.2285284996032715
    5. '   ' → logprob: -4.7285284996032715
    6. ':
' → logprob: -5.2285284996032715
    7. 'continue' → logprob: -5.4785284996032715
    8. 'sys' → logprob: -5.4785284996032715
    9. 'n' → logprob: -5.8535284996032715
    10. '0' → logprob: -6.3535284996032715

Token 36: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -3.011373155459296e-05
    2. ':
' → logprob: -10.625030517578125
    3. ':`' → logprob: -12.750030517578125
    4. ':

' → logprob: -13.500030517578125
    5. '   ' → logprob: -14.125030517578125
    6. ':\' → logprob: -14.625030517578125
    7. '       ' → logprob: -16.500030517578125
    8. ':**' → logprob: -16.750030517578125
    9. ':<' → logprob: -16.875030517578125
    10. ':#' → logprob: -17.000030517578125

Token 37: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.537180211627856e-05
    2. '      ' → logprob: -11.125045776367188
    3. 'print' → logprob: -11.375045776367188
    4. '   ' → logprob: -12.000045776367188
    5. '     ' → logprob: -12.000045776367188
    6. '        ' → logprob: -12.125045776367188
    7. '           ' → logprob: -14.250045776367188
    8. 'continue' → logprob: -15.125045776367188
    9. '         ' → logprob: -15.250045776367188
    10. '    ' → logprob: -15.625045776367188

Token 38: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.25216683745384216
    2. '           ' → logprob: -1.5021668672561646
    3. 'continue' → logprob: -8.752166748046875
    4. '       ' → logprob: -10.252166748046875
    5. 'break' → logprob: -10.377166748046875
    6. 'sys' → logprob: -12.252166748046875
    7. '   ' → logprob: -13.127166748046875
    8. '          ' → logprob: -13.252166748046875
    9. '         ' → logprob: -13.627166748046875
    10. '               ' → logprob: -13.752166748046875

Token 39: '(int' (ID: 2742)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.6833996772766113
    2. '()' → logprob: -0.9333996772766113
    3. '(' → logprob: -3.0583996772766113
    4. '(n' → logprob: -3.5583996772766113
    5. '(f' → logprob: -4.433399677276611
    6. '("("' → logprob: -5.058399677276611
    7. '("")' → logprob: -5.558399677276611
    8. '('' → logprob: -6.308399677276611
    9. '(w' → logprob: -6.558399677276611
    10. '(...)' → logprob: -8.558399200439453

Token 40: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.07122769206762314
    2. '(' → logprob: -3.446227788925171
    3. '(int' → logprob: -3.696227788925171
    4. '(float' → logprob: -4.696227550506592
    5. '(round' → logprob: -6.696227550506592
    6. '(max' → logprob: -7.446227550506592
    7. '(bool' → logprob: -8.69622802734375
    8. '(w' → logprob: -8.69622802734375
    9. '())' → logprob: -8.94622802734375
    10. ')' → logprob: -9.44622802734375

Token 41: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00026205103495158255
    2. ')' → logprob: -8.375262260437012
    3. '))
' → logprob: -10.750262260437012
    4. ')))' → logprob: -11.875262260437012
    5. '))

' → logprob: -14.750262260437012
    6. '))+' → logprob: -14.875262260437012
    7. '   ' → logprob: -15.000262260437012
    8. '"))' → logprob: -15.125262260437012
    9. '),' → logprob: -15.375262260437012
    10. '.strip' → logprob: -15.625262260437012


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 39
Tokens correctement prédits (1ère position, stricte): 6
Tokens correctement prédits (1ère position, avec adaptation): 7
Tokens correctement prédits (top 10): 25
Précision stricte (1ère position): 15.38%
Précision adaptée (1ère position): 17.95%
Précision (top 10): 64.10%
================================================================================
