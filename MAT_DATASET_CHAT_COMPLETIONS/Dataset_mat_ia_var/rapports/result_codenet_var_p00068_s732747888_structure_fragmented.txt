================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 18:04:37
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

def get_input():
    return input()

def parse_input(n):
    return [list(input()) for _ in range(n)]

def convert_input(val):
    return int(val)

def is_zero(n):
    return n == 0

def get_point_coordinates(point):
    return point[0], point[1]

def calculate_differences(p1, p2):
    y1, x1 = get_point_coordinates(p1)
    dy = p2[0] - y1
    dx = p2[1] - x1
    return y1, x1, dy, dx

def side_for_point(p1, p2, D):
    y1, x1, dy, dx = calculate_differences(p1, p2)
    for p3 in reversed(D):
        if is_same_point(p1, p3) or is_same_point(p2, p3):
            continue
        elif side_condition(p3, x1, y1, dx, dy):
            return False
    return True

def is_same_point(p1, p2):
    return p1 == p2

def side_condition(p3, x1, y1, dx, dy):
    return (p3[1] - x1) * dy - dx * (p3[0] - y1) < 0

def get_sorted_points(D):
    return sorted(D)

def get_first_point(D):
    return D[0]

def remove_point(D, p):
    D.remove(p)

def get_copy(D):
    return D[:]

def find_next_point(D1, p1, D):
    for p2 in D1:
        if not is_same_point(p1, p2) and side_for_point(p1, p2, D):
            return p2
    return None

def convex_hull_points(D):
    p = p1 = get_first_point(D)
    D1 = get_copy(D)
    while True:
        p2 = find_next_point(D1, p1, D)
        p1 = p2
        remove_point(D1, p2)
        if is_same_point(p2, p):
            break
    return len(D1)

def main_loop():
    while True:
        n = get_input()
        n = convert_input(n)
        if is_zero(n):
            break
        D = parse_input(n)
        D = get_sorted_points(D)
        print(convex_hull_points(D))

main_loop()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: 'as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.19661454856395721
    2. 'os' → logprob: -1.9466145038604736
    3. 'import' → logprob: -3.6966145038604736
    4. 'print' → logprob: -5.696614742279053
    5. 'from' → logprob: -5.821614742279053
    6. 'sys' → logprob: -5.946614742279053
    7. '```' → logprob: -6.946614742279053
    8. 'numpy' → logprob: -8.196614265441895
    9. ' as' → logprob: -8.946614265441895
    10. '#' → logprob: -9.446614265441895

Token 4: ' get' (ID: 717)
  Prédit: ' my'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' my' → logprob: -0.16799244284629822
    2. 'my' → logprob: -2.917992353439331
    3. ' foo' → logprob: -4.04299259185791
    4. ' ' → logprob: -4.41799259185791
    5. '(' → logprob: -4.79299259185791
    6. ' func' → logprob: -4.91799259185791
    7. '()' → logprob: -4.91799259185791
    8. 'def' → logprob: -5.16799259185791
    9. ' calculate' → logprob: -5.29299259185791
    10. ' f' → logprob: -5.54299259185791

Token 5: '_input' (ID: 12507)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9901915192604065
    2. '_data' → logprob: -1.3651914596557617
    3. '():' → logprob: -1.8651914596557617
    4. '_parameters' → logprob: -3.1151914596557617
    5. '_t' → logprob: -3.3651914596557617
    6. '_values' → logprob: -3.9901914596557617
    7. '_def' → logprob: -4.115191459655762
    8. '_token' → logprob: -4.365191459655762
    9. 't' → logprob: -5.115191459655762
    10. '(' → logprob: -5.240191459655762

Token 6: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.07944057881832123
    2. '(:' → logprob: -2.5794405937194824
    3. '()' → logprob: -8.454440116882324
    4. '(' → logprob: -8.954440116882324
    5. ' ():' → logprob: -9.829440116882324
    6. '(_:' → logprob: -10.079440116882324
    7. '(':' → logprob: -10.704440116882324
    8. '(":' → logprob: -10.829440116882324
    9. '():
' → logprob: -10.829440116882324
    10. '(::' → logprob: -11.079440116882324

Token 7: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002383441897109151
    2. 'pass' → logprob: -9.000238418579102
    3. 'return' → logprob: -9.375238418579102
    4. '  ' → logprob: -11.500238418579102
    5. '```' → logprob: -11.625238418579102
    6. '   ' → logprob: -12.625238418579102
    7. ' ' → logprob: -12.875238418579102
    8. '    ' → logprob: -13.375238418579102
    9. '   ' → logprob: -14.375238418579102
    10. ' pass' → logprob: -14.625238418579102

Token 8: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00478740781545639
    2. 'pass' → logprob: -5.629787445068359
    3. 'return' (adapté à ' return') → logprob: -6.754787445068359
    4. '  ' → logprob: -11.75478744506836
    5. '   ' → logprob: -12.62978744506836
    6. '	pass' → logprob: -12.87978744506836
    7. ' ' → logprob: -13.25478744506836
    8. ' pass' → logprob: -13.37978744506836
    9. '```' → logprob: -13.75478744506836
    10. 'print' → logprob: -14.12978744506836

Token 9: ' input' (ID: 3422)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0102220568805933
    2. 'input' → logprob: -4.6352219581604
    3. '(sys' → logprob: -9.260222434997559
    4. ' sys' → logprob: -9.385222434997559
    5. '   ' → logprob: -9.510222434997559
    6. '```' → logprob: -9.760222434997559
    7. ' ' → logprob: -10.385222434997559
    8. 'stdin' → logprob: -10.510222434997559
    9. '()' → logprob: -11.260222434997559
    10. '	sys' → logprob: -11.510222434997559

Token 10: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -1.2471589798224159e-05
    2. '()`' → logprob: -12.125012397766113
    3. '(' → logprob: -12.625012397766113
    4. '().' → logprob: -13.125012397766113
    5. '("' → logprob: -14.500012397766113
    6. '())' → logprob: -15.125012397766113
    7. '()(' → logprob: -16.00001335144043
    8. '('' → logprob: -16.12501335144043
    9. '()"' → logprob: -16.12501335144043
    10. '()}' → logprob: -16.37501335144043

Token 11: 'def' (ID: 1314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.014156698249280453
    2. '   ' → logprob: -5.514156818389893
    3. '(' → logprob: -5.639156818389893
    4. '```' → logprob: -5.764156818389893
    5. ':' → logprob: -7.014156818389893
    6. 'def' → logprob: -7.139156818389893
    7. '<|end|>' → logprob: -7.514156818389893
    8. '():' → logprob: -7.889156818389893
    9. 'sys' → logprob: -8.889156341552734
    10. '`' → logprob: -9.514156341552734

Token 12: ' parse' (ID: 8420)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.6305907368659973
    2. 'get' → logprob: -1.1305906772613525
    3. ' process' → logprob: -2.1305906772613525
    4. 'process' → logprob: -4.255590915679932
    5. '   ' → logprob: -5.630590915679932
    6. ' main' → logprob: -6.880590915679932
    7. ' ' → logprob: -6.880590915679932
    8. ' my' → logprob: -7.005590915679932
    9. ' handle' → logprob: -7.505590915679932
    10. '()' → logprob: -7.755590915679932

Token 13: '_input' (ID: 12507)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.021343545988202095
    2. '_' → logprob: -4.52134370803833
    3. '(_:' → logprob: -5.77134370803833
    4. '_:' → logprob: -6.27134370803833
    5. '()' → logprob: -6.27134370803833
    6. '_input' → logprob: -6.77134370803833
    7. '(:' → logprob: -7.77134370803833
    8. '(_' → logprob: -8.021343231201172
    9. '():
' → logprob: -8.021343231201172
    10. '_parameters' → logprob: -8.771343231201172

Token 14: '(n' (ID: 2406)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.007942674681544304
    2. '(:' → logprob: -4.8829426765441895
    3. '()' → logprob: -8.632942199707031
    4. ' ():' → logprob: -9.757942199707031
    5. '(_:' → logprob: -10.382942199707031
    6. '(' → logprob: -11.007942199707031
    7. '():
' → logprob: -11.132942199707031
    8. '(":' → logprob: -11.132942199707031
    9. '(':' → logprob: -11.382942199707031
    10. '():

' → logprob: -13.257942199707031

Token 15: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1738833636045456
    2. ',' → logprob: -2.4238834381103516
    3. '):
' → logprob: -2.6738834381103516
    4. ':' → logprob: -6.548883438110352
    5. '):

' → logprob: -7.548883438110352
    6. '):
' → logprob: -10.548883438110352
    7. ')' → logprob: -11.173883438110352
    8. '   ' → logprob: -11.298883438110352
    9. ''):' → logprob: -12.173883438110352
    10. ')):' → logprob: -12.173883438110352

Token 16: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -3.7146746763028204e-05
    2. 'pass' → logprob: -10.37503719329834
    3. 'return' → logprob: -12.62503719329834
    4. '  ' → logprob: -13.25003719329834
    5. ' ' → logprob: -14.62503719329834
    6. ' pass' → logprob: -16.250036239624023
    7. '    ' → logprob: -16.375036239624023
    8. '   ' → logprob: -16.375036239624023
    9. '	pass' → logprob: -17.000036239624023
    10. '```' → logprob: -17.125036239624023

Token 17: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.08766547590494156
    2. '   ' → logprob: -2.587665557861328
    3. 'pass' → logprob: -5.087665557861328
    4. 'int' → logprob: -6.462665557861328
    5. 'n' → logprob: -8.712665557861328
    6. '#' → logprob: -8.712665557861328
    7. 'print' → logprob: -8.837665557861328
    8. 'if' → logprob: -9.212665557861328
    9. 'parse' → logprob: -9.337665557861328
    10. 'try' → logprob: -9.837665557861328

Token 18: ' [' (ID: 723)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.3539827764034271
    2. 'n' → logprob: -2.10398268699646
    3. ' int' → logprob: -2.60398268699646
    4. 'list' → logprob: -2.85398268699646
    5. ' n' → logprob: -3.85398268699646
    6. 'float' → logprob: -4.978982925415039
    7. ' ' → logprob: -5.978982925415039
    8. '   ' → logprob: -6.103982925415039
    9. '(n' → logprob: -6.478982925415039
    10. '[]' → logprob: -6.478982925415039

Token 19: 'list' (ID: 2641)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -7.004696090007201e-05
    2. 'float' → logprob: -10.125069618225098
    3. '   ' → logprob: -11.125069618225098
    4. ' int' → logprob: -11.250069618225098
    5. '       ' → logprob: -14.375069618225098
    6. 'input' → logprob: -14.750069618225098
    7. '(int' → logprob: -15.125069618225098
    8. '0' → logprob: -15.500069618225098
    9. 'None' → logprob: -16.250070571899414
    10. ']' → logprob: -16.375070571899414

Token 20: '(input' (ID: 10054)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.15126565098762512
    2. '(' → logprob: -2.0262656211853027
    3. '(map' → logprob: -5.526265621185303
    4. '(range' → logprob: -6.401265621185303
    5. '(...)' → logprob: -7.776265621185303
    6. '()`' → logprob: -7.901265621185303
    7. '()]' → logprob: -8.901266098022461
    8. '([]' → logprob: -8.901266098022461
    9. '(copy' → logprob: -9.151266098022461
    10. '().' → logprob: -9.151266098022461

Token 21: '())' (ID: 3516)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.13663655519485474
    2. '())' → logprob: -2.38663649559021
    3. '()' → logprob: -3.38663649559021
    4. '()]' → logprob: -6.886636734008789
    5. '()).' → logprob: -7.511636734008789
    6. '()`' → logprob: -9.261636734008789
    7. '()[' → logprob: -9.386636734008789
    8. '()(' → logprob: -10.386636734008789
    9. '()].' → logprob: -10.386636734008789
    10. '())
' → logprob: -10.761636734008789

Token 22: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004328164737671614
    2. ' for' → logprob: -6.50432825088501
    3. ']' → logprob: -6.62932825088501
    4. ')' → logprob: -6.75432825088501
    5. '   ' → logprob: -8.129327774047852
    6. '	for' → logprob: -11.879327774047852
    7. ')]' → logprob: -11.879327774047852
    8. '])' → logprob: -12.004327774047852
    9. '       ' → logprob: -12.129327774047852
    10. 'if' → logprob: -12.629327774047852

Token 23: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3174113929271698
    2. 'i' → logprob: -1.6924114227294922
    3. 'in' → logprob: -3.192411422729492
    4. ' _' → logprob: -4.192411422729492
    5. 'range' → logprob: -4.817411422729492
    6. 'n' → logprob: -4.942411422729492
    7. '_i' → logprob: -5.067411422729492
    8. '_in' → logprob: -5.692411422729492
    9. '_range' → logprob: -6.692411422729492
    10. 'x' → logprob: -6.817411422729492

Token 24: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.0032367748208343983
    2. ' in' → logprob: -6.003236770629883
    3. 'range' → logprob: -8.128236770629883
    4. 'n' → logprob: -8.503236770629883
    5. '   ' → logprob: -8.753236770629883
    6. ':' → logprob: -10.878236770629883
    7. 'import' → logprob: -11.253236770629883
    8. 'input' → logprob: -11.503236770629883
    9. 'args' → logprob: -11.503236770629883
    10. 'def' → logprob: -11.878236770629883

Token 25: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -9.13388703338569e-06
    2. ' range' → logprob: -11.625009536743164
    3. '(range' → logprob: -15.875009536743164
    4. '	range' → logprob: -18.500009536743164
    5. '.range' → logprob: -19.250009536743164
    6. 'Range' → logprob: -20.250009536743164
    7. '_range' → logprob: -20.375009536743164
    8. '-range' → logprob: -21.500009536743164
    9. 'ranges' → logprob: -21.625009536743164
    10. 'repeat' → logprob: -22.125009536743164

Token 26: '(n' (ID: 2406)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.688431441783905
    2. '(n' → logprob: -0.813431441783905
    3. '(' → logprob: -2.93843150138855
    4. '(int' → logprob: -8.063431739807129
    5. '(num' → logprob: -8.188431739807129
    6. '(len' → logprob: -9.563431739807129
    7. '(ns' → logprob: -9.813431739807129
    8. '(max' → logprob: -10.188431739807129
    9. '(sys' → logprob: -10.313431739807129
    10. '(np' → logprob: -10.563431739807129

Token 27: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.11765462160110474
    2. ')' → logprob: -2.24265456199646
    3. '):' → logprob: -5.367654800415039
    4. ')]

' → logprob: -10.242654800415039
    5. ')].' → logprob: -10.367654800415039
    6. ')])' → logprob: -10.617654800415039
    7. ')][' → logprob: -10.992654800415039
    8. ')]
' → logprob: -11.367654800415039
    9. ']' → logprob: -11.492654800415039
    10. '   ' → logprob: -12.492654800415039

Token 28: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.580846905708313
    2. '   ' → logprob: -0.830846905708313
    3. 'n' → logprob: -5.830846786499023
    4. 'if' → logprob: -7.455846786499023
    5. '```' → logprob: -7.705846786499023
    6. 'return' → logprob: -8.080846786499023
    7. 'sys' → logprob: -9.080846786499023
    8. 'print' → logprob: -9.330846786499023
    9. '#' → logprob: -9.455846786499023
    10. 'import' → logprob: -9.580846786499023

Token 29: ' convert' (ID: 8452)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.377471387386322
    2. 'process' → logprob: -2.002471446990967
    3. ' parse' → logprob: -2.377471446990967
    4. ' process' → logprob: -3.002471446990967
    5. 'get' → logprob: -3.627471446990967
    6. 'main' → logprob: -6.252471446990967
    7. ' get' → logprob: -6.252471446990967
    8. 'calculate' → logprob: -6.627471446990967
    9. 'print' → logprob: -7.252471446990967
    10. ' main' → logprob: -7.377471446990967

Token 30: '_input' (ID: 12507)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.20717085897922516
    2. '_to' → logprob: -3.0821709632873535
    3. '(_:' → logprob: -3.0821709632873535
    4. '_input' → logprob: -3.3321709632873535
    5. '_' → logprob: -3.8321709632873535
    6. '(_' → logprob: -4.0821709632873535
    7. '_:' → logprob: -5.2071709632873535
    8. '()' → logprob: -5.8321709632873535
    9. '(:' → logprob: -6.3321709632873535
    10. '():
' → logprob: -6.9571709632873535

Token 31: '(val' (ID: 17391)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.003357489360496402
    2. '(:' → logprob: -6.128357410430908
    3. '(_:' → logprob: -7.253357410430908
    4. '()' → logprob: -9.128357887268066
    5. '():
' → logprob: -9.378357887268066
    6. '(_' → logprob: -9.628357887268066
    7. '_' → logprob: -9.878357887268066
    8. ' ():' → logprob: -9.878357887268066
    9. '(':' → logprob: -10.503357887268066
    10. '(":' → logprob: -10.753357887268066

Token 32: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.11940652132034302
    2. '):
' → logprob: -2.2444064617156982
    3. 'ue' → logprob: -5.244406700134277
    4. '):

' → logprob: -7.494406700134277
    5. ')' → logprob: -8.119406700134277
    6. ':' → logprob: -8.744406700134277
    7. 'e' → logprob: -9.119406700134277
    8. '):
' → logprob: -9.619406700134277
    9. '   ' → logprob: -10.369406700134277
    10. 'ues' → logprob: -11.494406700134277

Token 33: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -6.825890159234405e-05
    2. 'pass' → logprob: -9.875068664550781
    3. 'return' → logprob: -11.375068664550781
    4. '  ' → logprob: -12.375068664550781
    5. ' ' → logprob: -15.125068664550781
    6. '	pass' → logprob: -15.375068664550781
    7. '    ' → logprob: -15.625068664550781
    8. '	return' → logprob: -15.875068664550781
    9. ' pass' → logprob: -16.12506866455078
    10. '#' → logprob: -17.12506866455078

Token 34: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.011884094215929508
    2. '   ' → logprob: -4.5118842124938965
    3. 'val' → logprob: -7.2618842124938965
    4. 'pass' → logprob: -9.011883735656738
    5. 'print' → logprob: -12.011883735656738
    6. '#' → logprob: -13.511883735656738
    7. ' return' → logprob: -13.886883735656738
    8. '	return' → logprob: -13.886883735656738
    9. 'float' → logprob: -14.386883735656738
    10. 'if' → logprob: -14.386883735656738

Token 35: ' int' (ID: 677)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.13374806940555573
    2. 'str' → logprob: -2.5087480545043945
    3. 'int' → logprob: -3.2587480545043945
    4. 'float' → logprob: -5.3837480545043945
    5. 'list' → logprob: -7.7587480545043945
    6. ' str' → logprob: -8.883748054504395
    7. ' val' → logprob: -9.383748054504395
    8. '[val' → logprob: -9.633748054504395
    9. '(val' → logprob: -10.633748054504395
    10. ' int' → logprob: -10.883748054504395

Token 36: '(val' (ID: 17391)
  Prédit: '(val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(val' → logprob: -0.05218437686562538
    2. '(' → logprob: -3.8021843433380127
    3. '()' → logprob: -4.177184581756592
    4. '(input' → logprob: -5.052184581756592
    5. '(value' → logprob: -6.802184581756592
    6. 'def' → logprob: -6.802184581756592
    7. '(_)' → logprob: -6.802184581756592
    8. '(def' → logprob: -7.177184581756592
    9. '()(' → logprob: -7.677184581756592
    10. '_input' → logprob: -7.927184581756592

Token 37: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018297549337148666
    2. '))' → logprob: -4.0182976722717285
    3. ')`' → logprob: -9.14329719543457
    4. ')")' → logprob: -11.51829719543457
    5. ')]' → logprob: -11.64329719543457
    6. ')}' → logprob: -12.01829719543457
    7. ')))' → logprob: -12.89329719543457
    8. ')])' → logprob: -13.14329719543457
    9. '   ' → logprob: -13.14329719543457
    10. '')' → logprob: -13.14329719543457

Token 38: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08178013563156128
    2. '   ' → logprob: -2.831780195236206
    3. 'if' → logprob: -4.581779956817627
    4. '<|end|>' → logprob: -5.706779956817627
    5. '#' → logprob: -5.831779956817627
    6. '```' → logprob: -7.206779956817627
    7. '<|end|>' → logprob: -7.206779956817627
    8. 'return' → logprob: -8.081780433654785
    9. 'print' → logprob: -8.331780433654785
    10. 'n' → logprob: -8.581780433654785

Token 39: ' is' (ID: 382)
  Prédit: 'convert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'convert' → logprob: -0.27777236700057983
    2. 'process' → logprob: -1.5277724266052246
    3. 'get' → logprob: -4.152772426605225
    4. ' convert' → logprob: -5.652772426605225
    5. 'parse' → logprob: -6.402772426605225
    6. ' process' → logprob: -7.027772426605225
    7. 'calculate' → logprob: -7.152772426605225
    8. 'execute' → logprob: -7.652772426605225
    9. 'main' → logprob: -7.902772426605225
    10. 'handle' → logprob: -8.402771949768066

Token 40: '_zero' (ID: 53468)
  Prédit: '_valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_valid' → logprob: -0.765066921710968
    2. '_' → logprob: -1.7650668621063232
    3. '_prime' → logprob: -2.0150668621063232
    4. '_even' → logprob: -3.3900668621063232
    5. '_in' → logprob: -3.7650668621063232
    6. '_equal' → logprob: -3.8900668621063232
    7. '_empty' → logprob: -4.015067100524902
    8. '_input' → logprob: -4.265067100524902
    9. '_digit' → logprob: -4.515067100524902
    10. '_zero' → logprob: -4.515067100524902

Token 41: '(n' (ID: 2406)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0006699055666103959
    2. '()' → logprob: -8.000669479370117
    3. '(:' → logprob: -8.875669479370117
    4. ':' → logprob: -9.250669479370117
    5. '():
' → logprob: -10.125669479370117
    6. '(_:' → logprob: -11.125669479370117
    7. 'def' → logprob: -11.375669479370117
    8. '(' → logprob: -11.875669479370117
    9. ' ():' → logprob: -12.500669479370117
    10. '(":' → logprob: -12.750669479370117

Token 42: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.018328335136175156
    2. '):
' → logprob: -4.0183281898498535
    3. '):

' → logprob: -9.643328666687012
    4. ')' → logprob: -10.268328666687012
    5. '   ' → logprob: -10.393328666687012
    6. ':' → logprob: -10.643328666687012
    7. '):
' → logprob: -11.768328666687012
    8. ')):' → logprob: -12.143328666687012
    9. ''):' → logprob: -12.643328666687012
    10. 'def' → logprob: -13.518328666687012

Token 43: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -3.173704271830502e-06
    2. '  ' → logprob: -13.37500286102295
    3. 'return' → logprob: -13.62500286102295
    4. '    ' → logprob: -16.375003814697266
    5. '	return' → logprob: -16.375003814697266
    6. ' ' → logprob: -16.500003814697266
    7. '       ' → logprob: -17.375003814697266
    8. ' return' → logprob: -17.625003814697266
    9. ':return' → logprob: -18.875003814697266
    10. '   ' → logprob: -19.000003814697266

Token 44: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -3.249780638725497e-05
    2. '   ' → logprob: -10.375032424926758
    3. ' return' → logprob: -13.750032424926758
    4. '	return' → logprob: -16.750032424926758
    5. 'returns' → logprob: -17.000032424926758
    6. ':return' → logprob: -18.750032424926758
    7. 'ret' → logprob: -19.500032424926758
    8. '{return' → logprob: -19.500032424926758
    9. 'if' → logprob: -20.250032424926758
    10. 'Return' → logprob: -20.750032424926758

Token 45: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -2.165027217415627e-05
    2. ' n' → logprob: -10.750021934509277
    3. '   ' → logprob: -16.00002098083496
    4. '	n' → logprob: -17.12502098083496
    5. ' н' → logprob: -18.25002098083496
    6. '  ' → logprob: -18.37502098083496
    7. '(n' → logprob: -18.75002098083496
    8. '_n' → logprob: -19.50002098083496
    9. ' ' → logprob: -20.00002098083496
    10. 'False' → logprob: -20.25002098083496

Token 46: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.00010914575977949426
    2. ' ==' → logprob: -9.12510871887207
    3. '!=' → logprob: -16.62510871887207
    4. '==
' → logprob: -17.25010871887207
    5. '=' → logprob: -17.87510871887207
    6. '0' → logprob: -19.00010871887207
    7. '===' → logprob: -19.25010871887207
    8. '   ' → logprob: -19.87510871887207
    9. ')==' → logprob: -19.87510871887207
    10. '()==' → logprob: -20.25010871887207

Token 47: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -18.625
    3. '０' → logprob: -23.875
    4. 'zero' → logprob: -24.375
    5. '1' → logprob: -25.5
    6. '۰' → logprob: -25.625
    7. '00' → logprob: -25.75
    8. 'Zero' → logprob: -26.75
    9. '   ' → logprob: -27.125
    10. '零' → logprob: -27.5

Token 48: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -23.25
    3. 'zero' → logprob: -24.625
    4. '０' → logprob: -25.0
    5. '00' → logprob: -26.25
    6. '1' → logprob: -26.5
    7. '۰' → logprob: -27.125
    8. 'Zero' → logprob: -27.375
    9. '零' → logprob: -28.375
    10. ' zero' → logprob: -28.75

Token 49: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 50: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3436850309371948
    2. 'if' → logprob: -1.3436850309371948
    3. '#' → logprob: -3.9686851501464844
    4. '<|end|>' → logprob: -5.218685150146484
    5. '   ' → logprob: -6.218685150146484
    6. 'print' → logprob: -6.343685150146484
    7. '<|end|>' → logprob: -7.593685150146484
    8. '```' → logprob: -7.718685150146484
    9. 'sys' → logprob: -8.468685150146484
    10. 'n' → logprob: -8.718685150146484

Token 51: ' get' (ID: 717)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.09650144726037979
    2. 'process' → logprob: -2.721501350402832
    3. 'check' → logprob: -4.846501350402832
    4. 'get' → logprob: -4.846501350402832
    5. 'calculate' → logprob: -5.721501350402832
    6. 'add' → logprob: -6.721501350402832
    7. 'print' → logprob: -7.096501350402832
    8. 'handle' → logprob: -7.221501350402832
    9. ' is' → logprob: -7.346501350402832
    10. 'do' → logprob: -7.471501350402832

Token 52: '_point' (ID: 15466)
  Prédit: '_input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.20793551206588745
    2. '_output' → logprob: -1.8329355716705322
    3. '_' → logprob: -3.7079355716705322
    4. '_next' → logprob: -7.082935333251953
    5. '_def' → logprob: -8.332935333251953
    6. '_inputs' → logprob: -8.582935333251953
    7. '_value' → logprob: -8.707935333251953
    8. '_result' → logprob: -9.082935333251953
    9. '_token' → logprob: -9.082935333251953
    10. '_parameters' → logprob: -9.332935333251953

Token 53: '_coordinates' (ID: 129520)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.01952042244374752
    2. '(:' → logprob: -4.144520282745361
    3. '()' → logprob: -6.894520282745361
    4. '(' → logprob: -7.394520282745361
    5. 's' → logprob: -7.644520282745361
    6. '():
' → logprob: -7.894520282745361
    7. '(":' → logprob: -8.39452075958252
    8. '(':' → logprob: -8.51952075958252
    9. '(_:' → logprob: -8.64452075958252
    10. ' ():' → logprob: -9.01952075958252

Token 54: '(point' (ID: 46989)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.030124163255095482
    2. '(:' → logprob: -3.5301241874694824
    3. '(_:' → logprob: -9.030123710632324
    4. '(' → logprob: -9.655123710632324
    5. '()' → logprob: -10.030123710632324
    6. '(':' → logprob: -10.405123710632324
    7. ' ():' → logprob: -10.405123710632324
    8. '(":' → logprob: -10.655123710632324
    9. '():
' → logprob: -10.655123710632324
    10. ':' → logprob: -12.530123710632324

Token 55: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.011746014468371868
    2. '):
' → logprob: -4.511745929718018
    3. ',' → logprob: -7.636745929718018
    4. '):

' → logprob: -9.011746406555176
    5. ')' → logprob: -10.011746406555176
    6. ':' → logprob: -10.886746406555176
    7. '):
' → logprob: -11.636746406555176
    8. ''):' → logprob: -11.886746406555176
    9. ')):' → logprob: -12.511746406555176
    10. '):(' → logprob: -12.636746406555176

Token 56: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.9266199160483666e-05
    2. '  ' → logprob: -11.875019073486328
    3. 'return' → logprob: -12.000019073486328
    4. 'pass' → logprob: -13.125019073486328
    5. '	return' → logprob: -13.625019073486328
    6. ' ' → logprob: -13.750019073486328
    7. '    ' → logprob: -14.875019073486328
    8. '   ' → logprob: -14.875019073486328
    9. '	' → logprob: -15.125019073486328
    10. '	pass' → logprob: -15.500019073486328

Token 57: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5771788954734802
    2. '   ' → logprob: -0.8271788954734802
    3. 'x' → logprob: -6.702178955078125
    4. ' return' → logprob: -12.577178955078125
    5. '  ' → logprob: -13.452178955078125
    6. 'pass' → logprob: -13.577178955078125
    7. '	return' → logprob: -13.577178955078125
    8. '#' → logprob: -13.702178955078125
    9. 'returns' → logprob: -14.452178955078125
    10. 'if' → logprob: -15.202178955078125

Token 58: ' point' (ID: 2438)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.39664047956466675
    2. '(point' → logprob: -1.1466405391693115
    3. '(' → logprob: -5.521640300750732
    4. 'tuple' → logprob: -5.771640300750732
    5. '   ' → logprob: -6.771640300750732
    6. 'list' → logprob: -7.521640300750732
    7. ' point' → logprob: -8.02164077758789
    8. ' (' → logprob: -8.64664077758789
    9. '	point' → logprob: -9.14664077758789
    10. '(tuple' → logprob: -9.64664077758789

Token 59: '[' (ID: 58)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5853778123855591
    2. '<|end|>' → logprob: -0.9603778123855591
    3. '```' → logprob: -4.7103776931762695
    4. '[' → logprob: -4.7103776931762695
    5. '()' → logprob: -5.0853776931762695
    6. '#' → logprob: -5.0853776931762695
    7. 'x' → logprob: -5.7103776931762695
    8. '   ' → logprob: -5.7103776931762695
    9. '<|end|>' → logprob: -5.7103776931762695
    10. '(x' → logprob: -6.2103776931762695

Token 60: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.46983152627944946
    2. ':' → logprob: -1.0948314666748047
    3. '1' → logprob: -3.2198314666748047
    4. ''' → logprob: -8.844831466674805
    5. ':-' → logprob: -10.219831466674805
    6. ':]' → logprob: -10.219831466674805
    7. ' :' → logprob: -10.344831466674805
    8. ':x' → logprob: -10.969831466674805
    9. ':int' → logprob: -11.094831466674805
    10. '(' → logprob: -12.094831466674805

Token 61: '],' (ID: 2155)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.007135293446481228
    2. '],' → logprob: -5.382135391235352
    3. ']' → logprob: -6.132135391235352
    4. '],[' → logprob: -8.882135391235352
    5. '[' → logprob: -9.132135391235352
    6. ']][' → logprob: -9.632135391235352
    7. ')][' → logprob: -11.382135391235352
    8. ',' → logprob: -12.882135391235352
    9. '][]' → logprob: -13.132135391235352
    10. '].' → logprob: -13.132135391235352

Token 62: ' point' (ID: 2438)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -1.6240566083070007e-06
    2. ' point' → logprob: -13.500001907348633
    3. '	point' → logprob: -15.500001907348633
    4. '.point' → logprob: -17.125001907348633
    5. '(point' → logprob: -19.000001907348633
    6. '   ' → logprob: -19.000001907348633
    7. 'punkt' → logprob: -19.625001907348633
    8. 'points' → logprob: -20.875001907348633
    9. '_point' → logprob: -21.250001907348633
    10. '       ' → logprob: -22.375001907348633

Token 63: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.320199877838604e-07
    2. '1' → logprob: -15.0
    3. '\[' → logprob: -17.625
    4. '(' → logprob: -19.375
    5. '   ' → logprob: -20.0
    6. '```' → logprob: -20.25
    7. ' [' → logprob: -21.375
    8. '\' → logprob: -21.5
    9. ',' → logprob: -21.625
    10. ' ' → logprob: -21.625

Token 64: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '2' → logprob: -21.0
    3. '１' → logprob: -21.25
    4. ' ' → logprob: -21.75
    5. '۱' → logprob: -22.75
    6. '१' → logprob: -23.0
    7. '১' → logprob: -23.5
    8. '   ' → logprob: -23.875
    9. '١' → logprob: -24.25
    10. '```' → logprob: -24.875

Token 65: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5788411498069763
    2. ')' → logprob: -1.078841209411621
    3. ')]' → logprob: -2.328841209411621
    4. '])' → logprob: -6.703841209411621
    5. ')`' → logprob: -8.328841209411621
    6. '）' → logprob: -9.078841209411621
    7. '}]' → logprob: -9.578841209411621
    8. '```' → logprob: -9.578841209411621
    9. ']()' → logprob: -9.578841209411621
    10. '}' → logprob: -9.953841209411621

Token 66: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.015956120565533638
    2. '   ' → logprob: -4.265955924987793
    3. '#' → logprob: -6.890955924987793
    4. '<|end|>' → logprob: -8.390955924987793
    5. 'if' → logprob: -8.765955924987793
    6. '```' → logprob: -9.015955924987793
    7. 'print' → logprob: -10.015955924987793
    8. 'pass' → logprob: -10.140955924987793
    9. 'return' → logprob: -10.390955924987793
    10. '<|end|>' → logprob: -10.890955924987793

Token 67: ' calculate' (ID: 17950)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.346871018409729
    2. 'process' → logprob: -1.971871018409729
    3. 'set' → logprob: -2.4718708992004395
    4. 'calculate' → logprob: -3.4718708992004395
    5. 'is' → logprob: -3.9718708992004395
    6. 'convert' → logprob: -4.9718708992004395
    7. 'add' → logprob: -6.3468708992004395
    8. 'handle' → logprob: -6.5968708992004395
    9. 'create' → logprob: -6.7218708992004395
    10. ' get' → logprob: -7.0968708992004395

Token 68: '_d' (ID: 1565)
  Prédit: '_coordinates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_coordinates' → logprob: -0.22455474734306335
    2. '_' → logprob: -2.9745547771453857
    3. '_cal' → logprob: -3.7245547771453857
    4. '_input' → logprob: -4.099554538726807
    5. '_coords' → logprob: -4.474554538726807
    6. '_points' → logprob: -4.599554538726807
    7. '_area' → logprob: -4.599554538726807
    8. '_point' → logprob: -4.974554538726807
    9. '_sum' → logprob: -5.349554538726807
    10. '_output' → logprob: -5.349554538726807

Token 69: 'if' (ID: 366)
  Prédit: 'istance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'istance' → logprob: -0.008199525065720081
    2. 'ist' → logprob: -4.883199691772461
    3. 'is' → logprob: -7.758199691772461
    4. 'istan' → logprob: -9.508199691772461
    5. 'ef' → logprob: -10.508199691772461
    6. 'irection' → logprob: -11.008199691772461
    7. 'ista' → logprob: -11.133199691772461
    8. 'iameter' → logprob: -11.883199691772461
    9. 'irections' → logprob: -12.258199691772461
    10. 'i' → logprob: -12.258199691772461

Token 70: 'ferences' (ID: 10131)
  Prédit: 'ferences'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ferences' → logprob: -0.0828012079000473
    2. 'ference' → logprob: -2.582801103591919
    3. 'fer' → logprob: -5.707801342010498
    4. 'feren' → logprob: -7.707801342010498
    5. 'ferencing' → logprob: -10.33280086517334
    6. 'f' → logprob: -10.33280086517334
    7. 'ferenz' → logprob: -10.58280086517334
    8. 'ferencia' → logprob: -10.83280086517334
    9. ' fer' → logprob: -11.83280086517334
    10. 'fers' → logprob: -12.33280086517334

Token 71: '(p' (ID: 2407)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.030845731496810913
    2. '(:' → logprob: -3.5308456420898438
    3. '(_:' → logprob: -7.530845642089844
    4. '(' → logprob: -8.530845642089844
    5. '()' → logprob: -9.155845642089844
    6. '(':' → logprob: -9.655845642089844
    7. '(":' → logprob: -9.905845642089844
    8. ' ():' → logprob: -10.655845642089844
    9. '():
' → logprob: -10.905845642089844
    10. '(_' → logprob: -11.530845642089844

Token 72: '1' (ID: 16)
  Prédit: 'oint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oint' → logprob: -0.008907277137041092
    2. 'oints' → logprob: -4.758907318115234
    3. 'oin' → logprob: -8.383907318115234
    4. '1' → logprob: -9.758907318115234
    5. 'oi' → logprob: -13.758907318115234
    6. 'ont' → logprob: -13.758907318115234
    7. 'o' → logprob: -13.758907318115234
    8. 'osition' → logprob: -14.133907318115234
    9. ',' → logprob: -14.383907318115234
    10. 'os' → logprob: -14.383907318115234

Token 73: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.125210297293961e-05
    2. ',p' → logprob: -9.625081062316895
    3. ' ,' → logprob: -12.875081062316895
    4. '1' → logprob: -13.000081062316895
    5. '):
' → logprob: -13.250081062316895
    6. 'oint' → logprob: -13.250081062316895
    7. ',
' → logprob: -14.000081062316895
    8. '),' → logprob: -14.125081062316895
    9. '):' → logprob: -14.250081062316895
    10. ',t' → logprob: -14.250081062316895

Token 74: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00026264708139933646
    2. ' p' → logprob: -8.250262260437012
    3. '	p' → logprob: -14.750262260437012
    4. '   ' → logprob: -15.125262260437012
    5. ',p' → logprob: -15.125262260437012
    6. ',' → logprob: -15.500262260437012
    7. ' п' → logprob: -16.375263214111328
    8. ' ' → logprob: -17.250263214111328
    9. ' ' → logprob: -18.000263214111328
    10. '_p' → logprob: -18.000263214111328

Token 75: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005291868932545185
    2. 'oint' → logprob: -5.380291938781738
    3. '2' → logprob: -8.505291938781738
    4. '[' → logprob: -8.505291938781738
    5. 'oints' → logprob: -9.005291938781738
    6. '0' → logprob: -9.130291938781738
    7. '_' → logprob: -11.380291938781738
    8. 'o' → logprob: -11.505291938781738
    9. 'oin' → logprob: -12.130291938781738
    10. 'ont' → logprob: -13.255291938781738

Token 76: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5767390131950378
    2. '):
' → logprob: -0.8267390131950378
    3. '):

' → logprob: -7.5767388343811035
    4. ',' → logprob: -9.076739311218262
    5. '   ' → logprob: -9.201739311218262
    6. '):
' → logprob: -9.951739311218262
    7. ')' → logprob: -10.951739311218262
    8. ')):' → logprob: -12.576739311218262
    9. ')):
' → logprob: -14.076739311218262
    10. ''):' → logprob: -14.701739311218262

Token 77: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3856492842023727e-06
    2. '  ' → logprob: -13.750000953674316
    3. 'return' → logprob: -15.500000953674316
    4. ' ' → logprob: -16.875001907348633
    5. '    ' → logprob: -17.375001907348633
    6. '	return' → logprob: -17.875001907348633
    7. ' return' → logprob: -18.625001907348633
    8. '   ' → logprob: -18.875001907348633
    9. '       ' → logprob: -19.125001907348633
    10. '   ' → logprob: -19.750001907348633

Token 78: ' y' (ID: 342)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0007181499968282878
    2. '   ' → logprob: -7.250718116760254
    3. ' return' → logprob: -12.000718116760254
    4. 'abs' → logprob: -14.250718116760254
    5. 'dx' → logprob: -14.375718116760254
    6. 'x' → logprob: -14.875718116760254
    7. '	return' → logprob: -15.375718116760254
    8. 'diff' → logprob: -16.00071907043457
    9. 'returns' → logprob: -16.50071907043457
    10. '{return' → logprob: -17.50071907043457

Token 79: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6812406778335571
    2. ',' → logprob: -1.4312406778335571
    3. ' =' → logprob: -1.5562406778335571
    4. '=' → logprob: -3.5562405586242676
    5. '_diff' → logprob: -5.556240558624268
    6. '   ' → logprob: -5.806240558624268
    7. '_' → logprob: -6.556240558624268
    8. '-' → logprob: -6.681240558624268
    9. ' ' → logprob: -7.056240558624268
    10. 'ield' → logprob: -7.181240558624268

Token 80: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008369080605916679
    2. '-' → logprob: -7.6258368492126465
    3. '   ' → logprob: -8.375837326049805
    4. ',y' → logprob: -9.625837326049805
    5. '1' → logprob: -11.000837326049805
    6. ' -' → logprob: -11.125837326049805
    7. ' ,' → logprob: -11.875837326049805
    8. '=' → logprob: -12.750837326049805
    9. '-,' → logprob: -13.375837326049805
    10. '，' → logprob: -13.625837326049805

Token 81: ' x' (ID: 1215)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -1.5048530030981055e-06
    2. ' y' → logprob: -13.500001907348633
    3. '   ' → logprob: -17.375001907348633
    4. 'p' → logprob: -18.375001907348633
    5. '	y' → logprob: -18.875001907348633
    6. 'x' → logprob: -20.500001907348633
    7. 'y's' → logprob: -22.000001907348633
    8. '_y' → logprob: -22.250001907348633
    9. '  ' → logprob: -23.250001907348633
    10. '       ' → logprob: -23.375001907348633

Token 82: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.404745439183898e-05
    2. '[' → logprob: -10.62503433227539
    3. '2' → logprob: -12.50003433227539
    4. '0' → logprob: -13.12503433227539
    5. '_' → logprob: -13.37503433227539
    6. '   ' → logprob: -14.50003433227539
    7. ' ' → logprob: -14.75003433227539
    8. '１' → logprob: -15.12503433227539
    9. '\xe2\x82' → logprob: -15.25003433227539
    10. ',' → logprob: -15.50003433227539

Token 83: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.43516767024993896
    2. '=' → logprob: -1.060167670249939
    3. ' =' → logprob: -5.1851677894592285
    4. ',y' → logprob: -7.4351677894592285
    5. '   ' → logprob: -9.06016731262207
    6. '=y' → logprob: -9.81016731262207
    7. 'y' → logprob: -10.06016731262207
    8. 'return' → logprob: -11.06016731262207
    9. 'def' → logprob: -12.56016731262207
    10. '-' → logprob: -12.81016731262207

Token 84: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -3.2617008400848135e-05
    2. ' get' → logprob: -10.625032424926758
    3. 'p' → logprob: -11.750032424926758
    4. '.get' → logprob: -16.000032424926758
    5. '	get' → logprob: -16.125032424926758
    6. '   ' → logprob: -16.375032424926758
    7. '(get' → logprob: -18.375032424926758
    8. 'g' → logprob: -18.375032424926758
    9. '_get' → logprob: -18.500032424926758
    10. 'calculate' → logprob: -18.875032424926758

Token 85: '_point' (ID: 15466)
  Prédit: '_point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_point' → logprob: -7.896309739408025e-07
    2. '_POINT' → logprob: -15.625000953674316
    3. 'Point' → logprob: -15.750000953674316
    4. '_coordinates' → logprob: -16.125
    5. '_points' → logprob: -16.75
    6. '_input' → logprob: -17.375
    7. '_Point' → logprob: -17.375
    8. 'point' → logprob: -18.125
    9. ' point' → logprob: -18.5
    10. ' Point' → logprob: -18.625

Token 86: '_coordinates' (ID: 129520)
  Prédit: '_coordinates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_coordinates' → logprob: -0.0002273774443892762
    2. '_coords' → logprob: -9.500226974487305
    3. '_co' → logprob: -10.125226974487305
    4. 'coordinates' → logprob: -11.000226974487305
    5. '_cal' → logprob: -11.500226974487305
    6. '_' → logprob: -11.500226974487305
    7. '_coordinate' → logprob: -11.500226974487305
    8. '.coordinates' → logprob: -11.625226974487305
    9. '_coord' → logprob: -11.875226974487305
    10. '_scores' → logprob: -12.125226974487305

Token 87: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -1.7120533811976202e-05
    2. '(point' → logprob: -11.000017166137695
    3. '(' → logprob: -14.875017166137695
    4. '(points' → logprob: -18.500017166137695
    5. '(pp' → logprob: -19.125017166137695
    6. '(pt' → logprob: -19.500017166137695
    7. '(Point' → logprob: -19.750017166137695
    8. '(f' → logprob: -20.000017166137695
    9. '(prompt' → logprob: -20.125017166137695
    10. '(pa' → logprob: -20.375017166137695

Token 88: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.630610641877865e-06
    2. '2' → logprob: -12.250006675720215
    3. 'oint' → logprob: -14.000006675720215
    4. '１' → logprob: -14.375006675720215
    5. 'oints' → logprob: -16.5000057220459
    6. '_' → logprob: -17.1250057220459
    7. '(' → logprob: -17.6250057220459
    8. '۱' → logprob: -17.6250057220459
    9. '\xe2\x82' → logprob: -17.8750057220459
    10. '(p' → logprob: -17.8750057220459

Token 89: ')
' (ID: 446)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.25539788603782654
    2. ',' → logprob: -1.505397915840149
    3. ')' → logprob: -5.755397796630859
    4. ')
' → logprob: -9.00539779663086
    5. ')

' → logprob: -10.38039779663086
    6. '[' → logprob: -10.88039779663086
    7. ',)' → logprob: -10.88039779663086
    8. '`,' → logprob: -11.00539779663086
    9. ',),' → logprob: -11.00539779663086
    10. '   ' → logprob: -11.13039779663086

Token 90: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -3.128163257315464e-07
    2. 'y' → logprob: -15.625
    3. '  ' → logprob: -16.375
    4. '    
' → logprob: -17.625
    5. '       ' → logprob: -19.5
    6. '	y' → logprob: -19.5
    7. '    ' → logprob: -19.625
    8. ' y' → logprob: -20.375
    9. ' ' → logprob: -21.25
    10. '	' → logprob: -22.875

Token 91: ' dy' (ID: 11996)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.048588961362838745
    2. 'y' → logprob: -3.048588991165161
    3. '	y' → logprob: -14.048588752746582
    4. ' y' → logprob: -14.673588752746582
    5. '  ' → logprob: -14.798588752746582
    6. '    
' → logprob: -17.0485897064209
    7. 'x' → logprob: -18.6735897064209
    8. '       ' → logprob: -18.6735897064209
    9. 'yb' → logprob: -18.6735897064209
    10. ' ' → logprob: -18.7985897064209

Token 92: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14421381056308746
    2. '   ' → logprob: -2.894213914871216
    3. ' =' → logprob: -2.894213914871216
    4. '=' → logprob: -3.769213914871216
    5. '=d' → logprob: -9.019213676452637
    6. ' ' → logprob: -9.269213676452637
    7. '=y' → logprob: -9.269213676452637
    8. '  ' → logprob: -9.519213676452637
    9. '1' → logprob: -10.144213676452637
    10. 'd' → logprob: -10.769213676452637

Token 93: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00011689399980241433
    2. ' p' → logprob: -9.250117301940918
    3. '   ' → logprob: -11.125117301940918
    4. 'abs' → logprob: -12.125117301940918
    5. '(p' → logprob: -15.250117301940918
    6. '       ' → logprob: -15.750117301940918
    7. '	p' → logprob: -16.2501163482666
    8. ' ' → logprob: -17.3751163482666
    9. 'y' → logprob: -17.6251163482666
    10. 'x' → logprob: -18.1251163482666

Token 94: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6619701981544495
    2. '2' → logprob: -1.1619701385498047
    3. 'oint' → logprob: -1.7869701385498047
    4. '[' → logprob: -5.911970138549805
    5. '-' → logprob: -8.036970138549805
    6. 'oints' → logprob: -8.536970138549805
    7. 'oin' → logprob: -9.286970138549805
    8. '```' → logprob: -9.911970138549805
    9. 'y' → logprob: -10.286970138549805
    10. ' -' → logprob: -10.411970138549805

Token 95: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.6537622034084052e-05
    2. '[y' → logprob: -10.62502670288086
    3. '\[' → logprob: -14.37502670288086
    4. '   ' → logprob: -14.75002670288086
    5. '[Y' → logprob: -15.12502670288086
    6. '-' → logprob: -15.62502670288086
    7. '[
' → logprob: -15.75002670288086
    8. '[-' → logprob: -16.00002670288086
    9. '-y' → logprob: -16.87502670288086
    10. '```' → logprob: -17.00002670288086

Token 96: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.251930296421051
    2. '0' → logprob: -1.5019302368164062
    3. '2' → logprob: -13.751930236816406
    4. '3' → logprob: -17.001930236816406
    5. ' ' → logprob: -17.251930236816406
    6. '[' → logprob: -17.501930236816406
    7. '   ' → logprob: -18.751930236816406
    8. '```' → logprob: -19.626930236816406
    9. '１' → logprob: -20.251930236816406
    10. '(' → logprob: -20.251930236816406

Token 97: ']' (ID: 60)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.2522428035736084
    2. ']' → logprob: -1.5022428035736084
    3. ']-' → logprob: -8.252243041992188
    4. '],' → logprob: -10.377243041992188
    5. '].' → logprob: -11.877243041992188
    6. '[' → logprob: -12.127243041992188
    7. ']][' → logprob: -12.627243041992188
    8. '][-' → logprob: -13.377243041992188
    9. '],[' → logprob: -13.627243041992188
    10. ']['' → logprob: -14.377243041992188

Token 98: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.04420202597975731
    2. ' -' → logprob: -3.2942020893096924
    3. '   ' → logprob: -5.169201850891113
    4. '-y' → logprob: -8.294201850891113
    5. '[' → logprob: -9.669201850891113
    6. '-p' → logprob: -10.044201850891113
    7. '-d' → logprob: -10.419201850891113
    8. ',' → logprob: -10.544201850891113
    9. 'y' → logprob: -11.294201850891113
    10. '  ' → logprob: -12.044201850891113

Token 99: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -4.008129963040119e-06
    2. ' y' → logprob: -12.875003814697266
    3. '   ' → logprob: -13.625003814697266
    4. 'p' → logprob: -16.125003814697266
    5. '	y' → logprob: -18.500003814697266
    6. 'yb' → logprob: -21.500003814697266
    7. '_y' → logprob: -22.125003814697266
    8. '(y' → logprob: -22.250003814697266
    9. 'x' → logprob: -22.625003814697266
    10. 'Y' → logprob: -22.625003814697266

Token 100: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0032806212548166513
    2. '[' → logprob: -6.2532806396484375
    3. '2' → logprob: -6.6282806396484375
    4. '[p' → logprob: -11.128280639648438
    5. ' ' → logprob: -12.628280639648438
    6. '   ' → logprob: -12.753280639648438
    7. '１' → logprob: -13.503280639648438
    8. 'ield' → logprob: -14.315780639648438
    9. '``' → logprob: -14.440780639648438
    10. '```' → logprob: -14.503280639648438

Token 101: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -7.896309739408025e-07
    2. '    
' → logprob: -14.875000953674316
    3. '  ' → logprob: -15.000000953674316
    4. '    ' → logprob: -17.625
    5. '       ' → logprob: -17.875
    6. ' ' → logprob: -19.25
    7. '
' → logprob: -19.5
    8. '	' → logprob: -20.125
    9. '     ' → logprob: -20.75
    10. 'd' → logprob: -20.875

Token 102: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -3.128163257315464e-07
    2. '  ' → logprob: -15.375
    3. '    ' → logprob: -19.25
    4. '       ' → logprob: -19.375
    5. '    
' → logprob: -20.125
    6. ' ' → logprob: -20.25
    7. '	' → logprob: -21.25
    8. '   ' → logprob: -22.25
    9. '   ' → logprob: -22.625
    10. '```' → logprob: -22.625

Token 103: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' (adapté à ' dx') → logprob: -0.0619877465069294
    2. '   ' → logprob: -2.8119876384735107
    3. 'dy' → logprob: -11.18698787689209
    4. ' dx' → logprob: -12.43698787689209
    5. 'd' → logprob: -13.93698787689209
    6. '  ' → logprob: -14.31198787689209
    7. '       ' → logprob: -15.43698787689209
    8. '_dx' → logprob: -15.43698787689209
    9. 'dz' → logprob: -15.93698787689209
    10. '	d' → logprob: -17.186986923217773

Token 104: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5862427353858948
    2. ' =' → logprob: -0.8362427353858948
    3. '   ' → logprob: -4.58624267578125
    4. ' ' → logprob: -9.96124267578125
    5. '  ' → logprob: -11.71124267578125
    6. '    ' → logprob: -13.58624267578125
    7. '=p' → logprob: -14.46124267578125
    8. '       ' → logprob: -14.58624267578125
    9. '     ' → logprob: -15.08624267578125
    10. ' ' → logprob: -16.08624267578125

Token 105: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.10020839422941208
    2. ' p' → logprob: -2.350208282470703
    3. '   ' → logprob: -13.475208282470703
    4. ' ' → logprob: -15.225208282470703
    5. '	p' → logprob: -16.100208282470703
    6. ' п' → logprob: -17.100208282470703
    7. '  ' → logprob: -17.475208282470703
    8. ' ' → logprob: -19.100208282470703
    9. '(p' → logprob: -19.850208282470703
    10. '       ' → logprob: -19.850208282470703

Token 106: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5950049161911011
    2. '[' → logprob: -0.8450049161911011
    3. '1' → logprob: -3.9700050354003906
    4. 'oint' → logprob: -12.47000503540039
    5. '   ' → logprob: -12.84500503540039
    6. ' ' → logprob: -14.22000503540039
    7. '```' → logprob: -14.34500503540039
    8. '_' → logprob: -14.59500503540039
    9. '_[' → logprob: -14.84500503540039
    10. '₂' → logprob: -14.84500503540039

Token 107: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9361264946837764e-07
    2. '\[' → logprob: -15.75
    3. '[
' → logprob: -19.0
    4. '   ' → logprob: -19.125
    5. ''[' → logprob: -19.125
    6. '[x' → logprob: -19.375
    7. '_[' → logprob: -19.75
    8. '()[' → logprob: -20.25
    9. '```' → logprob: -20.5
    10. '][' → logprob: -20.625

Token 108: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '   ' → logprob: -19.5
    3. '１' → logprob: -19.875
    4. ' ' → logprob: -19.875
    5. '۱' → logprob: -21.5
    6. '১' → logprob: -21.75
    7. '१' → logprob: -22.125
    8. '[' → logprob: -22.25
    9. '١' → logprob: -22.375
    10. '```' → logprob: -22.625

Token 109: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -3.5120287066092715e-05
    2. '   ' → logprob: -10.875035285949707
    3. ']-' → logprob: -11.625035285949707
    4. '].' → logprob: -12.875035285949707
    5. '][' → logprob: -14.000035285949707
    6. '}' → logprob: -14.000035285949707
    7. ' ]' → logprob: -14.125035285949707
    8. '']' → logprob: -14.750035285949707
    9. ']
' → logprob: -15.000035285949707
    10. ')' → logprob: -15.500035285949707

Token 110: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00033903829171322286
    2. ' -' → logprob: -8.00033950805664
    3. '   ' → logprob: -12.87533950805664
    4. '-x' → logprob: -14.00033950805664
    5. '-y' → logprob: -16.62533950805664
    6. '-d' → logprob: -17.50033950805664
    7. ' ' → logprob: -18.37533950805664
    8. '−' → logprob: -19.50033950805664
    9. '  ' → logprob: -20.12533950805664
    10. '-X' → logprob: -20.25033950805664

Token 111: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -6.704273118884885e-07
    2. ' x' → logprob: -14.250000953674316
    3. '	x' → logprob: -23.0
    4. '_x' → logprob: -23.125
    5. '"x' → logprob: -23.375
    6. '$x' → logprob: -23.625
    7. '.x' → logprob: -24.125
    8. '(x' → logprob: -24.875
    9. ')x' → logprob: -25.25
    10. ''x' → logprob: -25.875

Token 112: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001295222609769553
    2. '[' → logprob: -9.000129699707031
    3. '   ' → logprob: -13.500129699707031
    4. '2' → logprob: -13.625129699707031
    5. '(' → logprob: -13.625129699707031
    6. ' ' → logprob: -14.250129699707031
    7. '１' → logprob: -14.750129699707031
    8. '```' → logprob: -14.750129699707031
    9. '  ' → logprob: -15.500129699707031
    10. 'coordinate' → logprob: -16.12512969970703

Token 113: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3856492842023727e-06
    2. '  ' → logprob: -14.250000953674316
    3. '    
' → logprob: -14.875000953674316
    4. '    ' → logprob: -16.000001907348633
    5. 'return' → logprob: -16.250001907348633
    6. '       ' → logprob: -16.375001907348633
    7. ' ' → logprob: -17.125001907348633
    8. ';' → logprob: -17.875001907348633
    9. '	return' → logprob: -18.500001907348633
    10. '<|end|>' → logprob: -18.625001907348633

Token 114: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: 0.0
    2. '  ' → logprob: -17.125
    3. '       ' → logprob: -19.625
    4. 'return' → logprob: -19.75
    5. '    ' → logprob: -20.125
    6. ' ' → logprob: -20.25
    7. '	return' → logprob: -20.375
    8. '    
' → logprob: -20.625
    9. '   ' → logprob: -21.375
    10. '   ' → logprob: -23.0

Token 115: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01815333589911461
    2. 'return' (adapté à ' return') → logprob: -4.018153190612793
    3. '	return' → logprob: -12.893153190612793
    4. ' return' → logprob: -14.768153190612793
    5. '       ' → logprob: -15.768153190612793
    6. '  ' → logprob: -15.893153190612793
    7. 'print' → logprob: -16.51815414428711
    8. 'result' → logprob: -16.64315414428711
    9. '   ' → logprob: -17.51815414428711
    10. ' ' → logprob: -18.14315414428711

Token 116: ' y' (ID: 342)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.032473932951688766
    2. '(d' → logprob: -3.9074740409851074
    3. ' dy' → logprob: -4.657474040985107
    4. '(dx' → logprob: -6.782474040985107
    5. '(' → logprob: -7.407474040985107
    6. ' (' → logprob: -7.657474040985107
    7. 'dx' → logprob: -9.28247356414795
    8. '.dy' → logprob: -10.15747356414795
    9. '(y' → logprob: -11.03247356414795
    10. '[' → logprob: -12.78247356414795

Token 117: '1' (ID: 16)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7450238466262817
    2. '1' → logprob: -1.4950238466262817
    3. '```' → logprob: -1.8700238466262817
    4. '``' → logprob: -3.370023727416992
    5. 'ield' → logprob: -4.307523727416992
    6. 'd' → logprob: -4.307523727416992
    7. '  ' → logprob: -4.557523727416992
    8. '-' → logprob: -4.807523727416992
    9. ' ' → logprob: -4.995023727416992
    10. 'ields' → logprob: -5.120023727416992

Token 118: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45499348640441895
    2. 'return' → logprob: -1.829993486404419
    3. 'dy' → logprob: -1.954993486404419
    4. 'y' → logprob: -3.454993486404419
    5. ',' → logprob: -4.07999324798584
    6. 'dx' → logprob: -5.45499324798584
    7. ',y' → logprob: -5.95499324798584
    8. '<|end|>' → logprob: -6.70499324798584
    9. 'def' → logprob: -6.82999324798584
    10. '<|end|>' → logprob: -7.07999324798584

Token 119: ' x' (ID: 1215)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.6810927391052246
    2. 'dy' → logprob: -1.1810927391052246
    3. 'x' → logprob: -1.6810927391052246
    4. 'y' → logprob: -7.181092739105225
    5. ' dy' → logprob: -10.556093215942383
    6. ' dx' → logprob: -10.681093215942383
    7. '   ' → logprob: -11.681093215942383
    8. '(dx' → logprob: -13.556093215942383
    9. 'd' → logprob: -14.306093215942383
    10. ' x' → logprob: -14.556093215942383

Token 120: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0030101498123258352
    2. '   ' → logprob: -6.128010272979736
    3. '<|end|>' → logprob: -7.628010272979736
    4. ',' → logprob: -9.628009796142578
    5. '```' → logprob: -9.628009796142578
    6. '2' → logprob: -9.753009796142578
    7. 'def' → logprob: -10.253009796142578
    8. ' ' → logprob: -11.253009796142578
    9. 'return' → logprob: -11.378009796142578
    10. '<|end|>' → logprob: -11.628009796142578

Token 121: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0038859385531395674
    2. ',' → logprob: -6.628885746002197
    3. 'dy' → logprob: -6.628885746002197
    4. 'return' → logprob: -7.378885746002197
    5. 'def' → logprob: -7.503885746002197
    6. '```' → logprob: -11.503886222839355
    7. ' dy' → logprob: -11.628886222839355
    8. '	return' → logprob: -12.003886222839355
    9. 'y' → logprob: -12.253886222839355
    10. '  ' → logprob: -12.503886222839355

Token 122: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -6.704273118884885e-07
    2. ' dy' → logprob: -14.750000953674316
    3. 'dx' → logprob: -15.750000953674316
    4. '   ' → logprob: -18.375
    5. '.dy' → logprob: -19.75
    6. 'dyn' → logprob: -22.75
    7. 'd' → logprob: -22.75
    8. 'di' → logprob: -22.875
    9. 'du' → logprob: -23.75
    10. 'ddy' → logprob: -23.875

Token 123: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10235771536827087
    2. ',' → logprob: -2.3523576259613037
    3. 'dx' → logprob: -6.227357864379883
    4. 'return' → logprob: -9.727357864379883
    5. 'def' → logprob: -10.352357864379883
    6. ' ,' → logprob: -11.352357864379883
    7. ',d' → logprob: -11.352357864379883
    8. '```' → logprob: -11.352357864379883
    9. '  ' → logprob: -11.477357864379883
    10. 'dy' → logprob: -11.602357864379883

Token 124: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.00015860427811276168
    2. ' dx' → logprob: -8.750158309936523
    3. '_dx' → logprob: -16.375158309936523
    4. '.dx' → logprob: -17.875158309936523
    5. '   ' → logprob: -18.500158309936523
    6. '(dx' → logprob: -19.625158309936523
    7. 'DX' → logprob: -20.875158309936523
    8. '       ' → logprob: -21.875158309936523
    9. 'dy' → logprob: -22.000158309936523
    10. 'dp' → logprob: -22.250158309936523

Token 125: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001963485963642597
    2. '```' → logprob: -7.1269636154174805
    3. 'return' → logprob: -7.6269636154174805
    4. 'def' → logprob: -7.7519636154174805
    5. '<|end|>' → logprob: -8.62696361541748
    6. '<|end|>' → logprob: -10.87696361541748
    7. '	return' → logprob: -11.87696361541748
    8. ':return' → logprob: -11.87696361541748
    9. '  ' → logprob: -12.00196361541748
    10. '       ' → logprob: -12.37696361541748

Token 126: 'def' (ID: 1314)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013808627612888813
    2. 'def' → logprob: -4.513808727264404
    3. '```' → logprob: -6.513808727264404
    4. 'return' → logprob: -6.888808727264404
    5. '#' → logprob: -9.638808250427246
    6. 'if' → logprob: -10.263808250427246
    7. 'pass' → logprob: -10.763808250427246
    8. '       ' → logprob: -10.888808250427246
    9. 'print' → logprob: -11.013808250427246
    10. '  ' → logprob: -11.388808250427246

Token 127: ' side' (ID: 4307)
  Prédit: 'calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calculate' → logprob: -0.006613534409552813
    2. ' calculate' → logprob: -5.256613731384277
    3. 'is' → logprob: -7.756613731384277
    4. 'convert' → logprob: -7.881613731384277
    5. 'get' → logprob: -8.256613731384277
    6. 'process' → logprob: -9.131613731384277
    7. 'compute' → logprob: -10.506613731384277
    8. 'generate' → logprob: -11.256613731384277
    9. '()' → logprob: -11.256613731384277
    10. 'calc' → logprob: -11.256613731384277

Token 128: '_for' (ID: 11903)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.15815190970897675
    2. '(e' → logprob: -2.658151865005493
    3. '_e' → logprob: -3.283151865005493
    4. 'def' → logprob: -4.408152103424072
    5. '_effect' → logprob: -5.158152103424072
    6. '_' → logprob: -5.533152103424072
    7. 'ef' → logprob: -5.658152103424072
    8. '_def' → logprob: -6.658152103424072
    9. '(_' → logprob: -7.033152103424072
    10. '(' → logprob: -7.158152103424072

Token 129: '_point' (ID: 15466)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.10048496723175049
    2. 'ce' → logprob: -2.975484848022461
    3. '_point' → logprob: -4.975484848022461
    4. '_' → logprob: -5.225484848022461
    5. 'ces' → logprob: -5.225484848022461
    6. '_c' → logprob: -5.475484848022461
    7. '(' → logprob: -5.600484848022461
    8. 'mat' → logprob: -5.725484848022461
    9. 'c' → logprob: -6.100484848022461
    10. '_m' → logprob: -6.225484848022461

Token 130: '(p' (ID: 2407)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.2958087921142578
    2. '(p' → logprob: -2.045808792114258
    3. '(point' → logprob: -2.170808792114258
    4. '(' → logprob: -5.795808792114258
    5. '()' → logprob: -6.045808792114258
    6. 'def' → logprob: -6.795808792114258
    7. '():
' → logprob: -7.045808792114258
    8. '(s' → logprob: -7.170808792114258
    9. '(:' → logprob: -7.545808792114258
    10. '(points' → logprob: -7.670808792114258

Token 131: '1' (ID: 16)
  Prédit: 'oint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oint' → logprob: -0.026842307299375534
    2. '1' → logprob: -3.7768423557281494
    3. '):' → logprob: -6.40184211730957
    4. '):
' → logprob: -7.27684211730957
    5. 'oin' → logprob: -7.27684211730957
    6. '2' → logprob: -8.52684211730957
    7. 'oints' → logprob: -9.02684211730957
    8. ',' → logprob: -10.02684211730957
    9. '(point' → logprob: -10.15184211730957
    10. 'o' → logprob: -10.52684211730957

Token 132: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011826600879430771
    2. '):' → logprob: -5.011826515197754
    3. '):
' → logprob: -5.511826515197754
    4. ',p' → logprob: -6.886826515197754
    5. '):

' → logprob: -11.261826515197754
    6. 'def' → logprob: -12.136826515197754
    7. '   ' → logprob: -12.136826515197754
    8. ':' → logprob: -13.136826515197754
    9. '(p' → logprob: -13.136826515197754
    10. ')' → logprob: -13.511826515197754

Token 133: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -4.842555426876061e-06
    2. ' p' → logprob: -12.250004768371582
    3. '	p' → logprob: -20.0000057220459
    4. '   ' → logprob: -20.6250057220459
    5. '(p' → logprob: -21.0000057220459
    6. ',p' → logprob: -21.5000057220459
    7. '_p' → logprob: -21.8750057220459
    8. '.p' → logprob: -22.0000057220459
    9. ' п' → logprob: -22.5000057220459
    10. 'f' → logprob: -22.7500057220459

Token 134: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.029811467975378036
    2. '1' → logprob: -3.529811382293701
    3. '):' → logprob: -11.02981185913086
    4. '):
' → logprob: -11.52981185913086
    5. ',' → logprob: -11.65481185913086
    6. '```' → logprob: -11.90481185913086
    7. 'oint' → logprob: -12.52981185913086
    8. 'oints' → logprob: -12.90481185913086
    9. 'p' → logprob: -13.40481185913086
    10. ')' → logprob: -13.40481185913086

Token 135: ',' (ID: 11)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.12871253490447998
    2. '):' → logprob: -2.1287126541137695
    3. ',' → logprob: -7.1287126541137695
    4. '   ' → logprob: -7.6287126541137695
    5. '):

' → logprob: -7.7537126541137695
    6. '):
' → logprob: -10.00371265411377
    7. ')' → logprob: -11.00371265411377
    8. 'def' → logprob: -14.12871265411377
    9. '),' → logprob: -14.75371265411377
    10. ')):
' → logprob: -14.87871265411377

Token 136: ' D' (ID: 415)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.14728912711143494
    2. 'side' → logprob: -2.0222890377044678
    3. '):
' → logprob: -6.772289276123047
    4. 'point' → logprob: -6.897289276123047
    5. 's' → logprob: -7.397289276123047
    6. 'n' → logprob: -8.272289276123047
    7. '):' → logprob: -8.397289276123047
    8. 'direction' → logprob: -8.522289276123047
    9. 'c' → logprob: -8.772289276123047
    10. ')' → logprob: -9.147289276123047

Token 137: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0773322656750679
    2. '):
' → logprob: -3.4523322582244873
    3. 'ef' → logprob: -3.9523322582244873
    4. ')' → logprob: -4.577332496643066
    5. ',' → logprob: -4.702332496643066
    6. 'irection' → logprob: -6.702332496643066
    7. 'if' → logprob: -6.952332496643066
    8. 'def' → logprob: -8.077332496643066
    9. 'EF' → logprob: -8.202332496643066
    10. 'E' → logprob: -8.952332496643066

Token 138: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.7432603272027336e-06
    2. '  ' → logprob: -13.875001907348633
    3. 'return' → logprob: -14.250001907348633
    4. '    ' → logprob: -17.375001907348633
    5. ' ' → logprob: -17.500001907348633
    6. '```' → logprob: -17.500001907348633
    7. '       ' → logprob: -17.750001907348633
    8. '	return' → logprob: -18.500001907348633
    9. 'def' → logprob: -18.750001907348633
    10. ' return' → logprob: -19.250001907348633

Token 139: ' y' (ID: 342)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.25502854585647583
    2. 'if' → logprob: -2.130028486251831
    3. '   ' → logprob: -2.255028486251831
    4. 'pass' → logprob: -7.00502872467041
    5. '#' → logprob: -8.38002872467041
    6. 'y' (adapté à ' y') → logprob: -9.50502872467041
    7. 'dy' → logprob: -9.63002872467041
    8. 'side' → logprob: -9.75502872467041
    9. 'result' → logprob: -11.25502872467041
    10. 'd' → logprob: -11.25502872467041

Token 140: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.23644442856311798
    2. '   ' → logprob: -1.8614444732666016
    3. 'def' → logprob: -2.9864444732666016
    4. '=' → logprob: -6.486444473266602
    5. 'y' → logprob: -7.736444473266602
    6. '2' → logprob: -7.861444473266602
    7. ' =' → logprob: -7.861444473266602
    8. 'd' → logprob: -8.236444473266602
    9. ',' → logprob: -8.361444473266602
    10. '```' → logprob: -8.611444473266602

Token 141: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002725821454077959
    2. '   ' → logprob: -6.002725601196289
    3. ':' → logprob: -9.252725601196289
    4. ',y' → logprob: -9.502725601196289
    5. 'def' → logprob: -10.252725601196289
    6. ':,' → logprob: -11.377725601196289
    7. ',p' → logprob: -12.002725601196289
    8. '1' → logprob: -12.252725601196289
    9. ' ,' → logprob: -13.252725601196289
    10. '_,' → logprob: -13.252725601196289

Token 142: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -5.796184723294573e-06
    2. 'y' → logprob: -12.125005722045898
    3. ' x' → logprob: -14.875005722045898
    4. '   ' → logprob: -19.1250057220459
    5. 'p' → logprob: -19.3750057220459
    6. '_x' → logprob: -21.0000057220459
    7. 'd' → logprob: -21.1250057220459
    8. 'dx' → logprob: -21.2500057220459
    9. '(x' → logprob: -21.2500057220459
    10. 'dy' → logprob: -21.2500057220459

Token 143: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00013369438238441944
    2. '2' → logprob: -9.125133514404297
    3. '   ' → logprob: -11.500133514404297
    4. ' ' → logprob: -12.125133514404297
    5. 'def' → logprob: -12.250133514404297
    6. '_' → logprob: -13.375133514404297
    7. '１' → logprob: -13.625133514404297
    8. ',' → logprob: -15.125133514404297
    9. '```' → logprob: -15.250133514404297
    10. 'y' → logprob: -15.750133514404297

Token 144: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.898723561083898e-05
    2. '   ' → logprob: -9.750079154968262
    3. '=' → logprob: -11.250079154968262
    4. ' =' → logprob: -12.500079154968262
    5. ',y' → logprob: -13.125079154968262
    6. 'def' → logprob: -14.625079154968262
    7. ' ,' → logprob: -14.875079154968262
    8. ',d' → logprob: -15.750079154968262
    9. ':' → logprob: -16.125078201293945
    10. ',p' → logprob: -16.250078201293945

Token 145: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -6.2729995988775045e-06
    2. ' dy' → logprob: -12.000006675720215
    3. 'dx' → logprob: -17.5000057220459
    4. 'd' → logprob: -18.6250057220459
    5. '   ' → logprob: -19.3750057220459
    6. '.dy' → logprob: -20.0000057220459
    7. 'y' → logprob: -20.1250057220459
    8. 'dyn' → logprob: -20.8750057220459
    9. 'di' → logprob: -20.8750057220459
    10. 'yd' → logprob: -22.0000057220459

Token 146: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1472419600977446e-06
    2. ' =' → logprob: -14.625000953674316
    3. '=' → logprob: -15.000000953674316
    4. '`,' → logprob: -16.750001907348633
    5. ',d' → logprob: -17.000001907348633
    6. ' ,' → logprob: -17.000001907348633
    7. '，' → logprob: -17.125001907348633
    8. ',y' → logprob: -17.500001907348633
    9. '   ' → logprob: -17.875001907348633
    10. '_,' → logprob: -18.000001907348633

Token 147: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -1.5048530030981055e-06
    2. ' dx' → logprob: -13.500001907348633
    3. '_dx' → logprob: -18.375001907348633
    4. '.dx' → logprob: -19.500001907348633
    5. 'dc' → logprob: -20.500001907348633
    6. '(dx' → logprob: -20.750001907348633
    7. 'DX' → logprob: -21.250001907348633
    8. 'dk' → logprob: -21.250001907348633
    9. 'dt' → logprob: -21.375001907348633
    10. 'dz' → logprob: -21.875001907348633

Token 148: ' =' (ID: 314)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10669080168008804
    2. '=' → logprob: -2.6066908836364746
    3. ' =' → logprob: -3.6066908836364746
    4. ',' → logprob: -8.606690406799316
    5. 'return' → logprob: -9.856690406799316
    6. '  ' → logprob: -10.856690406799316
    7. ' ' → logprob: -11.106690406799316
    8. '       ' → logprob: -12.856690406799316
    9. '    ' → logprob: -12.981690406799316
    10. '	' → logprob: -15.106690406799316

Token 149: ' calculate' (ID: 17950)
  Prédit: 'calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calculate' → logprob: -0.0024758970830589533
    2. ' calculate' → logprob: -6.002475738525391
    3. '.calculate' → logprob: -15.50247573852539
    4. 'calcul' → logprob: -16.87747573852539
    5. 'cal' → logprob: -18.50247573852539
    6. '   ' → logprob: -18.87747573852539
    7. 'calc' → logprob: -19.00247573852539
    8. 'Calculate' → logprob: -19.00247573852539
    9. ' calcular' → logprob: -20.87747573852539
    10. 'alculate' → logprob: -21.25247573852539

Token 150: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -2.9040898880339228e-05
    2. '_diff' → logprob: -11.000028610229492
    3. 'dif' → logprob: -12.875028610229492
    4. ''_' → logprob: -13.750028610229492
    5. '_def' → logprob: -14.250028610229492
    6. '_t' → logprob: -14.625028610229492
    7. '_b' → logprob: -14.750028610229492
    8. '_difference' → logprob: -15.000028610229492
    9. 'Dif' → logprob: -15.000028610229492
    10. '_h' → logprob: -15.125028610229492

Token 151: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -5.824579784530215e-05
    2. 'iffer' → logprob: -10.5000581741333
    3. 'ifference' → logprob: -11.5000581741333
    4. 'iff' → logprob: -12.1250581741333
    5. 'ef' → logprob: -12.2500581741333
    6. 'ifer' → logprob: -13.0000581741333
    7. 'iffs' → logprob: -13.2500581741333
    8. ' if' → logprob: -13.7500581741333
    9. 'iffe' → logprob: -13.8750581741333
    10. 'иф' → logprob: -14.0000581741333

Token 152: 'ferences' (ID: 10131)
  Prédit: 'ferences'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ferences' → logprob: -0.0006000961875542998
    2. 'fer' → logprob: -7.5005998611450195
    3. 'f' → logprob: -10.87559986114502
    4. 'ference' → logprob: -11.00059986114502
    5. 'fers' → logprob: -12.12559986114502
    6. 'feren' → logprob: -12.37559986114502
    7. ' fer' → logprob: -14.12559986114502
    8. 'ences' → logprob: -15.37559986114502
    9. 'ferencing' → logprob: -15.50059986114502
    10. 'fe' → logprob: -15.50059986114502

Token 153: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -2.463036435074173e-05
    2. '(' → logprob: -10.625024795532227
    3. '((' → logprob: -17.000024795532227
    4. '(pp' → logprob: -17.125024795532227
    5. ' (' → logprob: -17.250024795532227
    6. '(m' → logprob: -17.500024795532227
    7. '(P' → logprob: -17.500024795532227
    8. '(f' → logprob: -17.500024795532227
    9. '(c' → logprob: -17.750024795532227
    10. '(`' → logprob: -17.875024795532227

Token 154: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. '2' → logprob: -12.500003814697266
    3. '１' → logprob: -19.750003814697266
    4. 'def' → logprob: -21.625003814697266
    5. '   ' → logprob: -22.125003814697266
    6. 'o' → logprob: -22.375003814697266
    7. '0' → logprob: -22.500003814697266
    8. '(' → logprob: -22.750003814697266
    9. ' ' → logprob: -22.875003814697266
    10. 'i' → logprob: -23.125003814697266

Token 155: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.9361264946837764e-07
    2. ',p' → logprob: -16.0
    3. ' ,' → logprob: -17.125
    4. '，' → logprob: -18.625
    5. '،' → logprob: -19.25
    6. ',
' → logprob: -19.5
    7. '_,' → logprob: -20.25
    8. '`,' → logprob: -20.25
    9. '',' → logprob: -20.5
    10. '(),' → logprob: -20.875

Token 156: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.0206720617134124e-05
    2. ' p' → logprob: -11.50001049041748
    3. '	p' → logprob: -20.250009536743164
    4. ' п' → logprob: -20.625009536743164
    5. '   ' → logprob: -21.500009536743164
    6. '$p' → logprob: -21.875009536743164
    7. '(p' → logprob: -22.250009536743164
    8. ')p' → logprob: -22.750009536743164
    9. '.p' → logprob: -23.000009536743164
    10. 'п' → logprob: -23.125009536743164

Token 157: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00020354038861114532
    2. '1' → logprob: -8.500203132629395
    3. '₂' → logprob: -18.75020408630371
    4. '２' → logprob: -20.00020408630371
    5. 'two' → logprob: -20.75020408630371
    6. ',' → logprob: -21.12520408630371
    7. 'a' → logprob: -21.25020408630371
    8. 'p' → logprob: -21.75020408630371
    9. ' ' → logprob: -22.25020408630371
    10. 'i' → logprob: -22.25020408630371

Token 158: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08097726106643677
    2. '   ' → logprob: -3.205977201461792
    3. ')
' → logprob: -3.330977201461792
    4. ',' → logprob: -6.705977439880371
    5. ')

' → logprob: -8.705977439880371
    6. ')
' → logprob: -10.455977439880371
    7. ',)' → logprob: -11.080977439880371
    8. '),' → logprob: -11.330977439880371
    9. ')`' → logprob: -11.455977439880371
    10. '  ' → logprob: -11.955977439880371

Token 159: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.9361264946837764e-07
    2. '  ' → logprob: -16.125
    3. 'return' → logprob: -17.125
    4. '       ' → logprob: -19.125
    5. '    ' → logprob: -19.375
    6. '    
' → logprob: -19.5
    7. ' ' → logprob: -20.0
    8. '	return' → logprob: -20.75
    9. 'def' → logprob: -21.5
    10. '```' → logprob: -21.625

Token 160: ' for' (ID: 395)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.591517984867096
    2. '   ' → logprob: -0.841517984867096
    3. 'if' → logprob: -4.216517925262451
    4. 'side' → logprob: -7.341517925262451
    5. 'result' → logprob: -9.96651840209961
    6. '#' → logprob: -13.34151840209961
    7. ' return' → logprob: -13.46651840209961
    8. 's' → logprob: -13.84151840209961
    9. '  ' → logprob: -13.96651840209961
    10. 'returns' → logprob: -14.21651840209961

Token 161: ' p' (ID: 275)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.02005419135093689
    2. ' ' → logprob: -5.270054340362549
    3. ' point' → logprob: -5.395054340362549
    4. ' p' → logprob: -5.645054340362549
    5. ' in' → logprob: -5.895054340362549
    6. ' k' → logprob: -7.145054340362549
    7. ' j' → logprob: -7.395054340362549
    8. ' _' → logprob: -7.520054340362549
    9. ' c' → logprob: -8.27005386352539
    10. ' d' → logprob: -8.27005386352539

Token 162: '3' (ID: 18)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0784093514084816
    2. 'oint' → logprob: -2.953409433364868
    3. 'in' → logprob: -4.078409194946289
    4. ':' → logprob: -5.953409194946289
    5. 'oin' → logprob: -6.078409194946289
    6. '1' → logprob: -7.453409194946289
    7. '2' → logprob: -7.953409194946289
    8. 'oints' → logprob: -8.828409194946289
    9. '```' → logprob: -9.703409194946289
    10. ':
' → logprob: -9.953409194946289

Token 163: ' in' (ID: 306)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20448435842990875
    2. ' in' → logprob: -1.9544843435287476
    3. 'in' → logprob: -3.204484462738037
    4. '   ' → logprob: -6.204484462738037
    5. ':
' → logprob: -7.829484462738037
    6. ',' → logprob: -9.204483985900879
    7. '_in' → logprob: -10.079483985900879
    8. ':

' → logprob: -10.329483985900879
    9. ' ' → logprob: -10.579483985900879
    10. ':`' → logprob: -10.829483985900879

Token 164: ' reversed' (ID: 57184)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.7448621392250061
    2. 'points' → logprob: -1.2448620796203613
    3. 'D' → logprob: -1.9948620796203613
    4. ' range' → logprob: -3.2448620796203613
    5. 'input' → logprob: -3.4948620796203613
    6. 'point' → logprob: -4.119862079620361
    7. ' D' → logprob: -4.994862079620361
    8. 'p' → logprob: -5.619862079620361
    9. ' points' → logprob: -5.869862079620361
    10. 'get' → logprob: -7.619862079620361

Token 165: '(D' (ID: 9908)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.19131997227668762
    2. '(p' → logprob: -2.5663199424743652
    3. '(' → logprob: -3.1913199424743652
    4. '(input' → logprob: -3.5663199424743652
    5. '(list' → logprob: -4.941319942474365
    6. '(point' → logprob: -5.191319942474365
    7. '(points' → logprob: -5.316319942474365
    8. '():' → logprob: -6.441319942474365
    9. 'range' → logprob: -6.941319942474365
    10. '(_' → logprob: -7.316319942474365

Token 166: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03812388703227043
    2. '):
' → logprob: -3.288123846054077
    3. '):

' → logprob: -9.663124084472656
    4. ')):' → logprob: -11.663124084472656
    5. '):
' → logprob: -12.038124084472656
    6. ')' → logprob: -13.163124084472656
    7. '[]):' → logprob: -14.413124084472656
    8. ')):
' → logprob: -14.538124084472656
    9. '[:' → logprob: -15.163124084472656
    10. ''):' → logprob: -15.413124084472656

Token 167: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -7.350386295001954e-05
    2. '   ' → logprob: -9.875073432922363
    3. '      ' → logprob: -11.500073432922363
    4. '     ' → logprob: -12.125073432922363
    5. '        ' → logprob: -12.500073432922363
    6. '           ' → logprob: -13.625073432922363
    7. '    ' → logprob: -14.375073432922363
    8. '         ' → logprob: -15.375073432922363
    9. ':' → logprob: -15.500073432922363
    10. '  ' → logprob: -16.00007438659668

Token 168: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3244735300540924
    2. 'if' (adapté à ' if') → logprob: -1.32447350025177
    3. '           ' → logprob: -4.6994733810424805
    4. '   ' → logprob: -7.3244733810424805
    5. 'point' → logprob: -7.5744733810424805
    6. 'y' → logprob: -8.07447338104248
    7. 'p' → logprob: -8.07447338104248
    8. 'return' → logprob: -8.82447338104248
    9. 'pass' → logprob: -10.57447338104248
    10. '         ' → logprob: -11.19947338104248

Token 169: ' is' (ID: 382)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18060308694839478
    2. '   ' → logprob: -2.43060302734375
    3. '           ' → logprob: -3.30560302734375
    4. ' p' → logprob: -3.55560302734375
    5. 'p' → logprob: -6.18060302734375
    6. ' ' → logprob: -6.18060302734375
    7. '         ' → logprob: -6.43060302734375
    8. '        ' → logprob: -6.55560302734375
    9. '  ' → logprob: -6.93060302734375
    10. '     ' → logprob: -7.18060302734375

Token 170: '_same' (ID: 83787)
  Prédit: '_zero'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_zero' → logprob: -1.0087516784551553e-05
    2. '_ZERO' → logprob: -11.75001049041748
    3. 'zero' → logprob: -15.00001049041748
    4. '_empty' → logprob: -15.25001049041748
    5. '-zero' → logprob: -15.25001049041748
    6. '.zero' → logprob: -15.50001049041748
    7. '_' → logprob: -16.125009536743164
    8. 'Zero' → logprob: -16.250009536743164
    9. '_blank' → logprob: -16.250009536743164
    10. '_z' → logprob: -16.750009536743164

Token 171: '_point' (ID: 15466)
  Prédit: '_point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_point' → logprob: -0.06006663665175438
    2. '_position' → logprob: -3.3100666999816895
    3. '(p' → logprob: -5.0600666999816895
    4. '_side' → logprob: -5.1850666999816895
    5. '_coordinates' → logprob: -7.0600666999816895
    6. '_coordinate' → logprob: -7.0600666999816895
    7. '_location' → logprob: -7.3100666999816895
    8. '_points' → logprob: -7.3100666999816895
    9. '_line' → logprob: -7.4350666999816895
    10. '_shape' → logprob: -7.6850666999816895

Token 172: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -9.088346359931165e-07
    2. '(' → logprob: -14.250000953674316
    3. '(point' → logprob: -16.375
    4. '(s' → logprob: -16.625
    5. 's' → logprob: -17.875
    6. '(pt' → logprob: -18.875
    7. 'p' → logprob: -18.875
    8. '(t' → logprob: -19.125
    9. '(points' → logprob: -19.125
    10. '(d' → logprob: -19.125

Token 173: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.4748665690422058
    2. '1' → logprob: -1.2248666286468506
    3. '3' → logprob: -2.4748666286468506
    4. 'p' → logprob: -9.72486686706543
    5. 'a' → logprob: -15.84986686706543
    6. 'two' → logprob: -15.97486686706543
    7. '(p' → logprob: -16.22486686706543
    8. 'o' → logprob: -16.22486686706543
    9. 'i' → logprob: -16.34986686706543
    10. '4' → logprob: -16.72486686706543

Token 174: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.696889623621246e-06
    2. ',p' → logprob: -12.87500286102295
    3. ' ,' → logprob: -17.375001907348633
    4. '，' → logprob: -19.000001907348633
    5. '[' → logprob: -19.875001907348633
    6. '،' → logprob: -20.125001907348633
    7. ',
' → logprob: -20.875001907348633
    8. '(),' → logprob: -21.000001907348633
    9. '`,' → logprob: -21.250001907348633
    10. '),' → logprob: -21.500001907348633

Token 175: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: 0.0
    2. ' p' → logprob: -16.875
    3. '	p' → logprob: -22.0
    4. '(p' → logprob: -22.375
    5. '   ' → logprob: -22.5
    6. '<p' → logprob: -22.625
    7. '.p' → logprob: -24.0
    8. '       ' → logprob: -24.125
    9. ')p' → logprob: -24.125
    10. '$p' → logprob: -24.5

Token 176: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.008737481199204922
    2. '1' → logprob: -4.758737564086914
    3. '3' → logprob: -9.008737564086914
    4. 'p' → logprob: -14.633737564086914
    5. '[' → logprob: -16.258737564086914
    6. '₂' → logprob: -17.758737564086914
    7. 'i' → logprob: -18.383737564086914
    8. '_' → logprob: -18.508737564086914
    9. 'two' → logprob: -18.508737564086914
    10. '２' → logprob: -18.508737564086914

Token 177: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3914715349674225
    2. '):
' → logprob: -1.1414715051651
    3. ')):' → logprob: -6.3914713859558105
    4. ')' → logprob: -6.7664713859558105
    5. '):

' → logprob: -7.2664713859558105
    6. ',' → logprob: -7.3914713859558105
    7. ')):
' → logprob: -8.016471862792969
    8. '):
' → logprob: -9.266471862792969
    9. '),' → logprob: -11.516471862792969
    10. ']):' → logprob: -12.266471862792969

Token 178: ' or' (ID: 503)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.27310454845428467
    2. ':' → logprob: -1.6481045484542847
    3. '):
' → logprob: -3.523104667663574
    4. '       ' → logprob: -4.773104667663574
    5. '           ' → logprob: -4.898104667663574
    6. '):' → logprob: -7.398104667663574
    7. ':

' → logprob: -8.523104667663574
    8. ':return' → logprob: -8.648104667663574
    9. '   ' → logprob: -9.273104667663574
    10. ':\' → logprob: -10.898104667663574

Token 179: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.0031844829209148884
    2. ' is' → logprob: -5.7531843185424805
    3. 'p' → logprob: -12.50318431854248
    4. '   ' → logprob: -13.25318431854248
    5. ' p' → logprob: -14.87818431854248
    6. '	is' → logprob: -15.25318431854248
    7. '.is' → logprob: -15.50318431854248
    8. 'not' → logprob: -15.75318431854248
    9. ' ' → logprob: -16.128185272216797
    10. '       ' → logprob: -16.628185272216797

Token 180: '_same' (ID: 83787)
  Prédit: '_same'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_same' → logprob: -0.4760209023952484
    2. '_zero' → logprob: -0.9760209321975708
    3. '_none' → logprob: -7.351020812988281
    4. '_point' → logprob: -7.351020812988281
    5. '_equal' → logprob: -7.976020812988281
    6. '_empty' → logprob: -9.976020812988281
    7. 'zero' → logprob: -10.601020812988281
    8. '_' → logprob: -10.601020812988281
    9. '_not' → logprob: -10.976020812988281
    10. '_d' → logprob: -11.226020812988281

Token 181: '_point' (ID: 15466)
  Prédit: '_point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_point' → logprob: -0.0002558561391197145
    2. '_POINT' → logprob: -9.250255584716797
    3. '_line' → logprob: -10.125255584716797
    4. '_token' → logprob: -10.125255584716797
    5. '_pointer' → logprob: -11.375255584716797
    6. '_points' → logprob: -11.625255584716797
    7. '_function' → logprob: -11.750255584716797
    8. '_code' → logprob: -11.875255584716797
    9. ' Point' → logprob: -12.625255584716797
    10. '   ' → logprob: -12.625255584716797

Token 182: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -2.2127087504486553e-05
    2. '(point' → logprob: -10.750021934509277
    3. '(' → logprob: -14.500021934509277
    4. '(points' → logprob: -18.000022888183594
    5. '(b' → logprob: -18.125022888183594
    6. '(pp' → logprob: -18.125022888183594
    7. '(pt' → logprob: -18.125022888183594
    8. '(c' → logprob: -18.125022888183594
    9. '(m' → logprob: -18.500022888183594
    10. '(d' → logprob: -18.500022888183594

Token 183: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0011852304451167583
    2. '1' → logprob: -7.126185417175293
    3. '3' → logprob: -7.876185417175293
    4. 'oint' → logprob: -14.126185417175293
    5. 'p' → logprob: -15.876185417175293
    6. 'oints' → logprob: -16.751184463500977
    7. '4' → logprob: -16.751184463500977
    8. 'i' → logprob: -17.001184463500977
    9. '(' → logprob: -17.126184463500977
    10. '_' → logprob: -17.876184463500977

Token 184: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.512236498361744e-07
    2. ',p' → logprob: -15.125000953674316
    3. ' ,' → logprob: -16.5
    4. '),' → logprob: -16.625
    5. '，' → logprob: -17.375
    6. '`,' → logprob: -17.5
    7. '):' → logprob: -18.875
    8. '):
' → logprob: -19.0
    9. '(),' → logprob: -19.0
    10. '،' → logprob: -19.375

Token 185: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.9361264946837764e-07
    2. ' p' → logprob: -15.625
    3. '	p' → logprob: -20.5
    4. '<p' → logprob: -20.875
    5. '$p' → logprob: -21.75
    6. ')p' → logprob: -21.75
    7. '(p' → logprob: -21.75
    8. 'pch' → logprob: -22.625
    9. ' п' → logprob: -23.0
    10. '.p' → logprob: -23.625

Token 186: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.0445127372804563e-05
    2. '2' → logprob: -12.12501049041748
    3. '1' → logprob: -12.25001049041748
    4. '4' → logprob: -16.500009536743164
    5. '３' → logprob: -18.625009536743164
    6. '_' → logprob: -18.875009536743164
    7. '```' → logprob: -18.875009536743164
    8. 'p' → logprob: -19.000009536743164
    9. 'three' → logprob: -19.000009536743164
    10. '[' → logprob: -19.250009536743164

Token 187: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6337894797325134
    2. '):' → logprob: -0.7587894797325134
    3. '):

' → logprob: -7.508789539337158
    4. ')):' → logprob: -8.5087890625
    5. '):
' → logprob: -8.7587890625
    6. ')' → logprob: -8.7587890625
    7. ')):
' → logprob: -9.3837890625
    8. '   ' → logprob: -10.3837890625
    9. '       ' → logprob: -13.2587890625
    10. ']):' → logprob: -13.8837890625

Token 188: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00027682865038514137
    2. '       ' → logprob: -8.250276565551758
    3. '               ' → logprob: -12.125276565551758
    4. '   ' → logprob: -12.375276565551758
    5. '         ' → logprob: -12.625276565551758
    6. '          ' → logprob: -13.375276565551758
    7. '            ' → logprob: -14.375276565551758
    8. '             ' → logprob: -15.625276565551758
    9. 'return' → logprob: -16.000276565551758
    10. '        ' → logprob: -16.125276565551758

Token 189: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.06428121775388718
    2. '           ' → logprob: -2.9392812252044678
    3. '               ' → logprob: -4.689280986785889
    4. '             ' → logprob: -9.814281463623047
    5. 'continu' → logprob: -10.439281463623047
    6. 'break' → logprob: -10.689281463623047
    7. 'return' → logprob: -10.814281463623047
    8. ' continue' → logprob: -10.939281463623047
    9. 'cont' → logprob: -11.689281463623047
    10. 'contin' → logprob: -12.689281463623047

Token 190: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03628905490040779
    2. '   ' → logprob: -3.4112889766693115
    3. '           ' → logprob: -6.036289215087891
    4. '               ' → logprob: -8.53628921508789
    5. '```' → logprob: -11.16128921508789
    6. '        
' → logprob: -11.66128921508789
    7. '	' → logprob: -12.28628921508789
    8. '  ' → logprob: -12.53628921508789
    9. '     ' → logprob: -12.78628921508789
    10. '      ' → logprob: -12.78628921508789

Token 191: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.048601001501083374
    2. '   ' → logprob: -3.048600912094116
    3. '           ' → logprob: -11.423601150512695
    4. '     ' → logprob: -14.423601150512695
    5. '        
' → logprob: -14.423601150512695
    6. '```' → logprob: -14.923601150512695
    7. '               ' → logprob: -15.048601150512695
    8. '      ' → logprob: -15.298601150512695
    9. '  ' → logprob: -15.423601150512695
    10. '    ' → logprob: -16.048601150512695

Token 192: ' elif' (ID: 9497)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010854477295652032
    2. '   ' → logprob: -6.87608528137207
    3. '           ' → logprob: -10.00108528137207
    4. '     ' → logprob: -13.00108528137207
    5. '      ' → logprob: -13.37608528137207
    6. 'return' → logprob: -13.75108528137207
    7. 'if' → logprob: -14.25108528137207
    8. '        ' → logprob: -14.50108528137207
    9. '        
' → logprob: -14.87608528137207
    10. '         ' → logprob: -15.50108528137207

Token 193: ' side' (ID: 4307)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.13004170358181
    2. ' is' → logprob: -2.1300415992736816
    3. ' not' → logprob: -7.130041599273682
    4. 'not' → logprob: -7.255041599273682
    5. ':' → logprob: -7.755041599273682
    6. '   ' → logprob: -8.63004207611084
    7. 'check' → logprob: -9.25504207611084
    8. '(is' → logprob: -9.38004207611084
    9. ' ' → logprob: -9.88004207611084
    10. '(' → logprob: -9.88004207611084

Token 194: '_condition' (ID: 64948)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.08922144770622253
    2. '==' → logprob: -3.589221477508545
    3. '_for' → logprob: -4.214221477508545
    4. 'for' → logprob: -5.464221477508545
    5. '(d' → logprob: -5.589221477508545
    6. '```' → logprob: -5.589221477508545
    7. '(' → logprob: -5.964221477508545
    8. '   ' → logprob: -6.276721477508545
    9. ':' → logprob: -6.401721477508545
    10. ' ==' → logprob: -6.526721477508545

Token 195: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.6030831933021545
    2. ':' → logprob: -0.8530831933021545
    3. '():' → logprob: -3.7280831336975098
    4. '(' → logprob: -6.72808313369751
    5. '(':' → logprob: -8.228083610534668
    6. ':`' → logprob: -8.603083610534668
    7. '():
' → logprob: -8.853083610534668
    8. ':
' → logprob: -9.353083610534668
    9. '(d' → logprob: -9.603083610534668
    10. '==' → logprob: -9.603083610534668

Token 196: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.06830129772424698
    2. '2' → logprob: -3.193301200866699
    3. '1' → logprob: -3.693301200866699
    4. 'oint' → logprob: -10.3183012008667
    5. 'oints' → logprob: -10.9433012008667
    6. 'p' → logprob: -11.0683012008667
    7. '(p' → logprob: -11.9433012008667
    8. '(' → logprob: -12.0683012008667
    9. '_' → logprob: -12.8183012008667
    10. '4' → logprob: -13.3183012008667

Token 197: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.15160223841667175
    2. '):' → logprob: -2.026602268218994
    3. '):
' → logprob: -4.776602268218994
    4. ')' → logprob: -8.151601791381836
    5. ',p' → logprob: -9.526601791381836
    6. '):

' → logprob: -10.276601791381836
    7. ')):' → logprob: -10.776601791381836
    8. '   ' → logprob: -11.401601791381836
    9. '):
' → logprob: -11.526601791381836
    10. '),' → logprob: -11.651601791381836

Token 198: ' x' (ID: 1215)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.5048530030981055e-06
    2. ' p' → logprob: -13.875001907348633
    3. 'y' → logprob: -14.875001907348633
    4. '   ' → logprob: -16.250001907348633
    5. '       ' → logprob: -18.250001907348633
    6. '(p' → logprob: -18.375001907348633
    7. '  ' → logprob: -18.375001907348633
    8. '	p' → logprob: -18.625001907348633
    9. '    ' → logprob: -19.125001907348633
    10. 'd' → logprob: -19.500001907348633

Token 199: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0020014385227113962
    2. '2' → logprob: -6.2520012855529785
    3. ',' → logprob: -10.002001762390137
    4. '```' → logprob: -11.502001762390137
    5. '3' → logprob: -12.127001762390137
    6. '[' → logprob: -12.877001762390137
    7. ')' → logprob: -13.377001762390137
    8. 'x' → logprob: -13.877001762390137
    9. '１' → logprob: -14.002001762390137
    10. '   ' → logprob: -14.127001762390137

Token 200: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012338032247498631
    2. '):' → logprob: -7.2512335777282715
    3. '):
' → logprob: -7.6262335777282715
    4. '   ' → logprob: -11.00123405456543
    5. ')' → logprob: -11.75123405456543
    6. '):

' → logprob: -12.12623405456543
    7. '),' → logprob: -12.62623405456543
    8. '):
' → logprob: -13.87623405456543
    9. '       ' → logprob: -14.87623405456543
    10. ')):' → logprob: -15.37623405456543

Token 201: ' y' (ID: 342)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.12794262170791626
    2. 'y' → logprob: -2.1279425621032715
    3. 'dx' → logprob: -7.1279425621032715
    4. ' dy' → logprob: -8.62794303894043
    5. 'x' → logprob: -11.25294303894043
    6. 'd' → logprob: -11.75294303894043
    7. ' y' → logprob: -12.00294303894043
    8. 'yd' → logprob: -13.25294303894043
    9. 'p' → logprob: -13.50294303894043
    10. '.dy' → logprob: -14.50294303894043

Token 202: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003409774275496602
    2. '2' → logprob: -5.7534098625183105
    3. '```' → logprob: -8.878409385681152
    4. ',' → logprob: -10.753409385681152
    5. '0' → logprob: -11.253409385681152
    6. '``' → logprob: -11.378409385681152
    7. ' ' → logprob: -11.503409385681152
    8. '   ' → logprob: -11.503409385681152
    9. 'x' → logprob: -12.253409385681152
    10. '[' → logprob: -12.503409385681152

Token 203: ',' (ID: 11)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6236414313316345
    2. '):' → logprob: -1.2486414909362793
    3. ',' → logprob: -1.7486414909362793
    4. '):

' → logprob: -6.123641490936279
    5. '   ' → logprob: -7.623641490936279
    6. '):
' → logprob: -8.248641014099121
    7. ')' → logprob: -9.623641014099121
    8. '       ' → logprob: -10.498641014099121
    9. ')):
' → logprob: -10.998641014099121
    10. '),' → logprob: -10.998641014099121

Token 204: ' dx' (ID: 29472)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dy' → logprob: -2.963691804325208e-05
    2. 'dx' → logprob: -11.125029563903809
    3. ' dy' → logprob: -11.125029563903809
    4. 'd' → logprob: -16.875030517578125
    5. '.dy' → logprob: -17.375030517578125
    6. '   ' → logprob: -17.750030517578125
    7. 'di' → logprob: -18.250030517578125
    8. 'Dy' → logprob: -18.875030517578125
    9. 'y' → logprob: -19.000030517578125
    10. 'D' → logprob: -19.375030517578125

Token 205: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001254693343071267
    2. '):' → logprob: -9.125125885009766
    3. '):
' → logprob: -11.125125885009766
    4. '),' → logprob: -14.250125885009766
    5. ')' → logprob: -14.500125885009766
    6. '):

' → logprob: -15.000125885009766
    7. '):
' → logprob: -16.125125885009766
    8. ' ,' → logprob: -16.250125885009766
    9. ')):' → logprob: -17.125125885009766
    10. '   ' → logprob: -17.750125885009766

Token 206: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -4.5491004129871726e-05
    2. ' dy' → logprob: -10.000045776367188
    3. '.dy' → logprob: -19.250045776367188
    4. 'Dy' → logprob: -21.875045776367188
    5. 'di' → logprob: -22.750045776367188
    6. 'd' → logprob: -23.250045776367188
    7. 'gy' → logprob: -23.375045776367188
    8. 'dyn' → logprob: -23.500045776367188
    9. 'du' → logprob: -23.500045776367188
    10. 'de' → logprob: -23.500045776367188

Token 207: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.20211784541606903
    2. '):' → logprob: -1.7021178007125854
    3. '   ' → logprob: -8.202117919921875
    4. '):

' → logprob: -8.952117919921875
    5. '):
' → logprob: -9.577117919921875
    6. ')):
' → logprob: -9.827117919921875
    7. '           ' → logprob: -9.827117919921875
    8. '       ' → logprob: -9.827117919921875
    9. ')' → logprob: -10.702117919921875
    10. ')):' → logprob: -10.827117919921875

Token 208: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0001370320824207738
    2. '       ' → logprob: -9.125137329101562
    3. '   ' → logprob: -11.000137329101562
    4. '               ' → logprob: -11.875137329101562
    5. '         ' → logprob: -13.500137329101562
    6. '          ' → logprob: -13.500137329101562
    7. '            ' → logprob: -14.250137329101562
    8. 'return' → logprob: -14.750137329101562
    9. '             ' → logprob: -14.875137329101562
    10. '        ' → logprob: -16.375137329101562

Token 209: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03897210955619812
    2. 'return' (adapté à ' return') → logprob: -3.2889721393585205
    3. 'break' → logprob: -7.663971900939941
    4. '               ' → logprob: -7.788971900939941
    5. 'continue' → logprob: -10.413971900939941
    6. '       ' → logprob: -11.538971900939941
    7. '            ' → logprob: -13.288971900939941
    8. '             ' → logprob: -13.413971900939941
    9. '          ' → logprob: -13.913971900939941
    10. '         ' → logprob: -13.913971900939941

Token 210: ' False' (ID: 7983)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.006909429561346769
    2. '           ' → logprob: -6.381909370422363
    3. 'True' → logprob: -6.756909370422363
    4. ' None' → logprob: -7.006909370422363
    5. '       ' → logprob: -7.506909370422363
    6. '"' → logprob: -7.631909370422363
    7. '   ' → logprob: -7.631909370422363
    8. 'return' → logprob: -8.256909370422363
    9. 'side' → logprob: -8.381909370422363
    10. '               ' → logprob: -8.756909370422363

Token 211: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0233865175396204
    2. '       ' → logprob: -3.7733864784240723
    3. '           ' → logprob: -9.02338695526123
    4. '    
' → logprob: -12.39838695526123
    5. '  ' → logprob: -12.77338695526123
    6. 'return' → logprob: -12.89838695526123
    7. '     ' → logprob: -13.27338695526123
    8. '	return' → logprob: -13.64838695526123
    9. 'def' → logprob: -13.64838695526123
    10. '    ' → logprob: -13.64838695526123

Token 212: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19690711796283722
    2. '           ' → logprob: -2.1969070434570312
    3. '       ' → logprob: -2.6969070434570312
    4. 'def' → logprob: -8.821907043457031
    5. '               ' → logprob: -11.946907043457031
    6. 'return' → logprob: -12.821907043457031
    7. '     ' → logprob: -12.821907043457031
    8. '```' → logprob: -12.821907043457031
    9. '         ' → logprob: -13.071907043457031
    10. '  ' → logprob: -13.321907043457031

Token 213: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00036144492332823575
    2. '       ' → logprob: -8.500361442565918
    3. 'return' (adapté à ' return') → logprob: -9.375361442565918
    4. '           ' → logprob: -9.625361442565918
    5. '	return' → logprob: -12.375361442565918
    6. '  ' → logprob: -13.875361442565918
    7. 'def' → logprob: -14.250361442565918
    8. ' return' → logprob: -15.125361442565918
    9. '    ' → logprob: -15.375361442565918
    10. '     ' → logprob: -15.750361442565918

Token 214: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.001432024291716516
    2. ' True' → logprob: -6.626431941986084
    3. 'None' → logprob: -9.876432418823242
    4. 'False' → logprob: -10.001432418823242
    5. '```' → logprob: -12.126432418823242
    6. '(True' → logprob: -14.001432418823242
    7. 'true' → logprob: -14.376432418823242
    8. '`' → logprob: -14.501432418823242
    9. '_TRUE' → logprob: -14.626432418823242
    10. '   ' → logprob: -14.626432418823242

Token 215: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2756827473640442
    2. '   ' → logprob: -1.5256826877593994
    3. '```' → logprob: -4.0256829261779785
    4. '       ' → logprob: -6.0256829261779785
    5. '           ' → logprob: -7.0256829261779785
    6. '<|end|>' → logprob: -7.1506829261779785
    7. '}' → logprob: -7.4006829261779785
    8. '#' → logprob: -8.40068244934082
    9. '<|end|>' → logprob: -9.02568244934082
    10. 'return' → logprob: -9.15068244934082

Token 216: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09444334357976913
    2. '   ' → logprob: -2.4694433212280273
    3. '       ' → logprob: -5.719443321228027
    4. '```' → logprob: -6.719443321228027
    5. 'return' → logprob: -7.719443321228027
    6. '           ' → logprob: -7.969443321228027
    7. '#' → logprob: -9.719443321228027
    8. 'elif' → logprob: -10.469443321228027
    9. 'else' → logprob: -10.719443321228027
    10. '}' → logprob: -11.469443321228027

Token 217: ' is' (ID: 382)
  Prédit: 'side'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'side' → logprob: -0.636063814163208
    2. 'is' → logprob: -0.761063814163208
    3. 'get' → logprob: -6.136063575744629
    4. 'calculate' → logprob: -8.261063575744629
    5. 'process' → logprob: -9.136063575744629
    6. 'main' → logprob: -9.511063575744629
    7. 'check' → logprob: -9.511063575744629
    8. 'point' → logprob: -9.511063575744629
    9. ' side' → logprob: -9.636063575744629
    10. 'end' → logprob: -9.636063575744629

Token 218: '_same' (ID: 83787)
  Prédit: '_same'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_same' → logprob: -0.0007107630372047424
    2. '_zero' → logprob: -7.250710964202881
    3. '_s' → logprob: -15.875710487365723
    4. '_safe' → logprob: -15.875710487365723
    5. '_equal' → logprob: -16.37571144104004
    6. '_empty' → logprob: -16.62571144104004
    7. 'same' → logprob: -16.75071144104004
    8. '_side' → logprob: -16.87571144104004
    9. '_valid' → logprob: -17.25071144104004
    10. 'Same' → logprob: -17.37571144104004

Token 219: '_point' (ID: 15466)
  Prédit: '_point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_point' → logprob: -0.0005330175044946373
    2. '_def' → logprob: -8.500533103942871
    3. '_POINT' → logprob: -8.750533103942871
    4. '_token' → logprob: -10.000533103942871
    5. '_pointer' → logprob: -10.500533103942871
    6. '_points' → logprob: -10.625533103942871
    7. '_Point' → logprob: -11.500533103942871
    8. '_function' → logprob: -12.125533103942871
    9. '_line' → logprob: -12.250533103942871
    10. 'def' → logprob: -12.250533103942871

Token 220: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.009280811063945293
    2. '(point' → logprob: -4.759280681610107
    3. '(' → logprob: -7.509280681610107
    4. '(pt' → logprob: -10.384281158447266
    5. '(points' → logprob: -11.509281158447266
    6. '(pp' → logprob: -11.884281158447266
    7. '(`' → logprob: -12.009281158447266
    8. '(n' → logprob: -12.259281158447266
    9. '():' → logprob: -12.259281158447266
    10. '(_:' → logprob: -12.384281158447266

Token 221: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006022887770086527
    2. '):' → logprob: -5.756022930145264
    3. 'oint' → logprob: -6.631022930145264
    4. '):
' → logprob: -6.881022930145264
    5. ':' → logprob: -9.381022453308105
    6. ')' → logprob: -9.506022453308105
    7. 'def' → logprob: -9.881022453308105
    8. '```' → logprob: -9.881022453308105
    9. ',' → logprob: -10.006022453308105
    10. 'ointer' → logprob: -10.381022453308105

Token 222: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.127333340875339e-06
    2. ',p' → logprob: -12.500003814697266
    3. ' ,' → logprob: -15.500003814697266
    4. '，' → logprob: -17.125003814697266
    5. '`,' → logprob: -17.875003814697266
    6. '،' → logprob: -18.375003814697266
    7. '(),' → logprob: -18.500003814697266
    8. '_,' → logprob: -19.000003814697266
    9. ',_' → logprob: -19.000003814697266
    10. ',t' → logprob: -19.375003814697266

Token 223: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -6.988221684878226e-06
    2. ' p' → logprob: -11.875006675720215
    3. '   ' → logprob: -19.87500762939453
    4. '	p' → logprob: -20.62500762939453
    5. ' п' → logprob: -21.75000762939453
    6. ')p' → logprob: -23.12500762939453
    7. '(p' → logprob: -23.25000762939453
    8. '.p' → logprob: -23.75000762939453
    9. '_p' → logprob: -23.75000762939453
    10. '<p' → logprob: -24.12500762939453

Token 224: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00027015688829123974
    2. '1' → logprob: -8.250269889831543
    3. '3' → logprob: -13.000269889831543
    4. '２' → logprob: -13.125269889831543
    5. '```' → logprob: -13.625269889831543
    6. '₂' → logprob: -13.750269889831543
    7. '_' → logprob: -14.500269889831543
    8. '0' → logprob: -15.000269889831543
    9. '[' → logprob: -15.250269889831543
    10. 'oint' → logprob: -15.500269889831543

Token 225: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.16069890558719635
    2. '):' → logprob: -1.9106988906860352
    3. '):

' → logprob: -7.910698890686035
    4. '):
' → logprob: -9.410698890686035
    5. ')' → logprob: -11.035698890686035
    6. '   ' → logprob: -12.160698890686035
    7. ')):
' → logprob: -13.535698890686035
    8. ',' → logprob: -14.285698890686035
    9. ')):' → logprob: -14.285698890686035
    10. '"):
' → logprob: -14.785698890686035

Token 226: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -5.512236498361744e-07
    2. '  ' → logprob: -15.500000953674316
    3. 'return' → logprob: -15.500000953674316
    4. '    ' → logprob: -18.375
    5. '	return' → logprob: -18.5
    6. '       ' → logprob: -18.5
    7. ' return' → logprob: -19.875
    8. ' ' → logprob: -20.5
    9. '     ' → logprob: -21.25
    10. '   ' → logprob: -21.25

Token 227: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -2.45848218582978e-06
    2. '   ' → logprob: -13.25000286102295
    3. ' return' → logprob: -14.25000286102295
    4. '	return' → logprob: -18.500001907348633
    5. 'returns' → logprob: -18.750001907348633
    6. ':return' → logprob: -20.125001907348633
    7. '{return' → logprob: -20.875001907348633
    8. 'Return' → logprob: -20.875001907348633
    9. '返回' → logprob: -22.125001907348633
    10. 'eturn' → logprob: -22.250001907348633

Token 228: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -7.600714161526412e-05
    2. ' p' → logprob: -9.500076293945312
    3. '   ' → logprob: -14.375076293945312
    4. '(p' → logprob: -14.625076293945312
    5. '	p' → logprob: -16.875076293945312
    6. '$p' → logprob: -18.500076293945312
    7. '  ' → logprob: -18.750076293945312
    8. '<p' → logprob: -19.125076293945312
    9. '.p' → logprob: -19.750076293945312
    10. ' п' → logprob: -19.750076293945312

Token 229: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.020745666697621346
    2. '[' → logprob: -3.8957457542419434
    3. '==' → logprob: -8.645745277404785
    4. '#' → logprob: -12.770745277404785
    5. 'a' → logprob: -12.770745277404785
    6. '===' → logprob: -12.895745277404785
    7. '```' → logprob: -13.270745277404785
    8. 'oint' → logprob: -13.270745277404785
    9. ' ==' → logprob: -13.520745277404785
    10. '2' → logprob: -13.520745277404785

Token 230: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0004043361986987293
    2. ' ==' → logprob: -8.000404357910156
    3. '[' → logprob: -9.625404357910156
    4. '==(' → logprob: -13.750404357910156
    5. '==
' → logprob: -13.875404357910156
    6. '===' → logprob: -14.500404357910156
    7. ')==' → logprob: -16.875404357910156
    8. '[]' → logprob: -17.000404357910156
    9. '=='' → logprob: -17.000404357910156
    10. '=="' → logprob: -17.125404357910156

Token 231: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -6.704273118884885e-07
    2. ' p' → logprob: -14.250000953674316
    3. '	p' → logprob: -23.125
    4. ' п' → logprob: -23.375
    5. '$p' → logprob: -24.75
    6. '<p' → logprob: -25.0
    7. '(p' → logprob: -25.25
    8. 'п' → logprob: -25.5
    9. '   ' → logprob: -25.875
    10. '.p' → logprob: -25.875

Token 232: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0036840438842773438
    2. '1' → logprob: -5.628684043884277
    3. 'oint' → logprob: -9.628684043884277
    4. '[' → logprob: -11.378684043884277
    5. 'oints' → logprob: -12.503684043884277
    6. 'ointer' → logprob: -14.128684043884277
    7. 'o' → logprob: -15.128684043884277
    8. '２' → logprob: -15.378684043884277
    9. '(' → logprob: -15.628684043884277
    10. 'oin' → logprob: -15.753684043884277

Token 233: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00033879990223795176
    2. '   ' → logprob: -8.000338554382324
    3. '       ' → logprob: -13.375338554382324
    4. 'return' → logprob: -14.875338554382324
    5. ' def' → logprob: -14.875338554382324
    6. '           ' → logprob: -15.500338554382324
    7. '```' → logprob: -15.500338554382324
    8. ':def' → logprob: -15.500338554382324
    9. '    
' → logprob: -16.50033950805664
    10. 'elif' → logprob: -16.62533950805664

Token 234: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0013344056205824018
    2. '   ' → logprob: -6.751334190368652
    3. '       ' → logprob: -8.876334190368652
    4. '           ' → logprob: -10.751334190368652
    5. '               ' → logprob: -13.876334190368652
    6. 'elif' → logprob: -14.376334190368652
    7. 'return' → logprob: -14.626334190368652
    8. ' def' → logprob: -14.876334190368652
    9. 'else' → logprob: -15.751334190368652
    10. '     ' → logprob: -16.25133514404297

Token 235: ' side' (ID: 4307)
  Prédit: 'side'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'side' → logprob: -0.02840464748442173
    2. 'is' → logprob: -4.778404712677002
    3. 'parse' → logprob: -5.403404712677002
    4. 'get' → logprob: -5.403404712677002
    5. 'calculate' → logprob: -5.403404712677002
    6. 'convert' → logprob: -5.528404712677002
    7. 'input' → logprob: -7.403404712677002
    8. 'set' → logprob: -8.153404235839844
    9. 'process' → logprob: -8.403404235839844
    10. 'line' → logprob: -8.903404235839844

Token 236: '_condition' (ID: 64948)
  Prédit: '_condition'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_condition' → logprob: -4.632542913896032e-05
    2. '_conditions' → logprob: -10.125046730041504
    3. '_cond' → logprob: -12.500046730041504
    4. '_function' → logprob: -14.500046730041504
    5. 'Condition' → logprob: -14.875046730041504
    6. '_definition' → logprob: -15.000046730041504
    7. '条件' → logprob: -15.625046730041504
    8. '_for' → logprob: -16.125045776367188
    9. '.condition' → logprob: -16.250045776367188
    10. ' condition' → logprob: -16.375045776367188

Token 237: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.0013403621269389987
    2. '(' → logprob: -7.001340389251709
    3. '(px' → logprob: -9.00133991241455
    4. '(_:' → logprob: -9.75133991241455
    5. '(:' → logprob: -9.87633991241455
    6. '(x' → logprob: -10.75133991241455
    7. '(_' → logprob: -11.25133991241455
    8. '(`' → logprob: -11.50133991241455
    9. '(':' → logprob: -11.75133991241455
    10. '(pp' → logprob: -11.87633991241455

Token 238: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0011849920265376568
    2. '1' → logprob: -6.876184940338135
    3. '2' → logprob: -9.376185417175293
    4. '(p' → logprob: -10.251185417175293
    5. 'def' → logprob: -11.751185417175293
    6. '(' → logprob: -12.501185417175293
    7. '4' → logprob: -13.001185417175293
    8. 'ython' → logprob: -13.001185417175293
    9. 'p' → logprob: -13.126185417175293
    10. 'oint' → logprob: -13.126185417175293

Token 239: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0280383548888494e-06
    2. ',p' → logprob: -14.750000953674316
    3. '   ' → logprob: -14.875000953674316
    4. ' ,' → logprob: -16.000001907348633
    5. '，' → logprob: -17.875001907348633
    6. ',x' → logprob: -18.250001907348633
    7. '`,' → logprob: -18.500001907348633
    8. '_,' → logprob: -18.625001907348633
    9. ',,' → logprob: -18.875001907348633
    10. '،' → logprob: -19.000001907348633

Token 240: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.2664456789934775e-06
    2. ' x' → logprob: -13.875000953674316
    3. 'y' → logprob: -15.500000953674316
    4. 'dx' → logprob: -19.250001907348633
    5. '   ' → logprob: -20.625001907348633
    6. '	x' → logprob: -20.750001907348633
    7. '_x' → logprob: -21.625001907348633
    8. 'p' → logprob: -21.625001907348633
    9. 'xd' → logprob: -21.875001907348633
    10. '(x' → logprob: -22.250001907348633

Token 241: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01421087421476841
    2. ',' → logprob: -4.2642107009887695
    3. '3' → logprob: -11.51421070098877
    4. ' ,' → logprob: -11.88921070098877
    5. '```' → logprob: -12.13921070098877
    6. '１' → logprob: -12.38921070098877
    7. '_,' → logprob: -12.63921070098877
    8. '\xe2\x82' → logprob: -12.88921070098877
    9. '   ' → logprob: -13.13921070098877
    10. ',x' → logprob: -13.38921070098877

Token 242: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.107425062713446e-06
    2. ',y' → logprob: -12.000006675720215
    3. ',x' → logprob: -14.625006675720215
    4. ' ,' → logprob: -15.375006675720215
    5. '，' → logprob: -16.87500762939453
    6. '`,' → logprob: -17.75000762939453
    7. ',
' → logprob: -18.25000762939453
    8. '',' → logprob: -18.87500762939453
    9. '،' → logprob: -18.87500762939453
    10. ',\
' → logprob: -18.87500762939453

Token 243: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -1.0280383548888494e-06
    2. ' y' → logprob: -13.875000953674316
    3. '	y' → logprob: -18.500001907348633
    4. 'x' → logprob: -19.250001907348633
    5. 'y's' → logprob: -21.125001907348633
    6. '   ' → logprob: -21.375001907348633
    7. ',y' → logprob: -21.375001907348633
    8. '_y' → logprob: -22.625001907348633
    9. '.y' → logprob: -23.125001907348633
    10. 'Y' → logprob: -23.250001907348633

Token 244: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0016511372523382306
    2. '```' → logprob: -7.126651287078857
    3. '   ' → logprob: -7.751651287078857
    4. ',' → logprob: -8.2516508102417
    5. '``' → logprob: -9.5016508102417
    6. ' ' → logprob: -11.0016508102417
    7. '2' → logprob: -11.3766508102417
    8. '  ' → logprob: -11.5016508102417
    9. 'x' → logprob: -11.5016508102417
    10. 'ield' → logprob: -12.1266508102417

Token 245: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: 0.0
    2. ' ,' → logprob: -17.875
    3. '   ' → logprob: -18.375
    4. ',d' → logprob: -18.75
    5. '，' → logprob: -19.5
    6. '):
' → logprob: -19.5
    7. '),' → logprob: -19.5
    8. ',,' → logprob: -19.875
    9. '`,' → logprob: -20.375
    10. '):' → logprob: -20.375

Token 246: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.003179259831085801
    2. 'dy' → logprob: -5.75317907333374
    3. ' dx' → logprob: -13.378179550170898
    4. ' dy' → logprob: -18.0031795501709
    5. '_dx' → logprob: -18.8781795501709
    6. '(dx' → logprob: -19.0031795501709
    7. '.dx' → logprob: -19.1281795501709
    8. 'd' → logprob: -19.7531795501709
    9. 'x' → logprob: -20.2531795501709
    10. 'y' → logprob: -21.0031795501709

Token 247: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.9361264946837764e-07
    2. ' ,' → logprob: -16.625
    3. '，' → logprob: -17.75
    4. ',d' → logprob: -18.25
    5. '`,' → logprob: -18.375
    6. '   ' → logprob: -18.375
    7. '),' → logprob: -18.625
    8. ',y' → logprob: -19.125
    9. '،' → logprob: -19.375
    10. ',\
' → logprob: -19.75

Token 248: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -1.676292231422849e-05
    2. ' dy' → logprob: -11.000017166137695
    3. '.dy' → logprob: -19.375017166137695
    4. 'y' → logprob: -22.375017166137695
    5. 'd' → logprob: -22.625017166137695
    6. 'Dy' → logprob: -22.875017166137695
    7. 'di' → logprob: -23.125017166137695
    8. 'dt' → logprob: -23.500017166137695
    9. 'dv' → logprob: -23.625017166137695
    10. 'ddy' → logprob: -23.625017166137695

Token 249: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3882271647453308
    2. '):
' → logprob: -1.1382272243499756
    3. ',' → logprob: -7.1382269859313965
    4. '   ' → logprob: -7.8882269859313965
    5. '):

' → logprob: -8.888227462768555
    6. '):
' → logprob: -10.263227462768555
    7. ')' → logprob: -11.388227462768555
    8. ')):' → logprob: -14.888227462768555
    9. ''):' → logprob: -15.388227462768555
    10. '       ' → logprob: -15.513227462768555

Token 250: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -4.320199877838604e-07
    2. '  ' → logprob: -15.375
    3. 'return' → logprob: -15.625
    4. '    ' → logprob: -18.5
    5. '       ' → logprob: -19.125
    6. '	return' → logprob: -19.375
    7. '```' → logprob: -19.75
    8. ' ' → logprob: -20.375
    9. ' return' → logprob: -21.0
    10. 'pass' → logprob: -21.25

Token 251: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.005308704450726509
    2. '#' → logprob: -5.630308628082275
    3. '   ' → logprob: -6.505308628082275
    4. 'pass' → logprob: -8.505309104919434
    5. ' return' → logprob: -12.505309104919434
    6. 'if' → logprob: -13.130309104919434
    7. '	return' → logprob: -13.755309104919434
    8. '...' → logprob: -13.880309104919434
    9. 'x' → logprob: -14.880309104919434
    10. '  ' → logprob: -15.255309104919434

Token 252: ' (' (ID: 350)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.6948309540748596
    2. '(p' → logprob: -0.6948309540748596
    3. '(' → logprob: -7.819830894470215
    4. ' p' → logprob: -8.194830894470215
    5. 'dy' → logprob: -8.444830894470215
    6. '((' → logprob: -8.569830894470215
    7. '(dx' → logprob: -8.944830894470215
    8. '   ' → logprob: -9.069830894470215
    9. ' (' → logprob: -9.069830894470215
    10. '(d' → logprob: -9.444830894470215

Token 253: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.048744287341833115
    2. '(p' → logprob: -3.0487442016601562
    3. '(' → logprob: -9.798744201660156
    4. 'dy' → logprob: -10.048744201660156
    5. ' p' → logprob: -11.173744201660156
    6. '(dx' → logprob: -11.423744201660156
    7. 'dx' → logprob: -11.548744201660156
    8. '(d' → logprob: -11.923744201660156
    9. '   ' → logprob: -11.923744201660156
    10. '((' → logprob: -12.423744201660156

Token 254: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -2.5776860184123507e-06
    2. '[' → logprob: -13.37500286102295
    3. '2' → logprob: -15.12500286102295
    4. '1' → logprob: -16.125001907348633
    5. '(p' → logprob: -16.125001907348633
    6. '３' → logprob: -16.250001907348633
    7. '[p' → logprob: -16.500001907348633
    8. '```' → logprob: -16.500001907348633
    9. '4' → logprob: -16.875001907348633
    10. '#' → logprob: -16.875001907348633

Token 255: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.2200749754119897e-06
    2. '[y' → logprob: -13.125001907348633
    3. '[x' → logprob: -16.750001907348633
    4. '<' → logprob: -17.250001907348633
    5. '```' → logprob: -17.250001907348633
    6. '[Y' → logprob: -18.250001907348633
    7. '.y' → logprob: -18.375001907348633
    8. '(' → logprob: -19.000001907348633
    9. '   ' → logprob: -19.125001907348633
    10. '>' → logprob: -19.500001907348633

Token 256: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.20141461491584778
    2. '1' → logprob: -1.7014145851135254
    3. '2' → logprob: -13.576415061950684
    4. '3' → logprob: -17.576414108276367
    5. ']' → logprob: -19.326414108276367
    6. ' ' → logprob: -19.701414108276367
    7. 'x' → logprob: -19.826414108276367
    8. '][' → logprob: -19.826414108276367
    9. 'y' → logprob: -20.326414108276367
    10. '-' → logprob: -20.701414108276367

Token 257: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00039385363925248384
    2. '][' → logprob: -8.625393867492676
    3. ']-' → logprob: -8.750393867492676
    4. ']>' → logprob: -10.250393867492676
    5. ']==' → logprob: -11.750393867492676
    6. '>' → logprob: -12.875393867492676
    7. ']<' → logprob: -13.125393867492676
    8. ']>=' → logprob: -13.250393867492676
    9. '].' → logprob: -13.500393867492676
    10. ']*' → logprob: -13.625393867492676

Token 258: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.006576700136065483
    2. '>' → logprob: -5.2565765380859375
    3. '*' → logprob: -6.7565765380859375
    4. '<' → logprob: -9.256576538085938
    5. '>=' → logprob: -9.881576538085938
    6. '==' → logprob: -11.506576538085938
    7. ' -' → logprob: -11.756576538085938
    8. '-x' → logprob: -12.006576538085938
    9. '<=' → logprob: -12.381576538085938
    10. '-y' → logprob: -13.756576538085938

Token 259: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.981667537620524e-06
    2. ' x' → logprob: -13.250001907348633
    3. 'y' → logprob: -16.500001907348633
    4. 'p' → logprob: -18.875001907348633
    5. '	x' → logprob: -21.375001907348633
    6. '_x' → logprob: -22.000001907348633
    7. '   ' → logprob: -22.125001907348633
    8. ')x' → logprob: -22.250001907348633
    9. '"x' → logprob: -22.375001907348633
    10. '(x' → logprob: -22.500001907348633

Token 260: '1' (ID: 16)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.08936427533626556
    2. '1' → logprob: -2.5893642902374268
    3. '3' → logprob: -4.589364051818848
    4. '(' → logprob: -8.964364051818848
    5. '```' → logprob: -9.964364051818848
    6. '2' → logprob: -10.714364051818848
    7. '   ' → logprob: -10.964364051818848
    8. 'p' → logprob: -11.714364051818848
    9. '0' → logprob: -11.714364051818848
    10. '[p' → logprob: -12.214364051818848

Token 261: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010100651998072863
    2. ')*(' → logprob: -7.126009941101074
    3. '-' → logprob: -9.126009941101074
    4. ')*' → logprob: -9.501009941101074
    5. '*' → logprob: -11.501009941101074
    6. '>' → logprob: -12.126009941101074
    7. ' -' → logprob: -13.001009941101074
    8. ')(' → logprob: -13.751009941101074
    9. ')**' → logprob: -13.876009941101074
    10. '```' → logprob: -14.751009941101074

Token 262: ' *' (ID: 425)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5761577486991882
    2. '*' → logprob: -0.8261577486991882
    3. '>' → logprob: -9.326157569885254
    4. '*y' → logprob: -10.201157569885254
    5. '-d' → logprob: -10.576157569885254
    6. '==' → logprob: -10.826157569885254
    7. ' -' → logprob: -11.326157569885254
    8. '<' → logprob: -11.951157569885254
    9. '*(' → logprob: -12.201157569885254
    10. ' *' → logprob: -12.201157569885254

Token 263: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -1.5048530030981055e-06
    2. ' dy' → logprob: -13.750001907348633
    3. 'dx' → logprob: -15.000001907348633
    4. '.dy' → logprob: -17.375001907348633
    5. '(d' → logprob: -20.500001907348633
    6. '(dx' → logprob: -21.125001907348633
    7. 'di' → logprob: -21.250001907348633
    8. 'dyn' → logprob: -21.375001907348633
    9. 'ddy' → logprob: -22.500001907348633
    10. '-d' → logprob: -22.750001907348633

Token 264: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0007660295814275742
    2. '>' → logprob: -7.250765800476074
    3. ' -' → logprob: -10.250765800476074
    4. '*' → logprob: -11.125765800476074
    5. '<' → logprob: -13.250765800476074
    6. '-(' → logprob: -13.250765800476074
    7. '(' → logprob: -14.000765800476074
    8. '>=' → logprob: -14.375765800476074
    9. '<=' → logprob: -15.250765800476074
    10. '   ' → logprob: -15.625765800476074

Token 265: ' dx' (ID: 29472)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.06369952857494354
    2. '(dx' → logprob: -2.81369948387146
    3. '(px' → logprob: -6.813699722290039
    4. '(x' → logprob: -8.063699722290039
    5. '(d' → logprob: -8.563699722290039
    6. '(y' → logprob: -9.688699722290039
    7. ' (' → logprob: -10.188699722290039
    8. '   ' → logprob: -12.313699722290039
    9. 'dx' → logprob: -12.563699722290039
    10. '(py' → logprob: -13.063699722290039

Token 266: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.006588420830667019
    2. ' *' → logprob: -5.631588459014893
    3. '*(' → logprob: -6.381588459014893
    4. '   ' → logprob: -7.256588459014893
    5. '==' → logprob: -8.506587982177734
    6. '*y' → logprob: -8.631587982177734
    7. '>' → logprob: -9.131587982177734
    8. '<' → logprob: -10.631587982177734
    9. '(' → logprob: -10.756587982177734
    10. '**' → logprob: -11.381587982177734

Token 267: ' (' (ID: 350)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -7.584239938296378e-06
    2. '(' → logprob: -12.125007629394531
    3. '(y' → logprob: -13.250007629394531
    4. ' (' → logprob: -15.500007629394531
    5. '(q' → logprob: -17.25000762939453
    6. '(pr' → logprob: -18.25000762939453
    7. '(pp' → logprob: -18.50000762939453
    8. '(v' → logprob: -18.75000762939453
    9. '(x' → logprob: -18.87500762939453
    10. '(t' → logprob: -19.00000762939453

Token 268: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -2.339278580620885e-06
    2. '(p' → logprob: -13.000001907348633
    3. ' p' → logprob: -19.000001907348633
    4. ')p' → logprob: -19.500001907348633
    5. '	p' → logprob: -22.125001907348633
    6. '<p' → logprob: -22.500001907348633
    7. '$p' → logprob: -23.125001907348633
    8. '.p' → logprob: -23.375001907348633
    9. 'п' → logprob: -24.500001907348633
    10. ' п' → logprob: -24.625001907348633

Token 269: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -2.6895233531831764e-05
    2. '[' → logprob: -11.12502670288086
    3. '2' → logprob: -11.37502670288086
    4. '1' → logprob: -14.37502670288086
    5. '(' → logprob: -19.00002670288086
    6. '4' → logprob: -19.50002670288086
    7. '３' → logprob: -20.12502670288086
    8. 'p' → logprob: -21.50002670288086
    9. '0' → logprob: -22.37502670288086
    10. '33' → logprob: -23.12502670288086

Token 270: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: 0.0
    2. '\[' → logprob: -17.0
    3. '(' → logprob: -20.0
    4. '```' → logprob: -20.125
    5. '_[' → logprob: -20.375
    6. '0' → logprob: -20.5
    7. '   ' → logprob: -20.5
    8. ''[' → logprob: -20.75
    9. '<' → logprob: -21.125
    10. '【' → logprob: -21.25

Token 271: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. '1' → logprob: -17.625
    3. '[' → logprob: -20.25
    4. '０' → logprob: -22.5
    5. ' ' → logprob: -23.125
    6. '2' → logprob: -23.5
    7. '   ' → logprob: -23.875
    8. '۰' → logprob: -24.75
    9. '  ' → logprob: -24.875
    10. '(' → logprob: -25.0

Token 272: ']' (ID: 60)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.43377819657325745
    2. ']' → logprob: -1.058778166770935
    3. '[' → logprob: -5.308778285980225
    4. ']-' → logprob: -9.683777809143066
    5. ''][' → logprob: -11.558777809143066
    6. '])[' → logprob: -11.808777809143066
    7. ']][' → logprob: -12.058777809143066
    8. '-' → logprob: -12.433777809143066
    9. '].' → logprob: -12.558777809143066
    10. '].[' → logprob: -12.683777809143066

Token 273: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -9.014684110297821e-06
    2. ' -' → logprob: -11.625008583068848
    3. '−' → logprob: -19.125009536743164
    4. '-l' → logprob: -20.625009536743164
    5. '-y' → logprob: -20.750009536743164
    6. '–' → logprob: -21.875009536743164
    7. '-f' → logprob: -22.250009536743164
    8. '   ' → logprob: -22.750009536743164
    9. '-b' → logprob: -22.875009536743164
    10. '-v' → logprob: -22.875009536743164

Token 274: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: 0.0
    2. ' y' → logprob: -18.25
    3. '	y' → logprob: -21.375
    4. 'y's' → logprob: -23.5
    5. 'yb' → logprob: -23.875
    6. '(y' → logprob: -24.5
    7. '_y' → logprob: -24.625
    8. ''y' → logprob: -24.875
    9. '.y' → logprob: -24.875
    10. '*y' → logprob: -25.5

Token 275: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004390134708955884
    2. '[' → logprob: -7.750439167022705
    3. '(' → logprob: -12.625438690185547
    4. '１' → logprob: -13.375438690185547
    5. '[y' → logprob: -14.500438690185547
    6. '[i' → logprob: -14.625438690185547
    7. '2' → logprob: -14.750438690185547
    8. '_' → logprob: -14.875438690185547
    9. '   ' → logprob: -14.875438690185547
    10. ' ' → logprob: -15.125438690185547

Token 276: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2664456789934775e-06
    2. '))' → logprob: -14.875000953674316
    3. '```' → logprob: -15.750000953674316
    4. ')>' → logprob: -16.000001907348633
    5. '}' → logprob: -16.250001907348633
    6. ')`' → logprob: -16.375001907348633
    7. '   ' → logprob: -16.500001907348633
    8. '>' → logprob: -16.750001907348633
    9. '})' → logprob: -16.875001907348633
    10. ')==' → logprob: -16.875001907348633

Token 277: ' <' (ID: 464)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.6694011092185974
    2. '   ' → logprob: -0.7944011092185974
    3. '<' → logprob: -4.669401168823242
    4. '>=' → logprob: -4.669401168823242
    5. '```' → logprob: -5.044401168823242
    6. '       ' → logprob: -6.044401168823242
    7. '<|end|>' → logprob: -6.419401168823242
    8. '}' → logprob: -6.544401168823242
    9. ' >' → logprob: -6.794401168823242
    10. ' >=' → logprob: -7.169401168823242

Token 278: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12695351243019104
    2. '0' → logprob: -2.126953601837158
    3. '=' → logprob: -10.751953125
    4. '   ' → logprob: -12.501953125
    5. ' ' → logprob: -15.751953125
    6. '  ' → logprob: -16.376953125
    7. ' =' → logprob: -17.501953125
    8. '	' → logprob: -18.376953125
    9. '```' → logprob: -18.501953125
    10. '`' → logprob: -18.876953125

Token 279: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.625
    3. '=' → logprob: -19.625
    4. '   ' → logprob: -22.0
    5. '1' → logprob: -22.125
    6. '０' → logprob: -22.875
    7. '۰' → logprob: -23.5
    8. 'zero' → logprob: -23.625
    9. ' cero' → logprob: -24.875
    10. '_zero' → logprob: -25.375

Token 280: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6794984936714172
    2. '   ' → logprob: -0.9294984936714172
    3. '```' → logprob: -2.5544984340667725
    4. 'return' → logprob: -4.429498672485352
    5. '<|end|>' → logprob: -5.179498672485352
    6. '<|end|>' → logprob: -7.429498672485352
    7. ':return' → logprob: -8.054498672485352
    8. '       ' → logprob: -8.054498672485352
    9. '}' → logprob: -8.429498672485352
    10. '<' → logprob: -8.554498672485352

Token 281: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.29153114557266235
    2. '   ' → logprob: -1.5415310859680176
    3. '```' → logprob: -3.5415310859680176
    4. 'return' → logprob: -4.916531085968018
    5. 'pass' → logprob: -7.541531085968018
    6. 'if' → logprob: -7.541531085968018
    7. '#' → logprob: -7.666531085968018
    8. '       ' → logprob: -8.541531562805176
    9. '<' → logprob: -8.791531562805176
    10. 'import' → logprob: -9.166531562805176

Token 282: ' get' (ID: 717)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.1808362007141113
    2. 'get' → logprob: -1.3058362007141113
    3. 'side' → logprob: -1.9308362007141113
    4. 'calculate' → logprob: -2.1808362007141113
    5. 'is' → logprob: -2.5558362007141113
    6. 'parse' → logprob: -3.6808362007141113
    7. 'convert' → logprob: -3.9308362007141113
    8. 'process' → logprob: -4.430836200714111
    9. 'input' → logprob: -5.680836200714111
    10. 'end' → logprob: -6.180836200714111

Token 283: '_sorted' (ID: 104993)
  Prédit: '_input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.11630836874246597
    2. '_point' → logprob: -2.6163084506988525
    3. '_output' → logprob: -3.3663084506988525
    4. '_coordinates' → logprob: -6.241308212280273
    5. '_points' → logprob: -9.741308212280273
    6. '_inputs' → logprob: -10.491308212280273
    7. '_coordinate' → logprob: -10.491308212280273
    8. '_next' → logprob: -10.616308212280273
    9. '_data' → logprob: -10.991308212280273
    10. '_line' → logprob: -11.241308212280273

Token 284: '_points' (ID: 30070)
  Prédit: '_input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.32579758763313293
    2. '_points' → logprob: -2.0757975578308105
    3. '_coordinates' → logprob: -2.8257975578308105
    4. '_list' → logprob: -3.0757975578308105
    5. '_inputs' → logprob: -3.3257975578308105
    6. '_values' → logprob: -6.2007975578308105
    7. '_items' → logprob: -6.7007975578308105
    8. '_def' → logprob: -6.9507975578308105
    9. '_output' → logprob: -7.0757975578308105
    10. '_coords' → logprob: -7.2007975578308105

Token 285: '(D' (ID: 9908)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0005047772428952157
    2. '(:' → logprob: -8.250504493713379
    3. '()' → logprob: -8.750504493713379
    4. '(' → logprob: -10.375504493713379
    5. '():
' → logprob: -11.125504493713379
    6. '(_:' → logprob: -11.250504493713379
    7. ' ():' → logprob: -11.625504493713379
    8. '(':' → logprob: -12.375504493713379
    9. '(":' → logprob: -12.625504493713379
    10. '(_' → logprob: -13.500504493713379

Token 286: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07026340067386627
    2. '):
' → logprob: -2.695263385772705
    3. ',' → logprob: -8.945263862609863
    4. '):

' → logprob: -9.195263862609863
    5. '   ' → logprob: -9.945263862609863
    6. ':' → logprob: -10.820263862609863
    7. '):
' → logprob: -11.320263862609863
    8. ')' → logprob: -12.070263862609863
    9. 'def' → logprob: -12.945263862609863
    10. ')):' → logprob: -13.320263862609863

Token 287: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1472419600977446e-06
    2. '  ' → logprob: -14.125000953674316
    3. 'return' → logprob: -15.250000953674316
    4. '```' → logprob: -16.875001907348633
    5. '    ' → logprob: -17.250001907348633
    6. '	return' → logprob: -17.750001907348633
    7. ' ' → logprob: -17.875001907348633
    8. '       ' → logprob: -18.125001907348633
    9. ' return' → logprob: -18.250001907348633
    10. '   ' → logprob: -19.625001907348633

Token 288: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5760207176208496
    2. 'return' (adapté à ' return') → logprob: -0.8260207176208496
    3. 'sorted' → logprob: -9.701021194458008
    4. ' return' → logprob: -12.076021194458008
    5. 'pass' → logprob: -12.076021194458008
    6. 'sort' → logprob: -12.201021194458008
    7. 'D' → logprob: -13.451021194458008
    8. '	return' → logprob: -14.076021194458008
    9. '  ' → logprob: -14.826021194458008
    10. '```' → logprob: -15.326021194458008

Token 289: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -9.372294698550832e-06
    2. ' sorted' → logprob: -11.875009536743164
    3. '(sorted' → logprob: -13.250009536743164
    4. 'sort' → logprob: -14.750009536743164
    5. '.sorted' → logprob: -15.875009536743164
    6. '_sorted' → logprob: -16.500009536743164
    7. 'Sorted' → logprob: -18.750009536743164
    8. '   ' → logprob: -19.000009536743164
    9. 'list' → logprob: -19.000009536743164
    10. 'D' → logprob: -19.750009536743164

Token 290: '(D' (ID: 9908)
  Prédit: '(D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(D' → logprob: -0.5716356039047241
    2. '_points' → logprob: -1.5716356039047241
    3. '(' → logprob: -2.1966357231140137
    4. '()' → logprob: -2.4466357231140137
    5. '(lambda' → logprob: -4.446635723114014
    6. '(points' → logprob: -4.946635723114014
    7. '(_)' → logprob: -5.696635723114014
    8. '(_' → logprob: -6.821635723114014
    9. '(...)' → logprob: -6.946635723114014
    10. '_by' → logprob: -7.446635723114014

Token 291: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0485982745885849
    2. ',' → logprob: -3.048598289489746
    3. '),' → logprob: -12.298598289489746
    4. ',)' → logprob: -13.298598289489746
    5. ')

' → logprob: -13.548598289489746
    6. ')`' → logprob: -13.673598289489746
    7. '))' → logprob: -14.173598289489746
    8. ')
' → logprob: -14.548598289489746
    9. '```' → logprob: -15.048598289489746
    10. ',key' → logprob: -15.673598289489746

Token 292: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06850570440292358
    2. '   ' → logprob: -3.3185057640075684
    3. '```' → logprob: -3.8185057640075684
    4. 'return' → logprob: -5.943505764007568
    5. '<|end|>' → logprob: -5.943505764007568
    6. '()' → logprob: -7.693505764007568
    7. 'D' → logprob: -8.19350528717041
    8. ')' → logprob: -8.19350528717041
    9. 'print' → logprob: -8.44350528717041
    10. 'import' → logprob: -8.44350528717041

Token 293: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.12520042061805725
    2. 'add' → logprob: -3.0002005100250244
    3. 'calculate' → logprob: -4.000200271606445
    4. 'sort' → logprob: -4.250200271606445
    5. 'set' → logprob: -4.500200271606445
    6. 'process' → logprob: -4.875200271606445
    7. ' get' → logprob: -5.875200271606445
    8. 'generate' → logprob: -6.500200271606445
    9. 'create' → logprob: -6.875200271606445
    10. 'def' → logprob: -6.875200271606445

Token 294: '_first' (ID: 29347)
  Prédit: '_input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.013272935524582863
    2. '_sorted' → logprob: -5.013272762298584
    3. '_point' → logprob: -5.263272762298584
    4. '_points' → logprob: -7.388272762298584
    5. '_output' → logprob: -7.513272762298584
    6. '_coordinates' → logprob: -9.013273239135742
    7. '_inputs' → logprob: -10.763273239135742
    8. '_next' → logprob: -11.263273239135742
    9. '_filtered' → logprob: -11.638273239135742
    10. '_' → logprob: -12.638273239135742

Token 295: '_point' (ID: 15466)
  Prédit: '_point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_point' → logprob: -0.03611176460981369
    2. '_token' → logprob: -4.161111831665039
    3. '_points' → logprob: -4.536111831665039
    4. '_def' → logprob: -6.036111831665039
    5. '_' → logprob: -6.161111831665039
    6. '()' → logprob: -7.161111831665039
    7. '_line' → logprob: -7.786111831665039
    8. '_sorted' → logprob: -7.786111831665039
    9. '_element' → logprob: -8.411111831665039
    10. '_input' → logprob: -8.536111831665039

Token 296: '(D' (ID: 9908)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.002573044504970312
    2. '()' → logprob: -6.127573013305664
    3. '(:' → logprob: -8.377573013305664
    4. '(' → logprob: -10.252573013305664
    5. '():
' → logprob: -10.627573013305664
    6. '(_:' → logprob: -10.752573013305664
    7. '(':' → logprob: -11.002573013305664
    8. ' ():' → logprob: -11.002573013305664
    9. '(":' → logprob: -11.377573013305664
    10. 'def' → logprob: -12.377573013305664

Token 297: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.029981542378664017
    2. '):
' → logprob: -3.5299816131591797
    3. '):

' → logprob: -8.77998161315918
    4. ')' → logprob: -9.90498161315918
    5. ',' → logprob: -11.65498161315918
    6. '):
' → logprob: -12.02998161315918
    7. ')):' → logprob: -12.27998161315918
    8. '   ' → logprob: -12.52998161315918
    9. '[]):' → logprob: -13.65498161315918
    10. ''):' → logprob: -14.40498161315918

Token 298: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -6.704273118884885e-07
    2. 'return' → logprob: -14.875000953674316
    3. '  ' → logprob: -15.375000953674316
    4. '	return' → logprob: -17.75
    5. ' return' → logprob: -18.0
    6. '    ' → logprob: -18.375
    7. '       ' → logprob: -18.375
    8. ' ' → logprob: -20.0
    9. '```' → logprob: -20.5
    10. '     ' → logprob: -21.75

Token 299: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.000555416801944375
    2. '   ' → logprob: -7.500555515289307
    3. ' return' → logprob: -13.000555038452148
    4. '	return' → logprob: -15.875555038452148
    5. 'returns' → logprob: -17.37555503845215
    6. 'if' → logprob: -18.25055503845215
    7. 'Return' → logprob: -19.50055503845215
    8. '返回' → logprob: -19.62555503845215
    9. 'D' → logprob: -19.87555503845215
    10. ':return' → logprob: -19.87555503845215

Token 300: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -1.8193366486229934e-05
    2. 'min' → logprob: -11.000018119812012
    3. ' D' → logprob: -13.625018119812012
    4. 'sorted' → logprob: -16.000019073486328
    5. '   ' → logprob: -16.750019073486328
    6. '(D' → logprob: -17.625019073486328
    7. 'max' → logprob: -18.875019073486328
    8. '	D' → logprob: -19.000019073486328
    9. 'get' → logprob: -19.500019073486328
    10. '_D' → logprob: -20.375019073486328

Token 301: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.128163257315464e-07
    2. '.pop' → logprob: -15.5
    3. '[len' → logprob: -18.875
    4. '(' → logprob: -19.875
    5. '0' → logprob: -20.0
    6. '[-' → logprob: -20.375
    7. '.sort' → logprob: -20.5
    8. '[min' → logprob: -20.75
    9. '[:' → logprob: -21.125
    10. '[random' → logprob: -21.25

Token 302: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. '1' → logprob: -22.625
    3. ' ' → logprob: -23.125
    4. '０' → logprob: -24.125
    5. '   ' → logprob: -24.125
    6. '۰' → logprob: -24.375
    7. '```' → logprob: -25.5
    8. '০' → logprob: -25.875
    9. '०' → logprob: -26.125
    10. '٠' → logprob: -26.875

Token 303: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0003147280658595264
    2. '],' → logprob: -8.625314712524414
    3. '])' → logprob: -10.375314712524414
    4. '][' → logprob: -10.500314712524414
    5. ']}' → logprob: -10.625314712524414
    6. ')' → logprob: -10.625314712524414
    7. ')]' → logprob: -11.000314712524414
    8. '].' → logprob: -12.500314712524414
    9. ']]' → logprob: -13.125314712524414
    10. ']()' → logprob: -13.625314712524414

Token 304: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.027593916282057762
    2. '   ' → logprob: -3.7775938510894775
    3. 'return' → logprob: -5.652594089508057
    4. 'D' → logprob: -7.902594089508057
    5. '```' → logprob: -8.277593612670898
    6. 'print' → logprob: -9.902593612670898
    7. 'if' → logprob: -10.777593612670898
    8. '       ' → logprob: -11.027593612670898
    9. 'import' → logprob: -11.152593612670898
    10. 'n' → logprob: -11.152593612670898

Token 305: ' remove' (ID: 6234)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.0004331725067459047
    2. 'set' → logprob: -8.875432968139648
    3. 'add' → logprob: -9.375432968139648
    4. ' get' → logprob: -9.500432968139648
    5. 'calculate' → logprob: -9.750432968139648
    6. 'process' → logprob: -11.000432968139648
    7. 'parse' → logprob: -11.500432968139648
    8. 'def' → logprob: -12.000432968139648
    9. 'append' → logprob: -12.375432968139648
    10. 'is' → logprob: -12.375432968139648

Token 306: '_point' (ID: 15466)
  Prédit: '_point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_point' → logprob: -0.18254435062408447
    2. '_points' → logprob: -1.9325443506240845
    3. '_duplicates' → logprob: -4.057544231414795
    4. '(D' → logprob: -7.182544231414795
    5. '_' → logprob: -7.182544231414795
    6. '_input' → logprob: -7.432544231414795
    7. '_duplicate' → logprob: -7.557544231414795
    8. '_element' → logprob: -7.682544231414795
    9. '_last' → logprob: -7.682544231414795
    10. '_first' → logprob: -7.807544231414795

Token 307: '(D' (ID: 9908)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3252192437648773
    2. '():' → logprob: -1.3252192735671997
    3. '_' → logprob: -5.32521915435791
    4. '(D' → logprob: -6.32521915435791
    5. '(' → logprob: -6.70021915435791
    6. 'def' → logprob: -6.95021915435791
    7. '(_' → logprob: -7.70021915435791
    8. '():
' → logprob: -7.70021915435791
    9. '_def' → logprob: -7.95021915435791
    10. '(_)' → logprob: -8.32521915435791

Token 308: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3044723868370056
    2. '):
' → logprob: -1.4294724464416504
    3. ',' → logprob: -4.05447244644165
    4. '   ' → logprob: -5.42947244644165
    5. '):

' → logprob: -7.17947244644165
    6. ')' → logprob: -7.80447244644165
    7. '):
' → logprob: -9.304471969604492
    8. '),' → logprob: -11.804471969604492
    9. ')):' → logprob: -12.054471969604492
    10. '       ' → logprob: -12.179471969604492

Token 309: ' p' (ID: 275)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.20262466371059418
    2. 'p' → logprob: -1.7026246786117554
    3. 'index' → logprob: -6.827624797821045
    4. 'idx' → logprob: -9.202624320983887
    5. 'D' → logprob: -11.952624320983887
    6. 'points' → logprob: -12.702624320983887
    7. 'i' → logprob: -12.952624320983887
    8. ' point' → logprob: -12.952624320983887
    9. 'pt' → logprob: -13.077624320983887
    10. 'first' → logprob: -13.202624320983887

Token 310: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.40557661652565
    2. '):
' → logprob: -1.1555765867233276
    3. ')' → logprob: -4.905576705932617
    4. '):

' → logprob: -5.780576705932617
    5. 'oint' → logprob: -5.905576705932617
    6. '3' → logprob: -5.905576705932617
    7. '1' → logprob: -7.030576705932617
    8. '):
' → logprob: -7.655576705932617
    9. 'op' → logprob: -8.030576705932617
    10. ').' → logprob: -8.655576705932617

Token 311: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.8624639324116288e-06
    2. '  ' → logprob: -13.625001907348633
    3. 'D' → logprob: -14.625001907348633
    4. 'return' → logprob: -17.000001907348633
    5. '    ' → logprob: -17.375001907348633
    6. '       ' → logprob: -18.000001907348633
    7. '	D' → logprob: -18.000001907348633
    8. ' ' → logprob: -18.875001907348633
    9. '```' → logprob: -19.375001907348633
    10. '     ' → logprob: -20.250001907348633

Token 312: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' (adapté à ' D') → logprob: -0.004640642087906599
    2. 'return' → logprob: -5.504640579223633
    3. '   ' → logprob: -7.504640579223633
    4. 'del' → logprob: -11.504640579223633
    5. ' D' → logprob: -13.754640579223633
    6. 'Del' → logprob: -15.129640579223633
    7. 'if' → logprob: -17.254640579223633
    8. 'def' → logprob: -17.254640579223633
    9. 'remove' → logprob: -17.379640579223633
    10. 'DEL' → logprob: -17.754640579223633

Token 313: '.remove' (ID: 7986)
  Prédit: '.remove'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.remove' → logprob: -0.00019293125660624355
    2. '.pop' → logprob: -8.750192642211914
    3. '   ' → logprob: -11.125192642211914
    4. '.' → logprob: -12.000192642211914
    5. '.rem' → logprob: -12.500192642211914
    6. '.Remove' → logprob: -12.750192642211914
    7. ' =' → logprob: -13.000192642211914
    8. '.clear' → logprob: -13.750192642211914
    9. 'remove' → logprob: -13.875192642211914
    10. '=' → logprob: -13.875192642211914

Token 314: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.04641316458582878
    2. '_point' → logprob: -3.2964131832122803
    3. '(' → logprob: -5.046412944793701
    4. '(point' → logprob: -6.921412944793701
    5. '()' → logprob: -8.42141342163086
    6. '(_)' → logprob: -8.92141342163086
    7. '_p' → logprob: -9.29641342163086
    8. '(Point' → logprob: -9.79641342163086
    9. '_' → logprob: -10.29641342163086
    10. '_(' → logprob: -10.54641342163086

Token 315: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2664456789934775e-06
    2. ')
' → logprob: -15.125000953674316
    3. ')

' → logprob: -15.500000953674316
    4. '```' → logprob: -15.500000953674316
    5. ')`' → logprob: -15.500000953674316
    6. '   ' → logprob: -16.000001907348633
    7. ' )' → logprob: -16.875001907348633
    8. '))' → logprob: -17.125001907348633
    9. '`)' → logprob: -17.125001907348633
    10. '')' → logprob: -17.125001907348633

Token 316: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10505153238773346
    2. '   ' → logprob: -2.3550515174865723
    3. '```' → logprob: -5.855051517486572
    4. 'return' → logprob: -6.480051517486572
    5. 'pass' → logprob: -9.23005199432373
    6. 'if' → logprob: -9.48005199432373
    7. '       ' → logprob: -9.85505199432373
    8. 'D' → logprob: -10.35505199432373
    9. 'print' → logprob: -10.48005199432373
    10. '`' → logprob: -10.85505199432373

Token 317: ' get' (ID: 717)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.0896245464682579
    2. 'remove' → logprob: -3.2146246433258057
    3. 'get' → logprob: -3.7146246433258057
    4. 'update' → logprob: -4.964624404907227
    5. 'calculate' → logprob: -6.089624404907227
    6. 'process' → logprob: -6.214624404907227
    7. 'insert' → logprob: -6.214624404907227
    8. 'append' → logprob: -6.714624404907227
    9. 'set' → logprob: -6.964624404907227
    10. 'is' → logprob: -7.214624404907227

Token 318: '_copy' (ID: 37283)
  Prédit: '_input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.021712346002459526
    2. '_point' → logprob: -4.021712303161621
    3. '_sorted' → logprob: -6.396712303161621
    4. '_output' → logprob: -7.021712303161621
    5. '_points' → logprob: -7.271712303161621
    6. '_next' → logprob: -9.271712303161621
    7. '_coordinates' → logprob: -9.896712303161621
    8. '_inputs' → logprob: -10.396712303161621
    9. '_first' → logprob: -11.021712303161621
    10. '_remaining' → logprob: -11.396712303161621

Token 319: '(D' (ID: 9908)
  Prédit: '(D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(D' → logprob: -0.8756816387176514
    2. '()' → logprob: -1.1256816387176514
    3. '_points' → logprob: -2.2506816387176514
    4. '_point' → logprob: -3.0006816387176514
    5. '_def' → logprob: -3.2506816387176514
    6. '_of' → logprob: -3.3756816387176514
    7. 'def' → logprob: -5.0006818771362305
    8. '_input' → logprob: -5.3756818771362305
    9. '_' → logprob: -5.6256818771362305
    10. '(' → logprob: -6.1256818771362305

Token 320: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04362509399652481
    2. '):
' → logprob: -3.1686251163482666
    3. ')' → logprob: -7.9186248779296875
    4. '):

' → logprob: -9.043624877929688
    5. '.copy' → logprob: -10.543624877929688
    6. ',' → logprob: -10.668624877929688
    7. '   ' → logprob: -10.668624877929688
    8. '):
' → logprob: -11.043624877929688
    9. '()):
' → logprob: -11.293624877929688
    10. ')):' → logprob: -11.293624877929688

Token 321: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -4.320199877838604e-07
    2. '  ' → logprob: -15.125
    3. 'return' → logprob: -16.25
    4. '    ' → logprob: -18.5
    5. '       ' → logprob: -19.125
    6. '	return' → logprob: -19.625
    7. ' return' → logprob: -20.375
    8. '     ' → logprob: -21.375
    9. ' ' → logprob: -21.875
    10. '```' → logprob: -22.75

Token 322: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.014204874634742737
    2. '   ' → logprob: -4.264204978942871
    3. ' return' → logprob: -10.139204978942871
    4. '	return' → logprob: -13.264204978942871
    5. 'import' → logprob: -17.264204025268555
    6. ':return' → logprob: -17.264204025268555
    7. '{return' → logprob: -17.264204025268555
    8. 'returns' → logprob: -17.514204025268555
    9. '返回' → logprob: -17.639204025268555
    10. 'Return' → logprob: -18.139204025268555

Token 323: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.0041355108842253685
    2. 'list' → logprob: -5.504135608673096
    3. ' D' → logprob: -10.129135131835938
    4. 'copy' → logprob: -11.504135131835938
    5. '[D' → logprob: -12.629135131835938
    6. ' list' → logprob: -13.254135131835938
    7. '   ' → logprob: -13.629135131835938
    8. '	D' → logprob: -15.004135131835938
    9. 'List' → logprob: -15.629135131835938
    10. '<D' → logprob: -16.129135131835938

Token 324: '[:' (ID: 7808)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06992409378290176
    2. '   ' → logprob: -3.8199241161346436
    3. '```' → logprob: -3.8199241161346436
    4. '<|end|>' → logprob: -3.9449241161346436
    5. '<|end|>' → logprob: -5.8199238777160645
    6. '()' → logprob: -8.194924354553223
    7. ' def' → logprob: -8.569924354553223
    8. '`' → logprob: -8.819924354553223
    9. 'import' → logprob: -8.944924354553223
    10. '  ' → logprob: -9.194924354553223

Token 325: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03959723562002182
    2. '1' → logprob: -3.414597272872925
    3. ']}' → logprob: -5.164597034454346
    4. '   ' → logprob: -9.914597511291504
    5. ']

' → logprob: -9.914597511291504
    6. 'len' → logprob: -10.039597511291504
    7. ']
' → logprob: -10.539597511291504
    8. ' ]' → logprob: -10.664597511291504
    9. '}' → logprob: -12.039597511291504
    10. '-' → logprob: -12.539597511291504

Token 326: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.024167748168110847
    2. '<|end|>' → logprob: -4.149167537689209
    3. '```' → logprob: -5.149167537689209
    4. '   ' → logprob: -6.649167537689209
    5. '<|end|>' → logprob: -7.274167537689209
    6. 'return' → logprob: -9.399168014526367
    7. ' def' → logprob: -9.649168014526367
    8. 'print' → logprob: -10.274168014526367
    9. '`' → logprob: -11.024168014526367
    10. 'if' → logprob: -11.149168014526367

Token 327: ' find' (ID: 1646)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.0032188263721764088
    2. 'add' → logprob: -6.503218650817871
    3. 'set' → logprob: -7.503218650817871
    4. 'calculate' → logprob: -8.378218650817871
    5. 'convert' → logprob: -8.503218650817871
    6. 'remove' → logprob: -9.003218650817871
    7. 'process' → logprob: -9.128218650817871
    8. 'append' → logprob: -9.503218650817871
    9. 'generate' → logprob: -9.503218650817871
    10. 'create' → logprob: -9.753218650817871

Token 328: '_next' (ID: 25436)
  Prédit: '_point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_point' → logprob: -1.0408005714416504
    2. '_points' → logprob: -1.2908005714416504
    3. '_next' → logprob: -2.5408005714416504
    4. '_' → logprob: -3.0408005714416504
    5. '_def' → logprob: -3.1658005714416504
    6. '_max' → logprob: -3.6658005714416504
    7. '_input' → logprob: -3.6658005714416504
    8. '_neighbors' → logprob: -3.7908005714416504
    9. '_best' → logprob: -4.16580057144165
    10. '_coordinates' → logprob: -4.41580057144165

Token 329: '_point' (ID: 15466)
  Prédit: '_point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_point' → logprob: -0.2972709834575653
    2. '_token' → logprob: -1.4222710132598877
    3. '_step' → logprob: -4.547270774841309
    4. '_def' → logprob: -6.172270774841309
    5. '_' → logprob: -7.797270774841309
    6. '_function' → logprob: -8.172270774841309
    7. '_position' → logprob: -8.547270774841309
    8. 'def' → logprob: -8.547270774841309
    9. '_action' → logprob: -8.547270774841309
    10. '_steps' → logprob: -8.547270774841309

Token 330: '(D' (ID: 9908)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0761714056134224
    2. '(D' → logprob: -3.076171398162842
    3. '(:' → logprob: -3.826171398162842
    4. '(p' → logprob: -6.201171398162842
    5. '(' → logprob: -6.451171398162842
    6. '(':' → logprob: -8.201171875
    7. '(":' → logprob: -8.451171875
    8. '(_:' → logprob: -8.451171875
    9. '(...' → logprob: -9.076171875
    10. '(def' → logprob: -9.076171875

Token 331: '1' (ID: 16)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.8119477033615112
    2. '):' → logprob: -1.0619477033615112
    3. ',' → logprob: -1.5619477033615112
    4. '):

' → logprob: -8.0619478225708
    5. '   ' → logprob: -8.9369478225708
    6. '):
' → logprob: -10.4369478225708
    7. ')' → logprob: -11.3119478225708
    8. ',D' → logprob: -12.3119478225708
    9. '),' → logprob: -13.1869478225708
    10. ')):
' → logprob: -14.4369478225708

Token 332: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011212585377506912
    2. ',D' → logprob: -9.500112533569336
    3. '):' → logprob: -10.375112533569336
    4. '):
' → logprob: -12.250112533569336
    5. '   ' → logprob: -14.000112533569336
    6. ' ,' → logprob: -15.750112533569336
    7. '):

' → logprob: -16.625112533569336
    8. '),' → logprob: -16.750112533569336
    9. ')' → logprob: -17.375112533569336
    10. 'D' → logprob: -17.875112533569336

Token 333: ' p' (ID: 275)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -3.128163257315464e-07
    2. ' D' → logprob: -15.125
    3. 'C' → logprob: -21.5
    4. 'F' → logprob: -23.0
    5. 'P' → logprob: -23.25
    6. 'G' → logprob: -23.375
    7. 'L' → logprob: -23.5
    8. 'B' → logprob: -23.625
    9. '   ' → logprob: -23.625
    10. 'S' → logprob: -23.625

Token 334: '1' (ID: 16)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05094892159104347
    2. '):
' → logprob: -3.5509488582611084
    3. '1' → logprob: -4.6759490966796875
    4. '2' → logprob: -4.8009490966796875
    5. ',' → logprob: -5.9259490966796875
    6. ')' → logprob: -7.6759490966796875
    7. '):

' → logprob: -8.675949096679688
    8. 'D' → logprob: -9.550949096679688
    9. '):
' → logprob: -10.300949096679688
    10. ''):' → logprob: -11.925949096679688

Token 335: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0344889760017395
    2. '):' → logprob: -3.5344889163970947
    3. '):
' → logprob: -5.409489154815674
    4. '   ' → logprob: -9.159488677978516
    5. '):

' → logprob: -9.159488677978516
    6. ')' → logprob: -11.034488677978516
    7. '),' → logprob: -11.409488677978516
    8. ',p' → logprob: -12.159488677978516
    9. '):
' → logprob: -12.409488677978516
    10. ',)' → logprob: -13.284488677978516

Token 336: ' D' (ID: 415)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.10021001845598221
    2. 'D' → logprob: -2.350209951400757
    3. ' p' → logprob: -12.725210189819336
    4. ' D' → logprob: -14.975210189819336
    5. '   ' → logprob: -16.475210189819336
    6. 'P' → logprob: -17.600210189819336
    7. '	p' → logprob: -18.975210189819336
    8. 'n' → logprob: -19.475210189819336
    9. '(p' → logprob: -19.475210189819336
    10. '       ' → logprob: -19.600210189819336

Token 337: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.09585252404212952
    2. '1' → logprob: -2.7208526134490967
    3. '):
' → logprob: -3.7208526134490967
    4. ')' → logprob: -7.595852375030518
    5. '2' → logprob: -7.720852375030518
    6. ',' → logprob: -8.720852851867676
    7. '):

' → logprob: -8.845852851867676
    8. '   ' → logprob: -10.720852851867676
    9. '):
' → logprob: -10.970852851867676
    10. 'def' → logprob: -11.095852851867676

Token 338: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.5048530030981055e-06
    2. '  ' → logprob: -13.750001907348633
    3. 'return' → logprob: -15.500001907348633
    4. '       ' → logprob: -16.625001907348633
    5. '    ' → logprob: -17.000001907348633
    6. '```' → logprob: -17.500001907348633
    7. ' ' → logprob: -17.875001907348633
    8. 'def' → logprob: -18.125001907348633
    9. '    
' → logprob: -19.875001907348633
    10. '     ' → logprob: -19.875001907348633

Token 339: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0018179784528911114
    2. 'return' → logprob: -6.3768181800842285
    3. 'D' → logprob: -9.37681770324707
    4. 'pass' → logprob: -10.75181770324707
    5. 'p' → logprob: -12.50181770324707
    6. '  ' → logprob: -12.75181770324707
    7. ' return' → logprob: -14.12681770324707
    8. 'for' (adapté à ' for') → logprob: -14.37681770324707
    9. '	return' → logprob: -15.00181770324707
    10. 'if' → logprob: -15.25181770324707

Token 340: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.2584580183029175
    2. 'p' → logprob: -1.5084580183029175
    3. '   ' → logprob: -5.133458137512207
    4. 'point' → logprob: -7.883458137512207
    5. ' ' → logprob: -9.133458137512207
    6. ' point' → logprob: -9.758458137512207
    7. '  ' → logprob: -10.508458137512207
    8. '    ' → logprob: -10.633458137512207
    9. '	p' → logprob: -12.633458137512207
    10. ' in' → logprob: -13.383458137512207

Token 341: '2' (ID: 17)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -1.104023814201355
    2. ' in' → logprob: -1.479023814201355
    3. '1' → logprob: -1.854023814201355
    4. '2' → logprob: -1.854023814201355
    5. '3' → logprob: -2.4790239334106445
    6. '   ' → logprob: -3.2290239334106445
    7. 'next' → logprob: -6.3540239334106445
    8. 'for' → logprob: -7.6040239334106445
    9. '       ' → logprob: -8.354023933410645
    10. '_in' → logprob: -8.604023933410645

Token 342: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.15325365960597992
    2. ' in' → logprob: -2.2782535552978516
    3. ':' → logprob: -3.2782535552978516
    4. '   ' → logprob: -6.528253555297852
    5. ',' → logprob: -8.403253555297852
    6. ':
' → logprob: -8.778253555297852
    7. '_in' → logprob: -11.028253555297852
    8. ':

' → logprob: -11.028253555297852
    9. '	in' → logprob: -11.403253555297852
    10. 'In' → logprob: -11.653253555297852

Token 343: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.00137404166162014
    2. 'get' → logprob: -6.751374244689941
    3. ' D' → logprob: -8.501374244689941
    4. ' get' → logprob: -14.876374244689941
    5. 'sorted' → logprob: -15.876374244689941
    6. 're' → logprob: -16.751373291015625
    7. '.get' → logprob: -19.126373291015625
    8. '	D' → logprob: -19.126373291015625
    9. '   ' → logprob: -19.626373291015625
    10. '(D' → logprob: -20.001373291015625

Token 344: '1' (ID: 16)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.24652285873889923
    2. ':' → logprob: -1.7465229034423828
    3. '   ' → logprob: -3.246522903442383
    4. '1' → logprob: -5.371522903442383
    5. 'D' → logprob: -8.621522903442383
    6. ':

' → logprob: -8.871522903442383
    7. '       ' → logprob: -9.621522903442383
    8. ' ' → logprob: -10.496522903442383
    9. '  ' → logprob: -10.871522903442383
    10. '):
' → logprob: -11.246522903442383

Token 345: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4302832782268524
    2. ':' → logprob: -1.1802833080291748
    3. '   ' → logprob: -3.180283308029175
    4. '       ' → logprob: -7.305283069610596
    5. ':

' → logprob: -9.430283546447754
    6. '     ' → logprob: -10.555283546447754
    7. ':`' → logprob: -11.055283546447754
    8. 'in' → logprob: -11.180283546447754
    9. ':\' → logprob: -11.180283546447754
    10. ' ' → logprob: -11.430283546447754

Token 346: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25199607014656067
    2. '   ' → logprob: -1.5019960403442383
    3. '     ' → logprob: -10.626996040344238
    4. '      ' → logprob: -11.501996040344238
    5. '           ' → logprob: -11.626996040344238
    6. '    ' → logprob: -12.001996040344238
    7. 'return' → logprob: -12.126996040344238
    8. ':' → logprob: -12.876996040344238
    9. '        ' → logprob: -12.876996040344238
    10. '  ' → logprob: -12.876996040344238

Token 347: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.08272778987884521
    2. '       ' → logprob: -2.5827279090881348
    3. '   ' → logprob: -6.332727909088135
    4. '           ' → logprob: -6.832727909088135
    5. 'return' → logprob: -6.957727909088135
    6. 'remove' → logprob: -11.582727432250977
    7. 'p' → logprob: -12.082727432250977
    8. '     ' → logprob: -13.332727432250977
    9. ' if' → logprob: -13.332727432250977
    10. '         ' → logprob: -13.582727432250977

Token 348: ' not' (ID: 625)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.14149968326091766
    2. ' is' → logprob: -3.1414997577667236
    3. ' p' → logprob: -3.2664997577667236
    4. 'p' → logprob: -3.7664997577667236
    5. '   ' → logprob: -4.6414995193481445
    6. '       ' → logprob: -5.0164995193481445
    7. 'not' → logprob: -5.7664995193481445
    8. ' not' → logprob: -6.1414995193481445
    9. 'side' → logprob: -6.2664995193481445
    10. '  ' → logprob: -7.5164995193481445

Token 349: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.07040462642908096
    2. 'side' → logprob: -2.695404529571533
    3. ' side' → logprob: -8.445405006408691
    4. ' is' → logprob: -9.320405006408691
    5. 'should' → logprob: -9.570405006408691
    6. 'condition' → logprob: -10.195405006408691
    7. 'remove' → logprob: -11.070405006408691
    8. '(side' → logprob: -12.195405006408691
    9. 'check' → logprob: -12.445405006408691
    10. '   ' → logprob: -12.445405006408691

Token 350: '_same' (ID: 83787)
  Prédit: '_same'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_same' → logprob: -0.0037441446911543608
    2. '_zero' → logprob: -5.628744125366211
    3. 'same' → logprob: -9.378744125366211
    4. '_equal' → logprob: -11.003744125366211
    5. '_valid' → logprob: -12.003744125366211
    6. '_possible' → logprob: -12.378744125366211
    7. '_safe' → logprob: -12.753744125366211
    8. '_duplicate' → logprob: -12.753744125366211
    9. 'ame' → logprob: -12.878744125366211
    10. '_next' → logprob: -13.128744125366211

Token 351: '_point' (ID: 15466)
  Prédit: '_point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_point' → logprob: -8.363617962459102e-05
    2. '_POINT' → logprob: -9.875083923339844
    3. '_points' → logprob: -11.375083923339844
    4. '_pointer' → logprob: -12.000083923339844
    5. '_Point' → logprob: -12.875083923339844
    6. '_line' → logprob: -13.125083923339844
    7. 'Point' → logprob: -13.375083923339844
    8. '_token' → logprob: -13.500083923339844
    9. ' Point' → logprob: -14.500083923339844
    10. 'point' → logprob: -14.625083923339844

Token 352: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -6.704273118884885e-07
    2. '(' → logprob: -14.375000953674316
    3. '(pp' → logprob: -19.125
    4. '(`' → logprob: -19.375
    5. ' (' → logprob: -19.625
    6. '(P' → logprob: -19.625
    7. '(m' → logprob: -20.75
    8. '(f' → logprob: -20.75
    9. '(pr' → logprob: -20.75
    10. '(c' → logprob: -20.75

Token 353: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005233763717114925
    2. '2' → logprob: -5.2552337646484375
    3. '１' → logprob: -19.380233764648438
    4. 'p' → logprob: -19.755233764648438
    5. '3' → logprob: -20.005233764648438
    6. '_' → logprob: -20.005233764648438
    7. '0' → logprob: -20.755233764648438
    8. ' ' → logprob: -21.005233764648438
    9. 'i' → logprob: -21.130233764648438
    10. '```' → logprob: -21.130233764648438

Token 354: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2664456789934775e-06
    2. ',p' → logprob: -13.625000953674316
    3. '，' → logprob: -18.750001907348633
    4. '،' → logprob: -20.250001907348633
    5. ' ,' → logprob: -20.250001907348633
    6. ',
' → logprob: -20.750001907348633
    7. '',' → logprob: -22.000001907348633
    8. '(),' → logprob: -22.125001907348633
    9. '_,' → logprob: -22.625001907348633
    10. '`,' → logprob: -22.750001907348633

Token 355: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: 0.0
    2. ' p' → logprob: -17.5
    3. '	p' → logprob: -21.5
    4. '<p' → logprob: -22.75
    5. '   ' → logprob: -23.75
    6. '(p' → logprob: -23.875
    7. ' п' → logprob: -24.25
    8. '$p' → logprob: -24.375
    9. 'پ' → logprob: -24.375
    10. 'п' → logprob: -24.5

Token 356: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.011047814972698689
    2. '1' → logprob: -4.511047840118408
    3. 'D' → logprob: -17.63604736328125
    4. '[' → logprob: -17.88604736328125
    5. '₂' → logprob: -18.38604736328125
    6. '):
' → logprob: -18.63604736328125
    7. '_' → logprob: -18.76104736328125
    8. 'p' → logprob: -19.01104736328125
    9. '２' → logprob: -19.38604736328125
    10. ' ' → logprob: -19.51104736328125

Token 357: ')' (ID: 8)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.16371069848537445
    2. '):' → logprob: -1.9137107133865356
    3. ')' → logprob: -5.788710594177246
    4. '):

' → logprob: -7.913710594177246
    5. '):
' → logprob: -10.038710594177246
    6. ')):
' → logprob: -12.288710594177246
    7. ')):' → logprob: -12.788710594177246
    8. '   ' → logprob: -14.163710594177246
    9. '()):
' → logprob: -15.788710594177246
    10. ').' → logprob: -16.038711547851562

Token 358: ' and' (ID: 326)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.10201718658208847
    2. '           ' → logprob: -2.6020171642303467
    3. ':' → logprob: -3.8520171642303467
    4. '       ' → logprob: -6.602017402648926
    5. ':return' → logprob: -8.477017402648926
    6. ':

' → logprob: -10.477017402648926
    7. 'return' → logprob: -11.602017402648926
    8. '         ' → logprob: -11.852017402648926
    9. '               ' → logprob: -12.477017402648926
    10. '          ' → logprob: -12.977017402648926

Token 359: ' side' (ID: 4307)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -1.3010042905807495
    2. 'side' → logprob: -1.3010042905807495
    3. 'not' → logprob: -1.5510042905807495
    4. 'p' → logprob: -1.9260042905807495
    5. '       ' → logprob: -2.551004409790039
    6. 'D' → logprob: -5.676004409790039
    7. '   ' → logprob: -5.801004409790039
    8. 'point' → logprob: -6.051004409790039
    9. '        ' → logprob: -6.301004409790039
    10. '           ' → logprob: -6.676004409790039

Token 360: '_for' (ID: 11903)
  Prédit: '_condition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_condition' → logprob: -0.023290548473596573
    2. '_for' → logprob: -3.7732906341552734
    3. '_conditions' → logprob: -10.273290634155273
    4. '_cond' → logprob: -12.148290634155273
    5. '条件' → logprob: -13.523290634155273
    6. 'Condition' → logprob: -13.898290634155273
    7. '_function' → logprob: -14.148290634155273
    8. 'for' → logprob: -14.523290634155273
    9. '_FOR' → logprob: -15.273290634155273
    10. 'condition' → logprob: -15.398290634155273

Token 361: '_point' (ID: 15466)
  Prédit: '_point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_point' → logprob: -1.4021237802808173e-05
    2. '_POINT' → logprob: -11.750014305114746
    3. 'Point' → logprob: -13.000014305114746
    4. '_points' → logprob: -13.500014305114746
    5. '_Point' → logprob: -13.500014305114746
    6. 'point' → logprob: -15.125014305114746
    7. ' Point' → logprob: -15.375014305114746
    8. '.point' → logprob: -16.12501335144043
    9. '	Point' → logprob: -16.62501335144043
    10. '_line' → logprob: -16.62501335144043

Token 362: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -1.1472419600977446e-06
    2. '(' → logprob: -13.750000953674316
    3. '(pp' → logprob: -18.375001907348633
    4. '(
' → logprob: -19.250001907348633
    5. ' (' → logprob: -19.250001907348633
    6. '(m' → logprob: -19.375001907348633
    7. '(d' → logprob: -19.375001907348633
    8. '(P' → logprob: -19.375001907348633
    9. '(`' → logprob: -19.625001907348633
    10. '(pa' → logprob: -19.875001907348633

Token 363: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.048587486147880554
    2. '2' → logprob: -3.0485875606536865
    3. 'p' → logprob: -16.548587799072266
    4. '3' → logprob: -18.423587799072266
    5. 'i' → logprob: -19.173587799072266
    6. '１' → logprob: -19.798587799072266
    7. '_' → logprob: -19.923587799072266
    8. '0' → logprob: -20.298587799072266
    9. 'a' → logprob: -20.423587799072266
    10. '₂' → logprob: -20.423587799072266

Token 364: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.512236498361744e-07
    2. ',p' → logprob: -14.500000953674316
    3. '，' → logprob: -18.375
    4. ',
' → logprob: -19.25
    5. ' ,' → logprob: -19.375
    6. '،' → logprob: -19.5
    7. '`,' → logprob: -19.875
    8. ',<' → logprob: -20.25
    9. '',' → logprob: -20.5
    10. ',\
' → logprob: -20.875

Token 365: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.9361264946837764e-07
    2. ' p' → logprob: -16.25
    3. '	p' → logprob: -21.5
    4. '<p' → logprob: -21.625
    5. ')p' → logprob: -22.625
    6. '   ' → logprob: -22.875
    7. ' п' → logprob: -23.0
    8. '(p' → logprob: -23.0
    9. '```' → logprob: -23.0
    10. 'پ' → logprob: -23.5

Token 366: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.9054008084349334e-05
    2. '1' → logprob: -10.250039100646973
    3. 'D' → logprob: -12.750039100646973
    4. '₂' → logprob: -14.750039100646973
    5. 'p' → logprob: -16.250038146972656
    6. '_' → logprob: -16.375038146972656
    7. '２' → logprob: -17.000038146972656
    8. '3' → logprob: -17.500038146972656
    9. ',' → logprob: -17.875038146972656
    10. '```' → logprob: -18.000038146972656

Token 367: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.9361264946837764e-07
    2. ',D' → logprob: -16.0
    3. '，' → logprob: -20.125
    4. ' ,' → logprob: -20.125
    5. ',<' → logprob: -21.375
    6. ',
' → logprob: -21.625
    7. '،' → logprob: -22.0
    8. ',,' → logprob: -22.25
    9. ',",' → logprob: -22.25
    10. ',G' → logprob: -22.375

Token 368: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -6.704273118884885e-07
    2. ' D' → logprob: -14.375000953674316
    3. '   ' → logprob: -19.875
    4. '       ' → logprob: -22.0
    5. '	D' → logprob: -22.0
    6. 'Д' → logprob: -23.125
    7. '           ' → logprob: -23.125
    8. '               ' → logprob: -23.5
    9. '  ' → logprob: -23.625
    10. 'C' → logprob: -24.5

Token 369: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.023468030616641045
    2. '):
' → logprob: -3.773468017578125
    3. '1' → logprob: -9.273468017578125
    4. '):

' → logprob: -9.273468017578125
    5. '):
' → logprob: -11.023468017578125
    6. ')' → logprob: -11.773468017578125
    7. ')):' → logprob: -11.898468017578125
    8. '[]):' → logprob: -13.648468017578125
    9. 'D' → logprob: -14.523468017578125
    10. '):(' → logprob: -15.023468017578125

Token 370: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0004693994123954326
    2. '   ' → logprob: -7.750469207763672
    3. '       ' → logprob: -10.250469207763672
    4. '          ' → logprob: -13.875469207763672
    5. '               ' → logprob: -14.000469207763672
    6. '         ' → logprob: -14.000469207763672
    7. 'return' → logprob: -14.875469207763672
    8. '            ' → logprob: -15.250469207763672
    9. '             ' → logprob: -16.875469207763672
    10. '     ' → logprob: -16.875469207763672

Token 371: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20208950340747833
    2. 'return' (adapté à ' return') → logprob: -1.702089548110962
    3. '               ' → logprob: -7.327089309692383
    4. '             ' → logprob: -12.452089309692383
    5. 'continue' → logprob: -12.452089309692383
    6. '       ' → logprob: -12.577089309692383
    7. '            ' → logprob: -12.702089309692383
    8. ' return' → logprob: -13.452089309692383
    9. '         ' → logprob: -14.077089309692383
    10. '          ' → logprob: -14.452089309692383

Token 372: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00014525714504998177
    2. 'None' → logprob: -9.375144958496094
    3. ' p' → logprob: -10.125144958496094
    4. '   ' → logprob: -11.125144958496094
    5. '           ' → logprob: -12.875144958496094
    6. '       ' → logprob: -13.500144958496094
    7. '               ' → logprob: -14.750144958496094
    8. '	p' → logprob: -15.500144958496094
    9. '         ' → logprob: -15.625144958496094
    10. '(p' → logprob: -15.625144958496094

Token 373: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.35928764939308167
    2. '           ' → logprob: -1.6092876195907593
    3. '       ' → logprob: -2.734287738800049
    4. '   ' → logprob: -3.609287738800049
    5. 'oint' → logprob: -5.234287738800049
    6. 'return' → logprob: -6.484287738800049
    7. '         ' → logprob: -6.734287738800049
    8. '               ' → logprob: -7.609287738800049
    9. 'def' → logprob: -7.984287738800049
    10. '          ' → logprob: -8.85928726196289

Token 374: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.36358264088630676
    2. '   ' → logprob: -1.2385826110839844
    3. '       ' → logprob: -4.488582611083984
    4. 'return' → logprob: -5.863582611083984
    5. 'def' → logprob: -7.738582611083984
    6. '```' → logprob: -8.863582611083984
    7. '               ' → logprob: -8.988582611083984
    8. '         ' → logprob: -9.613582611083984
    9. '          ' → logprob: -10.113582611083984
    10. ':return' → logprob: -10.488582611083984

Token 375: '   ' (ID: 271)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3926870822906494
    2. '   ' → logprob: -1.1426870822906494
    3. '       ' → logprob: -5.64268684387207
    4. 'def' → logprob: -7.01768684387207
    5. 'return' → logprob: -7.26768684387207
    6. '```' → logprob: -8.14268684387207
    7. '               ' → logprob: -8.51768684387207
    8. '         ' → logprob: -10.14268684387207
    9. '          ' → logprob: -10.26768684387207
    10. '            ' → logprob: -11.14268684387207

Token 376: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11926104128360748
    2. '           ' → logprob: -2.7442610263824463
    3. 'return' (adapté à ' return') → logprob: -3.6192610263824463
    4. '       ' → logprob: -3.8692610263824463
    5. '```' → logprob: -8.369260787963867
    6. 'def' → logprob: -9.619260787963867
    7. '               ' → logprob: -10.119260787963867
    8. '     ' → logprob: -10.994260787963867
    9. '	return' → logprob: -10.994260787963867
    10. '         ' → logprob: -11.119260787963867

Token 377: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.00020461321400944144
    2. ' None' → logprob: -8.500205039978027
    3. '_none' → logprob: -14.375205039978027
    4. 'none' → logprob: -15.375205039978027
    5. 'null' → logprob: -16.00020408630371
    6. '_None' → logprob: -16.12520408630371
    7. '(None' → logprob: -17.00020408630371
    8. 'False' → logprob: -18.25020408630371
    9. '_NONE' → logprob: -18.50020408630371
    10. 'NULL' → logprob: -19.00020408630371

Token 378: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19387076795101166
    2. '           ' → logprob: -2.693870782852173
    3. 'def' → logprob: -2.693870782852173
    4. '```' → logprob: -3.443870782852173
    5. '       ' → logprob: -5.443870544433594
    6. 'return' → logprob: -5.818870544433594
    7. '               ' → logprob: -7.693870544433594
    8. '#' → logprob: -8.568870544433594
    9. '<|end|>' → logprob: -8.943870544433594
    10. '`' → logprob: -8.943870544433594

Token 379: 'def' (ID: 1314)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28855371475219727
    2. 'def' → logprob: -1.6635537147521973
    3. 'return' → logprob: -3.7885537147521973
    4. '           ' → logprob: -4.038553714752197
    5. '```' → logprob: -4.663553714752197
    6. '       ' → logprob: -5.163553714752197
    7. 'None' → logprob: -6.038553714752197
    8. '#' → logprob: -7.038553714752197
    9. 'D' → logprob: -7.413553714752197
    10. '               ' → logprob: -7.663553714752197

Token 380: ' convex' (ID: 142423)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.009085088036954403
    2. 'get' → logprob: -4.884085178375244
    3. 'calculate' → logprob: -8.134084701538086
    4. 'remove' → logprob: -8.259084701538086
    5. 'is' → logprob: -8.634084701538086
    6. 'generate' → logprob: -9.009084701538086
    7. 'process' → logprob: -9.259084701538086
    8. 'add' → logprob: -9.384084701538086
    9. ' find' → logprob: -9.509084701538086
    10. 'finish' → logprob: -10.134084701538086

Token 381: '_h' (ID: 3434)
  Prédit: '_h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_h' → logprob: -0.00044032474397681653
    2. '_polygon' → logprob: -8.87544059753418
    3. 'Hull' → logprob: -9.12544059753418
    4. ' Hull' → logprob: -9.75044059753418
    5. ' hull' → logprob: -10.00044059753418
    6. 'h' → logprob: -10.00044059753418
    7. '_shape' → logprob: -11.75044059753418
    8. '-h' → logprob: -12.00044059753418
    9. '_H' → logprob: -12.12544059753418
    10. '_chain' → logprob: -12.50044059753418

Token 382: 'ull' (ID: 754)
  Prédit: 'ull'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ull' → logprob: -2.7014437364414334e-05
    2. 'elper' → logprob: -10.75002670288086
    3. 'ulls' → logprob: -13.00002670288086
    4. 'ul' → logprob: -14.00002670288086
    5. 'elp' → logprob: -14.87502670288086
    6. 'ULL' → logprob: -15.00002670288086
    7. 'ulling' → logprob: -15.00002670288086
    8. 'ierarchy' → logprob: -15.37502670288086
    9. 'uller' → logprob: -15.62502670288086
    10. 'andler' → logprob: -16.00002670288086

Token 383: '_points' (ID: 30070)
  Prédit: '(D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(D' → logprob: -0.010285420343279839
    2. '(:' → logprob: -5.510285377502441
    3. '(' → logprob: -5.760285377502441
    4. '():' → logprob: -6.635285377502441
    5. '(_' → logprob: -7.385285377502441
    6. '(...' → logprob: -8.135285377502441
    7. '(_:' → logprob: -8.260285377502441
    8. '(':' → logprob: -9.135285377502441
    9. '(p' → logprob: -9.760285377502441
    10. '(":' → logprob: -9.885285377502441

Token 384: '(D' (ID: 9908)
  Prédit: '(D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(D' → logprob: -0.4076738655567169
    2. '():' → logprob: -1.4076738357543945
    3. '(:' → logprob: -2.5326738357543945
    4. '(' → logprob: -5.1576738357543945
    5. '(_:' → logprob: -6.2826738357543945
    6. '(':' → logprob: -7.4076738357543945
    7. '(":' → logprob: -7.5326738357543945
    8. '(_' → logprob: -7.7826738357543945
    9. '(...' → logprob: -8.282673835754395
    10. '(def' → logprob: -8.282673835754395

Token 385: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06870861351490021
    2. '):
' → logprob: -2.818708658218384
    3. '   ' → logprob: -5.818708419799805
    4. 'def' → logprob: -6.193708419799805
    5. '1' → logprob: -6.943708419799805
    6. ',' → logprob: -8.568708419799805
    7. '):

' → logprob: -8.568708419799805
    8. ':' → logprob: -8.693708419799805
    9. '(D' → logprob: -9.443708419799805
    10. ')' → logprob: -10.068708419799805

Token 386: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -5.200166469876422e-06
    2. 'def' → logprob: -13.125004768371582
    3. '  ' → logprob: -13.250004768371582
    4. 'pass' → logprob: -14.375004768371582
    5. 'return' → logprob: -15.500004768371582
    6. ' ' → logprob: -15.625004768371582
    7. '```' → logprob: -15.625004768371582
    8. 'D' → logprob: -16.0000057220459
    9. '    ' → logprob: -16.3750057220459
    10. '       ' → logprob: -16.8750057220459

Token 387: ' p' (ID: 275)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1446526050567627
    2. 'return' → logprob: -2.1446526050567627
    3. 'pass' → logprob: -4.394652366638184
    4. 'D' → logprob: -5.394652366638184
    5. 'points' → logprob: -7.894652366638184
    6. 'def' → logprob: -8.894652366638184
    7. '#' → logprob: -10.019652366638184
    8. '  ' → logprob: -10.394652366638184
    9. 'sorted' → logprob: -10.894652366638184
    10. 'result' → logprob: -11.269652366638184

Token 388: ' =' (ID: 314)
  Prédit: 'oints'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oints' → logprob: -0.5605910420417786
    2. 'def' → logprob: -1.9355909824371338
    3. 'oint' → logprob: -2.560590982437134
    4. '   ' → logprob: -2.685590982437134
    5. ' =' → logprob: -3.060590982437134
    6. '1' → logprob: -3.435590982437134
    7. '```' → logprob: -4.185591220855713
    8. '=' → logprob: -4.685591220855713
    9. 'olygon' → logprob: -5.060591220855713
    10. 'return' → logprob: -5.810591220855713

Token 389: ' p' (ID: 275)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'get' → logprob: -1.5213274309644476e-05
    2. 'D' → logprob: -11.125015258789062
    3. ' get' → logprob: -15.375015258789062
    4. '.get' → logprob: -17.625015258789062
    5. '	get' → logprob: -18.000015258789062
    6. 'None' → logprob: -18.250015258789062
    7. 'find' → logprob: -18.875015258789062
    8. 'remove' → logprob: -19.000015258789062
    9. '(get' → logprob: -19.000015258789062
    10. '   ' → logprob: -19.125015258789062

Token 390: '1' (ID: 16)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.796006977558136
    2. 'oints' → logprob: -1.0460069179534912
    3. 'oint' → logprob: -2.671006917953491
    4. '1' → logprob: -2.796006917953491
    5. '0' → logprob: -3.921006917953491
    6. 'D' → logprob: -4.67100715637207
    7. 'r' → logprob: -4.92100715637207
    8. '[' → logprob: -5.04600715637207
    9. '[]' → logprob: -5.42100715637207
    10. '```' → logprob: -5.67100715637207

Token 391: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1871994286775589
    2. '   ' → logprob: -2.437199354171753
    3. 'D' → logprob: -2.812199354171753
    4. 'def' → logprob: -4.437199592590332
    5. '1' → logprob: -5.437199592590332
    6. '#' → logprob: -6.312199592590332
    7. ' =' → logprob: -7.312199592590332
    8. ')' → logprob: -7.437199592590332
    9. ',D' → logprob: -7.437199592590332
    10. 'p' → logprob: -7.687199592590332

Token 392: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.0010830636601895094
    2. 'D' → logprob: -6.876082897186279
    3. 'None' → logprob: -10.001083374023438
    4. ' get' → logprob: -12.626083374023438
    5. '.get' → logprob: -14.501083374023438
    6. 'p' → logprob: -15.126083374023438
    7. '   ' → logprob: -15.751083374023438
    8. '	get' → logprob: -15.751083374023438
    9. '(get' → logprob: -16.126083374023438
    10. 'sorted' → logprob: -16.876083374023438

Token 393: '_first' (ID: 29347)
  Prédit: '_first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_first' → logprob: -0.0007034952868707478
    2. '_sorted' → logprob: -7.50070333480835
    3. '_copy' → logprob: -9.000703811645508
    4. '_input' → logprob: -10.750703811645508
    5. '_point' → logprob: -12.375703811645508
    6. 'First' → logprob: -14.500703811645508
    7. 'first' → logprob: -14.625703811645508
    8. '_FIRST' → logprob: -15.375703811645508
    9. '_points' → logprob: -16.875703811645508
    10. '第一' → logprob: -16.875703811645508

Token 394: '_point' (ID: 15466)
  Prédit: '_point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_point' → logprob: -0.0016381697496399283
    2. '_points' → logprob: -6.626637935638428
    3. '_def' → logprob: -9.001638412475586
    4. '_POINT' → logprob: -9.751638412475586
    5. 'Point' → logprob: -9.876638412475586
    6. 'def' → logprob: -10.876638412475586
    7. 'point' → logprob: -11.751638412475586
    8. '_line' → logprob: -11.751638412475586
    9. '_' → logprob: -11.876638412475586
    10. '_p' → logprob: -12.126638412475586

Token 395: '(D' (ID: 9908)
  Prédit: '(D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(D' → logprob: -0.0027686210814863443
    2. '()(' → logprob: -6.002768516540527
    3. '()' → logprob: -8.752768516540527
    4. '(' → logprob: -9.002768516540527
    5. '}(' → logprob: -14.127768516540527
    6. '()`' → logprob: -14.127768516540527
    7. '("("' → logprob: -14.377768516540527
    8. '(...)' → logprob: -14.627768516540527
    9. '((' → logprob: -14.627768516540527
    10. '(B' → logprob: -14.627768516540527

Token 396: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0031979158520698547
    2. ')
' → logprob: -5.753198146820068
    3. ')

' → logprob: -11.37819766998291
    4. '   ' → logprob: -12.75319766998291
    5. ')`' → logprob: -13.12819766998291
    6. 'D' → logprob: -13.50319766998291
    7. ')
' → logprob: -14.25319766998291
    8. ')#' → logprob: -14.75319766998291
    9. ').' → logprob: -15.12819766998291
    10. '))' → logprob: -15.37819766998291

Token 397: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013289296766743064
    2. 'D' → logprob: -6.626328945159912
    3. 'p' → logprob: -13.251328468322754
    4. '  ' → logprob: -14.001328468322754
    5. '       ' → logprob: -15.001328468322754
    6. '    ' → logprob: -16.12632942199707
    7. ' D' → logprob: -16.87632942199707
    8. ' ' → logprob: -17.37632942199707
    9. '	D' → logprob: -17.62632942199707
    10. 'return' → logprob: -17.75132942199707

Token 398: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' (adapté à ' D') → logprob: -0.13670995831489563
    2. '   ' → logprob: -2.1367099285125732
    3. 'p' → logprob: -4.636710166931152
    4. 'remove' → logprob: -10.261710166931152
    5. ' D' → logprob: -12.761710166931152
    6. '  ' → logprob: -13.136710166931152
    7. 'return' → logprob: -13.761710166931152
    8. 'remaining' → logprob: -14.636710166931152
    9. 'while' → logprob: -14.886710166931152
    10. '       ' → logprob: -15.011710166931152

Token 399: '1' (ID: 16)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8151718378067017
    2. '.remove' → logprob: -1.0651718378067017
    3. '.append' → logprob: -2.065171718597412
    4. '=' → logprob: -3.190171718597412
    5. '.sort' → logprob: -3.690171718597412
    6. '.pop' → logprob: -4.315171718597412
    7. '.copy' → logprob: -5.690171718597412
    8. '.' → logprob: -6.940171718597412
    9. '[:]' → logprob: -7.690171718597412
    10. '=[]' → logprob: -7.815171718597412

Token 400: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6715452671051025
    2. '=' → logprob: -1.2965452671051025
    3. '   ' → logprob: -1.5465452671051025
    4. '.append' → logprob: -7.296545028686523
    5. '=[]' → logprob: -7.921545028686523
    6. '.copy' → logprob: -8.046545028686523
    7. '  ' → logprob: -8.171545028686523
    8. '    ' → logprob: -8.796545028686523
    9. ' ' → logprob: -8.796545028686523
    10. '[:]' → logprob: -9.421545028686523

Token 401: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -1.0280383548888494e-06
    2. ' get' → logprob: -14.375000953674316
    3. '   ' → logprob: -15.625000953674316
    4. '	get' → logprob: -15.875000953674316
    5. 'remove' → logprob: -16.375001907348633
    6. '.get' → logprob: -17.375001907348633
    7. 'D' → logprob: -18.500001907348633
    8. '(get' → logprob: -19.125001907348633
    9. '[get' → logprob: -19.125001907348633
    10. '  ' → logprob: -21.000001907348633

Token 402: '_copy' (ID: 37283)
  Prédit: '_copy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_copy' → logprob: -0.07889066636562347
    2. '_sorted' → logprob: -2.578890562057495
    3. 'copy' → logprob: -15.078890800476074
    4. '_sort' → logprob: -15.703890800476074
    5. 'Copy' → logprob: -15.953890800476074
    6. '_COPY' → logprob: -16.078889846801758
    7. ' copy' → logprob: -17.078889846801758
    8. '.copy' → logprob: -17.203889846801758
    9. '_clean' → logprob: -17.203889846801758
    10. '_first' → logprob: -17.453889846801758

Token 403: '(D' (ID: 9908)
  Prédit: '(D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(D' → logprob: -0.00011677479778882116
    2. '(' → logprob: -9.250116348266602
    3. '()' → logprob: -12.875116348266602
    4. '()(' → logprob: -13.375116348266602
    5. '   ' → logprob: -13.500116348266602
    6. '(
' → logprob: -13.625116348266602
    7. '(M' → logprob: -13.937616348266602
    8. '(P' → logprob: -13.937616348266602
    9. '(B' → logprob: -14.062616348266602
    10. 'D' → logprob: -14.062616348266602

Token 404: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00039623770862817764
    2. ')
' → logprob: -7.875396251678467
    3. ')

' → logprob: -11.125395774841309
    4. ').' → logprob: -14.625395774841309
    5. '1' → logprob: -14.875395774841309
    6. ')[' → logprob: -15.875395774841309
    7. '))' → logprob: -16.000396728515625
    8. ')`' → logprob: -16.375396728515625
    9. '[' → logprob: -17.000396728515625
    10. ')
' → logprob: -17.125396728515625

Token 405: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1279553291387856e-05
    2. 'D' → logprob: -11.500011444091797
    3. 'remove' → logprob: -14.875011444091797
    4. '  ' → logprob: -15.000011444091797
    5. 'p' → logprob: -15.250011444091797
    6. '       ' → logprob: -15.875011444091797
    7. '    ' → logprob: -17.250011444091797
    8. ' ' → logprob: -18.625011444091797
    9. ' D' → logprob: -19.125011444091797
    10. '    
' → logprob: -19.250011444091797

Token 406: ' while' (ID: 2049)
  Prédit: 'remove'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'remove' → logprob: -0.03804631531238556
    2. '   ' → logprob: -3.288046360015869
    3. 'D' → logprob: -12.913045883178711
    4. ' remove' → logprob: -13.913045883178711
    5. 'rem' → logprob: -14.413045883178711
    6. '	remove' → logprob: -14.663045883178711
    7. '.remove' → logprob: -15.288045883178711
    8. 'Remove' → logprob: -16.03804588317871
    9. '  ' → logprob: -16.91304588317871
    10. 'p' → logprob: -17.16304588317871

Token 407: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.7548279166221619
    2. 'D' → logprob: -1.8798279762268066
    3. '   ' → logprob: -2.0048279762268066
    4. ':' → logprob: -2.6298279762268066
    5. ' True' → logprob: -2.6298279762268066
    6. ' D' → logprob: -3.2548279762268066
    7. 'p' → logprob: -4.254827976226807
    8. '(' → logprob: -4.629827976226807
    9. ' p' → logprob: -4.629827976226807
    10. ' ' → logprob: -5.004827976226807

Token 408: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0014735567383468151
    2. ':
' → logprob: -6.626473426818848
    3. '   ' → logprob: -9.126473426818848
    4. ':`' → logprob: -11.126473426818848
    5. ':

' → logprob: -11.751473426818848
    6. ':\' → logprob: -12.001473426818848
    7. ':def' → logprob: -13.001473426818848
    8. ':**' → logprob: -13.376473426818848
    9. '::' → logprob: -13.751473426818848
    10. '       ' → logprob: -14.001473426818848

Token 409: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00021224225929472595
    2. '   ' → logprob: -9.000212669372559
    3. 'p' → logprob: -9.625212669372559
    4. '     ' → logprob: -11.375212669372559
    5. '      ' → logprob: -12.125212669372559
    6. '```' → logprob: -13.375212669372559
    7. 'if' → logprob: -13.750212669372559
    8. '        ' → logprob: -13.750212669372559
    9. '    ' → logprob: -14.000212669372559
    10. '  ' → logprob: -15.250212669372559

Token 410: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.016186513006687164
    2. '       ' → logprob: -4.141186714172363
    3. '           ' → logprob: -9.391186714172363
    4. '   ' → logprob: -10.141186714172363
    5. ' p' → logprob: -11.641186714172363
    6. 'find' → logprob: -11.766186714172363
    7. 'D' → logprob: -12.266186714172363
    8. 'next' → logprob: -12.891186714172363
    9. '     ' → logprob: -13.766186714172363
    10. '        ' → logprob: -14.141186714172363

Token 411: '2' (ID: 17)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4681459665298462
    2. '=' → logprob: -1.9681459665298462
    3. '1' → logprob: -2.0931458473205566
    4. 'D' → logprob: -2.5931458473205566
    5. '=p' → logprob: -4.593145847320557
    6. '2' → logprob: -4.718145847320557
    7. '   ' → logprob: -5.093145847320557
    8. 'p' → logprob: -6.093145847320557
    9. '=D' → logprob: -6.093145847320557
    10. 'def' → logprob: -6.843145847320557

Token 412: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4973278045654297
    2. '=' → logprob: -1.3723278045654297
    3. '   ' → logprob: -2.1223278045654297
    4. ':' → logprob: -4.12232780456543
    5. '       ' → logprob: -6.99732780456543
    6. '=None' → logprob: -8.37232780456543
    7. 'D' → logprob: -8.49732780456543
    8. '=p' → logprob: -8.49732780456543
    9. '=D' → logprob: -8.87232780456543
    10. '  ' → logprob: -9.12232780456543

Token 413: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -1.5048530030981055e-06
    2. ' find' → logprob: -13.500001907348633
    3. 'get' → logprob: -17.125001907348633
    4. '	find' → logprob: -18.000001907348633
    5. '.find' → logprob: -19.000001907348633
    6. '   ' → logprob: -21.375001907348633
    7. '(find' → logprob: -21.625001907348633
    8. '_find' → logprob: -22.000001907348633
    9. 'finding' → logprob: -22.250001907348633
    10. 'found' → logprob: -22.250001907348633

Token 414: '_next' (ID: 25436)
  Prédit: '_next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -0.0002036595979006961
    2. 'Next' → logprob: -9.625204086303711
    3. '_NEXT' → logprob: -10.125204086303711
    4. 'next' → logprob: -10.500204086303711
    5. '_n' → logprob: -10.750204086303711
    6. '_ne' → logprob: -11.125204086303711
    7. ' Next' → logprob: -11.875204086303711
    8. '_' → logprob: -12.125204086303711
    9. '_point' → logprob: -12.375204086303711
    10. '.next' → logprob: -13.250204086303711

Token 415: '_point' (ID: 15466)
  Prédit: '_point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_point' → logprob: -0.0024557956494390965
    2. '_token' → logprob: -6.377455711364746
    3. '       ' → logprob: -7.752455711364746
    4. '_POINT' → logprob: -8.752455711364746
    5. '_points' → logprob: -10.127455711364746
    6. 'Point' → logprob: -11.002455711364746
    7. '_p' → logprob: -11.252455711364746
    8. '   ' → logprob: -11.377455711364746
    9. 'point' → logprob: -11.627455711364746
    10. '_' → logprob: -11.627455711364746

Token 416: '(D' (ID: 9908)
  Prédit: '(D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(D' → logprob: -5.9153885558771435e-06
    2. '(' → logprob: -12.125005722045898
    3. ' (' → logprob: -16.3750057220459
    4. '(
' → logprob: -16.5000057220459
    5. '   ' → logprob: -17.1250057220459
    6. '((' → logprob: -17.5000057220459
    7. '(B' → logprob: -17.5000057220459
    8. '(F' → logprob: -17.5000057220459
    9. '(L' → logprob: -17.8750057220459
    10. '(`' → logprob: -18.0000057220459

Token 417: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7120533811976202e-05
    2. 'D' → logprob: -11.000017166137695
    3. ')' → logprob: -15.250017166137695
    4. ' D' → logprob: -17.125017166137695
    5. '   ' → logprob: -17.375017166137695
    6. '2' → logprob: -18.625017166137695
    7. '       ' → logprob: -19.375017166137695
    8. ' ' → logprob: -19.500017166137695
    9. '１' → logprob: -19.500017166137695
    10. ',' → logprob: -19.875017166137695

Token 418: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.008129963040119e-06
    2. ',D' → logprob: -12.500003814697266
    3. ',p' → logprob: -16.000003814697266
    4. '   ' → logprob: -16.500003814697266
    5. ' ,' → logprob: -17.000003814697266
    6. '),' → logprob: -17.125003814697266
    7. ')' → logprob: -18.125003814697266
    8. 'D' → logprob: -18.250003814697266
    9. '，' → logprob: -18.500003814697266
    10. '`,' → logprob: -18.875003814697266

Token 419: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -6.704273118884885e-07
    2. ' p' → logprob: -14.375000953674316
    3. '	p' → logprob: -19.75
    4. '   ' → logprob: -21.875
    5. '<p' → logprob: -22.25
    6. '(p' → logprob: -23.375
    7. ' п' → logprob: -23.375
    8. '       ' → logprob: -24.25
    9. '.p' → logprob: -24.375
    10. '$p' → logprob: -24.375

Token 420: '1' (ID: 16)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004202694166451693
    2. '1' → logprob: -5.754202842712402
    3. 'p' → logprob: -7.254202842712402
    4. ',p' → logprob: -8.254202842712402
    5. ')' → logprob: -10.379202842712402
    6. '   ' → logprob: -11.754202842712402
    7. ' p' → logprob: -12.129202842712402
    8. '),' → logprob: -13.129202842712402
    9. '[p' → logprob: -13.379202842712402
    10. ')p' → logprob: -13.379202842712402

Token 421: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.7252845029579476e-05
    2. ',p' → logprob: -10.875027656555176
    3. '),' → logprob: -12.500027656555176
    4. ')' → logprob: -12.875027656555176
    5. '   ' → logprob: -13.875027656555176
    6. ',)' → logprob: -14.875027656555176
    7. ' ,' → logprob: -15.125027656555176
    8. '`,' → logprob: -16.00002670288086
    9. '       ' → logprob: -16.37502670288086
    10. '           ' → logprob: -17.62502670288086

Token 422: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -1.723973582556937e-05
    2. 'p' → logprob: -11.000017166137695
    3. ' D' → logprob: -14.625017166137695
    4. ' p' → logprob: -20.875017166137695
    5. '   ' → logprob: -22.000017166137695
    6. '	D' → logprob: -22.125017166137695
    7. 'P' → logprob: -23.250017166137695
    8. 'Д' → logprob: -23.250017166137695
    9. '       ' → logprob: -24.250017166137695
    10. '  ' → logprob: -24.500017166137695

Token 423: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.28185421228408813
    2. '):' → logprob: -1.5318541526794434
    3. '):
' → logprob: -3.5318541526794434
    4. '1' → logprob: -9.281854629516602
    5. ')
' → logprob: -9.281854629516602
    6. '):

' → logprob: -10.781854629516602
    7. '):
' → logprob: -11.781854629516602
    8. ').' → logprob: -12.906854629516602
    9. ')：' → logprob: -13.281854629516602
    10. '   ' → logprob: -13.406854629516602

Token 424: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.824579784530215e-05
    2. '           ' → logprob: -9.8750581741333
    3. '   ' → logprob: -12.0000581741333
    4. '        
' → logprob: -16.000059127807617
    5. '      ' → logprob: -16.375059127807617
    6. 'if' → logprob: -16.500059127807617
    7. '        ' → logprob: -16.500059127807617
    8. '               ' → logprob: -16.750059127807617
    9. '     ' → logprob: -17.000059127807617
    10. '         ' → logprob: -17.625059127807617

Token 425: ' p' (ID: 275)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.04871079698204994
    2. '       ' → logprob: -3.048710823059082
    3. 'p' (adapté à ' p') → logprob: -9.048710823059082
    4. '   ' → logprob: -13.423710823059082
    5. '           ' → logprob: -13.548710823059082
    6. ' if' → logprob: -13.548710823059082
    7. 'print' → logprob: -14.548710823059082
    8. 'D' → logprob: -15.173710823059082
    9. 'return' → logprob: -15.423710823059082
    10. '      ' → logprob: -15.548710823059082

Token 426: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0007222028798423707
    2. '1' → logprob: -8.00072193145752
    3. 'p' → logprob: -8.87572193145752
    4. '=' → logprob: -9.12572193145752
    5. ' =' → logprob: -9.50072193145752
    6. '   ' → logprob: -10.25072193145752
    7. '=p' → logprob: -11.75072193145752
    8. '       ' → logprob: -12.37572193145752
    9. '```' → logprob: -13.00072193145752
    10. '3' → logprob: -13.00072193145752

Token 427: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7721418142318726
    2. ' =' → logprob: -0.8971418142318726
    3. '   ' → logprob: -2.272141933441162
    4. '=p' → logprob: -4.897141933441162
    5. '=None' → logprob: -5.272141933441162
    6. '       ' → logprob: -5.397141933441162
    7. ':' → logprob: -6.022141933441162
    8. '+=' → logprob: -6.897141933441162
    9. '.append' → logprob: -7.272141933441162
    10. '2' → logprob: -7.522141933441162

Token 428: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.1472419600977446e-06
    2. ' p' → logprob: -13.750000953674316
    3. 'get' → logprob: -17.125001907348633
    4. 'None' → logprob: -19.125001907348633
    5. '	p' → logprob: -19.500001907348633
    6. '(p' → logprob: -20.000001907348633
    7. '   ' → logprob: -20.375001907348633
    8. '<p' → logprob: -20.500001907348633
    9. 'copy' → logprob: -20.875001907348633
    10. ' п' → logprob: -22.000001907348633

Token 429: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.1336614042520523
    2. 'D' → logprob: -2.1336615085601807
    3. '1' → logprob: -6.008661270141602
    4. 'p' → logprob: -6.633661270141602
    5. '   ' → logprob: -6.883661270141602
    6. '       ' → logprob: -7.133661270141602
    7. ' D' → logprob: -7.883661270141602
    8. '[' → logprob: -8.383661270141602
    9. '```' → logprob: -9.383661270141602
    10. '.copy' → logprob: -10.133661270141602

Token 430: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.52788148727268e-05
    2. '   ' → logprob: -10.000064849853516
    3. 'if' → logprob: -12.125064849853516
    4. '        
' → logprob: -12.250064849853516
    5. '
' → logprob: -12.375064849853516
    6. '           ' → logprob: -12.500064849853516
    7. '     ' → logprob: -14.125064849853516
    8. '      ' → logprob: -15.125064849853516
    9. '        ' → logprob: -16.000064849853516
    10. '               ' → logprob: -16.500064849853516

Token 431: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.2842308680992573e-05
    2. '   ' → logprob: -10.875022888183594
    3. '           ' → logprob: -13.125022888183594
    4. 'if' → logprob: -13.750022888183594
    5. '      ' → logprob: -14.875022888183594
    6. '     ' → logprob: -15.250022888183594
    7. '        ' → logprob: -16.000022888183594
    8. '               ' → logprob: -16.750022888183594
    9. 'def' → logprob: -17.375022888183594
    10. '         ' → logprob: -17.625022888183594

Token 432: ' remove' (ID: 6234)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.038149937987327576
    2. '       ' → logprob: -3.288149833679199
    3. 'D' → logprob: -9.5381498336792
    4. 'p' → logprob: -10.9131498336792
    5. '   ' → logprob: -11.9131498336792
    6. ' if' → logprob: -12.4131498336792
    7. 'return' → logprob: -13.4131498336792
    8. 'If' → logprob: -13.5381498336792
    9. 'while' → logprob: -13.7881498336792
    10. 'assert' → logprob: -14.1631498336792

Token 433: '_point' (ID: 15466)
  Prédit: '_point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_point' → logprob: -2.0339031834737398e-05
    2. '_POINT' → logprob: -11.500020027160645
    3. '_points' → logprob: -12.875020027160645
    4. 'Point' → logprob: -13.250020027160645
    5. 'point' → logprob: -13.500020027160645
    6. '_Point' → logprob: -13.500020027160645
    7. '   ' → logprob: -15.000020027160645
    8. ' point' → logprob: -15.125020027160645
    9. '\' → logprob: -15.500020027160645
    10. '_' → logprob: -15.500020027160645

Token 434: '(D' (ID: 9908)
  Prédit: '(D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(D' → logprob: -2.45848218582978e-06
    2. '(' → logprob: -13.25000286102295
    3. '(F' → logprob: -16.875001907348633
    4. '(B' → logprob: -16.875001907348633
    5. '(E' → logprob: -16.875001907348633
    6. '(L' → logprob: -17.125001907348633
    7. '(P' → logprob: -17.125001907348633
    8. '(C' → logprob: -17.250001907348633
    9. '(S' → logprob: -17.250001907348633
    10. ' (' → logprob: -17.250001907348633

Token 435: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08156128972768784
    2. ')' → logprob: -2.581561326980591
    3. 'D' → logprob: -6.081561088562012
    4. '   ' → logprob: -8.831561088562012
    5. ')`' → logprob: -9.706561088562012
    6. '```' → logprob: -10.331561088562012
    7. 'I' → logprob: -10.456561088562012
    8. ')
' → logprob: -10.581561088562012
    9. ')p' → logprob: -10.581561088562012
    10. ').' → logprob: -11.581561088562012

Token 436: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000510260637383908
    2. ')
' → logprob: -7.875510215759277
    3. ',' → logprob: -9.625510215759277
    4. '   ' → logprob: -11.000510215759277
    5. ')

' → logprob: -11.000510215759277
    6. '       ' → logprob: -11.250510215759277
    7. ')`' → logprob: -11.500510215759277
    8. ')
' → logprob: -13.500510215759277
    9. ',)' → logprob: -14.250510215759277
    10. '           ' → logprob: -14.375510215759277

Token 437: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.9361264946837764e-07
    2. ' p' → logprob: -16.125
    3. '(p' → logprob: -22.25
    4. '<p' → logprob: -22.25
    5. '	p' → logprob: -22.375
    6. '       ' → logprob: -22.5
    7. ')p' → logprob: -23.0
    8. '$p' → logprob: -23.5
    9. '.p' → logprob: -24.75
    10. 'pp' → logprob: -24.75

Token 438: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.25222352147102356
    2. '1' → logprob: -1.5022234916687012
    3. ')' → logprob: -8.37722396850586
    4. 'p' → logprob: -9.75222396850586
    5. '```' → logprob: -13.25222396850586
    6. '   ' → logprob: -13.37722396850586
    7. ')p' → logprob: -14.00222396850586
    8. ')`' → logprob: -14.75222396850586
    9. ' ' → logprob: -15.00222396850586
    10. ')
' → logprob: -15.50222396850586

Token 439: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004546184558421373
    2. '       ' → logprob: -5.754546165466309
    3. ')
' → logprob: -6.629546165466309
    4. '   ' → logprob: -11.129546165466309
    5. '           ' → logprob: -11.504546165466309
    6. ')

' → logprob: -12.004546165466309
    7. '```' → logprob: -12.379546165466309
    8. '     ' → logprob: -12.754546165466309
    9. ')`' → logprob: -12.879546165466309
    10. '`)' → logprob: -13.004546165466309

Token 440: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.860340752406046e-05
    2. '           ' → logprob: -10.5000581741333
    3. '   ' → logprob: -10.5000581741333
    4. '      ' → logprob: -14.0000581741333
    5. '        ' → logprob: -14.2500581741333
    6. 'def' → logprob: -14.5000581741333
    7. '     ' → logprob: -14.5000581741333
    8. '               ' → logprob: -14.6250581741333
    9. '         ' → logprob: -15.7500581741333
    10. '```' → logprob: -15.7500581741333

Token 441: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.25224804878234863
    2. '       ' → logprob: -1.5022480487823486
    3. 'p' → logprob: -8.37724781036377
    4. '   ' → logprob: -10.37724781036377
    5. 'return' → logprob: -10.50224781036377
    6. ' if' → logprob: -11.75224781036377
    7. 'D' → logprob: -11.87724781036377
    8. '      ' → logprob: -12.50224781036377
    9. '     ' → logprob: -12.62724781036377
    10. 'If' → logprob: -13.00224781036377

Token 442: ' is' (ID: 382)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0011239065788686275
    2. 'not' → logprob: -7.251123905181885
    3. 'is' → logprob: -8.376124382019043
    4. ' p' → logprob: -8.751124382019043
    5. '   ' → logprob: -11.126124382019043
    6. '       ' → logprob: -12.626124382019043
    7. '     ' → logprob: -13.626124382019043
    8. '    ' → logprob: -13.626124382019043
    9. '(p' → logprob: -14.001124382019043
    10. 'side' → logprob: -14.251124382019043

Token 443: '_same' (ID: 83787)
  Prédit: '_zero'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_zero' → logprob: -0.08541840314865112
    2. '_none' → logprob: -2.960418462753296
    3. '_same' → logprob: -3.585418462753296
    4. '_empty' → logprob: -6.460418224334717
    5. '_equal' → logprob: -9.085418701171875
    6. '_done' → logprob: -9.210418701171875
    7. '_end' → logprob: -9.710418701171875
    8. 'None' → logprob: -9.710418701171875
    9. '_exit' → logprob: -9.960418701171875
    10. 'zero' → logprob: -9.960418701171875

Token 444: '_point' (ID: 15466)
  Prédit: '_point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_point' → logprob: -0.00047940885997377336
    2. '_POINT' → logprob: -8.000479698181152
    3. '_points' → logprob: -9.875479698181152
    4. 'Point' → logprob: -11.375479698181152
    5. ' Point' → logprob: -11.500479698181152
    6. '_Point' → logprob: -11.500479698181152
    7. '_line' → logprob: -11.625479698181152
    8. '_token' → logprob: -12.125479698181152
    9. '```' → logprob: -12.125479698181152
    10. '_pointer' → logprob: -12.125479698181152

Token 445: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -1.7432603272027336e-06
    2. '(' → logprob: -13.625001907348633
    3. '(D' → logprob: -14.875001907348633
    4. '(d' → logprob: -16.875001907348633
    5. '(m' → logprob: -18.250001907348633
    6. '(c' → logprob: -18.375001907348633
    7. '(`' → logprob: -18.500001907348633
    8. '(pp' → logprob: -18.500001907348633
    9. '(P' → logprob: -18.750001907348633
    10. '(b' → logprob: -19.125001907348633

Token 446: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10022176057100296
    2. '2' → logprob: -2.350221872329712
    3. 'p' → logprob: -11.350221633911133
    4. '```' → logprob: -13.100221633911133
    5. 'i' → logprob: -14.975221633911133
    6. '`' → logprob: -15.850221633911133
    7. '``' → logprob: -15.850221633911133
    8. '１' → logprob: -16.100221633911133
    9. '(p' → logprob: -16.100221633911133
    10. '3' → logprob: -16.475221633911133

Token 447: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.320199877838604e-07
    2. ',p' → logprob: -16.0
    3. '`,' → logprob: -16.5
    4. ',None' → logprob: -16.75
    5. '),' → logprob: -17.75
    6. ' ,' → logprob: -17.875
    7. '   ' → logprob: -18.5
    8. '=None' → logprob: -18.75
    9. '،' → logprob: -18.875
    10. '',' → logprob: -18.875

Token 448: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.1472419600977446e-06
    2. 'get' → logprob: -14.375000953674316
    3. 'D' → logprob: -15.250000953674316
    4. ' p' → logprob: -15.750000953674316
    5. '   ' → logprob: -17.375001907348633
    6. 'None' → logprob: -18.375001907348633
    7. '<p' → logprob: -19.000001907348633
    8. '           ' → logprob: -19.250001907348633
    9. '               ' → logprob: -19.500001907348633
    10. '	p' → logprob: -19.625001907348633

Token 449: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5344120860099792
    2. '1' → logprob: -1.034412145614624
    3. '):
' → logprob: -3.534412145614624
    4. ')' → logprob: -3.784412145614624
    5. '[' → logprob: -5.659411907196045
    6. 'p' → logprob: -7.034411907196045
    7. '):

' → logprob: -7.659411907196045
    8. '):
' → logprob: -7.784411907196045
    9. ')):' → logprob: -8.284412384033203
    10. '```' → logprob: -8.909412384033203

Token 450: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.8219583075260743e-05
    2. '       ' → logprob: -10.750038146972656
    3. '               ' → logprob: -12.000038146972656
    4. '         ' → logprob: -12.500038146972656
    5. '   ' → logprob: -13.250038146972656
    6. '          ' → logprob: -13.500038146972656
    7. 'break' → logprob: -13.625038146972656
    8. 'return' → logprob: -13.875038146972656
    9. '            ' → logprob: -14.625038146972656
    10. '		' → logprob: -14.750038146972656

Token 451: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.25718194246292114
    2. '           ' → logprob: -1.5071818828582764
    3. 'return' → logprob: -5.2571821212768555
    4. ' break' → logprob: -11.007182121276855
    5. '               ' → logprob: -12.132182121276855
    6. '       ' → logprob: -12.882182121276855
    7. 'print' → logprob: -13.507182121276855
    8. 'breaking' → logprob: -14.257182121276855
    9. '         ' → logprob: -15.007182121276855
    10. '   ' → logprob: -15.132182121276855

Token 452: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03131755813956261
    2. '   ' → logprob: -3.5313174724578857
    3. '           ' → logprob: -6.656317710876465
    4. 'return' → logprob: -8.906317710876465
    5. '```' → logprob: -9.781317710876465
    6. '               ' → logprob: -11.281317710876465
    7. '     ' → logprob: -11.281317710876465
    8. 'def' → logprob: -11.781317710876465
    9. '      ' → logprob: -11.781317710876465
    10. '        ' → logprob: -11.781317710876465

Token 453: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16081948578357697
    2. '   ' → logprob: -1.9108195304870605
    3. '           ' → logprob: -7.7858195304870605
    4. 'return' → logprob: -9.410819053649902
    5. '```' → logprob: -10.285819053649902
    6. 'def' → logprob: -10.660819053649902
    7. '     ' → logprob: -11.660819053649902
    8. '               ' → logprob: -12.035819053649902
    9. '      ' → logprob: -12.785819053649902
    10. '        ' → logprob: -12.785819053649902

Token 454: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.6722279787063599
    2. '   ' → logprob: -0.9222279787063599
    3. '       ' → logprob: -2.4222278594970703
    4. '```' → logprob: -6.17222785949707
    5. '           ' → logprob: -7.92222785949707
    6. ' return' → logprob: -8.67222785949707
    7. 'p' → logprob: -8.79722785949707
    8. 'Return' → logprob: -10.04722785949707
    9. '`' → logprob: -10.29722785949707
    10. 'D' → logprob: -10.42222785949707

Token 455: ' len' (ID: 4631)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.2745746076107025
    2. 'p' → logprob: -1.649574637413025
    3. '[]' → logprob: -3.1495745182037354
    4. '<|end|>' → logprob: -6.2745747566223145
    5. 'None' → logprob: -6.6495747566223145
    6. '[p' → logprob: -7.7745747566223145
    7. ' D' → logprob: -8.024574279785156
    8. ' p' → logprob: -8.524574279785156
    9. 'list' → logprob: -8.774574279785156
    10. 'get' → logprob: -8.774574279785156

Token 456: '(D' (ID: 9908)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.04975211247801781
    2. '_' → logprob: -4.174752235412598
    3. 'def' → logprob: -4.924752235412598
    4. '_points' → logprob: -5.424752235412598
    5. '(_)' → logprob: -5.549752235412598
    6. '_def' → logprob: -5.924752235412598
    7. '```' → logprob: -6.049752235412598
    8. '   ' → logprob: -6.299752235412598
    9. '<|end|>' → logprob: -6.924752235412598
    10. '()`' → logprob: -6.924752235412598

Token 457: '1' (ID: 16)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.500108141452074e-05
    2. ')`' → logprob: -11.250035285949707
    3. ')
' → logprob: -11.625035285949707
    4. '))' → logprob: -12.125035285949707
    5. '),' → logprob: -13.500035285949707
    6. ')

' → logprob: -13.625035285949707
    7. '):' → logprob: -13.750035285949707
    8. ')**' → logprob: -14.250035285949707
    9. '）' → logprob: -14.750035285949707
    10. ')}' → logprob: -14.875035285949707

Token 458: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.771655115589965e-05
    2. ')`' → logprob: -11.500018119812012
    3. '))' → logprob: -12.750018119812012
    4. ')
' → logprob: -13.250018119812012
    5. ')-' → logprob: -13.625018119812012
    6. ')

' → logprob: -15.000018119812012
    7. ').' → logprob: -15.500018119812012
    8. '）' → logprob: -15.625018119812012
    9. '),' → logprob: -15.625018119812012
    10. ')}' → logprob: -15.875018119812012

Token 459: 'def' (ID: 1314)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4582633078098297
    2. '0' → logprob: -1.5832632780075073
    3. '```' → logprob: -2.833263397216797
    4. 'return' → logprob: -3.083263397216797
    5. 'len' → logprob: -3.083263397216797
    6. '`' → logprob: -6.208263397216797
    7. 'None' → logprob: -6.208263397216797
    8. '       ' → logprob: -6.958263397216797
    9. 'Return' → logprob: -7.208263397216797
    10. 'def' → logprob: -7.333263397216797

Token 460: ' main' (ID: 2758)
  Prédit: 'conv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'conv' → logprob: -0.0003322473494336009
    2. 'calculate' → logprob: -8.50033187866211
    3. 'get' → logprob: -9.50033187866211
    4. ' convex' → logprob: -10.25033187866211
    5. 'convert' → logprob: -12.50033187866211
    6. 'conc' → logprob: -12.75033187866211
    7. 'find' → logprob: -12.75033187866211
    8. 'count' → logprob: -13.00033187866211
    9. 'calc' → logprob: -13.37533187866211
    10. 'compute' → logprob: -13.87533187866211

Token 461: '_loop' (ID: 40621)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00012976066500414163
    2. '()' → logprob: -9.375129699707031
    3. '(:' → logprob: -11.000129699707031
    4. ':' → logprob: -11.625129699707031
    5. ' ():' → logprob: -11.750129699707031
    6. '():
' → logprob: -12.000129699707031
    7. '(":' → logprob: -13.500129699707031
    8. '(':' → logprob: -14.125129699707031
    9. 'def' → logprob: -14.375129699707031
    10. '(' → logprob: -15.000129699707031

Token 462: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00016361083544325083
    2. ':' → logprob: -9.750164031982422
    3. '():
' → logprob: -9.875164031982422
    4. '()' → logprob: -10.250164031982422
    5. '   ' → logprob: -11.750164031982422
    6. ' ():' → logprob: -12.500164031982422
    7. 'def' → logprob: -12.875164031982422
    8. '(:' → logprob: -13.125164031982422
    9. ':def' → logprob: -14.625164031982422
    10. '(' → logprob: -14.750164031982422

Token 463: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -7.703443770878948e-06
    2. '  ' → logprob: -12.125007629394531
    3. 'pass' → logprob: -13.500007629394531
    4. '```' → logprob: -14.875007629394531
    5. '    ' → logprob: -15.375007629394531
    6. ' ' → logprob: -15.500007629394531
    7. 'if' → logprob: -16.87500762939453
    8. 'print' → logprob: -17.12500762939453
    9. 'return' → logprob: -17.75000762939453
    10. '       ' → logprob: -17.87500762939453

Token 464: ' while' (ID: 2049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10390191525220871
    2. 'n' → logprob: -2.3539018630981445
    3. 'D' → logprob: -5.8539018630981445
    4. 'pass' → logprob: -7.4789018630981445
    5. 'get' → logprob: -9.228901863098145
    6. 'if' → logprob: -9.728901863098145
    7. 'return' → logprob: -10.853901863098145
    8. 'input' → logprob: -10.978901863098145
    9. 'def' → logprob: -11.978901863098145
    10. '  ' → logprob: -11.978901863098145

Token 465: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.00881121214479208
    2. ' True' → logprob: -4.758810997009277
    3. '   ' → logprob: -8.633810997009277
    4. 'true' → logprob: -11.883810997009277
    5. '(True' → logprob: -11.883810997009277
    6. 'not' → logprob: -13.508810997009277
    7. '       ' → logprob: -13.633810997009277
    8. ' ' → logprob: -14.758810997009277
    9. 'input' → logprob: -14.758810997009277
    10. '  ' → logprob: -15.008810997009277

Token 466: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006359508261084557
    2. ':
' → logprob: -7.750636100769043
    3. '   ' → logprob: -8.750636100769043
    4. ':`' → logprob: -11.250636100769043
    5. ':\' → logprob: -11.375636100769043
    6. ':

' → logprob: -12.125636100769043
    7. '::' → logprob: -12.750636100769043
    8. ':def' → logprob: -12.750636100769043
    9. ':**' → logprob: -12.875636100769043
    10. '():' → logprob: -13.250636100769043

Token 467: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001294030516874045
    2. '   ' → logprob: -9.000129699707031
    3. '     ' → logprob: -12.750129699707031
    4. '      ' → logprob: -13.250129699707031
    5. '        ' → logprob: -14.375129699707031
    6. '    ' → logprob: -15.375129699707031
    7. '           ' → logprob: -16.00012969970703
    8. '  ' → logprob: -16.25012969970703
    9. '```' → logprob: -16.50012969970703
    10. 'pass' → logprob: -16.62512969970703

Token 468: ' n' (ID: 297)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.28969159722328186
    2. '       ' → logprob: -1.5396915674209595
    3. '   ' → logprob: -3.664691686630249
    4. 'n' (adapté à ' n') → logprob: -5.03969144821167
    5. 'return' → logprob: -6.53969144821167
    6. 'print' → logprob: -6.91469144821167
    7. 'if' → logprob: -7.28969144821167
    8. 'pass' → logprob: -7.53969144821167
    9. 'input' → logprob: -7.91469144821167
    10. 'get' → logprob: -8.539691925048828

Token 469: ' =' (ID: 314)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.034421712160110474
    2. ' =' → logprob: -3.909421682357788
    3. '       ' → logprob: -5.284421920776367
    4. '   ' → logprob: -5.409421920776367
    5. '=' → logprob: -5.784421920776367
    6. ':int' → logprob: -7.284421920776367
    7. ':
' → logprob: -8.534421920776367
    8. '           ' → logprob: -9.659421920776367
    9. '=int' → logprob: -10.409421920776367
    10. '     ' → logprob: -11.034421920776367

Token 470: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.04866946488618851
    2. 'int' → logprob: -3.0486695766448975
    3. '       ' → logprob: -9.923669815063477
    4. ' get' → logprob: -11.173669815063477
    5. ' int' → logprob: -11.173669815063477
    6. 'convert' → logprob: -13.173669815063477
    7. '   ' → logprob: -13.673669815063477
    8. '.get' → logprob: -14.548669815063477
    9. 'sys' → logprob: -14.548669815063477
    10. 'input' → logprob: -15.298669815063477

Token 471: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -3.833878508885391e-05
    2. 'input' → logprob: -10.250038146972656
    3. '_INPUT' → logprob: -13.375038146972656
    4. 'Input' → logprob: -15.750038146972656
    5. '输入' → logprob: -15.750038146972656
    6. '_output' → logprob: -15.750038146972656
    7. ' input' → logprob: -15.750038146972656
    8. '_inputs' → logprob: -15.750038146972656
    9. '	input' → logprob: -16.375038146972656
    10. '-input' → logprob: -16.625038146972656

Token 472: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00046808819752186537
    2. '().' → logprob: -7.7504682540893555
    3. '()`' → logprob: -10.500468254089355
    4. '()
' → logprob: -13.125468254089355
    5. '()\' → logprob: -13.250468254089355
    6. '())' → logprob: -13.500468254089355
    7. '()(' → logprob: -14.125468254089355
    8. '(' → logprob: -14.250468254089355
    9. '()

' → logprob: -14.750468254089355
    10. ']()' → logprob: -14.750468254089355

Token 473: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02329287678003311
    2. '   ' → logprob: -3.7732927799224854
    3. 'n' → logprob: -10.148292541503906
    4. '           ' → logprob: -12.898292541503906
    5. '     ' → logprob: -13.523292541503906
    6. '      ' → logprob: -13.648292541503906
    7. '    ' → logprob: -14.148292541503906
    8. '        ' → logprob: -14.398292541503906
    9. '  ' → logprob: -14.773292541503906
    10. '	' → logprob: -14.898292541503906

Token 474: ' n' (ID: 297)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02327227033674717
    2. 'n' (adapté à ' n') → logprob: -3.7732722759246826
    3. '   ' → logprob: -10.773272514343262
    4. '           ' → logprob: -12.898272514343262
    5. '     ' → logprob: -14.148272514343262
    6. '      ' → logprob: -14.398272514343262
    7. ' n' → logprob: -14.773272514343262
    8. '        ' → logprob: -15.148272514343262
    9. 'num' → logprob: -15.148272514343262
    10. 'D' → logprob: -15.398272514343262

Token 475: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4315054714679718
    2. ' =' → logprob: -1.6815054416656494
    3. '=int' → logprob: -1.8065054416656494
    4. 'int' → logprob: -9.93150520324707
    5. '=n' → logprob: -10.68150520324707
    6. '=`' → logprob: -11.05650520324707
    7. '       ' → logprob: -11.55650520324707
    8. '=len' → logprob: -11.80650520324707
    9. '   ' → logprob: -12.05650520324707
    10. '=float' → logprob: -12.05650520324707

Token 476: ' convert' (ID: 8452)
  Prédit: 'convert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'convert' → logprob: -6.034592388459714e-06
    2. 'int' → logprob: -12.250005722045898
    3. ' convert' → logprob: -14.125005722045898
    4. 'parse' → logprob: -15.000005722045898
    5. '.convert' → logprob: -16.8750057220459
    6. '_convert' → logprob: -19.0000057220459
    7. 'Convert' → logprob: -19.2500057220459
    8. 'conv' → logprob: -19.6250057220459
    9. 'con' → logprob: -19.7500057220459
    10. 'converter' → logprob: -19.8750057220459

Token 477: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -1.5690089639974758e-05
    2. 'Input' → logprob: -12.375015258789062
    3. '_INPUT' → logprob: -12.375015258789062
    4. 'input' → logprob: -13.125015258789062
    5. '_output' → logprob: -13.875015258789062
    6. '_int' → logprob: -13.875015258789062
    7. '_inputs' → logprob: -14.250015258789062
    8. '_in' → logprob: -14.625015258789062
    9. '_Input' → logprob: -14.750015258789062
    10. '-input' → logprob: -14.750015258789062

Token 478: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0007868755492381752
    2. '(' → logprob: -7.250786781311035
    3. '(int' → logprob: -11.250786781311035
    4. '()' → logprob: -11.250786781311035
    5. 'n' → logprob: -11.375786781311035
    6. '(num' → logprob: -11.500786781311035
    7. '()(' → logprob: -11.625786781311035
    8. '(m' → logprob: -12.750786781311035
    9. '(...)' → logprob: -13.500786781311035
    10. '(np' → logprob: -13.750786781311035

Token 479: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.35864874720573425
    2. ')
' → logprob: -1.4836487770080566
    3. '       ' → logprob: -2.6086487770080566
    4. '   ' → logprob: -7.358648777008057
    5. '           ' → logprob: -8.983648300170898
    6. ')

' → logprob: -9.858648300170898
    7. '())
' → logprob: -9.858648300170898
    8. '())' → logprob: -11.108648300170898
    9. '```' → logprob: -11.358648300170898
    10. ')
' → logprob: -11.858648300170898

Token 480: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.173704271830502e-06
    2. '   ' → logprob: -12.75000286102295
    3. '           ' → logprob: -16.125003814697266
    4. '      ' → logprob: -16.625003814697266
    5. '        ' → logprob: -16.750003814697266
    6. '     ' → logprob: -16.875003814697266
    7. '               ' → logprob: -19.125003814697266
    8. '         ' → logprob: -19.125003814697266
    9. '    ' → logprob: -20.125003814697266
    10. '```' → logprob: -20.625003814697266

Token 481: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00015502817404922098
    2. 'D' → logprob: -8.875155448913574
    3. '   ' → logprob: -11.125155448913574
    4. '     ' → logprob: -15.500155448913574
    5. '      ' → logprob: -15.750155448913574
    6. '        ' → logprob: -17.125154495239258
    7. ' D' → logprob: -17.250154495239258
    8. 'points' → logprob: -17.375154495239258
    9. '           ' → logprob: -17.625154495239258
    10. '    ' → logprob: -18.500154495239258

Token 482: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.5934977531433105
    2. 'n' → logprob: -0.8434977531433105
    3. ' n' → logprob: -4.2184977531433105
    4. ' is' → logprob: -5.9684977531433105
    5. 'not' → logprob: -9.218498229980469
    6. '   ' → logprob: -11.093498229980469
    7. ' not' → logprob: -12.468498229980469
    8. '       ' → logprob: -12.843498229980469
    9. '.is' → logprob: -13.593498229980469
    10. '  ' → logprob: -14.093498229980469

Token 483: '_zero' (ID: 53468)
  Prédit: '_zero'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_zero' → logprob: -0.0033635508734732866
    2. 'zero' → logprob: -5.878363609313965
    3. '_ZERO' → logprob: -8.253363609313965
    4. 'Zero' → logprob: -9.003363609313965
    5. '.zero' → logprob: -9.753363609313965
    6. '-zero' → logprob: -11.003363609313965
    7. '_exit' → logprob: -11.128363609313965
    8. ' zero' → logprob: -11.253363609313965
    9. 'EOF' → logprob: -11.378363609313965
    10. '0' → logprob: -11.378363609313965

Token 484: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.2664456789934775e-06
    2. '(' → logprob: -13.625000953674316
    3. 'n' → logprob: -17.500001907348633
    4. '(m' → logprob: -19.625001907348633
    5. '(num' → logprob: -19.625001907348633
    6. '(`' → logprob: -20.125001907348633
    7. '(N' → logprob: -20.750001907348633
    8. ' n' → logprob: -21.000001907348633
    9. '(np' → logprob: -21.125001907348633
    10. '(int' → logprob: -21.250001907348633

Token 485: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.20163533091545105
    2. '):' → logprob: -1.7016353607177734
    3. '):

' → logprob: -8.826635360717773
    4. '):
' → logprob: -9.826635360717773
    5. ')' → logprob: -10.951635360717773
    6. '       ' → logprob: -13.326635360717773
    7. '   ' → logprob: -14.076635360717773
    8. ')):
' → logprob: -14.576635360717773
    9. ')):' → logprob: -15.576635360717773
    10. '           ' → logprob: -15.826635360717773

Token 486: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -5.319370302458992e-06
    2. '         ' → logprob: -13.500005722045898
    3. '          ' → logprob: -13.625005722045898
    4. '       ' → logprob: -13.750005722045898
    5. 'break' → logprob: -13.875005722045898
    6. '               ' → logprob: -14.875005722045898
    7. '            ' → logprob: -15.625005722045898
    8. 'return' → logprob: -16.0000057220459
    9. '   ' → logprob: -17.0000057220459
    10. '		' → logprob: -17.5000057220459

Token 487: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.0032039734069257975
    2. '           ' → logprob: -5.753203868865967
    3. ' break' → logprob: -11.378204345703125
    4. 'return' → logprob: -11.503204345703125
    5. '               ' → logprob: -12.878204345703125
    6. 'print' → logprob: -13.253204345703125
    7. '             ' → logprob: -16.378204345703125
    8. 'Break' → logprob: -16.378204345703125
    9. 'continue' → logprob: -16.878204345703125
    10. '       ' → logprob: -17.128204345703125

Token 488: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00018422940047457814
    2. '   ' → logprob: -8.625184059143066
    3. '           ' → logprob: -12.750184059143066
    4. 'D' → logprob: -14.250184059143066
    5. '     ' → logprob: -14.750184059143066
    6. '      ' → logprob: -15.000184059143066
    7. '        ' → logprob: -16.000185012817383
    8. '               ' → logprob: -16.250185012817383
    9. '         ' → logprob: -17.250185012817383
    10. '```' → logprob: -17.375185012817383

Token 489: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10032851994037628
    2. '   ' → logprob: -2.3503284454345703
    3. '           ' → logprob: -9.60032844543457
    4. 'D' → logprob: -10.35032844543457
    5. 'def' → logprob: -11.72532844543457
    6. '```' → logprob: -12.47532844543457
    7. '     ' → logprob: -12.97532844543457
    8. '               ' → logprob: -13.35032844543457
    9. '      ' → logprob: -13.60032844543457
    10. '  ' → logprob: -13.72532844543457

Token 490: ' D' (ID: 415)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.15441757265944e-05
    2. 'D' (adapté à ' D') → logprob: -10.625031471252441
    3. '   ' → logprob: -11.875031471252441
    4. '      ' → logprob: -15.750031471252441
    5. '     ' → logprob: -16.000032424926758
    6. '        ' → logprob: -17.250032424926758
    7. '           ' → logprob: -17.375032424926758
    8. '    ' → logprob: -18.625032424926758
    9. '  ' → logprob: -19.125032424926758
    10. ' D' → logprob: -19.375032424926758

Token 491: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.28608641028404236
    2. ' =' → logprob: -1.4110864400863647
    3. '   ' → logprob: -5.536086559295654
    4. '       ' → logprob: -7.786086559295654
    5. '.append' → logprob: -8.161086082458496
    6. '=[]' → logprob: -8.786086082458496
    7. '=D' → logprob: -10.411086082458496
    8. '=list' → logprob: -10.661086082458496
    9. ' ' → logprob: -10.911086082458496
    10. '  ' → logprob: -11.661086082458496

Token 492: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.0006937315920367837
    2. 'get' → logprob: -7.7506937980651855
    3. ' parse' → logprob: -8.250693321228027
    4. '[]' → logprob: -14.375693321228027
    5. ' get' → logprob: -14.750693321228027
    6. '   ' → logprob: -15.000693321228027
    7. '.parse' → logprob: -15.875693321228027
    8. '       ' → logprob: -16.000694274902344
    9. '	parse' → logprob: -16.000694274902344
    10. 'list' → logprob: -16.250694274902344

Token 493: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -4.008129963040119e-06
    2. '_INPUT' → logprob: -13.250003814697266
    3. '_output' → logprob: -13.625003814697266
    4. '_inputs' → logprob: -15.125003814697266
    5. 'Input' → logprob: -15.875003814697266
    6. '_Input' → logprob: -16.000003814697266
    7. 'input' → logprob: -16.125003814697266
    8. '_in' → logprob: -16.250003814697266
    9. '输入' → logprob: -16.500003814697266
    10. '_import' → logprob: -17.250003814697266

Token 494: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00012809180771000683
    2. '(' → logprob: -9.000127792358398
    3. '()' → logprob: -13.375127792358398
    4. '(num' → logprob: -14.125127792358398
    5. '(N' → logprob: -14.625127792358398
    6. '(m' → logprob: -15.250127792358398
    7. '()(' → logprob: -15.375127792358398
    8. '(`' → logprob: -15.750127792358398
    9. '(int' → logprob: -16.0001277923584
    10. 'n' → logprob: -16.1251277923584

Token 495: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.286852345103398e-05
    2. ')
' → logprob: -10.375042915344238
    3. '())' → logprob: -11.625042915344238
    4. ')

' → logprob: -13.875042915344238
    5. ')`' → logprob: -14.375042915344238
    6. '       ' → logprob: -14.750042915344238
    7. '```' → logprob: -15.500042915344238
    8. '   ' → logprob: -15.500042915344238
    9. '))' → logprob: -16.000041961669922
    10. ' )' → logprob: -16.875041961669922

Token 496: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002478508511558175
    2. '   ' → logprob: -6.00247859954834
    3. '     ' → logprob: -14.12747859954834
    4. 'D' → logprob: -14.62747859954834
    5. '           ' → logprob: -14.62747859954834
    6. '      ' → logprob: -14.62747859954834
    7. '        ' → logprob: -15.25247859954834
    8. '```' → logprob: -15.37747859954834
    9. '  ' → logprob: -15.87747859954834
    10. '    ' → logprob: -16.627477645874023

Token 497: ' D' (ID: 415)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00044592362246476114
    2. 'conv' → logprob: -7.87544584274292
    3. '   ' → logprob: -10.125446319580078
    4. 'print' → logprob: -11.625446319580078
    5. 'result' → logprob: -12.250446319580078
    6. 'D' (adapté à ' D') → logprob: -13.000446319580078
    7. '      ' → logprob: -13.375446319580078
    8. '     ' → logprob: -13.500446319580078
    9. '        ' → logprob: -13.500446319580078
    10. 'output' → logprob: -13.625446319580078

Token 498: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5117476582527161
    2. ' =' → logprob: -1.0117475986480713
    3. '.sort' → logprob: -3.3867475986480713
    4. '.append' → logprob: -6.13674783706665
    5. '=[]' → logprob: -8.136747360229492
    6. '   ' → logprob: -8.386747360229492
    7. '.copy' → logprob: -9.511747360229492
    8. '.clear' → logprob: -9.886747360229492
    9. '=list' → logprob: -9.886747360229492
    10. '```' → logprob: -10.136747360229492

Token 499: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -1.2664456789934775e-06
    2. ' get' → logprob: -13.750000953674316
    3. '       ' → logprob: -17.000001907348633
    4. '	get' → logprob: -18.125001907348633
    5. '   ' → logprob: -18.375001907348633
    6. '.get' → logprob: -18.875001907348633
    7. 'sorted' → logprob: -20.375001907348633
    8. 'ge' → logprob: -20.875001907348633
    9. '(get' → logprob: -21.125001907348633
    10. 'sort' → logprob: -21.750001907348633

Token 500: '_sorted' (ID: 104993)
  Prédit: '_sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sorted' → logprob: -3.47626737493556e-05
    2. 'sorted' → logprob: -10.75003433227539
    3. '_copy' → logprob: -11.25003433227539
    4. 'Sorted' → logprob: -16.25003433227539
    5. '_sort' → logprob: -16.62503433227539
    6. '_first' → logprob: -17.25003433227539
    7. ' sorted' → logprob: -17.75003433227539
    8. '_s' → logprob: -18.00003433227539
    9. '.sorted' → logprob: -18.62503433227539
    10. '(sorted' → logprob: -18.75003433227539

Token 501: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -4.1080467781284824e-05
    2. '_POINTS' → logprob: -10.625041007995605
    3. '_pts' → logprob: -12.250041007995605
    4. 'Points' → logprob: -12.375041007995605
    5. 'points' → logprob: -12.750041007995605
    6. '_lines' → logprob: -13.125041007995605
    7. '_positions' → logprob: -15.000041007995605
    8. '	points' → logprob: -15.375041007995605
    9. '.points' → logprob: -15.500041007995605
    10. '_point' → logprob: -15.500041007995605

Token 502: '(D' (ID: 9908)
  Prédit: '(D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(D' → logprob: -0.0025674565695226192
    2. '(' → logprob: -6.377567291259766
    3. '()' → logprob: -7.127567291259766
    4. '(_)' → logprob: -10.752567291259766
    5. 'D' → logprob: -12.377567291259766
    6. '(M' → logprob: -12.752567291259766
    7. '(P' → logprob: -12.752567291259766
    8. '(S' → logprob: -12.752567291259766
    9. '()(' → logprob: -13.002567291259766
    10. '(...)' → logprob: -13.002567291259766

Token 503: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002477502857800573
    2. ')
' → logprob: -9.000247955322266
    3. '       ' → logprob: -9.125247955322266
    4. '   ' → logprob: -12.000247955322266
    5. '())' → logprob: -12.000247955322266
    6. ')

' → logprob: -13.125247955322266
    7. ')`' → logprob: -15.250247955322266
    8. ').' → logprob: -15.500247955322266
    9. '```' → logprob: -15.625247955322266
    10. ' )' → logprob: -15.875247955322266

Token 504: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -9.805981972021982e-05
    2. '   ' → logprob: -9.25009822845459
    3. '     ' → logprob: -14.37509822845459
    4. '      ' → logprob: -14.50009822845459
    5. '        ' → logprob: -14.75009822845459
    6. '           ' → logprob: -15.37509822845459
    7. '```' → logprob: -15.75009822845459
    8. '         ' → logprob: -17.125097274780273
    9. '    ' → logprob: -17.250097274780273
    10. '  ' → logprob: -17.500097274780273

Token 505: ' print' (ID: 2123)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014765433967113495
    2. 'p' → logprob: -4.26476526260376
    3. 'D' → logprob: -7.63976526260376
    4. '   ' → logprob: -9.889765739440918
    5. 'print' (adapté à ' print') → logprob: -10.764765739440918
    6. '      ' → logprob: -11.639765739440918
    7. '     ' → logprob: -11.764765739440918
    8. '        ' → logprob: -12.014765739440918
    9. 'result' → logprob: -12.139765739440918
    10. '```' → logprob: -12.264765739440918

Token 506: '(conv' (ID: 146794)
  Prédit: '(D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(D' → logprob: -0.09871247410774231
    2. '()' → logprob: -2.47371244430542
    3. '(' → logprob: -5.34871244430542
    4. '("' → logprob: -6.09871244430542
    5. '('' → logprob: -6.97371244430542
    6. '(len' → logprob: -7.09871244430542
    7. '(get' → logprob: -7.84871244430542
    8. '(f' → logprob: -7.97371244430542
    9. '("")' → logprob: -9.223712921142578
    10. '("("' → logprob: -11.223712921142578

Token 507: 'ex' (ID: 490)
  Prédit: 'ex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.00021688752167392522
    2. 'exit' → logprob: -8.625216484069824
    3. 'ext' → logprob: -11.875216484069824
    4. 'exp' → logprob: -12.250216484069824
    5. 'exo' → logprob: -12.625216484069824
    6. 'export' → logprob: -12.750216484069824
    7. 'exe' → logprob: -13.125216484069824
    8. 'екс' → logprob: -13.250216484069824
    9. 'extr' → logprob: -13.250216484069824
    10. 'exa' → logprob: -13.250216484069824

Token 508: '_h' (ID: 3434)
  Prédit: '_h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_h' → logprob: -0.00014239625306800008
    2. '_' → logprob: -11.250142097473145
    3. 'h' → logprob: -11.500142097473145
    4. '_hdl' → logprob: -12.000142097473145
    5. '_conv' → logprob: -12.312642097473145
    6. '_ch' → logprob: -12.500142097473145
    7. '_H' → logprob: -12.625142097473145
    8. '_half' → logprob: -13.000142097473145
    9. '_shell' → logprob: -13.125142097473145
    10. '__' → logprob: -13.250142097473145

Token 509: 'ull' (ID: 754)
  Prédit: 'ull'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ull' → logprob: -2.935296834039036e-06
    2. 'ul' → logprob: -13.62500286102295
    3. ' ull' → logprob: -13.87500286102295
    4. 'ulls' → logprob: -15.50000286102295
    5. 'u' → logprob: -15.75000286102295
    6. 'ULL' → logprob: -15.87500286102295
    7. 'ulk' → logprob: -17.125003814697266
    8. 'all' → logprob: -17.125003814697266
    9. 'ulling' → logprob: -17.500003814697266
    10. 'uller' → logprob: -17.625003814697266

Token 510: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.0017884672852233052
    2. '_pts' → logprob: -8.001788139343262
    3. '_POINTS' → logprob: -8.001788139343262
    4. 'points' → logprob: -9.376788139343262
    5. 'Points' → logprob: -9.501788139343262
    6. '_d' → logprob: -10.001788139343262
    7. ')_' → logprob: -10.001788139343262
    8. '_' → logprob: -10.126788139343262
    9. '_length' → logprob: -10.251788139343262
    10. '_p' → logprob: -10.439288139343262

Token 511: '(D' (ID: 9908)
  Prédit: '(D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(D' → logprob: -6.027225754223764e-05
    2. '(' → logprob: -9.875060081481934
    3. '())' → logprob: -13.250060081481934
    4. ' (' → logprob: -14.500060081481934
    5. '()(' → logprob: -14.500060081481934
    6. '((' → logprob: -14.625060081481934
    7. '(Dense' → logprob: -14.812560081481934
    8. '(B' → logprob: -14.875060081481934
    9. '(`' → logprob: -14.937560081481934
    10. '(DIS' → logprob: -15.250060081481934

Token 512: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.002831030637025833
    2. '()))' → logprob: -5.877830982208252
    3. '))
' → logprob: -11.50283145904541
    4. '       ' → logprob: -12.12783145904541
    5. ')' → logprob: -12.62783145904541
    6. '__))' → logprob: -13.12783145904541
    7. '))

' → logprob: -13.50283145904541
    8. ')))' → logprob: -13.75283145904541
    9. 'D' → logprob: -14.50283145904541
    10. ''))' → logprob: -14.87783145904541

Token 513: 'main' (ID: 7731)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.12412721663713455
    2. '<|end|>' → logprob: -3.249127149581909
    3. '   ' → logprob: -3.499127149581909
    4. 'print' → logprob: -4.499127388000488
    5. '`' → logprob: -4.624127388000488
    6. 'def' → logprob: -4.999127388000488
    7. 'return' → logprob: -5.124127388000488
    8. '0' → logprob: -5.999127388000488
    9. '       ' → logprob: -6.499127388000488
    10. '``' → logprob: -6.499127388000488

Token 514: '_loop' (ID: 40621)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0008634611731395125
    2. '_' → logprob: -7.875863552093506
    3. '_loop' → logprob: -8.625863075256348
    4. 'loop' → logprob: -9.125863075256348
    5. '```' → logprob: -10.125863075256348
    6. '   ' → logprob: -10.125863075256348
    7. '()`' → logprob: -10.250863075256348
    8. '__' → logprob: -11.250863075256348
    9. 'Loop' → logprob: -12.125863075256348
    10. '():' → logprob: -12.125863075256348

Token 515: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00034595211036503315
    2. '(' → logprob: -8.375346183776855
    3. '():' → logprob: -9.375346183776855
    4. '()`' → logprob: -10.750346183776855
    5. '()(' → logprob: -13.250346183776855
    6. ':' → logprob: -13.750346183776855
    7. '```' → logprob: -14.000346183776855
    8. '().' → logprob: -14.125346183776855
    9. '())' → logprob: -14.375346183776855
    10. '();' → logprob: -14.625346183776855


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 513
Tokens correctement prédits (1ère position, stricte): 204
Tokens correctement prédits (1ère position, avec adaptation): 222
Tokens correctement prédits (top 10): 420
Précision stricte (1ère position): 39.77%
Précision adaptée (1ère position): 43.27%
Précision (top 10): 81.87%
================================================================================
