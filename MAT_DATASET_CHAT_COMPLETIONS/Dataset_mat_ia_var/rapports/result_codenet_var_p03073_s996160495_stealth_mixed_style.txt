================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:03:18
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
s = input()
c = [0, 0]
for idx, val in enumerate(s):
    if (idx % 2 == 0 and val == '0') or (idx % 2 == 1 and val == '1'):
        c[0] += 1
    else:
        c[1] = c[1] + 1
def least(a, b):
    return a if a < b else b
print((lambda x, y: least(x, y))(c[0],c[1]))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 's' (ID: 82)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' input' (ID: 3422)
  → Token d'amorce (pas de prédiction)

Token 3: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.012582997791469097
    2. '('' → logprob: -5.262582778930664
    3. ''' → logprob: -5.387582778930664
    4. '()' → logprob: -7.137582778930664
    5. '"' → logprob: -7.262582778930664
    6. '`' → logprob: -7.387582778930664
    7. '("("' → logprob: -8.137582778930664
    8. '```' → logprob: -9.137582778930664
    9. '(
' → logprob: -9.262582778930664
    10. ' (' → logprob: -10.512582778930664

Token 4: 'c' (ID: 66)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.044769834727048874
    2. 'if' → logprob: -4.044769763946533
    3. '+' → logprob: -4.419769763946533
    4. '[' → logprob: -5.419769763946533
    5. '.strip' → logprob: -6.169769763946533
    6. '=' → logprob: -6.544769763946533
    7. 'print' → logprob: -6.669769763946533
    8. ''' → logprob: -7.044769763946533
    9. '[::-' → logprob: -7.044769763946533
    10. ' if' → logprob: -7.669769763946533

Token 5: ' =' (ID: 314)
  Prédit: 'ount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ount' → logprob: -0.713561475276947
    2. ' =' → logprob: -0.963561475276947
    3. '=' → logprob: -3.463561534881592
    4. 'har' → logprob: -3.713561534881592
    5. 'ounter' → logprob: -3.713561534881592
    6. 'h' → logprob: -4.088561534881592
    7. 'o' → logprob: -4.213561534881592
    8. '()' → logprob: -5.713561534881592
    9. 'nt' → logprob: -6.463561534881592
    10. 'ont' → logprob: -6.588561534881592

Token 6: ' [' (ID: 723)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6907894015312195
    2. '0' → logprob: -1.8157894611358643
    3. ' s' → logprob: -1.8157894611358643
    4. 's' → logprob: -1.8157894611358643
    5. ''' → logprob: -5.565789222717285
    6. ''s' → logprob: -5.565789222717285
    7. 'int' → logprob: -7.565789222717285
    8. '"' → logprob: -7.565789222717285
    9. 'input' → logprob: -7.815789222717285
    10. 'len' → logprob: -8.065789222717285

Token 7: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6577428579330444
    2. 'i' → logprob: -1.9077428579330444
    3. 'x' → logprob: -2.032742977142334
    4. 'int' → logprob: -2.157742977142334
    5. 's' → logprob: -2.782742977142334
    6. 'ch' → logprob: -5.157742977142334
    7. 'char' → logprob: -5.407742977142334
    8. ''s' → logprob: -5.782742977142334
    9. 'ord' → logprob: -6.032742977142334
    10. ''' → logprob: -6.407742977142334

Token 8: ',' (ID: 11)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0008962165447883308
    2. ',' → logprob: -7.250896453857422
    3. ' ]' → logprob: -8.875896453857422
    4. ' for' → logprob: -10.375896453857422
    5. ')' → logprob: -12.375896453857422
    6. ']*' → logprob: -12.500896453857422
    7. 'for' → logprob: -13.375896453857422
    8. ')]' → logprob: -13.625896453857422
    9. '])' → logprob: -13.750896453857422
    10. '']' → logprob: -14.250896453857422

Token 9: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003794731106609106
    2. ' ' → logprob: -5.6287946701049805
    3. '1' → logprob: -8.62879467010498
    4. ']' → logprob: -11.62879467010498
    5. 's' → logprob: -13.37879467010498
    6. '100' → logprob: -13.87879467010498
    7. ')' → logprob: -14.00379467010498
    8. '10' → logprob: -14.69129467010498
    9. '2' → logprob: -15.00379467010498
    10. '9' → logprob: -15.06629467010498

Token 10: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006903939065523446
    2. ' ' → logprob: -7.875690460205078
    3. '1' → logprob: -8.125690460205078
    4. ']' → logprob: -12.625690460205078
    5. '9' → logprob: -13.375690460205078
    6. '26' → logprob: -13.375690460205078
    7. 's' → logprob: -13.500690460205078
    8. '2' → logprob: -14.188190460205078
    9. 'len' → logprob: -14.188190460205078
    10. '255' → logprob: -14.313190460205078

Token 11: ']
' (ID: 1592)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008734296075999737
    2. ']' → logprob: -4.758734226226807
    3. ')' → logprob: -9.508734703063965
    4. ' ,' → logprob: -10.758734703063965
    5. '])' → logprob: -11.758734703063965
    6. '0' → logprob: -11.883734703063965
    7. ')]' → logprob: -12.633734703063965
    8. ' ]' → logprob: -12.883734703063965
    9. ' ' → logprob: -13.883734703063965
    10. '1' → logprob: -14.258734703063965

Token 12: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0026351111009716988
    2. ' for' → logprob: -6.1276350021362305
    3. 'f' → logprob: -7.8776350021362305
    4. ' ' → logprob: -10.75263500213623
    5. 'i' → logprob: -11.00263500213623
    6. ':' → logprob: -11.62763500213623
    7. '```' → logprob: -12.87763500213623
    8. ' 
' → logprob: -13.00263500213623
    9. 'd' → logprob: -13.12763500213623
    10. 'n' → logprob: -13.12763500213623

Token 13: ' idx' (ID: 14016)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.32280704379081726
    2. ' i' → logprob: -1.3228070735931396
    3. 'i' → logprob: -4.9478068351745605
    4. ' _' → logprob: -6.9478068351745605
    5. '_' → logprob: -7.8228068351745605
    6. ' c' → logprob: -7.9478068351745605
    7. ' s' → logprob: -8.322807312011719
    8. ' ch' → logprob: -8.947807312011719
    9. 'c' → logprob: -9.572807312011719
    10. ' x' → logprob: -9.697807312011719

Token 14: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07816727459430695
    2. 'in' → logprob: -2.953167200088501
    3. ' ' → logprob: -3.828167200088501
    4. 's' → logprob: -7.95316743850708
    5. ',' → logprob: -8.328166961669922
    6. ' i' → logprob: -8.453166961669922
    7. '  ' → logprob: -8.703166961669922
    8. ' ,' → logprob: -9.578166961669922
    9. 'i' → logprob: -9.828166961669922
    10. '_' → logprob: -10.203166961669922

Token 15: ' val' (ID: 1459)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.8168217539787292
    2. ' ch' → logprob: -1.316821813583374
    3. ' char' → logprob: -3.066821813583374
    4. 'char' → logprob: -3.441821813583374
    5. 'i' → logprob: -3.566821813583374
    6. ' c' → logprob: -3.566821813583374
    7. 'c' → logprob: -3.691821813583374
    8. ' i' → logprob: -3.691821813583374
    9. 'v' → logprob: -3.816821813583374
    10. 'x' → logprob: -3.941821813583374

Token 16: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005646475125104189
    2. 'in' → logprob: -5.380646705627441
    3. ' ' → logprob: -7.130646705627441
    4. 's' → logprob: -8.755646705627441
    5. ',' → logprob: -10.130646705627441
    6. ' ,' → logprob: -11.880646705627441
    7. '  ' → logprob: -12.130646705627441
    8. '```' → logprob: -12.505646705627441
    9. '	in' → logprob: -12.630646705627441
    10. ' s' → logprob: -13.380646705627441

Token 17: ' enumerate' (ID: 29671)
  Prédit: ' enumerate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.0008347623515874147
    2. 'enumer' → logprob: -7.125834941864014
    3. ' s' → logprob: -11.250834465026855
    4. ' ' → logprob: -11.750834465026855
    5. '(en' → logprob: -13.000834465026855
    6. '```' → logprob: -13.000834465026855
    7. ' enumer' → logprob: -13.250834465026855
    8. ' en' → logprob: -14.000834465026855
    9. 's' → logprob: -14.250834465026855
    10. ' enum' → logprob: -14.625834465026855

Token 18: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.31377312541007996
    2. '(' → logprob: -1.3137731552124023
    3. 's' → logprob: -8.188773155212402
    4. ' (' → logprob: -8.438773155212402
    5. '(range' → logprob: -12.188773155212402
    6. '(input' → logprob: -12.688773155212402
    7. ' s' → logprob: -12.813773155212402
    8. '(
' → logprob: -13.813773155212402
    9. '(user' → logprob: -14.438773155212402
    10. '(ss' → logprob: -14.438773155212402

Token 19: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0012251086300238967
    2. ':' → logprob: -7.126224994659424
    3. ')' → logprob: -7.876224994659424
    4. ' ):' → logprob: -11.376225471496582
    5. '[' → logprob: -11.501225471496582
    6. '):
' → logprob: -11.876225471496582
    7. ']:' → logprob: -12.126225471496582
    8. ''):' → logprob: -13.251225471496582
    9. '[:' → logprob: -13.876225471496582
    10. '[]):' → logprob: -13.876225471496582

Token 20: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.09550965577363968
    2. '    ' → logprob: -2.8455097675323486
    3. '   ' → logprob: -3.9705097675323486
    4. '<|end|>' → logprob: -5.4705095291137695
    5. ' if' → logprob: -5.5955095291137695
    6. ':' → logprob: -6.0955095291137695
    7. ' 
' → logprob: -6.2205095291137695
    8. '    
' → logprob: -7.4705095291137695
    9. '     
' → logprob: -7.7205095291137695
    10. '  ' → logprob: -8.09550952911377

Token 21: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.681666910648346
    2. ' if' → logprob: -0.931666910648346
    3. '    ' → logprob: -2.681666851043701
    4. 'if' (adapté à ' if') → logprob: -4.181666851043701
    5. '   ' → logprob: -5.181666851043701
    6. '```' → logprob: -5.556666851043701
    7. ' ```' → logprob: -5.931666851043701
    8. ' c' → logprob: -6.556666851043701
    9. 'c' → logprob: -7.056666851043701
    10. '_' → logprob: -7.556666851043701

Token 22: ' (' (ID: 350)
  Prédit: ' val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.002944536507129669
    2. 'val' → logprob: -5.877944469451904
    3. ' ' → logprob: -9.002944946289062
    4. ' s' → logprob: -12.502944946289062
    5. '(val' → logprob: -12.627944946289062
    6. ' v' → logprob: -13.127944946289062
    7. 'v' → logprob: -13.252944946289062
    8. ' not' → logprob: -13.877944946289062
    9. ' (' → logprob: -14.252944946289062
    10. '[val' → logprob: -14.377944946289062

Token 23: 'idx' (ID: 13196)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.5761491060256958
    2. ' val' → logprob: -0.8261491060256958
    3. '(val' → logprob: -9.951148986816406
    4. 's' → logprob: -10.451148986816406
    5. '   ' → logprob: -10.576148986816406
    6. 'int' → logprob: -10.701148986816406
    7. ' ' → logprob: -11.451148986816406
    8. ' s' → logprob: -11.451148986816406
    9. '    ' → logprob: -11.576148986816406
    10. 'v' → logprob: -11.576148986816406

Token 24: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.0598442442715168
    2. '%' → logprob: -3.1848442554473877
    3. ' ' → logprob: -4.184844017028809
    4. ')' → logprob: -7.059844017028809
    5. '+' → logprob: -8.309844017028809
    6. ' )' → logprob: -8.934844017028809
    7. ' ==' → logprob: -9.184844017028809
    8. ' +' → logprob: -9.809844017028809
    9. '==' → logprob: -11.184844017028809
    10. ')%' → logprob: -11.184844017028809

Token 25: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.17990465462207794
    2. ' ' → logprob: -1.8049046993255615
    3. '3' → logprob: -9.05490493774414
    4. '4' → logprob: -10.67990493774414
    5. ')' → logprob: -12.30490493774414
    6. '```' → logprob: -12.30490493774414
    7. '  ' → logprob: -13.17990493774414
    8. '1' → logprob: -13.42990493774414
    9. '10' → logprob: -13.61740493774414
    10. '==' → logprob: -13.74240493774414

Token 26: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0005687602679245174
    2. ' ' → logprob: -7.875568866729736
    3. '3' → logprob: -8.750568389892578
    4. '4' → logprob: -11.250568389892578
    5. '10' → logprob: -12.750568389892578
    6. ')' → logprob: -12.750568389892578
    7. '```' → logprob: -13.000568389892578
    8. '   ' → logprob: -13.438068389892578
    9. '5' → logprob: -13.500568389892578
    10. '  ' → logprob: -13.625568389892578

Token 27: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5733136534690857
    2. ' ==' → logprob: -1.3233137130737305
    3. ')' → logprob: -1.8233137130737305
    4. ')==' → logprob: -4.9483137130737305
    5. ' ' → logprob: -6.6983137130737305
    6. ' )' → logprob: -8.82331371307373
    7. '=' → logprob: -9.32331371307373
    8. '0' → logprob: -11.32331371307373
    9. '===' → logprob: -12.07331371307373
    10. ' ' → logprob: -12.69831371307373

Token 28: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.22615745663642883
    2. ' ' → logprob: -1.6011574268341064
    3. '1' → logprob: -7.2261576652526855
    4. ')' → logprob: -11.226157188415527
    5. ' )' → logprob: -14.038657188415527
    6. '   ' → logprob: -14.351157188415527
    7. '=' → logprob: -14.726157188415527
    8. '<|end|>' → logprob: -14.788657188415527
    9. '  ' → logprob: -15.101157188415527
    10. '...' → logprob: -15.538657188415527

Token 29: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002986494218930602
    2. ' ' → logprob: -5.877986431121826
    3. '1' → logprob: -8.627986907958984
    4. ')' → logprob: -13.502986907958984
    5. '==' → logprob: -15.315486907958984
    6. '=' → logprob: -15.502986907958984
    7. '```' → logprob: -16.127986907958984
    8. '   ' → logprob: -16.440486907958984
    9. '  ' → logprob: -16.502986907958984
    10. '2' → logprob: -16.565486907958984

Token 30: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6413689255714417
    2. ')' → logprob: -0.8913689255714417
    3. '):' → logprob: -3.141368865966797
    4. 'and' → logprob: -4.641368865966797
    5. ' )' → logprob: -4.766368865966797
    6. ' ):' → logprob: -6.641368865966797
    7. ' ' → logprob: -7.766368865966797
    8. ':' → logprob: -9.641368865966797
    9. '   ' → logprob: -10.016368865966797
    10. '       ' → logprob: -10.141368865966797

Token 31: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.63295978307724
    2. 'val' → logprob: -0.75795978307724
    3. ' s' → logprob: -9.257959365844727
    4. '(val' → logprob: -9.882959365844727
    5. 's' → logprob: -10.132959365844727
    6. ' c' → logprob: -10.507959365844727
    7. 'int' → logprob: -10.632959365844727
    8. ' not' → logprob: -10.632959365844727
    9. ' (' → logprob: -10.882959365844727
    10. 'c' → logprob: -11.007959365844727

Token 32: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.22703970968723297
    2. '==' → logprob: -1.6020396947860718
    3. '=='' → logprob: -7.727039813995361
    4. ')' → logprob: -7.977039813995361
    5. ' ' → logprob: -8.227039337158203
    6. '=' → logprob: -8.727039337158203
    7. ' =='' → logprob: -8.727039337158203
    8. ' !=' → logprob: -8.852039337158203
    9. '!=' → logprob: -9.852039337158203
    10. ' in' → logprob: -11.352039337158203

Token 33: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.2912437617778778
    2. ' '' → logprob: -2.2912437915802
    3. ''O' → logprob: -2.9162437915802
    4. ''o' → logprob: -3.5412437915802
    5. ''a' → logprob: -4.041243553161621
    6. '"' → logprob: -4.291243553161621
    7. ''A' → logprob: -4.791243553161621
    8. ' '('' → logprob: -4.916243553161621
    9. ''i' → logprob: -5.666243553161621
    10. ''I' → logprob: -5.666243553161621

Token 34: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.9535860419273376
    2. 'I' → logprob: -1.9535861015319824
    3. ''' → logprob: -2.0785861015319824
    4. 'a' → logprob: -2.0785861015319824
    5. 'p' → logprob: -2.7035861015319824
    6. '1' → logprob: -2.9535861015319824
    7. 'R' → logprob: -3.4535861015319824
    8. 'A' → logprob: -4.078586101531982
    9. '('' → logprob: -4.953586101531982
    10. 'r' → logprob: -5.203586101531982

Token 35: '')' (ID: 1542)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6314929723739624
    2. '')' → logprob: -0.8814929723739624
    3. ''):' → logprob: -3.131493091583252
    4. '):' → logprob: -4.881493091583252
    5. ''' → logprob: -6.631493091583252
    6. ' ')' → logprob: -7.631493091583252
    7. ':' → logprob: -8.006492614746094
    8. ''):
' → logprob: -8.256492614746094
    9. ' '' → logprob: -9.256492614746094
    10. '   ' → logprob: -9.631492614746094

Token 36: ' or' (ID: 503)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.019416719675064087
    2. '       ' → logprob: -4.644416809082031
    3. '):' → logprob: -4.769416809082031
    4. ' :' → logprob: -8.019416809082031
    5. ' or' → logprob: -8.144416809082031
    6. ':
' → logprob: -8.769416809082031
    7. '   ' → logprob: -8.894416809082031
    8. ')' → logprob: -9.019416809082031
    9. ' and' → logprob: -10.894416809082031
    10. '):
' → logprob: -11.269416809082031

Token 37: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.004501923453062773
    2. '(idx' → logprob: -5.879501819610596
    3. '(val' → logprob: -7.129501819610596
    4. '(' → logprob: -7.879501819610596
    5. ' ' → logprob: -8.379502296447754
    6. ' idx' → logprob: -9.004502296447754
    7. ' val' → logprob: -9.254502296447754
    8. ' not' → logprob: -11.504502296447754
    9. '    ' → logprob: -11.629502296447754
    10. 'val' → logprob: -11.879502296447754

Token 38: 'idx' (ID: 13196)
  Prédit: ' idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.03167575225234032
    2. 'idx' → logprob: -3.5316758155822754
    3. '(idx' → logprob: -6.281675815582275
    4. ' (' → logprob: -10.656675338745117
    5. '	idx' → logprob: -11.406675338745117
    6. '[idx' → logprob: -12.156675338745117
    7. ' val' → logprob: -12.781675338745117
    8. ' not' → logprob: -13.156675338745117
    9. '   ' → logprob: -13.156675338745117
    10. ' ' → logprob: -13.156675338745117

Token 39: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.02684345655143261
    2. '%' → logprob: -3.651843547821045
    3. ' ' → logprob: -7.526843547821045
    4. ')' → logprob: -13.901843070983887
    5. ' ' → logprob: -14.026843070983887
    6. '<|end|>' → logprob: -14.276843070983887
    7. '  ' → logprob: -14.776843070983887
    8. 's' → logprob: -15.276843070983887
    9. '```' → logprob: -15.339343070983887
    10. '   ' → logprob: -16.026844024658203

Token 40: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.020659951493144035
    2. ' ' → logprob: -3.895659923553467
    3. '1' → logprob: -9.395660400390625
    4. '<|end|>' → logprob: -10.770660400390625
    5. '```' → logprob: -12.645660400390625
    6. '  ' → logprob: -13.020660400390625
    7. '   ' → logprob: -13.145660400390625
    8. '<|end|>' → logprob: -13.895660400390625
    9. '`' → logprob: -14.208160400390625
    10. '...' → logprob: -14.333160400390625

Token 41: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.011679206974804401
    2. '1' → logprob: -4.886679172515869
    3. ' ' → logprob: -5.511679172515869
    4. '```' → logprob: -11.574179649353027
    5. '0' → logprob: -12.324179649353027
    6. '   ' → logprob: -13.074179649353027
    7. '  ' → logprob: -13.949179649353027
    8. '<|end|>' → logprob: -14.261679649353027
    9. ')' → logprob: -14.449179649353027
    10. '>' → logprob: -14.511679649353027

Token 42: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2603851854801178
    2. '==' → logprob: -1.5103851556777954
    3. ' !=' → logprob: -5.510385036468506
    4. ' ' → logprob: -5.635385036468506
    5. '!=' → logprob: -7.385385036468506
    6. '1' → logprob: -9.510385513305664
    7. ')' → logprob: -10.260385513305664
    8. ')==' → logprob: -11.385385513305664
    9. '```' → logprob: -11.510385513305664
    10. ' else' → logprob: -11.885385513305664

Token 43: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.35898521542549133
    2. ' ' → logprob: -1.358985185623169
    3. '0' → logprob: -3.108985185623169
    4. ')' → logprob: -10.98398494720459
    5. '```' → logprob: -12.54648494720459
    6. '=' → logprob: -12.73398494720459
    7. ' ' → logprob: -13.04648494720459
    8. '==' → logprob: -13.23398494720459
    9. 's' → logprob: -13.23398494720459
    10. '`' → logprob: -13.42148494720459

Token 44: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01185122411698103
    2. '0' → logprob: -4.5118513107299805
    3. ' ' → logprob: -7.1368513107299805
    4. ')' → logprob: -13.01185131072998
    5. '```' → logprob: -13.26185131072998
    6. '!' → logprob: -14.26185131072998
    7. '!=' → logprob: -14.82435131072998
    8. '==' → logprob: -15.32435131072998
    9. '' → logprob: -15.32435131072998
    10. '2' → logprob: -15.63685131072998

Token 45: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.008179421536624432
    2. 'and' → logprob: -4.883179187774658
    3. ' ' → logprob: -7.508179187774658
    4. ')' → logprob: -11.633179664611816
    5. ' ==' → logprob: -11.633179664611816
    6. ' &&' → logprob: -13.633179664611816
    7. '==' → logprob: -14.008179664611816
    8. '   ' → logprob: -14.383179664611816
    9. '    ' → logprob: -14.508179664611816
    10. ' a' → logprob: -14.633179664611816

Token 46: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.0036332078743726015
    2. 'val' → logprob: -5.62863302230835
    3. '	val' → logprob: -12.003633499145508
    4. ' ' → logprob: -12.253633499145508
    5. ' ' → logprob: -12.378633499145508
    6. ' '' → logprob: -12.878633499145508
    7. ''' → logprob: -13.066133499145508
    8. '(val' → logprob: -13.191133499145508
    9. ')' → logprob: -13.441133499145508
    10. ' not' → logprob: -13.566133499145508

Token 47: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.0626869797706604
    2. '==' → logprob: -2.8126869201660156
    3. '=='' → logprob: -8.187686920166016
    4. ' ' → logprob: -8.687686920166016
    5. ' =='' → logprob: -9.062686920166016
    6. ')' → logprob: -9.687686920166016
    7. ' !=' → logprob: -9.687686920166016
    8. '=' → logprob: -11.437686920166016
    9. '!=' → logprob: -12.187686920166016
    10. ')==' → logprob: -12.937686920166016

Token 48: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.08907021582126617
    2. ' '' → logprob: -2.4640703201293945
    3. '')' → logprob: -10.464070320129395
    4. '"' → logprob: -10.464070320129395
    5. ' ' → logprob: -10.589070320129395
    6. ')' → logprob: -10.964070320129395
    7. '0' → logprob: -11.839070320129395
    8. '1' → logprob: -12.214070320129395
    9. ''a' → logprob: -12.839070320129395
    10. ' ')' → logprob: -13.026570320129395

Token 49: '1' (ID: 16)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.04164648801088333
    2. '1' → logprob: -3.2916464805603027
    3. '0' → logprob: -5.666646480560303
    4. ' '' → logprob: -9.291646957397461
    5. '"' → logprob: -10.916646957397461
    6. '')' → logprob: -11.791646957397461
    7. ')' → logprob: -12.291646957397461
    8. '`' → logprob: -12.791646957397461
    9. ' ' → logprob: -12.916646957397461
    10. '('' → logprob: -13.541646957397461

Token 50: ''):
' (ID: 26539)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.7042561769485474
    2. ''):' → logprob: -0.9542561769485474
    3. ')' → logprob: -2.204256057739258
    4. '')' → logprob: -4.829256057739258
    5. ':' → logprob: -6.704256057739258
    6. '':' → logprob: -7.954256057739258
    7. ''' → logprob: -9.204256057739258
    8. ' ):' → logprob: -9.329256057739258
    9. ''):
' → logprob: -9.329256057739258
    10. ')':' → logprob: -9.579256057739258

Token 51: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.037898480892181396
    2. ' c' → logprob: -3.912898540496826
    3. 'c' → logprob: -5.037898540496826
    4. ':' → logprob: -5.537898540496826
    5. '   ' → logprob: -6.162898540496826
    6. ' :' → logprob: -6.662898540496826
    7. ' ' → logprob: -7.037898540496826
    8. ')' → logprob: -7.412898540496826
    9. '	c' → logprob: -8.037898063659668
    10. ')c' → logprob: -8.412898063659668

Token 52: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.7331810593605042
    2. ' c' → logprob: -0.7331810593605042
    3. '       ' → logprob: -3.6081809997558594
    4. ' ' → logprob: -5.233180999755859
    5. '   ' → logprob: -5.608180999755859
    6. '           ' → logprob: -6.608180999755859
    7. '```' → logprob: -7.733180999755859
    8. ' ```' → logprob: -8.10818099975586
    9. ' `' → logprob: -8.48318099975586
    10. '    ' → logprob: -8.48318099975586

Token 53: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0003013809327967465
    2. '+' → logprob: -8.250301361083984
    3. '[c' → logprob: -11.375301361083984
    4. '++' → logprob: -11.750301361083984
    5. '[++' → logprob: -12.125301361083984
    6. '[
' → logprob: -12.625301361083984
    7. '+=' → logprob: -13.000301361083984
    8. '+[' → logprob: -13.250301361083984
    9. '```' → logprob: -13.375301361083984
    10. '[]' → logprob: -13.500301361083984

Token 54: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00014489953173324466
    2. '1' → logprob: -8.875144958496094
    3. ' ' → logprob: -12.375144958496094
    4. ']' → logprob: -15.375144958496094
    5. '[' → logprob: -16.250144958496094
    6. '+' → logprob: -16.437644958496094
    7. '   ' → logprob: -16.500144958496094
    8. ')' → logprob: -17.562644958496094
    9. '۰' → logprob: -17.562644958496094
    10. 's' → logprob: -17.875144958496094

Token 55: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006762498524039984
    2. ']+=' → logprob: -5.256762504577637
    3. '+]' → logprob: -7.381762504577637
    4. '+' → logprob: -7.381762504577637
    5. ']+' → logprob: -8.506762504577637
    6. ')' → logprob: -10.006762504577637
    7. '+=' → logprob: -11.006762504577637
    8. ' ]' → logprob: -11.131762504577637
    9. ')]' → logprob: -13.256762504577637
    10. '']' → logprob: -14.756762504577637

Token 56: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.04988639056682587
    2. '+' → logprob: -3.049886465072632
    3. ' +=' → logprob: -6.674886226654053
    4. '=' → logprob: -11.049886703491211
    5. '++' → logprob: -11.924886703491211
    6. '+='' → logprob: -12.299886703491211
    7. ']+=' → logprob: -12.674886703491211
    8. '+=(' → logprob: -12.799886703491211
    9. '+="' → logprob: -13.174886703491211
    10. '+++' → logprob: -15.424886703491211

Token 57: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9266199160483666e-05
    2. ' ' → logprob: -10.875019073486328
    3. '0' → logprob: -15.250019073486328
    4. '2' → logprob: -16.875019073486328
    5. '   ' → logprob: -17.750019073486328
    6. '10' → logprob: -19.250019073486328
    7. '3' → logprob: -19.625019073486328
    8. '  ' → logprob: -19.750019073486328
    9. 's' → logprob: -20.500019073486328
    10. '4' → logprob: -20.562519073486328

Token 58: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.080963092041202e-06
    2. ' ' → logprob: -12.375004768371582
    3. '0' → logprob: -14.250004768371582
    4. '2' → logprob: -15.875004768371582
    5. '10' → logprob: -18.3750057220459
    6. '   ' → logprob: -18.6250057220459
    7. 's' → logprob: -18.7500057220459
    8. '3' → logprob: -18.7500057220459
    9. '-' → logprob: -19.0625057220459
    10. '  ' → logprob: -19.5000057220459

Token 59: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.491055965423584
    2. ' else' → logprob: -1.116055965423584
    3. 'elif' → logprob: -3.116055965423584
    4. '   ' → logprob: -5.366055965423584
    5. ' elif' → logprob: -5.491055965423584
    6. ' ' → logprob: -5.866055965423584
    7. ')' → logprob: -6.741055965423584
    8. ' 
' → logprob: -6.866055965423584
    9. '    
' → logprob: -7.241055965423584
    10. '
' → logprob: -7.866055965423584

Token 60: '   ' (ID: 271)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.5887276530265808
    2. 'else' → logprob: -1.2137277126312256
    3. '   ' → logprob: -2.3387277126312256
    4. 'elif' → logprob: -3.7137277126312256
    5. ' ' → logprob: -3.9637277126312256
    6. ' elif' → logprob: -5.0887274742126465
    7. '    
' → logprob: -8.463727951049805
    8. '	else' → logprob: -8.463727951049805
    9. '```' → logprob: -8.588727951049805
    10. '  ' → logprob: -8.713727951049805

Token 61: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.30491724610328674
    2. ' else' → logprob: -1.5549172163009644
    3. '   ' → logprob: -3.304917335510254
    4. 'elif' → logprob: -4.679917335510254
    5. ' ' → logprob: -5.554917335510254
    6. 'c' → logprob: -7.554917335510254
    7. ' elif' → logprob: -7.679917335510254
    8. ')' → logprob: -8.429917335510254
    9. '       ' → logprob: -9.054917335510254
    10. '	else' → logprob: -9.304917335510254

Token 62: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007734165410511196
    2. ':
' → logprob: -7.2507734298706055
    3. '   ' → logprob: -10.625773429870605
    4. '{' → logprob: -11.250773429870605
    5. ' :' → logprob: -11.375773429870605
    6. ' c' → logprob: -11.875773429870605
    7. '       ' → logprob: -12.750773429870605
    8. '```' → logprob: -14.000773429870605
    9. '[' → logprob: -14.125773429870605
    10. ':

' → logprob: -14.500773429870605

Token 63: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0477561391890049
    2. ' c' → logprob: -3.4227561950683594
    3. 'c' → logprob: -4.547756195068359
    4. '   ' → logprob: -6.047756195068359
    5. ' ' → logprob: -7.797756195068359
    6. '    ' → logprob: -8.79775619506836
    7. '        ' → logprob: -9.42275619506836
    8. '```' → logprob: -9.42275619506836
    9. '        
' → logprob: -9.54775619506836
    10. '1' → logprob: -10.17275619506836

Token 64: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.014319926500320435
    2. ' c' → logprob: -4.264319896697998
    3. '   ' → logprob: -9.264320373535156
    4. '       ' → logprob: -10.139320373535156
    5. '1' → logprob: -11.514320373535156
    6. '	c' → logprob: -12.514320373535156
    7. '```' → logprob: -12.514320373535156
    8. ' ' → logprob: -13.264320373535156
    9. '           ' → logprob: -13.889320373535156
    10. '  ' → logprob: -14.514320373535156

Token 65: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.2127087504486553e-05
    2. '1' → logprob: -11.375021934509277
    3. '```' → logprob: -12.250021934509277
    4. '[
' → logprob: -12.875021934509277
    5. ' [' → logprob: -14.125021934509277
    6. '\[' → logprob: -14.250021934509277
    7. '0' → logprob: -14.375021934509277
    8. ' ' → logprob: -15.375021934509277
    9. '=' → logprob: -15.625021934509277
    10. '`' → logprob: -15.875021934509277

Token 66: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.652451464906335e-05
    2. '0' → logprob: -11.500016212463379
    3. ' ' → logprob: -12.000016212463379
    4. ']' → logprob: -16.500017166137695
    5. '   ' → logprob: -16.500017166137695
    6. '```' → logprob: -17.625017166137695
    7. '-' → logprob: -17.750017166137695
    8. '  ' → logprob: -17.812517166137695
    9. '' → logprob: -18.625017166137695
    10. '[' → logprob: -18.625017166137695

Token 67: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0010456704767420888
    2. ']+=' → logprob: -6.8760457038879395
    3. ' ]' → logprob: -12.001045227050781
    4. ']+' → logprob: -12.376045227050781
    5. '[' → logprob: -13.876045227050781
    6. '']' → logprob: -14.251045227050781
    7. '+=' → logprob: -15.376045227050781
    8. ')' → logprob: -15.501045227050781
    9. '+' → logprob: -15.501045227050781
    10. ' +=' → logprob: -16.12604522705078

Token 68: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.01637708581984043
    2. ' +=' → logprob: -4.141376972198486
    3. '+' → logprob: -8.016377449035645
    4. ']+=' → logprob: -11.766377449035645
    5. '+='' → logprob: -13.391377449035645
    6. '++' → logprob: -14.141377449035645
    7. '```' → logprob: -14.391377449035645
    8. '+="' → logprob: -14.391377449035645
    9. ' ' → logprob: -14.516377449035645
    10. '  ' → logprob: -15.391377449035645

Token 69: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.5917530655860901
    2. ' c' → logprob: -1.7167530059814453
    3. '0' → logprob: -2.0917530059814453
    4. '1' → logprob: -2.3417530059814453
    5. ' ' → logprob: -3.0917530059814453
    6. '+' → logprob: -6.591753005981445
    7. '   ' → logprob: -8.966753005981445
    8. 'idx' → logprob: -9.591753005981445
    9. '  ' → logprob: -9.716753005981445
    10. '       ' → logprob: -10.091753005981445

Token 70: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.05139010772109032
    2. '1' → logprob: -3.6763901710510254
    3. '0' → logprob: -3.9263901710510254
    4. ' ' → logprob: -6.176390171051025
    5. 'c' → logprob: -7.051390171051025
    6. ' [' → logprob: -7.301390171051025
    7. 's' → logprob: -8.051389694213867
    8. '+' → logprob: -8.176389694213867
    9. '[
' → logprob: -8.176389694213867
    10. '-' → logprob: -9.301389694213867

Token 71: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00938733946532011
    2. '0' → logprob: -4.759387493133545
    3. ' ' → logprob: -7.884387493133545
    4. '+' → logprob: -8.759387016296387
    5. '[' → logprob: -9.509387016296387
    6. '-' → logprob: -9.509387016296387
    7. ']' → logprob: -10.134387016296387
    8. '   ' → logprob: -11.259387016296387
    9. 'idx' → logprob: -11.384387016296387
    10. ']+' → logprob: -11.759387016296387

Token 72: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6932252049446106
    2. ' +' → logprob: -0.6932252049446106
    3. ' ' → logprob: -9.568224906921387
    4. ' plus' → logprob: -13.068224906921387
    5. '0' → logprob: -13.568224906921387
    6. ']+' → logprob: -13.818224906921387
    7. ')' → logprob: -13.943224906921387
    8. '1' → logprob: -14.318224906921387
    9. ']' → logprob: -14.443224906921387
    10. ' +=' → logprob: -14.818224906921387

Token 73: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.007241814397275448
    2. ' +' → logprob: -5.507241725921631
    3. '0' → logprob: -6.257241725921631
    4. '+=' → logprob: -7.632241725921631
    5. ' c' → logprob: -8.507242202758789
    6. 'c' → logprob: -8.632242202758789
    7. '+c' → logprob: -9.257242202758789
    8. ' ' → logprob: -9.382242202758789
    9. ' +=' → logprob: -9.507242202758789
    10. '<|end|>' → logprob: -10.132242202758789

Token 74: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004883344518020749
    2. ' ' → logprob: -7.62548828125
    3. '   ' → logprob: -15.00048828125
    4. '  ' → logprob: -16.25048828125
    5. '0' → logprob: -17.50048828125
    6. '2' → logprob: -18.00048828125
    7. '    ' → logprob: -19.00048828125
    8. '+' → logprob: -19.06298828125
    9. '`' → logprob: -19.12548828125
    10. '```' → logprob: -19.18798828125

Token 75: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5332478142227046e-05
    2. ' ' → logprob: -11.125015258789062
    3. '0' → logprob: -15.625015258789062
    4. '   ' → logprob: -16.312515258789062
    5. '2' → logprob: -16.562515258789062
    6. 's' → logprob: -17.437515258789062
    7. '  ' → logprob: -17.875015258789062
    8. '`' → logprob: -17.937515258789062
    9. '+' → logprob: -18.000015258789062
    10. '```' → logprob: -18.062515258789062

Token 76: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.861003041267395
    2. '
' → logprob: -1.111003041267395
    3. ')' → logprob: -1.736003041267395
    4. '<|end|>' → logprob: -3.2360029220581055
    5. '```' → logprob: -5.4860029220581055
    6. ' 
' → logprob: -5.6110029220581055
    7. '#' → logprob: -5.7360029220581055
    8. '[' → logprob: -5.8610029220581055
    9. ')
' → logprob: -6.1110029220581055
    10. ',' → logprob: -6.2360029220581055

Token 77: 'def' (ID: 1314)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.32191094756126404
    2. '
' → logprob: -1.6969109773635864
    3. '#' → logprob: -3.446910858154297
    4. ')' → logprob: -4.071910858154297
    5. '<|end|>' → logprob: -4.321910858154297
    6. 'p' → logprob: -5.071910858154297
    7. ' 
' → logprob: -5.946910858154297
    8. 'c' → logprob: -6.071910858154297
    9. '  
' → logprob: -6.071910858154297
    10. 'if' → logprob: -6.071910858154297

Token 78: ' least' (ID: 5153)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.25944310426712036
    2. ' count' → logprob: -2.8844430446624756
    3. ' calculate' → logprob: -3.1344430446624756
    4. ' c' → logprob: -3.5094430446624756
    5. ' space' → logprob: -3.8844430446624756
    6. ' s' → logprob: -4.009443283081055
    7. ' check' → logprob: -5.009443283081055
    8. ' a' → logprob: -5.009443283081055
    9. ' f' → logprob: -5.134443283081055
    10. ' max' → logprob: -5.384443283081055

Token 79: '(a' (ID: 6271)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3324016332626343
    2. '_cost' → logprob: -2.332401752471924
    3. '_c' → logprob: -2.957401752471924
    4. '_count' → logprob: -3.332401752471924
    5. '_common' → logprob: -3.457401752471924
    6. '_s' → logprob: -4.082401752471924
    7. '_change' → logprob: -4.457401752471924
    8. '_changes' → logprob: -5.457401752471924
    9. '_possible' → logprob: -5.457401752471924
    10. '_sign' → logprob: -5.957401752471924

Token 80: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.067870855331421
    2. ',' → logprob: -1.317870855331421
    3. '(a' → logprob: -2.067870855331421
    4. ' )' → logprob: -2.817870855331421
    5. '):' → logprob: -3.067870855331421
    6. ' ' → logprob: -3.942870855331421
    7. '_' → logprob: -4.19287109375
    8. ' ,' → logprob: -4.31787109375
    9. ',)' → logprob: -4.94287109375
    10. '_diff' → logprob: -5.19287109375

Token 81: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.05493532121181488
    2. ' b' → logprob: -2.9299352169036865
    3. ' ' → logprob: -10.804935455322266
    4. ')' → logprob: -10.929935455322266
    5. ')b' → logprob: -12.679935455322266
    6. ' )' → logprob: -13.179935455322266
    7. '  ' → logprob: -13.179935455322266
    8. '   ' → logprob: -13.429935455322266
    9. 's' → logprob: -13.929935455322266
    10. '):' → logprob: -14.054935455322266

Token 82: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002797153079882264
    2. ')' → logprob: -6.0027971267700195
    3. '):
' → logprob: -8.37779712677002
    4. ' ):' → logprob: -9.50279712677002
    5. ':' → logprob: -12.00279712677002
    6. '):
' → logprob: -12.62779712677002
    7. '   ' → logprob: -13.75279712677002
    8. ',' → logprob: -13.75279712677002
    9. '=' → logprob: -13.87779712677002
    10. ' ' → logprob: -14.12779712677002

Token 83: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1668776571750641
    2. ':' → logprob: -1.9168776273727417
    3. ':return' → logprob: -5.666877746582031
    4. ' return' → logprob: -6.916877746582031
    5. '<|end|>' → logprob: -7.416877746582031
    6. ':
' → logprob: -7.791877746582031
    7. ' ' → logprob: -8.166877746582031
    8. '	return' → logprob: -8.291877746582031
    9. ')' → logprob: -8.791877746582031
    10. 'return' → logprob: -9.416877746582031

Token 84: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.3465466797351837
    2. '   ' → logprob: -1.3465466499328613
    3. 'return' (adapté à ' return') → logprob: -3.7215466499328613
    4. ' if' → logprob: -5.346546649932861
    5. '    ' → logprob: -6.346546649932861
    6. ' a' → logprob: -7.221546649932861
    7. ' ' → logprob: -7.221546649932861
    8. '<|end|>' → logprob: -8.59654712677002
    9. ')' → logprob: -9.22154712677002
    10. 'a' → logprob: -9.72154712677002

Token 85: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.49921315908432007
    2. ' a' → logprob: -1.3742132186889648
    3. ' min' → logprob: -2.249213218688965
    4. 'min' → logprob: -3.374213218688965
    5. ' ' → logprob: -9.749213218688965
    6. ' max' → logprob: -9.999213218688965
    7. 'max' → logprob: -10.249213218688965
    8. '   ' → logprob: -10.499213218688965
    9. '	a' → logprob: -11.499213218688965
    10. '	min' → logprob: -11.499213218688965

Token 86: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.00507341418415308
    2. 'if' → logprob: -5.380073547363281
    3. ' ' → logprob: -8.505073547363281
    4. ' <' → logprob: -9.505073547363281
    5. '0' → logprob: -10.380073547363281
    6. ' min' → logprob: -10.380073547363281
    7. '<' → logprob: -10.505073547363281
    8. '[' → logprob: -10.630073547363281
    9. 'min' → logprob: -10.880073547363281
    10. '   ' → logprob: -11.380073547363281

Token 87: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.038043901324272156
    2. 'a' → logprob: -3.288043975830078
    3. ' ' → logprob: -13.663043975830078
    4. '	a' → logprob: -13.788043975830078
    5. '  ' → logprob: -16.163043975830078
    6. '   ' → logprob: -16.288043975830078
    7. '    ' → logprob: -16.913043975830078
    8. '(a' → logprob: -18.163043975830078
    9. '>a' → logprob: -19.038043975830078
    10. '[a' → logprob: -19.663043975830078

Token 88: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.004296353552490473
    2. '<' → logprob: -5.75429630279541
    3. ' <=' → logprob: -6.87929630279541
    4. '<=' → logprob: -10.25429630279541
    5. ' >' → logprob: -10.50429630279541
    6. ' ' → logprob: -10.75429630279541
    7. '<|end|>' → logprob: -13.12929630279541
    8. '>' → logprob: -14.25429630279541
    9. '[' → logprob: -15.12929630279541
    10. ' else' → logprob: -15.12929630279541

Token 89: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0019286326132714748
    2. ' b' → logprob: -6.251928806304932
    3. ' ' → logprob: -19.876928329467773
    4. ')b' → logprob: -20.376928329467773
    5. '>b' → logprob: -21.501928329467773
    6. '<|end|>' → logprob: -21.876928329467773
    7. '	b' → logprob: -22.001928329467773
    8. '   ' → logprob: -22.751928329467773
    9. '=b' → logprob: -23.001928329467773
    10. ' б' → logprob: -23.001928329467773

Token 90: ' else' (ID: 1203)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.48332229256629944
    2. ' b' → logprob: -0.983322262763977
    3. ' else' → logprob: -4.7333221435546875
    4. 'else' → logprob: -7.8583221435546875
    5. ' ' → logprob: -11.108322143554688
    6. ' ' → logprob: -13.233322143554688
    7. '   ' → logprob: -14.108322143554688
    8. '  ' → logprob: -14.608322143554688
    9. '	b' → logprob: -16.108322143554688
    10. '>b' → logprob: -16.108322143554688

Token 91: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.004078401252627373
    2. ' b' → logprob: -5.504078388214111
    3. '	b' → logprob: -19.504077911376953
    4. '   ' → logprob: -19.629077911376953
    5. ' ' → logprob: -19.629077911376953
    6. ')b' → logprob: -21.254077911376953
    7. '    ' → logprob: -21.754077911376953
    8. '  ' → logprob: -22.004077911376953
    9. ' ' → logprob: -22.504077911376953
    10. '>b' → logprob: -23.004077911376953

Token 92: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0011930868495255709
    2. '
' → logprob: -7.626193046569824
    3. 'result' → logprob: -7.876193046569824
    4. '```' → logprob: -10.001193046569824
    5. 'res' → logprob: -10.376193046569824
    6. 'p' → logprob: -10.376193046569824
    7. 'm' → logprob: -10.501193046569824
    8. 's' → logprob: -10.876193046569824
    9. 'r' → logprob: -10.876193046569824
    10. '`
' → logprob: -11.001193046569824

Token 93: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0007930741412565112
    2. 'result' → logprob: -7.625792980194092
    3. '
' → logprob: -9.00079345703125
    4. 'res' → logprob: -10.12579345703125
    5. 'p' → logprob: -10.37579345703125
    6. 'answer' → logprob: -10.62579345703125
    7. 'pr' → logprob: -11.25079345703125
    8. '```' → logprob: -11.25079345703125
    9. 'r' → logprob: -11.37579345703125
    10. 'ans' → logprob: -11.75079345703125

Token 94: '((' (ID: 2054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007109133061021566
    2. '(c' → logprob: -5.00710916519165
    3. '(min' → logprob: -8.132108688354492
    4. '(le' → logprob: -10.507108688354492
    5. '((' → logprob: -11.382108688354492
    6. 'least' → logprob: -11.507108688354492
    7. '(s' → logprob: -11.757108688354492
    8. '(max' → logprob: -11.882108688354492
    9. '(len' → logprob: -12.007108688354492
    10. '(ls' → logprob: -12.257108688354492

Token 95: 'lambda' (ID: 35280)
  Prédit: 'least'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'least' → logprob: -0.11754927784204483
    2. 'c' → logprob: -2.367549180984497
    3. 'min' → logprob: -4.492549419403076
    4. ' least' → logprob: -5.242549419403076
    5. ' c' → logprob: -7.742549419403076
    6. ')c' → logprob: -9.117548942565918
    7. ' min' → logprob: -9.867548942565918
    8. ')' → logprob: -10.367548942565918
    9. 'le' → logprob: -10.742548942565918
    10. 'len' → logprob: -11.367548942565918

Token 96: ' x' (ID: 1215)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.3250348567962646
    2. ' c' → logprob: -1.3250348567962646
    3. ' x' → logprob: -1.7000348567962646
    4. 'a' → logprob: -1.9500348567962646
    5. 'c' → logprob: -2.7000348567962646
    6. 'x' → logprob: -2.8250348567962646
    7. ' s' → logprob: -4.575035095214844
    8. 's' → logprob: -6.200035095214844
    9. ' least' → logprob: -6.700035095214844
    10. ' i' → logprob: -7.075035095214844

Token 97: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011929201893508434
    2. ' :' → logprob: -4.636929035186768
    3. ':x' → logprob: -6.386929035186768
    4. ',' → logprob: -8.011929512023926
    5. ':c' → logprob: -9.386929512023926
    6. ':[' → logprob: -11.011929512023926
    7. 'x' → logprob: -11.136929512023926
    8. ',c' → logprob: -12.136929512023926
    9. ':s' → logprob: -12.886929512023926
    10. ':(' → logprob: -12.886929512023926

Token 98: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.021174447610974312
    2. ' y' → logprob: -3.896174430847168
    3. 'c' → logprob: -7.896174430847168
    4. 'x' → logprob: -8.771174430847168
    5. 's' → logprob: -9.896174430847168
    6. 'a' → logprob: -10.771174430847168
    7. 'lambda' → logprob: -11.396174430847168
    8. ' c' → logprob: -12.146174430847168
    9. ' s' → logprob: -12.521174430847168
    10. '   ' → logprob: -12.771174430847168

Token 99: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007846142980270088
    2. ' :' → logprob: -7.250784397125244
    3. ':x' → logprob: -9.625784873962402
    4. ',' → logprob: -13.375784873962402
    5. ':y' → logprob: -13.875784873962402
    6. ':return' → logprob: -14.125784873962402
    7. ':min' → logprob: -14.375784873962402
    8. ':c' → logprob: -14.375784873962402
    9. ':
' → logprob: -14.625784873962402
    10. ':s' → logprob: -14.875784873962402

Token 100: ' least' (ID: 5153)
  Prédit: 'least'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'least' → logprob: -0.5201285481452942
    2. ' least' → logprob: -1.3951284885406494
    3. 'x' → logprob: -2.1451284885406494
    4. ' x' → logprob: -3.2701284885406494
    5. 'min' → logprob: -6.5201287269592285
    6. ' min' → logprob: -8.39512825012207
    7. 'abs' → logprob: -9.14512825012207
    8. '(x' → logprob: -9.27012825012207
    9. ' ' → logprob: -9.39512825012207
    10. '0' → logprob: -9.39512825012207

Token 101: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.586815357208252
    2. '(c' → logprob: -0.836815357208252
    3. '(' → logprob: -4.586815357208252
    4. '(
' → logprob: -8.836814880371094
    5. ')(' → logprob: -8.961814880371094
    6. 'x' → logprob: -9.086814880371094
    7. ')' → logprob: -9.586814880371094
    8. 'c' → logprob: -9.836814880371094
    9. ' (' → logprob: -10.211814880371094
    10. '(s' → logprob: -10.211814880371094

Token 102: ',' (ID: 11)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4223394989967346
    2. ',' → logprob: -1.1723394393920898
    3. ',y' → logprob: -4.42233943939209
    4. ' +' → logprob: -4.92233943939209
    5. ',c' → logprob: -5.17233943939209
    6. ' ,' → logprob: -5.29733943939209
    7. '+' → logprob: -5.67233943939209
    8. '[y' → logprob: -8.54733943939209
    9. '+y' → logprob: -8.92233943939209
    10. 'c' → logprob: -8.92233943939209

Token 103: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.014165272004902363
    2. ' y' → logprob: -4.26416540145874
    3. ' ' → logprob: -14.389164924621582
    4. 'x' → logprob: -15.014164924621582
    5. ')y' → logprob: -15.139164924621582
    6. '(y' → logprob: -15.764164924621582
    7. ')' → logprob: -16.0141658782959
    8. 'c' → logprob: -16.3891658782959
    9. '	y' → logprob: -16.3891658782959
    10. '   ' → logprob: -17.0141658782959

Token 104: '))(' (ID: 72297)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.7158704996109009
    2. '))(' → logprob: -1.2158704996109009
    3. ')(' → logprob: -1.8408704996109009
    4. ')))' → logprob: -2.9658703804016113
    5. ')' → logprob: -5.715870380401611
    6. '(c' → logprob: -7.965870380401611
    7. ')c' → logprob: -7.965870380401611
    8. '))
' → logprob: -9.21587085723877
    9. ')))
' → logprob: -9.59087085723877
    10. '(' → logprob: -9.84087085723877

Token 105: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -5.598092684522271e-05
    2. ' c' → logprob: -9.875056266784668
    3. '   ' → logprob: -13.250056266784668
    4. '*c' → logprob: -13.250056266784668
    5. ')c' → logprob: -14.625056266784668
    6. '(c' → logprob: -15.500056266784668
    7. '	c' → logprob: -16.62505531311035
    8. '  ' → logprob: -17.00005531311035
    9. '
' → logprob: -17.00005531311035
    10. ')' → logprob: -17.37505531311035

Token 106: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0001801801408873871
    2. '0' → logprob: -8.6251802444458
    3. '[
' → logprob: -14.7501802444458
    4. ' [' → logprob: -17.000179290771484
    5. ' ' → logprob: -17.125179290771484
    6. '```' → logprob: -17.250179290771484
    7. ')' → logprob: -17.375179290771484
    8. '   ' → logprob: -18.375179290771484
    9. '\[' → logprob: -18.625179290771484
    10. '
' → logprob: -19.625179290771484

Token 107: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.306760805164231e-05
    2. '1' → logprob: -11.87501335144043
    3. ' ' → logprob: -12.37501335144043
    4. '   ' → logprob: -14.75001335144043
    5. '])' → logprob: -15.25001335144043
    6. ']' → logprob: -15.68751335144043
    7. '[' → logprob: -15.75001335144043
    8. '-' → logprob: -16.31251335144043
    9. '  ' → logprob: -16.56251335144043
    10. ')' → logprob: -16.68751335144043

Token 108: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001264282618649304
    2. '],' → logprob: -6.7512640953063965
    3. ' ,' → logprob: -9.376264572143555
    4. ',c' → logprob: -12.626264572143555
    5. ']' → logprob: -13.376264572143555
    6. '),' → logprob: -13.501264572143555
    7. '   ' → logprob: -13.501264572143555
    8. '‌,' → logprob: -14.876264572143555
    9. ' ],' → logprob: -15.876264572143555
    10. '},' → logprob: -15.876264572143555

Token 109: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.4287053346633911
    2. ' c' → logprob: -1.0537053346633911
    3. ' ' → logprob: -13.428705215454102
    4. ')c' → logprob: -13.928705215454102
    5. '	c' → logprob: -14.428705215454102
    6. '   ' → logprob: -14.803705215454102
    7. ')' → logprob: -15.053705215454102
    8. '  ' → logprob: -15.553705215454102
    9. ' ' → logprob: -15.553705215454102
    10. '    ' → logprob: -15.803705215454102

Token 110: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0059370906092226505
    2. '1' → logprob: -5.130937099456787
    3. '[
' → logprob: -12.505936622619629
    4. ']' → logprob: -13.630936622619629
    5. ' [' → logprob: -13.630936622619629
    6. '```' → logprob: -13.880936622619629
    7. '   ' → logprob: -14.505936622619629
    8. '][' → logprob: -15.255936622619629
    9. ')' → logprob: -15.880936622619629
    10. ' ' → logprob: -16.005937576293945

Token 111: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -15.000000953674316
    3. '0' → logprob: -15.250000953674316
    4. '[' → logprob: -15.875000953674316
    5. '   ' → logprob: -16.25
    6. '])' → logprob: -17.125
    7. '```' → logprob: -17.25
    8. ']' → logprob: -17.375
    9. '' → logprob: -18.75
    10. '-' → logprob: -18.875

Token 112: ']))' (ID: 20259)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0020878082141280174
    2. ')' → logprob: -6.252087593078613
    3. ')))' → logprob: -8.752087593078613
    4. '))
' → logprob: -14.877087593078613
    5. ' ))' → logprob: -15.502087593078613
    6. ']))' → logprob: -16.12708854675293
    7. '])' → logprob: -16.50208854675293
    8. '()))' → logprob: -16.50208854675293
    9. '),' → logprob: -16.87708854675293
    10. '))))' → logprob: -17.00208854675293


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 110
Tokens correctement prédits (1ère position, stricte): 47
Tokens correctement prédits (1ère position, avec adaptation): 50
Tokens correctement prédits (top 10): 98
Précision stricte (1ère position): 42.73%
Précision adaptée (1ère position): 45.45%
Précision (top 10): 89.09%
================================================================================
