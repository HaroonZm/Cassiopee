================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:55:57
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import collections

N = int(input())
X, Y = [], []
rng1 = range(N)
for idx in rng1:
    xs, ys, d = input().split()
    x0 = int(xs)
    y0 = int(ys)
    if d == 'L':
        X += [(x0, -1)]
        Y.append((y0, 0))
    elif d == 'R':
        X.append((x0, 1))
        Y += [(y0, 0)]
    elif d == 'U':
        X.extend([(x0, 0)])
        Y += [(y0, 1)]
    else:
        X.append((x0, 0))
        Y.insert(len(Y), (y0, -1))

dctX = collections.defaultdict(set)
for a, b in X:
    dctX[b] |= {a}
lst1 = []
for k in sorted([-1, 0, 1], reverse=False):
    stuff = dctX[k]
    if stuff:
        mi, ma = min(stuff), max(stuff)
        lst1.extend([(mi, k), (ma, k)])

dctY = collections.defaultdict(set)
for a, b in Y:
    dctY[b].add(a)
lst2 = []
for k in [1, 0, -1][::-1]:
    arr = dctY[k]
    if len(arr) == 0: continue
    mn, mx = min(arr), max(arr)
    for val in (mn, mx):
        lst2.append((val, k))

def ts(plist):
    z = set()
    for i in range(len(plist)):
        for j in range(i + 1, len(plist)):
            p1, d1 = plist[i]
            p2, d2 = plist[j]
            if d1 == d2: pass
            else:
                if d1 == -1:
                    if d2 == 0:
                        t = p1 - p2
                    else:
                        t = (p1 - p2) / 2
                elif d1 == 0:
                    t = (p2 - p1) if d2 == -1 else (p1 - p2)
                else:
                    if d2 == -1:
                        t = (p2 - p1) / 2
                    else:
                        t = p2 - p1
                if t > 0:
                    z.add(t)
    return z

CX = ts(lst1)
CY = ts(lst2)
cand_t = [0]
for _ in (list(CX) + list(CY)):
    cand_t.append(_)

def pos(pdt, t):
    return pdt[0] + pdt[1] * t

import math
ans = float("inf")
for tt in cand_t:
    pxmin = math.inf
    pxmax = -math.inf
    for xx in lst1:
        tmp = pos(xx, tt)
        if tmp < pxmin: pxmin = tmp
        if tmp > pxmax: pxmax = tmp
    pymin = float("+inf")
    pymax = float("-inf")
    for yy in lst2:
        pp = pos(yy, tt)
        pymin = pp if pp < pymin else pymin
        pymax = pp if pp > pymax else pymax
    tmpans = abs(pxmin - pxmax) * abs(pymin - pymax)
    if ans >= tmpans:
        ans = tmpans
print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' collections' (ID: 22690)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'N' (ID: 45)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0024107310455292463
    2. '.Counter' → logprob: -6.127410888671875
    3. '```' → logprob: -10.127410888671875
    4. '\' → logprob: -10.377410888671875
    5. '.default' → logprob: -10.377410888671875
    6. ',' → logprob: -11.002410888671875
    7. '\.' → logprob: -11.127410888671875
    8. 'import' → logprob: -11.127410888671875
    9. '.C' → logprob: -12.002410888671875
    10. '_' → logprob: -12.252410888671875

Token 4: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5202142596244812
    2. ' =' → logprob: -1.520214319229126
    3. 'a' → logprob: -2.020214319229126
    4. '_' → logprob: -4.020214080810547
    5. '.' → logprob: -4.770214080810547
    6. 'ame' → logprob: -5.395214080810547
    7. 'T' → logprob: -5.770214080810547
    8. 'e' → logprob: -5.770214080810547
    9. 'umber' → logprob: -5.770214080810547
    10. ',' → logprob: -6.270214080810547

Token 5: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.042002152651548386
    2. ' collections' → logprob: -3.4170022010803223
    3. '10' → logprob: -5.542002201080322
    4. 'collections' → logprob: -5.917002201080322
    5. ' int' → logprob: -6.792002201080322
    6. '5' → logprob: -8.542001724243164
    7. ' defaultdict' → logprob: -9.167001724243164
    8. '100' → logprob: -9.917001724243164
    9. 'int' → logprob: -10.042001724243164
    10. '20' → logprob: -10.292001724243164

Token 6: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -5.943783253314905e-05
    2. ''' → logprob: -10.750059127807617
    3. '`' → logprob: -11.625059127807617
    4. '('' → logprob: -12.000059127807617
    5. '(
' → logprob: -12.250059127807617
    6. '```' → logprob: -12.500059127807617
    7. '()' → logprob: -12.750059127807617
    8. ' (' → logprob: -13.125059127807617
    9. '"' → logprob: -13.250059127807617
    10. '("("' → logprob: -13.375059127807617

Token 7: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8286998271942139
    2. '()' → logprob: -0.9536998271942139
    3. ')' → logprob: -2.078699827194214
    4. '())' → logprob: -2.953699827194214
    5. '(
' → logprob: -8.078700065612793
    6. '('' → logprob: -9.203700065612793
    7. '`)' → logprob: -9.578700065612793
    8. '))' → logprob: -9.703700065612793
    9. '(

' → logprob: -9.828700065612793
    10. '(`' → logprob: -10.453700065612793

Token 8: 'X' (ID: 55)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.5139791965484619
    2. 'a' → logprob: -2.388979196548462
    3. 'counts' → logprob: -2.638979196548462
    4. 's' → logprob: -3.138979196548462
    5. 'arr' → logprob: -3.263979196548462
    6. 'array' → logprob: -3.638979196548462
    7. 'nums' → logprob: -4.138978958129883
    8. ')' → logprob: -4.263978958129883
    9. 'items' → logprob: -4.263978958129883
    10. 'count' → logprob: -4.263978958129883

Token 9: ',' (ID: 11)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.13561198115348816
    2. '_' → logprob: -3.2606120109558105
    3. 's' → logprob: -3.6356120109558105
    4. '.' → logprob: -4.2606120109558105
    5. ' =' → logprob: -4.5106120109558105
    6. ')' → logprob: -4.7606120109558105
    7. '=' → logprob: -5.0106120109558105
    8. '_counts' → logprob: -5.0106120109558105
    9. ',' → logprob: -5.2606120109558105
    10. '[]' → logprob: -6.1356120109558105

Token 10: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.12817524373531342
    2. ' Y' → logprob: -2.1281752586364746
    3. 'y' → logprob: -7.878175258636475
    4. 'K' → logprob: -9.253174781799316
    5. ' ' → logprob: -9.378174781799316
    6. 'L' → logprob: -9.378174781799316
    7. 'Q' → logprob: -9.878174781799316
    8. '=' → logprob: -10.003174781799316
    9. ' =' → logprob: -10.003174781799316
    10. '_Y' → logprob: -10.128174781799316

Token 11: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04408499598503113
    2. '=' → logprob: -3.1690850257873535
    3. ',' → logprob: -6.9190850257873535
    4. ')' → logprob: -9.669084548950195
    5. ' ' → logprob: -10.919084548950195
    6. '[' → logprob: -11.669084548950195
    7. ' ,' → logprob: -12.794084548950195
    8. '_' → logprob: -14.169084548950195
    9. '.' → logprob: -14.794084548950195
    10. '  ' → logprob: -14.919084548950195

Token 12: ' [],' (ID: 22188)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.6591973900794983
    2. 'collections' → logprob: -0.9091973900794983
    3. ' map' → logprob: -3.2841973304748535
    4. ' [],' → logprob: -4.4091973304748535
    5. 'map' → logprob: -4.5341973304748535
    6. '[]' → logprob: -5.1591973304748535
    7. ' input' → logprob: -5.6591973304748535
    8. '[],' → logprob: -5.6591973304748535
    9. ' []' → logprob: -5.7841973304748535
    10. 'input' → logprob: -6.4091973304748535

Token 13: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.07898970693349838
    2. ' []' → logprob: -2.5789897441864014
    3. '[]
' → logprob: -9.70398998260498
    4. '<|end|>' → logprob: -11.45398998260498
    5. '[:]' → logprob: -12.07898998260498
    6. ' ' → logprob: -12.20398998260498
    7. '[]}' → logprob: -12.20398998260498
    8. '[]

' → logprob: -12.57898998260498
    9. ' []
' → logprob: -12.95398998260498
    10. '=[]' → logprob: -13.57898998260498

Token 14: 'rng' (ID: 176450)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.5954712075181305e-05
    2. ' for' → logprob: -10.250036239624023
    3. 'For' → logprob: -15.625036239624023
    4. '```' → logprob: -15.625036239624023
    5. '<|end|>' → logprob: -15.750036239624023
    6. '
' → logprob: -18.000036239624023
    7. '	for' → logprob: -18.000036239624023
    8. 'f' → logprob: -19.875036239624023
    9. '``' → logprob: -19.875036239624023
    10. 'from' → logprob: -20.000036239624023

Token 15: '1' (ID: 16)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.00025001514586620033
    2. '(e' → logprob: -9.375249862670898
    3. '(' → logprob: -9.625249862670898
    4. '=' → logprob: -10.375249862670898
    5. 'es' → logprob: -10.750249862670898
    6. ' =' → logprob: -11.000249862670898
    7. '```' → logprob: -11.125249862670898
    8. 'E' → logprob: -13.125249862670898
    9. 'е' → logprob: -13.125249862670898
    10. 'ge' → logprob: -13.250249862670898

Token 16: ' =' (ID: 314)
  Prédit: 'ge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ge' → logprob: -0.9645241498947144
    2. 'e' → logprob: -1.0895241498947144
    3. '=' → logprob: -1.8395241498947144
    4. ' =' → logprob: -2.964524269104004
    5. '(' → logprob: -3.214524269104004
    6. '1' → logprob: -4.464524269104004
    7. '```' → logprob: -5.589524269104004
    8. '_' → logprob: -5.714524269104004
    9. 'range' → logprob: -5.714524269104004
    10. '(range' → logprob: -6.339524269104004

Token 17: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.09369995445013046
    2. ' range' → logprob: -2.4686999320983887
    3. 'collections' → logprob: -5.468699932098389
    4. ' collections' → logprob: -8.468700408935547
    5. '(range' → logprob: -9.843700408935547
    6. 'list' → logprob: -10.343700408935547
    7. ' ' → logprob: -10.468700408935547
    8. '   ' → logprob: -10.843700408935547
    9. '1' → logprob: -10.968700408935547
    10. '	range' → logprob: -11.156200408935547

Token 18: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.32417550683021545
    2. '(N' → logprob: -1.324175477027893
    3. '(len' → logprob: -4.6991753578186035
    4. '(n' → logprob: -6.8241753578186035
    5. '(-' → logprob: -7.9491753578186035
    6. '(
' → logprob: -8.949175834655762
    7. ' (' → logprob: -10.074175834655762
    8. '(r' → logprob: -10.074175834655762
    9. '((' → logprob: -10.324175834655762
    10. '(s' → logprob: -10.824175834655762

Token 19: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.656383680412546e-05
    2. ' )' → logprob: -10.875046730041504
    3. ')
' → logprob: -10.875046730041504
    4. '+' → logprob: -13.000046730041504
    5. '))' → logprob: -13.000046730041504
    6. '-' → logprob: -14.000046730041504
    7. '),' → logprob: -14.250046730041504
    8. ',' → logprob: -14.875046730041504
    9. '`)' → logprob: -14.875046730041504
    10. ')

' → logprob: -15.250046730041504

Token 20: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00036037206882610917
    2. ' for' → logprob: -8.000360488891602
    3. '<|end|>' → logprob: -11.000360488891602
    4. '
' → logprob: -12.625360488891602
    5. '```' → logprob: -12.750360488891602
    6. 'For' → logprob: -14.000360488891602
    7. '<|end|>' → logprob: -15.750360488891602
    8. ')' → logprob: -16.0003604888916
    9. 'f' → logprob: -16.2503604888916
    10. '[' → logprob: -16.3753604888916

Token 21: ' idx' (ID: 14016)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.026436034590005875
    2. 'i' → logprob: -4.151435852050781
    3. ' _' → logprob: -5.026435852050781
    4. ' x' → logprob: -6.526435852050781
    5. ' ' → logprob: -7.026435852050781
    6. '_' → logprob: -7.026435852050781
    7. ' r' → logprob: -8.901435852050781
    8. ' n' → logprob: -9.026435852050781
    9. ' a' → logprob: -9.651435852050781
    10. 'x' → logprob: -9.651435852050781

Token 22: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.055778201669454575
    2. 'in' → logprob: -2.9307782649993896
    3. ' ' → logprob: -7.0557780265808105
    4. '	in' → logprob: -11.180778503417969
    5. '  ' → logprob: -11.680778503417969
    6. ' i' → logprob: -13.805778503417969
    7. '<|end|>' → logprob: -13.805778503417969
    8. ',' → logprob: -13.805778503417969
    9. 'import' → logprob: -13.930778503417969
    10. '_in' → logprob: -14.055778503417969

Token 23: ' rng' (ID: 76666)
  Prédit: ' rng'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rng' → logprob: -0.048665717244148254
    2. 'rng' → logprob: -3.048665761947632
    3. ' ' → logprob: -10.548666000366211
    4. 'r' → logprob: -10.548666000366211
    5. '_rng' → logprob: -11.048666000366211
    6. ' range' → logprob: -12.423666000366211
    7. 'range' → logprob: -13.548666000366211
    8. ' rg' → logprob: -13.548666000366211
    9. 'rg' → logprob: -14.173666000366211
    10. '	r' → logprob: -14.173666000366211

Token 24: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.630610641877865e-06
    2. '(' → logprob: -12.625006675720215
    3. '_' → logprob: -13.500006675720215
    4. '.' → logprob: -15.375006675720215
    5. 'ect' → logprob: -15.500006675720215
    6. 'er' → logprob: -16.0000057220459
    7. 'e' → logprob: -16.3125057220459
    8. '(i' → logprob: -16.3125057220459
    9. 'ection' → logprob: -16.3125057220459
    10. 'eg' → logprob: -17.0000057220459

Token 25: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007705530617386103
    2. ' :' → logprob: -4.8827056884765625
    3. ',' → logprob: -9.882705688476562
    4. ':
' → logprob: -11.257705688476562
    5. '):' → logprob: -11.382705688476562
    6. ':**' → logprob: -12.132705688476562
    7. ',:' → logprob: -12.257705688476562
    8. ' ' → logprob: -12.757705688476562
    9. ')' → logprob: -13.632705688476562
    10. '   ' → logprob: -13.882705688476562

Token 26: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47843271493911743
    2. '    ' → logprob: -2.3534326553344727
    3. ' ' → logprob: -2.4784326553344727
    4. ' X' → logprob: -2.7284326553344727
    5. 'input' → logprob: -3.2284326553344727
    6. ' input' → logprob: -3.3534326553344727
    7. 'X' → logprob: -3.8534326553344727
    8. 'x' → logprob: -4.728432655334473
    9. '    
' → logprob: -5.478432655334473
    10. 'data' → logprob: -6.103432655334473

Token 27: ' xs' (ID: 26642)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.17690402269363403
    2. 'x' → logprob: -2.9269039630889893
    3. ' line' → logprob: -3.3019039630889893
    4. ' data' → logprob: -4.301904201507568
    5. ' _' → logprob: -4.301904201507568
    6. 'data' → logprob: -4.551904201507568
    7. ' ' → logprob: -5.176904201507568
    8. ' val' → logprob: -5.426904201507568
    9. '_' → logprob: -6.051904201507568
    10. 'a' → logprob: -6.176904201507568

Token 28: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.402382493019104
    2. '.append' → logprob: -1.152382493019104
    3. '=' → logprob: -5.0273823738098145
    4. ' =' → logprob: -5.2773823738098145
    5. ',' → logprob: -6.1523823738098145
    6. ' .' → logprob: -8.027382850646973
    7. ')' → logprob: -8.527382850646973
    8. '.=' → logprob: -8.652382850646973
    9. 'append' → logprob: -8.902382850646973
    10. '.)' → logprob: -9.402382850646973

Token 29: ' ys' (ID: 67301)
  Prédit: 'ys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ys' → logprob: -0.0004378214362077415
    2. ' ys' → logprob: -7.7504377365112305
    3. 'ysi' → logprob: -12.50043773651123
    4. 'ysin' → logprob: -14.25043773651123
    5. 'yses' → logprob: -14.75043773651123
    6. 'ysig' → logprob: -15.00043773651123
    7. 'ysm' → logprob: -15.00043773651123
    8. 'ysen' → logprob: -15.12543773651123
    9. 'ysg' → logprob: -15.50043773651123
    10. 'ysy' → logprob: -15.87543773651123

Token 30: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5231677293777466
    2. ' =' → logprob: -0.8981677293777466
    3. ',' → logprob: -10.273167610168457
    4. '=input' → logprob: -12.523167610168457
    5. ' ' → logprob: -12.773167610168457
    6. '=int' → logprob: -14.273167610168457
    7. ')' → logprob: -14.398167610168457
    8. '   ' → logprob: -14.898167610168457
    9. ' ,' → logprob: -15.398167610168457
    10. '＝' → logprob: -15.523167610168457

Token 31: ' d' (ID: 272)
  Prédit: ' zs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' zs' → logprob: -0.6053714156150818
    2. 'zs' → logprob: -0.9803714156150818
    3. ' =' → logprob: -3.7303714752197266
    4. '_' → logprob: -3.9803714752197266
    5. 'd' → logprob: -5.480371475219727
    6. ' _' → logprob: -5.980371475219727
    7. ' d' → logprob: -6.230371475219727
    8. '=' → logprob: -6.542871475219727
    9. 'w' → logprob: -6.542871475219727
    10. 'z' → logprob: -6.667871475219727

Token 32: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.058825213462114334
    2. ' =' → logprob: -2.9338252544403076
    3. ',' → logprob: -5.9338250160217285
    4. 'ata' → logprob: -7.9338250160217285
    5. 'a' → logprob: -8.558825492858887
    6. 'x' → logprob: -8.683825492858887
    7. ')' → logprob: -9.683825492858887
    8. 's' → logprob: -9.808825492858887
    9. '=}' → logprob: -9.808825492858887
    10. 'e' → logprob: -9.933825492858887

Token 33: ' input' (ID: 3422)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.29593226313591003
    2. 'map' → logprob: -1.5459322929382324
    3. ' input' → logprob: -3.6709322929382324
    4. 'input' → logprob: -4.045932292938232
    5. ' ' → logprob: -10.170931816101074
    6. 'list' → logprob: -10.920931816101074
    7. ' list' → logprob: -11.170931816101074
    8. ' [' → logprob: -11.545931816101074
    9. '	map' → logprob: -11.795931816101074
    10. '[' → logprob: -12.170931816101074

Token 34: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0012099954765290022
    2. '(' → logprob: -7.3762102127075195
    3. '()' → logprob: -7.5012102127075195
    4. '('' → logprob: -11.00121021270752
    5. '('').' → logprob: -12.50121021270752
    6. '("").' → logprob: -12.75121021270752
    7. '("("' → logprob: -12.87621021270752
    8. ' ().' → logprob: -13.50121021270752
    9. '(.' → logprob: -14.37621021270752
    10. '(

' → logprob: -14.62621021270752

Token 35: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00012928384239785373
    2. 'strip' → logprob: -9.250129699707031
    3. 'rstrip' → logprob: -10.500129699707031
    4. ' split' → logprob: -12.500129699707031
    5. 'spl' → logprob: -13.500129699707031
    6. 'sp' → logprob: -15.000129699707031
    7. 'rs' → logprob: -16.37512969970703
    8. '(split' → logprob: -17.00012969970703
    9. '.split' → logprob: -17.25012969970703
    10. '```' → logprob: -17.37512969970703

Token 36: '()
' (ID: 1234)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.4441152811050415
    2. '(' → logprob: -1.1941152811050415
    3. '("("' → logprob: -2.944115161895752
    4. '()' → logprob: -5.944115161895752
    5. '("' → logprob: -8.81911563873291
    6. '(',' → logprob: -9.81911563873291
    7. '(('' → logprob: -10.44411563873291
    8. '(`' → logprob: -10.44411563873291
    9. '((' → logprob: -11.19411563873291
    10. ''' → logprob: -11.31911563873291

Token 37: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 38: ' x' (ID: 1215)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 39: '0' (ID: 15)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.002121830591931939
    2. ',' → logprob: -6.752121925354004
    3. '.append' → logprob: -7.002121925354004
    4. ' =' → logprob: -11.252121925354004
    5. '=' → logprob: -11.877121925354004
    6. '.' → logprob: -12.002121925354004
    7. ',s' → logprob: -12.377121925354004
    8. '_s' → logprob: -13.127121925354004
    9. ')' → logprob: -13.377121925354004
    10. '<|end|>' → logprob: -13.627121925354004

Token 40: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05495619773864746
    2. 's' → logprob: -3.0549561977386475
    3. ' =' → logprob: -5.554956436157227
    4. '=' → logprob: -6.304956436157227
    5. '.append' → logprob: -8.429956436157227
    6. ',y' → logprob: -9.429956436157227
    7. ',s' → logprob: -9.554956436157227
    8. '<|end|>' → logprob: -9.554956436157227
    9. ' ,' → logprob: -9.679956436157227
    10. ')' → logprob: -10.429956436157227

Token 41: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.31644201278686523
    2. ' int' → logprob: -1.3164420127868652
    3. 'float' → logprob: -6.441442012786865
    4. ' float' → logprob: -6.566442012786865
    5. '0' → logprob: -10.441442489624023
    6. '[int' → logprob: -10.441442489624023
    7. ' xs' → logprob: -10.816442489624023
    8. 'X' → logprob: -11.066442489624023
    9. 'x' → logprob: -11.191442489624023
    10. 'xs' → logprob: -11.441442489624023

Token 42: '(xs' (ID: 132690)
  Prédit: '(xs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(xs' → logprob: -0.00011021859245374799
    2. '(' → logprob: -9.750110626220703
    3. '(x' → logprob: -9.875110626220703
    4. '(s' → logprob: -15.500110626220703
    5. '(
' → logprob: -16.375110626220703
    6. ' (' → logprob: -16.500110626220703
    7. '(rs' → logprob: -17.625110626220703
    8. '(xhr' → logprob: -18.000110626220703
    9. '(ns' → logprob: -18.500110626220703
    10. '(

' → logprob: -18.625110626220703

Token 43: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003233070601709187
    2. ')
' → logprob: -8.250323295593262
    3. ' )' → logprob: -10.375323295593262
    4. ')

' → logprob: -12.750323295593262
    5. '   ' → logprob: -12.875323295593262
    6. '+' → logprob: -12.875323295593262
    7. ' ' → logprob: -12.875323295593262
    8. ')#' → logprob: -13.000323295593262
    9. '),' → logprob: -13.250323295593262
    10. '[' → logprob: -13.250323295593262

Token 44: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 45: ' y' (ID: 342)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04467077553272247
    2. '<|end|>' → logprob: -3.294670820236206
    3. ' ,' → logprob: -6.544670581817627
    4. ',' → logprob: -6.794670581817627
    5. ')' → logprob: -6.919670581817627
    6. '  ' → logprob: -7.169670581817627
    7. 'x' → logprob: -7.169670581817627
    8. '    ' → logprob: -7.669670581817627
    9. ' )' → logprob: -7.794670581817627
    10. '0' → logprob: -8.919671058654785

Token 46: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.875
    3. '_' → logprob: -17.25
    4. ' =' → logprob: -17.625
    5. 's' → logprob: -17.625
    6. 'o' → logprob: -17.75
    7. '=' → logprob: -18.125
    8. '۰' → logprob: -18.5
    9. '1' → logprob: -20.5
    10. '０' → logprob: -21.125

Token 47: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47415491938591003
    2. ' =' → logprob: -0.9741549491882324
    3. '=int' → logprob: -9.724154472351074
    4. '0' → logprob: -11.974154472351074
    5. ' ' → logprob: -12.224154472351074
    6. ')' → logprob: -12.599154472351074
    7. '<|end|>' → logprob: -12.974154472351074
    8. ',' → logprob: -14.849154472351074
    9. ' ' → logprob: -16.22415542602539
    10. 'int' → logprob: -16.47415542602539

Token 48: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0015030752401798964
    2. ' int' → logprob: -6.501502990722656
    3. '=int' → logprob: -15.001502990722656
    4. '<int' → logprob: -15.876502990722656
    5. '[int' → logprob: -16.001502990722656
    6. '(int' → logprob: -16.126502990722656
    7. ':int' → logprob: -17.376502990722656
    8. ' ' → logprob: -18.126502990722656
    9. '	int' → logprob: -18.626502990722656
    10. '   ' → logprob: -18.751502990722656

Token 49: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0008114131633192301
    2. 'ys' → logprob: -7.125811576843262
    3. 's' → logprob: -13.250811576843262
    4. '```' → logprob: -14.000811576843262
    5. ' ys' → logprob: -14.125811576843262
    6. ')' → logprob: -14.375811576843262
    7. '0' → logprob: -14.750811576843262
    8. ' (' → logprob: -14.750811576843262
    9. '``' → logprob: -15.375811576843262
    10. '1' → logprob: -15.500811576843262

Token 50: 'ys' (ID: 1371)
  Prédit: 'ys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ys' → logprob: -4.60414821645827e-06
    2. ' ys' → logprob: -12.875004768371582
    3. 'xs' → logprob: -14.875004768371582
    4. '(' → logprob: -14.875004768371582
    5. 'x' → logprob: -15.125004768371582
    6. ')' → logprob: -15.750004768371582
    7. '0' → logprob: -16.375003814697266
    8. '   ' → logprob: -16.500003814697266
    9. 'Ys' → logprob: -16.500003814697266
    10. 'yses' → logprob: -16.625003814697266

Token 51: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00030614540446549654
    2. '+' → logprob: -8.750306129455566
    3. ')
' → logprob: -9.250306129455566
    4. ')d' → logprob: -11.000306129455566
    5. '<|end|>' → logprob: -11.500306129455566
    6. '   ' → logprob: -12.375306129455566
    7. '-' → logprob: -12.500306129455566
    8. '*' → logprob: -12.750306129455566
    9. ' )' → logprob: -13.250306129455566
    10. ' +' → logprob: -13.375306129455566

Token 52: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 53: ' if' (ID: 538)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.22853556275367737
    2. 'if' (adapté à ' if') → logprob: -1.853535532951355
    3. ' if' → logprob: -3.4785356521606445
    4. '   ' → logprob: -4.7285356521606445
    5. 'dx' → logprob: -6.2285356521606445
    6. ' d' → logprob: -6.3535356521606445
    7. 'D' → logprob: -6.6035356521606445
    8. 'x' → logprob: -8.103535652160645
    9. '```' → logprob: -8.103535652160645
    10. 'X' → logprob: -8.228535652160645

Token 54: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.009760456159710884
    2. 'd' → logprob: -4.63476037979126
    3. ' ' → logprob: -13.634760856628418
    4. ' ' → logprob: -14.134760856628418
    5. 's' → logprob: -14.509760856628418
    6. '_d' → logprob: -14.634760856628418
    7. '    ' → logprob: -15.259760856628418
    8. '<|end|>' → logprob: -15.509760856628418
    9. '_' → logprob: -15.697260856628418
    10. '(d' → logprob: -15.822260856628418

Token 55: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.525596022605896
    2. ' ==' → logprob: -0.900596022605896
    3. '=' → logprob: -7.4005961418151855
    4. '=='' → logprob: -7.6505961418151855
    5. '[' → logprob: -7.7755961418151855
    6. '=="' → logprob: -8.150595664978027
    7. ' ' → logprob: -8.275595664978027
    8. ' =' → logprob: -9.650595664978027
    9. ' in' → logprob: -9.775595664978027
    10. '===' → logprob: -9.775595664978027

Token 56: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.09436187893152237
    2. ' '' → logprob: -3.3443617820739746
    3. '"' → logprob: -3.8443617820739746
    4. ''U' → logprob: -4.094361782073975
    5. ''A' → logprob: -5.219361782073975
    6. ' "' → logprob: -6.344361782073975
    7. ''L' → logprob: -6.594361782073975
    8. ''O' → logprob: -6.594361782073975
    9. ''H' → logprob: -7.344361782073975
    10. ' R' → logprob: -7.344361782073975

Token 57: 'L' (ID: 43)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.6847622990608215
    2. 'L' → logprob: -1.0597622394561768
    3. 'U' → logprob: -2.1847622394561768
    4. 'D' → logprob: -3.4347622394561768
    5. ''' → logprob: -6.559762477874756
    6. 'B' → logprob: -7.434762477874756
    7. 'N' → logprob: -7.559762477874756
    8. ''L' → logprob: -7.684762477874756
    9. ''U' → logprob: -8.059762001037598
    10. 'A' → logprob: -8.059762001037598

Token 58: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.002795848995447159
    2. ''' → logprob: -6.002795696258545
    3. '':
' → logprob: -8.627796173095703
    4. '':
' → logprob: -9.252796173095703
    5. ':' → logprob: -11.127796173095703
    6. '":' → logprob: -11.627796173095703
    7. '':

' → logprob: -11.752796173095703
    8. ' ':' → logprob: -13.252796173095703
    9. ')':' → logprob: -13.252796173095703
    10. '':'' → logprob: -13.252796173095703

Token 59: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.21507054567337036
    2. '       ' → logprob: -2.3400704860687256
    3. '   ' → logprob: -3.4650704860687256
    4. ' X' → logprob: -3.7150704860687256
    5. ' :' → logprob: -3.9650704860687256
    6. ':
' → logprob: -4.715070724487305
    7. ' x' → logprob: -5.465070724487305
    8. ' :
' → logprob: -6.215070724487305
    9. ' ' → logprob: -6.340070724487305
    10. '0' → logprob: -6.715070724487305

Token 60: ' X' (ID: 2127)
  Prédit: ' X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' X' → logprob: -0.1633290797472
    2. 'X' (adapté à ' X') → logprob: -2.1633291244506836
    3. '   ' → logprob: -4.288329124450684
    4. ' x' → logprob: -4.788329124450684
    5. 'x' → logprob: -5.288329124450684
    6. ' Y' → logprob: -5.538329124450684
    7. ' ' → logprob: -6.788329124450684
    8. '       ' → logprob: -6.913329124450684
    9. 'Y' → logprob: -7.413329124450684
    10. '-' → logprob: -7.663329124450684

Token 61: ' +=' (ID: 2757)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.694423496723175
    2. '.append' → logprob: -0.694423496723175
    3. '.ap' → logprob: -7.069423675537109
    4. '.app' → logprob: -8.69442367553711
    5. ' .' → logprob: -9.06942367553711
    6. '.a' → logprob: -10.44442367553711
    7. '0' → logprob: -10.44442367553711
    8. 'append' → logprob: -11.19442367553711
    9. '.p' → logprob: -11.44442367553711
    10. '.extend' → logprob: -11.44442367553711

Token 62: ' [(' (ID: 43900)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.09925558418035507
    2. ' [' → logprob: -2.7242555618286133
    3. '[' → logprob: -3.8492555618286133
    4. '[(' → logprob: -5.599255561828613
    5. '[-' → logprob: -5.849255561828613
    6. '[y' → logprob: -7.724255561828613
    7. ' [-' → logprob: -9.224255561828613
    8. '[i' → logprob: -9.724255561828613
    9. ' [(' → logprob: -9.849255561828613
    10. '[int' → logprob: -10.099255561828613

Token 63: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.002950124442577362
    2. '-' → logprob: -6.127950191497803
    3. '-x' → logprob: -8.127949714660645
    4. '0' → logprob: -8.502949714660645
    5. ' x' → logprob: -9.252949714660645
    6. '(x' → logprob: -9.752949714660645
    7. ' -' → logprob: -10.752949714660645
    8. '   ' → logprob: -11.002949714660645
    9. ')' → logprob: -11.377949714660645
    10. '1' → logprob: -11.377949714660645

Token 64: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.165027217415627e-05
    2. ',' → logprob: -12.125021934509277
    3. ' -' → logprob: -12.500021934509277
    4. '-' → logprob: -12.875021934509277
    5. '1' → logprob: -13.312521934509277
    6. ' ' → logprob: -13.437521934509277
    7. '۰' → logprob: -14.125021934509277
    8. 'o' → logprob: -14.250021934509277
    9. '
' → logprob: -14.687521934509277
    10. ')' → logprob: -14.687521934509277

Token 65: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.21601545810699463
    2. '-' → logprob: -1.9660154581069946
    3. ' -' → logprob: -3.091015338897705
    4. '+' → logprob: -5.466015338897705
    5. ')' → logprob: -6.716015338897705
    6. ' ,' → logprob: -6.841015338897705
    7. ' +' → logprob: -7.341015338897705
    8. '-,' → logprob: -8.341015815734863
    9. ',-' → logprob: -8.341015815734863
    10. ',)' → logprob: -8.341015815734863

Token 66: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.30839985609054565
    2. 'y' → logprob: -2.3083999156951904
    3. '0' → logprob: -2.6833999156951904
    4. ''y' → logprob: -3.4333999156951904
    5. '1' → logprob: -3.8083999156951904
    6. '-y' → logprob: -4.183399677276611
    7. ''' → logprob: -5.183399677276611
    8. 'idx' → logprob: -5.433399677276611
    9. ''-' → logprob: -5.933399677276611
    10. ' -' → logprob: -5.933399677276611

Token 67: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1383197158575058
    2. 'idx' → logprob: -2.638319730758667
    3. 'y' → logprob: -3.013319730758667
    4. 'x' → logprob: -5.638319492340088
    5. '10' → logprob: -6.138319492340088
    6. 'float' → logprob: -7.013319492340088
    7. '100' → logprob: -7.513319492340088
    8. '2' → logprob: -8.013319969177246
    9. '(' → logprob: -8.388319969177246
    10. '0' → logprob: -8.638319969177246

Token 68: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.021310167387127876
    2. ')' → logprob: -4.521310329437256
    3. ',' → logprob: -4.771310329437256
    4. ' )' → logprob: -6.771310329437256
    5. '),' → logprob: -8.396309852600098
    6. ')],' → logprob: -9.521309852600098
    7. ')]
' → logprob: -10.146309852600098
    8. ' ,' → logprob: -10.146309852600098
    9. ')])' → logprob: -10.521309852600098
    10. '*' → logprob: -10.771309852600098

Token 69: '       ' (ID: 309)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5219510793685913
    2. '<|end|>' → logprob: -1.2719510793685913
    3. '   ' → logprob: -2.771951198577881
    4. ')' → logprob: -3.396951198577881
    5. ' ' → logprob: -4.646951198577881
    6. ' ,' → logprob: -5.021951198577881
    7. ' elif' → logprob: -6.146951198577881
    8. ',
' → logprob: -6.271951198577881
    9. 'elif' → logprob: -6.396951198577881
    10. '<|end|>' → logprob: -6.521951198577881

Token 70: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' (adapté à ' Y') → logprob: -0.3795192539691925
    2. ' Y' → logprob: -1.2545192241668701
    3. '   ' → logprob: -4.504519462585449
    4. '       ' → logprob: -5.379519462585449
    5. ' (' → logprob: -5.879519462585449
    6. ' ' → logprob: -6.004519462585449
    7. '0' → logprob: -6.629519462585449
    8. 'y' → logprob: -6.754519462585449
    9. ',' → logprob: -7.004519462585449
    10. ')' → logprob: -7.004519462585449

Token 71: '.append' (ID: 3709)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.06596388667821884
    2. '+=' → logprob: -2.8159639835357666
    3. '+' → logprob: -5.9409637451171875
    4. '.append' → logprob: -6.8159637451171875
    5. ' +' → logprob: -8.815963745117188
    6. '<|end|>' → logprob: -10.190963745117188
    7. ']+=' → logprob: -11.190963745117188
    8. '[' → logprob: -11.315963745117188
    9. ' ' → logprob: -11.565963745117188
    10. '=' → logprob: -11.690963745117188

Token 72: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.01274766307324171
    2. '(' → logprob: -4.512747764587402
    3. '(y' → logprob: -6.512747764587402
    4. '(x' → logprob: -9.387747764587402
    5. '((-' → logprob: -10.262747764587402
    6. ' ((' → logprob: -10.387747764587402
    7. ' ' → logprob: -11.137747764587402
    8. ' (' → logprob: -11.262747764587402
    9. '(None' → logprob: -11.387747764587402
    10. '(-' → logprob: -11.637747764587402

Token 73: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.031105421483516693
    2. 'x' → logprob: -4.0311055183410645
    3. ' y' → logprob: -5.4061055183410645
    4. '0' → logprob: -5.5311055183410645
    5. '-' → logprob: -5.9061055183410645
    6. '(y' → logprob: -7.4061055183410645
    7. '1' → logprob: -8.281105041503906
    8. '(' → logprob: -9.156105041503906
    9. ' ' → logprob: -9.281105041503906
    10. ' -' → logprob: -9.406105041503906

Token 74: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.60414821645827e-06
    2. ' ' → logprob: -12.875004768371582
    3. ',' → logprob: -13.875004768371582
    4. '-' → logprob: -15.250004768371582
    5. '[' → logprob: -15.375004768371582
    6. 'o' → logprob: -15.750004768371582
    7. ')' → logprob: -16.000003814697266
    8. '_' → logprob: -16.125003814697266
    9. '1' → logprob: -16.750003814697266
    10. ' ,' → logprob: -17.250003814697266

Token 75: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004624855937436223
    2. ' ,' → logprob: -8.250462532043457
    3. '-' → logprob: -9.625462532043457
    4. ',-' → logprob: -9.875462532043457
    5. ',x' → logprob: -10.625462532043457
    6. ')' → logprob: -11.000462532043457
    7. ' -' → logprob: -11.375462532043457
    8. ' ' → logprob: -12.000462532043457
    9. '))' → logprob: -12.375462532043457
    10. '0' → logprob: -12.625462532043457

Token 76: ' ' (ID: 220)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.11749066412448883
    2. '0' → logprob: -2.992490768432617
    3. '1' → logprob: -3.242490768432617
    4. ' ' → logprob: -4.742490768432617
    5. 'x' → logprob: -4.992490768432617
    6. ' -' → logprob: -5.492490768432617
    7. '+' → logprob: -7.117490768432617
    8. ' x' → logprob: -7.617490768432617
    9. '   ' → logprob: -8.242490768432617
    10. '  ' → logprob: -9.429990768432617

Token 77: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2220376431941986
    2. '1' → logprob: -2.2220375537872314
    3. '0' → logprob: -2.8470375537872314
    4. 'x' → logprob: -3.8470375537872314
    5. ' ' → logprob: -5.2220377922058105
    6. '+' → logprob: -5.9720377922058105
    7. ' -' → logprob: -6.0970377922058105
    8. ' x' → logprob: -7.5970377922058105
    9. '-x' → logprob: -8.847037315368652
    10. '   ' → logprob: -8.909537315368652

Token 78: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.004674811381846666
    2. '))
' → logprob: -5.879674911499023
    3. ' ))' → logprob: -6.629674911499023
    4. ',' → logprob: -8.129674911499023
    5. ')' → logprob: -9.004674911499023
    6. '))

' → logprob: -10.129674911499023
    7. ')))' → logprob: -10.254674911499023
    8. '))
' → logprob: -11.004674911499023
    9. ' ))
' → logprob: -11.379674911499023
    10. ' ' → logprob: -12.254674911499023

Token 79: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07412276417016983
    2. 'else' → logprob: -3.324122667312622
    3. ' else' → logprob: -4.324122905731201
    4. 'elif' → logprob: -4.824122905731201
    5. '       ' → logprob: -4.949122905731201
    6. '<|end|>' → logprob: -5.449122905731201
    7. ' elif' → logprob: -7.074122905731201
    8. ')' → logprob: -7.199122905731201
    9. ' ' → logprob: -8.199122428894043
    10. '```' → logprob: -8.824122428894043

Token 80: ' elif' (ID: 9497)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.7011277675628662
    2. '   ' → logprob: -1.2011277675628662
    3. ' else' → logprob: -2.076127767562866
    4. 'elif' (adapté à ' elif') → logprob: -2.701127767562866
    5. ' elif' → logprob: -4.951128005981445
    6. '       ' → logprob: -6.451128005981445
    7. ' ' → logprob: -7.326128005981445
    8. '	else' → logprob: -8.326128005981445
    9. 'if' → logprob: -8.701128005981445
    10. '<|end|>' → logprob: -8.701128005981445

Token 81: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.008900783956050873
    2. 'd' → logprob: -5.2589006423950195
    3. ''' → logprob: -6.3839006423950195
    4. ' ' → logprob: -6.7589006423950195
    5. ' '' → logprob: -7.6339006423950195
    6. '    ' → logprob: -9.00890064239502
    7. ''d' → logprob: -9.25890064239502
    8. '`' → logprob: -10.88390064239502
    9. 's' → logprob: -11.25890064239502
    10. '"' → logprob: -11.38390064239502

Token 82: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.048605985939502716
    2. '==' → logprob: -3.0486059188842773
    3. ' ' → logprob: -11.923605918884277
    4. ' =' → logprob: -12.173605918884277
    5. '=' → logprob: -12.923605918884277
    6. '=='' → logprob: -13.298605918884277
    7. ' =='' → logprob: -14.298605918884277
    8. '===' → logprob: -14.673605918884277
    9. '=="' → logprob: -15.673605918884277
    10. ' ' → logprob: -15.673605918884277

Token 83: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.3491279184818268
    2. ' '' → logprob: -1.2241278886795044
    3. ''L' → logprob: -8.349127769470215
    4. ' ' → logprob: -9.224127769470215
    5. ''S' → logprob: -9.349127769470215
    6. '"' → logprob: -9.724127769470215
    7. ' ' → logprob: -10.349127769470215
    8. ' L' → logprob: -10.599127769470215
    9. '('' → logprob: -10.724127769470215
    10. ''A' → logprob: -11.224127769470215

Token 84: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.11826428025960922
    2. ''' → logprob: -2.4932641983032227
    3. 'U' → logprob: -4.118264198303223
    4. ''U' → logprob: -5.118264198303223
    5. 'D' → logprob: -5.993264198303223
    6. 'L' → logprob: -6.118264198303223
    7. ''D' → logprob: -6.993264198303223
    8. ''L' → logprob: -7.368264198303223
    9. ' R' → logprob: -9.680764198303223
    10. 'S' → logprob: -9.993264198303223

Token 85: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.35545825958251953
    2. ':' → logprob: -1.9804582595825195
    3. '':
' → logprob: -1.9804582595825195
    4. ''):
' → logprob: -4.4804582595825195
    5. ':
' → logprob: -5.3554582595825195
    6. ''):' → logprob: -5.9804582595825195
    7. '       ' → logprob: -6.4804582595825195
    8. ''' → logprob: -6.6054582595825195
    9. '   ' → logprob: -7.9804582595825195
    10. '':
' → logprob: -8.10545825958252

Token 86: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04185308888554573
    2. ' X' → logprob: -3.666853189468384
    3. 'X' → logprob: -4.541852951049805
    4. '   ' → logprob: -5.541852951049805
    5. ' ' → logprob: -8.541852951049805
    6. ' Y' → logprob: -8.791852951049805
    7. '```' → logprob: -9.041852951049805
    8. ':' → logprob: -9.541852951049805
    9. '      ' → logprob: -10.041852951049805
    10. ':
' → logprob: -10.166852951049805

Token 87: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' (adapté à ' X') → logprob: -0.07216031104326248
    2. ' X' → logprob: -2.697160243988037
    3. '   ' → logprob: -6.572160243988037
    4. 'Y' → logprob: -7.322160243988037
    5. ' Y' → logprob: -9.447160720825195
    6. ' ' → logprob: -9.947160720825195
    7. '       ' → logprob: -10.572160720825195
    8. '  ' → logprob: -12.697160720825195
    9. '```' → logprob: -13.447160720825195
    10. '	X' → logprob: -13.572160720825195

Token 88: '.append' (ID: 3709)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.3141695559024811
    2. '+=' → logprob: -1.3141695261001587
    3. '.append' → logprob: -7.439169406890869
    4. '+' → logprob: -8.314169883728027
    5. '+=(' → logprob: -10.314169883728027
    6. '   ' → logprob: -11.439169883728027
    7. '.' → logprob: -11.814169883728027
    8. ' ' → logprob: -12.064169883728027
    9. ']+=' → logprob: -12.314169883728027
    10. ' +' → logprob: -12.564169883728027

Token 89: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0009557669400237501
    2. '(' → logprob: -7.750955581665039
    3. ' ((' → logprob: -7.875955581665039
    4. '(x' → logprob: -9.000955581665039
    5. ' ' → logprob: -11.625955581665039
    6. ' (' → logprob: -11.875955581665039
    7. '   ' → logprob: -12.750955581665039
    8. '  ' → logprob: -13.125955581665039
    9. '[(' → logprob: -15.750955581665039
    10. '>((' → logprob: -16.25095558166504

Token 90: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0001825642102630809
    2. ' x' → logprob: -9.250182151794434
    3. '(x' → logprob: -9.375182151794434
    4. '   ' → logprob: -13.750182151794434
    5. ' (' → logprob: -16.25018310546875
    6. ' ' → logprob: -16.37518310546875
    7. '{x' → logprob: -16.62518310546875
    8. '  ' → logprob: -17.00018310546875
    9. ')x' → logprob: -17.37518310546875
    10. '    ' → logprob: -17.50018310546875

Token 91: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ',' → logprob: -15.375
    3. 'o' → logprob: -18.375
    4. ' ' → logprob: -18.5
    5. '۰' → logprob: -18.75
    6. '０' → logprob: -19.0
    7. '```' → logprob: -19.0
    8. ' ,' → logprob: -19.5
    9. ')' → logprob: -20.0
    10. '(x' → logprob: -20.0

Token 92: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007623416022397578
    2. ' ,' → logprob: -7.500762462615967
    3. '1' → logprob: -8.500761985778809
    4. ',+' → logprob: -13.500761985778809
    5. '2' → logprob: -13.625761985778809
    6. '0' → logprob: -14.000761985778809
    7. ' ' → logprob: -14.500761985778809
    8. '+' → logprob: -15.000761985778809
    9. ',
' → logprob: -15.125761985778809
    10. '   ' → logprob: -15.250761985778809

Token 93: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004134087823331356
    2. ' ' → logprob: -5.504134178161621
    3. '+' → logprob: -10.129134178161621
    4. '0' → logprob: -11.504134178161621
    5. '   ' → logprob: -12.504134178161621
    6. ' +' → logprob: -14.129134178161621
    7. '  ' → logprob: -15.004134178161621
    8. '2' → logprob: -15.254134178161621
    9. '`' → logprob: -16.004133224487305
    10. '    ' → logprob: -16.754133224487305

Token 94: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00021271906734909862
    2. ' ' → logprob: -8.625212669372559
    3. '+' → logprob: -10.500212669372559
    4. '0' → logprob: -12.250212669372559
    5. '   ' → logprob: -14.875212669372559
    6. '2' → logprob: -15.875212669372559
    7. ' +' → logprob: -16.000213623046875
    8. '  ' → logprob: -16.625213623046875
    9. '
' → logprob: -17.125213623046875
    10. ')' → logprob: -17.750213623046875

Token 95: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0005825805710628629
    2. ')' → logprob: -7.625582695007324
    3. '))
' → logprob: -9.375582695007324
    4. ' ))' → logprob: -12.250582695007324
    5. ')))' → logprob: -13.375582695007324
    6. '   ' → logprob: -13.750582695007324
    7. '))

' → logprob: -14.000582695007324
    8. '),' → logprob: -15.375582695007324
    9. ' ' → logprob: -15.375582695007324
    10. '       ' → logprob: -15.625582695007324

Token 96: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2728669345378876
    2. ')' → logprob: -1.77286696434021
    3. '<|end|>' → logprob: -3.14786696434021
    4. '       ' → logprob: -4.022866725921631
    5. ' ' → logprob: -6.147866725921631
    6. 'else' → logprob: -6.897866725921631
    7. 'elif' → logprob: -7.147866725921631
    8. ',' → logprob: -7.272866725921631
    9. ')
' → logprob: -7.647866725921631
    10. '```' → logprob: -7.772866725921631

Token 97: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' (adapté à ' Y') → logprob: -0.014207934960722923
    2. ' Y' → logprob: -4.26420783996582
    3. '   ' → logprob: -10.51420783996582
    4. ' ' → logprob: -11.76420783996582
    5. 'y' → logprob: -12.88920783996582
    6. ')' → logprob: -13.01420783996582
    7. '  ' → logprob: -13.76420783996582
    8. '(' → logprob: -14.13920783996582
    9. '	Y' → logprob: -14.26420783996582
    10. '       ' → logprob: -14.51420783996582

Token 98: ' +=' (ID: 2757)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.14345036447048187
    2. '.' → logprob: -2.0184502601623535
    3. ' .' → logprob: -7.6434502601623535
    4. 'append' → logprob: -8.768450736999512
    5. '<|end|>' → logprob: -9.143450736999512
    6. ').' → logprob: -11.893450736999512
    7. '.Append' → logprob: -12.143450736999512
    8. '.setdefault' → logprob: -12.518450736999512
    9. '.add' → logprob: -12.893450736999512
    10. ' ' → logprob: -13.143450736999512

Token 99: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -7.40998875699006e-05
    2. ' [(' → logprob: -9.62507438659668
    3. '(y' → logprob: -11.87507438659668
    4. '[y' → logprob: -14.87507438659668
    5. '([(' → logprob: -15.00007438659668
    6. '((' → logprob: -16.75007438659668
    7. '[' → logprob: -17.00007438659668
    8. '[((' → logprob: -17.25007438659668
    9. '[
' → logprob: -17.62507438659668
    10. ' ' → logprob: -18.12507438659668

Token 100: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00011307948443572968
    2. ' y' → logprob: -9.375113487243652
    3. '(y' → logprob: -10.500113487243652
    4. '	y' → logprob: -15.625113487243652
    5. '   ' → logprob: -16.000112533569336
    6. ',y' → logprob: -16.250112533569336
    7. ' ' → logprob: -16.250112533569336
    8. ''y' → logprob: -16.750112533569336
    9. ')y' → logprob: -16.750112533569336
    10. '    ' → logprob: -17.125112533569336

Token 101: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4974866644479334e-05
    2. ',' → logprob: -12.125015258789062
    3. '[' → logprob: -12.750015258789062
    4. '1' → logprob: -13.375015258789062
    5. 'o' → logprob: -13.625015258789062
    6. '```' → logprob: -13.750015258789062
    7. '-' → logprob: -14.375015258789062
    8. ' ' → logprob: -14.875015258789062
    9. 'os' → logprob: -15.875015258789062
    10. 'ow' → logprob: -15.875015258789062

Token 102: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.755678961984813e-05
    2. ' ,' → logprob: -9.500077247619629
    3. ',
' → logprob: -14.000077247619629
    4. '1' → logprob: -14.500077247619629
    5. ' ' → logprob: -14.750077247619629
    6. '```' → logprob: -14.875077247619629
    7. '<|end|>' → logprob: -15.500077247619629
    8. '0' → logprob: -16.125078201293945
    9. ')' → logprob: -16.750078201293945
    10. '
' → logprob: -16.875078201293945

Token 103: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1355479657649994
    2. ' ' → logprob: -2.1355478763580322
    3. '1' → logprob: -4.760548114776611
    4. '   ' → logprob: -11.260547637939453
    5. '2' → logprob: -12.948047637939453
    6. '    ' → logprob: -13.073047637939453
    7. '  ' → logprob: -13.260547637939453
    8. ' ' → logprob: -14.198047637939453
    9. ')' → logprob: -15.135547637939453
    10. '`' → logprob: -15.385547637939453

Token 104: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009794576093554497
    2. '1' → logprob: -4.75979471206665
    3. ' ' → logprob: -6.75979471206665
    4. '-' → logprob: -11.509794235229492
    5. '2' → logprob: -12.634794235229492
    6. '   ' → logprob: -13.259794235229492
    7. ')' → logprob: -13.384794235229492
    8. '  ' → logprob: -14.634794235229492
    9. '```' → logprob: -14.634794235229492
    10. '    ' → logprob: -14.822294235229492

Token 105: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -3.368984107510187e-05
    2. '])' → logprob: -11.250033378601074
    3. ')' → logprob: -11.625033378601074
    4. ']' → logprob: -12.125033378601074
    5. '])]' → logprob: -12.750033378601074
    6. ')])' → logprob: -13.500033378601074
    7. ')]
' → logprob: -13.750033378601074
    8. '')]' → logprob: -15.000033378601074
    9. '")]' → logprob: -16.00003433227539
    10. ' )' → logprob: -16.00003433227539

Token 106: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 107: ' elif' (ID: 9497)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 108: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.10443081706762314
    2. 'd' → logprob: -3.104430913925171
    3. ''' → logprob: -3.604430913925171
    4. ''d' → logprob: -4.104430675506592
    5. ' '' → logprob: -4.604430675506592
    6. ' ' → logprob: -8.22943115234375
    7. ''s' → logprob: -9.35443115234375
    8. 's' → logprob: -9.97943115234375
    9. '"' → logprob: -10.22943115234375
    10. '`' → logprob: -10.72943115234375

Token 109: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6344479918479919
    2. '==' → logprob: -0.7594479918479919
    3. ''' → logprob: -6.884448051452637
    4. '=='' → logprob: -8.134448051452637
    5. ' '' → logprob: -8.634448051452637
    6. '=' → logprob: -9.009448051452637
    7. ' ' → logprob: -9.634448051452637
    8. ' =='' → logprob: -9.884448051452637
    9. ' =' → logprob: -10.634448051452637
    10. '===' → logprob: -10.759448051452637

Token 110: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.08613022416830063
    2. ' '' → logprob: -2.711130142211914
    3. ''S' → logprob: -4.711130142211914
    4. ''L' → logprob: -5.086130142211914
    5. ''I' → logprob: -7.336130142211914
    6. ' ' → logprob: -9.336130142211914
    7. ''U' → logprob: -9.836130142211914
    8. ''D' → logprob: -10.586130142211914
    9. ''A' → logprob: -11.211130142211914
    10. ' ' → logprob: -11.211130142211914

Token 111: 'U' (ID: 52)
  Prédit: 'U'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'U' → logprob: -0.05794184282422066
    2. ''U' → logprob: -3.3079419136047363
    3. 'L' → logprob: -4.182941913604736
    4. 'D' → logprob: -6.057941913604736
    5. ''L' → logprob: -6.932941913604736
    6. ''D' → logprob: -7.557941913604736
    7. ''' → logprob: -7.932941913604736
    8. ' U' → logprob: -9.682941436767578
    9. 'S' → logprob: -10.432941436767578
    10. ''S' → logprob: -10.932941436767578

Token 112: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.7545289993286133
    2. '':' → logprob: -1.2545289993286133
    3. ':' → logprob: -2.1295289993286133
    4. ''' → logprob: -3.1295289993286133
    5. ':
' → logprob: -3.3795289993286133
    6. '       ' → logprob: -3.6295289993286133
    7. '   ' → logprob: -4.754528999328613
    8. ''):
' → logprob: -5.629528999328613
    9. '```' → logprob: -5.629528999328613
    10. '')' → logprob: -6.754528999328613

Token 113: '       ' (ID: 309)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.01329822838306427
    2. ' Y' → logprob: -4.888298034667969
    3. 'X' → logprob: -6.013298034667969
    4. '       ' → logprob: -6.138298034667969
    5. '   ' → logprob: -6.888298034667969
    6. '           ' → logprob: -10.763298034667969
    7. ' X' → logprob: -11.388298034667969
    8. '```' → logprob: -12.138298034667969
    9. ' ' → logprob: -13.138298034667969
    10. '               ' → logprob: -13.263298034667969

Token 114: ' X' (ID: 2127)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.2550579905509949
    2. 'X' (adapté à ' X') → logprob: -1.5050580501556396
    3. ' Y' → logprob: -6.0050578117370605
    4. ' X' → logprob: -7.7550578117370605
    5. '   ' → logprob: -8.505058288574219
    6. 'x' → logprob: -11.755058288574219
    7. ' ' → logprob: -12.630058288574219
    8. '(' → logprob: -12.630058288574219
    9. '  ' → logprob: -13.130058288574219
    10. 'y' → logprob: -13.255058288574219

Token 115: '.extend' (ID: 34151)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0018585572252050042
    2. '.' → logprob: -6.376858711242676
    3. 'append' → logprob: -9.251858711242676
    4. '+=' → logprob: -10.376858711242676
    5. ' .' → logprob: -11.126858711242676
    6. ' +=' → logprob: -11.876858711242676
    7. '+' → logprob: -13.001858711242676
    8. '+.' → logprob: -13.126858711242676
    9. '.app' → logprob: -13.751858711242676
    10. '.ap' → logprob: -15.126858711242676

Token 116: '([(' (ID: 156282)
  Prédit: '([('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([(' → logprob: -0.029837844893336296
    2. '[(' → logprob: -3.6548378467559814
    3. '((' → logprob: -6.279837608337402
    4. '([]' → logprob: -7.279837608337402
    5. '(' → logprob: -8.154837608337402
    6. ' (' → logprob: -8.404837608337402
    7. '([' → logprob: -8.404837608337402
    8. '[((' → logprob: -9.029837608337402
    9. '([
' → logprob: -9.904837608337402
    10. '(((' → logprob: -11.154837608337402

Token 117: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.18059302866458893
    2. '(x' → logprob: -1.8055930137634277
    3. '0' → logprob: -7.930593013763428
    4. ' (' → logprob: -8.805593490600586
    5. '(' → logprob: -8.930593490600586
    6. ' x' → logprob: -9.055593490600586
    7. 'y' → logprob: -10.930593490600586
    8. '   ' → logprob: -11.430593490600586
    9. '(y' → logprob: -11.555593490600586
    10. '{x' → logprob: -11.930593490600586

Token 118: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.318681188422488e-05
    2. ',' → logprob: -11.50001335144043
    3. '1' → logprob: -14.37501335144043
    4. '```' → logprob: -14.50001335144043
    5. '_' → logprob: -15.25001335144043
    6. 'o' → logprob: -15.37501335144043
    7. '[' → logprob: -15.75001335144043
    8. ',y' → logprob: -15.81251335144043
    9. '_,' → logprob: -15.87501335144043
    10. '(' → logprob: -16.18751335144043

Token 119: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001872094871941954
    2. ' ,' → logprob: -8.875186920166016
    3. '0' → logprob: -10.000186920166016
    4. ',
' → logprob: -14.250186920166016
    5. '1' → logprob: -14.875186920166016
    6. ' ' → logprob: -15.125186920166016
    7. '```' → logprob: -15.500186920166016
    8. ',

' → logprob: -16.250186920166016
    9. '),' → logprob: -16.250186920166016
    10. '

' → logprob: -16.375186920166016

Token 120: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004953675088472664
    2. ' ' → logprob: -7.625495433807373
    3. '(' → logprob: -12.500494956970215
    4. '   ' → logprob: -13.625494956970215
    5. '  ' → logprob: -14.500494956970215
    6. ',' → logprob: -15.062994956970215
    7. '    ' → logprob: -15.437994956970215
    8. ')' → logprob: -15.562994956970215
    9. ' (' → logprob: -15.562994956970215
    10. '1' → logprob: -15.625494956970215

Token 121: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003623985394369811
    2. ' ' → logprob: -8.000362396240234
    3. '(' → logprob: -11.000362396240234
    4. '1' → logprob: -13.000362396240234
    5. '   ' → logprob: -13.562862396240234
    6. '  ' → logprob: -14.062862396240234
    7. ')' → logprob: -14.187862396240234
    8. ' (' → logprob: -14.312862396240234
    9. '    ' → logprob: -14.312862396240234
    10. '```' → logprob: -14.500362396240234

Token 122: ')])
' (ID: 66560)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04618258401751518
    2. ')])' → logprob: -4.171182632446289
    3. ')]' → logprob: -4.421182632446289
    4. ' ,' → logprob: -5.046182632446289
    5. ')' → logprob: -5.171182632446289
    6. ')])
' → logprob: -6.421182632446289
    7. '),' → logprob: -6.796182632446289
    8. ' )' → logprob: -7.421182632446289
    9. ',y' → logprob: -7.921182632446289
    10. ',
' → logprob: -8.046182632446289

Token 123: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014181484468281269
    2. 'Y' → logprob: -4.889181613922119
    3. '   ' → logprob: -5.264181613922119
    4. ',' → logprob: -7.014181613922119
    5. ' Y' → logprob: -9.014181137084961
    6. ' and' → logprob: -9.014181137084961
    7. ' ' → logprob: -9.889181137084961
    8. ')' → logprob: -10.389181137084961
    9. '
' → logprob: -10.389181137084961
    10. '     ' → logprob: -10.639181137084961

Token 124: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' (adapté à ' Y') → logprob: -0.026935607194900513
    2. ' Y' → logprob: -3.651935577392578
    3. '   ' → logprob: -7.401935577392578
    4. ' ' → logprob: -11.526935577392578
    5. 'y' → logprob: -12.151935577392578
    6. '       ' → logprob: -12.526935577392578
    7. '  ' → logprob: -13.526935577392578
    8. '[' → logprob: -13.901935577392578
    9. '	Y' → logprob: -14.276935577392578
    10. '    ' → logprob: -14.401935577392578

Token 125: ' +=' (ID: 2757)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00885931309312582
    2. '.' → logprob: -5.133859157562256
    3. '.extend' → logprob: -6.008859157562256
    4. 'append' → logprob: -8.133859634399414
    5. '+=' → logprob: -9.383859634399414
    6. ' .' → logprob: -9.883859634399414
    7. '+.' → logprob: -10.883859634399414
    8. ' +=' → logprob: -11.133859634399414
    9. '+' → logprob: -12.258859634399414
    10. ' append' → logprob: -13.883859634399414

Token 126: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -3.833878508885391e-05
    2. '(y' → logprob: -10.375038146972656
    3. ' [(' → logprob: -12.000038146972656
    4. '[y' → logprob: -14.125038146972656
    5. '([(' → logprob: -15.750038146972656
    6. '[' → logprob: -16.875038146972656
    7. '(x' → logprob: -17.125038146972656
    8. '[((' → logprob: -17.125038146972656
    9. '[
' → logprob: -18.125038146972656
    10. '((' → logprob: -18.875038146972656

Token 127: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.10062435269355774
    2. '(y' → logprob: -2.3506243228912354
    3. ' y' → logprob: -8.600624084472656
    4. '(' → logprob: -9.350624084472656
    5. '   ' → logprob: -9.725624084472656
    6. ' (' → logprob: -9.850624084472656
    7. '  ' → logprob: -12.350624084472656
    8. '0' → logprob: -12.600624084472656
    9. ' ' → logprob: -13.100624084472656
    10. ')' → logprob: -13.100624084472656

Token 128: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -14.750000953674316
    3. '(' → logprob: -15.375000953674316
    4. '1' → logprob: -15.750000953674316
    5. ',' → logprob: -16.125001907348633
    6. '```' → logprob: -16.125001907348633
    7. '۰' → logprob: -16.625001907348633
    8. '(y' → logprob: -16.687501907348633
    9. 'o' → logprob: -16.750001907348633
    10. '-' → logprob: -17.125001907348633

Token 129: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002506111632101238
    2. ' ,' → logprob: -8.625250816345215
    3. '1' → logprob: -9.625250816345215
    4. ' ' → logprob: -12.750250816345215
    5. ',
' → logprob: -14.875250816345215
    6. '-' → logprob: -15.375250816345215
    7. '

' → logprob: -15.500250816345215
    8. '   ' → logprob: -15.500250816345215
    9. '```' → logprob: -15.500250816345215
    10. '  ' → logprob: -15.875250816345215

Token 130: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0012551113031804562
    2. ' ' → logprob: -6.751255035400391
    3. '-' → logprob: -9.87625503540039
    4. '   ' → logprob: -10.75125503540039
    5. '(' → logprob: -12.00125503540039
    6. '  ' → logprob: -13.00125503540039
    7. '+' → logprob: -13.12625503540039
    8. ' -' → logprob: -14.25125503540039
    9. '    ' → logprob: -15.31375503540039
    10. ')' → logprob: -15.31375503540039

Token 131: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009998210007324815
    2. ' ' → logprob: -7.000999927520752
    3. '-' → logprob: -10.000999450683594
    4. '   ' → logprob: -10.375999450683594
    5. '(' → logprob: -12.000999450683594
    6. '+' → logprob: -13.000999450683594
    7. '  ' → logprob: -13.125999450683594
    8. '    ' → logprob: -14.875999450683594
    9. ' -' → logprob: -15.000999450683594
    10. ')' → logprob: -15.750999450683594

Token 132: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0023836148902773857
    2. ')' → logprob: -6.627383708953857
    3. ']' → logprob: -7.002383708953857
    4. '])' → logprob: -9.1273832321167
    5. '])]' → logprob: -11.1273832321167
    6. ')])' → logprob: -11.2523832321167
    7. ')]
' → logprob: -12.3773832321167
    8. ' )' → logprob: -13.5023832321167
    9. '   ' → logprob: -13.6273832321167
    10. ')}' → logprob: -13.8773832321167

Token 133: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1815246343612671
    2. 'elif' → logprob: -1.931524634361267
    3. 'else' → logprob: -4.556524753570557
    4. ' elif' → logprob: -5.306524753570557
    5. '<|end|>' → logprob: -6.056524753570557
    6. ' else' → logprob: -6.306524753570557
    7. ')' → logprob: -7.556524753570557
    8. '	elif' → logprob: -8.556524276733398
    9. '  ' → logprob: -8.806524276733398
    10. ' ' → logprob: -9.056524276733398

Token 134: ' else' (ID: 1203)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.17820265889167786
    2. 'else' (adapté à ' else') → logprob: -2.1782026290893555
    3. ' elif' → logprob: -3.6782026290893555
    4. '   ' → logprob: -4.0532026290893555
    5. ' else' → logprob: -4.9282026290893555
    6. ' ' → logprob: -10.303202629089355
    7. '	elif' → logprob: -10.803202629089355
    8. '  ' → logprob: -11.428202629089355
    9. '    
' → logprob: -11.428202629089355
    10. ')' → logprob: -11.428202629089355

Token 135: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04338815435767174
    2. ':
' → logprob: -3.1683881282806396
    3. ' :' → logprob: -8.293388366699219
    4. ' :
' → logprob: -9.418388366699219
    5. '   ' → logprob: -10.543388366699219
    6. ':

' → logprob: -11.668388366699219
    7. '  ' → logprob: -12.668388366699219
    8. ':
' → logprob: -12.668388366699219
    9. ' ' → logprob: -12.793388366699219
    10. 's' → logprob: -12.793388366699219

Token 136: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6588183641433716
    2. ' Y' → logprob: -0.7838183641433716
    3. '   ' → logprob: -4.033818244934082
    4. 'Y' → logprob: -5.658818244934082
    5. ' X' → logprob: -5.908818244934082
    6. ' ' → logprob: -6.658818244934082
    7. '    ' → logprob: -8.283818244934082
    8. '        ' → logprob: -9.033818244934082
    9. '           ' → logprob: -9.533818244934082
    10. 'X' → logprob: -9.908818244934082

Token 137: ' X' (ID: 2127)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.11305017024278641
    2. ' Y' → logprob: -2.2380502223968506
    3. 'X' (adapté à ' X') → logprob: -8.73805046081543
    4. '   ' → logprob: -10.48805046081543
    5. ' ' → logprob: -11.23805046081543
    6. '       ' → logprob: -11.23805046081543
    7. ' X' → logprob: -11.73805046081543
    8. '
' → logprob: -13.11305046081543
    9. '  ' → logprob: -13.98805046081543
    10. '    ' → logprob: -14.48805046081543

Token 138: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.007855034433305264
    2. '.extend' → logprob: -5.38285493850708
    3. '.' → logprob: -5.75785493850708
    4. 'append' → logprob: -10.757855415344238
    5. '+=' → logprob: -11.007855415344238
    6. ').' → logprob: -11.632855415344238
    7. '+.' → logprob: -11.757855415344238
    8. '.setdefault' → logprob: -12.007855415344238
    9. ' .' → logprob: -12.757855415344238
    10. '>.' → logprob: -12.882855415344238

Token 139: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -1.1041145626222715e-05
    2. '(' → logprob: -11.625011444091797
    3. '(x' → logprob: -14.125011444091797
    4. ' ((' → logprob: -14.375011444091797
    5. '[(' → logprob: -14.875011444091797
    6. '(
' → logprob: -15.500011444091797
    7. '```' → logprob: -17.500011444091797
    8. ' ' → logprob: -17.625011444091797
    9. '(('' → logprob: -17.750011444091797
    10. '(((' → logprob: -18.125011444091797

Token 140: 'x' (ID: 87)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.026433592662215233
    2. '(y' → logprob: -3.6514337062835693
    3. ' y' → logprob: -9.401433944702148
    4. 'x' → logprob: -10.651433944702148
    5. '(' → logprob: -12.151433944702148
    6. '(x' → logprob: -12.151433944702148
    7. '   ' → logprob: -12.401433944702148
    8. ' (' → logprob: -12.401433944702148
    9. '
' → logprob: -13.776433944702148
    10. '	y' → logprob: -13.901433944702148

Token 141: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.896309739408025e-07
    2. 'o' → logprob: -15.250000953674316
    3. '[' → logprob: -15.500000953674316
    4. '```' → logprob: -16.0
    5. '(' → logprob: -16.625
    6. ',' → logprob: -16.875
    7. ' ' → logprob: -18.125
    8. '_' → logprob: -18.125
    9. ')' → logprob: -18.25
    10. 'y' → logprob: -18.375

Token 142: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.12127808178775e-05
    2. '0' → logprob: -10.000051498413086
    3. ' ,' → logprob: -12.500051498413086
    4. '(' → logprob: -14.250051498413086
    5. ' ' → logprob: -14.500051498413086
    6. ',
' → logprob: -14.875051498413086
    7. ')' → logprob: -15.125051498413086
    8. '[' → logprob: -16.625051498413086
    9. ',(' → logprob: -17.125051498413086
    10. '2' → logprob: -17.875051498413086

Token 143: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11283019185066223
    2. ' ' → logprob: -2.23783016204834
    3. ' ' → logprob: -13.23783016204834
    4. '(' → logprob: -13.73783016204834
    5. '  ' → logprob: -14.11283016204834
    6. ' -' → logprob: -14.23783016204834
    7. ')' → logprob: -14.42533016204834
    8. '-' → logprob: -14.48783016204834
    9. ' (' → logprob: -14.61283016204834
    10. '   ' → logprob: -14.73783016204834

Token 144: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008110555354505777
    2. ' ' → logprob: -7.1258111000061035
    3. '-' → logprob: -12.000810623168945
    4. ' -' → logprob: -15.750810623168945
    5. '
' → logprob: -16.875810623168945
    6. '  ' → logprob: -17.250810623168945
    7. '

' → logprob: -17.375810623168945
    8. ')' → logprob: -17.500810623168945
    9. ',' → logprob: -17.625810623168945
    10. '   ' → logprob: -17.813310623168945

Token 145: '))
' (ID: 2210)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.21848848462104797
    2. ')' → logprob: -2.2184884548187256
    3. '))' → logprob: -2.4684884548187256
    4. '),' → logprob: -6.468488693237305
    5. '))
' → logprob: -7.468488693237305
    6. ',
' → logprob: -8.593488693237305
    7. ')
' → logprob: -8.843488693237305
    8. ',Y' → logprob: -8.968488693237305
    9. '       ' → logprob: -9.593488693237305
    10. 'Y' → logprob: -10.093488693237305

Token 146: '       ' (ID: 309)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.014362934976816177
    2. ' Y' → logprob: -4.514362812042236
    3. '       ' → logprob: -5.764362812042236
    4. '   ' → logprob: -8.889363288879395
    5. ',' → logprob: -11.889363288879395
    6. '
' → logprob: -12.139363288879395
    7. '        
' → logprob: -12.264363288879395
    8. ' ' → logprob: -12.514363288879395
    9. '[' → logprob: -12.764363288879395
    10. ')' → logprob: -13.264363288879395

Token 147: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' (adapté à ' Y') → logprob: -2.15310683415737e-05
    2. ' Y' → logprob: -10.750021934509277
    3. '   ' → logprob: -16.87502098083496
    4. 'y' → logprob: -17.00002098083496
    5. 'Ys' → logprob: -17.37502098083496
    6. '	Y' → logprob: -18.62502098083496
    7. '```' → logprob: -18.75002098083496
    8. '`' → logprob: -19.00002098083496
    9. '
' → logprob: -19.00002098083496
    10. ' ' → logprob: -19.75002098083496

Token 148: '.insert' (ID: 13222)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.03906714916229248
    2. '+=' → logprob: -3.414067268371582
    3. '.' → logprob: -5.539067268371582
    4. '.extend' → logprob: -7.539067268371582
    5. 'append' → logprob: -8.039067268371582
    6. '+.' → logprob: -8.164067268371582
    7. ' +=' → logprob: -8.289067268371582
    8. '+' → logprob: -9.914067268371582
    9. ' .' → logprob: -10.414067268371582
    10. '+=(' → logprob: -12.789067268371582

Token 149: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.035095032304525375
    2. '((' → logprob: -3.785094976425171
    3. '(-' → logprob: -5.28509521484375
    4. '(' → logprob: -5.66009521484375
    5. 'len' → logprob: -6.28509521484375
    6. '(-(' → logprob: -6.78509521484375
    7. ' (' → logprob: -9.66009521484375
    8. 'append' → logprob: -10.28509521484375
    9. '0' → logprob: -10.66009521484375
    10. '-' → logprob: -10.91009521484375

Token 150: '(Y' (ID: 44341)
  Prédit: '(Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Y' → logprob: -0.023736290633678436
    2. 'Y' → logprob: -3.7737362384796143
    3. '(' → logprob: -7.898736476898193
    4. '(y' → logprob: -10.148736000061035
    5. '(X' → logprob: -10.648736000061035
    6. ')' → logprob: -11.148736000061035
    7. '((' → logprob: -11.523736000061035
    8. ' (' → logprob: -12.148736000061035
    9. ' Y' → logprob: -12.148736000061035
    10. '```' → logprob: -12.273736000061035

Token 151: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001342254807241261
    2. ',(' → logprob: -6.876342296600342
    3. ' ,' → logprob: -8.376341819763184
    4. '),' → logprob: -10.376341819763184
    5. ',y' → logprob: -11.001341819763184
    6. ',Y' → logprob: -12.626341819763184
    7. '```' → logprob: -12.751341819763184
    8. '(' → logprob: -12.876341819763184
    9. '(y' → logprob: -12.876341819763184
    10. ',[' → logprob: -13.001341819763184

Token 152: ' (' (ID: 350)
  Prédit: '(y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.006402000784873962
    2. ' (' → logprob: -5.256402015686035
    3. '(' → logprob: -6.756402015686035
    4. '(-' → logprob: -13.256402015686035
    5. '-' → logprob: -14.756402015686035
    6. ' ' → logprob: -14.756402015686035
    7. ')' → logprob: -15.131402015686035
    8. '(Y' → logprob: -15.256402015686035
    9. '  ' → logprob: -15.756402015686035
    10. '   ' → logprob: -15.756402015686035

Token 153: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0005470762262120843
    2. '(y' → logprob: -7.625546932220459
    3. ' y' → logprob: -9.750547409057617
    4. 'ys' → logprob: -15.000547409057617
    5. ' (' → logprob: -16.250547409057617
    6. ''y' → logprob: -16.375547409057617
    7. '	y' → logprob: -16.875547409057617
    8. '(' → logprob: -17.000547409057617
    9. ')y' → logprob: -17.000547409057617
    10. '0' → logprob: -17.125547409057617

Token 154: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -16.5
    3. 'o' → logprob: -16.875
    4. '(' → logprob: -17.25
    5. '-' → logprob: -17.625
    6. ' ' → logprob: -17.75
    7. '```' → logprob: -18.125
    8. '۰' → logprob: -18.5
    9. 'O' → logprob: -18.875
    10. '０' → logprob: -19.3125

Token 155: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0044868504628539085
    2. '-' → logprob: -5.504487037658691
    3. ',-' → logprob: -7.879487037658691
    4. ' -' → logprob: -11.129487037658691
    5. ' ,' → logprob: -12.004487037658691
    6. ',
' → logprob: -12.879487037658691
    7. ')' → logprob: -13.004487037658691
    8. '(' → logprob: -14.379487037658691
    9. '   ' → logprob: -14.379487037658691
    10. '```' → logprob: -14.504487037658691

Token 156: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -5.676981345459353e-06
    2. ' -' → logprob: -12.125005722045898
    3. '   ' → logprob: -16.8750057220459
    4. '(-' → logprob: -17.6250057220459
    5. ' ' → logprob: -18.3750057220459
    6. '−' → logprob: -18.3750057220459
    7. '0' → logprob: -18.6250057220459
    8. '--' → logprob: -18.6250057220459
    9. ')' → logprob: -18.7500057220459
    10. '1' → logprob: -18.7500057220459

Token 157: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.054500666621607e-06
    2. ' ' → logprob: -12.87500286102295
    3. ')' → logprob: -15.43750286102295
    4. '-' → logprob: -16.125003814697266
    5. '```' → logprob: -17.125003814697266
    6. '2' → logprob: -17.187503814697266
    7. '0' → logprob: -18.000003814697266
    8. '１' → logprob: -18.312503814697266
    9. '
' → logprob: -18.375003814697266
    10. '۱' → logprob: -18.437503814697266

Token 158: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.1602456420660019
    2. ')' → logprob: -1.910245656967163
    3. '))
' → logprob: -11.285245895385742
    4. ')))' → logprob: -12.410245895385742
    5. ')
' → logprob: -12.660245895385742
    6. '),' → logprob: -15.160245895385742
    7. ')}' → logprob: -15.535245895385742
    8. '))

' → logprob: -15.535245895385742
    9. ' ))' → logprob: -15.535245895385742
    10. ' )' → logprob: -16.035245895385742

Token 159: 'd' (ID: 67)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'X' → logprob: -1.8480972051620483
    2. '#' → logprob: -1.9730972051620483
    3. 'counter' → logprob: -2.098097324371338
    4. 'cnt' → logprob: -2.098097324371338
    5. 'pos' → logprob: -2.973097324371338
    6. 'from' → logprob: -3.348097324371338
    7. 'x' → logprob: -3.473097324371338
    8. 'collections' → logprob: -3.473097324371338
    9. 'c' → logprob: -3.723097324371338
    10. 'def' → logprob: -3.848097324371338

Token 160: 'ct' (ID: 308)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.592731237411499
    2. 'ef' → logprob: -0.967731237411499
    3. ' =' → logprob: -3.592731237411499
    4. '=' → logprob: -4.217731475830078
    5. 'efs' → logprob: -4.217731475830078
    6. 'eft' → logprob: -5.967731475830078
    7. 'el' → logprob: -6.592731475830078
    8. 'eff' → logprob: -7.592731475830078
    9. 'collections' → logprob: -7.592731475830078
    10. 'a' → logprob: -7.717731475830078

Token 161: 'X' (ID: 55)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5285878777503967
    2. 'X' → logprob: -1.653587818145752
    3. 'x' → logprob: -1.903587818145752
    4. '_x' → logprob: -3.028587818145752
    5. '=' → logprob: -4.028587818145752
    6. '1' → logprob: -6.653587818145752
    7. '_X' → logprob: -6.903587818145752
    8. '_' → logprob: -7.153587818145752
    9. ' X' → logprob: -8.15358829498291
    10. ' ' → logprob: -8.27858829498291

Token 162: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1797589659690857
    2. '=' → logprob: -1.8047590255737305
    3. ' ' → logprob: -11.80475902557373
    4. ':' → logprob: -13.55475902557373
    5. ' =
' → logprob: -14.17975902557373
    6. ',' → logprob: -14.42975902557373
    7. ' ' → logprob: -14.55475902557373
    8. '1' → logprob: -14.92975902557373
    9. '0' → logprob: -15.05475902557373
    10. 's' → logprob: -15.05475902557373

Token 163: ' collections' (ID: 22690)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.0009163398644886911
    2. ' collections' → logprob: -7.000916481018066
    3. 'default' → logprob: -13.500916481018066
    4. '{}' → logprob: -13.625916481018066
    5. 'collection' → logprob: -14.500916481018066
    6. ' ' → logprob: -15.000916481018066
    7. '{' → logprob: -15.375916481018066
    8. '   ' → logprob: -15.375916481018066
    9. '[]' → logprob: -15.625916481018066
    10. 'collect' → logprob: -15.875916481018066

Token 164: '.default' (ID: 15648)
  Prédit: '.Counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.Counter' → logprob: -0.16050072014331818
    2. '.default' → logprob: -1.9105007648468018
    3. '.' → logprob: -8.410500526428223
    4. '.de' → logprob: -10.535500526428223
    5. '.counter' → logprob: -11.785500526428223
    6. '.Order' → logprob: -11.910500526428223
    7. 'default' → logprob: -12.160500526428223
    8. '.def' → logprob: -13.160500526428223
    9. '.Default' → logprob: -13.410500526428223
    10. 'Counter' → logprob: -13.410500526428223

Token 165: 'dict' (ID: 20993)
  Prédit: 'dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dict' → logprob: 0.0
    2. 'ict' → logprob: -17.0
    3. ' dict' → logprob: -17.5
    4. 'd' → logprob: -18.75
    5. 'dic' → logprob: -19.75
    6. 'Dict' → logprob: -20.5
    7. 'list' → logprob: -20.75
    8. 'ct' → logprob: -21.5
    9. '
' → logprob: -21.875
    10. '```' → logprob: -22.5

Token 166: '(set' (ID: 25904)
  Prédit: '(list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(list' → logprob: -0.24442440271377563
    2. '(int' → logprob: -1.7444243431091309
    3. 'list' → logprob: -3.494424343109131
    4. 'int' → logprob: -4.494424343109131
    5. '(lambda' → logprob: -7.744424343109131
    6. '<int' → logprob: -10.119424819946289
    7. '[int' → logprob: -11.119424819946289
    8. '(de' → logprob: -11.619424819946289
    9. '(' → logprob: -11.994424819946289
    10. 'deque' → logprob: -11.994424819946289

Token 167: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015490218065679073
    2. ')
' → logprob: -6.501549243927002
    3. ' )' → logprob: -11.126548767089844
    4. '())' → logprob: -11.251548767089844
    5. ')

' → logprob: -11.376548767089844
    6. '()' → logprob: -13.126548767089844
    7. ')`' → logprob: -13.251548767089844
    8. ',' → logprob: -14.251548767089844
    9. ')#' → logprob: -14.751548767089844
    10. ')d' → logprob: -14.876548767089844

Token 168: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09616832435131073
    2. 'd' → logprob: -2.596168279647827
    3. ' for' → logprob: -4.096168518066406
    4. 'rng' → logprob: -8.596168518066406
    5. 'idx' → logprob: -9.721168518066406
    6. '<|end|>' → logprob: -9.971168518066406
    7. ')' → logprob: -10.596168518066406
    8. 'indices' → logprob: -11.096168518066406
    9. 'count' → logprob: -11.346168518066406
    10. 'i' → logprob: -11.471168518066406

Token 169: ' a' (ID: 261)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.033559251576662064
    2. 'i' → logprob: -3.9085593223571777
    3. 'k' → logprob: -6.033559322357178
    4. 'xx' → logprob: -6.033559322357178
    5. ' x' → logprob: -6.533559322357178
    6. '(x' → logprob: -6.533559322357178
    7. 'v' → logprob: -7.158559322357178
    8. '_x' → logprob: -7.283559322357178
    9. 'xi' → logprob: -7.533559322357178
    10. 'a' → logprob: -7.533559322357178

Token 170: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011363989673554897
    2. 'x' → logprob: -5.511363983154297
    3. ',b' → logprob: -6.511363983154297
    4. 'in' → logprob: -6.636363983154297
    5. ' in' → logprob: -6.761363983154297
    6. 'i' → logprob: -7.386363983154297
    7. ',x' → logprob: -7.511363983154297
    8. ',_' → logprob: -7.511363983154297
    9. 'idx' → logprob: -8.136363983154297
    10. 'b' → logprob: -8.386363983154297

Token 171: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.002679463941603899
    2. 'v' → logprob: -6.627679347991943
    3. ' b' → logprob: -7.877679347991943
    4. 'd' → logprob: -8.127679824829102
    5. 'dir' → logprob: -8.127679824829102
    6. 's' → logprob: -9.252679824829102
    7. 'sign' → logprob: -9.877679824829102
    8. 'm' → logprob: -10.127679824829102
    9. 'direction' → logprob: -10.252679824829102
    10. 'c' → logprob: -10.377679824829102

Token 172: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2014615833759308
    2. 'in' → logprob: -1.7014615535736084
    3. ',' → logprob: -11.826461791992188
    4. 's' → logprob: -11.826461791992188
    5. ' ' → logprob: -12.201461791992188
    6. 'n' → logprob: -12.576461791992188
    7. 'In' → logprob: -12.701461791992188
    8. 'to' → logprob: -12.888961791992188
    9. 'd' → logprob: -13.138961791992188
    10. 'import' → logprob: -13.326461791992188

Token 173: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.011048882268369198
    2. ' X' → logprob: -4.511048793792725
    3. ' ' → logprob: -14.261049270629883
    4. ')' → logprob: -15.761049270629883
    5. '   ' → logprob: -16.886049270629883
    6. 'sorted' → logprob: -16.886049270629883
    7. '(X' → logprob: -17.011049270629883
    8. 'range' → logprob: -17.386049270629883
    9. '[X' → logprob: -17.386049270629883
    10. 'x' → logprob: -17.511049270629883

Token 174: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -7.064297824399546e-05
    2. ':
' → logprob: -9.875070571899414
    3. '):' → logprob: -11.375070571899414
    4. '[' → logprob: -13.125070571899414
    5. ' :' → logprob: -13.375070571899414
    6. ',' → logprob: -14.125070571899414
    7. '.' → logprob: -14.500070571899414
    8. ':**' → logprob: -14.750070571899414
    9. '<|end|>' → logprob: -14.875070571899414
    10. ':d' → logprob: -14.875070571899414

Token 175: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006942933425307274
    2. ' d' → logprob: -5.5069427490234375
    3. 'd' → logprob: -5.8819427490234375
    4. ' if' → logprob: -10.256942749023438
    5. '   ' → logprob: -11.756942749023438
    6. '    
' → logprob: -12.131942749023438
    7. '<|end|>' → logprob: -12.756942749023438
    8. '	d' → logprob: -12.756942749023438
    9. '```' → logprob: -12.756942749023438
    10. '       ' → logprob: -13.131942749023438

Token 176: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.5815829038619995
    2. ' d' → logprob: -0.8315829038619995
    3. '   ' → logprob: -5.206583023071289
    4. '	d' → logprob: -9.331583023071289
    5. ' ' → logprob: -10.706583023071289
    6. ' if' → logprob: -12.081583023071289
    7. '
' → logprob: -12.206583023071289
    8. ')d' → logprob: -12.581583023071289
    9. '_d' → logprob: -12.956583023071289
    10. '  ' → logprob: -12.956583023071289

Token 177: 'ct' (ID: 308)
  Prédit: 'ct'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -7.896309739408025e-07
    2. 'st' → logprob: -15.000000953674316
    3. 'c' → logprob: -15.750000953674316
    4. '```' → logprob: -16.75
    5. '
' → logprob: -16.875
    6. ' =' → logprob: -17.125
    7. '=' → logprob: -17.125
    8. '[' → logprob: -17.5
    9. '"' → logprob: -17.75
    10. '   ' → logprob: -18.375

Token 178: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: 0.0
    2. '<|end|>' → logprob: -17.375
    3. 'x' → logprob: -18.5
    4. ' X' → logprob: -18.75
    5. '[' → logprob: -20.0
    6. 'a' → logprob: -20.875
    7. 's' → logprob: -22.125
    8. '[X' → logprob: -22.625
    9. '<|end|>' → logprob: -22.625
    10. 'Y' → logprob: -22.75

Token 179: '[b' (ID: 40800)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -2.5941604690160602e-05
    2. 'a' → logprob: -11.125025749206543
    3. '[' → logprob: -12.000025749206543
    4. '[d' → logprob: -12.875025749206543
    5. '[b' → logprob: -14.125025749206543
    6. ' [' → logprob: -14.500025749206543
    7. '[(' → logprob: -14.750025749206543
    8. 'd' → logprob: -15.375025749206543
    9. '   ' → logprob: -16.12502670288086
    10. '(a' → logprob: -16.75002670288086

Token 180: ']' (ID: 60)
  Prédit: '].'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -7.636475493200123e-05
    2. ' ].' → logprob: -9.875076293945312
    3. ']' → logprob: -11.375076293945312
    4. '.add' → logprob: -11.625076293945312
    5. ').' → logprob: -13.375076293945312
    6. 'add' → logprob: -13.500076293945312
    7. '   ' → logprob: -15.250076293945312
    8. 'a' → logprob: -15.250076293945312
    9. ')].' → logprob: -15.625076293945312
    10. '][' → logprob: -15.625076293945312

Token 181: ' |=' (ID: 19917)
  Prédit: '.add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.00026574634830467403
    2. '.' → logprob: -8.250266075134277
    3. ' .' → logprob: -13.125266075134277
    4. '.setdefault' → logprob: -13.750266075134277
    5. '.append' → logprob: -13.875266075134277
    6. 'add' → logprob: -15.500266075134277
    7. '.update' → logprob: -15.875266075134277
    8. '.Add' → logprob: -17.00026512145996
    9. '.remove' → logprob: -17.37526512145996
    10. '.insert' → logprob: -18.25026512145996

Token 182: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.0001766040368238464
    2. ' {' → logprob: -8.750176429748535
    3. '{x' → logprob: -11.875176429748535
    4. ' {(' → logprob: -12.000176429748535
    5. 'set' → logprob: -12.875176429748535
    6. '{s' → logprob: -13.500176429748535
    7. '{i' → logprob: -14.000176429748535
    8. '{text' → logprob: -16.50017738342285
    9. '{return' → logprob: -17.00017738342285
    10. '{k' → logprob: -17.37517738342285

Token 183: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00023393364972434938
    2. ' a' → logprob: -8.37523365020752
    3. '(a' → logprob: -12.87523365020752
    4. '   ' → logprob: -15.50023365020752
    5. '(' → logprob: -15.62523365020752
    6. ' ' → logprob: -16.500234603881836
    7. ' (' → logprob: -16.750234603881836
    8. '	a' → logprob: -17.750234603881836
    9. '  ' → logprob: -17.875234603881836
    10. '
' → logprob: -18.250234603881836

Token 184: '}
' (ID: 739)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.0003502434410620481
    2. ' }' → logprob: -8.000349998474121
    3. '}
' → logprob: -11.375349998474121
    4. '}

' → logprob: -13.375349998474121
    5. ')}' → logprob: -15.000349998474121
    6. ')' → logprob: -15.125349998474121
    7. ' ' → logprob: -15.250349998474121
    8. ',' → logprob: -15.375349998474121
    9. '})' → logprob: -15.750349998474121
    10. '```' → logprob: -16.125350952148438

Token 185: 'lst' (ID: 65430)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.1162169873714447
    2. 'for' → logprob: -2.2412168979644775
    3. 'rng' → logprob: -7.616217136383057
    4. ')' → logprob: -7.866217136383057
    5. '#' → logprob: -7.866217136383057
    6. 'max' → logprob: -7.991217136383057
    7. ' for' → logprob: -8.366216659545898
    8. 'sorted' → logprob: -8.616216659545898
    9. '
' → logprob: -8.866216659545898
    10. 'keys' → logprob: -8.991216659545898

Token 186: '1' (ID: 16)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.1067616268992424
    2. ' =' → logprob: -2.4817616939544678
    3. '=' → logprob: -5.106761455535889
    4. '_' → logprob: -5.606761455535889
    5. 'x' → logprob: -5.981761455535889
    6. 'Y' → logprob: -6.106761455535889
    7. 's' → logprob: -7.231761455535889
    8. '1' → logprob: -7.606761455535889
    9. 'd' → logprob: -7.981761455535889
    10. '_x' → logprob: -8.606761932373047

Token 187: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4481585621833801
    2. '=' → logprob: -1.0731585025787354
    3. 'X' → logprob: -4.4481587409973145
    4. '_' → logprob: -5.5731587409973145
    5. '1' → logprob: -6.6981587409973145
    6. ',' → logprob: -7.1981587409973145
    7. 'x' → logprob: -7.8231587409973145
    8. '=[]' → logprob: -7.8231587409973145
    9. 'd' → logprob: -8.198158264160156
    10. '_=' → logprob: -8.573158264160156

Token 188: ' []
' (ID: 8911)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.25007563829421997
    2. '[]' → logprob: -1.8750755786895752
    3. 'list' → logprob: -4.125075817108154
    4. ' sorted' → logprob: -4.250075817108154
    5. '[d' → logprob: -4.500075817108154
    6. '[list' → logprob: -4.750075817108154
    7. '[' → logprob: -5.000075817108154
    8. ' []' → logprob: -6.250075817108154
    9. 'd' → logprob: -6.375075817108154
    10. '[(' → logprob: -6.750075817108154

Token 189: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.008343169465661049
    2. 'd' → logprob: -6.13334321975708
    3. 'lst' → logprob: -6.13334321975708
    4. 'rng' → logprob: -6.25834321975708
    5. 'keys' → logprob: -6.75834321975708
    6. 'prev' → logprob: -8.758342742919922
    7. 'sorted' → logprob: -8.883342742919922
    8. '#' → logprob: -9.258342742919922
    9. ' for' → logprob: -9.508342742919922
    10. 'last' → logprob: -9.758342742919922

Token 190: ' k' (ID: 372)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.7730718851089478
    2. 'k' → logprob: -2.023071765899658
    3. ' b' → logprob: -2.023071765899658
    4. 'a' → logprob: -2.523071765899658
    5. 'key' → logprob: -2.648071765899658
    6. ' key' → logprob: -3.398071765899658
    7. ' k' → logprob: -3.648071765899658
    8. ' a' → logprob: -4.398071765899658
    9. 'c' → logprob: -4.648071765899658
    10. 'v' → logprob: -4.773071765899658

Token 191: ' in' (ID: 306)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7168620228767395
    2. ' in' → logprob: -0.7168620228767395
    3. 'in' → logprob: -4.091862201690674
    4. ',v' → logprob: -5.216862201690674
    5. ',l' → logprob: -7.591862201690674
    6. ',d' → logprob: -8.341861724853516
    7. ' ,' → logprob: -8.591861724853516
    8. ',b' → logprob: -9.341861724853516
    9. ',k' → logprob: -10.216861724853516
    10. ',val' → logprob: -10.466861724853516

Token 192: ' sorted' (ID: 20099)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.2189469337463379
    2. 'sorted' → logprob: -1.718946933746338
    3. ' d' → logprob: -4.718946933746338
    4. ' sorted' → logprob: -4.968946933746338
    5. 'range' → logprob: -6.843946933746338
    6. ' range' → logprob: -8.71894645690918
    7. 'list' → logprob: -9.09394645690918
    8. '[' → logprob: -9.71894645690918
    9. '(sorted' → logprob: -10.84394645690918
    10. ' ' → logprob: -10.96894645690918

Token 193: '([-' (ID: 99080)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(d' → logprob: -7.584239938296378e-06
    2. '(' → logprob: -12.125007629394531
    3. 'd' → logprob: -13.375007629394531
    4. '(list' → logprob: -14.750007629394531
    5. '((' → logprob: -16.50000762939453
    6. ' (' → logprob: -16.87500762939453
    7. '(
' → logprob: -17.25000762939453
    8. '(dict' → logprob: -18.25000762939453
    9. ' d' → logprob: -18.37500762939453
    10. '(sorted' → logprob: -18.37500762939453

Token 194: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00041220002458430827
    2. ' ' → logprob: -8.500411987304688
    3. 'k' → logprob: -9.750411987304688
    4. '-' → logprob: -10.562911987304688
    5. 'b' → logprob: -10.687911987304688
    6. '0' → logprob: -10.812911987304688
    7. '10' → logprob: -11.437911987304688
    8. '2' → logprob: -11.687911987304688
    9. 'd' → logprob: -11.875411987304688
    10. '
' → logprob: -11.937911987304688

Token 195: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018294163048267365
    2. ' ,' → logprob: -4.018294334411621
    3. '1' → logprob: -9.268294334411621
    4. '0' → logprob: -10.518294334411621
    5. ' ' → logprob: -11.768294334411621
    6. ',
' → logprob: -12.893294334411621
    7. ']' → logprob: -13.143294334411621
    8. '])' → logprob: -13.393294334411621
    9. '   ' → logprob: -13.705794334411621
    10. '2' → logprob: -14.643294334411621

Token 196: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03809841349720955
    2. ' ' → logprob: -3.2880983352661133
    3. '1' → logprob: -9.788098335266113
    4. ',' → logprob: -15.663098335266113
    5. '01' → logprob: -16.28809928894043
    6. '  ' → logprob: -16.60059928894043
    7. ' ' → logprob: -16.60059928894043
    8. 'k' → logprob: -16.66309928894043
    9. '<|end|>' → logprob: -16.97559928894043
    10. '-' → logprob: -17.10059928894043

Token 197: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11932896822690964
    2. '1' → logprob: -2.3693289756774902
    3. ' ' → logprob: -3.9943289756774902
    4. 'k' → logprob: -8.869328498840332
    5. ',' → logprob: -9.369328498840332
    6. '-' → logprob: -9.431828498840332
    7. '01' → logprob: -10.119328498840332
    8. '10' → logprob: -10.681828498840332
    9. ' k' → logprob: -11.056828498840332
    10. '  ' → logprob: -11.181828498840332

Token 198: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003302477765828371
    2. ' ,' → logprob: -5.753302574157715
    3. ']):' → logprob: -9.378302574157715
    4. '])' → logprob: -11.128302574157715
    5. '1' → logprob: -11.128302574157715
    6. ',
' → logprob: -12.878302574157715
    7. ' ' → logprob: -13.003302574157715
    8. '   ' → logprob: -13.378302574157715
    9. '  ' → logprob: -14.128302574157715
    10. ']):
' → logprob: -14.253302574157715

Token 199: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0052384985610842705
    2. ' ' → logprob: -5.2552385330200195
    3. '<|end|>' → logprob: -13.50523853302002
    4. '+' → logprob: -13.75523853302002
    5. '   ' → logprob: -14.13023853302002
    6. ',' → logprob: -14.75523853302002
    7. '0' → logprob: -15.25523853302002
    8. '  ' → logprob: -15.25523853302002
    9. 'and' → logprob: -16.067737579345703
    10. ' and' → logprob: -16.255237579345703

Token 200: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004330532974563539
    2. ' ' → logprob: -7.750432968139648
    3. '+' → logprob: -13.750432968139648
    4. '0' → logprob: -14.000432968139648
    5. '   ' → logprob: -15.875432968139648
    6. ',' → logprob: -15.875432968139648
    7. '  ' → logprob: -17.37543296813965
    8. ']' → logprob: -17.62543296813965
    9. ' +' → logprob: -18.00043296813965
    10. '])' → logprob: -18.12543296813965

Token 201: '],' (ID: 2155)
  Prédit: ']):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):' → logprob: -0.0030437856912612915
    2. ']' → logprob: -6.6280436515808105
    3. ']:' → logprob: -7.3780436515808105
    4. ']):
' → logprob: -8.003044128417969
    5. ' ]' → logprob: -8.253044128417969
    6. '):' → logprob: -8.628044128417969
    7. '],' → logprob: -9.003044128417969
    8. '])' → logprob: -9.003044128417969
    9. ':' → logprob: -10.503044128417969
    10. ',' → logprob: -11.128044128417969

Token 202: ' reverse' (ID: 18199)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -1.3730146884918213
    2. 'k' → logprob: -1.4980146884918213
    3. 'lambda' → logprob: -1.8730146884918213
    4. 'd' → logprob: -2.3730146884918213
    5. ' key' → logprob: -2.7480146884918213
    6. ' lambda' → logprob: -2.8730146884918213
    7. 'key' → logprob: -3.3730146884918213
    8. 'range' → logprob: -3.6230146884918213
    9. '1' → logprob: -3.7480146884918213
    10. '0' → logprob: -4.248014450073242

Token 203: '=False' (ID: 12148)
  Prédit: '=True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=True' → logprob: -0.09750360995531082
    2. '):' → logprob: -2.972503662109375
    3. '(True' → logprob: -3.847503662109375
    4. '()' → logprob: -4.097503662109375
    5. 'True' → logprob: -6.472503662109375
    6. '):
' → logprob: -7.597503662109375
    7. '()):
' → logprob: -7.722503662109375
    8. '=False' → logprob: -7.847503662109375
    9. '```' → logprob: -8.222503662109375
    10. ' True' → logprob: -8.597503662109375

Token 204: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0001487140398239717
    2. ':' → logprob: -9.75014877319336
    3. ' ):' → logprob: -9.75014877319336
    4. ')' → logprob: -10.62514877319336
    5. '):
' → logprob: -12.12514877319336
    6. ']:' → logprob: -14.25014877319336
    7. ',' → logprob: -14.75014877319336
    8. ']):' → logprob: -14.87514877319336
    9. '[]):' → logprob: -16.00014877319336
    10. '}:' → logprob: -16.50014877319336

Token 205: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06491440534591675
    2. ' if' → logprob: -3.8149144649505615
    3. ':' → logprob: -4.189914226531982
    4. ' for' → logprob: -4.939914226531982
    5. '<|end|>' → logprob: -5.689914226531982
    6. 'if' → logprob: -6.064914226531982
    7. 's' → logprob: -6.439914226531982
    8. ' lst' → logprob: -6.439914226531982
    9. '    
' → logprob: -6.814914226531982
    10. ' s' → logprob: -6.939914226531982

Token 206: ' stuff' (ID: 9350)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.01841139793396
    2. 'for' → logprob: -2.39341139793396
    3. ' vals' → logprob: -2.39341139793396
    4. 'vals' → logprob: -2.51841139793396
    5. ' lst' → logprob: -2.64341139793396
    6. ' s' → logprob: -2.76841139793396
    7. ' if' → logprob: -3.14341139793396
    8. 'if' → logprob: -3.39341139793396
    9. 'v' → logprob: -3.51841139793396
    10. 's' → logprob: -3.51841139793396

Token 207: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18016523122787476
    2. ' =' → logprob: -1.8051652908325195
    3. ',' → logprob: -8.55516529083252
    4. '   ' → logprob: -10.18016529083252
    5. ':' → logprob: -10.30516529083252
    6. '.' → logprob: -10.43016529083252
    7. ' ' → logprob: -10.55516529083252
    8. '.extend' → logprob: -10.55516529083252
    9. 'for' → logprob: -11.18016529083252
    10. 's' → logprob: -11.18016529083252

Token 208: ' d' (ID: 272)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.23564986884593964
    2. 'd' → logprob: -1.985649824142456
    3. 'list' → logprob: -2.985649824142456
    4. ' sorted' → logprob: -4.485650062561035
    5. '[d' → logprob: -5.110650062561035
    6. ' d' → logprob: -6.110650062561035
    7. ' list' → logprob: -6.610650062561035
    8. '[(' → logprob: -7.985650062561035
    9. '[' → logprob: -8.735650062561035
    10. 'tuple' → logprob: -8.860650062561035

Token 209: 'ct' (ID: 308)
  Prédit: 'ct'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -16.125
    3. '(ct' → logprob: -17.125
    4. '[c' → logprob: -17.75
    5. 'st' → logprob: -18.25
    6. 'c' → logprob: -18.75
    7. 'ict' → logprob: -18.75
    8. '```' → logprob: -18.75
    9. 'ctl' → logprob: -18.875
    10. '[X' → logprob: -19.0

Token 210: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: 0.0
    2. 'd' → logprob: -17.0
    3. 'x' → logprob: -19.875
    4. ' X' → logprob: -20.25
    5. '```' → logprob: -21.25
    6. 'k' → logprob: -21.5
    7. '<|end|>' → logprob: -21.75
    8. 's' → logprob: -21.875
    9. 'Xt' → logprob: -22.125
    10. 'Xd' → logprob: -22.5

Token 211: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.0007113590254448354
    2. 'k' → logprob: -7.250711441040039
    3. '.get' → logprob: -14.375711441040039
    4. '[key' → logprob: -15.625711441040039
    5. '[b' → logprob: -15.875711441040039
    6. 'b' → logprob: -16.12571144104004
    7. '[' → logprob: -16.25071144104004
    8. '(k' → logprob: -16.25071144104004
    9. ' k' → logprob: -16.37571144104004
    10. '{k' → logprob: -16.87571144104004

Token 212: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.35689592361450195
    2. ']
' → logprob: -1.356895923614502
    3. ')' → logprob: -3.981895923614502
    4. '])' → logprob: -4.731895923614502
    5. ')
' → logprob: -5.106895923614502
    6. 'sorted' → logprob: -5.606895923614502
    7. '<|end|>' → logprob: -5.981895923614502
    8. ')]' → logprob: -7.106895923614502
    9. '])
' → logprob: -7.731895923614502
    10. '<|end|>' → logprob: -7.731895923614502

Token 213: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06198505312204361
    2. '<|end|>' → logprob: -3.1869850158691406
    3. 'lst' → logprob: -4.811985015869141
    4. ' if' → logprob: -5.686985015869141
    5. ' for' → logprob: -6.436985015869141
    6. 'sorted' → logprob: -6.686985015869141
    7. '    
' → logprob: -6.936985015869141
    8. 'if' → logprob: -7.311985015869141
    9. 'for' → logprob: -7.561985015869141
    10. ')' → logprob: -7.686985015869141

Token 214: ' if' (ID: 538)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.4030241072177887
    2. 'prev' → logprob: -2.403024196624756
    3. 'if' (adapté à ' if') → logprob: -3.028024196624756
    4. 'last' → logprob: -3.153024196624756
    5. 'arr' → logprob: -3.278024196624756
    6. 'for' → logprob: -3.278024196624756
    7. 'sorted' → logprob: -3.903024196624756
    8. 'vals' → logprob: -4.153024196624756
    9. 'cur' → logprob: -4.403024196624756
    10. 'curr' → logprob: -5.653024196624756

Token 215: ' stuff' (ID: 9350)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.727441668510437
    2. 'stuff' → logprob: -0.727441668510437
    3. ' len' → logprob: -4.102441787719727
    4. ' stuff' → logprob: -4.977441787719727
    5. 'not' → logprob: -5.352441787719727
    6. 'k' → logprob: -5.852441787719727
    7. ' not' → logprob: -6.352441787719727
    8. ' k' → logprob: -7.477441787719727
    9. '   ' → logprob: -8.977441787719727
    10. 'sorted' → logprob: -9.227441787719727

Token 216: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006404805462807417
    2. ':
' → logprob: -8.250640869140625
    3. ' :' → logprob: -8.250640869140625
    4. '==' → logprob: -9.750640869140625
    5. '):' → logprob: -10.625640869140625
    6. '!=' → logprob: -11.125640869140625
    7. ' ==' → logprob: -12.000640869140625
    8. ' !=' → logprob: -12.750640869140625
    9. '   ' → logprob: -13.000640869140625
    10. ':not' → logprob: -13.625640869140625

Token 217: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06679429858922958
    2. ' lst' → logprob: -3.5667943954467773
    3. ' for' → logprob: -4.066794395446777
    4. '   ' → logprob: -5.066794395446777
    5. ' sorted' → logprob: -5.691794395446777
    6. ' last' → logprob: -5.941794395446777
    7. 'lst' → logprob: -5.941794395446777
    8. ' prev' → logprob: -6.941794395446777
    9. ',' → logprob: -7.566794395446777
    10. 'for' → logprob: -7.691794395446777

Token 218: ' mi' (ID: 3997)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.7866491079330444
    2. ' lst' → logprob: -1.2866491079330444
    3. ' prev' → logprob: -2.786649227142334
    4. 'prev' → logprob: -3.161649227142334
    5. ' last' → logprob: -3.411649227142334
    6. '   ' → logprob: -3.911649227142334
    7. 'last' → logprob: -3.911649227142334
    8. ' for' → logprob: -4.536649227142334
    9. ' sorted' → logprob: -4.661649227142334
    10. ' stuff' → logprob: -5.036649227142334

Token 219: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.477356880903244
    2. '=' → logprob: -1.6023569107055664
    3. 'n' → logprob: -1.7273569107055664
    4. ',' → logprob: -8.852356910705566
    5. 'x' → logprob: -9.852356910705566
    6. '=n' → logprob: -10.352356910705566
    7. '   ' → logprob: -10.477356910705566
    8. '=max' → logprob: -10.727356910705566
    9. '=
' → logprob: -10.852356910705566
    10. 'nt' → logprob: -11.227356910705566

Token 220: ' ma' (ID: 831)
  Prédit: 'ma'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ma' → logprob: -0.06472949683666229
    2. ' ma' → logprob: -2.9397294521331787
    3. 'mx' → logprob: -4.689729690551758
    4. ' mx' → logprob: -7.564729690551758
    5. 'mi' → logprob: -9.689729690551758
    6. '   ' → logprob: -11.439729690551758
    7. 'max' → logprob: -12.064729690551758
    8. 'm' → logprob: -12.939729690551758
    9. ' ' → logprob: -13.064729690551758
    10. 'mo' → logprob: -13.689729690551758

Token 221: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519657015800476
    2. ' =' → logprob: -1.5019657611846924
    3. ',' → logprob: -10.251965522766113
    4. '=min' → logprob: -14.751965522766113
    5. ' ' → logprob: -15.126965522766113
    6. '=max' → logprob: -15.251965522766113
    7. '=

' → logprob: -16.62696647644043
    8. '=int' → logprob: -17.12696647644043
    9. '=k' → logprob: -17.50196647644043
    10. '＝' → logprob: -17.75196647644043

Token 222: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.251988023519516
    2. ' min' → logprob: -1.5019880533218384
    3. '(min' → logprob: -9.751988410949707
    4. '	min' → logprob: -15.501988410949707
    5. '[min' → logprob: -15.751988410949707
    6. ',min' → logprob: -16.37698745727539
    7. 'max' → logprob: -16.75198745727539
    8. '_min' → logprob: -17.12698745727539
    9. ' (' → logprob: -17.25198745727539
    10. '=min' → logprob: -17.37698745727539

Token 223: '(st' (ID: 4065)
  Prédit: '(st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(st' → logprob: -4.990154047845863e-05
    2. 'stuff' → logprob: -10.000049591064453
    3. 'st' → logprob: -13.250049591064453
    4. '(' → logprob: -13.500049591064453
    5. '(
' → logprob: -14.250049591064453
    6. ',' → logprob: -15.250049591064453
    7. '	st' → logprob: -15.750049591064453
    8. '(stor' → logprob: -16.375049591064453
    9. ' (' → logprob: -16.875049591064453
    10. '(s' → logprob: -17.000049591064453

Token 224: 'uff' (ID: 1972)
  Prédit: 'uff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uff' → logprob: -0.0001049736310960725
    2. 'ff' → logprob: -9.250104904174805
    3. 'aff' → logprob: -12.125104904174805
    4. 'stuff' → logprob: -13.375104904174805
    5. 'u' → logprob: -14.375104904174805
    6. '(st' → logprob: -15.625104904174805
    7. '(' → logprob: -15.625104904174805
    8. 'uf' → logprob: -15.750104904174805
    9. '{' → logprob: -16.375104904174805
    10. 'f' → logprob: -16.750104904174805

Token 225: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1610328108072281
    2. '),' → logprob: -1.911032795906067
    3. ' ,' → logprob: -7.161032676696777
    4. ' ),' → logprob: -11.286032676696777
    5. ',),' → logprob: -11.411032676696777
    6. ')' → logprob: -13.286032676696777
    7. '},' → logprob: -13.661032676696777
    8. ',
' → logprob: -13.786032676696777
    9. ',m' → logprob: -13.911032676696777
    10. '>,' → logprob: -14.286032676696777

Token 226: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.31326186656951904
    2. 'max' → logprob: -1.313261866569519
    3. '	max' → logprob: -16.938261032104492
    4. ' ' → logprob: -17.063261032104492
    5. '   ' → logprob: -17.563261032104492
    6. '       ' → logprob: -18.063261032104492
    7. '    ' → logprob: -18.188261032104492
    8. '(max' → logprob: -18.313261032104492
    9. '
' → logprob: -18.563261032104492
    10. '           ' → logprob: -18.813261032104492

Token 227: '(st' (ID: 4065)
  Prédit: '(st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(st' → logprob: -1.1472419600977446e-06
    2. 'stuff' → logprob: -14.125000953674316
    3. 'st' → logprob: -15.625000953674316
    4. '(' → logprob: -15.875000953674316
    5. '	st' → logprob: -16.500001907348633
    6. '(stor' → logprob: -17.000001907348633
    7. '(
' → logprob: -17.875001907348633
    8. '(s' → logprob: -17.875001907348633
    9. '```' → logprob: -19.000001907348633
    10. ' (' → logprob: -19.750001907348633

Token 228: 'uff' (ID: 1972)
  Prédit: 'stuff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stuff' → logprob: -0.2217976152896881
    2. 'uff' → logprob: -1.9717975854873657
    3. '(st' → logprob: -2.8467977046966553
    4. 'st' → logprob: -6.471797466278076
    5. '1' → logprob: -10.096797943115234
    6. 'ust' → logprob: -10.471797943115234
    7. 'usst' → logprob: -11.471797943115234
    8. '{' → logprob: -11.596797943115234
    9. 'staff' → logprob: -11.596797943115234
    10. '	st' → logprob: -12.471797943115234

Token 229: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04304132238030434
    2. ')
' → logprob: -3.168041229248047
    3. '<|end|>' → logprob: -11.168041229248047
    4. ')
' → logprob: -11.293041229248047
    5. '   ' → logprob: -11.918041229248047
    6. ')

' → logprob: -13.043041229248047
    7. '<|end|>' → logprob: -13.418041229248047
    8. ' )' → logprob: -13.668041229248047
    9. '       ' → logprob: -14.543041229248047
    10. ')}' → logprob: -14.668041229248047

Token 230: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0035254789981991053
    2. '
' → logprob: -6.753525257110596
    3. ' if' → logprob: -7.503525257110596
    4. '   ' → logprob: -7.753525257110596
    5. ',' → logprob: -7.753525257110596
    6. '        
' → logprob: -7.878525257110596
    7. '<|end|>' → logprob: -8.628525733947754
    8. ' for' → logprob: -8.753525733947754
    9. 'if' → logprob: -9.753525733947754
    10. ')' → logprob: -10.628525733947754

Token 231: ' lst' (ID: 33384)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lst' (adapté à ' lst') → logprob: -0.4549684524536133
    2. ' lst' → logprob: -1.8299684524536133
    3. 'if' → logprob: -2.2049684524536133
    4. ' if' → logprob: -2.7049684524536133
    5. '       ' → logprob: -3.8299684524536133
    6. 'for' → logprob: -5.954968452453613
    7. ' for' → logprob: -6.204968452453613
    8. '   ' → logprob: -7.204968452453613
    9. ' ' → logprob: -9.017468452453613
    10. '           ' → logprob: -9.017468452453613

Token 232: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001350234029814601
    2. '.append' → logprob: -6.626350402832031
    3. '.' → logprob: -11.501350402832031
    4. 'append' → logprob: -12.251350402832031
    5. '.extend' → logprob: -12.751350402832031
    6. '```' → logprob: -13.251350402832031
    7. ' ' → logprob: -13.626350402832031
    8. '
' → logprob: -13.751350402832031
    9. 'lst' → logprob: -14.876350402832031
    10. ' .' → logprob: -15.313850402832031

Token 233: '.extend' (ID: 34151)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.022527987137436867
    2. '.' → logprob: -4.022528171539307
    3. ' .' → logprob: -6.147528171539307
    4. ' +=' → logprob: -6.647528171539307
    5. '.extend' → logprob: -7.522528171539307
    6. '+=' → logprob: -8.022527694702148
    7. '+.' → logprob: -10.647527694702148
    8. '.app' → logprob: -11.147527694702148
    9. '+' → logprob: -11.647527694702148
    10. '.ap' → logprob: -11.772527694702148

Token 234: '([(' (ID: 156282)
  Prédit: '([('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([(' → logprob: -1.0215497016906738
    2. '([' → logprob: -1.2715497016906738
    3. '(range' → logprob: -1.5215497016906738
    4. '[(' → logprob: -2.021549701690674
    5. '[' → logprob: -5.646549701690674
    6. '((' → logprob: -6.146549701690674
    7. '(' → logprob: -6.896549701690674
    8. '(sorted' → logprob: -7.521549701690674
    9. 'range' → logprob: -7.771549701690674
    10. '(list' → logprob: -8.021549224853516

Token 235: 'mi' (ID: 3900)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.17794495820999146
    2. 'mi' → logprob: -1.9279448986053467
    3. '(k' → logprob: -4.677945137023926
    4. '(mi' → logprob: -5.677945137023926
    5. 'ma' → logprob: -6.052945137023926
    6. ' k' → logprob: -7.677945137023926
    7. '(' → logprob: -7.802945137023926
    8. '0' → logprob: -8.177945137023926
    9. '(ma' → logprob: -8.927945137023926
    10. 'x' → logprob: -9.177945137023926

Token 236: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.41827112436294556
    2. '+' → logprob: -1.5432710647583008
    3. ' +' → logprob: -2.293271064758301
    4. '),' → logprob: -4.043271064758301
    5. ' ,' → logprob: -5.168271064758301
    6. ',),' → logprob: -7.293271064758301
    7. '   ' → logprob: -7.543271064758301
    8. ')' → logprob: -7.918271064758301
    9. '),(' → logprob: -8.2932710647583
    10. ')]' → logprob: -8.2932710647583

Token 237: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.007022492121905088
    2. 'ma' → logprob: -5.882022380828857
    3. ' k' → logprob: -6.257022380828857
    4. '-' → logprob: -7.007022380828857
    5. '0' → logprob: -7.632022380828857
    6. '1' → logprob: -8.007022857666016
    7. 'b' → logprob: -8.632022857666016
    8. 'mi' → logprob: -9.382022857666016
    9. ' ' → logprob: -10.007022857666016
    10. '(k' → logprob: -10.507022857666016

Token 238: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.05685419961810112
    2. '),(' → logprob: -3.181854248046875
    3. '),
' → logprob: -4.931854248046875
    4. ')])' → logprob: -5.306854248046875
    5. ',' → logprob: -7.306854248046875
    6. ' ),' → logprob: -7.931854248046875
    7. ')]' → logprob: -8.556854248046875
    8. ')' → logprob: -9.056854248046875
    9. ')])
' → logprob: -9.181854248046875
    10. ')],' → logprob: -9.681854248046875

Token 239: ' (' (ID: 350)
  Prédit: '(ma'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ma' → logprob: -0.32620951533317566
    2. ' (' → logprob: -1.326209545135498
    3. '(mi' → logprob: -4.451209545135498
    4. '(' → logprob: -7.326209545135498
    5. '(m' → logprob: -8.70120906829834
    6. '       ' → logprob: -9.07620906829834
    7. '   ' → logprob: -9.45120906829834
    8. '(max' → logprob: -9.70120906829834
    9. '  ' → logprob: -10.57620906829834
    10. ' ' → logprob: -10.82620906829834

Token 240: 'ma' (ID: 809)
  Prédit: 'ma'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ma' → logprob: -0.006813288666307926
    2. ' ma' → logprob: -5.0068135261535645
    3. '(ma' → logprob: -9.381813049316406
    4. '   ' → logprob: -12.131813049316406
    5. ' ' → logprob: -12.756813049316406
    6. 'mi' → logprob: -13.381813049316406
    7. '  ' → logprob: -13.631813049316406
    8. '    ' → logprob: -14.506813049316406
    9. '(' → logprob: -14.756813049316406
    10. 'max' → logprob: -15.506813049316406

Token 241: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008619115105830133
    2. ',k' → logprob: -7.125862121582031
    3. ' ,' → logprob: -9.875862121582031
    4. 'k' → logprob: -12.375862121582031
    5. ' k' → logprob: -14.375862121582031
    6. '<|end|>' → logprob: -15.000862121582031
    7. '```' → logprob: -15.500862121582031
    8. ',
' → logprob: -15.750862121582031
    9. ')' → logprob: -16.37586212158203
    10. ' ' → logprob: -17.00086212158203

Token 242: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.012513063848018646
    2. ' k' → logprob: -4.387513160705566
    3. ' ' → logprob: -13.512513160705566
    4. ')' → logprob: -15.012513160705566
    5. ' 
' → logprob: -15.262513160705566
    6. '
' → logprob: -15.387513160705566
    7. '   ' → logprob: -15.450013160705566
    8. '```' → logprob: -16.13751220703125
    9. ' ' → logprob: -16.13751220703125
    10. '-' → logprob: -16.20001220703125

Token 243: ')])

' (ID: 182226)
  Prédit: ')])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')])' → logprob: -0.0011853496544063091
    2. ')]' → logprob: -7.251185417175293
    3. ')])
' → logprob: -8.126185417175293
    4. ')' → logprob: -8.876185417175293
    5. '])' → logprob: -10.626185417175293
    6. '   ' → logprob: -12.376185417175293
    7. ' )' → logprob: -12.751185417175293
    8. ')])

' → logprob: -12.751185417175293
    9. '])]' → logprob: -13.126185417175293
    10. ']])' → logprob: -14.251185417175293

Token 244: 'd' (ID: 67)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.6786649823188782
    2. 'd' → logprob: -0.9286649823188782
    3. 'if' → logprob: -3.9286649227142334
    4. 'for' → logprob: -4.5536651611328125
    5. 'rng' → logprob: -5.1786651611328125
    6. 'ans' → logprob: -5.3036651611328125
    7. 'print' → logprob: -5.4286651611328125
    8. '#' → logprob: -5.5536651611328125
    9. 'Y' → logprob: -5.6786651611328125
    10. 'cnt' → logprob: -5.6786651611328125

Token 245: 'ct' (ID: 308)
  Prédit: 'ct'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.0006668062414973974
    2. ' =' → logprob: -7.875666618347168
    3. 'c' → logprob: -8.875666618347168
    4. 'ict' → logprob: -10.375666618347168
    5. '=' → logprob: -10.500666618347168
    6. 'lst' → logprob: -10.875666618347168
    7. 'e' → logprob: -11.000666618347168
    8. 'st' → logprob: -11.625666618347168
    9. '_' → logprob: -11.625666618347168
    10. 'f' → logprob: -12.000666618347168

Token 246: 'Y' (ID: 56)
  Prédit: 'Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.009395372122526169
    2. 'X' → logprob: -4.884395599365234
    3. ' =' → logprob: -7.259395599365234
    4. '<|end|>' → logprob: -7.509395599365234
    5. '=' → logprob: -7.634395599365234
    6. ' Y' → logprob: -11.134395599365234
    7. 'collections' → logprob: -11.884395599365234
    8. 'x' → logprob: -12.384395599365234
    9. 'y' → logprob: -12.509395599365234
    10. '<|end|>' → logprob: -13.009395599365234

Token 247: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31326231360435486
    2. '=' → logprob: -1.3132623434066772
    3. '<|end|>' → logprob: -15.813261985778809
    4. 'collections' → logprob: -16.188262939453125
    5. 'd' → logprob: -16.313262939453125
    6. ' ' → logprob: -16.313262939453125
    7. '[' → logprob: -16.563262939453125
    8. ')' → logprob: -17.313262939453125
    9. '  ' → logprob: -17.563262939453125
    10. '＝' → logprob: -17.688262939453125

Token 248: ' collections' (ID: 22690)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.0019286326132714748
    2. ' collections' → logprob: -6.251928806304932
    3. '.collections' → logprob: -17.376928329467773
    4. 'collection' → logprob: -19.251928329467773
    5. 'default' → logprob: -19.751928329467773
    6. 'collect' → logprob: -20.501928329467773
    7. 'Collections' → logprob: -20.626928329467773
    8. 'import' → logprob: -21.251928329467773
    9. '(collection' → logprob: -21.501928329467773
    10. 'containers' → logprob: -21.876928329467773

Token 249: '.default' (ID: 15648)
  Prédit: '.default'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.default' → logprob: -0.39856743812561035
    2. 'default' → logprob: -1.1485674381256104
    3. '=' → logprob: -4.523567199707031
    4. ' =' → logprob: -7.898567199707031
    5. ' defaultdict' → logprob: -8.898567199707031
    6. 'collections' → logprob: -9.398567199707031
    7. '(default' → logprob: -9.898567199707031
    8. 'import' → logprob: -10.398567199707031
    9. '.' → logprob: -11.023567199707031
    10. 'd' → logprob: -11.273567199707031

Token 250: 'dict' (ID: 20993)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.19485817849636078
    2. 'dict' → logprob: -2.3198580741882324
    3. 'def' → logprob: -2.5698580741882324
    4. 'fault' → logprob: -6.694858074188232
    5. 'ault' → logprob: -7.194858074188232
    6. 'f' → logprob: -9.81985855102539
    7. '```' → logprob: -9.81985855102539
    8. 'ef' → logprob: -10.31985855102539
    9. 'ict' → logprob: -10.44485855102539
    10. ' defaultdict' → logprob: -11.31985855102539

Token 251: '(set' (ID: 25904)
  Prédit: '(set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(set' → logprob: -0.0029748454689979553
    2. 'set' → logprob: -6.377974987030029
    3. '(list' → logprob: -6.752974987030029
    4. 'list' → logprob: -9.377974510192871
    5. '=set' → logprob: -11.877974510192871
    6. '(int' → logprob: -12.627974510192871
    7. '(lambda' → logprob: -12.877974510192871
    8. ',set' → logprob: -12.877974510192871
    9. 'collections' → logprob: -14.377974510192871
    10. ':set' → logprob: -14.377974510192871

Token 252: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.059050776064395905
    2. ')' → logprob: -2.9340507984161377
    3. 'for' → logprob: -5.809050559997559
    4. '<|end|>' → logprob: -8.434050559997559
    5. '
' → logprob: -8.684050559997559
    6. ')set' → logprob: -9.184050559997559
    7. '.setdefault' → logprob: -9.184050559997559
    8. '()
' → logprob: -9.309050559997559
    9. '(set' → logprob: -9.684050559997559
    10. '}
' → logprob: -10.184050559997559

Token 253: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00011033779446734115
    2. ' for' → logprob: -9.125110626220703
    3. '<|end|>' → logprob: -13.500110626220703
    4. '```' → logprob: -17.000110626220703
    5. '	for' → logprob: -18.000110626220703
    6. 'For' → logprob: -18.000110626220703
    7. 'from' → logprob: -18.375110626220703
    8. '{' → logprob: -18.625110626220703
    9. '.for' → logprob: -20.250110626220703
    10. '[' → logprob: -20.250110626220703

Token 254: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.07891181856393814
    2. ' a' → logprob: -2.578911781311035
    3. '(a' → logprob: -10.953911781311035
    4. 'b' → logprob: -13.578911781311035
    5. 'y' → logprob: -14.453911781311035
    6. '	a' → logprob: -14.578911781311035
    7. ' y' → logprob: -14.703911781311035
    8. 'c' → logprob: -14.828911781311035
    9. ' b' → logprob: -14.828911781311035
    10. ' (' → logprob: -15.203911781311035

Token 255: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0032259563449770212
    2. ',b' → logprob: -5.753225803375244
    3. 'b' → logprob: -10.503226280212402
    4. ' ,' → logprob: -11.003226280212402
    5. ' b' → logprob: -13.753226280212402
    6. ',y' → logprob: -15.003226280212402
    7. ',d' → logprob: -15.378226280212402
    8. 'd' → logprob: -15.690726280212402
    9. '```' → logprob: -15.690726280212402
    10. ' in' → logprob: -15.815726280212402

Token 256: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.01814994215965271
    2. ' b' → logprob: -4.0181498527526855
    3. '	b' → logprob: -18.143150329589844
    4. '
' → logprob: -18.143150329589844
    5. '(b' → logprob: -18.393150329589844
    6. ' ' → logprob: -18.518150329589844
    7. ',b' → logprob: -18.768150329589844
    8. '```' → logprob: -18.893150329589844
    9. 'a' → logprob: -19.268150329589844
    10. ',' → logprob: -19.393150329589844

Token 257: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11378633975982666
    2. 'in' → logprob: -2.238786220550537
    3. ',' → logprob: -6.988786220550537
    4. 'Y' → logprob: -10.988786697387695
    5. ',Y' → logprob: -11.238786697387695
    6. 'd' → logprob: -12.863786697387695
    7. 'import' → logprob: -12.863786697387695
    8. 'In' → logprob: -13.988786697387695
    9. '[Y' → logprob: -14.363786697387695
    10. '```' → logprob: -14.488786697387695

Token 258: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.0380416102707386
    2. ' Y' → logprob: -3.288041591644287
    3. '	Y' → logprob: -16.288042068481445
    4. '
' → logprob: -17.163042068481445
    5. ' ' → logprob: -17.288042068481445
    6. '[Y' → logprob: -17.913042068481445
    7. '(Y' → logprob: -18.788042068481445
    8. '`' → logprob: -18.913042068481445
    9. '

' → logprob: -19.163042068481445
    10. ',Y' → logprob: -19.288042068481445

Token 259: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.404602974653244
    2. ':
' → logprob: -1.1546030044555664
    3. '   ' → logprob: -4.279603004455566
    4. 'd' → logprob: -5.904603004455566
    5. ',' → logprob: -8.779603004455566
    6. ' in' → logprob: -9.029603004455566
    7. '[' → logprob: -9.279603004455566
    8. '):
' → logprob: -9.279603004455566
    9. ' d' → logprob: -9.404603004455566
    10. 'b' → logprob: -9.404603004455566

Token 260: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0028958094771951437
    2. 'd' → logprob: -5.877895832061768
    3. ' d' → logprob: -9.37789535522461
    4. ' ' → logprob: -13.25289535522461
    5. '
' → logprob: -13.75289535522461
    6. '	d' → logprob: -14.00289535522461
    7. '       ' → logprob: -14.12789535522461
    8. 'b' → logprob: -14.50289535522461
    9. '  ' → logprob: -14.62789535522461
    10. '   ' → logprob: -14.87789535522461

Token 261: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.0007100477814674377
    2. ' d' → logprob: -7.2507100105285645
    3. '   ' → logprob: -16.125709533691406
    4. '
' → logprob: -18.375709533691406
    5. ' ' → logprob: -19.125709533691406
    6. '	d' → logprob: -20.375709533691406
    7. '```' → logprob: -20.375709533691406
    8. '  ' → logprob: -20.500709533691406
    9. '[' → logprob: -20.500709533691406
    10. '[d' → logprob: -20.625709533691406

Token 262: 'ct' (ID: 308)
  Prédit: 'ct'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: 0.0
    2. 'st' → logprob: -17.5
    3. 'c' → logprob: -17.875
    4. 'ict' → logprob: -19.5
    5. '[' → logprob: -20.75
    6. '(ct' → logprob: -22.125
    7. '   ' → logprob: -22.5
    8. 'd' → logprob: -22.5
    9. 't' → logprob: -22.625
    10. '```' → logprob: -22.75

Token 263: 'Y' (ID: 56)
  Prédit: 'Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -5.512236498361744e-07
    2. 'X' → logprob: -15.000000953674316
    3. 'd' → logprob: -15.875000953674316
    4. ' Y' → logprob: -18.0
    5. 'b' → logprob: -18.125
    6. '[d' → logprob: -18.5
    7. '[Y' → logprob: -18.625
    8. '[b' → logprob: -19.25
    9. '[' → logprob: -19.875
    10. '(d' → logprob: -20.0

Token 264: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -7.505351095460355e-05
    2. 'b' → logprob: -9.500075340270996
    3. '[' → logprob: -16.87507438659668
    4. '
' → logprob: -17.37507438659668
    5. '[
' → logprob: -18.62507438659668
    6. '	b' → logprob: -18.62507438659668
    7. '(b' → logprob: -18.87507438659668
    8. '```' → logprob: -19.25007438659668
    9. '[a' → logprob: -19.37507438659668
    10. '[d' → logprob: -19.87507438659668

Token 265: '].' (ID: 1651)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '|' → logprob: -0.4292867183685303
    2. ' |=' → logprob: -1.0542867183685303
    3. ')' → logprob: -8.05428695678711
    4. ')|' → logprob: -8.55428695678711
    5. '   ' → logprob: -10.55428695678711
    6. ']|' → logprob: -11.30428695678711
    7. ' |' → logprob: -11.67928695678711
    8. ']' → logprob: -11.92928695678711
    9. ' ' → logprob: -12.55428695678711
    10. '}|' → logprob: -12.92928695678711

Token 266: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -9.968312951968983e-06
    2. '|' → logprob: -11.750009536743164
    3. ' add' → logprob: -13.625009536743164
    4. '.add' → logprob: -14.625009536743164
    5. 'update' → logprob: -15.875009536743164
    6. 'append' → logprob: -16.000009536743164
    7. '{' → logprob: -17.625009536743164
    8. '_add' → logprob: -17.625009536743164
    9. '	add' → logprob: -18.250009536743164
    10. ' |=' → logprob: -18.625009536743164

Token 267: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -1.676292231422849e-05
    2. 'a' → logprob: -11.000017166137695
    3. '(' → logprob: -17.500017166137695
    4. ' (' → logprob: -18.500017166137695
    5. '((' → logprob: -19.125017166137695
    6. '(
' → logprob: -20.375017166137695
    7. ' a' → logprob: -20.875017166137695
    8. '[a' → logprob: -22.500017166137695
    9. '(A' → logprob: -22.625017166137695
    10. ',a' → logprob: -23.125017166137695

Token 268: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.4987974029500037e-05
    2. ')
' → logprob: -10.625024795532227
    3. '())' → logprob: -15.750024795532227
    4. ' )' → logprob: -15.875024795532227
    5. ')}' → logprob: -16.625024795532227
    6. ')

' → logprob: -16.875024795532227
    7. '})' → logprob: -17.125024795532227
    8. '))' → logprob: -17.250024795532227
    9. ')#' → logprob: -17.500024795532227
    10. ')`' → logprob: -17.625024795532227

Token 269: 'lst' (ID: 65430)
  Prédit: 'lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.6339375376701355
    2. 'for' → logprob: -0.7589375376701355
    3. 'ans' → logprob: -7.258937358856201
    4. 'result' → logprob: -9.50893783569336
    5. 'res' → logprob: -9.88393783569336
    6. 'keys' → logprob: -10.00893783569336
    7. 'answer' → logprob: -10.25893783569336
    8. 'dist' → logprob: -10.38393783569336
    9. 'from' → logprob: -10.50893783569336
    10. 'arr' → logprob: -10.75893783569336

Token 270: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.16105768084526062
    2. '2' → logprob: -1.911057710647583
    3. '=[]' → logprob: -8.536057472229004
    4. 'for' → logprob: -8.786057472229004
    5. '_' → logprob: -8.911057472229004
    6. '3' → logprob: -9.411057472229004
    7. '=' → logprob: -9.411057472229004
    8. ' =' → logprob: -9.911057472229004
    9. 'Y' → logprob: -10.161057472229004
    10. '0' → logprob: -10.786057472229004

Token 271: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.34847456216812134
    2. '=' → logprob: -1.2234745025634766
    3. '=[]' → logprob: -10.848474502563477
    4. '.extend' → logprob: -12.973474502563477
    5. 'for' → logprob: -13.223474502563477
    6. 'sorted' → logprob: -13.473474502563477
    7. '[:]' → logprob: -13.723474502563477
    8. '=list' → logprob: -14.348474502563477
    9. ' ' → logprob: -14.723474502563477
    10. '=[' → logprob: -15.098474502563477

Token 272: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.31329038739204407
    2. '[]' → logprob: -1.3132903575897217
    3. '[]

' → logprob: -11.0632905960083
    4. ' []
' → logprob: -11.6882905960083
    5. ' []' → logprob: -12.9382905960083
    6. 'sorted' → logprob: -14.3132905960083
    7. '[' → logprob: -14.6882905960083
    8. '[(' → logprob: -14.6882905960083
    9. '([])
' → logprob: -15.3132905960083
    10. '[
' → logprob: -15.5632905960083

Token 273: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.128163257315464e-07
    2. ' for' → logprob: -15.5
    3. '<|end|>' → logprob: -18.75
    4. 'from' → logprob: -18.875
    5. '```' → logprob: -20.125
    6. '[' → logprob: -21.0
    7. '	for' → logprob: -22.125
    8. 'For' → logprob: -22.375
    9. '>>>' → logprob: -22.875
    10. '_for' → logprob: -23.25

Token 274: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.20220442116260529
    2. 'k' → logprob: -1.7022044658660889
    3. ' b' → logprob: -8.452204704284668
    4. ' v' → logprob: -8.452204704284668
    5. 'b' → logprob: -9.077204704284668
    6. 'v' → logprob: -9.202204704284668
    7. 'direction' → logprob: -11.202204704284668
    8. ' direction' → logprob: -11.327204704284668
    9. ' ' → logprob: -11.577204704284668
    10. ' dir' → logprob: -11.577204704284668

Token 275: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.47408992052078247
    2. 'in' → logprob: -0.9740899205207825
    3. 'sorted' → logprob: -12.099089622497559
    4. ' ' → logprob: -13.599089622497559
    5. '```' → logprob: -13.974089622497559
    6. 'import' → logprob: -13.974089622497559
    7. 'range' → logprob: -14.599089622497559
    8. ',' → logprob: -14.661589622497559
    9. ')' → logprob: -15.036589622497559
    10. '#' → logprob: -15.286589622497559

Token 276: ' [' (ID: 723)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.0016455493168905377
    2. '[-' → logprob: -7.251645565032959
    3. ' sorted' → logprob: -7.376645565032959
    4. '[' → logprob: -8.1266450881958
    5. ' [-' → logprob: -12.6266450881958
    6. 'range' → logprob: -12.7516450881958
    7. ' [' → logprob: -13.5016450881958
    8. '(sorted' → logprob: -13.6266450881958
    9. '   ' → logprob: -13.8766450881958
    10. ' ' → logprob: -14.1266450881958

Token 277: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0015854504890739918
    2. '1' → logprob: -6.751585483551025
    3. ' -' → logprob: -7.876585483551025
    4. '0' → logprob: -10.751585006713867
    5. ' ' → logprob: -11.751585006713867
    6. '(-' → logprob: -12.626585006713867
    7. '   ' → logprob: -13.251585006713867
    8. '(' → logprob: -15.251585006713867
    9. '  ' → logprob: -15.626585006713867
    10. '
' → logprob: -15.876585006713867

Token 278: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008296403102576733
    2. ' ,' → logprob: -7.125829696655273
    3. ',-' → logprob: -11.000829696655273
    4. '0' → logprob: -12.625829696655273
    5. ',
' → logprob: -13.250829696655273
    6. '-' → logprob: -13.750829696655273
    7. ' -' → logprob: -14.000829696655273
    8. ' ' → logprob: -14.375829696655273
    9. '   ' → logprob: -14.625829696655273
    10. ' ,-' → logprob: -16.000829696655273

Token 279: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6326294541358948
    2. ' ' → logprob: -0.7576294541358948
    3. ' -' → logprob: -11.13262939453125
    4. '-' → logprob: -11.50762939453125
    5. '   ' → logprob: -13.50762939453125
    6. '  ' → logprob: -13.50762939453125
    7. ',' → logprob: -13.75762939453125
    8. ' ' → logprob: -14.82012939453125
    9. ' 
' → logprob: -14.94512939453125
    10. ' ,' → logprob: -15.50762939453125

Token 280: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0017656205454841256
    2. ' ' → logprob: -6.376765727996826
    3. '-' → logprob: -9.751765251159668
    4. '   ' → logprob: -13.001765251159668
    5. ' -' → logprob: -14.001765251159668
    6. '
' → logprob: -14.126765251159668
    7. '  ' → logprob: -14.376765251159668
    8. '1' → logprob: -15.626765251159668
    9. ',' → logprob: -16.001766204833984
    10. '    ' → logprob: -16.126766204833984

Token 281: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014926036819815636
    2. ' ,' → logprob: -7.001492500305176
    3. ',-' → logprob: -7.501492500305176
    4. '-' → logprob: -11.501492500305176
    5. ',
' → logprob: -12.251492500305176
    6. ' ,-' → logprob: -12.251492500305176
    7. '1' → logprob: -13.251492500305176
    8. '   ' → logprob: -13.376492500305176
    9. ' -' → logprob: -13.876492500305176
    10. ']' → logprob: -13.876492500305176

Token 282: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.008616226725280285
    2. ' -' → logprob: -4.7586164474487305
    3. ' ' → logprob: -13.88361644744873
    4. '   ' → logprob: -15.25861644744873
    5. '1' → logprob: -15.38361644744873
    6. ',' → logprob: -16.883615493774414
    7. '  ' → logprob: -17.133615493774414
    8. '−' → logprob: -17.758615493774414
    9. '```' → logprob: -18.008615493774414
    10. '(-' → logprob: -18.508615493774414

Token 283: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.931863051955588e-05
    2. ' ' → logprob: -9.750059127807617
    3. '-' → logprob: -14.375059127807617
    4. '   ' → logprob: -16.125059127807617
    5. '```' → logprob: -16.125059127807617
    6. ',' → logprob: -16.937559127807617
    7. '  ' → logprob: -17.375059127807617
    8. '0' → logprob: -17.562559127807617
    9. ']' → logprob: -17.562559127807617
    10. 'k' → logprob: -18.187559127807617

Token 284: '][' (ID: 2696)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.033710941672325134
    2. ']:
' → logprob: -3.4087109565734863
    3. ']:
' → logprob: -10.658710479736328
    4. ']:

' → logprob: -10.908710479736328
    5. ']' → logprob: -11.033710479736328
    6. ' ]' → logprob: -12.283710479736328
    7. ',' → logprob: -13.783710479736328
    8. ':' → logprob: -14.783710479736328
    9. '],' → logprob: -15.033710479736328
    10. ']:


' → logprob: -15.158710479736328

Token 285: '::-' (ID: 96612)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.15933214128017426
    2. ']:' → logprob: -2.159332036972046
    3. '::-' → logprob: -3.784332036972046
    4. ' :' → logprob: -5.034332275390625
    5. '::' → logprob: -6.409332275390625
    6. ':]' → logprob: -7.159332275390625
    7. ']:
' → logprob: -9.409332275390625
    8. ' :]' → logprob: -10.409332275390625
    9. '1' → logprob: -10.784332275390625
    10. ' ]' → logprob: -10.784332275390625

Token 286: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.027281226590275764
    2. '::-' → logprob: -4.402281284332275
    3. ':' → logprob: -4.777281284332275
    4. ':]' → logprob: -5.152281284332275
    5. '```' → logprob: -9.402280807495117
    6. '-' → logprob: -9.652280807495117
    7. '2' → logprob: -9.777280807495117
    8. ':-' → logprob: -9.902280807495117
    9. ']' → logprob: -10.027280807495117
    10. ']:' → logprob: -10.402280807495117

Token 287: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.03392310440540314
    2. ':' → logprob: -3.4089231491088867
    3. ']:
' → logprob: -8.408923149108887
    4. '):' → logprob: -10.783923149108887
    5. ' :' → logprob: -10.908923149108887
    6. ']' → logprob: -12.533923149108887
    7. '}:' → logprob: -12.658923149108887
    8. '>:' → logprob: -12.783923149108887
    9. ':
' → logprob: -13.033923149108887
    10. ']:
' → logprob: -13.533923149108887

Token 288: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007830646354705095
    2. ':' → logprob: -7.6257829666137695
    3. '<|end|>' → logprob: -9.37578296661377
    4. 'stuff' → logprob: -9.62578296661377
    5. ',' → logprob: -10.25078296661377
    6. ' stuff' → logprob: -10.62578296661377
    7. '       ' → logprob: -11.37578296661377
    8. '  ' → logprob: -11.50078296661377
    9. ')' → logprob: -11.62578296661377
    10. '```' → logprob: -11.75078296661377

Token 289: ' arr' (ID: 1724)
  Prédit: 'stuff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stuff' → logprob: -0.3417322635650635
    2. '   ' → logprob: -1.7167322635650635
    3. ' stuff' → logprob: -2.2167322635650635
    4. '```' → logprob: -8.654232025146484
    5. '	st' → logprob: -9.216732025146484
    6. 'st' → logprob: -9.341732025146484
    7. '    ' → logprob: -9.654232025146484
    8. 'Stuff' → logprob: -9.779232025146484
    9. ' ' → logprob: -10.216732025146484
    10. ' if' → logprob: -10.341732025146484

Token 290: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17982549965381622
    2. '=' → logprob: -1.8048255443572998
    3. '=d' → logprob: -9.804825782775879
    4. ',' → logprob: -11.679825782775879
    5. 'a' → logprob: -13.054825782775879
    6. ' ' → logprob: -13.054825782775879
    7. '=[]' → logprob: -13.304825782775879
    8. '=k' → logprob: -13.304825782775879
    9. 'y' → logprob: -13.554825782775879
    10. 's' → logprob: -13.804825782775879

Token 291: ' d' (ID: 272)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.014841660857200623
    2. ' sorted' → logprob: -5.139841556549072
    3. 'list' → logprob: -5.264841556549072
    4. 'd' → logprob: -5.639841556549072
    5. ' list' → logprob: -10.13984203338623
    6. '[d' → logprob: -10.26484203338623
    7. '[]' → logprob: -10.76484203338623
    8. 'lst' → logprob: -11.13984203338623
    9. ' d' → logprob: -11.26484203338623
    10. '[' → logprob: -11.76484203338623

Token 292: 'ct' (ID: 308)
  Prédit: 'ct'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -3.7697225252486533e-06
    2. '[' → logprob: -13.000003814697266
    3. 'st' → logprob: -15.000003814697266
    4. '[c' → logprob: -15.125003814697266
    5. '[d' → logprob: -15.250003814697266
    6. 'c' → logprob: -15.375003814697266
    7. '[]' → logprob: -16.000003814697266
    8. 'cts' → logprob: -16.000003814697266
    9. '[]
' → logprob: -16.500003814697266
    10. '(ct' → logprob: -17.375003814697266

Token 293: 'Y' (ID: 56)
  Prédit: 'Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -1.6240566083070007e-06
    2. '[' → logprob: -14.250001907348633
    3. '[k' → logprob: -15.125001907348633
    4. 'k' → logprob: -15.625001907348633
    5. ' Y' → logprob: -16.000001907348633
    6. 'd' → logprob: -16.125001907348633
    7. '[Y' → logprob: -16.250001907348633
    8. 'y' → logprob: -16.875001907348633
    9. '```' → logprob: -16.875001907348633
    10. 'b' → logprob: -17.000001907348633

Token 294: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.0008076059748418629
    2. 'k' → logprob: -7.125807762145996
    3. '[b' → logprob: -12.875807762145996
    4. 'b' → logprob: -16.00080680847168
    5. '[' → logprob: -16.12580680847168
    6. '_k' → logprob: -16.62580680847168
    7. '=k' → logprob: -16.62580680847168
    8. '[key' → logprob: -17.00080680847168
    9. ',k' → logprob: -17.25080680847168
    10. '	k' → logprob: -17.25080680847168

Token 295: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.11731937527656555
    2. ']
' → logprob: -2.367319345474243
    3. '].' → logprob: -4.492319583892822
    4. '.sort' → logprob: -5.617319583892822
    5. '])' → logprob: -6.492319583892822
    6. ']

' → logprob: -9.117319107055664
    7. ')' → logprob: -9.492319107055664
    8. '.sorted' → logprob: -9.492319107055664
    9. 'sorted' → logprob: -9.992319107055664
    10. '.add' → logprob: -10.242319107055664

Token 296: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002485169330611825
    2. 'if' → logprob: -6.502485275268555
    3. ' if' → logprob: -7.252485275268555
    4. '<|end|>' → logprob: -8.252485275268555
    5. ' ' → logprob: -12.502485275268555
    6. '<|end|>' → logprob: -13.252485275268555
    7. '[' → logprob: -13.877485275268555
    8. '	if' → logprob: -13.877485275268555
    9. '       ' → logprob: -14.127485275268555
    10. 'If' → logprob: -14.127485275268555

Token 297: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.004706495441496372
    2. '   ' → logprob: -5.504706382751465
    3. ' if' → logprob: -7.379706382751465
    4. 'for' → logprob: -13.129706382751465
    5. '	if' → logprob: -14.504706382751465
    6. ' ' → logprob: -14.879706382751465
    7. '    ' → logprob: -15.129706382751465
    8. 'If' → logprob: -15.129706382751465
    9. '       ' → logprob: -15.754706382751465
    10. '    
' → logprob: -15.879706382751465

Token 298: ' len' (ID: 4631)
  Prédit: ' arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arr' → logprob: -0.5761355757713318
    2. 'arr' → logprob: -0.8261355757713318
    3. 'len' → logprob: -8.951135635375977
    4. ' len' → logprob: -9.826135635375977
    5. '(arr' → logprob: -12.701135635375977
    6. '	arr' → logprob: -12.701135635375977
    7. 'not' → logprob: -13.201135635375977
    8. ' not' → logprob: -13.326135635375977
    9. ' ' → logprob: -14.326135635375977
    10. '   ' → logprob: -14.576135635375977

Token 299: '(arr' (ID: 19646)
  Prédit: '(arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(arr' → logprob: -0.0007113590254448354
    2. 'arr' → logprob: -7.250711441040039
    3. '<arr' → logprob: -14.500711441040039
    4. ' arr' → logprob: -14.750711441040039
    5. '[arr' → logprob: -15.125711441040039
    6. '(' → logprob: -15.250711441040039
    7. '	arr' → logprob: -17.37571144104004
    8. ' (' → logprob: -17.62571144104004
    9. '>' → logprob: -18.00071144104004
    10. '$arr' → logprob: -18.50071144104004

Token 300: ')' (ID: 8)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.4425993263721466
    2. ' >' → logprob: -1.5675992965698242
    3. ')' → logprob: -1.9425992965698242
    4. ')>' → logprob: -5.442599296569824
    5. '<|end|>' → logprob: -7.442599296569824
    6. '):
' → logprob: -8.567599296569824
    7. '):' → logprob: -8.567599296569824
    8. '()>' → logprob: -9.817599296569824
    9. '{' → logprob: -10.067599296569824
    10. ' >=' → logprob: -10.067599296569824

Token 301: ' ==' (ID: 951)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.0433628186583519
    2. ' >' → logprob: -3.168362855911255
    3. ':' → logprob: -8.793362617492676
    4. ')>' → logprob: -9.543362617492676
    5. '>=' → logprob: -10.043362617492676
    6. ')' → logprob: -10.293362617492676
    7. ' >=' → logprob: -10.668362617492676
    8. '>:' → logprob: -10.918362617492676
    9. '()>' → logprob: -12.043362617492676
    10. '>
' → logprob: -12.168362617492676

Token 302: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02915705367922783
    2. ' ' → logprob: -4.1541571617126465
    3. '2' → logprob: -4.4041571617126465
    4. '1' → logprob: -7.7791571617126465
    5. '3' → logprob: -8.904156684875488
    6. '>' → logprob: -9.404156684875488
    7. '4' → logprob: -10.341656684875488
    8. '   ' → logprob: -10.716656684875488
    9. '```' → logprob: -10.716656684875488
    10. '
' → logprob: -11.154156684875488

Token 303: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002112193498760462
    2. '2' → logprob: -6.50211238861084
    3. ' ' → logprob: -7.50211238861084
    4. '3' → logprob: -10.62711238861084
    5. '1' → logprob: -11.37711238861084
    6. '4' → logprob: -11.75211238861084
    7. '>' → logprob: -12.12711238861084
    8. '```' → logprob: -13.12711238861084
    9. '
' → logprob: -13.56461238861084
    10. '   ' → logprob: -13.62711238861084

Token 304: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5956965088844299
    2. ':
' → logprob: -0.8456965088844299
    3. '       ' → logprob: -3.970696449279785
    4. '   ' → logprob: -8.595696449279785
    5. ',' → logprob: -8.720696449279785
    6. ' or' → logprob: -9.095696449279785
    7. ' continue' → logprob: -9.220696449279785
    8. 'continue' → logprob: -9.845696449279785
    9. ':return' → logprob: -10.720696449279785
    10. '):
' → logprob: -10.970696449279785

Token 305: ' continue' (ID: 4901)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01422179862856865
    2. ' continue' → logprob: -4.389221668243408
    3. 'continue' → logprob: -6.514221668243408
    4. '   ' → logprob: -8.889222145080566
    5. '	continue' → logprob: -10.639222145080566
    6. '           ' → logprob: -10.889222145080566
    7. ',' → logprob: -11.014222145080566
    8. ' ' → logprob: -12.514222145080566
    9. '     ' → logprob: -12.639222145080566
    10. '0' → logprob: -12.639222145080566

Token 306: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15065737068653107
    2. '       ' → logprob: -2.0256574153900146
    3. '
' → logprob: -6.2756571769714355
    4. '    
' → logprob: -6.5256571769714355
    5. '        
' → logprob: -6.5256571769714355
    6. ',' → logprob: -6.6506571769714355
    7. '<|end|>' → logprob: -6.6506571769714355
    8. '    ' → logprob: -9.025657653808594
    9. ',
' → logprob: -9.400657653808594
    10. '  ' → logprob: -10.150657653808594

Token 307: '   ' (ID: 271)
  Prédit: 'mi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mi' → logprob: -0.1683143675327301
    2. '   ' → logprob: -2.0433144569396973
    3. ' mi' → logprob: -3.9183144569396973
    4. '       ' → logprob: -5.793314456939697
    5. '    ' → logprob: -7.543314456939697
    6. '```' → logprob: -7.793314456939697
    7. '<|end|>' → logprob: -8.293313980102539
    8. ' ' → logprob: -8.543313980102539
    9. 'ma' → logprob: -8.793313980102539
    10. '  ' → logprob: -8.793313980102539

Token 308: ' mn' (ID: 34208)
  Prédit: 'mi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mi' → logprob: -0.0020446251146495342
    2. ' mi' → logprob: -6.627044677734375
    3. '   ' → logprob: -8.502044677734375
    4. 'mn' (adapté à ' mn') → logprob: -8.502044677734375
    5. 'ma' → logprob: -8.752044677734375
    6. 'min' → logprob: -10.627044677734375
    7. 'mx' → logprob: -10.627044677734375
    8. 'lo' → logprob: -10.877044677734375
    9. ' mn' → logprob: -11.002044677734375
    10. 'm' → logprob: -11.252044677734375

Token 309: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017163509037345648
    2. '=' → logprob: -6.626716136932373
    3. ' ,' → logprob: -8.876716613769531
    4. ' =' → logprob: -9.126716613769531
    5. ',m' → logprob: -9.501716613769531
    6. 'i' → logprob: -10.626716613769531
    7. 'a' → logprob: -11.251716613769531
    8. 'in' → logprob: -12.001716613769531
    9. ',min' → logprob: -12.751716613769531
    10. '=min' → logprob: -12.751716613769531

Token 310: ' mx' (ID: 28004)
  Prédit: ' mx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mx' → logprob: -0.825178861618042
    2. ' min' → logprob: -1.575178861618042
    3. 'mx' → logprob: -1.825178861618042
    4. ' mn' → logprob: -2.200178861618042
    5. 'min' → logprob: -3.200178861618042
    6. 'max' → logprob: -3.950178861618042
    7. ' max' → logprob: -4.700179100036621
    8. 'mn' → logprob: -5.075179100036621
    9. 'm' → logprob: -5.950179100036621
    10. ' ma' → logprob: -6.325179100036621

Token 311: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20143157243728638
    2. ' =' → logprob: -1.7014315128326416
    3. ',' → logprob: -10.951431274414062
    4. '=min' → logprob: -14.326431274414062
    5. ' ' → logprob: -16.576431274414062
    6. '=max' → logprob: -17.326431274414062
    7. '   ' → logprob: -17.576431274414062
    8. ' ,' → logprob: -18.326431274414062
    9. '=

' → logprob: -18.576431274414062
    10. 'arr' → logprob: -18.576431274414062

Token 312: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.2519315779209137
    2. 'min' → logprob: -1.5019315481185913
    3. '(min' → logprob: -13.126931190490723
    4. '	min' → logprob: -15.626931190490723
    5. ' ' → logprob: -16.50193214416504
    6. ',min' → logprob: -16.62693214416504
    7. ' minimum' → logprob: -17.12693214416504
    8. '[min' → logprob: -17.25193214416504
    9. '_min' → logprob: -17.37693214416504
    10. '=min' → logprob: -17.62693214416504

Token 313: '(arr' (ID: 19646)
  Prédit: '(arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(arr' → logprob: -9.014684110297821e-06
    2. 'arr' → logprob: -11.625008583068848
    3. '[arr' → logprob: -17.625009536743164
    4. '(' → logprob: -18.375009536743164
    5. '<arr' → logprob: -18.875009536743164
    6. ' arr' → logprob: -20.000009536743164
    7. '	arr' → logprob: -20.250009536743164
    8. '(
' → logprob: -20.500009536743164
    9. ' (' → logprob: -21.625009536743164
    10. '$arr' → logprob: -21.625009536743164

Token 314: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02648247592151165
    2. '),' → logprob: -3.651482582092285
    3. ' ,' → logprob: -9.151482582092285
    4. ',m' → logprob: -9.526482582092285
    5. ' ),' → logprob: -13.651482582092285
    6. ')' → logprob: -14.651482582092285
    7. ',),' → logprob: -14.651482582092285
    8. ',
' → logprob: -15.151482582092285
    9. '},' → logprob: -15.276482582092285
    10. '   ' → logprob: -15.526482582092285

Token 315: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.01416350994259119
    2. 'max' → logprob: -4.264163494110107
    3. '(max' → logprob: -17.764163970947266
    4. ' ' → logprob: -18.639163970947266
    5. ' ' → logprob: -19.639163970947266
    6. ',max' → logprob: -19.889163970947266
    7. '	max' → logprob: -21.014163970947266
    8. '[max' → logprob: -21.639163970947266
    9. '=max' → logprob: -21.639163970947266
    10. ' maxi' → logprob: -22.764163970947266

Token 316: '(arr' (ID: 19646)
  Prédit: '(arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(arr' → logprob: -4.36574100604048e-06
    2. 'arr' → logprob: -12.375004768371582
    3. '[arr' → logprob: -16.375003814697266
    4. '<arr' → logprob: -18.250003814697266
    5. '	arr' → logprob: -19.875003814697266
    6. ' arr' → logprob: -19.875003814697266
    7. '(' → logprob: -20.250003814697266
    8. ' (' → logprob: -20.875003814697266
    9. '$arr' → logprob: -21.125003814697266
    10. '(
' → logprob: -21.500003814697266

Token 317: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.038046084344387054
    2. ')
' → logprob: -3.28804612159729
    3. ')
' → logprob: -13.288045883178711
    4. ')

' → logprob: -13.538045883178711
    5. '   ' → logprob: -14.288045883178711
    6. ' )' → logprob: -14.413045883178711
    7. '))' → logprob: -16.41304588317871
    8. ' )
' → logprob: -16.53804588317871
    9. ');' → logprob: -17.16304588317871
    10. '):
' → logprob: -17.28804588317871

Token 318: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.038279708474874496
    2. 'lst' → logprob: -3.2882797718048096
    3. ' lst' → logprob: -8.41327953338623
    4. '  ' → logprob: -12.28827953338623
    5. '```' → logprob: -12.66327953338623
    6. '    
' → logprob: -13.03827953338623
    7. '       ' → logprob: -13.41327953338623
    8. ' ' → logprob: -13.66327953338623
    9. '
' → logprob: -14.28827953338623
    10. '(lst' → logprob: -14.66327953338623

Token 319: ' for' (ID: 395)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.062018319964408875
    2. ' lst' → logprob: -2.812018394470215
    3. '   ' → logprob: -10.187018394470215
    4. 'list' → logprob: -12.937018394470215
    5. '
' → logprob: -13.187018394470215
    6. 'for' (adapté à ' for') → logprob: -13.437018394470215
    7. 'if' → logprob: -13.812018394470215
    8. ' for' → logprob: -13.812018394470215
    9. ' ' → logprob: -13.937018394470215
    10. '(lst' → logprob: -14.062018394470215

Token 320: ' val' (ID: 1459)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.936082363128662
    2. ' val' → logprob: -1.936082363128662
    3. ' v' → logprob: -2.061082363128662
    4. 'v' → logprob: -2.061082363128662
    5. ' x' → logprob: -2.186082363128662
    6. 'i' → logprob: -2.686082363128662
    7. ' i' → logprob: -2.811082363128662
    8. 'val' → logprob: -3.186082363128662
    9. 'a' → logprob: -3.936082363128662
    10. 'p' → logprob: -4.186082363128662

Token 321: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01629112847149372
    2. 'in' → logprob: -4.14129114151001
    3. ',' → logprob: -8.641290664672852
    4. ' ' → logprob: -10.266290664672852
    5. '_' → logprob: -11.891290664672852
    6. 's' → logprob: -12.141290664672852
    7. ' ,' → logprob: -12.141290664672852
    8. ',val' → logprob: -12.391290664672852
    9. 'range' → logprob: -12.641290664672852
    10. '	in' → logprob: -12.766290664672852

Token 322: ' (' (ID: 350)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3413302004337311
    2. ' range' → logprob: -2.2163302898406982
    3. 'arr' → logprob: -2.5913302898406982
    4. 'sorted' → logprob: -3.4663302898406982
    5. '[' → logprob: -3.5913302898406982
    6. '[arr' → logprob: -3.8413302898406982
    7. 'lst' → logprob: -5.216330051422119
    8. '(range' → logprob: -5.716330051422119
    9. ' [' → logprob: -5.716330051422119
    10. ' sorted' → logprob: -5.841330051422119

Token 323: 'mn' (ID: 34579)
  Prédit: 'mn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mn' → logprob: -0.07839314639568329
    2. '[m' → logprob: -2.7033932209014893
    3. ' mn' → logprob: -5.20339298248291
    4. '(m' → logprob: -6.45339298248291
    5. '[' → logprob: -7.45339298248291
    6. '   ' → logprob: -7.70339298248291
    7. 'mx' → logprob: -8.95339298248291
    8. ' [' → logprob: -10.70339298248291
    9. '[min' → logprob: -10.82839298248291
    10. 'm' → logprob: -11.32839298248291

Token 324: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.862962229410186e-05
    2. ' ,' → logprob: -9.750078201293945
    3. ',m' → logprob: -11.500078201293945
    4. ',
' → logprob: -12.250078201293945
    5. ',val' → logprob: -12.250078201293945
    6. ',n' → logprob: -16.750078201293945
    7. ',max' → logprob: -16.750078201293945
    8. ',k' → logprob: -17.125078201293945
    9. '
' → logprob: -17.125078201293945
    10. '   ' → logprob: -17.250078201293945

Token 325: ' mx' (ID: 28004)
  Prédit: ' mx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mx' → logprob: -0.1130121573805809
    2. 'mx' → logprob: -2.2380120754241943
    3. ' ' → logprob: -8.738012313842773
    4. '(mx' → logprob: -11.613012313842773
    5. ' ' → logprob: -11.988012313842773
    6. '
' → logprob: -12.613012313842773
    7. ',' → logprob: -13.738012313842773
    8. ' mc' → logprob: -13.988012313842773
    9. ' 
' → logprob: -14.113012313842773
    10. 'max' → logprob: -14.238012313842773

Token 326: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05801394581794739
    2. '):' → logprob: -3.308013916015625
    3. '):
' → logprob: -3.933013916015625
    4. ',k' → logprob: -9.558013916015625
    5. ' ,' → logprob: -10.183013916015625
    6. '   ' → logprob: -10.933013916015625
    7. ')' → logprob: -11.183013916015625
    8. ',
' → logprob: -11.308013916015625
    9. ':' → logprob: -11.558013916015625
    10. '):
' → logprob: -11.933013916015625

Token 327: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007827070076018572
    2. ' lst' → logprob: -7.500782489776611
    3. ',' → logprob: -9.25078296661377
    4. 'lst' → logprob: -9.50078296661377
    5. '):
' → logprob: -11.12578296661377
    6. ' if' → logprob: -11.62578296661377
    7. '```' → logprob: -12.12578296661377
    8. '   ' → logprob: -12.25078296661377
    9. '<|end|>' → logprob: -12.37578296661377
    10. ')' → logprob: -12.37578296661377

Token 328: ' lst' (ID: 33384)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lst' (adapté à ' lst') → logprob: -0.017459608614444733
    2. ' lst' → logprob: -4.142459392547607
    3. '           ' → logprob: -6.892459392547607
    4. '       ' → logprob: -7.892459392547607
    5. '   ' → logprob: -12.017459869384766
    6. 'list' → logprob: -12.017459869384766
    7. '
' → logprob: -12.517459869384766
    8. '        
' → logprob: -12.517459869384766
    9. 'if' → logprob: -13.017459869384766
    10. 'l' → logprob: -13.267459869384766

Token 329: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00010044389637187123
    2. '1' → logprob: -9.500100135803223
    3. '.append' → logprob: -10.625100135803223
    4. 'append' → logprob: -14.500100135803223
    5. '.extend' → logprob: -15.625100135803223
    6. '```' → logprob: -15.625100135803223
    7. '.' → logprob: -16.12510108947754
    8. '_.' → logprob: -16.12510108947754
    9. '_' → logprob: -17.12510108947754
    10. '₂' → logprob: -18.25010108947754

Token 330: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00012654215970542282
    2. '.' → logprob: -9.500126838684082
    3. '.extend' → logprob: -10.125126838684082
    4. 'append' → logprob: -11.500126838684082
    5. ' .' → logprob: -14.250126838684082
    6. '.insert' → logprob: -16.250125885009766
    7. '.app' → logprob: -16.250125885009766
    8. '<|end|>' → logprob: -16.250125885009766
    9. '.add' → logprob: -16.500125885009766
    10. '.setdefault' → logprob: -16.625125885009766

Token 331: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.004910073708742857
    2. '(' → logprob: -5.629909992218018
    3. '(val' → logprob: -6.754909992218018
    4. ' (' → logprob: -9.254910469055176
    5. ' ((' → logprob: -10.129910469055176
    6. '(
' → logprob: -12.004910469055176
    7. '   ' → logprob: -14.254910469055176
    8. ' ' → logprob: -14.879910469055176
    9. '```' → logprob: -15.004910469055176
    10. '[val' → logprob: -15.504910469055176

Token 332: 'val' (ID: 1105)
  Prédit: 'val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.00018029935017693788
    2. ' val' → logprob: -8.6251802444458
    3. '(val' → logprob: -14.7501802444458
    4. '   ' → logprob: -16.125181198120117
    5. '[val' → logprob: -17.000181198120117
    6. '  ' → logprob: -17.625181198120117
    7. ' ' → logprob: -17.875181198120117
    8. '	val' → logprob: -18.000181198120117
    9. ',val' → logprob: -18.250181198120117
    10. '    ' → logprob: -18.375181198120117

Token 333: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00035727277281694114
    2. ',k' → logprob: -8.000357627868652
    3. ' ,' → logprob: -10.750357627868652
    4. ',
' → logprob: -15.750357627868652
    5. ' ' → logprob: -16.500356674194336
    6. 'k' → logprob: -17.000356674194336
    7. '   ' → logprob: -17.250356674194336
    8. ',n' → logprob: -17.500356674194336
    9. ',b' → logprob: -17.500356674194336
    10. ')' → logprob: -17.625356674194336

Token 334: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.06995443999767303
    2. ' k' → logprob: -2.6949543952941895
    3. ' ' → logprob: -11.194954872131348
    4. ')' → logprob: -14.257454872131348
    5. '   ' → logprob: -14.444954872131348
    6. ' ' → logprob: -14.569954872131348
    7. '    ' → logprob: -14.944954872131348
    8. ' 
' → logprob: -15.319954872131348
    9. '1' → logprob: -15.382454872131348
    10. '	k' → logprob: -15.382454872131348

Token 335: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0025887389201670885
    2. ')' → logprob: -6.002588748931885
    3. '))
' → logprob: -9.127588272094727
    4. ')))' → logprob: -12.877588272094727
    5. ')
' → logprob: -13.752588272094727
    6. ' ))' → logprob: -15.627588272094727
    7. '))

' → logprob: -15.752588272094727
    8. '),' → logprob: -15.877588272094727
    9. ',' → logprob: -16.377588272094727
    10. ')}' → logprob: -16.752588272094727

Token 336: 'def' (ID: 1314)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lst' → logprob: -2.033237934112549
    2. '#' → logprob: -2.158237934112549
    3. 'ans' → logprob: -2.408237934112549
    4. 'for' → logprob: -2.658237934112549
    5. 'answer' → logprob: -2.658237934112549
    6. 'def' → logprob: -3.033237934112549
    7. 'time' → logprob: -3.033237934112549
    8. 'res' → logprob: -3.158237934112549
    9. 'max' → logprob: -3.283237934112549
    10. 'if' → logprob: -3.408237934112549

Token 337: ' ts' (ID: 6601)
  Prédit: ' check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' check' → logprob: -1.199929118156433
    2. ' main' → logprob: -1.449929118156433
    3. ' solve' → logprob: -1.824929118156433
    4. ' collision' → logprob: -2.5749292373657227
    5. ' collide' → logprob: -2.5749292373657227
    6. ' can' → logprob: -2.9499292373657227
    7. ' find' → logprob: -3.9499292373657227
    8. ' detect' → logprob: -4.824929237365723
    9. ' calc' → logprob: -4.824929237365723
    10. ' intersect' → logprob: -4.824929237365723

Token 338: '(pl' (ID: 81738)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00746878981590271
    2. ' def' → logprob: -5.3824687004089355
    3. 'uk' → logprob: -7.6324687004089355
    4. '_def' → logprob: -7.7574687004089355
    5. '=' → logprob: -8.257469177246094
    6. 'unami' → logprob: -8.257469177246094
    7. 'v' → logprob: -8.757469177246094
    8. 'um' → logprob: -9.007469177246094
    9. 't' → logprob: -9.007469177246094
    10. 'olve' → logprob: -9.257469177246094

Token 339: 'ist' (ID: 421)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0255392789840698
    2. '):' → logprob: -1.4005392789840698
    3. ')' → logprob: -1.7755392789840698
    4. 'ist' → logprob: -2.1505393981933594
    5. 'an' → logprob: -3.1505393981933594
    6. '):
' → logprob: -3.4005393981933594
    7. 'st' → logprob: -4.275539398193359
    8. '):

' → logprob: -5.650539398193359
    9. ',' → logprob: -6.275539398193359
    10. 'ain' → logprob: -6.775539398193359

Token 340: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.025374997407197952
    2. '):
' → logprob: -4.275374889373779
    3. ',' → logprob: -4.650374889373779
    4. 'ist' → logprob: -7.525374889373779
    5. ':' → logprob: -7.775374889373779
    6. ')' → logprob: -7.900374889373779
    7. 'st' → logprob: -9.025375366210938
    8. 's' → logprob: -9.900375366210938
    9. '):

' → logprob: -10.525375366210938
    10. 't' → logprob: -11.900375366210938

Token 341: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15844404697418213
    2. ' res' → logprob: -2.7834439277648926
    3. ' i' → logprob: -3.7834439277648926
    4. ' if' → logprob: -4.533443927764893
    5. ' for' → logprob: -4.783443927764893
    6. ' result' → logprob: -5.408443927764893
    7. 'i' → logprob: -5.658443927764893
    8. ' n' → logprob: -5.658443927764893
    9. '    ' → logprob: -5.783443927764893
    10. '    
' → logprob: -5.783443927764893

Token 342: ' z' (ID: 579)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.8149839043617249
    2. 'pl' → logprob: -2.31498384475708
    3. 'ret' → logprob: -2.56498384475708
    4. 'ans' → logprob: -2.68998384475708
    5. 'if' → logprob: -3.18998384475708
    6. 'result' → logprob: -3.56498384475708
    7. '   ' → logprob: -3.93998384475708
    8. 'plist' → logprob: -3.93998384475708
    9. 's' → logprob: -4.06498384475708
    10. 'time' → logprob: -4.18998384475708

Token 343: ' =' (ID: 314)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.5788544416427612
    2. 'en' → logprob: -1.3288544416427612
    3. 'ist' → logprob: -2.328854560852051
    4. '=[]' → logprob: -3.328854560852051
    5. '=' → logprob: -4.578854560852051
    6. 's' → logprob: -4.953854560852051
    7. ' =' → logprob: -5.203854560852051
    8. '=[]
' → logprob: -5.453854560852051
    9. '=len' → logprob: -5.953854560852051
    10. 'p' → logprob: -6.453854560852051

Token 344: ' set' (ID: 920)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.7420387864112854
    2. '0' → logprob: -0.8670387864112854
    3. 'collections' → logprob: -3.2420387268066406
    4. '[]
' → logprob: -4.242038726806641
    5. 'plist' → logprob: -4.492038726806641
    6. 'len' → logprob: -4.742038726806641
    7. 'sum' → logprob: -4.867038726806641
    8. '[' → logprob: -5.492038726806641
    9. '{}' → logprob: -5.492038726806641
    10. 'pl' → logprob: -5.867038726806641

Token 345: '()
' (ID: 1234)
  Prédit: '(pl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pl' → logprob: -0.28222957253456116
    2. '()' → logprob: -1.4072295427322388
    3. '()
' → logprob: -7.032229423522949
    4. '(' → logprob: -10.03222942352295
    5. '()

' → logprob: -10.53222942352295
    6. '(lst' → logprob: -10.90722942352295
    7. '()\' → logprob: -11.15722942352295
    8. '((' → logprob: -11.53222942352295
    9. 'pl' → logprob: -11.65722942352295
    10. '()]' → logprob: -12.03222942352295

Token 346: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07501406967639923
    2. ' for' → logprob: -2.950014114379883
    3. 'for' → logprob: -3.950014114379883
    4. '<|end|>' → logprob: -8.575014114379883
    5. 'def' → logprob: -9.200014114379883
    6. 'pl' → logprob: -9.450014114379883
    7. '    ' → logprob: -9.575014114379883
    8. 'i' → logprob: -9.700014114379883
    9. 'idx' → logprob: -10.575014114379883
    10. ' ' → logprob: -10.575014114379883

Token 347: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.29788315296173096
    2. ' for' → logprob: -1.547883152961731
    3. '   ' → logprob: -3.6728830337524414
    4. 'i' → logprob: -5.047883033752441
    5. 'pl' → logprob: -5.422883033752441
    6. 'prev' → logprob: -6.047883033752441
    7. 'n' → logprob: -6.547883033752441
    8. 'res' → logprob: -6.797883033752441
    9. 'p' → logprob: -7.422883033752441
    10. 's' → logprob: -7.922883033752441

Token 348: ' i' (ID: 575)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.1092619895935059
    2. 'p' → logprob: -1.7342619895935059
    3. 'a' → logprob: -1.8592619895935059
    4. ' p' → logprob: -2.609261989593506
    5. 'i' → logprob: -2.734261989593506
    6. ' x' → logprob: -2.984261989593506
    7. ' val' → logprob: -3.609261989593506
    8. ' a' → logprob: -3.734261989593506
    9. 'v' → logprob: -3.859261989593506
    10. 'val' → logprob: -3.984261989593506

Token 349: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.45508694648742676
    2. ',' → logprob: -1.2050869464874268
    3. 'in' → logprob: -2.9550869464874268
    4. ' ,' → logprob: -4.705086708068848
    5. 'n' → logprob: -5.705086708068848
    6. ' ' → logprob: -7.205086708068848
    7. ',n' → logprob: -8.580086708068848
    8. '1' → logprob: -10.080086708068848
    9. 'pl' → logprob: -10.080086708068848
    10. '   ' → logprob: -10.080086708068848

Token 350: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5775558948516846
    2. ' range' → logprob: -0.8275558948516846
    3. ' plist' → logprob: -7.0775556564331055
    4. 'plist' → logprob: -7.2025556564331055
    5. ' xrange' → logprob: -11.827555656433105
    6. ' ' → logprob: -12.202555656433105
    7. '[' → logprob: -12.702555656433105
    8. '	range' → logprob: -13.077555656433105
    9. 'pl' → logprob: -13.327555656433105
    10. 'list' → logprob: -13.827555656433105

Token 351: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.0667300671339035
    2. 'len' → logprob: -3.19173002243042
    3. '(' → logprob: -3.94173002243042
    4. '1' → logprob: -5.56673002243042
    5. ' len' → logprob: -8.691730499267578
    6. '2' → logprob: -10.691730499267578
    7. ' ' → logprob: -11.316730499267578
    8. '0' → logprob: -12.566730499267578
    9. '   ' → logprob: -13.316730499267578
    10. ' (' → logprob: -13.691730499267578

Token 352: '(pl' (ID: 81738)
  Prédit: '(pl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pl' → logprob: -1.9623810658231378e-05
    2. 'plist' → logprob: -11.375020027160645
    3. '(lst' → logprob: -12.125020027160645
    4. 'pl' → logprob: -13.625020027160645
    5. ' plist' → logprob: -13.750020027160645
    6. '(' → logprob: -15.125020027160645
    7. '(p' → logprob: -16.500019073486328
    8. '_pl' → logprob: -17.875019073486328
    9. 'lst' → logprob: -18.000019073486328
    10. ')' → logprob: -18.250019073486328

Token 353: 'ist' (ID: 421)
  Prédit: 'ist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.0001843485952122137
    2. 'list' → logprob: -9.000184059143066
    3. 'lst' → logprob: -10.625184059143066
    4. 'st' → logprob: -10.750184059143066
    5. ')' → logprob: -12.750184059143066
    6. 'is' → logprob: -13.125184059143066
    7. '[' → logprob: -13.500184059143066
    8. '```' → logprob: -13.625184059143066
    9. '   ' → logprob: -14.125184059143066
    10. '`' → logprob: -14.125184059143066

Token 354: ')):
' (ID: 22530)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4797537326812744
    2. ' -' → logprob: -1.6047537326812744
    3. ')' → logprob: -1.7297537326812744
    4. ')-' → logprob: -6.729753494262695
    5. '   ' → logprob: -7.229753494262695
    6. ' ' → logprob: -7.479753494262695
    7. '()' → logprob: -9.229753494262695
    8. ' )' → logprob: -9.979753494262695
    9. '):
' → logprob: -10.229753494262695
    10. '()-' → logprob: -10.479753494262695

Token 355: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3214130103588104
    2. '<|end|>' → logprob: -1.5714130401611328
    3. '   ' → logprob: -3.071413040161133
    4. ' for' → logprob: -4.571413040161133
    5. ',' → logprob: -5.196413040161133
    6. ' ' → logprob: -6.446413040161133
    7. '<|end|>' → logprob: -7.071413040161133
    8. '    ' → logprob: -7.071413040161133
    9. ' if' → logprob: -8.071413040161133
    10. ')' → logprob: -8.696413040161133

Token 356: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.23137567937374115
    2. 'for' (adapté à ' for') → logprob: -1.7313756942749023
    3. ' if' → logprob: -4.856375694274902
    4. ' j' → logprob: -4.981375694274902
    5. 'j' → logprob: -5.106375694274902
    6. 'if' → logprob: -5.481375694274902
    7. '   ' → logprob: -6.106375694274902
    8. 'pl' → logprob: -7.106375694274902
    9. ' pl' → logprob: -7.606375694274902
    10. ' x' → logprob: -8.106375694274902

Token 357: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0622866228222847
    2. ' j' → logprob: -2.812286615371704
    3. '   ' → logprob: -8.312286376953125
    4. ' ' → logprob: -10.937286376953125
    5. '	j' → logprob: -11.187286376953125
    6. '```' → logprob: -11.687286376953125
    7. '  ' → logprob: -11.812286376953125
    8. '    ' → logprob: -12.062286376953125
    9. 'k' → logprob: -12.312286376953125
    10. '
' → logprob: -12.687286376953125

Token 358: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0627090334892273
    2. 'in' → logprob: -2.812709093093872
    3. ' i' → logprob: -8.062708854675293
    4. ' ' → logprob: -8.312708854675293
    5. 'i' → logprob: -9.187708854675293
    6. 'range' → logprob: -10.562708854675293
    7. ')' → logprob: -10.937708854675293
    8. ' range' → logprob: -11.687708854675293
    9. '   ' → logprob: -12.062708854675293
    10. '+' → logprob: -12.687708854675293

Token 359: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.47447940707206726
    2. 'range' → logprob: -0.9744794368743896
    3. '(range' → logprob: -8.099479675292969
    4. 'i' → logprob: -9.349479675292969
    5. ' i' → logprob: -11.724479675292969
    6. '(i' → logprob: -13.224479675292969
    7. '	range' → logprob: -14.724479675292969
    8. ' xrange' → logprob: -14.849479675292969
    9. ' ' → logprob: -15.099479675292969
    10. '[i' → logprob: -15.224479675292969

Token 360: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.039334576576948166
    2. 'i' → logprob: -3.539334535598755
    3. ' i' → logprob: -5.289334774017334
    4. '(len' → logprob: -5.664334774017334
    5. ' (' → logprob: -7.039334774017334
    6. '(' → logprob: -9.414334297180176
    7. 'len' → logprob: -10.289334297180176
    8. '   ' → logprob: -11.664334297180176
    9. ' len' → logprob: -11.664334297180176
    10. ' ' → logprob: -12.789334297180176

Token 361: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.023304294794797897
    2. ' +' → logprob: -3.7733042240142822
    3. '1' → logprob: -10.898303985595703
    4. '+
' → logprob: -11.148303985595703
    5. '+i' → logprob: -11.523303985595703
    6. ',' → logprob: -11.773303985595703
    7. '   ' → logprob: -12.773303985595703
    8. ' +
' → logprob: -13.398303985595703
    9. '):
' → logprob: -14.023303985595703
    10. '+j' → logprob: -14.773303985595703

Token 362: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014656837447546422
    2. ' ' → logprob: -8.875146865844727
    3. '2' → logprob: -12.250146865844727
    4. '   ' → logprob: -13.875146865844727
    5. 'i' → logprob: -14.625146865844727
    6. '
' → logprob: -15.500146865844727
    7. '```' → logprob: -16.375146865844727
    8. '  ' → logprob: -16.937646865844727
    9. '0' → logprob: -17.312646865844727
    10. '    ' → logprob: -17.687646865844727

Token 363: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.845798710244708e-05
    2. ' ' → logprob: -10.250038146972656
    3. 'i' → logprob: -13.250038146972656
    4. '2' → logprob: -14.375038146972656
    5. '   ' → logprob: -16.062538146972656
    6. '```' → logprob: -16.437538146972656
    7. '
' → logprob: -16.500038146972656
    8. 'len' → logprob: -16.625038146972656
    9. '0' → logprob: -17.687538146972656
    10. ')' → logprob: -17.812538146972656

Token 364: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00870533287525177
    2. ' ,' → logprob: -5.883705139160156
    3. '):' → logprob: -6.008705139160156
    4. '):
' → logprob: -6.383705139160156
    5. ',len' → logprob: -6.508705139160156
    6. '<|end|>' → logprob: -9.258705139160156
    7. '   ' → logprob: -10.883705139160156
    8. ')' → logprob: -11.008705139160156
    9. '1' → logprob: -11.133705139160156
    10. ' ):' → logprob: -11.508705139160156

Token 365: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.018152866512537003
    2. ' len' → logprob: -4.018152713775635
    3. '(len' → logprob: -13.768153190612793
    4. '   ' → logprob: -14.393153190612793
    5. '       ' → logprob: -14.893153190612793
    6. '           ' → logprob: -15.018153190612793
    7. ' ' → logprob: -15.768153190612793
    8. ')' → logprob: -16.018152236938477
    9. '<len' → logprob: -16.393152236938477
    10. '	len' → logprob: -16.518152236938477

Token 366: '(pl' (ID: 81738)
  Prédit: '(pl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pl' → logprob: -3.054500666621607e-06
    2. 'plist' → logprob: -13.37500286102295
    3. 'pl' → logprob: -13.87500286102295
    4. ' plist' → logprob: -15.50000286102295
    5. ' (' → logprob: -16.125003814697266
    6. '(' → logprob: -16.750003814697266
    7. '(lst' → logprob: -17.250003814697266
    8. '	pl' → logprob: -17.375003814697266
    9. '/pl' → logprob: -17.625003814697266
    10. '(p' → logprob: -17.750003814697266

Token 367: 'ist' (ID: 421)
  Prédit: 'ist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ist' → logprob: -5.319370302458992e-06
    2. 'st' → logprob: -12.375005722045898
    3. 'ист' → logprob: -15.500005722045898
    4. '   ' → logprob: -15.625005722045898
    5. '```' → logprob: -15.750005722045898
    6. 'list' → logprob: -16.2500057220459
    7. ')' → logprob: -16.3750057220459
    8. ' ist' → logprob: -16.6250057220459
    9. '
' → logprob: -16.7500057220459
    10. '[' → logprob: -16.8750057220459

Token 368: ')):
' (ID: 22530)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0617702454328537
    2. ')):' → logprob: -3.43677020072937
    3. '):
' → logprob: -3.68677020072937
    4. ')):
' → logprob: -6.061770439147949
    5. ' ):' → logprob: -8.56177043914795
    6. ')' → logprob: -9.81177043914795
    7. '))' → logprob: -10.06177043914795
    8. '):

' → logprob: -10.81177043914795
    9. ']):' → logprob: -11.68677043914795
    10. '>):' → logprob: -12.18677043914795

Token 369: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.30148279666900635
    2. '       ' → logprob: -2.051482677459717
    3. '<|end|>' → logprob: -2.176482677459717
    4. ',' → logprob: -5.426482677459717
    5. ' ' → logprob: -5.551482677459717
    6. '        ' → logprob: -5.801482677459717
    7. '<|end|>' → logprob: -6.176482677459717
    8. ':' → logprob: -7.551482677459717
    9. '               ' → logprob: -7.676482677459717
    10. '   ' → logprob: -7.801482677459717

Token 370: ' p' (ID: 275)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3057778477668762
    2. '       ' → logprob: -2.5557777881622314
    3. 'if' → logprob: -2.8057777881622314
    4. '           ' → logprob: -2.8057777881622314
    5. ' x' → logprob: -3.8057777881622314
    6. 'a' → logprob: -4.4307780265808105
    7. ' if' → logprob: -4.4307780265808105
    8. 'p' (adapté à ' p') → logprob: -4.6807780265808105
    9. 'dx' → logprob: -6.0557780265808105
    10. ' p' → logprob: -7.1807780265808105

Token 371: '1' (ID: 16)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.33072835206985474
    2. 'l' → logprob: -1.83072829246521
    3. 'lst' → logprob: -2.45572829246521
    4. '1' → logprob: -3.58072829246521
    5. ' =' → logprob: -5.705728530883789
    6. 'i' → logprob: -7.330728530883789
    7. 'plist' → logprob: -7.455728530883789
    8. 'ilist' → logprob: -7.580728530883789
    9. ',' → logprob: -7.705728530883789
    10. '=' → logprob: -7.955728530883789

Token 372: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3157936632633209
    2. ',' → logprob: -1.9407936334609985
    3. '=' → logprob: -2.065793752670288
    4. ' ,' → logprob: -8.940793991088867
    5. '0' → logprob: -9.190793991088867
    6. ' ' → logprob: -9.565793991088867
    7. ')' → logprob: -9.815793991088867
    8. ',p' → logprob: -9.940793991088867
    9. '<|end|>' → logprob: -11.065793991088867
    10. 'x' → logprob: -11.815793991088867

Token 373: ' d' (ID: 272)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.006721995305269957
    2. ' p' → logprob: -5.0067219734191895
    3. 'pl' → logprob: -12.881722450256348
    4. '=' → logprob: -13.506722450256348
    5. 'plist' → logprob: -14.006722450256348
    6. ' =' → logprob: -14.381722450256348
    7. 'q' → logprob: -14.631722450256348
    8. ' pl' → logprob: -16.13172149658203
    9. 'v' → logprob: -16.25672149658203
    10. 'b' → logprob: -16.25672149658203

Token 374: '1' (ID: 16)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6919348239898682
    2. '=' → logprob: -0.9419348239898682
    3. '1' → logprob: -3.066934823989868
    4. 'l' → logprob: -3.691934823989868
    5. ')' → logprob: -3.816934823989868
    6. 'plist' → logprob: -4.941934585571289
    7. 'pl' → logprob: -5.816934585571289
    8. 'lst' → logprob: -5.941934585571289
    9. 'p' → logprob: -7.066934585571289
    10. '_' → logprob: -7.816934585571289

Token 375: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.054956644773483276
    2. ' =' → logprob: -2.9299566745758057
    3. ')' → logprob: -10.054956436157227
    4. ')=' → logprob: -10.804956436157227
    5. '=p' → logprob: -12.804956436157227
    6. ',' → logprob: -12.804956436157227
    7. ' ' → logprob: -13.929956436157227
    8. '   ' → logprob: -14.304956436157227
    9. 'p' → logprob: -14.554956436157227
    10. ']=' → logprob: -14.929956436157227

Token 376: ' plist' (ID: 183654)
  Prédit: 'plist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plist' → logprob: -0.026302039623260498
    2. ' plist' → logprob: -3.6513020992279053
    3. 'lst' → logprob: -14.651302337646484
    4. 'pl' → logprob: -15.401302337646484
    5. 'playlist' → logprob: -15.401302337646484
    6. '   ' → logprob: -15.526302337646484
    7. 'plt' → logprob: -16.276302337646484
    8. 'tolist' → logprob: -16.526302337646484
    9. 'ilist' → logprob: -16.776302337646484
    10. 'plib' → logprob: -16.776302337646484

Token 377: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.19636420905590057
    2. '[j' → logprob: -2.196364164352417
    3. ']' → logprob: -3.696364164352417
    4. ')' → logprob: -4.446364402770996
    5. '=' → logprob: -4.821364402770996
    6. ' =' → logprob: -4.821364402770996
    7. '[' → logprob: -5.821364402770996
    8. '       ' → logprob: -6.446364402770996
    9. '   ' → logprob: -6.571364402770996
    10. '[p' → logprob: -6.821364402770996

Token 378: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.6530407667160034
    2. ')
' → logprob: -1.0280407667160034
    3. ']' → logprob: -3.028040885925293
    4. ')' → logprob: -3.653040885925293
    5. '),' → logprob: -3.653040885925293
    6. '],' → logprob: -3.903040885925293
    7. ',' → logprob: -7.903040885925293
    8. '],
' → logprob: -8.528040885925293
    9. '   ' → logprob: -8.778040885925293
    10. '),
' → logprob: -8.778040885925293

Token 379: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004580599721521139
    2. '<|end|>' → logprob: -5.504580497741699
    3. '            
' → logprob: -9.3795804977417
    4. ' ' → logprob: -9.3795804977417
    5. ')' → logprob: -10.0045804977417
    6. '<|end|>' → logprob: -10.1295804977417
    7. ',' → logprob: -10.1295804977417
    8. '       ' → logprob: -10.3795804977417
    9. '               ' → logprob: -10.5045804977417
    10. ' if' → logprob: -10.5045804977417

Token 380: ' p' (ID: 275)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3472961485385895
    2. 'p' (adapté à ' p') → logprob: -1.847296118736267
    3. ' p' → logprob: -2.5972962379455566
    4. 'if' → logprob: -2.9722962379455566
    5. '           ' → logprob: -5.097296237945557
    6. ' 
' → logprob: -6.222296237945557
    7. ' for' → logprob: -7.347296237945557
    8. ' ' → logprob: -8.222295761108398
    9. '            
' → logprob: -8.222295761108398
    10. 'v' → logprob: -9.472295761108398

Token 381: '2' (ID: 17)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5722963213920593
    2. '1' → logprob: -0.9472963213920593
    3. ',' → logprob: -3.072296380996704
    4. ' ' → logprob: -7.697296142578125
    5. ' ,' → logprob: -8.072296142578125
    6. '[' → logprob: -8.072296142578125
    7. '
' → logprob: -8.447296142578125
    8. '```' → logprob: -9.322296142578125
    9. '<|end|>' → logprob: -9.697296142578125
    10. ',
' → logprob: -9.697296142578125

Token 382: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005668530357070267
    2. ',p' → logprob: -8.375566482543945
    3. ' ,' → logprob: -8.750566482543945
    4. '<|end|>' → logprob: -9.875566482543945
    5. ',
' → logprob: -10.125566482543945
    6. ',d' → logprob: -10.250566482543945
    7. ' p' → logprob: -11.125566482543945
    8. '[' → logprob: -11.125566482543945
    9. ' ' → logprob: -12.000566482543945
    10. 'p' → logprob: -12.875566482543945

Token 383: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.1015879213809967
    2. 'd' → logprob: -2.351588010787964
    3. '<|end|>' → logprob: -6.601587772369385
    4. ' ' → logprob: -11.601588249206543
    5. ' ' → logprob: -13.101588249206543
    6. ' p' → logprob: -13.601588249206543
    7. 's' → logprob: -13.601588249206543
    8. 'plist' → logprob: -13.976588249206543
    9. '<|end|>' → logprob: -14.101588249206543
    10. '...' → logprob: -14.101588249206543

Token 384: '2' (ID: 17)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.13901956379413605
    2. '[j' → logprob: -2.51401948928833
    3. 'plist' → logprob: -4.01401948928833
    4. '1' → logprob: -4.76401948928833
    5. '```' → logprob: -5.13901948928833
    6. 'lst' → logprob: -5.88901948928833
    7. 's' → logprob: -5.88901948928833
    8. 'list' → logprob: -6.01401948928833
    9. '2' → logprob: -6.38901948928833
    10. '[p' → logprob: -7.13901948928833

Token 385: ' =' (ID: 314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4654250144958496
    2. '<|end|>' → logprob: -1.4654250144958496
    3. ' =' → logprob: -2.3404250144958496
    4. ']' → logprob: -3.5904250144958496
    5. '=' → logprob: -4.84042501449585
    6. ',' → logprob: -5.84042501449585
    7. '<|end|>' → logprob: -6.71542501449585
    8. '       ' → logprob: -6.96542501449585
    9. ')=' → logprob: -7.21542501449585
    10. ']=' → logprob: -7.46542501449585

Token 386: ' plist' (ID: 183654)
  Prédit: 'plist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plist' → logprob: -0.5235336422920227
    2. ' plist' → logprob: -0.8985336422920227
    3. '(pl' → logprob: -8.023533821105957
    4. 'lst' → logprob: -10.898533821105957
    5. ' (' → logprob: -11.273533821105957
    6. '(p' → logprob: -11.648533821105957
    7. 'pl' → logprob: -12.023533821105957
    8. '(' → logprob: -12.398533821105957
    9. 'plt' → logprob: -12.523533821105957
    10. 'list' → logprob: -12.523533821105957

Token 387: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.00045033416245132685
    2. 'j' → logprob: -8.000450134277344
    3. '[' → logprob: -9.625450134277344
    4. '[
' → logprob: -11.000450134277344
    5. '   ' → logprob: -11.625450134277344
    6. '[i' → logprob: -11.750450134277344
    7. ']' → logprob: -12.000450134277344
    8. ')' → logprob: -13.125450134277344
    9. '```' → logprob: -13.875450134277344
    10. '][' → logprob: -14.000450134277344

Token 388: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.066782146692276
    2. ')
' → logprob: -2.816782236099243
    3. '           ' → logprob: -6.691781997680664
    4. '       ' → logprob: -7.066781997680664
    5. '<|end|>' → logprob: -7.066781997680664
    6. ']' → logprob: -7.316781997680664
    7. '):
' → logprob: -7.816781997680664
    8. ')]' → logprob: -8.566781997680664
    9. ']
' → logprob: -9.066781997680664
    10. '])' → logprob: -9.191781997680664

Token 389: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00022117885237094015
    2. '<|end|>' → logprob: -9.000221252441406
    3. '               ' → logprob: -10.875221252441406
    4. '            
' → logprob: -11.000221252441406
    5. '       ' → logprob: -11.125221252441406
    6. '<|end|>' → logprob: -11.375221252441406
    7. ',' → logprob: -11.625221252441406
    8. '          ' → logprob: -12.000221252441406
    9. '```' → logprob: -12.125221252441406
    10. '   ' → logprob: -12.750221252441406

Token 390: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0061450498178601265
    2. '               ' → logprob: -6.256145000457764
    3. ' if' → logprob: -6.256145000457764
    4. '<|end|>' → logprob: -6.881145000457764
    5. ' ' → logprob: -7.631145000457764
    6. 'if' (adapté à ' if') → logprob: -8.631145477294922
    7. ' 
' → logprob: -8.631145477294922
    8. '            ' → logprob: -8.756145477294922
    9. '            
' → logprob: -9.256145477294922
    10. ',' → logprob: -11.006145477294922

Token 391: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.32095831632614136
    2. 'd' → logprob: -1.4459583759307861
    3. ' abs' → logprob: -3.945958375930786
    4. ' p' → logprob: -4.945958137512207
    5. ' (' → logprob: -5.570958137512207
    6. 'p' → logprob: -5.820958137512207
    7. 'abs' → logprob: -6.070958137512207
    8. '(d' → logprob: -6.195958137512207
    9. '(p' → logprob: -7.445958137512207
    10. '(abs' → logprob: -8.070958137512207

Token 392: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005543343257158995
    2. '2' → logprob: -5.255543231964111
    3. '```' → logprob: -9.25554370880127
    4. '_' → logprob: -9.50554370880127
    5. ' ' → logprob: -9.75554370880127
    6. ' ==' → logprob: -10.50554370880127
    7. '==' → logprob: -11.25554370880127
    8. '``' → logprob: -12.69304370880127
    9. ')' → logprob: -12.88054370880127
    10. ' -' → logprob: -13.00554370880127

Token 393: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6988884806632996
    2. ' ==' → logprob: -0.6988884806632996
    3. '+' → logprob: -6.198888301849365
    4. ' !=' → logprob: -6.948888301849365
    5. '!=' → logprob: -7.198888301849365
    6. ' +' → logprob: -7.198888301849365
    7. '<|end|>' → logprob: -7.323888301849365
    8. ' ' → logprob: -8.948888778686523
    9. ')' → logprob: -9.073888778686523
    10. '==-' → logprob: -9.323888778686523

Token 394: ' d' (ID: 272)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8624429106712341
    2. '1' → logprob: -1.487442970275879
    3. 'd' → logprob: -1.612442970275879
    4. '-' → logprob: -1.987442970275879
    5. ' ' → logprob: -4.987442970275879
    6. ' d' → logprob: -5.112442970275879
    7. 'p' → logprob: -6.737442970275879
    8. ' -' → logprob: -7.112442970275879
    9. '-d' → logprob: -8.737442970275879
    10. '
' → logprob: -9.112442970275879

Token 395: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.29048120975494385
    2. '2' → logprob: -1.6654812097549438
    3. '-' → logprob: -3.2904810905456543
    4. 'd' → logprob: -4.165481090545654
    5. ' d' → logprob: -5.040481090545654
    6. ' -' → logprob: -6.790481090545654
    7. ' ' → logprob: -7.165481090545654
    8. '_' → logprob: -7.290481090545654
    9. '0' → logprob: -8.040481567382812
    10. 'p' → logprob: -8.040481567382812

Token 396: ':' (ID: 25)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.019895968958735466
    2. 'and' → logprob: -4.394896030426025
    3. ' or' → logprob: -5.269896030426025
    4. '<|end|>' → logprob: -6.519896030426025
    5. ':' → logprob: -8.269895553588867
    6. '               ' → logprob: -8.519895553588867
    7. '           ' → logprob: -8.769895553588867
    8. ':
' → logprob: -10.269895553588867
    9. ' ' → logprob: -10.769895553588867
    10. ',' → logprob: -10.894895553588867

Token 397: ' pass' (ID: 1853)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03996680676937103
    2. ' continue' → logprob: -3.2899668216705322
    3. 'continue' → logprob: -6.789966583251953
    4. '<|end|>' → logprob: -8.539966583251953
    5. '           ' → logprob: -8.789966583251953
    6. '	continue' → logprob: -9.039966583251953
    7. ' ' → logprob: -9.914966583251953
    8. '                               ' → logprob: -10.539966583251953
    9. ' continues' → logprob: -10.664966583251953
    10. '       ' → logprob: -10.664966583251953

Token 398: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03452986106276512
    2. '<|end|>' → logprob: -4.159529685974121
    3. '
' → logprob: -4.784529685974121
    4. ' else' → logprob: -5.159529685974121
    5. ' elif' → logprob: -6.534529685974121
    6. '               ' → logprob: -7.409529685974121
    7. ' 
' → logprob: -7.784529685974121
    8. '  
' → logprob: -8.284529685974121
    9. ' ' → logprob: -8.409529685974121
    10. '\n' → logprob: -8.659529685974121

Token 399: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06112565100193024
    2. '<|end|>' → logprob: -3.9361257553100586
    3. ' else' → logprob: -4.186125755310059
    4. ' elif' → logprob: -4.311125755310059
    5. ' ' → logprob: -6.311125755310059
    6. ' 
' → logprob: -6.311125755310059
    7. '               ' → logprob: -6.561125755310059
    8. 'elif' → logprob: -6.811125755310059
    9. '
' → logprob: -7.186125755310059
    10. '       ' → logprob: -7.311125755310059

Token 400: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5985601544380188
    2. ' else' → logprob: -1.723560094833374
    3. '<|end|>' → logprob: -2.098560094833374
    4. ' elif' → logprob: -2.598560094833374
    5. ' ' → logprob: -3.473560094833374
    6. 'elif' → logprob: -3.848560094833374
    7. '            ' → logprob: -4.973560333251953
    8. 'else' (adapté à ' else') → logprob: -5.348560333251953
    9. '               ' → logprob: -5.973560333251953
    10. '		' → logprob: -6.848560333251953

Token 401: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.042483143508434296
    2. ' if' → logprob: -4.042483329772949
    3. '<|end|>' → logprob: -4.667483329772949
    4. '           ' → logprob: -5.292483329772949
    5. ':
' → logprob: -6.417483329772949
    6. '                ' → logprob: -6.417483329772949
    7. '            ' → logprob: -7.042483329772949
    8. ',' → logprob: -7.292483329772949
    9. ' ' → logprob: -7.542483329772949
    10. ':' → logprob: -7.667483329772949

Token 402: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.057267311960458755
    2. ' if' → logprob: -3.057267427444458
    3. ' ' → logprob: -6.432267189025879
    4. '                ' → logprob: -6.807267189025879
    5. '           ' → logprob: -6.932267189025879
    6. ' continue' → logprob: -7.182267189025879
    7. '<|end|>' → logprob: -7.432267189025879
    8. '            ' → logprob: -7.432267189025879
    9. 'if' → logprob: -7.557267189025879
    10. ' for' → logprob: -7.682267189025879

Token 403: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1782267838716507
    2. 'if' (adapté à ' if') → logprob: -1.9282268285751343
    3. ' x' → logprob: -5.428226947784424
    4. '                   ' → logprob: -5.553226947784424
    5. 'x' → logprob: -6.553226947784424
    6. '               ' → logprob: -6.803226947784424
    7. 'diff' → logprob: -7.053226947784424
    8. ' continue' → logprob: -7.428226947784424
    9. ' diff' → logprob: -7.553226947784424
    10. ' dx' → logprob: -7.553226947784424

Token 404: ' d' (ID: 272)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.3323304057121277
    2. ' abs' → logprob: -1.5823304653167725
    3. 'p' → logprob: -3.0823304653167725
    4. 'abs' → logprob: -3.8323304653167725
    5. ' (' → logprob: -5.082330226898193
    6. '(p' → logprob: -6.582330226898193
    7. '(abs' → logprob: -6.707330226898193
    8. ' d' → logprob: -7.582330226898193
    9. 'd' → logprob: -8.957330703735352
    10. ' ' → logprob: -9.082330703735352

Token 405: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.14274398982524872
    2. '2' → logprob: -2.0177440643310547
    3. '```' → logprob: -11.017744064331055
    4. 'p' → logprob: -11.392744064331055
    5. '   ' → logprob: -11.517744064331055
    6. '_' → logprob: -12.017744064331055
    7. 'ifference' → logprob: -12.642744064331055
    8. ' p' → logprob: -12.642744064331055
    9. 'iff' → logprob: -13.517744064331055
    10. '  ' → logprob: -13.642744064331055

Token 406: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4408176839351654
    2. '==' → logprob: -1.3158177137374878
    3. '+' → logprob: -3.8158175945281982
    4. ' <' → logprob: -3.8158175945281982
    5. ' +' → logprob: -3.8158175945281982
    6. ' !=' → logprob: -5.315817832946777
    7. ' >' → logprob: -5.315817832946777
    8. '<' → logprob: -5.565817832946777
    9. '>' → logprob: -6.190817832946777
    10. '!=' → logprob: -6.440817832946777

Token 407: ' -' (ID: 533)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5166066288948059
    2. '1' → logprob: -1.5166065692901611
    3. '0' → logprob: -1.7666065692901611
    4. '-' → logprob: -4.51660680770874
    5. ' -' → logprob: -6.39160680770874
    6. ' p' → logprob: -8.516606330871582
    7. 'p' → logprob: -9.391606330871582
    8. ' d' → logprob: -10.641606330871582
    9. 'd' → logprob: -10.704106330871582
    10. '
' → logprob: -10.954106330871582

Token 408: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002512166043743491
    2. ' ' → logprob: -6.002511978149414
    3. '2' → logprob: -11.377511978149414
    4. 'p' → logprob: -11.752511978149414
    5. ' p' → logprob: -11.752511978149414
    6. 'd' → logprob: -13.127511978149414
    7. ' d' → logprob: -13.940011978149414
    8. '           ' → logprob: -14.252511978149414
    9. '                   ' → logprob: -14.440011978149414
    10. '```' → logprob: -14.502511978149414

Token 409: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.018231887370347977
    2. 'and' → logprob: -4.0182318687438965
    3. '<|end|>' → logprob: -10.018232345581055
    4. ' ' → logprob: -11.018232345581055
    5. ' or' → logprob: -11.393232345581055
    6. ':' → logprob: -13.268232345581055
    7. ':
' → logprob: -13.268232345581055
    8. ')' → logprob: -13.268232345581055
    9. ',' → logprob: -13.393232345581055
    10. '<|end|>' → logprob: -14.143232345581055

Token 410: '                   ' (ID: 699)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.034268975257873535
    2. '                   ' → logprob: -3.784268856048584
    3. 'and' → logprob: -5.409268856048584
    4. '<|end|>' → logprob: -5.659268856048584
    5. ' if' → logprob: -7.034268856048584
    6. ' ' → logprob: -7.034268856048584
    7. ',' → logprob: -7.909268856048584
    8. ':
' → logprob: -8.159269332885742
    9. '                       ' → logprob: -9.034269332885742
    10. '               ' → logprob: -9.534269332885742

Token 411: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1640462428331375
    2. 'if' (adapté à ' if') → logprob: -1.914046287536621
    3. '                   ' → logprob: -5.664046287536621
    4. ' and' → logprob: -9.414046287536621
    5. ' ' → logprob: -9.914046287536621
    6. '                       ' → logprob: -10.289046287536621
    7. '               ' → logprob: -10.664046287536621
    8. ',' → logprob: -11.039046287536621
    9. ' for' → logprob: -11.164046287536621
    10. '```' → logprob: -11.164046287536621

Token 412: ' d' (ID: 272)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.05506022647023201
    2. ' p' → logprob: -2.9300601482391357
    3. 'd' → logprob: -9.305060386657715
    4. '(p' → logprob: -9.680060386657715
    5. ' d' → logprob: -11.805060386657715
    6. ' (' → logprob: -12.180060386657715
    7. ' ' → logprob: -13.055060386657715
    8. '   ' → logprob: -13.492560386657715
    9. '(' → logprob: -13.680060386657715
    10. 'x' → logprob: -13.805060386657715

Token 413: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00922873429954052
    2. '1' → logprob: -4.759228706359863
    3. '_' → logprob: -8.134228706359863
    4. '```' → logprob: -8.759228706359863
    5. '+' → logprob: -9.634228706359863
    6. ' ' → logprob: -11.259228706359863
    7. '>' → logprob: -11.884228706359863
    8. '`' → logprob: -11.884228706359863
    9. ',' → logprob: -11.884228706359863
    10. '[' → logprob: -12.009228706359863

Token 414: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.20167304575443268
    2. '==' → logprob: -1.7016730308532715
    3. '<|end|>' → logprob: -9.07667350769043
    4. ' ' → logprob: -10.32667350769043
    5. ' =' → logprob: -10.82667350769043
    6. '=' → logprob: -11.20167350769043
    7. ']==' → logprob: -11.57667350769043
    8. ' +' → logprob: -11.70167350769043
    9. ')' → logprob: -11.82667350769043
    10. '==
' → logprob: -11.95167350769043

Token 415: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.15346339344978333
    2. ' ' → logprob: -2.153463363647461
    3. '1' → logprob: -3.653463363647461
    4. '-' → logprob: -8.528463363647461
    5. ' -' → logprob: -10.028463363647461
    6. '(' → logprob: -11.590963363647461
    7. '   ' → logprob: -12.465963363647461
    8. '  ' → logprob: -12.528463363647461
    9. '>' → logprob: -12.903463363647461
    10. ',' → logprob: -12.903463363647461

Token 416: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12453588098287582
    2. '1' → logprob: -2.7495357990264893
    3. ' ' → logprob: -3.2495357990264893
    4. '-' → logprob: -4.249536037445068
    5. ' -' → logprob: -9.62453556060791
    6. '   ' → logprob: -13.68703556060791
    7. '(' → logprob: -13.81203556060791
    8. '  ' → logprob: -13.81203556060791
    9. '+' → logprob: -14.24953556060791
    10. '2' → logprob: -15.06203556060791

Token 417: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.00495800469070673
    2. 'and' → logprob: -5.379958152770996
    3. '                       ' → logprob: -9.129958152770996
    4. ':
' → logprob: -9.254958152770996
    5. ':' → logprob: -10.004958152770996
    6. ' or' → logprob: -10.129958152770996
    7. '<|end|>' → logprob: -10.254958152770996
    8. '                   ' → logprob: -12.379958152770996
    9. ' ' → logprob: -12.754958152770996
    10. ',' → logprob: -13.879958152770996

Token 418: '                       ' (ID: 968)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.7409635186195374
    2. '                       ' → logprob: -0.7409635186195374
    3. ':' → logprob: -3.2409634590148926
    4. ':
' → logprob: -6.240963459014893
    5. ' or' → logprob: -6.615963459014893
    6. ',' → logprob: -6.990963459014893
    7. '                        ' → logprob: -7.115963459014893
    8. '                    ' → logprob: -7.615963459014893
    9. '<|end|>' → logprob: -7.615963459014893
    10. '                   ' → logprob: -7.740963459014893

Token 419: ' t' (ID: 260)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.19605539739131927
    2. '                       ' → logprob: -2.1960554122924805
    3. 'if' → logprob: -3.3210554122924805
    4. ' and' → logprob: -3.9460554122924805
    5. '                           ' → logprob: -4.9460554122924805
    6. '                   ' → logprob: -6.0710554122924805
    7. '                               ' → logprob: -7.8210554122924805
    8. ' ' → logprob: -8.19605541229248
    9. ' for' → logprob: -8.19605541229248
    10. 'and' → logprob: -8.57105541229248

Token 420: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6426110863685608
    2. 'ime' → logprob: -1.142611026763916
    3. ' =' → logprob: -1.892611026763916
    4. 'imes' → logprob: -6.142611026763916
    5. 'if' → logprob: -7.892611026763916
    6. '=(' → logprob: -8.142611503601074
    7. '+=' → logprob: -8.267611503601074
    8. ' if' → logprob: -8.767611503601074
    9. 'im' → logprob: -8.892611503601074
    10. ' +=' → logprob: -9.517611503601074

Token 421: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.09108240157365799
    2. '(p' → logprob: -2.4660823345184326
    3. 'abs' → logprob: -6.466082572937012
    4. ' p' → logprob: -8.591082572937012
    5. '(abs' → logprob: -9.216082572937012
    6. ' (' → logprob: -9.341082572937012
    7. 'max' → logprob: -9.341082572937012
    8. 'float' → logprob: -10.716082572937012
    9. '   ' → logprob: -11.091082572937012
    10. '(' → logprob: -11.216082572937012

Token 422: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4741414487361908
    2. '2' → logprob: -0.9741414785385132
    3. '
' → logprob: -10.349141120910645
    4. '```' → logprob: -12.224141120910645
    5. '[' → logprob: -12.349141120910645
    6. 's' → logprob: -13.099141120910645
    7. 'r' → logprob: -13.161641120910645
    8. '`' → logprob: -13.349141120910645
    9. '``' → logprob: -13.474141120910645
    10. '

' → logprob: -13.661641120910645

Token 423: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.34939008951187134
    2. ' -' → logprob: -1.2243900299072266
    3. '>' → logprob: -7.224390029907227
    4. ' >' → logprob: -9.224390029907227
    5. '-p' → logprob: -10.224390029907227
    6. '[' → logprob: -11.349390029907227
    7. '-
' → logprob: -11.599390029907227
    8. ' ' → logprob: -11.599390029907227
    9. ' p' → logprob: -11.724390029907227
    10. '+' → logprob: -11.974390029907227

Token 424: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.5213274309644476e-05
    2. ' p' → logprob: -11.125015258789062
    3. '1' → logprob: -14.875015258789062
    4. '                   ' → logprob: -17.375015258789062
    5. '   ' → logprob: -18.000015258789062
    6. '<p' → logprob: -18.000015258789062
    7. '<|end|>' → logprob: -18.500015258789062
    8. '                           ' → logprob: -18.625015258789062
    9. '
' → logprob: -18.625015258789062
    10. '                       ' → logprob: -18.625015258789062

Token 425: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0001217813478433527
    2. 'p' → logprob: -10.0001220703125
    3. '1' → logprob: -10.6251220703125
    4. 's' → logprob: -10.7501220703125
    5. 't' → logprob: -11.0001220703125
    6. ' ' → logprob: -12.0001220703125
    7. '
' → logprob: -13.0001220703125
    8. '```' → logprob: -13.3751220703125
    9. 'o' → logprob: -14.2501220703125
    10. ' p' → logprob: -14.7501220703125

Token 426: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 427: '                   ' (ID: 699)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 428: ' else' (ID: 1203)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8828217387199402
    2. '<|end|>' → logprob: -1.007821798324585
    3. ')' → logprob: -2.632821798324585
    4. 'if' → logprob: -3.007821798324585
    5. '                   ' → logprob: -3.007821798324585
    6. ' ' → logprob: -4.382821559906006
    7. '               ' → logprob: -4.757821559906006
    8. '                       ' → logprob: -4.882821559906006
    9. '<|end|>' → logprob: -5.757821559906006
    10. '                           ' → logprob: -5.882821559906006

Token 429: ':
' (ID: 734)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.843201756477356
    2. ':' → logprob: -1.093201756477356
    3. '<|end|>' → logprob: -2.2182016372680664
    4. '                   ' → logprob: -2.7182016372680664
    5. ' if' → logprob: -3.8432016372680664
    6. ':
' → logprob: -4.718201637268066
    7. ',' → logprob: -4.968201637268066
    8. ' ' → logprob: -5.968201637268066
    9. '                        ' → logprob: -6.093201637268066
    10. '               ' → logprob: -6.468201637268066

Token 430: '                       ' (ID: 968)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0665922164916992
    2. '0' → logprob: -1.3165922164916992
    3. ' t' → logprob: -2.191592216491699
    4. '<|end|>' → logprob: -2.316592216491699
    5. '                       ' → logprob: -3.691592216491699
    6. ')' → logprob: -3.691592216491699
    7. 'None' → logprob: -3.941592216491699
    8. '                           ' → logprob: -4.066592216491699
    9. '                   ' → logprob: -4.441592216491699
    10. 't' → logprob: -4.566592216491699

Token 431: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.6517318487167358
    2. 't' (adapté à ' t') → logprob: -1.1517318487167358
    3. '0' → logprob: -2.4017319679260254
    4. ' ' → logprob: -3.5267319679260254
    5. ' if' → logprob: -4.276731967926025
    6. '<|end|>' → logprob: -4.901731967926025
    7. 'None' → logprob: -5.276731967926025
    8. ' None' → logprob: -5.651731967926025
    9. 'if' → logprob: -5.776731967926025
    10. ')' → logprob: -6.151731967926025

Token 432: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08911721408367157
    2. '=' → logprob: -2.4641172885894775
    3. ' ' → logprob: -9.339117050170898
    4. '<|end|>' → logprob: -10.089117050170898
    5. ')' → logprob: -10.214117050170898
    6. ',' → logprob: -12.589117050170898
    7. ':' → logprob: -13.714117050170898
    8. 's' → logprob: -13.964117050170898
    9. ' +=' → logprob: -13.964117050170898
    10. ' ' → logprob: -14.589117050170898

Token 433: ' (' (ID: 350)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.021849988028407097
    2. '(p' → logprob: -4.021850109100342
    3. ' p' → logprob: -6.396850109100342
    4. 'None' → logprob: -8.021849632263184
    5. '-' → logprob: -8.146849632263184
    6. '0' → logprob: -8.146849632263184
    7. '-(' → logprob: -8.271849632263184
    8. '(' → logprob: -8.646849632263184
    9. ' (' → logprob: -8.646849632263184
    10. '2' → logprob: -8.896849632263184

Token 434: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00307064107619226
    2. '(p' → logprob: -6.128070831298828
    3. '2' → logprob: -7.753070831298828
    4. 'abs' → logprob: -8.628070831298828
    5. ' p' → logprob: -9.378070831298828
    6. '(' → logprob: -10.003070831298828
    7. ')' → logprob: -10.628070831298828
    8. '0' → logprob: -10.878070831298828
    9. 'max' → logprob: -11.128070831298828
    10. '-(' → logprob: -11.253070831298828

Token 435: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5231359601020813
    2. '1' → logprob: -0.8981359601020813
    3. '0' → logprob: -12.148136138916016
    4. '```' → logprob: -13.835636138916016
    5. '[' → logprob: -13.898136138916016
    6. ')' → logprob: -14.210636138916016
    7. '
' → logprob: -15.085636138916016
    8. ' ' → logprob: -15.335636138916016
    9. '۲' → logprob: -15.773136138916016
    10. ',' → logprob: -15.898136138916016

Token 436: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.008630049414932728
    2. '-' → logprob: -4.758630275726318
    3. ' +' → logprob: -12.50862979888916
    4. ' ' → logprob: -12.50862979888916
    5. ')' → logprob: -12.63362979888916
    6. '-p' → logprob: -13.25862979888916
    7. '+' → logprob: -13.63362979888916
    8. ' -
' → logprob: -14.63362979888916
    9. '[' → logprob: -14.88362979888916
    10. ' ' → logprob: -15.25862979888916

Token 437: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.003186147892847657
    2. ' p' → logprob: -5.753186225891113
    3. '2' → logprob: -13.003186225891113
    4. ')' → logprob: -14.003186225891113
    5. ' ' → logprob: -14.003186225891113
    6. '
' → logprob: -14.128186225891113
    7. ' (' → logprob: -14.503186225891113
    8. '   ' → logprob: -14.503186225891113
    9. '1' → logprob: -15.128186225891113
    10. '(p' → logprob: -15.253186225891113

Token 438: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0012046386254951358
    2. 'p' → logprob: -6.751204490661621
    3. ' ' → logprob: -11.001204490661621
    4. ' p' → logprob: -11.376204490661621
    5. 'val' → logprob: -13.251204490661621
    6. '   ' → logprob: -14.001204490661621
    7. 's' → logprob: -14.376204490661621
    8. 'r' → logprob: -14.626204490661621
    9. '```' → logprob: -14.626204490661621
    10. 'j' → logprob: -15.501204490661621

Token 439: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003999565728008747
    2. ' )' → logprob: -6.003999710083008
    3. ')//' → logprob: -6.753999710083008
    4. ' +' → logprob: -8.378999710083008
    5. '+' → logprob: -9.503999710083008
    6. ')/' → logprob: -10.878999710083008
    7. ')*' → logprob: -11.753999710083008
    8. ' -' → logprob: -12.003999710083008
    9. ')
' → logprob: -12.253999710083008
    10. ')>>' → logprob: -13.128999710083008

Token 440: ' /' (ID: 820)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.32837945222854614
    2. '//' → logprob: -1.9533793926239014
    3. ')' → logprob: -2.3283793926239014
    4. '                   ' → logprob: -4.2033796310424805
    5. ' if' → logprob: -4.9533796310424805
    6. '
' → logprob: -5.7033796310424805
    7. '               ' → logprob: -5.8283796310424805
    8. '                       ' → logprob: -6.2033796310424805
    9. ' ' → logprob: -6.4533796310424805
    10. '           ' → logprob: -6.7033796310424805

Token 441: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.000516813131980598
    2. ' ' → logprob: -7.625516891479492
    3. '3' → logprob: -11.375516891479492
    4. '
' → logprob: -12.125516891479492
    5. '-' → logprob: -12.250516891479492
    6. '1' → logprob: -12.750516891479492
    7. '(' → logprob: -13.125516891479492
    8. '4' → logprob: -14.750516891479492
    9. '(-' → logprob: -14.875516891479492
    10. '  ' → logprob: -15.000516891479492

Token 442: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.670925358776003e-05
    2. '-' → logprob: -10.125066757202148
    3. '1' → logprob: -11.500066757202148
    4. ' ' → logprob: -11.750066757202148
    5. '
' → logprob: -12.125066757202148
    6. '(' → logprob: -13.625066757202148
    7. '(-' → logprob: -14.125066757202148
    8. '```' → logprob: -15.125066757202148
    9. '3' → logprob: -15.500066757202148
    10. ' -' → logprob: -16.12506675720215

Token 443: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 444: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 445: ' elif' (ID: 9497)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 446: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.006716913543641567
    2. 'd' → logprob: -5.006716728210449
    3. ' ' → logprob: -13.88171672821045
    4. '    ' → logprob: -16.006717681884766
    5. '0' → logprob: -16.569217681884766
    6. 'elif' → logprob: -16.694217681884766
    7. '(d' → logprob: -16.819217681884766
    8. '	d' → logprob: -16.881717681884766
    9. ')d' → logprob: -17.131717681884766
    10. 's' → logprob: -17.256717681884766

Token 447: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.34769970178604126
    2. 'f' → logprob: -2.2226996421813965
    3. '==' → logprob: -2.4726996421813965
    4. '-' → logprob: -2.8476996421813965
    5. ' ' → logprob: -4.3476996421813965
    6. ' ==' → logprob: -4.3476996421813965
    7. ''' → logprob: -5.3476996421813965
    8. ' -' → logprob: -5.5976996421813965
    9. '=' → logprob: -6.2226996421813965
    10. 'ef' → logprob: -6.5976996421813965

Token 448: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.033667370676994324
    2. '==' → logprob: -3.4086673259735107
    3. ' =' → logprob: -11.78366756439209
    4. ' ' → logprob: -12.03366756439209
    5. '<|end|>' → logprob: -12.78366756439209
    6. '=' → logprob: -13.53366756439209
    7. ')' → logprob: -14.03366756439209
    8. '==-' → logprob: -14.15866756439209
    9. '==
' → logprob: -14.40866756439209
    10. ' ===' → logprob: -14.90866756439209

Token 449: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.20409058034420013
    2. ' ' → logprob: -1.7040905952453613
    3. '-' → logprob: -6.579090595245361
    4. '1' → logprob: -6.704090595245361
    5. ' -' → logprob: -9.829090118408203
    6. '[' → logprob: -13.766590118408203
    7. '  ' → logprob: -14.079090118408203
    8. ' ' → logprob: -14.641590118408203
    9. '   ' → logprob: -14.829090118408203
    10. '2' → logprob: -14.954090118408203

Token 450: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005313328001648188
    2. ' ' → logprob: -5.505313396453857
    3. '-' → logprob: -7.130313396453857
    4. '1' → logprob: -7.755313396453857
    5. ' -' → logprob: -12.5053129196167
    6. '[' → logprob: -14.7553129196167
    7. '  ' → logprob: -15.6303129196167
    8. '   ' → logprob: -15.7553129196167
    9. '2' → logprob: -16.255313873291016
    10. '+' → logprob: -16.380313873291016

Token 451: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10071780532598495
    2. ':
' → logprob: -2.350717782974243
    3. '<|end|>' → logprob: -8.600717544555664
    4. '               ' → logprob: -9.475717544555664
    5. '                   ' → logprob: -10.100717544555664
    6. '   ' → logprob: -10.225717544555664
    7. ':

' → logprob: -10.475717544555664
    8. '           ' → logprob: -10.600717544555664
    9. '==' → logprob: -10.600717544555664
    10. '       ' → logprob: -10.725717544555664

Token 452: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.01427350752055645
    2. '               ' → logprob: -5.264273643493652
    3. ' if' → logprob: -5.389273643493652
    4. 'if' → logprob: -5.514273643493652
    5. '                       ' → logprob: -8.514273643493652
    6. '           ' → logprob: -10.014273643493652
    7. '   ' → logprob: -10.264273643493652
    8. '<|end|>' → logprob: -10.264273643493652
    9. '```' → logprob: -11.014273643493652
    10. '       ' → logprob: -11.014273643493652

Token 453: ' t' (ID: 260)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6129348874092102
    2. ' if' → logprob: -0.8629348874092102
    3. 't' (adapté à ' t') → logprob: -3.8629348278045654
    4. '                   ' → logprob: -4.4879350662231445
    5. '               ' → logprob: -6.4879350662231445
    6. ' t' → logprob: -6.4879350662231445
    7. '                       ' → logprob: -7.3629350662231445
    8. ' ' → logprob: -8.612935066223145
    9. '```' → logprob: -9.987935066223145
    10. '                ' → logprob: -10.487935066223145

Token 454: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10022079944610596
    2. '=' → logprob: -2.3502206802368164
    3. ' ' → logprob: -11.350220680236816
    4. ')' → logprob: -14.100220680236816
    5. ',' → logprob: -14.350220680236816
    6. '	' → logprob: -15.850220680236816
    7. 's' → logprob: -15.850220680236816
    8. '<|end|>' → logprob: -15.850220680236816
    9. ' =
' → logprob: -16.350221633911133
    10. '  ' → logprob: -16.725221633911133

Token 455: ' (' (ID: 350)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.7380854487419128
    2. '(p' → logprob: -0.7380854487419128
    3. 'abs' → logprob: -4.2380852699279785
    4. ' (' → logprob: -4.4880852699279785
    5. ' p' → logprob: -4.4880852699279785
    6. 'float' → logprob: -6.3630852699279785
    7. 'None' → logprob: -6.7380852699279785
    8. '(' → logprob: -6.7380852699279785
    9. ' abs' → logprob: -6.8630852699279785
    10. '(abs' → logprob: -6.9880852699279785

Token 456: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.01675368845462799
    2. '(p' → logprob: -4.141753673553467
    3. '2' → logprob: -7.891753673553467
    4. ' p' → logprob: -8.766754150390625
    5. '0' → logprob: -10.141754150390625
    6. '-p' → logprob: -10.141754150390625
    7. '-' → logprob: -11.016754150390625
    8. ' (' → logprob: -11.141754150390625
    9. ')' → logprob: -11.391754150390625
    10. '(' → logprob: -11.391754150390625

Token 457: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.029752805829048157
    2. '1' → logprob: -3.529752731323242
    3. 'p' → logprob: -14.029752731323242
    4. '```' → logprob: -14.279752731323242
    5. '
' → logprob: -15.154752731323242
    6. '``' → logprob: -16.029752731323242
    7. ' ' → logprob: -16.779752731323242
    8. '[' → logprob: -16.779752731323242
    9. '(p' → logprob: -17.029752731323242
    10. '[p' → logprob: -17.279752731323242

Token 458: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.029780110344290733
    2. '-' → logprob: -3.529780149459839
    3. '-p' → logprob: -11.029780387878418
    4. ')' → logprob: -12.279780387878418
    5. ' +' → logprob: -12.279780387878418
    6. '+' → logprob: -13.029780387878418
    7. ' ' → logprob: -13.529780387878418
    8. 'p' → logprob: -16.0297794342041
    9. ',' → logprob: -16.5297794342041
    10. '```' → logprob: -16.9047794342041

Token 459: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.016034837812185287
    2. ' p' → logprob: -4.1410346031188965
    3. '1' → logprob: -15.516035079956055
    4. ' ' → logprob: -16.641035079956055
    5. ')' → logprob: -17.141035079956055
    6. ')p' → logprob: -17.266035079956055
    7. '   ' → logprob: -17.391035079956055
    8. '(p' → logprob: -17.516035079956055
    9. '2' → logprob: -17.766035079956055
    10. '  ' → logprob: -17.891035079956055

Token 460: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.054500666621607e-06
    2. '0' → logprob: -12.75000286102295
    3. '[' → logprob: -16.375003814697266
    4. ' ' → logprob: -16.750003814697266
    5. '2' → logprob: -17.000003814697266
    6. '```' → logprob: -17.125003814697266
    7. ')' → logprob: -17.500003814697266
    8. 's' → logprob: -18.250003814697266
    9. '<|end|>' → logprob: -18.750003814697266
    10. '
' → logprob: -19.250003814697266

Token 461: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00026062061078846455
    2. ' )' → logprob: -8.750260353088379
    3. ')/' → logprob: -9.250260353088379
    4. ')
' → logprob: -12.875260353088379
    5. '[' → logprob: -13.125260353088379
    6. ' -' → logprob: -15.625260353088379
    7. '       ' → logprob: -15.750260353088379
    8. ')*' → logprob: -16.250261306762695
    9. '))' → logprob: -16.500261306762695
    10. '   ' → logprob: -16.625261306762695

Token 462: ' if' (ID: 538)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.4947499930858612
    2. '<|end|>' → logprob: -1.6197500228881836
    3. ' /' → logprob: -2.3697500228881836
    4. ' if' → logprob: -2.6197500228881836
    5. 'if' → logprob: -4.369750022888184
    6. '                   ' → logprob: -5.619750022888184
    7. '               ' → logprob: -5.744750022888184
    8. '<|end|>' → logprob: -5.994750022888184
    9. ')' → logprob: -6.494750022888184
    10. '                       ' → logprob: -6.994750022888184

Token 463: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.6125827431678772
    2. 'd' → logprob: -1.1125826835632324
    3. ' p' → logprob: -2.6125826835632324
    4. 'p' → logprob: -2.9875826835632324
    5. '0' → logprob: -6.612582683563232
    6. ' (' → logprob: -6.987582683563232
    7. ' t' → logprob: -7.237582683563232
    8. '(d' → logprob: -7.487582683563232
    9. ' ' → logprob: -7.612582683563232
    10. '(p' → logprob: -7.612582683563232

Token 464: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.4287358224391937
    2. '1' → logprob: -1.0537358522415161
    3. '0' → logprob: -11.053735733032227
    4. '```' → logprob: -11.553735733032227
    5. '==' → logprob: -12.303735733032227
    6. ' ' → logprob: -13.991235733032227
    7. '[' → logprob: -14.303735733032227
    8. '``' → logprob: -14.553735733032227
    9. 'elif' → logprob: -14.803735733032227
    10. '   ' → logprob: -15.053735733032227

Token 465: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4290469288825989
    2. ' ==' → logprob: -1.054046869277954
    3. '==-' → logprob: -8.679046630859375
    4. ' ' → logprob: -9.554046630859375
    5. ' !=' → logprob: -10.554046630859375
    6. '<|end|>' → logprob: -10.679046630859375
    7. '!=' → logprob: -10.929046630859375
    8. '>' → logprob: -12.054046630859375
    9. '```' → logprob: -12.054046630859375
    10. '[' → logprob: -12.554046630859375

Token 466: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0186510868370533
    2. '0' → logprob: -4.518651008605957
    3. '1' → logprob: -4.893651008605957
    4. ' -' → logprob: -9.893651008605957
    5. ' ' → logprob: -10.518651008605957
    6. '   ' → logprob: -13.768651008605957
    7. '(-' → logprob: -14.393651008605957
    8. '[' → logprob: -15.143651008605957
    9. '[-' → logprob: -15.268651008605957
    10. '  ' → logprob: -15.643651008605957

Token 467: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.13388703338569e-06
    2. ' ' → logprob: -12.500009536743164
    3. '0' → logprob: -12.875009536743164
    4. '-' → logprob: -13.875009536743164
    5. '```' → logprob: -14.312509536743164
    6. '{' → logprob: -16.000009536743164
    7. '2' → logprob: -16.062509536743164
    8. '           ' → logprob: -16.125009536743164
    9. '   ' → logprob: -16.437509536743164
    10. '                   ' → logprob: -16.562509536743164

Token 468: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.012524607591331005
    2. 'else' → logprob: -4.387524604797363
    3. '<|end|>' → logprob: -11.637524604797363
    4. '	else' → logprob: -13.012524604797363
    5. ' ' → logprob: -13.137524604797363
    6. '        ' → logprob: -14.387524604797363
    7. ' ' → logprob: -15.262524604797363
    8. ' elif' → logprob: -15.637524604797363
    9. '       ' → logprob: -15.887524604797363
    10. '               ' → logprob: -16.26252555847168

Token 469: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6397091150283813
    2. '(p' → logprob: -0.7647091150283813
    3. '(' → logprob: -5.014708995819092
    4. 'None' → logprob: -8.63970947265625
    5. '(None' → logprob: -9.63970947265625
    6. ' None' → logprob: -9.76470947265625
    7. '0' → logprob: -10.38970947265625
    8. ' ' → logprob: -10.38970947265625
    9. '(t' → logprob: -11.01470947265625
    10. '((' → logprob: -11.88970947265625

Token 470: 'p' (ID: 79)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.07123201340436935
    2. ' (' → logprob: -2.6962320804595947
    3. '(' → logprob: -7.071231842041016
    4. 'None' → logprob: -8.946231842041016
    5. '0' → logprob: -9.696231842041016
    6. 'p' → logprob: -9.821231842041016
    7. '(None' → logprob: -10.071231842041016
    8. '
' → logprob: -10.696231842041016
    9. ' ' → logprob: -11.071231842041016
    10. 't' → logprob: -11.321231842041016

Token 471: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.5577775128767826e-06
    2. '1' → logprob: -12.375005722045898
    3. '
' → logprob: -14.500005722045898
    4. '```' → logprob: -15.500005722045898
    5. '_' → logprob: -16.3750057220459
    6. '

' → logprob: -16.5000057220459
    7. '₂' → logprob: -16.6250057220459
    8. 'j' → logprob: -16.6250057220459
    9. 's' → logprob: -16.8125057220459
    10. 'p' → logprob: -17.0000057220459

Token 472: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.026600301265716553
    2. '-' → logprob: -3.6516003608703613
    3. ' +' → logprob: -8.776599884033203
    4. '+' → logprob: -9.526599884033203
    5. ')' → logprob: -9.901599884033203
    6. ' ' → logprob: -11.151599884033203
    7. '<|end|>' → logprob: -12.276599884033203
    8. ',' → logprob: -14.526599884033203
    9. '[' → logprob: -14.651599884033203
    10. ' ' → logprob: -14.651599884033203

Token 473: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0024756586644798517
    2. ' p' → logprob: -6.002475738525391
    3. ' ' → logprob: -17.87747573852539
    4. '
' → logprob: -19.50247573852539
    5. '   ' → logprob: -19.62747573852539
    6. '	p' → logprob: -19.87747573852539
    7. ')p' → logprob: -20.37747573852539
    8. '  ' → logprob: -20.37747573852539
    9. '<p' → logprob: -20.75247573852539
    10. ')' → logprob: -21.12747573852539

Token 474: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.282920129597187e-05
    2. 'p' → logprob: -12.000012397766113
    3. 's' → logprob: -12.125012397766113
    4. 'j' → logprob: -14.750012397766113
    5. '```' → logprob: -15.875012397766113
    6. '۲' → logprob: -16.00001335144043
    7. ' ' → logprob: -16.25001335144043
    8. 'd' → logprob: -16.37501335144043
    9. '２' → logprob: -16.75001335144043
    10. '₂' → logprob: -17.00001335144043

Token 475: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000558512459974736
    2. ' )' → logprob: -7.750558376312256
    3. '<|end|>' → logprob: -9.875558853149414
    4. ')
' → logprob: -10.000558853149414
    5. '+' → logprob: -11.750558853149414
    6. ' if' → logprob: -11.750558853149414
    7. ' +' → logprob: -12.000558853149414
    8. 'if' → logprob: -13.250558853149414
    9. ')#' → logprob: -13.750558853149414
    10. '                   ' → logprob: -13.875558853149414

Token 476: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 477: ' else' (ID: 1203)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2869904935359955
    2. ' else' → logprob: -2.0369904041290283
    3. '<|end|>' → logprob: -2.2869904041290283
    4. ' elif' → logprob: -5.286990642547607
    5. '                   ' → logprob: -5.536990642547607
    6. 'else' (adapté à ' else') → logprob: -5.786990642547607
    7. '                ' → logprob: -6.661990642547607
    8. ' ' → logprob: -6.911990642547607
    9. 'elif' → logprob: -7.161990642547607
    10. '           ' → logprob: -7.411990642547607

Token 478: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5385224223136902
    2. ':' → logprob: -1.038522481918335
    3. ':
' → logprob: -2.913522481918335
    4. '{' → logprob: -5.913522243499756
    5. ' :' → logprob: -6.663522243499756
    6. '               ' → logprob: -6.788522243499756
    7. '                       ' → logprob: -6.913522243499756
    8. '```' → logprob: -7.788522243499756
    9. '<|end|>' → logprob: -8.163522720336914
    10. '{
' → logprob: -8.413522720336914

Token 479: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.43292397260665894
    2. ' t' → logprob: -1.8079240322113037
    3. 't' → logprob: -2.5579240322113037
    4. ' if' → logprob: -3.0579240322113037
    5. '                       ' → logprob: -3.3079240322113037
    6. 'if' → logprob: -4.807923793792725
    7. '               ' → logprob: -5.057923793792725
    8. ' ' → logprob: -5.557923793792725
    9. '```' → logprob: -6.057923793792725
    10. '                ' → logprob: -7.057923793792725

Token 480: ' if' (ID: 538)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.15675851702690125
    2. 'if' (adapté à ' if') → logprob: -2.5317585468292236
    3. ' t' → logprob: -3.0317585468292236
    4. ' if' → logprob: -4.4067583084106445
    5. '(t' → logprob: -6.1567583084106445
    6. ' (' → logprob: -6.2817583084106445
    7. '                   ' → logprob: -7.4067583084106445
    8. '(' → logprob: -8.531758308410645
    9. '                       ' → logprob: -8.656758308410645
    10. 'continue' → logprob: -10.281758308410645

Token 481: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.3132879436016083
    2. 'd' → logprob: -1.3132879734039307
    3. ' p' → logprob: -12.063287734985352
    4. 'p' → logprob: -12.188287734985352
    5. '(d' → logprob: -12.688287734985352
    6. '                   ' → logprob: -12.813287734985352
    7. '   ' → logprob: -12.938287734985352
    8. ' ' → logprob: -13.188287734985352
    9. '    ' → logprob: -14.313287734985352
    10. '0' → logprob: -14.375787734985352

Token 482: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.1602320373058319
    2. '1' → logprob: -1.9102320671081543
    3. ' ' → logprob: -12.910231590270996
    4. '```' → logprob: -13.035231590270996
    5. '_' → logprob: -13.910231590270996
    6. '   ' → logprob: -14.410231590270996
    7. '``' → logprob: -15.222731590270996
    8. '==' → logprob: -15.347731590270996
    9. '
' → logprob: -15.535231590270996
    10. '  ' → logprob: -15.722731590270996

Token 483: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.22591593861579895
    2. '==' → logprob: -1.6009159088134766
    3. '==-' → logprob: -7.850915908813477
    4. ' ' → logprob: -9.600915908813477
    5. '<|end|>' → logprob: -10.600915908813477
    6. ' -' → logprob: -12.850915908813477
    7. '==
' → logprob: -12.975915908813477
    8. '  ' → logprob: -13.225915908813477
    9. ')' → logprob: -13.350915908813477
    10. ' ' → logprob: -13.475915908813477

Token 484: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.12982363998889923
    2. '0' → logprob: -2.379823684692383
    3. ' ' → logprob: -3.754823684692383
    4. ' -' → logprob: -5.254823684692383
    5. '1' → logprob: -7.504823684692383
    6. '   ' → logprob: -13.379823684692383
    7. '  ' → logprob: -13.942323684692383
    8. '2' → logprob: -14.004823684692383
    9. '```' → logprob: -14.817323684692383
    10. '`' → logprob: -15.567323684692383

Token 485: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7835754988482222e-05
    2. ' ' → logprob: -11.250018119812012
    3. '```' → logprob: -13.187518119812012
    4. '0' → logprob: -14.687518119812012
    5. '<|end|>' → logprob: -14.937518119812012
    6. '                   ' → logprob: -15.500018119812012
    7. '-' → logprob: -15.562518119812012
    8. '   ' → logprob: -15.875018119812012
    9. '                       ' → logprob: -16.062517166137695
    10. '           ' → logprob: -16.125017166137695

Token 486: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5754332542419434
    2. ':' → logprob: -0.9504332542419434
    3. '                       ' → logprob: -3.2004332542419434
    4. '                   ' → logprob: -5.325433254241943
    5. ' and' → logprob: -6.575433254241943
    6. '<|end|>' → logprob: -6.575433254241943
    7. ':

' → logprob: -7.200433254241943
    8. ' :
' → logprob: -7.950433254241943
    9. ' :' → logprob: -8.200433731079102
    10. '):
' → logprob: -8.325433731079102

Token 487: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.40644773840904236
    2. 't' → logprob: -1.5314477682113647
    3. ' t' → logprob: -2.156447649002075
    4. '                   ' → logprob: -7.156447887420654
    5. '```' → logprob: -7.781447887420654
    6. ' if' → logprob: -8.781447410583496
    7. '                        ' → logprob: -9.031447410583496
    8. '                           ' → logprob: -9.156447410583496
    9. 'if' → logprob: -9.531447410583496
    10. '               ' → logprob: -9.781447410583496

Token 488: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' (adapté à ' t') → logprob: -0.08954664319753647
    2. ' t' → logprob: -2.4645466804504395
    3. '                       ' → logprob: -8.714546203613281
    4. '                           ' → logprob: -8.964546203613281
    5. ' (' → logprob: -9.089546203613281
    6. '(t' → logprob: -9.214546203613281
    7. '```' → logprob: -10.964546203613281
    8. 'if' → logprob: -11.214546203613281
    9. '(' → logprob: -11.214546203613281
    10. '                               ' → logprob: -11.464546203613281

Token 489: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17974790930747986
    2. '=' → logprob: -1.8047479391098022
    3. '<|end|>' → logprob: -13.804747581481934
    4. ' ' → logprob: -14.054747581481934
    5. 's' → logprob: -14.429747581481934
    6. ')' → logprob: -15.429747581481934
    7. ',' → logprob: -15.554747581481934
    8. '=(' → logprob: -15.804747581481934
    9. ' =(' → logprob: -16.05474853515625
    10. '```' → logprob: -16.55474853515625

Token 490: ' (' (ID: 350)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.47415152192115784
    2. ' (' → logprob: -0.9741514921188354
    3. '(' → logprob: -9.974151611328125
    4. ' ' → logprob: -11.349151611328125
    5. '2' → logprob: -11.974151611328125
    6. '
' → logprob: -13.099151611328125
    7. '(P' → logprob: -13.224151611328125
    8. '`' → logprob: -14.224151611328125
    9. '0' → logprob: -14.599151611328125
    10. '(abs' → logprob: -14.724151611328125

Token 491: 'p' (ID: 79)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.0016286444151774049
    2. 'p' → logprob: -6.751628875732422
    3. ' (' → logprob: -8.001628875732422
    4. '(' → logprob: -9.626628875732422
    5. '2' → logprob: -10.376628875732422
    6. ' p' → logprob: -12.376628875732422
    7. '0' → logprob: -12.501628875732422
    8. ' ' → logprob: -12.751628875732422
    9. '-(' → logprob: -12.751628875732422
    10. '   ' → logprob: -13.001628875732422

Token 492: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.07889319956302643
    2. '1' → logprob: -2.5788931846618652
    3. '```' → logprob: -13.953893661499023
    4. '[' → logprob: -14.391393661499023
    5. '
' → logprob: -15.016393661499023
    6. 's' → logprob: -15.578893661499023
    7. '0' → logprob: -15.891393661499023
    8. '{' → logprob: -15.953893661499023
    9. '``' → logprob: -15.953893661499023
    10. '`' → logprob: -16.078893661499023

Token 493: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.038075923919677734
    2. '-' → logprob: -3.2880759239196777
    3. ')' → logprob: -10.913076400756836
    4. '-p' → logprob: -11.913076400756836
    5. ' ' → logprob: -12.038076400756836
    6. '<|end|>' → logprob: -13.413076400756836
    7. 'p' → logprob: -14.413076400756836
    8. ' p' → logprob: -15.538076400756836
    9. '[' → logprob: -15.663076400756836
    10. ',' → logprob: -15.913076400756836

Token 494: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.004078997299075127
    2. ' p' → logprob: -5.5040788650512695
    3. ' (' → logprob: -15.62907886505127
    4. ' ' → logprob: -15.62907886505127
    5. '1' → logprob: -16.879079818725586
    6. '(p' → logprob: -16.879079818725586
    7. '2' → logprob: -17.254079818725586
    8. '(' → logprob: -17.254079818725586
    9. '   ' → logprob: -18.004079818725586
    10. ')' → logprob: -18.004079818725586

Token 495: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.125
    3. 's' → logprob: -16.0
    4. 'x' → logprob: -17.25
    5. '```' → logprob: -17.75
    6. ')' → logprob: -18.25
    7. '2' → logprob: -19.0
    8. '
' → logprob: -19.0
    9. 'p' → logprob: -19.0
    10. '_' → logprob: -19.5

Token 496: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00012047011114191264
    2. ')/' → logprob: -9.625120162963867
    3. ' )' → logprob: -9.875120162963867
    4. ')
' → logprob: -13.875120162963867
    5. '                   ' → logprob: -14.250120162963867
    6. '                       ' → logprob: -15.875120162963867
    7. '```' → logprob: -16.125120162963867
    8. '       ' → logprob: -16.125120162963867
    9. '               ' → logprob: -16.500120162963867
    10. ' -' → logprob: -16.625120162963867

Token 497: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.1270177662372589
    2. '/' → logprob: -2.1270177364349365
    3. ')' → logprob: -9.502017974853516
    4. '<|end|>' → logprob: -12.377017974853516
    5. '```' → logprob: -13.252017974853516
    6. ')/' → logprob: -13.377017974853516
    7. '                   ' → logprob: -13.627017974853516
    8. ' ' → logprob: -14.502017974853516
    9. '<|end|>' → logprob: -14.627017974853516
    10. '       ' → logprob: -14.752017974853516

Token 498: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.000488110730657354
    2. ' ' → logprob: -7.62548828125
    3. '```' → logprob: -16.75048828125
    4. '1' → logprob: -16.87548828125
    5. '   ' → logprob: -17.62548828125
    6. '  ' → logprob: -18.00048828125
    7. '۲' → logprob: -18.87548828125
    8. '`' → logprob: -19.00048828125
    9. '
' → logprob: -19.00048828125
    10. ' ' → logprob: -19.00048828125

Token 499: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.623244553338736e-05
    2. ' ' → logprob: -9.625065803527832
    3. '```' → logprob: -16.62506675720215
    4. '1' → logprob: -17.12506675720215
    5. '   ' → logprob: -17.68756675720215
    6. '  ' → logprob: -17.93756675720215
    7. '۲' → logprob: -18.12506675720215
    8. '
' → logprob: -18.18756675720215
    9. '２' → logprob: -18.25006675720215
    10. ' ' → logprob: -18.50006675720215

Token 500: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 501: '                   ' (ID: 699)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 502: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.5076062083244324
    2. ' else' → logprob: -1.3826062679290771
    3. '               ' → logprob: -2.882606267929077
    4. '<|end|>' → logprob: -3.007606267929077
    5. '                   ' → logprob: -3.632606267929077
    6. 'elif' → logprob: -4.882606029510498
    7. ')' → logprob: -5.507606029510498
    8. '                       ' → logprob: -7.007606029510498
    9. '                               ' → logprob: -7.257606029510498
    10. ' elif' → logprob: -7.257606029510498

Token 503: ':
' (ID: 734)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.010189850814640522
    2. ':' → logprob: -5.760190010070801
    3. '                        ' → logprob: -6.885190010070801
    4. '                   ' → logprob: -7.010190010070801
    5. ' ' → logprob: -7.010190010070801
    6. '                               ' → logprob: -7.135190010070801
    7. '                           ' → logprob: -7.385190010070801
    8. '<|end|>' → logprob: -7.760190010070801
    9. ' t' → logprob: -8.0101900100708
    10. ':
' → logprob: -8.1351900100708

Token 504: '                       ' (ID: 968)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -1.183162808418274
    2. ' t' → logprob: -1.433162808418274
    3. '                       ' → logprob: -1.683162808418274
    4. 'continue' → logprob: -2.5581626892089844
    5. ' continue' → logprob: -3.0581626892089844
    6. '                           ' → logprob: -3.3081626892089844
    7. '                               ' → logprob: -4.058162689208984
    8. ' if' → logprob: -4.183162689208984
    9. ' (' → logprob: -4.183162689208984
    10. '0' → logprob: -4.308162689208984

Token 505: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' (adapté à ' t') → logprob: -0.08465799689292908
    2. ' t' → logprob: -2.584657907485962
    3. '(p' → logprob: -6.209658145904541
    4. ' (' → logprob: -6.709658145904541
    5. '(' → logprob: -7.084658145904541
    6. '(t' → logprob: -7.334658145904541
    7. 'continue' → logprob: -7.959658145904541
    8. ' continue' → logprob: -8.584657669067383
    9. 'p' → logprob: -8.709657669067383
    10. '0' → logprob: -9.584657669067383

Token 506: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022889316082
    2. ' =' → logprob: -1.9102288484573364
    3. '+=' → logprob: -13.535228729248047
    4. '<|end|>' → logprob: -13.910228729248047
    5. ')' → logprob: -14.160228729248047
    6. ' +=' → logprob: -14.535228729248047
    7. 's' → logprob: -14.910228729248047
    8. '=
' → logprob: -15.535228729248047
    9. ' ' → logprob: -15.910228729248047
    10. '==' → logprob: -16.160228729248047

Token 507: ' p' (ID: 275)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.40916433930397034
    2. ' (' → logprob: -1.284164309501648
    3. 'p' → logprob: -3.0341644287109375
    4. ' p' → logprob: -5.0341644287109375
    5. '(' → logprob: -6.6591644287109375
    6. '0' → logprob: -7.0341644287109375
    7. 'float' → logprob: -7.4091644287109375
    8. 'None' → logprob: -7.4091644287109375
    9. ' float' → logprob: -8.284164428710938
    10. 'abs' → logprob: -8.409164428710938

Token 508: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08895745873451233
    2. '2' → logprob: -2.4639575481414795
    3. '(' → logprob: -11.213957786560059
    4. '```' → logprob: -12.838957786560059
    5. '(p' → logprob: -14.338957786560059
    6. '
' → logprob: -15.338957786560059
    7. '[' → logprob: -15.588957786560059
    8. '`' → logprob: -15.588957786560059
    9. '``' → logprob: -15.588957786560059
    10. 'i' → logprob: -16.338956832885742

Token 509: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.001183799933642149
    2. '-' → logprob: -6.751183986663818
    3. '<|end|>' → logprob: -12.25118350982666
    4. ' ' → logprob: -13.25118350982666
    5. '`' → logprob: -13.50118350982666
    6. '[' → logprob: -13.50118350982666
    7. ' +' → logprob: -13.87618350982666
    8. ')' → logprob: -14.12618350982666
    9. ' ' → logprob: -14.62618350982666
    10. '2' → logprob: -14.87618350982666

Token 510: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0002613358374219388
    2. ' p' → logprob: -8.250261306762695
    3. '1' → logprob: -18.625261306762695
    4. ' ' → logprob: -20.000261306762695
    5. '<|end|>' → logprob: -20.750261306762695
    6. '	p' → logprob: -21.625261306762695
    7. '<p' → logprob: -21.750261306762695
    8. '           ' → logprob: -22.375261306762695
    9. '   ' → logprob: -22.375261306762695
    10. '```' → logprob: -23.000261306762695

Token 511: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. 's' → logprob: -12.87500286102295
    3. '<|end|>' → logprob: -15.37500286102295
    4. 'x' → logprob: -17.000003814697266
    5. ' ' → logprob: -17.125003814697266
    6. 'token' → logprob: -17.250003814697266
    7. '2' → logprob: -18.000003814697266
    8. '_' → logprob: -18.125003814697266
    9. 'q' → logprob: -18.125003814697266
    10. 'p' → logprob: -18.250003814697266

Token 512: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 513: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 514: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8274721503257751
    2. '           ' → logprob: -1.45247220993042
    3. 'if' (adapté à ' if') → logprob: -1.45247220993042
    4. '               ' → logprob: -2.45247220993042
    5. '                   ' → logprob: -5.57747220993042
    6. '<|end|>' → logprob: -5.57747220993042
    7. '                       ' → logprob: -7.82747220993042
    8. '                           ' → logprob: -8.952471733093262
    9. ' ' → logprob: -9.202471733093262
    10. '
' → logprob: -9.702471733093262

Token 515: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.43746310472488403
    2. ' t' → logprob: -1.0624630451202393
    3. '0' → logprob: -4.812463283538818
    4. ' ' → logprob: -7.687463283538818
    5. ' isinstance' → logprob: -9.31246280670166
    6. 'type' → logprob: -11.56246280670166
    7. '(t' → logprob: -11.93746280670166
    8. '   ' → logprob: -11.93746280670166
    9. '                   ' → logprob: -12.43746280670166
    10. '               ' → logprob: -12.81246280670166

Token 516: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.5849867463111877
    2. '>' → logprob: -0.9599867463111877
    3. ' >=' → logprob: -3.584986686706543
    4. '>=' → logprob: -3.834986686706543
    5. '<|end|>' → logprob: -5.334986686706543
    6. ' ==' → logprob: -6.084986686706543
    7. ' <=' → logprob: -6.709986686706543
    8. '==' → logprob: -6.709986686706543
    9. '<=' → logprob: -7.709986686706543
    10. ' is' → logprob: -9.209986686706543

Token 517: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.126930832862854
    2. ' ' → logprob: -2.1269307136535645
    3. '   ' → logprob: -14.001931190490723
    4. '1' → logprob: -14.876931190490723
    5. '  ' → logprob: -14.876931190490723
    6. '=' → logprob: -15.126931190490723
    7. '
' → logprob: -15.689431190490723
    8. '```' → logprob: -16.189430236816406
    9. '    ' → logprob: -16.251930236816406
    10. '>' → logprob: -17.001930236816406

Token 518: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006314247148111463
    2. ' ' → logprob: -7.375631332397461
    3. '-' → logprob: -13.500631332397461
    4. '   ' → logprob: -14.250631332397461
    5. '
' → logprob: -14.250631332397461
    6. '1' → logprob: -14.375631332397461
    7. '```' → logprob: -15.313131332397461
    8. '  ' → logprob: -15.688131332397461
    9. '`' → logprob: -15.938131332397461
    10. '=' → logprob: -16.06313133239746

Token 519: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.021994365379214287
    2. ':' → logprob: -4.521994590759277
    3. 'and' → logprob: -5.146994590759277
    4. ':
' → logprob: -6.146994590759277
    5. '<|end|>' → logprob: -6.146994590759277
    6. '                       ' → logprob: -8.271994590759277
    7. '               ' → logprob: -9.021994590759277
    8. '                   ' → logprob: -9.146994590759277
    9. '<|end|>' → logprob: -9.646994590759277
    10. ' :' → logprob: -10.271994590759277

Token 520: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.006116017233580351
    2. '                       ' → logprob: -5.256115913391113
    3. '               ' → logprob: -8.006115913391113
    4. '                  ' → logprob: -8.881115913391113
    5. '                           ' → logprob: -9.506115913391113
    6. '           ' → logprob: -9.631115913391113
    7. ',' → logprob: -10.256115913391113
    8. '<|end|>' → logprob: -10.256115913391113
    9. ' z' → logprob: -10.506115913391113
    10. '                    ' → logprob: -10.631115913391113

Token 521: ' z' (ID: 579)
  Prédit: ' z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' z' → logprob: -0.2814274728298187
    2. 'z' (adapté à ' z') → logprob: -1.4064275026321411
    3. '                   ' → logprob: -8.906427383422852
    4. '```' → logprob: -9.531427383422852
    5. '
' → logprob: -10.531427383422852
    6. '                       ' → logprob: -11.281427383422852
    7. '	z' → logprob: -12.156427383422852
    8. ' t' → logprob: -12.406427383422852
    9. 't' → logprob: -12.406427383422852
    10. '``' → logprob: -12.781427383422852

Token 522: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.002618466503918171
    2. '.' → logprob: -6.002618312835693
    3. ' .' → logprob: -8.877618789672852
    4. 'add' → logprob: -13.127618789672852
    5. '.update' → logprob: -14.127618789672852
    6. ' |=' → logprob: -14.877618789672852
    7. ' add' → logprob: -17.12761878967285
    8. '{' → logprob: -17.12761878967285
    9. '.Add' → logprob: -17.12761878967285
    10. '.setdefault' → logprob: -17.12761878967285

Token 523: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.0002523992152418941
    2. '(int' → logprob: -8.625252723693848
    3. '(' → logprob: -10.000252723693848
    4. '(round' → logprob: -11.125252723693848
    5. 't' → logprob: -11.375252723693848
    6. 'round' → logprob: -14.750252723693848
    7. 'int' → logprob: -15.250252723693848
    8. '(
' → logprob: -15.250252723693848
    9. '(float' → logprob: -15.750252723693848
    10. ' (' → logprob: -16.12525177001953

Token 524: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003815756645053625
    2. ')
' → logprob: -8.125381469726562
    3. ' )' → logprob: -9.625381469726562
    4. '<|end|>' → logprob: -11.625381469726562
    5. '                   ' → logprob: -12.750381469726562
    6. ')}' → logprob: -13.750381469726562
    7. '               ' → logprob: -14.000381469726562
    8. ')return' → logprob: -14.000381469726562
    9. '())' → logprob: -14.750381469726562
    10. ')}}' → logprob: -14.750381469726562

Token 525: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 526: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46250805258750916
    2. 'return' (adapté à ' return') → logprob: -2.462507963180542
    3. ' return' → logprob: -2.587507963180542
    4. '<|end|>' → logprob: -2.587507963180542
    5. '	return' → logprob: -3.087507963180542
    6. '       ' → logprob: -3.212507963180542
    7. ')' → logprob: -3.712507963180542
    8. ' ' → logprob: -4.337508201599121
    9. '           ' → logprob: -6.087508201599121
    10. ':return' → logprob: -6.712508201599121

Token 527: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.0004309076175559312
    2. ' z' → logprob: -7.750431060791016
    3. 't' → logprob: -16.000431060791016
    4. 'sorted' → logprob: -16.125431060791016
    5. ' ' → logprob: -17.875431060791016
    6. ' ' → logprob: -18.125431060791016
    7. '	z' → logprob: -19.125431060791016
    8. '```' → logprob: -19.500431060791016
    9. '{' → logprob: -19.625431060791016
    10. 'list' → logprob: -19.750431060791016

Token 528: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2160501480102539
    2. 'def' → logprob: -2.716050148010254
    3. 't' → logprob: -3.091050148010254
    4. '<|end|>' → logprob: -3.466050148010254
    5. 'times' → logprob: -4.466050148010254
    6. 'z' → logprob: -5.466050148010254
    7. 'lst' → logprob: -5.466050148010254
    8. 'time' → logprob: -5.716050148010254
    9. 's' → logprob: -5.841050148010254
    10. ')' → logprob: -5.841050148010254

Token 529: 'CX' (ID: 98640)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -1.0129194259643555
    2. 'print' → logprob: -2.3879194259643555
    3. 'ans' → logprob: -2.5129194259643555
    4. 'z' → logprob: -2.6379194259643555
    5. 'res' → logprob: -2.7629194259643555
    6. 'times' → logprob: -2.7629194259643555
    7. 's' → logprob: -3.1379194259643555
    8. 'ts' → logprob: -3.1379194259643555
    9. 'X' → logprob: -3.5129194259643555
    10. 'T' → logprob: -4.0129194259643555

Token 530: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4882425367832184
    2. ' =' → logprob: -0.988242506980896
    3. ',' → logprob: -4.3632426261901855
    4. '.' → logprob: -7.9882426261901855
    5. '[' → logprob: -8.363242149353027
    6. '[:]' → logprob: -8.363242149353027
    7. '_' → logprob: -9.238242149353027
    8. ')' → logprob: -9.238242149353027
    9. 's' → logprob: -9.613242149353027
    10. '=[]' → logprob: -10.113242149353027

Token 531: ' ts' (ID: 6601)
  Prédit: 'ts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ts' → logprob: -0.007624730467796326
    2. ' ts' → logprob: -4.882624626159668
    3. 'set' → logprob: -12.132624626159668
    4. '(ts' → logprob: -12.382624626159668
    5. 'lst' → logprob: -12.632624626159668
    6. '{' → logprob: -12.632624626159668
    7. '	ts' → logprob: -14.757624626159668
    8. ' ' → logprob: -15.257624626159668
    9. ' set' → logprob: -15.382624626159668
    10. 'tsx' → logprob: -15.382624626159668

Token 532: '(lst' (ID: 95688)
  Prédit: '(lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lst' → logprob: -0.0009233691962435842
    2. '(X' → logprob: -7.000923156738281
    3. '(ls' → logprob: -11.875923156738281
    4. '(l' → logprob: -13.500923156738281
    5. '(L' → logprob: -13.750923156738281
    6. '(' → logprob: -14.250923156738281
    7. 'lst' → logprob: -14.375923156738281
    8. '((' → logprob: -14.750923156738281
    9. '(
' → logprob: -15.375923156738281
    10. '(list' → logprob: -15.500923156738281

Token 533: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -15.0
    3. ')' → logprob: -17.375
    4. '```' → logprob: -18.75
    5. '(' → logprob: -19.5
    6. 'X' → logprob: -19.625
    7. '[
' → logprob: -19.875
    8. '<|end|>' → logprob: -20.25
    9. '１' → logprob: -20.75
    10. '2' → logprob: -20.75

Token 534: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.5577775128767826e-06
    2. ')
' → logprob: -12.250005722045898
    3. ' )' → logprob: -15.000005722045898
    4. '+' → logprob: -16.2500057220459
    5. ')

' → logprob: -16.5000057220459
    6. ')#' → logprob: -16.5000057220459
    7. '[' → logprob: -17.2500057220459
    8. '))' → logprob: -17.8750057220459
    9. ')`' → logprob: -17.8750057220459
    10. '),' → logprob: -18.3750057220459

Token 535: 'CY' (ID: 65182)
  Prédit: 'CY'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CY' → logprob: -7.896309739408025e-07
    2. ' CY' → logprob: -14.375000953674316
    3. '```' → logprob: -16.75
    4. 'CZ' → logprob: -17.0
    5. 'cy' → logprob: -18.375
    6. '#' → logprob: -18.625
    7. 'CX' → logprob: -18.75
    8. 'CU' → logprob: -18.875
    9. 'CS' → logprob: -19.5
    10. 'if' → logprob: -20.0

Token 536: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47407761216163635
    2. ' =' → logprob: -0.974077582359314
    3. '=
' → logprob: -15.724077224731445
    4. '＝' → logprob: -16.849077224731445
    5. '=}' → logprob: -16.849077224731445
    6. ' =
' → logprob: -16.974077224731445
    7. ')' → logprob: -17.099077224731445
    8. '=

' → logprob: -17.099077224731445
    9. ' =)' → logprob: -17.349077224731445
    10. ' ' → logprob: -17.349077224731445

Token 537: ' ts' (ID: 6601)
  Prédit: 'ts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ts' → logprob: -0.0024970639497041702
    2. ' ts' → logprob: -6.00249719619751
    3. '(ts' → logprob: -10.752496719360352
    4. '	ts' → logprob: -17.62749671936035
    5. '(' → logprob: -18.87749671936035
    6. '_ts' → logprob: -19.25249671936035
    7. '   ' → logprob: -20.62749671936035
    8. '.ts' → logprob: -20.62749671936035
    9. ' ' → logprob: -20.75249671936035
    10. 'tsx' → logprob: -21.00249671936035

Token 538: '(lst' (ID: 95688)
  Prédit: '(lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lst' → logprob: -4.320199877838604e-07
    2. '(ls' → logprob: -15.5
    3. '(' → logprob: -16.0
    4. '(lista' → logprob: -16.875
    5. '(list' → logprob: -19.125
    6. ' (' → logprob: -19.375
    7. '(
' → logprob: -19.75
    8. '(lhs' → logprob: -19.875
    9. '(lbl' → logprob: -20.0
    10. '(lua' → logprob: -20.25

Token 539: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.512236498361744e-07
    2. '(' → logprob: -15.125000953674316
    3. '[' → logprob: -16.5
    4. 'lst' → logprob: -17.5
    5. '```' → logprob: -17.875
    6. '۲' → logprob: -18.0
    7. 'st' → logprob: -18.375
    8. ')' → logprob: -18.875
    9. '(lst' → logprob: -19.0
    10. '２' → logprob: -19.25

Token 540: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.8802491215174086e-05
    2. ')
' → logprob: -10.875028610229492
    3. '())' → logprob: -12.125028610229492
    4. ')#' → logprob: -13.125028610229492
    5. '()' → logprob: -13.750028610229492
    6. ' )' → logprob: -14.125028610229492
    7. ')set' → logprob: -15.375028610229492
    8. ')

' → logprob: -16.125028610229492
    9. '#' → logprob: -17.125028610229492
    10. '),' → logprob: -17.375028610229492

Token 541: 'cand' (ID: 199358)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.3789669871330261
    2. 'if' → logprob: -1.503967046737671
    3. 'res' → logprob: -3.128967046737671
    4. 'answer' → logprob: -3.878967046737671
    5. 'print' → logprob: -4.128966808319092
    6. 'result' → logprob: -5.003966808319092
    7. 't' → logprob: -6.378966808319092
    8. 'C' → logprob: -7.128966808319092
    9. 'r' → logprob: -7.503966808319092
    10. 'ret' → logprob: -7.878966808319092

Token 542: '_t' (ID: 838)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5076176524162292
    2. '=' → logprob: -1.257617712020874
    3. 'id' → logprob: -2.257617712020874
    4. 's' → logprob: -4.882617473602295
    5. 'icates' → logprob: -7.632617473602295
    6. 'inate' → logprob: -8.257617950439453
    7. 'dates' → logprob: -8.382617950439453
    8. '   ' → logprob: -9.632617950439453
    9. 'itates' → logprob: -9.757617950439453
    10. '_dates' → logprob: -9.882617950439453

Token 543: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16398027539253235
    2. ' =' → logprob: -2.41398024559021
    3. 's' → logprob: -2.78898024559021
    4. '.' → logprob: -9.163980484008789
    5. '.=' → logprob: -9.913980484008789
    6. ',' → logprob: -10.913980484008789
    7. '[' → logprob: -11.038980484008789
    8. '+=' → logprob: -11.163980484008789
    9. '(' → logprob: -11.663980484008789
    10. '[:]' → logprob: -11.788980484008789

Token 544: ' [' (ID: 723)
  Prédit: 'CX'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'CX' → logprob: -0.016385767608880997
    2. 'sorted' → logprob: -4.266385555267334
    3. ' CX' → logprob: -6.641385555267334
    4. '(C' → logprob: -8.641386032104492
    5. 'set' → logprob: -8.766386032104492
    6. '(sorted' → logprob: -8.891386032104492
    7. 'min' → logprob: -9.016386032104492
    8. 'list' → logprob: -9.391386032104492
    9. ' sorted' → logprob: -9.766386032104492
    10. 'CY' → logprob: -9.766386032104492

Token 545: '0' (ID: 15)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.5296320915222168
    2. '*' → logprob: -1.7796320915222168
    3. '0' → logprob: -2.029632091522217
    4. 't' → logprob: -2.529632091522217
    5. 'x' → logprob: -4.404632091522217
    6. '*t' → logprob: -5.029632091522217
    7. ']' → logprob: -6.279632091522217
    8. 'i' → logprob: -6.529632091522217
    9. '(min' → logprob: -6.529632091522217
    10. '*(' → logprob: -6.904632091522217

Token 546: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02785341441631317
    2. ',' → logprob: -3.652853488922119
    3. ']+' → logprob: -6.777853488922119
    4. ' ]' → logprob: -8.152853012084961
    5. '.' → logprob: -10.402853012084961
    6. ')' → logprob: -11.027853012084961
    7. ',
' → logprob: -11.027853012084961
    8. '0' → logprob: -11.777853012084961
    9. '+' → logprob: -12.152853012084961
    10. ' ,' → logprob: -12.152853012084961

Token 547: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5787539482116699
    2. 'cand' → logprob: -0.8287539482116699
    3. 'if' → logprob: -5.95375394821167
    4. 't' → logprob: -9.828754425048828
    5. ' for' → logprob: -10.453754425048828
    6. '+' → logprob: -10.578754425048828
    7. '```' → logprob: -10.953754425048828
    8. ' cand' → logprob: -11.203754425048828
    9. 'Cand' → logprob: -11.578754425048828
    10. '
' → logprob: -11.953754425048828

Token 548: ' _' (ID: 1175)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.031019555404782295
    2. ' t' → logprob: -4.656019687652588
    3. 'c' → logprob: -5.031019687652588
    4. 'd' → logprob: -6.156019687652588
    5. 'v' → logprob: -6.281019687652588
    6. 'val' → logprob: -6.406019687652588
    7. 'x' → logprob: -6.531019687652588
    8. 'i' → logprob: -6.531019687652588
    9. 's' → logprob: -7.281019687652588
    10. 'arr' → logprob: -7.531019687652588

Token 549: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05073263868689537
    2. 'in' → logprob: -3.0507326126098633
    3. ' ' → logprob: -6.800732612609863
    4. 'i' → logprob: -8.300732612609863
    5. ' i' → logprob: -8.300732612609863
    6. 't' → logprob: -8.925732612609863
    7. '_' → logprob: -8.925732612609863
    8. 'ime' → logprob: -9.425732612609863
    9. ' t' → logprob: -9.675732612609863
    10. 'n' → logprob: -10.425732612609863

Token 550: ' (' (ID: 350)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.16003938019275665
    2. ' range' → logprob: -2.1600394248962402
    3. 'CX' → logprob: -4.28503942489624
    4. '[' → logprob: -4.53503942489624
    5. '(' → logprob: -6.16003942489624
    6. ' CX' → logprob: -6.78503942489624
    7. 'lst' → logprob: -6.91003942489624
    8. 'CY' → logprob: -7.16003942489624
    9. '(range' → logprob: -7.78503942489624
    10. ' [' → logprob: -8.035038948059082

Token 551: 'list' (ID: 2641)
  Prédit: 'CX'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'CX' → logprob: -0.43550413846969604
    2. '0' → logprob: -1.6855041980743408
    3. 'range' → logprob: -1.9355041980743408
    4. '[' → logprob: -4.560503959655762
    5. 'X' → logprob: -6.310503959655762
    6. '(' → logprob: -6.435503959655762
    7. ' CX' → logprob: -6.685503959655762
    8. ' range' → logprob: -6.810503959655762
    9. '1' → logprob: -6.935503959655762
    10. ' ' → logprob: -7.060503959655762

Token 552: '(C' (ID: 5559)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.24503767490386963
    2. '(C' → logprob: -1.6200376749038696
    3. 'range' → logprob: -4.87003755569458
    4. '(c' → logprob: -4.87003755569458
    5. '(set' → logprob: -7.12003755569458
    6. 'C' → logprob: -7.37003755569458
    7. '(' → logprob: -7.87003755569458
    8. 'CX' → logprob: -7.99503755569458
    9. 'd' → logprob: -8.245038032531738
    10. '(d' → logprob: -8.745038032531738

Token 553: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.004451008513569832
    2. 'and' → logprob: -5.879450798034668
    3. 'CX' → logprob: -6.629450798034668
    4. 'range' → logprob: -9.254450798034668
    5. 'cand' → logprob: -10.754450798034668
    6. ')' → logprob: -10.879450798034668
    7. 'x' → logprob: -11.379450798034668
    8. '(X' → logprob: -11.441950798034668
    9. 'OX' → logprob: -11.504450798034668
    10. '(c' → logprob: -11.566950798034668

Token 554: ')' (ID: 8)
  Prédit: ' |'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' |' → logprob: -1.138780951499939
    2. '|' → logprob: -1.263780951499939
    3. '+' → logprob: -1.513780951499939
    4. ')' → logprob: -2.3887810707092285
    5. ' +' → logprob: -2.6387810707092285
    6. ')+' → logprob: -4.8887810707092285
    7. '.union' → logprob: -5.7637810707092285
    8. 'union' → logprob: -6.6387810707092285
    9. '+C' → logprob: -7.0137810707092285
    10. ' ' → logprob: -8.76378059387207

Token 555: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6371785402297974
    2. ' +' → logprob: -0.7621785402297974
    3. '+C' → logprob: -5.637178421020508
    4. '+c' → logprob: -7.762178421020508
    5. '+
' → logprob: -8.012178421020508
    6. ' +
' → logprob: -8.887178421020508
    7. '+[' → logprob: -9.637178421020508
    8. ')' → logprob: -11.387178421020508
    9. '+)' → logprob: -11.887178421020508
    10. ')+' → logprob: -12.012178421020508

Token 556: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.026335250586271286
    2. ' list' → logprob: -3.6513352394104004
    3. 'CY' → logprob: -11.026335716247559
    4. '   ' → logprob: -11.276335716247559
    5. '
' → logprob: -13.776335716247559
    6. ' ' → logprob: -13.901335716247559
    7. '(list' → logprob: -14.276335716247559
    8. '  ' → logprob: -14.401335716247559
    9. 'List' → logprob: -14.526335716247559
    10. '       ' → logprob: -14.776335716247559

Token 557: '(C' (ID: 5559)
  Prédit: '(C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(C' → logprob: -0.0003541734768077731
    2. 'CY' → logprob: -8.000353813171387
    3. 'C' → logprob: -11.000353813171387
    4. '(c' → logprob: -14.250353813171387
    5. '(
' → logprob: -15.375353813171387
    6. ' CY' → logprob: -15.500353813171387
    7. '(' → logprob: -15.625353813171387
    8. '((' → logprob: -15.875353813171387
    9. '(CG' → logprob: -16.125354766845703
    10. '	C' → logprob: -16.250354766845703

Token 558: 'Y' (ID: 56)
  Prédit: 'Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.0003978992172051221
    2. 'CY' → logprob: -8.125397682189941
    3. 'OY' → logprob: -10.250397682189941
    4. 'EY' → logprob: -10.250397682189941
    5. 'UY' → logprob: -12.500397682189941
    6. 'PY' → logprob: -12.750397682189941
    7. '[Y' → logprob: -12.750397682189941
    8. '_Y' → logprob: -13.000397682189941
    9. '(Y' → logprob: -13.125397682189941
    10. 'XY' → logprob: -13.500397682189941

Token 559: ')):
' (ID: 22530)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.43046993017196655
    2. '):' → logprob: -1.0554699897766113
    3. '+' → logprob: -7.055469989776611
    4. ')' → logprob: -8.305469512939453
    5. ':' → logprob: -8.430469512939453
    6. ')+' → logprob: -9.055469512939453
    7. '   ' → logprob: -9.680469512939453
    8. ' +' → logprob: -9.805469512939453
    9. '):

' → logprob: -9.805469512939453
    10. '+c' → logprob: -10.055469512939453

Token 560: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3960718512535095
    2. ' cand' → logprob: -1.1460719108581543
    3. 'cand' → logprob: -4.771071910858154
    4. '	c' → logprob: -8.396071434020996
    5. '```' → logprob: -9.271071434020996
    6. '
' → logprob: -9.771071434020996
    7. '    
' → logprob: -9.771071434020996
    8. '       ' → logprob: -9.896071434020996
    9. ' ' → logprob: -10.646071434020996
    10. ' c' → logprob: -10.646071434020996

Token 561: ' cand' (ID: 31771)
  Prédit: 'cand'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cand' (adapté à ' cand') → logprob: -0.11770389974117279
    2. '   ' → logprob: -2.492703914642334
    3. ' cand' → logprob: -3.867703914642334
    4. 't' → logprob: -5.867703914642334
    5. 'if' → logprob: -6.117703914642334
    6. ' t' → logprob: -6.492703914642334
    7. ' if' → logprob: -8.117703437805176
    8. ' ' → logprob: -8.242703437805176
    9. 'c' → logprob: -9.242703437805176
    10. '
' → logprob: -9.867703437805176

Token 562: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -2.165027217415627e-05
    2. 't' → logprob: -11.125021934509277
    3. '_' → logprob: -13.250021934509277
    4. '=' → logprob: -13.750021934509277
    5. '_time' → logprob: -14.000021934509277
    6. ' =' → logprob: -14.375021934509277
    7. '
' → logprob: -14.625021934509277
    8. '.append' → logprob: -15.000021934509277
    9. 'for' → logprob: -15.125021934509277
    10. '_times' → logprob: -15.125021934509277

Token 563: '.append' (ID: 3709)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.02770187519490719
    2. '=' → logprob: -4.2777018547058105
    3. ' +=' → logprob: -4.9027018547058105
    4. '.append' → logprob: -5.7777018547058105
    5. '.' → logprob: -6.7777018547058105
    6. '*=' → logprob: -7.9027018547058105
    7. '   ' → logprob: -8.277702331542969
    8. '<=' → logprob: -8.277702331542969
    9. ']+=' → logprob: -8.777702331542969
    10. '+' → logprob: -9.027702331542969

Token 564: '(_' (ID: 4963)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.09310027211904526
    2. '_)' → logprob: -3.4681003093719482
    3. '(_)' → logprob: -3.5931003093719482
    4. '(_' → logprob: -3.5931003093719482
    5. '(int' → logprob: -6.968100070953369
    6. 'int' → logprob: -7.093100070953369
    7. '(' → logprob: -7.843100070953369
    8. '_]' → logprob: -8.593100547790527
    9. '(_,' → logprob: -8.843100547790527
    10. '_/' → logprob: -10.343100547790527

Token 565: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.055617302656173706
    2. '+' → logprob: -3.055617332458496
    3. ' +' → logprob: -5.430617332458496
    4. ' )' → logprob: -6.805617332458496
    5. '<|end|>' → logprob: -7.055617332458496
    6. '+)' → logprob: -8.180617332458496
    7. '*' → logprob: -8.680617332458496
    8. ')
' → logprob: -9.555617332458496
    9. '<|end|>' → logprob: -9.555617332458496
    10. '))' → logprob: -11.805617332458496

Token 566: 'def' (ID: 1314)
  Prédit: 'cand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cand' → logprob: -0.0006317823426797986
    2. '```' → logprob: -8.000631332397461
    3. 't' → logprob: -8.500631332397461
    4. 'min' → logprob: -10.125631332397461
    5. 'for' → logprob: -11.000631332397461
    6. 'candidate' → logprob: -11.750631332397461
    7. '
' → logprob: -12.125631332397461
    8. ' cand' → logprob: -12.125631332397461
    9. '_' → logprob: -12.250631332397461
    10. '   ' → logprob: -12.875631332397461

Token 567: ' pos' (ID: 1253)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'can' → logprob: -1.91877281665802
    2. ' can' → logprob: -2.5437726974487305
    3. 'calc' → logprob: -2.6687726974487305
    4. 'f' → logprob: -2.7937726974487305
    5. ' f' → logprob: -2.7937726974487305
    6. ' dist' → logprob: -2.9187726974487305
    7. 'check' → logprob: -2.9187726974487305
    8. 'solve' → logprob: -3.1687726974487305
    9. ' check' → logprob: -3.4187726974487305
    10. 'pos' → logprob: -3.4187726974487305

Token 568: '(p' (ID: 2407)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.0778471827507019
    2. '(x' → logprob: -3.7028472423553467
    3. 't' → logprob: -4.702847003936768
    4. 'def' → logprob: -4.702847003936768
    5. '(pos' → logprob: -5.202847003936768
    6. '(' → logprob: -5.327847003936768
    7. '(time' → logprob: -5.327847003936768
    8. 'ition' → logprob: -5.452847003936768
    9. 's' → logprob: -5.577847003936768
    10. '(s' → logprob: -6.202847003936768

Token 569: 'dt' (ID: 12490)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3424326777458191
    2. 'os' → logprob: -1.5924327373504639
    3. '):
' → logprob: -3.592432737350464
    4. '):' → logprob: -3.592432737350464
    5. 's' → logprob: -3.967432737350464
    6. '):

' → logprob: -5.717432498931885
    7. 'list' → logprob: -6.342432498931885
    8. ',' → logprob: -6.717432498931885
    9. 'osition' → logprob: -6.717432498931885
    10. ')(' → logprob: -6.967432498931885

Token 570: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2907886803150177
    2. ',' → logprob: -2.0407886505126953
    3. ')' → logprob: -2.4157886505126953
    4. '):
' → logprob: -3.7907886505126953
    5. 'os' → logprob: -5.915788650512695
    6. 'x' → logprob: -6.290788650512695
    7. '(p' → logprob: -6.540788650512695
    8. 'o' → logprob: -6.915788650512695
    9. '):

' → logprob: -7.415788650512695
    10. '(' → logprob: -7.915788650512695

Token 571: ' t' (ID: 260)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lst' → logprob: -1.4080084562301636
    2. 'plist' → logprob: -1.5330084562301636
    3. 'p' → logprob: -2.533008575439453
    4. 't' → logprob: -2.533008575439453
    5. 'pos' → logprob: -2.908008575439453
    6. ' plist' → logprob: -3.158008575439453
    7. 'd' → logprob: -3.408008575439453
    8. 'arr' → logprob: -3.533008575439453
    9. ' t' → logprob: -3.533008575439453
    10. 'dt' → logprob: -3.783008575439453

Token 572: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2657340168952942
    2. '):' → logprob: -1.5157339572906494
    3. '):
' → logprob: -4.3907341957092285
    4. ')' → logprob: -7.7657341957092285
    5. 's' → logprob: -8.01573371887207
    6. 'ype' → logprob: -9.01573371887207
    7. ',p' → logprob: -9.14073371887207
    8. '0' → logprob: -9.26573371887207
    9. '):

' → logprob: -9.89073371887207
    10. 'e' → logprob: -10.26573371887207

Token 573: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02614271640777588
    2. ' return' → logprob: -3.9011425971984863
    3. 'return' → logprob: -5.401142597198486
    4. ' x' → logprob: -7.776142597198486
    5. ' if' → logprob: -8.276143074035645
    6. 'x' → logprob: -8.276143074035645
    7. '	return' → logprob: -9.901143074035645
    8. ' p' → logprob: -10.651143074035645
    9. 'if' → logprob: -10.776143074035645
    10. '   ' → logprob: -10.901143074035645

Token 574: ' return' (ID: 622)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.8063369989395142
    2. 'return' (adapté à ' return') → logprob: -1.0563369989395142
    3. 'if' → logprob: -1.9313369989395142
    4. '   ' → logprob: -3.8063368797302246
    5. 'p' → logprob: -4.306336879730225
    6. 'px' → logprob: -4.931336879730225
    7. ' return' → logprob: -5.306336879730225
    8. 'ret' → logprob: -5.556336879730225
    9. ' x' → logprob: -6.306336879730225
    10. 'def' → logprob: -6.431336879730225

Token 575: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.02874896302819252
    2. '(p' → logprob: -3.6537489891052246
    3. ' p' → logprob: -7.278748989105225
    4. 'tuple' → logprob: -8.028748512268066
    5. '[p' → logprob: -8.278748512268066
    6. '(' → logprob: -8.653748512268066
    7. '[(' → logprob: -8.653748512268066
    8. ' (' → logprob: -8.778748512268066
    9. '(t' → logprob: -9.153748512268066
    10. 'abs' → logprob: -9.403748512268066

Token 576: 'dt' (ID: 12490)
  Prédit: 'dt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dt' → logprob: -0.007210217881947756
    2. 'p' → logprob: -5.0072102546691895
    3. 'd' → logprob: -8.007209777832031
    4. '0' → logprob: -10.507209777832031
    5. '(p' → logprob: -10.507209777832031
    6. '_dt' → logprob: -10.632209777832031
    7. '+' → logprob: -11.007209777832031
    8. '[' → logprob: -11.007209777832031
    9. '   ' → logprob: -11.257209777832031
    10. 't' → logprob: -12.257209777832031

Token 577: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.29689449071884155
    2. '(p' → logprob: -2.2968945503234863
    3. '+' → logprob: -2.5468945503234863
    4. ' +' → logprob: -3.4218945503234863
    5. '0' → logprob: -3.7968945503234863
    6. 'p' → logprob: -4.921894550323486
    7. '(' → logprob: -5.046894550323486
    8. 'def' → logprob: -5.671894550323486
    9. '```' → logprob: -6.546894550323486
    10. ' ' → logprob: -7.171894550323486

Token 578: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002585978072602302
    2. '1' → logprob: -8.375258445739746
    3. '
' → logprob: -11.812758445739746
    4. '(' → logprob: -12.500258445739746
    5. ' ' → logprob: -12.562758445739746
    6. '[' → logprob: -12.812758445739746
    7. '```' → logprob: -13.187758445739746
    8. '   ' → logprob: -13.875258445739746
    9. '-' → logprob: -14.000258445739746
    10. '
' → logprob: -14.125258445739746

Token 579: ']' (ID: 60)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6190463304519653
    2. '+' → logprob: -1.3690463304519653
    3. ']+' → logprob: -2.244046211242676
    4. ']' → logprob: -3.494046211242676
    5. ',' → logprob: -3.869046211242676
    6. ' +' → logprob: -4.119046211242676
    7. '0' → logprob: -4.244046211242676
    8. '][' → logprob: -5.494046211242676
    9. ')+' → logprob: -5.494046211242676
    10. ')' → logprob: -5.619046211242676

Token 580: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2827766239643097
    2. ' +' → logprob: -1.4077765941619873
    3. '+p' → logprob: -6.782776832580566
    4. 'p' → logprob: -9.157776832580566
    5. ' p' → logprob: -9.282776832580566
    6. '+
' → logprob: -9.282776832580566
    7. '[' → logprob: -9.657776832580566
    8. '<|end|>' → logprob: -9.782776832580566
    9. '
' → logprob: -11.157776832580566
    10. ' +
' → logprob: -11.282776832580566

Token 581: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0007831838447600603
    2. 't' → logprob: -7.2507829666137695
    3. ' p' → logprob: -9.87578296661377
    4. '(p' → logprob: -11.25078296661377
    5. '   ' → logprob: -12.50078296661377
    6. '(' → logprob: -13.00078296661377
    7. '(t' → logprob: -14.50078296661377
    8. 'int' → logprob: -14.75078296661377
    9. '
' → logprob: -15.12578296661377
    10. '1' → logprob: -15.12578296661377

Token 582: 'dt' (ID: 12490)
  Prédit: 'dt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dt' → logprob: -0.010946299880743027
    2. 'p' → logprob: -5.010946273803711
    3. '(p' → logprob: -6.010946273803711
    4. 't' → logprob: -6.760946273803711
    5. ' p' → logprob: -8.385946273803711
    6. 'd' → logprob: -8.510946273803711
    7. '[' → logprob: -9.635946273803711
    8. '(' → logprob: -10.635946273803711
    9. '[p' → logprob: -10.760946273803711
    10. ' ' → logprob: -11.135946273803711

Token 583: '[' (ID: 58)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.7194221615791321
    2. '[' → logprob: -1.2194221019744873
    3. 't' → logprob: -1.7194221019744873
    4. '1' → logprob: -3.3444221019744873
    5. ' ' → logprob: -7.219422340393066
    6. '(p' → logprob: -7.344422340393066
    7. ' p' → logprob: -7.719422340393066
    8. '```' → logprob: -8.094422340393066
    9. '(' → logprob: -8.219422340393066
    10. '   ' → logprob: -8.219422340393066

Token 584: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1941290944814682
    2. 't' → logprob: -1.9441291093826294
    3. 'p' → logprob: -3.44412899017334
    4. '0' → logprob: -7.31912899017334
    5. '[' → logprob: -7.56912899017334
    6. '(' → logprob: -9.06912899017334
    7. ' t' → logprob: -10.56912899017334
    8. '(p' → logprob: -10.81912899017334
    9. ' p' → logprob: -11.06912899017334
    10. '```' → logprob: -11.56912899017334

Token 585: ']' (ID: 60)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.02789202332496643
    2. ' *' → logprob: -3.7778921127319336
    3. '*t' → logprob: -5.402892112731934
    4. '*p' → logprob: -9.652892112731934
    5. '```' → logprob: -11.152892112731934
    6. ' ' → logprob: -11.277892112731934
    7. '*time' → logprob: -11.527892112731934
    8. '**' → logprob: -11.777892112731934
    9. '   ' → logprob: -13.277892112731934
    10. '*object' → logprob: -13.277892112731934

Token 586: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.33476871252059937
    2. '*t' → logprob: -1.8347687721252441
    3. ' *' → logprob: -2.084768772125244
    4. ' t' → logprob: -8.084768295288086
    5. 't' → logprob: -8.834768295288086
    6. '*p' → logprob: -10.084768295288086
    7. ' ' → logprob: -11.834768295288086
    8. ' ' → logprob: -13.459768295288086
    9. '*time' → logprob: -13.584768295288086
    10. '   ' → logprob: -13.959768295288086

Token 587: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0009149204124696553
    2. ' t' → logprob: -7.000915050506592
    3. 'int' → logprob: -12.750914573669434
    4. '1' → logprob: -15.500914573669434
    5. '`t' → logprob: -15.500914573669434
    6. '   ' → logprob: -16.75091552734375
    7. '```' → logprob: -17.50091552734375
    8. ' ' → logprob: -17.62591552734375
    9. 'p' → logprob: -18.50091552734375
    10. '(t' → logprob: -18.62591552734375

Token 588: '

' (ID: 279)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.5075391530990601
    2. 'res' → logprob: -2.1325392723083496
    3. 'ret' → logprob: -3.6325392723083496
    4. 'mx' → logprob: -3.6325392723083496
    5. 'best' → logprob: -3.7575392723083496
    6. 'mn' → logprob: -4.00753927230835
    7. 'answer' → logprob: -4.13253927230835
    8. 'for' → logprob: -4.25753927230835
    9. 'cand' → logprob: -4.25753927230835
    10. 'ma' → logprob: -4.63253927230835

Token 589: 'import' (ID: 561)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.1435121297836304
    2. 'for' → logprob: -1.8935121297836304
    3. 'res' → logprob: -2.39351224899292
    4. 'cnt' → logprob: -2.51851224899292
    5. 'max' → logprob: -3.14351224899292
    6. 'answer' → logprob: -3.26851224899292
    7. 'lst' → logprob: -3.76851224899292
    8. 't' → logprob: -4.14351224899292
    9. 'def' → logprob: -4.14351224899292
    10. 'min' → logprob: -4.39351224899292

Token 590: ' math' (ID: 13324)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.01543753407895565
    2. 'sys' → logprob: -4.765437602996826
    3. 'heap' → logprob: -5.265437602996826
    4. 'bis' → logprob: -6.765437602996826
    5. 'collections' → logprob: -8.265437126159668
    6. 'operator' → logprob: -9.390437126159668
    7. 'it' → logprob: -9.765437126159668
    8. 'fra' → logprob: -10.015437126159668
    9. ' math' → logprob: -11.015437126159668
    10. 'decimal' → logprob: -11.640437126159668

Token 591: '
' (ID: 198)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.3398095965385437
    2. 'res' → logprob: -2.3398096561431885
    3. 'def' → logprob: -3.4648096561431885
    4. 'INF' → logprob: -3.5898096561431885
    5. 'min' → logprob: -3.7148096561431885
    6. 'if' → logprob: -4.339809417724609
    7. 'answer' → logprob: -4.589809417724609
    8. 'best' → logprob: -4.714809417724609
    9. 'inf' → logprob: -4.714809417724609
    10. 't' → logprob: -4.964809417724609

Token 592: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.3372611999511719
    2. 'res' → logprob: -2.462261199951172
    3. 'def' → logprob: -2.837261199951172
    4. 'best' → logprob: -3.837261199951172
    5. 'INF' → logprob: -3.837261199951172
    6. 'ret' → logprob: -3.962261199951172
    7. 'mn' → logprob: -4.087261199951172
    8. 'mx' → logprob: -4.837261199951172
    9. 'inf' → logprob: -5.212261199951172
    10. 'answer' → logprob: -5.587261199951172

Token 593: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07895005494356155
    2. '=' → logprob: -2.5789501667022705
    3. '_' → logprob: -10.078949928283691
    4. ',' → logprob: -11.578949928283691
    5. '_=' → logprob: -13.328949928283691
    6. ' =
' → logprob: -13.703949928283691
    7. ':' → logprob: -13.828949928283691
    8. 's' → logprob: -14.328949928283691
    9. '<|end|>' → logprob: -14.828949928283691
    10. ' ' → logprob: -14.828949928283691

Token 594: ' float' (ID: 4428)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.16827356815338135
    2. 'float' → logprob: -2.043273448944092
    3. '0' → logprob: -3.918273448944092
    4. '10' → logprob: -6.168273448944092
    5. '-' → logprob: -6.168273448944092
    6. '100' → logprob: -7.418273448944092
    7. ' math' → logprob: -8.66827392578125
    8. '1' → logprob: -8.91827392578125
    9. 'int' → logprob: -9.54327392578125
    10. '999' → logprob: -10.16827392578125

Token 595: '("' (ID: 568)
  Prédit: ''in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''in' → logprob: -0.038558345288038254
    2. ''' → logprob: -3.5385582447052
    3. '('' → logprob: -5.038558483123779
    4. '"' → logprob: -6.913558483123779
    5. ''inc' → logprob: -8.038558006286621
    6. ''information' → logprob: -8.913558006286621
    7. ''ex' → logprob: -9.038558006286621
    8. ''ins' → logprob: -9.163558006286621
    9. ''import' → logprob: -9.163558006286621
    10. ''any' → logprob: -10.163558006286621

Token 596: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.6234642863273621
    2. ''in' → logprob: -0.8734642863273621
    3. '"' → logprob: -3.123464345932007
    4. ''' → logprob: -6.623464107513428
    5. '-inf' → logprob: -7.623464107513428
    6. ''ex' → logprob: -8.373464584350586
    7. '"in' → logprob: -9.248464584350586
    8. ''ins' → logprob: -10.248464584350586
    9. '('' → logprob: -10.373464584350586
    10. ''end' → logprob: -11.248464584350586

Token 597: '")
' (ID: 1896)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47482749819755554
    2. ')
' → logprob: -0.9748275279998779
    3. ' )
' → logprob: -8.224827766418457
    4. ')

' → logprob: -8.599827766418457
    5. ' )' → logprob: -8.849827766418457
    6. '")' → logprob: -9.599827766418457
    7. ')
' → logprob: -9.974827766418457
    8. '")
' → logprob: -10.599827766418457
    9. 'for' → logprob: -12.599827766418457
    10. ')**' → logprob: -13.099827766418457

Token 598: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.2664456789934775e-06
    2. '```' → logprob: -14.125000953674316
    3. ' for' → logprob: -14.875000953674316
    4. 't' → logprob: -16.500001907348633
    5. '
' → logprob: -16.500001907348633
    6. '	for' → logprob: -18.875001907348633
    7. 'def' → logprob: -19.125001907348633
    8. '``' → logprob: -19.375001907348633
    9. 'from' → logprob: -19.500001907348633
    10. '#' → logprob: -20.250001907348633

Token 599: ' tt' (ID: 34181)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.012628547847270966
    2. ' t' → logprob: -5.262628555297852
    3. 'i' → logprob: -6.512628555297852
    4. '_' → logprob: -6.512628555297852
    5. '_t' → logprob: -6.762628555297852
    6. 'p' → logprob: -7.262628555297852
    7. 'c' → logprob: -7.512628555297852
    8. 'T' → logprob: -8.012628555297852
    9. 'cand' → logprob: -8.387628555297852
    10. 'x' → logprob: -8.512628555297852

Token 600: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10028980672359467
    2. 'in' → logprob: -2.350289821624756
    3. ' ' → logprob: -9.725289344787598
    4. ',' → logprob: -11.975289344787598
    5. 's' → logprob: -12.475289344787598
    6. 'import' → logprob: -13.350289344787598
    7. '_' → logprob: -13.350289344787598
    8. 'n' → logprob: -13.475289344787598
    9. '_in' → logprob: -13.475289344787598
    10. ' ,' → logprob: -13.725289344787598

Token 601: ' cand' (ID: 31771)
  Prédit: 'cand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cand' → logprob: -0.003186863148584962
    2. ' cand' → logprob: -5.7531867027282715
    3. 'sorted' → logprob: -13.00318717956543
    4. '[c' → logprob: -13.12818717956543
    5. 'range' → logprob: -13.25318717956543
    6. 'c' → logprob: -13.62818717956543
    7. '   ' → logprob: -14.25318717956543
    8. 'candidate' → logprob: -14.75318717956543
    9. 'cant' → logprob: -15.37818717956543
    10. ' range' → logprob: -15.75318717956543

Token 602: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -6.12258882028982e-05
    2. '_' → logprob: -9.75006103515625
    3. 't' → logprob: -12.87506103515625
    4. 's' → logprob: -16.62506103515625
    5. ')_' → logprob: -16.62506103515625
    6. ')' → logprob: -17.37506103515625
    7. '_)' → logprob: -17.50006103515625
    8. '}_' → logprob: -17.62506103515625
    9. '_,' → logprob: -17.75006103515625
    10. 'in' → logprob: -17.87506103515625

Token 603: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0029982624109834433
    2. ':
' → logprob: -6.127998352050781
    3. '<|end|>' → logprob: -7.752998352050781
    4. ',' → logprob: -8.377998352050781
    5. '<|end|>' → logprob: -10.002998352050781
    6. '+' → logprob: -10.627998352050781
    7. '.' → logprob: -11.377998352050781
    8. '=' → logprob: -11.502998352050781
    9. '   ' → logprob: -11.627998352050781
    10. ' :' → logprob: -12.002998352050781

Token 604: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006716913543641567
    2. 'x' → logprob: -6.631716728210449
    3. 'for' → logprob: -6.881716728210449
    4. ' for' → logprob: -7.131716728210449
    5. 'pos' → logprob: -8.00671672821045
    6. ' x' → logprob: -8.00671672821045
    7. ' p' → logprob: -8.25671672821045
    8. ' px' → logprob: -8.25671672821045
    9. 'px' → logprob: -8.38171672821045
    10. 'p' → logprob: -8.38171672821045

Token 605: ' px' (ID: 27003)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -1.5184154510498047
    2. 'px' (adapté à ' px') → logprob: -2.0184154510498047
    3. 'x' → logprob: -2.2684154510498047
    4. 'X' → logprob: -2.2684154510498047
    5. 'xs' → logprob: -2.6434154510498047
    6. 'ok' → logprob: -2.6434154510498047
    7. 'xx' → logprob: -3.3934154510498047
    8. 'cur' → logprob: -3.5184154510498047
    9. 'for' → logprob: -3.6434154510498047
    10. 'sx' → logprob: -4.268415451049805

Token 606: 'min' (ID: 1493)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5863429307937622
    2. ',' → logprob: -1.2113429307937622
    3. ' =' → logprob: -2.3363428115844727
    4. 'os' → logprob: -3.5863428115844727
    5. '=' → logprob: -4.086342811584473
    6. '0' → logprob: -6.086342811584473
    7. 'pos' → logprob: -7.461342811584473
    8. 'X' → logprob: -8.336342811584473
    9. 'l' → logprob: -8.961342811584473
    10. '_' → logprob: -8.961342811584473

Token 607: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4413917064666748
    2. ' =' → logprob: -1.3163917064666748
    3. '=' → logprob: -2.441391706466675
    4. ' ,' → logprob: -6.816391944885254
    5. 's' → logprob: -8.066391944885254
    6. ',min' → logprob: -8.941391944885254
    7. 'min' → logprob: -9.941391944885254
    8. ',x' → logprob: -10.316391944885254
    9. '=min' → logprob: -10.441391944885254
    10. ' ' → logprob: -10.941391944885254

Token 608: ' math' (ID: 13324)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.17928378283977509
    2. 'math' → logprob: -1.9292837381362915
    3. 'px' → logprob: -4.929283618927002
    4. ' math' → logprob: -5.929283618927002
    5. ' float' → logprob: -5.929283618927002
    6. '-' → logprob: -6.054283618927002
    7. '-inf' → logprob: -6.679283618927002
    8. '-p' → logprob: -7.804283618927002
    9. 'ans' → logprob: -7.929283618927002
    10. '-m' → logprob: -8.17928409576416

Token 609: '.inf' (ID: 81185)
  Prédit: 'inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.006592331919819117
    2. '.inf' → logprob: -5.131592273712158
    3. '-inf' → logprob: -7.381592273712158
    4. '+' → logprob: -11.381592750549316
    5. ' inf' → logprob: -11.506592750549316
    6. '_inf' → logprob: -12.381592750549316
    7. 'float' → logprob: -12.506592750549316
    8. '```' → logprob: -12.631592750549316
    9. '-' → logprob: -12.756592750549316
    10. 'floor' → logprob: -13.506592750549316

Token 610: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7625142931938171
    2. '<|end|>' → logprob: -1.012514352798462
    3. 'px' → logprob: -2.637514352798462
    4. '   ' → logprob: -3.012514352798462
    5. ',' → logprob: -4.262514114379883
    6. '(px' → logprob: -5.137514114379883
    7. ';' → logprob: -5.387514114379883
    8. ':px' → logprob: -5.512514114379883
    9. 'for' → logprob: -5.637514114379883
    10. ' px' → logprob: -5.762514114379883

Token 611: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6973485946655273
    2. 'px' → logprob: -0.8223485946655273
    3. ',' → logprob: -3.5723485946655273
    4. '
' → logprob: -3.8223485946655273
    5. ',p' → logprob: -5.947348594665527
    6. 'p' → logprob: -5.947348594665527
    7. ' px' → logprob: -6.072348594665527
    8. ':px' → logprob: -6.822348594665527
    9. '(px' → logprob: -7.322348594665527
    10. ';' → logprob: -7.322348594665527

Token 612: ' px' (ID: 27003)
  Prédit: 'px'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'px' (adapté à ' px') → logprob: -0.0021929678041487932
    2. 'py' → logprob: -6.127192974090576
    3. 'p' → logprob: -12.627192497253418
    4. ' px' → logprob: -13.127192497253418
    5. 'for' → logprob: -14.002192497253418
    6. '   ' → logprob: -14.502192497253418
    7. 'xmin' → logprob: -15.127192497253418
    8. ':px' → logprob: -15.377192497253418
    9. '(px' → logprob: -15.627192497253418
    10. '```' → logprob: -15.877192497253418

Token 613: 'max' (ID: 3228)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0020022729877382517
    2. 'max' → logprob: -6.252002239227295
    3. ' =' → logprob: -10.377002716064453
    4. '=' → logprob: -10.877002716064453
    5. 'ax' → logprob: -11.377002716064453
    6. 'in' → logprob: -11.502002716064453
    7. '_min' → logprob: -13.502002716064453
    8. 'imin' → logprob: -15.377002716064453
    9. '=min' → logprob: -15.627002716064453
    10. ' min' → logprob: -16.127002716064453

Token 614: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02987753041088581
    2. '=' → logprob: -3.5298774242401123
    3. ',' → logprob: -9.279877662658691
    4. '<|end|>' → logprob: -10.654877662658691
    5. ' =
' → logprob: -12.904877662658691
    6. ' ' → logprob: -13.279877662658691
    7. '   ' → logprob: -13.654877662658691
    8. '=
' → logprob: -13.779877662658691
    9. '=max' → logprob: -14.029877662658691
    10. ')' → logprob: -14.029877662658691

Token 615: ' -' (ID: 533)
  Prédit: '-m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-m' → logprob: -0.07420754432678223
    2. ' -' → logprob: -2.6992075443267822
    3. '-inf' → logprob: -5.574207305908203
    4. '-in' → logprob: -8.949207305908203
    5. 'math' → logprob: -9.574207305908203
    6. '-' → logprob: -10.074207305908203
    7. 'float' → logprob: -10.949207305908203
    8. '-info' → logprob: -11.074207305908203
    9. '-f' → logprob: -11.074207305908203
    10. '-print' → logprob: -11.449207305908203

Token 616: 'math' (ID: 20310)
  Prédit: 'math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -7.941850526549388e-06
    2. ' math' → logprob: -11.875007629394531
    3. '(math' → logprob: -15.000007629394531
    4. 'inf' → logprob: -15.125007629394531
    5. '_math' → logprob: -16.50000762939453
    6. '.math' → logprob: -16.62500762939453
    7. '1' → logprob: -16.75000762939453
    8. 'float' → logprob: -17.37500762939453
    9. 'Math' → logprob: -17.50000762939453
    10. '/math' → logprob: -18.75000762939453

Token 617: '.inf' (ID: 81185)
  Prédit: 'inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.00023333763238042593
    2. '.inf' → logprob: -8.37523365020752
    3. '_inf' → logprob: -13.25023365020752
    4. '-inf' → logprob: -15.12523365020752
    5. ' inf' → logprob: -15.25023365020752
    6. 'math' → logprob: -15.25023365020752
    7. '1' → logprob: -16.500232696533203
    8. '```' → logprob: -16.750232696533203
    9. '∞' → logprob: -17.250232696533203
    10. 'py' → logprob: -18.000232696533203

Token 618: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013764221221208572
    2. ' for' → logprob: -7.251376628875732
    3. 'for' → logprob: -8.376376152038574
    4. 'py' → logprob: -8.626376152038574
    5. '    
' → logprob: -9.126376152038574
    6. '<|end|>' → logprob: -9.376376152038574
    7. ',' → logprob: -10.751376152038574
    8. ' py' → logprob: -11.626376152038574
    9. '
' → logprob: -12.501376152038574
    10. '  ' → logprob: -12.501376152038574

Token 619: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012617716565728188
    2. 'for' → logprob: -4.637617588043213
    3. ' for' → logprob: -6.387617588043213
    4. 'py' → logprob: -6.887617588043213
    5. '```' → logprob: -10.137618064880371
    6. '    
' → logprob: -10.387618064880371
    7. 'px' → logprob: -10.387618064880371
    8. '<|end|>' → logprob: -11.137618064880371
    9. ',' → logprob: -11.887618064880371
    10. 'p' → logprob: -12.512618064880371

Token 620: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.12395144999027252
    2. 'py' → logprob: -2.2489514350891113
    3. 'px' → logprob: -4.623951435089111
    4. 'p' → logprob: -6.748951435089111
    5. '#' → logprob: -10.37395191192627
    6. ' for' → logprob: -11.62395191192627
    7. 'ppy' → logprob: -12.12395191192627
    8. 'x' → logprob: -12.87395191192627
    9. 'ply' → logprob: -12.99895191192627
    10. 'PY' → logprob: -13.12395191192627

Token 621: ' xx' (ID: 44242)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.5728217363357544
    2. 'x' → logprob: -0.9478217363357544
    3. 'a' → logprob: -4.822821617126465
    4. 'xx' → logprob: -4.947821617126465
    5. 'px' → logprob: -5.072821617126465
    6. '(x' → logprob: -5.322821617126465
    7. 'i' → logprob: -5.697821617126465
    8. 'pt' → logprob: -5.697821617126465
    9. '_x' → logprob: -5.822821617126465
    10. 'val' → logprob: -5.822821617126465

Token 622: ' in' (ID: 306)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6636906266212463
    2. ' in' → logprob: -1.0386905670166016
    3. 'in' → logprob: -2.0386905670166016
    4. ' ,' → logprob: -7.788690567016602
    5. 'x' → logprob: -9.163690567016602
    6. ',p' → logprob: -9.413690567016602
    7. ')' → logprob: -10.038690567016602
    8. '   ' → logprob: -10.163690567016602
    9. '_,' → logprob: -10.163690567016602
    10. 'p' → logprob: -10.288690567016602

Token 623: ' lst' (ID: 33384)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.005448378622531891
    2. 'lst' → logprob: -5.255448341369629
    3. ' X' → logprob: -9.505448341369629
    4. 'range' → logprob: -10.255448341369629
    5. 'CX' → logprob: -10.380448341369629
    6. 'pos' → logprob: -10.755448341369629
    7. '[X' → logprob: -11.005448341369629
    8. '(X' → logprob: -11.380448341369629
    9. 'list' → logprob: -11.755448341369629
    10. '   ' → logprob: -12.630448341369629

Token 624: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.4740845859050751
    2. '1' → logprob: -0.9740846157073975
    3. ')' → logprob: -12.724084854125977
    4. ',' → logprob: -13.599084854125977
    5. 's' → logprob: -13.599084854125977
    6. '```' → logprob: -13.974084854125977
    7. '   ' → logprob: -15.349084854125977
    8. ']' → logprob: -15.974084854125977
    9. '[' → logprob: -16.224084854125977
    10. '(' → logprob: -16.474084854125977

Token 625: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.16066347062587738
    2. ':' → logprob: -1.9106634855270386
    3. '   ' → logprob: -8.535663604736328
    4. '):
' → logprob: -9.410663604736328
    5. ',' → logprob: -9.660663604736328
    6. '       ' → logprob: -9.910663604736328
    7. '[' → logprob: -11.410663604736328
    8. ':
' → logprob: -11.785663604736328
    9. ':

' → logprob: -12.160663604736328
    10. '():
' → logprob: -12.660663604736328

Token 626: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.749814019713085e-06
    2. '   ' → logprob: -13.125006675720215
    3. ',' → logprob: -13.500006675720215
    4. '           ' → logprob: -14.625006675720215
    5. '```' → logprob: -14.750006675720215
    6. 'x' → logprob: -15.375006675720215
    7. '<|end|>' → logprob: -15.375006675720215
    8. ' if' → logprob: -15.375006675720215
    9. '      ' → logprob: -15.625006675720215
    10. ' px' → logprob: -15.625006675720215

Token 627: ' tmp' (ID: 8919)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.062027622014284134
    2. ' px' → logprob: -3.3120276927948
    3. 'px' → logprob: -4.812027454376221
    4. 'v' → logprob: -5.812027454376221
    5. 'x' → logprob: -5.812027454376221
    6. '       ' → logprob: -5.812027454376221
    7. ' val' → logprob: -6.312027454376221
    8. 'p' → logprob: -6.562027454376221
    9. 'val' → logprob: -6.812027454376221
    10. ' p' → logprob: -7.187027454376221

Token 628: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.025089044123888016
    2. '=' → logprob: -4.150089263916016
    3. 'x' → logprob: -5.025089263916016
    4. 'pos' → logprob: -6.900089263916016
    5. '_x' → logprob: -8.025089263916016
    6. '_pos' → logprob: -8.400089263916016
    7. '_val' → logprob: -8.525089263916016
    8. 'val' → logprob: -8.650089263916016
    9. 'os' → logprob: -8.775089263916016
    10. '   ' → logprob: -9.275089263916016

Token 629: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.004628176800906658
    2. ' pos' → logprob: -5.3796281814575195
    3. 'px' → logprob: -11.87962818145752
    4. '   ' → logprob: -15.00462818145752
    5. '       ' → logprob: -15.25462818145752
    6. '           ' → logprob: -16.004627227783203
    7. ' px' → logprob: -16.254627227783203
    8. 'abs' → logprob: -16.754627227783203
    9. 'tmp' → logprob: -16.754627227783203
    10. 'max' → logprob: -17.004627227783203

Token 630: '(xx' (ID: 161745)
  Prédit: '(xx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(xx' → logprob: -0.00019460011390037835
    2. '(' → logprob: -8.625194549560547
    3. '(x' → logprob: -11.625194549560547
    4. ' (' → logprob: -13.250194549560547
    5. 'xx' → logprob: -13.500194549560547
    6. '((' → logprob: -13.625194549560547
    7. '```' → logprob: -14.625194549560547
    8. '(px' → logprob: -14.875194549560547
    9. '(tmp' → logprob: -15.125194549560547
    10. '(
' → logprob: -15.500194549560547

Token 631: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004967942950315773
    2. ' ,' → logprob: -7.625496864318848
    3. ',tmp' → logprob: -12.250496864318848
    4. ',t' → logprob: -13.500496864318848
    5. ',x' → logprob: -13.875496864318848
    6. ',
' → logprob: -15.000496864318848
    7. 'tmp' → logprob: -15.625496864318848
    8. '       ' → logprob: -15.750496864318848
    9. '   ' → logprob: -16.00049591064453
    10. ')' → logprob: -16.25049591064453

Token 632: ' tt' (ID: 34181)
  Prédit: 'tt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tt' → logprob: -2.2842308680992573e-05
    2. ' tt' → logprob: -10.750022888183594
    3. '   ' → logprob: -14.250022888183594
    4. '(tt' → logprob: -15.500022888183594
    5. '           ' → logprob: -15.625022888183594
    6. '_tt' → logprob: -15.625022888183594
    7. 'ttp' → logprob: -16.000022888183594
    8. '    ' → logprob: -17.375022888183594
    9. '               ' → logprob: -17.750022888183594
    10. '       ' → logprob: -18.000022888183594

Token 633: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.009851355105638504
    2. ')' → logprob: -4.634851455688477
    3. '       ' → logprob: -9.634851455688477
    4. ')
' → logprob: -10.509851455688477
    5. '   ' → logprob: -13.509851455688477
    6. ' )
' → logprob: -13.884851455688477
    7. ')

' → logprob: -15.384851455688477
    8. '):
' → logprob: -17.134851455688477
    9. '),' → logprob: -17.509851455688477
    10. ');
' → logprob: -18.009851455688477

Token 634: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00019305046589579433
    2. ' if' → logprob: -8.875192642211914
    3. '   ' → logprob: -11.125192642211914
    4. ',' → logprob: -11.500192642211914
    5. '
' → logprob: -11.750192642211914
    6. 'if' → logprob: -11.750192642211914
    7. '	' → logprob: -12.875192642211914
    8. '        
' → logprob: -13.125192642211914
    9. '<|end|>' → logprob: -13.375192642211914
    10. '	if' → logprob: -13.625192642211914

Token 635: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28994220495224
    2. ' if' → logprob: -2.0399422645568848
    3. 'px' → logprob: -2.4149422645568848
    4. 'if' (adapté à ' if') → logprob: -3.9149422645568848
    5. ' px' → logprob: -4.789942264556885
    6. '   ' → logprob: -5.539942264556885
    7. '	if' → logprob: -10.164941787719727
    8. '(px' → logprob: -11.039941787719727
    9. ' ' → logprob: -11.289941787719727
    10. '	' → logprob: -11.664941787719727

Token 636: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.179824098944664
    2. ' tmp' → logprob: -1.8048241138458252
    3. '   ' → logprob: -10.929823875427246
    4. ' ' → logprob: -11.054823875427246
    5. 'px' → logprob: -11.179823875427246
    6. '	tmp' → logprob: -11.304823875427246
    7. ' px' → logprob: -11.304823875427246
    8. '(tmp' → logprob: -13.179823875427246
    9. '$tmp' → logprob: -13.804823875427246
    10. ' ' → logprob: -14.054823875427246

Token 637: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.08900752663612366
    2. ' <' → logprob: -2.464007616043091
    3. '>' → logprob: -10.839007377624512
    4. '<p' → logprob: -11.339007377624512
    5. '<|end|>' → logprob: -11.714007377624512
    6. ')' → logprob: -12.339007377624512
    7. '<x' → logprob: -12.589007377624512
    8. '   ' → logprob: -12.964007377624512
    9. ')<' → logprob: -12.964007377624512
    10. '[' → logprob: -13.214007377624512

Token 638: ' px' (ID: 27003)
  Prédit: 'px'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'px' → logprob: -0.1798645257949829
    2. ' px' → logprob: -1.804864525794983
    3. 'p' → logprob: -9.929864883422852
    4. 'xmin' → logprob: -11.054864883422852
    5. ':px' → logprob: -11.429864883422852
    6. '0' → logprob: -11.554864883422852
    7. '
' → logprob: -12.054864883422852
    8. ' ' → logprob: -12.179864883422852
    9. '   ' → logprob: -12.179864883422852
    10. '```' → logprob: -12.679864883422852

Token 639: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.004058928694576025
    2. 'xmin' → logprob: -5.754058837890625
    3. 'px' → logprob: -7.379058837890625
    4. 'max' → logprob: -8.879058837890625
    5. 'xin' → logprob: -11.004058837890625
    6. '   ' → logprob: -11.004058837890625
    7. 'in' → logprob: -11.254058837890625
    8. '
' → logprob: -11.504058837890625
    9. 'x' → logprob: -12.004058837890625
    10. ' min' → logprob: -12.004058837890625

Token 640: ':' (ID: 25)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.16089966893196106
    2. ':' → logprob: -1.9108996391296387
    3. '           ' → logprob: -7.410899639129639
    4. ':px' → logprob: -9.910900115966797
    5. '       ' → logprob: -11.910900115966797
    6. '):
' → logprob: -12.535900115966797
    7. 'px' → logprob: -12.785900115966797
    8. ' :
' → logprob: -12.785900115966797
    9. ':
' → logprob: -13.410900115966797
    10. ':

' → logprob: -14.035900115966797

Token 641: ' px' (ID: 27003)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0625917986035347
    2. ' px' → logprob: -2.812591791152954
    3. 'px' → logprob: -7.437592029571533
    4. '               ' → logprob: -10.687591552734375
    5. '                   ' → logprob: -13.062591552734375
    6. '       ' → logprob: -13.187591552734375
    7. '          ' → logprob: -13.562591552734375
    8. '(px' → logprob: -13.937591552734375
    9. '		' → logprob: -14.062591552734375
    10. ' py' → logprob: -14.187591552734375

Token 642: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.9361264946837764e-07
    2. 'imin' → logprob: -16.5
    3. 'xmin' → logprob: -16.875
    4. 'max' → logprob: -17.125
    5. 'in' → logprob: -17.125
    6. '_min' → logprob: -18.75
    7. '=min' → logprob: -18.75
    8. '	min' → logprob: -18.875
    9. '   ' → logprob: -19.5
    10. '=' → logprob: -19.5

Token 643: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03804171830415726
    2. ' =' → logprob: -3.288041830062866
    3. ',' → logprob: -16.288042068481445
    4. '=
' → logprob: -16.663042068481445
    5. '   ' → logprob: -16.913042068481445
    6. ' ' → logprob: -17.663042068481445
    7. '=min' → logprob: -18.163042068481445
    8. 'px' → logprob: -18.288042068481445
    9. '=p' → logprob: -18.663042068481445
    10. 'tmp' → logprob: -18.663042068481445

Token 644: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.001170460251159966
    2. ' tmp' → logprob: -6.751170635223389
    3. '	tmp' → logprob: -16.001171112060547
    4. 'temp' → logprob: -16.501171112060547
    5. '(tmp' → logprob: -17.376171112060547
    6. '/tmp' → logprob: -17.751171112060547
    7. '$tmp' → logprob: -18.001171112060547
    8. '   ' → logprob: -18.126171112060547
    9. ' ' → logprob: -18.501171112060547
    10. 'txt' → logprob: -19.001171112060547

Token 645: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025774160400032997
    2. '   ' → logprob: -4.150774002075195
    3. ' if' → logprob: -5.150774002075195
    4. 'if' → logprob: -5.650774002075195
    5. '
' → logprob: -8.275774002075195
    6. '<|end|>' → logprob: -9.650774002075195
    7. 'elif' → logprob: -11.025774002075195
    8. '           ' → logprob: -11.775774002075195
    9. '        
' → logprob: -12.275774002075195
    10. ' elif' → logprob: -12.275774002075195

Token 646: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005584598984569311
    2. 'if' → logprob: -5.380584716796875
    3. '   ' → logprob: -7.380584716796875
    4. ' if' → logprob: -8.005584716796875
    5. '           ' → logprob: -13.005584716796875
    6. '```' → logprob: -13.755584716796875
    7. ' ' → logprob: -13.880584716796875
    8. '     ' → logprob: -14.630584716796875
    9. '      ' → logprob: -14.880584716796875
    10. '        
' → logprob: -14.880584716796875

Token 647: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.05154000595211983
    2. ' if' → logprob: -3.051539897918701
    3. '   ' → logprob: -6.176539897918701
    4. '       ' → logprob: -7.051539897918701
    5. 'elif' → logprob: -12.92654037475586
    6. ' ' → logprob: -14.17654037475586
    7. '    ' → logprob: -14.55154037475586
    8. '     ' → logprob: -14.92654037475586
    9. '  ' → logprob: -15.55154037475586
    10. '
' → logprob: -15.80154037475586

Token 648: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.2519664466381073
    2. ' tmp' → logprob: -1.5019664764404297
    3. 'px' → logprob: -11.00196647644043
    4. ' px' → logprob: -11.50196647644043
    5. '	tmp' → logprob: -12.62696647644043
    6. '(tmp' → logprob: -12.75196647644043
    7. '$tmp' → logprob: -13.37696647644043
    8. ' ' → logprob: -14.25196647644043
    9. '/tmp' → logprob: -14.62696647644043
    10. '   ' → logprob: -14.75196647644043

Token 649: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.5759519934654236
    2. ' >' → logprob: -0.8259519934654236
    3. ' ' → logprob: -11.57595157623291
    4. '   ' → logprob: -13.07595157623291
    5. '  ' → logprob: -15.70095157623291
    6. ' ' → logprob: -15.82595157623291
    7. '>x' → logprob: -15.82595157623291
    8. '>
' → logprob: -16.075952529907227
    9. ' >
' → logprob: -16.450952529907227
    10. 'max' → logprob: -16.575952529907227

Token 650: ' px' (ID: 27003)
  Prédit: ' px'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' px' → logprob: -0.10021346807479858
    2. 'px' → logprob: -2.3502135276794434
    3. '(px' → logprob: -12.350213050842285
    4. 'tmp' → logprob: -14.100213050842285
    5. ' tmp' → logprob: -14.975213050842285
    6. ' py' → logprob: -15.100213050842285
    7. '_px' → logprob: -15.100213050842285
    8. 'x' → logprob: -15.975213050842285
    9. 'py' → logprob: -15.975213050842285
    10. 'Px' → logprob: -16.4752140045166

Token 651: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.0280383548888494e-06
    2. 'ax' → logprob: -14.125000953674316
    3. ' max' → logprob: -16.375001907348633
    4. 'x' → logprob: -17.000001907348633
    5. 'tmp' → logprob: -17.250001907348633
    6. 'min' → logprob: -17.750001907348633
    7. '   ' → logprob: -17.750001907348633
    8. '_max' → logprob: -18.250001907348633
    9. 'imax' → logprob: -18.500001907348633
    10. 'amax' → logprob: -18.875001907348633

Token 652: ':' (ID: 25)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1823214590549469
    2. ' =' → logprob: -1.8073214292526245
    3. ':' → logprob: -6.557321548461914
    4. ' tmp' → logprob: -6.807321548461914
    5. 'tmp' → logprob: -10.557321548461914
    6. '>' → logprob: -11.807321548461914
    7. '   ' → logprob: -12.307321548461914
    8. ' ' → logprob: -13.182321548461914
    9. '(tmp' → logprob: -13.307321548461914
    10. ':
' → logprob: -13.557321548461914

Token 653: ' px' (ID: 27003)
  Prédit: ' tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tmp' → logprob: -0.0019287518225610256
    2. 'tmp' → logprob: -6.251928806304932
    3. '(tmp' → logprob: -17.001928329467773
    4. '	tmp' → logprob: -17.001928329467773
    5. '/tmp' → logprob: -17.376928329467773
    6. '[tmp' → logprob: -18.376928329467773
    7. '       ' → logprob: -18.626928329467773
    8. '           ' → logprob: -19.126928329467773
    9. '$tmp' → logprob: -19.126928329467773
    10. ',tmp' → logprob: -19.251928329467773

Token 654: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.00020401719666551799
    2. 'ax' → logprob: -8.500204086303711
    3. 'tmp' → logprob: -16.00020408630371
    4. 'x' → logprob: -16.37520408630371
    5. '   ' → logprob: -16.75020408630371
    6. 'min' → logprob: -16.75020408630371
    7. '_max' → logprob: -16.87520408630371
    8. ' max' → logprob: -17.00020408630371
    9. '```' → logprob: -17.75020408630371
    10. 'amax' → logprob: -17.87520408630371

Token 655: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12692862749099731
    2. ' =' → logprob: -2.1269285678863525
    3. '=max' → logprob: -15.501928329467773
    4. ' ' → logprob: -15.876928329467773
    5. '   ' → logprob: -16.251928329467773
    6. '=
' → logprob: -16.626928329467773
    7. 'tmp' → logprob: -18.001928329467773
    8. '       ' → logprob: -18.501928329467773
    9. ' =
' → logprob: -18.626928329467773
    10. ' tmp' → logprob: -19.001928329467773

Token 656: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.3132671117782593
    2. ' tmp' → logprob: -1.3132671117782593
    3. '	tmp' → logprob: -13.31326675415039
    4. '(tmp' → logprob: -13.43826675415039
    5. '/tmp' → logprob: -13.43826675415039
    6. '$tmp' → logprob: -15.06326675415039
    7. '[tmp' → logprob: -15.18826675415039
    8. '.tmp' → logprob: -16.56326675415039
    9. '_tmp' → logprob: -16.68826675415039
    10. ',tmp' → logprob: -17.43826675415039

Token 657: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015470639802515507
    2. '
' → logprob: -4.890470504760742
    3. 'py' → logprob: -5.390470504760742
    4. '    
' → logprob: -6.015470504760742
    5. ' py' → logprob: -8.015470504760742
    6. '        
' → logprob: -9.140470504760742
    7. '  
' → logprob: -9.640470504760742
    8. '```' → logprob: -10.015470504760742
    9. '<|end|>' → logprob: -10.265470504760742
    10. '(py' → logprob: -10.515470504760742

Token 658: '   ' (ID: 271)
  Prédit: 'py'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'py' → logprob: -0.02790953405201435
    2. '   ' → logprob: -3.652909517288208
    3. '```' → logprob: -7.652909755706787
    4. '    
' → logprob: -7.777909755706787
    5. 'p' → logprob: -8.527909278869629
    6. 'import' → logprob: -8.652909278869629
    7. 'Py' → logprob: -9.777909278869629
    8. ' py' → logprob: -10.027909278869629
    9. 'ppy' → logprob: -10.277909278869629
    10. '
' → logprob: -10.277909278869629

Token 659: ' py' (ID: 13104)
  Prédit: 'py'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'py' (adapté à ' py') → logprob: -0.002387302927672863
    2. 'p' → logprob: -6.752387523651123
    3. '   ' → logprob: -7.752387523651123
    4. 'import' → logprob: -7.752387523651123
    5. '    
' → logprob: -9.377387046813965
    6. 'px' → logprob: -9.377387046813965
    7. ' py' → logprob: -9.627387046813965
    8. '
' → logprob: -10.502387046813965
    9. 'python' → logprob: -11.502387046813965
    10. '#' → logprob: -11.627387046813965

Token 660: 'min' (ID: 1493)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0009119403548538685
    2. 'min' → logprob: -7.000911712646484
    3. '=' → logprob: -14.750911712646484
    4. ' =' → logprob: -16.250911712646484
    5. ' max' → logprob: -18.125911712646484
    6. '_max' → logprob: -18.875911712646484
    7. 'ax' → logprob: -19.375911712646484
    8. '   ' → logprob: -20.250911712646484
    9. '=max' → logprob: -20.750911712646484
    10. 'x' → logprob: -21.000911712646484

Token 661: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889044284820557
    2. '=' → logprob: -2.578890323638916
    3. ' ' → logprob: -14.328890800476074
    4. ',' → logprob: -17.078889846801758
    5. ' ' → logprob: -17.828889846801758
    6. '   ' → logprob: -18.453889846801758
    7. '=None' → logprob: -18.578889846801758
    8. '＝' → logprob: -18.828889846801758
    9. ' =
' → logprob: -18.953889846801758
    10. '  ' → logprob: -19.078889846801758

Token 662: ' float' (ID: 4428)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.06197138875722885
    2. ' math' → logprob: -2.811971426010132
    3. 'float' → logprob: -12.561971664428711
    4. '(math' → logprob: -15.686971664428711
    5. ' float' → logprob: -17.43697166442871
    6. 'inf' → logprob: -17.56197166442871
    7. '.math' → logprob: -18.56197166442871
    8. '_math' → logprob: -20.31197166442871
    9. '   ' → logprob: -20.93697166442871
    10. '/math' → logprob: -21.18697166442871

Token 663: '("+' (ID: 68159)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.5134724378585815
    2. '"' → logprob: -1.2634724378585815
    3. '('' → logprob: -2.138472557067871
    4. 'inf' → logprob: -8.138472557067871
    5. '"in' → logprob: -8.138472557067871
    6. ''' → logprob: -8.513472557067871
    7. ''in' → logprob: -9.388472557067871
    8. '(math' → logprob: -9.763472557067871
    9. 'math' → logprob: -10.263472557067871
    10. '"+' → logprob: -10.638472557067871

Token 664: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.00043102685594931245
    2. 'math' → logprob: -7.750431060791016
    3. '"' → logprob: -15.875431060791016
    4. '-inf' → logprob: -16.000431060791016
    5. ' inf' → logprob: -17.750431060791016
    6. '_inf' → logprob: -18.375431060791016
    7. '1' → logprob: -19.250431060791016
    8. 'Inf' → logprob: -19.625431060791016
    9. '3' → logprob: -19.625431060791016
    10. '
' → logprob: -19.875431060791016

Token 665: '")
' (ID: 1896)
  Prédit: '")
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.06509771198034286
    2. '")' → logprob: -3.1900978088378906
    3. ')
' → logprob: -4.190097808837891
    4. '   ' → logprob: -5.190097808837891
    5. ')' → logprob: -6.815097808837891
    6. '")
' → logprob: -11.56509780883789
    7. 'py' → logprob: -11.81509780883789
    8. ')")
' → logprob: -12.06509780883789
    9. '')
' → logprob: -12.19009780883789
    10. ' ")
' → logprob: -12.69009780883789

Token 666: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0031188949942588806
    2. 'py' → logprob: -5.878118991851807
    3. '<|end|>' → logprob: -8.878118515014648
    4. 'for' → logprob: -9.003118515014648
    5. '
' → logprob: -10.878118515014648
    6. ' for' → logprob: -11.878118515014648
    7. '<|end|>' → logprob: -12.003118515014648
    8. ' py' → logprob: -12.128118515014648
    9. '.py' → logprob: -12.503118515014648
    10. 'Py' → logprob: -13.503118515014648

Token 667: ' py' (ID: 13104)
  Prédit: 'py'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'py' (adapté à ' py') → logprob: -1.4378848391061183e-05
    2. ' py' → logprob: -11.500014305114746
    3. '   ' → logprob: -13.000014305114746
    4. '.py' → logprob: -14.625014305114746
    5. 'ply' → logprob: -15.000014305114746
    6. '_py' → logprob: -15.125014305114746
    7. '(py' → logprob: -15.125014305114746
    8. 'ypy' → logprob: -15.625014305114746
    9. 'ppy' → logprob: -15.875014305114746
    10. 'for' → logprob: -16.500015258789062

Token 668: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -2.5776860184123507e-06
    2. 'min' → logprob: -13.50000286102295
    3. '=' → logprob: -14.12500286102295
    4. ' =' → logprob: -15.37500286102295
    5. ' max' → logprob: -16.125001907348633
    6. '_max' → logprob: -16.125001907348633
    7. '=max' → logprob: -17.125001907348633
    8. '
' → logprob: -18.125001907348633
    9. '   ' → logprob: -18.250001907348633
    10. '	max' → logprob: -18.500001907348633

Token 669: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06197015196084976
    2. ' =' → logprob: -2.8119702339172363
    3. '=float' → logprob: -12.936969757080078
    4. ' ' → logprob: -17.686969757080078
    5. '=
' → logprob: -18.936969757080078
    6. '＝' → logprob: -19.311969757080078
    7. '   ' → logprob: -19.311969757080078
    8. ')' → logprob: -19.311969757080078
    9. 'float' → logprob: -19.436969757080078
    10. '=-' → logprob: -19.811969757080078

Token 670: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.058409158140420914
    2. '-f' → logprob: -3.0584092140197754
    3. ' float' → logprob: -4.683409214019775
    4. '-' → logprob: -7.933409214019775
    5. '=float' → logprob: -9.933408737182617
    6. ' -' → logprob: -10.183408737182617
    7. '	float' → logprob: -10.183408737182617
    8. '   ' → logprob: -12.058408737182617
    9. '-inf' → logprob: -12.183408737182617
    10. '<float' → logprob: -12.308408737182617

Token 671: '("-' (ID: 27133)
  Prédit: '("+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("+' → logprob: -0.00925459060817957
    2. '"+' → logprob: -4.759254455566406
    3. '("-' → logprob: -7.509254455566406
    4. '("' → logprob: -9.759254455566406
    5. '["+' → logprob: -11.259254455566406
    6. '('+' → logprob: -11.509254455566406
    7. '(' → logprob: -12.634254455566406
    8. 'float' → logprob: -12.884254455566406
    9. '(+' → logprob: -13.759254455566406
    10. '+' → logprob: -13.884254455566406

Token 672: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.008672838099300861
    2. 'math' → logprob: -4.758672714233398
    3. 'float' → logprob: -9.758672714233398
    4. '-inf' → logprob: -15.383672714233398
    5. '_inf' → logprob: -17.1336727142334
    6. ' math' → logprob: -17.5086727142334
    7. ' inf' → logprob: -17.5086727142334
    8. '.inf' → logprob: -17.6336727142334
    9. '1' → logprob: -17.7586727142334
    10. '(math' → logprob: -18.0086727142334

Token 673: '")
' (ID: 1896)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.8711212873458862
    2. '   ' → logprob: -1.3711212873458862
    3. ')' → logprob: -1.7461212873458862
    4. 'for' → logprob: -1.9961212873458862
    5. ' for' → logprob: -4.121121406555176
    6. '")' → logprob: -7.746121406555176
    7. '")
' → logprob: -8.371121406555176
    8. '
' → logprob: -8.871121406555176
    9. '<|end|>' → logprob: -8.871121406555176
    10. '):
' → logprob: -9.746121406555176

Token 674: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0005089493934065104
    2. ' for' → logprob: -7.625508785247803
    3. '   ' → logprob: -10.875509262084961
    4. '<|end|>' → logprob: -13.250509262084961
    5. '	for' → logprob: -15.125509262084961
    6. '```' → logprob: -17.00050926208496
    7. '
' → logprob: -17.87550926208496
    8. '    
' → logprob: -18.50050926208496
    9. ')' → logprob: -18.62550926208496
    10. ' ' → logprob: -19.12550926208496

Token 675: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -2.8325677703833207e-05
    2. ' for' → logprob: -10.500028610229492
    3. '   ' → logprob: -14.125028610229492
    4. '
' → logprob: -17.500028610229492
    5. '	for' → logprob: -17.500028610229492
    6. '<|end|>' → logprob: -17.500028610229492
    7. ')' → logprob: -18.125028610229492
    8. '```' → logprob: -18.750028610229492
    9. '    
' → logprob: -18.750028610229492
    10. 'For' → logprob: -18.875028610229492

Token 676: ' yy' (ID: 31344)
  Prédit: 'yy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yy' → logprob: -6.504040356958285e-05
    2. ' yy' → logprob: -9.750064849853516
    3. 'py' → logprob: -13.250064849853516
    4. 'y' → logprob: -13.500064849853516
    5. 'xx' → logprob: -13.500064849853516
    6. 'yyy' → logprob: -14.125064849853516
    7. 'xy' → logprob: -14.250064849853516
    8. 'pp' → logprob: -15.000064849853516
    9. '	yy' → logprob: -15.750064849853516
    10. 'zz' → logprob: -16.375064849853516

Token 677: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008619419299066067
    2. 'in' → logprob: -4.75861930847168
    3. 'import' → logprob: -13.50861930847168
    4. ' ' → logprob: -13.75861930847168
    5. '   ' → logprob: -14.63361930847168
    6. '[' → logprob: -15.13361930847168
    7. ',' → logprob: -15.25861930847168
    8. '  ' → logprob: -15.88361930847168
    9. '	in' → logprob: -15.88361930847168
    10. 'In' → logprob: -15.88361930847168

Token 678: ' lst' (ID: 33384)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.00012976066500414163
    2. ' lst' → logprob: -9.000129699707031
    3. '(lst' → logprob: -12.125129699707031
    4. 'Y' → logprob: -14.500129699707031
    5. 'list' → logprob: -15.750129699707031
    6. 'yt' → logprob: -16.62512969970703
    7. ' ' → logprob: -16.87512969970703
    8. 'yy' → logprob: -17.12512969970703
    9. '   ' → logprob: -17.12512969970703
    10. 'yll' → logprob: -17.25012969970703

Token 679: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0031905474606901407
    2. '1' → logprob: -5.753190517425537
    3. '```' → logprob: -12.003190994262695
    4. '   ' → logprob: -12.628190994262695
    5. '[' → logprob: -13.503190994262695
    6. '
' → logprob: -14.878190994262695
    7. '(' → logprob: -15.378190994262695
    8. '``' → logprob: -16.065690994262695
    9. '{
' → logprob: -16.253190994262695
    10. '       ' → logprob: -16.315690994262695

Token 680: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2799149751663208
    2. ':' → logprob: -1.5299149751663208
    3. '       ' → logprob: -4.154914855957031
    4. ' in' → logprob: -4.654914855957031
    5. '   ' → logprob: -6.529914855957031
    6. '):
' → logprob: -8.154914855957031
    7. ',' → logprob: -8.904914855957031
    8. '[' → logprob: -9.029914855957031
    9. '=' → logprob: -9.154914855957031
    10. 'in' → logprob: -10.154914855957031

Token 681: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007567389984615147
    2. '   ' → logprob: -7.625756740570068
    3. 'tmp' → logprob: -8.37575626373291
    4. ' tmp' → logprob: -10.50075626373291
    5. '```' → logprob: -12.00075626373291
    6. '	tmp' → logprob: -13.37575626373291
    7. '     ' → logprob: -14.00075626373291
    8. '           ' → logprob: -14.25075626373291
    9. '      ' → logprob: -14.87575626373291
    10. ' ' → logprob: -15.50075626373291

Token 682: ' pp' (ID: 25476)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.0009392123320139945
    2. ' tmp' → logprob: -7.00093936920166
    3. '   ' → logprob: -10.62593936920166
    4. 'temp' → logprob: -13.50093936920166
    5. '       ' → logprob: -13.75093936920166
    6. '	tmp' → logprob: -14.50093936920166
    7. '
' → logprob: -16.250938415527344
    8. '```' → logprob: -16.625938415527344
    9. ' ' → logprob: -17.000938415527344
    10. '    
' → logprob: -17.125938415527344

Token 683: ' =' (ID: 314)
  Prédit: 'mp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mp' → logprob: -0.7320594191551208
    2. 'tmp' → logprob: -0.9820594191551208
    3. ' =' → logprob: -2.1070594787597656
    4. '=' → logprob: -4.357059478759766
    5. 'max' → logprob: -5.607059478759766
    6. 'py' → logprob: -5.732059478759766
    7. 'min' → logprob: -6.857059478759766
    8. 'temp' → logprob: -7.482059478759766
    9. 'emp' → logprob: -8.107059478759766
    10. 'm' → logprob: -8.107059478759766

Token 684: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.00018006093159783632
    2. ' pos' → logprob: -8.6251802444458
    3. 'py' → logprob: -15.5001802444458
    4. '(pos' → logprob: -15.7501802444458
    5. '	pos' → logprob: -17.375179290771484
    6. 'float' → logprob: -18.000179290771484
    7. 'pp' → logprob: -18.750179290771484
    8. 'position' → logprob: -18.750179290771484
    9. 'abs' → logprob: -18.750179290771484
    10. '   ' → logprob: -18.875179290771484

Token 685: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -9.729906196298543e-06
    2. 'yy' → logprob: -11.625009536743164
    3. ' (' → logprob: -14.625009536743164
    4. '	yy' → logprob: -15.125009536743164
    5. '(y' → logprob: -18.125009536743164
    6. '```' → logprob: -18.500009536743164
    7. '.yy' → logprob: -18.625009536743164
    8. '((' → logprob: -19.750009536743164
    9. ' yy' → logprob: -19.750009536743164
    10. '(xx' → logprob: -20.750009536743164

Token 686: 'yy' (ID: 7496)
  Prédit: 'yy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yy' → logprob: -3.531315314830863e-06
    2. ' yy' → logprob: -13.125003814697266
    3. '	yy' → logprob: -14.000003814697266
    4. '(' → logprob: -14.250003814697266
    5. '.yy' → logprob: -17.375003814697266
    6. '   ' → logprob: -19.625003814697266
    7. 'yyy' → logprob: -20.125003814697266
    8. '```' → logprob: -20.750003814697266
    9. '
' → logprob: -20.875003814697266
    10. '  ' → logprob: -21.125003814697266

Token 687: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004311460361350328
    2. ' ,' → logprob: -7.750431060791016
    3. ',
' → logprob: -15.875431060791016
    4. 'yy' → logprob: -16.625431060791016
    5. ',y' → logprob: -16.875431060791016
    6. ')' → logprob: -17.375431060791016
    7. ' ' → logprob: -17.625431060791016
    8. ' yy' → logprob: -17.875431060791016
    9. 'y' → logprob: -18.125431060791016
    10. '=' → logprob: -18.375431060791016

Token 688: ' tt' (ID: 34181)
  Prédit: 'tt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tt' → logprob: -0.0015691416338086128
    2. 'yy' → logprob: -6.5015692710876465
    3. ' tt' → logprob: -9.626568794250488
    4. ' yy' → logprob: -15.001568794250488
    5. '_tt' → logprob: -15.251568794250488
    6. '(tt' → logprob: -15.376568794250488
    7. '   ' → logprob: -17.626569747924805
    8. ' ' → logprob: -17.876569747924805
    9. '    ' → logprob: -18.001569747924805
    10. 'ttp' → logprob: -18.126569747924805

Token 689: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.12725766003131866
    2. ')' → logprob: -2.1272575855255127
    3. '       ' → logprob: -8.127257347106934
    4. ')
' → logprob: -10.877257347106934
    5. ' )
' → logprob: -12.252257347106934
    6. '   ' → logprob: -12.627257347106934
    7. ')

' → logprob: -13.002257347106934
    8. ',' → logprob: -14.127257347106934
    9. '           ' → logprob: -14.252257347106934
    10. '):
' → logprob: -14.752257347106934

Token 690: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005372014362365007
    2. 'if' → logprob: -5.630372047424316
    3. ' if' → logprob: -6.380372047424316
    4. '   ' → logprob: -9.505372047424316
    5. '      ' → logprob: -14.880372047424316
    6. '     ' → logprob: -15.005372047424316
    7. '           ' → logprob: -15.255372047424316
    8. ' ' → logprob: -15.380372047424316
    9. '```' → logprob: -15.755372047424316
    10. '	if' → logprob: -16.00537109375

Token 691: ' py' (ID: 13104)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.014248942025005817
    2. '       ' → logprob: -4.514248847961426
    3. ' if' → logprob: -5.764248847961426
    4. '   ' → logprob: -9.764248847961426
    5. '```' → logprob: -15.264248847961426
    6. '	if' → logprob: -15.389248847961426
    7. '           ' → logprob: -16.014249801635742
    8. '      ' → logprob: -16.639249801635742
    9. ' ' → logprob: -16.764249801635742
    10. '     ' → logprob: -17.389249801635742

Token 692: 'min' (ID: 1493)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.014166101813316345
    2. 'min' → logprob: -4.264165878295898
    3. 'ax' → logprob: -13.264165878295898
    4. '_max' → logprob: -14.514165878295898
    5. ' max' → logprob: -16.0141658782959
    6. '=' → logprob: -16.6391658782959
    7. '	max' → logprob: -17.7641658782959
    8. 'amax' → logprob: -18.0141658782959
    9. 'in' → logprob: -18.1391658782959
    10. '   ' → logprob: -18.1391658782959

Token 693: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20141635835170746
    2. ' =' → logprob: -1.7014163732528687
    3. '>' → logprob: -13.201416015625
    4. '   ' → logprob: -14.826416015625
    5. ' ' → logprob: -15.576416015625
    6. 'if' → logprob: -15.951416015625
    7. '=
' → logprob: -16.326416015625
    8. ' >' → logprob: -16.451416015625
    9. '=min' → logprob: -16.701416015625
    10. '=float' → logprob: -16.826416015625

Token 694: ' pp' (ID: 25476)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.3159603774547577
    2. ' min' → logprob: -1.31596040725708
    3. 'pp' → logprob: -5.94096040725708
    4. ' pp' → logprob: -9.815959930419922
    5. 'py' → logprob: -12.315959930419922
    6. 'max' → logprob: -13.440959930419922
    7. 'float' → logprob: -13.690959930419922
    8. '	min' → logprob: -13.940959930419922
    9. '(min' → logprob: -13.940959930419922
    10. 'ppy' → logprob: -14.565959930419922

Token 695: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3134784996509552
    2. ' if' → logprob: -1.3134784698486328
    3. 'min' → logprob: -9.063478469848633
    4. '   ' → logprob: -10.688478469848633
    5. 'py' → logprob: -10.813478469848633
    6. ',' → logprob: -11.188478469848633
    7. '
' → logprob: -11.188478469848633
    8. '<' → logprob: -11.563478469848633
    9. '       ' → logprob: -12.063478469848633
    10. ' py' → logprob: -12.313478469848633

Token 696: ' pp' (ID: 25476)
  Prédit: 'pp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pp' → logprob: -0.013208705931901932
    2. 'py' → logprob: -4.638208866119385
    3. ' pp' → logprob: -5.763208866119385
    4. ' py' → logprob: -9.138208389282227
    5. 'ppy' → logprob: -9.263208389282227
    6. '(pp' → logprob: -9.388208389282227
    7. '	pp' → logprob: -11.888208389282227
    8. '(py' → logprob: -12.763208389282227
    9. '   ' → logprob: -13.138208389282227
    10. '(' → logprob: -13.950708389282227

Token 697: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.11308902502059937
    2. ' <' → logprob: -2.238089084625244
    3. '<p' → logprob: -8.738088607788086
    4. ' py' → logprob: -9.988088607788086
    5. 'py' → logprob: -10.363088607788086
    6. '<ll' → logprob: -12.113088607788086
    7. 'if' → logprob: -12.363088607788086
    8. ' ' → logprob: -12.988088607788086
    9. ' if' → logprob: -13.113088607788086
    10. 'import' → logprob: -13.738088607788086

Token 698: ' py' (ID: 13104)
  Prédit: 'py'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'py' → logprob: -0.00020354038861114532
    2. ' py' → logprob: -8.500203132629395
    3. '(py' → logprob: -17.00020408630371
    4. '_py' → logprob: -18.87520408630371
    5. '   ' → logprob: -19.00020408630371
    6. ' ' → logprob: -19.50020408630371
    7. '
' → logprob: -19.87520408630371
    8. '       ' → logprob: -20.00020408630371
    9. '           ' → logprob: -20.37520408630371
    10. 'y' → logprob: -20.62520408630371

Token 699: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.029789719730615616
    2. 'max' → logprob: -3.529789686203003
    3. 'py' → logprob: -10.154789924621582
    4. 'x' → logprob: -16.279788970947266
    5. 'y' → logprob: -16.654788970947266
    6. 'in' → logprob: -16.904788970947266
    7. 'ax' → logprob: -17.029788970947266
    8. '```' → logprob: -17.154788970947266
    9. '   ' → logprob: -17.529788970947266
    10. '
' → logprob: -18.154788970947266

Token 700: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.062077928334474564
    2. 'else' → logprob: -2.8120779991149902
    3. '       ' → logprob: -9.437077522277832
    4. 'py' → logprob: -10.937077522277832
    5. '   ' → logprob: -12.062077522277832
    6. '        ' → logprob: -12.812077522277832
    7. ' py' → logprob: -13.312077522277832
    8. '    ' → logprob: -14.437077522277832
    9. ' ' → logprob: -14.562077522277832
    10. '(py' → logprob: -14.812077522277832

Token 701: ' py' (ID: 13104)
  Prédit: 'py'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'py' → logprob: -0.0005543439765460789
    2. ' py' → logprob: -7.50055456161499
    3. '(py' → logprob: -14.125554084777832
    4. ' ' → logprob: -15.500554084777832
    5. '   ' → logprob: -15.500554084777832
    6. '_py' → logprob: -16.37555503845215
    7. '  ' → logprob: -17.87555503845215
    8. 'Py' → logprob: -18.25055503845215
    9. '
' → logprob: -18.25055503845215
    10. 'pytest' → logprob: -18.50055503845215

Token 702: 'min' (ID: 1493)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -4.3464544432936236e-05
    2. 'min' → logprob: -10.250043869018555
    3. 'ax' → logprob: -11.750043869018555
    4. ' max' → logprob: -15.875043869018555
    5. 'x' → logprob: -17.625043869018555
    6. '   ' → logprob: -17.625043869018555
    7. 'py' → logprob: -17.625043869018555
    8. '_max' → logprob: -17.875043869018555
    9. 'm' → logprob: -18.000043869018555
    10. '	max' → logprob: -19.125043869018555

Token 703: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7101547718048096
    2. '   ' → logprob: -1.0851547718048096
    3. 'py' → logprob: -1.8351547718048096
    4. ' py' → logprob: -5.0851545333862305
    5. '
' → logprob: -5.7101545333862305
    6. 'if' → logprob: -7.4601545333862305
    7. '.py' → logprob: -8.46015453338623
    8. '(py' → logprob: -8.46015453338623
    9. ' if' → logprob: -8.83515453338623
    10. ',' → logprob: -9.33515453338623

Token 704: '       ' (ID: 309)
  Prédit: 'py'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'py' → logprob: -0.0007456640596501529
    2. '   ' → logprob: -8.00074577331543
    3. ' py' → logprob: -8.12574577331543
    4. '       ' → logprob: -9.12574577331543
    5. '(py' → logprob: -12.75074577331543
    6. '```' → logprob: -14.25074577331543
    7. '.py' → logprob: -14.37574577331543
    8. '           ' → logprob: -14.75074577331543
    9. 'if' → logprob: -14.75074577331543
    10. '
' → logprob: -15.87574577331543

Token 705: ' py' (ID: 13104)
  Prédit: 'py'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'py' (adapté à ' py') → logprob: -0.00010986098641296849
    2. ' py' → logprob: -9.125109672546387
    3. '(py' → logprob: -14.750109672546387
    4. '       ' → logprob: -15.375109672546387
    5. 'if' → logprob: -15.875109672546387
    6. '   ' → logprob: -15.875109672546387
    7. '           ' → logprob: -18.250110626220703
    8. '
' → logprob: -18.875110626220703
    9. '.py' → logprob: -19.125110626220703
    10. 'y' → logprob: -19.125110626220703

Token 706: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -7.226628895296017e-06
    2. 'ax' → logprob: -11.875007629394531
    3. '=' → logprob: -15.625007629394531
    4. ' max' → logprob: -17.12500762939453
    5. ' =' → logprob: -17.62500762939453
    6. 'min' → logprob: -18.87500762939453
    7. '```' → logprob: -19.12500762939453
    8. 'if' → logprob: -19.25000762939453
    9. '   ' → logprob: -19.25000762939453
    10. '_max' → logprob: -19.37500762939453

Token 707: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38687241077423096
    2. ' =' → logprob: -1.136872410774231
    3. '   ' → logprob: -14.636872291564941
    4. ' ' → logprob: -15.386872291564941
    5. ' if' → logprob: -15.386872291564941
    6. 'if' → logprob: -16.136873245239258
    7. '<' → logprob: -16.636873245239258
    8. ' <' → logprob: -16.761873245239258
    9. '    ' → logprob: -16.886873245239258
    10. '  ' → logprob: -17.136873245239258

Token 708: ' pp' (ID: 25476)
  Prédit: 'pp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pp' → logprob: -0.0009387354948557913
    2. ' pp' → logprob: -7.000938892364502
    3. 'py' → logprob: -10.750938415527344
    4. 'ppy' → logprob: -12.125938415527344
    5. '	pp' → logprob: -15.750938415527344
    6. '(pp' → logprob: -15.875938415527344
    7. 'max' → logprob: -16.125938415527344
    8. ' py' → logprob: -17.125938415527344
    9. ' ' → logprob: -17.250938415527344
    10. 'p' → logprob: -18.250938415527344

Token 709: ' if' (ID: 538)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.036245595663785934
    2. ' =' → logprob: -3.661245584487915
    3. ' if' → logprob: -4.786245822906494
    4. 'if' → logprob: -6.661245822906494
    5. 'pp' → logprob: -8.536245346069336
    6. ' pp' → logprob: -10.911245346069336
    7. '           ' → logprob: -11.161245346069336
    8. ' ' → logprob: -11.411245346069336
    9. '   ' → logprob: -11.661245346069336
    10. 'ppy' → logprob: -12.536245346069336

Token 710: ' pp' (ID: 25476)
  Prédit: 'pp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pp' → logprob: -0.005978688597679138
    2. ' pp' → logprob: -5.255978584289551
    3. 'py' → logprob: -7.255978584289551
    4. 'ppy' → logprob: -10.50597858428955
    5. ' py' → logprob: -11.50597858428955
    6. '	pp' → logprob: -14.00597858428955
    7. '(pp' → logprob: -14.88097858428955
    8. '   ' → logprob: -16.755979537963867
    9. '_pp' → logprob: -17.255979537963867
    10. ' ' → logprob: -17.630979537963867

Token 711: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.39285916090011597
    2. ' >' → logprob: -1.1428592205047607
    3. 'py' → logprob: -5.267858982086182
    4. 'pp' → logprob: -7.517858982086182
    5. ' py' → logprob: -8.26785945892334
    6. 'ppy' → logprob: -11.64285945892334
    7. ' pp' → logprob: -12.89285945892334
    8. ' ' → logprob: -13.64285945892334
    9. '   ' → logprob: -14.26785945892334
    10. '       ' → logprob: -14.39285945892334

Token 712: ' py' (ID: 13104)
  Prédit: 'py'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'py' → logprob: -0.0005533903022296727
    2. ' py' → logprob: -7.500553607940674
    3. 'pp' → logprob: -15.375553131103516
    4. '(py' → logprob: -15.750553131103516
    5. '_py' → logprob: -18.125553131103516
    6. 'ppy' → logprob: -19.000553131103516
    7. 'yy' → logprob: -21.250553131103516
    8. 'Py' → logprob: -22.000553131103516
    9. '
' → logprob: -22.125553131103516
    10. 'pay' → logprob: -22.375553131103516

Token 713: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.5048530030981055e-06
    2. 'ax' → logprob: -13.500001907348633
    3. 'py' → logprob: -17.125001907348633
    4. 'ma' → logprob: -17.250001907348633
    5. '_max' → logprob: -17.875001907348633
    6. ' max' → logprob: -19.125001907348633
    7. 'amax' → logprob: -19.375001907348633
    8. 'm' → logprob: -20.375001907348633
    9. '```' → logprob: -20.625001907348633
    10. 'x' → logprob: -20.750001907348633

Token 714: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.3899054229259491
    2. ' else' → logprob: -1.1399054527282715
    3. '       ' → logprob: -6.5149054527282715
    4. 'py' → logprob: -6.5149054527282715
    5. ' py' → logprob: -10.514904975891113
    6. '        ' → logprob: -11.139904975891113
    7. '=' → logprob: -12.764904975891113
    8. 'y' → logprob: -12.889904975891113
    9. '           ' → logprob: -13.139904975891113
    10. '(py' → logprob: -13.139904975891113

Token 715: ' py' (ID: 13104)
  Prédit: 'py'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'py' → logprob: -0.00043853666284121573
    2. ' py' → logprob: -7.750438690185547
    3. 'pp' → logprob: -11.750438690185547
    4. '(py' → logprob: -17.125438690185547
    5. 'ppy' → logprob: -17.750438690185547
    6. '_py' → logprob: -19.125438690185547
    7. ' pp' → logprob: -19.375438690185547
    8. 'yy' → logprob: -19.750438690185547
    9. 'Py' → logprob: -21.000438690185547
    10. 'pay' → logprob: -22.625438690185547

Token 716: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.6286106983898208e-05
    2. 'ax' → logprob: -11.125016212463379
    3. 'py' → logprob: -14.000016212463379
    4. 'ma' → logprob: -15.375016212463379
    5. ' max' → logprob: -15.375016212463379
    6. '_max' → logprob: -16.875017166137695
    7. 'Max' → logprob: -17.000017166137695
    8. 'mac' → logprob: -17.375017166137695
    9. '```' → logprob: -17.500017166137695
    10. 'x' → logprob: -17.875017166137695

Token 717: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004158953088335693
    2. '
' → logprob: -9.250415802001953
    3. '    
' → logprob: -9.250415802001953
    4. 'area' → logprob: -9.500415802001953
    5. 'ans' → logprob: -9.875415802001953
    6. 'import' → logprob: -10.000415802001953
    7. '```' → logprob: -11.375415802001953
    8. 'width' → logprob: -12.125415802001953
    9. 'w' → logprob: -12.125415802001953
    10. 'diff' → logprob: -12.750415802001953

Token 718: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013874107040464878
    2. 'ans' → logprob: -4.388874053955078
    3. 'area' → logprob: -8.013874053955078
    4. 'import' → logprob: -8.763874053955078
    5. 'res' → logprob: -8.888874053955078
    6. 'diff' → logprob: -8.888874053955078
    7. '    
' → logprob: -9.388874053955078
    8. '
' → logprob: -9.513874053955078
    9. 'cur' → logprob: -9.638874053955078
    10. 'dx' → logprob: -9.888874053955078

Token 719: ' tmp' (ID: 8919)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47543537616729736
    2. 'ans' → logprob: -1.1004353761672974
    3. 'area' → logprob: -3.850435256958008
    4. 'diff' → logprob: -5.100435256958008
    5. 'w' → logprob: -5.850435256958008
    6. 's' → logprob: -6.225435256958008
    7. 'import' → logprob: -6.350435256958008
    8. 'dx' → logprob: -6.725435256958008
    9. 'd' → logprob: -6.850435256958008
    10. 'size' → logprob: -6.850435256958008

Token 720: 'ans' (ID: 616)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1202651709318161
    2. '=' → logprob: -2.245265245437622
    3. 'x' → logprob: -5.120265007019043
    4. '_x' → logprob: -7.495265007019043
    5. '_area' → logprob: -8.120265007019043
    6. 'w' → logprob: -8.245265007019043
    7. 'area' → logprob: -9.245265007019043
    8. '=
' → logprob: -10.370265007019043
    9. '_' → logprob: -10.495265007019043
    10. '2' → logprob: -10.995265007019043

Token 721: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018153101205825806
    2. '=' → logprob: -4.018153190612793
    3. ' ' → logprob: -13.143153190612793
    4. ' ' → logprob: -14.768153190612793
    5. ' =
' → logprob: -15.018153190612793
    6. '   ' → logprob: -15.643153190612793
    7. '=min' → logprob: -16.143152236938477
    8. ' +=' → logprob: -16.893152236938477
    9. '```' → logprob: -17.143152236938477
    10. '=max' → logprob: -17.268152236938477

Token 722: ' abs' (ID: 8443)
  Prédit: '(px'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(px' → logprob: -0.5514113306999207
    2. '(max' → logprob: -1.0514113903045654
    3. ' (' → logprob: -3.5514113903045654
    4. '(p' → logprob: -4.051411151885986
    5. 'max' → logprob: -4.176411151885986
    6. '(py' → logprob: -4.801411151885986
    7. '(abs' → logprob: -6.426411151885986
    8. ' max' → logprob: -7.176411151885986
    9. '(math' → logprob: -7.426411151885986
    10. '(x' → logprob: -7.926411151885986

Token 723: '(p' (ID: 2407)
  Prédit: '(px'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(px' → logprob: -0.0029065124690532684
    2. '(p' → logprob: -6.252906322479248
    3. '((' → logprob: -7.252906322479248
    4. '(py' → logprob: -8.252906799316406
    5. 'px' → logprob: -12.377906799316406
    6. '(' → logprob: -12.752906799316406
    7. '(x' → logprob: -14.502906799316406
    8. '(max' → logprob: -14.877906799316406
    9. ':px' → logprob: -15.752906799316406
    10. ' px' → logprob: -15.877906799316406

Token 724: 'xmin' (ID: 165833)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.059243928641080856
    2. '(px' → logprob: -2.93424391746521
    3. '(x' → logprob: -5.809244155883789
    4. 'px' → logprob: -7.434244155883789
    5. '(py' → logprob: -7.809244155883789
    6. 'max' → logprob: -8.934244155883789
    7. '(p' → logprob: -9.184244155883789
    8. '(' → logprob: -10.684244155883789
    9. '(ax' → logprob: -11.059244155883789
    10. '(max' → logprob: -11.184244155883789

Token 725: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.474624902009964
    2. '-' → logprob: -0.9746248722076416
    3. '-p' → logprob: -7.599625110626221
    4. ' ' → logprob: -10.224624633789062
    5. '   ' → logprob: -12.974624633789062
    6. '-t' → logprob: -13.224624633789062
    7. '-python' → logprob: -13.349624633789062
    8. ' ' → logprob: -13.974624633789062
    9. '_py' → logprob: -14.349624633789062
    10. '  ' → logprob: -14.349624633789062

Token 726: ' px' (ID: 27003)
  Prédit: 'px'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'px' → logprob: -0.0009920800803229213
    2. 'py' → logprob: -7.000992298126221
    3. ' px' → logprob: -10.125991821289062
    4. '(px' → logprob: -10.125991821289062
    5. ' py' → logprob: -15.500991821289062
    6. '(py' → logprob: -16.500991821289062
    7. 'p' → logprob: -16.625991821289062
    8. '   ' → logprob: -17.000991821289062
    9. 'x' → logprob: -17.000991821289062
    10. ':px' → logprob: -17.250991821289062

Token 727: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -6.885492621222511e-05
    2. 'ax' → logprob: -9.625068664550781
    3. 'x' → logprob: -12.875068664550781
    4. ' max' → logprob: -16.12506866455078
    5. '_max' → logprob: -17.50006866455078
    6. 'Max' → logprob: -18.37506866455078
    7. 'amax' → logprob: -18.75006866455078
    8. 'maks' → logprob: -18.87506866455078
    9. 'mx' → logprob: -19.12506866455078
    10. 'ma' → logprob: -19.12506866455078

Token 728: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1262112259864807
    2. ' +' → logprob: -2.251211166381836
    3. '+' → logprob: -4.876211166381836
    4. ')+' → logprob: -5.376211166381836
    5. ' )' → logprob: -7.001211166381836
    6. '   ' → logprob: -9.751211166381836
    7. ')*' → logprob: -10.376211166381836
    8. ' ' → logprob: -10.876211166381836
    9. ')
' → logprob: -12.251211166381836
    10. '+)' → logprob: -12.251211166381836

Token 729: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.3515218198299408
    2. '*' → logprob: -1.2265218496322632
    3. '   ' → logprob: -6.601521968841553
    4. ' +' → logprob: -6.976521968841553
    5. '+' → logprob: -7.726521968841553
    6. 'tmp' → logprob: -8.351521492004395
    7. ' ' → logprob: -10.601521492004395
    8. ' ' → logprob: -10.726521492004395
    9. ')' → logprob: -11.851521492004395
    10. ' tmp' → logprob: -11.851521492004395

Token 730: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.0012673746095970273
    2. ' abs' → logprob: -6.751267433166504
    3. '(abs' → logprob: -9.251267433166504
    4. 'max' → logprob: -13.626267433166504
    5. '.abs' → logprob: -18.501266479492188
    6. ' max' → logprob: -18.876266479492188
    7. '   ' → logprob: -19.001266479492188
    8. '_abs' → logprob: -19.626266479492188
    9. '(max' → logprob: -19.876266479492188
    10. ' ' → logprob: -19.876266479492188

Token 731: '(py' (ID: 139986)
  Prédit: '(py'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(py' → logprob: -1.0280383548888494e-06
    2. 'py' → logprob: -14.750000953674316
    3. '(Py' → logprob: -14.875000953674316
    4. '_py' → logprob: -16.375001907348633
    5. '(' → logprob: -16.750001907348633
    6. '(p' → logprob: -17.250001907348633
    7. ' (' → logprob: -18.000001907348633
    8. ' py' → logprob: -18.625001907348633
    9. 'Py' → logprob: -19.250001907348633
    10. '.py' → logprob: -20.375001907348633

Token 732: 'min' (ID: 1493)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0019286326132714748
    2. 'min' → logprob: -6.251928806304932
    3. ' max' → logprob: -18.376928329467773
    4. '_max' → logprob: -19.501928329467773
    5. '   ' → logprob: -22.501928329467773
    6. '(max' → logprob: -23.126928329467773
    7. '	max' → logprob: -24.376928329467773
    8. 'ma' → logprob: -24.501928329467773
    9. ' min' → logprob: -24.501928329467773
    10. '_min' → logprob: -24.501928329467773

Token 733: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.03366102650761604
    2. '-' → logprob: -3.408661127090454
    3. ' ' → logprob: -11.658660888671875
    4. '-p' → logprob: -12.658660888671875
    5. '   ' → logprob: -13.658660888671875
    6. ' ' → logprob: -14.533660888671875
    7. '  ' → logprob: -14.908660888671875
    8. ' -
' → logprob: -15.158660888671875
    9. 'py' → logprob: -15.283660888671875
    10. '_py' → logprob: -15.533660888671875

Token 734: ' py' (ID: 13104)
  Prédit: 'py'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'py' → logprob: -7.874882430769503e-05
    2. ' py' → logprob: -9.500079154968262
    3. '(py' → logprob: -12.500079154968262
    4. '_py' → logprob: -16.250078201293945
    5. 'Py' → logprob: -16.875078201293945
    6. '   ' → logprob: -19.000078201293945
    7. '.py' → logprob: -19.000078201293945
    8. 'p' → logprob: -19.625078201293945
    9. 'pytest' → logprob: -20.000078201293945
    10. ' ' → logprob: -20.500078201293945

Token 735: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -4.320199877838604e-07
    2. 'ax' → logprob: -14.875
    3. ' max' → logprob: -19.0
    4. '_max' → logprob: -19.125
    5. 'min' → logprob: -20.25
    6. 'Max' → logprob: -21.375
    7. 'x' → logprob: -21.625
    8. 'amax' → logprob: -21.875
    9. '	max' → logprob: -22.0
    10. 'ma' → logprob: -22.0

Token 736: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06351976096630096
    2. '   ' → logprob: -2.9385197162628174
    3. ')
' → logprob: -5.1885199546813965
    4. '<|end|>' → logprob: -6.6885199546813965
    5. 'if' → logprob: -7.0635199546813965
    6. ' if' → logprob: -8.063519477844238
    7. '
' → logprob: -8.563519477844238
    8. ' )' → logprob: -10.188519477844238
    9. ',' → logprob: -10.313519477844238
    10. 'tmp' → logprob: -10.438519477844238

Token 737: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6192979216575623
    2. 'ans' → logprob: -1.244297981262207
    3. 'if' → logprob: -1.994297981262207
    4. ' if' → logprob: -3.369297981262207
    5. '
' → logprob: -6.369297981262207
    6. ' ans' → logprob: -7.119297981262207
    7. '	ans' → logprob: -8.619297981262207
    8. '```' → logprob: -9.244297981262207
    9. 'answer' → logprob: -9.744297981262207
    10. '(ans' → logprob: -10.494297981262207

Token 738: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.42592287063598633
    2. 'ans' → logprob: -1.1759228706359863
    3. '   ' → logprob: -3.4259228706359863
    4. ' if' → logprob: -5.175922870635986
    5. ' ans' → logprob: -9.425922393798828
    6. 'answer' → logprob: -11.550922393798828
    7. '```' → logprob: -11.550922393798828
    8. '	ans' → logprob: -11.800922393798828
    9. '	if' → logprob: -12.550922393798828
    10. '(ans' → logprob: -12.550922393798828

Token 739: ' ans' (ID: 3345)
  Prédit: ' tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tmp' → logprob: -0.5759723782539368
    2. 'tmp' → logprob: -0.8259723782539368
    3. 'ans' → logprob: -11.200972557067871
    4. ' ans' → logprob: -11.700972557067871
    5. '(tmp' → logprob: -12.075972557067871
    6. '	tmp' → logprob: -13.075972557067871
    7. '   ' → logprob: -13.700972557067871
    8. '$tmp' → logprob: -14.575972557067871
    9. ' ' → logprob: -14.950972557067871
    10. '/tmp' → logprob: -15.075972557067871

Token 740: ' >=' (ID: 5064)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.054886456578969955
    2. '>' → logprob: -2.9298863410949707
    3. ' ' → logprob: -13.179886817932129
    4. '   ' → logprob: -13.804886817932129
    5. '  ' → logprob: -15.179886817932129
    6. ' >
' → logprob: -16.179885864257812
    7. '=' → logprob: -16.304885864257812
    8. 'tmp' → logprob: -16.429885864257812
    9. '>tag' → logprob: -16.554885864257812
    10. ' =' → logprob: -16.679885864257812

Token 741: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.10021217912435532
    2. ' tmp' → logprob: -2.3502120971679688
    3. '   ' → logprob: -13.725212097167969
    4. '(tmp' → logprob: -13.975212097167969
    5. '/tmp' → logprob: -14.100212097167969
    6. '	tmp' → logprob: -14.225212097167969
    7. ' ' → logprob: -14.600212097167969
    8. '$tmp' → logprob: -14.725212097167969
    9. '_tmp' → logprob: -14.975212097167969
    10. '0' → logprob: -15.100212097167969

Token 742: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -7.465036105713807e-06
    2. 'tmp' → logprob: -13.125007629394531
    3. 'and' → logprob: -13.625007629394531
    4. 'an' → logprob: -13.875007629394531
    5. ' ans' → logprob: -14.125007629394531
    6. '_ans' → logprob: -14.125007629394531
    7. '   ' → logprob: -14.625007629394531
    8. 'anst' → logprob: -14.625007629394531
    9. '(ans' → logprob: -15.625007629394531
    10. '
' → logprob: -16.37500762939453

Token 743: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16271978616714478
    2. ':
' → logprob: -1.9127197265625
    3. '   ' → logprob: -6.7877197265625
    4. '       ' → logprob: -7.2877197265625
    5. ' ans' → logprob: -8.5377197265625
    6. ' =' → logprob: -8.7877197265625
    7. ' and' → logprob: -9.7877197265625
    8. '):
' → logprob: -9.9127197265625
    9. ' :
' → logprob: -10.0377197265625
    10. ' :' → logprob: -10.0377197265625

Token 744: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6786226034164429
    2. ' ans' → logprob: -1.0536226034164429
    3. 'ans' → logprob: -2.4286227226257324
    4. '   ' → logprob: -2.9286227226257324
    5. '	ans' → logprob: -6.428622722625732
    6. '```' → logprob: -7.428622722625732
    7. '(ans' → logprob: -9.553622245788574
    8. '           ' → logprob: -10.178622245788574
    9. '_ans' → logprob: -11.303622245788574
    10. '<|end|>' → logprob: -11.553622245788574

Token 745: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.0009190816199406981
    2. ' ans' → logprob: -7.000918865203857
    3. '   ' → logprob: -12.250919342041016
    4. '       ' → logprob: -13.375919342041016
    5. '	ans' → logprob: -14.250919342041016
    6. '(ans' → logprob: -14.875919342041016
    7. '
' → logprob: -16.250919342041016
    8. '           ' → logprob: -16.500919342041016
    9. '```' → logprob: -16.500919342041016
    10. 'answer' → logprob: -17.500919342041016

Token 746: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.693147599697113
    2. ' =' → logprob: -0.693147599697113
    3. '   ' → logprob: -15.943147659301758
    4. ' ' → logprob: -15.943147659301758
    5. '＝' → logprob: -16.693147659301758
    6. '=
' → logprob: -17.068147659301758
    7. ' =
' → logprob: -17.693147659301758
    8. ',' → logprob: -18.068147659301758
    9. '=

' → logprob: -18.318147659301758
    10. '.=' → logprob: -19.068147659301758

Token 747: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -5.836499985889532e-05
    2. ' tmp' → logprob: -9.7500581741333
    3. '	tmp' → logprob: -19.500059127807617
    4. '   ' → logprob: -19.500059127807617
    5. '$tmp' → logprob: -20.250059127807617
    6. '(tmp' → logprob: -20.375059127807617
    7. '/tmp' → logprob: -20.625059127807617
    8. '_tmp' → logprob: -21.000059127807617
    9. 'tm' → logprob: -21.750059127807617
    10. '       ' → logprob: -22.000059127807617

Token 748: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.9361264946837764e-07
    2. 'an' → logprob: -17.375
    3. ' ans' → logprob: -18.0
    4. '	ans' → logprob: -18.125
    5. '(ans' → logprob: -18.25
    6. '_ans' → logprob: -18.375
    7. 'ass' → logprob: -18.625
    8. '   ' → logprob: -18.875
    9. 'as' → logprob: -19.25
    10. 'rans' → logprob: -19.5

Token 749: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.935296834039036e-06
    2. ' print' → logprob: -13.37500286102295
    3. 'if' → logprob: -14.25000286102295
    4. '```' → logprob: -14.87500286102295
    5. '
' → logprob: -15.25000286102295
    6. '   ' → logprob: -17.375003814697266
    7. 'for' → logprob: -18.250003814697266
    8. '    
' → logprob: -18.875003814697266
    9. '<|end|>' → logprob: -18.875003814697266
    10. 'else' → logprob: -19.125003814697266

Token 750: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.1008713702030946e-06
    2. ' print' → logprob: -13.375001907348633
    3. '```' → logprob: -14.875001907348633
    4. 'if' → logprob: -16.625001907348633
    5. '
' → logprob: -17.500001907348633
    6. 'for' → logprob: -19.125001907348633
    7. '<|end|>' → logprob: -20.125001907348633
    8. '#' → logprob: -20.375001907348633
    9. '   ' → logprob: -20.375001907348633
    10. '``' → logprob: -20.625001907348633

Token 751: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -8.061054359131958e-06
    2. 'ans' → logprob: -12.375007629394531
    3. '(' → logprob: -12.625007629394531
    4. '()' → logprob: -14.875007629394531
    5. '(
' → logprob: -16.25000762939453
    6. '(answer' → logprob: -16.87500762939453
    7. ' (' → logprob: -18.50000762939453
    8. '(abs' → logprob: -18.50000762939453
    9. '	ans' → logprob: -19.00000762939453
    10. ' ans' → logprob: -20.12500762939453

Token 752: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.7697225252486533e-06
    2. ')
' → logprob: -13.500003814697266
    3. ' )' → logprob: -13.750003814697266
    4. ')`' → logprob: -14.750003814697266
    5. '())' → logprob: -15.250003814697266
    6. '))' → logprob: -15.250003814697266
    7. '()' → logprob: -16.000003814697266
    8. '`)' → logprob: -16.625003814697266
    9. ')#' → logprob: -17.000003814697266
    10. ')}' → logprob: -17.000003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 750
Tokens correctement prédits (1ère position, stricte): 311
Tokens correctement prédits (1ère position, avec adaptation): 335
Tokens correctement prédits (top 10): 654
Précision stricte (1ère position): 41.47%
Précision adaptée (1ère position): 44.67%
Précision (top 10): 87.20%
================================================================================
