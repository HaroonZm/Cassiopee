================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:56:19
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

# Perso, je préfère garder range, mais bon, on garde aussi la compatibilité py2 ici...
range = xrange  
input = raw_input

mod = 10**9 + 7

# on récupère les entrées, classique...
n, h, d = map(int, input().split())

# ça fait peut-être un peu grand mais on ne sait jamais
big = 10 ** 6 + 10

# génération des factorielles, mais on pourrait juste prendre jusqu'à n, pas grave
fac = [1]
while len(fac) < big:
    fac.append((fac[-1] * len(fac)) % mod)

# cumul des factorielles, pas certain que ça soit le plus efficace...
cumfac = [0]
for ff in fac:
    cumfac.append((cumfac[-1] + ff) % mod)

DP = [0] * (h + 1)
DP[0] = fac[n]  # de base, y'a aucune contrainte à 0, c'est la factorielle

# donc là, on prend cumfac entre n+1 et 1, étrange mais ok
multi = cumfac[n + 1] - cumfac[1]
s = 0
for i in range(1, h):
    s += DP[i - 1]
    if i - d - 1 >= 0:
        s -= DP[i - d - 1]
    s %= mod  # attention au modulo
    DP[i] = (s * multi) % mod  # un peu peu verbeux, faudrait commenter ce calcul

# traitement particulier pour la fin
DP[h] = sum(DP[max(0, h - d):h]) % mod

# affichage de la solution, je trouve print sans parenthèses moche mais bon py2 hein
print DP[-1]
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: '#' (ID: 2)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.26693636178970337
    2. '\n' → logprob: -2.0169363021850586
    3. 'import' → logprob: -3.1419363021850586
    4. '<|end|>' → logprob: -3.2669363021850586
    5. '\' → logprob: -5.516936302185059
    6. 'newline' → logprob: -5.516936302185059
    7. '<|end|>' → logprob: -6.141936302185059
    8. '' → logprob: -6.266936302185059
    9. '#' → logprob: -6.891936302185059
    10. ',' → logprob: -6.891936302185059

Token 4: ' Pers' (ID: 23032)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02773398905992508
    2. '  ' → logprob: -5.52773380279541
    3. ' #' → logprob: -5.77773380279541
    4. ' def' → logprob: -6.40273380279541
    5. ' -*-' → logprob: -6.40273380279541
    6. ' import' → logprob: -6.52773380279541
    7. 'import' → logprob: -6.52773380279541
    8. ' ```' → logprob: -6.52773380279541
    9. ' argparse' → logprob: -6.52773380279541
    10. 'def' → logprob: -6.77773380279541

Token 5: 'o' (ID: 78)
  Prédit: 'onal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'onal' → logprob: -0.05051686614751816
    2. 'on' → logprob: -3.0505168437957764
    3. 'pective' → logprob: -6.4255170822143555
    4. 'istence' → logprob: -8.675517082214355
    5. 'o' → logprob: -10.175517082214355
    6. 'pectives' → logprob: -10.675517082214355
    7. 'on's' → logprob: -11.175517082214355
    8. 'ist' → logprob: -11.425517082214355
    9. 'ons' → logprob: -11.675517082214355
    10. 'ona' → logprob: -11.925517082214355

Token 6: ',' (ID: 11)
  Prédit: 'nal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nal' → logprob: -0.22554361820220947
    2. 'n' → logprob: -1.6005436182022095
    3. 'na' → logprob: -9.725543975830078
    4. 'nale' → logprob: -10.475543975830078
    5. '#' → logprob: -11.350543975830078
    6. ' nal' → logprob: -11.975543975830078
    7. 'nable' → logprob: -12.225543975830078
    8. '```' → logprob: -12.600543975830078
    9. 'ns' → logprob: -12.725543975830078
    10. 'nance' → logprob: -13.100543975830078

Token 7: ' je' (ID: 1264)
  Prédit: 'nal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nal' → logprob: -0.22445809841156006
    2. 'n' → logprob: -1.72445809841156
    3. 'r' → logprob: -3.9744582176208496
    4. ' ' → logprob: -6.59945821762085
    5. '#' → logprob: -7.72445821762085
    6. 'nt' → logprob: -7.97445821762085
    7. 'na' → logprob: -8.099457740783691
    8. ' n' → logprob: -8.724457740783691
    9. ' nal' → logprob: -8.724457740783691
    10. 'ne' → logprob: -8.849457740783691

Token 8: ' préfère' (ID: 141784)
  Prédit: ' pense'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pense' → logprob: -1.1247605085372925
    2. '.' → logprob: -1.2497605085372925
    3. 'n' → logprob: -1.4997605085372925
    4. 'r' → logprob: -3.499760627746582
    5. 't' → logprob: -3.624760627746582
    6. 's' → logprob: -3.749760627746582
    7. 'space' → logprob: -4.124760627746582
    8. ' .' → logprob: -4.749760627746582
    9. '```' → logprob: -4.749760627746582
    10. ' préfère' → logprob: -4.874760627746582

Token 9: ' garder' (ID: 63069)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sys' → logprob: -1.208455204963684
    2. 'les' → logprob: -1.958455204963684
    3. 'sys' → logprob: -2.4584550857543945
    4. 'print' → logprob: -2.8334550857543945
    5. ' les' → logprob: -2.9584550857543945
    6. 'import' → logprob: -3.2084550857543945
    7. ' utiliser' → logprob: -3.5834550857543945
    8. ':' → logprob: -4.0834550857543945
    9. 'util' → logprob: -4.2084550857543945
    10. ' la' → logprob: -4.4584550857543945

Token 10: ' range' (ID: 3352)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.7090054750442505
    2. ' le' → logprob: -1.8340054750442505
    3. ' l' → logprob: -2.084005355834961
    4. ' les' → logprob: -2.209005355834961
    5. ' ' → logprob: -2.334005355834961
    6. 'le' → logprob: -2.334005355834961
    7. 'import' → logprob: -3.084005355834961
    8. ' ' → logprob: -3.334005355834961
    9. ' sys' → logprob: -3.334005355834961
    10. ' tout' → logprob: -3.959005355834961

Token 11: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003523098537698388
    2. '_' → logprob: -6.253522872924805
    3. '(
' → logprob: -7.003522872924805
    4. 's' → logprob: -8.503522872924805
    5. ',' → logprob: -8.878522872924805
    6. ')' → logprob: -9.753522872924805
    7. '```' → logprob: -9.878522872924805
    8. '(

' → logprob: -10.253522872924805
    9. ' (' → logprob: -10.378522872924805
    10. '()' → logprob: -10.628522872924805

Token 12: ' mais' (ID: 2899)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.43236875534057617
    2. '_' → logprob: -1.1823687553405762
    3. ' (' → logprob: -3.932368755340576
    4. ' ' → logprob: -4.807368755340576
    5. 's' → logprob: -5.057368755340576
    6. '(
' → logprob: -5.807368755340576
    7. ''' → logprob: -6.807368755340576
    8. ')' → logprob: -6.932368755340576
    9. ' _' → logprob: -7.057368755340576
    10. ',' → logprob: -7.432368755340576

Token 13: ' bon' (ID: 4846)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.3441359996795654
    2. '```' → logprob: -2.2191359996795654
    3. ' range' → logprob: -2.4691359996795654
    4. '(' → logprob: -2.4691359996795654
    5. ' je' → logprob: -2.9691359996795654
    6. ' la' → logprob: -2.9691359996795654
    7. ' on' → logprob: -3.0941359996795654
    8. ' len' → logprob: -3.3441359996795654
    9. ' for' → logprob: -3.5941359996795654
    10. '_' → logprob: -3.8441359996795654

Token 14: ',' (ID: 11)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5025015473365784
    2. '(' → logprob: -1.0025014877319336
    3. ',' → logprob: -4.627501487731934
    4. ')' → logprob: -5.252501487731934
    5. '(
' → logprob: -5.877501487731934
    6. '.' → logprob: -6.502501487731934
    7. ' (' → logprob: -6.502501487731934
    8. '_range' → logprob: -6.752501487731934
    9. '(range' → logprob: -7.002501487731934
    10. ':' → logprob: -7.252501487731934

Token 15: ' on' (ID: 402)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.851904273033142
    2. ' on' → logprob: -1.976904273033142
    3. ' ' → logprob: -2.1019043922424316
    4. ' range' → logprob: -2.2269043922424316
    5. ')' → logprob: -2.3519043922424316
    6. ' je' → logprob: -2.4769043922424316
    7. 'range' → logprob: -2.7269043922424316
    8. ' c' → logprob: -3.4769043922424316
    9. ' j' → logprob: -3.8519043922424316
    10. ' for' → logprob: -4.101904392242432

Token 16: ' garde' (ID: 65309)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.8713054656982422
    2. 'a' → logprob: -1.4963054656982422
    3. ' peut' → logprob: -1.9963054656982422
    4. ' ' → logprob: -3.496305465698242
    5. 's' → logprob: -3.871305465698242
    6. ' continue' → logprob: -4.371305465698242
    7. ' ' → logprob: -4.371305465698242
    8. 'n' → logprob: -4.496305465698242
    9. ' pourrait' → logprob: -4.621305465698242
    10. 'space' → logprob: -4.746305465698242

Token 17: ' aussi' (ID: 9894)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5104143619537354
    2. ' ' → logprob: -1.0104143619537354
    3. ')' → logprob: -4.510414123535156
    4. ' (' → logprob: -6.010414123535156
    5. 's' → logprob: -6.010414123535156
    6. ' )' → logprob: -6.135414123535156
    7. '(' → logprob: -6.260414123535156
    8. ' _' → logprob: -6.260414123535156
    9. ',' → logprob: -6.635414123535156
    10. '.' → logprob: -6.760414123535156

Token 18: ' la' (ID: 557)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6785234808921814
    2. ' ' → logprob: -2.053523540496826
    3. '.' → logprob: -2.178523540496826
    4. '(' → logprob: -2.553523540496826
    5. ',' → logprob: -3.053523540496826
    6. ':' → logprob: -3.428523540496826
    7. ' (' → logprob: -4.428523540496826
    8. '\' → logprob: -4.678523540496826
    9. ')' → logprob: -4.803523540496826
    10. '```' → logprob: -4.928523540496826

Token 19: ' compat' (ID: 15407)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6822304129600525
    2. ' list' → logprob: -1.9322304725646973
    3. ' numpy' → logprob: -1.9322304725646973
    4. 'for' → logprob: -2.8072304725646973
    5. 'x' → logprob: -3.1822304725646973
    6. ' built' → logprob: -4.557230472564697
    7. 'numpy' → logprob: -5.057230472564697
    8. 'r' → logprob: -5.057230472564697
    9. ' `' → logprob: -5.057230472564697
    10. 'list' → logprob: -5.307230472564697

Token 20: 'ibilité' (ID: 44186)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.24757513403892517
    2. 'n' → logprob: -2.747575044631958
    3. 'bil' → logprob: -2.997575044631958
    4. '_' → logprob: -3.497575044631958
    5. 's' → logprob: -3.997575044631958
    6. 'a' → logprob: -4.372575283050537
    7. '.' → logprob: -4.872575283050537
    8. ' ' → logprob: -5.372575283050537
    9. 'ibilité' → logprob: -5.372575283050537
    10. '=' → logprob: -5.372575283050537

Token 21: ' py' (ID: 13104)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6075370907783508
    2. '_' → logprob: -0.8575370907783508
    3. '.' → logprob: -4.607537269592285
    4. ')' → logprob: -5.482537269592285
    5. ' _' → logprob: -5.482537269592285
    6. ' with' → logprob: -6.232537269592285
    7. ',' → logprob: -6.482537269592285
    8. ' )' → logprob: -6.732537269592285
    9. ' (' → logprob: -6.982537269592285
    10. ' avec' → logprob: -7.232537269592285

Token 22: '2' (ID: 17)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.2742432653903961
    2. 'thon' → logprob: -1.7742432355880737
    3. '2' → logprob: -2.7742433547973633
    4. '_' → logprob: -5.899243354797363
    5. 'th' → logprob: -6.149243354797363
    6. 't' → logprob: -6.899243354797363
    7. ' ' → logprob: -7.399243354797363
    8. '__' → logprob: -8.274243354797363
    9. '36' → logprob: -8.774243354797363
    10. 'ton' → logprob: -9.149243354797363

Token 23: ' ici' (ID: 27994)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7509288787841797
    2. ':' → logprob: -1.5009288787841797
    3. '_' → logprob: -1.6259288787841797
    4. ')' → logprob: -3.7509288787841797
    5. ' ' → logprob: -4.00092887878418
    6. ',' → logprob: -4.12592887878418
    7. 'range' → logprob: -4.37592887878418
    8. ' range' → logprob: -5.50092887878418
    9. '_range' → logprob: -5.62592887878418
    10. '#' → logprob: -5.87592887878418

Token 24: '...
' (ID: 4908)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5833783745765686
    2. '.' → logprob: -1.7083783149719238
    3. ':' → logprob: -2.333378314971924
    4. 'range' → logprob: -3.333378314971924
    5. ' ' → logprob: -3.583378314971924
    6. ')' → logprob: -4.333378314971924
    7. ',' → logprob: -4.458378314971924
    8. '_range' → logprob: -4.708378314971924
    9. 'for' → logprob: -4.833378314971924
    10. ' range' → logprob: -4.958378314971924

Token 25: 'range' (ID: 20967)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1298465728759766
    2. 'range' → logprob: -1.1298465728759766
    3. '_range' → logprob: -1.8798465728759766
    4. ' range' → logprob: -3.2548465728759766
    5. '(range' → logprob: -3.2548465728759766
    6. ' ' → logprob: -4.254846572875977
    7. '.' → logprob: -4.379846572875977
    8. ',' → logprob: -4.379846572875977
    9. ' =' → logprob: -4.504846572875977
    10. 'for' → logprob: -4.629846572875977

Token 26: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00023321842309087515
    2. ' (' → logprob: -8.50023365020752
    3. '(
' → logprob: -12.00023365020752
    4. '(

' → logprob: -12.25023365020752
    5. ' =' → logprob: -12.62523365020752
    6. '_' → logprob: -12.75023365020752
    7. '()' → logprob: -12.75023365020752
    8. '(s' → logprob: -13.00023365020752
    9. '(len' → logprob: -13.25023365020752
    10. '=' → logprob: -14.37523365020752

Token 27: ' xrange' (ID: 92050)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.10694106668233871
    2. ' xrange' → logprob: -2.981940984725952
    3. 'range' → logprob: -3.231940984725952
    4. '```' → logprob: -5.606941223144531
    5. '(x' → logprob: -5.981941223144531
    6. ' ' → logprob: -6.606941223144531
    7. '   ' → logprob: -6.731941223144531
    8. ' range' → logprob: -7.231941223144531
    9. '  ' → logprob: -7.731941223144531
    10. 'list' → logprob: -7.981941223144531

Token 28: '  
' (ID: 4066)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.44116881489753723
    2. '(' → logprob: -1.9411687850952148
    3. '(
' → logprob: -2.941168785095215
    4. ' if' → logprob: -3.066168785095215
    5. '<|end|>' → logprob: -3.316168785095215
    6. ' ' → logprob: -4.066168785095215
    7. '

' → logprob: -4.066168785095215
    8. '' → logprob: -4.191168785095215
    9. '\n' → logprob: -5.066168785095215
    10. 'if' → logprob: -5.941168785095215

Token 29: 'input' (ID: 2586)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.6545537114143372
    2. '
' → logprob: -1.0295536518096924
    3. '<|end|>' → logprob: -2.6545536518096924
    4. ' ' → logprob: -3.9045536518096924
    5. ' 

' → logprob: -5.1545538902282715
    6. '  
' → logprob: -5.4045538902282715
    7. '


' → logprob: -5.4045538902282715
    8. '' → logprob: -5.7795538902282715
    9. 'if' → logprob: -5.9045538902282715
    10. '  

' → logprob: -6.2795538902282715

Token 30: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006912153214216232
    2. '()' → logprob: -5.5069122314453125
    3. ' =' → logprob: -7.0069122314453125
    4. '=' → logprob: -7.3819122314453125
    5. '(
' → logprob: -7.3819122314453125
    6. '<|end|>' → logprob: -8.756912231445312
    7. ')' → logprob: -9.256912231445312
    8. '('' → logprob: -9.256912231445312
    9. ' ' → logprob: -9.381912231445312
    10. '(

' → logprob: -9.756912231445312

Token 31: ' raw' (ID: 11428)
  Prédit: 'raw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raw' → logprob: -0.025307364761829376
    2. ' raw' → logprob: -3.7753074169158936
    3. 'sys' → logprob: -6.9003071784973145
    4. '	raw' → logprob: -7.0253071784973145
    5. ' sys' → logprob: -9.025307655334473
    6. 'input' → logprob: -11.900307655334473
    7. '	sys' → logprob: -11.900307655334473
    8. '_raw' → logprob: -12.025307655334473
    9. '(raw' → logprob: -12.275307655334473
    10. 'lambda' → logprob: -12.275307655334473

Token 32: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.001867829472757876
    2. '_' → logprob: -6.501867771148682
    3. '_in' → logprob: -8.00186824798584
    4. '__' → logprob: -10.62686824798584
    5. '_i' → logprob: -12.87686824798584
    6. 'input' → logprob: -13.25186824798584
    7. ' _' → logprob: -13.87686824798584
    8. '_

' → logprob: -14.87686824798584
    9. 'in' → logprob: -15.00186824798584
    10. '_
' → logprob: -15.87686824798584

Token 33: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6427985429763794
    2. '<|end|>' → logprob: -1.1427985429763794
    3. ' ' → logprob: -3.14279842376709
    4. '

' → logprob: -3.39279842376709
    5. ' 

' → logprob: -3.64279842376709
    6. ' 
' → logprob: -3.89279842376709
    7. '  
' → logprob: -4.64279842376709
    8. '\n' → logprob: -5.39279842376709
    9. '()' → logprob: -6.26779842376709
    10. '\' → logprob: -6.26779842376709

Token 34: 'mod' (ID: 4847)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5936627984046936
    2. '<|end|>' → logprob: -1.0936627388000488
    3. '

' → logprob: -2.718662738800049
    4. ' ' → logprob: -4.468662738800049
    5. '#' → logprob: -5.468662738800049
    6. ' 
' → logprob: -5.593662738800049
    7. '<|end|>' → logprob: -5.593662738800049
    8. '' → logprob: -5.843662738800049
    9. '[' → logprob: -5.968662738800049
    10. '


' → logprob: -5.968662738800049

Token 35: ' =' (ID: 314)
  Prédit: 'ule'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.0005037044174969196
    2. 'import' → logprob: -8.750503540039062
    3. 'ules' → logprob: -8.875503540039062
    4. ' =' → logprob: -9.000503540039062
    5. 'e' → logprob: -10.625503540039062
    6. '=' → logprob: -10.750503540039062
    7. 'def' → logprob: -11.500503540039062
    8. 'if' → logprob: -12.125503540039062
    9. 'ulo' → logprob: -12.500503540039062
    10. 'uel' → logprob: -12.750503540039062

Token 36: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6348506212234497
    2. '100' → logprob: -1.1348506212234497
    3. '10' → logprob: -2.25985050201416
    4. '256' → logprob: -4.63485050201416
    5. '409' → logprob: -4.88485050201416
    6. '102' → logprob: -5.00985050201416
    7. '123' → logprob: -5.13485050201416
    8. '0' → logprob: -6.13485050201416
    9. '1' → logprob: -6.13485050201416
    10. 'int' → logprob: -7.13485050201416

Token 37: '10' (ID: 702)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.4385102689266205
    2. '10' → logprob: -1.3135102987289429
    3. '256' → logprob: -3.9385101795196533
    4. ' ' → logprob: -4.188510417938232
    5. 'int' → logprob: -5.063510417938232
    6. '102' → logprob: -5.188510417938232
    7. '123' → logprob: -5.313510417938232
    8. '0' → logprob: -5.438510417938232
    9. '1' → logprob: -5.688510417938232
    10. '655' → logprob: -5.813510417938232

Token 38: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.031076299026608467
    2. '9' → logprob: -3.531076192855835
    3. '7' → logprob: -7.031076431274414
    4. ' **' → logprob: -8.656076431274414
    5. '0' → logprob: -9.031076431274414
    6. '^' → logprob: -9.781076431274414
    7. '6' → logprob: -10.281076431274414
    8. ' ' → logprob: -11.156076431274414
    9. '00' → logprob: -11.781076431274414
    10. '```' → logprob: -12.031076431274414

Token 39: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -15.125000953674316
    3. '8' → logprob: -15.375000953674316
    4. '10' → logprob: -15.500000953674316
    5. '7' → logprob: -15.750000953674316
    6. '09' → logprob: -15.750000953674316
    7. '```' → logprob: -16.250001907348633
    8. '4' → logprob: -16.500001907348633
    9. '6' → logprob: -17.000001907348633
    10. '5' → logprob: -18.500001907348633

Token 40: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00029351349803619087
    2. '7' → logprob: -8.250293731689453
    3. ' +' → logprob: -10.375293731689453
    4. '+
' → logprob: -14.375293731689453
    5. '+

' → logprob: -15.250293731689453
    6. '＋' → logprob: -16.625293731689453
    7. 'plus' → logprob: -17.250293731689453
    8. '9' → logprob: -17.375293731689453
    9. '```' → logprob: -17.375293731689453
    10. ' plus' → logprob: -17.500293731689453

Token 41: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -2.45848218582978e-06
    2. '+' → logprob: -13.37500286102295
    3. ' ' → logprob: -14.00000286102295
    4. '9' → logprob: -17.250001907348633
    5. '```' → logprob: -17.375001907348633
    6. '07' → logprob: -17.500001907348633
    7. ' +' → logprob: -18.750001907348633
    8. '   ' → logprob: -18.812501907348633
    9. '  ' → logprob: -19.750001907348633
    10. '17' → logprob: -20.500001907348633

Token 42: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -15.625000953674316
    3. '+' → logprob: -16.375
    4. '9' → logprob: -16.875
    5. '```' → logprob: -17.125
    6. '07' → logprob: -17.5
    7. '

' → logprob: -18.25
    8. '   ' → logprob: -18.9375
    9. '  ' → logprob: -19.6875
    10. '79' → logprob: -20.25

Token 43: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13638080656528473
    2. '

' → logprob: -2.511380910873413
    3. '<|end|>' → logprob: -3.511380910873413
    4. ' 

' → logprob: -5.136380672454834
    5. '
' → logprob: -6.011380672454834
    6. ' ' → logprob: -6.261380672454834
    7. ' 
' → logprob: -6.511380672454834
    8. '\n' → logprob: -6.511380672454834
    9. '' → logprob: -7.136380672454834
    10. 'def' → logprob: -7.761380672454834

Token 44: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.28274524211883545
    2. '
' → logprob: -1.7827452421188354
    3. '

' → logprob: -3.657745361328125
    4. 'for' → logprob: -3.782745361328125
    5. 'n' → logprob: -3.907745361328125
    6. '#' → logprob: -5.157745361328125
    7. '' → logprob: -7.032745361328125
    8. ' for' → logprob: -7.907745361328125
    9. 'a' → logprob: -8.032745361328125
    10. 'class' → logprob: -8.157745361328125

Token 45: ' on' (ID: 402)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1997499316930771
    2. ' def' → logprob: -2.4497499465942383
    3. 'for' → logprob: -3.6997499465942383
    4. ' ' → logprob: -3.6997499465942383
    5. ' for' → logprob: -3.8247499465942383
    6. 'n' → logprob: -4.574749946594238
    7. '#' → logprob: -4.824749946594238
    8. ' #' → logprob: -6.949749946594238
    9. 'd' → logprob: -7.074749946594238
    10. ' n' → logprob: -7.199749946594238

Token 46: ' récup' (ID: 62856)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08842783421278
    2. ' def' → logprob: -3.588427782058716
    3. ' =' → logprob: -3.713427782058716
    4. ' for' → logprob: -4.838428020477295
    5. 'for' → logprob: -5.088428020477295
    6. '=' → logprob: -5.713428020477295
    7. '_' → logprob: -6.088428020477295
    8. 'range' → logprob: -6.088428020477295
    9. 'n' → logprob: -6.338428020477295
    10. ' n' → logprob: -6.713428020477295

Token 47: 'ère' (ID: 4346)
  Prédit: 'ère'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ère' → logprob: -0.0032605347223579884
    2. 'è' → logprob: -6.003260612487793
    3. '\' → logprob: -8.628260612487793
    4. '#' → logprob: -9.253260612487793
    5. 'ére' → logprob: -9.378260612487793
    6. '`' → logprob: -9.503260612487793
    7. 'ere' → logprob: -9.753260612487793
    8. 'èr' → logprob: -10.128260612487793
    9. 'e' → logprob: -10.503260612487793
    10. 'érer' → logprob: -10.628260612487793

Token 48: ' les' (ID: 1341)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03568784520030022
    2. '_' → logprob: -4.4106879234313965
    3. ' la' → logprob: -5.0356879234313965
    4. ' les' → logprob: -5.4106879234313965
    5. ' l' → logprob: -5.5356879234313965
    6. 'input' → logprob: -6.4106879234313965
    7. ' le' → logprob: -7.2856879234313965
    8. 'data' → logprob: -7.5356879234313965
    9. '<|end|>' → logprob: -7.5356879234313965
    10. 's' → logprob: -7.6606879234313965

Token 49: ' entr' (ID: 7072)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.40194281935691833
    2. ' n' → logprob: -3.151942729949951
    3. ' données' → logprob: -3.151942729949951
    4. ' nombres' → logprob: -3.151942729949951
    5. 'ent' → logprob: -3.276942729949951
    6. 'd' → logprob: -3.901942729949951
    7. 'l' → logprob: -3.901942729949951
    8. 'data' → logprob: -4.151942729949951
    9. 'nombre' → logprob: -4.401942729949951
    10. '_' → logprob: -4.776942729949951

Token 50: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.0015721142990514636
    2. 'ée' → logprob: -6.876572132110596
    3. 'êtes' → logprob: -8.376571655273438
    4. 'é' → logprob: -8.626571655273438
    5. 'és' → logprob: -10.376571655273438
    6. 'ees' → logprob: -10.501571655273438
    7. 'ê' → logprob: -10.501571655273438
    8. 'éis' → logprob: -11.751571655273438
    9. 'êts' → logprob: -11.751571655273438
    10. 'è' → logprob: -12.126571655273438

Token 51: ',' (ID: 11)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.34582433104515076
    2. '\n' → logprob: -1.4708243608474731
    3. '
' → logprob: -3.7208242416381836
    4. 's' → logprob: -4.595824241638184
    5. 'input' → logprob: -5.345824241638184
    6. ':' → logprob: -5.470824241638184
    7. '\' → logprob: -5.470824241638184
    8. ' n' → logprob: -5.970824241638184
    9. ' ' → logprob: -6.345824241638184
    10. '<|end|>' → logprob: -6.845824241638184

Token 52: ' classique' (ID: 76895)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.14994336664676666
    2. 'n' → logprob: -2.0249433517456055
    3. 'l' → logprob: -6.0249433517456055
    4. ' l' → logprob: -7.1499433517456055
    5. ' la' → logprob: -7.2749433517456055
    6. ' line' → logprob: -8.024943351745605
    7. ' t' → logprob: -8.274943351745605
    8. 't' → logprob: -8.399943351745605
    9. 'x' → logprob: -8.524943351745605
    10. ' a' → logprob: -8.649943351745605

Token 53: '...
' (ID: 4908)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9245219230651855
    2. 's' → logprob: -0.9245219230651855
    3. 'input' → logprob: -3.2995219230651855
    4. '\n' → logprob: -3.5495219230651855
    5. '
' → logprob: -3.7995219230651855
    6. '<|end|>' → logprob: -4.0495219230651855
    7. '```' → logprob: -4.4245219230651855
    8. 'a' → logprob: -4.5495219230651855
    9. '<|end|>' → logprob: -4.6745219230651855
    10. '\' → logprob: -4.9245219230651855

Token 54: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0077011496759951115
    2. ' n' → logprob: -5.0077009201049805
    3. 'N' → logprob: -7.7577009201049805
    4. 'a' → logprob: -8.75770092010498
    5. 'data' → logprob: -8.75770092010498
    6. 'for' → logprob: -10.38270092010498
    7. 'input' → logprob: -10.50770092010498
    8. 'nb' → logprob: -10.50770092010498
    9. ' N' → logprob: -10.88270092010498
    10. '
' → logprob: -11.00770092010498

Token 55: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47964245080947876
    2. ',' → logprob: -0.9796424508094788
    3. '=' → logprob: -5.979642391204834
    4. ' ,' → logprob: -5.979642391204834
    5. ' ' → logprob: -7.854642391204834
    6. ',n' → logprob: -10.979642868041992
    7. '=int' → logprob: -11.104642868041992
    8. ')' → logprob: -11.479642868041992
    9. '  ' → logprob: -11.479642868041992
    10. ',s' → logprob: -11.979642868041992

Token 56: ' h' (ID: 312)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.5096037983894348
    2. ' k' → logprob: -1.38460373878479
    3. 'm' → logprob: -2.63460373878479
    4. 'k' → logprob: -2.88460373878479
    5. ' ' → logprob: -4.509603977203369
    6. ' t' → logprob: -6.384603977203369
    7. ' q' → logprob: -6.509603977203369
    8. ' =' → logprob: -6.634603977203369
    9. ' p' → logprob: -7.134603977203369
    10. ' s' → logprob: -7.134603977203369

Token 57: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6327569484710693
    2. ' =' → logprob: -0.7577569484710693
    3. ',' → logprob: -9.007757186889648
    4. '=int' → logprob: -10.882757186889648
    5. ' ' → logprob: -12.507757186889648
    6. '<|end|>' → logprob: -12.632757186889648
    7. '=input' → logprob: -12.882757186889648
    8. '>' → logprob: -13.632757186889648
    9. ')' → logprob: -13.757757186889648
    10. 's' → logprob: -14.695257186889648

Token 58: ' d' (ID: 272)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.3380982577800751
    2. ' w' → logprob: -1.9630982875823975
    3. 'k' → logprob: -3.3380982875823975
    4. ' =' → logprob: -3.7130982875823975
    5. 'l' → logprob: -3.9630982875823975
    6. 'a' → logprob: -3.9630982875823975
    7. 'm' → logprob: -4.338098049163818
    8. 'd' → logprob: -5.088098049163818
    9. ' ' → logprob: -5.088098049163818
    10. 't' → logprob: -5.713098049163818

Token 59: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11292771995067596
    2. '=' → logprob: -2.2379276752471924
    3. ' ' → logprob: -9.487927436828613
    4. ',' → logprob: -11.987927436828613
    5. '  ' → logprob: -12.237927436828613
    6. '=input' → logprob: -12.612927436828613
    7. 'e' → logprob: -12.737927436828613
    8. '=int' → logprob: -13.362927436828613
    9. '   ' → logprob: -13.362927436828613
    10. '=sys' → logprob: -13.612927436828613

Token 60: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.0040201107040047646
    2. 'map' → logprob: -5.6290202140808105
    3. ' ' → logprob: -8.254019737243652
    4. ' [' → logprob: -10.129019737243652
    5. ' sys' → logprob: -10.379019737243652
    6. ' input' → logprob: -10.379019737243652
    7. ' raw' → logprob: -10.754019737243652
    8. '[' → logprob: -10.879019737243652
    9. ' list' → logprob: -12.254019737243652
    10. '	map' → logprob: -12.379019737243652

Token 61: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.2014842927455902
    2. '(' → logprob: -1.7014843225479126
    3. '(input' → logprob: -9.951484680175781
    4. '(
' → logprob: -11.826484680175781
    5. 'int' → logprob: -11.951484680175781
    6. ' (' → logprob: -12.701484680175781
    7. '(str' → logprob: -13.701484680175781
    8. '<int' → logprob: -13.701484680175781
    9. '(eval' → logprob: -13.826484680175781
    10. '(

' → logprob: -14.326484680175781

Token 62: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1267585754394531
    2. '(input' → logprob: -1.1267585754394531
    3. ',input' → logprob: -1.7517585754394531
    4. '(sys' → logprob: -2.001758575439453
    5. 'input' → logprob: -3.751758575439453
    6. '(' → logprob: -4.626758575439453
    7. ')' → logprob: -4.876758575439453
    8. 'sys' → logprob: -7.001758575439453
    9. ' input' → logprob: -7.376758575439453
    10. '=sys' → logprob: -8.251758575439453

Token 63: ' input' (ID: 3422)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.17167651653289795
    2. 'sys' → logprob: -2.4216766357421875
    3. ' raw' → logprob: -3.4216766357421875
    4. ' input' → logprob: -3.5466766357421875
    5. 'input' → logprob: -5.2966766357421875
    6. 'raw' → logprob: -6.0466766357421875
    7. '=sys' → logprob: -10.046676635742188
    8. ' ' → logprob: -10.546676635742188
    9. '	sys' → logprob: -10.921676635742188
    10. ')' → logprob: -11.046676635742188

Token 64: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0009449340868741274
    2. '()' → logprob: -7.000945091247559
    3. ' ().' → logprob: -11.125945091247559
    4. '())' → logprob: -11.375945091247559
    5. ')' → logprob: -12.625945091247559
    6. '(' → logprob: -13.125945091247559
    7. ' ' → logprob: -15.000945091247559
    8. ' ()' → logprob: -15.375945091247559
    9. '()))' → logprob: -15.500945091247559
    10. '());' → logprob: -16.125944137573242

Token 65: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0007160080131143332
    2. 'strip' → logprob: -7.250716209411621
    3. ' split' → logprob: -12.625716209411621
    4. 'rstrip' → logprob: -13.250716209411621
    5. '(split' → logprob: -14.000716209411621
    6. ')' → logprob: -15.875716209411621
    7. 'read' → logprob: -17.125715255737305
    8. ' ' → logprob: -17.125715255737305
    9. 'spl' → logprob: -17.625715255737305
    10. '().' → logprob: -18.125715255737305

Token 66: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0013944036327302456
    2. '()' → logprob: -7.376394271850586
    3. ')' → logprob: -7.501394271850586
    4. '()))' → logprob: -8.501394271850586
    5. '(' → logprob: -12.751394271850586
    6. ' ())' → logprob: -12.751394271850586
    7. '))' → logprob: -13.126394271850586
    8. '())
' → logprob: -13.251394271850586
    9. '());' → logprob: -14.126394271850586
    10. '()),' → logprob: -14.751394271850586

Token 67: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.011731524951756
    2. '\n' → logprob: -5.6367316246032715
    3. ')' → logprob: -5.7617316246032715
    4. '
' → logprob: -6.1367316246032715
    5. ' 
' → logprob: -7.3867316246032715
    6. 'for' → logprob: -7.8867316246032715
    7. '

' → logprob: -8.136731147766113
    8. ' ' → logprob: -8.511731147766113
    9. '\' → logprob: -8.761731147766113
    10. 'n' → logprob: -9.011731147766113

Token 68: ' ça' (ID: 13590)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.9864357709884644
    2. 'dp' → logprob: -0.9864357709884644
    3. 'stairs' → logprob: -3.361435890197754
    4. 'a' → logprob: -3.986435890197754
    5. ' heights' → logprob: -3.986435890197754
    6. 'lst' → logprob: -3.986435890197754
    7. 'res' → logprob: -4.236435890197754
    8. 'steps' → logprob: -4.361435890197754
    9. 'flo' → logprob: -4.611435890197754
    10. 'arr' → logprob: -4.736435890197754

Token 69: ' fait' (ID: 7473)
  Prédit: ' va'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' va' → logprob: -0.31017768383026123
    2. ' continue' → logprob: -3.060177803039551
    3. ' semble' → logprob: -3.185177803039551
    4. 's' → logprob: -3.935177803039551
    5. ' n' → logprob: -3.935177803039551
    6. ' part' → logprob: -4.060177803039551
    7. ' =' → logprob: -4.435177803039551
    8. ',' → logprob: -4.560177803039551
    9. 'continue' → logprob: -4.560177803039551
    10. 'for' → logprob: -4.810177803039551

Token 70: ' peut' (ID: 9216)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'un' → logprob: -2.2623960971832275
    2. ' une' → logprob: -2.3873960971832275
    3. 'sens' → logprob: -2.3873960971832275
    4. ' ' → logprob: -2.5123960971832275
    5. 'une' → logprob: -2.5123960971832275
    6. 's' → logprob: -3.0123960971832275
    7. 'v' → logprob: -3.1373960971832275
    8. ' un' → logprob: -3.1373960971832275
    9. 'a' → logprob: -3.5123960971832275
    10. ' sens' → logprob: -3.8873960971832275

Token 71: '-être' (ID: 33599)
  Prédit: 'être'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'être' → logprob: -0.8993500471115112
    2. '-être' → logprob: -0.8993500471115112
    3. '-' → logprob: -2.649350166320801
    4. 'etre' → logprob: -2.774350166320801
    5. 'de' → logprob: -3.899350166320801
    6. 'ètre' → logprob: -5.399350166320801
    7. '_' → logprob: -5.649350166320801
    8. 'pas' → logprob: -5.774350166320801
    9. 'tre' → logprob: -6.024350166320801
    10. ''' → logprob: -6.024350166320801

Token 72: ' un' (ID: 537)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pas' → logprob: -1.4286203384399414
    2. 'sens' → logprob: -2.0536203384399414
    3. 'un' → logprob: -2.3036203384399414
    4. 's' → logprob: -2.5536203384399414
    5. 'mal' → logprob: -2.8036203384399414
    6. ' sens' → logprob: -3.1786203384399414
    7. 'plus' → logprob: -3.1786203384399414
    8. 'r' → logprob: -3.5536203384399414
    9. ' ' → logprob: -3.6786203384399414
    10. 'une' → logprob: -3.8036203384399414

Token 73: ' peu' (ID: 9235)
  Prédit: 'pe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.03157827630639076
    2. ' peu' → logprob: -3.531578302383423
    3. 'e' → logprob: -7.156578063964844
    4. ' peut' → logprob: -7.906578063964844
    5. ' pe' → logprob: -9.281578063964844
    6. 'print' → logprob: -9.531578063964844
    7. ' peux' → logprob: -9.781578063964844
    8. ' petit' → logprob: -10.031578063964844
    9. '```' → logprob: -10.156578063964844
    10. 'plus' → logprob: -10.531578063964844

Token 74: ' grand' (ID: 6363)
  Prédit: 'sens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sens' → logprob: -1.3304314613342285
    2. 's' → logprob: -2.4554314613342285
    3. 'long' → logprob: -2.8304314613342285
    4. 'mal' → logprob: -2.8304314613342285
    5. ' sens' → logprob: -2.9554314613342285
    6. 't' → logprob: -3.0804314613342285
    7. 'r' → logprob: -3.3304314613342285
    8. 'ch' → logprob: -3.3304314613342285
    9. ' ' → logprob: -3.5804314613342285
    10. 'f' → logprob: -3.7054314613342285

Token 75: ' mais' (ID: 2899)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2835274040699005
    2. ' ' → logprob: -2.533527374267578
    3. '...' → logprob: -2.658527374267578
    4. '.' → logprob: -3.533527374267578
    5. ' ,' → logprob: -3.658527374267578
    6. 'for' → logprob: -4.908527374267578
    7. 'range' → logprob: -5.283527374267578
    8. ' for' → logprob: -5.533527374267578
    9. 's' → logprob: -5.533527374267578
    10. 'n' → logprob: -6.033527374267578

Token 76: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -1.0923055410385132
    2. ' ' → logprob: -1.5923055410385132
    3. ' '' → logprob: -1.5923055410385132
    4. ''' → logprob: -2.8423056602478027
    5. '```' → logprob: -3.5923056602478027
    6. ' "' → logprob: -3.7173056602478027
    7. '"' → logprob: -3.7173056602478027
    8. ' for' → logprob: -3.7173056602478027
    9. ' ' → logprob: -4.592305660247803
    10. ' la' → logprob: -4.592305660247803

Token 77: ' ne' (ID: 453)
  Prédit: ' va'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' va' → logprob: -0.48083406686782837
    2. ' peut' → logprob: -1.7308340072631836
    3. ' crée' → logprob: -2.8558340072631836
    4. ' a' → logprob: -3.8558340072631836
    5. ' continue' → logprob: -3.9808340072631836
    6. ' met' → logprob: -4.105834007263184
    7. ' prend' → logprob: -4.230834007263184
    8. ' part' → logprob: -4.855834007263184
    9. ' fait' → logprob: -4.855834007263184
    10. ''ll' → logprob: -4.980834007263184

Token 78: ' sait' (ID: 52101)
  Prédit: ' va'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' va' → logprob: -0.6172817945480347
    2. ' peut' → logprob: -1.9922817945480347
    3. ' prend' → logprob: -2.742281913757324
    4. ' met' → logprob: -3.492281913757324
    5. 'a' → logprob: -3.992281913757324
    6. ' a' → logprob: -4.367281913757324
    7. '_' → logprob: -4.367281913757324
    8. ' prendra' → logprob: -4.492281913757324
    9. ' crée' → logprob: -4.617281913757324
    10. ' garde' → logprob: -4.742281913757324

Token 79: ' jamais' (ID: 23077)
  Prédit: ' pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.0639205276966095
    2. 'pas' → logprob: -3.063920497894287
    3. ' rien' → logprob: -4.688920497894287
    4. ' jamais' → logprob: -5.688920497894287
    5. ' ' → logprob: -6.688920497894287
    6. 'r' → logprob: -7.563920497894287
    7. ' plus' → logprob: -8.313920974731445
    8. 'p' → logprob: -8.938920974731445
    9. ' que' → logprob: -9.188920974731445
    10. 't' → logprob: -9.188920974731445

Token 80: '
' (ID: 198)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.6053369641304016
    2. 'dp' → logprob: -1.7303369045257568
    3. ',' → logprob: -2.355336904525757
    4. 'max' → logprob: -2.855336904525757
    5. 'n' → logprob: -4.230337142944336
    6. '...' → logprob: -4.355337142944336
    7. ' range' → logprob: -4.480337142944336
    8. ' ' → logprob: -4.480337142944336
    9. ' ,' → logprob: -4.980337142944336
    10. 'size' → logprob: -4.980337142944336

Token 81: 'big' (ID: 25934)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.4986680746078491
    2. ' max' → logprob: -1.4986680746078491
    3. 'dp' → logprob: -2.6236681938171387
    4. 'MAX' → logprob: -3.3736681938171387
    5. ' MAX' → logprob: -3.7486681938171387
    6. ' dp' → logprob: -4.373668193817139
    7. 'N' → logprob: -5.248668193817139
    8. '_' → logprob: -5.623668193817139
    9. 'size' → logprob: -5.998668193817139
    10. ' N' → logprob: -5.998668193817139

Token 82: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9817461967468262
    2. ' ' → logprob: -1.2317461967468262
    3. ' =' → logprob: -1.8567461967468262
    4. 'int' → logprob: -2.106746196746826
    5. 'e' → logprob: -4.106746196746826
    6. '=' → logprob: -4.731746196746826
    7. '_n' → logprob: -5.481746196746826
    8. '_i' → logprob: -5.606746196746826
    9. 'er' → logprob: -5.856746196746826
    10. 'i' → logprob: -5.981746196746826

Token 83: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1058436706662178
    2. '10' → logprob: -2.3558437824249268
    3. ' [' → logprob: -6.480843544006348
    4. ' int' → logprob: -6.730843544006348
    5. '100' → logprob: -6.980843544006348
    6. '2' → logprob: -7.605843544006348
    7. 'int' → logprob: -7.855843544006348
    8. '1' → logprob: -8.605843544006348
    9. '(' → logprob: -8.605843544006348
    10. ' (' → logprob: -9.230843544006348

Token 84: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0862918570637703
    2. '2' → logprob: -3.711291790008545
    3. '100' → logprob: -3.711291790008545
    4. ' ' → logprob: -4.086291790008545
    5. '200' → logprob: -5.586291790008545
    6. '1' → logprob: -5.961291790008545
    7. '3' → logprob: -6.461291790008545
    8. 'int' → logprob: -6.586291790008545
    9. '(' → logprob: -6.711291790008545
    10. '300' → logprob: -6.836291790008545

Token 85: ' **' (ID: 6240)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -1.1433614492416382
    2. '7' → logprob: -1.2683614492416382
    3. '**' → logprob: -2.0183615684509277
    4. '6' → logprob: -2.1433615684509277
    5. '8' → logprob: -2.8933615684509277
    6. '10' → logprob: -3.0183615684509277
    7. '18' → logprob: -3.5183615684509277
    8. '12' → logprob: -4.518361568450928
    9. '15' → logprob: -6.143361568450928
    10. '5' → logprob: -6.643361568450928

Token 86: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.7922021150588989
    2. '7' → logprob: -1.292202115058899
    3. '10' → logprob: -2.1672019958496094
    4. '6' → logprob: -3.2922019958496094
    5. '18' → logprob: -3.4172019958496094
    6. '12' → logprob: -3.5422019958496094
    7. '15' → logprob: -3.6672019958496094
    8. '8' → logprob: -4.042201995849609
    9. '11' → logprob: -5.167201995849609
    10. '16' → logprob: -5.667201995849609

Token 87: '6' (ID: 21)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.6222627758979797
    2. '7' → logprob: -1.622262716293335
    3. '18' → logprob: -2.247262716293335
    4. '10' → logprob: -2.622262716293335
    5. '12' → logprob: -3.247262716293335
    6. '15' → logprob: -3.872262716293335
    7. '8' → logprob: -4.122262954711914
    8. '14' → logprob: -5.747262954711914
    9. '16' → logprob: -6.122262954711914
    10. '11' → logprob: -6.122262954711914

Token 88: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.177656888961792
    2. '0' → logprob: -1.302656888961792
    3. ' +' → logprob: -1.677656888961792
    4. '
' → logprob: -2.427656888961792
    5. '

' → logprob: -3.052656888961792
    6. '000' → logprob: -3.177656888961792
    7. '00' → logprob: -4.302657127380371
    8. ' *' → logprob: -4.552657127380371
    9. '**' → logprob: -5.052657127380371
    10. '*' → logprob: -5.177657127380371

Token 89: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5056043267250061
    2. '10' → logprob: -1.8806042671203613
    3. '2' → logprob: -2.2556042671203613
    4. ' ' → logprob: -2.5056042671203613
    5. '5' → logprob: -3.3806042671203613
    6. '7' → logprob: -4.255604267120361
    7. '3' → logprob: -5.005604267120361
    8. '100' → logprob: -6.880604267120361
    9. '50' → logprob: -7.130604267120361
    10. '4' → logprob: -7.505604267120361

Token 90: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.28398698568344116
    2. '1' → logprob: -2.533987045288086
    3. '5' → logprob: -2.533987045288086
    4. '2' → logprob: -3.283987045288086
    5. '7' → logprob: -4.283987045288086
    6. '50' → logprob: -4.283987045288086
    7. '100' → logprob: -4.658987045288086
    8. '3' → logprob: -5.033987045288086
    9. '20' → logprob: -5.658987045288086
    10. '4' → logprob: -6.783987045288086

Token 91: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.052446283400058746
    2. ' 
' → logprob: -4.177446365356445
    3. '

' → logprob: -4.302446365356445
    4. '
' → logprob: -4.927446365356445
    5. '  
' → logprob: -5.677446365356445
    6. '' → logprob: -5.802446365356445
    7. ' 

' → logprob: -5.802446365356445
    8. '<|end|>' → logprob: -6.427446365356445
    9. '\n' → logprob: -7.552446365356445
    10. ' ' → logprob: -7.552446365356445

Token 92: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0243994053453207
    2. '
' → logprob: -4.399399280548096
    3. '

' → logprob: -5.399399280548096
    4. ' 
' → logprob: -5.899399280548096
    5. ' 

' → logprob: -6.899399280548096
    6. '  
' → logprob: -7.149399280548096
    7. 'dp' → logprob: -7.399399280548096
    8. '' → logprob: -7.649399280548096
    9. '<|end|>' → logprob: -8.024399757385254
    10. '#' → logprob: -8.149399757385254

Token 93: ' génération' (ID: 103301)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.10108378529548645
    2. ' dp' → logprob: -3.101083755493164
    3. '#' → logprob: -4.976083755493164
    4. 'dist' → logprob: -5.351083755493164
    5. 'f' → logprob: -5.851083755493164
    6. 'a' → logprob: -5.851083755493164
    7. 'lst' → logprob: -5.851083755493164
    8. 'l' → logprob: -6.601083755493164
    9. 's' → logprob: -6.601083755493164
    10. 'cost' → logprob: -6.726083755493164

Token 94: ' des' (ID: 731)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3281123638153076
    2. 'range' → logprob: -3.2031123638153076
    3. 's' → logprob: -3.3281123638153076
    4. '_' → logprob: -3.4531123638153076
    5. '[]' → logprob: -3.7031123638153076
    6. ' of' → logprob: -4.078112602233887
    7. 'de' → logprob: -4.078112602233887
    8. 'dp' → logprob: -4.453112602233887
    9. '<|end|>' → logprob: -4.578112602233887
    10. '[' → logprob: -4.828112602233887

Token 95: ' fact' (ID: 2840)
  Prédit: ' tableaux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tableaux' → logprob: -1.0138152837753296
    2. ' listes' → logprob: -2.513815402984619
    3. ' lists' → logprob: -2.888815402984619
    4. ' distances' → logprob: -3.013815402984619
    5. ' arrays' → logprob: -3.013815402984619
    6. ' dp' → logprob: -3.138815402984619
    7. ' nombres' → logprob: -3.263815402984619
    8. '_' → logprob: -3.388815402984619
    9. ' table' → logprob: -3.513815402984619
    10. ' tables' → logprob: -3.888815402984619

Token 96: 'ori' (ID: 6510)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.6577828526496887
    2. 'ories' → logprob: -0.9077828526496887
    3. 'orial' → logprob: -3.157782793045044
    4. 's' → logprob: -3.657782793045044
    5. 'ori' → logprob: -5.407783031463623
    6. 'oires' → logprob: -5.657783031463623
    7. 'o' → logprob: -7.407783031463623
    8. 'ors' → logprob: -8.032782554626465
    9. 'oring' → logprob: -8.032782554626465
    10. '```' → logprob: -8.782782554626465

Token 97: 'elles' (ID: 8500)
  Prédit: 'els'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'els' → logprob: -0.21014846861362457
    2. 'als' → logprob: -2.210148572921753
    3. 'elles' → logprob: -2.585148572921753
    4. 'les' → logprob: -6.460148334503174
    5. 'ales' → logprob: -6.960148334503174
    6. 'al' → logprob: -6.960148334503174
    7. '```' → logprob: -7.335148334503174
    8. 'a' → logprob: -9.210148811340332
    9. 'ls' → logprob: -9.335148811340332
    10. 'lles' → logprob: -10.335148811340332

Token 98: ',' (ID: 11)
  Prédit: '_factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.9505810737609863
    2. 'fact' → logprob: -1.5755810737609863
    3. 'factor' → logprob: -1.7005810737609863
    4. '_fact' → logprob: -2.4505810737609863
    5. '_' → logprob: -2.8255810737609863
    6. 'f' → logprob: -3.3255810737609863
    7. '[' → logprob: -4.075581073760986
    8. ',' → logprob: -4.700581073760986
    9. 's' → logprob: -5.825581073760986
    10. '(' → logprob: -6.200581073760986

Token 99: ' mais' (ID: 2899)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.12093739956617355
    2. 'fact' → logprob: -2.4959373474121094
    3. 'inverse' → logprob: -3.7459373474121094
    4. 'fac' → logprob: -6.120937347412109
    5. ' inv' → logprob: -6.245937347412109
    6. 'in' → logprob: -6.495937347412109
    7. ' invers' → logprob: -7.495937347412109
    8. ' inverse' → logprob: -7.870937347412109
    9. ' fact' → logprob: -7.995937347412109
    10. 'factor' → logprob: -8.12093734741211

Token 100: ' on' (ID: 402)
  Prédit: ' aussi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' aussi' → logprob: -0.9372143745422363
    2. 'a' → logprob: -1.8122143745422363
    3. 'pas' → logprob: -2.6872143745422363
    4. ' on' → logprob: -2.6872143745422363
    5. ' pas' → logprob: -3.3122143745422363
    6. '#' → logprob: -3.6872143745422363
    7. 'fac' → logprob: -3.6872143745422363
    8. ' ça' → logprob: -3.8122143745422363
    9. 'on' → logprob: -4.312214374542236
    10. 's' → logprob: -4.562214374542236

Token 101: ' pourrait' (ID: 39622)
  Prédit: ' va'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' va' → logprob: -0.3507150709629059
    2. 'n' → logprob: -2.850715160369873
    3. ' fait' → logprob: -3.225715160369873
    4. ' n' → logprob: -3.975715160369873
    5. 's' → logprob: -4.100715160369873
    6. ' fera' → logprob: -4.100715160369873
    7. ' continue' → logprob: -4.225715160369873
    8. ' y' → logprob: -4.725715160369873
    9. ' calc' → logprob: -4.850715160369873
    10. 'a' → logprob: -4.975715160369873

Token 102: ' juste' (ID: 31553)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.16105219721794128
    2. 'égal' → logprob: -2.7860522270202637
    3. 'mettre' → logprob: -3.6610522270202637
    4. 'faire' → logprob: -4.286052227020264
    5. ' aussi' → logprob: -4.536052227020264
    6. 'tout' → logprob: -4.786052227020264
    7. 'penser' → logprob: -5.161052227020264
    8. 'optim' → logprob: -5.661052227020264
    9. 'just' → logprob: -5.661052227020264
    10. 'util' → logprob: -6.161052227020264

Token 103: ' prendre' (ID: 24257)
  Prédit: 'faire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'faire' → logprob: -0.6187088489532471
    2. 'factor' → logprob: -1.493708848953247
    3. 'mettre' → logprob: -2.743708848953247
    4. 'prendre' → logprob: -3.493708848953247
    5. 'range' → logprob: -3.618708848953247
    6. 'util' → logprob: -3.743708848953247
    7. ' utiliser' → logprob: -3.743708848953247
    8. 'pré' → logprob: -4.618708610534668
    9. ' faire' → logprob: -4.868708610534668
    10. 'import' → logprob: -5.243708610534668

Token 104: ' jusqu' (ID: 21961)
  Prédit: 'big'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'big' → logprob: -0.7173073887825012
    2. 'range' → logprob: -1.2173073291778564
    3. 'une' → logprob: -3.4673073291778564
    4. '[' → logprob: -3.5923073291778564
    5. ' une' → logprob: -3.7173073291778564
    6. 'un' → logprob: -3.8423073291778564
    7. '[]' → logprob: -4.2173075675964355
    8. 'n' → logprob: -4.4673075675964355
    9. ' range' → logprob: -4.5923075675964355
    10. ' big' → logprob: -4.7173075675964355

Token 105: ''à' (ID: 33688)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0644473135471344
    2. '(big' → logprob: -3.1894474029541016
    3. '(n' → logprob: -4.814447402954102
    4. ' (' → logprob: -5.314447402954102
    5. '(h' → logprob: -5.814447402954102
    6. ' ' → logprob: -6.564447402954102
    7. 'à' → logprob: -7.314447402954102
    8. 'big' → logprob: -7.564447402954102
    9. 'n' → logprob: -7.689447402954102
    10. '(b' → logprob: -8.064447402954102

Token 106: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.6400285363197327
    2. 'n' → logprob: -0.7650285363197327
    3. 'h' → logprob: -5.640028476715088
    4. ' h' → logprob: -6.015028476715088
    5. 'big' → logprob: -7.640028476715088
    6. ' big' → logprob: -7.890028476715088
    7. ' ' → logprob: -8.265028953552246
    8. 'd' → logprob: -9.640028953552246
    9. ' d' → logprob: -9.640028953552246
    10. '100' → logprob: -9.765028953552246

Token 107: ',' (ID: 11)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.047385234385728836
    2. 'fact' → logprob: -3.7973852157592773
    3. ' +' → logprob: -4.297385215759277
    4. 'factor' → logprob: -5.172385215759277
    5. ',' → logprob: -7.047385215759277
    6. 'n' → logprob: -7.172385215759277
    7. '=' → logprob: -8.047385215759277
    8. ')' → logprob: -8.297385215759277
    9. 'range' → logprob: -8.422385215759277
    10. 'big' → logprob: -8.422385215759277

Token 108: ' pas' (ID: 2173)
  Prédit: 'big'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'big' → logprob: -0.5936620235443115
    2. ' big' → logprob: -1.9686620235443115
    3. 'n' → logprob: -2.2186620235443115
    4. 'h' → logprob: -2.3436620235443115
    5. ' n' → logprob: -2.8436620235443115
    6. ' h' → logprob: -3.4686620235443115
    7. '2' → logprob: -5.468662261962891
    8. ' ' → logprob: -5.468662261962891
    9. 'max' → logprob: -7.343662261962891
    10. 'd' → logprob: -7.468662261962891

Token 109: ' grave' (ID: 30607)
  Prédit: 'big'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'big' → logprob: -0.24763749539852142
    2. 'h' → logprob: -2.1226375102996826
    3. 'n' → logprob: -3.3726375102996826
    4. ' big' → logprob: -3.9976375102996826
    5. ' jusqu' → logprob: -4.8726372718811035
    6. 'range' → logprob: -5.2476372718811035
    7. 'plus' → logprob: -5.3726372718811035
    8. 'b' → logprob: -5.8726372718811035
    9. '```' → logprob: -5.9976372718811035
    10. ' ' → logprob: -6.1226372718811035

Token 110: '
' (ID: 198)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.10732372105121613
    2. 'factor' → logprob: -2.48232364654541
    3. 'f' → logprob: -5.10732364654541
    4. '_factor' → logprob: -5.60732364654541
    5. '_fact' → logprob: -5.85732364654541
    6. '!' → logprob: -6.60732364654541
    7. 'facts' → logprob: -6.73232364654541
    8. '
' → logprob: -6.85732364654541
    9. ' fact' → logprob: -7.35732364654541
    10. 'fac' → logprob: -7.98232364654541

Token 111: 'fac' (ID: 34429)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.042564138770103455
    2. 'factor' → logprob: -3.5425641536712646
    3. 'fac' → logprob: -5.2925639152526855
    4. 'f' → logprob: -5.5425639152526855
    5. 'facts' → logprob: -5.9175639152526855
    6. ' fact' → logprob: -7.1675639152526855
    7. ' factorial' → logprob: -9.917564392089844
    8. 'fat' → logprob: -10.042564392089844
    9. 'fa' → logprob: -10.542564392089844
    10. 'Fact' → logprob: -10.542564392089844

Token 112: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06593598425388336
    2. '=' → logprob: -2.9409360885620117
    3. ',' → logprob: -4.690936088562012
    4. ' ' → logprob: -6.815936088562012
    5. 's' → logprob: -7.315936088562012
    6. '[' → logprob: -11.065936088562012
    7. ' ,' → logprob: -11.190936088562012
    8. 'or' → logprob: -12.565936088562012
    9. '```' → logprob: -12.815936088562012
    10. 't' → logprob: -13.065936088562012

Token 113: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.251936137676239
    2. ' [' → logprob: -1.5019361972808838
    3. ' ' → logprob: -12.251935958862305
    4. '[n' → logprob: -14.501935958862305
    5. '[int' → logprob: -14.626935958862305
    6. '  ' → logprob: -15.001935958862305
    7. '   ' → logprob: -15.626935958862305
    8. '[b' → logprob: -16.376935958862305
    9. '1' → logprob: -16.626935958862305
    10. ' ' → logprob: -16.751935958862305

Token 114: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7848862373502925e-05
    2. ' ' → logprob: -10.500027656555176
    3. ']' → logprob: -16.000028610229492
    4. '   ' → logprob: -16.375028610229492
    5. '  ' → logprob: -17.250028610229492
    6. 'None' → logprob: -17.625028610229492
    7. '```' → logprob: -18.625028610229492
    8. ' ' → logprob: -18.625028610229492
    9. '-' → logprob: -18.750028610229492
    10. '0' → logprob: -18.875028610229492

Token 115: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0004037402104586363
    2. ']*(' → logprob: -8.00040340423584
    3. ']*' → logprob: -10.50040340423584
    4. ']
' → logprob: -10.50040340423584
    5. ']+' → logprob: -12.37540340423584
    6. ',' → logprob: -12.87540340423584
    7. ' for' → logprob: -13.12540340423584
    8. ' ]' → logprob: -13.12540340423584
    9. ']

' → logprob: -13.75040340423584
    10. ')' → logprob: -14.75040340423584

Token 116: 'while' (ID: 7032)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8885568380355835
    2. '*' → logprob: -1.2635568380355835
    3. ' for' → logprob: -2.013556957244873
    4. 'for' → logprob: -2.888556957244873
    5. '[' → logprob: -3.013556957244873
    6. ')' → logprob: -4.263556957244873
    7. '+' → logprob: -4.388556957244873
    8. ' ' → logprob: -4.388556957244873
    9. ']' → logprob: -4.763556957244873
    10. '=' → logprob: -6.013556957244873

Token 117: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.0015381926205009222
    2. 'len' → logprob: -6.501538276672363
    3. '(len' → logprob: -10.501538276672363
    4. '	len' → logprob: -12.376538276672363
    5. ' ' → logprob: -12.501538276672363
    6. '[len' → logprob: -15.876538276672363
    7. '=len' → logprob: -16.251537322998047
    8. ' n' → logprob: -16.751537322998047
    9. '<len' → logprob: -16.876537322998047
    10. '  ' → logprob: -17.001537322998047

Token 118: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -7.822646693966817e-06
    2. '(' → logprob: -11.875007629394531
    3. ' (' → logprob: -14.500007629394531
    4. ' fac' → logprob: -15.625007629394531
    5. 'fac' → logprob: -16.25000762939453
    6. '	f' → logprob: -17.25000762939453
    7. '(face' → logprob: -18.75000762939453
    8. '_fac' → logprob: -19.00000762939453
    9. '(s' → logprob: -19.25000762939453
    10. '(
' → logprob: -19.37500762939453

Token 119: 'ac' (ID: 359)
  Prédit: 'ac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' → logprob: -9.388769103679806e-05
    2. 'fac' → logprob: -9.375093460083008
    3. '(ac' → logprob: -12.000093460083008
    4. '	ac' → logprob: -14.500093460083008
    5. '#ac' → logprob: -14.625093460083008
    6. '(' → logprob: -15.000093460083008
    7. '```' → logprob: -15.375093460083008
    8. '
' → logprob: -16.000093460083008
    9. 'a' → logprob: -16.125093460083008
    10. 'acc' → logprob: -16.125093460083008

Token 120: ')' (ID: 8)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.4804112911224365
    2. '<=' → logprob: -1.3554112911224365
    3. ' <' → logprob: -2.7304112911224365
    4. '<' → logprob: -2.8554112911224365
    5. ')' → logprob: -7.855411529541016
    6. ')<=' → logprob: -8.105411529541016
    7. ' ' → logprob: -9.355411529541016
    8. '<len' → logprob: -10.105411529541016
    9. ']<=' → logprob: -10.105411529541016
    10. '<n' → logprob: -11.355411529541016

Token 121: ' <' (ID: 464)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.7637200951576233
    2. ' <' → logprob: -1.2637200355529785
    3. '<=' → logprob: -2.0137200355529785
    4. '<' → logprob: -2.1387200355529785
    5. '<len' → logprob: -9.513720512390137
    6. ' ' → logprob: -9.888720512390137
    7. '<n' → logprob: -11.388720512390137
    8. ')<=' → logprob: -12.013720512390137
    9. ']<=' → logprob: -12.638720512390137
    10. ' ≤' → logprob: -12.638720512390137

Token 122: ' big' (ID: 3464)
  Prédit: ' big'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' big' → logprob: -0.7841491103172302
    2. 'big' → logprob: -1.409149169921875
    3. ' n' → logprob: -1.534149169921875
    4. 'n' → logprob: -2.534149169921875
    5. ' h' → logprob: -6.659149169921875
    6. 'h' → logprob: -6.659149169921875
    7. ' ' → logprob: -7.159149169921875
    8. '(big' → logprob: -8.534149169921875
    9. '=' → logprob: -9.284149169921875
    10. ' max' → logprob: -9.659149169921875

Token 123: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0029856672044843435
    2. ':
' → logprob: -6.00298547744751
    3. ' :' → logprob: -7.62798547744751
    4. ' :
' → logprob: -11.127985954284668
    5. ':

' → logprob: -13.252985954284668
    6. '+' → logprob: -13.502985954284668
    7. '*' → logprob: -13.627985954284668
    8. ' ' → logprob: -14.127985954284668
    9. '):' → logprob: -14.877985954284668
    10. ',' → logprob: -15.002985954284668

Token 124: '   ' (ID: 271)
  Prédit: 'fac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fac' → logprob: -0.12705913186073303
    2. ' fac' → logprob: -2.1270592212677
    3. '_fac' → logprob: -9.252058982849121
    4. '.fac' → logprob: -11.377058982849121
    5. '   ' → logprob: -11.627058982849121
    6. ' ' → logprob: -12.377058982849121
    7. '```' → logprob: -12.877058982849121
    8. 'Fac' → logprob: -13.627058982849121
    9. '<|end|>' → logprob: -13.877058982849121
    10. '	f' → logprob: -14.127058982849121

Token 125: ' fac' (ID: 3513)
  Prédit: 'fac'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fac' (adapté à ' fac') → logprob: -0.01815052703022957
    2. ' fac' → logprob: -4.018150329589844
    3. 'len' → logprob: -15.393150329589844
    4. '_fac' → logprob: -15.893150329589844
    5. '   ' → logprob: -16.518150329589844
    6. 'Fac' → logprob: -16.643150329589844
    7. 'fas' → logprob: -17.393150329589844
    8. 'fact' → logprob: -17.643150329589844
    9. '.fac' → logprob: -17.643150329589844
    10. 'facet' → logprob: -18.143150329589844

Token 126: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0004959598300047219
    2. '.' → logprob: -7.625495910644531
    3. ' .' → logprob: -12.750495910644531
    4. '.extend' → logprob: -12.750495910644531
    5. '.app' → logprob: -13.250495910644531
    6. 'append' → logprob: -16.00049591064453
    7. '[-' → logprob: -16.12549591064453
    8. '.ap' → logprob: -16.37549591064453
    9. '​.' → logprob: -18.37549591064453
    10. ' *=' → logprob: -18.50049591064453

Token 127: '((' (ID: 2054)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -9.078839502763003e-05
    2. '((' → logprob: -9.625090599060059
    3. '(' → logprob: -10.625090599060059
    4. ' fac' → logprob: -16.250091552734375
    5. '	f' → logprob: -16.250091552734375
    6. '(len' → logprob: -16.625091552734375
    7. 'fac' → logprob: -16.875091552734375
    8. 'f' → logprob: -17.625091552734375
    9. ' (' → logprob: -18.750091552734375
    10. '(
' → logprob: -19.375091552734375

Token 128: 'fac' (ID: 34429)
  Prédit: 'fac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fac' → logprob: -0.000718030845746398
    2. ' fac' → logprob: -7.250718116760254
    3. 'len' → logprob: -11.750718116760254
    4. ' ' → logprob: -16.875717163085938
    5. '.fac' → logprob: -17.000717163085938
    6. '_fac' → logprob: -17.500717163085938
    7. 'fas' → logprob: -17.875717163085938
    8. 'f' → logprob: -18.000717163085938
    9. ' len' → logprob: -18.000717163085938
    10. '   ' → logprob: -18.125717163085938

Token 129: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: 0.0
    2. ' [-' → logprob: -17.625
    3. '   ' → logprob: -19.125
    4. '[' → logprob: -19.5
    5. '[len' → logprob: -20.875
    6. ' ' → logprob: -21.0
    7. '
' → logprob: -21.0
    8. '][-' → logprob: -21.25
    9. '	' → logprob: -22.0
    10. '-' → logprob: -23.125

Token 130: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005969438701868057
    2. ' ' → logprob: -6.130969524383545
    3. 'len' → logprob: -6.505969524383545
    4. '   ' → logprob: -6.630969524383545
    5. '  ' → logprob: -8.505969047546387
    6. 's' → logprob: -8.880969047546387
    7. '*' → logprob: -8.880969047546387
    8. '
' → logprob: -9.755969047546387
    9. '()' → logprob: -10.255969047546387
    10. ')' → logprob: -10.380969047546387

Token 131: ']' (ID: 60)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.4741549789905548
    2. '*' → logprob: -0.9741549491882324
    3. ' ' → logprob: -9.59915542602539
    4. ')' → logprob: -12.34915542602539
    5. ' ' → logprob: -13.09915542602539
    6. '   ' → logprob: -13.34915542602539
    7. '  ' → logprob: -14.34915542602539
    8. ')*' → logprob: -14.47415542602539
    9. '*
' → logprob: -15.84915542602539
    10. '*n' → logprob: -15.97415542602539

Token 132: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.25193825364112854
    2. ' *' → logprob: -1.5019382238388062
    3. ' ' → logprob: -11.751937866210938
    4. ' ' → logprob: -14.126937866210938
    5. '   ' → logprob: -16.376937866210938
    6. '  ' → logprob: -16.376937866210938
    7. '*
' → logprob: -16.626937866210938
    8. '**' → logprob: -16.626937866210938
    9. '*i' → logprob: -16.876937866210938
    10. '*object' → logprob: -16.876937866210938

Token 133: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.11304644495248795
    2. ' len' → logprob: -2.238046407699585
    3. '(len' → logprob: -8.488046646118164
    4. ' ' → logprob: -11.613046646118164
    5. ' (' → logprob: -12.863046646118164
    6. '	len' → logprob: -13.238046646118164
    7. '  ' → logprob: -13.363046646118164
    8. '[len' → logprob: -13.363046646118164
    9. 'leni' → logprob: -14.863046646118164
    10. 'fac' → logprob: -15.113046646118164

Token 134: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -4.36574100604048e-06
    2. '(' → logprob: -12.625004768371582
    3. 'fac' → logprob: -14.250004768371582
    4. '	f' → logprob: -16.000003814697266
    5. '(sys' → logprob: -16.875003814697266
    6. '(range' → logprob: -16.875003814697266
    7. '(
' → logprob: -17.125003814697266
    8. ' fac' → logprob: -17.125003814697266
    9. ')' → logprob: -17.875003814697266
    10. 's' → logprob: -18.375003814697266

Token 135: 'ac' (ID: 359)
  Prédit: 'fac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fac' → logprob: -0.028251921758055687
    2. '(f' → logprob: -4.028252124786377
    3. 'ac' → logprob: -4.903252124786377
    4. ' fac' → logprob: -6.403252124786377
    5. 'f' → logprob: -8.403251647949219
    6. ')' → logprob: -8.903251647949219
    7. 's' → logprob: -9.153251647949219
    8. '_fac' → logprob: -9.278251647949219
    9. '(ac' → logprob: -9.528251647949219
    10. '.fac' → logprob: -9.528251647949219

Token 136: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003357006062287837
    2. ' )' → logprob: -8.125335693359375
    3. ')%' → logprob: -10.375335693359375
    4. '))' → logprob: -11.750335693359375
    5. '   ' → logprob: -15.750335693359375
    6. ' ' → logprob: -16.500335693359375
    7. '())' → logprob: -16.750335693359375
    8. ' ))' → logprob: -17.250335693359375
    9. '`)' → logprob: -17.875335693359375
    10. '  ' → logprob: -18.250335693359375

Token 137: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.20168493688106537
    2. '%' → logprob: -1.7016849517822266
    3. ')' → logprob: -8.326684951782227
    4. ')%' → logprob: -10.701684951782227
    5. '%s' → logprob: -14.076684951782227
    6. ' ' → logprob: -14.076684951782227
    7. '%d' → logprob: -14.076684951782227
    8. ' ' → logprob: -14.076684951782227
    9. '%n' → logprob: -14.076684951782227
    10. '%D' → logprob: -14.076684951782227

Token 138: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0031806828919798136
    2. ' mod' → logprob: -5.753180503845215
    3. '(mod' → logprob: -12.753180503845215
    4. '	mod' → logprob: -17.25318145751953
    5. 'MOD' → logprob: -17.37818145751953
    6. ' ' → logprob: -17.62818145751953
    7. '10' → logprob: -19.62818145751953
    8. 'm' → logprob: -20.37818145751953
    9. '_mod' → logprob: -20.50318145751953
    10. '.mod' → logprob: -20.87818145751953

Token 139: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.610702363715973e-06
    2. ' )' → logprob: -11.750009536743164
    3. ')
' → logprob: -13.375009536743164
    4. '))' → logprob: -16.500009536743164
    5. ')

' → logprob: -18.125009536743164
    6. ')`' → logprob: -18.250009536743164
    7. '),' → logprob: -18.625009536743164
    8. ')#' → logprob: -19.875009536743164
    9. ').' → logprob: -20.250009536743164
    10. ' ' → logprob: -20.500009536743164

Token 140: '#' (ID: 2)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.16230058670043945
    2. 'inverse' → logprob: -2.2873005867004395
    3. '<|end|>' → logprob: -3.7873005867004395
    4. 'ifact' → logprob: -4.6623005867004395
    5. 'fact' → logprob: -5.2873005867004395
    6. 'factor' → logprob: -6.0373005867004395
    7. '#' → logprob: -6.1623005867004395
    8. 'def' → logprob: -6.5373005867004395
    9. 'rev' → logprob: -7.4123005867004395
    10. 'if' → logprob: -7.5373005867004395

Token 141: ' cumul' (ID: 163119)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.010426531545817852
    2. 'def' → logprob: -4.6354265213012695
    3. 'ifact' → logprob: -8.88542652130127
    4. '#' → logprob: -9.01042652130127
    5. 'inf' → logprob: -9.13542652130127
    6. 'fin' → logprob: -9.63542652130127
    7. 'if' → logprob: -10.01042652130127
    8. 'for' → logprob: -10.26042652130127
    9. 'inverse' → logprob: -10.38542652130127
    10. 'iv' → logprob: -10.76042652130127

Token 142: ' des' (ID: 731)
  Prédit: 'fac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fac' → logprob: -0.9092119932174683
    2. '=' → logprob: -1.2842119932174683
    3. ' =' → logprob: -1.4092119932174683
    4. 'sum' → logprob: -2.659212112426758
    5. '=[' → logprob: -6.659212112426758
    6. '_fac' → logprob: -6.659212112426758
    7. '[' → logprob: -6.784212112426758
    8. '=sum' → logprob: -7.034212112426758
    9. 's' → logprob: -8.159212112426758
    10. '=[]' → logprob: -8.534212112426758

Token 143: ' fact' (ID: 2840)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.04673517495393753
    2. 'inverse' → logprob: -3.6717352867126465
    3. 'in' → logprob: -4.7967352867126465
    4. ' inv' → logprob: -5.1717352867126465
    5. ' inverse' → logprob: -5.7967352867126465
    6. 'fac' → logprob: -6.6717352867126465
    7. ' invers' → logprob: -6.9217352867126465
    8. 'fact' → logprob: -7.9217352867126465
    9. 'ifact' → logprob: -9.296734809875488
    10. 'factor' → logprob: -9.796734809875488

Token 144: 'ori' (ID: 6510)
  Prédit: 'ic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ic' → logprob: -0.07760950177907944
    2. 's' → logprob: -3.5776095390319824
    3. 'o' → logprob: -4.827609539031982
    4. 'sum' → logprob: -5.077609539031982
    5. 'cum' → logprob: -5.202609539031982
    6. 'fac' → logprob: -5.702609539031982
    7. 'pow' → logprob: -5.952609539031982
    8. '```' → logprob: -6.577609539031982
    9. 'i' → logprob: -6.702609539031982
    10. 'ieres' → logprob: -6.827609539031982

Token 145: 'elles' (ID: 8500)
  Prédit: 'elles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elles' → logprob: -0.018209997564554214
    2. 'ères' → logprob: -4.143209934234619
    3. 'ales' → logprob: -6.768209934234619
    4. 'els' → logprob: -8.268210411071777
    5. 'nelles' → logprob: -8.643210411071777
    6. 'èles' → logprob: -9.393210411071777
    7. 'a' → logprob: -9.518210411071777
    8. 'alles' → logprob: -9.518210411071777
    9. 'les' → logprob: -9.893210411071777
    10. 'al' → logprob: -10.018210411071777

Token 146: ',' (ID: 11)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.2326163649559021
    2. 'cum' → logprob: -2.482616424560547
    3. 'sum' → logprob: -2.607616424560547
    4. 'fac' → logprob: -3.982616424560547
    5. 's' → logprob: -4.732616424560547
    6. 'fact' → logprob: -4.982616424560547
    7. 'pow' → logprob: -5.607616424560547
    8. 'f' → logprob: -5.857616424560547
    9. '_inv' → logprob: -6.107616424560547
    10. '[' → logprob: -6.607616424560547

Token 147: ' pas' (ID: 2173)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.005471024662256241
    2. ' inv' → logprob: -5.755471229553223
    3. 'cum' → logprob: -6.380471229553223
    4. '#' → logprob: -9.255471229553223
    5. 'for' → logprob: -9.255471229553223
    6. 'fac' → logprob: -9.380471229553223
    7. 'fin' → logprob: -9.505471229553223
    8. 'f' → logprob: -10.130471229553223
    9. 'inf' → logprob: -10.380471229553223
    10. 'sum' → logprob: -11.005471229553223

Token 148: ' certain' (ID: 4454)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.5094810724258423
    2. ' vraiment' → logprob: -2.0094809532165527
    3. 'de' → logprob: -2.2594809532165527
    4. ' seulement' → logprob: -2.7594809532165527
    5. 'que' → logprob: -2.8844809532165527
    6. 'c' → logprob: -3.1344809532165527
    7. '[' → logprob: -3.6344809532165527
    8. 'd' → logprob: -3.7594809532165527
    9. '#' → logprob: -3.7594809532165527
    10. ' de' → logprob: -3.7594809532165527

Token 149: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -1.1726913452148438
    2. ' des' → logprob: -1.4226913452148438
    3. 'des' → logprob: -2.4226913452148438
    4. ' d' → logprob: -2.5476913452148438
    5. 'fact' → logprob: -3.1726913452148438
    6. 'inverse' → logprob: -3.2976913452148438
    7. 'd' → logprob: -3.5476913452148438
    8. 'de' → logprob: -3.7976913452148438
    9. ' de' → logprob: -3.7976913452148438
    10. 'fac' → logprob: -3.9226913452148438

Token 150: ' ça' (ID: 13590)
  Prédit: ' ce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ce' → logprob: -0.05608931556344032
    2. 'fac' → logprob: -3.556089401245117
    3. 'len' → logprob: -4.431089401245117
    4. 'ce' → logprob: -4.681089401245117
    5. ' ça' → logprob: -6.306089401245117
    6. ' len' → logprob: -6.556089401245117
    7. '(len' → logprob: -8.306089401245117
    8. 'cela' → logprob: -8.556089401245117
    9. 'c' → logprob: -8.806089401245117
    10. ' fac' → logprob: -8.806089401245117

Token 151: ' soit' (ID: 17293)
  Prédit: 'serve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'serve' → logprob: -0.3750336468219757
    2. ' serve' → logprob: -1.8750336170196533
    3. ' soit' → logprob: -2.2500336170196533
    4. 'serv' → logprob: -4.000033855438232
    5. ' ait' → logprob: -5.125033855438232
    6. 's' → logprob: -5.250033855438232
    7. 'a' → logprob: -5.625033855438232
    8. 'so' → logprob: -5.750033855438232
    9. ' fasse' → logprob: -5.875033855438232
    10. 'continue' → logprob: -6.000033855438232

Token 152: ' le' (ID: 505)
  Prédit: 'utile'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'utile' → logprob: -0.510440468788147
    2. ' utile' → logprob: -1.135440468788147
    3. 'util' → logprob: -3.1354403495788574
    4. 'bien' → logprob: -4.760440349578857
    5. 'né' → logprob: -5.260440349578857
    6. ' nécessaire' → logprob: -5.385440349578857
    7. 'just' → logprob: -5.760440349578857
    8. 'tr' → logprob: -6.385440349578857
    9. ' utilisé' → logprob: -6.510440349578857
    10. 'necess' → logprob: -6.885440349578857

Token 153: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.8964291214942932
    2. 'fact' → logprob: -1.1464290618896484
    3. 'factor' → logprob: -1.6464290618896484
    4. 'bon' → logprob: -3.6464290618896484
    5. 'me' → logprob: -3.7714290618896484
    6. 'fait' → logprob: -4.896429061889648
    7. 'fac' → logprob: -5.146429061889648
    8. 'm' → logprob: -5.771429061889648
    9. 'inverse' → logprob: -5.771429061889648
    10. 'but' → logprob: -6.396429061889648

Token 154: ' efficace' (ID: 54338)
  Prédit: 'optimal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'optimal' → logprob: -0.24502404034137726
    2. 'optim' → logprob: -2.6200239658355713
    3. 'pert' → logprob: -2.8700239658355713
    4. 'efficient' → logprob: -3.9950239658355713
    5. 'utile' → logprob: -4.12002420425415
    6. ' efficace' → logprob: -4.49502420425415
    7. ' optimal' → logprob: -4.62002420425415
    8. 'opt' → logprob: -5.49502420425415
    9. ' adapté' → logprob: -5.74502420425415
    10. 'adapt' → logprob: -5.74502420425415

Token 155: '...
' (ID: 4908)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.6046033501625061
    2. 'fac' → logprob: -1.4796032905578613
    3. 'inv' → logprob: -2.6046032905578613
    4. 'f' → logprob: -3.1046032905578613
    5. 'sum' → logprob: -3.1046032905578613
    6. 'for' → logprob: -4.729603290557861
    7. 's' → logprob: -4.729603290557861
    8. 'factor' → logprob: -4.854603290557861
    9. 'pow' → logprob: -4.979603290557861
    10. 'inverse' → logprob: -4.979603290557861

Token 156: 'cum' (ID: 89165)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.19557908177375793
    2. 'cum' → logprob: -1.8205790519714355
    3. 'for' → logprob: -5.0705790519714355
    4. 'sum' → logprob: -6.1955790519714355
    5. 'ic' → logprob: -6.3205790519714355
    6. 'acc' → logprob: -7.3205790519714355
    7. 'f' → logprob: -7.4455790519714355
    8. 'com' → logprob: -7.5705790519714355
    9. 'ifact' → logprob: -7.5705790519714355
    10. 'c' → logprob: -7.6955790519714355

Token 157: 'fac' (ID: 34429)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.29064756631851196
    2. ' =' → logprob: -1.4156475067138672
    3. 'fac' → logprob: -5.665647506713867
    4. '.append' → logprob: -5.915647506713867
    5. '_fac' → logprob: -6.790647506713867
    6. 'sum' → logprob: -7.290647506713867
    7. '=[' → logprob: -8.290647506713867
    8. 'f' → logprob: -8.915647506713867
    9. '.' → logprob: -9.165647506713867
    10. '_' → logprob: -9.165647506713867

Token 158: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25216254591941833
    2. ' =' → logprob: -1.5021625757217407
    3. '.append' → logprob: -8.62716293334961
    4. 's' → logprob: -10.62716293334961
    5. '.' → logprob: -12.00216293334961
    6. '_' → logprob: -12.12716293334961
    7. '[' → logprob: -12.25216293334961
    8. '=[]' → logprob: -12.37716293334961
    9. '=[' → logprob: -13.00216293334961
    10. '.=' → logprob: -13.37716293334961

Token 159: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.018155328929424286
    2. ' [' → logprob: -4.018155097961426
    3. 'fac' → logprob: -13.643155097961426
    4. ' ' → logprob: -13.768155097961426
    5. '[]' → logprob: -14.143155097961426
    6. '[len' → logprob: -14.268155097961426
    7. '[f' → logprob: -14.893155097961426
    8. '[int' → logprob: -15.268155097961426
    9. '[i' → logprob: -15.518155097961426
    10. '[n' → logprob: -15.768155097961426

Token 160: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0040519218891859055
    2. '0' → logprob: -6.004051685333252
    3. 'fac' → logprob: -6.504051685333252
    4. ' ' → logprob: -9.62905216217041
    5. '   ' → logprob: -13.37905216217041
    6. ']' → logprob: -13.50405216217041
    7. '```' → logprob: -13.50405216217041
    8. '(' → logprob: -13.50405216217041
    9. '
' → logprob: -13.62905216217041
    10. '[' → logprob: -13.75405216217041

Token 161: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04859395697712898
    2. ']
' → logprob: -3.5485939979553223
    3. ',' → logprob: -4.048593997955322
    4. '1' → logprob: -6.798593997955322
    5. ']+' → logprob: -10.048593521118164
    6. ']

' → logprob: -10.798593521118164
    7. ']
' → logprob: -11.423593521118164
    8. '0' → logprob: -11.673593521118164
    9. ')' → logprob: -12.048593521118164
    10. '[' → logprob: -12.298593521118164

Token 162: 'for' (ID: 1938)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.32114657759666443
    2. 'for' → logprob: -1.3211466073989868
    3. 'fac' → logprob: -5.196146488189697
    4. 'cum' → logprob: -6.696146488189697
    5. ' while' → logprob: -8.446146965026855
    6. 'i' → logprob: -8.571146965026855
    7. '0' → logprob: -8.696146965026855
    8. 'acc' → logprob: -8.946146965026855
    9. 'current' → logprob: -9.321146965026855
    10. 'c' → logprob: -9.696146965026855

Token 163: ' ff' (ID: 35384)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.608154833316803
    2. ' i' → logprob: -0.983154833316803
    3. 'x' → logprob: -3.733154773712158
    4. 'f' → logprob: -3.858154773712158
    5. ' f' → logprob: -3.858154773712158
    6. ' x' → logprob: -4.483154773712158
    7. ' v' → logprob: -6.733154773712158
    8. 'v' → logprob: -6.983154773712158
    9. 'k' → logprob: -7.108154773712158
    10. ' k' → logprob: -7.983154773712158

Token 164: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011127048172056675
    2. 'in' → logprob: -4.51112699508667
    3. 'ac' → logprob: -9.761127471923828
    4. 'f' → logprob: -11.636127471923828
    5. ' ' → logprob: -12.136127471923828
    6. 'i' → logprob: -12.761127471923828
    7. 'fac' → logprob: -14.011127471923828
    8. '  ' → logprob: -14.261127471923828
    9. ' i' → logprob: -15.136127471923828
    10. 'a' → logprob: -15.136127471923828

Token 165: ' fac' (ID: 3513)
  Prédit: 'fac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fac' → logprob: -0.47425657510757446
    2. ' fac' → logprob: -0.9742565751075745
    3. ' range' → logprob: -9.59925651550293
    4. ' ' → logprob: -9.97425651550293
    5. '  ' → logprob: -10.59925651550293
    6. '   ' → logprob: -11.09925651550293
    7. 'f' → logprob: -12.22425651550293
    8. 'range' → logprob: -12.34925651550293
    9. 'Fac' → logprob: -12.47425651550293
    10. '	f' → logprob: -12.59925651550293

Token 166: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08918885141611099
    2. ':
' → logprob: -2.464188814163208
    3. ':c' → logprob: -9.589188575744629
    4. 'cum' → logprob: -9.589188575744629
    5. '   ' → logprob: -10.214188575744629
    6. ',' → logprob: -10.964188575744629
    7. '[' → logprob: -11.589188575744629
    8. '+' → logprob: -11.589188575744629
    9. '[:-' → logprob: -11.589188575744629
    10. ':
' → logprob: -11.839188575744629

Token 167: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03038381226360798
    2. 'cum' → logprob: -4.155383586883545
    3. '	c' → logprob: -4.780383586883545
    4. ' cum' → logprob: -5.280383586883545
    5. 'c' → logprob: -7.780383586883545
    6. ' cumul' → logprob: -8.780384063720703
    7. '   ' → logprob: -9.030384063720703
    8. ' cumulative' → logprob: -10.280384063720703
    9. ',c' → logprob: -11.905384063720703
    10. ' c' → logprob: -12.155384063720703

Token 168: ' cum' (ID: 10023)
  Prédit: 'cum'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cum' (adapté à ' cum') → logprob: -0.00023250321100931615
    2. '   ' → logprob: -8.500232696533203
    3. ' cum' → logprob: -10.500232696533203
    4. 'c' → logprob: -14.000232696533203
    5. '	c' → logprob: -14.750232696533203
    6. ' ' → logprob: -16.875232696533203
    7. 'if' → logprob: -17.250232696533203
    8. '  ' → logprob: -17.500232696533203
    9. '    
' → logprob: -17.750232696533203
    10. 'cu' → logprob: -17.875232696533203

Token 169: 'fac' (ID: 34429)
  Prédit: 'fac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fac' → logprob: -1.735893965815194e-05
    2. '   ' → logprob: -11.625017166137695
    3. 'fact' → logprob: -13.000017166137695
    4. 'ac' → logprob: -14.000017166137695
    5. 'f' → logprob: -14.000017166137695
    6. 'fc' → logprob: -14.125017166137695
    7. ' fac' → logprob: -14.125017166137695
    8. '    
' → logprob: -14.125017166137695
    9. '_fac' → logprob: -14.375017166137695
    10. 'cum' → logprob: -15.250017166137695

Token 170: '.append' (ID: 3709)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.3961097300052643
    2. '.append' → logprob: -1.146109700202942
    3. '=' → logprob: -5.021109580993652
    4. ' +=' → logprob: -6.271109580993652
    5. 'append' → logprob: -7.646109580993652
    6. ' =' → logprob: -10.021109580993652
    7. '+' → logprob: -10.021109580993652
    8. ']+=' → logprob: -10.396109580993652
    9. '.=' → logprob: -10.521109580993652
    10. '_append' → logprob: -10.771109580993652

Token 171: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.04485384747385979
    2. '(' → logprob: -3.169853925704956
    3. '(c' → logprob: -6.294853687286377
    4. '(f' → logprob: -13.044854164123535
    5. ' (' → logprob: -13.294854164123535
    6. '(((' → logprob: -13.669854164123535
    7. ' ((' → logprob: -14.419854164123535
    8. '(abs' → logprob: -15.544854164123535
    9. '(cur' → logprob: -15.919854164123535
    10. '[(' → logprob: -16.04485321044922

Token 172: 'cum' (ID: 89165)
  Prédit: 'cum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cum' → logprob: -0.0022154422476887703
    2. ' cum' → logprob: -6.127215385437012
    3. '(c' → logprob: -11.127215385437012
    4. '   ' → logprob: -11.752215385437012
    5. ' ' → logprob: -13.377215385437012
    6. 'ff' → logprob: -13.752215385437012
    7. 'cf' → logprob: -13.752215385437012
    8. '	c' → logprob: -14.127215385437012
    9. ' (' → logprob: -14.252215385437012
    10. '  ' → logprob: -14.377215385437012

Token 173: 'fac' (ID: 34429)
  Prédit: 'fac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fac' → logprob: -0.00041851779678836465
    2. 'ff' → logprob: -8.125418663024902
    3. 'fc' → logprob: -9.625418663024902
    4. 'f' → logprob: -10.875418663024902
    5. '[' → logprob: -11.125418663024902
    6. '   ' → logprob: -12.625418663024902
    7. 'af' → logprob: -12.625418663024902
    8. '+' → logprob: -13.250418663024902
    9. '
' → logprob: -13.500418663024902
    10. 'fa' → logprob: -13.500418663024902

Token 174: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -5.512236498361744e-07
    2. ' [-' → logprob: -14.750000953674316
    3. '[' → logprob: -17.375
    4. '
' → logprob: -17.375
    5. '   ' → logprob: -18.375
    6. '][-' → logprob: -18.625
    7. '-' → logprob: -19.0
    8. '+' → logprob: -19.25
    9. ' ' → logprob: -19.875
    10. '[
' → logprob: -20.75

Token 175: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.008129963040119e-06
    2. '-' → logprob: -13.000003814697266
    3. ' ' → logprob: -13.500003814697266
    4. ']' → logprob: -16.250003814697266
    5. '   ' → logprob: -16.250003814697266
    6. '+' → logprob: -17.250003814697266
    7. '```' → logprob: -17.250003814697266
    8. '
' → logprob: -17.500003814697266
    9. ' -' → logprob: -18.000003814697266
    10. '       ' → logprob: -18.375003814697266

Token 176: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2014138251543045
    2. '+' → logprob: -1.701413869857788
    3. ' ' → logprob: -15.701414108276367
    4. ' ' → logprob: -15.701414108276367
    5. ' +
' → logprob: -16.451414108276367
    6. ' plus' → logprob: -17.201414108276367
    7. '+
' → logprob: -17.451414108276367
    8. '
' → logprob: -18.201414108276367
    9. '＋' → logprob: -18.951414108276367
    10. '1' → logprob: -19.576414108276367

Token 177: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.31326448917388916
    2. '+' → logprob: -1.3132644891738892
    3. ' ' → logprob: -13.313264846801758
    4. ' +
' → logprob: -14.813264846801758
    5. '+
' → logprob: -14.938264846801758
    6. ' ' → logprob: -15.438264846801758
    7. ' plus' → logprob: -15.938264846801758
    8. '
' → logprob: -16.813264846801758
    9. ' ff' → logprob: -18.313264846801758
    10. 'ff' → logprob: -18.563264846801758

Token 178: ' ff' (ID: 35384)
  Prédit: 'ff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ff' → logprob: -0.014165629632771015
    2. ' ff' → logprob: -4.26416540145874
    3. ' ' → logprob: -14.014165878295898
    4. '(ff' → logprob: -14.764165878295898
    5. '  ' → logprob: -15.139165878295898
    6. '   ' → logprob: -15.639165878295898
    7. 'fff' → logprob: -15.889165878295898
    8. '_ff' → logprob: -16.1391658782959
    9. '	ff' → logprob: -16.3891658782959
    10. 'f' → logprob: -16.6391658782959

Token 179: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.286852345103398e-05
    2. ')%' → logprob: -10.375042915344238
    3. ' )' → logprob: -11.375042915344238
    4. '*' → logprob: -16.500041961669922
    5. '))' → logprob: -17.250041961669922
    6. ')
' → logprob: -18.000041961669922
    7. '%' → logprob: -18.750041961669922
    8. ' *' → logprob: -19.875041961669922
    9. '）' → logprob: -20.000041961669922
    10. '+' → logprob: -20.375041961669922

Token 180: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.3305085003376007
    2. ' %' → logprob: -1.3305084705352783
    3. ')' → logprob: -4.080508708953857
    4. ')%' → logprob: -8.5805082321167
    5. ' )' → logprob: -12.2055082321167
    6. '%)' → logprob: -13.2055082321167
    7. ' ' → logprob: -13.2055082321167
    8. ' %)' → logprob: -13.3305082321167
    9. ' ' → logprob: -14.0805082321167
    10. '   ' → logprob: -14.8305082321167

Token 181: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0015023599844425917
    2. ' mod' → logprob: -6.501502513885498
    3. '(mod' → logprob: -17.876502990722656
    4. ' ' → logprob: -19.126502990722656
    5. '	mod' → logprob: -19.126502990722656
    6. ' мод' → logprob: -23.126502990722656
    7. '   ' → logprob: -23.251502990722656
    8. '.mod' → logprob: -23.751502990722656
    9. '_mod' → logprob: -23.876502990722656
    10. '  ' → logprob: -24.251502990722656

Token 182: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8624639324116288e-06
    2. ')
' → logprob: -13.500001907348633
    3. ' )' → logprob: -14.875001907348633
    4. ')`' → logprob: -17.250001907348633
    5. '))' → logprob: -18.500001907348633
    6. ')return' → logprob: -18.875001907348633
    7. ')

' → logprob: -19.000001907348633
    8. '),' → logprob: -19.125001907348633
    9. ')}' → logprob: -19.375001907348633
    10. '）' → logprob: -20.000001907348633

Token 183: 'DP' (ID: 16851)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7927901744842529
    2. ')' → logprob: -0.9177901744842529
    3. '<|end|>' → logprob: -2.917790174484253
    4. 'def' → logprob: -3.167790174484253
    5. 'n' → logprob: -3.792790174484253
    6. '
' → logprob: -4.417790412902832
    7. ']' → logprob: -4.917790412902832
    8. 'f' → logprob: -6.667790412902832
    9. 'factor' → logprob: -6.917790412902832
    10. 'i' → logprob: -7.167790412902832

Token 184: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018313119187951088
    2. '=' → logprob: -4.018312931060791
    3. '[' → logprob: -9.76831340789795
    4. '_' → logprob: -10.26831340789795
    5. '0' → logprob: -11.14331340789795
    6. '1' → logprob: -12.01831340789795
    7. 's' → logprob: -12.26831340789795
    8. 'n' → logprob: -12.51831340789795
    9. ',' → logprob: -12.64331340789795
    10. 'a' → logprob: -12.64331340789795

Token 185: ' [' (ID: 723)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.0815570056438446
    2. '[' → logprob: -2.581557035446167
    3. ' [[' → logprob: -6.581556797027588
    4. '[n' → logprob: -7.206556797027588
    5. '{}' → logprob: -8.206557273864746
    6. ' [' → logprob: -8.831557273864746
    7. '[-' → logprob: -10.456557273864746
    8. '{' → logprob: -10.581557273864746
    9. '[]' → logprob: -11.081557273864746
    10. '[(' → logprob: -11.331557273864746

Token 186: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12980030477046967
    2. '[' → logprob: -2.129800319671631
    3. '1' → logprob: -6.129800319671631
    4. ' [' → logprob: -8.629799842834473
    5. '[h' → logprob: -9.129799842834473
    6. '(' → logprob: -9.254799842834473
    7. '[n' → logprob: -9.629799842834473
    8. '-' → logprob: -9.879799842834473
    9. '[-' → logprob: -10.129799842834473
    10. ']' → logprob: -10.379799842834473

Token 187: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0015002215513959527
    2. ']*(' → logprob: -6.876500129699707
    3. ' for' → logprob: -8.251500129699707
    4. ' ]' → logprob: -9.376500129699707
    5. ']*' → logprob: -9.501500129699707
    6. 'for' → logprob: -10.126500129699707
    7. ',' → logprob: -12.751500129699707
    8. ']+' → logprob: -12.876500129699707
    9. '][' → logprob: -15.251500129699707
    10. ')' → logprob: -15.626500129699707

Token 188: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0298380795866251
    2. ' for' → logprob: -4.4048380851745605
    3. ']*(' → logprob: -4.4048380851745605
    4. ']*' → logprob: -6.4048380851745605
    5. 'for' → logprob: -6.7798380851745605
    6. '*' → logprob: -6.9048380851745605
    7. ' *' → logprob: -7.7798380851745605
    8. ',' → logprob: -8.029837608337402
    9. '*(' → logprob: -8.654837608337402
    10. '[' → logprob: -9.779837608337402

Token 189: ' (' (ID: 350)
  Prédit: '(big'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(big' → logprob: -0.5522431135177612
    2. '(h' → logprob: -1.0522431135177612
    3. '(n' → logprob: -3.427243232727051
    4. ' (' → logprob: -4.677243232727051
    5. 'big' → logprob: -4.677243232727051
    6. '(' → logprob: -4.802243232727051
    7. '(max' → logprob: -5.052243232727051
    8. '(d' → logprob: -5.427243232727051
    9. 'h' → logprob: -6.302243232727051
    10. 'n' → logprob: -6.677243232727051

Token 190: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -1.360051155090332
    2. 'big' → logprob: -1.360051155090332
    3. '(h' → logprob: -1.360051155090332
    4. 'n' → logprob: -2.360051155090332
    5. '(big' → logprob: -2.735051155090332
    6. '(n' → logprob: -2.860051155090332
    7. '(' → logprob: -5.485051155090332
    8. ' (' → logprob: -5.735051155090332
    9. 'd' → logprob: -6.485051155090332
    10. '(d' → logprob: -6.860051155090332

Token 191: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.038042064756155014
    2. ' +' → logprob: -3.2880420684814453
    3. ' ' → logprob: -15.913042068481445
    4. '+h' → logprob: -16.038042068481445
    5. '+
' → logprob: -16.163042068481445
    6. ')' → logprob: -16.288042068481445
    7. ' +
' → logprob: -17.288042068481445
    8. '+n' → logprob: -17.413042068481445
    9. '+)' → logprob: -17.663042068481445
    10. 'h' → logprob: -18.288042068481445

Token 192: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02835042215883732
    2. '2' → logprob: -3.778350353240967
    3. 'd' → logprob: -5.903350353240967
    4. ' ' → logprob: -6.153350353240967
    5. ' d' → logprob: -8.653350830078125
    6. '10' → logprob: -10.153350830078125
    7. '3' → logprob: -11.528350830078125
    8. '5' → logprob: -12.903350830078125
    9. '100' → logprob: -13.403350830078125
    10. '11' → logprob: -13.653350830078125

Token 193: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06109178066253662
    2. '2' → logprob: -3.061091899871826
    3. 'd' → logprob: -4.436091899871826
    4. '10' → logprob: -8.186091423034668
    5. '3' → logprob: -8.811091423034668
    6. ' ' → logprob: -9.936091423034668
    7. '5' → logprob: -10.061091423034668
    8. '11' → logprob: -11.186091423034668
    9. '4' → logprob: -11.311091423034668
    10. ' d' → logprob: -11.686091423034668

Token 194: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.911954500945285e-05
    2. ' )' → logprob: -9.375088691711426
    3. '+' → logprob: -13.125088691711426
    4. ')
' → logprob: -13.375088691711426
    5. ' +' → logprob: -15.500088691711426
    6. '))' → logprob: -16.000089645385742
    7. '}' → logprob: -16.500089645385742
    8. ']' → logprob: -16.875089645385742
    9. '),' → logprob: -16.875089645385742
    10. ')

' → logprob: -17.125089645385742

Token 195: 'DP' (ID: 16851)
  Prédit: 'DP'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.0017825218383222818
    2. 'for' → logprob: -6.501782417297363
    3. 'dp' → logprob: -9.251782417297363
    4. '0' → logprob: -9.501782417297363
    5. '<|end|>' → logprob: -9.876782417297363
    6. '[' → logprob: -11.126782417297363
    7. '_DP' → logprob: -11.501782417297363
    8. ' DP' → logprob: -11.626782417297363
    9. ' for' → logprob: -12.251782417297363
    10. 'range' → logprob: -13.126782417297363

Token 196: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.208653162000701e-05
    2. '[-' → logprob: -10.500082015991211
    3. '[h' → logprob: -10.500082015991211
    4. '<|end|>' → logprob: -11.250082015991211
    5. '[
' → logprob: -12.750082015991211
    6. '0' → logprob: -13.125082015991211
    7. ' =' → logprob: -13.375082015991211
    8. '[:]' → logprob: -13.375082015991211
    9. ' [' → logprob: -13.500082015991211
    10. '=' → logprob: -13.875082015991211

Token 197: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001587462262250483
    2. 'h' → logprob: -6.501587390899658
    3. '1' → logprob: -10.126587867736816
    4. ' ' → logprob: -10.876587867736816
    5. 'd' → logprob: -11.126587867736816
    6. 'n' → logprob: -12.376587867736816
    7. '-' → logprob: -13.251587867736816
    8. '[' → logprob: -14.376587867736816
    9. '2' → logprob: -14.376587867736816
    10. '   ' → logprob: -14.376587867736816

Token 198: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -8.53050296427682e-05
    2. ' ]' → logprob: -9.62508487701416
    3. ']=' → logprob: -10.87508487701416
    4. '=' → logprob: -15.12508487701416
    5. ')' → logprob: -17.375085830688477
    6. ']
' → logprob: -18.000085830688477
    7. '[' → logprob: -18.000085830688477
    8. ']+=' → logprob: -18.375085830688477
    9. ' ' → logprob: -19.000085830688477
    10. ' =' → logprob: -19.000085830688477

Token 199: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132634460926056
    2. ' =' → logprob: -1.3132634162902832
    3. ']' → logprob: -14.563263893127441
    4. '[' → logprob: -15.063263893127441
    5. ' ' → logprob: -15.438263893127441
    6. ',' → logprob: -15.438263893127441
    7. ']=' → logprob: -15.438263893127441
    8. '1' → logprob: -16.188262939453125
    9. '+=' → logprob: -16.688262939453125
    10. '=True' → logprob: -17.188262939453125

Token 200: ' fac' (ID: 3513)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -7.107425062713446e-06
    2. ' ' → logprob: -12.500006675720215
    3. '0' → logprob: -12.625006675720215
    4. '2' → logprob: -17.18750762939453
    5. 'fac' → logprob: -17.18750762939453
    6. '   ' → logprob: -17.75000762939453
    7. '  ' → logprob: -18.50000762939453
    8. '(' → logprob: -18.56250762939453
    9. 'mod' → logprob: -18.68750762939453
    10. '[' → logprob: -18.68750762939453

Token 201: '[n' (ID: 15433)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.466968650580384e-05
    2. '1' → logprob: -9.875054359436035
    3. '(' → logprob: -13.250054359436035
    4. '0' → logprob: -14.375054359436035
    5. ' [' → logprob: -14.875054359436035
    6. ' ' → logprob: -15.625054359436035
    7. '[h' → logprob: -15.875054359436035
    8. 'h' → logprob: -16.75005531311035
    9. '   ' → logprob: -17.37505531311035
    10. '[n' → logprob: -17.37505531311035

Token 202: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0003160393098369241
    2. '])' → logprob: -8.62531566619873
    3. '-' → logprob: -9.75031566619873
    4. ' ]' → logprob: -10.37531566619873
    5. '[' → logprob: -10.87531566619873
    6. ')]' → logprob: -12.00031566619873
    7. ' -' → logprob: -12.12531566619873
    8. '1' → logprob: -12.75031566619873
    9. ']
' → logprob: -12.87531566619873
    10. ')' → logprob: -13.00031566619873

Token 203: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 204: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 205: ' de' (ID: 334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 206: ' base' (ID: 3611)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.4084012508392334
    2. '#' → logprob: -1.6584012508392334
    3. 'r' → logprob: -2.5334012508392334
    4. 'p' → logprob: -4.0334014892578125
    5. 'but' → logprob: -4.1584014892578125
    6. ' ' → logprob: -4.7834014892578125
    7. '```' → logprob: -4.9084014892578125
    8. 'for' → logprob: -5.4084014892578125
    9. 's' → logprob: -6.1584014892578125
    10. 'jà' → logprob: -6.6584014892578125

Token 207: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 208: ' y' (ID: 342)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.751975953578949
    2. '<|end|>' → logprob: -1.6269760131835938
    3. ' for' → logprob: -2.5019760131835938
    4. ')' → logprob: -2.8769760131835938
    5. '#' → logprob: -3.2519760131835938
    6. 'for' → logprob: -3.3769760131835938
    7. '<|end|>' → logprob: -4.126976013183594
    8. '0' → logprob: -4.626976013183594
    9. ' on' → logprob: -4.751976013183594
    10. '```' → logprob: -5.001976013183594

Token 209: ''a' (ID: 10443)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2714403569698334
    2. ''a' → logprob: -1.7714403867721558
    3. 'eux' → logprob: -3.646440267562866
    4. 'ou' → logprob: -4.021440505981445
    5. '```' → logprob: -6.021440505981445
    6. 'et' → logprob: -6.271440505981445
    7. '=' → logprob: -6.396440505981445
    8. 'ield' → logprob: -6.646440505981445
    9. ''avait' → logprob: -6.646440505981445
    10. 'ields' → logprob: -6.771440505981445

Token 210: ' aucune' (ID: 51173)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.0999219417572021
    2. 'une' → logprob: -1.8499219417572021
    3. ' rien' → logprob: -1.9749219417572021
    4. 'pas' → logprob: -2.724921941757202
    5. ' une' → logprob: -3.224921941757202
    6. 'un' → logprob: -3.224921941757202
    7. ' pas' → logprob: -3.474921941757202
    8. ' ' → logprob: -4.099922180175781
    9. 'tout' → logprob: -4.099922180175781
    10. 'n' → logprob: -4.099922180175781

Token 211: ' contr' (ID: 6030)
  Prédit: 'tour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tour' → logprob: -0.7954343557357788
    2. 'condition' → logprob: -2.2954344749450684
    3. 'mod' → logprob: -2.7954344749450684
    4. 'restriction' → logprob: -3.1704344749450684
    5. ' tour' → logprob: -3.9204344749450684
    6. ' ' → logprob: -4.295434474945068
    7. 'contr' → logprob: -4.295434474945068
    8. 'ligne' → logprob: -4.545434474945068
    9. 'p' → logprob: -4.670434474945068
    10. 'é' → logprob: -4.795434474945068

Token 212: 'ainte' (ID: 48434)
  Prédit: 'ainte'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ainte' → logprob: -0.006330567877739668
    2. 'a' → logprob: -5.131330490112305
    3. 'ain' → logprob: -8.631330490112305
    4. 'aint' → logprob: -9.256330490112305
    5. '#' → logprob: -10.381330490112305
    6. '\' → logprob: -11.131330490112305
    7. '``' → logprob: -11.631330490112305
    8. 'aine' → logprob: -11.756330490112305
    9. '1' → logprob: -12.256330490112305
    10. '```' → logprob: -12.256330490112305

Token 213: ' à' (ID: 1221)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5055484771728516
    2. '<|end|>' → logprob: -1.5055484771728516
    3. '\n' → logprob: -2.2555484771728516
    4. 'for' → logprob: -4.130548477172852
    5. '+' → logprob: -4.380548477172852
    6. ' ' → logprob: -5.255548477172852
    7. ')' → logprob: -5.255548477172852
    8. ' 
' → logprob: -5.380548477172852
    9. ' for' → logprob: -5.505548477172852
    10. '  
' → logprob: -5.630548477172852

Token 214: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3195406198501587
    2. 'mettre' → logprob: -2.194540500640869
    3. 'respect' → logprob: -2.319540500640869
    4. 'l' → logprob: -2.319540500640869
    5. 'part' → logprob: -2.694540500640869
    6. 'aj' → logprob: -2.819540500640869
    7. 'poser' → logprob: -3.444540500640869
    8. 'faire' → logprob: -3.569540500640869
    9. 'la' → logprob: -3.819540500640869
    10. 'auc' → logprob: -4.069540500640869

Token 215: '0' (ID: 15)
  Prédit: 'respect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'respect' → logprob: -1.207634687423706
    2. 'mettre' → logprob: -1.707634687423706
    3. 'part' → logprob: -2.332634687423706
    4. 'poser' → logprob: -2.457634687423706
    5. 'faire' → logprob: -2.957634687423706
    6. '0' → logprob: -3.332634687423706
    7. 'placer' → logprob: -3.332634687423706
    8. 'l' → logprob: -3.707634687423706
    9. 'aj' → logprob: -3.957634687423706
    10. 'prendre' → logprob: -4.207634925842285

Token 216: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 217: ' c' (ID: 274)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 218: ''est' (ID: 6616)
  Prédit: 'ont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ont' → logprob: -0.9893181920051575
    2. '#' → logprob: -1.2393181324005127
    3. ''est' → logprob: -1.7393181324005127
    4. ''' → logprob: -2.6143181324005127
    5. '```' → logprob: -4.114318370819092
    6. 'omme' → logprob: -4.489318370819092
    7. ''''' → logprob: -4.614318370819092
    8. 'ertain' → logprob: -5.614318370819092
    9. 'orrect' → logprob: -5.614318370819092
    10. 'urrent' → logprob: -5.614318370819092

Token 219: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -1.4343293905258179
    2. 'tout' → logprob: -1.6843293905258179
    3. 'le' → logprob: -1.8093293905258179
    4. 'fac' → logprob: -2.3093295097351074
    5. 'n' → logprob: -2.9343295097351074
    6. 'une' → logprob: -3.1843295097351074
    7. 'l' → logprob: -3.5593295097351074
    8. 'just' → logprob: -3.6843295097351074
    9. 'pour' → logprob: -3.8093295097351074
    10. 'comme' → logprob: -3.9343295097351074

Token 220: ' factor' (ID: 12332)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.4048589766025543
    2. 'fac' → logprob: -2.4048590660095215
    3. 'prem' → logprob: -3.0298590660095215
    4. 'point' → logprob: -3.2798590660095215
    5. 'fact' → logprob: -3.5298590660095215
    6. 'comb' → logprob: -3.5298590660095215
    7. 'val' → logprob: -4.0298590660095215
    8. ' base' → logprob: -4.6548590660095215
    9. 'fin' → logprob: -5.0298590660095215
    10. 'factor' → logprob: -5.2798590660095215

Token 221: 'ielle' (ID: 22380)
  Prédit: 'ielle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ielle' → logprob: -0.015387294813990593
    2. 'ial' → logprob: -4.765387058258057
    3. 'iel' → logprob: -5.140387058258057
    4. 'i' → logprob: -7.640387058258057
    5. 'iale' → logprob: -8.890387535095215
    6. '```' → logprob: -9.515387535095215
    7. 'ie' → logprob: -10.265387535095215
    8. 'iele' → logprob: -10.265387535095215
    9. '!' → logprob: -10.515387535095215
    10. 'e' → logprob: -11.015387535095215

Token 222: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 223: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01609138213098049
    2. ' for' → logprob: -4.141091346740723
    3. 'range' → logprob: -10.516091346740723
    4. '	for' → logprob: -11.516091346740723
    5. '
' → logprob: -11.766091346740723
    6. ')' → logprob: -12.641091346740723
    7. ' ' → logprob: -12.766091346740723
    8. '#' → logprob: -14.016091346740723
    9. '<|end|>' → logprob: -14.391091346740723
    10. '```' → logprob: -14.641091346740723

Token 224: ' donc' (ID: 14206)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.810037742368877e-05
    2. ' for' → logprob: -10.500038146972656
    3. 'i' → logprob: -12.250038146972656
    4. 'range' → logprob: -12.625038146972656
    5. '#' → logprob: -14.250038146972656
    6. 'from' → logprob: -15.000038146972656
    7. 'def' → logprob: -15.000038146972656
    8. 'or' → logprob: -15.500038146972656
    9. 'f' → logprob: -15.750038146972656
    10. 'fo' → logprob: -16.250038146972656

Token 225: ' là' (ID: 8052)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2035425901412964
    2. ' for' → logprob: -1.7035425901412964
    3. 'range' → logprob: -6.453542709350586
    4. ' range' → logprob: -8.078542709350586
    5. '_' → logprob: -9.328542709350586
    6. 'i' → logprob: -9.828542709350586
    7. ' i' → logprob: -9.828542709350586
    8. ' ' → logprob: -10.953542709350586
    9. ' _' → logprob: -12.703542709350586
    10. ' h' → logprob: -12.828542709350586

Token 226: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.026381703093647957
    2. ' for' → logprob: -3.651381731033325
    3. 'range' → logprob: -9.651381492614746
    4. '#' → logprob: -12.026381492614746
    5. '...' → logprob: -13.276381492614746
    6. '
' → logprob: -13.651381492614746
    7. ',' → logprob: -13.901381492614746
    8. ' ' → logprob: -13.901381492614746
    9. ' range' → logprob: -14.276381492614746
    10. ':' → logprob: -14.276381492614746

Token 227: ' on' (ID: 402)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.029762646183371544
    2. ' for' → logprob: -3.5297627449035645
    3. 'range' → logprob: -11.654762268066406
    4. 'i' → logprob: -13.404762268066406
    5. ' range' → logprob: -14.529762268066406
    6. ' i' → logprob: -14.904762268066406
    7. 'pour' → logprob: -15.029762268066406
    8. ' ' → logprob: -15.404762268066406
    9. 'import' → logprob: -15.404762268066406
    10. ' ' → logprob: -15.654762268066406

Token 228: ' prend' (ID: 37463)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.47420811653137207
    2. 'range' → logprob: -1.224208116531372
    3. 'continue' → logprob: -3.599208116531372
    4. ' range' → logprob: -3.599208116531372
    5. ' for' → logprob: -4.224207878112793
    6. ' continue' → logprob: -5.099207878112793
    7. 's' → logprob: -6.224207878112793
    8. 'fait' → logprob: -6.349207878112793
    9. ' commence' → logprob: -7.724207878112793
    10. ' fait' → logprob: -7.724207878112793

Token 229: ' cum' (ID: 10023)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7909375429153442
    2. '_' → logprob: -1.7909375429153442
    3. 'for' → logprob: -1.9159375429153442
    4. ' i' → logprob: -2.0409374237060547
    5. ' for' → logprob: -3.4159374237060547
    6. 'range' → logprob: -3.9159374237060547
    7. ' _' → logprob: -3.9159374237060547
    8. ' range' → logprob: -4.540937423706055
    9. ' ' → logprob: -5.415937423706055
    10. ' h' → logprob: -6.040937423706055

Token 230: 'fac' (ID: 34429)
  Prédit: 'fac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fac' → logprob: -4.35837464465294e-05
    2. 'fact' → logprob: -10.875043869018555
    3. '_fac' → logprob: -11.875043869018555
    4. '-' → logprob: -13.125043869018555
    5. '[' → logprob: -13.250043869018555
    6. ' fac' → logprob: -13.750043869018555
    7. 'f' → logprob: -14.000043869018555
    8. 'factor' → logprob: -14.250043869018555
    9. 'cum' → logprob: -14.250043869018555
    10. 'fas' → logprob: -14.375043869018555

Token 231: ' entre' (ID: 3853)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.34596383571624756
    2. ' =' → logprob: -2.470963954925537
    3. '[' → logprob: -2.845963954925537
    4. '<|end|>' → logprob: -3.470963954925537
    5. ' for' → logprob: -3.720963954925537
    6. '=' → logprob: -3.970963954925537
    7. ')' → logprob: -4.345963954925537
    8. '
' → logprob: -4.845963954925537
    9. '.' → logprob: -4.845963954925537
    10. 'range' → logprob: -4.970963954925537

Token 232: ' n' (ID: 297)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.35038408637046814
    2. 'h' → logprob: -1.6003841161727905
    3. 'max' → logprob: -2.725383996963501
    4. ' d' → logprob: -5.22538423538208
    5. '(d' → logprob: -5.35038423538208
    6. 'DP' → logprob: -5.72538423538208
    7. '(h' → logprob: -5.72538423538208
    8. '0' → logprob: -5.85038423538208
    9. ' max' → logprob: -5.97538423538208
    10. '[d' → logprob: -6.85038423538208

Token 233: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7440950274467468
    2. '-' → logprob: -1.2440950870513916
    3. ' -' → logprob: -1.7440950870513916
    4. ' +' → logprob: -3.1190950870513916
    5. ' and' → logprob: -4.9940948486328125
    6. '-n' → logprob: -5.3690948486328125
    7. 'and' → logprob: -6.8690948486328125
    8. ' ' → logprob: -6.8690948486328125
    9. '-d' → logprob: -7.1190948486328125
    10. ',' → logprob: -7.7440948486328125

Token 234: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.050968531519174576
    2. 'd' → logprob: -3.425968647003174
    3. ' ' → logprob: -4.550968647003174
    4. '2' → logprob: -5.300968647003174
    5. ' d' → logprob: -7.175968647003174
    6. 'h' → logprob: -7.800968647003174
    7. '(' → logprob: -8.800968170166016
    8. '(d' → logprob: -9.050968170166016
    9. '[d' → logprob: -10.300968170166016
    10. '3' → logprob: -11.050968170166016

Token 235: ' et' (ID: 859)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.7805456519126892
    2. '(' → logprob: -1.780545711517334
    3. '-' → logprob: -2.280545711517334
    4. '[n' → logprob: -2.405545711517334
    5. '+' → logprob: -3.030545711517334
    6. '[' → logprob: -3.030545711517334
    7. ' and' → logprob: -3.905545711517334
    8. ' -' → logprob: -4.155545711517334
    9. ',' → logprob: -5.155545711517334
    10. '
' → logprob: -5.155545711517334

Token 236: ' ' (ID: 220)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4654875695705414
    2. 'h' → logprob: -1.2154875993728638
    3. ' n' → logprob: -2.965487480163574
    4. ' h' → logprob: -3.965487480163574
    5. 'min' → logprob: -6.215487480163574
    6. ' min' → logprob: -7.340487480163574
    7. 'd' → logprob: -7.590487480163574
    8. '(h' → logprob: -8.090487480163574
    9. 'len' → logprob: -8.090487480163574
    10. '2' → logprob: -8.340487480163574

Token 237: '1' (ID: 16)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.549490749835968
    2. 'n' → logprob: -0.924490749835968
    3. ' n' → logprob: -4.924490928649902
    4. 'min' → logprob: -5.049490928649902
    5. ' h' → logprob: -5.049490928649902
    6. '2' → logprob: -5.799490928649902
    7. 'd' → logprob: -7.174490928649902
    8. 'len' → logprob: -7.549490928649902
    9. ' min' → logprob: -7.674490928649902
    10. '(h' → logprob: -8.424490928649902

Token 238: ',' (ID: 11)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.017658978700637817
    2. '[n' → logprob: -5.6426591873168945
    3. '<|end|>' → logprob: -5.6426591873168945
    4. 'for' → logprob: -6.0176591873168945
    5. '
' → logprob: -6.3926591873168945
    6. ' ' → logprob: -6.7676591873168945
    7. ',' → logprob: -6.8926591873168945
    8. '[
' → logprob: -7.0176591873168945
    9. '=' → logprob: -7.6426591873168945
    10. '.' → logprob: -7.8926591873168945

Token 239: ' étrange' (ID: 172668)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 240: ' mais' (ID: 2899)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.13941535353660583
    2. '<|end|>' → logprob: -2.7644152641296387
    3. ']' → logprob: -3.7644152641296387
    4. 'for' → logprob: -4.264415264129639
    5. ',' → logprob: -5.139415264129639
    6. ' ' → logprob: -5.264415264129639
    7. '.' → logprob: -5.639415264129639
    8. '[:]' → logprob: -5.889415264129639
    9. ')' → logprob: -6.264415264129639
    10. '[n' → logprob: -6.264415264129639

Token 241: ' ok' (ID: 4763)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -1.0251832008361816
    2. ' n' → logprob: -1.6501832008361816
    3. 'n' → logprob: -1.7751832008361816
    4. ' h' → logprob: -2.4001832008361816
    5. '...' → logprob: -3.2751832008361816
    6. 'len' → logprob: -3.9001832008361816
    7. '0' → logprob: -4.025183200836182
    8. ' len' → logprob: -4.400183200836182
    9. ' ça' → logprob: -4.400183200836182
    10. 'True' → logprob: -4.775183200836182

Token 242: '
' (ID: 198)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0305341482162476
    2. 'for' → logprob: -1.4055341482162476
    3. '
' → logprob: -1.6555341482162476
    4. '<|end|>' → logprob: -2.655534267425537
    5. ' for' → logprob: -2.905534267425537
    6. ' ' → logprob: -3.530534267425537
    7. '.' → logprob: -4.155534267425537
    8. ':' → logprob: -5.280534267425537
    9. '=' → logprob: -5.530534267425537
    10. ',' → logprob: -5.530534267425537

Token 243: 'multi' (ID: 59250)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3896026909351349
    2. ' for' → logprob: -1.1396026611328125
    3. '
' → logprob: -6.2646026611328125
    4. 'range' → logprob: -7.8896026611328125
    5. ' range' → logprob: -8.639602661132812
    6. ' ' → logprob: -9.514602661132812
    7. ')' → logprob: -9.889602661132812
    8. ' 
' → logprob: -10.264602661132812
    9. '=' → logprob: -10.389602661132812
    10. 'n' → logprob: -10.889602661132812

Token 244: ' =' (ID: 314)
  Prédit: 'plier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plier' → logprob: -0.6732171177864075
    2. 'fac' → logprob: -1.0482170581817627
    3. ' =' → logprob: -2.4232170581817627
    4. '=' → logprob: -4.048217296600342
    5. 'pl' → logprob: -5.173217296600342
    6. 'ple' → logprob: -5.173217296600342
    7. 'plic' → logprob: -5.548217296600342
    8. 'f' → logprob: -5.548217296600342
    9. 'factor' → logprob: -6.048217296600342
    10. '_factor' → logprob: -6.048217296600342

Token 245: ' cum' (ID: 10023)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.4578671157360077
    2. ' (' → logprob: -1.33286714553833
    3. ' cum' → logprob: -2.70786714553833
    4. 'cum' → logprob: -3.33286714553833
    5. 'c' → logprob: -7.95786714553833
    6. ' ' → logprob: -8.332866668701172
    7. 'fac' → logprob: -9.332866668701172
    8. ' fac' → logprob: -9.520366668701172
    9. '(' → logprob: -9.520366668701172
    10. '((' → logprob: -9.582866668701172

Token 246: 'fac' (ID: 34429)
  Prédit: 'fac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fac' → logprob: -1.9361264946837764e-07
    2. ' fac' → logprob: -17.0
    3. 'fact' → logprob: -17.0
    4. '_fac' → logprob: -18.25
    5. 'Fac' → logprob: -18.625
    6. 'f' → logprob: -19.125
    7. 'fa' → logprob: -19.625
    8. 'fc' → logprob: -20.375
    9. '.fac' → logprob: -20.5
    10. 'factor' → logprob: -21.0

Token 247: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.0005694755236618221
    2. '[' → logprob: -7.8755693435668945
    3. ' [' → logprob: -9.250569343566895
    4. 'n' → logprob: -10.625569343566895
    5. '[-' → logprob: -11.000569343566895
    6. '[len' → logprob: -11.000569343566895
    7. '[h' → logprob: -11.125569343566895
    8. '(n' → logprob: -11.500569343566895
    9. '[:' → logprob: -12.875569343566895
    10. '[(' → logprob: -13.500569343566895

Token 248: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.006376294419169426
    2. ' +' → logprob: -5.381376266479492
    3. ']' → logprob: -6.381376266479492
    4. ']+' → logprob: -10.256376266479492
    5. '   ' → logprob: -11.756376266479492
    6. '[' → logprob: -12.756376266479492
    7. '+n' → logprob: -12.756376266479492
    8. '+]' → logprob: -12.881376266479492
    9. ' ' → logprob: -13.006376266479492
    10. '-' → logprob: -13.006376266479492

Token 249: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002502535644453019
    2. '2' → logprob: -9.000249862670898
    3. ' ' → logprob: -9.000249862670898
    4. '
' → logprob: -13.750249862670898
    5. '   ' → logprob: -13.875249862670898
    6. '0' → logprob: -15.250249862670898
    7. '```' → logprob: -15.375249862670898
    8. ')' → logprob: -16.0002498626709
    9. '-' → logprob: -16.1877498626709
    10. '  ' → logprob: -16.2502498626709

Token 250: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.23917081207037e-05
    2. ' ' → logprob: -10.500041961669922
    3. '2' → logprob: -11.250041961669922
    4. '0' → logprob: -14.125041961669922
    5. '   ' → logprob: -15.062541961669922
    6. '
' → logprob: -15.687541961669922
    7. '-' → logprob: -16.375041961669922
    8. '```' → logprob: -16.375041961669922
    9. '  ' → logprob: -16.750041961669922
    10. '10' → logprob: -17.062541961669922

Token 251: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -3.9054008084349334e-05
    2. ' ]' → logprob: -10.625039100646973
    3. ']-' → logprob: -11.250039100646973
    4. ']
' → logprob: -14.750039100646973
    5. '']' → logprob: -15.125039100646973
    6. '   ' → logprob: -15.375039100646973
    7. '-' → logprob: -15.625039100646973
    8. '"]' → logprob: -15.750039100646973
    9. '`]' → logprob: -16.125038146972656
    10. ' ' → logprob: -16.625038146972656

Token 252: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.07716023176908493
    2. '-' → logprob: -2.702160120010376
    3. '<|end|>' → logprob: -5.202160358428955
    4. ' ' → logprob: -7.827160358428955
    5. '[' → logprob: -8.327159881591797
    6. '#' → logprob: -8.577159881591797
    7. '<|end|>' → logprob: -8.577159881591797
    8. ']' → logprob: -8.952159881591797
    9. ')' → logprob: -9.577159881591797
    10. ' ' → logprob: -9.577159881591797

Token 253: ' cum' (ID: 10023)
  Prédit: 'cum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cum' → logprob: -0.02975141443312168
    2. ' cum' → logprob: -3.5297513008117676
    3. 'c' → logprob: -14.529751777648926
    4. '1' → logprob: -15.154751777648926
    5. 'cul' → logprob: -16.52975082397461
    6. '	c' → logprob: -16.77975082397461
    7. ' ' → logprob: -17.40475082397461
    8. ' cumulative' → logprob: -19.27975082397461
    9. 'cu' → logprob: -19.90475082397461
    10. ' ' → logprob: -20.02975082397461

Token 254: 'fac' (ID: 34429)
  Prédit: 'fac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fac' → logprob: -3.106736039626412e-05
    2. 't' → logprob: -11.125031471252441
    3. ' fac' → logprob: -11.875031471252441
    4. 'cum' → logprob: -12.125031471252441
    5. 'f' → logprob: -14.625031471252441
    6. 'fact' → logprob: -14.750031471252441
    7. 'cf' → logprob: -14.750031471252441
    8. 'tf' → logprob: -14.750031471252441
    9. 'ent' → logprob: -15.000031471252441
    10. '   ' → logprob: -15.375031471252441

Token 255: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.039982039481401443
    2. '1' → logprob: -3.2899820804595947
    3. '[n' → logprob: -6.664981842041016
    4. '[d' → logprob: -8.164981842041016
    5. '[h' → logprob: -8.914981842041016
    6. ' ' → logprob: -9.039981842041016
    7. ' [' → logprob: -10.164981842041016
    8. '[(' → logprob: -10.664981842041016
    9. '(' → logprob: -10.914981842041016
    10. 'n' → logprob: -11.539981842041016

Token 256: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005213391850702465
    2. ' ' → logprob: -7.750521183013916
    3. '(' → logprob: -10.250521659851074
    4. '2' → logprob: -10.500521659851074
    5. '0' → logprob: -10.750521659851074
    6. '   ' → logprob: -12.875521659851074
    7. ' (' → logprob: -14.313021659851074
    8. 'n' → logprob: -14.875521659851074
    9. 'h' → logprob: -15.125521659851074
    10. '  ' → logprob: -15.313021659851074

Token 257: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.014169389382004738
    2. ' ]' → logprob: -4.389169216156006
    3. ')' → logprob: -6.639169216156006
    4. '])' → logprob: -8.764169692993164
    5. '<|end|>' → logprob: -9.639169692993164
    6. ')]' → logprob: -10.139169692993164
    7. ' )' → logprob: -10.514169692993164
    8. '+' → logprob: -10.764169692993164
    9. ']%' → logprob: -11.764169692993164
    10. ']
' → logprob: -11.889169692993164

Token 258: 's' (ID: 82)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 259: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09335873275995255
    2. '+' → logprob: -3.7183587551116943
    3. '[' → logprob: -3.9683587551116943
    4. ' =' → logprob: -4.718358516693115
    5. '*' → logprob: -5.343358516693115
    6. '%' → logprob: -5.468358516693115
    7. '>' → logprob: -5.593358516693115
    8. ')' → logprob: -5.718358516693115
    9. 'um' → logprob: -5.968358516693115
    10. '_' → logprob: -6.218358516693115

Token 260: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.43140867352485657
    2. '0' → logprob: -1.0564086437225342
    3. ' multi' → logprob: -6.431408882141113
    4. '1' → logprob: -7.056408882141113
    5. 'multi' → logprob: -8.931408882141113
    6. ' mod' → logprob: -10.681408882141113
    7. ' n' → logprob: -11.306408882141113
    8. ' ' → logprob: -11.681408882141113
    9. 'n' → logprob: -11.931408882141113
    10. ' (' → logprob: -11.931408882141113

Token 261: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.026866784319281578
    2. 'multi' → logprob: -3.7768666744232178
    3. 'mod' → logprob: -6.651866912841797
    4. ' ' → logprob: -7.151866912841797
    5. '1' → logprob: -7.651866912841797
    6. '(' → logprob: -7.776866912841797
    7. ' multi' → logprob: -8.651866912841797
    8. '[' → logprob: -9.276866912841797
    9. 'mult' → logprob: -9.776866912841797
    10. '(m' → logprob: -10.026866912841797

Token 262: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09803473204374313
    2. '<|end|>' → logprob: -2.473034620285034
    3. 'for' → logprob: -5.723034858703613
    4. ' 
' → logprob: -6.348034858703613
    5. ' for' → logprob: -6.598034858703613
    6. ' ' → logprob: -6.973034858703613
    7. '\n' → logprob: -7.223034858703613
    8. '+' → logprob: -8.473034858703613
    9. '  
' → logprob: -8.473034858703613
    10. '
' → logprob: -8.723034858703613

Token 263: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6640486121177673
    2. ' for' → logprob: -0.7890486121177673
    3. '
' → logprob: -3.789048671722412
    4. ' ' → logprob: -5.914048671722412
    5. ' 
' → logprob: -6.289048671722412
    6. '<|end|>' → logprob: -6.289048671722412
    7. '+' → logprob: -7.039048671722412
    8. '\n' → logprob: -8.039048194885254
    9. ')' → logprob: -8.164048194885254
    10. 'n' → logprob: -9.664048194885254

Token 264: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6109409332275391
    2. 'i' → logprob: -1.485940933227539
    3. ' height' → logprob: -2.610940933227539
    4. ' hauteur' → logprob: -3.235940933227539
    5. ' x' → logprob: -3.360940933227539
    6. 'x' → logprob: -4.110940933227539
    7. 'height' → logprob: -4.548440933227539
    8. ' j' → logprob: -5.110940933227539
    9. ' k' → logprob: -5.298440933227539
    10. ' length' → logprob: -5.798440933227539

Token 265: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0037131423596292734
    2. 'in' → logprob: -5.628713130950928
    3. ' ' → logprob: -9.378713607788086
    4. 'range' → logprob: -11.378713607788086
    5. ' ' → logprob: -12.003713607788086
    6. ' i' → logprob: -13.128713607788086
    7. ' _' → logprob: -13.253713607788086
    8. '_' → logprob: -13.503713607788086
    9. '1' → logprob: -13.753713607788086
    10. ',' → logprob: -13.753713607788086

Token 266: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07423543930053711
    2. ' range' → logprob: -2.824235439300537
    3. ' xrange' → logprob: -4.449235439300537
    4. 'x' → logprob: -7.699235439300537
    5. '	range' → logprob: -10.324235916137695
    6. ' ' → logprob: -12.199235916137695
    7. '(range' → logprob: -12.949235916137695
    8. '   ' → logprob: -13.074235916137695
    9. '  ' → logprob: -13.199235916137695
    10. '[' → logprob: -13.574235916137695

Token 267: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.023084156215190887
    2. '(h' → logprob: -4.0230841636657715
    3. '(d' → logprob: -5.8980841636657715
    4. '(n' → logprob: -6.1480841636657715
    5. '1' → logprob: -11.648083686828613
    6. '(s' → logprob: -11.773083686828613
    7. 'h' → logprob: -12.148083686828613
    8. 'd' → logprob: -12.648083686828613
    9. '(len' → logprob: -12.773083686828613
    10. ' (' → logprob: -12.898083686828613

Token 268: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.17119234800338745
    2. 'h' → logprob: -1.9211924076080322
    3. 'd' → logprob: -4.921192169189453
    4. '(' → logprob: -6.796192169189453
    5. 'n' → logprob: -6.796192169189453
    6. '(h' → logprob: -7.796192169189453
    7. ' ' → logprob: -7.921192169189453
    8. '2' → logprob: -8.171192169189453
    9. ' h' → logprob: -8.671192169189453
    10. '(d' → logprob: -10.046192169189453

Token 269: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008393531665205956
    2. ' ,' → logprob: -4.88339376449585
    3. ',h' → logprob: -7.25839376449585
    4. ',
' → logprob: -10.383393287658691
    5. ',n' → logprob: -10.633393287658691
    6. 'h' → logprob: -11.883393287658691
    7. ',d' → logprob: -12.383393287658691
    8. '(h' → logprob: -12.383393287658691
    9. '(' → logprob: -13.008393287658691
    10. 'd' → logprob: -13.258393287658691

Token 270: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.1034734919667244
    2. 'n' → logprob: -2.603473424911499
    3. 'd' → logprob: -3.978473424911499
    4. ' h' → logprob: -5.728473663330078
    5. 'min' → logprob: -6.603473663330078
    6. ' n' → logprob: -7.603473663330078
    7. ' d' → logprob: -8.478473663330078
    8. ' min' → logprob: -9.228473663330078
    9. ' ' → logprob: -9.728473663330078
    10. 'len' → logprob: -10.103473663330078

Token 271: '):
' (ID: 1883)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2534942030906677
    2. ' +' → logprob: -1.5034942626953125
    3. '):' → logprob: -6.6284942626953125
    4. '):
' → logprob: -8.628494262695312
    5. ',' → logprob: -10.753494262695312
    6. '-' → logprob: -12.003494262695312
    7. '[' → logprob: -12.003494262695312
    8. ':' → logprob: -12.628494262695312
    9. '+
' → logprob: -12.628494262695312
    10. ' +
' → logprob: -12.628494262695312

Token 272: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005150265991687775
    2. ' s' → logprob: -5.755150318145752
    3. 's' → logprob: -7.255150318145752
    4. '	s' → logprob: -7.380150318145752
    5. '    
' → logprob: -8.130149841308594
    6. '    ' → logprob: -9.380149841308594
    7. '   ' → logprob: -9.380149841308594
    8. ' if' → logprob: -10.005149841308594
    9. '	if' → logprob: -11.130149841308594
    10. '	   ' → logprob: -11.130149841308594

Token 273: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.21835903823375702
    2. 's' (adapté à ' s') → logprob: -2.0933589935302734
    3. '   ' → logprob: -4.218358993530273
    4. ' if' → logprob: -4.343358993530273
    5. ' DP' → logprob: -4.343358993530273
    6. 'DP' → logprob: -4.843358993530273
    7. ' val' → logprob: -4.968358993530273
    8. 'if' → logprob: -5.718358993530273
    9. 'val' → logprob: -5.968358993530273
    10. ' dp' → logprob: -6.218358993530273

Token 274: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.31485500931739807
    2. '+=' → logprob: -1.3148549795150757
    3. '=' → logprob: -6.939855098724365
    4. ' =' → logprob: -7.439855098724365
    5. '+' → logprob: -10.814854621887207
    6. '+=(' → logprob: -11.939854621887207
    7. ' ' → logprob: -12.439854621887207
    8. ']+=' → logprob: -13.189854621887207
    9. ' ' → logprob: -13.564854621887207
    10. ',' → logprob: -14.189854621887207

Token 275: ' DP' (ID: 51992)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.024412086233496666
    2. '(D' → logprob: -4.399412155151367
    3. 'fac' → logprob: -5.399412155151367
    4. '(' → logprob: -6.024412155151367
    5. ' DP' → logprob: -6.149412155151367
    6. '(i' → logprob: -6.649412155151367
    7. '((' → logprob: -8.774412155151367
    8. '   ' → logprob: -8.774412155151367
    9. ' fac' → logprob: -9.024412155151367
    10. '(c' → logprob: -9.149412155151367

Token 276: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00018208740220870823
    2. '[' → logprob: -8.875182151794434
    3. 'i' → logprob: -10.250182151794434
    4. '[-' → logprob: -12.375182151794434
    5. '[
' → logprob: -14.375182151794434
    6. '[len' → logprob: -14.875182151794434
    7. ' i' → logprob: -15.375182151794434
    8. '(i' → logprob: -15.375182151794434
    9. ' [' → logprob: -15.625182151794434
    10. '[h' → logprob: -15.625182151794434

Token 277: ' -' (ID: 533)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004337783437222242
    2. '-' → logprob: -5.879337787628174
    3. ' ]' → logprob: -6.754337787628174
    4. ' -' → logprob: -8.129337310791016
    5. ']*' → logprob: -10.379337310791016
    6. '])' → logprob: -10.504337310791016
    7. '+' → logprob: -13.004337310791016
    8. '   ' → logprob: -13.004337310791016
    9. ']
' → logprob: -13.379337310791016
    10. ' ' → logprob: -13.504337310791016

Token 278: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.253090865968261e-06
    2. ' ' → logprob: -11.875009536743164
    3. ']' → logprob: -13.000009536743164
    4. 'i' → logprob: -17.125009536743164
    5. '```' → logprob: -19.125009536743164
    6. '   ' → logprob: -19.312509536743164
    7. '])' → logprob: -19.687509536743164
    8. ' i' → logprob: -19.937509536743164
    9. '１' → logprob: -19.937509536743164
    10. '-' → logprob: -20.000009536743164

Token 279: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2200749754119897e-06
    2. ' ' → logprob: -13.250001907348633
    3. ']' → logprob: -15.250001907348633
    4. '```' → logprob: -17.000001907348633
    5. '   ' → logprob: -17.375001907348633
    6. '0' → logprob: -18.937501907348633
    7. ')' → logprob: -19.062501907348633
    8. 'i' → logprob: -19.312501907348633
    9. '１' → logprob: -19.375001907348633
    10. '])' → logprob: -19.625001907348633

Token 280: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0035551697947084904
    2. ' ]' → logprob: -6.3785552978515625
    3. ' *' → logprob: -6.6285552978515625
    4. '*' → logprob: -8.003555297851562
    5. ']*' → logprob: -8.878555297851562
    6. ')' → logprob: -10.878555297851562
    7. '])' → logprob: -11.003555297851562
    8. ' ' → logprob: -12.003555297851562
    9. '   ' → logprob: -12.253555297851562
    10. '+' → logprob: -12.878555297851562

Token 281: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9163861274719238
    2. '<|end|>' → logprob: -1.0413861274719238
    3. '   ' → logprob: -1.5413861274719238
    4. '  ' → logprob: -5.166386127471924
    5. ' 
' → logprob: -5.291386127471924
    6. ']' → logprob: -5.541386127471924
    7. ')' → logprob: -5.916386127471924
    8. ' if' → logprob: -6.041386127471924
    9. '    ' → logprob: -6.166386127471924
    10. '[' → logprob: -6.416386127471924

Token 282: ' if' (ID: 538)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.00023059594968799502
    2. 'if' (adapté à ' if') → logprob: -8.75023078918457
    3. ' DP' → logprob: -10.00023078918457
    4. 's' → logprob: -12.12523078918457
    5. 'dp' → logprob: -12.12523078918457
    6. 'mult' → logprob: -12.25023078918457
    7. 'for' → logprob: -12.25023078918457
    8. 'val' → logprob: -13.50023078918457
    9. 'multi' → logprob: -14.12523078918457
    10. 'temp' → logprob: -14.62523078918457

Token 283: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1447647213935852
    2. ' i' → logprob: -2.0197646617889404
    3. '(i' → logprob: -7.0197649002075195
    4. 's' → logprob: -7.7697649002075195
    5. ' s' → logprob: -8.64476490020752
    6. 'h' → logprob: -8.76976490020752
    7. ' (' → logprob: -9.39476490020752
    8. 'multi' → logprob: -9.39476490020752
    9. ' ' → logprob: -9.76976490020752
    10. '(s' → logprob: -10.14476490020752

Token 284: ' -' (ID: 533)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.2667931318283081
    2. '>=' → logprob: -2.0167932510375977
    3. ' +' → logprob: -3.3917932510375977
    4. '+' → logprob: -3.5167932510375977
    5. ' <' → logprob: -4.516793251037598
    6. ' ' → logprob: -4.516793251037598
    7. ' -' → logprob: -5.266793251037598
    8. '-' → logprob: -5.516793251037598
    9. ' <=' → logprob: -6.141793251037598
    10. '<' → logprob: -6.641793251037598

Token 285: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.005288900341838598
    2. ' d' → logprob: -5.255289077758789
    3. '   ' → logprob: -11.130289077758789
    4. '1' → logprob: -11.130289077758789
    5. ' ' → logprob: -11.755289077758789
    6. 'h' → logprob: -12.005289077758789
    7. '	d' → logprob: -12.255289077758789
    8. '>d' → logprob: -14.005289077758789
    9. '  ' → logprob: -14.130289077758789
    10. '>' → logprob: -14.255289077758789

Token 286: ' -' (ID: 533)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.5810596346855164
    2. ' >=' → logprob: -1.2060596942901611
    3. '-' → logprob: -2.206059694290161
    4. ' -' → logprob: -3.831059694290161
    5. ' ' → logprob: -4.956059455871582
    6. '>' → logprob: -6.956059455871582
    7. '+' → logprob: -7.831059455871582
    8. ' +' → logprob: -7.831059455871582
    9. ' <' → logprob: -8.331059455871582
    10. '<' → logprob: -8.456059455871582

Token 287: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.52919222577475e-05
    2. ' ' → logprob: -9.500075340270996
    3. '-' → logprob: -15.750075340270996
    4. '2' → logprob: -16.12507438659668
    5. '>=' → logprob: -17.12507438659668
    6. '   ' → logprob: -18.00007438659668
    7. '0' → logprob: -18.12507438659668
    8. '  ' → logprob: -18.25007438659668
    9. ' -' → logprob: -19.12507438659668
    10. ' >=' → logprob: -19.25007438659668

Token 288: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.6537622034084052e-05
    2. ' ' → logprob: -10.87502670288086
    3. '-' → logprob: -12.12502670288086
    4. '>=' → logprob: -13.25002670288086
    5. ' -' → logprob: -15.87502670288086
    6. '2' → logprob: -16.12502670288086
    7. ' >=' → logprob: -16.37502670288086
    8. '   ' → logprob: -16.37502670288086
    9. '0' → logprob: -17.12502670288086
    10. ']>=' → logprob: -17.25002670288086

Token 289: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.11445464938879013
    2. '>=' → logprob: -2.239454746246338
    3. ' <' → logprob: -6.989454746246338
    4. ']>=' → logprob: -8.11445426940918
    5. '<' → logprob: -8.73945426940918
    6. ' ' → logprob: -8.73945426940918
    7. '>' → logprob: -10.23945426940918
    8. ')>=' → logprob: -10.86445426940918
    9. ' >' → logprob: -11.11445426940918
    10. ']' → logprob: -12.11445426940918

Token 290: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.451116051815916e-05
    2. ' ' → logprob: -10.625024795532227
    3. '   ' → logprob: -16.625024795532227
    4. '۰' → logprob: -18.750024795532227
    5. '  ' → logprob: -19.250024795532227
    6. '    ' → logprob: -20.375024795532227
    7. '０' → logprob: -20.625024795532227
    8. '
' → logprob: -21.375024795532227
    9. ' ' → logprob: -21.625024795532227
    10. '1' → logprob: -22.375024795532227

Token 291: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002613358374219388
    2. ' ' → logprob: -8.250261306762695
    3. '۰' → logprob: -17.125261306762695
    4. '  ' → logprob: -17.625261306762695
    5. '   ' → logprob: -18.125261306762695
    6. '1' → logprob: -18.125261306762695
    7. ' ' → logprob: -18.937761306762695
    8. '０' → logprob: -19.062761306762695
    9. '00' → logprob: -19.437761306762695
    10. '    ' → logprob: -19.625261306762695

Token 292: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11309222877025604
    2. ':
' → logprob: -2.2380921840667725
    3. ' and' → logprob: -8.613092422485352
    4. '   ' → logprob: -10.488092422485352
    5. 'and' → logprob: -10.488092422485352
    6. '==' → logprob: -11.738092422485352
    7. ' :' → logprob: -11.863092422485352
    8. ' :
' → logprob: -11.988092422485352
    9. '):
' → logprob: -12.863092422485352
    10. ':

' → logprob: -13.113092422485352

Token 293: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03299574926495552
    2. ' s' → logprob: -3.7829957008361816
    3. '   ' → logprob: -4.782995700836182
    4. 's' → logprob: -7.032995700836182
    5. ':' → logprob: -8.28299617767334
    6. ':
' → logprob: -9.53299617767334
    7. '    ' → logprob: -10.28299617767334
    8. '     ' → logprob: -11.03299617767334
    9. ' ' → logprob: -11.28299617767334
    10. '      ' → logprob: -11.28299617767334

Token 294: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.16022604703903198
    2. ' s' → logprob: -1.9102261066436768
    3. '   ' → logprob: -13.535225868225098
    4. ' ' → logprob: -15.285225868225098
    5. '	s' → logprob: -16.285226821899414
    6. ' ' → logprob: -16.535226821899414
    7. '       ' → logprob: -16.910226821899414
    8. '    ' → logprob: -17.410226821899414
    9. '  ' → logprob: -18.035226821899414
    10. '(s' → logprob: -18.410226821899414

Token 295: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.07950951159000397
    2. ' -=' → logprob: -2.5795094966888428
    3. '+=' → logprob: -7.704509735107422
    4. '-' → logprob: -9.329509735107422
    5. '=' → logprob: -9.579509735107422
    6. ' +=' → logprob: -12.204509735107422
    7. ' =' → logprob: -13.204509735107422
    8. '   ' → logprob: -13.454509735107422
    9. ' ' → logprob: -13.829509735107422
    10. '%=' → logprob: -13.954509735107422

Token 296: ' DP' (ID: 51992)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.0015204569790512323
    2. ' DP' → logprob: -6.50152063369751
    3. '   ' → logprob: -11.001520156860352
    4. ' ' → logprob: -14.501520156860352
    5. '       ' → logprob: -14.751520156860352
    6. '  ' → logprob: -14.876520156860352
    7. '_DP' → logprob: -16.62652015686035
    8. '    ' → logprob: -16.75152015686035
    9. '           ' → logprob: -17.25152015686035
    10. '     ' → logprob: -18.12652015686035

Token 297: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.5577775128767826e-06
    2. '[' → logprob: -12.125005722045898
    3. '[
' → logprob: -17.6250057220459
    4. 'i' → logprob: -18.2500057220459
    5. ' [' → logprob: -18.8750057220459
    6. '[int' → logprob: -20.0000057220459
    7. '[(' → logprob: -20.0000057220459
    8. '   ' → logprob: -20.5000057220459
    9. '```' → logprob: -20.7500057220459
    10. '[I' → logprob: -20.8750057220459

Token 298: ' -' (ID: 533)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.20388488471508026
    2. '-' → logprob: -2.0788848400115967
    3. '[' → logprob: -3.2038848400115967
    4. ' -' → logprob: -4.578885078430176
    5. 'd' → logprob: -6.328885078430176
    6. 'i' → logprob: -6.453885078430176
    7. '[d' → logprob: -6.453885078430176
    8. ' ' → logprob: -6.828885078430176
    9. '   ' → logprob: -7.078885078430176
    10. ']' → logprob: -7.328885078430176

Token 299: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.011051944456994534
    2. ' d' → logprob: -4.511052131652832
    3. '   ' → logprob: -12.886052131652832
    4. ' ' → logprob: -14.136052131652832
    5. '	d' → logprob: -14.261052131652832
    6. '(d' → logprob: -15.636052131652832
    7. '1' → logprob: -17.136051177978516
    8. '    ' → logprob: -17.386051177978516
    9. '  ' → logprob: -17.511051177978516
    10. '           ' → logprob: -17.636051177978516

Token 300: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6326361894607544
    2. ' -' → logprob: -0.7576361894607544
    3. ' ' → logprob: -10.632636070251465
    4. ']' → logprob: -12.257636070251465
    5. '[' → logprob: -12.507636070251465
    6. 's' → logprob: -14.132636070251465
    7. '   ' → logprob: -14.257636070251465
    8. '1' → logprob: -14.632636070251465
    9. '<|end|>' → logprob: -14.632636070251465
    10. ']-' → logprob: -14.882636070251465

Token 301: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00043221889063715935
    2. ' ' → logprob: -7.750432014465332
    3. '-' → logprob: -14.000432014465332
    4. '2' → logprob: -14.875432014465332
    5. '   ' → logprob: -16.25043296813965
    6. '```' → logprob: -16.50043296813965
    7. ' -' → logprob: -16.62543296813965
    8. 'd' → logprob: -17.87543296813965
    9. '  ' → logprob: -18.37543296813965
    10. '           ' → logprob: -19.62543296813965

Token 302: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.637786231702194e-05
    2. ' ' → logprob: -9.750086784362793
    3. '-' → logprob: -10.500086784362793
    4. ' -' → logprob: -15.000086784362793
    5. '2' → logprob: -16.125085830688477
    6. '```' → logprob: -17.250085830688477
    7. '   ' → logprob: -17.875085830688477
    8. ']' → logprob: -19.250085830688477
    9. '۱' → logprob: -20.687585830688477
    10. '  ' → logprob: -20.687585830688477

Token 303: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003009076928719878
    2. '   ' → logprob: -6.378008842468262
    3. ']
' → logprob: -6.753008842468262
    4. ' ]' → logprob: -9.128008842468262
    5. '<|end|>' → logprob: -11.003008842468262
    6. '       ' → logprob: -12.878008842468262
    7. ']

' → logprob: -13.128008842468262
    8. '+' → logprob: -13.378008842468262
    9. ']
' → logprob: -14.003008842468262
    10. '']' → logprob: -14.253008842468262

Token 304: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07787498086690903
    2. ' s' → logprob: -3.3278748989105225
    3. '<|end|>' → logprob: -4.077875137329102
    4. ' ' → logprob: -4.827875137329102
    5. ' DP' → logprob: -5.077875137329102
    6. 's' → logprob: -6.327875137329102
    7. 'DP' → logprob: -6.702875137329102
    8. ')' → logprob: -7.202875137329102
    9. '[' → logprob: -7.577875137329102
    10. '    ' → logprob: -7.827875137329102

Token 305: ' s' (ID: 265)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.34188175201416016
    2. '   ' → logprob: -1.7168817520141602
    3. 's' (adapté à ' s') → logprob: -3.34188175201416
    4. ' s' → logprob: -3.46688175201416
    5. ' DP' → logprob: -3.71688175201416
    6. 'if' → logprob: -4.59188175201416
    7. ' if' → logprob: -5.34188175201416
    8. 'i' → logprob: -6.84188175201416
    9. ' ' → logprob: -7.09188175201416
    10. '```' → logprob: -7.96688175201416

Token 306: ' %=' (ID: 117035)
  Prédit: ' %='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %=' → logprob: -0.07258732616901398
    2. '%=' → logprob: -3.322587251663208
    3. '%' → logprob: -4.072587490081787
    4. ' %' → logprob: -4.572587490081787
    5. '=' → logprob: -5.322587490081787
    6. ' =' → logprob: -7.197587490081787
    7. ' ' → logprob: -7.822587490081787
    8. ')' → logprob: -8.572587013244629
    9. ' *=' → logprob: -8.947587013244629
    10. ',' → logprob: -9.822587013244629

Token 307: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -9.088346359931165e-07
    2. ' mod' → logprob: -14.000000953674316
    3. '	mod' → logprob: -22.5
    4. '(mod' → logprob: -23.125
    5. '10' → logprob: -24.625
    6. 'moder' → logprob: -24.75
    7. 'MOD' → logprob: -24.875
    8. ' мод' → logprob: -25.25
    9. '```' → logprob: -25.875
    10. 'm' → logprob: -26.0

Token 308: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09135085344314575
    2. 'DP' → logprob: -2.466350793838501
    3. ' DP' → logprob: -6.21635103225708
    4. '    
' → logprob: -8.841350555419922
    5. '	' → logprob: -9.591350555419922
    6. '\t' → logprob: -10.091350555419922
    7. ' ' → logprob: -10.466350555419922
    8. '
' → logprob: -10.966350555419922
    9. '   ' → logprob: -10.966350555419922
    10. '  ' → logprob: -11.216350555419922

Token 309: ' #' (ID: 1069)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.3516005575656891
    2. '   ' → logprob: -1.2266005277633667
    3. ' DP' → logprob: -6.226600646972656
    4. '
' → logprob: -7.851600646972656
    5. '    
' → logprob: -8.976600646972656
    6. ' ' → logprob: -8.976600646972656
    7. '	' → logprob: -9.476600646972656
    8. 's' → logprob: -9.726600646972656
    9. '  ' → logprob: -9.976600646972656
    10. '_DP' → logprob: -10.351600646972656

Token 310: ' attention' (ID: 8684)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.3316621482372284
    2. '   ' → logprob: -1.3316621780395508
    3. ' DP' → logprob: -4.581662178039551
    4. 'if' → logprob: -6.081662178039551
    5. 'for' → logprob: -6.956662178039551
    6. 's' → logprob: -6.956662178039551
    7. ' s' → logprob: -7.331662178039551
    8. ' ' → logprob: -7.706662178039551
    9. '    
' → logprob: -7.831662178039551
    10. ' if' → logprob: -7.831662178039551

Token 311: ' au' (ID: 2791)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.056155137717723846
    2. 'DP' → logprob: -2.931155204772949
    3. ' DP' → logprob: -7.181155204772949
    4. '
' → logprob: -8.93115520477295
    5. '<|end|>' → logprob: -9.30615520477295
    6. ' ' → logprob: -9.93115520477295
    7. '   ' → logprob: -10.18115520477295
    8. '    
' → logprob: -10.18115520477295
    9. '```' → logprob: -10.55615520477295
    10. '  ' → logprob: -10.80615520477295

Token 312: ' modulo' (ID: 112372)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.3048892319202423
    2. 's' → logprob: -2.17988920211792
    3. 'negative' → logprob: -2.55488920211792
    4. '0' → logprob: -3.42988920211792
    5. ' mod' → logprob: -4.80488920211792
    6. ' negative' → logprob: -5.05488920211792
    7. ' ' → logprob: -5.42988920211792
    8. 'overflow' → logprob: -5.42988920211792
    9. ' s' → logprob: -5.80488920211792
    10. ' modulo' → logprob: -6.55488920211792

Token 313: '
' (ID: 198)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DP' → logprob: -1.0126914978027344
    2. '<|end|>' → logprob: -1.1376914978027344
    3. '   ' → logprob: -1.3876914978027344
    4. ')' → logprob: -3.5126914978027344
    5. ' ' → logprob: -4.887691497802734
    6. ' DP' → logprob: -5.012691497802734
    7. 'token' → logprob: -5.262691497802734
    8. 'for' → logprob: -5.887691497802734
    9. 's' → logprob: -6.137691497802734
    10. '...' → logprob: -6.512691497802734

Token 314: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7025538086891174
    2. 'DP' → logprob: -0.7025538086891174
    3. 'next' → logprob: -5.952553749084473
    4. 'token' → logprob: -6.077553749084473
    5. ' DP' → logprob: -6.077553749084473
    6. ' next' → logprob: -7.952553749084473
    7. '	' → logprob: -8.577553749084473
    8. ' ' → logprob: -8.702553749084473
    9. '\t' → logprob: -8.702553749084473
    10. 'if' → logprob: -9.202553749084473

Token 315: ' DP' (ID: 51992)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DP' (adapté à ' DP') → logprob: -3.2378600735682994e-05
    2. 'val' → logprob: -10.875032424926758
    3. ' DP' → logprob: -12.125032424926758
    4. 'mult' → logprob: -12.875032424926758
    5. 'dp' → logprob: -13.875032424926758
    6. 'multi' → logprob: -14.250032424926758
    7. 'temp' → logprob: -14.375032424926758
    8. '   ' → logprob: -14.500032424926758
    9. 'next' → logprob: -14.875032424926758
    10. 'if' → logprob: -15.125032424926758

Token 316: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0001290454383706674
    2. '[' → logprob: -9.000128746032715
    3. '[s' → logprob: -13.125128746032715
    4. '[I' → logprob: -13.625128746032715
    5. '[
' → logprob: -14.625128746032715
    6. '```' → logprob: -15.000128746032715
    7. '\[' → logprob: -15.500128746032715
    8. ' [' → logprob: -15.500128746032715
    9. 'i' → logprob: -15.625128746032715
    10. '[(' → logprob: -15.625128746032715

Token 317: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00039254239527508616
    2. ']=' → logprob: -8.50039291381836
    3. ' ]' → logprob: -9.00039291381836
    4. '=' → logprob: -9.87539291381836
    5. ' =' → logprob: -11.87539291381836
    6. ']=(' → logprob: -12.87539291381836
    7. ')' → logprob: -13.12539291381836
    8. ']+=' → logprob: -13.37539291381836
    9. ' ' → logprob: -15.62539291381836
    10. ',' → logprob: -15.75039291381836

Token 318: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20144297182559967
    2. ' =' → logprob: -1.7014429569244385
    3. '=(' → logprob: -11.20144271850586
    4. ' =(' → logprob: -11.82644271850586
    5. '+=' → logprob: -12.32644271850586
    6. ' +=' → logprob: -13.20144271850586
    7. '(' → logprob: -14.70144271850586
    8. '%=' → logprob: -14.70144271850586
    9. ',' → logprob: -14.82644271850586
    10. ' *=' → logprob: -15.45144271850586

Token 319: ' (' (ID: 350)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.12820018827915192
    2. ' (' → logprob: -3.3782002925872803
    3. 's' → logprob: -3.8782002925872803
    4. 'multi' → logprob: -4.003200054168701
    5. '(m' → logprob: -4.378200054168701
    6. '(f' → logprob: -4.503200054168701
    7. 'fac' → logprob: -4.628200054168701
    8. '((' → logprob: -5.753200054168701
    9. ' fac' → logprob: -6.003200054168701
    10. ' multi' → logprob: -6.003200054168701

Token 320: 's' (ID: 82)
  Prédit: 'fac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fac' → logprob: -0.4034196436405182
    2. 's' → logprob: -1.6534196138381958
    3. '(s' → logprob: -2.6534197330474854
    4. 'multi' → logprob: -3.1534197330474854
    5. '(f' → logprob: -4.403419494628906
    6. ' fac' → logprob: -4.903419494628906
    7. '(m' → logprob: -6.778419494628906
    8. 'DP' → logprob: -6.903419494628906
    9. ' s' → logprob: -7.028419494628906
    10. 'mult' → logprob: -7.153419494628906

Token 321: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6326844096183777
    2. ' *' → logprob: -0.7576844096183777
    3. '+' → logprob: -10.257684707641602
    4. ' ' → logprob: -10.632684707641602
    5. '*(' → logprob: -12.007684707641602
    6. '   ' → logprob: -12.257684707641602
    7. '**' → logprob: -12.882684707641602
    8. '*f' → logprob: -13.132684707641602
    9. ' +' → logprob: -13.257684707641602
    10. ')' → logprob: -13.382684707641602

Token 322: ' multi' (ID: 12151)
  Prédit: 'fac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fac' → logprob: -0.20849482715129852
    2. 'multi' → logprob: -1.958494782447815
    3. ' fac' → logprob: -3.3334949016571045
    4. ' multi' → logprob: -4.833494663238525
    5. 'mult' → logprob: -7.458494663238525
    6. 'range' → logprob: -7.583494663238525
    7. '(f' → logprob: -7.833494663238525
    8. '(m' → logprob: -7.958494663238525
    9. 'mul' → logprob: -8.458495140075684
    10. ' (' → logprob: -8.458495140075684

Token 323: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.9875325708417222e-05
    2. ')%' → logprob: -10.500029563903809
    3. ' )' → logprob: -13.125029563903809
    4. '%' → logprob: -16.000030517578125
    5. '*' → logprob: -16.875030517578125
    6. ']' → logprob: -17.125030517578125
    7. '）' → logprob: -17.125030517578125
    8. ' *' → logprob: -17.750030517578125
    9. '+' → logprob: -17.875030517578125
    10. '   ' → logprob: -18.625030517578125

Token 324: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.2254878729581833
    2. '%' → logprob: -1.6004878282546997
    3. ' %=' → logprob: -10.72548770904541
    4. '<|end|>' → logprob: -10.97548770904541
    5. ')' → logprob: -11.10048770904541
    6. ')%' → logprob: -11.35048770904541
    7. ' ' → logprob: -12.47548770904541
    8. ' ' → logprob: -13.35048770904541
    9. ' %#' → logprob: -13.35048770904541
    10. '%i' → logprob: -15.22548770904541

Token 325: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.001929228543303907
    2. ' mod' → logprob: -6.25192928314209
    3. '(mod' → logprob: -14.25192928314209
    4. '	mod' → logprob: -18.376928329467773
    5. ' ' → logprob: -21.126928329467773
    6. '_mod' → logprob: -21.626928329467773
    7. '   ' → logprob: -22.126928329467773
    8. ' мод' → logprob: -22.251928329467773
    9. 'MOD' → logprob: -22.501928329467773
    10. 'modal' → logprob: -22.751928329467773

Token 326: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 327: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 328: ' un' (ID: 537)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 329: ' peu' (ID: 9235)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.15315261483192444
    2. '+' → logprob: -3.1531527042388916
    3. ')' → logprob: -3.4031527042388916
    4. '=' → logprob: -4.2781524658203125
    5. '\n' → logprob: -4.5281524658203125
    6. '<|end|>' → logprob: -4.5281524658203125
    7. ']' → logprob: -5.4031524658203125
    8. '
' → logprob: -5.7781524658203125
    9. ' 
' → logprob: -6.0281524658203125
    10. '[' → logprob: -6.1531524658203125

Token 330: ' peu' (ID: 9235)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.3771835565567017
    2. '=' → logprob: -1.8771835565567017
    3. '+' → logprob: -1.8771835565567017
    4. '_' → logprob: -2.252183437347412
    5. '+=' → logprob: -2.502183437347412
    6. '<|end|>' → logprob: -2.752183437347412
    7. '%' → logprob: -3.252183437347412
    8. '*' → logprob: -3.377183437347412
    9. '...' → logprob: -3.627183437347412
    10. ' +=' → logprob: -4.002183437347412

Token 331: ' ver' (ID: 1245)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 332: 'be' (ID: 1464)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9910297989845276
    2. 'batim' → logprob: -1.1160297393798828
    3. 'b' → logprob: -2.366029739379883
    4. 'be' → logprob: -2.991029739379883
    5. 'ifié' → logprob: -3.241029739379883
    6. 'si' → logprob: -3.616029739379883
    7. 'dict' → logprob: -3.741029739379883
    8. 'se' → logprob: -4.616029739379883
    9. 'sus' → logprob: -4.741029739379883
    10. 'ni' → logprob: -4.991029739379883

Token 333: 'ux' (ID: 1778)
  Prédit: 'ux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ux' → logprob: -0.00342651573009789
    2. 'se' → logprob: -6.253426551818848
    3. 'use' → logprob: -7.003426551818848
    4. 'r' → logprob: -8.378426551818848
    5. 're' → logprob: -9.003426551818848
    6. 't' → logprob: -10.003426551818848
    7. 'x' → logprob: -10.378426551818848
    8. 'u' → logprob: -10.503426551818848
    9. '```' → logprob: -10.753426551818848
    10. 'rase' → logprob: -10.878426551818848

Token 334: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 335: ' faudrait' (ID: 128958)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 336: ' commenter' (ID: 175461)
  Prédit: 'just'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'just' → logprob: -0.736634373664856
    2. 'pe' → logprob: -1.986634373664856
    3. 'mettre' → logprob: -2.1116342544555664
    4. 'aj' → logprob: -2.6116342544555664
    5. 'simpl' → logprob: -2.9866342544555664
    6. 'une' → logprob: -4.361634254455566
    7. 'optim' → logprob: -4.486634254455566
    8. '   ' → logprob: -4.611634254455566
    9. 'contin' → logprob: -4.736634254455566
    10. 'indent' → logprob: -4.736634254455566

Token 337: ' ce' (ID: 2357)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 338: ' calcul' (ID: 7559)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.004715395625680685
    2. ' #' → logprob: -6.004715442657471
    3. 'code' → logprob: -6.754715442657471
    4. ')' → logprob: -7.879715442657471
    5. '```' → logprob: -8.254714965820312
    6. ' code' → logprob: -8.754714965820312
    7. 'token' → logprob: -9.754714965820312
    8. 'comment' → logprob: -10.754714965820312
    9. ' ' → logprob: -10.879714965820312
    10. '`' → logprob: -11.254714965820312

Token 339: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 340: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 341: ' traitement' (ID: 42434)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 342: ' particulier' (ID: 47842)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5712559223175049
    2. 'print' → logprob: -1.1962559223175049
    3. 'result' → logprob: -2.196255922317505
    4. '#' → logprob: -4.696255683898926
    5. 'total' → logprob: -5.946255683898926
    6. ' for' → logprob: -6.071255683898926
    7. 'answer' → logprob: -6.071255683898926
    8. '...' → logprob: -6.446255683898926
    9. 'output' → logprob: -7.446255683898926
    10. 'ans' → logprob: -7.446255683898926

Token 343: ' pour' (ID: 1930)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10330624133348465
    2. 'if' → logprob: -3.103306293487549
    3. ' for' → logprob: -3.228306293487549
    4. '#' → logprob: -5.603306293487549
    5. '...' → logprob: -6.228306293487549
    6. '[' → logprob: -6.603306293487549
    7. '<|end|>' → logprob: -6.603306293487549
    8. '=' → logprob: -6.978306293487549
    9. ' =' → logprob: -7.353306293487549
    10. '```' → logprob: -7.353306293487549

Token 344: ' la' (ID: 557)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.03512173146009445
    2. ' h' → logprob: -3.7851216793060303
    3. 'i' → logprob: -4.535121917724609
    4. ' i' → logprob: -6.910121917724609
    5. 'DP' → logprob: -10.28512191772461
    6. '0' → logprob: -10.91012191772461
    7. ' DP' → logprob: -12.16012191772461
    8. 'd' → logprob: -12.66012191772461
    9. ' ' → logprob: -12.66012191772461
    10. 'n' → logprob: -12.97262191772461

Token 345: ' fin' (ID: 2131)
  Prédit: 'ha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ha' → logprob: -0.6774985194206238
    2. 'h' → logprob: -1.0524985790252686
    3. 'case' → logprob: -2.9274985790252686
    4. 'der' → logprob: -3.4274985790252686
    5. 'val' → logprob: -3.9274985790252686
    6. ' dernière' → logprob: -4.8024983406066895
    7. 'position' → logprob: -5.4274983406066895
    8. 'dern' → logprob: -5.4274983406066895
    9. ' hauteur' → logprob: -5.5524983406066895
    10. 'ligne' → logprob: -5.9274983406066895

Token 346: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3720622956752777
    2. ' for' → logprob: -1.9970623254776
    3. 'DP' → logprob: -2.1220622062683105
    4. '
' → logprob: -4.1220622062683105
    5. 'i' → logprob: -4.4970622062683105
    6. 'if' → logprob: -4.6220622062683105
    7. 's' → logprob: -4.9970622062683105
    8. ' if' → logprob: -6.6220622062683105
    9. '  
' → logprob: -6.6220622062683105
    10. '#' → logprob: -6.7470622062683105

Token 347: 'DP' (ID: 16851)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4807921350002289
    2. 'DP' → logprob: -1.7307921648025513
    3. 'if' → logprob: -2.2307920455932617
    4. 'i' → logprob: -2.7307920455932617
    5. 's' → logprob: -3.7307920455932617
    6. ' for' → logprob: -5.855792045593262
    7. 'result' → logprob: -6.730792045593262
    8. ' if' → logprob: -7.605792045593262
    9. 'res' → logprob: -7.605792045593262
    10. 'sum' → logprob: -7.855792045593262

Token 348: '[h' (ID: 88900)
  Prédit: '[h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[h' → logprob: -0.03885985538363457
    2. '[-' → logprob: -3.4138598442077637
    3. '[' → logprob: -5.288859844207764
    4. '[n' → logprob: -9.538860321044922
    5. '[len' → logprob: -10.538860321044922
    6. '<|end|>' → logprob: -10.913860321044922
    7. '[:]' → logprob: -11.038860321044922
    8. ' [' → logprob: -12.788860321044922
    9. 'h' → logprob: -13.288860321044922
    10. ',' → logprob: -13.413860321044922

Token 349: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04907440021634102
    2. '-' → logprob: -3.049074411392212
    3. ' -' → logprob: -7.924074172973633
    4. ' ]' → logprob: -9.299074172973633
    5. '])' → logprob: -11.049074172973633
    6. ']=' → logprob: -11.424074172973633
    7. ']+=' → logprob: -13.424074172973633
    8. ']
' → logprob: -14.424074172973633
    9. ']-' → logprob: -14.674074172973633
    10. '`]' → logprob: -14.674074172973633

Token 350: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 351: ' sum' (ID: 4215)
  Prédit: 'fac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fac' → logprob: -1.2412165403366089
    2. '(f' → logprob: -1.3662165403366089
    3. '(s' → logprob: -1.7412165403366089
    4. '(D' → logprob: -2.4912166595458984
    5. '(' → logprob: -3.2412166595458984
    6. 'DP' → logprob: -3.3662166595458984
    7. '(sum' → logprob: -3.3662166595458984
    8. '0' → logprob: -3.6162166595458984
    9. 'sum' → logprob: -3.7412166595458984
    10. '((' → logprob: -4.241216659545898

Token 352: '(D' (ID: 9908)
  Prédit: '(D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(D' → logprob: -0.00507210660725832
    2. '([' → logprob: -6.005072116851807
    3. '((' → logprob: -6.255072116851807
    4. 'DP' → logprob: -7.880072116851807
    5. '(' → logprob: -8.380071640014648
    6. '([(' → logprob: -10.505071640014648
    7. '(
' → logprob: -11.130071640014648
    8. 'D' → logprob: -12.130071640014648
    9. '([
' → logprob: -12.380071640014648
    10. '(((' → logprob: -12.630071640014648

Token 353: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.00021140782337170094
    2. '[' → logprob: -9.750211715698242
    3. '[P' → logprob: -9.750211715698242
    4. '[
' → logprob: -11.125211715698242
    5. '(' → logprob: -11.375211715698242
    6. '(P' → logprob: -11.500211715698242
    7. '[i' → logprob: -11.500211715698242
    8. ' P' → logprob: -11.625211715698242
    9. '([' → logprob: -12.250211715698242
    10. '[:' → logprob: -12.375211715698242

Token 354: '[max' (ID: 84690)
  Prédit: '[:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.006311862263828516
    2. '[' → logprob: -6.006311893463135
    3. ')' → logprob: -6.381311893463135
    4. '[:-' → logprob: -6.881311893463135
    5. '[h' → logprob: -7.631311893463135
    6. '[i' → logprob: -8.006311416625977
    7. '[-' → logprob: -8.381311416625977
    8. '[j' → logprob: -10.881311416625977
    9. ')%' → logprob: -11.256311416625977
    10. '%' → logprob: -11.381311416625977

Token 355: '(' (ID: 7)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.11441350728273392
    2. '(' → logprob: -2.2394134998321533
    3. '(i' → logprob: -6.739413738250732
    4. '([' → logprob: -8.864413261413574
    5. '[h' → logprob: -9.739413261413574
    6. '(j' → logprob: -10.239413261413574
    7. '(range' → logprob: -10.239413261413574
    8. '(n' → logprob: -10.489413261413574
    9. '(-' → logprob: -10.614413261413574
    10. '(max' → logprob: -10.614413261413574

Token 356: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011386262252926826
    2. 'h' → logprob: -4.511386394500732
    3. '(' → logprob: -8.136385917663574
    4. '(h' → logprob: -10.386385917663574
    5. '1' → logprob: -12.011385917663574
    6. ' ' → logprob: -12.386385917663574
    7. ' h' → logprob: -14.261385917663574
    8. '[h' → logprob: -14.261385917663574
    9. '```' → logprob: -14.823885917663574
    10. '[' → logprob: -14.823885917663574

Token 357: ',' (ID: 11)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.022390328347682953
    2. ',h' → logprob: -4.522390365600586
    3. ',' → logprob: -5.272390365600586
    4. '[h' → logprob: -5.397390365600586
    5. '(' → logprob: -6.522390365600586
    6. 'h' → logprob: -9.522390365600586
    7. ' (' → logprob: -10.897390365600586
    8. '][' → logprob: -11.147390365600586
    9. '](' → logprob: -11.772390365600586
    10. ',(' → logprob: -12.272390365600586

Token 358: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -2.7610454708337784e-05
    2. ' h' → logprob: -10.875027656555176
    3. '(h' → logprob: -12.125027656555176
    4. '0' → logprob: -13.625027656555176
    5. '
' → logprob: -14.625027656555176
    6. 'len' → logprob: -14.875027656555176
    7. '   ' → logprob: -14.875027656555176
    8. '[h' → logprob: -15.375027656555176
    9. 'n' → logprob: -16.25002670288086
    10. ' ' → logprob: -16.37502670288086

Token 359: ' -' (ID: 533)
  Prédit: '-d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-d' → logprob: -0.048866331577301025
    2. ' -' → logprob: -3.2988662719726562
    3. '-' → logprob: -4.548866271972656
    4. '-h' → logprob: -8.923866271972656
    5. '-D' → logprob: -10.423866271972656
    6. '-n' → logprob: -11.298866271972656
    7. 'd' → logprob: -11.923866271972656
    8. ' ' → logprob: -13.798866271972656
    9. '-k' → logprob: -13.923866271972656
    10. '-(' → logprob: -14.423866271972656

Token 360: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0005149058997631073
    2. ' d' → logprob: -7.625514984130859
    3. '(d' → logprob: -11.37551498413086
    4. ' ' → logprob: -12.00051498413086
    5. '   ' → logprob: -12.75051498413086
    6. ' (' → logprob: -13.37551498413086
    7. '2' → logprob: -13.75051498413086
    8. '(' → logprob: -13.87551498413086
    9. '  ' → logprob: -14.12551498413086
    10. '
' → logprob: -14.62551498413086

Token 361: '):' (ID: 3127)
  Prédit: ':h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':h' → logprob: -0.09835394471883774
    2. '):' → logprob: -2.848353862762451
    3. '+' → logprob: -4.723353862762451
    4. ' +' → logprob: -4.848353862762451
    5. ' :' → logprob: -4.848353862762451
    6. ':' → logprob: -5.098353862762451
    7. ' ):' → logprob: -6.098353862762451
    8. '(h' → logprob: -6.973353862762451
    9. '[h' → logprob: -7.348353862762451
    10. 'h' → logprob: -8.34835433959961

Token 362: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -8.327856630785391e-05
    2. ' h' → logprob: -10.250082969665527
    3. '])' → logprob: -10.500082969665527
    4. ']' → logprob: -11.250082969665527
    5. '(h' → logprob: -12.125082969665527
    6. '
' → logprob: -14.250082969665527
    7. ')' → logprob: -15.125082969665527
    8. '(' → logprob: -15.750082969665527
    9. '[h' → logprob: -16.250083923339844
    10. ':h' → logprob: -16.375083923339844

Token 363: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.033851996064186096
    2. '+' → logprob: -3.4088521003723145
    3. ' +' → logprob: -9.033851623535156
    4. ' ])' → logprob: -9.783851623535156
    5. ']' → logprob: -11.158851623535156
    6. '])
' → logprob: -12.783851623535156
    7. ')' → logprob: -13.033851623535156
    8. '])*' → logprob: -13.158851623535156
    9. '-' → logprob: -13.533851623535156
    10. ' ' → logprob: -13.533851623535156

Token 364: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.11372143030166626
    2. '%' → logprob: -2.2387213706970215
    3. ')' → logprob: -7.1137213706970215
    4. ' ' → logprob: -10.36372184753418
    5. '%D' → logprob: -10.36372184753418
    6. ' ' → logprob: -11.86372184753418
    7. ')%' → logprob: -12.73872184753418
    8. ' %=' → logprob: -13.23872184753418
    9. '%A' → logprob: -13.36372184753418
    10. ' %#' → logprob: -13.36372184753418

Token 365: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -5.512236498361744e-07
    2. ' mod' → logprob: -14.500000953674316
    3. '(mod' → logprob: -18.75
    4. '	mod' → logprob: -21.875
    5. '```' → logprob: -23.125
    6. '10' → logprob: -23.875
    7. 'MOD' → logprob: -24.25
    8. 'm' → logprob: -24.5
    9. '
' → logprob: -24.5
    10. '`' → logprob: -24.875

Token 366: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 367: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 368: ' affich' (ID: 90179)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.512236498361744e-07
    2. 'for' → logprob: -14.500000953674316
    3. ' print' → logprob: -18.875
    4. 'pr' → logprob: -19.625
    5. '#print' → logprob: -19.75
    6. 'prin' → logprob: -19.75
    7. '#' → logprob: -20.25
    8. 'import' → logprob: -21.375
    9. 'return' → logprob: -22.375
    10. '```' → logprob: -22.5

Token 369: 'age' (ID: 477)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.04314545914530754
    2. 'int' → logprob: -3.4181454181671143
    3. '(print' → logprob: -5.293145656585693
    4. '()' → logprob: -7.043145656585693
    5. ' print' → logprob: -7.293145656585693
    6. '(' → logprob: -7.293145656585693
    7. 'out' → logprob: -7.793145656585693
    8. 'er' → logprob: -7.918145656585693
    9. 'ut' → logprob: -8.293145179748535
    10. 'write' → logprob: -8.918145179748535

Token 370: ' de' (ID: 334)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -20.25
    3. 'for' → logprob: -20.25
    4. '
' → logprob: -20.75
    5. '```' → logprob: -20.75
    6. 'prin' → logprob: -24.0
    7. '#print' → logprob: -24.125
    8. 'pr' → logprob: -24.25
    9. 'printf' → logprob: -25.125
    10. '.print' → logprob: -25.625

Token 371: ' la' (ID: 557)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.011063974350690842
    2. 'DP' → logprob: -4.511064052581787
    3. '(D' → logprob: -11.511063575744629
    4. 'dp' → logprob: -13.386063575744629
    5. ' print' → logprob: -13.636063575744629
    6. ' DP' → logprob: -14.011063575744629
    7. '(' → logprob: -14.261063575744629
    8. 'result' → logprob: -14.261063575744629
    9. 'sum' → logprob: -14.886063575744629
    10. 'pow' → logprob: -15.511063575744629

Token 372: ' solution' (ID: 7578)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0007104054093360901
    2. 'result' → logprob: -8.125710487365723
    3. ' print' → logprob: -8.375710487365723
    4. 'r' → logprob: -9.125710487365723
    5. 'for' → logprob: -10.500710487365723
    6. 'DP' → logprob: -10.750710487365723
    7. 'sum' → logprob: -11.625710487365723
    8. 'pr' → logprob: -12.625710487365723
    9. ' result' → logprob: -13.375710487365723
    10. 'final' → logprob: -13.500710487365723

Token 373: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -7.896309739408025e-07
    2. '
' → logprob: -14.625000953674316
    3. ' print' → logprob: -15.875000953674316
    4. '```' → logprob: -16.25
    5. '``' → logprob: -20.625
    6. '#print' → logprob: -21.0
    7. '
' → logprob: -21.25
    8. '.print' → logprob: -21.875
    9. '(print' → logprob: -21.875
    10. 'for' → logprob: -22.5

Token 374: ' je' (ID: 1264)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.9361264946837764e-07
    2. ' print' → logprob: -16.0
    3. '
' → logprob: -21.125
    4. '```' → logprob: -21.875
    5. '#print' → logprob: -25.0
    6. 'prin' → logprob: -25.375
    7. 'pr' → logprob: -25.5
    8. 'printf' → logprob: -25.625
    9. 'for' → logprob: -26.0
    10. 'println' → logprob: -27.0

Token 375: ' trouve' (ID: 30913)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0007173155900090933
    2. ' print' → logprob: -7.2507171630859375
    3. 'pr' → logprob: -12.875717163085938
    4. 'p' → logprob: -13.625717163085938
    5. 'python' → logprob: -14.375717163085938
    6. 'n' → logprob: -14.500717163085938
    7. 'import' → logprob: -15.500717163085938
    8. 's' → logprob: -15.625717163085938
    9. '.print' → logprob: -15.750717163085938
    10. 'for' → logprob: -15.750717163085938

Token 376: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.173704271830502e-06
    2. ' print' → logprob: -13.50000286102295
    3. '
' → logprob: -13.75000286102295
    4. '```' → logprob: -14.12500286102295
    5. 'for' → logprob: -18.125003814697266
    6. '(print' → logprob: -18.875003814697266
    7. '``' → logprob: -19.000003814697266
    8. 'pr' → logprob: -19.625003814697266
    9. '#print' → logprob: -19.875003814697266
    10. 'prin' → logprob: -20.125003814697266

Token 377: ' sans' (ID: 9828)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16322223842144012
    2. '(D' → logprob: -1.9132221937179565
    3. ' (' → logprob: -6.163222312927246
    4. ' ' → logprob: -8.663222312927246
    5. '()' → logprob: -8.663222312927246
    6. '(s' → logprob: -9.038222312927246
    7. ' DP' → logprob: -9.163222312927246
    8. 'DP' → logprob: -9.288222312927246
    9. '(dp' → logprob: -9.913222312927246
    10. '((' → logprob: -10.163222312927246

Token 378: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.06116041541099548
    2. '()' → logprob: -3.3111603260040283
    3. 'par' → logprob: -4.061160564422607
    4. 's' → logprob: -6.561160564422607
    5. ' parentheses' → logprob: -6.686160564422607
    6. '_parent' → logprob: -6.936160564422607
    7. '(' → logprob: -7.311160564422607
    8. ' parent' → logprob: -7.436160564422607
    9. 'paren' → logprob: -8.31116008758545
    10. '-parent' → logprob: -9.31116008758545

Token 379: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.06647957116365433
    2. 'heses' → logprob: -2.8164796829223633
    3. 'èses' → logprob: -5.441479682922363
    4. 'hes' → logprob: -9.316479682922363
    5. 'eses' → logprob: -10.441479682922363
    6. 'hs' → logprob: -10.941479682922363
    7. 'hesis' → logprob: -11.066479682922363
    8. 'th' → logprob: -11.441479682922363
    9. 's' → logprob: -13.191479682922363
    10. 'èse' → logprob: -13.191479682922363

Token 380: 'èses' (ID: 188395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05722013860940933
    2. 't' → logprob: -3.682220220565796
    3. '()' → logprob: -5.057219982147217
    4. 'èse' → logprob: -5.682219982147217
    5. '(' → logprob: -5.807219982147217
    6. '))' → logprob: -5.807219982147217
    7. 's' → logprob: -6.307219982147217
    8. 'nt' → logprob: -6.682219982147217
    9. '```' → logprob: -6.682219982147217
    10. '())' → logprob: -6.807219982147217

Token 381: ' m' (ID: 284)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.9361264946837764e-07
    2. ' print' → logprob: -16.5
    3. '
' → logprob: -21.75
    4. '```' → logprob: -22.25
    5. 'pr' → logprob: -22.625
    6. '(print' → logprob: -23.5
    7. '#print' → logprob: -23.875
    8. 'printf' → logprob: -24.125
    9. 'prin' → logprob: -24.5
    10. '.print' → logprob: -24.75

Token 382: 'oche' (ID: 13210)
  Prédit: 'ême'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ême' → logprob: -0.6643117666244507
    2. 'aint' → logprob: -1.5393117666244507
    3. 'anque' → logprob: -3.0393118858337402
    4. 'essage' → logprob: -3.7893118858337402
    5. 'ieux' → logprob: -4.03931188583374
    6. 'an' → logprob: -4.16431188583374
    7. 'oine' → logprob: -4.16431188583374
    8. 'a' → logprob: -4.28931188583374
    9. '```' → logprob: -4.91431188583374
    10. 'arque' → logprob: -4.91431188583374

Token 383: ' mais' (ID: 2899)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.9361264946837764e-07
    2. ' print' → logprob: -16.25
    3. '
' → logprob: -16.875
    4. '```' → logprob: -18.375
    5. 'pr' → logprob: -19.25
    6. 'for' → logprob: -19.875
    7. '#print' → logprob: -20.125
    8. '(print' → logprob: -20.5
    9. 'prin' → logprob: -20.625
    10. '.print' → logprob: -21.25

Token 384: ' bon' (ID: 4846)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00012356207298580557
    2. ' print' → logprob: -9.000123977661133
    3. 'sys' → logprob: -16.625123977661133
    4. 'printf' → logprob: -19.500123977661133
    5. 'pr' → logprob: -20.875123977661133
    6. '```' → logprob: -21.125123977661133
    7. 'println' → logprob: -21.375123977661133
    8. '(print' → logprob: -21.750123977661133
    9. '`' → logprob: -22.000123977661133
    10. ' sys' → logprob: -22.125123977661133

Token 385: ' py' (ID: 13104)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.696889623621246e-06
    2. ' print' → logprob: -13.00000286102295
    3. '
' → logprob: -15.00000286102295
    4. '```' → logprob: -18.000001907348633
    5. '(print' → logprob: -18.750001907348633
    6. 'for' → logprob: -19.625001907348633
    7. '.print' → logprob: -19.875001907348633
    8. '#print' → logprob: -20.125001907348633
    9. 'pr' → logprob: -21.000001907348633
    10. 'prin' → logprob: -21.750001907348633

Token 386: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.005960914772003889
    2. 'print' → logprob: -5.130960941314697
    3. '```' → logprob: -11.380960464477539
    4. 'thon' → logprob: -12.130960464477539
    5. ' ' → logprob: -12.255960464477539
    6. 'ton' → logprob: -13.005960464477539
    7. '_print' → logprob: -13.380960464477539
    8. ' print' → logprob: -13.755960464477539
    9. '#print' → logprob: -13.880960464477539
    10. '27' → logprob: -14.255960464477539

Token 387: ' hein' (ID: 115155)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.45848218582978e-06
    2. ' print' → logprob: -13.00000286102295
    3. '
' → logprob: -16.000001907348633
    4. '.print' → logprob: -18.625001907348633
    5. '(print' → logprob: -19.375001907348633
    6. '```' → logprob: -19.875001907348633
    7. 'pr' → logprob: -20.500001907348633
    8. '#print' → logprob: -21.000001907348633
    9. 'Print' → logprob: -21.500001907348633
    10. 'prin' → logprob: -21.500001907348633

Token 388: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -6.301394023466855e-05
    2. '
' → logprob: -9.750062942504883
    3. ' print' → logprob: -12.375062942504883
    4. '```' → logprob: -15.125062942504883
    5. '(print' → logprob: -16.375062942504883
    6. '.print' → logprob: -16.875062942504883
    7. '#print' → logprob: -18.625062942504883
    8. '``' → logprob: -19.125062942504883
    9. 'for' → logprob: -19.375062942504883
    10. '  
' → logprob: -19.625062942504883

Token 389: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.5776860184123507e-06
    2. ' print' → logprob: -13.00000286102295
    3. '
' → logprob: -15.50000286102295
    4. '.print' → logprob: -22.125001907348633
    5. 'println' → logprob: -22.500001907348633
    6. '#print' → logprob: -22.500001907348633
    7. '(print' → logprob: -22.875001907348633
    8. 'sys' → logprob: -23.000001907348633
    9. 'pr' → logprob: -23.000001907348633
    10. 'printf' → logprob: -23.250001907348633

Token 390: ' DP' (ID: 51992)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.3132951557636261
    2. ' DP' → logprob: -1.3132951259613037
    3. '(D' → logprob: -10.563295364379883
    4. '_DP' → logprob: -12.188295364379883
    5. ' ' → logprob: -13.813295364379883
    6. ' ' → logprob: -14.563295364379883
    7. '"' → logprob: -15.188295364379883
    8. 'dp' → logprob: -15.313295364379883
    9. '(' → logprob: -15.813295364379883
    10. 'D' → logprob: -16.188295364379883

Token 391: '[-' (ID: 17503)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 392: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.250000953674316
    3. '```' → logprob: -17.625
    4. '0' → logprob: -17.875
    5. ']' → logprob: -18.25
    6. '１' → logprob: -18.875
    7. '   ' → logprob: -19.0
    8. '`' → logprob: -19.0
    9. '  ' → logprob: -19.375
    10. '2' → logprob: -19.5

Token 393: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5794153809547424
    2. ']' → logprob: -0.8294153809547424
    3. '])' → logprob: -5.704415321350098
    4. ')]' → logprob: -9.079415321350098
    5. ' )' → logprob: -12.079415321350098
    6. '）' → logprob: -12.079415321350098
    7. ' ]' → logprob: -12.204415321350098
    8. '}' → logprob: -12.579415321350098
    9. '']' → logprob: -13.704415321350098
    10. ')
' → logprob: -14.329415321350098


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 391
Tokens correctement prédits (1ère position, stricte): 106
Tokens correctement prédits (1ère position, avec adaptation): 110
Tokens correctement prédits (top 10): 249
Précision stricte (1ère position): 27.11%
Précision adaptée (1ère position): 28.13%
Précision (top 10): 63.68%
================================================================================
