================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:31:19
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class Comb:
    # Bon, ça c'est juste pour calculer quelques combinaisons sous modulo,
    # je me suis pas mal inspiré d'autres codes.
    def __init__(self, size, md):
        self.MOD = md
        self.fact = [1] * (size + 1)
        for i in range(1, size + 1):
            self.fact[i] = self.fact[i-1] * i % md
        # pas le plus optimal mais bon ça marche
        self.inv = [pow(self.fact[i], md - 2, md) for i in range(size + 1)]

    def fac(self, k):
        # Returns k!
        return self.fact[k]

    def invfac(self, k):
        # je crois que c'est l'inverse modulo de k!
        return self.inv[k]

    def P(self, n, k):
        # k-permutations de n (nPk)
        if n < k:
            return 0
        return self.fact[n] * self.inv[n - k] % self.MOD

    def C(self, n, k):
        # nCk (binomial)
        if n < k:
            return 0
        # pas sûr si les () sont nécessaires
        return self.fact[n] * self.inv[n-k] % self.MOD * self.inv[k] % self.MOD

# ok, lecture des inputs
n = int(input())
a = list(map(int, input().split()))
MOD = 10 ** 9 + 7

comb = Comb(n, MOD)

# On essaie de faire comme dans l'énoncé...
something = [0 for _ in range(n)]
something[0] = 1  # je sais plus si c'était nécessaire
for idx in range(1, n):
    # pow juste pour l'inversé, c'est comme ça qu'on fait
    something[idx] = (something[idx - 1] + pow(idx + 1, MOD - 2, MOD)) % MOD

result = 0
for i in range(n-1):
    result += something[i] * (a[i+1] - a[i])
    # ah oui, faut pas oublier le modulo
    result %= MOD

# Franchement à la fin il fallait multiplier par (n-1)!
final = result * comb.fac(n-1) % MOD
print(final)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' Comb' (ID: 37810)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1614258736371994
    2. '(' → logprob: -2.036425828933716
    3. '```' → logprob: -4.786426067352295
    4. '():' → logprob: -5.036426067352295
    5. '.' → logprob: -6.661426067352295
    6. '{' → logprob: -6.661426067352295
    7. '   ' → logprob: -8.661425590515137
    8. '()' → logprob: -8.661425590515137
    9. ' :' → logprob: -9.161425590515137
    10. '(
' → logprob: -9.161425590515137

Token 4: ' #' (ID: 1069)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6075143218040466
    2. ':' → logprob: -0.8575143218040466
    3. '```' → logprob: -4.107514381408691
    4. '   ' → logprob: -5.857514381408691
    5. '_' → logprob: -5.982514381408691
    6. 'def' → logprob: -6.107514381408691
    7. 'a' → logprob: -6.982514381408691
    8. '.' → logprob: -6.982514381408691
    9. '`' → logprob: -7.357514381408691
    10. '():' → logprob: -7.482514381408691

Token 5: ' Bon' (ID: 12658)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.193672776222229
    2. ' ```' → logprob: -1.443672776222229
    3. ' ' → logprob: -2.0686726570129395
    4. '   ' → logprob: -2.1936726570129395
    5. '#' → logprob: -3.1936726570129395
    6. '  ' → logprob: -3.5686726570129395
    7. '    ' → logprob: -3.9436726570129395
    8. ' """' → logprob: -4.0686726570129395
    9. ' def' → logprob: -4.1936726570129395
    10. 'e' → logprob: -4.4436726570129395

Token 6: ',' (ID: 11)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.1516847014427185
    2. 'class' → logprob: -3.1516847610473633
    3. 'e' → logprob: -3.2766847610473633
    4. 'us' → logprob: -3.4016847610473633
    5. 't' → logprob: -4.651684761047363
    6. 'structor' → logprob: -5.651684761047363
    7. '```' → logprob: -6.401684761047363
    8. 'ject' → logprob: -6.526684761047363
    9. 'st' → logprob: -6.651684761047363
    10. '   ' → logprob: -6.776684761047363

Token 7: ' ça' (ID: 13590)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6708166599273682
    2. '    ' → logprob: -1.2958166599273682
    3. '  ' → logprob: -2.170816659927368
    4. '   ' → logprob: -4.170816421508789
    5. 'd' → logprob: -4.420816421508789
    6. '<|end|>' → logprob: -4.420816421508789
    7. 't' → logprob: -4.795816421508789
    8. 'e' → logprob: -5.045816421508789
    9. '_' → logprob: -5.170816421508789
    10. ' def' → logprob: -5.170816421508789

Token 8: ' c' (ID: 274)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6883555054664612
    2. ' ' → logprob: -1.4383554458618164
    3. '   ' → logprob: -2.4383554458618164
    4. 's' → logprob: -2.8133554458618164
    5. 'est' → logprob: -3.6883554458618164
    6. ' n' → logprob: -4.188355445861816
    7. '  ' → logprob: -4.438355445861816
    8. 'es' → logprob: -4.813355445861816
    9. ''' → logprob: -4.938355445861816
    10. 'u' → logprob: -5.313355445861816

Token 9: ''est' (ID: 6616)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5934213995933533
    2. 'n' → logprob: -1.343421459197998
    3. '   ' → logprob: -2.593421459197998
    4. ''est' → logprob: -3.968421459197998
    5. ' '' → logprob: -4.218421459197998
    6. ''' → logprob: -4.218421459197998
    7. ' ' → logprob: -4.343421459197998
    8. 'est' → logprob: -4.343421459197998
    9. '  ' → logprob: -5.218421459197998
    10. '```' → logprob: -5.593421459197998

Token 10: ' juste' (ID: 31553)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.8185767531394958
    2. ' une' → logprob: -1.3185768127441406
    3. ' la' → logprob: -2.1935768127441406
    4. '   ' → logprob: -2.3185768127441406
    5. ' ' → logprob: -3.5685768127441406
    6. ' le' → logprob: -4.193576812744141
    7. '  ' → logprob: -5.068576812744141
    8. ' tout' → logprob: -5.068576812744141
    9. ' l' → logprob: -5.318576812744141
    10. '    ' → logprob: -5.943576812744141

Token 11: ' pour' (ID: 1930)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.19887620210647583
    2. '  ' → logprob: -2.573876142501831
    3. '   ' → logprob: -3.448876142501831
    4. '```' → logprob: -3.948876142501831
    5. ' :' → logprob: -4.44887638092041
    6. ':' → logprob: -5.44887638092041
    7. '`' → logprob: -5.44887638092041
    8. ' ```' → logprob: -5.57387638092041
    9. ' a' → logprob: -5.69887638092041
    10. ' ,' → logprob: -5.82387638092041

Token 12: ' calcul' (ID: 7559)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -1.3418843746185303
    2. 'l' → logprob: -2.0918843746185303
    3. ' le' → logprob: -2.4668843746185303
    4. 'le' → logprob: -2.5918843746185303
    5. '   ' → logprob: -2.8418843746185303
    6. ' tester' → logprob: -2.8418843746185303
    7. ' la' → logprob: -3.0918843746185303
    8. 'la' → logprob: -3.8418843746185303
    9. ' initial' → logprob: -3.9668843746185303
    10. ' les' → logprob: -4.091884613037109

Token 13: 'er' (ID: 259)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6568014025688171
    2. 's' → logprob: -2.031801462173462
    3. 'er' → logprob: -2.156801462173462
    4. '_' → logprob: -2.281801462173462
    5. '(' → logprob: -4.031801223754883
    6. 'e' → logprob: -4.156801223754883
    7. 'r' → logprob: -4.281801223754883
    8. 'ate' → logprob: -4.406801223754883
    9. '   ' → logprob: -4.656801223754883
    10. 'u' → logprob: -4.656801223754883

Token 14: ' quelques' (ID: 17687)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5439428687095642
    2. ' ' → logprob: -0.9189428687095642
    3. '`' → logprob: -6.043942928314209
    4. '   ' → logprob: -6.043942928314209
    5. 'es' → logprob: -6.168942928314209
    6. '```' → logprob: -6.293942928314209
    7. 'e' → logprob: -6.418942928314209
    8. '(' → logprob: -6.668942928314209
    9. '  ' → logprob: -6.793942928314209
    10. '\' → logprob: -6.918942928314209

Token 15: ' comb' (ID: 4134)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.17782293260097504
    2. ' espaces' → logprob: -2.3028228282928467
    3. '```' → logprob: -3.8028228282928467
    4. '_' → logprob: -4.552823066711426
    5. '   ' → logprob: -5.177823066711426
    6. 's' → logprob: -5.427823066711426
    7. ' espac' → logprob: -6.052823066711426
    8. 'es' → logprob: -6.177823066711426
    9. ' caractères' → logprob: -6.177823066711426
    10. ' tokens' → logprob: -6.927823066711426

Token 16: 'inais' (ID: 42744)
  Prédit: 'ina'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ina' → logprob: -0.6149091720581055
    2. 's' → logprob: -1.6149091720581055
    3. 'inais' → logprob: -1.9899091720581055
    4. '```' → logprob: -3.2399091720581055
    5. 'i' → logprob: -3.4899091720581055
    6. 'in' → logprob: -3.7399091720581055
    7. 'inations' → logprob: -4.8649091720581055
    8. '(' → logprob: -5.6149091720581055
    9. '_' → logprob: -5.7399091720581055
    10. 'is' → logprob: -6.6149091720581055

Token 17: 'ons' (ID: 1808)
  Prédit: 'ons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ons' → logprob: -0.039733804762363434
    2. 'o' → logprob: -3.28973388671875
    3. 'on' → logprob: -6.53973388671875
    4. '```' → logprob: -10.28973388671875
    5. 's' → logprob: -10.53973388671875
    6. 'ont' → logprob: -10.78973388671875
    7. '#' → logprob: -10.91473388671875
    8. 'о' → logprob: -11.16473388671875
    9. '\' → logprob: -11.41473388671875
    10. '*' → logprob: -11.41473388671875

Token 18: ' sous' (ID: 14487)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8710052371025085
    2. '\' → logprob: -1.2460052967071533
    3. ' ' → logprob: -2.3710052967071533
    4. '   ' → logprob: -3.1210052967071533
    5. '\n' → logprob: -3.2460052967071533
    6. 's' → logprob: -3.8710052967071533
    7. '(
' → logprob: -4.496005058288574
    8. ' \' → logprob: -4.496005058288574
    9. '```' → logprob: -4.621005058288574
    10. ' (' → logprob: -4.621005058288574

Token 19: ' modulo' (ID: 112372)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -1.007267951965332
    2. ' forme' → logprob: -1.632267951965332
    3. ' la' → logprob: -1.632267951965332
    4. '```' → logprob: -3.507267951965332
    5. '-' → logprob: -3.882267951965332
    6. '-ent' → logprob: -4.007267951965332
    7. ' Python' → logprob: -4.382267951965332
    8. 'ent' → logprob: -4.382267951965332
    9. '_' → logprob: -4.632267951965332
    10. 'l' → logprob: -4.882267951965332

Token 20: ',
' (ID: 412)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.18748381733894348
    2. '_' → logprob: -1.937483787536621
    3. ' _' → logprob: -4.062483787536621
    4. ',' → logprob: -6.687483787536621
    5. '\' → logprob: -6.687483787536621
    6. ' :' → logprob: -6.812483787536621
    7. ' ,' → logprob: -6.937483787536621
    8. '```' → logprob: -7.187483787536621
    9. ' \' → logprob: -7.437483787536621
    10. ' 
' → logprob: -7.562483787536621

Token 21: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4599694013595581
    2. '```' → logprob: -2.0849695205688477
    3. '\' → logprob: -2.7099695205688477
    4. ' :' → logprob: -3.7099695205688477
    5. '\n' → logprob: -3.8349695205688477
    6. '_' → logprob: -3.8349695205688477
    7. ' \' → logprob: -4.209969520568848
    8. '   ' → logprob: -4.334969520568848
    9. '`' → logprob: -4.834969520568848
    10. ' _' → logprob: -5.084969520568848

Token 22: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10609264671802521
    2. '```' → logprob: -3.731092691421509
    3. ' 
' → logprob: -4.35609245300293
    4. '_' → logprob: -4.48109245300293
    5. '  
' → logprob: -4.85609245300293
    6. '   ' → logprob: -4.98109245300293
    7. '   
' → logprob: -5.23109245300293
    8. '  ' → logprob: -5.23109245300293
    9. ' _' → logprob: -5.35609245300293
    10. ' ```' → logprob: -5.60609245300293

Token 23: ' je' (ID: 1264)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.01968209072947502
    2. ' def' → logprob: -6.019681930541992
    3. ' 
' → logprob: -6.144681930541992
    4. '```' → logprob: -6.269681930541992
    5. ' ' → logprob: -6.394681930541992
    6. '  ' → logprob: -6.519681930541992
    7. '  
' → logprob: -6.519681930541992
    8. '   ' → logprob: -6.769681930541992
    9. 'def' → logprob: -7.019681930541992
    10. '   
' → logprob: -7.269681930541992

Token 24: ' me' (ID: 668)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9023336172103882
    2. ' vais' → logprob: -1.5273336172103882
    3. ' peux' → logprob: -2.7773337364196777
    4. 'n' → logprob: -2.9023337364196777
    5. ' n' → logprob: -3.5273337364196777
    6. 'space' → logprob: -3.7773337364196777
    7. ' ' → logprob: -3.9023337364196777
    8. '_' → logprob: -4.027333736419678
    9. '   ' → logprob: -4.027333736419678
    10. 's' → logprob: -4.277333736419678

Token 25: ' suis' (ID: 15058)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.3409312963485718
    2. 's' → logprob: -1.7159312963485718
    3. 't' → logprob: -1.9659312963485718
    4. 'nt' → logprob: -2.7159314155578613
    5. '#' → logprob: -2.9659314155578613
    6. 'n' → logprob: -3.0909314155578613
    7. '  ' → logprob: -3.4659314155578613
    8. '   ' → logprob: -3.5909314155578613
    9. ' ' → logprob: -4.590931415557861
    10. 'ss' → logprob: -4.590931415557861

Token 26: ' pas' (ID: 2173)
  Prédit: ' inspir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' inspir' → logprob: -0.3316780626773834
    2. ' permis' → logprob: -3.0816781520843506
    3. 'in' → logprob: -3.3316781520843506
    4. 'd' → logprob: -3.7066781520843506
    5. ' limité' → logprob: -4.0816779136657715
    6. '```' → logprob: -4.4566779136657715
    7. ' assuré' → logprob: -4.7066779136657715
    8. 'dé' → logprob: -4.8316779136657715
    9. ' donné' → logprob: -4.8316779136657715
    10. 'ass' → logprob: -4.9566779136657715

Token 27: ' mal' (ID: 3849)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0099915266036987
    2. ' gên' → logprob: -2.2599916458129883
    3. ' donné' → logprob: -2.3849916458129883
    4. ' sûr' → logprob: -3.0099916458129883
    5. '  ' → logprob: -3.1349916458129883
    6. 's' → logprob: -3.1349916458129883
    7. ' encore' → logprob: -3.5099916458129883
    8. 'emb' → logprob: -3.7599916458129883
    9. 'class' → logprob: -4.009991645812988
    10. ' assuré' → logprob: -4.134991645812988

Token 28: ' inspir' (ID: 21192)
  Prédit: ' inspir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' inspir' → logprob: -0.5819904208183289
    2. 'in' → logprob: -0.9569904208183289
    3. ' servi' → logprob: -3.4569904804229736
    4. 'serv' → logprob: -4.8319902420043945
    5. 'emb' → logprob: -5.4569902420043945
    6. 'insp' → logprob: -6.2069902420043945
    7. 'cass' → logprob: -6.2069902420043945
    8. ' ' → logprob: -6.7069902420043945
    9. 'pris' → logprob: -7.0819902420043945
    10. 'ins' → logprob: -7.3319902420043945

Token 29: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.00028410006780177355
    2. 'ée' → logprob: -8.250284194946289
    3. 'e' → logprob: -11.875284194946289
    4. 'à' → logprob: -12.250284194946289
    5. '#' → logprob: -12.875284194946289
    6. 'ed' → logprob: -13.625284194946289
    7. 'è' → logprob: -13.875284194946289
    8. 'É' → logprob: -14.000284194946289
    9. 'ées' → logprob: -14.375284194946289
    10. '\u' → logprob: -14.500284194946289

Token 30: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.5142545104026794
    2. ' des' → logprob: -1.8892545700073242
    3. ' ' → logprob: -2.639254570007324
    4. ' d' → logprob: -2.889254570007324
    5. ' du' → logprob: -2.889254570007324
    6. 'de' → logprob: -3.264254570007324
    7. '   ' → logprob: -4.264254570007324
    8. 'd' → logprob: -5.764254570007324
    9. 'def' → logprob: -6.264254570007324
    10. 'class' → logprob: -6.514254570007324

Token 31: ''autres' (ID: 38753)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.8495204448699951
    2. ''un' → logprob: -1.4745204448699951
    3. ''une' → logprob: -1.8495204448699951
    4. 'e' → logprob: -1.8495204448699951
    5. 'u' → logprob: -3.974520444869995
    6. 'un' → logprob: -5.474520683288574
    7. ''u' → logprob: -6.224520683288574
    8. ''e' → logprob: -6.974520683288574
    9. '’une' → logprob: -7.474520683288574
    10. '’un' → logprob: -7.474520683288574

Token 32: ' codes' (ID: 17913)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0529046058654785
    2. '_' → logprob: -1.5529046058654785
    3. ' classes' → logprob: -2.4279046058654785
    4. ' codes' → logprob: -2.8029046058654785
    5. ' code' → logprob: -3.4279046058654785
    6. ' libraries' → logprob: -3.5529046058654785
    7. 'class' → logprob: -3.9279046058654785
    8. ' sources' → logprob: -3.9279046058654785
    9. ' bibli' → logprob: -4.1779046058654785
    10. ' s' → logprob: -4.4279046058654785

Token 33: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.2670609951019287
    2. '   ' → logprob: -1.3920609951019287
    3. '_' → logprob: -2.0170609951019287
    4. '
' → logprob: -2.0170609951019287
    5. ' :' → logprob: -2.8920609951019287
    6. '```' → logprob: -2.8920609951019287
    7. ' ' → logprob: -3.1420609951019287
    8. ',' → logprob: -5.142061233520508
    9. '  
' → logprob: -5.267061233520508
    10. '\' → logprob: -5.392061233520508

Token 34: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48400402069091797
    2. '```' → logprob: -1.609004020690918
    3. '\' → logprob: -2.359004020690918
    4. '_' → logprob: -3.609004020690918
    5. ':' → logprob: -4.234004020690918
    6. '\n' → logprob: -4.484004020690918
    7. '    ' → logprob: -4.734004020690918
    8. '    
' → logprob: -5.109004020690918
    9. '
' → logprob: -5.109004020690918
    10. '``' → logprob: -5.859004020690918

Token 35: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2977522611618042
    2. '_' → logprob: -2.0477523803710938
    3. '```' → logprob: -2.7977523803710938
    4. ':' → logprob: -3.7977523803710938
    5. ' ' → logprob: -4.547752380371094
    6. '\' → logprob: -4.922752380371094
    7. 'def' (adapté à ' def') → logprob: -5.047752380371094
    8. '(' → logprob: -5.172752380371094
    9. ' :' → logprob: -5.672752380371094
    10. '    ' → logprob: -6.297752380371094

Token 36: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2799204885959625
    2. ' __' → logprob: -1.9049204587936401
    3. ' space' → logprob: -3.6549205780029297
    4. ' calculate' → logprob: -4.27992057800293
    5. ' compute' → logprob: -4.52992057800293
    6. '_' → logprob: -4.77992057800293
    7. ' comb' → logprob: -5.02992057800293
    8. ' init' → logprob: -5.02992057800293
    9. ' _' → logprob: -5.27992057800293
    10. '__' → logprob: -6.02992057800293

Token 37: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -7.584239938296378e-06
    2. ' init' → logprob: -12.250007629394531
    3. 'ini' → logprob: -12.875007629394531
    4. 'i' → logprob: -16.25000762939453
    5. 'int' → logprob: -17.25000762939453
    6. 'in' → logprob: -17.37500762939453
    7. '  ' → logprob: -18.37500762939453
    8. '	init' → logprob: -18.87500762939453
    9. '_init' → logprob: -19.00000762939453
    10. ' ' → logprob: -19.25000762939453

Token 38: '__(' (ID: 8241)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4533724784851074
    2. '__(' → logprob: -1.5783724784851074
    3. '__' → logprob: -2.0783724784851074
    4. '_' → logprob: -3.8283724784851074
    5. ' (' → logprob: -5.703372478485107
    6. '(self' → logprob: -5.703372478485107
    7. '__((' → logprob: -7.203372478485107
    8. '<|end|>' → logprob: -7.203372478485107
    9. '_(' → logprob: -7.578372478485107
    10. '__(
' → logprob: -7.703372478485107

Token 39: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.029756510630249977
    2. ' self' → logprob: -3.529756546020508
    3. ' ' → logprob: -12.529756546020508
    4. ')' → logprob: -14.404756546020508
    5. '(self' → logprob: -14.529756546020508
    6. ' ' → logprob: -14.654756546020508
    7. '	self' → logprob: -15.404756546020508
    8. '   ' → logprob: -15.779756546020508
    9. ' )' → logprob: -16.279756546020508
    10. '       ' → logprob: -16.404756546020508

Token 40: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.026653464883565903
    2. ' ,' → logprob: -3.651653528213501
    3. 'self' → logprob: -9.026653289794922
    4. ' ' → logprob: -9.401653289794922
    5. ')' → logprob: -9.526653289794922
    6. ' self' → logprob: -10.651653289794922
    7. ',self' → logprob: -10.651653289794922
    8. ' )' → logprob: -11.401653289794922
    9. '   ' → logprob: -11.651653289794922
    10. '(self' → logprob: -13.026653289794922

Token 41: ' size' (ID: 2349)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.574203610420227
    2. ' n' → logprob: -1.449203610420227
    3. 'self' → logprob: -1.949203610420227
    4. 'n' → logprob: -2.8242034912109375
    5. ' max' → logprob: -9.199203491210938
    6. '   ' → logprob: -9.324203491210938
    7. ' ' → logprob: -9.699203491210938
    8. 'max' → logprob: -11.074203491210938
    9. ')' → logprob: -11.199203491210938
    10. ' N' → logprob: -11.324203491210938

Token 42: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5381832718849182
    2. ',' → logprob: -0.9131832718849182
    3. ')' → logprob: -4.538183212280273
    4. '=' → logprob: -6.538183212280273
    5. ' ):' → logprob: -6.663183212280273
    6. ':' → logprob: -6.788183212280273
    7. ' ,' → logprob: -8.038183212280273
    8. ' )' → logprob: -10.288183212280273
    9. '_' → logprob: -12.163183212280273
    10. ' ' → logprob: -12.163183212280273

Token 43: ' md' (ID: 17280)
  Prédit: ' mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.07833131402730942
    2. 'mod' → logprob: -3.703331232070923
    3. ' modulo' → logprob: -3.828331232070923
    4. ' modulus' → logprob: -3.953331232070923
    5. ' p' → logprob: -5.203331470489502
    6. ' MOD' → logprob: -6.703331470489502
    7. ' max' → logprob: -7.203331470489502
    8. ' m' → logprob: -7.578331470489502
    9. ' ' → logprob: -7.828331470489502
    10. '	mod' → logprob: -8.078330993652344

Token 44: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.31684017181396484
    2. '=' → logprob: -1.4418401718139648
    3. 'ulo' → logprob: -3.941840171813965
    4. ':' → logprob: -5.316840171813965
    5. 'o' → logprob: -5.816840171813965
    6. 'ule' → logprob: -6.191840171813965
    7. 'od' → logprob: -6.316840171813965
    8. ')' → logprob: -6.691840171813965
    9. '=None' → logprob: -7.316840171813965
    10. ' =' → logprob: -8.066840171813965

Token 45: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3120386004447937
    2. '       ' → logprob: -1.5620386600494385
    3. '):' → logprob: -3.4370386600494385
    4. ' :' → logprob: -4.062038421630859
    5. ')' → logprob: -5.937038421630859
    6. '   ' → logprob: -6.062038421630859
    7. '    ' → logprob: -6.562038421630859
    8. '        ' → logprob: -7.437038421630859
    9. ' ):' → logprob: -8.06203842163086
    10. '      ' → logprob: -8.43703842163086

Token 46: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -1.228680968284607
    2. ' 
' → logprob: -1.353680968284607
    3. '
' → logprob: -1.978680968284607
    4. ' self' → logprob: -2.3536810874938965
    5. '       ' → logprob: -2.7286810874938965
    6. '\n' → logprob: -3.4786810874938965
    7. '  
' → logprob: -3.6036810874938965
    8. ' ' → logprob: -3.8536810874938965
    9. '<|end|>' → logprob: -3.8536810874938965
    10. '```' → logprob: -3.8536810874938965

Token 47: '.MOD' (ID: 141639)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.07109879702329636
    2. ' ' → logprob: -3.196098804473877
    3. ' =' → logprob: -4.196098804473877
    4. '=' → logprob: -5.071098804473877
    5. '_' → logprob: -6.321098804473877
    6. '.size' → logprob: -6.446098804473877
    7. ' .' → logprob: -7.071098804473877
    8. '   ' → logprob: -7.446098804473877
    9. '  ' → logprob: -8.196098327636719
    10. ',' → logprob: -8.321098327636719

Token 48: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04317012056708336
    2. '=' → logprob: -3.168170213699341
    3. ' ' → logprob: -9.293169975280762
    4. ',' → logprob: -9.918169975280762
    5. '  ' → logprob: -11.418169975280762
    6. '   ' → logprob: -11.918169975280762
    7. ')' → logprob: -12.043169975280762
    8. ' ,' → logprob: -13.793169975280762
    9. ' )' → logprob: -13.918169975280762
    10. '_' → logprob: -14.043169975280762

Token 49: ' md' (ID: 17280)
  Prédit: ' md'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' md' → logprob: -0.00041148843592964113
    2. 'md' → logprob: -7.875411510467529
    3. ' ' → logprob: -11.000411033630371
    4. '	md' → logprob: -11.625411033630371
    5. ' ' → logprob: -12.125411033630371
    6. '(md' → logprob: -15.875411033630371
    7. '_md' → logprob: -16.625411987304688
    8. '.md' → logprob: -16.750411987304688
    9. ' ' → logprob: -17.375411987304688
    10. '/md' → logprob: -17.750411987304688

Token 50: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03289343789219856
    2. '<|end|>' → logprob: -3.532893419265747
    3. '       ' → logprob: -6.032893657684326
    4. '
' → logprob: -7.907893657684326
    5. '<|end|>' → logprob: -9.157893180847168
    6. '        ' → logprob: -10.032893180847168
    7. ' 
' → logprob: -10.282893180847168
    8. '' → logprob: -10.407893180847168
    9. 'self' → logprob: -10.782893180847168
    10. '  
' → logprob: -10.782893180847168

Token 51: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 52: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09313090145587921
    2. '
' → logprob: -3.0931308269500732
    3. 'self' (adapté à ' self') → logprob: -3.8431308269500732
    4. '<|end|>' → logprob: -4.593131065368652
    5. '        ' → logprob: -5.843131065368652
    6. ' self' → logprob: -6.593131065368652
    7. '        
' → logprob: -6.718131065368652
    8. ' ' → logprob: -6.968131065368652
    9. '\n' → logprob: -7.093131065368652
    10. '   ' → logprob: -7.218131065368652

Token 53: '.fact' (ID: 171436)
  Prédit: '.size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.size' → logprob: -0.7266739010810852
    2. '.' → logprob: -0.8516739010810852
    3. '.n' → logprob: -3.1016738414764404
    4. ' .' → logprob: -4.4766740798950195
    5. 'size' → logprob: -4.7266740798950195
    6. '.com' → logprob: -5.3516740798950195
    7. '._' → logprob: -5.4766740798950195
    8. '.factor' → logprob: -5.8516740798950195
    9. '.max' → logprob: -6.3516740798950195
    10. ' ' → logprob: -6.7266740798950195

Token 54: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12279750406742096
    2. 's' → logprob: -2.6227974891662598
    3. ' =' → logprob: -3.7477974891662598
    4. 'o' → logprob: -4.87279748916626
    5. 'or' → logprob: -5.24779748916626
    6. 'orial' → logprob: -5.49779748916626
    7. '   ' → logprob: -7.24779748916626
    8. '[' → logprob: -8.122797966003418
    9. ' ' → logprob: -8.622797966003418
    10. 'orz' → logprob: -8.872797966003418

Token 55: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.313265860080719
    2. '[' → logprob: -1.3132658004760742
    3. ' ' → logprob: -13.188265800476074
    4. '[int' → logprob: -14.313265800476074
    5. ' ' → logprob: -14.688265800476074
    6. '[self' → logprob: -15.188265800476074
    7. '[n' → logprob: -15.688265800476074
    8. '1' → logprob: -15.813265800476074
    9. '[s' → logprob: -16.06326675415039
    10. '   ' → logprob: -16.18826675415039

Token 56: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023107275774236768
    2. ' ' → logprob: -8.37523078918457
    3. '0' → logprob: -14.75023078918457
    4. '   ' → logprob: -17.12523078918457
    5. '  ' → logprob: -18.50023078918457
    6. '    ' → logprob: -18.62523078918457
    7. '     ' → logprob: -19.25023078918457
    8. ']' → logprob: -19.87523078918457
    9. ' ' → logprob: -20.12523078918457
    10. '           ' → logprob: -20.25023078918457

Token 57: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01041862927377224
    2. ',' → logprob: -5.01041841506958
    3. ' ]' → logprob: -5.63541841506958
    4. ']*' → logprob: -9.510418891906738
    5. ' for' → logprob: -10.885418891906738
    6. ']*(' → logprob: -11.260418891906738
    7. ' ' → logprob: -11.260418891906738
    8. ' ,' → logprob: -13.010418891906738
    9. ']+' → logprob: -13.260418891906738
    10. ')' → logprob: -14.010418891906738

Token 58: ' *' (ID: 425)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3526202440261841
    2. '<|end|>' → logprob: -1.477620244026184
    3. '*' → logprob: -3.3526201248168945
    4. ']' → logprob: -3.9776201248168945
    5. ' ' → logprob: -5.4776201248168945
    6. '[' → logprob: -5.6026201248168945
    7. ' *' → logprob: -6.7276201248168945
    8. ' for' → logprob: -6.8526201248168945
    9. '<|end|>' → logprob: -6.8526201248168945
    10. '
' → logprob: -6.9776201248168945

Token 59: ' (' (ID: 350)
  Prédit: '(size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(size' → logprob: -0.009832827374339104
    2. ' (' → logprob: -4.634832859039307
    3. '(' → logprob: -10.134832382202148
    4. ' size' → logprob: -11.009832382202148
    5. 'size' → logprob: -11.009832382202148
    6. '(max' → logprob: -13.759832382202148
    7. '(s' → logprob: -13.884832382202148
    8. '[size' → logprob: -14.009832382202148
    9. '<size' → logprob: -14.884832382202148
    10. '(sz' → logprob: -15.384832382202148

Token 60: 'size' (ID: 4461)
  Prédit: 'size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.25197237730026245
    2. ' size' → logprob: -1.5019724369049072
    3. '(size' → logprob: -10.126972198486328
    4. '   ' → logprob: -13.626972198486328
    5. '	size' → logprob: -14.251972198486328
    6. '    ' → logprob: -15.001972198486328
    7. ' (' → logprob: -15.376972198486328
    8. ' ' → logprob: -15.501972198486328
    9. '[size' → logprob: -15.501972198486328
    10. '<size' → logprob: -15.876972198486328

Token 61: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1602267622947693
    2. ' +' → logprob: -1.910226821899414
    3. ' +
' → logprob: -14.035226821899414
    4. ' ' → logprob: -14.410226821899414
    5. '+
' → logprob: -14.660226821899414
    6. ')' → logprob: -14.660226821899414
    7. ' plus' → logprob: -16.160226821899414
    8. '+)' → logprob: -16.285226821899414
    9. ' )' → logprob: -16.660226821899414
    10. '＋' → logprob: -17.035226821899414

Token 62: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.474077433347702
    2. ' ' → logprob: -0.9740774631500244
    3. '```' → logprob: -15.849077224731445
    4. ')' → logprob: -16.224077224731445
    5. '2' → logprob: -16.349077224731445
    6. ' ' → logprob: -16.849077224731445
    7. '<|end|>' → logprob: -17.224077224731445
    8. '  ' → logprob: -18.286577224731445
    9. '   ' → logprob: -18.474077224731445
    10. '7' → logprob: -18.599077224731445

Token 63: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0059289163909852505
    2. ' ' → logprob: -5.130928993225098
    3. '2' → logprob: -16.63092803955078
    4. '  ' → logprob: -16.88092803955078
    5. '```' → logprob: -17.38092803955078
    6. ')' → logprob: -17.63092803955078
    7. '   ' → logprob: -17.63092803955078
    8. ' ' → logprob: -17.69342803955078
    9. '１' → logprob: -17.88092803955078
    10. '+' → logprob: -18.13092803955078

Token 64: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011945136357098818
    2. ')
' → logprob: -6.751194477081299
    3. '<|end|>' → logprob: -10.876194953918457
    4. ' )' → logprob: -12.876194953918457
    5. ')

' → logprob: -13.751194953918457
    6. '       ' → logprob: -14.001194953918457
    7. '<|end|>' → logprob: -15.626194953918457
    8. ')
' → logprob: -15.751194953918457
    9. '),' → logprob: -16.00119400024414
    10. '   ' → logprob: -16.00119400024414

Token 65: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14376303553581238
    2. '
' → logprob: -2.1437630653381348
    3. ' for' → logprob: -5.393763065338135
    4. '   ' → logprob: -6.018763065338135
    5. '	' → logprob: -6.143763065338135
    6. '\n' → logprob: -6.518763065338135
    7. 'for' → logprob: -6.518763065338135
    8. '' → logprob: -7.143763065338135
    9. ' ' → logprob: -7.143763065338135
    10. '    ' → logprob: -7.518763065338135

Token 66: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.820856511592865
    2. 'for' (adapté à ' for') → logprob: -1.1958565711975098
    3. '       ' → logprob: -1.5708565711975098
    4. '
' → logprob: -3.1958565711975098
    5. '   ' → logprob: -5.69585657119751
    6. ' ' → logprob: -6.07085657119751
    7. ' 
' → logprob: -6.57085657119751
    8. '        
' → logprob: -7.69585657119751
    9. '\n' → logprob: -8.195856094360352
    10. '    
' → logprob: -8.570856094360352

Token 67: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0052954270504415035
    2. 'i' → logprob: -5.880295276641846
    3. ' ' → logprob: -6.005295276641846
    4. ' _' → logprob: -11.755295753479004
    5. '_' → logprob: -11.880295753479004
    6. ')' → logprob: -13.130295753479004
    7. '	i' → logprob: -13.505295753479004
    8. ' range' → logprob: -14.005295753479004
    9. ' ' → logprob: -14.130295753479004
    10. ' in' → logprob: -14.380295753479004

Token 68: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0006841989234089851
    2. 'in' → logprob: -7.3756842613220215
    3. ' ' → logprob: -9.875683784484863
    4. '	in' → logprob: -13.250683784484863
    5. ' i' → logprob: -14.000683784484863
    6. '1' → logprob: -14.125683784484863
    7. '  ' → logprob: -14.375683784484863
    8. 'range' → logprob: -14.750683784484863
    9. '   ' → logprob: -15.000683784484863
    10. '    ' → logprob: -15.125683784484863

Token 69: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0012341608526185155
    2. 'range' → logprob: -7.00123405456543
    3. ' ' → logprob: -8.12623405456543
    4. ' in' → logprob: -11.25123405456543
    5. ' xrange' → logprob: -11.62623405456543
    6. '	range' → logprob: -12.75123405456543
    7. '  ' → logprob: -13.62623405456543
    8. '(range' → logprob: -14.87623405456543
    9. '   ' → logprob: -15.50123405456543
    10. '1' → logprob: -16.62623405456543

Token 70: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1420268714427948
    2. ' ' → logprob: -2.267026901245117
    3. '1' → logprob: -3.642026901245117
    4. '2' → logprob: -6.392026901245117
    5. ' (' → logprob: -7.267026901245117
    6. ' in' → logprob: -9.767026901245117
    7. ')' → logprob: -10.017026901245117
    8. '<|end|>' → logprob: -10.642026901245117
    9. '    ' → logprob: -11.017026901245117
    10. '(
' → logprob: -11.642026901245117

Token 71: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004116273485124111
    2. ' ' → logprob: -5.629116058349609
    3. '2' → logprob: -7.629116058349609
    4. '   ' → logprob: -10.62911605834961
    5. '       ' → logprob: -12.50411605834961
    6. 'size' → logprob: -13.87911605834961
    7. ' size' → logprob: -14.37911605834961
    8. '    ' → logprob: -15.12911605834961
    9. '  ' → logprob: -16.00411605834961
    10. ')' → logprob: -16.50411605834961

Token 72: ',' (ID: 11)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.07744204998016357
    2. ')' → logprob: -3.327442169189453
    3. ' ' → logprob: -4.077442169189453
    4. '<|end|>' → logprob: -4.077442169189453
    5. ' ,' → logprob: -6.827442169189453
    6. ' ),' → logprob: -7.202442169189453
    7. ' );' → logprob: -7.827442169189453
    8. ' i' → logprob: -7.952442169189453
    9. ' ):
' → logprob: -7.952442169189453
    10. '<|end|>' → logprob: -8.077442169189453

Token 73: ' size' (ID: 2349)
  Prédit: ' size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' size' → logprob: -0.014163747429847717
    2. 'size' → logprob: -4.264163970947266
    3. '(size' → logprob: -16.514163970947266
    4. '	size' → logprob: -17.264163970947266
    5. ' len' → logprob: -18.014163970947266
    6. ' ' → logprob: -18.139163970947266
    7. ',size' → logprob: -18.264163970947266
    8. '    ' → logprob: -18.889163970947266
    9. '=size' → logprob: -19.139163970947266
    10. '<size' → logprob: -19.389163970947266

Token 74: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.25194716453552246
    2. '+' → logprob: -1.5019471645355225
    3. ' ' → logprob: -11.376947402954102
    4. ')' → logprob: -13.251947402954102
    5. ' +
' → logprob: -13.626947402954102
    6. ' )' → logprob: -13.751947402954102
    7. '):' → logprob: -15.126947402954102
    8. '   ' → logprob: -15.126947402954102
    9. ' ' → logprob: -15.251947402954102
    10. '    ' → logprob: -15.251947402954102

Token 75: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.023246178403496742
    2. ' ' → logprob: -3.7732462882995605
    3. ')' → logprob: -14.898245811462402
    4. '```' → logprob: -15.148245811462402
    5. '<|end|>' → logprob: -16.52324676513672
    6. '2' → logprob: -16.77324676513672
    7. '   ' → logprob: -17.14824676513672
    8. ' ' → logprob: -17.64824676513672
    9. '۱' → logprob: -18.64824676513672
    10. '+' → logprob: -18.89824676513672

Token 76: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. '   ' → logprob: -17.500019073486328
    4. '2' → logprob: -17.625019073486328
    5. ')' → logprob: -18.000019073486328
    6. '```' → logprob: -18.750019073486328
    7. '  ' → logprob: -19.000019073486328
    8. '１' → logprob: -19.625019073486328
    9. '۱' → logprob: -20.250019073486328
    10. '

' → logprob: -20.375019073486328

Token 77: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0018762783147394657
    2. ' ):' → logprob: -6.626876354217529
    3. ':' → logprob: -7.751876354217529
    4. '):
' → logprob: -9.626875877380371
    5. ')' → logprob: -9.876875877380371
    6. ' :' → logprob: -14.251875877380371
    7. ' )' → logprob: -14.501875877380371
    8. '):
' → logprob: -14.751875877380371
    9. '       ' → logprob: -15.001875877380371
    10. ']:' → logprob: -15.126875877380371

Token 78: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4856303334236145
    2. '       ' → logprob: -1.6106302738189697
    3. '    ' → logprob: -3.1106302738189697
    4. ' ' → logprob: -3.2356302738189697
    5. '        ' → logprob: -3.8606302738189697
    6. '   ' → logprob: -4.360630512237549
    7. ' :' → logprob: -4.610630512237549
    8. ')' → logprob: -4.735630512237549
    9. '):' → logprob: -4.985630512237549
    10. ' 
' → logprob: -5.110630512237549

Token 79: ' self' (ID: 1051)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08502639085054398
    2. ' self' → logprob: -3.335026502609253
    3. ')' → logprob: -4.085026264190674
    4. ' )' → logprob: -4.335026264190674
    5. 'self' (adapté à ' self') → logprob: -4.835026264190674
    6. '    ' → logprob: -5.835026264190674
    7. ' ' → logprob: -6.710026264190674
    8. ' 
' → logprob: -7.210026264190674
    9. ' ):
' → logprob: -7.210026264190674
    10. '  ' → logprob: -7.835026264190674

Token 80: '.fact' (ID: 171436)
  Prédit: '.fact'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.fact' → logprob: -0.04025070741772652
    2. '.' → logprob: -3.290250778198242
    3. '.fac' → logprob: -7.040250778198242
    4. ' .' → logprob: -7.165250778198242
    5. '.factor' → logprob: -7.665250778198242
    6. '.f' → logprob: -9.540250778198242
    7. '​.' → logprob: -12.415250778198242
    8. 'fact' → logprob: -13.290250778198242
    9. '.fa' → logprob: -14.040250778198242
    10. '.fast' → logprob: -14.165250778198242

Token 81: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.633179783821106
    2. '[' → logprob: -0.758179783821106
    3. ' [' → logprob: -8.258179664611816
    4. ' ' → logprob: -8.758179664611816
    5. '=' → logprob: -10.383179664611816
    6. ']' → logprob: -10.508179664611816
    7. ' *' → logprob: -10.883179664611816
    8. '[:]' → logprob: -11.008179664611816
    9. ' i' → logprob: -11.133179664611816
    10. '*' → logprob: -11.508179664611816

Token 82: ']' (ID: 60)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0775279998779297
    2. '=' → logprob: -1.4525279998779297
    3. ')' → logprob: -1.7025279998779297
    4. ' )' → logprob: -1.8275279998779297
    5. ']' → logprob: -3.3275279998779297
    6. ' ' → logprob: -3.7025279998779297
    7. ' ]' → logprob: -4.07752799987793
    8. '*' → logprob: -6.20252799987793
    9. ' *=' → logprob: -6.70252799987793
    10. ')=' → logprob: -7.20252799987793

Token 83: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25197699666023254
    2. '=' → logprob: -1.5019769668579102
    3. ' *=' → logprob: -10.12697696685791
    4. '*=' → logprob: -12.00197696685791
    5. ' ' → logprob: -13.62697696685791
    6. ' =
' → logprob: -15.75197696685791
    7. '*' → logprob: -16.001977920532227
    8. ')' → logprob: -16.376977920532227
    9. '=i' → logprob: -16.501977920532227
    10. '	' → logprob: -17.251977920532227

Token 84: ' self' (ID: 1051)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.8019759058952332
    2. ' (' → logprob: -1.426975965499878
    3. ' self' → logprob: -1.801975965499878
    4. 'self' → logprob: -1.926975965499878
    5. '(' → logprob: -7.051975727081299
    6. '           ' → logprob: -9.801976203918457
    7. '(i' → logprob: -10.676976203918457
    8. '	self' → logprob: -12.176976203918457
    9. 'i' → logprob: -12.676976203918457
    10. ' ' → logprob: -12.926976203918457

Token 85: '.fact' (ID: 171436)
  Prédit: '.fact'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.fact' → logprob: -0.002837918931618333
    2. '.' → logprob: -6.002838134765625
    3. 'fact' → logprob: -9.252838134765625
    4. ' .' → logprob: -9.377838134765625
    5. '.factor' → logprob: -9.752838134765625
    6. '.fac' → logprob: -9.752838134765625
    7. '.f' → logprob: -10.002838134765625
    8. ' fact' → logprob: -12.502838134765625
    9. '*' → logprob: -12.627838134765625
    10. '*.' → logprob: -12.752838134765625

Token 86: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.750436007976532e-05
    2. '[' → logprob: -10.25003719329834
    3. ' [' → logprob: -13.87503719329834
    4. '[
' → logprob: -14.25003719329834
    5. '[I' → logprob: -15.87503719329834
    6. 'i' → logprob: -16.375038146972656
    7. ' ' → logprob: -16.500038146972656
    8. '<|end|>' → logprob: -17.250038146972656
    9. ' i' → logprob: -17.625038146972656
    10. '[-' → logprob: -17.750038146972656

Token 87: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.008624386973679066
    2. ' -' → logprob: -4.75862455368042
    3. ' ' → logprob: -11.883624076843262
    4. ' *' → logprob: -14.008624076843262
    5. '[i' → logprob: -14.258624076843262
    6. '*' → logprob: -14.508624076843262
    7. '```' → logprob: -15.383624076843262
    8. '`' → logprob: -15.508624076843262
    9. '[-' → logprob: -15.883624076843262
    10. '−' → logprob: -16.133625030517578

Token 88: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.107425062713446e-06
    2. ' ' → logprob: -11.875006675720215
    3. ']' → logprob: -16.87500762939453
    4. '```' → logprob: -18.62500762939453
    5. 'i' → logprob: -19.37500762939453
    6. '  ' → logprob: -19.50000762939453
    7. '<|end|>' → logprob: -20.12500762939453
    8. '   ' → logprob: -20.62500762939453
    9. ' ]' → logprob: -21.12500762939453
    10. ')' → logprob: -21.12500762939453

Token 89: ']' (ID: 60)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.06219444051384926
    2. '*' → logprob: -2.812194347381592
    3. '*i' → logprob: -8.43719482421875
    4. ' ' → logprob: -12.18719482421875
    5. ' ' → logprob: -12.31219482421875
    6. '**' → logprob: -15.81219482421875
    7. ' **' → logprob: -16.43719482421875
    8. ')' → logprob: -16.68719482421875
    9. '```' → logprob: -16.81219482421875
    10. '*object' → logprob: -16.93719482421875

Token 90: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.2094036042690277
    2. ' *' → logprob: -1.70940363407135
    3. '*i' → logprob: -4.8344035148620605
    4. '*object' → logprob: -12.959403991699219
    5. ' ' → logprob: -13.209403991699219
    6. ' ' → logprob: -13.959403991699219
    7. '**' → logprob: -14.084403991699219
    8. '```' → logprob: -15.584403991699219
    9. '*self' → logprob: -15.709403991699219
    10. '*j' → logprob: -15.959403991699219

Token 91: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3868763744831085
    2. 'i' → logprob: -1.1368763446807861
    3. '	i' → logprob: -12.386876106262207
    4. ' ' → logprob: -14.636876106262207
    5. ' ' → logprob: -14.761876106262207
    6. '(i' → logprob: -16.761877059936523
    7. '```' → logprob: -17.011877059936523
    8. '<|end|>' → logprob: -17.261877059936523
    9. '   ' → logprob: -17.386877059936523
    10. 'I' → logprob: -18.011877059936523

Token 92: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.0032004083041101694
    2. '%' → logprob: -5.753200531005859
    3. ' ' → logprob: -10.75320053100586
    4. ' %
' → logprob: -14.62820053100586
    5. '%n' → logprob: -15.12820053100586
    6. ' ' → logprob: -15.25320053100586
    7. ' %=' → logprob: -15.37820053100586
    8. ' %#' → logprob: -16.75320053100586
    9. '%i' → logprob: -16.75320053100586
    10. ')%' → logprob: -17.12820053100586

Token 93: ' md' (ID: 17280)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.1430564671754837
    2. 'self' → logprob: -2.0180563926696777
    3. ' md' → logprob: -8.268056869506836
    4. 'md' → logprob: -9.268056869506836
    5. ' ' → logprob: -10.893056869506836
    6. ' ' → logprob: -11.893056869506836
    7. '	self' → logprob: -13.018056869506836
    8. '(self' → logprob: -14.518056869506836
    9. '```' → logprob: -15.143056869506836
    10. '_self' → logprob: -15.268056869506836

Token 94: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17198583483695984
    2. '       ' → logprob: -2.7969858646392822
    3. '\n' → logprob: -3.1719858646392822
    4. '<|end|>' → logprob: -3.9219858646392822
    5. '\' → logprob: -4.921985626220703
    6. '   ' → logprob: -5.046985626220703
    7. '' → logprob: -5.421985626220703
    8. '    
' → logprob: -5.671985626220703
    9. ' ' → logprob: -5.921985626220703
    10. '```' → logprob: -6.046985626220703

Token 95: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7375986576080322
    2. '\n' → logprob: -1.3625986576080322
    3. ' 
' → logprob: -2.3625986576080322
    4. '\' → logprob: -3.1125986576080322
    5. '       ' → logprob: -3.4875986576080322
    6. '<|end|>' → logprob: -3.7375986576080322
    7. '   ' → logprob: -3.8625986576080322
    8. '    
' → logprob: -4.362598419189453
    9. '```' → logprob: -4.487598419189453
    10. '' → logprob: -4.987598419189453

Token 96: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1596173346042633
    2. '
' → logprob: -2.1596174240112305
    3. '   ' → logprob: -3.9096174240112305
    4. 'def' → logprob: -5.2846174240112305
    5. '<|end|>' → logprob: -6.4096174240112305
    6. 'self' → logprob: -6.5346174240112305
    7. '        
' → logprob: -6.6596174240112305
    8. ' ' → logprob: -7.1596174240112305
    9. '```' → logprob: -7.4096174240112305
    10. '    
' → logprob: -7.6596174240112305

Token 97: ' pas' (ID: 2173)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1807398945093155
    2. ' self' → logprob: -2.3057398796081543
    3. '       ' → logprob: -2.8057398796081543
    4. '   ' → logprob: -5.555739879608154
    5. 'def' → logprob: -7.430739879608154
    6. ' ' → logprob: -8.555740356445312
    7. '    ' → logprob: -8.680740356445312
    8. '  ' → logprob: -9.680740356445312
    9. '      ' → logprob: -9.680740356445312
    10. '	self' → logprob: -10.055740356445312

Token 98: ' le' (ID: 505)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 99: ' plus' (ID: 2932)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.33232131600379944
    2. ' self' → logprob: -2.2073214054107666
    3. 'pow' → logprob: -3.3323214054107666
    4. 'f' → logprob: -3.5823214054107666
    5. 'inverse' → logprob: -3.9573214054107666
    6. ' inverse' → logprob: -4.0823211669921875
    7. 's' → logprob: -4.7073211669921875
    8. '```' → logprob: -5.0823211669921875
    9. 'p' → logprob: -5.2073211669921875
    10. 'return' → logprob: -5.8323211669921875

Token 100: ' optimal' (ID: 24174)
  Prédit: 'optimal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'optimal' → logprob: -0.7903426885604858
    2. 'optim' → logprob: -1.5403426885604858
    3. 'opt' → logprob: -2.2903428077697754
    4. ' efficace' → logprob: -2.5403428077697754
    5. 'simple' → logprob: -3.4153428077697754
    6. 'efficient' → logprob: -3.6653428077697754
    7. 'eff' → logprob: -3.9153428077697754
    8. ' élégant' → logprob: -4.790342807769775
    9. ' optimal' → logprob: -4.915342807769775
    10. 'é' → logprob: -5.040342807769775

Token 101: ' mais' (ID: 2899)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5027672052383423
    2. '<|end|>' → logprob: -1.7527672052383423
    3. '
' → logprob: -2.1277670860290527
    4. '   ' → logprob: -2.8777670860290527
    5. '<|end|>' → logprob: -4.627767086029053
    6. ' 
' → logprob: -4.752767086029053
    7. ' ' → logprob: -5.002767086029053
    8. '  
' → logprob: -5.127767086029053
    9. '        
' → logprob: -5.377767086029053
    10. '    
' → logprob: -5.627767086029053

Token 102: ' bon' (ID: 4846)
  Prédit: ' ça'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ça' → logprob: -1.0655455589294434
    2. ' c' → logprob: -1.5655455589294434
    3. '       ' → logprob: -1.5655455589294434
    4. ' def' → logprob: -3.4405455589294434
    5. 'def' → logprob: -3.6905455589294434
    6. ' correct' → logprob: -3.8155455589294434
    7. ' self' → logprob: -3.9405455589294434
    8. ' simple' → logprob: -4.440545558929443
    9. ' on' → logprob: -4.565545558929443
    10. ' ok' → logprob: -4.565545558929443

Token 103: ' ça' (ID: 13590)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 104: ' marche' (ID: 58191)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24383997917175293
    2. '
' → logprob: -2.368839979171753
    3. '   ' → logprob: -2.868839979171753
    4. '        
' → logprob: -3.993839979171753
    5. '    
' → logprob: -4.618840217590332
    6. ' n' → logprob: -5.243840217590332
    7. ' reste' → logprob: -5.243840217590332
    8. '```' → logprob: -5.493840217590332
    9. '    ' → logprob: -6.243840217590332
    10. ' 
' → logprob: -6.243840217590332

Token 105: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.29204827547073364
    2. '       ' → logprob: -1.7920482158660889
    3. '   ' → logprob: -3.042048215866089
    4. '    
' → logprob: -4.042048454284668
    5. '        
' → logprob: -5.042048454284668
    6. ' 
' → logprob: -5.417048454284668
    7. '<|end|>' → logprob: -5.417048454284668
    8. '  
' → logprob: -6.042048454284668
    9. '```' → logprob: -6.917048454284668
    10. '\n' → logprob: -7.667048454284668

Token 106: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.24907828867435455
    2. '       ' → logprob: -1.6240782737731934
    3. '   ' → logprob: -4.624078273773193
    4. '    
' → logprob: -5.124078273773193
    5. '        
' → logprob: -5.374078273773193
    6. ' 
' → logprob: -6.499078273773193
    7. '  
' → logprob: -7.499078273773193
    8. '<|end|>' → logprob: -7.874078273773193
    9. '```' → logprob: -8.999078750610352
    10. 'def' → logprob: -9.624078750610352

Token 107: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1000945046544075
    2. '   ' → logprob: -2.8500945568084717
    3. 'self' (adapté à ' self') → logprob: -3.6000945568084717
    4. '
' → logprob: -5.350094318389893
    5. 'def' → logprob: -6.100094318389893
    6. ' self' → logprob: -6.100094318389893
    7. ' ' → logprob: -7.850094318389893
    8. '        
' → logprob: -9.10009479522705
    9. '    
' → logprob: -9.35009479522705
    10. '  ' → logprob: -9.60009479522705

Token 108: '.inv' (ID: 83561)
  Prédit: '.inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.inv' → logprob: -0.28606367111206055
    2. '.' → logprob: -1.4110636711120605
    3. '.inverse' → logprob: -5.7860636711120605
    4. '.rev' → logprob: -7.1610636711120605
    5. ' .' → logprob: -8.161064147949219
    6. '.i' → logprob: -8.911064147949219
    7. '.pow' → logprob: -9.161064147949219
    8. '.Inv' → logprob: -9.286064147949219
    9. '.mod' → logprob: -9.911064147949219
    10. '_inv' → logprob: -10.036064147949219

Token 109: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.15512318909168243
    2. '=' → logprob: -2.030123233795166
    3. '_fact' → logprob: -4.530123233795166
    4. '_' → logprob: -7.155123233795166
    5. 'fact' → logprob: -7.530123233795166
    6. ' ' → logprob: -9.530122756958008
    7. 'Fact' → logprob: -9.780122756958008
    8. '   ' → logprob: -10.155122756958008
    9. '_factor' → logprob: -10.405122756958008
    10. '	' → logprob: -11.155122756958008

Token 110: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5759496688842773
    2. ' [' → logprob: -0.8259496688842773
    3. ' ' → logprob: -12.075949668884277
    4. '[self' → logprob: -13.575949668884277
    5. '[len' → logprob: -14.200949668884277
    6. '   ' → logprob: -14.200949668884277
    7. '[i' → logprob: -14.700949668884277
    8. ' ' → logprob: -15.450949668884277
    9. '[int' → logprob: -15.575949668884277
    10. '[size' → logprob: -15.825949668884277

Token 111: 'pow' (ID: 30304)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00022547018306795508
    2. '0' → logprob: -8.500225067138672
    3. ' ' → logprob: -10.750225067138672
    4. 'None' → logprob: -15.375225067138672
    5. ']' → logprob: -16.250225067138672
    6. '   ' → logprob: -16.500225067138672
    7. '-' → logprob: -16.750225067138672
    8. '```' → logprob: -17.125225067138672
    9. '[' → logprob: -17.500225067138672
    10. '  ' → logprob: -18.250225067138672

Token 112: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05686849728226662
    2. '(self' → logprob: -3.181868553161621
    3. ']' → logprob: -5.556868553161621
    4. '<|end|>' → logprob: -5.681868553161621
    5. '](' → logprob: -5.931868553161621
    6. ')' → logprob: -6.181868553161621
    7. ',' → logprob: -7.556868553161621
    8. '```' → logprob: -7.806868553161621
    9. '(
' → logprob: -8.931868553161621
    10. ' (' → logprob: -9.306868553161621

Token 113: '.fact' (ID: 171436)
  Prédit: '.fact'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.fact' → logprob: -0.0027731433510780334
    2. '.factor' → logprob: -6.752773284912109
    3. '.MOD' → logprob: -7.627773284912109
    4. 'fact' → logprob: -7.877773284912109
    5. '.fac' → logprob: -8.62777328491211
    6. '.' → logprob: -8.62777328491211
    7. '.md' → logprob: -9.00277328491211
    8. '.mod' → logprob: -9.50277328491211
    9. ' .' → logprob: -9.87777328491211
    10. 'MOD' → logprob: -10.37777328491211

Token 114: '[i' (ID: 1768)
  Prédit: '[size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[size' → logprob: -0.5761379599571228
    2. '[-' → logprob: -0.8261379599571228
    3. '[' → logprob: -9.32613754272461
    4. '-' → logprob: -10.70113754272461
    5. '[
' → logprob: -11.20113754272461
    6. ')' → logprob: -11.32613754272461
    7. '
' → logprob: -11.45113754272461
    8. ']' → logprob: -11.95113754272461
    9. '[self' → logprob: -12.07613754272461
    10. 'size' → logprob: -12.07613754272461

Token 115: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012519658543169498
    2. ',-' → logprob: -4.887519836425781
    3. '],' → logprob: -5.887519836425781
    4. ' ,' → logprob: -7.637519836425781
    5. '-' → logprob: -8.012519836425781
    6. '(' → logprob: -8.012519836425781
    7. '),' → logprob: -8.762519836425781
    8. '(i' → logprob: -9.012519836425781
    9. ',i' → logprob: -9.262519836425781
    10. 'self' → logprob: -9.387519836425781

Token 116: ' md' (ID: 17280)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.10241656750440598
    2. ' self' → logprob: -2.477416515350342
    3. '-' → logprob: -4.477416515350342
    4. ' -' → logprob: -7.477416515350342
    5. '<|end|>' → logprob: -7.477416515350342
    6. ' ' → logprob: -8.1024169921875
    7. '-self' → logprob: -8.8524169921875
    8. '  ' → logprob: -9.3524169921875
    9. '	self' → logprob: -9.3524169921875
    10. '   ' → logprob: -9.6024169921875

Token 117: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0004884536610916257
    2. ' -' → logprob: -7.62548828125
    3. ' ' → logprob: -16.50048828125
    4. '```' → logprob: -16.50048828125
    5. '–' → logprob: -16.62548828125
    6. '2' → logprob: -17.00048828125
    7. '   ' → logprob: -17.00048828125
    8. '−' → logprob: -17.12548828125
    9. '  ' → logprob: -17.62548828125
    10. '1' → logprob: -18.50048828125

Token 118: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.129266067640856e-05
    2. ' ' → logprob: -11.250020980834961
    3. '-' → logprob: -12.000020980834961
    4. ' -' → logprob: -14.375020980834961
    5. '```' → logprob: -14.500020980834961
    6. '

' → logprob: -14.625020980834961
    7. ')' → logprob: -16.06252098083496
    8. '
' → logprob: -16.12502098083496
    9. '  ' → logprob: -16.62502098083496
    10. '   ' → logprob: -16.68752098083496

Token 119: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.36574100604048e-06
    2. '-' → logprob: -12.750004768371582
    3. ' ' → logprob: -14.000004768371582
    4. ' -' → logprob: -15.375004768371582
    5. '```' → logprob: -16.562503814697266
    6. '
' → logprob: -17.125003814697266
    7. '

' → logprob: -17.187503814697266
    8. '  ' → logprob: -17.437503814697266
    9. '' → logprob: -17.562503814697266
    10. '   ' → logprob: -17.562503814697266

Token 120: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09565049409866333
    2. ')' → logprob: -2.5956504344940186
    3. ' ,' → logprob: -4.595650672912598
    4. ' ' → logprob: -6.095650672912598
    5. '       ' → logprob: -6.220650672912598
    6. '   ' → logprob: -7.220650672912598
    7. ' )' → logprob: -7.720650672912598
    8. '	' → logprob: -7.970650672912598
    9. ' for' → logprob: -8.720650672912598
    10. '    ' → logprob: -8.970650672912598

Token 121: ' md' (ID: 17280)
  Prédit: ' md'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' md' → logprob: -0.006393942516297102
    2. 'md' → logprob: -5.131393909454346
    3. ')' → logprob: -8.256394386291504
    4. ' self' → logprob: -9.506394386291504
    5. '	md' → logprob: -9.631394386291504
    6. ' )' → logprob: -10.381394386291504
    7. 'self' → logprob: -10.631394386291504
    8. '(md' → logprob: -13.006394386291504
    9. ' ' → logprob: -13.381394386291504
    10. '.md' → logprob: -13.506394386291504

Token 122: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005981888971291482
    2. ' )' → logprob: -7.750597953796387
    3. ',' → logprob: -9.250597953796387
    4. ' ' → logprob: -10.250597953796387
    5. '   ' → logprob: -11.000597953796387
    6. ' if' → logprob: -12.625597953796387
    7. '       ' → logprob: -13.000597953796387
    8. ')
' → logprob: -13.000597953796387
    9. '    ' → logprob: -13.125597953796387
    10. 'if' → logprob: -13.500597953796387

Token 123: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.32033848762512207
    2. 'for' → logprob: -1.320338487625122
    3. '	for' → logprob: -5.570338249206543
    4. '       ' → logprob: -6.070338249206543
    5. ' ' → logprob: -7.570338249206543
    6. '	' → logprob: -9.195338249206543
    7. '   ' → logprob: -9.320338249206543
    8. '           ' → logprob: -9.945338249206543
    9. '        ' → logprob: -10.070338249206543
    10. '	       ' → logprob: -10.570338249206543

Token 124: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.020829729735851288
    2. 'range' → logprob: -4.020829677581787
    3. ' i' → logprob: -6.270829677581787
    4. ' in' → logprob: -7.520829677581787
    5. '	range' → logprob: -9.145830154418945
    6. 'i' → logprob: -10.145830154418945
    7. ' xrange' → logprob: -10.270830154418945
    8. '(range' → logprob: -10.270830154418945
    9. '<|end|>' → logprob: -11.395830154418945
    10. ' ' → logprob: -11.520830154418945

Token 125: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.162521094083786
    2. ' range' → logprob: -1.9125211238861084
    3. 'range' → logprob: -6.287520885467529
    4. '(range' → logprob: -8.662521362304688
    5. ' xrange' → logprob: -9.787521362304688
    6. '	range' → logprob: -10.037521362304688
    7. 'in' → logprob: -10.162521362304688
    8. ' i' → logprob: -10.412521362304688
    9. ' for' → logprob: -10.412521362304688
    10. ' ' → logprob: -10.662521362304688

Token 126: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.25193214416503906
    2. 'range' → logprob: -1.501932144165039
    3. '	range' → logprob: -13.501932144165039
    4. '(range' → logprob: -13.876932144165039
    5. ' ' → logprob: -15.376932144165039
    6. ' xrange' → logprob: -15.626932144165039
    7. '   ' → logprob: -16.00193214416504
    8. '  ' → logprob: -16.62693214416504
    9. ' size' → logprob: -17.50193214416504
    10. '_range' → logprob: -18.12693214416504

Token 127: '(size' (ID: 15192)
  Prédit: '(size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(size' → logprob: -0.0034129670821130276
    2. '(' → logprob: -5.753413200378418
    3. ' (' → logprob: -8.753413200378418
    4. '(len' → logprob: -9.503413200378418
    5. ' size' → logprob: -13.378413200378418
    6. '(s' → logprob: -15.253413200378418
    7. '(length' → logprob: -15.753413200378418
    8. ',size' → logprob: -15.878413200378418
    9. 'size' → logprob: -16.1284122467041
    10. '<size' → logprob: -16.1284122467041

Token 128: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4741031527519226
    2. '+' → logprob: -0.9741031527519226
    3. ' +
' → logprob: -11.724102973937988
    4. ' ' → logprob: -11.849102973937988
    5. ')' → logprob: -12.974102973937988
    6. '+
' → logprob: -12.974102973937988
    7. '   ' → logprob: -13.599102973937988
    8. ' )' → logprob: -14.099102973937988
    9. '<|end|>' → logprob: -14.224102973937988
    10. ' ,' → logprob: -14.599102973937988

Token 129: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004078758880496025
    2. ' ' → logprob: -5.5040788650512695
    3. '2' → logprob: -15.87907886505127
    4. '
' → logprob: -16.629077911376953
    5. '   ' → logprob: -17.379077911376953
    6. '```' → logprob: -17.504077911376953
    7. '  ' → logprob: -18.004077911376953
    8. '+' → logprob: -18.316577911376953
    9. ',' → logprob: -18.379077911376953
    10. ')' → logprob: -18.754077911376953

Token 130: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001398929744027555
    2. ' ' → logprob: -8.875140190124512
    3. '2' → logprob: -17.875139236450195
    4. '   ' → logprob: -18.812639236450195
    5. '１' → logprob: -18.875139236450195
    6. '۱' → logprob: -19.062639236450195
    7. '  ' → logprob: -19.250139236450195
    8. '```' → logprob: -19.312639236450195
    9. ')' → logprob: -19.375139236450195
    10. '
' → logprob: -19.500139236450195

Token 131: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.10725294798612595
    2. ')' → logprob: -2.357252836227417
    3. ']' → logprob: -5.357253074645996
    4. '])' → logprob: -6.482253074645996
    5. ' )' → logprob: -7.732253074645996
    6. ')])' → logprob: -8.357253074645996
    7. ')
' → logprob: -10.482253074645996
    8. ' ]' → logprob: -10.607253074645996
    9. '])]' → logprob: -10.732253074645996
    10. ' ])' → logprob: -11.607253074645996

Token 132: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4453829824924469
    2. '<|end|>' → logprob: -1.3203829526901245
    3. '   ' → logprob: -2.445383071899414
    4. '    
' → logprob: -6.195383071899414
    5. 'def' → logprob: -7.195383071899414
    6. '<|end|>' → logprob: -7.570383071899414
    7. ' ' → logprob: -7.695383071899414
    8. ' def' → logprob: -7.945383071899414
    9. '\n' → logprob: -8.195383071899414
    10. ' 
' → logprob: -8.320383071899414

Token 133: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.7855766415596008
    2. '   ' → logprob: -0.9105766415596008
    3. ' def' → logprob: -2.910576581954956
    4. '<|end|>' → logprob: -3.160576581954956
    5. '
' → logprob: -3.910576581954956
    6. ' ' → logprob: -3.910576581954956
    7. '    
' → logprob: -6.035576820373535
    8. ' 
' → logprob: -7.160576820373535
    9. '  ' → logprob: -7.910576820373535
    10. '<|end|>' → logprob: -7.910576820373535

Token 134: ' fac' (ID: 3513)
  Prédit: ' comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' comb' → logprob: -0.18552963435649872
    2. ' n' → logprob: -2.9355297088623047
    3. 'comb' → logprob: -2.9355297088623047
    4. 'C' → logprob: -4.060529708862305
    5. ' C' → logprob: -4.435529708862305
    6. ' combine' → logprob: -4.810529708862305
    7. 'n' → logprob: -4.810529708862305
    8. ' choose' → logprob: -5.310529708862305
    9. 'c' → logprob: -5.560529708862305
    10. ' c' → logprob: -5.810529708862305

Token 135: '(self' (ID: 2402)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0007354161934927106
    2. 'tor' → logprob: -7.500735282897949
    3. '(' → logprob: -8.75073528289795
    4. 'tors' → logprob: -11.50073528289795
    5. '(t' → logprob: -11.75073528289795
    6. '(self' → logprob: -13.25073528289795
    7. '   ' → logprob: -14.37573528289795
    8. ' (' → logprob: -14.62573528289795
    9. 'tion' → logprob: -14.75073528289795
    10. ' ' → logprob: -14.87573528289795

Token 136: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04295419901609421
    2. ')' → logprob: -3.917954206466675
    3. '):' → logprob: -4.167953968048096
    4. '(self' → logprob: -6.792953968048096
    5. ',self' → logprob: -6.792953968048096
    6. 'self' → logprob: -6.917953968048096
    7. ' ,' → logprob: -7.292953968048096
    8. '(' → logprob: -7.417953968048096
    9. ',f' → logprob: -7.667953968048096
    10. ' ' → logprob: -7.792953968048096

Token 137: ' k' (ID: 372)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.024842672049999237
    2. ' n' → logprob: -3.7748427391052246
    3. 'self' → logprob: -6.899842739105225
    4. 'x' → logprob: -8.274842262268066
    5. 'k' → logprob: -8.774842262268066
    6. ' self' → logprob: -9.399842262268066
    7. '   ' → logprob: -10.149842262268066
    8. ' ' → logprob: -11.024842262268066
    9. 's' → logprob: -11.774842262268066
    10. ',n' → logprob: -11.899842262268066

Token 138: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07920096069574356
    2. ')' → logprob: -2.5792009830474854
    3. ' ):' → logprob: -8.329200744628906
    4. '):
' → logprob: -10.454200744628906
    5. ' )' → logprob: -10.579200744628906
    6. ':' → logprob: -11.954200744628906
    7. '   ' → logprob: -12.079200744628906
    8. ' ' → logprob: -13.204200744628906
    9. ')：' → logprob: -15.454200744628906
    10. '       ' → logprob: -15.579200744628906

Token 139: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.019307753071188927
    2. '):' → logprob: -4.269307613372803
    3. '       ' → logprob: -5.769307613372803
    4. '():' → logprob: -7.269307613372803
    5. ':
' → logprob: -7.894307613372803
    6. ')' → logprob: -8.019308090209961
    7. ':return' → logprob: -8.269308090209961
    8. '   ' → logprob: -8.894308090209961
    9. ' :' → logprob: -9.269308090209961
    10. '):
' → logprob: -9.644308090209961

Token 140: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5310572385787964
    2. 'return' → logprob: -1.0310572385787964
    3. ' return' → logprob: -2.906057357788086
    4. '	return' → logprob: -8.531057357788086
    5. '	' → logprob: -9.156057357788086
    6. '   ' → logprob: -9.531057357788086
    7. ':return' → logprob: -9.531057357788086
    8. ' ' → logprob: -9.656057357788086
    9. ' ' → logprob: -9.906057357788086
    10. '    ' → logprob: -10.531057357788086

Token 141: ' Returns' (ID: 9609)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4010109007358551
    2. ' return' → logprob: -1.2760108709335327
    3. '       ' → logprob: -3.0260109901428223
    4. ' ' → logprob: -6.651010990142822
    5. '   ' → logprob: -7.026010990142822
    6. '	return' → logprob: -8.776010513305664
    7. '    ' → logprob: -9.151010513305664
    8. ' ' → logprob: -9.401010513305664
    9. ' 
' → logprob: -9.776010513305664
    10. ':return' → logprob: -10.651010513305664

Token 142: ' k' (ID: 372)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.31327906250953674
    2. 'self' → logprob: -1.3132790327072144
    3. ' ' → logprob: -11.688279151916504
    4. '       ' → logprob: -12.313279151916504
    5. '(self' → logprob: -13.813279151916504
    6. ' ' → logprob: -13.813279151916504
    7. '	self' → logprob: -13.938279151916504
    8. '   ' → logprob: -14.813279151916504
    9. ' return' → logprob: -14.938279151916504
    10. '    ' → logprob: -14.938279151916504

Token 143: '!
' (ID: 4175)
  Prédit: '!'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '!' → logprob: -0.008886834606528282
    2. ' !' → logprob: -5.383886814117432
    3. ' factorial' → logprob: -5.633886814117432
    4. '<|end|>' → logprob: -7.883886814117432
    5. ')' → logprob: -9.00888729095459
    6. ' *' → logprob: -10.88388729095459
    7. '   ' → logprob: -11.13388729095459
    8. ' !***' → logprob: -11.25888729095459
    9. '!)' → logprob: -11.50888729095459
    10. '```' → logprob: -11.63388729095459

Token 144: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 145: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.4781660735607147
    2. '       ' → logprob: -1.353166103363037
    3. '
' → logprob: -2.353166103363037
    4. ' return' → logprob: -3.853166103363037
    5. ' 
' → logprob: -6.103166103363037
    6. ':return' → logprob: -6.853166103363037
    7. '   ' → logprob: -7.103166103363037
    8. ':' → logprob: -8.353165626525879
    9. '<|end|>' → logprob: -8.353165626525879
    10. '	return' → logprob: -8.728165626525879

Token 146: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.10020741820335388
    2. ' self' → logprob: -2.3502073287963867
    3. '(self' → logprob: -14.725207328796387
    4. ' ' → logprob: -15.725207328796387
    5. '	self' → logprob: -15.850207328796387
    6. '   ' → logprob: -17.225208282470703
    7. ' ' → logprob: -17.475208282470703
    8. '[self' → logprob: -18.600208282470703
    9. '       ' → logprob: -18.850208282470703
    10. '```' → logprob: -18.850208282470703

Token 147: '.fact' (ID: 171436)
  Prédit: '.fact'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.fact' → logprob: -0.0692657008767128
    2. '.' → logprob: -2.819265604019165
    3. '.fac' → logprob: -5.444265842437744
    4. ' .' → logprob: -6.569265842437744
    5. '.f' → logprob: -6.819265842437744
    6. '.factor' → logprob: -8.319265365600586
    7. '.cod' → logprob: -10.819265365600586
    8. '.fa' → logprob: -10.944265365600586
    9. '.self' → logprob: -11.069265365600586
    10. '​.' → logprob: -11.319265365600586

Token 148: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -4.584861744660884e-05
    2. '[' → logprob: -10.000045776367188
    3. '[
' → logprob: -15.625045776367188
    4. '[key' → logprob: -15.875045776367188
    5. ' [' → logprob: -16.500045776367188
    6. '[i' → logprob: -18.750045776367188
    7. '[m' → logprob: -19.250045776367188
    8. '[n' → logprob: -19.625045776367188
    9. '[f' → logprob: -19.750045776367188
    10. '[c' → logprob: -20.125045776367188

Token 149: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00046677692444063723
    2. ' ]' → logprob: -8.000466346740723
    3. ']
' → logprob: -9.000466346740723
    4. ']

' → logprob: -12.250466346740723
    5. ')' → logprob: -13.750466346740723
    6. '   ' → logprob: -14.625466346740723
    7. '}' → logprob: -15.125466346740723
    8. ' ' → logprob: -15.500466346740723
    9. ' ]
' → logprob: -15.625466346740723
    10. '<|end|>' → logprob: -15.750466346740723

Token 150: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5976687669754028
    2. '<|end|>' → logprob: -1.0976687669754028
    3. '   ' → logprob: -2.5976686477661133
    4. '    
' → logprob: -3.8476686477661133
    5. ' 
' → logprob: -4.722668647766113
    6. '\n' → logprob: -5.722668647766113
    7. '  
' → logprob: -6.222668647766113
    8. '<|end|>' → logprob: -6.347668647766113
    9. '```' → logprob: -6.597668647766113
    10. 'newline' → logprob: -6.722668647766113

Token 151: ' def' (ID: 1056)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7644866108894348
    2. ' 
' → logprob: -1.13948655128479
    3. ' ' → logprob: -2.51448655128479
    4. '  
' → logprob: -3.26448655128479
    5. '<|end|>' → logprob: -3.26448655128479
    6. '    
' → logprob: -3.88948655128479
    7. '   ' → logprob: -4.139486789703369
    8. 'def' (adapté à ' def') → logprob: -5.139486789703369
    9. '\n' → logprob: -5.389486789703369
    10. 'newline' → logprob: -6.014486789703369

Token 152: ' inv' (ID: 1827)
  Prédit: ' inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' inv' → logprob: -0.30417412519454956
    2. ' comb' → logprob: -2.4291741847991943
    3. 'inv' → logprob: -2.5541741847991943
    4. 'comb' → logprob: -3.4291741847991943
    5. ' c' → logprob: -3.6791741847991943
    6. ' n' → logprob: -4.929173946380615
    7. ' C' → logprob: -4.929173946380615
    8. ' combine' → logprob: -4.929173946380615
    9. 'c' → logprob: -5.054173946380615
    10. ' ' → logprob: -5.929173946380615

Token 153: 'fac' (ID: 34429)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.354123592376709
    2. '(self' → logprob: -1.854123592376709
    3. '_fac' → logprob: -2.604123592376709
    4. '_factor' → logprob: -4.104123592376709
    5. 'fac' → logprob: -4.229123592376709
    6. '(k' → logprob: -4.229123592376709
    7. '_' → logprob: -4.229123592376709
    8. '[' → logprob: -6.729123592376709
    9. 'factor' → logprob: -6.854123592376709
    10. 'def' → logprob: -6.854123592376709

Token 154: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.01818295195698738
    2. '(' → logprob: -4.018182754516602
    3. '(s' → logprob: -10.893182754516602
    4. ' (' → logprob: -11.518182754516602
    5. '(
' → logprob: -13.268182754516602
    6. 'self' → logprob: -14.143182754516602
    7. '<|end|>' → logprob: -14.268182754516602
    8. 's' → logprob: -14.893182754516602
    9. '(sel' → logprob: -14.893182754516602
    10. ' ' → logprob: -15.268182754516602

Token 155: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01044481061398983
    2. ',k' → logprob: -5.135444641113281
    3. '(self' → logprob: -6.385444641113281
    4. '(' → logprob: -6.760444641113281
    5. '(k' → logprob: -6.885444641113281
    6. ' ,' → logprob: -8.135444641113281
    7. '[' → logprob: -8.760444641113281
    8. ' (' → logprob: -10.260444641113281
    9. ')' → logprob: -10.260444641113281
    10. ',self' → logprob: -10.760444641113281

Token 156: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.012530609965324402
    2. ' k' → logprob: -4.38753080368042
    3. '<|end|>' → logprob: -11.012530326843262
    4. 'self' → logprob: -13.012530326843262
    5. ' ' → logprob: -14.012530326843262
    6. '{k' → logprob: -15.137530326843262
    7. '
' → logprob: -15.262530326843262
    8. ',k' → logprob: -15.387530326843262
    9. '	k' → logprob: -15.637530326843262
    10. ')' → logprob: -15.762530326843262

Token 157: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0003540542966220528
    2. ':' → logprob: -8.625353813171387
    3. '):
' → logprob: -9.125353813171387
    4. ')' → logprob: -9.875353813171387
    5. '():' → logprob: -12.000353813171387
    6. ' ):' → logprob: -12.000353813171387
    7. '}:' → logprob: -14.375353813171387
    8. ']:' → logprob: -14.500353813171387
    9. '   ' → logprob: -15.375353813171387
    10. ' ' → logprob: -16.375354766845703

Token 158: '       ' (ID: 309)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5979408621788025
    2. '   ' → logprob: -1.8479409217834473
    3. '<|end|>' → logprob: -1.9729409217834473
    4. ' ' → logprob: -2.9729409217834473
    5. '       ' → logprob: -3.4729409217834473
    6. '[' → logprob: -4.097940921783447
    7. '    ' → logprob: -4.347940921783447
    8. ':' → logprob: -4.472940921783447
    9. '(
' → logprob: -4.847940921783447
    10. '  ' → logprob: -5.722940921783447

Token 159: ' #' (ID: 1069)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.1806178092956543
    2. 'return' → logprob: -1.9306178092956543
    3. '       ' → logprob: -4.055617809295654
    4. '   ' → logprob: -6.430617809295654
    5. ' 
' → logprob: -7.430617809295654
    6. '	return' → logprob: -7.805617809295654
    7. ':return' → logprob: -10.055618286132812
    8. '
' → logprob: -10.180618286132812
    9. '        
' → logprob: -10.430618286132812
    10. '    
' → logprob: -10.555618286132812

Token 160: ' je' (ID: 1264)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0019658661913126707
    2. ' return' → logprob: -6.2519659996032715
    3. 'Returns' → logprob: -10.626965522766113
    4. '       ' → logprob: -12.126965522766113
    5. 'Return' → logprob: -12.626965522766113
    6. '   ' → logprob: -13.251965522766113
    7. 'returns' → logprob: -13.376965522766113
    8. '#' → logprob: -14.626965522766113
    9. '	return' → logprob: -15.251965522766113
    10. ':return' → logprob: -15.376965522766113

Token 161: ' crois' (ID: 65485)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.06804852932691574
    2. 'return' → logprob: -3.8180484771728516
    3. '       ' → logprob: -3.9430484771728516
    4. ':' → logprob: -4.693048477172852
    5. '   ' → logprob: -5.068048477172852
    6. ':return' → logprob: -5.443048477172852
    7. ' ' → logprob: -5.943048477172852
    8. ' ' → logprob: -6.693048477172852
    9. ' retourne' → logprob: -8.193048477172852
    10. '    ' → logprob: -8.443048477172852

Token 162: ' que' (ID: 661)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5509316921234131
    2. ' self' → logprob: -1.425931692123413
    3. '(' → logprob: -2.925931692123413
    4. ' k' → logprob: -3.175931692123413
    5. 'return' → logprob: -3.925931692123413
    6. 'self' → logprob: -3.925931692123413
    7. '   ' → logprob: -4.550931930541992
    8. '(self' → logprob: -4.550931930541992
    9. ' ' → logprob: -5.050931930541992
    10. ' que' → logprob: -5.050931930541992

Token 163: ' c' (ID: 274)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5987111330032349
    2. ' return' → logprob: -0.9737111330032349
    3. 'self' → logprob: -3.0987110137939453
    4. ' self' → logprob: -3.5987110137939453
    5. ':return' → logprob: -8.473711013793945
    6. '   ' → logprob: -10.848711013793945
    7. ' c' → logprob: -11.098711013793945
    8. 'c' → logprob: -11.098711013793945
    9. ' ' → logprob: -11.098711013793945
    10. '       ' → logprob: -11.473711013793945

Token 164: ''est' (ID: 6616)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.4342317581176758
    2. 'ode' → logprob: -1.9342317581176758
    3. 'a' → logprob: -2.059231758117676
    4. '   ' → logprob: -2.309231758117676
    5. ''ai' → logprob: -2.559231758117676
    6. ''est' → logprob: -2.809231758117676
    7. 'o' → logprob: -3.684231758117676
    8. '       ' → logprob: -4.184231758117676
    9. ''s' → logprob: -4.184231758117676
    10. ''' → logprob: -4.434231758117676

Token 165: ' l' (ID: 305)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.35785290598869324
    2. ' self' → logprob: -1.2328529357910156
    3. 'return' → logprob: -5.732852935791016
    4. ' la' → logprob: -6.107852935791016
    5. ' return' → logprob: -6.732852935791016
    6. ' ' → logprob: -7.982852935791016
    7. '   ' → logprob: -7.982852935791016
    8. 'la' → logprob: -7.982852935791016
    9. 'pow' → logprob: -7.982852935791016
    10. 'inverse' → logprob: -8.107852935791016

Token 166: ''in' (ID: 17942)
  Prédit: 'inverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inverse' → logprob: -0.682300329208374
    2. 'a' → logprob: -1.432300329208374
    3. ' inverse' → logprob: -2.057300329208374
    4. 'e' → logprob: -3.057300329208374
    5. ''' → logprob: -3.182300329208374
    6. ''in' → logprob: -3.557300329208374
    7. 'u' → logprob: -6.057300567626953
    8. 'Inverse' → logprob: -6.182300567626953
    9. '_inverse' → logprob: -6.182300567626953
    10. '   ' → logprob: -7.432300567626953

Token 167: 'verse' (ID: 7093)
  Prédit: 'verse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'verse' → logprob: -0.40504634380340576
    2. 'v' → logprob: -1.1550463438034058
    3. 'vers' → logprob: -5.405046463012695
    4. ' verse' → logprob: -5.905046463012695
    5. '```' → logprob: -6.280046463012695
    6. ' v' → logprob: -6.905046463012695
    7. 'version' → logprob: -6.967546463012695
    8. '[v' → logprob: -7.405046463012695
    9. '

' → logprob: -7.467546463012695
    10. 'ver' → logprob: -7.467546463012695

Token 168: ' modulo' (ID: 112372)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.34063610434532166
    2. '[k' → logprob: -1.340636134147644
    3. ' ' → logprob: -4.090636253356934
    4. ' [' → logprob: -6.215636253356934
    5. '<|end|>' → logprob: -6.215636253356934
    6. '[self' → logprob: -6.590636253356934
    7. '[int' → logprob: -6.965636253356934
    8. '[
' → logprob: -7.215636253356934
    9. '[i' → logprob: -7.965636253356934
    10. '   ' → logprob: -8.215636253356934

Token 169: ' de' (ID: 334)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.962465226650238
    2. ' ' → logprob: -1.3374652862548828
    3. '(k' → logprob: -1.4624652862548828
    4. '[' → logprob: -2.587465286254883
    5. ' (' → logprob: -3.587465286254883
    6. '(' → logprob: -4.837465286254883
    7. ' k' → logprob: -5.962465286254883
    8. ' of' → logprob: -6.587465286254883
    9. 'k' → logprob: -6.712465286254883
    10. ',' → logprob: -6.712465286254883

Token 170: ' k' (ID: 372)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.029570888727903366
    2. 'k' → logprob: -4.529571056365967
    3. 'la' → logprob: -4.529571056365967
    4. ' self' → logprob: -5.279571056365967
    5. ' la' → logprob: -6.904571056365967
    6. ' k' → logprob: -7.154571056365967
    7. 'l' → logprob: -8.029570579528809
    8. '(self' → logprob: -8.779570579528809
    9. 'le' → logprob: -9.154570579528809
    10. '(k' → logprob: -10.904570579528809

Token 171: '!
' (ID: 4175)
  Prédit: '!'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '!' → logprob: -0.000510856625624001
    2. ' factorial' → logprob: -8.625511169433594
    3. ' !' → logprob: -9.750511169433594
    4. 'fact' → logprob: -9.750511169433594
    5. '_fact' → logprob: -9.875511169433594
    6. '!--' → logprob: -10.750511169433594
    7. '_fac' → logprob: -10.750511169433594
    8. '!...' → logprob: -11.000511169433594
    9. 'factor' → logprob: -11.125511169433594
    10. 'fac' → logprob: -11.250511169433594

Token 172: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5667979717254639
    2. '<|end|>' → logprob: -1.5667979717254639
    3. '   ' → logprob: -2.316797971725464
    4. ' ' → logprob: -2.691797971725464
    5. ')' → logprob: -4.566798210144043
    6. '    ' → logprob: -5.066798210144043
    7. '(' → logprob: -5.316798210144043
    8. '[' → logprob: -5.316798210144043
    9. ' 
' → logprob: -5.441798210144043
    10. '<|end|>' → logprob: -5.566798210144043

Token 173: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.589124858379364
    2. ' return' → logprob: -0.839124858379364
    3. '       ' → logprob: -4.46412467956543
    4. '	return' → logprob: -6.58912467956543
    5. '   ' → logprob: -8.58912467956543
    6. '
' → logprob: -12.08912467956543
    7. '	' → logprob: -12.83912467956543
    8. ' ' → logprob: -12.83912467956543
    9. ' 
' → logprob: -12.83912467956543
    10. ':return' → logprob: -12.83912467956543

Token 174: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.20141783356666565
    2. ' self' → logprob: -1.7014178037643433
    3. '(self' → logprob: -12.826417922973633
    4. ' ' → logprob: -14.326417922973633
    5. '	self' → logprob: -14.451417922973633
    6. '[self' → logprob: -15.326417922973633
    7. ' ' → logprob: -15.451417922973633
    8. '
' → logprob: -17.451417922973633
    9. 's' → logprob: -17.701417922973633
    10. '*self' → logprob: -17.701417922973633

Token 175: '.inv' (ID: 83561)
  Prédit: '.inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.inv' → logprob: -0.0001342903997283429
    2. '.' → logprob: -9.250134468078613
    3. ' .' → logprob: -10.875134468078613
    4. '.fac' → logprob: -11.750134468078613
    5. '.fact' → logprob: -12.125134468078613
    6. '.rev' → logprob: -13.500134468078613
    7. '.op' → logprob: -14.500134468078613
    8. '.in' → logprob: -15.000134468078613
    9. '.obs' → logprob: -15.125134468078613
    10. '.inf' → logprob: -15.125134468078613

Token 176: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.0011849920265376568
    2. '[' → logprob: -6.751184940338135
    3. '[
' → logprob: -12.126185417175293
    4. '[key' → logprob: -12.626185417175293
    5. ' [' → logprob: -12.876185417175293
    6. '[i' → logprob: -14.126185417175293
    7. '[K' → logprob: -14.376185417175293
    8. '[f' → logprob: -14.751185417175293
    9. '[u' → logprob: -15.251185417175293
    10. '[q' → logprob: -15.376185417175293

Token 177: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1033417209982872
    2. '<|end|>' → logprob: -2.853341817855835
    3. '}' → logprob: -3.228341817855835
    4. ']' → logprob: -7.728341579437256
    5. '<|end|>' → logprob: -8.103342056274414
    6. '
' → logprob: -9.478342056274414
    7. ')
' → logprob: -10.478342056274414
    8. '}
' → logprob: -10.978342056274414
    9. '```' → logprob: -11.228342056274414
    10. '   ' → logprob: -12.228342056274414

Token 178: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04139500483870506
    2. '<|end|>' → logprob: -3.6663949489593506
    3. '    
' → logprob: -4.79139518737793
    4. '
' → logprob: -5.54139518737793
    5. ' ' → logprob: -7.04139518737793
    6. 'def' → logprob: -7.66639518737793
    7. '```' → logprob: -7.91639518737793
    8. '  
' → logprob: -8.41639518737793
    9. ' 
' → logprob: -8.41639518737793
    10. '  ' → logprob: -8.41639518737793

Token 179: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0032731371466070414
    2. '   ' → logprob: -6.253273010253906
    3. ' def' → logprob: -6.628273010253906
    4. '
' → logprob: -11.753273010253906
    5. '    
' → logprob: -11.753273010253906
    6. '	def' → logprob: -13.003273010253906
    7. ' ' → logprob: -13.378273010253906
    8. ' 
' → logprob: -14.128273010253906
    9. '  
' → logprob: -14.753273010253906
    10. '  ' → logprob: -15.878273010253906

Token 180: ' P' (ID: 398)
  Prédit: ' comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' comb' → logprob: -0.26645126938819885
    2. 'comb' → logprob: -1.7664512395858765
    3. ' combine' → logprob: -4.141451358795166
    4. ' C' → logprob: -4.266451358795166
    5. ' n' → logprob: -4.641451358795166
    6. 'C' → logprob: -4.891451358795166
    7. 'c' → logprob: -5.891451358795166
    8. ' c' → logprob: -6.141451358795166
    9. ' choose' → logprob: -6.141451358795166
    10. 'n' → logprob: -6.516451358795166

Token 181: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.008006307296454906
    2. '(' → logprob: -5.2580060958862305
    3. 'r' → logprob: -6.3830060958862305
    4. 'ermut' → logprob: -8.00800609588623
    5. 'erm' → logprob: -8.75800609588623
    6. 'ar' → logprob: -9.00800609588623
    7. 'df' → logprob: -9.50800609588623
    8. 'er' → logprob: -9.75800609588623
    9. '(
' → logprob: -10.00800609588623
    10. '1' → logprob: -10.00800609588623

Token 182: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1834709495306015
    2. '(' → logprob: -2.5584709644317627
    3. '(self' → logprob: -2.6834709644317627
    4. '(k' → logprob: -4.558470726013184
    5. ',k' → logprob: -4.808470726013184
    6. ')' → logprob: -6.558470726013184
    7. ',self' → logprob: -7.808470726013184
    8. ')(' → logprob: -8.183470726013184
    9. ' (' → logprob: -8.308470726013184
    10. '(
' → logprob: -9.058470726013184

Token 183: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.705470621585846
    2. 'k' → logprob: -1.3304705619812012
    3. ' n' → logprob: -1.5804705619812012
    4. ' k' → logprob: -3.330470561981201
    5. 'r' → logprob: -10.20547103881836
    6. 'a' → logprob: -10.45547103881836
    7. ' r' → logprob: -11.83047103881836
    8. ')' → logprob: -11.95547103881836
    9. 'self' → logprob: -12.20547103881836
    10. '<|end|>' → logprob: -12.20547103881836

Token 184: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003163969377055764
    2. ',k' → logprob: -8.250316619873047
    3. ' ,' → logprob: -9.875316619873047
    4. ',r' → logprob: -13.125316619873047
    5. ',n' → logprob: -13.625316619873047
    6. ',
' → logprob: -16.250316619873047
    7. ',m' → logprob: -16.875316619873047
    8. 'k' → logprob: -17.125316619873047
    9. ')' → logprob: -17.375316619873047
    10. ',j' → logprob: -17.500316619873047

Token 185: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.018399259075522423
    2. ' k' → logprob: -4.018399238586426
    3. 'r' → logprob: -8.393399238586426
    4. ' r' → logprob: -10.768399238586426
    5. ' ' → logprob: -14.018399238586426
    6. '<|end|>' → logprob: -14.393399238586426
    7. 'n' → logprob: -14.768399238586426
    8. 'm' → logprob: -17.018400192260742
    9. ' n' → logprob: -17.143400192260742
    10. ',k' → logprob: -18.393400192260742

Token 186: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00769428675994277
    2. ')' → logprob: -4.882694244384766
    3. '):
' → logprob: -10.132694244384766
    4. ' ):' → logprob: -10.382694244384766
    5. ':' → logprob: -11.132694244384766
    6. '   ' → logprob: -14.757694244384766
    7. ' )' → logprob: -15.132694244384766
    8. '):
' → logprob: -15.132694244384766
    9. ')：' → logprob: -15.132694244384766
    10. ')**' → logprob: -15.257694244384766

Token 187: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11545852571725845
    2. '):' → logprob: -2.3654584884643555
    3. ' :' → logprob: -4.7404584884643555
    4. ')' → logprob: -5.7404584884643555
    5. '(' → logprob: -7.2404584884643555
    6. '<|end|>' → logprob: -7.2404584884643555
    7. ' ):' → logprob: -7.9904584884643555
    8. '(n' → logprob: -8.365458488464355
    9. '():' → logprob: -8.740458488464355
    10. ']:' → logprob: -8.740458488464355

Token 188: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3227190673351288
    2. 'return' → logprob: -1.3227190971374512
    3. ' if' → logprob: -4.822719097137451
    4. ' return' → logprob: -7.072719097137451
    5. '       ' → logprob: -7.572719097137451
    6. 'self' → logprob: -12.697718620300293
    7. '   ' → logprob: -13.447718620300293
    8. '	return' → logprob: -14.947718620300293
    9. '	if' → logprob: -15.072718620300293
    10. '```' → logprob: -15.822718620300293

Token 189: ' k' (ID: 372)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.8011925220489502
    2. 'self' → logprob: -1.3011925220489502
    3. 'if' → logprob: -2.42619252204895
    4. ' return' → logprob: -2.67619252204895
    5. ' self' → logprob: -2.80119252204895
    6. ' if' → logprob: -2.80119252204895
    7. '(self' → logprob: -9.551192283630371
    8. '   ' → logprob: -10.176192283630371
    9. '```' → logprob: -10.676192283630371
    10. '
' → logprob: -10.801192283630371

Token 190: '-per' (ID: 26081)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.6505576372146606
    2. '>' → logprob: -1.5255576372146606
    3. ')' → logprob: -1.9005576372146606
    4. ' <=' → logprob: -2.400557518005371
    5. '<=' → logprob: -4.275557518005371
    6. ' >=' → logprob: -6.400557518005371
    7. ' ==' → logprob: -7.025557518005371
    8. '==' → logprob: -7.025557518005371
    9. ' )' → logprob: -7.275557518005371
    10. '>=' → logprob: -7.525557518005371

Token 191: 'mut' (ID: 10522)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.008435497060418129
    2. 'mut' → logprob: -5.5084357261657715
    3. 'mutation' → logprob: -5.7584357261657715
    4. ')' → logprob: -6.8834357261657715
    5. 'mute' → logprob: -10.258435249328613
    6. 'mission' → logprob: -10.258435249328613
    7. 'mu' → logprob: -10.758435249328613
    8. '```' → logprob: -11.133435249328613
    9. 'r' → logprob: -11.258435249328613
    10. '')' → logprob: -11.508435249328613

Token 192: 'ations' (ID: 929)
  Prédit: 'ation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.06555132567882538
    2. 'ations' → logprob: -3.065551280975342
    3. ')' → logprob: -4.190551280975342
    4. 'a' → logprob: -6.940551280975342
    5. 'utations' → logprob: -8.5655517578125
    6. ',' → logprob: -9.1905517578125
    7. '```' → logprob: -9.8155517578125
    8. 'at' → logprob: -10.0655517578125
    9. 'atio' → logprob: -10.0655517578125
    10. 'er' → logprob: -10.3155517578125

Token 193: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.22518889605998993
    2. '(self' → logprob: -2.100188970565796
    3. ':' → logprob: -3.350188970565796
    4. '       ' → logprob: -4.100188732147217
    5. ' (' → logprob: -4.725188732147217
    6. '   ' → logprob: -5.350188732147217
    7. ')' → logprob: -5.475188732147217
    8. '(
' → logprob: -5.725188732147217
    9. 'self' → logprob: -6.350188732147217
    10. '(n' → logprob: -6.850188732147217

Token 194: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3968925178050995
    2. ' n' → logprob: -1.1468925476074219
    3. '<|end|>' → logprob: -4.771892547607422
    4. ' ' → logprob: -6.646892547607422
    5. ')n' → logprob: -10.396892547607422
    6. '(n' → logprob: -10.771892547607422
    7. '_n' → logprob: -10.896892547607422
    8. ' '' → logprob: -10.896892547607422
    9. ')' → logprob: -11.021892547607422
    10. '<|end|>' → logprob: -11.021892547607422

Token 195: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.1244319677352905
    2. '(self' → logprob: -1.3744319677352905
    3. ':' → logprob: -1.9994319677352905
    4. '       ' → logprob: -2.74943208694458
    5. '(n' → logprob: -2.87443208694458
    6. ' (' → logprob: -2.99943208694458
    7. ')' → logprob: -3.12443208694458
    8. '   ' → logprob: -3.87443208694458
    9. 'self' → logprob: -4.24943208694458
    10. '):' → logprob: -4.62443208694458

Token 196: 'n' (ID: 77)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1290862262248993
    2. ' )' → logprob: -2.8790862560272217
    3. ' n' → logprob: -3.5040862560272217
    4. 'n' → logprob: -3.8790862560272217
    5. '):' → logprob: -4.629086017608643
    6. ' ):' → logprob: -6.254086017608643
    7. ')n' → logprob: -7.004086017608643
    8. '')' → logprob: -7.879086017608643
    9. ' ' → logprob: -8.5040864944458
    10. '(n' → logprob: -8.6290864944458

Token 197: 'Pk' (ID: 64138)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.706637978553772
    2. ')' → logprob: -1.081637978553772
    3. ' >=' → logprob: -2.5816378593444824
    4. ' -' → logprob: -3.7066378593444824
    5. ' )' → logprob: -3.7066378593444824
    6. ' ,' → logprob: -4.331637859344482
    7. '>=' → logprob: -4.331637859344482
    8. '!' → logprob: -5.456637859344482
    9. '-' → logprob: -6.081637859344482
    10. '   ' → logprob: -6.206637859344482

Token 198: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.28296032547950745
    2. '):' → logprob: -1.407960295677185
    3. ':' → logprob: -7.032960414886475
    4. '):
' → logprob: -7.782960414886475
    5. '   ' → logprob: -8.657959938049316
    6. ']' → logprob: -9.782959938049316
    7. '       ' → logprob: -9.907959938049316
    8. ' ):' → logprob: -10.532959938049316
    9. '(n' → logprob: -10.657959938049316
    10. ' )' → logprob: -10.657959938049316

Token 199: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18536899983882904
    2. '       ' → logprob: -3.0603690147399902
    3. '(' → logprob: -3.1853690147399902
    4. ')' → logprob: -3.4353690147399902
    5. '(n' → logprob: -4.43536901473999
    6. '):' → logprob: -4.43536901473999
    7. '   ' → logprob: -4.68536901473999
    8. '(self' → logprob: -5.06036901473999
    9. ',' → logprob: -6.43536901473999
    10. 'self' → logprob: -6.68536901473999

Token 200: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.14827865362167358
    2. '       ' → logprob: -2.7732787132263184
    3. 'if' (adapté à ' if') → logprob: -3.3982787132263184
    4. ' return' → logprob: -3.5232787132263184
    5. 'return' → logprob: -4.898278713226318
    6. ')' → logprob: -6.273278713226318
    7. ' ' → logprob: -7.148278713226318
    8. '   ' → logprob: -7.273278713226318
    9. ':' → logprob: -7.773278713226318
    10. ' 
' → logprob: -8.27327823638916

Token 201: ' n' (ID: 297)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.03488080948591232
    2. 'k' → logprob: -3.5348808765411377
    3. ' n' → logprob: -5.284880638122559
    4. 'n' → logprob: -10.034880638122559
    5. ' ' → logprob: -12.784880638122559
    6. ' not' → logprob: -13.284880638122559
    7. '	k' → logprob: -14.534880638122559
    8. ' ' → logprob: -14.909880638122559
    9. '(k' → logprob: -16.159881591796875
    10. '   ' → logprob: -17.159881591796875

Token 202: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.17997336387634277
    2. '<' → logprob: -1.8049733638763428
    3. '<n' → logprob: -8.804973602294922
    4. ' ' → logprob: -10.429973602294922
    5. ' >=' → logprob: -11.054973602294922
    6. '<int' → logprob: -11.554973602294922
    7. '   ' → logprob: -12.429973602294922
    8. '>=' → logprob: -12.679973602294922
    9. '[' → logprob: -12.804973602294922
    10. '<num' → logprob: -13.679973602294922

Token 203: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.08985242247581482
    2. '0' → logprob: -2.7148523330688477
    3. ' k' → logprob: -3.9648523330688477
    4. ' ' → logprob: -7.214852333068848
    5. '=' → logprob: -12.089852333068848
    6. '=k' → logprob: -12.714852333068848
    7. '1' → logprob: -13.089852333068848
    8. '	k' → logprob: -13.339852333068848
    9. '  ' → logprob: -16.589853286743164
    10. '   ' → logprob: -16.714853286743164

Token 204: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2737593352794647
    2. ' or' → logprob: -1.523759365081787
    3. ':
' → logprob: -4.523759365081787
    4. ':return' → logprob: -4.648759365081787
    5. '       ' → logprob: -7.148759365081787
    6. '   ' → logprob: -9.023758888244629
    7. 'or' → logprob: -9.773758888244629
    8. ' :' → logprob: -10.023758888244629
    9. ' return' → logprob: -10.398758888244629
    10. 'return' → logprob: -10.523758888244629

Token 205: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3104608952999115
    2. '       ' → logprob: -2.4354608058929443
    3. '
' → logprob: -2.6854608058929443
    4. ':' → logprob: -3.6854608058929443
    5. 'return' → logprob: -3.6854608058929443
    6. ':return' → logprob: -4.060461044311523
    7. ' return' → logprob: -4.310461044311523
    8. ':
' → logprob: -4.435461044311523
    9. ' 
' → logprob: -4.935461044311523
    10. '0' → logprob: -5.685461044311523

Token 206: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.010871777310967445
    2. '0' → logprob: -5.010871887207031
    3. ' return' → logprob: -6.010871887207031
    4. '
' → logprob: -6.635871887207031
    5. '           ' → logprob: -8.010871887207031
    6. '       ' → logprob: -10.385871887207031
    7. '1' → logprob: -11.885871887207031
    8. ' 
' → logprob: -12.635871887207031
    9. '	return' → logprob: -12.760871887207031
    10. '   ' → logprob: -13.010871887207031

Token 207: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.463036435074173e-05
    2. ' ' → logprob: -10.625024795532227
    3. '
' → logprob: -16.250024795532227
    4. '       ' → logprob: -17.250024795532227
    5. '   ' → logprob: -17.625024795532227
    6. '           ' → logprob: -18.375024795532227
    7. ' ' → logprob: -18.875024795532227
    8. '۰' → logprob: -19.125024795532227
    9. ' 
' → logprob: -20.500024795532227
    10. '```' → logprob: -20.500024795532227

Token 208: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '۰' → logprob: -20.5
    4. '   ' → logprob: -20.625
    5. '
' → logprob: -21.125
    6. '```' → logprob: -21.625
    7. '00' → logprob: -21.75
    8. '０' → logprob: -21.875
    9. '  ' → logprob: -22.375
    10. ' ' → logprob: -22.5

Token 209: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12149011343717575
    2. '       ' → logprob: -2.621490001678467
    3. '\n' → logprob: -3.621490001678467
    4. '<|end|>' → logprob: -5.121490001678467
    5. '        
' → logprob: -5.871490001678467
    6. ' 
' → logprob: -5.996490001678467
    7. '  
' → logprob: -6.371490001678467
    8. '    
' → logprob: -6.746490001678467
    9. '
' → logprob: -8.621490478515625
    10. '   ' → logprob: -8.996490478515625

Token 210: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.050083257257938385
    2. '
' → logprob: -3.3000831604003906
    3. '<|end|>' → logprob: -4.925083160400391
    4. '   ' → logprob: -6.550083160400391
    5. '\n' → logprob: -7.175083160400391
    6. ' 
' → logprob: -7.425083160400391
    7. '  
' → logprob: -7.550083160400391
    8. '    
' → logprob: -7.675083160400391
    9. '	' → logprob: -8.55008316040039
    10. '        
' → logprob: -8.55008316040039

Token 211: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.33011969923973083
    2. '       ' → logprob: -1.8301197290420532
    3. ' return' → logprob: -2.2051196098327637
    4. '
' → logprob: -5.080119609832764
    5. '	return' → logprob: -6.330119609832764
    6. '   ' → logprob: -6.580119609832764
    7. '        
' → logprob: -7.455119609832764
    8. ' 
' → logprob: -8.580120086669922
    9. '	' → logprob: -9.330120086669922
    10. '    
' → logprob: -9.955120086669922

Token 212: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.04404827207326889
    2. ' self' → logprob: -3.669048309326172
    3. '(self' → logprob: -4.044048309326172
    4. ' (' → logprob: -10.044048309326172
    5. '       ' → logprob: -11.294048309326172
    6. '   ' → logprob: -12.669048309326172
    7. '	self' → logprob: -13.044048309326172
    8. '[self' → logprob: -13.544048309326172
    9. '
' → logprob: -13.794048309326172
    10. '*self' → logprob: -14.669048309326172

Token 213: '.fact' (ID: 171436)
  Prédit: '.fact'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.fact' → logprob: -0.006184387486428022
    2. '.fac' → logprob: -5.1311845779418945
    3. '.' → logprob: -8.881184577941895
    4. ' .' → logprob: -9.381184577941895
    5. '.factor' → logprob: -10.881184577941895
    6. 'fact' → logprob: -11.631184577941895
    7. '..' → logprob: -13.506184577941895
    8. '​.' → logprob: -14.381184577941895
    9. '.fast' → logprob: -14.756184577941895
    10. '.fa' → logprob: -15.006184577941895

Token 214: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -6.630610641877865e-06
    2. 'n' → logprob: -12.000006675720215
    3. '[' → logprob: -15.750006675720215
    4. ' [' → logprob: -16.5000057220459
    5. '	n' → logprob: -17.8750057220459
    6. '[k' → logprob: -18.2500057220459
    7. '   ' → logprob: -18.2500057220459
    8. ' n' → logprob: -18.8750057220459
    9. '[
' → logprob: -19.0000057220459
    10. '(n' → logprob: -19.1250057220459

Token 215: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.747814349073451e-05
    2. '   ' → logprob: -11.500017166137695
    3. ']*' → logprob: -12.125017166137695
    4. ' ]' → logprob: -13.250017166137695
    5. ' ' → logprob: -17.125017166137695
    6. ']
' → logprob: -17.625017166137695
    7. '    ' → logprob: -18.500017166137695
    8. '
' → logprob: -18.625017166137695
    9. '       ' → logprob: -18.625017166137695
    10. '  ' → logprob: -19.375017166137695

Token 216: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5761754512786865
    2. ' *' → logprob: -0.8261754512786865
    3. '*self' → logprob: -8.826175689697266
    4. ' ' → logprob: -10.576175689697266
    5. '   ' → logprob: -10.576175689697266
    6. '//' → logprob: -10.701175689697266
    7. ' //' → logprob: -11.701175689697266
    8. ' ' → logprob: -12.451175689697266
    9. 'self' → logprob: -13.451175689697266
    10. '
' → logprob: -14.951175689697266

Token 217: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.054891765117645264
    2. ' self' → logprob: -2.92989182472229
    3. '<|end|>' → logprob: -12.554891586303711
    4. '(self' → logprob: -12.804891586303711
    5. '	self' → logprob: -13.554891586303711
    6. '[self' → logprob: -14.554891586303711
    7. 'pow' → logprob: -15.054891586303711
    8. '
' → logprob: -15.804891586303711
    9. ' ' → logprob: -15.804891586303711
    10. '   ' → logprob: -15.804891586303711

Token 218: '.inv' (ID: 83561)
  Prédit: '.inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.inv' → logprob: -8.661626634420827e-05
    2. 'inv' → logprob: -9.625086784362793
    3. '.' → logprob: -11.375086784362793
    4. ' .' → logprob: -11.750086784362793
    5. '.in' → logprob: -15.125086784362793
    6. '   ' → logprob: -15.250086784362793
    7. '[' → logprob: -15.875086784362793
    8. ' inv' → logprob: -16.000085830688477
    9. '..' → logprob: -17.125085830688477
    10. '(inv' → logprob: -17.250085830688477

Token 219: '[n' (ID: 15433)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.7175225615501404
    2. 'fac' → logprob: -0.7175225615501404
    3. 'fact' → logprob: -3.842522621154785
    4. '[n' → logprob: -5.967522621154785
    5. '[f' → logprob: -10.842522621154785
    6. 'factor' → logprob: -10.967522621154785
    7. '_fac' → logprob: -11.217522621154785
    8. '[' → logprob: -12.217522621154785
    9. 'Fac' → logprob: -12.342522621154785
    10. ' fac' → logprob: -12.342522621154785

Token 220: ' -' (ID: 533)
  Prédit: '-k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-k' → logprob: -0.051672130823135376
    2. ' -' → logprob: -3.0516722202301025
    3. '-' → logprob: -5.801671981811523
    4. '[k' → logprob: -9.926671981811523
    5. '[-' → logprob: -11.926671981811523
    6. '[' → logprob: -14.051671981811523
    7. 'k' → logprob: -14.176671981811523
    8. '-kn' → logprob: -15.301671981811523
    9. '   ' → logprob: -16.926671981811523
    10. '-kar' → logprob: -17.051671981811523

Token 221: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -4.5491004129871726e-05
    2. ' k' → logprob: -10.000045776367188
    3. '	k' → logprob: -18.625045776367188
    4. '{k' → logprob: -21.125045776367188
    5. '   ' → logprob: -22.250045776367188
    6. ' ' → logprob: -22.750045776367188
    7. '"k' → logprob: -23.250045776367188
    8. '-k' → logprob: -23.375045776367188
    9. '[k' → logprob: -24.000045776367188
    10. 'kf' → logprob: -24.250045776367188

Token 222: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -2.3676733690081164e-05
    2. ' ]' → logprob: -10.75002384185791
    3. ']%' → logprob: -13.50002384185791
    4. ']
' → logprob: -15.25002384185791
    5. ']]' → logprob: -15.37502384185791
    6. '[' → logprob: -15.37502384185791
    7. '])' → logprob: -17.125022888183594
    8. '   ' → logprob: -18.000022888183594
    9. ']>' → logprob: -18.500022888183594
    10. 'k' → logprob: -18.500022888183594

Token 223: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.6947925686836243
    2. ' %' → logprob: -0.6947925686836243
    3. '[' → logprob: -6.944792747497559
    4. '%n' → logprob: -8.194792747497559
    5. '[n' → logprob: -8.694792747497559
    6. '[k' → logprob: -8.819792747497559
    7. ')' → logprob: -10.694792747497559
    8. '       ' → logprob: -11.069792747497559
    9. ')%' → logprob: -11.194792747497559
    10. ']' → logprob: -11.944792747497559

Token 224: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0007100477814674377
    2. ' self' → logprob: -7.2507100105285645
    3. '(self' → logprob: -16.250709533691406
    4. '       ' → logprob: -16.875709533691406
    5. '   ' → logprob: -18.625709533691406
    6. '[self' → logprob: -18.625709533691406
    7. '```' → logprob: -18.875709533691406
    8. 's' → logprob: -19.125709533691406
    9. '           ' → logprob: -19.500709533691406
    10. '	self' → logprob: -19.875709533691406

Token 225: '.MOD' (ID: 141639)
  Prédit: '.MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.MOD' → logprob: -0.0001434690784662962
    2. 'MOD' → logprob: -8.875143051147461
    3. '.' → logprob: -13.500143051147461
    4. '.MODE' → logprob: -13.625143051147461
    5. ' .' → logprob: -14.875143051147461
    6. '_MOD' → logprob: -16.12514305114746
    7. ' MOD' → logprob: -16.87514305114746
    8. '`.' → logprob: -17.00014305114746
    9. '.Mod' → logprob: -17.12514305114746
    10. '>.' → logprob: -17.37514305114746

Token 226: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 227: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7251079082489014
    2. '<|end|>' → logprob: -0.7251079082489014
    3. '
' → logprob: -3.7251079082489014
    4. ')' → logprob: -6.4751081466674805
    5. '    
' → logprob: -6.6001081466674805
    6. ' ' → logprob: -6.6001081466674805
    7. '*' → logprob: -7.4751081466674805
    8. '  ' → logprob: -7.8501081466674805
    9. '<|end|>' → logprob: -7.8501081466674805
    10. '

' → logprob: -7.8501081466674805

Token 228: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.015262868255376816
    2. ' def' → logprob: -4.640263080596924
    3. '   ' → logprob: -5.265263080596924
    4. '
' → logprob: -8.265262603759766
    5. ' ' → logprob: -10.640262603759766
    6. '    
' → logprob: -10.765262603759766
    7. '	def' → logprob: -11.390262603759766
    8. ' 
' → logprob: -13.015262603759766
    9. '  
' → logprob: -13.015262603759766
    10. '```' → logprob: -13.390262603759766

Token 229: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.048590436577796936
    2. ' C' → logprob: -3.0485904216766357
    3. ' ' → logprob: -13.923590660095215
    4. '   ' → logprob: -14.423590660095215
    5. 'def' → logprob: -14.423590660095215
    6. '```' → logprob: -15.173590660095215
    7. 'c' → logprob: -15.673590660095215
    8. '
' → logprob: -15.923590660095215
    9. 'comb' → logprob: -16.1735897064209
    10. '`' → logprob: -16.4235897064209

Token 230: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00321205728687346
    2. '(' → logprob: -5.753211975097656
    3. 'self' → logprob: -11.753211975097656
    4. ' (' → logprob: -11.878211975097656
    5. 'ount' → logprob: -12.378211975097656
    6. '```' → logprob: -12.628211975097656
    7. 'lass' → logprob: -12.878211975097656
    8. 'om' → logprob: -13.753211975097656
    9. 'alculate' → logprob: -13.753211975097656
    10. 'al' → logprob: -13.753211975097656

Token 231: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4784539043903351
    2. '(self' → logprob: -0.9784538745880127
    3. 'self' → logprob: -6.103454113006592
    4. '   ' → logprob: -7.103454113006592
    5. '(' → logprob: -7.728454113006592
    6. ')' → logprob: -7.853454113006592
    7. ',self' → logprob: -9.103453636169434
    8. ' (' → logprob: -9.228453636169434
    9. ' ' → logprob: -9.478453636169434
    10. ')(' → logprob: -9.853453636169434

Token 232: ' n' (ID: 297)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.007440392859280109
    2. ' self' → logprob: -5.007440567016602
    3. 'n' → logprob: -7.257440567016602
    4. '   ' → logprob: -11.132440567016602
    5. ' n' → logprob: -12.507440567016602
    6. '       ' → logprob: -13.632440567016602
    7. ' ' → logprob: -16.1324405670166
    8. '	self' → logprob: -16.5074405670166
    9. '(self' → logprob: -16.7574405670166
    10. '  ' → logprob: -17.2574405670166

Token 233: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.263011578586884e-05
    2. ' ,' → logprob: -10.125042915344238
    3. ',k' → logprob: -13.750042915344238
    4. ',n' → logprob: -14.625042915344238
    5. ',self' → logprob: -14.875042915344238
    6. '   ' → logprob: -15.250042915344238
    7. 'self' → logprob: -15.375042915344238
    8. ',
' → logprob: -16.375041961669922
    9. ' self' → logprob: -17.875041961669922
    10. ' ' → logprob: -18.500041961669922

Token 234: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0007100477814674377
    2. ' k' → logprob: -7.2507100105285645
    3. '   ' → logprob: -16.375709533691406
    4. '       ' → logprob: -18.250709533691406
    5. '    ' → logprob: -19.375709533691406
    6. ' ' → logprob: -19.750709533691406
    7. '     ' → logprob: -20.125709533691406
    8. '           ' → logprob: -20.625709533691406
    9. '  ' → logprob: -20.875709533691406
    10. '	k' → logprob: -21.000709533691406

Token 235: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01824207417666912
    2. '):
' → logprob: -4.018241882324219
    3. ')' → logprob: -10.018241882324219
    4. '):
' → logprob: -10.393241882324219
    5. '   ' → logprob: -11.893241882324219
    6. '       ' → logprob: -12.518241882324219
    7. ':' → logprob: -12.643241882324219
    8. ' ):' → logprob: -13.393241882324219
    9. ',' → logprob: -14.018241882324219
    10. 'self' → logprob: -15.268241882324219

Token 236: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027585681527853012
    2. '<|end|>' → logprob: -4.402585506439209
    3. '(self' → logprob: -5.152585506439209
    4. '(' → logprob: -5.527585506439209
    5. '   ' → logprob: -6.277585506439209
    6. ' if' → logprob: -6.527585506439209
    7. 'self' → logprob: -8.152585983276367
    8. ' self' → logprob: -8.277585983276367
    9. ' (' → logprob: -8.652585983276367
    10. ',' → logprob: -9.277585983276367

Token 237: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0028568280395120382
    2. ' if' → logprob: -6.252856731414795
    3. '       ' → logprob: -7.002856731414795
    4. '   ' → logprob: -11.002857208251953
    5. '	if' → logprob: -13.252857208251953
    6. 'return' → logprob: -15.752857208251953
    7. '0' → logprob: -17.252857208251953
    8. ';if' → logprob: -18.752857208251953
    9. '```' → logprob: -18.752857208251953
    10. ' ' → logprob: -19.127857208251953

Token 238: ' n' (ID: 297)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.012582412920892239
    2. ' if' → logprob: -4.512582302093506
    3. '0' → logprob: -6.512582302093506
    4. '       ' → logprob: -10.137582778930664
    5. '   ' → logprob: -12.512582778930664
    6. 'n' → logprob: -12.887582778930664
    7. '
' → logprob: -13.887582778930664
    8. 'self' → logprob: -14.262582778930664
    9. 'C' → logprob: -14.387582778930664
    10. ' ' → logprob: -15.012582778930664

Token 239: 'C' (ID: 34)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.09657018631696701
    2. '<' → logprob: -2.8465702533721924
    3. ' >=' → logprob: -3.4715702533721924
    4. '>=' → logprob: -6.346570014953613
    5. ',' → logprob: -7.846570014953613
    6. '<p' → logprob: -8.471570014953613
    7. 'C' → logprob: -8.721570014953613
    8. ' ==' → logprob: -9.471570014953613
    9. '   ' → logprob: -10.221570014953613
    10. '<C' → logprob: -10.221570014953613

Token 240: 'k' (ID: 74)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.041180189698934555
    2. 'n' → logprob: -3.41618013381958
    3. '(' → logprob: -5.79118013381958
    4. ' n' → logprob: -6.29118013381958
    5. ' (' → logprob: -6.54118013381958
    6. '   ' → logprob: -7.54118013381958
    7. '       ' → logprob: -8.166180610656738
    8. ',' → logprob: -9.166180610656738
    9. ')' → logprob: -9.666180610656738
    10. ' ' → logprob: -10.041180610656738

Token 241: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.45353829860687256
    2. '(self' → logprob: -1.0785382986068726
    3. '       ' → logprob: -4.453538417816162
    4. '(n' → logprob: -5.328538417816162
    5. '(
' → logprob: -5.828538417816162
    6. 'self' → logprob: -6.078538417816162
    7. 'if' → logprob: -6.953538417816162
    8. '   ' → logprob: -7.328538417816162
    9. ' if' → logprob: -7.703538417816162
    10. ' (' → logprob: -8.203537940979004

Token 242: 'bin' (ID: 11893)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5556339621543884
    2. '0' → logprob: -1.8056340217590332
    3. 'self' → logprob: -1.8056340217590332
    4. 'n' → logprob: -3.430634021759033
    5. 'return' → logprob: -3.555634021759033
    6. '       ' → logprob: -4.055634021759033
    7. ' if' → logprob: -4.180634021759033
    8. ' self' → logprob: -7.180634021759033
    9. 'def' → logprob: -7.180634021759033
    10. '
' → logprob: -7.305634021759033

Token 243: 'omial' (ID: 42600)
  Prédit: 'omial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'omial' → logprob: -0.02244569920003414
    2. 'om' → logprob: -3.8974456787109375
    3. '(n' → logprob: -7.0224456787109375
    4. ')' → logprob: -7.3974456787109375
    5. '       ' → logprob: -8.022445678710938
    6. '   ' → logprob: -11.147445678710938
    7. '           ' → logprob: -11.272445678710938
    8. 'coeff' → logprob: -11.772445678710938
    9. '[n' → logprob: -12.147445678710938
    10. ',' → logprob: -12.772445678710938

Token 244: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3763733208179474
    2. '(n' → logprob: -1.751373291015625
    3. ' coefficient' → logprob: -2.876373291015625
    4. 'coeff' → logprob: -3.126373291015625
    5. '_co' → logprob: -4.626373291015625
    6. 'co' → logprob: -4.751373291015625
    7. '   ' → logprob: -4.751373291015625
    8. '_coeff' → logprob: -5.376373291015625
    9. 'coef' → logprob: -5.876373291015625
    10. ' coefficients' → logprob: -6.626373291015625

Token 245: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4700840711593628
    2. ':' → logprob: -1.8450840711593628
    3. '   ' → logprob: -1.8450840711593628
    4. ' if' → logprob: -3.2200841903686523
    5. 'if' → logprob: -4.845084190368652
    6. '(' → logprob: -5.470084190368652
    7. ')' → logprob: -6.220084190368652
    8. ':
' → logprob: -7.220084190368652
    9. ' 
' → logprob: -7.345084190368652
    10. '	if' → logprob: -7.470084190368652

Token 246: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -8.041768160182983e-05
    2. '       ' → logprob: -9.750080108642578
    3. ' if' → logprob: -10.750080108642578
    4. 'return' → logprob: -14.625080108642578
    5. '```' → logprob: -15.750080108642578
    6. '   ' → logprob: -17.000080108642578
    7. '	if' → logprob: -17.750080108642578
    8. '0' → logprob: -18.625080108642578
    9. '``' → logprob: -21.125080108642578
    10. 'If' → logprob: -21.375080108642578

Token 247: ' n' (ID: 297)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.48326730728149414
    2. 'k' → logprob: -1.4832673072814941
    3. ' n' → logprob: -1.9832673072814941
    4. 'n' → logprob: -3.983267307281494
    5. ' not' → logprob: -9.858266830444336
    6. '   ' → logprob: -10.608266830444336
    7. '(k' → logprob: -12.483266830444336
    8. ' ' → logprob: -12.608266830444336
    9. 'not' → logprob: -12.858266830444336
    10. '(n' → logprob: -13.108266830444336

Token 248: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.6932958364486694
    2. ' <' → logprob: -0.6932958364486694
    3. '<n' → logprob: -9.1932954788208
    4. '<|end|>' → logprob: -10.9432954788208
    5. '<int' → logprob: -12.0682954788208
    6. '   ' → logprob: -12.1932954788208
    7. '<
' → logprob: -12.8182954788208
    8. '<class' → logprob: -12.9432954788208
    9. '[' → logprob: -13.0682954788208
    10. ' ' → logprob: -13.3182954788208

Token 249: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.00024358915106859058
    2. ' k' → logprob: -8.500243186950684
    3. '0' → logprob: -10.125243186950684
    4. ' ' → logprob: -17.500244140625
    5. '	k' → logprob: -19.250244140625
    6. '   ' → logprob: -20.375244140625
    7. ' or' → logprob: -20.875244140625
    8. '1' → logprob: -21.375244140625
    9. '=k' → logprob: -21.500244140625
    10. '_k' → logprob: -22.125244140625

Token 250: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8662991523742676
    2. ':
' → logprob: -0.8662991523742676
    3. ' or' → logprob: -1.8662991523742676
    4. '       ' → logprob: -5.991299152374268
    5. ':return' → logprob: -7.116299152374268
    6. 'or' → logprob: -7.491299152374268
    7. '           ' → logprob: -8.11629867553711
    8. '   ' → logprob: -9.24129867553711
    9. '):
' → logprob: -11.99129867553711
    10. 'return' → logprob: -12.24129867553711

Token 251: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2144445925951004
    2. '       ' → logprob: -1.714444637298584
    3. 'return' → logprob: -4.714444637298584
    4. '0' → logprob: -6.214444637298584
    5. '   ' → logprob: -7.339444637298584
    6. ' return' → logprob: -7.464444637298584
    7. '	       ' → logprob: -8.214444160461426
    8. '	return' → logprob: -8.964444160461426
    9. ' or' → logprob: -9.339444160461426
    10. ':return' → logprob: -9.464444160461426

Token 252: ' return' (ID: 622)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6962359547615051
    2. 'return' (adapté à ' return') → logprob: -0.6962359547615051
    3. '           ' → logprob: -6.0712361335754395
    4. ' return' → logprob: -7.4462361335754395
    5. '       ' → logprob: -8.946235656738281
    6. '	return' → logprob: -10.321235656738281
    7. '
' → logprob: -11.446235656738281
    8. ' ' → logprob: -12.321235656738281
    9. '   ' → logprob: -12.446235656738281
    10. '	       ' → logprob: -13.196235656738281

Token 253: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01814994215965271
    2. ' ' → logprob: -4.0181498527526855
    3. ' ' → logprob: -17.768150329589844
    4. '   ' → logprob: -18.143150329589844
    5. '       ' → logprob: -18.143150329589844
    6. '           ' → logprob: -19.268150329589844
    7. '
' → logprob: -19.518150329589844
    8. '  ' → logprob: -20.268150329589844
    9. '	' → logprob: -20.768150329589844
    10. '۰' → logprob: -21.393150329589844

Token 254: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '       ' → logprob: -18.375009536743164
    4. '   ' → logprob: -19.500009536743164
    5. '           ' → logprob: -19.750009536743164
    6. '
' → logprob: -20.125009536743164
    7. 'return' → logprob: -20.625009536743164
    8. '```' → logprob: -21.125009536743164
    9. '000' → logprob: -21.750009536743164
    10. '00' → logprob: -21.750009536743164

Token 255: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02019205130636692
    2. '
' → logprob: -4.0201921463012695
    3. '   ' → logprob: -6.8951921463012695
    4. '	' → logprob: -8.27019214630127
    5. '        
' → logprob: -8.64519214630127
    6. '    
' → logprob: -8.89519214630127
    7. 'return' → logprob: -9.14519214630127
    8. ' 
' → logprob: -9.64519214630127
    9. ' or' → logprob: -9.77019214630127
    10. '\n' → logprob: -10.52019214630127

Token 256: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004396095173433423
    2. 'return' → logprob: -8.250439643859863
    3. '   ' → logprob: -9.000439643859863
    4. ' return' → logprob: -10.000439643859863
    5. '	' → logprob: -12.500439643859863
    6. '	return' → logprob: -12.750439643859863
    7. '
' → logprob: -13.750439643859863
    8. '	   ' → logprob: -14.750439643859863
    9. '           ' → logprob: -14.875439643859863
    10. '        
' → logprob: -15.125439643859863

Token 257: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.011146977543830872
    2. '       ' → logprob: -4.5111470222473145
    3. ' return' → logprob: -9.261146545410156
    4. '```' → logprob: -13.261146545410156
    5. '   ' → logprob: -13.636146545410156
    6. '	return' → logprob: -14.386146545410156
    7. 'ret' → logprob: -14.636146545410156
    8. 'result' → logprob: -16.886146545410156
    9. '           ' → logprob: -17.386146545410156
    10. 'res' → logprob: -17.636146545410156

Token 258: ' pas' (ID: 2173)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.000558512459974736
    2. ' return' → logprob: -7.750558376312256
    3. '       ' → logprob: -9.000558853149414
    4. '   ' → logprob: -12.750558853149414
    5. '```' → logprob: -13.875558853149414
    6. 'result' → logprob: -15.750558853149414
    7. '
' → logprob: -15.875558853149414
    8. 'ret' → logprob: -16.375558853149414
    9. '	return' → logprob: -16.750558853149414
    10. '        
' → logprob: -17.250558853149414

Token 259: ' sûr' (ID: 46415)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5680282115936279
    2. ' self' → logprob: -1.443028211593628
    3. '       ' → logprob: -2.193028211593628
    4. '(self' → logprob: -2.943028211593628
    5. ' (' → logprob: -4.318028450012207
    6. 'return' → logprob: -4.693028450012207
    7. ' return' → logprob: -4.943028450012207
    8. '(' → logprob: -6.193028450012207
    9. '   ' → logprob: -7.193028450012207
    10. '           ' → logprob: -8.318028450012207

Token 260: ' si' (ID: 1784)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07957292348146439
    2. ' return' → logprob: -3.204572916030884
    3. 'return' → logprob: -3.329572916030884
    4. '   ' → logprob: -10.079572677612305
    5. '	return' → logprob: -10.454572677612305
    6. '	' → logprob: -11.704572677612305
    7. '           ' → logprob: -11.954572677612305
    8. '	   ' → logprob: -12.704572677612305
    9. '               ' → logprob: -13.204572677612305
    10. '        
' → logprob: -13.204572677612305

Token 261: ' les' (ID: 1341)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.13144579529762268
    2. ' self' → logprob: -2.75644588470459
    3. '       ' → logprob: -3.63144588470459
    4. '   ' → logprob: -5.13144588470459
    5. 'n' → logprob: -5.25644588470459
    6. ' n' → logprob: -5.38144588470459
    7. 'return' → logprob: -5.50644588470459
    8. ' k' → logprob: -5.63144588470459
    9. 'k' → logprob: -5.75644588470459
    10. '(self' → logprob: -5.88144588470459

Token 262: ' ()' (ID: 2869)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.060038015246391296
    2. ' self' → logprob: -3.6850380897521973
    3. 'return' → logprob: -4.810038089752197
    4. 'fact' → logprob: -4.810038089752197
    5. 'k' → logprob: -5.185038089752197
    6. ' k' → logprob: -5.935038089752197
    7. 'n' → logprob: -5.935038089752197
    8. 'inv' → logprob: -6.435038089752197
    9. ' return' → logprob: -6.685038089752197
    10. ' n' → logprob: -6.810038089752197

Token 263: ' sont' (ID: 5242)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.8644513487815857
    2. '       ' → logprob: -0.9894513487815857
    3. '(' → logprob: -2.6144514083862305
    4. ' return' → logprob: -2.8644514083862305
    5. '((' → logprob: -3.6144514083862305
    6. ')' → logprob: -4.3644514083862305
    7. '   ' → logprob: -4.4894514083862305
    8. '(self' → logprob: -5.1144514083862305
    9. '(
' → logprob: -5.4894514083862305
    10. '           ' → logprob: -5.6144514083862305

Token 264: ' nécessaires' (ID: 74402)
  Prédit: 'bien'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bien' → logprob: -0.36269447207450867
    2. 'correct' → logprob: -1.737694501876831
    3. ' nécessaires' → logprob: -3.237694501876831
    4. ' bien' → logprob: -3.237694501876831
    5. ' correct' → logprob: -3.362694501876831
    6. 'né' → logprob: -5.612694263458252
    7. ' correctement' → logprob: -5.987694263458252
    8. 'necess' → logprob: -6.487694263458252
    9. 'appropr' → logprob: -6.862694263458252
    10. '()' → logprob: -6.987694263458252

Token 265: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.039669301360845566
    2. 'return' → logprob: -3.4146692752838135
    3. ' return' → logprob: -5.789669513702393
    4. '(' → logprob: -6.039669513702393
    5. '           ' → logprob: -8.789669036865234
    6. '   ' → logprob: -9.039669036865234
    7. ')' → logprob: -9.539669036865234
    8. '	' → logprob: -10.414669036865234
    9. '	return' → logprob: -10.539669036865234
    10. '      ' → logprob: -10.664669036865234

Token 266: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003833809634670615
    2. 'return' → logprob: -5.753833770751953
    3. ' return' → logprob: -7.878833770751953
    4. '           ' → logprob: -8.503833770751953
    5. '   ' → logprob: -10.753833770751953
    6. ')return' → logprob: -11.753833770751953
    7. '	return' → logprob: -12.003833770751953
    8. ')' → logprob: -12.128833770751953
    9. '      ' → logprob: -12.128833770751953
    10. '(' → logprob: -12.128833770751953

Token 267: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0008149892091751099
    2. ' return' → logprob: -7.500814914703369
    3. '       ' → logprob: -8.250815391540527
    4. '   ' → logprob: -15.125815391540527
    5. '(return' → logprob: -15.500815391540527
    6. '(' → logprob: -15.875815391540527
    7. ')return' → logprob: -16.12581443786621
    8. '	return' → logprob: -16.37581443786621
    9. '{return' → logprob: -16.87581443786621
    10. ':return' → logprob: -17.50081443786621

Token 268: ' self' (ID: 1051)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.11044705659151077
    2. ' (' → logprob: -2.3604471683502197
    3. 'self' → logprob: -4.985446929931641
    4. ' self' → logprob: -5.735446929931641
    5. '((' → logprob: -9.36044692993164
    6. '(' → logprob: -10.48544692993164
    7. '   ' → logprob: -12.61044692993164
    8. '(
' → logprob: -13.23544692993164
    9. ' ((' → logprob: -13.73544692993164
    10. ' ' → logprob: -13.98544692993164

Token 269: '.fact' (ID: 171436)
  Prédit: '.fact'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.fact' → logprob: -0.00022535098833031952
    2. '.fac' → logprob: -8.500225067138672
    3. '.' → logprob: -11.000225067138672
    4. 'fact' → logprob: -12.875225067138672
    5. ' .' → logprob: -13.250225067138672
    6. '.factor' → logprob: -14.500225067138672
    7. '.f' → logprob: -15.750225067138672
    8. '.fa' → logprob: -16.875225067138672
    9. '_fact' → logprob: -17.875225067138672
    10. '.fr' → logprob: -18.625225067138672

Token 270: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -5.512236498361744e-07
    2. 'n' → logprob: -14.750000953674316
    3. '[' → logprob: -16.875
    4. '(n' → logprob: -19.75
    5. ' [' → logprob: -19.875
    6. '	n' → logprob: -20.375
    7. '   ' → logprob: -21.25
    8. ' n' → logprob: -22.875
    9. '<n' → logprob: -23.0
    10. '```' → logprob: -23.25

Token 271: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00042447797022759914
    2. '   ' → logprob: -8.7504243850708
    3. '*' → logprob: -9.1254243850708
    4. ' ]' → logprob: -9.5004243850708
    5. ' *' → logprob: -10.1254243850708
    6. ']*' → logprob: -10.6254243850708
    7. '       ' → logprob: -12.1254243850708
    8. ' ' → logprob: -12.3754243850708
    9. ')' → logprob: -13.0004243850708
    10. '    ' → logprob: -13.3754243850708

Token 272: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.25240740180015564
    2. '*' → logprob: -1.502407431602478
    3. '*self' → logprob: -7.877407550811768
    4. '   ' → logprob: -9.75240707397461
    5. ' ' → logprob: -10.75240707397461
    6. ' ' → logprob: -12.00240707397461
    7. '    ' → logprob: -13.12740707397461
    8. ')' → logprob: -13.50240707397461
    9. '       ' → logprob: -13.62740707397461
    10. '  ' → logprob: -13.62740707397461

Token 273: ' self' (ID: 1051)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.04493897780776024
    2. 'self' → logprob: -3.4199390411376953
    3. ' (' → logprob: -5.044939041137695
    4. ' self' → logprob: -5.419939041137695
    5. '(' → logprob: -8.419939041137695
    6. '((' → logprob: -9.169939041137695
    7. '(
' → logprob: -10.919939041137695
    8. '   ' → logprob: -12.294939041137695
    9. '	self' → logprob: -12.794939041137695
    10. ' ((' → logprob: -13.419939041137695

Token 274: '.inv' (ID: 83561)
  Prédit: '.inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.inv' → logprob: -0.0723804384469986
    2. 'inv' → logprob: -2.947380542755127
    3. 'self' → logprob: -4.322380542755127
    4. '[self' → logprob: -5.822380542755127
    5. '.' → logprob: -7.822380542755127
    6. ' self' → logprob: -8.572380065917969
    7. ' inv' → logprob: -8.697380065917969
    8. '(self' → logprob: -9.447380065917969
    9. '(inv' → logprob: -9.572380065917969
    10. '```' → logprob: -10.447380065917969

Token 275: '[n' (ID: 15433)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -4.36574100604048e-06
    2. 'k' → logprob: -13.000004768371582
    3. '[n' → logprob: -13.125004768371582
    4. '[' → logprob: -18.000003814697266
    5. '(k' → logprob: -18.250003814697266
    6. '[self' → logprob: -18.250003814697266
    7. '{k' → logprob: -19.125003814697266
    8. '[key' → logprob: -19.500003814697266
    9. '```' → logprob: -19.625003814697266
    10. '[m' → logprob: -20.375003814697266

Token 276: '-k' (ID: 10897)
  Prédit: '-k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-k' → logprob: -0.010128362104296684
    2. ' -' → logprob: -4.635128498077393
    3. '[k' → logprob: -8.010128021240234
    4. ']' → logprob: -10.385128021240234
    5. 'k' → logprob: -12.635128021240234
    6. '-' → logprob: -12.635128021240234
    7. '-n' → logprob: -14.635128021240234
    8. ' k' → logprob: -14.885128021240234
    9. '   ' → logprob: -15.135128021240234
    10. '-m' → logprob: -15.260128021240234

Token 277: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00011427151912357658
    2. ']%' → logprob: -9.250114440917969
    3. ' ]' → logprob: -11.375114440917969
    4. '[' → logprob: -13.125114440917969
    5. ']*' → logprob: -13.625114440917969
    6. '']' → logprob: -13.625114440917969
    7. '   ' → logprob: -13.875114440917969
    8. '%' → logprob: -14.625114440917969
    9. '[k' → logprob: -16.12511444091797
    10. '][' → logprob: -16.37511444091797

Token 278: ' %' (ID: 1851)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.17750903964042664
    2. '%' → logprob: -2.302509069442749
    3. '*' → logprob: -3.552509069442749
    4. ' %' → logprob: -3.677509069442749
    5. '   ' → logprob: -4.92750883102417
    6. ' ' → logprob: -7.67750883102417
    7. '       ' → logprob: -8.052509307861328
    8. ' ' → logprob: -8.177509307861328
    9. '    ' → logprob: -9.052509307861328
    10. '  ' → logprob: -9.302509307861328

Token 279: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.005331828258931637
    2. ' self' → logprob: -5.380331993103027
    3. '(self' → logprob: -7.380331993103027
    4. '[self' → logprob: -10.630331993103027
    5. '       ' → logprob: -11.380331993103027
    6. 'MOD' → logprob: -11.505331993103027
    7. '*self' → logprob: -11.880331993103027
    8. '(' → logprob: -12.255331993103027
    9. 'mod' → logprob: -12.380331993103027
    10. ' ' → logprob: -12.505331993103027

Token 280: '.MOD' (ID: 141639)
  Prédit: '.MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.MOD' → logprob: -0.00018411019118502736
    2. 'MOD' → logprob: -8.625184059143066
    3. 'self' → logprob: -12.875184059143066
    4. '_MOD' → logprob: -14.625184059143066
    5. '.MODE' → logprob: -15.000184059143066
    6. ' MOD' → logprob: -15.000184059143066
    7. '   ' → logprob: -15.875184059143066
    8. '.MULT' → logprob: -16.000185012817383
    9. ' .' → logprob: -16.500185012817383
    10. '[self' → logprob: -16.750185012817383

Token 281: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.07282709330320358
    2. '*' → logprob: -2.697827100753784
    3. '   ' → logprob: -6.322826862335205
    4. '       ' → logprob: -7.072826862335205
    5. '*self' → logprob: -9.072827339172363
    6. ' ' → logprob: -9.322827339172363
    7. '  ' → logprob: -11.447827339172363
    8. ' ' → logprob: -12.072827339172363
    9. 'self' → logprob: -12.197827339172363
    10. '	' → logprob: -12.197827339172363

Token 282: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.018178856000304222
    2. ' self' → logprob: -4.018178939819336
    3. '(self' → logprob: -10.643178939819336
    4. '   ' → logprob: -13.143178939819336
    5. '	self' → logprob: -13.768178939819336
    6. '       ' → logprob: -14.143178939819336
    7. '[self' → logprob: -14.143178939819336
    8. ' ' → logprob: -15.143178939819336
    9. '*self' → logprob: -15.893178939819336
    10. '  ' → logprob: -16.393178939819336

Token 283: '.inv' (ID: 83561)
  Prédit: '.inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.inv' → logprob: -0.005008767358958721
    2. 'inv' → logprob: -5.380008697509766
    3. '.fact' → logprob: -9.005008697509766
    4. '[' → logprob: -9.380008697509766
    5. 'self' → logprob: -9.380008697509766
    6. '[self' → logprob: -9.880008697509766
    7. '.' → logprob: -11.130008697509766
    8. ' .' → logprob: -11.255008697509766
    9. 'fact' → logprob: -12.255008697509766
    10. '.fac' → logprob: -13.380008697509766

Token 284: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -1.5048530030981055e-06
    2. 'k' → logprob: -13.500001907348633
    3. '[' → logprob: -17.125001907348633
    4. '[n' → logprob: -18.375001907348633
    5. ' [' → logprob: -18.375001907348633
    6. '{k' → logprob: -19.875001907348633
    7. '(k' → logprob: -20.000001907348633
    8. '   ' → logprob: -20.750001907348633
    9. '[
' → logprob: -20.875001907348633
    10. '```' → logprob: -21.125001907348633

Token 285: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002680413890630007
    2. ']%' → logprob: -6.00268030166626
    3. ' ]' → logprob: -8.627680778503418
    4. '[k' → logprob: -11.377680778503418
    5. '%' → logprob: -12.002680778503418
    6. '[n' → logprob: -12.252680778503418
    7. '   ' → logprob: -14.002680778503418
    8. '[' → logprob: -14.502680778503418
    9. '%n' → logprob: -14.627680778503418
    10. '']' → logprob: -15.002680778503418

Token 286: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.5759778022766113
    2. ' %' → logprob: -0.8259778022766113
    3. '%n' → logprob: -11.450977325439453
    4. ')%' → logprob: -11.575977325439453
    5. ' ' → logprob: -12.450977325439453
    6. ')' → logprob: -12.450977325439453
    7. '   ' → logprob: -12.450977325439453
    8. ' ' → logprob: -13.825977325439453
    9. ' %=' → logprob: -14.075977325439453
    10. '	' → logprob: -14.325977325439453

Token 287: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0009134899592027068
    2. ' self' → logprob: -7.000913619995117
    3. '(self' → logprob: -13.125913619995117
    4. '   ' → logprob: -19.625913619995117
    5. '	self' → logprob: -19.625913619995117
    6. '[self' → logprob: -20.250913619995117
    7. '       ' → logprob: -20.500913619995117
    8. '
' → logprob: -20.875913619995117
    9. ' ' → logprob: -21.375913619995117
    10. '```' → logprob: -22.250913619995117

Token 288: '.MOD' (ID: 141639)
  Prédit: '.MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.MOD' → logprob: -0.00016349162615370005
    2. 'MOD' → logprob: -8.750163078308105
    3. '.' → logprob: -12.875163078308105
    4. '.MODE' → logprob: -13.625163078308105
    5. '_MOD' → logprob: -14.625163078308105
    6. ' .' → logprob: -14.625163078308105
    7. ' MOD' → logprob: -15.750163078308105
    8. '.Mod' → logprob: -16.375164031982422
    9. 'self' → logprob: -18.125164031982422
    10. '
' → logprob: -18.500164031982422

Token 289: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 290: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 291: ' ok' (ID: 4763)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 292: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 293: ' lecture' (ID: 31993)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 294: ' des' (ID: 731)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.696221113204956
    2. '[' → logprob: -2.196221113204956
    3. '#' → logprob: -2.321221113204956
    4. '<|end|>' → logprob: -2.696221113204956
    5. '<|end|>' → logprob: -3.196221113204956
    6. '(' → logprob: -3.821221113204956
    7. ' =' → logprob: -4.071221351623535
    8. '()' → logprob: -4.196221351623535
    9. ':' → logprob: -4.196221351623535
    10. 'n' → logprob: -4.321221351623535

Token 295: ' inputs' (ID: 21963)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3885076940059662
    2. 'inputs' → logprob: -2.388507604598999
    3. 'stdin' → logprob: -2.888507604598999
    4. 'f' → logprob: -3.138507604598999
    5. 'input' → logprob: -3.263507604598999
    6. 'don' → logprob: -3.388507604598999
    7. 'l' → logprob: -4.013507843017578
    8. 'datas' → logprob: -4.513507843017578
    9. 'data' → logprob: -5.138507843017578
    10. '```' → logprob: -5.513507843017578

Token 296: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.003716819453984499
    2. 't' → logprob: -7.128716945648193
    3. '
' → logprob: -7.128716945648193
    4. '\n' → logprob: -7.253716945648193
    5. 'a' → logprob: -8.628716468811035
    6. '(n' → logprob: -8.878716468811035
    7. 'input' → logprob: -9.128716468811035
    8. 'import' → logprob: -9.253716468811035
    9. '<|end|>' → logprob: -9.253716468811035
    10. '```' → logprob: -9.378716468811035

Token 297: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.6166903151315637e-05
    2. 't' → logprob: -11.625016212463379
    3. 'import' → logprob: -13.125016212463379
    4. 'N' → logprob: -13.500016212463379
    5. ' n' → logprob: -13.500016212463379
    6. '\n' → logprob: -14.250016212463379
    7. 'a' → logprob: -14.500016212463379
    8. 'input' → logprob: -16.000015258789062
    9. '```' → logprob: -16.000015258789062
    10. '(n' → logprob: -16.000015258789062

Token 298: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18917366862297058
    2. ' =' → logprob: -1.814173698425293
    3. '=' → logprob: -5.064173698425293
    4. ' ,' → logprob: -5.814173698425293
    5. '=input' → logprob: -10.689173698425293
    6. ' ' → logprob: -11.439173698425293
    7. ',n' → logprob: -11.689173698425293
    8. ',input' → logprob: -11.814173698425293
    9. '=int' → logprob: -11.939173698425293
    10. ')' → logprob: -12.314173698425293

Token 299: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.029754308983683586
    2. ' int' → logprob: -3.529754400253296
    3. '10' → logprob: -12.904754638671875
    4. ' ' → logprob: -14.404754638671875
    5. '0' → logprob: -15.029754638671875
    6. '=int' → logprob: -16.029754638671875
    7. '[int' → logprob: -16.279754638671875
    8. '(int' → logprob: -16.279754638671875
    9. 'input' → logprob: -16.404754638671875
    10. '100' → logprob: -17.154754638671875

Token 300: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.000317231344524771
    2. '(' → logprob: -8.375317573547363
    3. '()' → logprob: -9.750317573547363
    4. 'input' → logprob: -10.500317573547363
    5. '=input' → logprob: -15.000317573547363
    6. '(
' → logprob: -15.250317573547363
    7. ' input' → logprob: -17.125316619873047
    8. ' (' → logprob: -17.500316619873047
    9. '(

' → logprob: -17.500316619873047
    10. '(in' → logprob: -18.000316619873047

Token 301: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0011813003802672029
    2. '()' → logprob: -6.751181125640869
    3. '())
' → logprob: -11.876181602478027
    4. '().' → logprob: -12.876181602478027
    5. ' ())' → logprob: -14.126181602478027
    6. '()
' → logprob: -15.626181602478027
    7. '(' → logprob: -15.626181602478027
    8. '())

' → logprob: -16.00118064880371
    9. ')' → logprob: -16.12618064880371
    10. '();)' → logprob: -16.37618064880371

Token 302: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2575811743736267
    2. 'arr' → logprob: -2.5075812339782715
    3. 'k' → logprob: -2.6325812339782715
    4. 'lst' → logprob: -3.7575812339782715
    5. 's' → logprob: -4.6325812339782715
    6. 'comb' → logprob: -4.8825812339782715
    7. 'A' → logprob: -5.3825812339782715
    8. 'm' → logprob: -5.3825812339782715
    9. 'l' → logprob: -5.5075812339782715
    10. 'p' → logprob: -5.5075812339782715

Token 303: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9458972811698914
    2. 's' → logprob: -1.1958973407745361
    3. '=' → logprob: -1.4458973407745361
    4. 'rray' → logprob: -2.945897340774536
    5. 'rr' → logprob: -4.195897102355957
    6. 'r' → logprob: -6.570897102355957
    7. 'a' → logprob: -7.445897102355957
    8. ' ' → logprob: -7.445897102355957
    9. '_values' → logprob: -7.695897102355957
    10. '_arr' → logprob: -7.820897102355957

Token 304: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.019514573737978935
    2. '[input' → logprob: -4.769514560699463
    3. '[list' → logprob: -5.269514560699463
    4. ' list' → logprob: -5.769514560699463
    5. 'input' → logprob: -6.894514560699463
    6. '[' → logprob: -7.144514560699463
    7. '[int' → logprob: -7.394514560699463
    8. '[]' → logprob: -9.394515037536621
    9. ' [' → logprob: -10.144515037536621
    10. '[n' → logprob: -10.769515037536621

Token 305: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.00026538874953985214
    2. '(' → logprob: -8.250265121459961
    3. '()' → logprob: -13.000265121459961
    4. '(input' → logprob: -14.375265121459961
    5. '(int' → logprob: -14.500265121459961
    6. '(range' → logprob: -14.625265121459961
    7. 'map' → logprob: -15.375265121459961
    8. '(
' → logprob: -17.00026512145996
    9. '(m' → logprob: -17.50026512145996
    10. '.map' → logprob: -17.62526512145996

Token 306: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0013563097454607487
    2. 'int' → logprob: -6.87635612487793
    3. '(input' → logprob: -8.50135612487793
    4. '(' → logprob: -9.37635612487793
    5. '(str' → logprob: -12.00135612487793
    6. 'input' → logprob: -12.12635612487793
    7. ',int' → logprob: -12.37635612487793
    8. '<int' → logprob: -12.37635612487793
    9. '=int' → logprob: -12.50135612487793
    10. '```' → logprob: -12.75135612487793

Token 307: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.13724571466445923
    2. ',' → logprob: -2.1372456550598145
    3. '(input' → logprob: -5.0122456550598145
    4. 'input' → logprob: -5.6372456550598145
    5. '(' → logprob: -11.137246131896973
    6. ' ,' → logprob: -11.512246131896973
    7. '(),' → logprob: -12.137246131896973
    8. '=input' → logprob: -12.387246131896973
    9. '   ' → logprob: -12.637246131896973
    10. '```' → logprob: -13.137246131896973

Token 308: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -1.676292231422849e-05
    2. ' input' → logprob: -11.000017166137695
    3. '(input' → logprob: -19.625017166137695
    4. '<input' → logprob: -21.000017166137695
    5. ',input' → logprob: -21.250017166137695
    6. '=input' → logprob: -21.750017166137695
    7. '	input' → logprob: -22.250017166137695
    8. '
' → logprob: -22.625017166137695
    9. '_input' → logprob: -22.625017166137695
    10. ' ' → logprob: -22.875017166137695

Token 309: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00020473242329899222
    2. '()' → logprob: -8.500205039978027
    3. '(' → logprob: -14.750205039978027
    4. ' ().' → logprob: -15.250205039978027
    5. 'input' → logprob: -15.375205039978027
    6. '()
' → logprob: -16.75020408630371
    7. '.' → logprob: -17.00020408630371
    8. '   ' → logprob: -17.12520408630371
    9. ' .' → logprob: -17.25020408630371
    10. '.split' → logprob: -17.37520408630371

Token 310: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00015872348740231246
    2. 'strip' → logprob: -8.750158309936523
    3. ' split' → logprob: -16.125158309936523
    4. '(split' → logprob: -16.500158309936523
    5. 'rstrip' → logprob: -17.000158309936523
    6. 'spl' → logprob: -18.625158309936523
    7. '.split' → logprob: -21.375158309936523
    8. ')' → logprob: -21.500158309936523
    9. 's' → logprob: -21.625158309936523
    10. '().' → logprob: -22.500158309936523

Token 311: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.0249166302382946
    2. '()' → logprob: -3.774916648864746
    3. '())' → logprob: -7.024916648864746
    4. '))' → logprob: -7.399916648864746
    5. '(' → logprob: -9.149916648864746
    6. '().' → logprob: -11.024916648864746
    7. '()));' → logprob: -11.024916648864746
    8. '(),' → logprob: -11.399916648864746
    9. '()))
' → logprob: -11.649916648864746
    10. '())))' → logprob: -12.274916648864746

Token 312: 'MOD' (ID: 52135)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.31540700793266296
    2. 'max' → logprob: -3.1904070377349854
    3. 'count' → logprob: -3.3154070377349854
    4. 'm' → logprob: -3.4404070377349854
    5. 'cnt' → logprob: -3.9404070377349854
    6. 'from' → logprob: -4.065406799316406
    7. '#' → logprob: -4.065406799316406
    8. 'total' → logprob: -4.065406799316406
    9. 'dp' → logprob: -4.315406799316406
    10. 'counts' → logprob: -4.440406799316406

Token 313: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12692958116531372
    2. '=' → logprob: -2.126929521560669
    3. '=int' → logprob: -13.75192928314209
    4. ' =)' → logprob: -15.62692928314209
    5. ',' → logprob: -15.75192928314209
    6. ' =
' → logprob: -17.126930236816406
    7. ')' → logprob: -17.251930236816406
    8. ' ' → logprob: -17.376930236816406
    9. '＝' → logprob: -17.751930236816406
    10. ' =
' → logprob: -17.876930236816406

Token 314: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.017352303490042686
    2. '100' → logprob: -4.267352104187012
    3. '998' → logprob: -5.767352104187012
    4. ' ' → logprob: -9.892352104187012
    5. '1' → logprob: -12.267352104187012
    6. '999' → logprob: -15.017352104187012
    7. '(' → logprob: -16.642353057861328
    8. '１０' → logprob: -17.017353057861328
    9. '109' → logprob: -17.267353057861328
    10. '   ' → logprob: -17.267353057861328

Token 315: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.009875788353383541
    2. '100' → logprob: -5.009875774383545
    3. '998' → logprob: -5.759875774383545
    4. '1' → logprob: -12.759876251220703
    5. ' ' → logprob: -14.634876251220703
    6. '999' → logprob: -15.259876251220703
    7. '(' → logprob: -15.259876251220703
    8. 'int' → logprob: -16.134876251220703
    9. '１０' → logprob: -17.384876251220703
    10. '109' → logprob: -17.759876251220703

Token 316: ' **' (ID: 6240)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0002210596576333046
    2. '09' → logprob: -8.500221252441406
    3. '**' → logprob: -11.375221252441406
    4. '```' → logprob: -12.625221252441406
    5. '000' → logprob: -13.375221252441406
    6. '+' → logprob: -14.500221252441406
    7. '009' → logprob: -15.000221252441406
    8. '_' → logprob: -15.125221252441406
    9. '``' → logprob: -17.125221252441406
    10. '7' → logprob: -17.250221252441406

Token 317: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.9361264946837764e-07
    2. '09' → logprob: -15.75
    3. '```' → logprob: -20.5
    4. '+' → logprob: -20.875
    5. ' ' → logprob: -23.0
    6. '10' → logprob: -23.125
    7. '18' → logprob: -24.0
    8. '   ' → logprob: -24.125
    9. '6' → logprob: -24.5
    10. '``' → logprob: -24.625

Token 318: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -3.128163257315464e-07
    2. '09' → logprob: -15.5
    3. '```' → logprob: -20.125
    4. '+' → logprob: -22.625
    5. '   ' → logprob: -24.375
    6. '９' → logprob: -24.625
    7. ' ' → logprob: -24.625
    8. '``' → logprob: -24.875
    9. '18' → logprob: -25.75
    10. '
' → logprob: -25.875

Token 319: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.000145137935760431
    2. '7' → logprob: -9.000144958496094
    3. ' +' → logprob: -10.750144958496094
    4. '```' → logprob: -16.500144958496094
    5. '＋' → logprob: -16.625144958496094
    6. '+
' → logprob: -16.875144958496094
    7. 'plus' → logprob: -18.250144958496094
    8. ' plus' → logprob: -19.750144958496094
    9. 'Plus' → logprob: -20.000144958496094
    10. ' ' → logprob: -20.000144958496094

Token 320: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. ' ' → logprob: -21.875
    3. '+' → logprob: -22.375
    4. '```' → logprob: -23.0
    5. '07' → logprob: -23.75
    6. '9' → logprob: -24.625
    7. '   ' → logprob: -25.0
    8. '

' → logprob: -25.125
    9. '７' → logprob: -25.625
    10. '
' → logprob: -25.75

Token 321: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '07' → logprob: -22.875
    3. '```' → logprob: -23.375
    4. '+' → logprob: -24.0
    5. ' ' → logprob: -24.125
    6. '７' → logprob: -24.875
    7. '' → logprob: -25.5
    8. '۷' → logprob: -25.5
    9. '

' → logprob: -25.75
    10. '٧' → logprob: -26.0

Token 322: '

' (ID: 279)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.013033286668360233
    2. 'c' → logprob: -5.013033390045166
    3. 'max' → logprob: -6.138033390045166
    4. 'class' → logprob: -6.263033390045166
    5. 'count' → logprob: -6.888033390045166
    6. 'com' → logprob: -8.513032913208008
    7. 'cnt' → logprob: -8.638032913208008
    8. 'cmb' → logprob: -8.638032913208008
    9. 'from' → logprob: -9.263032913208008
    10. 'm' → logprob: -9.388032913208008

Token 323: 'comb' (ID: 43606)
  Prédit: 'comb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.006629758980125189
    2. 'c' → logprob: -5.381629943847656
    3. 'cmb' → logprob: -7.381629943847656
    4. 'cb' → logprob: -7.506629943847656
    5. 'count' → logprob: -8.006629943847656
    6. 'com' → logprob: -8.756629943847656
    7. 'combo' → logprob: -9.006629943847656
    8. 'max' → logprob: -10.256629943847656
    9. 'cnt' → logprob: -10.506629943847656
    10. 'from' → logprob: -10.756629943847656

Token 324: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06196993216872215
    2. ' =' → logprob: -2.8119699954986572
    3. 'ination' → logprob: -13.686969757080078
    4. 'o' → logprob: -14.186969757080078
    5. '```' → logprob: -16.061969757080078
    6. ')' → logprob: -16.561969757080078
    7. ' ' → logprob: -17.061969757080078
    8. '=new' → logprob: -17.311969757080078
    9. ' ' → logprob: -17.686969757080078
    10. '1' → logprob: -17.686969757080078

Token 325: ' Comb' (ID: 37810)
  Prédit: 'Comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Comb' → logprob: -0.001170225441455841
    2. ' Comb' → logprob: -6.7511701583862305
    3. 'Com' → logprob: -18.001171112060547
    4. 'comb' → logprob: -18.251171112060547
    5. 'Combo' → logprob: -18.501171112060547
    6. ' comb' → logprob: -20.001171112060547
    7. '_comb' → logprob: -20.876171112060547
    8. 'C' → logprob: -22.126171112060547
    9. 'Combine' → logprob: -22.126171112060547
    10. 'Combined' → logprob: -22.626171112060547

Token 326: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.002766836667433381
    2. '(' → logprob: -6.0027666091918945
    3. '(max' → logprob: -8.252766609191895
    4. '(len' → logprob: -10.627766609191895
    5. 'n' → logprob: -12.127766609191895
    6. '(
' → logprob: -14.627766609191895
    7. 'max' → logprob: -16.12776756286621
    8. '100' → logprob: -16.25276756286621
    9. '((' → logprob: -16.25276756286621
    10. '(k' → logprob: -16.50276756286621

Token 327: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020139472326263785
    2. ',n' → logprob: -9.000201225280762
    3. ')' → logprob: -10.000201225280762
    4. ' ,' → logprob: -10.750201225280762
    5. '-' → logprob: -11.750201225280762
    6. ' -' → logprob: -13.250201225280762
    7. ',
' → logprob: -15.000201225280762
    8. ',)' → logprob: -15.625201225280762
    9. '```' → logprob: -15.875201225280762
    10. ' ' → logprob: -16.250202178955078

Token 328: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -6.704273118884885e-07
    2. ' MOD' → logprob: -14.250000953674316
    3. '10' → logprob: -19.875
    4. '100' → logprob: -22.125
    5. '   ' → logprob: -22.625
    6. 'MO' → logprob: -23.0
    7. '_MOD' → logprob: -23.25
    8. 'MODE' → logprob: -24.25
    9. '```' → logprob: -24.375
    10. '.MOD' → logprob: -24.375

Token 329: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. ')
' → logprob: -16.75
    3. ' )' → logprob: -17.625
    4. ')

' → logprob: -18.75
    5. ')`' → logprob: -18.75
    6. '))' → logprob: -19.25
    7. ')#' → logprob: -19.625
    8. '),' → logprob: -19.75
    9. ')
' → logprob: -20.5
    10. ').' → logprob: -21.125

Token 330: '#' (ID: 2)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5168260335922241
    2. 'count' → logprob: -1.5168260335922241
    3. 'freq' → logprob: -2.5168261528015137
    4. 'counts' → logprob: -3.3918261528015137
    5. 'cnt' → logprob: -3.6418261528015137
    6. 'total' → logprob: -4.391826152801514
    7. 'res' → logprob: -4.891826152801514
    8. 'from' → logprob: -4.891826152801514
    9. 'max' → logprob: -5.016826152801514
    10. 'counter' → logprob: -6.516826152801514

Token 331: ' On' (ID: 2160)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6863316893577576
    2. 'count' → logprob: -1.8113317489624023
    3. 'from' → logprob: -1.9363317489624023
    4. 'freq' → logprob: -2.4363317489624023
    5. 'cnt' → logprob: -3.4363317489624023
    6. 'counts' → logprob: -3.4363317489624023
    7. 'res' → logprob: -4.561331748962402
    8. 'total' → logprob: -4.936331748962402
    9. 'counter' → logprob: -5.686331748962402
    10. '#' → logprob: -5.936331748962402

Token 332: ' essa' (ID: 19417)
  Prédit: 'freq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'freq' → logprob: -0.47436589002609253
    2. 'count' → logprob: -1.2243659496307373
    3. 'cnt' → logprob: -3.8493659496307373
    4. '#' → logprob: -3.8493659496307373
    5. 'counts' → logprob: -4.599365711212158
    6. 'a' → logprob: -4.849365711212158
    7. 'counter' → logprob: -5.099365711212158
    8. 'from' → logprob: -5.599365711212158
    9. 'max' → logprob: -5.724365711212158
    10. 'c' → logprob: -6.224365711212158

Token 333: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.6594451665878296
    2. 'ye' → logprob: -1.1594451665878296
    3. 'y' → logprob: -1.7844451665878296
    4. 'yer' → logprob: -8.284444808959961
    5. 'yed' → logprob: -9.034444808959961
    6. 'yage' → logprob: -9.409444808959961
    7. 'yre' → logprob: -9.534444808959961
    8. 'yez' → logprob: -9.659444808959961
    9. 'iye' → logprob: -9.659444808959961
    10. 'i' → logprob: -9.784444808959961

Token 334: ' de' (ID: 334)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9456282258033752
    2. 'd' → logprob: -1.3206281661987305
    3. 'de' → logprob: -1.3206281661987305
    4. ' de' → logprob: -3.0706281661987305
    5. 'to' → logprob: -5.0706281661987305
    6. 'for' → logprob: -5.0706281661987305
    7. ' d' → logprob: -5.4456281661987305
    8. 'of' → logprob: -5.8206281661987305
    9. ':
' → logprob: -5.9456281661987305
    10. '=' → logprob: -6.8206281661987305

Token 335: ' faire' (ID: 8119)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.4117835462093353
    2. 'com' → logprob: -1.4117835760116577
    3. 'calcul' → logprob: -3.286783456802368
    4. 'comp' → logprob: -4.036783695220947
    5. ' compter' → logprob: -4.661783695220947
    6. 'count' → logprob: -4.911783695220947
    7. 'faire' → logprob: -5.911783695220947
    8. 'max' → logprob: -5.911783695220947
    9. 'voir' → logprob: -6.161783695220947
    10. 'placer' → logprob: -6.536783695220947

Token 336: ' comme' (ID: 7971)
  Prédit: 'quel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'quel' → logprob: -0.03890743851661682
    2. 'q' → logprob: -4.663907527923584
    3. 'something' → logprob: -4.663907527923584
    4. 'une' → logprob: -5.038907527923584
    5. ' quelque' → logprob: -5.163907527923584
    6. 'qq' → logprob: -6.788907527923584
    7. '#' → logprob: -7.038907527923584
    8. 'un' → logprob: -7.663907527923584
    9. '...' → logprob: -7.788907527923584
    10. 'print' → logprob: -7.788907527923584

Token 337: ' dans' (ID: 2671)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'en' → logprob: -1.5330944061279297
    2. 'dans' → logprob: -1.9080944061279297
    3. 'si' → logprob: -2.0330944061279297
    4. 'le' → logprob: -2.0330944061279297
    5. 'ce' → logprob: -2.6580944061279297
    6. 'cela' → logprob: -2.7830944061279297
    7. 'au' → logprob: -3.1580944061279297
    8. 'ça' → logprob: -3.4080944061279297
    9. 'possible' → logprob: -3.7830944061279297
    10. 'python' → logprob: -4.03309440612793

Token 338: ' l' (ID: 305)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.6436561346054077
    2. 'la' → logprob: -1.6436561346054077
    3. 'les' → logprob: -2.2686562538146973
    4. 'pro' → logprob: -3.2686562538146973
    5. 'l' → logprob: -3.3936562538146973
    6. 'd' → logprob: -3.6436562538146973
    7. '#' → logprob: -3.8936562538146973
    8. 'At' → logprob: -4.893656253814697
    9. 'dp' → logprob: -5.018656253814697
    10. 'range' → logprob: -5.018656253814697

Token 339: ''' (ID: 6)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3169577121734619
    2. 'e' → logprob: -1.691957712173462
    3. ''' → logprob: -3.441957712173462
    4. 'problem' → logprob: -4.441957473754883
    5. 'ast' → logprob: -4.816957473754883
    6. '#' → logprob: -5.566957473754883
    7. 'es' → logprob: -5.691957473754883
    8. 'input' → logprob: -5.941957473754883
    9. ''a' → logprob: -6.191957473754883
    10. ''en' → logprob: -6.441957473754883

Token 340: 'én' (ID: 3289)
  Prédit: 'én'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'én' → logprob: -1.3579986095428467
    2. 'code' → logprob: -1.9829986095428467
    3. 'description' → logprob: -2.4829986095428467
    4. 'pro' → logprob: -2.4829986095428467
    5. 'en' → logprob: -2.7329986095428467
    6. 'problem' → logprob: -2.7329986095428467
    7. 'statement' → logprob: -2.9829986095428467
    8. 'comment' → logprob: -3.3579986095428467
    9. 'ex' → logprob: -3.8579986095428467
    10. 'C' → logprob: -3.9829986095428467

Token 341: 'oncé' (ID: 59071)
  Prédit: 'oncé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oncé' → logprob: -0.37590014934539795
    2. 'once' → logprob: -1.250900149345398
    3. 'um' → logprob: -4.0009002685546875
    4. 'ig' → logprob: -5.5009002685546875
    5. 'onc' → logprob: -6.0009002685546875
    6. 'nonce' → logprob: -7.3759002685546875
    7. 'on' → logprob: -7.7509002685546875
    8. 'un' → logprob: -8.125900268554688
    9. 'oncer' → logprob: -8.250900268554688
    10. 'non' → logprob: -8.875900268554688

Token 342: '...
' (ID: 4908)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.1561310291290283
    2. 'counts' → logprob: -1.7811310291290283
    3. 'freq' → logprob: -2.0311310291290283
    4. 'dp' → logprob: -2.2811310291290283
    5. 'from' → logprob: -2.2811310291290283
    6. 'max' → logprob: -3.1561310291290283
    7. 'res' → logprob: -3.6561310291290283
    8. 'cnt' → logprob: -3.6561310291290283
    9. 'a' → logprob: -3.9061310291290283
    10. '#' → logprob: -4.156130790710449

Token 343: 'something' (ID: 64493)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.1147756576538086
    2. 'freq' → logprob: -1.6147756576538086
    3. 'from' → logprob: -2.1147756576538086
    4. 'a' → logprob: -2.4897756576538086
    5. 'counts' → logprob: -2.6147756576538086
    6. 'dp' → logprob: -2.6147756576538086
    7. 'cnt' → logprob: -2.7397756576538086
    8. '#' → logprob: -4.239775657653809
    9. 'res' → logprob: -4.739775657653809
    10. 'sorted' → logprob: -4.739775657653809

Token 344: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.23707237839698792
    2. ' =' → logprob: -1.6120723485946655
    3. '.' → logprob: -6.612072467803955
    4. '.sort' → logprob: -6.737072467803955
    5. 'for' → logprob: -6.987072467803955
    6. 's' → logprob: -7.112072467803955
    7. '_count' → logprob: -7.112072467803955
    8. 'max' → logprob: -7.237072467803955
    9. 'count' → logprob: -7.237072467803955
    10. 'a' → logprob: -7.362072467803955

Token 345: ' [' (ID: 723)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.7683142423629761
    2. '0' → logprob: -1.143314242362976
    3. '1' → logprob: -1.643314242362976
    4. 'sum' → logprob: -4.268314361572266
    5. '[' → logprob: -5.268314361572266
    6. 'com' → logprob: -7.018314361572266
    7. ' comb' → logprob: -7.143314361572266
    8. 'n' → logprob: -7.393314361572266
    9. '[]' → logprob: -7.518314361572266
    10. '{}' → logprob: -8.018314361572266

Token 346: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.805981972021982e-05
    2. '1' → logprob: -9.87509822845459
    3. ']' → logprob: -11.37509822845459
    4. 'a' → logprob: -11.75009822845459
    5. '(' → logprob: -12.00009822845459
    6. '[' → logprob: -12.50009822845459
    7. 'n' → logprob: -12.50009822845459
    8. 'comb' → logprob: -12.75009822845459
    9. ' ' → logprob: -13.00009822845459
    10. 'False' → logprob: -13.12509822845459

Token 347: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0008955012308433652
    2. ']*(' → logprob: -7.7508955001831055
    3. ']*' → logprob: -8.125895500183105
    4. ' for' → logprob: -9.375895500183105
    5. 'for' → logprob: -9.875895500183105
    6. ' ]' → logprob: -10.625895500183105
    7. ']+' → logprob: -12.875895500183105
    8. ')]' → logprob: -13.000895500183105
    9. ',' → logprob: -13.500895500183105
    10. '()]' → logprob: -14.125895500183105

Token 348: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00023691373644396663
    2. '_range' → logprob: -9.000236511230469
    3. ' _' → logprob: -10.250236511230469
    4. ' range' → logprob: -10.375236511230469
    5. 'range' → logprob: -10.500236511230469
    6. '_i' → logprob: -11.625236511230469
    7. 'i' → logprob: -12.250236511230469
    8. ' in' → logprob: -13.125236511230469
    9. '_in' → logprob: -13.500236511230469
    10. ' i' → logprob: -14.000236511230469

Token 349: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.10530081391334534
    2. 'in' → logprob: -2.3553009033203125
    3. ' in' → logprob: -5.4803009033203125
    4. ' range' → logprob: -7.1053009033203125
    5. '(range' → logprob: -10.355300903320312
    6. 'n' → logprob: -10.480300903320312
    7. 'a' → logprob: -11.105300903320312
    8. 'ange' → logprob: -11.730300903320312
    9. 'i' → logprob: -12.480300903320312
    10. '	range' → logprob: -13.730300903320312

Token 350: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0007117166533134878
    2. ' range' → logprob: -7.500711917877197
    3. 'a' → logprob: -8.750711441040039
    4. ' ' → logprob: -16.25071144104004
    5. ' a' → logprob: -16.75071144104004
    6. '   ' → logprob: -16.75071144104004
    7. 'r' → logprob: -17.37571144104004
    8. '  ' → logprob: -17.37571144104004
    9. '(range' → logprob: -17.62571144104004
    10. 'rang' → logprob: -17.62571144104004

Token 351: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00023071514442563057
    2. '(' → logprob: -9.00023078918457
    3. 'n' → logprob: -9.25023078918457
    4. '(range' → logprob: -12.62523078918457
    5. '(len' → logprob: -12.87523078918457
    6. '(a' → logprob: -13.12523078918457
    7. '((' → logprob: -13.25023078918457
    8. 'range' → logprob: -14.12523078918457
    9. ' (' → logprob: -14.62523078918457
    10. 'a' → logprob: -15.62523078918457

Token 352: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0022590947337448597
    2. '+' → logprob: -6.127259254455566
    3. ')]
' → logprob: -10.127259254455566
    4. ' )' → logprob: -11.002259254455566
    5. ')' → logprob: -11.502259254455566
    6. ']' → logprob: -13.127259254455566
    7. ' +' → logprob: -13.377259254455566
    8. ')]
' → logprob: -14.252259254455566
    9. ')]

' → logprob: -14.377259254455566
    10. ')])' → logprob: -14.752259254455566

Token 353: 'something' (ID: 64493)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06951817125082016
    2. 'sum' → logprob: -3.9445180892944336
    3. 'max' → logprob: -4.569518089294434
    4. ' for' → logprob: -4.694518089294434
    5. 'i' → logprob: -5.444518089294434
    6. '#' → logprob: -5.569518089294434
    7. 's' → logprob: -5.569518089294434
    8. 'prefix' → logprob: -5.569518089294434
    9. 'count' → logprob: -5.819518089294434
    10. 'total' → logprob: -6.569518089294434

Token 354: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0596667118370533
    2. '<|end|>' → logprob: -3.934666633605957
    3. '=' → logprob: -4.309666633605957
    4. ']' → logprob: -4.434666633605957
    5. ' =' → logprob: -5.434666633605957
    6. '[n' → logprob: -5.434666633605957
    7. ')' → logprob: -6.809666633605957
    8. '[:]' → logprob: -6.934666633605957
    9. '[-' → logprob: -7.684666633605957
    10. '0' → logprob: -8.434666633605957

Token 355: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002602629829198122
    2. 'n' → logprob: -8.875260353088379
    3. '-' → logprob: -9.750260353088379
    4. 'a' → logprob: -10.625260353088379
    5. '1' → logprob: -10.875260353088379
    6. ' ' → logprob: -11.375260353088379
    7. ']' → logprob: -12.875260353088379
    8. '(' → logprob: -13.500260353088379
    9. '[' → logprob: -14.250260353088379
    10. ' -' → logprob: -14.375260353088379

Token 356: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00045557913836091757
    2. ' ]' → logprob: -7.750455379486084
    3. ']=' → logprob: -10.625455856323242
    4. ']+=' → logprob: -15.125455856323242
    5. '=' → logprob: -16.125455856323242
    6. ')]' → logprob: -16.250455856323242
    7. ']
' → logprob: -16.875455856323242
    8. '()]' → logprob: -17.250455856323242
    9. ')' → logprob: -17.625455856323242
    10. ']>' → logprob: -17.625455856323242

Token 357: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.033663567155599594
    2. ' =' → logprob: -3.408663511276245
    3. '+=' → logprob: -12.533663749694824
    4. ']' → logprob: -13.158663749694824
    5. ',' → logprob: -13.158663749694824
    6. ']=' → logprob: -13.283663749694824
    7. '=
' → logprob: -13.658663749694824
    8. '=True' → logprob: -14.033663749694824
    9. '=int' → logprob: -14.033663749694824
    10. '<|end|>' → logprob: -14.033663749694824

Token 358: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11358939111232758
    2. 'a' → logprob: -2.238589286804199
    3. 'comb' → logprob: -7.988589286804199
    4. '0' → logprob: -8.8635892868042
    5. '(' → logprob: -9.3635892868042
    6. 'pow' → logprob: -9.4885892868042
    7. 'n' → logprob: -10.1135892868042
    8. '(a' → logprob: -10.1135892868042
    9. '2' → logprob: -11.2385892868042
    10. ' ' → logprob: -12.1135892868042

Token 359: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.43071985244750977
    2. 'a' → logprob: -1.0557198524475098
    3. '(' → logprob: -7.55571985244751
    4. 'pow' → logprob: -7.80571985244751
    5. '0' → logprob: -7.93071985244751
    6. '(a' → logprob: -8.055719375610352
    7. 'comb' → logprob: -8.180719375610352
    8. 'n' → logprob: -10.305719375610352
    9. '2' → logprob: -10.305719375610352
    10. 'max' → logprob: -11.930719375610352

Token 360: ' ' (ID: 220)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11972256749868393
    2. ' for' → logprob: -2.244722604751587
    3. '
' → logprob: -5.119722366333008
    4. '<|end|>' → logprob: -7.619722366333008
    5. 'something' → logprob: -8.369722366333008
    6. ' something' → logprob: -10.494722366333008
    7. ' 
' → logprob: -10.744722366333008
    8. 'i' → logprob: -11.119722366333008
    9. '```' → logprob: -11.369722366333008
    10. ')' → logprob: -11.369722366333008

Token 361: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 362: ' je' (ID: 1264)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 363: ' sais' (ID: 30010)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 364: ' plus' (ID: 2932)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 365: ' si' (ID: 1784)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3999437093734741
    2. '<|end|>' → logprob: -1.1499437093734741
    3. '
' → logprob: -6.024943828582764
    4. '<|end|>' → logprob: -6.274943828582764
    5. '[' → logprob: -6.649943828582764
    6. '  ' → logprob: -6.899943828582764
    7. '+' → logprob: -7.149943828582764
    8. ' ' → logprob: -7.149943828582764
    9. '#' → logprob: -7.274943828582764
    10. ' for' → logprob: -7.274943828582764

Token 366: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.2067590206861496
    2. ' c' → logprob: -1.956758975982666
    3. 'this' → logprob: -4.206758975982666
    4. 'cela' → logprob: -4.206758975982666
    5. ' this' → logprob: -5.331758975982666
    6. ' ' → logprob: -6.456758975982666
    7. 'something' → logprob: -6.456758975982666
    8. '#' → logprob: -6.706758975982666
    9. ' ça' → logprob: -6.706758975982666
    10. 'ce' → logprob: -6.706758975982666

Token 367: ''était' (ID: 40609)
  Prédit: ''est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -1.1260346174240112
    2. 'est' → logprob: -1.5010346174240112
    3. ''était' → logprob: -1.5010346174240112
    4. 'a' → logprob: -1.7510346174240112
    5. ''' → logprob: -4.001034736633301
    6. 'f' → logprob: -5.126034736633301
    7. 'e' → logprob: -5.376034736633301
    8. 'ça' → logprob: -5.751034736633301
    9. ''a' → logprob: -6.126034736633301
    10. ''étais' → logprob: -6.126034736633301

Token 368: ' nécessaire' (ID: 43098)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.9725005626678467
    2. 'exact' → logprob: -1.0975005626678467
    3. 'correct' → logprob: -2.2225005626678467
    4. 'just' → logprob: -2.5975005626678467
    5. ' correct' → logprob: -4.472500801086426
    6. 'pour' → logprob: -4.597500801086426
    7. 'for' → logprob: -4.847500801086426
    8. '```' → logprob: -4.972500801086426
    9. ' ' → logprob: -5.097500801086426
    10. '0' → logprob: -5.097500801086426

Token 369: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13068321347236633
    2. ' for' → logprob: -2.130683183670044
    3. '<|end|>' → logprob: -6.130683422088623
    4. '
' → logprob: -6.505683422088623
    5. ')' → logprob: -10.380682945251465
    6. ' ' → logprob: -11.755682945251465
    7. '<|end|>' → logprob: -11.755682945251465
    8. ',' → logprob: -12.255682945251465
    9. '.' → logprob: -12.505682945251465
    10. ' 
' → logprob: -12.630682945251465

Token 370: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03374632075428963
    2. ' for' → logprob: -3.4087462425231934
    3. '<|end|>' → logprob: -10.408746719360352
    4. 'i' → logprob: -10.658746719360352
    5. 'something' → logprob: -11.533746719360352
    6. ')' → logprob: -11.783746719360352
    7. '
' → logprob: -12.033746719360352
    8. ']' → logprob: -12.283746719360352
    9. '#' → logprob: -12.533746719360352
    10. 'sum' → logprob: -13.158746719360352

Token 371: ' idx' (ID: 14016)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.28132113814353943
    2. 'i' → logprob: -1.4063211679458618
    3. '_' → logprob: -10.53132152557373
    4. ' ' → logprob: -10.65632152557373
    5. 'x' → logprob: -10.78132152557373
    6. ' _' → logprob: -10.90632152557373
    7. '	i' → logprob: -11.40632152557373
    8. ' x' → logprob: -11.65632152557373
    9. '_i' → logprob: -11.65632152557373
    10. 'k' → logprob: -11.78132152557373

Token 372: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.043293070048093796
    2. 'in' → logprob: -3.168292999267578
    3. ' ' → logprob: -8.168292999267578
    4. ' ' → logprob: -12.793292999267578
    5. ',' → logprob: -13.043292999267578
    6. '	in' → logprob: -13.293292999267578
    7. '_' → logprob: -13.793292999267578
    8. ' ,' → logprob: -14.168292999267578
    9. '  ' → logprob: -14.543292999267578
    10. ' _' → logprob: -15.168292999267578

Token 373: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011088847182691097
    2. ' range' → logprob: -4.511088848114014
    3. 'a' → logprob: -10.261088371276855
    4. 'something' → logprob: -13.136088371276855
    5. '```' → logprob: -14.386088371276855
    6. ' ' → logprob: -14.636088371276855
    7. 'n' → logprob: -14.761088371276855
    8. ' a' → logprob: -14.886088371276855
    9. '   ' → logprob: -15.136088371276855
    10. '	range' → logprob: -15.136088371276855

Token 374: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3136996328830719
    2. '(n' → logprob: -1.3136996030807495
    3. '1' → logprob: -7.938699722290039
    4. 'n' → logprob: -9.438699722290039
    5. '(
' → logprob: -15.438699722290039
    6. '(len' → logprob: -15.438699722290039
    7. ' (' → logprob: -15.688699722290039
    8. ',n' → logprob: -15.813699722290039
    9. ' n' → logprob: -16.06369972229004
    10. '2' → logprob: -16.18869972229004

Token 375: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4741538465023041
    2. 'n' → logprob: -0.9741538763046265
    3. '0' → logprob: -10.224153518676758
    4. '2' → logprob: -11.349153518676758
    5. '(n' → logprob: -11.599153518676758
    6. ' n' → logprob: -11.724153518676758
    7. '(' → logprob: -12.474153518676758
    8. ' ' → logprob: -12.849153518676758
    9. '   ' → logprob: -14.349153518676758
    10. '
' → logprob: -14.599153518676758

Token 376: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004683476407080889
    2. ' ,' → logprob: -5.754683494567871
    3. ',n' → logprob: -6.504683494567871
    4. 'n' → logprob: -12.379683494567871
    5. '(n' → logprob: -13.254683494567871
    6. ' n' → logprob: -14.004683494567871
    7. ',
' → logprob: -14.254683494567871
    8. '   ' → logprob: -14.504683494567871
    9. ' ,
' → logprob: -17.379682540893555
    10. '(' → logprob: -17.504682540893555

Token 377: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.001170225441455841
    2. ' n' → logprob: -6.7511701583862305
    3. '	n' → logprob: -17.751171112060547
    4. 'len' → logprob: -19.001171112060547
    5. '
' → logprob: -19.126171112060547
    6. ' ' → logprob: -19.251171112060547
    7. '   ' → logprob: -19.501171112060547
    8. ')' → logprob: -20.251171112060547
    9. ')n' → logprob: -20.501171112060547
    10. '(n' → logprob: -20.626171112060547

Token 378: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.03837721422314644
    2. '):' → logprob: -3.288377285003662
    3. '+' → logprob: -8.163376808166504
    4. '):
' → logprob: -10.538376808166504
    5. ':' → logprob: -11.913376808166504
    6. ')' → logprob: -11.913376808166504
    7. ' ):
' → logprob: -12.038376808166504
    8. ':
' → logprob: -13.038376808166504
    9. ' +' → logprob: -14.413376808166504
    10. ' ):' → logprob: -14.538376808166504

Token 379: '   ' (ID: 271)
  Prédit: 'something'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'something' → logprob: -0.14541412889957428
    2. '   ' → logprob: -2.520414113998413
    3. ' something' → logprob: -3.020414113998413
    4. 'for' → logprob: -6.020414352416992
    5. ' for' → logprob: -6.395414352416992
    6. '	s' → logprob: -6.520414352416992
    7. '       ' → logprob: -9.395414352416992
    8. 'if' → logprob: -9.395414352416992
    9. ' if' → logprob: -9.520414352416992
    10. ' ' → logprob: -9.895414352416992

Token 380: ' #' (ID: 1069)
  Prédit: 'something'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'something' → logprob: -0.005019324831664562
    2. 'for' → logprob: -6.005019187927246
    3. ' something' → logprob: -6.630019187927246
    4. '   ' → logprob: -7.130019187927246
    5. 'if' → logprob: -8.005019187927246
    6. 's' → logprob: -11.255019187927246
    7. ' for' → logprob: -11.380019187927246
    8. 'som' → logprob: -11.880019187927246
    9. 'sum' → logprob: -12.380019187927246
    10. '```' → logprob: -12.505019187927246

Token 381: ' pow' (ID: 9779)
  Prédit: 'something'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'something' → logprob: -0.06900972127914429
    2. 'for' → logprob: -2.944009780883789
    3. 'if' → logprob: -4.569009780883789
    4. 'pass' → logprob: -7.069009780883789
    5. '   ' → logprob: -7.319009780883789
    6. '#' → logprob: -7.319009780883789
    7. 'val' → logprob: -7.694009780883789
    8. ' something' → logprob: -8.444009780883789
    9. 'sum' → logprob: -9.194009780883789
    10. 'tmp' → logprob: -9.569009780883789

Token 382: ' juste' (ID: 31553)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6025135517120361
    2. '(s' → logprob: -0.8525135517120361
    3. 'er' → logprob: -4.227513313293457
    4. 'something' → logprob: -5.227513313293457
    5. '(a' → logprob: -6.477513313293457
    6. 's' → logprob: -6.852513313293457
    7. 'erm' → logprob: -7.102513313293457
    8. '2' → logprob: -7.727513313293457
    9. 'r' → logprob: -8.227513313293457
    10. 'a' → logprob: -8.227513313293457

Token 383: ' pour' (ID: 1930)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4164426922798157
    2. '(s' → logprob: -1.166442632675171
    3. 's' → logprob: -4.79144287109375
    4. '=' → logprob: -5.04144287109375
    5. '(
' → logprob: -5.41644287109375
    6. '   ' → logprob: -6.16644287109375
    7. 'a' → logprob: -6.54144287109375
    8. ' =' → logprob: -7.04144287109375
    9. 'something' → logprob: -7.54144287109375
    10. 'def' → logprob: -7.66644287109375

Token 384: ' l' (ID: 305)
  Prédit: 'something'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'something' → logprob: -0.5574395060539246
    2. '2' → logprob: -1.4324395656585693
    3. '(' → logprob: -2.5574395656585693
    4. 'idx' → logprob: -2.9324395656585693
    5. 'a' → logprob: -4.05743932723999
    6. 'comb' → logprob: -4.18243932723999
    7. 'pow' → logprob: -5.05743932723999
    8. '(idx' → logprob: -5.18243932723999
    9. '(s' → logprob: -5.68243932723999
    10. 'MOD' → logprob: -6.43243932723999

Token 385: ''in' (ID: 17942)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.99327552318573
    2. 'idx' → logprob: -1.36827552318573
    3. '2' → logprob: -1.74327552318573
    4. 'pow' → logprob: -2.8682756423950195
    5. '(idx' → logprob: -3.2432756423950195
    6. 'something' → logprob: -3.3682756423950195
    7. 'comb' → logprob: -4.7432756423950195
    8. 'e' → logprob: -5.1182756423950195
    9. '(' → logprob: -5.2432756423950195
    10. ' idx' → logprob: -5.3682756423950195

Token 386: 'vers' (ID: 3674)
  Prédit: 'put'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'put' → logprob: -0.5021738409996033
    2. 't' → logprob: -1.377173900604248
    3. 'dex' → logprob: -2.127173900604248
    4. 'idx' → logprob: -5.002173900604248
    5. 'pow' → logprob: -5.127173900604248
    6. 'p' → logprob: -5.377173900604248
    7. 'd' → logprob: -6.627173900604248
    8. 'dx' → logprob: -6.627173900604248
    9. 'range' → logprob: -6.752173900604248
    10. 'ut' → logprob: -7.627173900604248

Token 387: 'é' (ID: 377)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -7.226628895296017e-06
    2. 'es' → logprob: -11.875007629394531
    3. 'o' → logprob: -16.62500762939453
    4. '```' → logprob: -17.12500762939453
    5. 'er' → logprob: -17.25000762939453
    6. ' e' → logprob: -18.75000762939453
    7. 'é' → logprob: -18.75000762939453
    8. 'е' → logprob: -18.75000762939453
    9. 'a' → logprob: -18.75000762939453
    10. 'se' → logprob: -18.87500762939453

Token 388: ',' (ID: 11)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.8804311752319336
    2. '   ' → logprob: -1.5054311752319336
    3. '(' → logprob: -1.6304311752319336
    4. 's' → logprob: -2.3804311752319336
    5. '(
' → logprob: -3.5054311752319336
    6. '=' → logprob: -4.005431175231934
    7. ' =' → logprob: -4.505431175231934
    8. 'something' → logprob: -5.255431175231934
    9. 'a' → logprob: -6.380431175231934
    10. ')' → logprob: -6.505431175231934

Token 389: ' c' (ID: 274)
  Prédit: 'something'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'something' → logprob: -0.07507865130901337
    2. ' something' → logprob: -2.9500787258148193
    3. '   ' → logprob: -3.9500787258148193
    4. 'pow' → logprob: -7.82507848739624
    5. 'inv' → logprob: -8.575078964233398
    6. ' inv' → logprob: -10.825078964233398
    7. 'inverse' → logprob: -11.075078964233398
    8. 'for' → logprob: -11.200078964233398
    9. '    
' → logprob: -11.325078964233398
    10. 'a' → logprob: -11.700078964233398

Token 390: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.32125845551490784
    2. '=' → logprob: -2.821258544921875
    3. 'u' → logprob: -3.446258544921875
    4. 'e' → logprob: -3.821258544921875
    5. 'a' → logprob: -3.821258544921875
    6. '   ' → logprob: -3.946258544921875
    7. '#' → logprob: -4.321258544921875
    8. 'ode' → logprob: -4.321258544921875
    9. 'o' → logprob: -4.446258544921875
    10. ')' → logprob: -4.821258544921875

Token 391: ' comme' (ID: 7971)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comb' → logprob: -1.5824528932571411
    2. 'pow' → logprob: -1.9574528932571411
    3. 'une' → logprob: -2.0824527740478516
    4. 'com' → logprob: -2.2074527740478516
    5. '1' → logprob: -2.3324527740478516
    6. 'à' → logprob: -2.7074527740478516
    7. 'pas' → logprob: -3.4574527740478516
    8. 'plus' → logprob: -3.5824527740478516
    9. 'la' → logprob: -4.082452774047852
    10. '0' → logprob: -4.332452774047852

Token 392: ' ça' (ID: 13590)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.022564591839909554
    2. 'pow' → logprob: -4.77256441116333
    3. 'self' → logprob: -5.27256441116333
    4. 'MOD' → logprob: -5.39756441116333
    5. '   ' → logprob: -6.27256441116333
    6. '#' → logprob: -7.39756441116333
    7. ' comb' → logprob: -8.147564888000488
    8. 'a' → logprob: -8.147564888000488
    9. 'inv' → logprob: -8.397564888000488
    10. 'COM' → logprob: -9.022564888000488

Token 393: ' qu' (ID: 474)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33861497044563293
    2. '(s' → logprob: -1.4636149406433105
    3. '(' → logprob: -2.9636149406433105
    4. '(
' → logprob: -6.2136149406433105
    5. 's' → logprob: -6.9636149406433105
    6. 'a' → logprob: -8.088615417480469
    7. '```' → logprob: -8.588615417480469
    8. '(a' → logprob: -9.088615417480469
    9. 'something' → logprob: -9.338615417480469
    10. ',' → logprob: -9.713615417480469

Token 394: ''on' (ID: 25812)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.40235304832458496
    2. 'comb' → logprob: -1.652353048324585
    3. 'python' → logprob: -3.277353048324585
    4. '   ' → logprob: -3.902353048324585
    5. '```' → logprob: -4.152353286743164
    6. ' on' → logprob: -4.277353286743164
    7. 'ça' → logprob: -4.402353286743164
    8. 'j' → logprob: -4.902353286743164
    9. 'pow' → logprob: -5.027353286743164
    10. 'fonction' → logprob: -5.277353286743164

Token 395: ' fait' (ID: 7473)
  Prédit: 'fait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fait' → logprob: -0.06391672044992447
    2. ' fait' → logprob: -3.6889166831970215
    3. 'f' → logprob: -3.9389166831970215
    4. 'cal' → logprob: -4.9389166831970215
    5. 'calc' → logprob: -5.5639166831970215
    6. ' calc' → logprob: -5.6889166831970215
    7. 'do' → logprob: -6.8139166831970215
    8. '   ' → logprob: -7.5639166831970215
    9. 'p' → logprob: -8.43891716003418
    10. 'calcul' → logprob: -8.43891716003418

Token 396: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0016555405454710126
    2. 'something' → logprob: -7.751655578613281
    3. ' something' → logprob: -8.126655578613281
    4. '(s' → logprob: -8.751655578613281
    5. ' for' → logprob: -9.126655578613281
    6. '    
' → logprob: -9.251655578613281
    7. '```' → logprob: -9.376655578613281
    8. 's' → logprob: -9.501655578613281
    9. ' s' → logprob: -9.751655578613281
    10. ',' → logprob: -9.751655578613281

Token 397: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02686864696443081
    2. 'something' → logprob: -4.02686882019043
    3. ' something' → logprob: -4.77686882019043
    4. ' for' → logprob: -9.27686882019043
    5. '	s' → logprob: -9.77686882019043
    6. '    
' → logprob: -10.65186882019043
    7. 'for' → logprob: -10.77686882019043
    8. '```' → logprob: -11.02686882019043
    9. '  ' → logprob: -11.40186882019043
    10. '   ' → logprob: -12.02686882019043

Token 398: ' something' (ID: 3543)
  Prédit: 'something'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'something' (adapté à ' something') → logprob: -0.01527318637818098
    2. 'inv' → logprob: -5.015273094177246
    3. '   ' → logprob: -5.390273094177246
    4. 'pow' → logprob: -6.765273094177246
    5. 'for' → logprob: -6.765273094177246
    6. ' something' → logprob: -6.765273094177246
    7. 'val' → logprob: -9.015273094177246
    8. 'x' → logprob: -9.890273094177246
    9. 'p' → logprob: -10.015273094177246
    10. 'power' → logprob: -10.265273094177246

Token 399: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.0007152927573770285
    2. '[' → logprob: -7.250715255737305
    3. '   ' → logprob: -13.500715255737305
    4. '=' → logprob: -13.875715255737305
    5. '[s' → logprob: -14.000715255737305
    6. ' [' → logprob: -14.750715255737305
    7. '```' → logprob: -15.125715255737305
    8. '[val' → logprob: -15.500715255737305
    9. '[i' → logprob: -15.750715255737305
    10. '[...]' → logprob: -15.875715255737305

Token 400: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8417871594429016
    2. ' =' → logprob: -1.0917870998382568
    3. ']' → logprob: -1.4667870998382568
    4. ']=' → logprob: -6.091787338256836
    5. ' ]' → logprob: -7.716787338256836
    6. ' ' → logprob: -10.716787338256836
    7. ')' → logprob: -11.466787338256836
    8. ']+=' → logprob: -11.591787338256836
    9. ' +=' → logprob: -11.716787338256836
    10. ' ' → logprob: -11.841787338256836

Token 401: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07891402393579483
    2. ' =' → logprob: -2.578913927078247
    3. '+=' → logprob: -10.953913688659668
    4. ' +=' → logprob: -12.203913688659668
    5. '=(' → logprob: -13.703913688659668
    6. ' ' → logprob: -15.703913688659668
    7. ' =(' → logprob: -15.703913688659668
    8. ' ' → logprob: -16.203914642333984
    9. '*=' → logprob: -16.703914642333984
    10. '   ' → logprob: -17.328914642333984

Token 402: ' (' (ID: 350)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.1902293860912323
    2. 'something' → logprob: -2.0652294158935547
    3. '(com' → logprob: -3.5652294158935547
    4. 'comb' → logprob: -5.065229415893555
    5. '(' → logprob: -5.065229415893555
    6. '(sum' → logprob: -6.565229415893555
    7. '(pow' → logprob: -6.690229415893555
    8. '((' → logprob: -7.315229415893555
    9. ' something' → logprob: -7.690229415893555
    10. 'sum' → logprob: -7.815229415893555

Token 403: 'something' (ID: 64493)
  Prédit: 'something'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'something' → logprob: -0.001394165214151144
    2. ' something' → logprob: -7.001394271850586
    3. 'comb' → logprob: -8.126394271850586
    4. '(s' → logprob: -8.876394271850586
    5. '   ' → logprob: -11.251394271850586
    6. '(' → logprob: -11.376394271850586
    7. 'som' → logprob: -12.001394271850586
    8. 'pow' → logprob: -12.626394271850586
    9. 'some' → logprob: -12.751394271850586
    10. 'sum' → logprob: -13.251394271850586

Token 404: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -15.0
    3. ' [' → logprob: -16.625
    4. 'idx' → logprob: -17.375
    5. '[id' → logprob: -18.0
    6. '[i' → logprob: -19.25
    7. ' idx' → logprob: -19.375
    8. '[index' → logprob: -19.5
    9. '   ' → logprob: -19.625
    10. '[ind' → logprob: -21.0

Token 405: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0006272526225075126
    2. ' -' → logprob: -7.375627040863037
    3. ']' → logprob: -14.500627517700195
    4. '1' → logprob: -16.375627517700195
    5. '-
' → logprob: -16.750627517700195
    6. '[-' → logprob: -17.500627517700195
    7. '
' → logprob: -17.875627517700195
    8. '[' → logprob: -18.125627517700195
    9. '```' → logprob: -18.125627517700195
    10. '   ' → logprob: -18.500627517700195

Token 406: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.47495681833243e-05
    2. ' ' → logprob: -10.625024795532227
    3. '   ' → logprob: -15.125024795532227
    4. ']' → logprob: -16.875024795532227
    5. '```' → logprob: -17.250024795532227
    6. '  ' → logprob: -18.125024795532227
    7. ')' → logprob: -18.500024795532227
    8. '
' → logprob: -18.562524795532227
    9. '

' → logprob: -19.187524795532227
    10. '    ' → logprob: -19.812524795532227

Token 407: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -13.500001907348633
    3. '   ' → logprob: -15.750001907348633
    4. '```' → logprob: -15.937501907348633
    5. '
' → logprob: -16.812501907348633
    6. ']' → logprob: -17.125001907348633
    7. ')' → logprob: -18.000001907348633
    8. '

' → logprob: -18.062501907348633
    9. '-' → logprob: -18.625001907348633
    10. '  ' → logprob: -18.687501907348633

Token 408: ']' (ID: 60)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.3872091770172119
    2. ' *' → logprob: -1.137209177017212
    3. ')' → logprob: -8.387208938598633
    4. '+' → logprob: -9.887208938598633
    5. ' +' → logprob: -10.762208938598633
    6. ' ' → logprob: -11.137208938598633
    7. ' ' → logprob: -11.262208938598633
    8. '   ' → logprob: -12.387208938598633
    9. ')*' → logprob: -13.137208938598633
    10. '*)' → logprob: -14.012208938598633

Token 409: ' +' (ID: 659)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.28183260560035706
    2. ' *' → logprob: -1.4068325757980347
    3. '+' → logprob: -7.656832695007324
    4. ' +' → logprob: -8.656832695007324
    5. ')' → logprob: -11.281832695007324
    6. ' ' → logprob: -11.281832695007324
    7. ' ' → logprob: -12.281832695007324
    8. '   ' → logprob: -13.156832695007324
    9. '**' → logprob: -14.531832695007324
    10. ')*' → logprob: -14.719332695007324

Token 410: ' pow' (ID: 9779)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.061058592051267624
    2. 'pow' → logprob: -2.936058521270752
    3. 'a' → logprob: -5.186058521270752
    4. '1' → logprob: -8.31105899810791
    5. ' comb' → logprob: -9.06105899810791
    6. 'com' → logprob: -10.06105899810791
    7. '(' → logprob: -10.31105899810791
    8. 'n' → logprob: -10.81105899810791
    9. ' pow' → logprob: -10.81105899810791
    10. '   ' → logprob: -11.18605899810791

Token 411: '(idx' (ID: 42793)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.21001610159873962
    2. '(' → logprob: -1.710016131401062
    3. '(idx' → logprob: -5.335016250610352
    4. 'a' → logprob: -5.835016250610352
    5. '2' → logprob: -7.335016250610352
    6. '(com' → logprob: -9.835016250610352
    7. '(n' → logprob: -9.960016250610352
    8. '(pow' → logprob: -10.835016250610352
    9. 'idx' → logprob: -10.960016250610352
    10. '((' → logprob: -11.835016250610352

Token 412: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002226979471743107
    2. ',-' → logprob: -7.252226829528809
    3. '(-' → logprob: -7.502226829528809
    4. ' ,' → logprob: -7.502226829528809
    5. 'MOD' → logprob: -8.877226829528809
    6. ')' → logprob: -10.127226829528809
    7. '2' → logprob: -10.252226829528809
    8. ',
' → logprob: -10.627226829528809
    9. ',n' → logprob: -10.752226829528809
    10. ' MOD' → logprob: -10.752226829528809

Token 413: ' ' (ID: 220)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.43177011609077454
    2. 'MOD' → logprob: -1.5567700862884521
    3. '2' → logprob: -2.056770086288452
    4. '1' → logprob: -5.306770324707031
    5. 'n' → logprob: -5.431770324707031
    6. ' -' → logprob: -7.306770324707031
    7. '(-' → logprob: -7.681770324707031
    8. '10' → logprob: -7.931770324707031
    9. 'idx' → logprob: -8.181770324707031
    10. 'a' → logprob: -8.431770324707031

Token 414: '1' (ID: 16)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.42199891805648804
    2. '1' → logprob: -1.2969989776611328
    3. '-' → logprob: -3.296998977661133
    4. '2' → logprob: -3.546998977661133
    5. 'n' → logprob: -6.296998977661133
    6. 'a' → logprob: -6.796998977661133
    7. '(-' → logprob: -7.921998977661133
    8. '10' → logprob: -8.046998977661133
    9. '   ' → logprob: -8.546998977661133
    10. ' MOD' → logprob: -8.546998977661133

Token 415: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012463049497455359
    2. ',-' → logprob: -6.876246452331543
    3. ' ,' → logprob: -8.626246452331543
    4. ',
' → logprob: -10.751246452331543
    5. ' ,-' → logprob: -12.376246452331543
    6. 'MOD' → logprob: -12.751246452331543
    7. '   ' → logprob: -13.126246452331543
    8. ',M' → logprob: -14.376246452331543
    9. ' -' → logprob: -14.501246452331543
    10. '-' → logprob: -14.876246452331543

Token 416: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0443580336868763
    2. '-' → logprob: -3.169358015060425
    3. ' MOD' → logprob: -7.294358253479004
    4. ' -' → logprob: -8.044358253479004
    5. '-M' → logprob: -8.294358253479004
    6. '   ' → logprob: -9.669358253479004
    7. 'MD' → logprob: -11.294358253479004
    8. '_MOD' → logprob: -12.044358253479004
    9. '-mod' → logprob: -12.294358253479004
    10. '.MOD' → logprob: -12.669358253479004

Token 417: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0019260174594819546
    2. ' -' → logprob: -6.376925945281982
    3. ',' → logprob: -8.62692642211914
    4. 'MOD' → logprob: -10.12692642211914
    5. '   ' → logprob: -12.87692642211914
    6. '```' → logprob: -14.25192642211914
    7. ' ,' → logprob: -15.25192642211914
    8. ' ' → logprob: -16.00192642211914
    9. ',-' → logprob: -16.12692642211914
    10. ')' → logprob: -16.25192642211914

Token 418: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9743012671824545e-05
    2. '-' → logprob: -11.125020027160645
    3. ' ' → logprob: -13.125020027160645
    4. ' -' → logprob: -13.500020027160645
    5. '```' → logprob: -14.125020027160645
    6. '
' → logprob: -15.250020027160645
    7. '

' → logprob: -15.812520027160645
    8. '   ' → logprob: -16.250019073486328
    9. '3' → logprob: -16.500019073486328
    10. ')' → logprob: -16.812519073486328

Token 419: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.173704271830502e-06
    2. '-' → logprob: -13.12500286102295
    3. '```' → logprob: -14.87500286102295
    4. ' ' → logprob: -15.00000286102295
    5. '
' → logprob: -15.62500286102295
    6. ' -' → logprob: -15.68750286102295
    7. '3' → logprob: -16.437503814697266
    8. '

' → logprob: -17.062503814697266
    9. '   ' → logprob: -17.375003814697266
    10. '1' → logprob: -17.375003814697266

Token 420: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.6166903151315637e-05
    2. ' ,' → logprob: -11.250016212463379
    3. ')' → logprob: -13.375016212463379
    4. ',
' → logprob: -13.625016212463379
    5. '```' → logprob: -15.875016212463379
    6. '   ' → logprob: -16.500015258789062
    7. 'MOD' → logprob: -17.375015258789062
    8. '*' → logprob: -17.500015258789062
    9. '))' → logprob: -17.500015258789062
    10. '
' → logprob: -17.750015258789062

Token 421: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -1.3856492842023727e-06
    2. ' MOD' → logprob: -13.750000953674316
    3. '   ' → logprob: -16.500001907348633
    4. ')' → logprob: -17.000001907348633
    5. '
' → logprob: -17.625001907348633
    6. '_MOD' → logprob: -18.750001907348633
    7. 'MD' → logprob: -19.375001907348633
    8. '.MOD' → logprob: -20.750001907348633
    9. '```' → logprob: -21.250001907348633
    10. '       ' → logprob: -21.375001907348633

Token 422: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.25194892287254333
    2. ')' → logprob: -1.5019489526748657
    3. ' ))' → logprob: -11.876949310302734
    4. ',' → logprob: -12.001949310302734
    5. ' )' → logprob: -13.126949310302734
    6. '   ' → logprob: -13.626949310302734
    7. ')
' → logprob: -13.876949310302734
    8. ')))' → logprob: -14.001949310302734
    9. ')%' → logprob: -14.126949310302734
    10. '),' → logprob: -15.501949310302734

Token 423: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.38703787326812744
    2. ' %' → logprob: -1.1370378732681274
    3. ')' → logprob: -8.887038230895996
    4. ')%' → logprob: -11.012038230895996
    5. '   ' → logprob: -11.637038230895996
    6. ' %=' → logprob: -13.762038230895996
    7. ' ' → logprob: -14.637038230895996
    8. ' ' → logprob: -14.637038230895996
    9. '%s' → logprob: -15.137038230895996
    10. '%n' → logprob: -15.637038230895996

Token 424: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: 0.0
    2. ' MOD' → logprob: -16.75
    3. '_MOD' → logprob: -21.25
    4. 'MD' → logprob: -21.875
    5. '.MOD' → logprob: -22.5
    6. 'MO' → logprob: -23.0
    7. 'MODULE' → logprob: -23.75
    8. 'MODE' → logprob: -24.25
    9. '```' → logprob: -24.5
    10. '   ' → logprob: -25.375

Token 425: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 426: 'result' (ID: 2521)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.3257167339324951
    2. 'result' → logprob: -1.5757167339324951
    3. 'answer' → logprob: -1.7007167339324951
    4. 'print' → logprob: -2.075716733932495
    5. 'total' → logprob: -2.325716733932495
    6. 'ans' → logprob: -3.450716733932495
    7. 'for' → logprob: -3.825716733932495
    8. 'sum' → logprob: -3.950716733932495
    9. 's' → logprob: -4.950716972351074
    10. '#' → logprob: -4.950716972351074

Token 427: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07310202717781067
    2. '=' → logprob: -2.6981019973754883
    3. '_' → logprob: -6.198101997375488
    4. 's' → logprob: -6.823101997375488
    5. ' ' → logprob: -11.073101997375488
    6. ')' → logprob: -11.698101997375488
    7. '_=' → logprob: -12.073101997375488
    8. ' =
' → logprob: -13.198101997375488
    9. ' ' → logprob: -13.823101997375488
    10. 'space' → logprob: -14.198101997375488

Token 428: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.019621537998318672
    2. ' ' → logprob: -4.0196213722229
    3. '1' → logprob: -7.2696213722229
    4. 'a' → logprob: -7.7696213722229
    5. '(' → logprob: -9.269621849060059
    6. ' a' → logprob: -9.269621849060059
    7. ' (' → logprob: -10.269621849060059
    8. 'comb' → logprob: -10.394621849060059
    9. 'something' → logprob: -10.519621849060059
    10. ' something' → logprob: -10.894621849060059

Token 429: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002874653786420822
    2. '1' → logprob: -6.252874851226807
    3. 'a' → logprob: -7.377874851226807
    4. '(' → logprob: -8.877874374389648
    5. 'something' → logprob: -9.752874374389648
    6. 'comb' → logprob: -9.877874374389648
    7. 'sum' → logprob: -10.252874374389648
    8. '(a' → logprob: -11.002874374389648
    9. '(s' → logprob: -12.377874374389648
    10. '[' → logprob: -13.127874374389648

Token 430: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.000932421418838203
    2. ' for' → logprob: -7.000932216644287
    3. '<|end|>' → logprob: -10.875932693481445
    4. '
' → logprob: -14.625932693481445
    5. '```' → logprob: -15.125932693481445
    6. ')' → logprob: -15.250932693481445
    7. '+' → logprob: -15.500932693481445
    8. '*' → logprob: -16.000932693481445
    9. '.' → logprob: -16.000932693481445
    10. 'i' → logprob: -16.375932693481445

Token 431: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.8087270038668066e-05
    2. ' for' → logprob: -10.500027656555176
    3. 'factor' → logprob: -15.875027656555176
    4. 'result' → logprob: -16.250028610229492
    5. '```' → logprob: -16.750028610229492
    6. 'total' → logprob: -17.125028610229492
    7. ')' → logprob: -17.375028610229492
    8. '<|end|>' → logprob: -17.750028610229492
    9. 'i' → logprob: -18.000028610229492
    10. 'from' → logprob: -18.125028610229492

Token 432: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.009490440599620342
    2. ' i' → logprob: -5.384490489959717
    3. 'idx' → logprob: -5.634490489959717
    4. 'k' → logprob: -7.384490489959717
    5. 'x' → logprob: -8.134490013122559
    6. 'j' → logprob: -9.384490013122559
    7. ' idx' → logprob: -9.384490013122559
    8. 'val' → logprob: -9.634490013122559
    9. 'value' → logprob: -10.134490013122559
    10. 'index' → logprob: -10.759490013122559

Token 433: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04326944425702095
    2. 'in' → logprob: -3.168269395828247
    3. ' ' → logprob: -8.293269157409668
    4. ',' → logprob: -11.668269157409668
    5. '_' → logprob: -13.043269157409668
    6. ' ,' → logprob: -13.293269157409668
    7. '	in' → logprob: -13.293269157409668
    8. ' ' → logprob: -13.543269157409668
    9. ' i' → logprob: -14.793269157409668
    10. ')' → logprob: -14.793269157409668

Token 434: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -2.7610454708337784e-05
    2. ' range' → logprob: -10.500027656555176
    3. '(range' → logprob: -17.62502670288086
    4. 'a' → logprob: -19.25002670288086
    5. '   ' → logprob: -20.12502670288086
    6. 'r' → logprob: -20.75002670288086
    7. '
' → logprob: -21.00002670288086
    8. '	range' → logprob: -21.00002670288086
    9. '```' → logprob: -21.12502670288086
    10. 'n' → logprob: -21.87502670288086

Token 435: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -7.016616291366518e-05
    2. '(' → logprob: -9.750070571899414
    3. 'n' → logprob: -11.375070571899414
    4. '(len' → logprob: -15.250070571899414
    5. '(
' → logprob: -16.125070571899414
    6. ',n' → logprob: -18.500070571899414
    7. ' n' → logprob: -19.375070571899414
    8. ' (' → logprob: -20.250070571899414
    9. '[n' → logprob: -20.875070571899414
    10. '<n' → logprob: -21.000070571899414

Token 436: '-' (ID: 12)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008018610067665577
    2. '):
' → logprob: -4.883018493652344
    3. ')' → logprob: -8.133018493652344
    4. '+' → logprob: -9.383018493652344
    5. ':' → logprob: -10.883018493652344
    6. ' ):' → logprob: -12.133018493652344
    7. ',' → logprob: -12.633018493652344
    8. '   ' → logprob: -13.133018493652344
    9. '):
' → logprob: -13.633018493652344
    10. '):

' → logprob: -13.758018493652344

Token 437: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.176947600673884e-05
    2. '2' → logprob: -11.125021934509277
    3. 'n' → logprob: -13.250021934509277
    4. ' ' → logprob: -13.250021934509277
    5. ')' → logprob: -13.375021934509277
    6. ',' → logprob: -14.250021934509277
    7. '-' → logprob: -14.625021934509277
    8. '0' → logprob: -15.375021934509277
    9. '+' → logprob: -15.625021934509277
    10. '(' → logprob: -15.625021934509277

Token 438: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.012003296986222267
    2. '):
' → logprob: -4.512003421783447
    3. ',' → logprob: -7.887003421783447
    4. '+' → logprob: -8.137002944946289
    5. ')' → logprob: -8.637002944946289
    6. ' ):' → logprob: -9.262002944946289
    7. '):
' → logprob: -12.512002944946289
    8. ' +' → logprob: -12.887002944946289
    9. '   ' → logprob: -13.262002944946289
    10. '):

' → logprob: -13.512002944946289

Token 439: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014599679969251156
    2. 'result' → logprob: -5.139599800109863
    3. ' result' → logprob: -5.139599800109863
    4. ' if' → logprob: -6.014599800109863
    5. 'if' → logprob: -8.389599800109863
    6. '   ' → logprob: -9.764599800109863
    7. '	result' → logprob: -11.139599800109863
    8. '  ' → logprob: -11.889599800109863
    9. '    
' → logprob: -12.014599800109863
    10. ' ' → logprob: -12.514599800109863

Token 440: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.46857744455337524
    2. '   ' → logprob: -1.4685773849487305
    3. 'if' → logprob: -2.0935773849487305
    4. 'res' → logprob: -5.2185773849487305
    5. 'val' → logprob: -5.3435773849487305
    6. ' result' → logprob: -6.4685773849487305
    7. ' if' → logprob: -6.5935773849487305
    8. 'term' → logprob: -6.9685773849487305
    9. 'coef' → logprob: -6.9685773849487305
    10. 'temp' → logprob: -7.0935773849487305

Token 441: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.25221407413482666
    2. '+=' → logprob: -1.5022140741348267
    3. '=' → logprob: -8.502214431762695
    4. ' =' → logprob: -9.627214431762695
    5. '+' → logprob: -11.877214431762695
    6. ']+=' → logprob: -12.502214431762695
    7. ' ^=' → logprob: -13.002214431762695
    8. '+=(' → logprob: -13.877214431762695
    9. ' -=' → logprob: -14.877214431762695
    10. ' ' → logprob: -15.002214431762695

Token 442: ' something' (ID: 3543)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.01742914877831936
    2. '(a' → logprob: -4.392429351806641
    3. 'comb' → logprob: -5.517429351806641
    4. ' a' → logprob: -7.767429351806641
    5. 'something' → logprob: -8.01742935180664
    6. '(' → logprob: -9.76742935180664
    7. '((' → logprob: -10.26742935180664
    8. '(s' → logprob: -11.64242935180664
    9. '(com' → logprob: -11.89242935180664
    10. ' (' → logprob: -11.89242935180664

Token 443: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.007789266761392355
    2. '[a' → logprob: -4.882789134979248
    3. '[' → logprob: -9.007789611816406
    4. 'a' → logprob: -10.382789611816406
    5. 'i' → logprob: -10.882789611816406
    6. '[n' → logprob: -12.632789611816406
    7. ' [' → logprob: -13.007789611816406
    8. '```' → logprob: -13.382789611816406
    9. '[s' → logprob: -14.007789611816406
    10. '[idx' → logprob: -14.257789611816406

Token 444: ']' (ID: 60)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.005941359326243401
    2. '*' → logprob: -5.130941390991211
    3. ')' → logprob: -12.130941390991211
    4. ']' → logprob: -13.130941390991211
    5. ' ' → logprob: -13.130941390991211
    6. '   ' → logprob: -13.380941390991211
    7. ' ' → logprob: -14.630941390991211
    8. ',' → logprob: -15.380941390991211
    9. '+' → logprob: -15.630941390991211
    10. '```' → logprob: -15.880941390991211

Token 445: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.00412233080714941
    2. '*' → logprob: -5.504122257232666
    3. '%' → logprob: -10.754122734069824
    4. '   ' → logprob: -11.879122734069824
    5. '<|end|>' → logprob: -11.879122734069824
    6. ' %' → logprob: -12.629122734069824
    7. ' ' → logprob: -12.754122734069824
    8. '    ' → logprob: -14.754122734069824
    9. ' ' → logprob: -14.879122734069824
    10. '  ' → logprob: -14.879122734069824

Token 446: ' (' (ID: 350)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0014458298683166504
    2. 'comb' → logprob: -6.751445770263672
    3. '(a' → logprob: -8.501445770263672
    4. '(' → logprob: -10.251445770263672
    5. 'pow' → logprob: -11.251445770263672
    6. ' a' → logprob: -11.501445770263672
    7. 'com' → logprob: -13.001445770263672
    8. '((' → logprob: -13.001445770263672
    9. '(com' → logprob: -13.376445770263672
    10. ' (' → logprob: -13.501445770263672

Token 447: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0009292102768085897
    2. '(a' → logprob: -7.125929355621338
    3. '(' → logprob: -10.00092887878418
    4. ' a' → logprob: -10.87592887878418
    5. 'n' → logprob: -11.00092887878418
    6. '(n' → logprob: -11.75092887878418
    7. 'pow' → logprob: -11.75092887878418
    8. 'comb' → logprob: -12.00092887878418
    9. 'i' → logprob: -12.37592887878418
    10. '(i' → logprob: -12.75092887878418

Token 448: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00607135659083724
    2. '[n' → logprob: -5.1310715675354
    3. 'i' → logprob: -9.506071090698242
    4. '[' → logprob: -10.006071090698242
    5. '[-' → logprob: -11.506071090698242
    6. 'n' → logprob: -12.131071090698242
    7. '[a' → logprob: -13.381071090698242
    8. '[len' → logprob: -14.131071090698242
    9. '(i' → logprob: -14.256071090698242
    10. '[(' → logprob: -14.381071090698242

Token 449: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.18365785479545593
    2. ' -' → logprob: -2.0586578845977783
    3. '-' → logprob: -3.4336578845977783
    4. ' +' → logprob: -5.183657646179199
    5. ']' → logprob: -6.183657646179199
    6. ']+' → logprob: -9.5586576461792
    7. ' ]' → logprob: -10.4336576461792
    8. '%' → logprob: -10.8086576461792
    9. ')' → logprob: -10.9336576461792
    10. ']-' → logprob: -10.9336576461792

Token 450: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004102146718651056
    2. '0' → logprob: -6.1291022300720215
    3. ']' → logprob: -6.3791022300720215
    4. ' ' → logprob: -8.754101753234863
    5. '   ' → logprob: -10.629101753234863
    6. '-' → logprob: -11.379101753234863
    7. '+' → logprob: -11.629101753234863
    8. ']+' → logprob: -12.129101753234863
    9. ' -' → logprob: -12.129101753234863
    10. '```' → logprob: -13.129101753234863

Token 451: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.12697944045066833
    2. '-' → logprob: -2.126979351043701
    3. '+' → logprob: -10.50197982788086
    4. '<|end|>' → logprob: -11.37697982788086
    5. '  ' → logprob: -12.50197982788086
    6. ')' → logprob: -13.25197982788086
    7. ' ' → logprob: -13.25197982788086
    8. ' +' → logprob: -13.50197982788086
    9. 'a' → logprob: -13.75197982788086
    10. ' ' → logprob: -14.12697982788086

Token 452: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5759707689285278
    2. '-' → logprob: -0.8259707689285278
    3. '+' → logprob: -10.825970649719238
    4. '  ' → logprob: -12.450970649719238
    5. ')' → logprob: -13.200970649719238
    6. ' ' → logprob: -13.700970649719238
    7. ' ' → logprob: -13.700970649719238
    8. '<|end|>' → logprob: -13.825970649719238
    9. '   ' → logprob: -14.450970649719238
    10. ' +' → logprob: -14.700970649719238

Token 453: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0011783202644437551
    2. ' a' → logprob: -6.75117826461792
    3. '1' → logprob: -11.876178741455078
    4. '   ' → logprob: -14.501178741455078
    5. ')a' → logprob: -15.751178741455078
    6. '	a' → logprob: -15.876178741455078
    7. '<|end|>' → logprob: -16.251178741455078
    8. '
' → logprob: -16.626178741455078
    9. ')' → logprob: -16.626178741455078
    10. ' ' → logprob: -16.876178741455078

Token 454: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.182190554682165e-05
    2. '[' → logprob: -10.250061988830566
    3. 'i' → logprob: -10.625061988830566
    4. '[
' → logprob: -13.625061988830566
    5. '```' → logprob: -15.125061988830566
    6. ')' → logprob: -15.500061988830566
    7. ')i' → logprob: -15.625061988830566
    8. '[user' → logprob: -16.87506103515625
    9. '	i' → logprob: -17.12506103515625
    10. ' i' → logprob: -17.12506103515625

Token 455: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010556964843999594
    2. ' )' → logprob: -9.375105857849121
    3. ')%' → logprob: -11.625105857849121
    4. ')
' → logprob: -12.000105857849121
    5. '   ' → logprob: -12.500105857849121
    6. ']' → logprob: -14.250105857849121
    7. '')' → logprob: -15.125105857849121
    8. '))' → logprob: -15.875105857849121
    9. ')`' → logprob: -16.000104904174805
    10. '+' → logprob: -16.250104904174805

Token 456: '   ' (ID: 271)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.15890532732009888
    2. '%' → logprob: -2.658905267715454
    3. ' result' → logprob: -3.283905267715454
    4. '
' → logprob: -3.408905267715454
    5. ' 
' → logprob: -6.283905506134033
    6. ' %' → logprob: -6.533905506134033
    7. '[result' → logprob: -7.408905506134033
    8. '   ' → logprob: -7.658905506134033
    9. '%
' → logprob: -7.908905506134033
    10. '```' → logprob: -8.158905029296875

Token 457: ' #' (ID: 1069)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.20336352288722992
    2. ' result' → logprob: -1.7033635377883911
    3. '%' → logprob: -6.828363418579102
    4. ' %' → logprob: -7.953363418579102
    5. '
' → logprob: -8.203363418579102
    6. ' 
' → logprob: -8.953363418579102
    7. '   ' → logprob: -10.453363418579102
    8. '[result' → logprob: -10.828363418579102
    9. '\n' → logprob: -11.328363418579102
    10. '(result' → logprob: -11.703363418579102

Token 458: ' ah' (ID: 5369)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.00010723850573413074
    2. '   ' → logprob: -9.500106811523438
    3. ' result' → logprob: -10.375106811523438
    4. '	result' → logprob: -15.000106811523438
    5. '```' → logprob: -15.250106811523438
    6. '
' → logprob: -15.625106811523438
    7. ' ' → logprob: -15.750106811523438
    8. '  ' → logprob: -16.375106811523438
    9. '=' → logprob: -16.875106811523438
    10. '    
' → logprob: -17.125106811523438

Token 459: ' oui' (ID: 50908)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5224063396453857
    2. 'result' → logprob: -1.1474063396453857
    3. ' result' → logprob: -2.6474063396453857
    4. '\n' → logprob: -5.397406578063965
    5. ' ' → logprob: -5.897406578063965
    6. '
' → logprob: -6.147406578063965
    7. ' =' → logprob: -6.272406578063965
    8. ' 
' → logprob: -6.272406578063965
    9. '=result' → logprob: -6.272406578063965
    10. ' \' → logprob: -7.272406578063965

Token 460: ',' (ID: 11)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.2694796323776245
    2. ' result' → logprob: -1.5194796323776245
    3. '   ' → logprob: -4.144479751586914
    4. '
' → logprob: -6.644479751586914
    5. ' 
' → logprob: -9.644479751586914
    6. ' ' → logprob: -10.019479751586914
    7. '\n' → logprob: -10.144479751586914
    8. '	result' → logprob: -10.519479751586914
    9. '    
' → logprob: -11.019479751586914
    10. '  
' → logprob: -11.519479751586914

Token 461: ' faut' (ID: 17821)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.00026181264547631145
    2. ' result' → logprob: -8.500262260437012
    3. '   ' → logprob: -9.750262260437012
    4. '	result' → logprob: -18.125261306762695
    5. '
' → logprob: -18.500261306762695
    6. '```' → logprob: -19.000261306762695
    7. '  ' → logprob: -19.250261306762695
    8. ' ' → logprob: -19.250261306762695
    9. '    
' → logprob: -20.625261306762695
    10. '(result' → logprob: -20.875261306762695

Token 462: ' pas' (ID: 2173)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -5.776898251497187e-05
    2. ' result' → logprob: -10.1250581741333
    3. '   ' → logprob: -11.5000581741333
    4. '=result' → logprob: -13.1250581741333
    5. '%' → logprob: -13.3750581741333
    6. '(result' → logprob: -13.7500581741333
    7. '	result' → logprob: -14.1250581741333
    8. '%=' → logprob: -14.8750581741333
    9. '[result' → logprob: -15.1250581741333
    10. '_result' → logprob: -15.1250581741333

Token 463: ' oublier' (ID: 99499)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.565642774105072
    2. 'result' → logprob: -0.940642774105072
    3. ' result' → logprob: -3.940642833709717
    4. '%=' → logprob: -4.690642833709717
    5. '(result' → logprob: -6.065642833709717
    6. ' %=' → logprob: -6.190642833709717
    7. '%\' → logprob: -6.315642833709717
    8. '   ' → logprob: -6.815642833709717
    9. '()' → logprob: -6.940642833709717
    10. '_' → logprob: -7.065642833709717

Token 464: ' le' (ID: 505)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.40142521262168884
    2. ' result' → logprob: -1.1514252424240112
    3. '   ' → logprob: -4.276425361633301
    4. '%' → logprob: -7.776425361633301
    5. ' %=' → logprob: -10.1514253616333
    6. ' %' → logprob: -10.4014253616333
    7. '	result' → logprob: -11.0264253616333
    8. '(result' → logprob: -11.2764253616333
    9. '%
' → logprob: -11.4014253616333
    10. '=result' → logprob: -11.9014253616333

Token 465: ' modulo' (ID: 112372)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.050630874931812286
    2. ' %' → logprob: -3.050630807876587
    3. 'result' → logprob: -6.300631046295166
    4. ' result' → logprob: -8.925630569458008
    5. ' %=' → logprob: -10.300630569458008
    6. '`' → logprob: -11.425630569458008
    7. '   ' → logprob: -11.800630569458008
    8. '```' → logprob: -12.675630569458008
    9. '%\' → logprob: -12.675630569458008
    10. '%
' → logprob: -12.925630569458008

Token 466: '
' (ID: 198)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.41553226113319397
    2. '%' → logprob: -1.2905322313308716
    3. 'result' → logprob: -3.665532350540161
    4. ' %=' → logprob: -4.415532112121582
    5. ' result' → logprob: -4.790532112121582
    6. ' %
' → logprob: -5.040532112121582
    7. '%
' → logprob: -5.415532112121582
    8. '   ' → logprob: -5.665532112121582
    9. '
' → logprob: -6.290532112121582
    10. '\n' → logprob: -6.790532112121582

Token 467: '   ' (ID: 271)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.6206664443016052
    2. '%' → logprob: -1.49566650390625
    3. 'result' → logprob: -1.99566650390625
    4. ' result' → logprob: -2.37066650390625
    5. ' %=' → logprob: -5.62066650390625
    6. '%
' → logprob: -6.87066650390625
    7. '(result' → logprob: -7.24566650390625
    8. '\n' → logprob: -7.37066650390625
    9. '[result' → logprob: -7.49566650390625
    10. ' %
' → logprob: -7.62066650390625

Token 468: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.16022878885269165
    2. ' result' → logprob: -1.9102287292480469
    3. '
' → logprob: -12.410228729248047
    4. '(result' → logprob: -15.660228729248047
    5. '=result' → logprob: -15.785228729248047
    6. '	result' → logprob: -16.535228729248047
    7. '   ' → logprob: -16.660228729248047
    8. '[result' → logprob: -16.910228729248047
    9. ' 
' → logprob: -17.160228729248047
    10. ',result' → logprob: -18.535228729248047

Token 469: ' %=' (ID: 117035)
  Prédit: ' %='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %=' → logprob: -0.10317786782979965
    2. '%=' → logprob: -2.353177785873413
    3. '%' → logprob: -5.853178024291992
    4. ' %' → logprob: -9.728178024291992
    5. '=' → logprob: -10.478178024291992
    6. ' ' → logprob: -12.103178024291992
    7. ' =' → logprob: -13.853178024291992
    8. '	' → logprob: -14.228178024291992
    9. '```' → logprob: -15.103178024291992
    10. '+=' → logprob: -15.353178024291992

Token 470: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -7.941850526549388e-06
    2. ' MOD' → logprob: -11.750007629394531
    3. '_MOD' → logprob: -21.25000762939453
    4. '.MOD' → logprob: -21.87500762939453
    5. 'MO' → logprob: -22.00000762939453
    6. '   ' → logprob: -22.75000762939453
    7. 'MD' → logprob: -24.00000762939453
    8. ' ' → logprob: -25.12500762939453
    9. '```' → logprob: -25.25000762939453
    10. '(M' → logprob: -26.25000762939453

Token 471: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.001980499131605029
    2. '
' → logprob: -6.501980304718018
    3. '<|end|>' → logprob: -8.126980781555176
    4. '```' → logprob: -9.126980781555176
    5. ')' → logprob: -10.626980781555176
    6. 'result' → logprob: -11.251980781555176
    7. '#' → logprob: -11.751980781555176
    8. '  
' → logprob: -11.751980781555176
    9. '+' → logprob: -11.876980781555176
    10. ' print' → logprob: -12.001980781555176

Token 472: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.3120038501219824e-05
    2. '
' → logprob: -9.875053405761719
    3. ' print' → logprob: -14.375053405761719
    4. 'result' → logprob: -14.625053405761719
    5. '```' → logprob: -14.750053405761719
    6. '<|end|>' → logprob: -15.875053405761719
    7. '(print' → logprob: -16.50005340576172
    8. '
' → logprob: -18.12505340576172
    9. '#print' → logprob: -18.12505340576172
    10. '    
' → logprob: -18.62505340576172

Token 473: ' Fr' (ID: 2312)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. 'result' → logprob: -18.0
    3. ' print' → logprob: -18.625
    4. 'pr' → logprob: -19.625
    5. 'prin' → logprob: -19.625
    6. 'for' → logprob: -21.25
    7. 'return' → logprob: -21.625
    8. '```' → logprob: -22.0
    9. '#print' → logprob: -23.0
    10. '
' → logprob: -23.375

Token 474: 'anchement' (ID: 141995)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0019397038267925382
    2. 'int' → logprob: -6.25193977355957
    3. '#print' → logprob: -12.75193977355957
    4. 'prin' → logprob: -13.12693977355957
    5. 'opri' → logprob: -13.37693977355957
    6. 'ont' → logprob: -13.50193977355957
    7. 'opr' → logprob: -13.50193977355957
    8. 'pr' → logprob: -14.12693977355957
    9. 'printf' → logprob: -15.50193977355957
    10. '```' → logprob: -15.50193977355957

Token 475: ' à' (ID: 1221)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.200166469876422e-06
    2. 'result' → logprob: -13.000004768371582
    3. ' print' → logprob: -13.875004768371582
    4. '
' → logprob: -13.875004768371582
    5. '<|end|>' → logprob: -14.375004768371582
    6. '```' → logprob: -15.625004768371582
    7. '#print' → logprob: -16.0000057220459
    8. 'pr' → logprob: -17.3750057220459
    9. '#' → logprob: -17.3750057220459
    10. '(print' → logprob: -17.7500057220459

Token 476: ' la' (ID: 557)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.204115092754364
    2. 'return' → logprob: -1.7041151523590088
    3. 'la' → logprob: -6.70411491394043
    4. 'ret' → logprob: -7.82911491394043
    5. '+' → logprob: -8.32911491394043
    6. 'result' → logprob: -9.20411491394043
    7. '```' → logprob: -9.45411491394043
    8. 'continue' → logprob: -9.70411491394043
    9. 'b' → logprob: -9.82911491394043
    10. 'plus' → logprob: -10.07911491394043

Token 477: ' fin' (ID: 2131)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.002278838539496064
    2. 'return' → logprob: -6.127278804779053
    3. 'finish' → logprob: -10.752279281616211
    4. 'fin' → logprob: -10.877279281616211
    5. '```' → logprob: -11.002279281616211
    6. 'python' → logprob: -12.127279281616211
    7. '#' → logprob: -12.752279281616211
    8. 'continue' → logprob: -12.752279281616211
    9. '#print' → logprob: -12.877279281616211
    10. 'sys' → logprob: -13.002279281616211

Token 478: ' il' (ID: 1793)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.6047699318733066e-05
    2. ' print' → logprob: -11.625016212463379
    3. '
' → logprob: -12.125016212463379
    4. '<|end|>' → logprob: -14.625016212463379
    5. '```' → logprob: -14.750016212463379
    6. 'result' → logprob: -14.875016212463379
    7. '#print' → logprob: -16.125015258789062
    8. ',' → logprob: -16.375015258789062
    9. '(print' → logprob: -16.750015258789062
    10. '#' → logprob: -17.000015258789062

Token 479: ' fallait' (ID: 110338)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0036509146448224783
    2. ' print' → logprob: -5.628651142120361
    3. '=' → logprob: -10.878650665283203
    4. '.print' → logprob: -11.253650665283203
    5. '#' → logprob: -12.378650665283203
    6. '(print' → logprob: -12.378650665283203
    7. '.' → logprob: -12.628650665283203
    8. '	print' → logprob: -13.503650665283203
    9. '_print' → logprob: -13.628650665283203
    10. '+=' → logprob: -14.003650665283203

Token 480: ' multiplier' (ID: 61814)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.008409019559621811
    2. 'just' → logprob: -5.008409023284912
    3. 'im' → logprob: -6.758409023284912
    4. 'aj' → logprob: -8.633408546447754
    5. 'return' → logprob: -9.258408546447754
    6. 'aff' → logprob: -9.633408546447754
    7. 'pr' → logprob: -9.758408546447754
    8. 'faire' → logprob: -10.383408546447754
    9. '```' → logprob: -11.258408546447754
    10. ' juste' → logprob: -11.258408546447754

Token 481: ' par' (ID: 686)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.019269747659564018
    2. '(result' → logprob: -4.894269943237305
    3. 'by' → logprob: -5.394269943237305
    4. ' result' → logprob: -6.019269943237305
    5. ' by' → logprob: -6.644269943237305
    6. '*' → logprob: -6.769269943237305
    7. 'n' → logprob: -7.144269943237305
    8. 'pow' → logprob: -7.644269943237305
    9. '(n' → logprob: -8.144269943237305
    10. '=result' → logprob: -9.394269943237305

Token 482: ' (' (ID: 350)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.7027518153190613
    2. '2' → logprob: -0.9527518153190613
    3. 'pow' → logprob: -2.952751874923706
    4. 'n' → logprob: -3.577751874923706
    5. ' comb' → logprob: -4.452751636505127
    6. 'something' → logprob: -4.702751636505127
    7. '(' → logprob: -5.202751636505127
    8. '(n' → logprob: -5.452751636505127
    9. 'inv' → logprob: -6.702751636505127
    10. ' something' → logprob: -7.077751636505127

Token 483: 'n' (ID: 77)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.8899222612380981
    2. 'comb' → logprob: -1.0149222612380981
    3. 'n' → logprob: -2.0149221420288086
    4. 'pow' → logprob: -3.2649221420288086
    5. '(' → logprob: -4.389922142028809
    6. '(n' → logprob: -4.514922142028809
    7. ' comb' → logprob: -4.889922142028809
    8. ' n' → logprob: -5.014922142028809
    9. 'something' → logprob: -5.264922142028809
    10. ' ' → logprob: -5.889922142028809

Token 484: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.07275038212537766
    2. ' -' → logprob: -3.0727503299713135
    3. ')' → logprob: -3.8227503299713135
    4. '+' → logprob: -7.447750568389893
    5. '(n' → logprob: -7.697750568389893
    6. '!' → logprob: -7.822750568389893
    7. '*' → logprob: -9.072750091552734
    8. '   ' → logprob: -9.322750091552734
    9. '-)' → logprob: -9.697750091552734
    10. '(' → logprob: -9.947750091552734

Token 485: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.048372380435466766
    2. '2' → logprob: -3.548372268676758
    3. ')' → logprob: -4.548372268676758
    4. '!' → logprob: -5.548372268676758
    5. '(' → logprob: -7.298372268676758
    6. 'n' → logprob: -7.423372268676758
    7. ' ' → logprob: -7.423372268676758
    8. '-' → logprob: -7.798372268676758
    9. 'pow' → logprob: -8.048372268676758
    10. ')!' → logprob: -8.048372268676758

Token 486: ')!
' (ID: 149831)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04093076288700104
    2. '*' → logprob: -3.41593074798584
    3. ')!' → logprob: -5.91593074798584
    4. '!' → logprob: -6.29093074798584
    5. ' *' → logprob: -7.04093074798584
    6. '   ' → logprob: -7.29093074798584
    7. ' )' → logprob: -8.41593074798584
    8. ')*' → logprob: -8.91593074798584
    9. '```' → logprob: -8.91593074798584
    10. '*!' → logprob: -9.41593074798584

Token 487: 'final' (ID: 17196)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6217599511146545
    2. 'result' → logprob: -0.8717599511146545
    3. ' *' → logprob: -3.1217598915100098
    4. ' result' → logprob: -7.87175989151001
    5. '(result' → logprob: -9.121760368347168
    6. '*
' → logprob: -9.496760368347168
    7. '*(' → logprob: -9.496760368347168
    8. '```' → logprob: -11.121760368347168
    9. '*object' → logprob: -11.871760368347168
    10. ' *
' → logprob: -11.996760368347168

Token 488: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9217536449432373
    2. '_result' → logprob: -1.4217536449432373
    3. ' =' → logprob: -1.6717536449432373
    4. '=' → logprob: -2.0467536449432373
    5. 'result' → logprob: -3.5467536449432373
    6. '_factor' → logprob: -4.421753883361816
    7. '_multiplier' → logprob: -8.171753883361816
    8. '_mul' → logprob: -8.296753883361816
    9. ' result' → logprob: -8.296753883361816
    10. '```' → logprob: -8.421753883361816

Token 489: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.216685488820076
    2. '(result' → logprob: -1.7166855335235596
    3. ' result' → logprob: -4.3416852951049805
    4. ' (' → logprob: -6.2166852951049805
    5. 'final' → logprob: -9.46668529510498
    6. '((' → logprob: -10.71668529510498
    7. '(final' → logprob: -11.09168529510498
    8. '(n' → logprob: -11.96668529510498
    9. '(' → logprob: -12.34168529510498
    10. '```' → logprob: -12.84168529510498

Token 490: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6932624578475952
    2. ' *' → logprob: -0.6932624578475952
    3. '*(' → logprob: -9.693262100219727
    4. ' ' → logprob: -10.318262100219727
    5. '```' → logprob: -12.568262100219727
    6. ' ' → logprob: -12.818262100219727
    7. '
' → logprob: -12.943262100219727
    8. '   ' → logprob: -13.068262100219727
    9. '*object' → logprob: -13.193262100219727
    10. '**' → logprob: -13.443262100219727

Token 491: ' comb' (ID: 4134)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.000556012790184468
    2. ' (' → logprob: -7.500555992126465
    3. '((' → logprob: -13.375555992126465
    4. '(' → logprob: -13.750555992126465
    5. 'comb' → logprob: -15.125555992126465
    6. 'fact' → logprob: -16.37555694580078
    7. ' comb' → logprob: -16.87555694580078
    8. 'n' → logprob: -17.12555694580078
    9. '(com' → logprob: -17.25055694580078
    10. 'factor' → logprob: -17.75055694580078

Token 492: '.fac' (ID: 108153)
  Prédit: '.P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.P' → logprob: -0.2906668186187744
    2. '.' → logprob: -1.4156668186187744
    3. '.fac' → logprob: -5.290666580200195
    4. '.factor' → logprob: -6.540666580200195
    5. '.(' → logprob: -7.415666580200195
    6. '.F' → logprob: -7.540666580200195
    7. ' .' → logprob: -7.665666580200195
    8. '.C' → logprob: -8.165666580200195
    9. '.fact' → logprob: -8.165666580200195
    10. 'P' → logprob: -8.790666580200195

Token 493: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.010220995172858238
    2. '[n' → logprob: -5.385221004486084
    3. '(' → logprob: -5.885221004486084
    4. '[(' → logprob: -6.135221004486084
    5. '[' → logprob: -7.760221004486084
    6. ' (' → logprob: -9.010220527648926
    7. '((' → logprob: -10.760220527648926
    8. '```' → logprob: -11.260220527648926
    9. '([' → logprob: -11.385220527648926
    10. '(
' → logprob: -11.385220527648926

Token 494: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0034945886582136154
    2. ' -' → logprob: -5.753494739532471
    3. '(n' → logprob: -8.628494262695312
    4. ')' → logprob: -9.503494262695312
    5. '(' → logprob: -10.378494262695312
    6. '()-' → logprob: -11.003494262695312
    7. '()' → logprob: -11.503494262695312
    8. '   ' → logprob: -13.253494262695312
    9. '1' → logprob: -13.378494262695312
    10. '[' → logprob: -14.378494262695312

Token 495: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. '2' → logprob: -13.750000953674316
    3. ' ' → logprob: -16.125001907348633
    4. '<|end|>' → logprob: -17.750001907348633
    5. '```' → logprob: -18.625001907348633
    6. '   ' → logprob: -19.125001907348633
    7. ')' → logprob: -19.375001907348633
    8. '۱' → logprob: -19.625001907348633
    9. '১' → logprob: -20.000001907348633
    10. '१' → logprob: -20.250001907348633

Token 496: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001029471677611582
    2. ')%' → logprob: -9.250102996826172
    3. ')
' → logprob: -12.500102996826172
    4. ' )' → logprob: -13.125102996826172
    5. ')`' → logprob: -14.500102996826172
    6. '```' → logprob: -16.500102996826172
    7. '))' → logprob: -16.750102996826172
    8. '%' → logprob: -16.750102996826172
    9. '),' → logprob: -16.750102996826172
    10. '   ' → logprob: -17.000102996826172

Token 497: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.12693557143211365
    2. ' %' → logprob: -2.1269354820251465
    3. ')' → logprob: -13.126935958862305
    4. '%n' → logprob: -13.126935958862305
    5. '```' → logprob: -14.001935958862305
    6. '%
' → logprob: -14.376935958862305
    7. 'result' → logprob: -14.751935958862305
    8. '
' → logprob: -15.001935958862305
    9. 'print' → logprob: -15.001935958862305
    10. ')%' → logprob: -15.376935958862305

Token 498: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -1.9361264946837764e-07
    2. ' MOD' → logprob: -16.25
    3. 'MD' → logprob: -21.25
    4. 'MO' → logprob: -22.0
    5. '_MOD' → logprob: -22.125
    6. '.MOD' → logprob: -22.25
    7. 'MODE' → logprob: -23.125
    8. '```' → logprob: -23.375
    9. 'MODULE' → logprob: -23.625
    10. '
' → logprob: -24.0

Token 499: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0007369658560492098
    2. 'final' → logprob: -7.250737190246582
    3. '<|end|>' → logprob: -10.750737190246582
    4. '```' → logprob: -13.125737190246582
    5. 'return' → logprob: -13.375737190246582
    6. 'result' → logprob: -13.625737190246582
    7. ' print' → logprob: -14.750737190246582
    8. '#' → logprob: -15.500737190246582
    9. '#print' → logprob: -15.750737190246582
    10. '
' → logprob: -17.250736236572266

Token 500: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.56102097814437e-05
    2. 'final' → logprob: -10.000045776367188
    3. ' print' → logprob: -16.625045776367188
    4. '```' → logprob: -16.625045776367188
    5. '
' → logprob: -18.750045776367188
    6. '<|end|>' → logprob: -19.500045776367188
    7. '#print' → logprob: -20.250045776367188
    8. '#' → logprob: -21.250045776367188
    9. '(print' → logprob: -21.375045776367188
    10. 'return' → logprob: -21.750045776367188

Token 501: '(final' (ID: 14111)
  Prédit: '(final'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(final' → logprob: -0.0002072357019642368
    2. 'final' → logprob: -8.50020694732666
    3. '(' → logprob: -12.87520694732666
    4. ' final' → logprob: -13.75020694732666
    5. ' (' → logprob: -19.000207901000977
    6. '(f' → logprob: -19.125207901000977
    7. 'Final' → logprob: -19.250207901000977
    8. '_final' → logprob: -19.875207901000977
    9. '(
' → logprob: -20.500207901000977
    10. '	final' → logprob: -20.500207901000977

Token 502: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.1008713702030946e-06
    2. ' )' → logprob: -13.500001907348633
    3. ')
' → logprob: -15.375001907348633
    4. '))' → logprob: -15.875001907348633
    5. '(' → logprob: -16.000001907348633
    6. '()' → logprob: -16.625001907348633
    7. '())' → logprob: -17.375001907348633
    8. ')`' → logprob: -17.625001907348633
    9. '')' → logprob: -18.250001907348633
    10. '`)' → logprob: -18.875001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 500
Tokens correctement prédits (1ère position, stricte): 165
Tokens correctement prédits (1ère position, avec adaptation): 178
Tokens correctement prédits (top 10): 345
Précision stricte (1ère position): 33.00%
Précision adaptée (1ère position): 35.60%
Précision (top 10): 69.00%
================================================================================
