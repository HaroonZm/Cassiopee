================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:45:45
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
num_elements = int(input())
values_list = list(map(int, input().split()))

sum_result = values_list[0] + values_list[-1]

for index in range(num_elements - 2):
    sum_result += min(values_list[index], values_list[index + 1])
print(sum_result)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'num' (ID: 4571)
  → Token d'amorce (pas de prédiction)

Token 1: '_elements' (ID: 53344)
  → Token d'amorce (pas de prédiction)

Token 2: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 3: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.020207595080137253
    2. '10' → logprob: -4.395207405090332
    3. '0' → logprob: -5.020207405090332
    4. ' len' → logprob: -7.145207405090332
    5. '100' → logprob: -10.145207405090332
    6. '32' → logprob: -10.145207405090332
    7. ' []' → logprob: -10.145207405090332
    8. '20' → logprob: -10.520207405090332
    9. '5' → logprob: -10.520207405090332
    10. '1' → logprob: -10.645207405090332

Token 4: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0006488138460554183
    2. '```' → logprob: -8.000648498535156
    3. '(num' → logprob: -9.250648498535156
    4. '`' → logprob: -9.375648498535156
    5. '('' → logprob: -10.500648498535156
    6. ''' → logprob: -10.750648498535156
    7. '_' → logprob: -11.625648498535156
    8. ')' → logprob: -11.625648498535156
    9. '40' → logprob: -11.625648498535156
    10. '("("' → logprob: -11.750648498535156

Token 5: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.036697883158922195
    2. ')' → logprob: -3.4116978645324707
    3. '()' → logprob: -6.286697864532471
    4. '(
' → logprob: -8.536698341369629
    5. '())' → logprob: -8.661698341369629
    6. '("("' → logprob: -8.911698341369629
    7. '```' → logprob: -9.036698341369629
    8. '('' → logprob: -9.036698341369629
    9. '")' → logprob: -9.661698341369629
    10. '(()' → logprob: -9.786698341369629

Token 6: 'values' (ID: 7222)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.40486153960227966
    2. '[' → logprob: -2.2798614501953125
    3. ' ' → logprob: -2.7798614501953125
    4. ' for' → logprob: -3.0298614501953125
    5. ')' → logprob: -3.5298614501953125
    6. '+' → logprob: -4.1548614501953125
    7. '*' → logprob: -4.1548614501953125
    8. '=' → logprob: -4.7798614501953125
    9. '#' → logprob: -4.9048614501953125
    10. ''' → logprob: -5.0298614501953125

Token 7: '_list' (ID: 4162)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.002746742684394121
    2. '.' → logprob: -6.62774658203125
    3. '[]' → logprob: -7.87774658203125
    4. ')' → logprob: -8.62774658203125
    5. '=' → logprob: -8.87774658203125
    6. '[
' → logprob: -9.00274658203125
    7. '_' → logprob: -9.12774658203125
    8. '\[' → logprob: -9.25274658203125
    9. '[:]' → logprob: -9.25274658203125
    10. '```' → logprob: -9.87774658203125

Token 8: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.05531630292534828
    2. '.' → logprob: -3.055316209793091
    3. '.append' → logprob: -5.30531644821167
    4. '[]' → logprob: -7.43031644821167
    5. '```' → logprob: -7.80531644821167
    6. '[:]' → logprob: -8.430315971374512
    7. '.setdefault' → logprob: -9.305315971374512
    8. '\[' → logprob: -9.805315971374512
    9. '=' → logprob: -10.055315971374512
    10. ')' → logprob: -10.430315971374512

Token 9: ' list' (ID: 1562)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.038945965468883514
    2. ' list' → logprob: -4.163946151733398
    3. '[]' → logprob: -4.288946151733398
    4. 'list' → logprob: -5.288946151733398
    5. ' [' → logprob: -5.913946151733398
    6. '[' → logprob: -7.413946151733398
    7. ' ' → logprob: -8.413946151733398
    8. '[input' → logprob: -8.663946151733398
    9. ' input' → logprob: -9.413946151733398
    10. 'input' → logprob: -9.663946151733398

Token 10: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0013195235515013337
    2. '(values' → logprob: -7.751319408416748
    3. '[' → logprob: -8.126319885253906
    4. '(range' → logprob: -8.251319885253906
    5. '[(' → logprob: -9.376319885253906
    6. ')' → logprob: -9.501319885253906
    7. '(
' → logprob: -10.126319885253906
    8. '((' → logprob: -10.876319885253906
    9. '(

' → logprob: -10.876319885253906
    10. '("("' → logprob: -11.251319885253906

Token 11: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.16494062542915344
    2. '(' → logprob: -1.914940595626831
    3. '(lambda' → logprob: -5.53994083404541
    4. '(str' → logprob: -7.66494083404541
    5. '(eval' → logprob: -9.66494083404541
    6. '(
' → logprob: -9.78994083404541
    7. ')' → logprob: -10.03994083404541
    8. '(input' → logprob: -10.16494083404541
    9. 'int' → logprob: -10.53994083404541
    10. '<int' → logprob: -11.03994083404541

Token 12: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.015614082105457783
    2. ',input' → logprob: -4.640614032745361
    3. ',' → logprob: -5.890614032745361
    4. '(' → logprob: -6.515614032745361
    5. '))' → logprob: -6.890614032745361
    6. 'input' → logprob: -8.26561450958252
    7. ')' → logprob: -9.39061450958252
    8. '=input' → logprob: -9.51561450958252
    9. '```' → logprob: -10.76561450958252
    10. '`' → logprob: -11.14061450958252

Token 13: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.02976333536207676
    2. ' input' → logprob: -3.5297632217407227
    3. '(input' → logprob: -11.404763221740723
    4. ',input' → logprob: -14.529763221740723
    5. ')' → logprob: -15.029763221740723
    6. '	input' → logprob: -15.404763221740723
    7. '<input' → logprob: -15.529763221740723
    8. '=input' → logprob: -15.529763221740723
    9. '))' → logprob: -15.904763221740723
    10. '[input' → logprob: -16.77976417541504

Token 14: '().' (ID: 1454)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.6153754591941833
    2. '()' → logprob: -0.8653754591941833
    3. '())' → logprob: -3.740375518798828
    4. '().' → logprob: -4.740375518798828
    5. '()));' → logprob: -5.865375518798828
    6. '(' → logprob: -6.490375518798828
    7. '()>' → logprob: -7.240375518798828
    8. '())))' → logprob: -8.365375518798828
    9. '))' → logprob: -8.490375518798828
    10. '(()' → logprob: -9.365375518798828

Token 15: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0011966594029217958
    2. 'strip' → logprob: -6.75119686126709
    3. 'rstrip' → logprob: -10.75119686126709
    4. ' split' → logprob: -12.37619686126709
    5. '(split' → logprob: -15.00119686126709
    6. ')' → logprob: -15.00119686126709
    7. 'spl' → logprob: -16.251195907592773
    8. ' strip' → logprob: -17.626195907592773
    9. 'replace' → logprob: -17.751195907592773
    10. 's' → logprob: -18.626195907592773

Token 16: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.16248664259910583
    2. '))' → logprob: -2.0374865531921387
    3. '())' → logprob: -4.537486553192139
    4. '()' → logprob: -5.037486553192139
    5. ')' → logprob: -6.412486553192139
    6. '(' → logprob: -7.537486553192139
    7. '())))' → logprob: -9.787487030029297
    8. ')))' → logprob: -9.787487030029297
    9. ''))' → logprob: -9.912487030029297
    10. '()))
' → logprob: -10.662487030029297

Token 17: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.7411449551582336
    2. 'for' → logprob: -1.9911448955535889
    3. 'total' → logprob: -2.116144895553589
    4. 'result' → logprob: -2.241144895553589
    5. 's' → logprob: -2.616144895553589
    6. 'max' → logprob: -3.241144895553589
    7. 'if' → logprob: -4.366145133972168
    8. '[' → logprob: -4.866145133972168
    9. 'sorted' → logprob: -4.866145133972168
    10. 'count' → logprob: -5.866145133972168

Token 18: '_result' (ID: 11623)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008236650377511978
    2. '_' → logprob: -5.383236885070801
    3. '_values' → logprob: -6.383236885070801
    4. '(values' → logprob: -6.508236885070801
    5. '(sum' → logprob: -8.5082368850708
    6. ')' → logprob: -9.2582368850708
    7. '_sum' → logprob: -10.0082368850708
    8. '(num' → logprob: -11.1332368850708
    9. 's' → logprob: -11.5082368850708
    10. '()' → logprob: -11.7582368850708

Token 19: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05384831875562668
    2. ')' → logprob: -3.9288482666015625
    3. '+' → logprob: -4.6788482666015625
    4. '=' → logprob: -5.0538482666015625
    5. '()' → logprob: -5.1788482666015625
    6. '_' → logprob: -5.4288482666015625
    7. '[' → logprob: -5.6788482666015625
    8. '<|end|>' → logprob: -6.0538482666015625
    9. 's' → logprob: -8.678848266601562
    10. '```' → logprob: -9.178848266601562

Token 20: ' values' (ID: 4824)
  Prédit: ' sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.19729091227054596
    2. '0' → logprob: -2.4472908973693848
    3. 'sum' → logprob: -2.4472908973693848
    4. ' ' → logprob: -5.197290897369385
    5. ' values' → logprob: -7.947290897369385
    6. 'values' → logprob: -9.697291374206543
    7. '(sum' → logprob: -10.697291374206543
    8. ' max' → logprob: -11.572291374206543
    9. ' num' → logprob: -12.822291374206543
    10. '	sum' → logprob: -13.322291374206543

Token 21: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.03445902839303017
    2. '_result' → logprob: -4.409459114074707
    3. '_' → logprob: -4.534459114074707
    4. '_values' → logprob: -5.409459114074707
    5. '[_' → logprob: -5.534459114074707
    6. '_elements' → logprob: -6.534459114074707
    7. '_results' → logprob: -7.534459114074707
    8. '[' → logprob: -8.534459114074707
    9. '_sum' → logprob: -8.659459114074707
    10. '_value' → logprob: -10.784459114074707

Token 22: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0915954113006592
    2. '.' → logprob: -1.2165954113006592
    3. '[:]' → logprob: -1.2165954113006592
    4. ')' → logprob: -4.216595649719238
    5. '<|end|>' → logprob: -4.341595649719238
    6. '```' → logprob: -4.466595649719238
    7. '.sum' → logprob: -4.591595649719238
    8. '[:' → logprob: -5.341595649719238
    9. '.reduce' → logprob: -5.716595649719238
    10. '.copy' → logprob: -5.716595649719238

Token 23: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00038586699520237744
    2. ':' → logprob: -8.375386238098145
    3. ' ' → logprob: -9.250386238098145
    4. ')' → logprob: -10.625386238098145
    5. ' :' → logprob: -11.000386238098145
    6. ']' → logprob: -11.625386238098145
    7. '-' → logprob: -12.375386238098145
    8. '])' → logprob: -13.125386238098145
    9. ':]' → logprob: -13.375386238098145
    10. ' :]' → logprob: -14.250386238098145

Token 24: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5603969693183899
    2. ' +' → logprob: -0.9353969693183899
    3. ' )' → logprob: -4.560397148132324
    4. ' ]' → logprob: -4.560397148132324
    5. ']' → logprob: -4.935397148132324
    6. ')' → logprob: -4.935397148132324
    7. ' ])' → logprob: -7.810397148132324
    8. ' ' → logprob: -8.060397148132324
    9. '+)' → logprob: -8.060397148132324
    10. '+]' → logprob: -9.560397148132324

Token 25: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.05544476583600044
    2. '<|end|>' → logprob: -3.5554447174072266
    3. ' +' → logprob: -3.6804447174072266
    4. ' ' → logprob: -9.805444717407227
    5. '<|end|>' → logprob: -9.930444717407227
    6. ')' → logprob: -11.555444717407227
    7. '>' → logprob: -11.680444717407227
    8. '[' → logprob: -12.305444717407227
    9. 'for' → logprob: -12.430444717407227
    10. '  ' → logprob: -12.680444717407227

Token 26: ' values' (ID: 4824)
  Prédit: ' values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' values' → logprob: -0.029756510630249977
    2. 'values' → logprob: -3.529756546020508
    3. '	values' → logprob: -13.154756546020508
    4. ' sum' → logprob: -13.404756546020508
    5. '(values' → logprob: -13.904756546020508
    6. ' ' → logprob: -14.779756546020508
    7. ' valores' → logprob: -15.404756546020508
    8. 'sum' → logprob: -15.404756546020508
    9. ' num' → logprob: -15.779756546020508
    10. '.values' → logprob: -15.779756546020508

Token 27: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.007106647826731205
    2. 's' → logprob: -5.007106781005859
    3. '_elements' → logprob: -8.25710678100586
    4. '_s' → logprob: -9.50710678100586
    5. '_' → logprob: -10.50710678100586
    6. '_lst' → logprob: -12.00710678100586
    7. '_values' → logprob: -12.38210678100586
    8. '_results' → logprob: -12.50710678100586
    9. '```' → logprob: -12.63210678100586
    10. '_result' → logprob: -13.13210678100586

Token 28: '[-' (ID: 17503)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.939851037808694e-05
    2. '\[' → logprob: -11.875029563903809
    3. '[len' → logprob: -12.000029563903809
    4. '[
' → logprob: -12.250029563903809
    5. '```' → logprob: -12.250029563903809
    6. '[-' → logprob: -13.000029563903809
    7. '[num' → logprob: -14.125029563903809
    8. '[i' → logprob: -14.125029563903809
    9. ' [' → logprob: -14.250029563903809
    10. '[first' → logprob: -15.375029563903809

Token 29: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -13.625001907348633
    3. ']' → logprob: -16.062501907348633
    4. '１' → logprob: -16.875001907348633
    5. '0' → logprob: -17.125001907348633
    6. '2' → logprob: -17.187501907348633
    7. '```' → logprob: -17.437501907348633
    8. '۱' → logprob: -17.500001907348633
    9. '   ' → logprob: -17.875001907348633
    10. '  ' → logprob: -18.062501907348633

Token 30: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.659005157416686e-05
    2. ']' → logprob: -9.875066757202148
    3. ' )' → logprob: -12.250066757202148
    4. '])' → logprob: -12.250066757202148
    5. '）' → logprob: -13.000066757202148
    6. '}' → logprob: -13.500066757202148
    7. ')]' → logprob: -14.375066757202148
    8. '))' → logprob: -15.125066757202148
    9. ')])' → logprob: -15.250066757202148
    10. '`)' → logprob: -15.750066757202148

Token 31: 'for' (ID: 1938)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7732546925544739
    2. '
' → logprob: -1.273254632949829
    3. '<|end|>' → logprob: -1.773254632949829
    4. '+' → logprob: -3.523254632949829
    5. '\n' → logprob: -4.023254871368408
    6. '*' → logprob: -4.398254871368408
    7. 'if' → logprob: -5.148254871368408
    8. '```' → logprob: -5.398254871368408
    9. '<|end|>' → logprob: -5.773254871368408
    10. '\' → logprob: -5.898254871368408

Token 32: ' index' (ID: 3472)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.06615068763494492
    2. ' ' → logprob: -3.066150665283203
    3. ' _' → logprob: -4.816150665283203
    4. ' num' → logprob: -4.816150665283203
    5. ' value' → logprob: -7.566150665283203
    6. '_' → logprob: -7.941150665283203
    7. ' element' → logprob: -8.691150665283203
    8. 'i' → logprob: -10.066150665283203
    9. ' index' → logprob: -10.066150665283203
    10. ' item' → logprob: -10.566150665283203

Token 33: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023297304287552834
    2. 'in' → logprob: -3.7732973098754883
    3. ' ' → logprob: -10.273297309875488
    4. '+' → logprob: -12.273297309875488
    5. '	in' → logprob: -13.273297309875488
    6. 's' → logprob: -13.523297309875488
    7. '```' → logprob: -13.773297309875488
    8. '1' → logprob: -13.773297309875488
    9. '  ' → logprob: -14.023297309875488
    10. '<|end|>' → logprob: -14.273297309875488

Token 34: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0011754630832001567
    2. 'range' → logprob: -6.751175403594971
    3. '	range' → logprob: -13.126175880432129
    4. ' ' → logprob: -13.251175880432129
    5. ' values' → logprob: -14.001175880432129
    6. ' ' → logprob: -15.501175880432129
    7. '  ' → logprob: -15.751175880432129
    8. '(range' → logprob: -16.501174926757812
    9. ' xrange' → logprob: -17.126174926757812
    10. '_range' → logprob: -17.126174926757812

Token 35: '(num' (ID: 15828)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0009226576657965779
    2. '(len' → logprob: -7.125922679901123
    3. '(num' → logprob: -9.125922203063965
    4. ' (' → logprob: -11.625922203063965
    5. '(
' → logprob: -14.875922203063965
    6. '(

' → logprob: -17.00092315673828
    7. 'len' → logprob: -18.00092315673828
    8. '(length' → logprob: -18.00092315673828
    9. '(n' → logprob: -18.12592315673828
    10. '1' → logprob: -18.12592315673828

Token 36: '_elements' (ID: 53344)
  Prédit: '_elements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_elements' → logprob: -0.0002072357019642368
    2. '_' → logprob: -8.50020694732666
    3. '_e' → logprob: -13.62520694732666
    4. '_)' → logprob: -13.87520694732666
    5. ' _' → logprob: -14.50020694732666
    6. '_elem' → logprob: -15.12520694732666
    7. '_ELEMENTS' → logprob: -15.50020694732666
    8. '_ele' → logprob: -15.62520694732666
    9. ')_' → logprob: -15.87520694732666
    10. ')' → logprob: -15.87520694732666

Token 37: ' -' (ID: 533)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007774610538035631
    2. ' ):' → logprob: -4.882774829864502
    3. ')' → logprob: -9.382774353027344
    4. '):
' → logprob: -10.007774353027344
    5. '-' → logprob: -11.007774353027344
    6. ' -' → logprob: -11.757774353027344
    7. ' )' → logprob: -12.507774353027344
    8. '1' → logprob: -13.257774353027344
    9. '   ' → logprob: -13.382774353027344
    10. '+' → logprob: -13.382774353027344

Token 38: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5760942101478577
    2. '1' → logprob: -0.8260942101478577
    3. '2' → logprob: -8.826094627380371
    4. ')' → logprob: -12.326094627380371
    5. '<|end|>' → logprob: -13.201094627380371
    6. '```' → logprob: -14.076094627380371
    7. ' )' → logprob: -15.763594627380371
    8. '  ' → logprob: -16.076093673706055
    9. ' ' → logprob: -16.201093673706055
    10. '0' → logprob: -16.513593673706055

Token 39: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6405310816480778e-05
    2. ' ' → logprob: -11.500016212463379
    3. '2' → logprob: -12.000016212463379
    4. '１' → logprob: -17.250017166137695
    5. '-' → logprob: -17.375017166137695
    6. '۱' → logprob: -18.062517166137695
    7. '   ' → logprob: -18.687517166137695
    8. '```' → logprob: -18.750017166137695
    9. '  ' → logprob: -19.125017166137695
    10. ')' → logprob: -19.562517166137695

Token 40: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.010351261124014854
    2. ' ):' → logprob: -4.635351181030273
    3. ':' → logprob: -7.760351181030273
    4. ')' → logprob: -9.260351181030273
    5. ' :' → logprob: -10.135351181030273
    6. '+' → logprob: -11.385351181030273
    7. ',' → logprob: -11.885351181030273
    8. ']:' → logprob: -12.010351181030273
    9. '):
' → logprob: -12.385351181030273
    10. '}:' → logprob: -13.885351181030273

Token 41: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17285357415676117
    2. ' ' → logprob: -2.047853469848633
    3. '    ' → logprob: -4.297853469848633
    4. '  ' → logprob: -5.672853469848633
    5. ' sum' → logprob: -5.672853469848633
    6. '+' → logprob: -6.672853469848633
    7. '  ' → logprob: -6.797853469848633
    8. '<|end|>' → logprob: -6.797853469848633
    9. '    
' → logprob: -6.922853469848633
    10. '```' → logprob: -7.297853469848633

Token 42: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.025004297494888306
    2. 'sum' (adapté à ' sum') → logprob: -4.1500043869018555
    3. ' print' → logprob: -5.6500043869018555
    4. '    ' → logprob: -6.0250043869018555
    5. '   ' → logprob: -6.0250043869018555
    6. ' ' → logprob: -8.900004386901855
    7. 'print' → logprob: -9.025004386901855
    8. ' values' → logprob: -9.150004386901855
    9. '	sum' → logprob: -9.275004386901855
    10. ' if' → logprob: -10.775004386901855

Token 43: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -0.02345627173781395
    2. '_' → logprob: -3.773456335067749
    3. 's' → logprob: -9.398456573486328
    4. ' _' → logprob: -9.773456573486328
    5. 'result' → logprob: -10.398456573486328
    6. ' =' → logprob: -12.523456573486328
    7. '__' → logprob: -12.648456573486328
    8. ' ' → logprob: -12.773456573486328
    9. '_=' → logprob: -12.773456573486328
    10. '```' → logprob: -13.023456573486328

Token 44: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.002824254333972931
    2. ' +' → logprob: -6.377824306488037
    3. '+' → logprob: -7.002824306488037
    4. '+=' → logprob: -8.752823829650879
    5. ' ' → logprob: -10.627823829650879
    6. ' -=' → logprob: -11.127823829650879
    7. ' =' → logprob: -11.627823829650879
    8. ' ^=' → logprob: -14.377823829650879
    9. '+='' → logprob: -14.627823829650879
    10. ')' → logprob: -15.002823829650879

Token 45: ' min' (ID: 1349)
  Prédit: ' values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' values' → logprob: -0.048601001501083374
    2. 'values' → logprob: -3.048600912094116
    3. '(values' → logprob: -12.048601150512695
    4. '	values' → logprob: -12.298601150512695
    5. ' ' → logprob: -13.173601150512695
    6. '_values' → logprob: -15.298601150512695
    7. '.values' → logprob: -15.548601150512695
    8. '+' → logprob: -15.673601150512695
    9. ' +' → logprob: -16.173601150512695
    10. '1' → logprob: -16.298601150512695

Token 46: '(values' (ID: 40883)
  Prédit: '(values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(values' → logprob: -0.06198056787252426
    2. '(' → logprob: -2.8119804859161377
    3. ' (' → logprob: -12.311980247497559
    4. '(vals' → logprob: -12.811980247497559
    5. '((' → logprob: -13.061980247497559
    6. 'values' → logprob: -14.436980247497559
    7. '(value' → logprob: -14.561980247497559
    8. '([' → logprob: -14.936980247497559
    9. '(numbers' → logprob: -15.186980247497559
    10. '(
' → logprob: -15.311980247497559

Token 47: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.3544423381972592e-05
    2. '_elements' → logprob: -12.25001335144043
    3. 's' → logprob: -13.37501335144043
    4. '_' → logprob: -13.37501335144043
    5. ')_' → logprob: -14.00001335144043
    6. '[_' → logprob: -14.00001335144043
    7. '_values' → logprob: -14.50001335144043
    8. ' _' → logprob: -14.62501335144043
    9. '-_' → logprob: -14.87501335144043
    10. '[index' → logprob: -15.12501335144043

Token 48: '[index' (ID: 11815)
  Prédit: '[index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[index' → logprob: -0.026308424770832062
    2. '[' → logprob: -3.651308536529541
    3. ' [' → logprob: -12.901308059692383
    4. 'index' → logprob: -13.651308059692383
    5. '[
' → logprob: -14.026308059692383
    6. ')' → logprob: -14.151308059692383
    7. '(index' → logprob: -14.151308059692383
    8. '[Index' → logprob: -14.651308059692383
    9. '[(' → logprob: -15.026308059692383
    10. '[i' → logprob: -15.026308059692383

Token 49: '],' (ID: 2155)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.562064528465271
    2. '+' → logprob: -0.937064528465271
    3. '],' → logprob: -3.3120646476745605
    4. '   ' → logprob: -6.9370646476745605
    5. ']' → logprob: -7.4370646476745605
    6. ' ' → logprob: -9.187064170837402
    7. ' ],' → logprob: -10.937064170837402
    8. '1' → logprob: -11.312064170837402
    9. ',' → logprob: -11.562064170837402
    10. '  ' → logprob: -11.687064170837402

Token 50: ' values' (ID: 4824)
  Prédit: ' values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' values' → logprob: -0.020658794790506363
    2. 'values' → logprob: -3.8956587314605713
    3. '	values' → logprob: -9.520658493041992
    4. ' ' → logprob: -11.020658493041992
    5. '   ' → logprob: -11.020658493041992
    6. '(values' → logprob: -12.270658493041992
    7. '  ' → logprob: -13.520658493041992
    8. '.values' → logprob: -13.770658493041992
    9. ' ' → logprob: -14.020658493041992
    10. '    ' → logprob: -14.145658493041992

Token 51: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.00017529279284644872
    2. '+' → logprob: -9.000175476074219
    3. '[index' → logprob: -10.250175476074219
    4. 's' → logprob: -12.000175476074219
    5. 'List' → logprob: -12.625175476074219
    6. '[_' → logprob: -13.875175476074219
    7. '_' → logprob: -14.000175476074219
    8. '```' → logprob: -14.125175476074219
    9. '[' → logprob: -14.375175476074219
    10. '_LIST' → logprob: -14.750175476074219

Token 52: '[index' (ID: 11815)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.08633943647146225
    2. ' +' → logprob: -2.7113394737243652
    3. '[index' → logprob: -4.211339473724365
    4. 'index' → logprob: -6.711339473724365
    5. ' index' → logprob: -9.336338996887207
    6. '   ' → logprob: -9.586338996887207
    7. ' ' → logprob: -10.211338996887207
    8. '=index' → logprob: -12.211338996887207
    9. '	index' → logprob: -12.461338996887207
    10. '@index' → logprob: -12.586338996887207

Token 53: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.12695404887199402
    2. ' +' → logprob: -2.1269540786743164
    3. ' ' → logprob: -11.001954078674316
    4. '   ' → logprob: -11.751954078674316
    5. '＋' → logprob: -15.251954078674316
    6. ' ' → logprob: -15.626954078674316
    7. '  ' → logprob: -15.626954078674316
    8. ' plus' → logprob: -16.251953125
    9. '+++' → logprob: -16.251953125
    10. '++' → logprob: -16.501953125

Token 54: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0006348780007101595
    2. ' ' → logprob: -7.500634670257568
    3. '1' → logprob: -9.500635147094727
    4. '   ' → logprob: -12.625635147094727
    5. '3' → logprob: -13.250635147094727
    6. '  ' → logprob: -13.625635147094727
    7. '```' → logprob: -15.938135147094727
    8. '２' → logprob: -16.188135147094727
    9. '۲' → logprob: -16.188135147094727
    10. '    ' → logprob: -16.438135147094727

Token 55: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00014358828775584698
    2. '1' → logprob: -8.875144004821777
    3. ' ' → logprob: -12.750144004821777
    4. '3' → logprob: -15.250144004821777
    5. '   ' → logprob: -15.375144004821777
    6. '２' → logprob: -16.12514305114746
    7. '  ' → logprob: -16.31264305114746
    8. '۲' → logprob: -16.56264305114746
    9. '```' → logprob: -17.00014305114746
    10. '२' → logprob: -17.93764305114746

Token 56: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3978915512561798
    2. '])' → logprob: -1.1478915214538574
    3. '+' → logprob: -4.897891521453857
    4. '))' → logprob: -6.272891521453857
    5. ' )' → logprob: -7.897891521453857
    6. ' +' → logprob: -8.272891998291016
    7. ')])' → logprob: -8.397891998291016
    8. '})' → logprob: -8.897891998291016
    9. '   ' → logprob: -8.897891998291016
    10. ']' → logprob: -9.522891998291016

Token 57: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 58: '(sum' (ID: 45528)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005128088407218456
    2. '(sum' → logprob: -5.380127906799316
    3. '("("' → logprob: -7.880127906799316
    4. '('' → logprob: -9.130127906799316
    5. '()' → logprob: -11.755127906799316
    6. '(f' → logprob: -12.505127906799316
    7. '((' → logprob: -13.380127906799316
    8. 'sum' → logprob: -13.505127906799316
    9. '(`' → logprob: -13.505127906799316
    10. ' (' → logprob: -13.880127906799316

Token 59: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -0.00038777425652369857
    2. '_results' → logprob: -8.375388145446777
    3. '_' → logprob: -9.125388145446777
    4. ')_' → logprob: -11.250388145446777
    5. '_res' → logprob: -11.375388145446777
    6. '_r' → logprob: -12.000388145446777
    7. ' _' → logprob: -12.000388145446777
    8. ')' → logprob: -12.750388145446777
    9. '_output' → logprob: -13.250388145446777
    10. '_)' → logprob: -13.750388145446777

Token 60: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.703443770878948e-06
    2. '))' → logprob: -12.250007629394531
    3. '`)' → logprob: -13.875007629394531
    4. ' )' → logprob: -14.250007629394531
    5. ')
' → logprob: -15.250007629394531
    6. ')`' → logprob: -15.625007629394531
    7. '[' → logprob: -15.875007629394531
    8. '**' → logprob: -16.12500762939453
    9. '+' → logprob: -16.12500762939453
    10. '(' → logprob: -16.25000762939453


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 58
Tokens correctement prédits (1ère position, stricte): 24
Tokens correctement prédits (1ère position, avec adaptation): 24
Tokens correctement prédits (top 10): 43
Précision stricte (1ère position): 41.38%
Précision adaptée (1ère position): 41.38%
Précision (top 10): 74.14%
================================================================================
