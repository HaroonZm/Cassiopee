================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:13:13
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def main():
    # Read an integer input from the user which represents the half-length of string s (since s will be length 2*n)
    n = int(input())  # 'input()' reads a line from input, 'int()' converts it to an integer

    # Read another input string from the user which should be of length 2 * n
    s = input()  # This line reads the string input

    # Create two empty dictionaries d1 and d2, which will be used to store tuple keys mapping to integer counters
    # In Python, dictionaries are collections that store key-value pairs for fast lookup and counting
    d1 = dict()
    d2 = dict()

    # Create two lists named temp1 and temp2, each of length n, initialized with None values.
    # These will be used for temporary storage during string permutation constructions
    temp1 = [None] * n  # [None] * n makes a list where every element is None
    temp2 = [None] * n

    # Loop over all possible combinations ('ii') for selecting n positions out of 2*n (using bitmasks)
    # range(2 ** n) generates all bitmasks of length n (from 0 to 2^n - 1)
    for ii in range(2 ** n):
        # Convert integer ii to its binary string representation, padded with leading zeroes to length n
        # 'bin(ii)' converts integer to binary string prefixed with '0b', [2:] removes that prefix
        # concatenation with "0"*n pads with enough zeroes to ensure correct length, [-n:] slices the last n chars
        i = ("0" * n + bin(ii)[2:])[-n:]

        # Initialize two counter variables cnt1 and cnt2
        # cnt1 is used as the index for inserting at the beginning of temp1/2, starts at 0
        cnt1 = 0
        # cnt2 is used as the index for inserting at the end of temp1/2, starts at n-1 (last index)
        cnt2 = n - 1

        # Enumerate over each character 'j' and its index 'k' in the string 'i'
        # 'enumerate(i)' returns (index, character) for each character in the string 'i'
        for k, j in enumerate(i):
            # If the current bit is '1' (as a string, not an integer)
            if j == "1":
                # Place the character from s at position k into temp1 at index cnt1 (from start)
                temp1[cnt1] = s[k]
                # For temp2, place the character from the mirrored position from the end of s
                # 2*n - k - 1 calculates the mirrored index
                temp2[cnt1] = s[2 * n - k - 1]
                # Increment cnt1 to move to the next position from the start
                cnt1 += 1
            else:
                # Place the character from s at position k into temp1 at index cnt2 (from end)
                temp1[cnt2] = s[k]
                # Similarly for temp2, but mirrored index
                temp2[cnt2] = s[2 * n - k - 1]
                # Decrement cnt2 to move to the next position from the end
                cnt2 -= 1

        # Join the elements of temp1 into a string t1
        t1 = "".join(temp1)  # ''.join(list) makes a string from a list of characters

        # Similarly join temp2 into a string t2
        t2 = "".join(temp2)

        # Use tuple (t1, cnt1) as a key in dictionary d1:
        # If the key is not already present, add it with value 1 (first occurrence)
        # Otherwise, increment its count by 1
        if (t1, cnt1) not in d1.keys():
            d1[(t1, cnt1)] = 1
        else:
            d1[(t1, cnt1)] += 1

        # Do the same for d2 with key (t2, cnt1)
        if (t2, cnt1) not in d2.keys():
            d2[(t2, cnt1)] = 1
        else:
            d2[(t2, cnt1)] += 1

    # Initialize a variable ans to 0; this variable will accumulate the final answer
    ans = 0

    # Iterate over each item (key, value pair) in dictionary d1
    # .items() yields (key, value) tuples, where key is (t1, cnt1), value is a count
    for i, j in d1.items():
        # If the current key 'i' exists in d2
        if i in d2.keys():
            # Multiply the count from d1 (j) by the matching count in d2, and add to ans
            ans += j * d2[i]

    # Output the final computed answer using the print function
    print(ans)

# Call the main function to execute the program
main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' main' (ID: 2758)
  → Token d'amorce (pas de prédiction)

Token 2: '():
' (ID: 8595)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -0.27454787492752075
    2. '\n' → logprob: -1.774547815322876
    3. '   ' → logprob: -3.524547815322876
    4. '(' → logprob: -4.399548053741455
    5. ' 
' → logprob: -5.149548053741455
    6. '    
' → logprob: -5.274548053741455
    7. ' ' → logprob: -5.524548053741455
    8. ''' → logprob: -5.649548053741455
    9. '```' → logprob: -6.274548053741455
    10. '    ' → logprob: -6.399548053741455

Token 4: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5843620896339417
    2. '   ' → logprob: -1.4593620300292969
    3. 'pass' → logprob: -2.209362030029297
    4. 'return' → logprob: -2.834362030029297
    5. '#' (adapté à ' #') → logprob: -4.209362030029297
    6. 'p' → logprob: -5.209362030029297
    7. '```' → logprob: -5.709362030029297
    8. 'r' → logprob: -5.709362030029297
    9. '\' → logprob: -5.959362030029297
    10. 'a' → logprob: -6.084362030029297

Token 5: ' Read' (ID: 5405)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.950888454914093
    2. '   ' → logprob: -1.0758883953094482
    3. '#' → logprob: -1.8258883953094482
    4. ' pass' → logprob: -3.2008883953094482
    5. '    ' → logprob: -3.3258883953094482
    6. ' #' → logprob: -4.075888633728027
    7. '  ' → logprob: -5.200888633728027
    8. 'pass' → logprob: -5.200888633728027
    9. 'print' → logprob: -6.575888633728027
    10. '     ' → logprob: -6.825888633728027

Token 6: ' an' (ID: 448)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.41524845361709595
    2. ' ' → logprob: -1.2902483940124512
    3. '_' → logprob: -3.415248394012451
    4. ' (' → logprob: -3.915248394012451
    5. ''' → logprob: -6.040248394012451
    6. '   ' → logprob: -6.040248394012451
    7. '()' → logprob: -6.415248394012451
    8. ' )' → logprob: -6.915248394012451
    9. '"' → logprob: -7.040248394012451
    10. ')' → logprob: -7.290248394012451

Token 7: ' integer' (ID: 16336)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.6709207892417908
    2. ' ' → logprob: -0.7959207892417908
    3. '   ' → logprob: -4.0459208488464355
    4. ' line' → logprob: -5.6709208488464355
    5. ' user' → logprob: -5.7959208488464355
    6. 'input' → logprob: -5.9209208488464355
    7. ' file' → logprob: -6.0459208488464355
    8. 'n' → logprob: -6.7959208488464355
    9. '  ' → logprob: -7.0459208488464355
    10. '_' → logprob: -7.0459208488464355

Token 8: ' input' (ID: 3422)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02120315656065941
    2. '```' → logprob: -4.52120304107666
    3. '   ' → logprob: -5.39620304107666
    4. ' ' → logprob: -5.89620304107666
    5. '_' → logprob: -7.27120304107666
    6. ' (' → logprob: -7.39620304107666
    7. '`' → logprob: -8.02120304107666
    8. '(
' → logprob: -9.14620304107666
    9. 'n' → logprob: -9.14620304107666
    10. '(n' → logprob: -9.27120304107666

Token 9: ' from' (ID: 591)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.060259245336055756
    2. '```' → logprob: -3.6852593421936035
    3. '(' → logprob: -3.9352593421936035
    4. 'n' → logprob: -5.5602593421936035
    5. '`' → logprob: -5.6852593421936035
    6. '       ' → logprob: -6.4352593421936035
    7. '    ' → logprob: -6.6852593421936035
    8. ' ' → logprob: -6.8102593421936035
    9. 'input' → logprob: -7.4352593421936035
    10. '``' → logprob: -8.310258865356445

Token 10: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.2550244629383087
    2. ' user' → logprob: -2.2550244331359863
    3. ' input' → logprob: -3.1300244331359863
    4. 'input' → logprob: -3.2550244331359863
    5. 'user' → logprob: -4.005024433135986
    6. 'the' → logprob: -4.005024433135986
    7. ' ' → logprob: -6.630024433135986
    8. ' a' → logprob: -9.505024909973145
    9. ' users' → logprob: -10.880024909973145
    10. '   ' → logprob: -11.005024909973145

Token 11: ' user' (ID: 1825)
  Prédit: ' user'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' user' → logprob: -0.005260203033685684
    2. 'user' → logprob: -5.255259990692139
    3. ' ' → logprob: -11.505260467529297
    4. ' input' → logprob: -12.005260467529297
    5. 'input' → logprob: -12.380260467529297
    6. ' use' → logprob: -13.380260467529297
    7. ''' → logprob: -14.005260467529297
    8. ' user's' → logprob: -14.005260467529297
    9. '"user' → logprob: -14.505260467529297
    10. 'User' → logprob: -14.505260467529297

Token 12: ' which' (ID: 1118)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027148282155394554
    2. 'n' → logprob: -4.527148246765137
    3. '```' → logprob: -4.777148246765137
    4. '`' → logprob: -5.652148246765137
    5. 'x' → logprob: -7.527148246765137
    6. 'i' → logprob: -7.527148246765137
    7. '    
' → logprob: -7.527148246765137
    8. ' ' → logprob: -7.527148246765137
    9. '       ' → logprob: -7.652148246765137
    10. '    ' → logprob: -7.652148246765137

Token 13: ' represents' (ID: 18627)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10435909032821655
    2. ' represents' → logprob: -2.8543591499328613
    3. ' is' → logprob: -3.7293591499328613
    4. ''' → logprob: -4.479359149932861
    5. '  ' → logprob: -6.854359149932861
    6. '   ' → logprob: -7.104359149932861
    7. '_' → logprob: -7.604359149932861
    8. 's' → logprob: -7.729359149932861
    9. ' i' → logprob: -7.854359149932861
    10. '`' → logprob: -7.979359149932861

Token 14: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.11176672577857971
    2. ' a' → logprob: -2.486766815185547
    3. 'the' → logprob: -4.111766815185547
    4. 'a' → logprob: -5.361766815185547
    5. ' ' → logprob: -6.986766815185547
    6. ' an' → logprob: -8.986766815185547
    7. ' number' → logprob: -9.361766815185547
    8. ''' → logprob: -9.486766815185547
    9. 's' → logprob: -9.736766815185547
    10. '   ' → logprob: -9.861766815185547

Token 15: ' half' (ID: 6375)
  Prédit: ' number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.039960745722055435
    2. 'number' → logprob: -3.4149608612060547
    3. 'n' → logprob: -5.539960861206055
    4. ' n' → logprob: -6.789960861206055
    5. ' ' → logprob: -7.789960861206055
    6. ' total' → logprob: -8.539960861206055
    7. ' maximum' → logprob: -8.789960861206055
    8. ' amount' → logprob: -9.664960861206055
    9. ' user' → logprob: -9.664960861206055
    10. '   ' → logprob: -10.289960861206055

Token 16: '-length' (ID: 53970)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.064586341381073
    2. '-' → logprob: -3.6895864009857178
    3. 'space' → logprob: -4.189586162567139
    4. '_n' → logprob: -5.689586162567139
    5. '_space' → logprob: -5.689586162567139
    6. 'word' → logprob: -5.814586162567139
    7. ''' → logprob: -6.814586162567139
    8. '_word' → logprob: -6.939586162567139
    9. '_b' → logprob: -7.064586162567139
    10. '-width' → logprob: -7.564586162567139

Token 17: ' of' (ID: 328)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4355500638484955
    2. '   ' → logprob: -1.5605500936508179
    3. ' of' → logprob: -2.4355499744415283
    4. '_' → logprob: -4.060550212860107
    5. ' ' → logprob: -4.310550212860107
    6. '```' → logprob: -4.685550212860107
    7. ''' → logprob: -5.685550212860107
    8. ':' → logprob: -5.810550212860107
    9. ')' → logprob: -6.560550212860107
    10. 'of' → logprob: -6.810550212860107

Token 18: ' string' (ID: 1621)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.08073349297046661
    2. ' a' → logprob: -2.58073353767395
    3. 'the' → logprob: -6.705733299255371
    4. 'a' → logprob: -8.330733299255371
    5. ' ' → logprob: -8.580733299255371
    6. ' an' → logprob: -9.080733299255371
    7. '_' → logprob: -10.705733299255371
    8. ' each' → logprob: -11.205733299255371
    9. 's' → logprob: -11.455733299255371
    10. '"' → logprob: -12.205733299255371

Token 19: ' s' (ID: 265)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.973107099533081
    2. 's' → logprob: -1.348107099533081
    3. '   ' → logprob: -2.098107099533081
    4. '(' → logprob: -2.348107099533081
    5. 'n' → logprob: -2.848107099533081
    6. '`' → logprob: -3.598107099533081
    7. '```' → logprob: -3.848107099533081
    8. ' ' → logprob: -4.47310733795166
    9. ''' → logprob: -4.59810733795166
    10. ''s' → logprob: -5.47310733795166

Token 20: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08738991618156433
    2. 's' → logprob: -2.8373899459838867
    3. '```' → logprob: -4.212389945983887
    4. '`' → logprob: -5.087389945983887
    5. 'n' → logprob: -6.337389945983887
    6. '``' → logprob: -7.962389945983887
    7. ''' → logprob: -8.087389945983887
    8. ' ' → logprob: -8.212389945983887
    9. ''s' → logprob: -8.337389945983887
    10. '`s' → logprob: -8.337389945983887

Token 21: 'since' (ID: 21910)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08271320164203644
    2. '   ' → logprob: -2.9577131271362305
    3. 's' → logprob: -4.0827131271362305
    4. '):' → logprob: -5.4577131271362305
    5. ' )' → logprob: -5.5827131271362305
    6. ' ' → logprob: -6.4577131271362305
    7. '_' → logprob: -8.58271312713623
    8. ':' → logprob: -8.83271312713623
    9. ' s' → logprob: -8.95771312713623
    10. ',' → logprob: -8.95771312713623

Token 22: ' s' (ID: 265)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.4278932511806488
    2. ' s' → logprob: -1.4278932809829712
    3. 's' → logprob: -2.3028931617736816
    4. 'the' → logprob: -5.427893161773682
    5. ')' → logprob: -6.677893161773682
    6. ' a' → logprob: -7.427893161773682
    7. ' strings' → logprob: -7.677893161773682
    8. ' we' → logprob: -8.30289363861084
    9. '   ' → logprob: -8.42789363861084
    10. ' )' → logprob: -8.67789363861084

Token 23: ' will' (ID: 738)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0829310193657875
    2. ' is' → logprob: -3.4579310417175293
    3. ''s' → logprob: -3.5829310417175293
    4. 's' → logprob: -4.957931041717529
    5. '=' → logprob: -5.332931041717529
    6. ' has' → logprob: -6.582931041717529
    7. ' =' → logprob: -6.707931041717529
    8. '[' → logprob: -7.082931041717529
    9. ' )' → logprob: -7.082931041717529
    10. '_' → logprob: -7.582931041717529

Token 24: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.4845167100429535
    2. '_' → logprob: -1.7345167398452759
    3. ' ' → logprob: -2.7345166206359863
    4. '=' → logprob: -3.1095166206359863
    5. ' =' → logprob: -3.1095166206359863
    6. ' have' → logprob: -3.7345166206359863
    7. ''' → logprob: -5.484516620635986
    8. ')' → logprob: -5.609516620635986
    9. 's' → logprob: -5.734516620635986
    10. ''s' → logprob: -5.984516620635986

Token 25: ' length' (ID: 5517)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7239874601364136
    2. ' a' → logprob: -1.4739874601364136
    3. ' composed' → logprob: -2.098987579345703
    4. '_' → logprob: -3.098987579345703
    5. ' doubled' → logprob: -4.348987579345703
    6. 's' → logprob: -4.598987579345703
    7. ' used' → logprob: -4.598987579345703
    8. ')' → logprob: -4.723987579345703
    9. ' split' → logprob: -4.723987579345703
    10. ' s' → logprob: -4.973987579345703

Token 26: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.005731113720685244
    2. ' =' → logprob: -6.505731105804443
    3. ' )' → logprob: -6.630731105804443
    4. ')' → logprob: -6.755731105804443
    5. '=' → logprob: -7.130731105804443
    6. '2' → logprob: -8.380731582641602
    7. '_' → logprob: -8.880731582641602
    8. ' of' → logprob: -9.005731582641602
    9. '  ' → logprob: -9.380731582641602
    10. ' s' → logprob: -10.005731582641602

Token 27: '2' (ID: 17)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.044892698526382446
    2. '2' → logprob: -4.16989278793335
    3. 's' → logprob: -5.04489278793335
    4. '`' → logprob: -5.41989278793335
    5. ' of' → logprob: -5.66989278793335
    6. ' s' → logprob: -6.04489278793335
    7. '   ' → logprob: -6.04489278793335
    8. '```' → logprob: -6.41989278793335
    9. '=' → logprob: -7.04489278793335
    10. '1' → logprob: -7.16989278793335

Token 28: '*n' (ID: 58470)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5599126219749451
    2. ')' → logprob: -1.1849126815795898
    3. ' *' → logprob: -2.80991268157959
    4. 'n' → logprob: -3.68491268157959
    5. '_' → logprob: -4.80991268157959
    6. '*n' → logprob: -4.80991268157959
    7. ' )' → logprob: -4.93491268157959
    8. ' ' → logprob: -5.18491268157959
    9. '*)' → logprob: -6.05991268157959
    10. 's' → logprob: -6.18491268157959

Token 29: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0019154301844537258
    2. '):' → logprob: -6.376915454864502
    3. '   ' → logprob: -9.501914978027344
    4. 's' → logprob: -10.126914978027344
    5. ' )' → logprob: -10.376914978027344
    6. ' ' → logprob: -10.876914978027344
    7. ':' → logprob: -11.876914978027344
    8. ')
' → logprob: -12.001914978027344
    9. 'n' → logprob: -12.001914978027344
    10. ',' → logprob: -12.376914978027344

Token 30: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1488080471754074
    2. 'n' → logprob: -2.148808002471924
    3. '```' → logprob: -4.273808002471924
    4. 's' → logprob: -5.273808002471924
    5. '`' → logprob: -7.523808002471924
    6. '    
' → logprob: -7.648808002471924
    7. '\' → logprob: -7.898808002471924
    8. '\n' → logprob: -8.148808479309082
    9. '``' → logprob: -8.898808479309082
    10. '
' → logprob: -9.023808479309082

Token 31: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6456856727600098
    2. 'n' (adapté à ' n') → logprob: -0.8956856727600098
    3. 's' → logprob: -2.7706856727600098
    4. '```' → logprob: -6.39568567276001
    5. ' ' → logprob: -6.52068567276001
    6. ' n' → logprob: -7.89568567276001
    7. '    ' → logprob: -8.395685195922852
    8. '\' → logprob: -8.770685195922852
    9. '`' → logprob: -9.020685195922852
    10. '    
' → logprob: -9.270685195922852

Token 32: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07009660452604294
    2. '=' → logprob: -2.695096492767334
    3. ' ' → logprob: -8.945096969604492
    4. ')' → logprob: -12.070096969604492
    5. ' =
' → logprob: -12.070096969604492
    6. ',' → logprob: -12.195096969604492
    7. '  ' → logprob: -12.445096969604492
    8. '.' → logprob: -12.945096969604492
    9. 'space' → logprob: -13.195096969604492
    10. 's' → logprob: -14.195096969604492

Token 33: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.001052815350703895
    2. 'int' → logprob: -6.8760528564453125
    3. ' ' → logprob: -11.376052856445312
    4. '=int' → logprob: -12.001052856445312
    5. ' input' → logprob: -13.501052856445312
    6. ' ' → logprob: -14.751052856445312
    7. '<int' → logprob: -15.251052856445312
    8. '[int' → logprob: -16.501052856445312
    9. ' in' → logprob: -16.751052856445312
    10. '(int' → logprob: -16.751052856445312

Token 34: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07007680833339691
    2. '(input' → logprob: -2.6950767040252686
    3. '('' → logprob: -9.320076942443848
    4. '()' → logprob: -10.820076942443848
    5. 'input' → logprob: -10.945076942443848
    6. ' (' → logprob: -12.695076942443848
    7. '(
' → logprob: -13.320076942443848
    8. ''' → logprob: -14.320076942443848
    9. '(`' → logprob: -14.320076942443848
    10. '("("' → logprob: -14.320076942443848

Token 35: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.17455856502056122
    2. '()' → logprob: -2.174558639526367
    3. ')' → logprob: -3.174558639526367
    4. '(' → logprob: -5.549558639526367
    5. '('' → logprob: -7.799558639526367
    6. '()))' → logprob: -8.424558639526367
    7. '))' → logprob: -10.049558639526367
    8. ' ())' → logprob: -10.424558639526367
    9. '();)' → logprob: -11.049558639526367
    10. '(()' → logprob: -11.174558639526367

Token 36: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8498377203941345
    2. '\n' → logprob: -1.2248377799987793
    3. 's' → logprob: -1.8498377799987793
    4. '\' → logprob: -3.0998377799987793
    5. '```' → logprob: -3.3498377799987793
    6. '   ' → logprob: -3.8498377799987793
    7. '    
' → logprob: -5.474837779998779
    8. ''\' → logprob: -5.849837779998779
    9. 'n' → logprob: -6.099837779998779
    10. ' s' → logprob: -6.474837779998779

Token 37: ' #' (ID: 1069)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.618773877620697
    2. ')' → logprob: -1.9937739372253418
    3. '\n' → logprob: -2.243773937225342
    4. '
' → logprob: -2.368773937225342
    5. '\' → logprob: -3.118773937225342
    6. '<|end|>' → logprob: -3.493773937225342
    7. '   ' → logprob: -4.243773937225342
    8. '#' → logprob: -5.243773937225342
    9. '    
' → logprob: -5.368773937225342
    10. ' ' → logprob: -5.493773937225342

Token 38: ' '' (ID: 461)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9930816888809204
    2. ')' → logprob: -1.1180816888809204
    3. '<|end|>' → logprob: -2.118081569671631
    4. '
' → logprob: -2.368081569671631
    5. ' s' → logprob: -3.368081569671631
    6. 'n' → logprob: -4.368081569671631
    7. '<|end|>' → logprob: -4.743081569671631
    8. ' ' → logprob: -4.743081569671631
    9. ''s' → logprob: -4.993081569671631
    10. '\n' → logprob: -5.618081569671631

Token 39: 'input' (ID: 2586)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.050916869193315506
    2. 's' → logprob: -3.175916910171509
    3. '')' → logprob: -5.67591667175293
    4. ' s' → logprob: -6.92591667175293
    5. 'n' → logprob: -7.17591667175293
    6. ' )' → logprob: -7.42591667175293
    7. '
' → logprob: -7.55091667175293
    8. ' ' → logprob: -7.67591667175293
    9. 'a' → logprob: -8.55091667175293
    10. '\n' → logprob: -8.67591667175293

Token 40: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.26062119007110596
    2. '())' → logprob: -1.510621190071106
    3. ')' → logprob: -4.885621070861816
    4. '(' → logprob: -6.885621070861816
    5. '().' → logprob: -10.010621070861816
    6. '()
' → logprob: -12.010621070861816
    7. ' )' → logprob: -12.510621070861816
    8. '('' → logprob: -12.635621070861816
    9. '')' → logprob: -12.635621070861816
    10. ' ())' → logprob: -12.885621070861816

Token 41: ''' (ID: 6)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5655191540718079
    2. '())' → logprob: -1.190519094467163
    3. '()' → logprob: -2.065519094467163
    4. '().' → logprob: -7.690519332885742
    5. ' )' → logprob: -8.065519332885742
    6. '()
' → logprob: -9.190519332885742
    7. '(' → logprob: -9.440519332885742
    8. '.' → logprob: -10.315519332885742
    9. ' ' → logprob: -10.690519332885742
    10. '())
' → logprob: -10.690519332885742

Token 42: ' reads' (ID: 31523)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04128394275903702
    2. 's' → logprob: -3.9162838459014893
    3. '
' → logprob: -4.541284084320068
    4. '<|end|>' → logprob: -6.041284084320068
    5. 'n' → logprob: -6.416284084320068
    6. ' s' → logprob: -7.041284084320068
    7. '()' → logprob: -7.416284084320068
    8. ''s' → logprob: -7.541284084320068
    9. '\n' → logprob: -7.666284084320068
    10. ' ' → logprob: -7.666284084320068

Token 43: ' a' (ID: 261)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.18287105858325958
    2. ')' → logprob: -2.432871103286743
    3. '(' → logprob: -3.807871103286743
    4. '<|end|>' → logprob: -4.182870864868164
    5. '```' → logprob: -4.682870864868164
    6. '\' → logprob: -4.807870864868164
    7. '()\' → logprob: -5.057870864868164
    8. ' ' → logprob: -5.307870864868164
    9. 'newline' → logprob: -5.932870864868164
    10. '\n' → logprob: -6.057870864868164

Token 44: ' line' (ID: 2543)
  Prédit: ' string'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' string' → logprob: -1.3082140684127808
    2. ')' → logprob: -1.4332140684127808
    3. ' ' → logprob: -1.8082140684127808
    4. 'string' → logprob: -1.9332140684127808
    5. '\n' → logprob: -2.8082141876220703
    6. ' line' → logprob: -3.3082141876220703
    7. 'n' → logprob: -3.3082141876220703
    8. ' )' → logprob: -3.8082141876220703
    9. ' newline' → logprob: -4.68321418762207
    10. 'newline' → logprob: -4.93321418762207

Token 45: ' from' (ID: 591)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5822656750679016
    2. ')' → logprob: -0.9572656750679016
    3. '
' → logprob: -3.582265615463257
    4. ' s' → logprob: -4.332265853881836
    5. '\n' → logprob: -5.707265853881836
    6. ' ' → logprob: -6.457265853881836
    7. ')
' → logprob: -6.582265853881836
    8. '()' → logprob: -6.707265853881836
    9. '   ' → logprob: -6.707265853881836
    10. '\' → logprob: -6.832265853881836

Token 46: ' input' (ID: 3422)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.0851746797561646
    2. 'input' → logprob: -1.4601746797561646
    3. 'the' → logprob: -1.7101746797561646
    4. ' input' → logprob: -2.210174560546875
    5. 'stdin' → logprob: -3.085174560546875
    6. 'standard' → logprob: -3.585174560546875
    7. ' stdin' → logprob: -3.710174560546875
    8. ' standard' → logprob: -3.960174560546875
    9. ')' → logprob: -3.960174560546875
    10. ' user' → logprob: -7.085174560546875

Token 47: ',' (ID: 11)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.49588048458099365
    2. '
' → logprob: -1.4958804845809937
    3. ')' → logprob: -2.120880603790283
    4. '\n' → logprob: -4.120880603790283
    5. ' s' → logprob: -4.870880603790283
    6. '   ' → logprob: -5.120880603790283
    7. 'n' → logprob: -5.495880603790283
    8. '    
' → logprob: -6.245880603790283
    9. '\' → logprob: -6.370880603790283
    10. ' ' → logprob: -6.745880603790283

Token 48: ' '' (ID: 461)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.7011721134185791
    2. ')' → logprob: -0.9511721134185791
    3. ' )' → logprob: -2.701172113418579
    4. 's' → logprob: -3.576172113418579
    5. ' ' → logprob: -4.326171875
    6. '   ' → logprob: -5.201171875
    7. ' n' → logprob: -7.076171875
    8. '    ' → logprob: -7.576171875
    9. ' 
' → logprob: -7.701171875
    10. ')\' → logprob: -8.201171875

Token 49: 'int' (ID: 491)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0014059479581192136
    2. '()' → logprob: -7.376405715942383
    3. 'strip' → logprob: -8.626405715942383
    4. ' )' → logprob: -9.001405715942383
    5. '())' → logprob: -9.251405715942383
    6. 'input' → logprob: -10.001405715942383
    7. '')' → logprob: -10.126405715942383
    8. '\n' → logprob: -10.126405715942383
    9. 'n' → logprob: -10.376405715942383
    10. '.strip' → logprob: -10.501405715942383

Token 50: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16534923017024994
    2. '()' → logprob: -2.415349245071411
    3. ')' → logprob: -2.790349245071411
    4. '('' → logprob: -7.540349006652832
    5. '())' → logprob: -7.790349006652832
    6. '(input' → logprob: -8.665349006652832
    7. '```' → logprob: -8.790349006652832
    8. '("")' → logprob: -9.415349006652832
    9. '(
' → logprob: -9.415349006652832
    10. ' )' → logprob: -9.790349006652832

Token 51: ''' (ID: 6)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013166346587240696
    2. '(' → logprob: -4.888166427612305
    3. '()' → logprob: -5.513166427612305
    4. ' converts' → logprob: -7.263166427612305
    5. ' )' → logprob: -7.638166427612305
    6. '())' → logprob: -9.138166427612305
    7. 'convert' → logprob: -10.263166427612305
    8. '(convert' → logprob: -10.638166427612305
    9. ' convert' → logprob: -10.763166427612305
    10. ' converting' → logprob: -11.263166427612305

Token 52: ' converts' (ID: 64809)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.025168219581246376
    2. '()' → logprob: -4.150168418884277
    3. '<|end|>' → logprob: -6.025168418884277
    4. '(' → logprob: -6.650168418884277
    5. '\n' → logprob: -6.775168418884277
    6. '<|end|>' → logprob: -7.525168418884277
    7. '=' → logprob: -8.025168418884277
    8. ' )' → logprob: -8.025168418884277
    9. '(n' → logprob: -8.400168418884277
    10. 'n' → logprob: -8.400168418884277

Token 53: ' it' (ID: 480)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08670612424612045
    2. 's' → logprob: -2.7117061614990234
    3. '(s' → logprob: -4.836706161499023
    4. ')' → logprob: -5.461706161499023
    5. '()' → logprob: -6.586706161499023
    6. '   ' → logprob: -7.336706161499023
    7. ' ' → logprob: -7.461706161499023
    8. ' s' → logprob: -7.836706161499023
    9. '(
' → logprob: -8.086706161499023
    10. 'n' → logprob: -8.211706161499023

Token 54: ' to' (ID: 316)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.34452489018440247
    2. 's' → logprob: -2.46952486038208
    3. ' to' → logprob: -2.46952486038208
    4. '
' → logprob: -3.46952486038208
    5. '()' → logprob: -4.09452486038208
    6. '\n' → logprob: -4.34452486038208
    7. ' )' → logprob: -4.71952486038208
    8. '   ' → logprob: -5.09452486038208
    9. '(' → logprob: -5.21952486038208
    10. 'n' → logprob: -5.46952486038208

Token 55: ' an' (ID: 448)
  Prédit: ' an'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' an' → logprob: -0.7849600315093994
    2. ' the' → logprob: -1.6599600315093994
    3. ' a' → logprob: -1.9099600315093994
    4. ' integer' → logprob: -2.2849600315093994
    5. ' ' → logprob: -3.1599600315093994
    6. 'integer' → logprob: -4.28495979309082
    7. 'a' → logprob: -4.65995979309082
    8. ' string' → logprob: -4.65995979309082
    9. ' int' → logprob: -4.78495979309082
    10. 'an' → logprob: -5.15995979309082

Token 56: ' integer' (ID: 16336)
  Prédit: ' integer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' integer' → logprob: -0.032793302088975906
    2. 'integer' → logprob: -3.5327932834625244
    3. ' int' → logprob: -6.2827935218811035
    4. 'int' → logprob: -7.6577935218811035
    5. '_integer' → logprob: -7.9077935218811035
    6. ' ' → logprob: -9.157793045043945
    7. '```' → logprob: -9.907793045043945
    8. '<|end|>' → logprob: -10.532793045043945
    9. '`' → logprob: -11.157793045043945
    10. ' number' → logprob: -11.282793045043945

Token 57: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.9891902804374695
    2. 's' → logprob: -1.4891903400421143
    3. '
' → logprob: -1.9891903400421143
    4. '\' → logprob: -2.1141903400421143
    5. '   ' → logprob: -2.4891903400421143
    6. '    
' → logprob: -3.9891903400421143
    7. ')' → logprob: -4.364190101623535
    8. 'n' → logprob: -4.489190101623535
    9. '<|end|>' → logprob: -5.614190101623535
    10. '' → logprob: -6.114190101623535

Token 58: '   ' (ID: 271)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6950023770332336
    2. '
' → logprob: -1.0700023174285889
    3. '   ' → logprob: -2.445002317428589
    4. '\n' → logprob: -3.445002317428589
    5. '    
' → logprob: -4.445002555847168
    6. '\' → logprob: -4.820002555847168
    7. '```' → logprob: -4.820002555847168
    8. 'n' → logprob: -5.070002555847168
    9. '`s' → logprob: -7.195002555847168
    10. ' s' → logprob: -7.195002555847168

Token 59: ' #' (ID: 1069)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.04996078833937645
    2. '   ' → logprob: -3.0499608516693115
    3. ' s' → logprob: -6.799960613250732
    4. 'n' → logprob: -9.17496109008789
    5. '```' → logprob: -9.79996109008789
    6. '
' → logprob: -10.42496109008789
    7. '`s' → logprob: -11.17496109008789
    8. '\n' → logprob: -11.29996109008789
    9. '    
' → logprob: -11.42496109008789
    10. '	s' → logprob: -11.67496109008789

Token 60: ' Read' (ID: 5405)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5232051014900208
    2. ' s' → logprob: -0.8982051014900208
    3. '   ' → logprob: -10.148204803466797
    4. ' ' → logprob: -11.023204803466797
    5. '    ' → logprob: -12.273204803466797
    6. '```' → logprob: -12.273204803466797
    7. ' ```' → logprob: -12.523204803466797
    8. '_s' → logprob: -12.523204803466797
    9. '	s' → logprob: -13.023204803466797
    10. '`s' → logprob: -13.773204803466797

Token 61: ' another' (ID: 3613)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.12760281562805176
    2. 's' → logprob: -2.1276028156280518
    3. ' a' → logprob: -8.502602577209473
    4. ' ' → logprob: -8.627602577209473
    5. ' the' → logprob: -8.627602577209473
    6. '(s' → logprob: -10.002602577209473
    7. '   ' → logprob: -10.502602577209473
    8. ' an' → logprob: -10.877602577209473
    9. '    ' → logprob: -12.002602577209473
    10. '```' → logprob: -12.877602577209473

Token 62: ' input' (ID: 3422)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.803021252155304
    2. ' s' → logprob: -1.1780211925506592
    3. ' line' → logprob: -1.9280211925506592
    4. ' string' → logprob: -3.303021192550659
    5. 'string' → logprob: -3.428021192550659
    6. ' input' → logprob: -4.928021430969238
    7. '    
' → logprob: -4.928021430969238
    8. ' 
' → logprob: -5.803021430969238
    9. 'input' → logprob: -5.928021430969238
    10. 'line' → logprob: -6.678021430969238

Token 63: ' string' (ID: 1621)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.06285659223794937
    2. '()' → logprob: -3.187856674194336
    3. '(s' → logprob: -4.312856674194336
    4. '(' → logprob: -5.687856674194336
    5. '   ' → logprob: -6.437856674194336
    6. ' s' → logprob: -8.187856674194336
    7. '()
' → logprob: -8.312856674194336
    8. '_s' → logprob: -8.687856674194336
    9. ')' → logprob: -9.062856674194336
    10. '`s' → logprob: -9.437856674194336

Token 64: ' from' (ID: 591)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.13653817772865295
    2. '   ' → logprob: -2.51153826713562
    3. '(s' → logprob: -3.76153826713562
    4. ' s' → logprob: -4.011538028717041
    5. '\' → logprob: -6.511538028717041
    6. '    
' → logprob: -6.761538028717041
    7. '(' → logprob: -7.636538028717041
    8. '    ' → logprob: -7.761538028717041
    9. '	s' → logprob: -7.761538028717041
    10. '```' → logprob: -8.7615385055542

Token 65: ' the' (ID: 290)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.3226689100265503
    2. 'input' → logprob: -1.5726689100265503
    3. ' the' → logprob: -3.57266902923584
    4. 's' → logprob: -3.69766902923584
    5. ' s' → logprob: -4.44766902923584
    6. 'the' → logprob: -6.07266902923584
    7. '   ' → logprob: -7.07266902923584
    8. ' a' → logprob: -8.57266902923584
    9. ' ' → logprob: -9.32266902923584
    10. ' user' → logprob: -9.82266902923584

Token 66: ' user' (ID: 1825)
  Prédit: ' user'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' user' → logprob: -0.055372241884469986
    2. 'user' → logprob: -2.9303722381591797
    3. ' s' → logprob: -8.30537223815918
    4. 's' → logprob: -8.55537223815918
    5. 'input' → logprob: -11.05537223815918
    6. ' input' → logprob: -11.55537223815918
    7. ' ' → logprob: -12.43037223815918
    8. '_user' → logprob: -12.55537223815918
    9. ' next' → logprob: -12.93037223815918
    10. '   ' → logprob: -13.30537223815918

Token 67: ' which' (ID: 1118)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4164610207080841
    2. '   ' → logprob: -1.1664609909057617
    3. ' s' → logprob: -3.6664609909057617
    4. '    
' → logprob: -6.666460990905762
    5. '	s' → logprob: -7.291460990905762
    6. '\' → logprob: -8.291460990905762
    7. '
' → logprob: -8.291460990905762
    8. '```' → logprob: -8.291460990905762
    9. 'n' → logprob: -8.916460990905762
    10. '    ' → logprob: -9.041460990905762

Token 68: ' should' (ID: 1757)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.10151445120573044
    2. 's' → logprob: -2.4765143394470215
    3. ' is' → logprob: -4.9765143394470215
    4. ' ' → logprob: -6.7265143394470215
    5. ' represents' → logprob: -6.8515143394470215
    6. ' will' → logprob: -7.4765143394470215
    7. '   ' → logprob: -7.9765143394470215
    8. ' could' → logprob: -7.9765143394470215
    9. '<|end|>' → logprob: -8.10151481628418
    10. ')' → logprob: -8.35151481628418

Token 69: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.004666626453399658
    2. 'be' → logprob: -5.754666805267334
    3. 's' → logprob: -7.754666805267334
    4. ' s' → logprob: -8.254666328430176
    5. ' represent' → logprob: -8.254666328430176
    6. ' contain' → logprob: -8.504666328430176
    7. ' have' → logprob: -9.004666328430176
    8. ' consist' → logprob: -9.379666328430176
    9. '<|end|>' → logprob: -10.129666328430176
    10. ' ' → logprob: -11.004666328430176

Token 70: ' of' (ID: 328)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.5194879174232483
    2. 's' → logprob: -1.1444878578186035
    3. ' a' → logprob: -3.6444878578186035
    4. ' the' → logprob: -3.7694878578186035
    5. ' input' → logprob: -4.1444878578186035
    6. '    ' → logprob: -5.2694878578186035
    7. '   ' → logprob: -5.5194878578186035
    8. 'input' → logprob: -5.6444878578186035
    9. ' ' → logprob: -5.7694878578186035
    10. ''s' → logprob: -6.1444878578186035

Token 71: ' length' (ID: 5517)
  Prédit: ' length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.8577277064323425
    2. 's' → logprob: -1.2327277660369873
    3. 'length' → logprob: -2.3577277660369873
    4. ' ' → logprob: -2.4827277660369873
    5. ' s' → logprob: -2.8577277660369873
    6. ' input' → logprob: -3.6077277660369873
    7. ' a' → logprob: -4.982727527618408
    8. 'input' → logprob: -5.357727527618408
    9. ' the' → logprob: -5.482727527618408
    10. 'a' → logprob: -5.982727527618408

Token 72: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.19097423553466797
    2. 's' → logprob: -2.690974235534668
    3. ' s' → logprob: -2.690974235534668
    4. '2' → logprob: -3.940974235534668
    5. '(' → logprob: -4.815974235534668
    6. ' (' → logprob: -4.940974235534668
    7. ' n' → logprob: -6.690974235534668
    8. '(s' → logprob: -7.315974235534668
    9. '  ' → logprob: -7.940974235534668
    10. '```' → logprob: -8.190974235534668

Token 73: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.007826411165297031
    2. ' ' → logprob: -4.882826328277588
    3. 'n' → logprob: -9.382826805114746
    4. 's' → logprob: -9.507826805114746
    5. '(' → logprob: -10.632826805114746
    6. '`' → logprob: -11.132826805114746
    7. ' n' → logprob: -11.507826805114746
    8. '```' → logprob: -12.757826805114746
    9. ' (' → logprob: -13.382826805114746
    10. '   ' → logprob: -13.382826805114746

Token 74: ' *' (ID: 425)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.05729398503899574
    2. ' s' → logprob: -2.9322938919067383
    3. 'n' → logprob: -7.307293891906738
    4. ' ' → logprob: -7.807293891906738
    5. ' *' → logprob: -8.182293891906738
    6. '_' → logprob: -8.182293891906738
    7. '(s' → logprob: -8.307293891906738
    8. '*s' → logprob: -8.682293891906738
    9. '_s' → logprob: -9.057293891906738
    10. ''s' → logprob: -9.807293891906738

Token 75: ' n' (ID: 297)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.28699979186058044
    2. ' s' → logprob: -1.4119998216629028
    3. 'n' → logprob: -5.911999702453613
    4. ''s' → logprob: -6.536999702453613
    5. ' n' → logprob: -7.661999702453613
    6. ')' → logprob: -8.536999702453613
    7. ' ' → logprob: -8.536999702453613
    8. '(s' → logprob: -8.786999702453613
    9. '`s' → logprob: -8.911999702453613
    10. '<|end|>' → logprob: -9.661999702453613

Token 76: '
' (ID: 198)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.14696097373962402
    2. '   ' → logprob: -2.021960973739624
    3. ' s' → logprob: -5.521961212158203
    4. '	s' → logprob: -9.021961212158203
    5. '    
' → logprob: -10.396961212158203
    6. ' ' → logprob: -10.896961212158203
    7. '  ' → logprob: -10.896961212158203
    8. '```' → logprob: -11.021961212158203
    9. '`s' → logprob: -11.271961212158203
    10. '<|end|>' → logprob: -11.396961212158203

Token 77: '   ' (ID: 271)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5560662150382996
    2. '   ' → logprob: -0.9310662150382996
    3. ' s' → logprob: -3.4310662746429443
    4. '  ' → logprob: -11.431066513061523
    5. '	s' → logprob: -11.681066513061523
    6. '    
' → logprob: -11.681066513061523
    7. '    ' → logprob: -11.806066513061523
    8. '```' → logprob: -11.931066513061523
    9. ' ' → logprob: -12.681066513061523
    10. '`s' → logprob: -12.931066513061523

Token 78: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.10558509081602097
    2. ' s' → logprob: -2.3555850982666016
    3. '   ' → logprob: -5.230585098266602
    4. '    ' → logprob: -12.230585098266602
    5. '	s' → logprob: -12.230585098266602
    6. ' ' → logprob: -14.105585098266602
    7. '  ' → logprob: -14.105585098266602
    8. '    
' → logprob: -14.480585098266602
    9. '```' → logprob: -14.980585098266602
    10. ''s' → logprob: -15.230585098266602

Token 79: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023249205201864243
    2. '=' → logprob: -3.7732491493225098
    3. '.' → logprob: -13.273249626159668
    4. '=input' → logprob: -13.898249626159668
    5. ' ' → logprob: -14.648249626159668
    6. '  ' → logprob: -15.523249626159668
    7. 's' → logprob: -16.27324867248535
    8. ')' → logprob: -16.64824867248535
    9. '_' → logprob: -16.64824867248535
    10. '[' → logprob: -16.89824867248535

Token 80: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.016035424545407295
    2. 'input' → logprob: -4.141035556793213
    3. '=input' → logprob: -14.641035079956055
    4. '(input' → logprob: -14.891035079956055
    5. ' ' → logprob: -15.641035079956055
    6. '	input' → logprob: -16.641035079956055
    7. ' ' → logprob: -17.141035079956055
    8. '<input' → logprob: -17.766035079956055
    9. '_input' → logprob: -18.016035079956055
    10. 's' → logprob: -18.016035079956055

Token 81: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00010485442908247933
    2. '(' → logprob: -9.375104904174805
    3. ' ()' → logprob: -11.375104904174805
    4. '().' → logprob: -12.500104904174805
    5. '())' → logprob: -14.125104904174805
    6. '`()' → logprob: -14.250104904174805
    7. '()`' → logprob: -14.625104904174805
    8. '()]' → logprob: -14.750104904174805
    9. '()?>' → logprob: -15.000104904174805
    10. '()>' → logprob: -15.125104904174805

Token 82: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.012747049331665
    2. '<|end|>' → logprob: -1.137747049331665
    3. '   ' → logprob: -1.637747049331665
    4. '    
' → logprob: -3.887747049331665
    5. '  
' → logprob: -4.012746810913086
    6. '#' → logprob: -4.012746810913086
    7. ' ' → logprob: -4.262746810913086
    8. '\' → logprob: -4.637746810913086
    9. '\n' → logprob: -4.762746810913086
    10. 'n' → logprob: -5.137746810913086

Token 83: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9042354226112366
    2. '   ' → logprob: -1.0292353630065918
    3. '<|end|>' → logprob: -2.654235363006592
    4. ' ' → logprob: -2.904235363006592
    5. '#' → logprob: -3.654235363006592
    6. ' if' → logprob: -4.279235363006592
    7. '\n' → logprob: -4.279235363006592
    8. '[' → logprob: -4.529235363006592
    9. 'n' → logprob: -4.654235363006592
    10. '    
' → logprob: -4.904235363006592

Token 84: ' This' (ID: 1328)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7864412069320679
    2. '<|end|>' → logprob: -0.7864412069320679
    3. 's' → logprob: -3.4114413261413574
    4. '   ' → logprob: -4.411441326141357
    5. '
' → logprob: -5.036441326141357
    6. ')' → logprob: -5.161441326141357
    7. '\' → logprob: -5.161441326141357
    8. '\n' → logprob: -5.286441326141357
    9. '<|end|>' → logprob: -5.286441326141357
    10. 'n' → logprob: -5.786441326141357

Token 85: ' line' (ID: 2543)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.18831393122673035
    2. '<|end|>' → logprob: -2.6883139610290527
    3. ' is' → logprob: -3.0633139610290527
    4. '.' → logprob: -3.4383139610290527
    5. 's' → logprob: -4.563313961029053
    6. '<|end|>' → logprob: -5.063313961029053
    7. ' s' → logprob: -6.188313961029053
    8. '  ' → logprob: -6.813313961029053
    9. ')' → logprob: -7.063313961029053
    10. '[' → logprob: -7.313313961029053

Token 86: ' reads' (ID: 31523)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 87: ' the' (ID: 290)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.014982354827225208
    2. '(' → logprob: -5.264982223510742
    3. ' a' → logprob: -5.639982223510742
    4. ' ' → logprob: -6.264982223510742
    5. '<|end|>' → logprob: -6.389982223510742
    6. ' the' → logprob: -6.764982223510742
    7. ')' → logprob: -7.764982223510742
    8. 's' → logprob: -8.514982223510742
    9. ' ()' → logprob: -8.764982223510742
    10. 'the' → logprob: -9.014982223510742

Token 88: ' string' (ID: 1621)
  Prédit: ' string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' string' → logprob: -1.13676917552948
    2. ' next' → logprob: -1.38676917552948
    3. ' entire' → logprob: -1.76176917552948
    4. ' full' → logprob: -2.1367692947387695
    5. 'string' → logprob: -2.5117692947387695
    6. 'next' → logprob: -4.0117692947387695
    7. ' input' → logprob: -4.6367692947387695
    8. ' complete' → logprob: -5.0117692947387695
    9. 'full' → logprob: -5.1367692947387695
    10. ' whole' → logprob: -5.2617692947387695

Token 89: ' input' (ID: 3422)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5192185044288635
    2. 's' → logprob: -2.5192184448242188
    3. '<|end|>' → logprob: -2.6442184448242188
    4. ' ' → logprob: -2.7692184448242188
    5. '
' → logprob: -3.1442184448242188
    6. '    
' → logprob: -3.6442184448242188
    7. 'n' → logprob: -3.6442184448242188
    8. '\n' → logprob: -3.7692184448242188
    9. '\' → logprob: -4.269218444824219
    10. '  
' → logprob: -4.394218444824219

Token 90: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 91: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7284259796142578
    2. '
' → logprob: -1.1034259796142578
    3. ' ' → logprob: -2.978425979614258
    4. '    
' → logprob: -3.603425979614258
    5. 'n' → logprob: -3.853425979614258
    6. '<|end|>' → logprob: -3.853425979614258
    7. '  
' → logprob: -3.978425979614258
    8. ' 
' → logprob: -4.478425979614258
    9. '#' → logprob: -4.728425979614258
    10. 's' → logprob: -4.978425979614258

Token 92: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6406751871109009
    2. '
' → logprob: -2.2656750679016113
    3. 'n' → logprob: -2.3906750679016113
    4. '#' (adapté à ' #') → logprob: -2.5156750679016113
    5. ' ' → logprob: -2.5156750679016113
    6. 's' → logprob: -3.3906750679016113
    7. '    
' → logprob: -3.5156750679016113
    8. 'if' → logprob: -4.890675067901611
    9. ' 
' → logprob: -5.015675067901611
    10. ' #' → logprob: -5.765675067901611

Token 93: ' Create' (ID: 6585)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.38193950057029724
    2. 'if' → logprob: -2.13193941116333
    3. 'first' → logprob: -2.88193941116333
    4. 's' → logprob: -3.25693941116333
    5. 'left' → logprob: -4.13193941116333
    6. 'l' → logprob: -4.25693941116333
    7. 'half' → logprob: -4.25693941116333
    8. ' #' → logprob: -4.38193941116333
    9. 'result' → logprob: -4.88193941116333
    10. 'n' → logprob: -5.25693941116333

Token 94: ' two' (ID: 1920)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.09333039075136185
    2. ' an' → logprob: -3.0933303833007812
    3. 'a' → logprob: -3.7183303833007812
    4. ' two' → logprob: -5.093330383300781
    5. ' ' → logprob: -5.468330383300781
    6. 's' → logprob: -5.843330383300781
    7. '_' → logprob: -6.593330383300781
    8. ' s' → logprob: -7.218330383300781
    9. ' result' → logprob: -7.343330383300781
    10. ' the' → logprob: -7.343330383300781

Token 95: ' empty' (ID: 8213)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.25727540254592896
    2. 's' → logprob: -2.507275342941284
    3. ' ' → logprob: -2.632275342941284
    4. ' halves' → logprob: -4.132275581359863
    5. ' substr' → logprob: -4.257275581359863
    6. ' lists' → logprob: -5.007275581359863
    7. ' =' → logprob: -5.257275581359863
    8. '_s' → logprob: -5.632275581359863
    9. '_strings' → logprob: -5.632275581359863
    10. ' _' → logprob: -5.632275581359863

Token 96: ' dictionaries' (ID: 122111)
  Prédit: ' lists'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lists' → logprob: -0.11258309334516525
    2. ' strings' → logprob: -2.6125831604003906
    3. '_' → logprob: -5.112583160400391
    4. ' ' → logprob: -5.112583160400391
    5. 's' → logprob: -5.112583160400391
    6. 'strings' → logprob: -5.487583160400391
    7. '_lists' → logprob: -5.487583160400391
    8. 'lists' → logprob: -5.737583160400391
    9. ' sets' → logprob: -7.362583160400391
    10. '_strings' → logprob: -7.612583160400391

Token 97: ' d' (ID: 272)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8407082557678223
    2. 'd' → logprob: -0.9657082557678223
    3. '   ' → logprob: -2.7157082557678223
    4. ' ' → logprob: -3.8407082557678223
    5. '
' → logprob: -3.9657082557678223
    6. ':' → logprob: -4.215708255767822
    7. ' d' → logprob: -4.465708255767822
    8. ' a' → logprob: -4.590708255767822
    9. 't' → logprob: -4.590708255767822
    10. 'n' → logprob: -5.465708255767822

Token 98: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.051164042204618454
    2. '_' → logprob: -3.301164150238037
    3. ' =' → logprob: -5.551164150238037
    4. 'e' → logprob: -5.926164150238037
    5. 'ef' → logprob: -6.676164150238037
    6. 'ict' → logprob: -6.801164150238037
    7. 'f' → logprob: -7.176164150238037
    8. 'ic' → logprob: -7.801164150238037
    9. 'i' → logprob: -8.176163673400879
    10. ' ' → logprob: -8.176163673400879

Token 99: ' and' (ID: 326)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08910751342773438
    2. '=' → logprob: -3.2141075134277344
    3. ',' → logprob: -3.8391075134277344
    4. '1' → logprob: -4.339107513427734
    5. 'd' → logprob: -5.214107513427734
    6. 'a' → logprob: -6.714107513427734
    7. ' ' → logprob: -7.214107513427734
    8. '_' → logprob: -7.214107513427734
    9. ' and' → logprob: -7.964107513427734
    10. '  ' → logprob: -8.089107513427734

Token 100: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.20150962471961975
    2. 'd' → logprob: -1.7015095949172974
    3. ' ' → logprob: -10.076509475708008
    4. '<|end|>' → logprob: -11.076509475708008
    5. 's' → logprob: -11.451509475708008
    6. '  ' → logprob: -12.201509475708008
    7. '2' → logprob: -12.576509475708008
    8. ' defaultdict' → logprob: -13.076509475708008
    9. '_d' → logprob: -13.076509475708008
    10. '<|end|>' → logprob: -13.326509475708008

Token 101: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.165027217415627e-05
    2. 'd' → logprob: -11.625021934509277
    3. ' ' → logprob: -12.250021934509277
    4. '1' → logprob: -12.625021934509277
    5. 'ict' → logprob: -13.625021934509277
    6. 'ictionary' → logprob: -14.625021934509277
    7. ' d' → logprob: -14.750021934509277
    8. '  ' → logprob: -15.062521934509277
    9. ',' → logprob: -15.562521934509277
    10. '{' → logprob: -15.625021934509277

Token 102: ',' (ID: 11)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.1970500349998474
    2. '
' → logprob: -1.8220500946044922
    3. '   ' → logprob: -4.322050094604492
    4. ' d' → logprob: -6.447050094604492
    5. ' =' → logprob: -7.197050094604492
    6. '	d' → logprob: -7.697050094604492
    7. '    
' → logprob: -7.822050094604492
    8. ' ' → logprob: -8.447050094604492
    9. '  
' → logprob: -8.572050094604492
    10. '  ' → logprob: -9.822050094604492

Token 103: ' which' (ID: 1118)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8976085782051086
    2. ' d' → logprob: -1.2726085186004639
    3. 'd' → logprob: -1.7726085186004639
    4. '<|end|>' → logprob: -2.522608518600464
    5. '    ' → logprob: -4.147608757019043
    6. '
' → logprob: -5.022608757019043
    7. ' 
' → logprob: -5.272608757019043
    8. 's' → logprob: -5.522608757019043
    9. '<|end|>' → logprob: -5.522608757019043
    10. '   ' → logprob: -6.022608757019043

Token 104: ' will' (ID: 738)
  Prédit: ' will'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' will' → logprob: -0.1858668327331543
    2. ' are' → logprob: -2.3108668327331543
    3. '<|end|>' → logprob: -3.1858668327331543
    4. ' =' → logprob: -5.060866832733154
    5. ' ' → logprob: -5.060866832733154
    6. 'will' → logprob: -5.810866832733154
    7. ' represent' → logprob: -6.185866832733154
    8. '<|end|>' → logprob: -6.310866832733154
    9. ' can' → logprob: -6.435866832733154
    10. ' have' → logprob: -6.935866832733154

Token 105: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.41115525364875793
    2. '<|end|>' → logprob: -1.4111552238464355
    3. ' =' → logprob: -3.2861552238464355
    4. ' ' → logprob: -4.6611552238464355
    5. 'be' → logprob: -4.6611552238464355
    6. '.setdefault' → logprob: -5.2861552238464355
    7. '=' → logprob: -5.5361552238464355
    8. '<|end|>' → logprob: -5.5361552238464355
    9. '[]' → logprob: -5.7861552238464355
    10. '  ' → logprob: -5.9111552238464355

Token 106: ' used' (ID: 2061)
  Prédit: ' used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' used' → logprob: -0.039514847099781036
    2. 'used' → logprob: -3.5395147800445557
    3. '{}' → logprob: -5.289515018463135
    4. ' filled' → logprob: -7.164515018463135
    5. '<|end|>' → logprob: -7.164515018463135
    6. ' defaultdict' → logprob: -7.289515018463135
    7. ' dictionaries' → logprob: -7.539515018463135
    8. '{' → logprob: -7.914515018463135
    9. ' {}' → logprob: -8.414514541625977
    10. 'collections' → logprob: -8.914514541625977

Token 107: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.2525676190853119
    2. '<|end|>' → logprob: -1.6275676488876343
    3. ' for' → logprob: -4.877567768096924
    4. ' ' → logprob: -5.252567768096924
    5. '<|end|>' → logprob: -5.502567768096924
    6. '    ' → logprob: -5.752567768096924
    7. 'to' → logprob: -6.002567768096924
    8. '   ' → logprob: -6.377567768096924
    9. ' as' → logprob: -6.752567768096924
    10. '  ' → logprob: -8.127567291259766

Token 108: ' store' (ID: 4897)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.2301749289035797
    2. ' count' → logprob: -1.6051748991012573
    3. ' store' → logprob: -6.480175018310547
    4. '<|end|>' → logprob: -6.730175018310547
    5. 'store' → logprob: -6.980175018310547
    6. '_count' → logprob: -8.105175018310547
    7. 'counts' → logprob: -8.980175018310547
    8. ' counts' → logprob: -9.105175018310547
    9. ' ' → logprob: -9.605175018310547
    10. ' track' → logprob: -9.980175018310547

Token 109: ' tuple' (ID: 31311)
  Prédit: ' frequencies'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' frequencies' → logprob: -1.1790086030960083
    2. ' ' → logprob: -1.5540086030960083
    3. ' counts' → logprob: -1.9290086030960083
    4. ' the' → logprob: -2.0540084838867188
    5. ' frequency' → logprob: -2.4290084838867188
    6. ' characters' → logprob: -4.179008483886719
    7. 's' → logprob: -4.429008483886719
    8. 'frequency' → logprob: -4.554008483886719
    9. ' defaultdict' → logprob: -4.554008483886719
    10. ' character' → logprob: -4.679008483886719

Token 110: ' keys' (ID: 12994)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5831184387207031
    2. ' s' → logprob: -1.2081184387207031
    3. ' counts' → logprob: -2.083118438720703
    4. ' ' → logprob: -5.208118438720703
    5. ' frequency' → logprob: -5.708118438720703
    6. ' frequencies' → logprob: -5.958118438720703
    7. ' keys' → logprob: -6.208118438720703
    8. ' (' → logprob: -6.458118438720703
    9. '(' → logprob: -6.583118438720703
    10. '_counts' → logprob: -7.833118438720703

Token 111: ' mapping' (ID: 22573)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8863877654075623
    2. ' =' → logprob: -1.261387825012207
    3. 'd' → logprob: -2.136387825012207
    4. '()' → logprob: -2.761387825012207
    5. ' d' → logprob: -3.511387825012207
    6. ',' → logprob: -3.886387825012207
    7. ' and' → logprob: -4.136387825012207
    8. '=' → logprob: -4.261387825012207
    9. '(' → logprob: -4.511387825012207
    10. ':' → logprob: -4.886387825012207

Token 112: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.006267901044338942
    2. '<|end|>' → logprob: -5.50626802444458
    3. 'to' → logprob: -6.50626802444458
    4. 's' → logprob: -9.006267547607422
    5. ' ' → logprob: -9.006267547607422
    6. '<|end|>' → logprob: -9.631267547607422
    7. ':' → logprob: -9.756267547607422
    8. ',' → logprob: -10.006267547607422
    9. '[]' → logprob: -10.006267547607422
    10. '   ' → logprob: -10.756267547607422

Token 113: ' integer' (ID: 16336)
  Prédit: ' integers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' integers' → logprob: -0.5483530759811401
    2. ' counts' → logprob: -1.6733530759811401
    3. ' integer' → logprob: -2.4233531951904297
    4. ' lists' → logprob: -2.6733531951904297
    5. ' ' → logprob: -4.42335319519043
    6. ' their' → logprob: -4.54835319519043
    7. ' True' → logprob: -4.67335319519043
    8. ' int' → logprob: -4.79835319519043
    9. '0' → logprob: -4.92335319519043
    10. ' the' → logprob: -5.17335319519043

Token 114: ' counters' (ID: 62038)
  Prédit: ' counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' counts' → logprob: -0.19486506283283234
    2. ' values' → logprob: -3.1948649883270264
    3. 'counts' → logprob: -3.1948649883270264
    4. 's' → logprob: -3.4448649883270264
    5. ' counters' → logprob: -3.8198649883270264
    6. ' frequencies' → logprob: -4.4448652267456055
    7. ' frequency' → logprob: -4.9448652267456055
    8. ' ' → logprob: -5.0698652267456055
    9. ')' → logprob: -5.4448652267456055
    10. 'values' → logprob: -6.1948652267456055

Token 115: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2641516625881195
    2. '
' → logprob: -1.764151692390442
    3. 'd' → logprob: -3.6391515731811523
    4. '    
' → logprob: -4.139151573181152
    5. ' ' → logprob: -5.264151573181152
    6. '  
' → logprob: -5.889151573181152
    7. ':' → logprob: -6.139151573181152
    8. '```' → logprob: -6.639151573181152
    9. '   
' → logprob: -6.639151573181152
    10. ',' → logprob: -6.764151573181152

Token 116: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40459996461868286
    2. '
' → logprob: -1.904599905014038
    3. 'd' → logprob: -2.404599905014038
    4. '    
' → logprob: -2.904599905014038
    5. ' ' → logprob: -4.529600143432617
    6. '  
' → logprob: -4.904600143432617
    7. ' 
' → logprob: -5.154600143432617
    8. 'n' → logprob: -5.904600143432617
    9. '\' → logprob: -6.029600143432617
    10. '   
' → logprob: -6.029600143432617

Token 117: ' #' (ID: 1069)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6080847978591919
    2. '   ' → logprob: -1.358084797859192
    3. '
' → logprob: -1.733084797859192
    4. '    
' → logprob: -4.483084678649902
    5. '  
' → logprob: -6.108084678649902
    6. ' d' → logprob: -6.108084678649902
    7. '	d' → logprob: -6.358084678649902
    8. ' ' → logprob: -6.483084678649902
    9. ' 
' → logprob: -6.983084678649902
    10. '   
' → logprob: -7.108084678649902

Token 118: ' In' (ID: 730)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.06780539453029633
    2. ' d' → logprob: -3.317805290222168
    3. '   ' → logprob: -3.692805290222168
    4. '
' → logprob: -6.067805290222168
    5. ' ' → logprob: -7.317805290222168
    6. ' 
' → logprob: -7.817805290222168
    7. '	d' → logprob: -8.067805290222168
    8. '    
' → logprob: -8.192805290222168
    9. '  
' → logprob: -9.442805290222168
    10. '  ' → logprob: -9.692805290222168

Token 119: ' Python' (ID: 26534)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.1463290899991989
    2. ' defaultdict' → logprob: -3.021329164505005
    3. ' the' → logprob: -4.146328926086426
    4. 'collections' → logprob: -4.271328926086426
    5. ' d' → logprob: -5.021328926086426
    6. 'd' → logprob: -5.146328926086426
    7. 'dex' → logprob: -5.271328926086426
    8. 's' → logprob: -5.396328926086426
    9. 't' → logprob: -5.521328926086426
    10. ' this' → logprob: -5.771328926086426

Token 120: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2712670564651489
    2. 'd' → logprob: -2.3962669372558594
    3. '
' → logprob: -2.7712669372558594
    4. ' d' → logprob: -2.8962669372558594
    5. ' ,' → logprob: -4.396266937255859
    6. ':' → logprob: -5.771266937255859
    7. '   ' → logprob: -6.271266937255859
    8. 's' → logprob: -6.521266937255859
    9. 'def' → logprob: -6.521266937255859
    10. ',
' → logprob: -6.646266937255859

Token 121: ' dictionaries' (ID: 122111)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.18457825481891632
    2. ' ' → logprob: -2.4345781803131104
    3. 'd' → logprob: -2.8095781803131104
    4. ' defaultdict' → logprob: -4.5595784187316895
    5. ' from' → logprob: -5.9345784187316895
    6. 'from' → logprob: -6.4345784187316895
    7. ' collections' → logprob: -7.1845784187316895
    8. '   ' → logprob: -7.3095784187316895
    9. ' dict' → logprob: -7.8095784187316895
    10. ' dictionaries' → logprob: -7.8095784187316895

Token 122: ' are' (ID: 553)
  Prédit: ' are'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.4553695619106293
    2. ' =' → logprob: -1.9553695917129517
    3. ',' → logprob: -2.955369472503662
    4. ' ' → logprob: -3.205369472503662
    5. ' can' → logprob: -3.455369472503662
    6. '<|end|>' → logprob: -3.455369472503662
    7. '.setdefault' → logprob: -4.080369472503662
    8. ')' → logprob: -4.580369472503662
    9. '()' → logprob: -4.830369472503662
    10. ' have' → logprob: -5.455369472503662

Token 123: ' collections' (ID: 22690)
  Prédit: ' initialized'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' initialized' → logprob: -1.342393398284912
    2. ' used' → logprob: -1.592393398284912
    3. ' often' → logprob: -2.092393398284912
    4. ' created' → logprob: -2.342393398284912
    5. ' objects' → logprob: -2.967393398284912
    6. ' collections' → logprob: -3.592393398284912
    7. ' defined' → logprob: -3.592393398284912
    8. '{}' → logprob: -3.717393398284912
    9. ' defaultdict' → logprob: -3.842393398284912
    10. ' commonly' → logprob: -3.967393398284912

Token 124: ' that' (ID: 484)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -1.3376455307006836
    2. ',' → logprob: -1.8376455307006836
    3. '()' → logprob: -2.0876455307006836
    4. '<|end|>' → logprob: -2.0876455307006836
    5. ' that' → logprob: -2.7126455307006836
    6. '.setdefault' → logprob: -3.2126455307006836
    7. ' (' → logprob: -3.5876455307006836
    8. '(' → logprob: -3.7126455307006836
    9. '   ' → logprob: -3.7126455307006836
    10. ' to' → logprob: -4.087645530700684

Token 125: ' store' (ID: 4897)
  Prédit: ' store'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' store' → logprob: -0.7682164311408997
    2. ' can' → logprob: -1.6432163715362549
    3. ' track' → logprob: -2.518216371536255
    4. ' keep' → logprob: -2.893216371536255
    5. ' map' → logprob: -3.018216371536255
    6. ' are' → logprob: -3.268216371536255
    7. 'store' → logprob: -3.643216371536255
    8. ' provide' → logprob: -4.518216609954834
    9. ' count' → logprob: -4.643216609954834
    10. ' ' → logprob: -4.643216609954834

Token 126: ' key' (ID: 2140)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 127: '-value' (ID: 38798)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3973737359046936
    2. '-value' → logprob: -1.1473736763000488
    3. ' :' → logprob: -5.022373676300049
    4. ':value' → logprob: -6.397373676300049
    5. 's' → logprob: -7.022373676300049
    6. ' ' → logprob: -7.522373676300049
    7. '-' → logprob: -9.397374153137207
    8. ',' → logprob: -9.522374153137207
    9. '-valu' → logprob: -9.522374153137207
    10. ' to' → logprob: -9.522374153137207

Token 128: ' pairs' (ID: 24702)
  Prédit: ' pairs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pairs' → logprob: -0.003481755033135414
    2. 's' → logprob: -5.878481864929199
    3. 'pairs' → logprob: -7.628481864929199
    4. '_pairs' → logprob: -9.1284818649292
    5. ' s' → logprob: -10.2534818649292
    6. '<|end|>' → logprob: -11.1284818649292
    7. ' ' → logprob: -11.3784818649292
    8. ' pair' → logprob: -11.6284818649292
    9. ' mappings' → logprob: -12.0034818649292
    10. 'Pairs' → logprob: -13.6284818649292

Token 129: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3312874138355255
    2. '    
' → logprob: -2.206287384033203
    3. ' ' → logprob: -2.581287384033203
    4. '
' → logprob: -3.081287384033203
    5. '  
' → logprob: -4.081287384033203
    6. ' 
' → logprob: -5.081287384033203
    7. '   
' → logprob: -5.331287384033203
    8. '  ' → logprob: -5.831287384033203
    9. '    ' → logprob: -5.831287384033203
    10. ',' → logprob: -6.081287384033203

Token 130: ' fast' (ID: 5661)
  Prédit: ' counting'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' counting' → logprob: -0.7836856842041016
    2. ' fast' → logprob: -1.0336856842041016
    3. ' counts' → logprob: -3.2836856842041016
    4. ' the' → logprob: -3.6586856842041016
    5. ' dynamic' → logprob: -3.9086856842041016
    6. ' keys' → logprob: -4.408685684204102
    7. ' hashing' → logprob: -4.658685684204102
    8. ' hash' → logprob: -4.783685684204102
    9. ' mapping' → logprob: -4.783685684204102
    10. 'count' → logprob: -5.033685684204102

Token 131: ' lookup' (ID: 37342)
  Prédit: ' lookup'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lookup' → logprob: -0.1731431484222412
    2. ' look' → logprob: -2.423143148422241
    3. ' access' → logprob: -2.798143148422241
    4. 'lookup' → logprob: -4.92314338684082
    5. ' retrieval' → logprob: -6.79814338684082
    6. ' counting' → logprob: -8.04814338684082
    7. '_lookup' → logprob: -8.42314338684082
    8. 'look' → logprob: -8.79814338684082
    9. ' insertion' → logprob: -9.54814338684082
    10. 'access' → logprob: -9.54814338684082

Token 132: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16064366698265076
    2. ' ' → logprob: -2.7856435775756836
    3. '    
' → logprob: -3.4106435775756836
    4. '<|end|>' → logprob: -4.285643577575684
    5. '    ' → logprob: -5.035643577575684
    6. ',' → logprob: -5.160643577575684
    7. '
' → logprob: -5.160643577575684
    8. '  ' → logprob: -5.285643577575684
    9. '  
' → logprob: -5.535643577575684
    10. '   
' → logprob: -5.910643577575684

Token 133: ' counting' (ID: 43276)
  Prédit: ' insertion'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' insertion' → logprob: -0.3575642704963684
    2. ' counting' → logprob: -1.8575642108917236
    3. ' update' → logprob: -3.3575642108917236
    4. ' updates' → logprob: -3.4825642108917236
    5. 'count' → logprob: -4.232564449310303
    6. ' manipulation' → logprob: -4.482564449310303
    7. ' updating' → logprob: -4.607564449310303
    8. ' retrieval' → logprob: -4.732564449310303
    9. 'increment' → logprob: -5.607564449310303
    10. ' modification' → logprob: -6.107564449310303

Token 134: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5508959293365479
    2. '   ' → logprob: -1.0508959293365479
    3. '    
' → logprob: -4.175895690917969
    4. ' 
' → logprob: -4.550895690917969
    5. '    ' → logprob: -4.550895690917969
    6. '<|end|>' → logprob: -4.550895690917969
    7. '  ' → logprob: -5.175895690917969
    8. '_' → logprob: -5.425895690917969
    9. '  
' → logprob: -5.550895690917969
    10. ',' → logprob: -5.675895690917969

Token 135: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3186678886413574
    2. 'd' → logprob: -2.0686678886413574
    3. '
' → logprob: -2.4436678886413574
    4. '    
' → logprob: -3.3186678886413574
    5. 'n' → logprob: -5.068667888641357
    6. ' 
' → logprob: -5.318667888641357
    7. ' ' → logprob: -5.943667888641357
    8. '    ' → logprob: -6.193667888641357
    9. ' d' → logprob: -7.068667888641357
    10. 'def' → logprob: -7.193667888641357

Token 136: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.747654139995575
    2. 'd' (adapté à ' d') → logprob: -0.872654139995575
    3. ' ' → logprob: -2.6226541996002197
    4. '    
' → logprob: -4.372653961181641
    5. '    ' → logprob: -4.622653961181641
    6. ' 
' → logprob: -5.622653961181641
    7. ' d' → logprob: -5.747653961181641
    8. '  ' → logprob: -6.622653961181641
    9. '
' → logprob: -6.747653961181641
    10. 'n' → logprob: -6.747653961181641

Token 137: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.464347173576243e-05
    2. ' ' → logprob: -10.50003433227539
    3. '2' → logprob: -12.75003433227539
    4. '_' → logprob: -13.12503433227539
    5. ' =' → logprob: -13.87503433227539
    6. '  ' → logprob: -15.00003433227539
    7. '=' → logprob: -15.62503433227539
    8. ',' → logprob: -16.25003433227539
    9. '' → logprob: -16.31253433227539
    10. '１' → logprob: -16.43753433227539

Token 138: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07013127207756042
    2. '=' → logprob: -2.695131301879883
    3. ',' → logprob: -8.945131301879883
    4. '[' → logprob: -9.945131301879883
    5. ' ' → logprob: -11.445131301879883
    6. '1' → logprob: -13.820131301879883
    7. '={}' → logprob: -14.070131301879883
    8. ' ,' → logprob: -14.195131301879883
    9. ')' → logprob: -14.445131301879883
    10. ' =
' → logprob: -15.070131301879883

Token 139: ' dict' (ID: 11878)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.04893296957015991
    2. ' {}' → logprob: -3.0489330291748047
    3. 'dict' → logprob: -8.048933029174805
    4. ' dict' → logprob: -10.923933029174805
    5. 'default' → logprob: -12.298933029174805
    6. ' defaultdict' → logprob: -13.423933029174805
    7. '={}' → logprob: -14.173933029174805
    8. '{}
' → logprob: -14.673933029174805
    9. ' {}
' → logprob: -15.923933029174805
    10. 'collections' → logprob: -15.923933029174805

Token 140: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -6.659005157416686e-05
    2. '()
' → logprob: -10.000066757202148
    3. '(' → logprob: -12.500066757202148
    4. '()>' → logprob: -12.500066757202148
    5. '{' → logprob: -12.875066757202148
    6. '(),' → logprob: -13.000066757202148
    7. ' ()' → logprob: -13.125066757202148
    8. '()

' → logprob: -13.375066757202148
    9. '()\' → logprob: -14.250066757202148
    10. '()<' → logprob: -14.500066757202148

Token 141: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18902261555194855
    2. 'd' → logprob: -1.8140226602554321
    3. '    
' → logprob: -5.939022541046143
    4. '	d' → logprob: -6.314022541046143
    5. '
' → logprob: -6.564022541046143
    6. ' d' → logprob: -6.814022541046143
    7. ' ' → logprob: -6.814022541046143
    8. '  ' → logprob: -8.0640230178833
    9. '<|end|>' → logprob: -8.3140230178833
    10. ',d' → logprob: -9.0640230178833

Token 142: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.5942217111587524
    2. '   ' → logprob: -0.8442217111587524
    3. ' d' → logprob: -4.219221591949463
    4. '	d' → logprob: -6.344221591949463
    5. ' ' → logprob: -7.469221591949463
    6. '
' → logprob: -7.719221591949463
    7. '    
' → logprob: -8.094222068786621
    8. '  ' → logprob: -8.719222068786621
    9. '    ' → logprob: -10.219222068786621
    10. ' 
' → logprob: -10.594222068786621

Token 143: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0001858982432167977
    2. '1' → logprob: -9.0001859664917
    3. '.' → logprob: -11.0001859664917
    4. 'f' → logprob: -11.6251859664917
    5. ' ' → logprob: -12.0001859664917
    6. ')' → logprob: -12.5001859664917
    7. '=' → logprob: -12.6251859664917
    8. '[' → logprob: -12.8751859664917
    9. '```' → logprob: -13.0626859664917
    10. ',' → logprob: -13.1251859664917

Token 144: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2822970747947693
    2. ' =' → logprob: -1.407297134399414
    3. '()' → logprob: -6.782297134399414
    4. ' ' → logprob: -12.782297134399414
    5. ')' → logprob: -13.157297134399414
    6. '={}' → logprob: -13.282297134399414
    7. '   ' → logprob: -13.407297134399414
    8. '(' → logprob: -13.907297134399414
    9. '=dict' → logprob: -13.907297134399414
    10. ' ()' → logprob: -14.657297134399414

Token 145: ' dict' (ID: 11878)
  Prédit: 'dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dict' → logprob: -0.01017178874462843
    2. ' dict' → logprob: -4.760171890258789
    3. '{}' → logprob: -6.510171890258789
    4. ' {}' → logprob: -10.760171890258789
    5. '(dict' → logprob: -11.135171890258789
    6. '{' → logprob: -11.510171890258789
    7. 'd' → logprob: -12.135171890258789
    8. 'default' → logprob: -12.635171890258789
    9. 'def' → logprob: -13.260171890258789
    10. '()' → logprob: -13.385171890258789

Token 146: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.000533967511728406
    2. '()
' → logprob: -7.6255340576171875
    3. '(' → logprob: -10.500534057617188
    4. '()

' → logprob: -11.375534057617188
    5. '   ' → logprob: -13.375534057617188
    6. ')' → logprob: -13.625534057617188
    7. '()]' → logprob: -14.500534057617188
    8. ' ()' → logprob: -14.750534057617188
    9. '()`' → logprob: -14.875534057617188
    10. '())' → logprob: -14.875534057617188

Token 147: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09180031716823578
    2. 'for' → logprob: -3.3418002128601074
    3. ' for' → logprob: -3.8418002128601074
    4. '    
' → logprob: -4.591800212860107
    5. '
' → logprob: -5.091800212860107
    6. ' ' → logprob: -5.466800212860107
    7. 'n' → logprob: -5.841800212860107
    8. '    ' → logprob: -6.216800212860107
    9. ' 
' → logprob: -6.591800212860107
    10. '  ' → logprob: -7.341800212860107

Token 148: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.039032526314258575
    2. '   ' → logprob: -4.039032459259033
    3. ' for' → logprob: -4.289032459259033
    4. '#' (adapté à ' #') → logprob: -6.164032459259033
    5. 'i' → logprob: -6.664032459259033
    6. ' ' → logprob: -7.039032459259033
    7. 'f' → logprob: -7.414032459259033
    8. 'n' → logprob: -7.414032459259033
    9. 'm' → logprob: -8.164032936096191
    10. 'a' → logprob: -8.914032936096191

Token 149: ' Create' (ID: 6585)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07163501530885696
    2. ' for' → logprob: -2.9466350078582764
    3. 'from' → logprob: -4.3216352462768555
    4. '#' → logprob: -6.5716352462768555
    5. ' from' → logprob: -7.8216352462768555
    6. 'import' → logprob: -8.071635246276855
    7. 'mid' → logprob: -8.571635246276855
    8. 'def' → logprob: -8.696635246276855
    9. 'i' → logprob: -8.946635246276855
    10. 'half' → logprob: -9.196635246276855

Token 150: ' two' (ID: 1920)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.4293418228626251
    2. ' an' → logprob: -1.5543417930603027
    3. ' two' → logprob: -2.6793417930603027
    4. ' the' → logprob: -4.179341793060303
    5. 'a' → logprob: -4.304341793060303
    6. ' for' → logprob: -4.554341793060303
    7. ' ' → logprob: -5.804341793060303
    8. 's' → logprob: -5.929341793060303
    9. 'for' → logprob: -5.929341793060303
    10. ' s' → logprob: -6.304341793060303

Token 151: ' lists' (ID: 19471)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4937507212162018
    2. 'for' → logprob: -0.9937506914138794
    3. ' lists' → logprob: -5.24375057220459
    4. ' arrays' → logprob: -6.36875057220459
    5. ' nested' → logprob: -6.74375057220459
    6. ' sets' → logprob: -6.99375057220459
    7. ' n' → logprob: -6.99375057220459
    8. ' counters' → logprob: -7.11875057220459
    9. ' loops' → logprob: -7.11875057220459
    10. ' halves' → logprob: -7.24375057220459

Token 152: ' named' (ID: 11484)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -1.455657958984375
    2. ' d' → logprob: -2.080657958984375
    3. 'a' → logprob: -2.580657958984375
    4. 'd' → logprob: -2.580657958984375
    5. ' ans' → logprob: -2.830657958984375
    6. ' of' → logprob: -3.330657958984375
    7. ' s' → logprob: -3.330657958984375
    8. ' t' → logprob: -3.580657958984375
    9. ' a' → logprob: -3.705657958984375
    10. 'l' → logprob: -3.705657958984375

Token 153: ' temp' (ID: 5484)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.3786677122116089
    2. ' l' → logprob: -1.8786677122116089
    3. ' left' → logprob: -2.1286678314208984
    4. ' first' → logprob: -2.6286678314208984
    5. ' arr' → logprob: -2.7536678314208984
    6. ' ans' → logprob: -2.7536678314208984
    7. ' t' → logprob: -3.5036678314208984
    8. 'a' → logprob: -3.6286678314208984
    9. ' lst' → logprob: -3.8786678314208984
    10. ' cnt' → logprob: -4.128667831420898

Token 154: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.35700684785842896
    2. '_' → logprob: -1.9820067882537842
    3. ' =' → logprob: -1.9820067882537842
    4. 's' → logprob: -3.982006788253784
    5. '=' → logprob: -6.607007026672363
    6. '0' → logprob: -6.982007026672363
    7. '_s' → logprob: -7.107007026672363
    8. '=[]' → logprob: -7.857007026672363
    9. '_a' → logprob: -8.357007026672363
    10. 'd' → logprob: -8.357007026672363

Token 155: ' and' (ID: 326)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06799238920211792
    2. '=' → logprob: -3.1929924488067627
    3. ' and' → logprob: -4.192992210388184
    4. '1' → logprob: -5.317992210388184
    5. ',' → logprob: -5.942992210388184
    6. '=[]' → logprob: -7.442992210388184
    7. '_' → logprob: -7.692992210388184
    8. 'and' → logprob: -7.692992210388184
    9. '   ' → logprob: -8.692992210388184
    10. ' ' → logprob: -9.442992210388184

Token 156: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.5381456613540649
    2. ' temp' → logprob: -1.413145661354065
    3. '[]' → logprob: -1.913145661354065
    4. ' []' → logprob: -3.9131455421447754
    5. '[' → logprob: -6.663145542144775
    6. '[]
' → logprob: -6.913145542144775
    7. ' [' → logprob: -7.913145542144775
    8. 's' → logprob: -8.038146018981934
    9. '[temp' → logprob: -8.038146018981934
    10. ' ' → logprob: -8.288146018981934

Token 157: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.610702363715973e-06
    2. '1' → logprob: -11.875009536743164
    3. ' ' → logprob: -14.750009536743164
    4. '<|end|>' → logprob: -14.875009536743164
    5. 's' → logprob: -15.375009536743164
    6. '=[]' → logprob: -15.500009536743164
    7. ' =' → logprob: -15.562509536743164
    8. '<|end|>' → logprob: -15.875009536743164
    9. '```' → logprob: -15.937509536743164
    10. '۲' → logprob: -16.187509536743164

Token 158: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014571723528206348
    2. '=' → logprob: -4.264571666717529
    3. '   ' → logprob: -8.889572143554688
    4. '=[]' → logprob: -9.139572143554688
    5. ',' → logprob: -10.014572143554688
    6. '1' → logprob: -10.139572143554688
    7. '=[]
' → logprob: -10.514572143554688
    8. '[' → logprob: -11.639572143554688
    9. '[]' → logprob: -11.764572143554688
    10. ' =
' → logprob: -11.764572143554688

Token 159: ' each' (ID: 2454)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.6236574053764343
    2. ' each' → logprob: -1.623657464981079
    3. 'each' → logprob: -1.873657464981079
    4. '[' → logprob: -2.748657464981079
    5. ' [' → logprob: -4.1236572265625
    6. ' []' → logprob: -4.7486572265625
    7. 'temp' → logprob: -5.2486572265625
    8. ' which' → logprob: -5.6236572265625
    9. '[],' → logprob: -5.9986572265625
    10. ' both' → logprob: -6.1236572265625

Token 160: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.9952866435050964
    2. '[' → logprob: -1.6202867031097412
    3. ' with' → logprob: -1.7452867031097412
    4. ' [' → logprob: -1.9952867031097412
    5. 'with' → logprob: -3.370286703109741
    6. ' =' → logprob: -3.870286703109741
    7. '[]' → logprob: -4.245286464691162
    8. ' initialized' → logprob: -4.370286464691162
    9. 'of' → logprob: -4.495286464691162
    10. ' containing' → logprob: -5.120286464691162

Token 161: ' length' (ID: 5517)
  Prédit: ' length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -1.040064811706543
    2. 'length' → logprob: -1.040064811706543
    3. 'size' → logprob: -2.040064811706543
    4. ' size' → logprob: -2.290064811706543
    5. '[' → logprob: -3.540064811706543
    6. ' [' → logprob: -5.040064811706543
    7. '0' → logprob: -5.290064811706543
    8. '[n' → logprob: -5.415064811706543
    9. ' two' → logprob: -5.915064811706543
    10. 'n' → logprob: -6.040064811706543

Token 162: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.3161087930202484
    2. 'n' → logprob: -1.3161088228225708
    3. ' ' → logprob: -6.566108703613281
    4. '2' → logprob: -8.066108703613281
    5. '3' → logprob: -8.191108703613281
    6. '10' → logprob: -8.941108703613281
    7. '   ' → logprob: -9.066108703613281
    8. '26' → logprob: -9.316108703613281
    9. '4' → logprob: -9.441108703613281
    10. '6' → logprob: -9.566108703613281

Token 163: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03770357742905617
    2. '=' → logprob: -4.287703514099121
    3. '   ' → logprob: -4.912703514099121
    4. 'temp' → logprob: -5.037703514099121
    5. ',' → logprob: -6.162703514099121
    6. '=[' → logprob: -6.287703514099121
    7. ' temp' → logprob: -6.537703514099121
    8. ' with' → logprob: -6.537703514099121
    9. '[' → logprob: -7.162703514099121
    10. ' [' → logprob: -8.162703514099121

Token 164: ' initialized' (ID: 40319)
  Prédit: ' initialized'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' initialized' → logprob: -0.6564900279045105
    2. ' filled' → logprob: -0.7814900279045105
    3. 'initialized' → logprob: -4.656489849090576
    4. 'filled' → logprob: -4.781489849090576
    5. ' each' → logprob: -5.656489849090576
    6. ' with' → logprob: -7.156489849090576
    7. 'each' → logprob: -8.281490325927734
    8. '[' → logprob: -8.531490325927734
    9. ' containing' → logprob: -8.781490325927734
    10. '[]' → logprob: -9.031490325927734

Token 165: ' with' (ID: 483)
  Prédit: ' with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' with' → logprob: -0.21117247641086578
    2. ' =' → logprob: -2.086172580718994
    3. '=' → logprob: -3.836172580718994
    4. 'with' → logprob: -3.961172580718994
    5. '=[' → logprob: -4.586172580718994
    6. ' [' → logprob: -5.336172580718994
    7. '[' → logprob: -5.586172580718994
    8. ' ' → logprob: -5.961172580718994
    9. ' to' → logprob: -6.836172580718994
    10. '   ' → logprob: -6.961172580718994

Token 166: ' None' (ID: 4662)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.38624921441078186
    2. ' ' → logprob: -1.3862491846084595
    3. ' zeros' → logprob: -3.261249303817749
    4. 'False' → logprob: -4.26124906539917
    5. ' False' → logprob: -5.13624906539917
    6. 'zeros' → logprob: -6.01124906539917
    7. '[' → logprob: -6.13624906539917
    8. ' [' → logprob: -6.38624906539917
    9. ' zero' → logprob: -6.51124906539917
    10. 'zero' → logprob: -7.38624906539917

Token 167: ' values' (ID: 4824)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.45694461464881897
    2. '   ' → logprob: -1.5819445848464966
    3. '=' → logprob: -2.581944704055786
    4. ',' → logprob: -3.206944704055786
    5. '(' → logprob: -4.456944465637207
    6. '([' → logprob: -4.706944465637207
    7. ' ' → logprob: -5.706944465637207
    8. ' (' → logprob: -5.831944465637207
    9. '[' → logprob: -5.831944465637207
    10. 's' → logprob: -6.206944465637207

Token 168: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4754784405231476
    2. ' =' → logprob: -1.1004784107208252
    3. '=' → logprob: -3.850478410720825
    4. '
' → logprob: -4.350478649139404
    5. ',' → logprob: -5.225478649139404
    6. ' ' → logprob: -6.475478649139404
    7. '[' → logprob: -6.850478649139404
    8. 'temp' → logprob: -7.100478649139404
    9. '    
' → logprob: -7.225478649139404
    10. ':' → logprob: -7.475478649139404

Token 169: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14119860529899597
    2. ' temp' → logprob: -2.2661986351013184
    3. 'temp' → logprob: -4.266198635101318
    4. ' ' → logprob: -5.141198635101318
    5. '    ' → logprob: -5.891198635101318
    6. '    
' → logprob: -6.891198635101318
    7. ' 
' → logprob: -7.016198635101318
    8. '[' → logprob: -7.141198635101318
    9. '  ' → logprob: -7.266198635101318
    10. '
' → logprob: -7.391198635101318

Token 170: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12338081747293472
    2. ' temp' → logprob: -2.4983808994293213
    3. 'temp' → logprob: -3.6233808994293213
    4. '    
' → logprob: -6.498380661010742
    5. ' 
' → logprob: -6.873380661010742
    6. '    ' → logprob: -6.873380661010742
    7. ' ' → logprob: -7.123380661010742
    8. 't' → logprob: -7.373380661010742
    9. ' t' → logprob: -7.623380661010742
    10. '
' → logprob: -7.998380661010742

Token 171: ' These' (ID: 5006)
  Prédit: ' temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' temp' → logprob: -0.2853536307811737
    2. 'temp' → logprob: -1.410353660583496
    3. 'These' → logprob: -6.410353660583496
    4. '   ' → logprob: -7.160353660583496
    5. ' ' → logprob: -8.285353660583496
    6. ' for' → logprob: -8.660353660583496
    7. 't' → logprob: -8.910353660583496
    8. ' These' → logprob: -8.910353660583496
    9. 'This' → logprob: -9.035353660583496
    10. ' t' → logprob: -9.410353660583496

Token 172: ' will' (ID: 738)
  Prédit: ' lists'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lists' → logprob: -0.05446602776646614
    2. ' are' → logprob: -3.8044660091400146
    3. ' ' → logprob: -3.9294660091400146
    4. ' will' → logprob: -5.304466247558594
    5. ' lines' → logprob: -5.929466247558594
    6. 'lists' → logprob: -6.554466247558594
    7. ' arrays' → logprob: -7.554466247558594
    8. ' two' → logprob: -8.054466247558594
    9. ' can' → logprob: -8.179466247558594
    10. ' could' → logprob: -8.929466247558594

Token 173: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.024616463109850883
    2. ' store' → logprob: -4.899616241455078
    3. ' serve' → logprob: -5.274616241455078
    4. ' represent' → logprob: -5.524616241455078
    5. ' ' → logprob: -6.524616241455078
    6. ' continue' → logprob: -7.024616241455078
    7. ' act' → logprob: -7.149616241455078
    8. '[]' → logprob: -7.399616241455078
    9. ' contain' → logprob: -7.899616241455078
    10. ' provide' → logprob: -7.899616241455078

Token 174: ' used' (ID: 2061)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.5269205570220947
    2. '[' → logprob: -0.9019205570220947
    3. '[n' → logprob: -6.651920318603516
    4. '[s' → logprob: -7.151920318603516
    5. '[]' → logprob: -7.901920318603516
    6. ' ['' → logprob: -8.526920318603516
    7. ' used' → logprob: -8.651920318603516
    8. '['' → logprob: -8.776920318603516
    9. '[len' → logprob: -9.526920318603516
    10. '[key' → logprob: -9.651920318603516

Token 175: ' for' (ID: 395)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.07252712547779083
    2. ' for' → logprob: -2.6975271701812744
    3. '   ' → logprob: -7.197526931762695
    4. ' =' → logprob: -7.697526931762695
    5. ' with' → logprob: -8.197526931762695
    6. ' as' → logprob: -8.197526931762695
    7. ' ' → logprob: -8.697526931762695
    8. '    ' → logprob: -8.822526931762695
    9. ' in' → logprob: -9.197526931762695
    10. 'to' → logprob: -9.447526931762695

Token 176: ' temporary' (ID: 23005)
  Prédit: ' storing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' storing' → logprob: -0.6485422253608704
    2. ' tracking' → logprob: -1.7735421657562256
    3. ' temporary' → logprob: -2.1485421657562256
    4. ' the' → logprob: -2.6485421657562256
    5. ' back' → logprob: -2.7735421657562256
    6. ' intermediate' → logprob: -4.273542404174805
    7. ' dynamic' → logprob: -4.273542404174805
    8. ' building' → logprob: -5.523542404174805
    9. ' [' → logprob: -5.773542404174805
    10. ' None' → logprob: -5.898542404174805

Token 177: ' storage' (ID: 7928)
  Prédit: ' storage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' storage' → logprob: -0.11000331491231918
    2. ' arrays' → logprob: -3.6100032329559326
    3. 'storage' → logprob: -3.6100032329559326
    4. ' storing' → logprob: -4.110003471374512
    5. ' to' → logprob: -5.485003471374512
    6. ' lists' → logprob: -5.860003471374512
    7. ' tracking' → logprob: -5.860003471374512
    8. ' values' → logprob: -6.110003471374512
    9. 's' → logprob: -6.235003471374512
    10. ' placeholders' → logprob: -6.610003471374512

Token 178: ' during' (ID: 3354)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8100950717926025
    2. '   ' → logprob: -1.1850950717926025
    3. ' =' → logprob: -2.4350950717926025
    4. ' of' → logprob: -3.3100950717926025
    5. ',' → logprob: -3.6850950717926025
    6. '=' → logprob: -3.6850950717926025
    7. ' ' → logprob: -4.060094833374023
    8. '    ' → logprob: -4.185094833374023
    9. '    
' → logprob: -4.935094833374023
    10. ' to' → logprob: -5.060094833374023

Token 179: ' string' (ID: 1621)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.12193014472723007
    2. ' back' → logprob: -3.2469301223754883
    3. ' recursion' → logprob: -3.2469301223754883
    4. 'the' → logprob: -3.9969301223754883
    5. ' processing' → logprob: -5.371930122375488
    6. ' recursive' → logprob: -5.871930122375488
    7. 'back' → logprob: -6.496930122375488
    8. ' your' → logprob: -6.746930122375488
    9. ' traversal' → logprob: -7.121930122375488
    10. ' iteration' → logprob: -7.121930122375488

Token 180: ' permutation' (ID: 135200)
  Prédit: ' processing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' processing' → logprob: -0.7037748098373413
    2. ' manipulation' → logprob: -0.8287748098373413
    3. 'processing' → logprob: -3.328774929046631
    4. ' manip' → logprob: -5.203774929046631
    5. ' construction' → logprob: -5.328774929046631
    6. 'man' → logprob: -5.453774929046631
    7. ' traversal' → logprob: -5.703774929046631
    8. 's' → logprob: -5.953774929046631
    9. ' analysis' → logprob: -6.703774929046631
    10. ' reconstruction' → logprob: -6.828774929046631

Token 181: ' constructions' (ID: 126322)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4483327865600586
    2. ')' → logprob: -2.4483327865600586
    3. 's' → logprob: -2.4483327865600586
    4. '_' → logprob: -3.0733327865600586
    5. ',' → logprob: -3.1983327865600586
    6. ' ' → logprob: -3.3233327865600586
    7. ' =' → logprob: -3.9483327865600586
    8. ']' → logprob: -4.948332786560059
    9. ' for' → logprob: -5.073332786560059
    10. '[' → logprob: -5.448332786560059

Token 182: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016059475019574165
    2. '
' → logprob: -4.891059398651123
    3. '    
' → logprob: -5.141059398651123
    4. 'temp' → logprob: -7.016059398651123
    5. ' ' → logprob: -7.141059398651123
    6. '    ' → logprob: -8.641059875488281
    7. '	temp' → logprob: -8.766059875488281
    8. '  ' → logprob: -9.141059875488281
    9. ' temp' → logprob: -9.391059875488281
    10. '   
' → logprob: -9.766059875488281

Token 183: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004959304817020893
    2. '    
' → logprob: -6.0049591064453125
    3. ' ' → logprob: -7.1299591064453125
    4. '
' → logprob: -7.7549591064453125
    5. '    ' → logprob: -8.379959106445312
    6. 't' → logprob: -8.504959106445312
    7. 'temp' → logprob: -8.754959106445312
    8. '  ' → logprob: -9.004959106445312
    9. '```' → logprob: -9.129959106445312
    10. ' 
' → logprob: -9.379959106445312

Token 184: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' (adapté à ' temp') → logprob: -0.1150648444890976
    2. ' temp' → logprob: -2.615064859390259
    3. '   ' → logprob: -3.365064859390259
    4. '	temp' → logprob: -7.61506462097168
    5. '\t' → logprob: -8.99006462097168
    6. 't' → logprob: -9.74006462097168
    7. ' ' → logprob: -9.86506462097168
    8. '
' → logprob: -10.24006462097168
    9. '[temp' → logprob: -10.36506462097168
    10. '[' → logprob: -10.36506462097168

Token 185: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -15.250000953674316
    3. '2' → logprob: -15.875000953674316
    4. '１' → logprob: -16.0
    5. '```' → logprob: -16.5
    6. '_' → logprob: -17.0
    7. '۱' → logprob: -17.875
    8. '   ' → logprob: -18.75
    9. '  ' → logprob: -19.0
    10. '১' → logprob: -19.1875

Token 186: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06996044516563416
    2. '=' → logprob: -2.694960355758667
    3. ' ' → logprob: -11.194960594177246
    4. ',' → logprob: -12.819960594177246
    5. ' =[' → logprob: -13.069960594177246
    6. '[' → logprob: -13.319960594177246
    7. '=[]' → logprob: -13.819960594177246
    8. ')' → logprob: -14.194960594177246
    9. ']' → logprob: -14.194960594177246
    10. '=[' → logprob: -14.569960594177246

Token 187: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5814687013626099
    2. ' [' → logprob: -0.8314687013626099
    3. '[n' → logprob: -5.20646858215332
    4. ' ' → logprob: -10.95646858215332
    5. '[N' → logprob: -12.20646858215332
    6. '[s' → logprob: -13.08146858215332
    7. '   ' → logprob: -13.95646858215332
    8. '[int' → logprob: -13.95646858215332
    9. ' ' → logprob: -14.33146858215332
    10. '[name' → logprob: -14.58146858215332

Token 188: 'None' (ID: 8505)
  Prédit: 'None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.001705175032839179
    2. ' None' → logprob: -6.376705169677734
    3. '   ' → logprob: -13.876705169677734
    4. '
' → logprob: -14.501705169677734
    5. ']' → logprob: -14.626705169677734
    6. '(None' → logprob: -15.751705169677734
    7. ' ' → logprob: -16.001705169677734
    8. ')' → logprob: -16.126705169677734
    9. '0' → logprob: -16.126705169677734
    10. '_None' → logprob: -16.126705169677734

Token 189: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0016030559781938791
    2. ']*' → logprob: -7.001603126525879
    3. ' for' → logprob: -7.876603126525879
    4. ' ]' → logprob: -8.126603126525879
    5. 'for' → logprob: -11.626603126525879
    6. '()]' → logprob: -12.751603126525879
    7. 'None' → logprob: -13.876603126525879
    8. ')' → logprob: -14.126603126525879
    9. '   ' → logprob: -14.501603126525879
    10. '']' → logprob: -15.126603126525879

Token 190: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.020867209881544113
    2. ']*' → logprob: -4.520867347717285
    3. ' for' → logprob: -4.770867347717285
    4. ' ]' → logprob: -7.145867347717285
    5. 'for' → logprob: -8.270867347717285
    6. ' *' → logprob: -8.770867347717285
    7. ',' → logprob: -10.895867347717285
    8. ']*(' → logprob: -10.895867347717285
    9. ')' → logprob: -11.145867347717285
    10. '*' → logprob: -11.520867347717285

Token 191: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.03804286941885948
    2. ' n' → logprob: -3.2880427837371826
    3. '	n' → logprob: -14.413043022155762
    4. '   ' → logprob: -14.413043022155762
    5. '(n' → logprob: -14.913043022155762
    6. ' ' → logprob: -17.413042068481445
    7. '```' → logprob: -17.913042068481445
    8. '  ' → logprob: -18.413042068481445
    9. '    ' → logprob: -18.788042068481445
    10. ' (' → logprob: -19.038042068481445

Token 192: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8621163964271545
    2. '   ' → logprob: -0.9871163964271545
    3. 'temp' → logprob: -1.6121163368225098
    4. ' temp' → logprob: -5.98711633682251
    5. '	temp' → logprob: -6.36211633682251
    6. '    
' → logprob: -7.61211633682251
    7. ' ' → logprob: -8.737116813659668
    8. '  
' → logprob: -8.862116813659668
    9. '
' → logprob: -8.987116813659668
    10. ',temp' → logprob: -9.237116813659668

Token 193: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0186686422675848
    2. 'temp' → logprob: -4.6436686515808105
    3. '   ' → logprob: -4.7686686515808105
    4. '    
' → logprob: -8.893668174743652
    5. ' temp' → logprob: -9.518668174743652
    6. '
' → logprob: -9.893668174743652
    7. '	temp' → logprob: -10.268668174743652
    8. ' 
' → logprob: -10.768668174743652
    9. ' ' → logprob: -11.143668174743652
    10. '  
' → logprob: -11.393668174743652

Token 194: ' [' (ID: 723)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.18686483800411224
    2. ' temp' → logprob: -2.4368648529052734
    3. '   ' → logprob: -3.6868648529052734
    4. '
' → logprob: -4.061864852905273
    5. '<|end|>' → logprob: -4.061864852905273
    6. ' ' → logprob: -4.686864852905273
    7. '<|end|>' → logprob: -5.936864852905273
    8. ' 
' → logprob: -6.061864852905273
    9. '[' → logprob: -6.686864852905273
    10. 'n' → logprob: -6.686864852905273

Token 195: 'None' (ID: 8505)
  Prédit: 'None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.1540892869234085
    2. 'n' → logprob: -2.5290892124176025
    3. ']' → logprob: -2.9040892124176025
    4. ')' → logprob: -5.779089450836182
    5. ' None' → logprob: -6.154089450836182
    6. '0' → logprob: -6.529089450836182
    7. ' n' → logprob: -7.779089450836182
    8. ' ]' → logprob: -8.029088973999023
    9. '   ' → logprob: -8.654088973999023
    10. ' ' → logprob: -9.029088973999023

Token 196: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003431738819926977
    2. ' ]' → logprob: -6.003431797027588
    3. ']
' → logprob: -7.003431797027588
    4. '<|end|>' → logprob: -11.25343132019043
    5. ']

' → logprob: -11.50343132019043
    6. ' ]
' → logprob: -12.50343132019043
    7. '   ' → logprob: -12.75343132019043
    8. ',' → logprob: -12.87843132019043
    9. ']
' → logprob: -13.00343132019043
    10. ' for' → logprob: -13.12843132019043

Token 197: ' *' (ID: 425)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 198: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.02632085606455803
    2. ' n' → logprob: -3.6513209342956543
    3. '2' → logprob: -11.526320457458496
    4. '(n' → logprob: -13.151320457458496
    5. ' ' → logprob: -13.151320457458496
    6. '```' → logprob: -14.026320457458496
    7. '<|end|>' → logprob: -14.151320457458496
    8. '4' → logprob: -14.401320457458496
    9. '6' → logprob: -14.526320457458496
    10. '10' → logprob: -14.651320457458496

Token 199: ' makes' (ID: 4787)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08792489767074585
    2. '   ' → logprob: -3.3379249572753906
    3. '<|end|>' → logprob: -3.5879249572753906
    4. 'temp' → logprob: -4.462924957275391
    5. '    
' → logprob: -5.962924957275391
    6. '  
' → logprob: -5.962924957275391
    7. '<|end|>' → logprob: -6.587924957275391
    8. ' 
' → logprob: -7.087924957275391
    9. '   
' → logprob: -8.08792495727539
    10. ' temp' → logprob: -8.08792495727539

Token 200: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4911092519760132
    2. ' a' → logprob: -0.9911092519760132
    3. 'n' → logprob: -4.866109371185303
    4. '[n' → logprob: -4.991109371185303
    5. '[' → logprob: -7.116109371185303
    6. ' n' → logprob: -7.366109371185303
    7. ' [' → logprob: -7.866109371185303
    8. ' an' → logprob: -9.116108894348145
    9. '[a' → logprob: -9.241108894348145
    10. 'temp' → logprob: -9.741108894348145

Token 201: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.18084944784641266
    2. ' list' → logprob: -1.8058494329452515
    3. 'n' → logprob: -6.930849552154541
    4. 'new' → logprob: -9.930849075317383
    5. ' new' → logprob: -10.930849075317383
    6. 'length' → logprob: -11.055849075317383
    7. '[n' → logprob: -11.180849075317383
    8. 'List' → logprob: -11.805849075317383
    9. ' n' → logprob: -12.305849075317383
    10. '_list' → logprob: -12.430849075317383

Token 202: ' where' (ID: 1919)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.472959041595459
    2. '<|end|>' → logprob: -2.222959041595459
    3. '[n' → logprob: -2.597959041595459
    4. '(n' → logprob: -2.597959041595459
    5. '[' → logprob: -2.722959041595459
    6. 'of' → logprob: -4.222959041595459
    7. 'n' → logprob: -4.472959041595459
    8. '(' → logprob: -5.097959041595459
    9. '<|end|>' → logprob: -5.722959041595459
    10. ' with' → logprob: -6.097959041595459

Token 203: ' every' (ID: 1753)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.109192855656147
    2. ' n' → logprob: -2.3591928482055664
    3. ' the' → logprob: -5.734192848205566
    4. 'None' → logprob: -6.484192848205566
    5. 'length' → logprob: -6.609192848205566
    6. 'the' → logprob: -6.609192848205566
    7. ' None' → logprob: -8.109192848205566
    8. ' ' → logprob: -8.859192848205566
    9. ' length' → logprob: -8.859192848205566
    10. ')' → logprob: -9.359192848205566

Token 204: ' element' (ID: 3577)
  Prédit: ' element'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' element' → logprob: -0.09154656529426575
    2. 'element' → logprob: -2.4665465354919434
    3. ' index' → logprob: -7.216546535491943
    4. ' position' → logprob: -7.466546535491943
    5. 'index' → logprob: -7.841546535491943
    6. 'position' → logprob: -8.466547012329102
    7. ' ' → logprob: -8.466547012329102
    8. ' entry' → logprob: -8.716547012329102
    9. ' item' → logprob: -9.466547012329102
    10. ' slot' → logprob: -9.841547012329102

Token 205: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.12944385409355164
    2. 'is' → logprob: -2.129443883895874
    3. ' None' → logprob: -7.129443645477295
    4. 'None' → logprob: -7.379443645477295
    5. ' ' → logprob: -7.629443645477295
    6. '<|end|>' → logprob: -9.504444122314453
    7. 'initial' → logprob: -9.754444122314453
    8. '=' → logprob: -9.879444122314453
    9. 's' → logprob: -10.004444122314453
    10. 'in' → logprob: -10.129444122314453

Token 206: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.054886344820261
    2. ' None' → logprob: -2.9298863410949707
    3. '`' → logprob: -13.804886817932129
    4. ' ' → logprob: -13.929886817932129
    5. '_None' → logprob: -14.554886817932129
    6. 'none' → logprob: -14.679886817932129
    7. '(None' → logprob: -15.054886817932129
    8. '[' → logprob: -15.679886817932129
    9. '```' → logprob: -15.804886817932129
    10. ''' → logprob: -16.679885864257812

Token 207: '
' (ID: 198)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.34814685583114624
    2. '   ' → logprob: -1.348146915435791
    3. '
' → logprob: -4.223146915435791
    4. ' temp' → logprob: -4.598146915435791
    5. '<|end|>' → logprob: -5.723146915435791
    6. ' ' → logprob: -6.848146915435791
    7. '<|end|>' → logprob: -7.098146915435791
    8. '    
' → logprob: -7.098146915435791
    9. '	temp' → logprob: -7.348146915435791
    10. '  
' → logprob: -7.473146915435791

Token 208: '   ' (ID: 271)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.14658485352993011
    2. ' temp' → logprob: -2.5215847492218018
    3. '   ' → logprob: -3.0215847492218018
    4. '    
' → logprob: -6.271584987640381
    5. '
' → logprob: -6.396584987640381
    6. ' 
' → logprob: -6.896584987640381
    7. '	temp' → logprob: -7.021584987640381
    8. '  
' → logprob: -7.646584987640381
    9. ',' → logprob: -7.896584987640381
    10. ' ' → logprob: -8.646584510803223

Token 209: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' (adapté à ' temp') → logprob: -0.008624501526355743
    2. ' temp' → logprob: -4.75862455368042
    3. '[' → logprob: -12.133624076843262
    4. '   ' → logprob: -12.508624076843262
    5. '[temp' → logprob: -15.008624076843262
    6. '	temp' → logprob: -15.508624076843262
    7. 'tmp' → logprob: -15.633624076843262
    8. ' [' → logprob: -17.258625030517578
    9. '_temp' → logprob: -17.258625030517578
    10. ' ' → logprob: -17.258625030517578

Token 210: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.735893965815194e-05
    2. '_' → logprob: -11.500017166137695
    3. ' ' → logprob: -12.125017166137695
    4. '1' → logprob: -14.500017166137695
    5. '₂' → logprob: -15.000017166137695
    6. '   ' → logprob: -15.250017166137695
    7. '=' → logprob: -15.750017166137695
    8. '```' → logprob: -15.875017166137695
    9. '[' → logprob: -16.250017166137695
    10. '２' → logprob: -16.750017166137695

Token 211: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10021119564771652
    2. '=' → logprob: -2.3502111434936523
    3. ' ' → logprob: -13.475211143493652
    4. ']' → logprob: -13.725211143493652
    5. '[' → logprob: -13.975211143493652
    6. ' =[' → logprob: -14.600211143493652
    7. '=[' → logprob: -15.100211143493652
    8. ')' → logprob: -15.350211143493652
    9. '=[]' → logprob: -15.850211143493652
    10. '   ' → logprob: -16.85021209716797

Token 212: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.47409021854400635
    2. '[' → logprob: -0.9740902185440063
    3. ' ' → logprob: -11.849090576171875
    4. '[n' → logprob: -12.099090576171875
    5. ' ' → logprob: -15.849090576171875
    6. '   ' → logprob: -15.849090576171875
    7. '  ' → logprob: -16.599090576171875
    8. ' n' → logprob: -17.224090576171875
    9. '[N' → logprob: -17.599090576171875
    10. 'None' → logprob: -17.724090576171875

Token 213: 'None' (ID: 8505)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.001127836643718183
    2. ' [' → logprob: -6.87612771987915
    3. 'None' → logprob: -9.501128196716309
    4. 'n' → logprob: -12.126128196716309
    5. ' ' → logprob: -12.251128196716309
    6. '[n' → logprob: -12.501128196716309
    7. ' None' → logprob: -12.876128196716309
    8. ' n' → logprob: -13.251128196716309
    9. '   ' → logprob: -14.126128196716309
    10. '(None' → logprob: -14.251128196716309

Token 214: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00019328886992298067
    2. ' ]' → logprob: -8.87519359588623
    3. ']*' → logprob: -9.87519359588623
    4. '*' → logprob: -13.87519359588623
    5. ')' → logprob: -15.12519359588623
    6. '[' → logprob: -15.37519359588623
    7. '']' → logprob: -16.250192642211914
    8. ' ' → logprob: -16.625192642211914
    9. ']
' → logprob: -16.750192642211914
    10. '"]' → logprob: -17.000192642211914

Token 215: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.1806766241788864
    2. ' *' → logprob: -1.8056765794754028
    3. '[' → logprob: -7.305676460266113
    4. ')' → logprob: -9.305676460266113
    5. ']' → logprob: -9.805676460266113
    6. '*n' → logprob: -9.930676460266113
    7. '   ' → logprob: -10.430676460266113
    8. ' ' → logprob: -11.680676460266113
    9. '[n' → logprob: -12.305676460266113
    10. ' [' → logprob: -12.555676460266113

Token 216: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04858839511871338
    2. ' n' → logprob: -3.048588275909424
    3. '   ' → logprob: -14.423588752746582
    4. ' ' → logprob: -15.298588752746582
    5. '	n' → logprob: -16.548587799072266
    6. '```' → logprob: -16.673587799072266
    7. '
' → logprob: -17.798587799072266
    8. '(n' → logprob: -17.798587799072266
    9. '[' → logprob: -17.923587799072266
    10. '    ' → logprob: -18.048587799072266

Token 217: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14884769916534424
    2. '<|end|>' → logprob: -3.3988475799560547
    3. '    
' → logprob: -3.6488475799560547
    4. ' ' → logprob: -3.6488475799560547
    5. 'def' → logprob: -3.7738475799560547
    6. ')' → logprob: -4.773847579956055
    7. ' def' → logprob: -5.148847579956055
    8. ' 
' → logprob: -5.523847579956055
    9. '[' → logprob: -5.898847579956055
    10. '  
' → logprob: -6.523847579956055

Token 218: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11306880414485931
    2. 'def' → logprob: -3.9880688190460205
    3. ' for' → logprob: -4.113068580627441
    4. ' i' → logprob: -4.363068580627441
    5. 'from' → logprob: -4.363068580627441
    6. ' from' → logprob: -4.738068580627441
    7. 'i' → logprob: -4.863068580627441
    8. ' def' → logprob: -4.988068580627441
    9. 'for' → logprob: -5.113068580627441
    10. 'import' → logprob: -5.363068580627441

Token 219: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.5524369478225708
    2. ' for' → logprob: -1.5524369478225708
    3. ' i' → logprob: -1.8024369478225708
    4. ' ' → logprob: -1.9274369478225708
    5. 'i' → logprob: -2.3024368286132812
    6. 'for' → logprob: -2.6774368286132812
    7. '    ' → logprob: -4.052436828613281
    8. ' def' → logprob: -4.052436828613281
    9. 'def' → logprob: -5.052436828613281
    10. ' 
' → logprob: -5.052436828613281

Token 220: ' Loop' (ID: 40095)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4457074701786041
    2. 'def' → logprob: -1.6957074403762817
    3. 'from' → logprob: -2.3207075595855713
    4. 'import' → logprob: -3.5707075595855713
    5. ' for' → logprob: -3.8207075595855713
    6. '   ' → logprob: -4.945707321166992
    7. 'i' → logprob: -5.070707321166992
    8. 'stack' → logprob: -5.570707321166992
    9. ' def' → logprob: -6.070707321166992
    10. ' from' → logprob: -6.320707321166992

Token 221: ' over' (ID: 1072)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.015709256753325462
    2. 'for' → logprob: -4.640709400177002
    3. '    ' → logprob: -6.390709400177002
    4. ' ' → logprob: -6.390709400177002
    5. ' i' → logprob: -6.765709400177002
    6. '   ' → logprob: -7.640709400177002
    7. ' =' → logprob: -7.890709400177002
    8. '_' → logprob: -8.890708923339844
    9. ' s' → logprob: -9.640708923339844
    10. '(' → logprob: -9.765708923339844

Token 222: ' all' (ID: 722)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.06976168602705002
    2. ' i' → logprob: -2.9447617530822754
    3. 'range' → logprob: -4.819761753082275
    4. ' n' → logprob: -6.069761753082275
    5. 'i' → logprob: -6.319761753082275
    6. ' _' → logprob: -6.819761753082275
    7. ' r' → logprob: -7.819761753082275
    8. ' a' → logprob: -8.319761276245117
    9. '_' → logprob: -8.444761276245117
    10. 'n' → logprob: -9.194761276245117

Token 223: ' possible' (ID: 4149)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5329587459564209
    2. ' i' → logprob: -1.157958745956421
    3. ' for' → logprob: -3.157958745956421
    4. 'range' → logprob: -4.532958984375
    5. ' n' → logprob: -4.657958984375
    6. 'i' → logprob: -4.782958984375
    7. ' possible' → logprob: -4.782958984375
    8. '   ' → logprob: -5.782958984375
    9. ' combinations' → logprob: -5.907958984375
    10. ' ranges' → logprob: -6.157958984375

Token 224: ' combinations' (ID: 43835)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.1827726513147354
    2. 'i' → logprob: -2.807772636413574
    3. ' for' → logprob: -3.182772636413574
    4. ' range' → logprob: -3.432772636413574
    5. 'for' → logprob: -5.182772636413574
    6. ' combinations' → logprob: -5.557772636413574
    7. ' length' → logprob: -5.807772636413574
    8. 'range' → logprob: -5.932772636413574
    9. ' ' → logprob: -6.057772636413574
    10. ' choices' → logprob: -6.307772636413574

Token 225: ' ('' (ID: 9906)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.06653355807065964
    2. 'for' → logprob: -3.8165335655212402
    3. '   ' → logprob: -3.9415335655212402
    4. ' i' → logprob: -4.19153356552124
    5. ' of' → logprob: -5.44153356552124
    6. ' ' → logprob: -7.19153356552124
    7. '    ' → logprob: -7.56653356552124
    8. ' from' → logprob: -7.81653356552124
    9. ' in' → logprob: -7.94153356552124
    10. ' (' → logprob: -8.316533088684082

Token 226: 'ii' (ID: 3573)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9448238611221313
    2. 'range' → logprob: -1.9448238611221313
    3. ' range' → logprob: -2.069823741912842
    4. ' i' → logprob: -2.319823741912842
    5. ' for' → logprob: -2.319823741912842
    6. 'for' → logprob: -2.569823741912842
    7. '   ' → logprob: -2.694823741912842
    8. 'n' → logprob: -2.819823741912842
    9. ' n' → logprob: -3.069823741912842
    10. ')' → logprob: -3.319823741912842

Token 227: '')' (ID: 1542)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.7710981369018555
    2. ')' → logprob: -1.6460981369018555
    3. ',' → logprob: -2.2710981369018555
    4. ' =' → logprob: -3.0210981369018555
    5. 'in' → logprob: -3.1460981369018555
    6. '')' → logprob: -3.5210981369018555
    7. '   ' → logprob: -3.5210981369018555
    8. '=' → logprob: -4.2710981369018555
    9. '0' → logprob: -4.5210981369018555
    10. ' ,' → logprob: -4.5210981369018555

Token 228: ' for' (ID: 395)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05501599609851837
    2. 'in' → logprob: -3.930016040802002
    3. ' i' → logprob: -4.305016040802002
    4. ' ' → logprob: -4.805016040802002
    5. '   ' → logprob: -5.805016040802002
    6. ',' → logprob: -5.930016040802002
    7. '_' → logprob: -6.555016040802002
    8. 'for' → logprob: -6.930016040802002
    9. ' _' → logprob: -7.305016040802002
    10. '[' → logprob: -7.555016040802002

Token 229: ' selecting' (ID: 31615)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.07686720043420792
    2. 'i' → logprob: -2.95186710357666
    3. ' range' → logprob: -4.20186710357666
    4. ' ' → logprob: -6.32686710357666
    5. ' _' → logprob: -6.70186710357666
    6. 'range' → logprob: -6.82686710357666
    7. '0' → logprob: -7.07686710357666
    8. '_' → logprob: -7.82686710357666
    9. ' n' → logprob: -7.95186710357666
    10. ' temp' → logprob: -9.45186710357666

Token 230: ' n' (ID: 297)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.8236523270606995
    2. ' n' → logprob: -1.0736522674560547
    3. ' ' → logprob: -2.8236522674560547
    4. ' range' → logprob: -3.1986522674560547
    5. '0' → logprob: -3.6986522674560547
    6. 'n' → logprob: -3.9486522674560547
    7. ' the' → logprob: -4.448652267456055
    8. 'i' → logprob: -4.448652267456055
    9. 'range' → logprob: -4.573652267456055
    10. '    ' → logprob: -5.073652267456055

Token 231: ' positions' (ID: 15897)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.160354733467102
    2. ' positions' → logprob: -1.910354733467102
    3. ' indices' → logprob: -2.0353546142578125
    4. ' for' → logprob: -2.9103546142578125
    5. 'indices' → logprob: -2.9103546142578125
    6. ' elements' → logprob: -3.1603546142578125
    7. ' characters' → logprob: -3.4103546142578125
    8. ' tokens' → logprob: -3.9103546142578125
    9. '   ' → logprob: -3.9103546142578125
    10. 'for' → logprob: -3.9103546142578125

Token 232: ' out' (ID: 842)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -1.415552020072937
    2. ' for' → logprob: -1.540552020072937
    3. 'from' → logprob: -2.1655521392822266
    4. '   ' → logprob: -2.1655521392822266
    5. 'for' → logprob: -2.7905521392822266
    6. ' ' → logprob: -2.9155521392822266
    7. ' from' → logprob: -3.2905521392822266
    8. ' of' → logprob: -3.6655521392822266
    9. ' =' → logprob: -3.7905521392822266
    10. '=' → logprob: -4.040552139282227

Token 233: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.29288601875305176
    2. 'of' → logprob: -2.0428860187530518
    3. 'range' → logprob: -2.2928860187530518
    4. '   ' → logprob: -4.167885780334473
    5. ' range' → logprob: -5.167885780334473
    6. '       ' → logprob: -7.667885780334473
    7. '=' → logprob: -7.917885780334473
    8. 'to' → logprob: -8.667885780334473
    9. ' to' → logprob: -8.917885780334473
    10. 'def' → logprob: -9.042885780334473

Token 234: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.12871505320072174
    2. ' ' → logprob: -2.5037150382995605
    3. 'range' → logprob: -3.8787150382995605
    4. ' range' → logprob: -4.1287150382995605
    5. '[' → logprob: -7.2537150382995605
    6. 's' → logprob: -8.128715515136719
    7. ' [' → logprob: -8.128715515136719
    8. ' s' → logprob: -8.378715515136719
    9. '(' → logprob: -8.753715515136719
    10. '   ' → logprob: -9.378715515136719

Token 235: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.04697494953870773
    2. 'range' → logprob: -3.1719748973846436
    3. ' range' → logprob: -6.421975135803223
    4. ' ' → logprob: -7.296975135803223
    5. '[' → logprob: -7.421975135803223
    6. '(' → logprob: -7.546975135803223
    7. 's' → logprob: -7.796975135803223
    8. '(range' → logprob: -11.046975135803223
    9. '`' → logprob: -11.296975135803223
    10. '20' → logprob: -11.421975135803223

Token 236: '*n' (ID: 58470)
  Prédit: '*n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*n' → logprob: -0.5385444760322571
    2. 'n' → logprob: -1.0385444164276123
    3. ' *' → logprob: -3.0385444164276123
    4. ' n' → logprob: -5.038544654846191
    5. '**' → logprob: -5.163544654846191
    6. '*' → logprob: -6.913544654846191
    7. ' **' → logprob: -8.163544654846191
    8. ' ' → logprob: -8.413544654846191
    9. '*i' → logprob: -8.663544654846191
    10. '
' → logprob: -8.913544654846191

Token 237: ' (' (ID: 350)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7200549244880676
    2. 'for' → logprob: -1.2200548648834229
    3. ' ' → logprob: -2.345054864883423
    4. ')' → logprob: -4.095055103302002
    5. '+' → logprob: -4.220055103302002
    6. '_' → logprob: -4.220055103302002
    7. ' )' → logprob: -4.345055103302002
    8. 's' → logprob: -5.095055103302002
    9. 'import' → logprob: -5.095055103302002
    10. '2' → logprob: -5.095055103302002

Token 238: 'using' (ID: 1846)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5569967031478882
    2. '2' → logprob: -1.3069967031478882
    3. ' ' → logprob: -2.1819968223571777
    4. '(' → logprob: -4.181996822357178
    5. ')' → logprob: -4.431996822357178
    6. 'range' → logprob: -5.306996822357178
    7. '   ' → logprob: -6.056996822357178
    8. 'for' → logprob: -6.181996822357178
    9. '0' → logprob: -6.556996822357178
    10. ' (' → logprob: -6.681996822357178

Token 239: ' bit' (ID: 3546)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -1.0218665599822998
    2. 'range' → logprob: -1.1468665599822998
    3. 'from' → logprob: -1.8968665599822998
    4. ' itertools' → logprob: -2.7718665599823
    5. '1' → logprob: -3.7718665599823
    6. '(' → logprob: -4.021866798400879
    7. ' from' → logprob: -4.396866798400879
    8. ')' → logprob: -4.896866798400879
    9. ' (' → logprob: -5.146866798400879
    10. 'import' → logprob: -5.396866798400879

Token 240: 'm' (ID: 76)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.37711480259895325
    2. 'm' → logprob: -1.5021147727966309
    3. '   ' → logprob: -3.127114772796631
    4. ' manipulation' → logprob: -4.877114772796631
    5. ' masks' → logprob: -5.127114772796631
    6. ' ' → logprob: -5.377114772796631
    7. '_mask' → logprob: -5.377114772796631
    8. ' i' → logprob: -5.627114772796631
    9. 'wise' → logprob: -5.752114772796631
    10. ' mask' → logprob: -5.877114772796631

Token 241: 'asks' (ID: 9523)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.24655985832214355
    2. 'm' → logprob: -3.1215598583221436
    3. 'it' → logprob: -3.4965598583221436
    4. 'its' → logprob: -3.6215598583221436
    5. '   ' → logprob: -3.6215598583221436
    6. 'i' → logprob: -4.371560096740723
    7. 'e' → logprob: -4.371560096740723
    8. ' mask' → logprob: -4.996560096740723
    9. '_mask' → logprob: -5.246560096740723
    10. 'set' → logprob: -5.371560096740723

Token 242: ')
' (ID: 446)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9312644600868225
    2. ')' → logprob: -1.3062644004821777
    3. '   ' → logprob: -1.8062644004821777
    4. ' )' → logprob: -2.4312644004821777
    5. ' ' → logprob: -3.4312644004821777
    6. ',' → logprob: -5.056264400482178
    7. ' in' → logprob: -5.056264400482178
    8. 'for' → logprob: -5.181264400482178
    9. ' (' → logprob: -5.306264400482178
    10. '    ' → logprob: -5.681264400482178

Token 243: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6110272407531738
    2. ' for' → logprob: -0.8610272407531738
    3. 'for' → logprob: -4.361027240753174
    4. ' ' → logprob: -4.986027240753174
    5. ' 
' → logprob: -5.361027240753174
    6. '    ' → logprob: -5.986027240753174
    7. '```' → logprob: -6.111027240753174
    8. '    
' → logprob: -6.486027240753174
    9. ':' → logprob: -7.236027240753174
    10. ' i' → logprob: -7.486027240753174

Token 244: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2606375515460968
    2. '   ' → logprob: -2.0106375217437744
    3. 'for' → logprob: -2.3856375217437744
    4. ' i' → logprob: -7.0106377601623535
    5. '1' → logprob: -7.2606377601623535
    6. ' f' → logprob: -7.7606377601623535
    7. ' ' → logprob: -7.8856377601623535
    8. ' from' → logprob: -8.635637283325195
    9. 'f' → logprob: -8.760637283325195
    10. '(' → logprob: -8.760637283325195

Token 245: ' range' (ID: 3352)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.11919321864843369
    2. 'for' → logprob: -2.3691933155059814
    3. '   ' → logprob: -4.119193077087402
    4. ' ' → logprob: -6.994193077087402
    5. ' f' → logprob: -7.619193077087402
    6. ' i' → logprob: -7.994193077087402
    7. ' from' → logprob: -8.619193077087402
    8. 'f' → logprob: -9.744193077087402
    9. 'from' → logprob: -9.744193077087402
    10. '1' → logprob: -9.744193077087402

Token 246: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.1318875446449965e-05
    2. ' (' → logprob: -10.250041007995605
    3. '((' → logprob: -12.375041007995605
    4. '(
' → logprob: -13.625041007995605
    5. '   ' → logprob: -15.875041007995605
    6. 's' → logprob: -16.375041961669922
    7. ' ' → logprob: -16.750041961669922
    8. '```' → logprob: -16.875041961669922
    9. '(pow' → logprob: -17.000041961669922
    10. '\(' → logprob: -17.500041961669922

Token 247: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06644777953624725
    2. '(' → logprob: -2.8164477348327637
    3. '0' → logprob: -6.441447734832764
    4. ' ' → logprob: -6.566447734832764
    5. '2' → logprob: -6.691447734832764
    6. ')' → logprob: -9.066448211669922
    7. '   ' → logprob: -9.691448211669922
    8. ' (' → logprob: -10.566448211669922
    9. '```' → logprob: -11.191448211669922
    10. ')(' → logprob: -13.441448211669922

Token 248: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.02801837958395481
    2. '*n' → logprob: -4.278018474578857
    3. ' **' → logprob: -4.403018474578857
    4. ' *' → logprob: -7.903018474578857
    5. '*(' → logprob: -7.903018474578857
    6. ')' → logprob: -8.0280179977417
    7. '*' → logprob: -8.4030179977417
    8. '```' → logprob: -9.6530179977417
    9. ')**' → logprob: -10.2780179977417
    10. '<<' → logprob: -10.2780179977417

Token 249: ' n' (ID: 297)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0018783047562465072
    2. ' (' → logprob: -6.376878261566162
    3. 'n' → logprob: -9.37687873840332
    4. '(n' → logprob: -10.00187873840332
    5. ' ' → logprob: -11.50187873840332
    6. '```' → logprob: -11.75187873840332
    7. '2' → logprob: -12.12687873840332
    8. ')' → logprob: -12.37687873840332
    9. '   ' → logprob: -13.37687873840332
    10. '0' → logprob: -13.37687873840332

Token 250: ')' (ID: 8)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.21832433342933655
    2. ')' → logprob: -2.2183244228363037
    3. ' *' → logprob: -2.5933244228363037
    4. '(' → logprob: -5.718324184417725
    5. '(n' → logprob: -5.843324184417725
    6. '*n' → logprob: -6.343324184417725
    7. '2' → logprob: -7.343324184417725
    8. ')`' → logprob: -7.593324184417725
    9. ' ' → logprob: -7.968324184417725
    10. '//' → logprob: -7.968324184417725

Token 251: ' generates' (ID: 48782)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.17644427716732025
    2. '(' → logprob: -2.3014442920684814
    3. '):' → logprob: -3.4264442920684814
    4. '(n' → logprob: -4.426444053649902
    5. '():' → logprob: -5.676444053649902
    6. '   ' → logprob: -5.676444053649902
    7. 'for' → logprob: -5.926444053649902
    8. '**' → logprob: -6.676444053649902
    9. ':
' → logprob: -6.801444053649902
    10. '(range' → logprob: -6.926444053649902

Token 252: ' all' (ID: 722)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7105247378349304
    2. '1' → logprob: -1.0855247974395752
    3. '2' → logprob: -2.085524797439575
    4. '(' → logprob: -4.335524559020996
    5. ' (' → logprob: -4.460524559020996
    6. '   ' → logprob: -4.710524559020996
    7. ' range' → logprob: -5.335524559020996
    8. 'range' → logprob: -5.710524559020996
    9. '```' → logprob: -6.585524559020996
    10. '0' → logprob: -6.960524559020996

Token 253: ' bit' (ID: 3546)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8583922982215881
    2. ' (' → logprob: -1.1083922386169434
    3. '(' → logprob: -1.9833922386169434
    4. '2' → logprob: -3.4833922386169434
    5. ' i' → logprob: -4.233392238616943
    6. '   ' → logprob: -4.233392238616943
    7. '1' → logprob: -4.483392238616943
    8. '0' → logprob: -5.233392238616943
    9. '  ' → logprob: -5.233392238616943
    10. ')' → logprob: -5.233392238616943

Token 254: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.15612073242664337
    2. 'mask' → logprob: -2.531120777130127
    3. '_masks' → logprob: -3.531120777130127
    4. '   ' → logprob: -4.281120777130127
    5. '_mask' → logprob: -4.406120777130127
    6. ')' → logprob: -5.406120777130127
    7. ' masks' → logprob: -6.906120777130127
    8. '_' → logprob: -7.031120777130127
    9. '_length' → logprob: -7.656120777130127
    10. '_m' → logprob: -7.781120777130127

Token 255: 'asks' (ID: 9523)
  Prédit: 'asks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'asks' → logprob: -0.2045336216688156
    2. 'ask' → logprob: -2.579533576965332
    3. '**' → logprob: -2.829533576965332
    4. 'as' → logprob: -3.829533576965332
    5. 'a' → logprob: -4.704533576965332
    6. '```' → logprob: -5.079533576965332
    7. '   ' → logprob: -5.829533576965332
    8. '^' → logprob: -6.454533576965332
    9. 'its' → logprob: -6.579533576965332
    10. 'sk' → logprob: -7.329533576965332

Token 256: ' of' (ID: 328)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03697766363620758
    2. ' (' → logprob: -3.661977767944336
    3. '(n' → logprob: -4.911977767944336
    4. ' for' → logprob: -7.161977767944336
    5. '   ' → logprob: -7.661977767944336
    6. '<|end|>' → logprob: -7.661977767944336
    7. ')' → logprob: -8.411977767944336
    8. '(
' → logprob: -8.411977767944336
    9. '(range' → logprob: -9.036977767944336
    10. 's' → logprob: -9.036977767944336

Token 257: ' length' (ID: 5517)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.24077570438385
    2. ' length' → logprob: -1.49077570438385
    3. 'length' → logprob: -1.99077570438385
    4. '2' → logprob: -2.6157755851745605
    5. ' n' → logprob: -2.6157755851745605
    6. 'n' → logprob: -2.7407755851745605
    7. ' (' → logprob: -2.7407755851745605
    8. ' size' → logprob: -3.6157755851745605
    9. ' ' → logprob: -3.6157755851745605
    10. 'size' → logprob: -4.6157755851745605

Token 258: ' n' (ID: 297)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.7049165368080139
    2. '(' → logprob: -1.5799164772033691
    3. ' ' → logprob: -1.7049164772033691
    4. ' (' → logprob: -2.579916477203369
    5. 'n' → logprob: -3.954916477203369
    6. ' n' → logprob: -3.954916477203369
    7. '(n' → logprob: -6.204916477203369
    8. 's' → logprob: -7.329916477203369
    9. '1' → logprob: -7.579916477203369
    10. ' s' → logprob: -8.579916954040527

Token 259: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6309402585029602
    2. '(' → logprob: -1.8809401988983154
    3. '):' → logprob: -2.1309401988983154
    4. '_' → logprob: -2.3809401988983154
    5. ')' → logprob: -3.5059401988983154
    6. ',' → logprob: -4.6309404373168945
    7. '(n' → logprob: -4.7559404373168945
    8. '   ' → logprob: -4.8809404373168945
    9. '**' → logprob: -5.0059404373168945
    10. 'for' → logprob: -5.2559404373168945

Token 260: 'from' (ID: 2845)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.32227152585983276
    2. '2' → logprob: -1.8222715854644775
    3. '(' → logprob: -3.4472715854644775
    4. ')' → logprob: -3.6972715854644775
    5. ' (' → logprob: -4.447271347045898
    6. '1' → logprob: -4.572271347045898
    7. ' )' → logprob: -4.822271347045898
    8. '*' → logprob: -4.947271347045898
    9. ' *' → logprob: -5.322271347045898
    10. '+' → logprob: -5.947271347045898

Token 261: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3499634563922882
    2. ' ' → logprob: -1.2249634265899658
    3. '2' → logprob: -7.224963665008545
    4. '1' → logprob: -7.849963665008545
    5. '```' → logprob: -8.974963188171387
    6. ')' → logprob: -10.099963188171387
    7. '   ' → logprob: -10.099963188171387
    8. '(' → logprob: -10.099963188171387
    9. ' (' → logprob: -10.474963188171387
    10. ' n' → logprob: -10.599963188171387

Token 262: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0016914885491132736
    2. ' ' → logprob: -7.2516913414001465
    3. '1' → logprob: -7.7516913414001465
    4. '2' → logprob: -7.8766913414001465
    5. '(' → logprob: -9.751691818237305
    6. '```' → logprob: -9.751691818237305
    7. 'n' → logprob: -10.876691818237305
    8. ')' → logprob: -11.376691818237305
    9. '`' → logprob: -11.751691818237305
    10. '   ' → logprob: -13.251691818237305

Token 263: ' to' (ID: 316)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.834111750125885
    2. ' to' → logprob: -1.5841116905212402
    3. '   ' → logprob: -2.2091116905212402
    4. ')' → logprob: -2.7091116905212402
    5. ',' → logprob: -3.2091116905212402
    6. '+' → logprob: -3.5841116905212402
    7. '*' → logprob: -3.7091116905212402
    8. '**' → logprob: -3.9591116905212402
    9. ' *' → logprob: -4.33411169052124
    10. ' **' → logprob: -4.45911169052124

Token 264: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4539569318294525
    2. '2' → logprob: -1.578956961631775
    3. '(' → logprob: -2.5789568424224854
    4. ' (' → logprob: -2.5789568424224854
    5. '1' → logprob: -5.0789570808410645
    6. '```' → logprob: -8.203956604003906
    7. '   ' → logprob: -8.703956604003906
    8. '`' → logprob: -9.828956604003906
    9. ')' → logprob: -10.203956604003906
    10. '23' → logprob: -10.328956604003906

Token 265: '2' (ID: 17)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3554419279098511
    2. '2' → logprob: -1.230441927909851
    3. '1' → logprob: -6.105442047119141
    4. ' (' → logprob: -6.105442047119141
    5. ' ' → logprob: -6.480442047119141
    6. 'n' → logprob: -8.10544204711914
    7. '```' → logprob: -8.73044204711914
    8. '(n' → logprob: -8.98044204711914
    9. '**' → logprob: -9.23044204711914
    10. '0' → logprob: -9.73044204711914

Token 266: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.19379957020282745
    2. ' **' → logprob: -1.943799614906311
    3. ' *' → logprob: -3.8187994956970215
    4. '*' → logprob: -4.8187994956970215
    5. '*n' → logprob: -6.1937994956970215
    6. ' ' → logprob: -7.1937994956970215
    7. ')' → logprob: -9.81879997253418
    8. '   ' → logprob: -10.69379997253418
    9. '*(' → logprob: -11.06879997253418
    10. '```' → logprob: -11.06879997253418

Token 267: 'n' (ID: 77)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1232018768787384
    2. 'n' → logprob: -2.748201847076416
    3. ' (' → logprob: -3.248201847076416
    4. '(n' → logprob: -4.498201847076416
    5. ' n' → logprob: -6.623201847076416
    6. '2' → logprob: -8.498202323913574
    7. ' ' → logprob: -8.748202323913574
    8. '1' → logprob: -10.623202323913574
    9. '`' → logprob: -10.623202323913574
    10. '   ' → logprob: -10.623202323913574

Token 268: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7169424295425415
    2. '*' → logprob: -1.7169424295425415
    3. ' -' → logprob: -1.7169424295425415
    4. ' *' → logprob: -2.841942310333252
    5. '-' → logprob: -3.216942310333252
    6. ')-' → logprob: -3.841942310333252
    7. '*n' → logprob: -4.216942310333252
    8. ' )' → logprob: -4.466942310333252
    9. 'n' → logprob: -6.216942310333252
    10. ' ' → logprob: -6.341942310333252

Token 269: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08767235279083252
    2. 'n' → logprob: -2.587672233581543
    3. ' n' → logprob: -4.962672233581543
    4. ' ' → logprob: -6.462672233581543
    5. ')' → logprob: -9.712672233581543
    6. '(' → logprob: -9.837672233581543
    7. '-' → logprob: -10.587672233581543
    8. ' -' → logprob: -11.462672233581543
    9. '(n' → logprob: -11.712672233581543
    10. ' (' → logprob: -11.837672233581543

Token 270: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.31605494022369385
    2. 'n' → logprob: -1.3160549402236938
    3. ' n' → logprob: -6.566054821014404
    4. ' ' → logprob: -7.566054821014404
    5. ')' → logprob: -8.066055297851562
    6. '2' → logprob: -8.441055297851562
    7. '(' → logprob: -8.441055297851562
    8. '```' → logprob: -10.441055297851562
    9. '(n' → logprob: -11.066055297851562
    10. '20' → logprob: -11.691055297851562

Token 271: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19248437881469727
    2. '):' → logprob: -1.8174843788146973
    3. '   ' → logprob: -4.817484378814697
    4. '):
' → logprob: -6.192484378814697
    5. ' )' → logprob: -7.317484378814697
    6. ')
' → logprob: -7.442484378814697
    7. '**' → logprob: -8.442483901977539
    8. '2' → logprob: -8.567483901977539
    9. ':' → logprob: -8.942483901977539
    10. ' ):' → logprob: -9.192483901977539

Token 272: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2900194525718689
    2. ':' → logprob: -2.4150195121765137
    3. '   ' → logprob: -2.7900195121765137
    4. '[' → logprob: -3.0400195121765137
    5. ' ' → logprob: -4.290019512176514
    6. '2' → logprob: -4.540019512176514
    7. ' (' → logprob: -4.915019512176514
    8. '0' → logprob: -5.790019512176514
    9. '(n' → logprob: -5.790019512176514
    10. ',' → logprob: -5.915019512176514

Token 273: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5896995663642883
    2. ' for' → logprob: -1.3396995067596436
    3. 'for' (adapté à ' for') → logprob: -2.2146995067596436
    4. '2' → logprob: -3.3396995067596436
    5. ' ' → logprob: -4.589699745178223
    6. '(' → logprob: -4.839699745178223
    7. '0' → logprob: -5.464699745178223
    8. ' range' → logprob: -5.589699745178223
    9. '```' → logprob: -5.839699745178223
    10. '1' → logprob: -5.964699745178223

Token 274: ' ii' (ID: 28354)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.008577220141887665
    2. ' mask' → logprob: -5.883577346801758
    3. ' _' → logprob: -6.258577346801758
    4. 'i' → logprob: -6.383577346801758
    5. ' ii' → logprob: -6.633577346801758
    6. ' ' → logprob: -7.758577346801758
    7. ' bit' → logprob: -9.258577346801758
    8. '_' → logprob: -9.508577346801758
    9. 'mask' → logprob: -9.883577346801758
    10. ' x' → logprob: -10.508577346801758

Token 275: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0054835909977555275
    2. 'in' → logprob: -5.255483627319336
    3. ' ' → logprob: -8.380483627319336
    4. '   ' → logprob: -12.005483627319336
    5. '  ' → logprob: -12.630483627319336
    6. '	in' → logprob: -13.255483627319336
    7. ',' → logprob: -13.380483627319336
    8. ')' → logprob: -13.755483627319336
    9. '    ' → logprob: -13.880483627319336
    10. 'In' → logprob: -14.255483627319336

Token 276: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.03804803267121315
    2. 'range' → logprob: -3.288048028945923
    3. ' ' → logprob: -13.163047790527344
    4. '[' → logprob: -13.913047790527344
    5. '0' → logprob: -14.038047790527344
    6. '(range' → logprob: -14.038047790527344
    7. '	range' → logprob: -14.538047790527344
    8. '(' → logprob: -14.913047790527344
    9. '   ' → logprob: -15.163047790527344
    10. ')' → logprob: -15.413047790527344

Token 277: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00014478032244369388
    2. ' (' → logprob: -9.375144958496094
    3. '((' → logprob: -10.125144958496094
    4. '(n' → logprob: -11.375144958496094
    5. '2' → logprob: -12.375144958496094
    6. '   ' → logprob: -13.375144958496094
    7. '1' → logprob: -14.250144958496094
    8. '(
' → logprob: -15.125144958496094
    9. '(len' → logprob: -15.250144958496094
    10. '(pow' → logprob: -15.250144958496094

Token 278: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.20713984966278076
    2. '1' → logprob: -1.7071398496627808
    3. '(' → logprob: -5.33213996887207
    4. 'n' → logprob: -7.45713996887207
    5. ' ' → logprob: -8.58213996887207
    6. '0' → logprob: -10.58213996887207
    7. '   ' → logprob: -11.20713996887207
    8. ')' → logprob: -11.20713996887207
    9. '(n' → logprob: -11.20713996887207
    10. '32' → logprob: -11.45713996887207

Token 279: ' **' (ID: 6240)
  Prédit: ' **'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' **' → logprob: -0.045020800083875656
    2. '**' → logprob: -3.170020818710327
    3. ' *' → logprob: -6.545020580291748
    4. ' ' → logprob: -8.170021057128906
    5. ')' → logprob: -8.545021057128906
    6. '*' → logprob: -10.045021057128906
    7. ' )' → logprob: -10.545021057128906
    8. ' **)' → logprob: -11.420021057128906
    9. '*n' → logprob: -12.170021057128906
    10. ' ' → logprob: -12.670021057128906

Token 280: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.026140857487916946
    2. '(' → logprob: -4.0261406898498535
    3. '(n' → logprob: -5.1511406898498535
    4. ' n' → logprob: -6.4011406898498535
    5. ' (' → logprob: -7.9011406898498535
    6. '2' → logprob: -9.901141166687012
    7. '   ' → logprob: -10.651141166687012
    8. ' ' → logprob: -11.401141166687012
    9. '20' → logprob: -12.401141166687012
    10. '32' → logprob: -12.776141166687012

Token 281: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0007694864762015641
    2. '):
' → logprob: -7.25076961517334
    3. ':' → logprob: -10.62576961517334
    4. ')' → logprob: -11.12576961517334
    5. '   ' → logprob: -11.87576961517334
    6. ' ):' → logprob: -12.25076961517334
    7. '**' → logprob: -13.00076961517334
    8. '+' → logprob: -13.12576961517334
    9. '*' → logprob: -14.12576961517334
    10. '):
' → logprob: -14.37576961517334

Token 282: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1703764647245407
    2. ':' → logprob: -2.2953765392303467
    3. '    ' → logprob: -3.5453765392303467
    4. '   ' → logprob: -4.545376300811768
    5. ' :' → logprob: -5.045376300811768
    6. ' ' → logprob: -5.170376300811768
    7. '        
' → logprob: -6.795376300811768
    8. '<|end|>' → logprob: -7.045376300811768
    9. '        ' → logprob: -7.670376300811768
    10. '     ' → logprob: -7.795376300811768

Token 283: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6279096603393555
    2. '       ' → logprob: -1.5029096603393555
    3. ' for' → logprob: -2.0029096603393555
    4. ' if' → logprob: -3.0029096603393555
    5. 'for' → logprob: -3.7529096603393555
    6. '    ' → logprob: -4.3779096603393555
    7. ' i' → logprob: -4.7529096603393555
    8. 'if' → logprob: -5.2529096603393555
    9. ' ' → logprob: -6.0029096603393555
    10. 'i' → logprob: -6.6279096603393555

Token 284: ' Convert' (ID: 15629)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3015742301940918
    2. 'temp' → logprob: -2.051574230194092
    3. 'j' → logprob: -3.551574230194092
    4. '   ' → logprob: -3.801574230194092
    5. 'if' → logprob: -3.801574230194092
    6. 'pos' → logprob: -3.926574230194092
    7. 'mask' → logprob: -5.426574230194092
    8. 'cnt' → logprob: -5.426574230194092
    9. 'i' → logprob: -5.551574230194092
    10. 'count' → logprob: -5.676574230194092

Token 285: ' integer' (ID: 16336)
  Prédit: ' bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' bin' → logprob: -1.1986570358276367
    2. 'bin' → logprob: -1.3236570358276367
    3. ' i' → logprob: -2.0736570358276367
    4. ' ii' → logprob: -2.3236570358276367
    5. 'i' → logprob: -3.4486570358276367
    6. ' s' → logprob: -3.4486570358276367
    7. 'ii' → logprob: -4.073657035827637
    8. 's' → logprob: -4.198657035827637
    9. ' j' → logprob: -4.323657035827637
    10. ' jj' → logprob: -4.323657035827637

Token 286: ' ii' (ID: 28354)
  Prédit: 'ii'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ii' → logprob: -0.7008025050163269
    2. '(ii' → logprob: -1.3258025646209717
    3. ' ii' → logprob: -1.4508025646209717
    4. 'to' → logprob: -6.825802326202393
    5. '   ' → logprob: -7.700802326202393
    6. ' to' → logprob: -7.700802326202393
    7. '[ii' → logprob: -8.20080280303955
    8. 's' → logprob: -8.95080280303955
    9. ')' → logprob: -8.95080280303955
    10. '(' → logprob: -8.95080280303955

Token 287: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.1289597600698471
    2. 'to' → logprob: -2.5039596557617188
    3. ' into' → logprob: -3.6289596557617188
    4. ' ' → logprob: -5.878959655761719
    5. '   ' → logprob: -6.003959655761719
    6. ')' → logprob: -6.753959655761719
    7. '       ' → logprob: -6.878959655761719
    8. ',' → logprob: -6.878959655761719
    9. '_to' → logprob: -6.878959655761719
    10. 'into' → logprob: -7.003959655761719

Token 288: ' its' (ID: 1617)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.13479848206043243
    2. ' bin' → logprob: -2.259798526763916
    3. ' format' → logprob: -5.009798526763916
    4. 'format' → logprob: -5.634798526763916
    5. 'a' → logprob: -6.259798526763916
    6. 'b' → logprob: -6.384798526763916
    7. ' a' → logprob: -6.384798526763916
    8. 'binary' → logprob: -6.509798526763916
    9. ' binary' → logprob: -6.509798526763916
    10. 'n' → logprob: -7.134798526763916

Token 289: ' binary' (ID: 15600)
  Prédit: ' binary'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' binary' → logprob: -0.8087500929832458
    2. ' bin' → logprob: -1.5587501525878906
    3. 'bin' → logprob: -1.6837501525878906
    4. ' bit' → logprob: -2.6837501525878906
    5. 'binary' → logprob: -3.6837501525878906
    6. ' format' → logprob: -4.058750152587891
    7. 'bit' → logprob: -4.308750152587891
    8. 'bits' → logprob: -4.558750152587891
    9. ' bits' → logprob: -4.933750152587891
    10. ' n' → logprob: -5.808750152587891

Token 290: ' string' (ID: 1621)
  Prédit: ' representation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' representation' → logprob: -0.1228397935628891
    2. 'representation' → logprob: -2.9978396892547607
    3. '_repr' → logprob: -3.1228396892547607
    4. '_rep' → logprob: -4.62283992767334
    5. '()' → logprob: -5.12283992767334
    6. 'string' → logprob: -5.87283992767334
    7. ' string' → logprob: -6.37283992767334
    8. ' form' → logprob: -8.24783992767334
    9. 'rep' → logprob: -8.49783992767334
    10. '_' → logprob: -8.62283992767334

Token 291: ' representation' (ID: 22311)
  Prédit: '(ii'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ii' → logprob: -0.9423936009407043
    2. '(' → logprob: -1.4423935413360596
    3. '()' → logprob: -1.5673935413360596
    4. ' representation' → logprob: -3.0673935413360596
    5. '_repr' → logprob: -3.5673935413360596
    6. '   ' → logprob: -3.5673935413360596
    7. '_rep' → logprob: -4.317393779754639
    8. ' (' → logprob: -4.442393779754639
    9. ',' → logprob: -5.317393779754639
    10. 'representation' → logprob: -5.692393779754639

Token 292: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.1760575771331787
    2. 'bin' → logprob: -1.3010575771331787
    3. '(bin' → logprob: -2.0510575771331787
    4. ' bin' → logprob: -2.1760575771331787
    5. ' (' → logprob: -3.3010575771331787
    6. '   ' → logprob: -3.6760575771331787
    7. ',' → logprob: -3.6760575771331787
    8. '       ' → logprob: -4.051057815551758
    9. ''' → logprob: -4.051057815551758
    10. 's' → logprob: -4.801057815551758

Token 293: ' padded' (ID: 71498)
  Prédit: ' bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' bin' → logprob: -0.6524401903152466
    2. 'bin' → logprob: -0.7774401903152466
    3. ' format' → logprob: -4.527440071105957
    4. 'format' → logprob: -5.152440071105957
    5. '       ' → logprob: -7.527440071105957
    6. 'b' → logprob: -7.777440071105957
    7. ' f' → logprob: -7.902440071105957
    8. 'z' → logprob: -7.902440071105957
    9. ' '' → logprob: -8.402440071105957
    10. '(bin' → logprob: -8.402440071105957

Token 294: ' with' (ID: 483)
  Prédit: ' with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' with' → logprob: -0.03732225298881531
    2. 'with' → logprob: -4.162322044372559
    3. ' to' → logprob: -4.287322044372559
    4. '='' → logprob: -5.912322044372559
    5. 'to' → logprob: -6.537322044372559
    6. '('' → logprob: -7.037322044372559
    7. '(' → logprob: -7.537322044372559
    8. '   ' → logprob: -8.287322044372559
    9. ' ' → logprob: -8.412322044372559
    10. ',' → logprob: -8.787322044372559

Token 295: ' leading' (ID: 8117)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.05568382889032364
    2. ' '' → logprob: -4.055683612823486
    3. ''n' → logprob: -4.180683612823486
    4. '0' → logprob: -5.055683612823486
    5. ' zeros' → logprob: -5.430683612823486
    6. ''z' → logprob: -5.930683612823486
    7. ' leading' → logprob: -6.055683612823486
    8. 'n' → logprob: -6.180683612823486
    9. ' n' → logprob: -6.430683612823486
    10. ' ' → logprob: -7.430683612823486

Token 296: ' zero' (ID: 12421)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05877228453755379
    2. ''' → logprob: -3.058772325515747
    3. ' zeros' → logprob: -5.058772087097168
    4. ' ' → logprob: -5.933772087097168
    5. 'zeros' → logprob: -7.058772087097168
    6. ' '' → logprob: -8.433772087097168
    7. '`' → logprob: -10.933772087097168
    8. 'zero' → logprob: -11.433772087097168
    9. ' zero' → logprob: -11.558772087097168
    10. '000' → logprob: -12.808772087097168

Token 297: 'es' (ID: 268)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0009273029863834381
    2. 'es' → logprob: -7.375927448272705
    3. ' s' → logprob: -8.375926971435547
    4. ''s' → logprob: -9.625926971435547
    5. ' zeros' → logprob: -13.125926971435547
    6. 'zeros' → logprob: -14.250926971435547
    7. '   ' → logprob: -14.375926971435547
    8. '0' → logprob: -14.625926971435547
    9. ' ' → logprob: -15.375926971435547
    10. 'str' → logprob: -15.750926971435547

Token 298: ' to' (ID: 316)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.9765592813491821
    2. '(' → logprob: -1.2265592813491821
    3. 's' → logprob: -3.1015591621398926
    4. '(bin' → logprob: -3.4765591621398926
    5. '(ii' → logprob: -3.7265591621398926
    6. '       ' → logprob: -3.7265591621398926
    7. '[' → logprob: -3.8515591621398926
    8. ' for' → logprob: -3.8515591621398926
    9. ' with' → logprob: -3.9765591621398926
    10. '('' → logprob: -4.226559162139893

Token 299: ' length' (ID: 5517)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5251655578613281
    2. ' n' → logprob: -0.9001655578613281
    3. ' length' → logprob: -6.775165557861328
    4. 'length' → logprob: -7.400165557861328
    5. '{' → logprob: -10.025165557861328
    6. ''n' → logprob: -10.150165557861328
    7. ' f' → logprob: -10.525165557861328
    8. 'f' → logprob: -10.650165557861328
    9. ' format' → logprob: -10.900165557861328
    10. ' ' → logprob: -10.900165557861328

Token 300: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.523393452167511
    2. ' n' → logprob: -0.898393452167511
    3. ' ' → logprob: -8.648393630981445
    4. '	n' → logprob: -10.648393630981445
    5. '(n' → logprob: -10.898393630981445
    6. '2' → logprob: -11.023393630981445
    7. '_n' → logprob: -11.898393630981445
    8. '32' → logprob: -12.023393630981445
    9. '    ' → logprob: -12.523393630981445
    10. '   ' → logprob: -12.773393630981445

Token 301: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5465403199195862
    2. '   ' → logprob: -2.2965402603149414
    3. 'bin' → logprob: -2.4215402603149414
    4. ' bin' → logprob: -2.5465402603149414
    5. 'b' → logprob: -3.2965402603149414
    6. ' format' → logprob: -3.4215402603149414
    7. 'format' → logprob: -3.4215402603149414
    8. ',' → logprob: -5.046540260314941
    9. 'temp' → logprob: -5.296540260314941
    10. ' s' → logprob: -5.546540260314941

Token 302: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021768221631646156
    2. ' bit' → logprob: -5.521768093109131
    3. 'b' → logprob: -5.646768093109131
    4. 'bin' → logprob: -5.771768093109131
    5. 'bit' → logprob: -6.271768093109131
    6. ' bin' → logprob: -6.396768093109131
    7. '    ' → logprob: -6.771768093109131
    8. '   ' → logprob: -6.896768093109131
    9. 'mask' → logprob: -7.021768093109131
    10. ' mask' → logprob: -7.396768093109131

Token 303: ' #' (ID: 1069)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.8016039729118347
    2. 'bit' → logprob: -1.9266040325164795
    3. '   ' → logprob: -2.1766040325164795
    4. 'bin' → logprob: -2.5516040325164795
    5. 'mask' → logprob: -2.9266040325164795
    6. 'bits' → logprob: -2.9266040325164795
    7. ' bit' → logprob: -4.1766037940979
    8. ' b' → logprob: -4.1766037940979
    9. ' bin' → logprob: -4.5516037940979
    10. 'bs' → logprob: -4.6766037940979

Token 304: ' '' (ID: 461)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bit' → logprob: -1.6384152173995972
    2. 'b' → logprob: -1.7634152173995972
    3. 'bits' → logprob: -2.0134153366088867
    4. '       ' → logprob: -2.1384153366088867
    5. 'mask' → logprob: -2.1384153366088867
    6. ' bit' → logprob: -2.7634153366088867
    7. 'bin' → logprob: -3.0134153366088867
    8. '   ' → logprob: -3.1384153366088867
    9. ' mask' → logprob: -3.5134153366088867
    10. ' bin' → logprob: -3.8884153366088867

Token 305: 'bin' (ID: 11893)
  Prédit: 'bin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.3209928274154663
    2. 'format' → logprob: -1.3209928274154663
    3. 'f' → logprob: -5.320992946624756
    4. 'b' → logprob: -6.945992946624756
    5. 'bit' → logprob: -7.570992946624756
    6. '   ' → logprob: -8.195992469787598
    7. 'binary' → logprob: -8.445992469787598
    8. 's' → logprob: -8.945992469787598
    9. 'ii' → logprob: -9.195992469787598
    10. ' format' → logprob: -9.445992469787598

Token 306: '(ii' (ID: 77930)
  Prédit: '(ii'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ii' → logprob: -0.0028395876288414
    2. '(' → logprob: -5.8778395652771
    3. '('' → logprob: -11.752840042114258
    4. '(i' → logprob: -12.127840042114258
    5. '(
' → logprob: -12.377840042114258
    6. 'ii' → logprob: -12.502840042114258
    7. '[ii' → logprob: -12.627840042114258
    8. ' (' → logprob: -12.627840042114258
    9. '(bin' → logprob: -13.502840042114258
    10. '_str' → logprob: -14.002840042114258

Token 307: ')'' (ID: 45517)
  Prédit: ')['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')[' → logprob: -0.3210555911064148
    2. '(ii' → logprob: -1.3210556507110596
    3. ')' → logprob: -5.4460554122924805
    4. '')[' → logprob: -6.5710554122924805
    5. ')(' → logprob: -7.0710554122924805
    6. '())[' → logprob: -7.3210554122924805
    7. '(i' → logprob: -9.07105541229248
    8. '(' → logprob: -9.19605541229248
    9. '[ii' → logprob: -9.32105541229248
    10. 'ii' → logprob: -10.07105541229248

Token 308: ' converts' (ID: 64809)
  Prédit: '()['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()[' → logprob: -0.020299773663282394
    2. '()' → logprob: -4.270299911499023
    3. '(ii' → logprob: -5.770299911499023
    4. '[' → logprob: -6.520299911499023
    5. '(' → logprob: -6.895299911499023
    6. '().' → logprob: -7.895299911499023
    7. '[ii' → logprob: -10.395299911499023
    8. '('' → logprob: -10.645299911499023
    9. '())[' → logprob: -10.895299911499023
    10. '   ' → logprob: -11.145299911499023

Token 309: ' integer' (ID: 16336)
  Prédit: '(ii'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ii' → logprob: -0.01070750504732132
    2. 'ii' → logprob: -4.760707378387451
    3. ' ii' → logprob: -7.010707378387451
    4. 'bin' → logprob: -7.385707378387451
    5. '(bin' → logprob: -9.26070785522461
    6. ' the' → logprob: -9.38570785522461
    7. '(i' → logprob: -9.63570785522461
    8. ' bin' → logprob: -9.76070785522461
    9. '(' → logprob: -9.76070785522461
    10. ' (' → logprob: -10.13570785522461

Token 310: ' to' (ID: 316)
  Prédit: '(ii'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ii' → logprob: -5.049755782238208e-05
    2. '(' → logprob: -10.25005054473877
    3. '(i' → logprob: -11.75005054473877
    4. ' (' → logprob: -12.75005054473877
    5. '[ii' → logprob: -13.62505054473877
    6. ' to' → logprob: -13.87505054473877
    7. 'ii' → logprob: -14.75005054473877
    8. '   ' → logprob: -15.00005054473877
    9. '(iv' → logprob: -15.25005054473877
    10. '(
' → logprob: -15.75005054473877

Token 311: ' binary' (ID: 15600)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.38638707995414734
    2. ' a' → logprob: -2.0113871097564697
    3. 'bin' → logprob: -3.1363871097564697
    4. ' binary' → logprob: -3.3863871097564697
    5. 'binary' → logprob: -3.6363871097564697
    6. ' '' → logprob: -3.7613871097564697
    7. ' bin' → logprob: -3.7613871097564697
    8. 'b' → logprob: -4.261386871337891
    9. 'a' → logprob: -4.386386871337891
    10. ''b' → logprob: -5.511386871337891

Token 312: ' string' (ID: 1621)
  Prédit: '(ii'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ii' → logprob: -0.16720840334892273
    2. '(' → logprob: -1.9172084331512451
    3. '(i' → logprob: -6.417208194732666
    4. 'string' → logprob: -6.667208194732666
    5. '('' → logprob: -7.042208194732666
    6. '(
' → logprob: -7.542208194732666
    7. '   ' → logprob: -7.917208194732666
    8. 's' → logprob: -7.917208194732666
    9. 'str' → logprob: -8.042208671569824
    10. '()' → logprob: -8.292208671569824

Token 313: ' pref' (ID: 27015)
  Prédit: '(ii'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ii' → logprob: -0.024759871885180473
    2. '(' → logprob: -4.774759769439697
    3. '()[' → logprob: -4.774759769439697
    4. '[ii' → logprob: -5.524759769439697
    5. '[' → logprob: -6.774759769439697
    6. ' (' → logprob: -7.399759769439697
    7. '   ' → logprob: -8.024760246276855
    8. '(bin' → logprob: -8.149760246276855
    9. '(i' → logprob: -8.274760246276855
    10. 'ii' → logprob: -8.524760246276855

Token 314: 'ixed' (ID: 5365)
  Prédit: 'ormat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ormat' → logprob: -0.2081064134836197
    2. 'er' → logprob: -2.583106517791748
    3. 'ix' → logprob: -2.833106517791748
    4. 'orm' → logprob: -3.833106517791748
    5. 'len' → logprob: -5.458106517791748
    6. '()' → logprob: -5.708106517791748
    7. 'ill' → logprob: -5.708106517791748
    8. '(len' → logprob: -6.833106517791748
    9. 'return' → logprob: -6.833106517791748
    10. 'ixed' → logprob: -6.833106517791748

Token 315: ' with' (ID: 483)
  Prédit: 'with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'with' → logprob: -0.6741990447044373
    2. ' with' → logprob: -0.9241990447044373
    3. '('' → logprob: -2.424199104309082
    4. '(' → logprob: -6.174199104309082
    5. '0' → logprob: -6.924199104309082
    6. ''' → logprob: -7.174199104309082
    7. '='' → logprob: -7.424199104309082
    8. ' by' → logprob: -9.549199104309082
    9. '[' → logprob: -9.674199104309082
    10. 'by' → logprob: -9.799199104309082

Token 316: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0019633667543530464
    2. '0' → logprob: -6.251963138580322
    3. '"' → logprob: -11.12696361541748
    4. ''b' → logprob: -11.37696361541748
    5. ' '' → logprob: -11.75196361541748
    6. ''ob' → logprob: -15.12696361541748
    7. 'b' → logprob: -15.25196361541748
    8. '`' → logprob: -16.001962661743164
    9. ' ' → logprob: -16.876962661743164
    10. ''o' → logprob: -17.001962661743164

Token 317: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0024792237672954798
    2. ''' → logprob: -6.002479076385498
    3. 'b' → logprob: -12.627479553222656
    4. ''b' → logprob: -15.627479553222656
    5. ' ' → logprob: -16.752479553222656
    6. '"' → logprob: -17.002479553222656
    7. 'bin' → logprob: -17.377479553222656
    8. '('' → logprob: -17.627479553222656
    9. '')' → logprob: -18.127479553222656
    10. ' '' → logprob: -18.502479553222656

Token 318: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: 0.0
    2. ''b' → logprob: -17.0
    3. ''' → logprob: -19.25
    4. '   ' → logprob: -19.375
    5. '
' → logprob: -20.125
    6. '	b' → logprob: -20.375
    7. ' b' → logprob: -20.875
    8. '[b' → logprob: -21.0
    9. '>b' → logprob: -21.75
    10. ':b' → logprob: -21.875

Token 319: '',' (ID: 787)
  Prédit: '')['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '')[' → logprob: -0.6234896183013916
    2. ''' → logprob: -0.9984896183013916
    3. '')' → logprob: -3.1234896183013916
    4. '[' → logprob: -3.6234896183013916
    5. '(ii' → logprob: -4.8734893798828125
    6. '('' → logprob: -5.1234893798828125
    7. ''[' → logprob: -5.3734893798828125
    8. '(' → logprob: -6.2484893798828125
    9. '(bin' → logprob: -6.4984893798828125
    10. '').' → logprob: -6.9984893798828125

Token 320: ' [' (ID: 723)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.9950060248374939
    2. 'b' → logprob: -1.6200060844421387
    3. ' bin' → logprob: -2.3700060844421387
    4. ' mask' → logprob: -2.3700060844421387
    5. ' bit' → logprob: -2.6200060844421387
    6. ' bits' → logprob: -2.8700060844421387
    7. 'bits' → logprob: -4.120006084442139
    8. '       ' → logprob: -4.245006084442139
    9. ' s' → logprob: -4.495006084442139
    10. 'mask' → logprob: -4.620006084442139

Token 321: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00018494461255613714
    2. '```' → logprob: -9.625185012817383
    3. '3' → logprob: -10.250185012817383
    4. ':' → logprob: -10.375185012817383
    5. '
' → logprob: -11.500185012817383
    6. '   ' → logprob: -11.625185012817383
    7. ' ' → logprob: -11.875185012817383
    8. '(' → logprob: -12.500185012817383
    9. '::-' → logprob: -13.375185012817383
    10. '-' → logprob: -13.437685012817383

Token 322: ':]' (ID: 67377)
  Prédit: ':].'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':].' → logprob: -0.022278642281889915
    2. ':]' → logprob: -3.8972785472869873
    3. ':' → logprob: -6.397278785705566
    4. ':],' → logprob: -10.022278785705566
    5. ']:' → logprob: -11.897278785705566
    6. ':]
' → logprob: -12.147278785705566
    7. ':-' → logprob: -12.647278785705566
    8. '+:' → logprob: -13.522278785705566
    9. '+' → logprob: -13.522278785705566
    10. ':)' → logprob: -14.022278785705566

Token 323: ' removes' (ID: 52683)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ').' → logprob: -0.37471941113471985
    2. '().' → logprob: -1.8747193813323975
    3. '.z' → logprob: -1.9997193813323975
    4. '.' → logprob: -4.749719619750977
    5. ')' → logprob: -5.249719619750977
    6. '].' → logprob: -5.874719619750977
    7. 'z' → logprob: -6.249719619750977
    8. ' .' → logprob: -6.499719619750977
    9. '       ' → logprob: -7.124719619750977
    10. '   ' → logprob: -7.374719619750977

Token 324: ' that' (ID: 484)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.18043848872184753
    2. '0' → logprob: -2.93043851852417
    3. ''z' → logprob: -3.43043851852417
    4. 'z' → logprob: -3.93043851852417
    5. 'the' → logprob: -4.43043851852417
    6. 'leading' → logprob: -4.68043851852417
    7. '('' → logprob: -5.18043851852417
    8. 'bin' → logprob: -5.43043851852417
    9. ''s' → logprob: -5.43043851852417
    10. ' leading' → logprob: -5.68043851852417

Token 325: ' prefix' (ID: 18633)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ').' → logprob: -0.7422789931297302
    2. '.z' → logprob: -1.992279052734375
    3. '.' → logprob: -2.242279052734375
    4. '(ii' → logprob: -2.242279052734375
    5. '   ' → logprob: -3.117279052734375
    6. ',' → logprob: -3.242279052734375
    7. 'ii' → logprob: -4.117279052734375
    8. 'z' → logprob: -4.367279052734375
    9. '().' → logprob: -4.742279052734375
    10. ' .' → logprob: -4.867279052734375

Token 326: '
' (ID: 198)
  Prédit: '(ii'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ii' → logprob: -0.2921948730945587
    2. '       ' → logprob: -2.2921948432922363
    3. '(bin' → logprob: -2.7921948432922363
    4. 'bin' → logprob: -3.1671948432922363
    5. 'z' → logprob: -4.042194843292236
    6. 'ii' → logprob: -4.792194843292236
    7. ',' → logprob: -5.167194843292236
    8. '(' → logprob: -5.542194843292236
    9. '[ii' → logprob: -6.667194843292236
    10. '   ' → logprob: -6.792194843292236

Token 327: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1492566615343094
    2. ',' → logprob: -3.524256706237793
    3. 's' → logprob: -3.524256706237793
    4. 'b' → logprob: -4.274256706237793
    5. 'bin' → logprob: -4.399256706237793
    6. 'bit' → logprob: -4.649256706237793
    7. 'mask' → logprob: -4.899256706237793
    8. ')' → logprob: -5.149256706237793
    9. '[' → logprob: -5.399256706237793
    10. 'bits' → logprob: -5.649256706237793

Token 328: ' #' (ID: 1069)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bit' → logprob: -1.6587700843811035
    2. 'mask' → logprob: -1.9087700843811035
    3. 'bin' → logprob: -2.0337700843811035
    4. 'bits' → logprob: -2.0337700843811035
    5. 'b' → logprob: -2.4087700843811035
    6. '   ' → logprob: -2.7837700843811035
    7. 's' → logprob: -3.0337700843811035
    8. 'bs' → logprob: -3.7837700843811035
    9. 'a' → logprob: -4.0337700843811035
    10. 'ss' → logprob: -4.1587700843811035

Token 329: ' concaten' (ID: 121942)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.4956339597702026
    2. 'bin' → logprob: -1.6206339597702026
    3. 'bit' → logprob: -1.7456339597702026
    4. 'bits' → logprob: -2.370634078979492
    5. 's' → logprob: -2.495634078979492
    6. 'mask' → logprob: -2.620634078979492
    7. '   ' → logprob: -3.495634078979492
    8. 'x' → logprob: -3.620634078979492
    9. 'z' → logprob: -4.245634078979492
    10. 'a' → logprob: -4.370634078979492

Token 330: 'ation' (ID: 387)
  Prédit: 'ate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ate' → logprob: -0.004842223133891821
    2. 'ates' → logprob: -6.879842281341553
    3. 'at' → logprob: -6.879842281341553
    4. '=' → logprob: -7.254842281341553
    5. 'ation' → logprob: -8.004841804504395
    6. '[' → logprob: -8.254841804504395
    7. 'aten' → logprob: -8.504841804504395
    8. 'atenate' → logprob: -8.504841804504395
    9. '```' → logprob: -8.629841804504395
    10. '+' → logprob: -8.879841804504395

Token 331: ' with' (ID: 483)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6352313756942749
    2. '=' → logprob: -1.010231375694275
    3. 's' → logprob: -3.5102314949035645
    4. '   ' → logprob: -4.1352314949035645
    5. ' s' → logprob: -4.2602314949035645
    6. ' of' → logprob: -4.7602314949035645
    7. ' +' → logprob: -4.8852314949035645
    8. ':' → logprob: -5.6352314949035645
    9. '+' → logprob: -5.7602314949035645
    10. ')' → logprob: -5.8852314949035645

Token 332: ' "' (ID: 392)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.1596682369709015
    2. ' '' → logprob: -2.409668207168579
    3. '"' → logprob: -3.034668207168579
    4. '('' → logprob: -5.534668445587158
    5. ' "' → logprob: -5.659668445587158
    6. '   ' → logprob: -7.659668445587158
    7. ''s' → logprob: -8.28466796875
    8. ' ('' → logprob: -8.40966796875
    9. '("' → logprob: -8.65966796875
    10. 'bin' → logprob: -8.65966796875

Token 333: '0' (ID: 15)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.19491057097911835
    2. ''' → logprob: -1.8199105262756348
    3. '0' → logprob: -4.694910526275635
    4. ' "' → logprob: -5.694910526275635
    5. ' '' → logprob: -7.069910526275635
    6. '   ' → logprob: -7.569910526275635
    7. ' ' → logprob: -7.819910526275635
    8. '("' → logprob: -8.194911003112793
    9. '('' → logprob: -8.944911003112793
    10. '000' → logprob: -9.194911003112793

Token 334: '"*' (ID: 166615)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.00608142651617527
    2. '"*' → logprob: -5.131081581115723
    3. '".' → logprob: -8.881081581115723
    4. 'b' → logprob: -11.881081581115723
    5. '")' → logprob: -13.006081581115723
    6. '```' → logprob: -14.256081581115723
    7. '"[' → logprob: -14.631081581115723
    8. ''' → logprob: -14.756081581115723
    9. '"
' → logprob: -14.756081581115723
    10. ''*' → logprob: -14.881081581115723

Token 335: 'n' (ID: 77)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0025492659769952297
    2. ' (' → logprob: -6.002549171447754
    3. '(' → logprob: -10.002549171447754
    4. 'n' → logprob: -11.252549171447754
    5. '   ' → logprob: -11.502549171447754
    6. ' ' → logprob: -13.752549171447754
    7. '((' → logprob: -14.002549171447754
    8. 'max' → logprob: -14.127549171447754
    9. '(max' → logprob: -14.377549171447754
    10. '```' → logprob: -15.002549171447754

Token 336: ' pads' (ID: 52512)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5171930193901062
    2. '+' → logprob: -1.642193078994751
    3. ')' → logprob: -2.517193078994751
    4. '(bin' → logprob: -2.517193078994751
    5. 'bin' → logprob: -3.892193078994751
    6. '[' → logprob: -5.517192840576172
    7. ')[' → logprob: -5.517192840576172
    8. '[:' → logprob: -6.142192840576172
    9. '[len' → logprob: -6.142192840576172
    10. '(' → logprob: -6.267192840576172

Token 337: ' with' (ID: 483)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.16669148206710815
    2. '("' → logprob: -2.416691541671753
    3. '(' → logprob: -3.541691541671753
    4. ' (' → logprob: -4.166691303253174
    5. '('' → logprob: -4.666691303253174
    6. '       ' → logprob: -6.166691303253174
    7. '((' → logprob: -6.416691303253174
    8. 'n' → logprob: -6.666691303253174
    9. ' ("' → logprob: -6.791691303253174
    10. '(ii' → logprob: -6.916691303253174

Token 338: ' enough' (ID: 4951)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.8787966966629028
    2. ' (' → logprob: -1.6287966966629028
    3. '"' → logprob: -2.6287965774536133
    4. '(' → logprob: -2.7537965774536133
    5. 'n' → logprob: -2.8787965774536133
    6. ' n' → logprob: -2.8787965774536133
    7. 'max' → logprob: -3.3787965774536133
    8. '("' → logprob: -3.5037965774536133
    9. '('' → logprob: -4.128796577453613
    10. ' "' → logprob: -4.253796577453613

Token 339: ' zero' (ID: 12421)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.3526703119277954
    2. '"' → logprob: -1.8526703119277954
    3. 'n' → logprob: -1.8526703119277954
    4. ' (' → logprob: -2.227670192718506
    5. '("' → logprob: -2.727670192718506
    6. ' zeros' → logprob: -2.977670192718506
    7. '(' → logprob: -3.102670192718506
    8. '0' → logprob: -3.352670192718506
    9. ' n' → logprob: -3.727670192718506
    10. '('' → logprob: -3.727670192718506

Token 340: 'es' (ID: 268)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.001873666769824922
    2. ''s' → logprob: -6.87687349319458
    3. 'es' → logprob: -7.37687349319458
    4. ' s' → logprob: -9.501873970031738
    5. '"' → logprob: -9.626873970031738
    6. '"s' → logprob: -10.626873970031738
    7. 'zeros' → logprob: -11.376873970031738
    8. '0' → logprob: -11.751873970031738
    9. ''' → logprob: -11.876873970031738
    10. ')' → logprob: -11.876873970031738

Token 341: ' to' (ID: 316)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -1.007919430732727
    2. '+' → logprob: -1.757919430732727
    3. '("' → logprob: -2.1329193115234375
    4. ')' → logprob: -2.6329193115234375
    5. '(' → logprob: -3.1329193115234375
    6. '(bin' → logprob: -3.2579193115234375
    7. '       ' → logprob: -3.7579193115234375
    8. '(ii' → logprob: -3.8829193115234375
    9. '"' → logprob: -4.0079193115234375
    10. '0' → logprob: -4.1329193115234375

Token 342: ' ensure' (ID: 6757)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.44486552476882935
    2. 'the' → logprob: -1.6948654651641846
    3. 'length' → logprob: -2.8198654651641846
    4. ' ensure' → logprob: -2.9448654651641846
    5. 'n' → logprob: -3.9448654651641846
    6. 'ensure' → logprob: -3.9448654651641846
    7. ' length' → logprob: -5.444865703582764
    8. ' reach' → logprob: -5.819865703582764
    9. ' make' → logprob: -5.944865703582764
    10. ' n' → logprob: -5.944865703582764

Token 343: ' correct' (ID: 6145)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8296971917152405
    2. 'length' → logprob: -1.2046971321105957
    3. 'len' → logprob: -1.9546971321105957
    4. 'the' → logprob: -3.2046971321105957
    5. ' the' → logprob: -3.7046971321105957
    6. ' length' → logprob: -4.204697132110596
    7. ' n' → logprob: -4.454697132110596
    8. 'bin' → logprob: -4.704697132110596
    9. '(len' → logprob: -5.829697132110596
    10. '```' → logprob: -6.204697132110596

Token 344: ' length' (ID: 5517)
  Prédit: ' length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.1706254482269287
    2. 'length' → logprob: -1.9206254482269287
    3. ' leading' → logprob: -5.420625686645508
    4. ' width' → logprob: -6.295625686645508
    5. 'width' → logprob: -6.920625686645508
    6. ' padding' → logprob: -7.420625686645508
    7. 'leading' → logprob: -7.420625686645508
    8. ' zeros' → logprob: -7.795625686645508
    9. 'padding' → logprob: -7.795625686645508
    10. '_length' → logprob: -8.920625686645508

Token 345: ',' (ID: 11)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.1175364255905151
    2. 'mask' → logprob: -1.9925364255905151
    3. 'bits' → logprob: -2.3675365447998047
    4. ' mask' → logprob: -2.3675365447998047
    5. 'bit' → logprob: -2.9925365447998047
    6. '   ' → logprob: -3.1175365447998047
    7. ' bit' → logprob: -3.6175365447998047
    8. 'bin' → logprob: -3.7425365447998047
    9. ' s' → logprob: -3.7425365447998047
    10. 's' → logprob: -3.8675365447998047

Token 346: ' [-' (ID: 20191)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bits' → logprob: -1.4208483695983887
    2. 'b' → logprob: -1.6708483695983887
    3. 'mask' → logprob: -1.6708483695983887
    4. 'bit' → logprob: -2.2958483695983887
    5. ' mask' → logprob: -3.1708483695983887
    6. '   ' → logprob: -3.2958483695983887
    7. ' b' → logprob: -3.4208483695983887
    8. 'bin' → logprob: -3.6708483695983887
    9. ' bits' → logprob: -3.7958483695983887
    10. ' bit' → logprob: -3.9208483695983887

Token 347: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -5.133198283147067e-05
    2. ' n' → logprob: -10.000051498413086
    3. '```' → logprob: -12.500051498413086
    4. ' ' → logprob: -14.125051498413086
    5. '   ' → logprob: -14.250051498413086
    6. '
' → logprob: -15.375051498413086
    7. '  ' → logprob: -15.500051498413086
    8. '``' → logprob: -16.250051498413086
    9. '(n' → logprob: -16.750051498413086
    10. '    ' → logprob: -17.125051498413086

Token 348: ':]' (ID: 67377)
  Prédit: ':]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':]' → logprob: -0.0027002585120499134
    2. ':' → logprob: -6.627700328826904
    3. 'n' → logprob: -7.002700328826904
    4. ':].' → logprob: -8.377699851989746
    5. ':],' → logprob: -9.502699851989746
    6. ']' → logprob: -9.752699851989746
    7. ':n' → logprob: -10.377699851989746
    8. ':]
' → logprob: -10.627699851989746
    9. ']:' → logprob: -10.752699851989746
    10. '(n' → logprob: -11.002699851989746

Token 349: ' slices' (ID: 60510)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.015034958720207214
    2. ')' → logprob: -5.640035152435303
    3. ' ]' → logprob: -5.640035152435303
    4. 's' → logprob: -6.015035152435303
    5. '])' → logprob: -6.140035152435303
    6. 'def' → logprob: -7.140035152435303
    7. 'bin' → logprob: -7.765035152435303
    8. ')]' → logprob: -8.390034675598145
    9. '(bin' → logprob: -8.390034675598145
    10. '   ' → logprob: -9.015034675598145

Token 350: ' the' (ID: 290)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.30354979634284973
    2. '(-' → logprob: -2.4285497665405273
    3. '(ii' → logprob: -3.1785497665405273
    4. '(' → logprob: -3.4285497665405273
    5. '(bin' → logprob: -3.9285497665405273
    6. 'bin' → logprob: -4.053549766540527
    7. '[-' → logprob: -4.303549766540527
    8. '       ' → logprob: -4.553549766540527
    9. '(("' → logprob: -5.053549766540527
    10. 'ii' → logprob: -5.178549766540527

Token 351: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.7422398924827576
    2. 'string' → logprob: -1.2422399520874023
    3. '"' → logprob: -2.6172399520874023
    4. ' last' → logprob: -2.6172399520874023
    5. '0' → logprob: -3.2422399520874023
    6. ' string' → logprob: -4.867239952087402
    7. 'n' → logprob: -4.867239952087402
    8. 'end' → logprob: -4.992239952087402
    9. 'result' → logprob: -4.992239952087402
    10. '-' → logprob: -5.617239952087402

Token 352: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0028192552272230387
    2. ' n' → logprob: -5.877819061279297
    3. '```' → logprob: -11.502819061279297
    4. '  ' → logprob: -13.377819061279297
    5. ' ' → logprob: -13.502819061279297
    6. '   ' → logprob: -14.377819061279297
    7. '	n' → logprob: -15.627819061279297
    8. '``' → logprob: -15.877819061279297
    9. '`' → logprob: -16.252819061279297
    10. '_n' → logprob: -16.502819061279297

Token 353: ' chars' (ID: 47991)
  Prédit: 'chars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chars' → logprob: -1.2480601072311401
    2. 'characters' → logprob: -1.2480601072311401
    3. ' characters' → logprob: -1.3730601072311401
    4. 'digits' → logprob: -1.9980601072311401
    5. ']' → logprob: -4.37306022644043
    6. '0' → logprob: -4.74806022644043
    7. ' digits' → logprob: -4.87306022644043
    8. 'bits' → logprob: -6.24806022644043
    9. ' bits' → logprob: -6.74806022644043
    10. ' ' → logprob: -6.87306022644043

Token 354: '
' (ID: 198)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.614076018333435
    2. '       ' → logprob: -1.864076018333435
    3. '(ii' → logprob: -1.864076018333435
    4. '   ' → logprob: -2.1140761375427246
    5. '("' → logprob: -2.2390761375427246
    6. '(bin' → logprob: -2.6140761375427246
    7. '(' → logprob: -3.1140761375427246
    8. ')' → logprob: -3.4890761375427246
    9. '(s' → logprob: -3.8640761375427246
    10. ']' → logprob: -4.364076137542725

Token 355: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.41668227314949036
    2. ' mask' → logprob: -2.541682243347168
    3. '   ' → logprob: -2.791682243347168
    4. 'mask' → logprob: -2.791682243347168
    5. ' bit' → logprob: -3.791682243347168
    6. ' s' → logprob: -3.791682243347168
    7. 'bit' → logprob: -3.916682243347168
    8. 'bits' → logprob: -4.041682243347168
    9. 'b' → logprob: -4.291682243347168
    10. ' bits' → logprob: -4.916682243347168

Token 356: ' i' (ID: 575)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bit' → logprob: -1.3692697286605835
    2. 'mask' → logprob: -1.4942697286605835
    3. 'bits' → logprob: -1.8692697286605835
    4. 'b' → logprob: -2.244269847869873
    5. '   ' → logprob: -2.744269847869873
    6. 's' → logprob: -3.244269847869873
    7. 'x' → logprob: -3.994269847869873
    8. 'bs' → logprob: -4.119269847869873
    9. 'bin' → logprob: -4.244269847869873
    10. 'tmp' → logprob: -4.369269847869873

Token 357: ' =' (ID: 314)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.1935945749282837
    2. '_bits' → logprob: -1.3185945749282837
    3. '_bin' → logprob: -2.693594455718994
    4. ' =' → logprob: -2.693594455718994
    5. '_mask' → logprob: -3.068594455718994
    6. 's' → logprob: -3.193594455718994
    7. '_str' → logprob: -3.443594455718994
    8. 'bits' → logprob: -3.693594455718994
    9. '_' → logprob: -3.943594455718994
    10. '_i' → logprob: -3.943594455718994

Token 358: ' ("' (ID: 7109)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.09562308341264725
    2. ' ("' → logprob: -2.970623016357422
    3. '"' → logprob: -3.470623016357422
    4. 'bin' → logprob: -5.845623016357422
    5. ' "' → logprob: -6.095623016357422
    6. '(bin' → logprob: -6.220623016357422
    7. ' bin' → logprob: -7.095623016357422
    8. '(' → logprob: -8.345623016357422
    9. '(("' → logprob: -8.595623016357422
    10. ' (' → logprob: -8.595623016357422

Token 359: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008128436165861785
    2. '"' → logprob: -7.125813007354736
    3. ''' → logprob: -12.625812530517578
    4. '000' → logprob: -13.125812530517578
    5. 'bin' → logprob: -13.875812530517578
    6. ' ' → logprob: -14.125812530517578
    7. '00' → logprob: -14.375812530517578
    8. '{"' → logprob: -15.375812530517578
    9. ' "' → logprob: -15.625812530517578
    10. '   ' → logprob: -15.875812530517578

Token 360: '"' (ID: 1)
  Prédit: '*n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*n' → logprob: -0.052107661962509155
    2. '"*' → logprob: -3.427107572555542
    3. '*' → logprob: -4.177107810974121
    4. '"' → logprob: -5.927107810974121
    5. '*i' → logprob: -8.927107810974121
    6. ''*' → logprob: -9.927107810974121
    7. 'n' → logprob: -10.302107810974121
    8. ' *' → logprob: -10.677107810974121
    9. '*"' → logprob: -10.677107810974121
    10. '   ' → logprob: -12.052107810974121

Token 361: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5760252475738525
    2. '*n' → logprob: -0.8260252475738525
    3. ' *' → logprob: -10.201025009155273
    4. '*i' → logprob: -10.951025009155273
    5. ')*' → logprob: -10.951025009155273
    6. '*N' → logprob: -12.451025009155273
    7. '"*' → logprob: -12.951025009155273
    8. '*num' → logprob: -13.576025009155273
    9. ')' → logprob: -13.701025009155273
    10. '*m' → logprob: -14.326025009155273

Token 362: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0002383441897109151
    2. ' n' → logprob: -8.375238418579102
    3. '(n' → logprob: -12.000238418579102
    4. '   ' → logprob: -14.000238418579102
    5. ' ' → logprob: -15.625238418579102
    6. ')n' → logprob: -15.750238418579102
    7. '(' → logprob: -15.875238418579102
    8. '{' → logprob: -16.2502384185791
    9. '	n' → logprob: -16.5002384185791
    10. '[n' → logprob: -17.3752384185791

Token 363: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.014294667169451714
    2. ' +' → logprob: -4.514294624328613
    3. '[-' → logprob: -6.514294624328613
    4. ')[' → logprob: -7.139294624328613
    5. ')' → logprob: -7.264294624328613
    6. '+n' → logprob: -8.889294624328613
    7. ')+' → logprob: -9.764294624328613
    8. '+i' → logprob: -10.139294624328613
    9. '[i' → logprob: -11.639294624328613
    10. '+
' → logprob: -11.889294624328613

Token 364: ' bin' (ID: 6958)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.0003420183784328401
    2. 'str' → logprob: -8.00034236907959
    3. ' bin' → logprob: -12.00034236907959
    4. '(bin' → logprob: -15.12534236907959
    5. 'b' → logprob: -16.375341415405273
    6. '   ' → logprob: -17.250341415405273
    7. '/bin' → logprob: -17.250341415405273
    8. 'binary' → logprob: -18.375341415405273
    9. 'format' → logprob: -18.500341415405273
    10. ' ' → logprob: -19.625341415405273

Token 365: '(ii' (ID: 77930)
  Prédit: '(ii'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ii' → logprob: -1.747814349073451e-05
    2. 'ii' → logprob: -11.625017166137695
    3. '(i' → logprob: -11.875017166137695
    4. '(' → logprob: -13.625017166137695
    5. '[ii' → logprob: -15.250017166137695
    6. ' ii' → logprob: -16.750017166137695
    7. '(
' → logprob: -16.750017166137695
    8. ')' → logprob: -17.125017166137695
    9. ' (' → logprob: -17.250017166137695
    10. '   ' → logprob: -19.250017166137695

Token 366: ')[' (ID: 13637)
  Prédit: '(ii'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ii' → logprob: -0.0009025269537232816
    2. '[ii' → logprob: -7.8759026527404785
    3. '(i' → logprob: -8.00090217590332
    4. ')[' → logprob: -9.12590217590332
    5. 'ii' → logprob: -10.37590217590332
    6. '(' → logprob: -10.62590217590332
    7. ')(' → logprob: -11.87590217590332
    8. ' (' → logprob: -12.50090217590332
    9. ')' → logprob: -13.12590217590332
    10. '[i' → logprob: -13.25090217590332

Token 367: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.2471589798224159e-05
    2. '-' → logprob: -11.625012397766113
    3. ' ' → logprob: -13.500012397766113
    4. '   ' → logprob: -14.500012397766113
    5. '
' → logprob: -14.750012397766113
    6. '```' → logprob: -14.875012397766113
    7. '  ' → logprob: -15.687512397766113
    8. ':' → logprob: -15.937512397766113
    9. '

' → logprob: -16.37501335144043
    10. '3' → logprob: -16.56251335144043

Token 368: ':' (ID: 25)
  Prédit: ':].'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':].' → logprob: -0.5832268595695496
    2. ':' → logprob: -0.8332268595695496
    3. ':]' → logprob: -4.958226680755615
    4. ':]
' → logprob: -8.958227157592773
    5. ':])
' → logprob: -9.708227157592773
    6. ':],' → logprob: -10.458227157592773
    7. ':]

' → logprob: -12.333227157592773
    8. ':n' → logprob: -12.583227157592773
    9. '][-' → logprob: -13.083227157592773
    10. ' :' → logprob: -13.333227157592773

Token 369: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.3492547571659088
    2. '][-' → logprob: -1.2242547273635864
    3. '])[' → logprob: -7.474254608154297
    4. ']' → logprob: -9.474254608154297
    5. '][' → logprob: -9.974254608154297
    6. '][:' → logprob: -10.224254608154297
    7. ')[' → logprob: -10.974254608154297
    8. '-n' → logprob: -11.474254608154297
    9. '   ' → logprob: -11.599254608154297
    10. ' ])' → logprob: -11.974254608154297

Token 370: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -3.8889261304575484e-06
    2. ' [-' → logprob: -13.375003814697266
    3. ')[' → logprob: -14.000003814697266
    4. '       ' → logprob: -14.500003814697266
    5. '   ' → logprob: -14.750003814697266
    6. '][-' → logprob: -16.125003814697266
    7. '[' → logprob: -16.250003814697266
    8. '
' → logprob: -16.625003814697266
    9. '```' → logprob: -16.750003814697266
    10. ')' → logprob: -16.875003814697266

Token 371: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -3.531315314830863e-06
    2. ' n' → logprob: -12.625003814697266
    3. '   ' → logprob: -16.500003814697266
    4. '```' → logprob: -17.125003814697266
    5. '	n' → logprob: -17.375003814697266
    6. '1' → logprob: -17.375003814697266
    7. '(n' → logprob: -18.125003814697266
    8. '  ' → logprob: -18.625003814697266
    9. ' ' → logprob: -19.000003814697266
    10. '6' → logprob: -19.000003814697266

Token 372: ':]

' (ID: 170549)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003632026957347989
    2. ':]' → logprob: -5.628632068634033
    3. ' ]' → logprob: -11.628631591796875
    4. '()]' → logprob: -12.128631591796875
    5. ':' → logprob: -12.503631591796875
    6. 'n' → logprob: -12.878631591796875
    7. ' :]' → logprob: -13.003631591796875
    8. 's' → logprob: -13.128631591796875
    9. ']
' → logprob: -13.753631591796875
    10. '1' → logprob: -13.878631591796875

Token 373: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003051504259929061
    2. '        
' → logprob: -6.503051280975342
    3. '   ' → logprob: -7.253051280975342
    4. ' for' → logprob: -8.2530517578125
    5. '
' → logprob: -9.3780517578125
    6. '	' → logprob: -9.3780517578125
    7. ' ' → logprob: -9.6280517578125
    8. '<|end|>' → logprob: -9.8780517578125
    9. '    ' → logprob: -10.2530517578125
    10. '	   ' → logprob: -10.5030517578125

Token 374: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9144527316093445
    2. 'for' → logprob: -0.9144527316093445
    3. ' for' → logprob: -1.6644527912139893
    4. '   ' → logprob: -5.91445255279541
    5. 'j' → logprob: -6.53945255279541
    6. 'if' → logprob: -6.66445255279541
    7. ' if' → logprob: -7.28945255279541
    8. ' ' → logprob: -7.66445255279541
    9. 'pos' → logprob: -7.66445255279541
    10. 's' → logprob: -7.91445255279541

Token 375: ' Initialize' (ID: 19496)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06802725791931152
    2. 'j' → logprob: -3.1930272579193115
    3. 'idx' → logprob: -4.693027496337891
    4. 'pos' → logprob: -5.193027496337891
    5. 'count' → logprob: -6.068027496337891
    6. 'index' → logprob: -6.068027496337891
    7. 'cnt' → logprob: -6.193027496337891
    8. 'k' → logprob: -7.568027496337891
    9. 'left' → logprob: -8.06802749633789
    10. 'p' → logprob: -8.19302749633789

Token 376: ' two' (ID: 1920)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.744315266609192
    2. 'd' → logprob: -1.869315266609192
    3. 'idx' → logprob: -1.869315266609192
    4. 'cnt' → logprob: -2.1193151473999023
    5. 'c' → logprob: -2.4943151473999023
    6. 'j' → logprob: -2.9943151473999023
    7. 'l' → logprob: -3.3693151473999023
    8. 'a' → logprob: -3.4943151473999023
    9. 'pos' → logprob: -3.6193151473999023
    10. 'index' → logprob: -3.9943151473999023

Token 377: ' counter' (ID: 9446)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.8797689080238342
    2. ' counters' → logprob: -1.3797688484191895
    3. 'indices' → logprob: -2.7547688484191895
    4. 'count' → logprob: -2.8797688484191895
    5. 'p' → logprob: -3.0047688484191895
    6. 'for' → logprob: -3.5047688484191895
    7. 'j' → logprob: -4.3797688484191895
    8. ' pointers' → logprob: -4.5047688484191895
    9. 'k' → logprob: -4.6297688484191895
    10. 'counts' → logprob: -4.7547688484191895

Token 378: ' variables' (ID: 13955)
  Prédit: ' variables'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' variables' → logprob: -0.8069145679473877
    2. 's' → logprob: -0.9319145679473877
    3. 'variables' → logprob: -3.6819145679473877
    4. ' arrays' → logprob: -4.181914329528809
    5. ' =' → logprob: -4.306914329528809
    6. 'parts' → logprob: -4.306914329528809
    7. ' for' → logprob: -4.431914329528809
    8. ' s' → logprob: -4.431914329528809
    9. '1' → logprob: -4.681914329528809
    10. '=' → logprob: -4.931914329528809

Token 379: ' cnt' (ID: 27340)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.258948564529419
    2. 'a' → logprob: -2.133948564529419
    3. 'count' → logprob: -2.258948564529419
    4. '       ' → logprob: -2.508948564529419
    5. 'cnt' → logprob: -2.633948564529419
    6. 'x' → logprob: -2.883948564529419
    7. '=' → logprob: -3.008948564529419
    8. ' =' → logprob: -3.008948564529419
    9. ' j' → logprob: -3.258948564529419
    10. 'i' → logprob: -3.633948564529419

Token 380: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04712700843811035
    2. '_' → logprob: -3.5471270084381104
    3. '0' → logprob: -4.672126770019531
    4. ' =' → logprob: -4.922126770019531
    5. 'a' → logprob: -8.047126770019531
    6. '=' → logprob: -9.422126770019531
    7. 's' → logprob: -10.172126770019531
    8. '_a' → logprob: -10.672126770019531
    9. '\xe2\x82' → logprob: -10.922126770019531
    10. 'A' → logprob: -11.297126770019531

Token 381: ' and' (ID: 326)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13645195960998535
    2. '1' → logprob: -2.2614519596099854
    3. '=' → logprob: -4.386451721191406
    4. ',' → logprob: -4.761451721191406
    5. '_' → logprob: -6.261451721191406
    6. ' ,' → logprob: -8.636451721191406
    7. '0' → logprob: -9.261451721191406
    8. ' and' → logprob: -9.386451721191406
    9. 'a' → logprob: -11.136451721191406
    10. 's' → logprob: -11.136451721191406

Token 382: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.053912483155727386
    2. ' cnt' → logprob: -3.178912401199341
    3. '0' → logprob: -4.55391263961792
    4. ' ' → logprob: -9.553912162780762
    5. '   ' → logprob: -9.928912162780762
    6. '       ' → logprob: -9.928912162780762
    7. '1' → logprob: -9.928912162780762
    8. '	cnt' → logprob: -10.678912162780762
    9. '(cnt' → logprob: -11.053912162780762
    10. 'count' → logprob: -11.678912162780762

Token 383: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01634870655834675
    2. '2' → logprob: -4.141348838806152
    3. '=' → logprob: -8.266348838806152
    4. '0' → logprob: -10.391348838806152
    5. ' =' → logprob: -11.016348838806152
    6. ' ' → logprob: -12.391348838806152
    7. '```' → logprob: -13.516348838806152
    8. '_' → logprob: -13.891348838806152
    9. ',' → logprob: -14.266348838806152
    10. 's' → logprob: -15.266348838806152

Token 384: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.34882980585098267
    2. '=' → logprob: -1.223829746246338
    3. ',' → logprob: -8.598830223083496
    4. '   ' → logprob: -9.723830223083496
    5. '1' → logprob: -9.973830223083496
    6. '       ' → logprob: -10.098830223083496
    7. ' ' → logprob: -11.223830223083496
    8. ' for' → logprob: -11.473830223083496
    9. '```' → logprob: -12.098830223083496
    10. 'cnt' → logprob: -12.348830223083496

Token 385: '       ' (ID: 309)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6644411683082581
    2. '=' → logprob: -1.4144411087036133
    3. '   ' → logprob: -1.9144411087036133
    4. ',' → logprob: -3.2894411087036133
    5. ' ' → logprob: -3.5394411087036133
    6. '       ' → logprob: -4.539441108703613
    7. '    ' → logprob: -5.289441108703613
    8. ' for' → logprob: -5.789441108703613
    9. '<|end|>' → logprob: -6.414441108703613
    10. '  ' → logprob: -6.539441108703613

Token 386: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02603551559150219
    2. 'cnt' → logprob: -4.026035308837891
    3. ' cnt' → logprob: -5.401035308837891
    4. '   ' → logprob: -6.776035308837891
    5. '0' → logprob: -7.276035308837891
    6. '    ' → logprob: -7.901035308837891
    7. ' ' → logprob: -8.27603530883789
    8. 'count' → logprob: -8.90103530883789
    9. ' ' → logprob: -9.15103530883789
    10. '	cnt' → logprob: -9.27603530883789

Token 387: ' cnt' (ID: 27340)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.34849560260772705
    2. ' cnt' → logprob: -1.848495602607727
    3. 'cnt' → logprob: -2.3484954833984375
    4. '   ' → logprob: -3.3484954833984375
    5. '    ' → logprob: -6.3484954833984375
    6. ' ' → logprob: -6.8484954833984375
    7. '	cnt' → logprob: -7.0984954833984375
    8. ' ' → logprob: -7.2234954833984375
    9. '
' → logprob: -7.7234954833984375
    10. '     ' → logprob: -8.598495483398438

Token 388: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003015001420862973
    2. '_' → logprob: -8.500301361083984
    3. ' =' → logprob: -9.750301361083984
    4. '=' → logprob: -11.250301361083984
    5. ' ' → logprob: -12.000301361083984
    6. '```' → logprob: -12.375301361083984
    7. '2' → logprob: -12.500301361083984
    8. ' _' → logprob: -12.625301361083984
    9. ')' → logprob: -13.250301361083984
    10. '  ' → logprob: -13.500301361083984

Token 389: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.42933669686317444
    2. '=' → logprob: -1.054336667060852
    3. ',' → logprob: -7.6793365478515625
    4. ' +=' → logprob: -9.554336547851562
    5. ')' → logprob: -10.054336547851562
    6. ' ' → logprob: -10.929336547851562
    7. '1' → logprob: -11.429336547851562
    8. '+=' → logprob: -11.429336547851562
    9. '   ' → logprob: -12.554336547851562
    10. '_' → logprob: -12.554336547851562

Token 390: ' used' (ID: 2061)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.47973138093948364
    2. '0' → logprob: -0.9797313809394836
    3. ' =' → logprob: -5.854731559753418
    4. '=' → logprob: -6.979731559753418
    5. ' cnt' → logprob: -7.604731559753418
    6. 'cnt' → logprob: -7.979731559753418
    7. ' the' → logprob: -8.479731559753418
    8. '1' → logprob: -8.604731559753418
    9. '   ' → logprob: -9.479731559753418
    10. ' n' → logprob: -9.604731559753418

Token 391: ' as' (ID: 472)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12739859521389008
    2. ' =' → logprob: -2.1273984909057617
    3. '   ' → logprob: -9.127398490905762
    4. ',' → logprob: -9.377398490905762
    5. 'for' → logprob: -9.377398490905762
    6. ' for' → logprob: -9.502398490905762
    7. '1' → logprob: -10.252398490905762
    8. ' to' → logprob: -11.002398490905762
    9. ' ' → logprob: -11.127398490905762
    10. '=
' → logprob: -11.377398490905762

Token 392: ' the' (ID: 290)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.24899010360240936
    2. ' ' → logprob: -1.6239900588989258
    3. ' the' → logprob: -4.373990058898926
    4. ' a' → logprob: -5.998990058898926
    5. ' an' → logprob: -6.373990058898926
    6. 'the' → logprob: -6.498990058898926
    7. 'a' → logprob: -7.248990058898926
    8. '   ' → logprob: -7.498990058898926
    9. 'cnt' → logprob: -7.623990058898926
    10. '1' → logprob: -7.873990058898926

Token 393: ' index' (ID: 3472)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.0379129648208618
    2. '0' → logprob: -2.0379128456115723
    3. 'index' → logprob: -2.0379128456115723
    4. 'counter' → logprob: -2.0379128456115723
    5. 'cnt' → logprob: -2.9129128456115723
    6. 'number' → logprob: -2.9129128456115723
    7. ' index' → logprob: -3.1629128456115723
    8. 'current' → logprob: -3.5379128456115723
    9. ' counter' → logprob: -4.287912845611572
    10. ' number' → logprob: -5.037912845611572

Token 394: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7918816804885864
    2. '=' → logprob: -0.9168816804885864
    3. ' =' → logprob: -2.791881561279297
    4. 'for' → logprob: -3.166881561279297
    5. ' in' → logprob: -4.166881561279297
    6. '   ' → logprob: -5.166881561279297
    7. '1' → logprob: -5.416881561279297
    8. ' to' → logprob: -5.541881561279297
    9. '0' → logprob: -5.666881561279297
    10. '    ' → logprob: -6.291881561279297

Token 395: ' inserting' (ID: 97747)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temp' → logprob: -1.3227472305297852
    2. ' temp' → logprob: -1.8227472305297852
    3. '0' → logprob: -2.322747230529785
    4. ' s' → logprob: -2.322747230529785
    5. ' the' → logprob: -2.572747230529785
    6. ' j' → logprob: -2.572747230529785
    7. 'j' → logprob: -3.072747230529785
    8. ' ' → logprob: -3.697747230529785
    9. 's' → logprob: -3.947747230529785
    10. 'the' → logprob: -4.197747230529785

Token 396: ' at' (ID: 540)
  Prédit: ' temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' temp' → logprob: -0.49717748165130615
    2. 'temp' → logprob: -1.3721774816513062
    3. ' into' → logprob: -2.6221776008605957
    4. ' in' → logprob: -3.9971776008605957
    5. ' ' → logprob: -4.872177600860596
    6. ' characters' → logprob: -5.122177600860596
    7. ' tokens' → logprob: -5.247177600860596
    8. 'into' → logprob: -5.747177600860596
    9. ' the' → logprob: -5.872177600860596
    10. '1' → logprob: -5.997177600860596

Token 397: ' the' (ID: 290)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.10464203357696533
    2. ' temp' → logprob: -2.354641914367676
    3. '0' → logprob: -5.854641914367676
    4. ' the' → logprob: -7.479641914367676
    5. 'the' → logprob: -7.729641914367676
    6. ' ' → logprob: -8.854641914367676
    7. '1' → logprob: -9.604641914367676
    8. '	temp' → logprob: -9.729641914367676
    9. '   ' → logprob: -9.979641914367676
    10. 's' → logprob: -10.229641914367676

Token 398: ' beginning' (ID: 10526)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.573811411857605
    2. '0' → logprob: -2.0738115310668945
    3. ' temp' → logprob: -2.1988115310668945
    4. ' next' → logprob: -2.3238115310668945
    5. ' first' → logprob: -2.8238115310668945
    6. 'next' → logprob: -4.3238115310668945
    7. 'first' → logprob: -4.4488115310668945
    8. ' ' → logprob: -5.8238115310668945
    9. '1' → logprob: -6.1988115310668945
    10. ' current' → logprob: -6.3238115310668945

Token 399: ' of' (ID: 328)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6674085855484009
    2. ' =' → logprob: -1.6674085855484009
    3. '1' → logprob: -2.2924084663391113
    4. 'temp' → logprob: -3.5424084663391113
    5. '0' → logprob: -3.9174084663391113
    6. '   ' → logprob: -4.167408466339111
    7. ' for' → logprob: -4.292408466339111
    8. ' temp' → logprob: -4.292408466339111
    9. 'cnt' → logprob: -4.292408466339111
    10. ' and' → logprob: -4.542408466339111

Token 400: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.03009096533060074
    2. ' temp' → logprob: -3.5300910472869873
    3. 'the' → logprob: -8.655091285705566
    4. ' the' → logprob: -9.780091285705566
    5. 's' → logprob: -10.280091285705566
    6. '	temp' → logprob: -11.655091285705566
    7. '   ' → logprob: -11.780091285705566
    8. 'tmp' → logprob: -11.905091285705566
    9. ' s' → logprob: -12.467591285705566
    10. 'a' → logprob: -12.467591285705566

Token 401: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012356207298580557
    2. '2' → logprob: -9.375123977661133
    3. ' ' → logprob: -10.500123977661133
    4. '_' → logprob: -12.250123977661133
    5. '```' → logprob: -13.125123977661133
    6. '   ' → logprob: -13.375123977661133
    7. '
' → logprob: -14.250123977661133
    8. '`' → logprob: -14.625123977661133
    9. ')' → logprob: -15.250123977661133
    10. '[' → logprob: -15.437623977661133

Token 402: '/' (ID: 14)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08063595741987228
    2. '       ' → logprob: -3.5806360244750977
    3. '    
' → logprob: -4.080636024475098
    4. '        
' → logprob: -4.705636024475098
    5. '  
' → logprob: -5.455636024475098
    6. ' 
' → logprob: -5.830636024475098
    7. ' +' → logprob: -5.955636024475098
    8. '   ' → logprob: -6.205636024475098
    9. '=' → logprob: -6.455636024475098
    10. '+' → logprob: -6.455636024475098

Token 403: '2' (ID: 17)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.21799981594085693
    2. ' temp' → logprob: -1.967999815940857
    3. 'cnt' → logprob: -3.7179999351501465
    4. ' cnt' → logprob: -4.9679999351501465
    5. '1' → logprob: -5.3429999351501465
    6. '0' → logprob: -5.7179999351501465
    7. '`' → logprob: -6.0929999351501465
    8. ')' → logprob: -6.2179999351501465
    9. ']' → logprob: -6.3429999351501465
    10. '2' → logprob: -6.5929999351501465

Token 404: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.314388632774353
    2. '
' → logprob: -1.314388632774353
    3. ' =' → logprob: -1.564388632774353
    4. '1' → logprob: -2.5643887519836426
    5. '       ' → logprob: -3.0643887519836426
    6. '0' → logprob: -4.064388751983643
    7. '   ' → logprob: -4.314388751983643
    8. '    
' → logprob: -4.439388751983643
    9. ' +' → logprob: -4.689388751983643
    10. '+' → logprob: -4.814388751983643

Token 405: ' starts' (ID: 13217)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.9121441841125488
    2. ' cnt' → logprob: -1.2871441841125488
    3. ' 
' → logprob: -2.162144184112549
    4. '0' → logprob: -2.287144184112549
    5. ' ' → logprob: -3.912144184112549
    6. '        
' → logprob: -4.412144184112549
    7. '    
' → logprob: -4.412144184112549
    8. '       ' → logprob: -4.537144184112549
    9. '<|end|>' → logprob: -4.537144184112549
    10. '  
' → logprob: -5.537144184112549

Token 406: ' at' (ID: 540)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.21225835382938385
    2. 'at' → logprob: -2.0872583389282227
    3. ' at' → logprob: -3.5872583389282227
    4. 'from' → logprob: -3.7122583389282227
    5. '0' → logprob: -4.712258338928223
    6. ' =' → logprob: -5.462258338928223
    7. '   ' → logprob: -6.712258338928223
    8. ' from' → logprob: -7.962258338928223
    9. '1' → logprob: -9.837258338928223
    10. ' ' → logprob: -9.837258338928223

Token 407: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03917296230792999
    2. 'n' → logprob: -3.414172887802124
    3. ' n' → logprob: -5.789173126220703
    4. ' ' → logprob: -6.164173126220703
    5. '1' → logprob: -9.164173126220703
    6. '(n' → logprob: -9.539173126220703
    7. '-' → logprob: -9.789173126220703
    8. 'i' → logprob: -9.914173126220703
    9. ' -' → logprob: -11.664173126220703
    10. ' (' → logprob: -11.726673126220703

Token 408: '0' (ID: 15)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.182341530919075
    2. '0' → logprob: -1.8073415756225586
    3. '-' → logprob: -6.182341575622559
    4. ' n' → logprob: -7.932341575622559
    5. '(n' → logprob: -9.932341575622559
    6. '1' → logprob: -10.057341575622559
    7. ' ' → logprob: -10.932341575622559
    8. '-n' → logprob: -11.307341575622559
    9. ' -' → logprob: -11.307341575622559
    10. 'len' → logprob: -12.432341575622559

Token 409: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2191265970468521
    2. '       ' → logprob: -1.844126582145691
    3. '        
' → logprob: -4.3441267013549805
    4. '    
' → logprob: -4.9691267013549805
    5. '  
' → logprob: -5.0941267013549805
    6. ' 
' → logprob: -5.2191267013549805
    7. '   ' → logprob: -6.8441267013549805
    8. ')' → logprob: -6.9691267013549805
    9. '<|end|>' → logprob: -7.2191267013549805
    10. '   
' → logprob: -7.3441267013549805

Token 410: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8786334991455078
    2. '       ' → logprob: -0.8786334991455078
    3. '
' → logprob: -2.753633499145508
    4. '  
' → logprob: -3.503633499145508
    5. '    
' → logprob: -3.628633499145508
    6. '        
' → logprob: -4.753633499145508
    7. '<|end|>' → logprob: -4.878633499145508
    8. 'cnt' → logprob: -5.128633499145508
    9. '   
' → logprob: -5.753633499145508
    10. '[' → logprob: -6.003633499145508

Token 411: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -0.7018712759017944
    2. '       ' → logprob: -0.9518712759017944
    3. ' cnt' → logprob: -2.201871395111084
    4. '0' → logprob: -6.076871395111084
    5. '   ' → logprob: -6.326871395111084
    6. '	cnt' → logprob: -6.826871395111084
    7. 'count' → logprob: -7.951871395111084
    8. ' ' → logprob: -8.451870918273926
    9. '    ' → logprob: -8.576870918273926
    10. '(cnt' → logprob: -8.826870918273926

Token 412: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009841008577495813
    2. '_' → logprob: -7.750984191894531
    3. '=' → logprob: -8.000984191894531
    4. ' =' → logprob: -8.875984191894531
    5. '0' → logprob: -10.500984191894531
    6. ')' → logprob: -11.250984191894531
    7. '2' → logprob: -11.625984191894531
    8. ' +=' → logprob: -11.875984191894531
    9. ' ' → logprob: -12.125984191894531
    10. '+' → logprob: -13.000984191894531

Token 413: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05490056052803993
    2. '=' → logprob: -2.929900646209717
    3. ',' → logprob: -11.429900169372559
    4. ' +=' → logprob: -12.304900169372559
    5. ' ' → logprob: -13.929900169372559
    6. ' =
' → logprob: -14.054900169372559
    7. ')' → logprob: -14.679900169372559
    8. '+=' → logprob: -15.304900169372559
    9. '   ' → logprob: -15.804900169372559
    10. '0' → logprob: -16.429901123046875

Token 414: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002519180765375495
    2. ' ' → logprob: -6.252519130706787
    3. 'n' → logprob: -7.502519130706787
    4. ' n' → logprob: -10.877519607543945
    5. '-' → logprob: -11.252519607543945
    6. '1' → logprob: -12.627519607543945
    7. ' -' → logprob: -14.252519607543945
    8. 'i' → logprob: -14.502519607543945
    9. 'len' → logprob: -14.565019607543945
    10. '2' → logprob: -15.377519607543945

Token 415: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003251031506806612
    2. 'n' → logprob: -5.753251075744629
    3. ' ' → logprob: -10.253251075744629
    4. '-' → logprob: -10.503251075744629
    5. ' n' → logprob: -12.378251075744629
    6. '1' → logprob: -13.128251075744629
    7. '(n' → logprob: -13.940751075744629
    8. '-n' → logprob: -14.315751075744629
    9. 'i' → logprob: -14.690751075744629
    10. ' -' → logprob: -14.815751075744629

Token 416: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 417: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13720405101776123
    2. '   ' → logprob: -2.762204170227051
    3. '<|end|>' → logprob: -3.637204170227051
    4. '
' → logprob: -4.387204170227051
    5. '```' → logprob: -5.637204170227051
    6. '  
' → logprob: -5.637204170227051
    7. ' ' → logprob: -6.012204170227051
    8. ',' → logprob: -6.012204170227051
    9. '    
' → logprob: -6.012204170227051
    10. ')' → logprob: -6.137204170227051

Token 418: ' #' (ID: 1069)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.11345263570547104
    2. '       ' → logprob: -2.363452672958374
    3. '   ' → logprob: -5.113452434539795
    4. ' cnt' → logprob: -5.238452434539795
    5. '	cnt' → logprob: -6.613452434539795
    6. '[cnt' → logprob: -8.988452911376953
    7. 'count' → logprob: -9.488452911376953
    8. ' ' → logprob: -9.613452911376953
    9. '
' → logprob: -10.488452911376953
    10. '(cnt' → logprob: -10.613452911376953

Token 419: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.0031412355601787567
    2. ' cnt' → logprob: -6.003141403198242
    3. '   ' → logprob: -7.628141403198242
    4. '       ' → logprob: -9.128141403198242
    5. '	cnt' → logprob: -10.378141403198242
    6. 'count' → logprob: -11.128141403198242
    7. '
' → logprob: -11.503141403198242
    8. '(cnt' → logprob: -12.628141403198242
    9. '[cnt' → logprob: -13.128141403198242
    10. '_cnt' → logprob: -13.378141403198242

Token 420: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.03521392197581e-05
    2. '=' → logprob: -11.125030517578125
    3. ' =' → logprob: -12.250030517578125
    4. '1' → logprob: -12.875030517578125
    5. ' ' → logprob: -13.125030517578125
    6. '```' → logprob: -13.125030517578125
    7. '
' → logprob: -13.500030517578125
    8. '   ' → logprob: -13.875030517578125
    9. '_' → logprob: -15.000030517578125
    10. '0' → logprob: -15.437530517578125

Token 421: ' is' (ID: 382)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759400725364685
    2. ' =' → logprob: -0.8259400725364685
    3. ' ' → logprob: -15.325940132141113
    4. '   ' → logprob: -16.450939178466797
    5. '0' → logprob: -16.700939178466797
    6. ',' → logprob: -17.200939178466797
    7. '=
' → logprob: -17.450939178466797
    8. ')' → logprob: -17.575939178466797
    9. '1' → logprob: -17.700939178466797
    10. '```' → logprob: -17.700939178466797

Token 422: ' used' (ID: 2061)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.6342015862464905
    2. 'n' → logprob: -0.7592015862464905
    3. '   ' → logprob: -6.884201526641846
    4. '0' → logprob: -8.009202003479004
    5. '1' → logprob: -9.384202003479004
    6. '	n' → logprob: -9.884202003479004
    7. ' ' → logprob: -10.384202003479004
    8. 'len' → logprob: -10.759202003479004
    9. '    ' → logprob: -11.134202003479004
    10. 'cnt' → logprob: -12.009202003479004

Token 423: ' as' (ID: 472)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13671526312828064
    2. '=' → logprob: -2.1367151737213135
    3. '=n' → logprob: -5.386715412139893
    4. ' at' → logprob: -5.761715412139893
    5. ' as' → logprob: -7.136715412139893
    6. 'at' → logprob: -8.011714935302734
    7. '   ' → logprob: -8.386714935302734
    8. 'n' → logprob: -8.511714935302734
    9. ' +=' → logprob: -9.136714935302734
    10. '0' → logprob: -9.136714935302734

Token 424: ' the' (ID: 290)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.11743979156017303
    2. ' n' → logprob: -2.2424397468566895
    3. '0' → logprob: -5.6174397468566895
    4. 'len' → logprob: -7.8674397468566895
    5. '1' → logprob: -7.9924397468566895
    6. '   ' → logprob: -9.242440223693848
    7. ' ' → logprob: -9.867440223693848
    8. 'cnt' → logprob: -10.367440223693848
    9. ' len' → logprob: -10.492440223693848
    10. '(n' → logprob: -12.179940223693848

Token 425: ' index' (ID: 3472)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.012899604625999928
    2. ' n' → logprob: -4.387899398803711
    3. '0' → logprob: -8.762899398803711
    4. 'len' → logprob: -9.012899398803711
    5. '1' → logprob: -9.512899398803711
    6. ' ' → logprob: -11.262899398803711
    7. '2' → logprob: -12.762899398803711
    8. '(n' → logprob: -12.887899398803711
    9. '   ' → logprob: -12.887899398803711
    10. '
' → logprob: -13.387899398803711

Token 426: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4932926595211029
    2. '=' → logprob: -1.4932926893234253
    3. ' =' → logprob: -1.9932926893234253
    4. 'for' → logprob: -3.6182925701141357
    5. '   ' → logprob: -7.493292808532715
    6. ' ' → logprob: -8.618292808532715
    7. ' +' → logprob: -9.243292808532715
    8. '       ' → logprob: -9.243292808532715
    9. ' to' → logprob: -9.243292808532715
    10. '<|end|>' → logprob: -9.243292808532715

Token 427: ' inserting' (ID: 97747)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.041068755090236664
    2. ' n' → logprob: -3.2910687923431396
    3. '1' → logprob: -6.1660685539245605
    4. '0' → logprob: -7.7910685539245605
    5. 'cnt' → logprob: -7.9160685539245605
    6. ' ' → logprob: -10.541069030761719
    7. 'len' → logprob: -10.666069030761719
    8. ' cnt' → logprob: -10.916069030761719
    9. '   ' → logprob: -11.166069030761719
    10. '(n' → logprob: -11.291069030761719

Token 428: ' at' (ID: 540)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6604079008102417
    2. ' n' → logprob: -0.7854079008102417
    3. '1' → logprob: -4.535408020019531
    4. '   ' → logprob: -4.910408020019531
    5. ' ' → logprob: -5.910408020019531
    6. '0' → logprob: -5.910408020019531
    7. '	n' → logprob: -6.910408020019531
    8. 'cnt' → logprob: -7.035408020019531
    9. ' at' → logprob: -7.285408020019531
    10. ' cnt' → logprob: -8.535408020019531

Token 429: ' the' (ID: 290)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10565610229969025
    2. ' n' → logprob: -2.480656147003174
    3. '1' → logprob: -4.605656147003174
    4. '0' → logprob: -5.605656147003174
    5. ' the' → logprob: -6.730656147003174
    6. 'the' → logprob: -7.480656147003174
    7. '   ' → logprob: -7.730656147003174
    8. 'len' → logprob: -8.230655670166016
    9. '(n' → logprob: -9.105655670166016
    10. ' ' → logprob: -9.480655670166016

Token 430: ' end' (ID: 1268)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0016411424148827791
    2. ' n' → logprob: -7.251641273498535
    3. '1' → logprob: -7.376641273498535
    4. '0' → logprob: -8.501641273498535
    5. '-' → logprob: -10.376641273498535
    6. '   ' → logprob: -10.626641273498535
    7. '(n' → logprob: -10.751641273498535
    8. 'end' → logprob: -12.001641273498535
    9. '2' → logprob: -12.501641273498535
    10. '```' → logprob: -13.251641273498535

Token 431: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.8764048218727112
    2. 'n' → logprob: -1.2514047622680664
    3. '=' → logprob: -2.2514047622680664
    4. '   ' → logprob: -2.3764047622680664
    5. 'of' → logprob: -2.8764047622680664
    6. '       ' → logprob: -3.8764047622680664
    7. ' =' → logprob: -5.251404762268066
    8. ' n' → logprob: -5.251404762268066
    9. 'cnt' → logprob: -5.501404762268066
    10. '1' → logprob: -5.876404762268066

Token 432: ' temp' (ID: 5484)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.16069838404655457
    2. ' n' → logprob: -1.910698413848877
    3. 'temp' → logprob: -8.160697937011719
    4. '   ' → logprob: -9.410697937011719
    5. ' temp' → logprob: -9.910697937011719
    6. '(n' → logprob: -10.785697937011719
    7. ' ' → logprob: -11.785697937011719
    8. '1' → logprob: -12.035697937011719
    9. ' (' → logprob: -12.160697937011719
    10. 'tmp' → logprob: -12.535697937011719

Token 433: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0009263493702746928
    2. '1' → logprob: -7.250926494598389
    3. ' ' → logprob: -8.62592601776123
    4. 'n' → logprob: -11.37592601776123
    5. ' n' → logprob: -11.50092601776123
    6. '   ' → logprob: -11.75092601776123
    7. '  ' → logprob: -13.25092601776123
    8. '```' → logprob: -13.50092601776123
    9. '=' → logprob: -14.00092601776123
    10. '
' → logprob: -14.50092601776123

Token 434: '/' (ID: 14)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6711931824684143
    2. ' +' → logprob: -0.7961931824684143
    3. '-' → logprob: -4.0461931228637695
    4. ' -' → logprob: -4.6711931228637695
    5. '2' → logprob: -5.1711931228637695
    6. '1' → logprob: -6.2961931228637695
    7. '<|end|>' → logprob: -6.6711931228637695
    8. '   ' → logprob: -7.0461931228637695
    9. ' ' → logprob: -8.29619312286377
    10. '
' → logprob: -8.54619312286377

Token 435: '2' (ID: 17)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.001387731870636344
    2. ' n' → logprob: -6.751387596130371
    3. '1' → logprob: -8.501387596130371
    4. '2' → logprob: -12.126387596130371
    5. 'len' → logprob: -12.126387596130371
    6. '(n' → logprob: -13.876387596130371
    7. '-' → logprob: -14.001387596130371
    8. '   ' → logprob: -14.501387596130371
    9. ' ' → logprob: -15.501387596130371
    10. ' -' → logprob: -15.876387596130371

Token 436: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12816683948040009
    2. '=' → logprob: -2.253166913986206
    3. '=n' → logprob: -4.628166675567627
    4. '   ' → logprob: -6.003166675567627
    5. 'n' → logprob: -6.253166675567627
    6. '
' → logprob: -7.253166675567627
    7. '       ' → logprob: -9.378167152404785
    8. '-' → logprob: -9.503167152404785
    9. ' n' → logprob: -9.878167152404785
    10. ' ' → logprob: -10.503167152404785

Token 437: ' starts' (ID: 13217)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.06624720245599747
    2. ' n' → logprob: -2.8162472248077393
    3. '   ' → logprob: -5.56624698638916
    4. '2' → logprob: -8.44124698638916
    5. '	n' → logprob: -9.81624698638916
    6. '       ' → logprob: -10.44124698638916
    7. '
' → logprob: -10.56624698638916
    8. ' ' → logprob: -10.56624698638916
    9. '    ' → logprob: -11.06624698638916
    10. '1' → logprob: -11.19124698638916

Token 438: ' at' (ID: 540)
  Prédit: ' at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.09587722271680832
    2. 'n' → logprob: -3.095877170562744
    3. 'at' → logprob: -4.095877170562744
    4. ' n' → logprob: -4.220877170562744
    5. '   ' → logprob: -4.720877170562744
    6. '=' → logprob: -5.845877170562744
    7. '=n' → logprob: -6.345877170562744
    8. ' =' → logprob: -7.595877170562744
    9. '	n' → logprob: -7.970877170562744
    10. ' ' → logprob: -8.220877647399902

Token 439: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00027730545843951404
    2. ' n' → logprob: -8.500277519226074
    3. '   ' → logprob: -9.750277519226074
    4. '(n' → logprob: -11.500277519226074
    5. '-' → logprob: -13.500277519226074
    6. '	n' → logprob: -14.250277519226074
    7. '[n' → logprob: -14.375277519226074
    8. 'len' → logprob: -14.875277519226074
    9. '0' → logprob: -15.125277519226074
    10. '1' → logprob: -15.250277519226074

Token 440: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4873442053794861
    2. ' -' → logprob: -1.8623442649841309
    3. '=' → logprob: -2.362344264984131
    4. ' =' → logprob: -3.737344264984131
    5. '1' → logprob: -3.737344264984131
    6. '   ' → logprob: -3.862344264984131
    7. '
' → logprob: -3.987344264984131
    8. '2' → logprob: -4.612344264984131
    9. '0' → logprob: -4.612344264984131
    10. 'n' → logprob: -4.862344264984131

Token 441: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.173704271830502e-06
    2. ' ' → logprob: -12.75000286102295
    3. '```' → logprob: -15.75000286102295
    4. '   ' → logprob: -16.125003814697266
    5. '``' → logprob: -19.000003814697266
    6. 'n' → logprob: -19.375003814697266
    7. '`' → logprob: -20.000003814697266
    8. '
' → logprob: -20.250003814697266
    9. '       ' → logprob: -20.375003814697266
    10. '0' → logprob: -20.625003814697266

Token 442: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14447268843650818
    2. '<|end|>' → logprob: -2.644472599029541
    3. '   ' → logprob: -4.019472599029541
    4. '=' → logprob: -4.644472599029541
    5. '       ' → logprob: -4.894472599029541
    6. '    
' → logprob: -5.644472599029541
    7. '```' → logprob: -5.644472599029541
    8. 'cnt' → logprob: -5.894472599029541
    9. '  
' → logprob: -5.894472599029541
    10. ' 
' → logprob: -6.144472599029541

Token 443: 'last' (ID: 6684)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.009166713804006577
    2. ' n' → logprob: -4.884166717529297
    3. ')' → logprob: -6.634166717529297
    4. ')n' → logprob: -9.259166717529297
    5. '   ' → logprob: -10.009166717529297
    6. ')
' → logprob: -10.759166717529297
    7. '```' → logprob: -10.884166717529297
    8. '(n' → logprob: -10.884166717529297
    9. '	n' → logprob: -11.384166717529297
    10. '1' → logprob: -12.384166717529297

Token 444: ' index' (ID: 3472)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18522389233112335
    2. '<|end|>' → logprob: -1.935223937034607
    3. ' )' → logprob: -4.3102240562438965
    4. '<|end|>' → logprob: -5.8102240562438965
    5. 'index' → logprob: -5.9352240562438965
    6. ' ' → logprob: -7.0602240562438965
    7. 'position' → logprob: -7.0602240562438965
    8. 'token' → logprob: -7.1852240562438965
    9. '```' → logprob: -7.9352240562438965
    10. ' index' → logprob: -7.9352240562438965

Token 445: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08257677406072617
    2. '<|end|>' → logprob: -2.7075767517089844
    3. '+' → logprob: -5.082576751708984
    4. ' +' → logprob: -5.957576751708984
    5. '<|end|>' → logprob: -6.457576751708984
    6. ')
' → logprob: -6.457576751708984
    7. '   ' → logprob: -8.457576751708984
    8. '```' → logprob: -9.582576751708984
    9. '
' → logprob: -9.707576751708984
    10. ' )' → logprob: -9.707576751708984

Token 446: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1293092519044876
    2. 'cnt' → logprob: -2.5043091773986816
    3. '   ' → logprob: -3.3793091773986816
    4. '        
' → logprob: -6.879309177398682
    5. '	cnt' → logprob: -7.254309177398682
    6. '  
' → logprob: -7.629309177398682
    7. '```' → logprob: -7.629309177398682
    8. '    
' → logprob: -7.754309177398682
    9. '
' → logprob: -7.754309177398682
    10. ' ' → logprob: -7.754309177398682

Token 447: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -0.22613103687763214
    2. '   ' → logprob: -1.7261310815811157
    3. '       ' → logprob: -3.726130962371826
    4. ' cnt' → logprob: -8.726131439208984
    5. '```' → logprob: -9.851131439208984
    6. '	cnt' → logprob: -9.976131439208984
    7. '    ' → logprob: -11.476131439208984
    8. '      ' → logprob: -11.851131439208984
    9. '     ' → logprob: -11.851131439208984
    10. '  ' → logprob: -11.851131439208984

Token 448: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.650518920039758e-06
    2. '=' → logprob: -13.375003814697266
    3. '_' → logprob: -14.250003814697266
    4. ' ' → logprob: -14.875003814697266
    5. '```' → logprob: -15.000003814697266
    6. '1' → logprob: -15.750003814697266
    7. '
' → logprob: -15.875003814697266
    8. ' =' → logprob: -16.000003814697266
    9. '₂' → logprob: -16.125003814697266
    10. '   ' → logprob: -16.625003814697266

Token 449: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022443771362305
    2. '=' → logprob: -1.910224437713623
    3. ' ' → logprob: -16.03522491455078
    4. ')' → logprob: -16.41022491455078
    5. ',' → logprob: -16.78522491455078
    6. ' =
' → logprob: -17.66022491455078
    7. '=n' → logprob: -18.16022491455078
    8. '=int' → logprob: -18.16022491455078
    9. '   ' → logprob: -18.28522491455078
    10. '<|end|>' → logprob: -18.41022491455078

Token 450: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00318353995680809
    2. ' n' → logprob: -5.753183364868164
    3. '   ' → logprob: -12.128183364868164
    4. '	n' → logprob: -16.003183364868164
    5. '(n' → logprob: -16.378183364868164
    6. ' ' → logprob: -16.628183364868164
    7. '  ' → logprob: -17.128183364868164
    8. '    ' → logprob: -18.128183364868164
    9. '[n' → logprob: -18.753183364868164
    10. '_n' → logprob: -19.003183364868164

Token 451: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.6356514692306519
    2. '-' → logprob: -0.7606514692306519
    3. '<|end|>' → logprob: -5.885651588439941
    4. '   ' → logprob: -8.885651588439941
    5. '<|end|>' → logprob: -10.260651588439941
    6. ')' → logprob: -10.885651588439941
    7. '1' → logprob: -10.885651588439941
    8. '
' → logprob: -11.010651588439941
    9. ' ' → logprob: -11.635651588439941
    10. '[' → logprob: -11.760651588439941

Token 452: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '```' → logprob: -19.0
    4. '0' → logprob: -19.625
    5. '   ' → logprob: -20.125
    6. '2' → logprob: -21.125
    7. '۱' → logprob: -21.75
    8. '১' → logprob: -21.8125
    9. '１' → logprob: -22.0625
    10. '
' → logprob: -22.125

Token 453: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '```' → logprob: -18.25
    4. '0' → logprob: -19.25
    5. '   ' → logprob: -20.375
    6. '<|end|>' → logprob: -20.875
    7. '2' → logprob: -21.75
    8. '`' → logprob: -22.0
    9. '-' → logprob: -22.1875
    10. '۱' → logprob: -22.375

Token 454: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1566387563943863
    2. '<|end|>' → logprob: -2.1566388607025146
    3. '   ' → logprob: -4.2816386222839355
    4. ' for' → logprob: -4.6566386222839355
    5. 'for' → logprob: -5.9066386222839355
    6. '
' → logprob: -7.0316386222839355
    7. '<|end|>' → logprob: -7.2816386222839355
    8. '	' → logprob: -8.156639099121094
    9. '        
' → logprob: -8.156639099121094
    10. '	for' → logprob: -8.156639099121094

Token 455: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3429321050643921
    2. '   ' → logprob: -2.2179322242736816
    3. '<|end|>' → logprob: -2.3429322242736816
    4. ' for' → logprob: -3.0929322242736816
    5. 'for' → logprob: -4.592932224273682
    6. '        
' → logprob: -5.217932224273682
    7. ' ' → logprob: -5.592932224273682
    8. '    
' → logprob: -5.842932224273682
    9. ' 
' → logprob: -6.092932224273682
    10. ':' → logprob: -6.342932224273682

Token 456: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.47604426741600037
    2. '       ' → logprob: -1.3510442972183228
    3. ' for' → logprob: -2.351044178009033
    4. 'i' → logprob: -4.226044178009033
    5. '   ' → logprob: -5.601044178009033
    6. ')' → logprob: -6.351044178009033
    7. '	for' → logprob: -6.726044178009033
    8. 'j' → logprob: -7.101044178009033
    9. ':' → logprob: -8.351044654846191
    10. 'c' → logprob: -8.476044654846191

Token 457: ' Enumer' (ID: 56157)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.8789383830153383e-05
    2. ' for' → logprob: -11.375019073486328
    3. '       ' → logprob: -12.250019073486328
    4. '   ' → logprob: -13.500019073486328
    5. 'j' → logprob: -14.500019073486328
    6. 'i' → logprob: -14.875019073486328
    7. '	for' → logprob: -15.750019073486328
    8. 'continue' → logprob: -17.125019073486328
    9. '```' → logprob: -17.375019073486328
    10. '#' → logprob: -17.375019073486328

Token 458: 'ate' (ID: 379)
  Prédit: 'ate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ate' → logprob: -0.00023691373644396663
    2. 'rate' → logprob: -8.625236511230469
    3. 'range' → logprob: -11.000236511230469
    4. '   ' → logprob: -11.250236511230469
    5. '       ' → logprob: -11.625236511230469
    6. '    ' → logprob: -12.250236511230469
    7. '        ' → logprob: -12.500236511230469
    8. 'r' → logprob: -12.875236511230469
    9. '      ' → logprob: -13.625236511230469
    10. 't' → logprob: -13.625236511230469

Token 459: ' over' (ID: 1072)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.45004037022590637
    2. '(' → logprob: -2.075040340423584
    3. '(i' → logprob: -2.450040340423584
    4. ' for' → logprob: -2.575040340423584
    5. '(s' → logprob: -3.450040340423584
    6. ' over' → logprob: -3.950040340423584
    7. ' in' → logprob: -5.450040340423584
    8. '   ' → logprob: -6.325040340423584
    9. '(ii' → logprob: -6.325040340423584
    10. '(j' → logprob: -6.575040340423584

Token 460: ' each' (ID: 2454)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.026986069977283478
    2. ' range' → logprob: -3.9019861221313477
    3. 's' → logprob: -5.401986122131348
    4. 'enumer' → logprob: -6.526986122131348
    5. ' enumerate' → logprob: -8.526986122131348
    6. ' s' → logprob: -9.026986122131348
    7. 'i' → logprob: -9.651986122131348
    8. '(range' → logprob: -9.901986122131348
    9. ' i' → logprob: -12.276986122131348
    10. ' ' → logprob: -12.526986122131348

Token 461: ' character' (ID: 5855)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.7028146982192993
    2. ' i' → logprob: -2.7028145790100098
    3. 'j' → logprob: -2.8278145790100098
    4. 'ch' → logprob: -2.8278145790100098
    5. ' c' → logprob: -2.9528145790100098
    6. ' idx' → logprob: -2.9528145790100098
    7. ' ch' → logprob: -3.0778145790100098
    8. ' index' → logprob: -3.4528145790100098
    9. ' (' → logprob: -3.7028145790100098
    10. 'index' → logprob: -3.9528145790100098

Token 462: ' '' (ID: 461)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3446812331676483
    2. '(s' → logprob: -1.5946812629699707
    3. ' of' → logprob: -2.9696812629699707
    4. '(' → logprob: -4.719681262969971
    5. '(range' → logprob: -4.969681262969971
    6. ' (' → logprob: -5.094681262969971
    7. 'in' → logprob: -5.219681262969971
    8. '(i' → logprob: -5.969681262969971
    9. ' s' → logprob: -6.094681262969971
    10. 's' → logprob: -7.094681262969971

Token 463: 'j' (ID: 73)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5005388855934143
    2. 'range' → logprob: -1.6255388259887695
    3. ' s' → logprob: -2.2505388259887695
    4. 'enumer' → logprob: -3.0005388259887695
    5. ' range' → logprob: -4.2505388259887695
    6. '(s' → logprob: -4.5005388259887695
    7. ' enumerate' → logprob: -5.1255388259887695
    8. 'i' → logprob: -5.5005388259887695
    9. '(range' → logprob: -6.2505388259887695
    10. ' i' → logprob: -7.3755388259887695

Token 464: ''' (ID: 6)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.23007918894290924
    2. 's' → logprob: -2.230079174041748
    3. ' ,' → logprob: -2.605079174041748
    4. ' in' → logprob: -3.980079174041748
    5. 'in' → logprob: -5.980079174041748
    6. ')' → logprob: -6.855079174041748
    7. ' s' → logprob: -7.855079174041748
    8. ',s' → logprob: -7.855079174041748
    9. '),' → logprob: -8.355079650878906
    10. ' ' → logprob: -8.605079650878906

Token 465: ' and' (ID: 326)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.330043762922287
    2. 'in' → logprob: -1.8300437927246094
    3. ',' → logprob: -2.2050437927246094
    4. 's' → logprob: -4.955043792724609
    5. ' ,' → logprob: -6.330043792724609
    6. ' ' → logprob: -8.20504379272461
    7. '(s' → logprob: -8.58004379272461
    8. '(' → logprob: -8.70504379272461
    9. ' s' → logprob: -8.95504379272461
    10. '   ' → logprob: -8.95504379272461

Token 466: ' its' (ID: 1617)
  Prédit: ' its'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' its' → logprob: -0.4954843819141388
    2. 'i' → logprob: -1.9954843521118164
    3. ' i' → logprob: -2.3704843521118164
    4. ' s' → logprob: -2.6204843521118164
    5. ' index' → logprob: -3.7454843521118164
    6. 's' → logprob: -3.8704843521118164
    7. ' range' → logprob: -4.870484352111816
    8. ' the' → logprob: -5.245484352111816
    9. 'index' → logprob: -5.370484352111816
    10. 'c' → logprob: -5.495484352111816

Token 467: ' index' (ID: 3472)
  Prédit: ' index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' index' → logprob: -0.23899531364440918
    2. 'index' → logprob: -1.6139953136444092
    3. ' value' → logprob: -5.738995552062988
    4. ' position' → logprob: -6.238995552062988
    5. ' ' → logprob: -6.488995552062988
    6. ',' → logprob: -6.488995552062988
    7. 'value' → logprob: -6.613995552062988
    8. ' ,' → logprob: -6.988995552062988
    9. ')' → logprob: -7.488995552062988
    10. 'position' → logprob: -8.113995552062988

Token 468: ' '' (ID: 461)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.537735641002655
    2. ',' → logprob: -1.1627357006072998
    3. 'in' → logprob: -2.5377357006073
    4. ' ,' → logprob: -4.412735462188721
    5. 's' → logprob: -5.037735462188721
    6. ' i' → logprob: -6.162735462188721
    7. 'i' → logprob: -6.662735462188721
    8. ' s' → logprob: -7.162735462188721
    9. '(s' → logprob: -7.787735462188721
    10. ' ' → logprob: -7.912735462188721

Token 469: 'k' (ID: 74)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3584074378013611
    2. 'k' → logprob: -1.7334074974060059
    3. 'idx' → logprob: -2.733407497406006
    4. 'j' → logprob: -4.358407497406006
    5. 'x' → logprob: -4.483407497406006
    6. ' i' → logprob: -4.733407497406006
    7. ' idx' → logprob: -5.108407497406006
    8. 's' → logprob: -5.233407497406006
    9. 'index' → logprob: -5.608407497406006
    10. 'pos' → logprob: -6.233407497406006

Token 470: ''' (ID: 6)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5946485996246338
    2. ',' → logprob: -0.9696485996246338
    3. 'in' → logprob: -2.719648599624634
    4. ')' → logprob: -6.719648361206055
    5. ' ,' → logprob: -7.719648361206055
    6. 's' → logprob: -7.719648361206055
    7. ''' → logprob: -7.969648361206055
    8. '   ' → logprob: -8.344648361206055
    9. ' ' → logprob: -9.219648361206055
    10. '```' → logprob: -9.719648361206055

Token 471: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05641544237732887
    2. ',' → logprob: -3.931415557861328
    3. 'in' → logprob: -4.181415557861328
    4. '   ' → logprob: -4.556415557861328
    5. '(' → logprob: -5.806415557861328
    6. '       ' → logprob: -5.806415557861328
    7. ' for' → logprob: -7.431415557861328
    8. '(range' → logprob: -7.431415557861328
    9. '(s' → logprob: -7.556415557861328
    10. ' (' → logprob: -7.806415557861328

Token 472: ' the' (ID: 290)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.13808122277259827
    2. ' s' → logprob: -2.6380813121795654
    3. 'range' → logprob: -3.5130813121795654
    4. 'enumer' → logprob: -4.513081073760986
    5. ' enumerate' → logprob: -4.888081073760986
    6. 'i' → logprob: -5.138081073760986
    7. ' range' → logprob: -6.013081073760986
    8. ' i' → logprob: -7.388081073760986
    9. '   ' → logprob: -9.763081550598145
    10. '(s' → logprob: -10.388081550598145

Token 473: ' string' (ID: 1621)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.44613033533096313
    2. 'i' → logprob: -1.5711302757263184
    3. 'range' → logprob: -2.3211302757263184
    4. ' s' → logprob: -3.5711302757263184
    5. ' range' → logprob: -4.321130275726318
    6. ' i' → logprob: -4.821130275726318
    7. 'enumer' → logprob: -5.821130275726318
    8. ' enumerate' → logprob: -7.321130275726318
    9. '   ' → logprob: -8.571130752563477
    10. 'string' → logprob: -9.071130752563477

Token 474: ' '' (ID: 461)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.13045862317085266
    2. ' s' → logprob: -2.1304585933685303
    3. '(s' → logprob: -5.755458831787109
    4. '(' → logprob: -9.38045883178711
    5. 'enumer' → logprob: -9.63045883178711
    6. ' in' → logprob: -10.63045883178711
    7. ',' → logprob: -10.75545883178711
    8. ' (' → logprob: -10.75545883178711
    9. ' for' → logprob: -11.00545883178711
    10. 'range' → logprob: -11.13045883178711

Token 475: 'i' (ID: 72)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.01692471280694008
    2. ' s' → logprob: -4.141924858093262
    3. 'i' → logprob: -7.266924858093262
    4. 'range' → logprob: -9.766924858093262
    5. ' i' → logprob: -9.891924858093262
    6. '   ' → logprob: -10.766924858093262
    7. ')' → logprob: -11.641924858093262
    8. ' range' → logprob: -11.641924858093262
    9. '(s' → logprob: -11.641924858093262
    10. '```' → logprob: -11.891924858093262

Token 476: ''
' (ID: 2207)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.17044371366500854
    2. ':
' → logprob: -2.7954437732696533
    3. '):' → logprob: -2.7954437732696533
    4. '):
' → logprob: -3.5454437732696533
    5. '   ' → logprob: -6.170443534851074
    6. ',' → logprob: -6.295443534851074
    7. '       ' → logprob: -7.170443534851074
    8. '():
' → logprob: -8.295443534851074
    9. ')' → logprob: -9.045443534851074
    10. '':' → logprob: -9.420443534851074

Token 477: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5458098649978638
    2. ':' → logprob: -1.7958098649978638
    3. '   ' → logprob: -2.170809745788574
    4. '       ' → logprob: -2.920809745788574
    5. ',' → logprob: -3.170809745788574
    6. 'for' → logprob: -3.545809745788574
    7. '(' → logprob: -5.420809745788574
    8. ')' → logprob: -5.795809745788574
    9. ' in' → logprob: -5.920809745788574
    10. '):' → logprob: -6.920809745788574

Token 478: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.15153738856315613
    2. '   ' → logprob: -2.2765374183654785
    3. 'for' → logprob: -3.5265374183654785
    4. '       ' → logprob: -4.7765374183654785
    5. ' ' → logprob: -9.77653694152832
    6. '  ' → logprob: -10.90153694152832
    7. '    ' → logprob: -11.02653694152832
    8. '    
' → logprob: -11.27653694152832
    9. '	for' → logprob: -11.77653694152832
    10. '        
' → logprob: -12.02653694152832

Token 479: ' '' (ID: 461)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.18558301031589508
    2. 'for' → logprob: -1.8105829954147339
    3. '       ' → logprob: -5.310583114624023
    4. '   ' → logprob: -7.060583114624023
    5. ' ' → logprob: -11.810583114624023
    6. '	for' → logprob: -12.310583114624023
    7. '```' → logprob: -13.060583114624023
    8. '        
' → logprob: -13.310583114624023
    9. '  ' → logprob: -13.435583114624023
    10. '    ' → logprob: -13.435583114624023

Token 480: 'enumer' (ID: 90985)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.009924896992743015
    2. ' for' → logprob: -4.63492488861084
    3. '   ' → logprob: -9.63492488861084
    4. 'enumer' → logprob: -10.13492488861084
    5. 'k' → logprob: -10.88492488861084
    6. 'j' → logprob: -11.13492488861084
    7. '       ' → logprob: -11.63492488861084
    8. 'range' → logprob: -12.00992488861084
    9. 's' → logprob: -12.25992488861084
    10. 'if' → logprob: -12.63492488861084

Token 481: 'ate' (ID: 379)
  Prédit: 'ate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ate' → logprob: -0.00231143063865602
    2. 'rate' → logprob: -6.2523112297058105
    3. 'r' → logprob: -8.127311706542969
    4. 'range' → logprob: -10.627311706542969
    5. '       ' → logprob: -10.877311706542969
    6. '   ' → logprob: -11.377311706542969
    7. '    ' → logprob: -12.377311706542969
    8. 'ated' → logprob: -12.377311706542969
    9. '      ' → logprob: -12.502311706542969
    10. '        ' → logprob: -12.502311706542969

Token 482: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.01920940726995468
    2. '(' → logprob: -4.519209384918213
    3. '(s' → logprob: -4.894209384918213
    4. '(k' → logprob: -8.644209861755371
    5. ' (' → logprob: -8.769209861755371
    6. '(j' → logprob: -9.019209861755371
    7. '(iter' → logprob: -10.519209861755371
    8. '(range' → logprob: -10.644209861755371
    9. '(ii' → logprob: -10.769209861755371
    10. 's' → logprob: -10.769209861755371

Token 483: ')'' (ID: 45517)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014456229284405708
    2. '())' → logprob: -4.889456272125244
    3. '()' → logprob: -6.014456272125244
    4. '):' → logprob: -7.139456272125244
    5. '')' → logprob: -7.139456272125244
    6. '):
' → logprob: -7.639456272125244
    7. '<|end|>' → logprob: -7.889456272125244
    8. '()):
' → logprob: -8.514455795288086
    9. ')`' → logprob: -8.639455795288086
    10. ',' → logprob: -8.639455795288086

Token 484: ' returns' (ID: 7377)
  Prédit: ' provides'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' provides' → logprob: -0.3182894289493561
    2. ':' → logprob: -2.1932895183563232
    3. '<|end|>' → logprob: -2.8182895183563232
    4. ' for' → logprob: -3.1932895183563232
    5. ' gives' → logprob: -3.4432895183563232
    6. 'for' → logprob: -4.943289279937744
    7. ',' → logprob: -5.318289279937744
    8. 'provid' → logprob: -5.443289279937744
    9. '<|end|>' → logprob: -6.193289279937744
    10. ' in' → logprob: -6.568289279937744

Token 485: ' (' (ID: 350)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.21941237151622772
    2. ' (' → logprob: -2.219412326812744
    3. '(j' → logprob: -3.344412326812744
    4. 'k' → logprob: -3.969412326812744
    5. '(' → logprob: -4.219412326812744
    6. 'j' → logprob: -4.969412326812744
    7. '(i' → logprob: -5.344412326812744
    8. ' j' → logprob: -5.594412326812744
    9. ' k' → logprob: -5.969412326812744
    10. '0' → logprob: -8.719412803649902

Token 486: 'index' (ID: 2257)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.00023858259373810142
    2. ' k' → logprob: -9.250238418579102
    3. '0' → logprob: -9.750238418579102
    4. 'index' → logprob: -9.875238418579102
    5. '(k' → logprob: -10.500238418579102
    6. ' index' → logprob: -13.625238418579102
    7. 'j' → logprob: -13.625238418579102
    8. 'idx' → logprob: -13.625238418579102
    9. ' ' → logprob: -14.750238418579102
    10. '(' → logprob: -14.875238418579102

Token 487: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002283956855535507
    2. ',k' → logprob: -6.377284049987793
    3. ',j' → logprob: -7.627284049987793
    4. ' ,' → logprob: -9.877284049987793
    5. '0' → logprob: -10.877284049987793
    6. '(k' → logprob: -11.752284049987793
    7. 'k' → logprob: -12.252284049987793
    8. ' ' → logprob: -12.627284049987793
    9. ',
' → logprob: -13.377284049987793
    10. '```' → logprob: -14.002284049987793

Token 488: ' character' (ID: 5855)
  Prédit: 'char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'char' → logprob: -0.1619206666946411
    2. 'j' → logprob: -3.1619205474853516
    3. 'character' → logprob: -3.2869205474853516
    4. ' char' → logprob: -3.6619205474853516
    5. 'value' → logprob: -3.7869205474853516
    6. ' j' → logprob: -5.161920547485352
    7. ' character' → logprob: -5.536920547485352
    8. 'bit' → logprob: -5.536920547485352
    9. 'ch' → logprob: -5.661920547485352
    10. ' value' → logprob: -5.786920547485352

Token 489: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008334511076100171
    2. '),' → logprob: -7.750833511352539
    3. '(' → logprob: -8.625833511352539
    4. ',' → logprob: -9.875833511352539
    5. '   ' → logprob: -10.500833511352539
    6. '):' → logprob: -10.750833511352539
    7. '(k' → logprob: -10.875833511352539
    8. '0' → logprob: -11.000833511352539
    9. 's' → logprob: -11.625833511352539
    10. '(i' → logprob: -11.750833511352539

Token 490: ' for' (ID: 395)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6376897692680359
    2. ' for' → logprob: -1.3876898288726807
    3. 'for' → logprob: -1.7626898288726807
    4. '   ' → logprob: -3.8876898288726807
    5. ':' → logprob: -4.262689590454102
    6. '(' → logprob: -5.387689590454102
    7. ')' → logprob: -5.762689590454102
    8. '       ' → logprob: -6.012689590454102
    9. ' in' → logprob: -6.387689590454102
    10. '(k' → logprob: -7.137689590454102

Token 491: ' each' (ID: 2454)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.6085869669914246
    2. 'j' → logprob: -1.2335870265960693
    3. ' j' → logprob: -2.4835870265960693
    4. ' k' → logprob: -2.8585870265960693
    5. 'i' → logprob: -4.98358678817749
    6. '(k' → logprob: -5.10858678817749
    7. '(' → logprob: -5.35858678817749
    8. ' i' → logprob: -5.98358678817749
    9. ' (' → logprob: -6.23358678817749
    10. ' ' → logprob: -8.108587265014648

Token 492: ' character' (ID: 5855)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.12624001502990723
    2. 'j' → logprob: -2.6262400150299072
    3. ' k' → logprob: -3.8762400150299072
    4. ' j' → logprob: -4.751239776611328
    5. '(k' → logprob: -5.626239776611328
    6. '(' → logprob: -5.751239776611328
    7. ' (' → logprob: -5.876239776611328
    8. 'element' → logprob: -6.126239776611328
    9. ' element' → logprob: -6.501239776611328
    10. ' line' → logprob: -7.001239776611328

Token 493: ' in' (ID: 306)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13035105168819427
    2. ' in' → logprob: -2.6303510665893555
    3. 'in' → logprob: -4.3803510665893555
    4. 'for' → logprob: -5.0053510665893555
    5. ' for' → logprob: -5.0053510665893555
    6. ' ,' → logprob: -5.3803510665893555
    7. '   ' → logprob: -5.5053510665893555
    8. '(' → logprob: -5.6303510665893555
    9. '       ' → logprob: -5.6303510665893555
    10. 's' → logprob: -6.1303510665893555

Token 494: ' the' (ID: 290)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.027814343571662903
    2. ' i' → logprob: -3.6528143882751465
    3. 'enumer' → logprob: -6.9028143882751465
    4. ' enumerate' → logprob: -8.277813911437988
    5. ' the' → logprob: -10.027813911437988
    6. 'range' → logprob: -10.402813911437988
    7. 'the' → logprob: -10.652813911437988
    8. 's' → logprob: -10.902813911437988
    9. '(i' → logprob: -10.902813911437988
    10. ')' → logprob: -11.090313911437988

Token 495: ' string' (ID: 1621)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00833489466458559
    2. 'string' → logprob: -5.758335113525391
    3. ' i' → logprob: -6.383335113525391
    4. 'enumer' → logprob: -6.508335113525391
    5. 'for' → logprob: -6.883335113525391
    6. 's' → logprob: -7.508335113525391
    7. 'input' → logprob: -8.88333511352539
    8. ' for' → logprob: -9.88333511352539
    9. 'range' → logprob: -10.13333511352539
    10. ' string' → logprob: -10.38333511352539

Token 496: ' '' (ID: 461)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1777554601430893
    2. 'for' → logprob: -2.552755355834961
    3. '   ' → logprob: -3.177755355834961
    4. ',' → logprob: -3.427755355834961
    5. ' in' → logprob: -5.677755355834961
    6. '       ' → logprob: -6.177755355834961
    7. '(' → logprob: -6.302755355834961
    8. ':' → logprob: -6.802755355834961
    9. ')' → logprob: -7.677755355834961
    10. ':
' → logprob: -8.177755355834961

Token 497: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.04088545963168144
    2. ')' → logprob: -5.0408854484558105
    3. ' i' → logprob: -5.0408854484558105
    4. 's' → logprob: -5.1658854484558105
    5. '(' → logprob: -5.2908854484558105
    6. '(i' → logprob: -5.5408854484558105
    7. 'enumer' → logprob: -5.9158854484558105
    8. 'j' → logprob: -6.0408854484558105
    9. '0' → logprob: -6.0408854484558105
    10. 'for' → logprob: -7.0408854484558105

Token 498: ''
' (ID: 2207)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.062073227018117905
    2. '):
' → logprob: -2.937073230743408
    3. ':' → logprob: -5.437073230743408
    4. '   ' → logprob: -6.312073230743408
    5. '       ' → logprob: -7.562073230743408
    6. ')' → logprob: -8.43707275390625
    7. '():' → logprob: -9.43707275390625
    8. ',' → logprob: -9.93707275390625
    9. '():
' → logprob: -10.43707275390625
    10. ':
' → logprob: -10.56207275390625

Token 499: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4483565092086792
    2. '   ' → logprob: -1.1983565092086792
    3. '       ' → logprob: -3.0733566284179688
    4. 'for' → logprob: -5.073356628417969
    5. ' ' → logprob: -6.073356628417969
    6. ',' → logprob: -6.198356628417969
    7. ')' → logprob: -7.823356628417969
    8. '  ' → logprob: -7.948356628417969
    9. '    ' → logprob: -8.073356628417969
    10. ':' → logprob: -8.198356628417969

Token 500: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.061265476047992706
    2. '   ' → logprob: -3.186265468597412
    3. 'for' (adapté à ' for') → logprob: -4.061265468597412
    4. '       ' → logprob: -7.561265468597412
    5. ' ' → logprob: -8.43626594543457
    6. '	for' → logprob: -10.43626594543457
    7. '    
' → logprob: -10.81126594543457
    8. '  ' → logprob: -11.06126594543457
    9. '    ' → logprob: -11.18626594543457
    10. ' in' → logprob: -11.56126594543457

Token 501: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.35104629397392273
    2. ' k' → logprob: -1.2260463237762451
    3. ' j' → logprob: -6.601046085357666
    4. 'j' → logprob: -6.726046085357666
    5. ' ' → logprob: -11.226046562194824
    6. '(k' → logprob: -11.726046562194824
    7. '	k' → logprob: -11.976046562194824
    8. '   ' → logprob: -12.851046562194824
    9. ' ' → logprob: -13.476046562194824
    10. '  ' → logprob: -13.476046562194824

Token 502: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018568944185972214
    2. ' ,' → logprob: -4.143568992614746
    3. ' in' → logprob: -6.643568992614746
    4. ',j' → logprob: -7.268568992614746
    5. 'in' → logprob: -7.768568992614746
    6. ' ' → logprob: -9.893568992614746
    7. ' j' → logprob: -11.643568992614746
    8. ',value' → logprob: -11.893568992614746
    9. ',v' → logprob: -11.893568992614746
    10. ',char' → logprob: -12.393568992614746

Token 503: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.009951692074537277
    2. ' j' → logprob: -4.634951591491699
    3. 'ch' → logprob: -9.3849515914917
    4. 'c' → logprob: -9.3849515914917
    5. ' ch' → logprob: -12.2599515914917
    6. 'char' → logprob: -12.2599515914917
    7. 'x' → logprob: -12.7599515914917
    8. ' ' → logprob: -12.8849515914917
    9. 'b' → logprob: -13.0099515914917
    10. 'v' → logprob: -13.3849515914917

Token 504: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06997945159673691
    2. 'in' → logprob: -2.694979429244995
    3. ' ' → logprob: -10.319979667663574
    4. '	in' → logprob: -12.194979667663574
    5. '  ' → logprob: -13.944979667663574
    6. '<|end|>' → logprob: -14.069979667663574
    7. 's' → logprob: -14.194979667663574
    8. ',' → logprob: -14.444979667663574
    9. '   ' → logprob: -15.069979667663574
    10. '    ' → logprob: -15.444979667663574

Token 505: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.12693272531032562
    2. ' enumerate' → logprob: -2.1269326210021973
    3. 'in' → logprob: -13.501933097839355
    4. 'i' → logprob: -13.626933097839355
    5. 'enum' → logprob: -14.251933097839355
    6. 'en' → logprob: -14.376933097839355
    7. 'range' → logprob: -15.376933097839355
    8. '(' → logprob: -15.751933097839355
    9. '(i' → logprob: -16.25193214416504
    10. '```' → logprob: -16.75193214416504

Token 506: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.00015431294741574675
    2. ' (' → logprob: -10.125154495239258
    3. '(' → logprob: -10.250154495239258
    4. ' i' → logprob: -10.500154495239258
    5. '(s' → logprob: -10.500154495239258
    6. 'i' → logprob: -10.750154495239258
    7. 's' → logprob: -13.500154495239258
    8. ' ' → logprob: -15.375154495239258
    9. '   ' → logprob: -15.625154495239258
    10. ' s' → logprob: -15.625154495239258

Token 507: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.011854874901473522
    2. ':' → logprob: -5.136854648590088
    3. '):
' → logprob: -5.136854648590088
    4. '   ' → logprob: -11.136855125427246
    5. '):
' → logprob: -12.136855125427246
    6. '       ' → logprob: -12.386855125427246
    7. '():' → logprob: -12.636855125427246
    8. ' ):' → logprob: -13.886855125427246
    9. ' :' → logprob: -14.136855125427246
    10. '):

' → logprob: -14.386855125427246

Token 508: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01798791065812111
    2. ':' → logprob: -5.5179877281188965
    3. '        
' → logprob: -6.0179877281188965
    4. '           ' → logprob: -6.0179877281188965
    5. '<|end|>' → logprob: -6.3929877281188965
    6. ' if' → logprob: -6.6429877281188965
    7. ' ' → logprob: -6.8929877281188965
    8. '   ' → logprob: -6.8929877281188965
    9. ':
' → logprob: -6.8929877281188965
    10. ' 
' → logprob: -7.2679877281188965

Token 509: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.9129348397254944
    2. '           ' → logprob: -1.0379347801208496
    3. '       ' → logprob: -1.6629347801208496
    4. ' ' → logprob: -3.7879347801208496
    5. 'if' → logprob: -4.03793478012085
    6. '<|end|>' → logprob: -5.53793478012085
    7. ' 
' → logprob: -5.66293478012085
    8. '               ' → logprob: -5.91293478012085
    9. '   ' → logprob: -6.91293478012085
    10. '        ' → logprob: -7.16293478012085

Token 510: ' If' (ID: 1843)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.008773869834840298
    2. ' if' → logprob: -4.7587738037109375
    3. '       ' → logprob: -9.383773803710938
    4. '   ' → logprob: -10.383773803710938
    5. '           ' → logprob: -10.383773803710938
    6. '```' → logprob: -11.508773803710938
    7. 'temp' → logprob: -13.258773803710938
    8. ' ' → logprob: -14.133773803710938
    9. '	if' → logprob: -15.508773803710938
    10. '``' → logprob: -15.633773803710938

Token 511: ' the' (ID: 290)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.06993776559829712
    2. 'j' → logprob: -2.6949377059936523
    3. '	j' → logprob: -15.194937705993652
    4. ' ' → logprob: -15.694937705993652
    5. '[j' → logprob: -15.694937705993652
    6. '   ' → logprob: -15.819937705993652
    7. ' ' → logprob: -15.944937705993652
    8. 'int' → logprob: -16.06993865966797
    9. '(j' → logprob: -16.06993865966797
    10. 's' → logprob: -16.19493865966797

Token 512: ' current' (ID: 2208)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.04860462248325348
    2. ' j' → logprob: -3.048604726791382
    3. 's' → logprob: -12.048604965209961
    4. ' ' → logprob: -12.923604965209961
    5. '[j' → logprob: -13.298604965209961
    6. 'int' → logprob: -13.423604965209961
    7. '   ' → logprob: -13.548604965209961
    8. ' s' → logprob: -14.298604965209961
    9. '	j' → logprob: -14.298604965209961
    10. 'k' → logprob: -14.423604965209961

Token 513: ' bit' (ID: 3546)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.28122764825820923
    2. ' j' → logprob: -1.4062275886535645
    3. '[j' → logprob: -10.531228065490723
    4. ' ' → logprob: -11.406228065490723
    5. 's' → logprob: -11.656228065490723
    6. '   ' → logprob: -12.031228065490723
    7. '(j' → logprob: -12.406228065490723
    8. '	j' → logprob: -12.531228065490723
    9. '_j' → logprob: -12.906228065490723
    10. ' s' → logprob: -13.031228065490723

Token 514: ' is' (ID: 382)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1606748402118683
    2. '==' → logprob: -1.910674810409546
    3. ' is' → logprob: -8.785675048828125
    4. '=='' → logprob: -8.910675048828125
    5. ' ' → logprob: -10.285675048828125
    6. '[' → logprob: -10.910675048828125
    7. '=="' → logprob: -11.035675048828125
    8. ' =='' → logprob: -11.035675048828125
    9. '=' → logprob: -11.660675048828125
    10. ''' → logprob: -11.785675048828125

Token 515: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.10851918905973434
    2. '"' → logprob: -2.3585190773010254
    3. ' '' → logprob: -4.983519077301025
    4. ' "' → logprob: -7.108519077301025
    5. '0' → logprob: -8.108519554138184
    6. ' ' → logprob: -8.608519554138184
    7. '1' → logprob: -9.233519554138184
    8. 'space' → logprob: -11.483519554138184
    9. ' a' → logprob: -12.483519554138184
    10. '`' → logprob: -12.483519554138184

Token 516: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3132665753364563
    2. '1' → logprob: -1.3132665157318115
    3. ' ' → logprob: -12.56326675415039
    4. ''' → logprob: -13.56326675415039
    5. '"' → logprob: -16.43826675415039
    6. '('' → logprob: -18.43826675415039
    7. '   ' → logprob: -18.43826675415039
    8. '```' → logprob: -18.62576675415039
    9. ''s' → logprob: -18.93826675415039
    10. ' '' → logprob: -19.12576675415039

Token 517: ''' (ID: 6)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.33643317222595215
    2. ',' → logprob: -1.4614331722259521
    3. ':
' → logprob: -3.461433172225952
    4. '           ' → logprob: -5.086433410644531
    5. '):' → logprob: -5.211433410644531
    6. '               ' → logprob: -5.711433410644531
    7. '<|end|>' → logprob: -6.211433410644531
    8. ')' → logprob: -6.586433410644531
    9. '):
' → logprob: -6.961433410644531
    10. ' ,' → logprob: -6.961433410644531

Token 518: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07178070396184921
    2. ',' → logprob: -2.8217806816101074
    3. ':
' → logprob: -4.946780681610107
    4. '           ' → logprob: -6.821780681610107
    5. '               ' → logprob: -7.321780681610107
    6. ' and' → logprob: -7.446780681610107
    7. '<|end|>' → logprob: -8.571781158447266
    8. '       ' → logprob: -10.446781158447266
    9. '):' → logprob: -11.196781158447266
    10. ')' → logprob: -11.321781158447266

Token 519: 'as' (ID: 288)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0564907006919384
    2. '               ' → logprob: -4.306490898132324
    3. ' )' → logprob: -4.431490898132324
    4. '           ' → logprob: -4.806490898132324
    5. '):
' → logprob: -5.431490898132324
    6. 'temp' → logprob: -5.556490898132324
    7. ' ' → logprob: -6.056490898132324
    8. '<|end|>' → logprob: -6.056490898132324
    9. ' temp' → logprob: -6.181490898132324
    10. '),' → logprob: -6.556490898132324

Token 520: ' a' (ID: 261)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.4026939868927002
    2. 'j' → logprob: -1.2776939868927002
    3. ' s' → logprob: -4.527693748474121
    4. ')' → logprob: -4.902693748474121
    5. '           ' → logprob: -5.027693748474121
    6. '            ' → logprob: -5.402693748474121
    7. 's' → logprob: -5.527693748474121
    8. ' ' → logprob: -5.902693748474121
    9. '               ' → logprob: -5.902693748474121
    10. ' a' → logprob: -5.902693748474121

Token 521: ' string' (ID: 1621)
  Prédit: 'string'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'string' → logprob: -0.24951456487178802
    2. 'space' → logprob: -2.124514579772949
    3. ' string' → logprob: -4.124514579772949
    4. ' j' → logprob: -4.124514579772949
    5. '           ' → logprob: -4.374514579772949
    6. 'j' → logprob: -4.749514579772949
    7. ')' → logprob: -4.999514579772949
    8. 'condition' → logprob: -5.374514579772949
    9. ' ' → logprob: -5.499514579772949
    10. 'token' → logprob: -5.499514579772949

Token 522: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12713851034641266
    2. '):
' → logprob: -2.502138614654541
    3. ')' → logprob: -4.502138614654541
    4. '),' → logprob: -4.627138614654541
    5. ',' → logprob: -4.752138614654541
    6. ':' → logprob: -5.127138614654541
    7. ' and' → logprob: -7.752138614654541
    8. ' ):' → logprob: -7.877138614654541
    9. '):

' → logprob: -7.877138614654541
    10. '           ' → logprob: -8.877138137817383

Token 523: ' not' (ID: 625)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22988253831863403
    2. '               ' → logprob: -2.3548824787139893
    3. ' continue' → logprob: -3.6048824787139893
    4. '           ' → logprob: -3.9798824787139893
    5. ' )' → logprob: -4.354882717132568
    6. ' ' → logprob: -4.354882717132568
    7. '),' → logprob: -4.729882717132568
    8. '<|end|>' → logprob: -4.979882717132568
    9. '            ' → logprob: -5.229882717132568
    10. '):
' → logprob: -5.854882717132568

Token 524: ' an' (ID: 448)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.2950304448604584
    2. 'a' → logprob: -2.795030355453491
    3. ' a' → logprob: -2.795030355453491
    4. ' '' → logprob: -3.045030355453491
    5. ')' → logprob: -4.04503059387207
    6. ''a' → logprob: -4.04503059387207
    7. '"' → logprob: -4.29503059387207
    8. ' ' → logprob: -4.79503059387207
    9. ''s' → logprob: -4.92003059387207
    10. '   ' → logprob: -5.29503059387207

Token 525: ' integer' (ID: 16336)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6971786618232727
    2. 'integer' → logprob: -0.6971786618232727
    3. ' integer' → logprob: -5.697178840637207
    4. ' int' → logprob: -7.447178840637207
    5. '1' → logprob: -10.697178840637207
    6. 'i' → logprob: -11.322178840637207
    7. '0' → logprob: -11.947178840637207
    8. 'character' → logprob: -12.072178840637207
    9. 'if' → logprob: -12.322178840637207
    10. 'char' → logprob: -12.447178840637207

Token 526: ')
' (ID: 446)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10270672291517258
    2. '):
' → logprob: -2.7277066707611084
    3. ')' → logprob: -3.9777066707611084
    4. '),' → logprob: -4.6027069091796875
    5. '           ' → logprob: -6.8527069091796875
    6. ' ):' → logprob: -6.8527069091796875
    7. ':' → logprob: -7.9777069091796875
    8. '):

' → logprob: -8.102706909179688
    9. ',' → logprob: -8.727706909179688
    10. '               ' → logprob: -8.977706909179688

Token 527: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18714852631092072
    2. '               ' → logprob: -2.3121485710144043
    3. ':' → logprob: -2.9371485710144043
    4. ' if' → logprob: -4.437148571014404
    5. ':
' → logprob: -6.062148571014404
    6. ',' → logprob: -6.687148571014404
    7. '       ' → logprob: -7.312148571014404
    8. 'if' → logprob: -7.812148571014404
    9. '   ' → logprob: -8.187148094177246
    10. '            
' → logprob: -8.187148094177246

Token 528: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.536888837814331
    2. '           ' → logprob: -1.286888837814331
    3. 'if' (adapté à ' if') → logprob: -2.286888837814331
    4. '               ' → logprob: -3.286888837814331
    5. '       ' → logprob: -9.03688907623291
    6. '   ' → logprob: -9.53688907623291
    7. ' ' → logprob: -9.66188907623291
    8. ' ' → logprob: -10.78688907623291
    9. 'temp' → logprob: -11.53688907623291
    10. '            ' → logprob: -11.66188907623291

Token 529: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.0485946387052536
    2. 'j' → logprob: -3.0485947132110596
    3. '	j' → logprob: -12.79859447479248
    4. '   ' → logprob: -13.42359447479248
    5. ' ' → logprob: -13.67359447479248
    6. ' ' → logprob: -14.54859447479248
    7. '(j' → logprob: -14.67359447479248
    8. '    ' → logprob: -14.92359447479248
    9. '[j' → logprob: -15.79859447479248
    10. '$j' → logprob: -16.611095428466797

Token 530: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1128833219408989
    2. '==' → logprob: -2.2378833293914795
    3. '[' → logprob: -10.237883567810059
    4. ':' → logprob: -11.737883567810059
    5. '=' → logprob: -11.987883567810059
    6. ' ' → logprob: -12.987883567810059
    7. '=='' → logprob: -13.112883567810059
    8. '=="' → logprob: -13.487883567810059
    9. ')' → logprob: -13.862883567810059
    10. ')==' → logprob: -13.862883567810059

Token 531: ' "' (ID: 392)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.02060787007212639
    2. ' '' → logprob: -4.145607948303223
    3. '"' → logprob: -5.395607948303223
    4. ' "' → logprob: -10.645607948303223
    5. '1' → logprob: -13.770607948303223
    6. ' ' → logprob: -13.895607948303223
    7. ''s' → logprob: -15.645607948303223
    8. '`' → logprob: -15.770607948303223
    9. ''a' → logprob: -15.895607948303223
    10. ')' → logprob: -16.145606994628906

Token 532: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. '0' → logprob: -14.750000953674316
    3. '"' → logprob: -16.375
    4. ' ' → logprob: -16.5
    5. ''' → logprob: -18.875
    6. '">' → logprob: -19.875
    7. '")' → logprob: -20.25
    8. '2' → logprob: -20.75
    9. ''s' → logprob: -21.375
    10. '১' → logprob: -21.5

Token 533: '":
' (ID: 9213)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18250830471515656
    2. '):' → logprob: -2.6825082302093506
    3. '":' → logprob: -2.8075082302093506
    4. ':
' → logprob: -3.9325082302093506
    5. '):
' → logprob: -4.18250846862793
    6. '":
' → logprob: -6.68250846862793
    7. '           ' → logprob: -7.43250846862793
    8. ')' → logprob: -7.43250846862793
    9. ']:' → logprob: -8.68250846862793
    10. '"):' → logprob: -8.93250846862793

Token 534: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6772509217262268
    2. '               ' → logprob: -0.8022509217262268
    3. 'temp' → logprob: -3.677250862121582
    4. ' temp' → logprob: -4.052250862121582
    5. '       ' → logprob: -8.427250862121582
    6. '```' → logprob: -9.052250862121582
    7. ',' → logprob: -9.427250862121582
    8. '   ' → logprob: -9.677250862121582
    9. '            
' → logprob: -9.802250862121582
    10. '[temp' → logprob: -9.802250862121582

Token 535: ' #' (ID: 1069)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.3092536926269531
    2. ' temp' → logprob: -2.184253692626953
    3. '           ' → logprob: -2.309253692626953
    4. '               ' → logprob: -2.934253692626953
    5. '                   ' → logprob: -7.684253692626953
    6. '   ' → logprob: -8.559253692626953
    7. '       ' → logprob: -9.559253692626953
    8. '	temp' → logprob: -9.559253692626953
    9. ' ' → logprob: -10.059253692626953
    10. '[temp' → logprob: -10.309253692626953

Token 536: ' Place' (ID: 16303)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.011309295892715454
    2. ' temp' → logprob: -4.5113091468811035
    3. '               ' → logprob: -8.386309623718262
    4. '           ' → logprob: -11.136309623718262
    5. '   ' → logprob: -11.761309623718262
    6. '                   ' → logprob: -12.386309623718262
    7. '       ' → logprob: -13.386309623718262
    8. '	temp' → logprob: -13.511309623718262
    9. 'tmp' → logprob: -14.386309623718262
    10. 't' → logprob: -14.511309623718262

Token 537: ' the' (ID: 290)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.04395473003387451
    2. ' s' → logprob: -3.293954849243164
    3. 'temp' → logprob: -5.168954849243164
    4. ' temp' → logprob: -8.793954849243164
    5. '   ' → logprob: -10.043954849243164
    6. ' ' → logprob: -12.668954849243164
    7. 'tmp' → logprob: -13.543954849243164
    8. '       ' → logprob: -13.793954849243164
    9. 't' → logprob: -13.918954849243164
    10. '```' → logprob: -14.543954849243164

Token 538: ' character' (ID: 5855)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.004514019936323166
    2. ' s' → logprob: -5.754514217376709
    3. 'temp' → logprob: -6.629514217376709
    4. ' temp' → logprob: -12.00451374053955
    5. '   ' → logprob: -12.50451374053955
    6. '```' → logprob: -13.62951374053955
    7. ' ' → logprob: -14.00451374053955
    8. 'char' → logprob: -14.62951374053955
    9. 't' → logprob: -14.75451374053955
    10. 'tmp' → logprob: -15.00451374053955

Token 539: ' from' (ID: 591)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.07194523513317108
    2. ' s' → logprob: -2.6969451904296875
    3. '   ' → logprob: -6.3219451904296875
    4. '           ' → logprob: -9.821945190429688
    5. '       ' → logprob: -9.946945190429688
    6. 'temp' → logprob: -10.696945190429688
    7. ' ' → logprob: -10.946945190429688
    8. ' of' → logprob: -10.946945190429688
    9. ' in' → logprob: -12.071945190429688
    10. ''s' → logprob: -12.196945190429688

Token 540: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.004079589620232582
    2. ' s' → logprob: -5.504079818725586
    3. '`s' → logprob: -14.379079818725586
    4. '   ' → logprob: -15.379079818725586
    5. '```' → logprob: -15.754079818725586
    6. '(s' → logprob: -15.879079818725586
    7. '`' → logprob: -17.004079818725586
    8. ''s' → logprob: -17.629079818725586
    9. '_s' → logprob: -17.879079818725586
    10. 'temp' → logprob: -17.879079818725586

Token 541: ' at' (ID: 540)
  Prédit: '[cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[cnt' → logprob: -0.0043130917474627495
    2. '[k' → logprob: -5.754312992095947
    3. '[' → logprob: -7.004312992095947
    4. '[count' → logprob: -9.629313468933105
    5. '[c' → logprob: -9.629313468933105
    6. '[counter' → logprob: -10.504313468933105
    7. 'cnt' → logprob: -10.754313468933105
    8. ' at' → logprob: -11.004313468933105
    9. '   ' → logprob: -11.754313468933105
    10. '[temp' → logprob: -12.129313468933105

Token 542: ' position' (ID: 4010)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.5310063362121582
    2. 'cnt' → logprob: -0.9060063362121582
    3. 'index' → logprob: -5.781006336212158
    4. 'position' → logprob: -6.781006336212158
    5. ' cnt' → logprob: -6.781006336212158
    6. ' k' → logprob: -7.281006336212158
    7. '[cnt' → logprob: -7.281006336212158
    8. 's' → logprob: -8.406005859375
    9. ' position' → logprob: -9.281005859375
    10. ' index' → logprob: -9.281005859375

Token 543: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0004365102213341743
    2. ' k' → logprob: -7.750436305999756
    3. '[k' → logprob: -12.875436782836914
    4. '   ' → logprob: -13.375436782836914
    5. '`' → logprob: -14.500436782836914
    6. '2' → logprob: -14.500436782836914
    7. '{k' → logprob: -15.500436782836914
    8. '```' → logprob: -15.750436782836914
    9. '    ' → logprob: -16.250436782836914
    10. 's' → logprob: -16.750436782836914

Token 544: ' into' (ID: 1511)
  Prédit: '[cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[cnt' → logprob: -0.1023205816745758
    2. ' at' → logprob: -3.602320671081543
    3. '[temp' → logprob: -3.977320671081543
    4. '[' → logprob: -4.602320671081543
    5. 'temp' → logprob: -4.727320671081543
    6. '               ' → logprob: -5.102320671081543
    7. '[counter' → logprob: -5.352320671081543
    8. '[k' → logprob: -5.477320671081543
    9. 'cnt' → logprob: -6.227320671081543
    10. '(cnt' → logprob: -6.477320671081543

Token 545: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -2.7968066206085496e-05
    2. ' temp' → logprob: -10.500027656555176
    3. '[temp' → logprob: -15.625027656555176
    4. '`' → logprob: -16.250028610229492
    5. '```' → logprob: -17.000028610229492
    6. '	temp' → logprob: -17.000028610229492
    7. 'tmp' → logprob: -17.125028610229492
    8. '   ' → logprob: -17.500028610229492
    9. 's' → logprob: -18.250028610229492
    10. '(temp' → logprob: -18.500028610229492

Token 546: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.630610641877865e-06
    2. '```' → logprob: -12.625006675720215
    3. '2' → logprob: -13.125006675720215
    4. '   ' → logprob: -14.250006675720215
    5. '[' → logprob: -15.750006675720215
    6. '`' → logprob: -16.9375057220459
    7. '``' → logprob: -17.0625057220459
    8. ' ' → logprob: -17.1875057220459
    9. '' → logprob: -17.5000057220459
    10. '１' → logprob: -17.7500057220459

Token 547: ' at' (ID: 540)
  Prédit: '[cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[cnt' → logprob: -0.0010708003537729383
    2. '[' → logprob: -7.376070976257324
    3. '[count' → logprob: -8.626070976257324
    4. '[temp' → logprob: -9.251070976257324
    5. '[counter' → logprob: -9.751070976257324
    6. '[k' → logprob: -10.251070976257324
    7. ' [' → logprob: -11.126070976257324
    8. '   ' → logprob: -11.626070976257324
    9. 'cnt' → logprob: -11.876070976257324
    10. ' at' → logprob: -11.876070976257324

Token 548: ' index' (ID: 3472)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.0011910604080185294
    2. ' cnt' → logprob: -6.751191139221191
    3. '[cnt' → logprob: -11.251191139221191
    4. '(cnt' → logprob: -13.001191139221191
    5. 'index' → logprob: -13.376191139221191
    6. '	cnt' → logprob: -13.376191139221191
    7. 'temp' → logprob: -14.376191139221191
    8. 'count' → logprob: -14.626191139221191
    9. '   ' → logprob: -14.876191139221191
    10. 'idx' → logprob: -15.126191139221191

Token 549: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.0067287529818713665
    2. ' cnt' → logprob: -5.006728649139404
    3. '(cnt' → logprob: -12.006729125976562
    4. '[cnt' → logprob: -12.756729125976562
    5. '   ' → logprob: -13.881729125976562
    6. '0' → logprob: -13.881729125976562
    7. '```' → logprob: -14.006729125976562
    8. '	cnt' → logprob: -14.631729125976562
    9. '`' → logprob: -14.881729125976562
    10. 'count' → logprob: -15.006729125976562

Token 550: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.127333340875339e-06
    2. ' ' → logprob: -13.375003814697266
    3. '```' → logprob: -13.625003814697266
    4. '
' → logprob: -15.250003814697266
    5. '   ' → logprob: -15.500003814697266
    6. '`' → logprob: -15.937503814697266
    7. '``' → logprob: -16.562503814697266
    8. '2' → logprob: -16.937503814697266
    9. '' → logprob: -17.000003814697266
    10. '_' → logprob: -17.125003814697266

Token 551: ' (' (ID: 350)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.17030395567417145
    2. '[temp' → logprob: -3.1703040599823
    3. '       ' → logprob: -3.5453040599823
    4. ' =' → logprob: -4.420303821563721
    5. ']=' → logprob: -4.420303821563721
    6. '
' → logprob: -4.545303821563721
    7. '[' → logprob: -4.670303821563721
    8. ']
' → logprob: -5.045303821563721
    9. '][' → logprob: -5.170303821563721
    10. '               ' → logprob: -5.545303821563721

Token 552: 'from' (ID: 2845)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4080825448036194
    2. 'cnt' → logprob: -1.7830824851989746
    3. '0' → logprob: -2.9080824851989746
    4. 'temp' → logprob: -3.1580824851989746
    5. '               ' → logprob: -4.533082485198975
    6. 'k' → logprob: -4.908082485198975
    7. 's' → logprob: -5.033082485198975
    8. ')
' → logprob: -5.158082485198975
    9. '<|end|>' → logprob: -5.158082485198975
    10. '```' → logprob: -5.408082485198975

Token 553: ' start' (ID: 1604)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.0541962385177612
    2. ' the' → logprob: -1.3041962385177612
    3. '0' → logprob: -1.6791962385177612
    4. 'left' → logprob: -1.8041962385177612
    5. 'front' → logprob: -4.429196357727051
    6. ' left' → logprob: -5.429196357727051
    7. ' front' → logprob: -5.429196357727051
    8. 'start' → logprob: -5.679196357727051
    9. ' ' → logprob: -5.929196357727051
    10. 'begin' → logprob: -6.804196357727051

Token 554: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1029091626405716
    2. ']' → logprob: -2.4779090881347656
    3. ')
' → logprob: -5.227909088134766
    4. '+' → logprob: -6.227909088134766
    5. ' )' → logprob: -6.352909088134766
    6. '<|end|>' → logprob: -6.352909088134766
    7. ' ]' → logprob: -6.852909088134766
    8. '```' → logprob: -7.727909088134766
    9. ')]' → logprob: -8.227909088134766
    10. ']
' → logprob: -8.477909088134766

Token 555: '               ' (ID: 506)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -1.0366421937942505
    2. '[temp' → logprob: -1.1616421937942505
    3. '               ' → logprob: -1.7866421937942505
    4. '                   ' → logprob: -3.161642074584961
    5. '       ' → logprob: -3.286642074584961
    6. '           ' → logprob: -3.536642074584961
    7. ' temp' → logprob: -3.786642074584961
    8. '
' → logprob: -5.036642074584961
    9. ']' → logprob: -5.036642074584961
    10. '[' → logprob: -5.411642074584961

Token 556: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' (adapté à ' temp') → logprob: -0.0006818148540332913
    2. ' temp' → logprob: -7.6256818771362305
    3. 's' → logprob: -8.87568187713623
    4. '   ' → logprob: -10.25068187713623
    5. '           ' → logprob: -12.37568187713623
    6. '               ' → logprob: -12.37568187713623
    7. '       ' → logprob: -12.50068187713623
    8. ' s' → logprob: -12.87568187713623
    9. 'tmp' → logprob: -13.00068187713623
    10. '                   ' → logprob: -14.50068187713623

Token 557: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -16.75
    3. '```' → logprob: -16.875
    4. '_' → logprob: -17.375
    5. ' ' → logprob: -17.875
    6. '   ' → logprob: -18.375
    7. '' → logprob: -19.875
    8. 's' → logprob: -20.25
    9. '۱' → logprob: -20.875
    10. '[
' → logprob: -21.0625

Token 558: '[cnt' (ID: 157792)
  Prédit: '[cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[cnt' → logprob: -0.0001363168703392148
    2. '[' → logprob: -9.125136375427246
    3. '[count' → logprob: -11.000136375427246
    4. '[counter' → logprob: -12.500136375427246
    5. ' [' → logprob: -12.500136375427246
    6. '][' → logprob: -13.250136375427246
    7. '[c' → logprob: -14.750136375427246
    8. '(cnt' → logprob: -15.125136375427246
    9. '   ' → logprob: -16.00013542175293
    10. ')[' → logprob: -16.25013542175293

Token 559: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. '0' → logprob: -14.500001907348633
    3. ' ' → logprob: -14.750001907348633
    4. '   ' → logprob: -15.125001907348633
    5. '2' → logprob: -17.375001907348633
    6. ']' → logprob: -17.375001907348633
    7. '[' → logprob: -17.500001907348633
    8. ')' → logprob: -17.750001907348633
    9. '```' → logprob: -17.875001907348633
    10. '    ' → logprob: -18.125001907348633

Token 560: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00029387109680101275
    2. ']=' → logprob: -8.375293731689453
    3. ' ]' → logprob: -9.750293731689453
    4. ')' → logprob: -13.000293731689453
    5. '=' → logprob: -13.875293731689453
    6. ']
' → logprob: -14.750293731689453
    7. ' =' → logprob: -15.375293731689453
    8. '   ' → logprob: -15.500293731689453
    9. ']+=' → logprob: -15.500293731689453
    10. '])' → logprob: -16.000293731689453

Token 561: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.649580717086792
    2. ' =' → logprob: -1.024580717086792
    3. ']' → logprob: -2.149580717086792
    4. ']=' → logprob: -6.149580955505371
    5. ')' → logprob: -9.524580955505371
    6. '=k' → logprob: -10.899580955505371
    7. ' ]' → logprob: -11.274580955505371
    8. ' ' → logprob: -12.399580955505371
    9. ')=' → logprob: -12.524580955505371
    10. 's' → logprob: -13.149580955505371

Token 562: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.004078639671206474
    2. ' s' → logprob: -5.5040788650512695
    3. '   ' → logprob: -15.87907886505127
    4. ' ' → logprob: -18.004077911376953
    5. '`s' → logprob: -18.004077911376953
    6. '(s' → logprob: -18.504077911376953
    7. '	s' → logprob: -18.504077911376953
    8. ''s' → logprob: -18.629077911376953
    9. '{s' → logprob: -18.629077911376953
    10. '_s' → logprob: -19.004077911376953

Token 563: '[k' (ID: 14298)
  Prédit: '[cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[cnt' → logprob: -0.5417137145996094
    2. '[k' → logprob: -0.9167137145996094
    3. '[' → logprob: -4.041713714599609
    4. '[n' → logprob: -8.29171371459961
    5. 'k' → logprob: -8.66671371459961
    6. '[c' → logprob: -9.16671371459961
    7. '[count' → logprob: -9.29171371459961
    8. '[
' → logprob: -10.16671371459961
    9. '   ' → logprob: -10.41671371459961
    10. 'cnt' → logprob: -10.66671371459961

Token 564: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003487223759293556
    2. ']
' → logprob: -5.7534871101379395
    3. ' ]' → logprob: -8.753487586975098
    4. ']
' → logprob: -10.128487586975098
    5. '[' → logprob: -10.628487586975098
    6. '       ' → logprob: -11.128487586975098
    7. '+' → logprob: -11.253487586975098
    8. ']

' → logprob: -11.878487586975098
    9. '[k' → logprob: -11.878487586975098
    10. '           ' → logprob: -11.878487586975098

Token 565: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.059646837413311005
    2. '           ' → logprob: -3.0596468448638916
    3. '                
' → logprob: -5.6846466064453125
    4. '                   ' → logprob: -6.1846466064453125
    5. '
' → logprob: -6.1846466064453125
    6. '       ' → logprob: -6.6846466064453125
    7. '<|end|>' → logprob: -7.0596466064453125
    8. '            
' → logprob: -7.4346466064453125
    9. '                    
' → logprob: -9.059646606445312
    10. '  
' → logprob: -9.559646606445312

Token 566: ' #' (ID: 1069)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.0517822727560997
    2. '               ' → logprob: -3.1767823696136475
    3. '           ' → logprob: -5.426782131195068
    4. ' cnt' → logprob: -6.051782131195068
    5. '                   ' → logprob: -7.051782131195068
    6. '[cnt' → logprob: -7.801782131195068
    7. '
' → logprob: -8.301782608032227
    8. '                
' → logprob: -8.926782608032227
    9. '       ' → logprob: -9.301782608032227
    10. '	cnt' → logprob: -9.676782608032227

Token 567: ' For' (ID: 2214)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.0001129602751461789
    2. '               ' → logprob: -9.625112533569336
    3. ' cnt' → logprob: -10.125112533569336
    4. '           ' → logprob: -12.500112533569336
    5. '	cnt' → logprob: -13.375112533569336
    6. '       ' → logprob: -15.000112533569336
    7. '                   ' → logprob: -15.125112533569336
    8. '   ' → logprob: -15.375112533569336
    9. '(cnt' → logprob: -15.500112533569336
    10. '[cnt' → logprob: -15.500112533569336

Token 568: ' temp' (ID: 5484)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.15632538497447968
    2. ' cnt' → logprob: -2.406325340270996
    3. 'temp' → logprob: -3.656325340270996
    4. 'd' → logprob: -5.406325340270996
    5. '1' → logprob: -5.781325340270996
    6. '[cnt' → logprob: -5.906325340270996
    7. 's' → logprob: -6.281325340270996
    8. ' temp' → logprob: -6.281325340270996
    9. '<|end|>' → logprob: -6.406325340270996
    10. 'count' → logprob: -6.531325340270996

Token 569: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00043913270928896964
    2. '1' → logprob: -7.750439167022705
    3. '```' → logprob: -12.750438690185547
    4. 't' → logprob: -13.625438690185547
    5. ' ' → logprob: -13.875438690185547
    6. '
' → logprob: -14.125438690185547
    7. '[' → logprob: -14.812938690185547
    8. '``' → logprob: -15.312938690185547
    9. 'cnt' → logprob: -15.375438690185547
    10. ']' → logprob: -15.875438690185547

Token 570: ',' (ID: 11)
  Prédit: '[cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[cnt' → logprob: -0.2810574769973755
    2. '[temp' → logprob: -1.7810574769973755
    3. 'temp' → logprob: -3.281057357788086
    4. '[' → logprob: -4.156057357788086
    5. 'cnt' → logprob: -4.656057357788086
    6. '[count' → logprob: -5.656057357788086
    7. ' temp' → logprob: -5.656057357788086
    8. '```' → logprob: -5.906057357788086
    9. ' cnt' → logprob: -6.656057357788086
    10. ' [' → logprob: -7.156057357788086

Token 571: ' place' (ID: 2475)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.0700807049870491
    2. ' temp' → logprob: -2.6950807571411133
    3. 's' → logprob: -9.945080757141113
    4. 'cnt' → logprob: -10.070080757141113
    5. '[temp' → logprob: -10.570080757141113
    6. ' s' → logprob: -12.320080757141113
    7. '       ' → logprob: -12.445080757141113
    8. ' cnt' → logprob: -12.570080757141113
    9. 't' → logprob: -13.195080757141113
    10. '```' → logprob: -13.320080757141113

Token 572: ' the' (ID: 290)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.31818312406539917
    2. ' s' → logprob: -1.443183183670044
    3. 'temp' → logprob: -3.443183183670044
    4. ' temp' → logprob: -5.443182945251465
    5. ' ' → logprob: -11.693182945251465
    6. '   ' → logprob: -11.943182945251465
    7. '```' → logprob: -11.943182945251465
    8. 't' → logprob: -12.193182945251465
    9. 'the' → logprob: -12.318182945251465
    10. ' the' → logprob: -12.443182945251465

Token 573: ' character' (ID: 5855)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.02983715571463108
    2. ' s' → logprob: -3.529837131500244
    3. 'temp' → logprob: -10.154837608337402
    4. '   ' → logprob: -10.779837608337402
    5. ' ' → logprob: -11.654837608337402
    6. ' temp' → logprob: -12.404837608337402
    7. '       ' → logprob: -13.529837608337402
    8. '  ' → logprob: -13.842337608337402
    9. '    ' → logprob: -13.967337608337402
    10. '```' → logprob: -14.029837608337402

Token 574: ' from' (ID: 591)
  Prédit: '[s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.08554251492023468
    2. 's' → logprob: -2.9605424404144287
    3. ' at' → logprob: -4.085542678833008
    4. '[temp' → logprob: -5.335542678833008
    5. 'temp' → logprob: -5.835542678833008
    6. 'from' → logprob: -6.335542678833008
    7. '```' → logprob: -6.335542678833008
    8. 'at' → logprob: -6.835542678833008
    9. ' s' → logprob: -7.460542678833008
    10. '[cnt' → logprob: -8.960542678833008

Token 575: ' the' (ID: 290)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3869318962097168
    2. ' s' → logprob: -1.1369318962097168
    3. 'k' → logprob: -11.636932373046875
    4. ''s' → logprob: -11.886932373046875
    5. '<|end|>' → logprob: -11.886932373046875
    6. ' ' → logprob: -12.011932373046875
    7. '`s' → logprob: -12.636932373046875
    8. '[' → logprob: -12.636932373046875
    9. '   ' → logprob: -12.761932373046875
    10. 'n' → logprob: -12.886932373046875

Token 576: ' mirrored' (ID: 136208)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0010318574495613575
    2. ' s' → logprob: -7.626031875610352
    3. 'k' → logprob: -8.251031875610352
    4. '2' → logprob: -9.126031875610352
    5. 'n' → logprob: -9.751031875610352
    6. '```' → logprob: -10.001031875610352
    7. 'temp' → logprob: -11.126031875610352
    8. '   ' → logprob: -11.626031875610352
    9. '[' → logprob: -11.751031875610352
    10. '`' → logprob: -11.876031875610352

Token 577: ' position' (ID: 4010)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.09003175795078278
    2. ' s' → logprob: -3.090031862258911
    3. 'position' → logprob: -3.965031862258911
    4. ' position' → logprob: -4.840031623840332
    5. '2' → logprob: -5.340031623840332
    6. 'index' → logprob: -6.340031623840332
    7. 'n' → logprob: -6.340031623840332
    8. 'temp' → logprob: -6.715031623840332
    9. 'string' → logprob: -7.090031623840332
    10. ' n' → logprob: -7.840031623840332

Token 578: ' from' (ID: 591)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5838824510574341
    2. 's' → logprob: -1.458882451057434
    3. '[' → logprob: -1.708882451057434
    4. '[n' → logprob: -4.7088823318481445
    5. ' ' → logprob: -4.9588823318481445
    6. 'n' → logprob: -5.5838823318481445
    7. ' s' → logprob: -5.5838823318481445
    8. '   ' → logprob: -7.2088823318481445
    9. '(' → logprob: -7.3338823318481445
    10. ' [' → logprob: -7.5838823318481445

Token 579: ' the' (ID: 290)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.20412489771842957
    2. ' s' → logprob: -2.079124927520752
    3. '2' → logprob: -3.704124927520752
    4. 'k' → logprob: -3.829124927520752
    5. ' k' → logprob: -5.829124927520752
    6. 'the' → logprob: -5.954124927520752
    7. ' the' → logprob: -6.329124927520752
    8. 'n' → logprob: -6.329124927520752
    9. 'len' → logprob: -6.954124927520752
    10. ' ' → logprob: -7.079124927520752

Token 580: ' end' (ID: 1268)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.33035051822662354
    2. 'end' → logprob: -1.9553505182266235
    3. ' end' → logprob: -3.205350399017334
    4. 'other' → logprob: -3.455350399017334
    5. '2' → logprob: -3.705350399017334
    6. ' s' → logprob: -4.080350399017334
    7. ' other' → logprob: -5.205350399017334
    8. 'len' → logprob: -5.205350399017334
    9. 'right' → logprob: -5.955350399017334
    10. 'last' → logprob: -6.080350399017334

Token 581: ' of' (ID: 328)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -1.5606759786605835
    2. '[cnt' → logprob: -1.5606759786605835
    3. '[' → logprob: -1.9356759786605835
    4. 's' → logprob: -2.310676097869873
    5. '[n' → logprob: -2.685676097869873
    6. 'n' → logprob: -2.685676097869873
    7. 'cnt' → logprob: -3.185676097869873
    8. ' s' → logprob: -3.185676097869873
    9. ' n' → logprob: -3.435676097869873
    10. ' ' → logprob: -4.435676097869873

Token 582: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.011090975254774094
    2. ' s' → logprob: -4.5110907554626465
    3. 'temp' → logprob: -11.386091232299805
    4. '<|end|>' → logprob: -11.886091232299805
    5. '2' → logprob: -12.011091232299805
    6. 'the' → logprob: -12.136091232299805
    7. '```' → logprob: -13.136091232299805
    8. ' the' → logprob: -13.261091232299805
    9. ' ' → logprob: -13.886091232299805
    10. 'k' → logprob: -13.886091232299805

Token 583: '
' (ID: 198)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.35671836137771606
    2. '[' → logprob: -1.2317183017730713
    3. '[n' → logprob: -5.35671854019165
    4. 'n' → logprob: -6.98171854019165
    5. ' ' → logprob: -7.48171854019165
    6. '   ' → logprob: -7.48171854019165
    7. '`' → logprob: -8.231718063354492
    8. '[len' → logprob: -8.481718063354492
    9. '[-' → logprob: -8.481718063354492
    10. '```' → logprob: -8.606718063354492

Token 584: '               ' (ID: 506)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.8385623693466187
    2. '[cnt' → logprob: -1.3385623693466187
    3. '[temp' → logprob: -2.588562488555908
    4. '[' → logprob: -2.713562488555908
    5. 'cnt' → logprob: -3.088562488555908
    6. ' temp' → logprob: -3.588562488555908
    7. '       ' → logprob: -3.713562488555908
    8. '[n' → logprob: -4.213562488555908
    9. '               ' → logprob: -4.588562488555908
    10. 's' → logprob: -4.713562488555908

Token 585: ' #' (ID: 1069)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.10067437589168549
    2. ' temp' → logprob: -2.7256743907928467
    3. 's' → logprob: -3.8506743907928467
    4. ' s' → logprob: -5.475674152374268
    5. '               ' → logprob: -6.225674152374268
    6. '   ' → logprob: -6.725674152374268
    7. '           ' → logprob: -7.350674152374268
    8. '[temp' → logprob: -7.725674152374268
    9. '       ' → logprob: -8.100674629211426
    10. '                   ' → logprob: -9.100674629211426

Token 586: ' ' (ID: 220)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.22646746039390564
    2. ' temp' → logprob: -1.601467490196228
    3. 's' → logprob: -7.601467609405518
    4. ' s' → logprob: -7.726467609405518
    5. '               ' → logprob: -10.60146713256836
    6. '[temp' → logprob: -10.85146713256836
    7. '           ' → logprob: -11.35146713256836
    8. '       ' → logprob: -11.47646713256836
    9. '	temp' → logprob: -11.60146713256836
    10. '   ' → logprob: -12.35146713256836

Token 587: '2' (ID: 17)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.19645334780216217
    2. 's' → logprob: -1.946453332901001
    3. ' temp' → logprob: -3.571453332901001
    4. ' s' → logprob: -4.94645357131958
    5. '   ' → logprob: -9.696453094482422
    6. '```' → logprob: -9.821453094482422
    7. '[temp' → logprob: -9.946453094482422
    8. '       ' → logprob: -10.571453094482422
    9. 't' → logprob: -10.696453094482422
    10. '           ' → logprob: -10.821453094482422

Token 588: '*n' (ID: 58470)
  Prédit: '*n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*n' → logprob: -0.02760585956275463
    2. ' *' → logprob: -3.9026057720184326
    3. '*' → logprob: -5.277606010437012
    4. '*k' → logprob: -6.527606010437012
    5. 'n' → logprob: -7.777606010437012
    6. ' ' → logprob: -11.777606010437012
    7. ' n' → logprob: -12.027606010437012
    8. '*num' → logprob: -12.152606010437012
    9. '*i' → logprob: -12.277606010437012
    10. '*s' → logprob: -12.777606010437012

Token 589: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.4016191065311432
    2. '-' → logprob: -1.1516190767288208
    3. '*' → logprob: -4.776618957519531
    4. ' *' → logprob: -6.401618957519531
    5. ')' → logprob: -6.651618957519531
    6. '*k' → logprob: -6.776618957519531
    7. '-k' → logprob: -6.901618957519531
    8. ' ' → logprob: -7.401618957519531
    9. '*s' → logprob: -9.776618957519531
    10. '#' → logprob: -10.026618957519531

Token 590: ' k' (ID: 372)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5259324312210083
    2. 'k' → logprob: -0.9009324312210083
    3. '(k' → logprob: -6.650932312011719
    4. ' k' → logprob: -7.275932312011719
    5. '(' → logprob: -7.775932312011719
    6. ' ' → logprob: -8.025932312011719
    7. ' (' → logprob: -10.275932312011719
    8. '   ' → logprob: -11.150932312011719
    9. '{k' → logprob: -12.025932312011719
    10. 'n' → logprob: -13.275932312011719

Token 591: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.812612771987915
    2. ' -' → logprob: -0.937612771987915
    3. ')' → logprob: -1.937612771987915
    4. '2' → logprob: -4.437612533569336
    5. ' ' → logprob: -5.812612533569336
    6. '*' → logprob: -6.562612533569336
    7. '1' → logprob: -6.562612533569336
    8. ']' → logprob: -7.687612533569336
    9. '<|end|>' → logprob: -7.812612533569336
    10. ' )' → logprob: -7.937612533569336

Token 592: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.576873758807778e-05
    2. ' ' → logprob: -9.500075340270996
    3. '   ' → logprob: -14.750075340270996
    4. '2' → logprob: -15.250075340270996
    5. '```' → logprob: -15.500075340270996
    6. '  ' → logprob: -17.875076293945312
    7. '       ' → logprob: -17.875076293945312
    8. '-' → logprob: -18.000076293945312
    9. '           ' → logprob: -18.312576293945312
    10. '...' → logprob: -19.000076293945312

Token 593: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.125001907348633
    3. '2' → logprob: -16.125001907348633
    4. '```' → logprob: -16.875001907348633
    5. '   ' → logprob: -17.250001907348633
    6. '۱' → logprob: -17.875001907348633
    7. '１' → logprob: -18.750001907348633
    8. '-' → logprob: -18.875001907348633
    9. '१' → logprob: -18.937501907348633
    10. '...' → logprob: -19.062501907348633

Token 594: ' calculates' (ID: 101920)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.008394359610974789
    2. ')' → logprob: -5.133394241333008
    3. ' ]' → logprob: -6.883394241333008
    4. ')]' → logprob: -7.508394241333008
    5. ']
' → logprob: -8.258394241333008
    6. '<|end|>' → logprob: -8.258394241333008
    7. ' -' → logprob: -9.133394241333008
    8. '])' → logprob: -9.508394241333008
    9. '-' → logprob: -9.883394241333008
    10. ' )' → logprob: -10.883394241333008

Token 595: ' the' (ID: 290)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.39379698038101196
    2. 's' → logprob: -2.143796920776367
    3. ' the' → logprob: -2.393796920776367
    4. 'the' → logprob: -2.643796920776367
    5. '(' → logprob: -4.018796920776367
    6. ' ' → logprob: -4.643796920776367
    7. ' s' → logprob: -4.893796920776367
    8. ' (' → logprob: -5.768796920776367
    9. 'len' → logprob: -6.018796920776367
    10. ')' → logprob: -6.893796920776367

Token 596: ' mirrored' (ID: 136208)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'position' → logprob: -1.0403693914413452
    2. 'index' → logprob: -1.2903693914413452
    3. ' position' → logprob: -2.2903695106506348
    4. ' index' → logprob: -2.4153695106506348
    5. '2' → logprob: -3.1653695106506348
    6. ' opposite' → logprob: -3.7903695106506348
    7. 'op' → logprob: -4.040369510650635
    8. '(' → logprob: -4.290369510650635
    9. 's' → logprob: -4.540369510650635
    10. 'k' → logprob: -4.540369510650635

Token 597: ' index' (ID: 3472)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.5374155640602112
    2. ' position' → logprob: -1.6624155044555664
    3. 'index' → logprob: -2.1624155044555664
    4. '<|end|>' → logprob: -2.6624155044555664
    5. ' index' → logprob: -4.162415504455566
    6. ')' → logprob: -4.287415504455566
    7. 's' → logprob: -5.287415504455566
    8. 'token' → logprob: -6.537415504455566
    9. ']' → logprob: -6.662415504455566
    10. 'positions' → logprob: -7.162415504455566

Token 598: '
' (ID: 198)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.477405846118927
    2. '               ' → logprob: -2.1024057865142822
    3. '[temp' → logprob: -2.8524057865142822
    4. ' temp' → logprob: -3.1024057865142822
    5. ']' → logprob: -3.2274057865142822
    6. '           ' → logprob: -3.4774057865142822
    7. '<|end|>' → logprob: -3.4774057865142822
    8. '       ' → logprob: -3.6024057865142822
    9. ')' → logprob: -4.352406024932861
    10. '(temp' → logprob: -6.227406024932861

Token 599: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3309842050075531
    2. '       ' → logprob: -2.080984115600586
    3. ')' → logprob: -2.705984115600586
    4. '           ' → logprob: -3.205984115600586
    5. '[temp' → logprob: -4.330984115600586
    6. 'temp' → logprob: -4.830984115600586
    7. '<|end|>' → logprob: -4.830984115600586
    8. '                   ' → logprob: -5.330984115600586
    9. ']' → logprob: -5.705984115600586
    10. '[' → logprob: -5.830984115600586

Token 600: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' (adapté à ' temp') → logprob: -0.395193874835968
    2. ' temp' → logprob: -1.5201938152313232
    3. 's' → logprob: -2.6451938152313232
    4. ' s' → logprob: -3.7701938152313232
    5. '               ' → logprob: -5.145194053649902
    6. ')' → logprob: -6.145194053649902
    7. '           ' → logprob: -6.395194053649902
    8. '                   ' → logprob: -6.520194053649902
    9. '   ' → logprob: -7.395194053649902
    10. '<|end|>' → logprob: -7.770194053649902

Token 601: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00038300611777231097
    2. '1' → logprob: -7.875382900238037
    3. '```' → logprob: -13.125383377075195
    4. 's' → logprob: -15.062883377075195
    5. ' ' → logprob: -16.000383377075195
    6. '_' → logprob: -16.500383377075195
    7. '۲' → logprob: -17.125383377075195
    8. '   ' → logprob: -17.125383377075195
    9. '₂' → logprob: -17.125383377075195
    10. '２' → logprob: -17.562883377075195

Token 602: '[cnt' (ID: 157792)
  Prédit: '[cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[cnt' → logprob: -8.160971628967673e-05
    2. '[' → logprob: -9.500082015991211
    3. '[count' → logprob: -12.500082015991211
    4. '[counter' → logprob: -13.500082015991211
    5. ' [' → logprob: -14.625082015991211
    6. '[
' → logprob: -14.750082015991211
    7. '[c' → logprob: -15.125082015991211
    8. 'cnt' → logprob: -16.00008201599121
    9. '(cnt' → logprob: -16.25008201599121
    10. '[curr' → logprob: -16.50008201599121

Token 603: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.004081959370523691
    2. '1' → logprob: -5.504081726074219
    3. '```' → logprob: -13.254081726074219
    4. '0' → logprob: -14.129081726074219
    5. '₂' → logprob: -15.754081726074219
    6. ']' → logprob: -15.941581726074219
    7. '۲' → logprob: -16.00408172607422
    8. '   ' → logprob: -16.19158172607422
    9. '<|end|>' → logprob: -16.75408172607422
    10. '২' → logprob: -17.00408172607422

Token 604: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00689842039719224
    2. '=' → logprob: -5.131898403167725
    3. ']=' → logprob: -7.381898403167725
    4. ' =' → logprob: -8.256898880004883
    5. ')' → logprob: -9.506898880004883
    6. ' ]' → logprob: -11.756898880004883
    7. 's' → logprob: -13.756898880004883
    8. '<|end|>' → logprob: -13.756898880004883
    9. '[' → logprob: -14.881898880004883
    10. '']' → logprob: -15.006898880004883

Token 605: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05558505654335022
    2. ' =' → logprob: -2.9305851459503174
    3. ']' → logprob: -7.305584907531738
    4. ']=' → logprob: -10.680584907531738
    5. ')' → logprob: -12.305584907531738
    6. '   ' → logprob: -13.805584907531738
    7. '=s' → logprob: -13.930584907531738
    8. ' ' → logprob: -14.555584907531738
    9. '[' → logprob: -15.180584907531738
    10. ')=' → logprob: -15.180584907531738

Token 606: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00038014890742488205
    2. ' s' → logprob: -7.875380039215088
    3. ''s' → logprob: -18.25037956237793
    4. '(s' → logprob: -18.75037956237793
    5. '	s' → logprob: -19.62537956237793
    6. '[s' → logprob: -20.00037956237793
    7. '`s' → logprob: -20.25037956237793
    8. '   ' → logprob: -21.00037956237793
    9. '_s' → logprob: -21.12537956237793
    10. '{s' → logprob: -21.12537956237793

Token 607: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.013565927743911743
    2. '2' → logprob: -4.388566017150879
    3. '(' → logprob: -7.388566017150879
    4. '[(' → logprob: -8.013566017150879
    5. '[len' → logprob: -9.638566017150879
    6. '[n' → logprob: -11.763566017150879
    7. '   ' → logprob: -11.888566017150879
    8. '[k' → logprob: -12.138566017150879
    9. ' ' → logprob: -12.263566017150879
    10. '[
' → logprob: -12.513566017150879

Token 608: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00351204932667315
    2. '(' → logprob: -5.753511905670166
    3. ' ' → logprob: -8.128512382507324
    4. ' (' → logprob: -11.753512382507324
    5. '   ' → logprob: -11.753512382507324
    6. 'len' → logprob: -11.753512382507324
    7. '  ' → logprob: -12.628512382507324
    8. '-' → logprob: -13.003512382507324
    9. '`' → logprob: -13.378512382507324
    10. '24' → logprob: -13.816012382507324

Token 609: ' *' (ID: 425)
  Prédit: '*n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*n' → logprob: -0.13670174777507782
    2. '*' → logprob: -2.136701822280884
    3. ' *' → logprob: -4.636701583862305
    4. '*num' → logprob: -11.511701583862305
    5. '*k' → logprob: -11.636701583862305
    6. 'n' → logprob: -11.761701583862305
    7. '[n' → logprob: -13.511701583862305
    8. '*N' → logprob: -13.761701583862305
    9. '*(' → logprob: -14.136701583862305
    10. '**' → logprob: -14.261701583862305

Token 610: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -8.375538163818419e-05
    2. ' n' → logprob: -9.500083923339844
    3. '*n' → logprob: -12.125083923339844
    4. ' ' → logprob: -14.000083923339844
    5. '	n' → logprob: -14.500083923339844
    6. '(n' → logprob: -14.500083923339844
    7. 'k' → logprob: -14.625083923339844
    8. '<|end|>' → logprob: -14.750083923339844
    9. ')n' → logprob: -16.000083923339844
    10. '   ' → logprob: -16.125083923339844

Token 611: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0891178771853447
    2. ' -' → logprob: -2.4641177654266357
    3. ' ' → logprob: -8.964118003845215
    4. '-k' → logprob: -10.089118003845215
    5. '   ' → logprob: -13.339118003845215
    6. ')' → logprob: -13.339118003845215
    7. '-n' → logprob: -13.339118003845215
    8. '  ' → logprob: -14.089118003845215
    9. '−' → logprob: -14.214118003845215
    10. ']' → logprob: -14.464118003845215

Token 612: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0005647073267027736
    2. ' k' → logprob: -7.5005645751953125
    3. '1' → logprob: -11.500564575195312
    4. '	k' → logprob: -14.250564575195312
    5. '   ' → logprob: -14.625564575195312
    6. ' ' → logprob: -15.000564575195312
    7. '  ' → logprob: -16.625564575195312
    8. '-k' → logprob: -17.250564575195312
    9. '{k' → logprob: -17.500564575195312
    10. '_k' → logprob: -17.875564575195312

Token 613: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.019454019144177437
    2. '1' → logprob: -4.644454002380371
    3. ' -' → logprob: -4.644454002380371
    4. ' ' → logprob: -10.394454002380371
    5. '   ' → logprob: -13.394454002380371
    6. '[' → logprob: -13.519454002380371
    7. '```' → logprob: -14.394454002380371
    8. ')' → logprob: -14.519454002380371
    9. '  ' → logprob: -15.269454002380371
    10. '<|end|>' → logprob: -15.394454002380371

Token 614: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.723352049040841e-06
    2. ' ' → logprob: -12.375004768371582
    3. '   ' → logprob: -16.000003814697266
    4. '2' → logprob: -16.250003814697266
    5. '```' → logprob: -16.875003814697266
    6. '۱' → logprob: -18.812503814697266
    7. '  ' → logprob: -18.937503814697266
    8. '11' → logprob: -19.250003814697266
    9. '' → logprob: -19.500003814697266
    10. '...' → logprob: -19.937503814697266

Token 615: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1279553291387856e-05
    2. ' ' → logprob: -11.500011444091797
    3. '```' → logprob: -15.250011444091797
    4. '2' → logprob: -15.500011444091797
    5. '   ' → logprob: -15.625011444091797
    6. '-' → logprob: -16.312511444091797
    7. '' → logprob: -16.812511444091797
    8. '۱' → logprob: -17.375011444091797
    9. '`' → logprob: -17.687511444091797
    10. '0' → logprob: -18.000011444091797

Token 616: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00020854694594163448
    2. ')' → logprob: -8.875208854675293
    3. ']
' → logprob: -10.375208854675293
    4. ')]' → logprob: -10.875208854675293
    5. ' ]' → logprob: -11.125208854675293
    6. '])' → logprob: -13.000208854675293
    7. '<|end|>' → logprob: -15.125208854675293
    8. ']

' → logprob: -15.125208854675293
    9. '       ' → logprob: -15.375208854675293
    10. '   ' → logprob: -15.875208854675293

Token 617: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04596332460641861
    2. '<|end|>' → logprob: -3.7959632873535156
    3. '```' → logprob: -4.295963287353516
    4. '           ' → logprob: -5.670963287353516
    5. '                
' → logprob: -6.920963287353516
    6. '
' → logprob: -7.170963287353516
    7. '\n' → logprob: -7.170963287353516
    8. '       ' → logprob: -7.795963287353516
    9. '                   ' → logprob: -8.170963287353516
    10. 'cnt' → logprob: -8.295963287353516

Token 618: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006917603313922882
    2. '                
' → logprob: -6.256917476654053
    3. '           ' → logprob: -6.881917476654053
    4. '```' → logprob: -6.881917476654053
    5. 'cnt' → logprob: -7.006917476654053
    6. '
' → logprob: -7.131917476654053
    7. '			' → logprob: -8.256917953491211
    8. '                   ' → logprob: -8.506917953491211
    9. '	cnt' → logprob: -9.131917953491211
    10. '[cnt' → logprob: -9.131917953491211

Token 619: ' Increment' (ID: 103223)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -1.282920129597187e-05
    2. ' cnt' → logprob: -11.625012397766113
    3. '               ' → logprob: -13.625012397766113
    4. '       ' → logprob: -13.750012397766113
    5. '           ' → logprob: -14.125012397766113
    6. '	cnt' → logprob: -14.250012397766113
    7. '   ' → logprob: -16.12501335144043
    8. '[cnt' → logprob: -16.50001335144043
    9. '(cnt' → logprob: -17.25001335144043
    10. '```' → logprob: -17.37501335144043

Token 620: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.004087305162101984
    2. ' cnt' → logprob: -5.504087448120117
    3. '(cnt' → logprob: -11.879087448120117
    4. '[cnt' → logprob: -13.629087448120117
    5. '	cnt' → logprob: -14.379087448120117
    6. 'count' → logprob: -16.129087448120117
    7. 'counter' → logprob: -16.629087448120117
    8. '_cnt' → logprob: -17.254087448120117
    9. '```' → logprob: -17.379087448120117
    10. 'ct' → logprob: -17.504087448120117

Token 621: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. '```' → logprob: -15.125000953674316
    3. '_' → logprob: -16.375
    4. '[cnt' → logprob: -17.0
    5. 'cnt' → logprob: -17.375
    6. '(cnt' → logprob: -17.875
    7. ' ' → logprob: -18.125
    8. 'f' → logprob: -18.5
    9. '``' → logprob: -19.0
    10. '
' → logprob: -19.0

Token 622: ' to' (ID: 316)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 623: ' move' (ID: 5275)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.17289066314697266
    2. '1' → logprob: -2.4228906631469727
    3. ' cnt' → logprob: -2.6728906631469727
    4. ' ' → logprob: -7.547890663146973
    5. '(cnt' → logprob: -7.797890663146973
    6. '	cnt' → logprob: -10.047890663146973
    7. '[cnt' → logprob: -10.547890663146973
    8. '0' → logprob: -11.047890663146973
    9. '+' → logprob: -11.047890663146973
    10. '```' → logprob: -12.297890663146973

Token 624: ' to' (ID: 316)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.4662629961967468
    2. '+' → logprob: -1.7162630558013916
    3. '1' → logprob: -1.7162630558013916
    4. '(cnt' → logprob: -5.5912628173828125
    5. '```' → logprob: -5.5912628173828125
    6. '++' → logprob: -6.3412628173828125
    7. '+=' → logprob: -7.0912628173828125
    8. ' cnt' → logprob: -7.0912628173828125
    9. 'counter' → logprob: -7.8412628173828125
    10. ' ' → logprob: -8.091262817382812

Token 625: ' the' (ID: 290)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.11543090641498566
    2. '1' → logprob: -2.7404308319091797
    3. ' cnt' → logprob: -4.49043083190918
    4. 'the' → logprob: -4.49043083190918
    5. ' the' → logprob: -4.61543083190918
    6. 'next' → logprob: -5.24043083190918
    7. ' next' → logprob: -6.36543083190918
    8. '(cnt' → logprob: -6.49043083190918
    9. '```' → logprob: -6.74043083190918
    10. '0' → logprob: -6.99043083190918

Token 626: ' next' (ID: 2613)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.8136914372444153
    2. 'next' → logprob: -1.0636913776397705
    3. ' next' → logprob: -1.5636913776397705
    4. ' cnt' → logprob: -6.18869161605835
    5. '(cnt' → logprob: -8.938691139221191
    6. 'Next' → logprob: -11.188691139221191
    7. '[cnt' → logprob: -11.313691139221191
    8. '1' → logprob: -12.063691139221191
    9. '	cnt' → logprob: -12.063691139221191
    10. '```' → logprob: -12.313691139221191

Token 627: ' position' (ID: 4010)
  Prédit: ' position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' position' → logprob: -0.8338305950164795
    2. 'position' → logprob: -0.8338305950164795
    3. 'index' → logprob: -2.9588305950164795
    4. ' index' → logprob: -3.8338305950164795
    5. ' slot' → logprob: -4.208830833435059
    6. 'slot' → logprob: -4.583830833435059
    7. 'cnt' → logprob: -4.833830833435059
    8. 'token' → logprob: -5.083830833435059
    9. 'counter' → logprob: -5.208830833435059
    10. '1' → logprob: -5.708830833435059

Token 628: ' from' (ID: 591)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7657574415206909
    2. '<|end|>' → logprob: -1.015757441520691
    3. '+' → logprob: -2.8907575607299805
    4. '[cnt' → logprob: -3.5157575607299805
    5. '(cnt' → logprob: -3.6407575607299805
    6. 'cnt' → logprob: -3.7657575607299805
    7. '```' → logprob: -4.0157575607299805
    8. '1' → logprob: -5.3907575607299805
    9. ' )' → logprob: -6.3907575607299805
    10. '   ' → logprob: -6.8907575607299805

Token 629: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.612923264503479
    2. ' the' → logprob: -0.862923264503479
    3. '1' → logprob: -4.1129231452941895
    4. 'start' → logprob: -4.7379231452941895
    5. '0' → logprob: -5.3629231452941895
    6. 'left' → logprob: -5.4879231452941895
    7. '+' → logprob: -6.4879231452941895
    8. ' ' → logprob: -8.112923622131348
    9. ' start' → logprob: -8.987923622131348
    10. 'cnt' → logprob: -8.987923622131348

Token 630: ' start' (ID: 1604)
  Prédit: 'begin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'begin' → logprob: -0.6268979907035828
    2. 'start' → logprob: -1.2518980503082275
    3. 'left' → logprob: -2.5018980503082275
    4. '0' → logprob: -3.3768980503082275
    5. 'front' → logprob: -3.6268980503082275
    6. ' front' → logprob: -3.8768980503082275
    7. ' beginning' → logprob: -4.501897811889648
    8. ' start' → logprob: -6.126897811889648
    9. '1' → logprob: -7.251897811889648
    10. 'right' → logprob: -7.376897811889648

Token 631: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23691700398921967
    2. '<|end|>' → logprob: -2.486917018890381
    3. '           ' → logprob: -3.361917018890381
    4. '   ' → logprob: -4.111917018890381
    5. '```' → logprob: -4.236917018890381
    6. '+' → logprob: -4.361917018890381
    7. '               ' → logprob: -4.486917018890381
    8. '\n' → logprob: -5.111917018890381
    9. ')' → logprob: -5.361917018890381
    10. '[cnt' → logprob: -5.486917018890381

Token 632: '               ' (ID: 506)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.3835100531578064
    2. '       ' → logprob: -2.133510112762451
    3. '           ' → logprob: -2.758510112762451
    4. '               ' → logprob: -3.383510112762451
    5. '+' → logprob: -3.883510112762451
    6. '[cnt' → logprob: -4.133510112762451
    7. '```' → logprob: -4.258510112762451
    8. '   ' → logprob: -4.633510112762451
    9. ' cnt' → logprob: -4.758510112762451
    10. '\n' → logprob: -5.133510112762451

Token 633: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -0.0039017191156744957
    2. ' cnt' → logprob: -6.003901481628418
    3. '           ' → logprob: -6.878901481628418
    4. '               ' → logprob: -8.128901481628418
    5. '   ' → logprob: -9.878901481628418
    6. '       ' → logprob: -10.253901481628418
    7. '	cnt' → logprob: -12.253901481628418
    8. '                   ' → logprob: -13.003901481628418
    9. '[cnt' → logprob: -13.003901481628418
    10. '```' → logprob: -13.503901481628418

Token 634: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '_' → logprob: -18.125
    3. '=' → logprob: -20.25
    4. '   ' → logprob: -20.375
    5. '' → logprob: -20.625
    6. ' ' → logprob: -20.75
    7. '+' → logprob: -20.875
    8. '```' → logprob: -20.875
    9. '+=' → logprob: -21.0
    10. '１' → logprob: -21.75

Token 635: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0031804447062313557
    2. ' +=' → logprob: -5.753180503845215
    3. '=' → logprob: -13.503180503845215
    4. '+' → logprob: -13.628180503845215
    5. ']+=' → logprob: -16.1281795501709
    6. '+="' → logprob: -19.5031795501709
    7. '+='' → logprob: -19.5031795501709
    8. ')' → logprob: -19.7531795501709
    9. '```' → logprob: -20.0031795501709
    10. '+=(' → logprob: -20.0031795501709

Token 636: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.125
    3. '```' → logprob: -20.875
    4. '   ' → logprob: -21.5
    5. '۱' → logprob: -23.0
    6. '१' → logprob: -23.5
    7. '１' → logprob: -23.625
    8. '১' → logprob: -23.75
    9. '0' → logprob: -24.25
    10. '
' → logprob: -24.6875

Token 637: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.375
    3. '```' → logprob: -21.5
    4. '   ' → logprob: -22.125
    5. '0' → logprob: -22.125
    6. '۱' → logprob: -23.125
    7. '１' → logprob: -23.375
    8. '01' → logprob: -23.625
    9. '2' → logprob: -23.875
    10. '१' → logprob: -24.0

Token 638: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4380005896091461
    2. '<|end|>' → logprob: -1.3130005598068237
    3. '           ' → logprob: -2.5630006790161133
    4. '	       ' → logprob: -6.688000679016113
    5. '<|end|>' → logprob: -6.688000679016113
    6. '	' → logprob: -7.063000679016113
    7. '   ' → logprob: -7.188000679016113
    8. '```' → logprob: -7.313000679016113
    9. '​' → logprob: -7.563000679016113
    10. ' ' → logprob: -7.938000679016113

Token 639: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5435280799865723
    2. '       ' → logprob: -0.9185280799865723
    3. '<|end|>' → logprob: -4.918528079986572
    4. '		' → logprob: -5.918528079986572
    5. '	       ' → logprob: -6.168528079986572
    6. '        ' → logprob: -6.293528079986572
    7. '	' → logprob: -6.793528079986572
    8. '​' → logprob: -7.043528079986572
    9. '```' → logprob: -7.168528079986572
    10. '               ' → logprob: -7.293528079986572

Token 640: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.6598111391067505
    2. 'else' (adapté à ' else') → logprob: -1.1598111391067505
    3. '           ' → logprob: -1.7848111391067505
    4. '	       ' → logprob: -8.034811019897461
    5. '       ' → logprob: -8.159811019897461
    6. '	else' → logprob: -8.159811019897461
    7. '		' → logprob: -8.534811019897461
    8. ' ' → logprob: -8.659811019897461
    9. '```' → logprob: -8.909811019897461
    10. ' ' → logprob: -9.034811019897461

Token 641: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4826103448867798
    2. '           ' → logprob: -1.4826103448867798
    3. ':' → logprob: -2.3576102256774902
    4. ':
' → logprob: -2.9826102256774902
    5. '#' → logprob: -5.60761022567749
    6. '       ' → logprob: -5.85761022567749
    7. '```' → logprob: -6.85761022567749
    8. '[' → logprob: -6.98261022567749
    9. '{' → logprob: -8.107610702514648
    10. '   ' → logprob: -8.357610702514648

Token 642: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.014377507381141186
    2. '           ' → logprob: -5.014377593994141
    3. '#' → logprob: -6.139377593994141
    4. '       ' → logprob: -6.639377593994141
    5. ' #' → logprob: -6.639377593994141
    6. '```' → logprob: -7.014377593994141
    7. ' temp' → logprob: -7.139377593994141
    8. 'temp' → logprob: -7.514377593994141
    9. '[' → logprob: -8.88937759399414
    10. '              ' → logprob: -8.88937759399414

Token 643: ' #' (ID: 1069)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.08146459609270096
    2. '               ' → logprob: -2.7064645290374756
    3. ' temp' → logprob: -5.206464767456055
    4. '           ' → logprob: -5.206464767456055
    5. '#' (adapté à ' #') → logprob: -8.331464767456055
    6. '       ' → logprob: -9.081464767456055
    7. '```' → logprob: -9.581464767456055
    8. '[temp' → logprob: -10.706464767456055
    9. '   ' → logprob: -10.831464767456055
    10. '	temp' → logprob: -11.956464767456055

Token 644: ' Place' (ID: 16303)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.06500187516212463
    2. ' temp' → logprob: -2.815001964569092
    3. '               ' → logprob: -5.815001964569092
    4. '           ' → logprob: -10.690001487731934
    5. '```' → logprob: -10.940001487731934
    6. '       ' → logprob: -13.440001487731934
    7. '[temp' → logprob: -13.815001487731934
    8. '   ' → logprob: -13.940001487731934
    9. '	temp' → logprob: -13.940001487731934
    10. '#' → logprob: -14.190001487731934

Token 645: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.20091430842876434
    2. 'the' → logprob: -1.8259142637252808
    3. 'temp' → logprob: -4.70091438293457
    4. ' temp' → logprob: -5.20091438293457
    5. 's' → logprob: -5.32591438293457
    6. ' s' → logprob: -6.70091438293457
    7. '               ' → logprob: -9.45091438293457
    8. '(temp' → logprob: -10.07591438293457
    9. '           ' → logprob: -10.45091438293457
    10. '[temp' → logprob: -10.82591438293457

Token 646: ' character' (ID: 5855)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.9540930390357971
    2. 's' → logprob: -1.3290929794311523
    3. 'character' → logprob: -1.8290929794311523
    4. ' character' → logprob: -1.9540929794311523
    5. ' s' → logprob: -3.7040929794311523
    6. ' temp' → logprob: -3.8290929794311523
    7. 'char' → logprob: -6.954092979431152
    8. 'token' → logprob: -8.204092979431152
    9. ' code' → logprob: -10.204092979431152
    10. 'code' → logprob: -10.579092979431152

Token 647: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.16423805058002472
    2. ' from' → logprob: -1.9142380952835083
    3. 's' → logprob: -6.039237976074219
    4. ' s' → logprob: -6.789237976074219
    5. ' at' → logprob: -8.289237976074219
    6. ' in' → logprob: -9.539237976074219
    7. '```' → logprob: -10.164237976074219
    8. '(s' → logprob: -10.789237976074219
    9. 'From' → logprob: -10.914237976074219
    10. 'temp' → logprob: -11.539237976074219

Token 648: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.01589018851518631
    2. ' s' → logprob: -4.390890121459961
    3. 'temp' → logprob: -5.765890121459961
    4. ' temp' → logprob: -8.390890121459961
    5. '```' → logprob: -12.390890121459961
    6. ' the' → logprob: -13.140890121459961
    7. '(s' → logprob: -13.390890121459961
    8. 'the' → logprob: -13.515890121459961
    9. '[temp' → logprob: -13.765890121459961
    10. '<|end|>' → logprob: -14.515890121459961

Token 649: ' at' (ID: 540)
  Prédit: '[cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[cnt' → logprob: -0.9203951358795166
    2. '[k' → logprob: -1.1703951358795166
    3. ' at' → logprob: -1.5453951358795166
    4. 'at' → logprob: -3.0453951358795166
    5. '[' → logprob: -3.7953951358795166
    6. '[temp' → logprob: -5.2953948974609375
    7. '```' → logprob: -7.0453948974609375
    8. 'k' → logprob: -7.6703948974609375
    9. 's' → logprob: -7.6703948974609375
    10. '[count' → logprob: -8.045394897460938

Token 650: ' position' (ID: 4010)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.00025871701654978096
    2. 'position' → logprob: -9.125258445739746
    3. 'index' → logprob: -9.750258445739746
    4. ' k' → logprob: -10.500258445739746
    5. 's' → logprob: -11.250258445739746
    6. 'the' → logprob: -11.375258445739746
    7. '2' → logprob: -11.375258445739746
    8. '[k' → logprob: -11.625258445739746
    9. 'temp' → logprob: -12.125258445739746
    10. 'n' → logprob: -12.750258445739746

Token 651: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0010487660765647888
    2. ' k' → logprob: -6.876048564910889
    3. 'cnt' → logprob: -11.501049041748047
    4. '[k' → logprob: -14.001049041748047
    5. 'temp' → logprob: -14.376049041748047
    6. '           ' → logprob: -14.376049041748047
    7. '{k' → logprob: -14.376049041748047
    8. '               ' → logprob: -14.626049041748047
    9. ' cnt' → logprob: -14.751049041748047
    10. ' ' → logprob: -15.251049041748047

Token 652: ' into' (ID: 1511)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -1.0283175706863403
    2. ' into' → logprob: -1.5283175706863403
    3. 'into' → logprob: -1.9033175706863403
    4. '               ' → logprob: -2.028317451477051
    5. '```' → logprob: -3.278317451477051
    6. 'at' → logprob: -3.653317451477051
    7. '[cnt' → logprob: -4.028317451477051
    8. 'in' → logprob: -4.028317451477051
    9. 'temp' → logprob: -4.653317451477051
    10. '[temp' → logprob: -4.778317451477051

Token 653: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -2.1888679839321412e-05
    2. ' temp' → logprob: -11.000021934509277
    3. 's' → logprob: -12.250021934509277
    4. '(temp' → logprob: -15.875021934509277
    5. '[temp' → logprob: -16.12502098083496
    6. 'tmp' → logprob: -16.75002098083496
    7. '	temp' → logprob: -16.87502098083496
    8. '```' → logprob: -17.25002098083496
    9. 't' → logprob: -18.25002098083496
    10. 'd' → logprob: -18.87502098083496

Token 654: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.029781268909573555
    2. '1' → logprob: -3.5297813415527344
    3. 'temp' → logprob: -10.654781341552734
    4. 'else' → logprob: -12.529781341552734
    5. '```' → logprob: -13.654781341552734
    6. 's' → logprob: -13.779781341552734
    7. '[temp' → logprob: -14.654781341552734
    8. '[' → logprob: -15.654781341552734
    9. '   ' → logprob: -15.779781341552734
    10. '_temp' → logprob: -16.154781341552734

Token 655: ' at' (ID: 540)
  Prédit: '[cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[cnt' → logprob: -0.0004892880679108202
    2. 'cnt' → logprob: -8.125489234924316
    3. '[temp' → logprob: -9.375489234924316
    4. '[count' → logprob: -10.000489234924316
    5. '[' → logprob: -11.000489234924316
    6. '```' → logprob: -11.125489234924316
    7. 'temp' → logprob: -11.750489234924316
    8. '[counter' → logprob: -11.875489234924316
    9. '(cnt' → logprob: -12.625489234924316
    10. 'else' → logprob: -12.750489234924316

Token 656: ' index' (ID: 3472)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.00256602605804801
    2. 'temp' → logprob: -6.002565860748291
    3. '[cnt' → logprob: -10.00256633758545
    4. ' cnt' → logprob: -10.62756633758545
    5. '```' → logprob: -11.87756633758545
    6. '`' → logprob: -12.25256633758545
    7. '(cnt' → logprob: -12.75256633758545
    8. '	cnt' → logprob: -13.75256633758545
    9. 'the' → logprob: -13.87756633758545
    10. '   ' → logprob: -13.87756633758545

Token 657: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.0001761272142175585
    2. ' cnt' → logprob: -9.375176429748535
    3. '[cnt' → logprob: -9.625176429748535
    4. '(cnt' → logprob: -11.250176429748535
    5. '```' → logprob: -12.750176429748535
    6. '`' → logprob: -12.750176429748535
    7. '   ' → logprob: -13.000176429748535
    8. '	cnt' → logprob: -13.250176429748535
    9. '2' → logprob: -14.500176429748535
    10. 'ct' → logprob: -14.750176429748535

Token 658: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0005550591740757227
    2. '1' → logprob: -7.500555038452148
    3. '```' → logprob: -14.250555038452148
    4. '   ' → logprob: -14.625555038452148
    5. 'else' → logprob: -15.125555038452148
    6. '_' → logprob: -15.500555038452148
    7. '0' → logprob: -16.12555503845215
    8. ' ' → logprob: -16.62555503845215
    9. '`' → logprob: -17.12555503845215
    10. '       ' → logprob: -17.43805503845215

Token 659: ' (' (ID: 350)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4104905426502228
    2. '[temp' → logprob: -1.6604905128479004
    3. '```' → logprob: -2.4104905128479004
    4. 'temp' → logprob: -4.1604905128479
    5. '[cnt' → logprob: -4.2854905128479
    6. ' =' → logprob: -5.0354905128479
    7. '                   ' → logprob: -5.0354905128479
    8. ' temp' → logprob: -5.5354905128479
    9. '                ' → logprob: -6.4104905128479
    10. '=temp' → logprob: -6.4104905128479

Token 660: 'from' (ID: 2845)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.46701574325561523
    2. ' cnt' → logprob: -1.0920157432556152
    3. '               ' → logprob: -3.7170157432556152
    4. 'temp' → logprob: -4.592015743255615
    5. ' temp' → logprob: -6.717015743255615
    6. '[cnt' → logprob: -6.967015743255615
    7. '(cnt' → logprob: -7.842015743255615
    8. '```' → logprob: -8.842016220092773
    9. 'cont' → logprob: -9.092016220092773
    10. '                   ' → logprob: -9.717016220092773

Token 661: ' end' (ID: 1268)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.00048477304517291486
    2. ' cnt' → logprob: -8.375484466552734
    3. 'the' → logprob: -9.125484466552734
    4. '[cnt' → logprob: -9.750484466552734
    5. '(cnt' → logprob: -10.000484466552734
    6. 'end' → logprob: -10.500484466552734
    7. 'temp' → logprob: -12.000484466552734
    8. '```' → logprob: -12.750484466552734
    9. '	cnt' → logprob: -13.125484466552734
    10. '`' → logprob: -13.875484466552734

Token 662: ')
' (ID: 446)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07512343674898148
    2. ')' → logprob: -3.7001235485076904
    3. '```' → logprob: -3.7001235485076904
    4. '<|end|>' → logprob: -4.575123310089111
    5. ']' → logprob: -4.950123310089111
    6. '           ' → logprob: -6.575123310089111
    7. 'temp' → logprob: -7.200123310089111
    8. '                ' → logprob: -7.325123310089111
    9. '                   ' → logprob: -7.700123310089111
    10. '                
' → logprob: -8.07512378692627

Token 663: '               ' (ID: 506)
  Prédit: ' temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' temp' → logprob: -0.4173547625541687
    2. 'temp' → logprob: -1.5423548221588135
    3. '               ' → logprob: -2.2923548221588135
    4. '```' → logprob: -4.667354583740234
    5. '[temp' → logprob: -5.417354583740234
    6. '           ' → logprob: -5.792354583740234
    7. '(temp' → logprob: -6.042354583740234
    8. '                   ' → logprob: -6.167354583740234
    9. '=temp' → logprob: -6.542354583740234
    10. '`' → logprob: -7.417354583740234

Token 664: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' (adapté à ' temp') → logprob: -0.06215052306652069
    2. ' temp' → logprob: -2.812150478363037
    3. '               ' → logprob: -9.562150955200195
    4. '           ' → logprob: -9.812150955200195
    5. '```' → logprob: -10.437150955200195
    6. '[temp' → logprob: -11.937150955200195
    7. '	temp' → logprob: -12.687150955200195
    8. 's' → logprob: -12.812150955200195
    9. '(temp' → logprob: -12.812150955200195
    10. '       ' → logprob: -12.812150955200195

Token 665: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00033581978641450405
    2. '1' → logprob: -8.000335693359375
    3. '```' → logprob: -15.000335693359375
    4. ' ' → logprob: -17.875335693359375
    5. '₂' → logprob: -18.250335693359375
    6. '۲' → logprob: -18.375335693359375
    7. '   ' → logprob: -18.875335693359375
    8. '[' → logprob: -18.875335693359375
    9. '_' → logprob: -18.875335693359375
    10. '
' → logprob: -19.812835693359375

Token 666: '[cnt' (ID: 157792)
  Prédit: '[cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[cnt' → logprob: -2.2723104848410003e-05
    2. '[' → logprob: -11.250022888183594
    3. '[count' → logprob: -11.750022888183594
    4. '[counter' → logprob: -13.875022888183594
    5. 'cnt' → logprob: -15.000022888183594
    6. '[
' → logprob: -15.500022888183594
    7. '```' → logprob: -16.000022888183594
    8. '(cnt' → logprob: -16.250022888183594
    9. '[curr' → logprob: -16.375022888183594
    10. '	cnt' → logprob: -17.000022888183594

Token 667: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.001685412833467126
    2. 'cnt' → logprob: -7.126685619354248
    3. '[cnt' → logprob: -7.251685619354248
    4. '   ' → logprob: -9.50168514251709
    5. '```' → logprob: -10.87668514251709
    6. '       ' → logprob: -11.50168514251709
    7. '(cnt' → logprob: -11.75168514251709
    8. '[' → logprob: -11.75168514251709
    9. '           ' → logprob: -12.12668514251709
    10. '               ' → logprob: -12.12668514251709

Token 668: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00042923877481371164
    2. ']=' → logprob: -8.375429153442383
    3. '=' → logprob: -9.375429153442383
    4. ' ]' → logprob: -9.625429153442383
    5. ' =' → logprob: -10.125429153442383
    6. ')' → logprob: -11.875429153442383
    7. '```' → logprob: -15.500429153442383
    8. '[' → logprob: -15.875429153442383
    9. '`]' → logprob: -16.250429153442383
    10. ')]' → logprob: -16.375429153442383

Token 669: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6932468414306641
    2. ' =' → logprob: -0.6932468414306641
    3. ']' → logprob: -9.568246841430664
    4. ')' → logprob: -10.818246841430664
    5. '=s' → logprob: -12.568246841430664
    6. ']=' → logprob: -12.568246841430664
    7. ' ' → logprob: -14.068246841430664
    8. '=k' → logprob: -14.943246841430664
    9. ')=' → logprob: -15.443246841430664
    10. '=
' → logprob: -15.443246841430664

Token 670: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.001170225441455841
    2. ' s' → logprob: -6.7511701583862305
    3. '(s' → logprob: -19.001171112060547
    4. ''s' → logprob: -19.126171112060547
    5. '`s' → logprob: -19.251171112060547
    6. '_s' → logprob: -20.001171112060547
    7. '	s' → logprob: -20.001171112060547
    8. ' ' → logprob: -20.376171112060547
    9. '   ' → logprob: -20.751171112060547
    10. '[s' → logprob: -20.751171112060547

Token 671: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -15.375
    3. 'k' → logprob: -16.25
    4. '(k' → logprob: -17.125
    5. '```' → logprob: -17.25
    6. ' [' → logprob: -17.375
    7. '[s' → logprob: -17.75
    8. '{k' → logprob: -18.0
    9. ' k' → logprob: -19.375
    10. '   ' → logprob: -19.75

Token 672: ']
' (ID: 1592)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.45340004563331604
    2. ')' → logprob: -1.0784000158309937
    3. ']' → logprob: -4.203400135040283
    4. '<|end|>' → logprob: -5.328400135040283
    5. '           ' → logprob: -5.953400135040283
    6. ')
' → logprob: -6.703400135040283
    7. '                ' → logprob: -8.828399658203125
    8. '```' → logprob: -9.203399658203125
    9. '       ' → logprob: -9.328399658203125
    10. '                   ' → logprob: -9.453399658203125

Token 673: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03678671643137932
    2. '```' → logprob: -3.7867867946624756
    3. '           ' → logprob: -4.4117865562438965
    4. '<|end|>' → logprob: -8.036787033081055
    5. '       ' → logprob: -8.286787033081055
    6. '              ' → logprob: -8.536787033081055
    7. '``' → logprob: -8.911787033081055
    8. '                
' → logprob: -9.036787033081055
    9. '                ' → logprob: -9.786787033081055
    10. '                   ' → logprob: -9.911787033081055

Token 674: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.259080708026886
    2. 'cnt' → logprob: -1.5090806484222412
    3. '           ' → logprob: -5.50908088684082
    4. '```' → logprob: -6.38408088684082
    5. 'temp' → logprob: -7.38408088684082
    6. ' cnt' → logprob: -8.13408088684082
    7. '[cnt' → logprob: -9.38408088684082
    8. '	cnt' → logprob: -9.63408088684082
    9. '                   ' → logprob: -9.75908088684082
    10. '   ' → logprob: -9.75908088684082

Token 675: ' Similarly' (ID: 65037)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temp' → logprob: -5.264322317088954e-05
    2. '               ' → logprob: -10.625052452087402
    3. ' temp' → logprob: -10.750052452087402
    4. '           ' → logprob: -12.000052452087402
    5. '       ' → logprob: -15.000052452087402
    6. '	temp' → logprob: -16.12505340576172
    7. '                   ' → logprob: -16.62505340576172
    8. '(temp' → logprob: -16.87505340576172
    9. '   ' → logprob: -17.12505340576172
    10. '[temp' → logprob: -17.12505340576172

Token 676: ' for' (ID: 395)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.009374706074595451
    2. ' temp' → logprob: -4.884374618530273
    3. '               ' → logprob: -6.509374618530273
    4. '           ' → logprob: -8.259374618530273
    5. '       ' → logprob: -12.009374618530273
    6. '```' → logprob: -12.884374618530273
    7. '	temp' → logprob: -12.884374618530273
    8. '   ' → logprob: -13.009374618530273
    9. '                   ' → logprob: -13.009374618530273
    10. '[temp' → logprob: -13.884374618530273

Token 677: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -6.630610641877865e-06
    2. ' temp' → logprob: -12.000006675720215
    3. 'tmp' → logprob: -15.500006675720215
    4. '           ' → logprob: -16.5000057220459
    5. '               ' → logprob: -16.8750057220459
    6. '```' → logprob: -16.8750057220459
    7. '	temp' → logprob: -17.1250057220459
    8. '(temp' → logprob: -17.8750057220459
    9. '[temp' → logprob: -17.8750057220459
    10. 'd' → logprob: -18.0000057220459

Token 678: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.889424836728722e-05
    2. 'temp' → logprob: -9.250099182128906
    3. '```' → logprob: -13.125099182128906
    4. 'tmp' → logprob: -15.875099182128906
    5. 't' → logprob: -16.000099182128906
    6. '   ' → logprob: -16.125099182128906
    7. 'cnt' → logprob: -17.125099182128906
    8. '``' → logprob: -17.125099182128906
    9. '[temp' → logprob: -17.375099182128906
    10. '₂' → logprob: -17.625099182128906

Token 679: ',' (ID: 11)
  Prédit: '[temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[temp' → logprob: -0.43007221817970276
    2. '[cnt' → logprob: -1.1800721883773804
    3. 'temp' → logprob: -3.18007230758667
    4. '```' → logprob: -7.43007230758667
    5. 'cnt' → logprob: -10.055071830749512
    6. ' temp' → logprob: -11.305071830749512
    7. '[count' → logprob: -11.555071830749512
    8. '[' → logprob: -11.930071830749512
    9. '               ' → logprob: -11.930071830749512
    10. '	temp' → logprob: -11.930071830749512

Token 680: ' but' (ID: 889)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.00038384052459150553
    2. ' temp' → logprob: -8.000383377075195
    3. '           ' → logprob: -10.125383377075195
    4. '               ' → logprob: -12.000383377075195
    5. '       ' → logprob: -13.875383377075195
    6. '	temp' → logprob: -14.750383377075195
    7. '[temp' → logprob: -15.375383377075195
    8. '                   ' → logprob: -15.625383377075195
    9. '```' → logprob: -16.250383377075195
    10. '(temp' → logprob: -16.625383377075195

Token 681: ' mirrored' (ID: 136208)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.012716713361442089
    2. ' temp' → logprob: -4.387716770172119
    3. '               ' → logprob: -8.887716293334961
    4. '           ' → logprob: -10.262716293334961
    5. '```' → logprob: -11.137716293334961
    6. '[temp' → logprob: -11.637716293334961
    7. '	temp' → logprob: -12.762716293334961
    8. '                   ' → logprob: -12.887716293334961
    9. '       ' → logprob: -13.887716293334961
    10. '                ' → logprob: -14.512716293334961

Token 682: ' index' (ID: 3472)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.6054997444152832
    2. '[cnt' → logprob: -1.1054997444152832
    3. '[temp' → logprob: -2.105499744415283
    4. 'cnt' → logprob: -6.855499744415283
    5. '```' → logprob: -8.855499267578125
    6. ' temp' → logprob: -9.605499267578125
    7. '[' → logprob: -10.105499267578125
    8. '[count' → logprob: -10.355499267578125
    9. '[counter' → logprob: -11.480499267578125
    10. 'tmp' → logprob: -12.730499267578125

Token 683: '
' (ID: 198)
  Prédit: '[cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[cnt' → logprob: -0.013265405781567097
    2. 'temp' → logprob: -4.888265609741211
    3. '[temp' → logprob: -5.263265609741211
    4. '```' → logprob: -8.388265609741211
    5. 'cnt' → logprob: -9.263265609741211
    6. '               ' → logprob: -9.638265609741211
    7. '[' → logprob: -10.638265609741211
    8. '[count' → logprob: -11.263265609741211
    9. '           ' → logprob: -11.763265609741211
    10. '       ' → logprob: -12.013265609741211

Token 684: '               ' (ID: 506)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.2950851023197174
    2. '               ' → logprob: -1.545085072517395
    3. '```' → logprob: -3.7950851917266846
    4. '[temp' → logprob: -5.4200849533081055
    5. '[cnt' → logprob: -5.4200849533081055
    6. ' temp' → logprob: -5.6700849533081055
    7. 'cnt' → logprob: -5.9200849533081055
    8. '           ' → logprob: -6.4200849533081055
    9. '                   ' → logprob: -6.6700849533081055
    10. '``' → logprob: -7.5450849533081055

Token 685: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' (adapté à ' temp') → logprob: -4.246537173457909e-06
    2. ' temp' → logprob: -12.875003814697266
    3. '```' → logprob: -14.250003814697266
    4. '           ' → logprob: -14.375003814697266
    5. '               ' → logprob: -15.750003814697266
    6. '	temp' → logprob: -16.250003814697266
    7. '   ' → logprob: -16.625003814697266
    8. '       ' → logprob: -16.875003814697266
    9. '                   ' → logprob: -17.125003814697266
    10. 'tmp' → logprob: -17.625003814697266

Token 686: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. '```' → logprob: -16.0
    3. '[' → logprob: -17.25
    4. '[cnt' → logprob: -18.0
    5. '_' → logprob: -18.75
    6. '₂' → logprob: -19.0
    7. '   ' → logprob: -19.125
    8. '۲' → logprob: -19.375
    9. 'cnt' → logprob: -19.625
    10. ' ' → logprob: -19.875

Token 687: '[cnt' (ID: 157792)
  Prédit: '[cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[cnt' → logprob: -3.8889261304575484e-06
    2. 'cnt' → logprob: -12.875003814697266
    3. '[' → logprob: -14.000003814697266
    4. '(cnt' → logprob: -15.750003814697266
    5. '[counter' → logprob: -16.125003814697266
    6. '	cnt' → logprob: -17.000003814697266
    7. '[curr' → logprob: -17.125003814697266
    8. '[count' → logprob: -17.500003814697266
    9. '[
' → logprob: -17.625003814697266
    10. '[c' → logprob: -18.250003814697266

Token 688: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.849109119386412e-06
    2. '```' → logprob: -12.125009536743164
    3. 'cnt' → logprob: -13.250009536743164
    4. '[' → logprob: -13.500009536743164
    5. '   ' → logprob: -15.000009536743164
    6. '₂' → logprob: -15.125009536743164
    7. '[cnt' → logprob: -15.250009536743164
    8. 'ct' → logprob: -16.750009536743164
    9. '`' → logprob: -16.750009536743164
    10. '۲' → logprob: -17.125009536743164

Token 689: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.052557699382305145
    2. '=' → logprob: -3.1775577068328857
    3. ' =' → logprob: -4.802557468414307
    4. ']=' → logprob: -6.677557468414307
    5. ' ]' → logprob: -10.177557945251465
    6. '   ' → logprob: -12.802557945251465
    7. ')' → logprob: -13.052557945251465
    8. '=s' → logprob: -14.177557945251465
    9. ' ' → logprob: -15.052557945251465
    10. '[' → logprob: -15.052557945251465

Token 690: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004629126749932766
    2. ' =' → logprob: -5.379629135131836
    3. '=s' → logprob: -12.254629135131836
    4. ']' → logprob: -12.754629135131836
    5. ']=' → logprob: -14.254629135131836
    6. ')' → logprob: -15.504629135131836
    7. '=k' → logprob: -15.754629135131836
    8. '=
' → logprob: -16.504629135131836
    9. '<|end|>' → logprob: -16.754629135131836
    10. ')=' → logprob: -17.129629135131836

Token 691: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00014025058771949261
    2. ' s' → logprob: -8.875140190124512
    3. '(s' → logprob: -16.125141143798828
    4. '2' → logprob: -16.500141143798828
    5. ''s' → logprob: -16.625141143798828
    6. '`s' → logprob: -17.125141143798828
    7. '	s' → logprob: -17.625141143798828
    8. '   ' → logprob: -17.875141143798828
    9. '[' → logprob: -18.375141143798828
    10. '[s' → logprob: -19.125141143798828

Token 692: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00040183294913731515
    2. '2' → logprob: -8.000401496887207
    3. '[k' → logprob: -9.625401496887207
    4. '[
' → logprob: -15.125401496887207
    5. '(' → logprob: -16.000402450561523
    6. 'k' → logprob: -16.750402450561523
    7. '`' → logprob: -16.750402450561523
    8. '[(' → logprob: -17.125402450561523
    9. '   ' → logprob: -17.875402450561523
    10. '```' → logprob: -18.000402450561523

Token 693: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0010998494690284133
    2. '(' → logprob: -7.626100063323975
    3. 'k' → logprob: -7.626100063323975
    4. ' ' → logprob: -9.126099586486816
    5. '[' → logprob: -12.126099586486816
    6. '   ' → logprob: -12.626099586486816
    7. '`' → logprob: -13.126099586486816
    8. ' (' → logprob: -13.876099586486816
    9. '
' → logprob: -14.126099586486816
    10. '(k' → logprob: -14.376099586486816

Token 694: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.6942194700241089
    2. '*' → logprob: -0.9442194700241089
    3. '*n' → logprob: -2.1942195892333984
    4. 'n' → logprob: -9.819219589233398
    5. '<|end|>' → logprob: -10.569219589233398
    6. ' n' → logprob: -12.444219589233398
    7. '```' → logprob: -12.694219589233398
    8. '*k' → logprob: -12.694219589233398
    9. '*num' → logprob: -12.694219589233398
    10. ' ' → logprob: -12.944219589233398

Token 695: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00014239625306800008
    2. ' n' → logprob: -8.875142097473145
    3. '*n' → logprob: -14.250142097473145
    4. '(n' → logprob: -14.500142097473145
    5. ')n' → logprob: -15.000142097473145
    6. '<|end|>' → logprob: -15.250142097473145
    7. '(' → logprob: -15.750142097473145
    8. 'k' → logprob: -16.12514305114746
    9. '_n' → logprob: -16.25014305114746
    10. '	n' → logprob: -16.50014305114746

Token 696: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.1605495661497116
    2. ' -' → logprob: -1.910549521446228
    3. '-k' → logprob: -8.03554916381836
    4. ' ' → logprob: -13.91054916381836
    5. 'k' → logprob: -15.28554916381836
    6. '-n' → logprob: -15.41054916381836
    7. '−' → logprob: -16.66054916381836
    8. ' k' → logprob: -17.28554916381836
    9. '[' → logprob: -17.66054916381836
    10. '...' → logprob: -17.78554916381836

Token 697: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.306760805164231e-05
    2. ' k' → logprob: -11.25001335144043
    3. '	k' → logprob: -18.00001335144043
    4. '1' → logprob: -18.87501335144043
    5. '{k' → logprob: -19.00001335144043
    6. '(k' → logprob: -19.37501335144043
    7. '_k' → logprob: -20.50001335144043
    8. '   ' → logprob: -20.62501335144043
    9. '-k' → logprob: -20.75001335144043
    10. '`' → logprob: -20.87501335144043

Token 698: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.20142512023448944
    2. ' -' → logprob: -1.7014250755310059
    3. ' ' → logprob: -12.201425552368164
    4. '[' → logprob: -13.201425552368164
    5. '<|end|>' → logprob: -13.451425552368164
    6. '```' → logprob: -13.826425552368164
    7. '–' → logprob: -14.576425552368164
    8. '<|end|>' → logprob: -14.826425552368164
    9. ')' → logprob: -15.076425552368164
    10. '   ' → logprob: -15.451425552368164

Token 699: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.13388703338569e-06
    2. ' ' → logprob: -11.875009536743164
    3. '2' → logprob: -13.250009536743164
    4. '```' → logprob: -15.875009536743164
    5. '-' → logprob: -16.000009536743164
    6. '   ' → logprob: -16.500009536743164
    7. '  ' → logprob: -19.000009536743164
    8. '`' → logprob: -19.125009536743164
    9. 'k' → logprob: -19.250009536743164
    10. '
' → logprob: -19.500009536743164

Token 700: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '-' → logprob: -16.750001907348633
    4. '2' → logprob: -17.000001907348633
    5. '```' → logprob: -18.250001907348633
    6. '   ' → logprob: -18.375001907348633
    7. 'k' → logprob: -19.500001907348633
    8. '...' → logprob: -20.125001907348633
    9. 'i' → logprob: -20.375001907348633
    10. '１' → logprob: -20.437501907348633

Token 701: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00960969552397728
    2. '               ' → logprob: -5.009609699249268
    3. ']
' → logprob: -6.759609699249268
    4. ')' → logprob: -6.884609699249268
    5. '<|end|>' → logprob: -8.38460922241211
    6. ' ]' → logprob: -8.50960922241211
    7. '```' → logprob: -9.13460922241211
    8. '-' → logprob: -9.75960922241211
    9. '           ' → logprob: -10.00960922241211
    10. ' -' → logprob: -11.13460922241211

Token 702: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0115987379103899
    2. '```' → logprob: -4.511598587036133
    3. '           ' → logprob: -8.511598587036133
    4. '<|end|>' → logprob: -9.261598587036133
    5. '                   ' → logprob: -9.386598587036133
    6. '              ' → logprob: -9.761598587036133
    7. '       ' → logprob: -10.636598587036133
    8. '``' → logprob: -11.011598587036133
    9. '                
' → logprob: -11.136598587036133
    10. 'cnt' → logprob: -11.386598587036133

Token 703: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0801863893866539
    2. 'cnt' → logprob: -2.580186367034912
    3. '```' → logprob: -7.580186367034912
    4. '           ' → logprob: -7.955186367034912
    5. '       ' → logprob: -8.08018684387207
    6. ' cnt' → logprob: -10.45518684387207
    7. '	cnt' → logprob: -10.83018684387207
    8. '                   ' → logprob: -11.08018684387207
    9. '   ' → logprob: -11.08018684387207
    10. '              ' → logprob: -11.58018684387207

Token 704: ' De' (ID: 1516)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -6.034592388459714e-06
    2. '	cnt' → logprob: -12.750005722045898
    3. ' cnt' → logprob: -13.625005722045898
    4. '[cnt' → logprob: -14.625005722045898
    5. '           ' → logprob: -14.750005722045898
    6. '```' → logprob: -14.750005722045898
    7. '       ' → logprob: -15.000005722045898
    8. '   ' → logprob: -15.375005722045898
    9. '               ' → logprob: -16.3750057220459
    10. '
' → logprob: -16.6250057220459

Token 705: 'crement' (ID: 20288)
  Prédit: 'crement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'crement' → logprob: -0.8144522309303284
    2. 'cnt' → logprob: -1.0644521713256836
    3. 'cr' → logprob: -1.5644521713256836
    4. 'cre' → logprob: -6.314452171325684
    5. 'c' → logprob: -7.439452171325684
    6. 'ct' → logprob: -8.189452171325684
    7. 'nt' → logprob: -8.939452171325684
    8. 'cc' → logprob: -9.689452171325684
    9. 'crt' → logprob: -10.064452171325684
    10. 'crease' → logprob: -10.689452171325684

Token 706: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -1.843177233240567e-05
    2. ' cnt' → logprob: -11.000018119812012
    3. '(cnt' → logprob: -14.000018119812012
    4. '[cnt' → logprob: -14.375018119812012
    5. '	cnt' → logprob: -15.375018119812012
    6. 'count' → logprob: -17.500019073486328
    7. '```' → logprob: -18.000019073486328
    8. 'ct' → logprob: -18.875019073486328
    9. '   ' → logprob: -20.000019073486328
    10. '
' → logprob: -20.250019073486328

Token 707: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. 'cnt' → logprob: -17.0
    3. '₂' → logprob: -17.75
    4. '```' → logprob: -18.125
    5. '۲' → logprob: -20.25
    6. '   ' → logprob: -20.375
    7. '​' → logprob: -20.875
    8. '２' → logprob: -21.125
    9. '(cnt' → logprob: -21.25
    10. ' ' → logprob: -21.875

Token 708: ' to' (ID: 316)
  Prédit: ' -='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.13920357823371887
    2. '-=' → logprob: -2.1392035484313965
    3. '```' → logprob: -4.8892035484313965
    4. '-' → logprob: -6.3892035484313965
    5. '=' → logprob: -6.3892035484313965
    6. ' to' → logprob: -7.7642035484313965
    7. '               ' → logprob: -8.264204025268555
    8. '                   ' → logprob: -8.764204025268555
    9. '       ' → logprob: -9.639204025268555
    10. '           ' → logprob: -9.639204025268555

Token 709: ' move' (ID: 5275)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.07033296674489975
    2. ' cnt' → logprob: -2.6953330039978027
    3. '1' → logprob: -8.320332527160645
    4. '[cnt' → logprob: -10.195332527160645
    5. '(cnt' → logprob: -10.320332527160645
    6. '	cnt' → logprob: -10.570332527160645
    7. '```' → logprob: -10.945332527160645
    8. 'count' → logprob: -11.695332527160645
    9. '0' → logprob: -11.820332527160645
    10. 'ct' → logprob: -12.070332527160645

Token 710: ' to' (ID: 316)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.8209187984466553
    2. ' cnt' → logprob: -2.4459187984466553
    3. '```' → logprob: -2.4459187984466553
    4. '[cnt' → logprob: -2.5709187984466553
    5. '               ' → logprob: -2.8209187984466553
    6. '(cnt' → logprob: -2.8209187984466553
    7. '-' → logprob: -3.3209187984466553
    8. ' to' → logprob: -3.5709187984466553
    9. '=' → logprob: -3.6959187984466553
    10. ' -=' → logprob: -3.8209187984466553

Token 711: ' the' (ID: 290)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.004541438538581133
    2. ' cnt' → logprob: -5.879541397094727
    3. '1' → logprob: -7.504541397094727
    4. '[cnt' → logprob: -7.754541397094727
    5. '(cnt' → logprob: -8.004541397094727
    6. '-' → logprob: -8.504541397094727
    7. '	cnt' → logprob: -9.379541397094727
    8. '```' → logprob: -10.004541397094727
    9. 'ct' → logprob: -10.629541397094727
    10. ' ' → logprob: -11.254541397094727

Token 712: ' next' (ID: 2613)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.406609445810318
    2. '1' → logprob: -1.1566094160079956
    3. 'next' → logprob: -4.906609535217285
    4. '```' → logprob: -5.656609535217285
    5. 'cnt' → logprob: -6.281609535217285
    6. ' -' → logprob: -6.281609535217285
    7. '2' → logprob: -6.531609535217285
    8. 'left' → logprob: -6.906609535217285
    9. 'end' → logprob: -7.031609535217285
    10. '-=' → logprob: -8.156609535217285

Token 713: ' position' (ID: 4010)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 714: ' from' (ID: 591)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.16951994597911835
    2. '-=' → logprob: -2.1695199012756348
    3. '```' → logprob: -3.7945199012756348
    4. ' -=' → logprob: -4.044519901275635
    5. '=' → logprob: -7.169519901275635
    6. ' -' → logprob: -7.669519901275635
    7. '	' → logprob: -8.294520378112793
    8. '<|end|>' → logprob: -10.544520378112793
    9. '``' → logprob: -10.794520378112793
    10. '`' → logprob: -11.044520378112793

Token 715: ' the' (ID: 290)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.6406664252281189
    2. 'the' → logprob: -0.8906664252281189
    3. '1' → logprob: -3.1406664848327637
    4. 'end' → logprob: -5.140666484832764
    5. ' the' → logprob: -6.265666484832764
    6. '-' → logprob: -6.390666484832764
    7. '```' → logprob: -6.765666484832764
    8. '2' → logprob: -6.765666484832764
    9. 'n' → logprob: -6.890666484832764
    10. '   ' → logprob: -7.015666484832764

Token 716: ' end' (ID: 1268)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5974149703979492
    2. 'end' → logprob: -1.4724149703979492
    3. '1' → logprob: -1.5974149703979492
    4. '-end' → logprob: -5.097414970397949
    5. '```' → logprob: -5.222414970397949
    6. ' end' → logprob: -5.347414970397949
    7. 'start' → logprob: -7.972414970397949
    8. ' -' → logprob: -7.972414970397949
    9. 'right' → logprob: -8.72241497039795
    10. '   ' → logprob: -9.09741497039795

Token 717: '
' (ID: 198)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.6308759450912476
    2. '               ' → logprob: -1.5058759450912476
    3. '           ' → logprob: -2.255876064300537
    4. '       ' → logprob: -2.505876064300537
    5. '<|end|>' → logprob: -4.255876064300537
    6. '=' → logprob: -4.630876064300537
    7. ' -=' → logprob: -5.130876064300537
    8. '                   ' → logprob: -5.255876064300537
    9. '   ' → logprob: -5.505876064300537
    10. '``' → logprob: -5.755876064300537

Token 718: '               ' (ID: 506)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.9256283044815063
    2. '               ' → logprob: -1.4256283044815063
    3. '       ' → logprob: -1.8006283044815063
    4. '           ' → logprob: -1.9256283044815063
    5. '<|end|>' → logprob: -4.425628185272217
    6. '   ' → logprob: -4.550628185272217
    7. '=' → logprob: -4.925628185272217
    8. '                   ' → logprob: -5.425628185272217
    9. '``' → logprob: -6.050628185272217
    10. '-' → logprob: -6.050628185272217

Token 719: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -0.00017028623551595956
    2. ' cnt' → logprob: -8.750170707702637
    3. '   ' → logprob: -12.625170707702637
    4. '	cnt' → logprob: -12.625170707702637
    5. '       ' → logprob: -13.375170707702637
    6. '           ' → logprob: -13.375170707702637
    7. '(cnt' → logprob: -14.000170707702637
    8. '```' → logprob: -14.625170707702637
    9. '[cnt' → logprob: -14.750170707702637
    10. '               ' → logprob: -15.125170707702637

Token 720: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.512236498361744e-07
    2. '   ' → logprob: -15.750000953674316
    3. '₂' → logprob: -16.125
    4. ' ' → logprob: -16.625
    5. '```' → logprob: -16.75
    6. '_' → logprob: -17.0
    7. '1' → logprob: -17.375
    8. '۲' → logprob: -19.375
    9. '    ' → logprob: -19.875
    10. '  ' → logprob: -20.125

Token 721: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.07994121313095093
    2. ' -=' → logprob: -2.5799412727355957
    3. '-' → logprob: -6.954941272735596
    4. '=' → logprob: -9.454940795898438
    5. '```' → logprob: -11.204940795898438
    6. '+=' → logprob: -12.579940795898438
    7. ' -' → logprob: -13.704940795898438
    8. '[-' → logprob: -16.329940795898438
    9. '<|end|>' → logprob: -16.704940795898438
    10. ')' → logprob: -16.954940795898438

Token 722: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001234428636962548
    2. ' ' → logprob: -9.000123023986816
    3. '```' → logprob: -20.375123977661133
    4. '   ' → logprob: -20.875123977661133
    5. '0' → logprob: -21.125123977661133
    6. '１' → logprob: -22.625123977661133
    7. '۱' → logprob: -22.875123977661133
    8. '<|end|>' → logprob: -22.875123977661133
    9. '`' → logprob: -23.000123977661133
    10. ' ' → logprob: -23.562623977661133

Token 723: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '```' → logprob: -19.125001907348633
    4. '   ' → logprob: -20.250001907348633
    5. '0' → logprob: -20.625001907348633
    6. '۱' → logprob: -21.000001907348633
    7. '１' → logprob: -21.375001907348633
    8. '`' → logprob: -22.250001907348633
    9. '১' → logprob: -22.437501907348633
    10. '  ' → logprob: -22.500001907348633

Token 724: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004337902646511793
    2. '<|end|>' → logprob: -6.379337787628174
    3. ')' → logprob: -7.254337787628174
    4. '   ' → logprob: -7.504337787628174
    5. '        
' → logprob: -7.754337787628174
    6. '           ' → logprob: -8.629338264465332
    7. '
' → logprob: -9.004338264465332
    8. '#' → logprob: -9.129338264465332
    9. ',' → logprob: -9.379338264465332
    10. '```' → logprob: -9.629338264465332

Token 725: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03935921937227249
    2. '   ' → logprob: -3.5393593311309814
    3. '
' → logprob: -5.414359092712402
    4. '    
' → logprob: -6.039359092712402
    5. '        
' → logprob: -6.414359092712402
    6. '```' → logprob: -7.789359092712402
    7. 'for' → logprob: -9.039359092712402
    8. '            
' → logprob: -9.539359092712402
    9. 's' → logprob: -9.664359092712402
    10. '<|end|>' → logprob: -9.789359092712402

Token 726: ' #' (ID: 1069)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.15503326058387756
    2. '       ' → logprob: -2.1550333499908447
    3. 't' → logprob: -4.280033111572266
    4. '```' → logprob: -5.655033111572266
    5. ' key' → logprob: -5.905033111572266
    6. 'd' → logprob: -5.905033111572266
    7. 'temp' → logprob: -7.030033111572266
    8. 's' → logprob: -7.155033111572266
    9. '#' (adapté à ' #') → logprob: -7.530033111572266
    10. 'tuple' → logprob: -7.655033111572266

Token 727: ' Join' (ID: 19472)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.13429582118988037
    2. 't' → logprob: -2.63429594039917
    3. 'temp' → logprob: -3.25929594039917
    4. 'd' → logprob: -5.63429594039917
    5. 'tuple' → logprob: -6.00929594039917
    6. '#' → logprob: -6.00929594039917
    7. 'tmp' → logprob: -6.25929594039917
    8. 'str' → logprob: -6.50929594039917
    9. 'for' → logprob: -7.88429594039917
    10. 'a' → logprob: -8.009295463562012

Token 728: ' the' (ID: 290)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.04339911788702011
    2. ' temp' → logprob: -3.5433990955352783
    3. 'str' → logprob: -5.418399333953857
    4. 's' → logprob: -5.918399333953857
    5. 'tmp' → logprob: -5.918399333953857
    6. '1' → logprob: -6.668399333953857
    7. '_temp' → logprob: -7.293399333953857
    8. 'result' → logprob: -8.1683988571167
    9. '```' → logprob: -8.2933988571167
    10. '_str' → logprob: -8.9183988571167

Token 729: ' elements' (ID: 8632)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.19951550662517548
    2. '"' → logprob: -2.3245155811309814
    3. ' temp' → logprob: -2.6995155811309814
    4. 'tmp' → logprob: -5.824515342712402
    5. '["' → logprob: -6.074515342712402
    6. '''.' → logprob: -6.699515342712402
    7. ' "".' → logprob: -6.824515342712402
    8. 'strings' → logprob: -6.824515342712402
    9. 'result' → logprob: -6.949515342712402
    10. 'tuple' → logprob: -7.199515342712402

Token 730: ' of' (ID: 328)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.29882967472076416
    2. ' temp' → logprob: -1.6738296747207642
    3. ' of' → logprob: -3.4238295555114746
    4. '```' → logprob: -4.173829555511475
    5. ' in' → logprob: -5.048829555511475
    6. '(temp' → logprob: -5.673829555511475
    7. '""' → logprob: -5.923829555511475
    8. 'of' → logprob: -6.298829555511475
    9. '[temp' → logprob: -6.423829555511475
    10. '``' → logprob: -7.048829555511475

Token 731: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.003257450181990862
    2. ' temp' → logprob: -5.7532572746276855
    3. '```' → logprob: -9.878257751464844
    4. 'tmp' → logprob: -11.753257751464844
    5. '[temp' → logprob: -12.378257751464844
    6. '``' → logprob: -12.753257751464844
    7. '""' → logprob: -12.878257751464844
    8. '`' → logprob: -13.128257751464844
    9. '
' → logprob: -13.503257751464844
    10. '"' → logprob: -13.628257751464844

Token 732: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.869017852295656e-06
    2. '```' → logprob: -12.000006675720215
    3. '   ' → logprob: -15.000006675720215
    4. '``' → logprob: -15.875006675720215
    5. '
' → logprob: -16.62500762939453
    6. '"' → logprob: -16.75000762939453
    7. ' ' → logprob: -16.75000762939453
    8. '`' → logprob: -17.00000762939453
    9. 'string' → logprob: -17.12500762939453
    10. '2' → logprob: -17.50000762939453

Token 733: ' into' (ID: 1511)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.37958139181137085
    2. ' =' → logprob: -2.3795814514160156
    3. 'temp' → logprob: -3.5045814514160156
    4. 'token' → logprob: -3.6295814514160156
    5. '")' → logprob: -3.6295814514160156
    6. '```' → logprob: -3.6295814514160156
    7. '_join' → logprob: -4.129581451416016
    8. 's' → logprob: -4.379581451416016
    9. 'string' → logprob: -4.504581451416016
    10. '=' → logprob: -4.629581451416016

Token 734: ' a' (ID: 261)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '""' → logprob: -0.037375085055828094
    2. 'a' → logprob: -4.287374973297119
    3. '''' → logprob: -4.787374973297119
    4. ' a' → logprob: -4.787374973297119
    5. '"' → logprob: -5.162374973297119
    6. '''.' → logprob: -8.787375450134277
    7. '"a' → logprob: -9.037375450134277
    8. ' ""' → logprob: -9.412375450134277
    9. '("")' → logprob: -9.662375450134277
    10. ''' → logprob: -10.412375450134277

Token 735: ' string' (ID: 1621)
  Prédit: 'string'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'string' → logprob: -0.0034101319033652544
    2. ' string' → logprob: -5.753410339355469
    3. '""' → logprob: -9.253410339355469
    4. '"' → logprob: -9.503410339355469
    5. '''.' → logprob: -10.378410339355469
    6. 'str' → logprob: -11.128410339355469
    7. 'single' → logprob: -12.753410339355469
    8. '''' → logprob: -12.753410339355469
    9. 'token' → logprob: -13.003410339355469
    10. '```' → logprob: -13.128410339355469

Token 736: ' t' (ID: 260)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.1417849212884903
    2. 'token' → logprob: -3.016784906387329
    3. 's' → logprob: -3.266784906387329
    4. 'result' → logprob: -4.391785144805908
    5. ' temp' → logprob: -4.516785144805908
    6. ')' → logprob: -5.891785144805908
    7. 'tmp' → logprob: -5.891785144805908
    8. ' s' → logprob: -6.266785144805908
    9. ' token' → logprob: -6.266785144805908
    10. 'str' → logprob: -6.891785144805908

Token 737: '1' (ID: 16)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4141653776168823
    2. '=' → logprob: -1.6641653776168823
    3. 't' → logprob: -1.9141653776168823
    4. '       ' → logprob: -6.664165496826172
    5. '_t' → logprob: -8.164165496826172
    6. '1' → logprob: -8.289165496826172
    7. '
' → logprob: -8.539165496826172
    8. '=
' → logprob: -9.664165496826172
    9. ' t' → logprob: -9.789165496826172
    10. '   ' → logprob: -10.039165496826172

Token 738: '
' (ID: 198)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.8722434043884277
    2. ' =' → logprob: -1.1222434043884277
    3. '=' → logprob: -1.3722434043884277
    4. 'temp' → logprob: -6.997243404388428
    5. ' t' → logprob: -7.622243404388428
    6. '_t' → logprob: -7.747243404388428
    7. '```' → logprob: -8.122243881225586
    8. 'token' → logprob: -8.747243881225586
    9. ')' → logprob: -8.997243881225586
    10. '`t' → logprob: -9.122243881225586

Token 739: '       ' (ID: 309)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.14697609841823578
    2. ' =' → logprob: -2.5219759941101074
    3. '=' → logprob: -2.8969759941101074
    4. ' t' → logprob: -7.146975994110107
    5. '`t' → logprob: -9.271976470947266
    6. '   ' → logprob: -9.521976470947266
    7. '       ' → logprob: -9.771976470947266
    8. ')' → logprob: -10.396976470947266
    9. '=
' → logprob: -10.646976470947266
    10. '`' → logprob: -10.896976470947266

Token 740: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' (adapté à ' t') → logprob: -0.0032968937885016203
    2. ' t' → logprob: -5.878296852111816
    3. '"' → logprob: -7.753296852111816
    4. '   ' → logprob: -10.878296852111816
    5. '`t' → logprob: -11.253296852111816
    6. '''.' → logprob: -11.378296852111816
    7. ' "".' → logprob: -12.003296852111816
    8. '       ' → logprob: -12.128296852111816
    9. '```' → logprob: -13.253296852111816
    10. ' ''.' → logprob: -14.003296852111816

Token 741: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. 'emp' → logprob: -15.125000953674316
    3. '_' → logprob: -15.250000953674316
    4. '```' → logprob: -15.875000953674316
    5. '=' → logprob: -17.0
    6. ' =' → logprob: -17.0
    7. '"' → logprob: -17.625
    8. ' ' → logprob: -18.125
    9. 'o' → logprob: -18.625
    10. 'mp' → logprob: -19.0

Token 742: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20141343772411346
    2. ' =' → logprob: -1.7014133930206299
    3. '=
' → logprob: -16.076414108276367
    4. '='' → logprob: -17.326414108276367
    5. '```' → logprob: -17.701414108276367
    6. '＝' → logprob: -17.951414108276367
    7. ')' → logprob: -18.076414108276367
    8. ' =
' → logprob: -18.326414108276367
    9. '   ' → logprob: -18.451414108276367
    10. '="' → logprob: -18.576414108276367

Token 743: ' "".' (ID: 94734)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0051475390791893005
    2. '''.' → logprob: -5.755147457122803
    3. ' "".' → logprob: -6.255147457122803
    4. '""' → logprob: -10.255147933959961
    5. ' ''.' → logprob: -11.380147933959961
    6. '"",' → logprob: -14.880147933959961
    7. ''' → logprob: -15.630147933959961
    8. '''' → logprob: -15.880147933959961
    9. '```' → logprob: -18.13014793395996
    10. ' ' → logprob: -18.38014793395996

Token 744: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -3.128163257315464e-07
    2. ' join' → logprob: -15.125
    3. '.join' → logprob: -18.0
    4. '(join' → logprob: -18.75
    5. '```' → logprob: -19.0
    6. 'Join' → logprob: -20.0
    7. 'jo' → logprob: -20.75
    8. '''.' → logprob: -21.5
    9. '".' → logprob: -21.625
    10. 'j' → logprob: -22.25

Token 745: '(temp' (ID: 19094)
  Prédit: '(temp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(temp' → logprob: -0.011050296947360039
    2. 'temp' → logprob: -4.511050224304199
    3. '[temp' → logprob: -13.0110502243042
    4. ' temp' → logprob: -16.136051177978516
    5. '$temp' → logprob: -16.636051177978516
    6. '(' → logprob: -17.136051177978516
    7. '(tmp' → logprob: -18.011051177978516
    8. '	temp' → logprob: -18.636051177978516
    9. '(t' → logprob: -18.761051177978516
    10. ',temp' → logprob: -18.886051177978516

Token 746: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '```' → logprob: -16.875
    3. '[' → logprob: -17.125
    4. ')' → logprob: -19.375
    5. '   ' → logprob: -19.625
    6. 'temp' → logprob: -19.75
    7. 'r' → logprob: -19.75
    8. ' ' → logprob: -20.125
    9. '
' → logprob: -20.375
    10. '``' → logprob: -20.5625

Token 747: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.319370302458992e-06
    2. '       ' → logprob: -12.750005722045898
    3. ')
' → logprob: -13.625005722045898
    4. '   ' → logprob: -14.375005722045898
    5. ' )' → logprob: -14.625005722045898
    6. ']' → logprob: -17.2500057220459
    7. '[' → logprob: -17.3750057220459
    8. ')`' → logprob: -17.3750057220459
    9. ')#' → logprob: -17.5000057220459
    10. '")' → logprob: -18.1250057220459

Token 748: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 749: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09438758343458176
    2. ')' → logprob: -3.2193875312805176
    3. '        
' → logprob: -3.5943875312805176
    4. '<|end|>' → logprob: -4.594387531280518
    5. '#' → logprob: -5.344387531280518
    6. '
' → logprob: -5.969387531280518
    7. '```' → logprob: -6.344387531280518
    8. ',' → logprob: -7.094387531280518
    9. '  
' → logprob: -8.094388008117676
    10. ')
' → logprob: -8.094388008117676

Token 750: ' ''.' (ID: 105941)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.11833491921424866
    2. '       ' → logprob: -2.743335008621216
    3. '
' → logprob: -3.118335008621216
    4. '        
' → logprob: -6.868334770202637
    5. '   ' → logprob: -8.118334770202637
    6. '#' → logprob: -8.118334770202637
    7. 'if' → logprob: -8.243334770202637
    8. ' t' → logprob: -8.243334770202637
    9. ')' → logprob: -8.243334770202637
    10. 'd' → logprob: -9.243334770202637

Token 751: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -2.47495681833243e-05
    2. ' join' → logprob: -11.500024795532227
    3. ')' → logprob: -12.125024795532227
    4. '<|end|>' → logprob: -12.125024795532227
    5. 'split' → logprob: -14.000024795532227
    6. '```' → logprob: -14.625024795532227
    7. '.join' → logprob: -14.750024795532227
    8. 'strip' → logprob: -14.750024795532227
    9. '(join' → logprob: -15.250024795532227
    10. ' ' → logprob: -15.250024795532227

Token 752: '(list' (ID: 13116)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5819045901298523
    2. '()' → logprob: -0.9569045901298523
    3. ')' → logprob: -3.081904649734497
    4. '(t' → logprob: -5.206904411315918
    5. '(
' → logprob: -5.706904411315918
    6. '("")' → logprob: -7.706904411315918
    7. '())' → logprob: -7.956904411315918
    8. '   ' → logprob: -8.081904411315918
    9. 't' → logprob: -8.331904411315918
    10. '('' → logprob: -8.706904411315918

Token 753: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.015037194825708866
    2. '(t' → logprob: -5.1400370597839355
    3. ')t' → logprob: -5.3900370597839355
    4. 't' → logprob: -6.5150370597839355
    5. '(temp' → logprob: -6.6400370597839355
    6. '())' → logprob: -6.7650370597839355
    7. '(' → logprob: -8.390037536621094
    8. 'temp' → logprob: -9.015037536621094
    9. '()' → logprob: -9.765037536621094
    10. '<|end|>' → logprob: -11.015037536621094

Token 754: ' makes' (ID: 4787)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05177038908004761
    2. 't' → logprob: -4.176770210266113
    3. '
' → logprob: -4.176770210266113
    4. ')' → logprob: -4.551770210266113
    5. '        
' → logprob: -5.176770210266113
    6. ')
' → logprob: -7.551770210266113
    7. '#' → logprob: -7.551770210266113
    8. '```' → logprob: -7.551770210266113
    9. '<|end|>' → logprob: -7.801770210266113
    10. 'd' → logprob: -8.051770210266113

Token 755: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.009806855581700802
    2. ' a' → logprob: -5.0098066329956055
    3. 't' → logprob: -6.3848066329956055
    4. 'the' → logprob: -7.2598066329956055
    5. 'temp' → logprob: -7.6348066329956055
    6. 'string' → logprob: -9.634806632995605
    7. '(temp' → logprob: -9.759806632995605
    8. 's' → logprob: -10.509806632995605
    9. '```' → logprob: -10.509806632995605
    10. ' the' → logprob: -11.884806632995605

Token 756: ' string' (ID: 1621)
  Prédit: 'string'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'string' → logprob: -0.00042209390085190535
    2. 'new' → logprob: -8.500422477722168
    3. 'str' → logprob: -9.125422477722168
    4. ' string' → logprob: -9.125422477722168
    5. '```' → logprob: -14.875422477722168
    6. ' new' → logprob: -15.125422477722168
    7. 'single' → logprob: -16.50042152404785
    8. '<string' → logprob: -17.00042152404785
    9. 'strings' → logprob: -17.12542152404785
    10. 'complete' → logprob: -17.25042152404785

Token 757: ' from' (ID: 591)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.2600927948951721
    2. '       ' → logprob: -1.6350927352905273
    3. ')' → logprob: -3.6350927352905273
    4. '
' → logprob: -6.010092735290527
    5. ' t' → logprob: -6.635092735290527
    6. '#' → logprob: -7.010092735290527
    7. '   ' → logprob: -7.260092735290527
    8. '()' → logprob: -7.385092735290527
    9. ')
' → logprob: -7.760092735290527
    10. '        
' → logprob: -8.635092735290527

Token 758: ' a' (ID: 261)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.003958955407142639
    2. 'the' → logprob: -6.2539591789245605
    3. '[temp' → logprob: -6.6289591789245605
    4. ' temp' → logprob: -7.7539591789245605
    5. ' the' → logprob: -9.503958702087402
    6. 't' → logprob: -9.503958702087402
    7. 'list' → logprob: -10.253958702087402
    8. '(temp' → logprob: -10.628958702087402
    9. 'tokens' → logprob: -11.253958702087402
    10. 'token' → logprob: -11.378958702087402

Token 759: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.043738290667533875
    2. ' list' → logprob: -3.29373836517334
    3. 'sequence' → logprob: -6.16873836517334
    4. 'token' → logprob: -6.41873836517334
    5. 'string' → logprob: -7.54373836517334
    6. ' sequence' → logprob: -7.91873836517334
    7. ')' → logprob: -8.29373836517334
    8. 'temporary' → logprob: -8.41873836517334
    9. 'tokens' → logprob: -9.29373836517334
    10. '[token' → logprob: -9.54373836517334

Token 760: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1944245845079422
    2. 't' → logprob: -2.069424629211426
    3. ')' → logprob: -3.694424629211426
    4. '
' → logprob: -4.569424629211426
    5. '#' → logprob: -5.319424629211426
    6. '        
' → logprob: -5.444424629211426
    7. '   ' → logprob: -6.819424629211426
    8. '```' → logprob: -6.819424629211426
    9. ',' → logprob: -7.569424629211426
    10. '`' → logprob: -7.819424629211426

Token 761: ' characters' (ID: 9862)
  Prédit: 'characters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'characters' → logprob: -0.2533521056175232
    2. 'str' → logprob: -2.003352165222168
    3. 'strings' → logprob: -3.003352165222168
    4. 'chars' → logprob: -3.253352165222168
    5. 'tokens' → logprob: -8.378352165222168
    6. 'temp' → logprob: -8.503352165222168
    7. ' characters' → logprob: -9.503352165222168
    8. 'char' → logprob: -9.503352165222168
    9. '[str' → logprob: -10.003352165222168
    10. 'elements' → logprob: -11.128352165222168

Token 762: '

' (ID: 279)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6744137406349182
    2. '       ' → logprob: -1.0494136810302734
    3. '
' → logprob: -2.6744136810302734
    4. 't' → logprob: -3.5494136810302734
    5. '<|end|>' → logprob: -3.7994136810302734
    6. ')
' → logprob: -5.049413681030273
    7. '        
' → logprob: -5.549413681030273
    8. '#' → logprob: -6.049413681030273
    9. '   ' → logprob: -6.674413681030273
    10. '```' → logprob: -6.924413681030273

Token 763: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016686752438545227
    2. 't' → logprob: -4.391686916351318
    3. '#' → logprob: -6.641686916351318
    4. '        
' → logprob: -6.766686916351318
    5. '```' → logprob: -7.641686916351318
    6. ')' → logprob: -8.01668643951416
    7. '
' → logprob: -8.64168643951416
    8. '`' → logprob: -8.76668643951416
    9. '   ' → logprob: -8.76668643951416
    10. '           ' → logprob: -9.39168643951416

Token 764: ' #' (ID: 1069)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0921383798122406
    2. '       ' → logprob: -2.4671382904052734
    3. 'd' → logprob: -6.342138290405273
    4. '#' (adapté à ' #') → logprob: -6.967138290405273
    5. ' t' → logprob: -8.467138290405273
    6. '```' → logprob: -9.217138290405273
    7. '   ' → logprob: -9.717138290405273
    8. '           ' → logprob: -10.467138290405273
    9. 'if' → logprob: -10.592138290405273
    10. '        
' → logprob: -11.342138290405273

Token 765: ' Similarly' (ID: 65037)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6402134895324707
    2. 't' → logprob: -0.7652134895324707
    3. '#' → logprob: -5.390213489532471
    4. 'if' → logprob: -6.015213489532471
    5. '       ' → logprob: -7.640213489532471
    6. 'key' → logprob: -11.140213012695312
    7. 'for' → logprob: -11.390213012695312
    8. '```' → logprob: -11.390213012695312
    9. '   ' → logprob: -11.640213012695312
    10. 'try' → logprob: -11.765213012695312

Token 766: ' join' (ID: 5863)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.15750066936016083
    2. ' t' → logprob: -2.407500743865967
    3. '       ' → logprob: -2.907500743865967
    4. '#' → logprob: -7.532500743865967
    5. '   ' → logprob: -8.032500267028809
    6. ' #' → logprob: -9.782500267028809
    7. ',' → logprob: -10.532500267028809
    8. '           ' → logprob: -10.907500267028809
    9. '      ' → logprob: -11.157500267028809
    10. '`t' → logprob: -11.532500267028809

Token 767: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.16033542156219482
    2. '(temp' → logprob: -1.9103354215621948
    3. ' temp' → logprob: -9.410335540771484
    4. '_temp' → logprob: -11.660335540771484
    5. '	temp' → logprob: -12.285335540771484
    6. '[temp' → logprob: -12.410335540771484
    7. '(' → logprob: -12.535335540771484
    8. 't' → logprob: -12.785335540771484
    9. '(t' → logprob: -13.535335540771484
    10. '$temp' → logprob: -14.035335540771484

Token 768: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.128163257315464e-07
    2. '```' → logprob: -15.5
    3. ' ' → logprob: -17.5
    4. '_' → logprob: -17.75
    5. '   ' → logprob: -18.5
    6. 't' → logprob: -18.5
    7. '２' → logprob: -19.125
    8. '۲' → logprob: -19.125
    9. '
' → logprob: -19.5625
    10. '₂' → logprob: -19.8125

Token 769: ' into' (ID: 1511)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1261330395936966
    2. '=' → logprob: -3.0011329650878906
    3. 't' → logprob: -3.8761329650878906
    4. ')' → logprob: -4.126132965087891
    5. ' into' → logprob: -4.876132965087891
    6. 'into' → logprob: -4.876132965087891
    7. '_t' → logprob: -6.001132965087891
    8. '.' → logprob: -6.251132965087891
    9. '   ' → logprob: -6.376132965087891
    10. ').' → logprob: -6.876132965087891

Token 770: ' a' (ID: 261)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.038847923278808594
    2. '""' → logprob: -3.9138479232788086
    3. 'temp' → logprob: -5.413847923278809
    4. 'a' → logprob: -5.413847923278809
    5. 's' → logprob: -6.288847923278809
    6. 'str' → logprob: -6.288847923278809
    7. ' "".' → logprob: -6.413847923278809
    8. 't' → logprob: -6.788847923278809
    9. '''.' → logprob: -7.413847923278809
    10. '"a' → logprob: -7.663847923278809

Token 771: ' string' (ID: 1621)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '""' → logprob: -0.2618826925754547
    2. 'string' → logprob: -1.5118826627731323
    3. '"' → logprob: -4.636882781982422
    4. 'str' → logprob: -9.386882781982422
    5. '''' → logprob: -9.511882781982422
    6. ' string' → logprob: -11.386882781982422
    7. '"""' → logprob: -11.886882781982422
    8. '")' → logprob: -12.011882781982422
    9. '.' → logprob: -12.136882781982422
    10. '("")' → logprob: -12.386882781982422

Token 772: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.000273971410933882
    2. ' t' → logprob: -8.250273704528809
    3. '       ' → logprob: -11.750273704528809
    4. '   ' → logprob: -12.875273704528809
    5. '(t' → logprob: -13.875273704528809
    6. '`t' → logprob: -14.375273704528809
    7. '
' → logprob: -15.625273704528809
    8. '	t' → logprob: -16.000274658203125
    9. ' =' → logprob: -16.750274658203125
    10. '        
' → logprob: -17.125274658203125

Token 773: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.2723104848410003e-05
    2. '1' → logprob: -10.750022888183594
    3. '"' → logprob: -13.625022888183594
    4. ' ' → logprob: -17.500022888183594
    5. ''' → logprob: -17.750022888183594
    6. '```' → logprob: -17.875022888183594
    7. 'emp' → logprob: -18.750022888183594
    8. '`' → logprob: -20.250022888183594
    9. '#' → logprob: -20.750022888183594
    10. '۲' → logprob: -21.000022888183594

Token 774: '
' (ID: 198)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.005887199193239212
    2. '       ' → logprob: -5.255887031555176
    3. ' t' → logprob: -7.380887031555176
    4. '   ' → logprob: -11.005887031555176
    5. '	t' → logprob: -12.005887031555176
    6. '`t' → logprob: -12.130887031555176
    7. ' =' → logprob: -13.880887031555176
    8. '           ' → logprob: -15.005887031555176
    9. '=' → logprob: -15.130887031555176
    10. '
' → logprob: -16.630887985229492

Token 775: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31556814908981323
    2. 't' → logprob: -1.315568208694458
    3. ' t' → logprob: -6.190567970275879
    4. '	t' → logprob: -8.690567970275879
    5. '   ' → logprob: -10.190567970275879
    6. '`t' → logprob: -10.190567970275879
    7. '	' → logprob: -12.315567970275879
    8. '_t' → logprob: -13.565567970275879
    9. '```' → logprob: -13.940567970275879
    10. '           ' → logprob: -13.940567970275879

Token 776: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' (adapté à ' t') → logprob: -0.31911423802375793
    2. '"' → logprob: -1.3191142082214355
    3. ' "".' → logprob: -5.4441142082214355
    4. ' t' → logprob: -6.6941142082214355
    5. '''.' → logprob: -9.194114685058594
    6. '   ' → logprob: -9.569114685058594
    7. '       ' → logprob: -10.194114685058594
    8. '""' → logprob: -10.944114685058594
    9. ' ' → logprob: -11.194114685058594
    10. '	t' → logprob: -11.694114685058594

Token 777: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.935296834039036e-06
    2. '"' → logprob: -13.37500286102295
    3. ' ' → logprob: -14.12500286102295
    4. 't' → logprob: -14.87500286102295
    5. '_' → logprob: -16.250003814697266
    6. 'wo' → logprob: -16.500003814697266
    7. 'w' → logprob: -16.875003814697266
    8. '   ' → logprob: -17.375003814697266
    9. 'o' → logprob: -17.625003814697266
    10. '```' → logprob: -18.000003814697266

Token 778: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022492945194244
    2. '=' → logprob: -1.9102249145507812
    3. '   ' → logprob: -15.035224914550781
    4. ' ' → logprob: -15.910224914550781
    5. '.' → logprob: -16.16022491455078
    6. ')' → logprob: -17.03522491455078
    7. ' ="' → logprob: -17.03522491455078
    8. '="' → logprob: -17.28522491455078
    9. ' =
' → logprob: -17.28522491455078
    10. '=
' → logprob: -17.66022491455078

Token 779: ' "".' (ID: 94734)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.005274549592286348
    2. ' "".' → logprob: -5.255274772644043
    3. '''.' → logprob: -10.755274772644043
    4. '""' → logprob: -10.880274772644043
    5. '".' → logprob: -16.005273818969727
    6. ' ''.' → logprob: -16.255273818969727
    7. '   ' → logprob: -16.255273818969727
    8. ' ' → logprob: -16.630273818969727
    9. '"",' → logprob: -17.005273818969727
    10. '",".' → logprob: -17.880273818969727

Token 780: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -5.512236498361744e-07
    2. '"' → logprob: -14.500000953674316
    3. '".' → logprob: -17.125
    4. ' join' → logprob: -17.875
    5. '.join' → logprob: -19.25
    6. '""' → logprob: -19.75
    7. '''.' → logprob: -20.375
    8. '(join' → logprob: -21.875
    9. '```' → logprob: -21.875
    10. ' "".' → logprob: -22.5

Token 781: '(temp' (ID: 19094)
  Prédit: '(temp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(temp' → logprob: -2.093505099765025e-05
    2. 'temp' → logprob: -10.875020980834961
    3. '[temp' → logprob: -13.500020980834961
    4. '(tmp' → logprob: -14.750020980834961
    5. '(' → logprob: -16.50002098083496
    6. '$temp' → logprob: -17.25002098083496
    7. ',temp' → logprob: -17.87502098083496
    8. '=temp' → logprob: -17.87502098083496
    9. '	temp' → logprob: -18.50002098083496
    10. '/temp' → logprob: -18.50002098083496

Token 782: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. 'temp' → logprob: -16.875
    3. ')' → logprob: -18.75
    4. '```' → logprob: -18.875
    5. '1' → logprob: -19.25
    6. '(temp' → logprob: -19.5
    7. '[' → logprob: -19.625
    8. '_' → logprob: -19.75
    9. '   ' → logprob: -19.75
    10. ' ' → logprob: -20.375

Token 783: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -9.088346359931165e-07
    2. ' )' → logprob: -15.000000953674316
    3. '   ' → logprob: -15.375000953674316
    4. '       ' → logprob: -16.5
    5. ')
' → logprob: -17.125
    6. '")' → logprob: -17.375
    7. '))' → logprob: -17.5
    8. '[' → logprob: -17.75
    9. '())' → logprob: -17.75
    10. ')`' → logprob: -17.75

Token 784: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007730589131824672
    2. '        
' → logprob: -8.000773429870605
    3. 'd' → logprob: -8.500773429870605
    4. '```' → logprob: -9.000773429870605
    5. '   ' → logprob: -9.750773429870605
    6. '#' → logprob: -11.750773429870605
    7. '      ' → logprob: -12.000773429870605
    8. '           ' → logprob: -12.125773429870605
    9. '       
' → logprob: -12.375773429870605
    10. '<|end|>' → logprob: -12.375773429870605

Token 785: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05598190799355507
    2. 'd' → logprob: -2.9309818744659424
    3. 'if' → logprob: -7.1809821128845215
    4. ' if' → logprob: -8.680981636047363
    5. '   ' → logprob: -9.305981636047363
    6. ' d' → logprob: -10.180981636047363
    7. '#' (adapté à ' #') → logprob: -11.305981636047363
    8. '```' → logprob: -11.555981636047363
    9. '        
' → logprob: -12.305981636047363
    10. 'count' → logprob: -12.555981636047363

Token 786: ' Use' (ID: 7649)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.011896805837750435
    2. 'if' → logprob: -4.76189661026001
    3. 'key' → logprob: -6.63689661026001
    4. '       ' → logprob: -6.76189661026001
    5. '#' → logprob: -7.51189661026001
    6. '   ' → logprob: -8.886897087097168
    7. 'for' → logprob: -9.386897087097168
    8. 't' → logprob: -11.386897087097168
    9. ' d' → logprob: -11.761897087097168
    10. 'count' → logprob: -11.886897087097168

Token 787: ' tuple' (ID: 31311)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.054716840386390686
    2. ' d' → logprob: -3.0547168254852295
    3. '       ' → logprob: -5.429717063903809
    4. '   ' → logprob: -6.929717063903809
    5. 't' → logprob: -8.429717063903809
    6. '(d' → logprob: -8.679717063903809
    7. ' the' → logprob: -9.304717063903809
    8. '
' → logprob: -10.179717063903809
    9. ' if' → logprob: -10.429717063903809
    10. ' t' → logprob: -10.554717063903809

Token 788: ' (' (ID: 350)
  Prédit: '_key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_key' → logprob: -0.18413729965686798
    2. 'key' → logprob: -3.1841373443603516
    3. '(t' → logprob: -3.1841373443603516
    4. ' key' → logprob: -3.3091373443603516
    5. '(d' → logprob: -4.059137344360352
    6. 'd' → logprob: -4.934137344360352
    7. 't' → logprob: -5.059137344360352
    8. '1' → logprob: -5.184137344360352
    9. '(key' → logprob: -5.184137344360352
    10. 's' → logprob: -5.809137344360352

Token 789: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.14440913498401642
    2. '(t' → logprob: -2.0194091796875
    3. 'temp' → logprob: -6.8944091796875
    4. '(temp' → logprob: -8.1444091796875
    5. ' t' → logprob: -8.5194091796875
    6. ')' → logprob: -9.1444091796875
    7. ' (' → logprob: -10.1444091796875
    8. ')t' → logprob: -10.5194091796875
    9. '[t' → logprob: -10.8944091796875
    10. ',' → logprob: -12.2694091796875

Token 790: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.265633419388905e-05
    2. '(t' → logprob: -9.750062942504883
    3. 't' → logprob: -13.000062942504883
    4. '(' → logprob: -14.500062942504883
    5. ',' → logprob: -14.750062942504883
    6. ')' → logprob: -15.250062942504883
    7. '
' → logprob: -15.625062942504883
    8. ' (' → logprob: -16.375062942504883
    9. '(
' → logprob: -16.375062942504883
    10. 's' → logprob: -16.625062942504883

Token 791: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08378178626298904
    2. '(t' → logprob: -2.7087817192077637
    3. ',t' → logprob: -4.583781719207764
    4. ')' → logprob: -6.333781719207764
    5. '(' → logprob: -7.083781719207764
    6. ' ,' → logprob: -8.458782196044922
    7. 't' → logprob: -8.583782196044922
    8. '1' → logprob: -8.958782196044922
    9. '       ' → logprob: -9.333782196044922
    10. '[t' → logprob: -9.333782196044922

Token 792: ' cnt' (ID: 27340)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0048976163379848
    2. ' t' → logprob: -5.504897594451904
    3. 'temp' → logprob: -7.504897594451904
    4. ')' → logprob: -8.629898071289062
    5. ')t' → logprob: -10.379898071289062
    6. '0' → logprob: -11.129898071289062
    7. '(t' → logprob: -11.754898071289062
    8. ' temp' → logprob: -12.129898071289062
    9. 's' → logprob: -12.379898071289062
    10. '1' → logprob: -12.754898071289062

Token 793: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.558399319241289e-05
    2. '2' → logprob: -10.625025749206543
    3. ',' → logprob: -14.250025749206543
    4. ')' → logprob: -15.437525749206543
    5. '_' → logprob: -15.937525749206543
    6. '(' → logprob: -17.125024795532227
    7. ' ' → logprob: -17.625024795532227
    8. '```' → logprob: -17.750024795532227
    9. 's' → logprob: -18.187524795532227
    10. '   ' → logprob: -18.312524795532227

Token 794: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.035258349031209946
    2. ',' → logprob: -3.4102582931518555
    3. '),' → logprob: -7.5352582931518555
    4. '(t' → logprob: -8.285258293151855
    5. ')t' → logprob: -8.910258293151855
    6. ')
' → logprob: -9.035258293151855
    7. ',t' → logprob: -9.160258293151855
    8. '       ' → logprob: -9.410258293151855
    9. '(' → logprob: -9.660258293151855
    10. ')`' → logprob: -9.910258293151855

Token 795: ' as' (ID: 472)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7198339104652405
    2. ']' → logprob: -1.3448338508605957
    3. ')' → logprob: -1.4698338508605957
    4. ' in' → logprob: -4.969833850860596
    5. ')
' → logprob: -5.844833850860596
    6. ',
' → logprob: -5.969833850860596
    7. '),' → logprob: -6.469833850860596
    8. '
' → logprob: -6.844833850860596
    9. '<|end|>' → logprob: -7.094833850860596
    10. ']=' → logprob: -7.469833850860596

Token 796: ' a' (ID: 261)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.42654192447662354
    2. ' key' → logprob: -1.1765419244766235
    3. 'a' → logprob: -4.051541805267334
    4. ' a' → logprob: -4.051541805267334
    5. 'the' → logprob: -6.051541805267334
    6. ' the' → logprob: -6.426541805267334
    7. '(key' → logprob: -10.176542282104492
    8. ' keys' → logprob: -10.426542282104492
    9. 'keys' → logprob: -10.801542282104492
    10. 'd' → logprob: -11.176542282104492

Token 797: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.0619727298617363
    2. ' key' → logprob: -2.8119726181030273
    3. 'token' → logprob: -13.186972618103027
    4. '#' → logprob: -13.811972618103027
    5. '_key' → logprob: -13.811972618103027
    6. '(key' → logprob: -15.311972618103027
    7. 'd' → logprob: -15.561972618103027
    8. 'dict' → logprob: -16.186973571777344
    9. ':key' → logprob: -16.311973571777344
    10. ' ключ' → logprob: -16.561973571777344

Token 798: ' in' (ID: 306)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2951204478740692
    2. ']' → logprob: -2.4201204776763916
    3. ',' → logprob: -3.1701204776763916
    4. ')
' → logprob: -3.2951204776763916
    5. 'key' → logprob: -4.4201202392578125
    6. ' =' → logprob: -4.4201202392578125
    7. 'token' → logprob: -4.9201202392578125
    8. '
' → logprob: -5.1701202392578125
    9. ' in' → logprob: -5.2951202392578125
    10. '       ' → logprob: -5.4201202392578125

Token 799: ' dictionary' (ID: 22131)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0021946365013718605
    2. ' d' → logprob: -6.127194404602051
    3. ' the' → logprob: -12.37719440460205
    4. 'the' → logprob: -12.75219440460205
    5. '```' → logprob: -13.62719440460205
    6. '   ' → logprob: -15.37719440460205
    7. '`' → logprob: -15.75219440460205
    8. '(d' → logprob: -15.87719440460205
    9. '[d' → logprob: -16.502195358276367
    10. ')d' → logprob: -16.627195358276367

Token 800: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0061004930175840855
    2. '(d' → logprob: -5.506100654602051
    3. ' d' → logprob: -6.631100654602051
    4. ' key' → logprob: -8.75610065460205
    5. 'key' → logprob: -9.13110065460205
    6. ')' → logprob: -9.38110065460205
    7. '```' → logprob: -9.63110065460205
    8. '_key' → logprob: -9.88110065460205
    9. '   ' → logprob: -10.13110065460205
    10. ')d' → logprob: -10.13110065460205

Token 801: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2471589798224159e-05
    2. '2' → logprob: -11.500012397766113
    3. '```' → logprob: -13.500012397766113
    4. 'd' → logprob: -14.125012397766113
    5. '`' → logprob: -17.25001335144043
    6. ' d' → logprob: -17.37501335144043
    7. '[(' → logprob: -17.37501335144043
    8. ' ' → logprob: -17.37501335144043
    9. '_' → logprob: -17.50001335144043
    10. '``' → logprob: -17.62501335144043

Token 802: ':
' (ID: 734)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.14910653233528137
    2. '[d' → logprob: -2.649106502532959
    3. ']
' → logprob: -3.524106502532959
    4. '       ' → logprob: -4.899106502532959
    5. '[' → logprob: -5.024106502532959
    6. '[(' → logprob: -5.399106502532959
    7. '
' → logprob: -5.399106502532959
    8. 'd' → logprob: -6.024106502532959
    9. '][' → logprob: -6.024106502532959
    10. '[t' → logprob: -6.399106502532959

Token 803: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02358296327292919
    2. ' d' → logprob: -4.523582935333252
    3. 'd' → logprob: -5.273582935333252
    4. ' if' → logprob: -6.023582935333252
    5. ')' → logprob: -6.148582935333252
    6. '```' → logprob: -7.398582935333252
    7. '   ' → logprob: -7.523582935333252
    8. '[' → logprob: -7.773582935333252
    9. '           ' → logprob: -8.52358341217041
    10. ')
' → logprob: -8.64858341217041

Token 804: ' #' (ID: 1069)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.8957096338272095
    2. '       ' → logprob: -1.3957096338272095
    3. '(d' → logprob: -1.3957096338272095
    4. ' d' → logprob: -2.77070951461792
    5. ' (' → logprob: -5.02070951461792
    6. '(t' → logprob: -5.27070951461792
    7. '   ' → logprob: -5.27070951461792
    8. ' if' → logprob: -5.89570951461792
    9. 'if' → logprob: -5.89570951461792
    10. 't' → logprob: -6.02070951461792

Token 805: ' If' (ID: 1843)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.001718019717372954
    2. ' d' → logprob: -7.126718044281006
    3. '       ' → logprob: -7.626718044281006
    4. 'key' → logprob: -8.126717567443848
    5. 'if' → logprob: -9.626717567443848
    6. '   ' → logprob: -10.376717567443848
    7. ' key' → logprob: -10.626717567443848
    8. ' if' → logprob: -12.501717567443848
    9. '           ' → logprob: -13.001717567443848
    10. '
' → logprob: -14.376717567443848

Token 806: ' the' (ID: 290)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.10022132843732834
    2. ' (' → logprob: -2.3502213954925537
    3. '(' → logprob: -12.600221633911133
    4. 't' → logprob: -12.600221633911133
    5. ' t' → logprob: -13.225221633911133
    6. ' ' → logprob: -13.350221633911133
    7. 'd' → logprob: -13.475221633911133
    8. '   ' → logprob: -13.600221633911133
    9. ' d' → logprob: -15.100221633911133
    10. '(d' → logprob: -15.350221633911133

Token 807: ' key' (ID: 2140)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.007703280542045832
    2. ' (' → logprob: -4.8827033042907715
    3. '(' → logprob: -10.007702827453613
    4. 'key' → logprob: -10.382702827453613
    5. ' key' → logprob: -11.382702827453613
    6. 't' → logprob: -13.007702827453613
    7. ' ' → logprob: -13.132702827453613
    8. 'tuple' → logprob: -13.257702827453613
    9. ' tuple' → logprob: -13.882702827453613
    10. 'd' → logprob: -14.257702827453613

Token 808: ' is' (ID: 382)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3363182842731476
    2. ' not' → logprob: -1.5863182544708252
    3. 'in' → logprob: -2.586318254470825
    4. 'not' → logprob: -5.211318492889404
    5. ')' → logprob: -9.336318016052246
    6. ']' → logprob: -10.586318016052246
    7. 'if' → logprob: -10.961318016052246
    8. ' ' → logprob: -11.711318016052246
    9. '   ' → logprob: -11.961318016052246
    10. ' is' → logprob: -12.336318016052246

Token 809: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.39584729075431824
    2. '(t' → logprob: -1.5208473205566406
    3. ' in' → logprob: -3.1458473205566406
    4. ' (' → logprob: -3.3958473205566406
    5. 'not' → logprob: -4.895847320556641
    6. ' t' → logprob: -4.895847320556641
    7. 'in' → logprob: -5.270847320556641
    8. ' d' → logprob: -5.395847320556641
    9. 'd' → logprob: -5.770847320556641
    10. 't' → logprob: -6.395847320556641

Token 810: ' already' (ID: 4279)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16147911548614502
    2. 'in' → logprob: -1.911479115486145
    3. 'd' → logprob: -7.4114789962768555
    4. ' d' → logprob: -8.036478996276855
    5. '(t' → logprob: -8.661478996276855
    6. 't' → logprob: -9.661478996276855
    7. '(d' → logprob: -10.786478996276855
    8. ' t' → logprob: -10.786478996276855
    9. ' present' → logprob: -11.536478996276855
    10. ' already' → logprob: -11.786478996276855

Token 811: ' present' (ID: 3333)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.1974506974220276
    2. ' in' → logprob: -1.8224506378173828
    3. 'd' → logprob: -4.072450637817383
    4. ' d' → logprob: -8.072450637817383
    5. ' present' → logprob: -8.822450637817383
    6. 'present' → logprob: -10.197450637817383
    7. 't' → logprob: -11.447450637817383
    8. '   ' → logprob: -12.822450637817383
    9. '1' → logprob: -14.822450637817383
    10. ' ' → logprob: -14.947450637817383

Token 812: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.46933045983314514
    2. ':
' → logprob: -1.3443304300308228
    3. '       ' → logprob: -2.4693305492401123
    4. '):
' → logprob: -4.844330310821533
    5. ',' → logprob: -5.219330310821533
    6. ')' → logprob: -5.719330310821533
    7. '):' → logprob: -6.219330310821533
    8. '           ' → logprob: -6.219330310821533
    9. '.setdefault' → logprob: -6.594330310821533
    10. '   ' → logprob: -6.844330310821533

Token 813: ' add' (ID: 1147)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.43301430344581604
    2. 'd' → logprob: -1.0580142736434937
    3. '           ' → logprob: -5.808014392852783
    4. '       ' → logprob: -6.808014392852783
    5. '               ' → logprob: -9.308013916015625
    6. '   ' → logprob: -9.933013916015625
    7. '```' → logprob: -10.683013916015625
    8. '                   ' → logprob: -11.933013916015625
    9. '	d' → logprob: -12.308013916015625
    10. 'if' → logprob: -12.683013916015625

Token 814: ' it' (ID: 480)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.10767948627471924
    2. ' d' → logprob: -2.7326793670654297
    3. '1' → logprob: -4.10767936706543
    4. '(d' → logprob: -4.98267936706543
    5. ' (' → logprob: -4.98267936706543
    6. '(t' → logprob: -5.23267936706543
    7. '           ' → logprob: -7.85767936706543
    8. ' ' → logprob: -7.85767936706543
    9. '       ' → logprob: -8.10767936706543
    10. '   ' → logprob: -9.23267936706543

Token 815: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31087496876716614
    2. ':' → logprob: -3.3108749389648438
    3. ' =' → logprob: -3.3108749389648438
    4. ' if' → logprob: -3.6858749389648438
    5. '           ' → logprob: -3.6858749389648438
    6. '[d' → logprob: -3.6858749389648438
    7. ':
' → logprob: -3.9358749389648438
    8. '=' → logprob: -4.185874938964844
    9. 'd' → logprob: -4.560874938964844
    10. ')' → logprob: -4.810874938964844

Token 816: ' value' (ID: 1432)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.015479682944715023
    2. '0' → logprob: -5.140479564666748
    3. 'd' → logprob: -5.640479564666748
    4. 'value' → logprob: -5.890479564666748
    5. ' ' → logprob: -6.140479564666748
    6. ' value' → logprob: -7.890479564666748
    7. 'a' → logprob: -8.140480041503906
    8. ' d' → logprob: -8.390480041503906
    9. ' a' → logprob: -9.015480041503906
    10. 'the' → logprob: -11.765480041503906

Token 817: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3220033049583435
    2. ' ' → logprob: -1.8220033645629883
    3. '0' → logprob: -2.1970033645629883
    4. '=' → logprob: -6.572003364562988
    5. ' =' → logprob: -6.947003364562988
    6. ' d' → logprob: -10.322003364562988
    7. '   ' → logprob: -10.697003364562988
    8. 'd' → logprob: -11.072003364562988
    9. '```' → logprob: -11.572003364562988
    10. '`' → logprob: -12.072003364562988

Token 818: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1543160080909729
    2. '0' → logprob: -2.029315948486328
    3. 'd' → logprob: -5.029315948486328
    4. ' ' → logprob: -5.529315948486328
    5. ' d' → logprob: -7.279315948486328
    6. 'cnt' → logprob: -8.654315948486328
    7. '=' → logprob: -9.654315948486328
    8. '   ' → logprob: -9.904315948486328
    9. ' =' → logprob: -11.279315948486328
    10. '+' → logprob: -11.654315948486328

Token 819: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24143381416797638
    2. 'if' → logprob: -3.24143385887146
    3. ':' → logprob: -3.49143385887146
    4. ':
' → logprob: -3.49143385887146
    5. ' if' → logprob: -3.61643385887146
    6. ')' → logprob: -3.99143385887146
    7. '[' → logprob: -4.116433620452881
    8. '   ' → logprob: -4.991433620452881
    9. '           ' → logprob: -5.116433620452881
    10. '=' → logprob: -5.491433620452881

Token 820: 'first' (ID: 7743)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.9980719089508057
    2. 'else' → logprob: -1.4980719089508057
    3. '1' → logprob: -2.2480719089508057
    4. ')' → logprob: -2.3730719089508057
    5. ' else' → logprob: -2.7480719089508057
    6. ' d' → logprob: -2.9980719089508057
    7. '=' → logprob: -3.6230719089508057
    8. ')
' → logprob: -4.123071670532227
    9. '       ' → logprob: -4.373071670532227
    10. '
' → logprob: -4.748071670532227

Token 821: ' occurrence' (ID: 55807)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.020329197868704796
    2. '
' → logprob: -4.395328998565674
    3. ')
' → logprob: -5.895328998565674
    4. '),' → logprob: -7.145328998565674
    5. ' )' → logprob: -7.270328998565674
    6. ']' → logprob: -7.520328998565674
    7. '```' → logprob: -7.520328998565674
    8. 'token' → logprob: -7.645328998565674
    9. ' occurrence' → logprob: -8.145329475402832
    10. '`)' → logprob: -8.270329475402832

Token 822: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.42663413286209106
    2. ' else' → logprob: -1.6766340732574463
    3. 'else' → logprob: -2.5516340732574463
    4. ')' → logprob: -3.0516340732574463
    5. '
' → logprob: -4.176634311676025
    6. ')
' → logprob: -5.051634311676025
    7. '           ' → logprob: -5.551634311676025
    8. '   ' → logprob: -5.801634311676025
    9. 'd' → logprob: -6.176634311676025
    10. ' if' → logprob: -6.676634311676025

Token 823: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.508535623550415
    2. ' if' → logprob: -1.383535623550415
    3. 'if' → logprob: -3.133535623550415
    4. '           ' → logprob: -3.383535623550415
    5. ')' → logprob: -3.633535623550415
    6. 'd' → logprob: -4.633535385131836
    7. '[' → logprob: -4.758535385131836
    8. ':' → logprob: -5.133535385131836
    9. ' else' → logprob: -5.633535385131836
    10. ' d' → logprob: -5.883535385131836

Token 824: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4951130449771881
    2. '       ' → logprob: -1.3701130151748657
    3. 'if' → logprob: -1.9951130151748657
    4. '           ' → logprob: -8.745113372802734
    5. 'd' → logprob: -9.370113372802734
    6. '```' → logprob: -9.870113372802734
    7. '   ' → logprob: -9.995113372802734
    8. ')' → logprob: -10.870113372802734
    9. '	if' → logprob: -11.495113372802734
    10. '[' → logprob: -11.745113372802734

Token 825: ' Otherwise' (ID: 33987)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9476906061172485
    2. ' if' → logprob: -1.0726906061172485
    3. '       ' → logprob: -1.3226906061172485
    4. 'd' → logprob: -5.697690486907959
    5. '           ' → logprob: -8.322690963745117
    6. ' d' → logprob: -8.697690963745117
    7. '```' → logprob: -9.947690963745117
    8. '   ' → logprob: -10.572690963745117
    9. '               ' → logprob: -12.447690963745117
    10. '	if' → logprob: -12.572690963745117

Token 826: ',' (ID: 11)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.10428851842880249
    2. 'd' → logprob: -2.3542885780334473
    3. '           ' → logprob: -5.729288578033447
    4. ':' → logprob: -8.229288101196289
    5. '       ' → logprob: -8.229288101196289
    6. '               ' → logprob: -9.229288101196289
    7. ':
' → logprob: -9.854288101196289
    8. '   ' → logprob: -10.979288101196289
    9. ':d' → logprob: -11.104288101196289
    10. '                   ' → logprob: -11.229288101196289

Token 827: ' increment' (ID: 24032)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.4740869104862213
    2. 'd' → logprob: -0.9740868806838989
    3. '           ' → logprob: -12.72408676147461
    4. '       ' → logprob: -12.84908676147461
    5. '	d' → logprob: -13.22408676147461
    6. '   ' → logprob: -13.97408676147461
    7. '
' → logprob: -14.47408676147461
    8. '[d' → logprob: -15.97408676147461
    9. '```' → logprob: -15.97408676147461
    10. '+=' → logprob: -16.22408676147461

Token 828: ' its' (ID: 1617)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.38725531101226807
    2. 'd' → logprob: -1.137255311012268
    3. ' the' → logprob: -8.137255668640137
    4. 'the' → logprob: -9.637255668640137
    5. ' its' → logprob: -11.762255668640137
    6. '1' → logprob: -12.637255668640137
    7. ')d' → logprob: -12.637255668640137
    8. '[' → logprob: -12.762255668640137
    9. '[d' → logprob: -12.762255668640137
    10. ' ' → logprob: -13.387255668640137

Token 829: ' count' (ID: 3605)
  Prédit: ' value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.07241170853376389
    2. 'value' → logprob: -2.6974117755889893
    3. ' d' → logprob: -6.94741153717041
    4. 'd' → logprob: -7.44741153717041
    5. '[' → logprob: -8.44741153717041
    6. ' existing' → logprob: -8.57241153717041
    7. 'count' → logprob: -8.82241153717041
    8. ' count' → logprob: -8.94741153717041
    9. '1' → logprob: -9.44741153717041
    10. '```' → logprob: -10.44741153717041

Token 830: ' by' (ID: 656)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.1866141557693481
    2. '       ' → logprob: -1.8116141557693481
    3. ' if' → logprob: -2.0616140365600586
    4. '[d' → logprob: -2.0616140365600586
    5. ' d' → logprob: -2.4366140365600586
    6. '
' → logprob: -2.5616140365600586
    7. 'if' → logprob: -2.6866140365600586
    8. '[' → logprob: -4.311614036560059
    9. '(d' → logprob: -4.686614036560059
    10. '   ' → logprob: -5.311614036560059

Token 831: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.16022484004497528
    2. ' ' → logprob: -1.9102247953414917
    3. '+' → logprob: -15.035224914550781
    4. '```' → logprob: -15.535224914550781
    5. ' ' → logprob: -15.785224914550781
    6. ' d' → logprob: -16.53522491455078
    7. ' +' → logprob: -16.91022491455078
    8. 'd' → logprob: -17.03522491455078
    9. ' one' → logprob: -17.28522491455078
    10. '   ' → logprob: -19.41022491455078

Token 832: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006278486107476056
    2. ' ' → logprob: -7.3756279945373535
    3. '+' → logprob: -13.875627517700195
    4. '```' → logprob: -14.875627517700195
    5. ' +' → logprob: -17.875627517700195
    6. '   ' → logprob: -18.125627517700195
    7. 'd' → logprob: -18.250627517700195
    8. '=' → logprob: -18.625627517700195
    9. '`' → logprob: -19.125627517700195
    10. ' d' → logprob: -19.375627517700195

Token 833: '
' (ID: 198)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7165541648864746
    2. '       ' → logprob: -0.9665541648864746
    3. 'if' → logprob: -2.4665541648864746
    4. 'd' → logprob: -3.8415541648864746
    5. '   ' → logprob: -4.716554164886475
    6. ' d' → logprob: -5.091554164886475
    7. ':
' → logprob: -5.841554164886475
    8. '{
' → logprob: -6.841554164886475
    9. ')
' → logprob: -6.966554164886475
    10. ')' → logprob: -7.216554164886475

Token 834: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15931588411331177
    2. ' if' → logprob: -2.034315824508667
    3. 'if' → logprob: -4.534316062927246
    4. 'd' → logprob: -6.034316062927246
    5. '   ' → logprob: -6.159316062927246
    6. ' d' → logprob: -7.784316062927246
    7. '```' → logprob: -8.784316062927246
    8. '           ' → logprob: -9.409316062927246
    9. '        
' → logprob: -9.409316062927246
    10. '
' → logprob: -9.534316062927246

Token 835: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.26662805676460266
    2. '       ' → logprob: -1.5166280269622803
    3. 'd' → logprob: -4.641628265380859
    4. ' if' → logprob: -5.391628265380859
    5. '   ' → logprob: -8.39162826538086
    6. '```' → logprob: -9.14162826538086
    7. 'key' → logprob: -10.14162826538086
    8. ' d' → logprob: -12.14162826538086
    9. '``' → logprob: -12.64162826538086
    10. '           ' → logprob: -12.64162826538086

Token 836: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.38687458634376526
    2. '(t' → logprob: -1.1368745565414429
    3. ' ' → logprob: -13.136874198913574
    4. '   ' → logprob: -14.011874198913574
    5. '(' → logprob: -14.511874198913574
    6. '(T' → logprob: -15.636874198913574
    7. '  ' → logprob: -16.76187515258789
    8. '(tuple' → logprob: -17.88687515258789
    9. '((' → logprob: -18.13687515258789
    10. '    ' → logprob: -18.13687515258789

Token 837: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0028695426881313324
    2. '(t' → logprob: -5.877869606018066
    3. ' t' → logprob: -9.752869606018066
    4. ' (' → logprob: -13.127869606018066
    5. '`t' → logprob: -13.252869606018066
    6. '   ' → logprob: -13.502869606018066
    7. '	t' → logprob: -14.252869606018066
    8. ')t' → logprob: -15.002869606018066
    9. ',t' → logprob: -16.12786865234375
    10. '_t' → logprob: -16.25286865234375

Token 838: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. '(t' → logprob: -16.0
    3. '```' → logprob: -16.25
    4. ')' → logprob: -16.75
    5. ' ' → logprob: -16.875
    6. 't' → logprob: -17.0
    7. ',' → logprob: -17.375
    8. '_' → logprob: -17.625
    9. ' (' → logprob: -18.6875
    10. '   ' → logprob: -18.8125

Token 839: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.314625690924004e-05
    2. ',c' → logprob: -10.000073432922363
    3. ',count' → logprob: -11.500073432922363
    4. ',t' → logprob: -11.625073432922363
    5. ' ,' → logprob: -12.750073432922363
    6. ',
' → logprob: -14.375073432922363
    7. ',int' → logprob: -14.750073432922363
    8. ',",' → logprob: -14.875073432922363
    9. ',tp' → logprob: -15.000073432922363
    10. ',n' → logprob: -15.000073432922363

Token 840: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.00020699729793705046
    2. ' cnt' → logprob: -8.50020694732666
    3. '   ' → logprob: -13.50020694732666
    4. '(cnt' → logprob: -14.50020694732666
    5. '	cnt' → logprob: -14.75020694732666
    6. 'count' → logprob: -14.87520694732666
    7. '[cnt' → logprob: -15.00020694732666
    8. ' ' → logprob: -15.50020694732666
    9. ')' → logprob: -15.75020694732666
    10. 'ct' → logprob: -16.500207901000977

Token 841: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ')' → logprob: -14.875001907348633
    3. ' ' → logprob: -15.000001907348633
    4. '   ' → logprob: -15.000001907348633
    5. '```' → logprob: -15.375001907348633
    6. '_' → logprob: -17.812501907348633
    7. '
' → logprob: -18.000001907348633
    8. '``' → logprob: -18.062501907348633
    9. '       ' → logprob: -18.500001907348633
    10. '     ' → logprob: -18.625001907348633

Token 842: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001249925117008388
    2. 'in' → logprob: -9.75012493133545
    3. ' )' → logprob: -9.87512493133545
    4. ' in' → logprob: -11.50012493133545
    5. ']' → logprob: -13.37512493133545
    6. 'not' → logprob: -13.75012493133545
    7. ' not' → logprob: -13.75012493133545
    8. '   ' → logprob: -14.50012493133545
    9. '）' → logprob: -15.37512493133545
    10. ',)' → logprob: -15.75012493133545

Token 843: ' not' (ID: 625)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4197427034378052
    2. 'in' → logprob: -1.4197427034378052
    3. ' not' → logprob: -2.4197425842285156
    4. 'not' → logprob: -4.419742584228516
    5. ')' → logprob: -10.794742584228516
    6. ']' → logprob: -13.169742584228516
    7. ' ' → logprob: -13.294742584228516
    8. '   ' → logprob: -14.544742584228516
    9. '	in' → logprob: -14.919742584228516
    10. 'n' → logprob: -15.544742584228516

Token 844: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.7161284685134888
    2. ' in' → logprob: -0.7161284685134888
    3. 'd' → logprob: -3.841128349304199
    4. ' d' → logprob: -6.966128349304199
    5. ')' → logprob: -8.9661283493042
    6. '   ' → logprob: -10.2161283493042
    7. ')d' → logprob: -10.3411283493042
    8. '(d' → logprob: -10.9661283493042
    9. '[' → logprob: -11.0911283493042
    10. '[d' → logprob: -11.2161283493042

Token 845: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0007100477814674377
    2. ' d' → logprob: -7.2507100105285645
    3. ')d' → logprob: -18.500709533691406
    4. '	d' → logprob: -18.625709533691406
    5. '   ' → logprob: -19.625709533691406
    6. '
' → logprob: -20.750709533691406
    7. '[d' → logprob: -21.250709533691406
    8. '(d' → logprob: -21.875709533691406
    9. '>d' → logprob: -22.000709533691406
    10. '_d' → logprob: -22.625709533691406

Token 846: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. 'd' → logprob: -15.125
    3. '```' → logprob: -16.75
    4. '_' → logprob: -18.0
    5. '   ' → logprob: -18.125
    6. 'f' → logprob: -18.25
    7. '१' → logprob: -19.0
    8. 's' → logprob: -19.25
    9. '১' → logprob: -19.5
    10. '۱' → logprob: -19.625

Token 847: '.keys' (ID: 18392)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1801627278327942
    2. ':
' → logprob: -1.8051626682281494
    3. '       ' → logprob: -8.68016242980957
    4. '=' → logprob: -9.30516242980957
    5. ' =' → logprob: -10.30516242980957
    6. '           ' → logprob: -10.43016242980957
    7. '   ' → logprob: -10.68016242980957
    8. '[' → logprob: -10.93016242980957
    9. '():
' → logprob: -11.05516242980957
    10. '):
' → logprob: -11.80516242980957

Token 848: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.13737717270851135
    2. '():
' → logprob: -2.1373772621154785
    3. ':' → logprob: -4.7623772621154785
    4. '()' → logprob: -6.3873772621154785
    5. ':
' → logprob: -9.13737678527832
    6. '():
' → logprob: -10.76237678527832
    7. '):' → logprob: -10.88737678527832
    8. '       ' → logprob: -12.38737678527832
    9. '[' → logprob: -13.13737678527832
    10. '(' → logprob: -13.13737678527832

Token 849: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0010977147612720728
    2. ' d' → logprob: -7.501097679138184
    3. '       ' → logprob: -8.376097679138184
    4. 'd' → logprob: -8.626097679138184
    5. '               ' → logprob: -9.876097679138184
    6. '	       ' → logprob: -10.626097679138184
    7. '```' → logprob: -10.626097679138184
    8. '{' → logprob: -11.251097679138184
    9. '          ' → logprob: -12.376097679138184
    10. '   ' → logprob: -13.001097679138184

Token 850: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.38781633973121643
    2. ' d' → logprob: -1.637816309928894
    3. '           ' → logprob: -2.2628164291381836
    4. '       ' → logprob: -4.262816429138184
    5. '               ' → logprob: -4.762816429138184
    6. '   ' → logprob: -8.012816429138184
    7. '```' → logprob: -11.137816429138184
    8. '	d' → logprob: -11.262816429138184
    9. ' ' → logprob: -12.012816429138184
    10. '
' → logprob: -13.262816429138184

Token 851: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. 'd' → logprob: -17.625
    3. '```' → logprob: -18.625
    4. '' → logprob: -19.5
    5. '_' → logprob: -19.75
    6. '{' → logprob: -20.0
    7. '۱' → logprob: -20.125
    8. ' ' → logprob: -20.3125
    9. '
' → logprob: -20.3125
    10. '   ' → logprob: -20.4375

Token 852: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -1.9862216504407115e-05
    2. '[' → logprob: -10.875020027160645
    3. '[t' → logprob: -14.125020027160645
    4. ' [(' → logprob: -16.750019073486328
    5. '[
' → logprob: -17.250019073486328
    6. '(' → logprob: -17.375019073486328
    7. '   ' → logprob: -17.375019073486328
    8. '((' → logprob: -18.125019073486328
    9. ' (' → logprob: -18.625019073486328
    10. '[((' → logprob: -18.875019073486328

Token 853: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -6.704273118884885e-07
    2. '(t' → logprob: -15.375000953674316
    3. ' t' → logprob: -15.750000953674316
    4. '`t' → logprob: -15.750000953674316
    5. ')t' → logprob: -17.0
    6. '   ' → logprob: -17.625
    7. '	t' → logprob: -17.75
    8. '           ' → logprob: -19.25
    9. '_t' → logprob: -19.5
    10. '<t' → logprob: -19.875

Token 854: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. 's' → logprob: -14.250000953674316
    3. 't' → logprob: -15.125000953674316
    4. '```' → logprob: -16.500001907348633
    5. '(t' → logprob: -16.625001907348633
    6. ')' → logprob: -17.125001907348633
    7. ',' → logprob: -17.250001907348633
    8. '(s' → logprob: -17.375001907348633
    9. ' ' → logprob: -18.437501907348633
    10. '(' → logprob: -18.625001907348633

Token 855: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.6537622034084052e-05
    2. ',c' → logprob: -10.75002670288086
    3. ',count' → logprob: -13.12502670288086
    4. ' ,' → logprob: -13.50002670288086
    5. ',
' → logprob: -14.62502670288086
    6. ',t' → logprob: -15.12502670288086
    7. ',k' → logprob: -15.50002670288086
    8. '‌,' → logprob: -15.62502670288086
    9. '),' → logprob: -15.87502670288086
    10. ',n' → logprob: -15.87502670288086

Token 856: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -9.65101717156358e-05
    2. ' cnt' → logprob: -9.250096321105957
    3. '(cnt' → logprob: -16.000097274780273
    4. '   ' → logprob: -16.250097274780273
    5. '	cnt' → logprob: -17.000097274780273
    6. ' ' → logprob: -17.750097274780273
    7. 'cn' → logprob: -17.875097274780273
    8. '[cnt' → logprob: -17.875097274780273
    9. '0' → logprob: -18.000097274780273
    10. '1' → logprob: -18.000097274780273

Token 857: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.3458322731312364e-06
    2. ' ' → logprob: -12.625007629394531
    3. '   ' → logprob: -13.250007629394531
    4. 'cnt' → logprob: -13.875007629394531
    5. '```' → logprob: -14.375007629394531
    6. ')' → logprob: -15.375007629394531
    7. '`' → logprob: -16.81250762939453
    8. '_cnt' → logprob: -17.00000762939453
    9. '_' → logprob: -17.06250762939453
    10. '-' → logprob: -17.18750762939453

Token 858: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.1270754039287567
    2. ']' → logprob: -2.127075433731079
    3. ')' → logprob: -9.2520751953125
    4. ']=' → logprob: -10.1270751953125
    5. '])' → logprob: -12.0020751953125
    6. ' ]' → logprob: -12.6270751953125
    7. ']]' → logprob: -14.0020751953125
    8. ' )' → logprob: -14.7520751953125
    9. '')]' → logprob: -15.3770751953125
    10. '")]' → logprob: -15.8770751953125

Token 859: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10020710527896881
    2. ' =' → logprob: -2.3502070903778076
    3. ']' → logprob: -15.100207328796387
    4. ']=' → logprob: -16.47520637512207
    5. '[' → logprob: -18.47520637512207
    6. ' ' → logprob: -18.47520637512207
    7. '<|end|>' → logprob: -18.60020637512207
    8. ')' → logprob: -19.10020637512207
    9. '=
' → logprob: -19.22520637512207
    10. ')=' → logprob: -19.97520637512207

Token 860: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.639096970204264e-05
    2. ' ' → logprob: -9.250096321105957
    3. '   ' → logprob: -15.250096321105957
    4. '0' → logprob: -18.500097274780273
    5. '```' → logprob: -19.875097274780273
    6. '  ' → logprob: -20.000097274780273
    7. '       ' → logprob: -20.250097274780273
    8. '           ' → logprob: -20.375097274780273
    9. '    ' → logprob: -20.750097274780273
    10. ' ' → logprob: -21.187597274780273

Token 861: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '   ' → logprob: -17.125001907348633
    4. '0' → logprob: -20.375001907348633
    5. '```' → logprob: -21.125001907348633
    6. '  ' → logprob: -21.250001907348633
    7. '１' → logprob: -21.937501907348633
    8. '`' → logprob: -22.000001907348633
    9. '       ' → logprob: -22.187501907348633
    10. '     ' → logprob: -22.625001907348633

Token 862: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7124579548835754
    2. 'else' → logprob: -0.7124579548835754
    3. ' else' → logprob: -3.9624578952789307
    4. '	else' → logprob: -9.587457656860352
    5. '<|end|>' → logprob: -11.837457656860352
    6. '}else' → logprob: -12.337457656860352
    7. '   ' → logprob: -12.337457656860352
    8. ':
' → logprob: -12.587457656860352
    9. 'elif' → logprob: -12.712457656860352
    10. '```' → logprob: -12.962457656860352

Token 863: '       ' (ID: 309)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.4788646399974823
    2. '       ' → logprob: -0.9788646697998047
    3. ' else' → logprob: -5.353864669799805
    4. '```' → logprob: -10.353864669799805
    5. '   ' → logprob: -11.728864669799805
    6. '	else' → logprob: -12.853864669799805
    7. '           ' → logprob: -13.353864669799805
    8. '}else' → logprob: -13.978864669799805
    9. '_else' → logprob: -15.228864669799805
    10. 'elif' → logprob: -15.228864669799805

Token 864: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.014193004928529263
    2. '       ' → logprob: -4.514193058013916
    3. ' else' → logprob: -5.764193058013916
    4. '	else' → logprob: -13.889192581176758
    5. '   ' → logprob: -14.264192581176758
    6. '```' → logprob: -14.764192581176758
    7. '           ' → logprob: -15.514192581176758
    8. 'elif' → logprob: -16.889192581176758
    9. '_else' → logprob: -17.139192581176758
    10. '}else' → logprob: -17.264192581176758

Token 865: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0037426024209707975
    2. ' d' → logprob: -5.878742694854736
    3. 'd' → logprob: -7.003742694854736
    4. '               ' → logprob: -11.628742218017578
    5. '   ' → logprob: -11.753742218017578
    6. '[' → logprob: -12.878742218017578
    7. ':' → logprob: -13.003742218017578
    8. ':
' → logprob: -13.503742218017578
    9. '       ' → logprob: -13.628742218017578
    10. '          ' → logprob: -13.753742218017578

Token 866: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11031809449195862
    2. 'd' → logprob: -2.360318183898926
    3. ' d' → logprob: -4.610318183898926
    4. '               ' → logprob: -9.360318183898926
    5. '   ' → logprob: -10.735318183898926
    6. '       ' → logprob: -12.735318183898926
    7. '	d' → logprob: -14.985318183898926
    8. '          ' → logprob: -15.485318183898926
    9. '                   ' → logprob: -15.485318183898926
    10. '```' → logprob: -15.985318183898926

Token 867: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.011314007453620434
    2. ' d' → logprob: -4.5113139152526855
    3. '           ' → logprob: -8.261314392089844
    4. '               ' → logprob: -12.011314392089844
    5. '       ' → logprob: -14.011314392089844
    6. '   ' → logprob: -14.261314392089844
    7. '	d' → logprob: -15.136314392089844
    8. '```' → logprob: -17.386314392089844
    9. '                   ' → logprob: -17.636314392089844
    10. '         ' → logprob: -18.636314392089844

Token 868: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.096126576769166e-05
    2. '[(' → logprob: -10.125041007995605
    3. '[' → logprob: -14.875041007995605
    4. '```' → logprob: -15.250041007995605
    5. '   ' → logprob: -16.62504005432129
    6. '[
' → logprob: -16.75004005432129
    7. '[((' → logprob: -18.25004005432129
    8. '１' → logprob: -18.37504005432129
    9. '[...]' → logprob: -18.62504005432129
    10. '{' → logprob: -18.87504005432129

Token 869: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -16.625
    3. '[...]' → logprob: -19.625
    4. '(' → logprob: -21.125
    5. '```' → logprob: -21.375
    6. '((' → logprob: -21.375
    7. '   ' → logprob: -21.875
    8. '[
' → logprob: -22.25
    9. '[((' → logprob: -23.125
    10. '#' → logprob: -23.375

Token 870: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -2.5776860184123507e-06
    2. '(t' → logprob: -13.00000286102295
    3. ' t' → logprob: -15.62500286102295
    4. '`t' → logprob: -16.750001907348633
    5. '	t' → logprob: -17.000001907348633
    6. ')t' → logprob: -17.750001907348633
    7. '   ' → logprob: -19.375001907348633
    8. '_t' → logprob: -19.375001907348633
    9. '<t' → logprob: -19.750001907348633
    10. '[t' → logprob: -20.000001907348633

Token 871: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.062180884182453156
    2. 't' → logprob: -2.812180995941162
    3. '(t' → logprob: -8.687180519104004
    4. 's' → logprob: -10.312180519104004
    5. ' t' → logprob: -12.187180519104004
    6. '_t' → logprob: -13.187180519104004
    7. '```' → logprob: -13.312180519104004
    8. '`t' → logprob: -14.562180519104004
    9. ':t' → logprob: -14.937180519104004
    10. ')t' → logprob: -14.937180519104004

Token 872: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012314191553741693
    2. ',(' → logprob: -6.7512311935424805
    3. '[(' → logprob: -9.87623119354248
    4. ',t' → logprob: -11.75123119354248
    5. ' ,' → logprob: -13.50123119354248
    6. ' (' → logprob: -15.62623119354248
    7. ',
' → logprob: -16.626232147216797
    8. ')][' → logprob: -16.626232147216797
    9. '(t' → logprob: -17.126232147216797
    10. '   ' → logprob: -17.501232147216797

Token 873: ' cnt' (ID: 27340)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.619416356086731
    2. '(cnt' → logprob: -0.994416356086731
    3. 'cnt' → logprob: -2.9944162368774414
    4. ' (' → logprob: -3.6194162368774414
    5. '(d' → logprob: -5.369416236877441
    6. ' d' → logprob: -5.494416236877441
    7. ' cnt' → logprob: -6.119416236877441
    8. ')' → logprob: -6.869416236877441
    9. '(t' → logprob: -6.994416236877441
    10. '(count' → logprob: -7.869416236877441

Token 874: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001366744691040367
    2. '[(' → logprob: -9.125136375427246
    3. '(' → logprob: -11.500136375427246
    4. '((' → logprob: -11.875136375427246
    5. '   ' → logprob: -12.875136375427246
    6. ']' → logprob: -13.125136375427246
    7. '(cnt' → logprob: -13.250136375427246
    8. ')' → logprob: -14.375136375427246
    9. 'cnt' → logprob: -14.375136375427246
    10. '[' → logprob: -14.375136375427246

Token 875: ')]' (ID: 15710)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0004424667276907712
    2. ')' → logprob: -8.250442504882812
    3. ')]' → logprob: -9.250442504882812
    4. ']+=' → logprob: -9.375442504882812
    5. ' ]' → logprob: -15.875442504882812
    6. ']+' → logprob: -16.625442504882812
    7. '`]' → logprob: -16.875442504882812
    8. '])' → logprob: -16.875442504882812
    9. ']=' → logprob: -17.625442504882812
    10. '```' → logprob: -18.625442504882812

Token 876: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0015028368216007948
    2. ' +=' → logprob: -6.501502990722656
    3. '=' → logprob: -14.876502990722656
    4. ']+=' → logprob: -15.876502990722656
    5. '   ' → logprob: -19.251502990722656
    6. '```' → logprob: -20.001502990722656
    7. '+="' → logprob: -20.751502990722656
    8. '+' → logprob: -20.876502990722656
    9. '+=(' → logprob: -21.126502990722656
    10. '+='' → logprob: -21.501502990722656

Token 877: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013260759878903627
    2. ' ' → logprob: -6.626326084136963
    3. '   ' → logprob: -15.751325607299805
    4. '```' → logprob: -19.126325607299805
    5. '       ' → logprob: -19.876325607299805
    6. ' ' → logprob: -20.001325607299805
    7. '           ' → logprob: -20.126325607299805
    8. '  ' → logprob: -20.501325607299805
    9. '
' → logprob: -21.001325607299805
    10. '    ' → logprob: -21.688825607299805

Token 878: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '   ' → logprob: -19.375001907348633
    4. '```' → logprob: -21.125001907348633
    5. '
' → logprob: -22.750001907348633
    6. '１' → logprob: -22.875001907348633
    7. '  ' → logprob: -23.000001907348633
    8. '       ' → logprob: -23.625001907348633
    9. '2' → logprob: -23.937501907348633
    10. '-' → logprob: -24.062501907348633

Token 879: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3604752719402313
    2. '   ' → logprob: -1.4854753017425537
    3. '<|end|>' → logprob: -2.9854753017425537
    4. '#' → logprob: -4.735475063323975
    5. 'for' → logprob: -4.860475063323975
    6. ' for' → logprob: -5.360475063323975
    7. '```' → logprob: -6.360475063323975
    8. '        
' → logprob: -7.735475063323975
    9. ')' → logprob: -7.735475063323975
    10. '
' → logprob: -8.110475540161133

Token 880: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014510401524603367
    2. '   ' → logprob: -4.514510631561279
    3. '```' → logprob: -6.514510631561279
    4. '        
' → logprob: -7.389510631561279
    5. '
' → logprob: -7.764510631561279
    6. ' for' → logprob: -8.139510154724121
    7. 'for' → logprob: -8.389510154724121
    8. '<|end|>' → logprob: -9.014510154724121
    9. '           ' → logprob: -9.139510154724121
    10. '    
' → logprob: -10.139510154724121

Token 881: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3479847013950348
    2. 'if' → logprob: -1.7229846715927124
    3. ' if' → logprob: -2.597984790802002
    4. 'for' → logprob: -3.597984790802002
    5. '   ' → logprob: -5.097984790802002
    6. ' for' → logprob: -5.472984790802002
    7. '#' (adapté à ' #') → logprob: -6.722984790802002
    8. '```' → logprob: -6.847984790802002
    9. '           ' → logprob: -7.722984790802002
    10. '        
' → logprob: -9.597984313964844

Token 882: ' Do' (ID: 3756)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0018081029411405325
    2. '       ' → logprob: -6.876808166503906
    3. '#' → logprob: -7.626808166503906
    4. ' if' → logprob: -8.626808166503906
    5. '   ' → logprob: -10.251808166503906
    6. 'key' → logprob: -10.876808166503906
    7. 'continue' → logprob: -10.876808166503906
    8. 'for' → logprob: -11.501808166503906
    9. '```' → logprob: -12.001808166503906
    10. 'd' → logprob: -12.126808166503906

Token 883: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.06424454599618912
    2. 'the' → logprob: -2.814244508743286
    3. ' if' → logprob: -6.939244747161865
    4. 'if' → logprob: -7.564244747161865
    5. ' (' → logprob: -8.439244270324707
    6. ' not' → logprob: -9.189244270324707
    7. ' same' → logprob: -9.314244270324707
    8. '   ' → logprob: -9.314244270324707
    9. '#' → logprob: -9.439244270324707
    10. '(' → logprob: -9.939244270324707

Token 884: ' same' (ID: 2684)
  Prédit: 'same'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'same' → logprob: -0.3876248002052307
    2. ' same' → logprob: -1.512624740600586
    3. 'if' → logprob: -2.637624740600586
    4. '```' → logprob: -3.637624740600586
    5. ' if' → logprob: -6.137624740600586
    6. 'else' → logprob: -7.762624740600586
    7. '``' → logprob: -8.762624740600586
    8. 'elif' → logprob: -9.012624740600586
    9. 's' → logprob: -9.387624740600586
    10. '   ' → logprob: -9.887624740600586

Token 885: ' for' (ID: 395)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.1058391332626343
    2. '       ' → logprob: -1.3558391332626343
    3. 'if' → logprob: -1.3558391332626343
    4. ' for' → logprob: -2.480839252471924
    5. 'for' → logprob: -2.730839252471924
    6. '   ' → logprob: -5.980839252471924
    7. ' with' → logprob: -6.730839252471924
    8. 'with' → logprob: -7.355839252471924
    9. '(' → logprob: -9.480838775634766
    10. '           ' → logprob: -9.605838775634766

Token 886: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0011526016751304269
    2. ' d' → logprob: -7.126152515411377
    3. '(d' → logprob: -8.001152992248535
    4. ' (' → logprob: -12.251152992248535
    5. '       ' → logprob: -12.501152992248535
    6. '   ' → logprob: -13.001152992248535
    7. '(' → logprob: -13.626152992248535
    8. '           ' → logprob: -15.626152992248535
    9. '```' → logprob: -15.876152992248535
    10. '	d' → logprob: -16.12615203857422

Token 887: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. '₂' → logprob: -19.875
    3. '２' → logprob: -20.125
    4. ' ' → logprob: -20.875
    5. '۲' → logprob: -21.0
    6. '```' → logprob: -21.25
    7. '   ' → logprob: -21.375
    8. '(' → logprob: -21.875
    9. '  ' → logprob: -23.5
    10. 'd' → logprob: -23.5

Token 888: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5772700309753418
    2. '[(' → logprob: -1.3272700309753418
    3. ' if' → logprob: -1.8272700309753418
    4. 'if' → logprob: -4.577270030975342
    5. '   ' → logprob: -6.577270030975342
    6. '```' → logprob: -8.4522705078125
    7. '        
' → logprob: -8.8272705078125
    8. '.setdefault' → logprob: -8.9522705078125
    9. '           ' → logprob: -9.5772705078125
    10. '[
' → logprob: -9.7022705078125

Token 889: ' key' (ID: 2140)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.07899157702922821
    2. ' (' → logprob: -2.578991651535034
    3. '   ' → logprob: -10.078991889953613
    4. '       ' → logprob: -10.078991889953613
    5. '(' → logprob: -11.453991889953613
    6. '(T' → logprob: -12.703991889953613
    7. '        
' → logprob: -14.203991889953613
    8. ' ' → logprob: -14.328991889953613
    9. '```' → logprob: -14.703991889953613
    10. '    ' → logprob: -14.703991889953613

Token 890: ' (' (ID: 350)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.11598359048366547
    2. ' (' → logprob: -2.615983486175537
    3. '[(' → logprob: -3.740983486175537
    4. '((' → logprob: -4.490983486175537
    5. '   ' → logprob: -7.490983486175537
    6. '(' → logprob: -7.490983486175537
    7. '(T' → logprob: -8.740983963012695
    8. '       ' → logprob: -8.990983963012695
    9. '```' → logprob: -11.240983963012695
    10. '           ' → logprob: -11.365983963012695

Token 891: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0015293825417757034
    2. '(t' → logprob: -6.501529216766357
    3. ' t' → logprob: -10.626529693603516
    4. '	t' → logprob: -13.876529693603516
    5. '   ' → logprob: -14.126529693603516
    6. '`t' → logprob: -14.751529693603516
    7. ' (' → logprob: -14.876529693603516
    8. ')t' → logprob: -16.001529693603516
    9. '       ' → logprob: -16.876529693603516
    10. '(' → logprob: -17.251529693603516

Token 892: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.3856492842023727e-06
    2. '(t' → logprob: -13.750000953674316
    3. 't' → logprob: -15.125000953674316
    4. '```' → logprob: -18.375001907348633
    5. '(' → logprob: -18.750001907348633
    6. ' (' → logprob: -19.375001907348633
    7. '₂' → logprob: -19.375001907348633
    8. '   ' → logprob: -19.625001907348633
    9. ' ' → logprob: -19.875001907348633
    10. 's' → logprob: -20.500001907348633

Token 893: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009768366580829024
    2. ',t' → logprob: -7.000977039337158
    3. ' ,' → logprob: -9.8759765625
    4. ',(' → logprob: -11.6259765625
    5. ',
' → logprob: -13.8759765625
    6. '   ' → logprob: -13.8759765625
    7. '(t' → logprob: -14.5009765625
    8. ',c' → logprob: -15.1259765625
    9. ' ' → logprob: -15.5009765625
    10. ',d' → logprob: -15.5009765625

Token 894: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.026491880416870117
    2. ' cnt' → logprob: -3.65149188041687
    3. '(cnt' → logprob: -9.40149211883545
    4. 'cn' → logprob: -10.40149211883545
    5. '   ' → logprob: -10.77649211883545
    6. 'ct' → logprob: -10.77649211883545
    7. '	cnt' → logprob: -11.77649211883545
    8. ' ' → logprob: -12.40149211883545
    9. '[cnt' → logprob: -12.52649211883545
    10. ')' → logprob: -13.02649211883545

Token 895: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.179757758975029
    2. '2' → logprob: -1.8047577142715454
    3. '```' → logprob: -12.429758071899414
    4. ',' → logprob: -13.054758071899414
    5. '
' → logprob: -13.429758071899414
    6. '

' → logprob: -13.804758071899414
    7. '   ' → logprob: -13.929758071899414
    8. ')' → logprob: -14.179758071899414
    9. 'cnt' → logprob: -14.617258071899414
    10. '`' → logprob: -14.929758071899414

Token 896: ')
' (ID: 446)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05255860835313797
    2. ')' → logprob: -3.177558660507202
    3. '):
' → logprob: -4.677558422088623
    4. ' ):' → logprob: -9.177558898925781
    5. '       ' → logprob: -10.427558898925781
    6. ')]' → logprob: -10.927558898925781
    7. ' )' → logprob: -11.177558898925781
    8. '   ' → logprob: -11.677558898925781
    9. '):
' → logprob: -11.927558898925781
    10. ']:' → logprob: -12.177558898925781

Token 897: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012306439690291882
    2. ' if' → logprob: -4.512306213378906
    3. 'if' → logprob: -7.137306213378906
    4. '```' → logprob: -8.137306213378906
    5. '           ' → logprob: -9.637306213378906
    6. '   ' → logprob: -10.012306213378906
    7. '        
' → logprob: -11.262306213378906
    8. ',' → logprob: -11.387306213378906
    9. ':' → logprob: -11.512306213378906
    10. '<|end|>' → logprob: -12.512306213378906

Token 898: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.23709110915660858
    2. '       ' → logprob: -1.737091064453125
    3. ' if' → logprob: -3.362091064453125
    4. '```' → logprob: -7.987091064453125
    5. '   ' → logprob: -10.737091064453125
    6. '           ' → logprob: -10.862091064453125
    7. '``' → logprob: -13.237091064453125
    8. '	if' → logprob: -13.862091064453125
    9. '        
' → logprob: -14.362091064453125
    10. '
' → logprob: -14.362091064453125

Token 899: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.25195568799972534
    2. '(t' → logprob: -1.5019557476043701
    3. '   ' → logprob: -11.12695598602295
    4. '(' → logprob: -11.87695598602295
    5. ' ' → logprob: -13.00195598602295
    6. '(T' → logprob: -13.50195598602295
    7. '    ' → logprob: -15.00195598602295
    8. '  ' → logprob: -15.12695598602295
    9. '       ' → logprob: -15.25195598602295
    10. '	' → logprob: -15.75195598602295

Token 900: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.00020520923135336488
    2. '(t' → logprob: -8.500205039978027
    3. ' t' → logprob: -14.250205039978027
    4. '	t' → logprob: -14.375205039978027
    5. '`t' → logprob: -15.500205039978027
    6. ')t' → logprob: -15.625205039978027
    7. ' (' → logprob: -17.375205993652344
    8. '_t' → logprob: -17.500205993652344
    9. '   ' → logprob: -17.500205993652344
    10. '[t' → logprob: -17.750205993652344

Token 901: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.704273118884885e-07
    2. 't' → logprob: -14.750000953674316
    3. '```' → logprob: -17.0
    4. '
' → logprob: -17.625
    5. '₂' → logprob: -18.125
    6. '(t' → logprob: -18.75
    7. '``' → logprob: -19.0625
    8. '２' → logprob: -19.4375
    9. '۲' → logprob: -19.625
    10. ' ' → logprob: -19.625

Token 902: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1398757123970427e-05
    2. ',t' → logprob: -11.750011444091797
    3. ' ,' → logprob: -12.750011444091797
    4. ',
' → logprob: -15.500011444091797
    5. ',c' → logprob: -15.625011444091797
    6. ',(' → logprob: -16.875011444091797
    7. '‌,' → logprob: -17.625011444091797
    8. ',int' → logprob: -17.625011444091797
    9. ',d' → logprob: -17.625011444091797
    10. ',count' → logprob: -17.875011444091797

Token 903: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.023311281576752663
    2. ' cnt' → logprob: -3.7733113765716553
    3. '(cnt' → logprob: -9.648311614990234
    4. '[cnt' → logprob: -14.398311614990234
    5. '	cnt' → logprob: -14.898311614990234
    6. '   ' → logprob: -16.523311614990234
    7. ' ' → logprob: -16.898311614990234
    8. ')' → logprob: -16.898311614990234
    9. '_cnt' → logprob: -17.023311614990234
    10. 'cn' → logprob: -18.023311614990234

Token 904: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. '   ' → logprob: -15.750000953674316
    3. '```' → logprob: -16.25
    4. ' ' → logprob: -16.625
    5. '2' → logprob: -16.875
    6. '_' → logprob: -17.0
    7. ')' → logprob: -17.125
    8. ']' → logprob: -17.5
    9. '`' → logprob: -17.875
    10. 'in' → logprob: -18.25

Token 905: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.618001053633634e-05
    2. ' )' → logprob: -11.375025749206543
    3. ' not' → logprob: -11.625025749206543
    4. 'not' → logprob: -12.500025749206543
    5. ']' → logprob: -13.500025749206543
    6. '   ' → logprob: -15.750025749206543
    7. ')
' → logprob: -16.37502670288086
    8. '）' → logprob: -17.00002670288086
    9. '")' → logprob: -17.12502670288086
    10. ',)' → logprob: -17.37502670288086

Token 906: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.2519472539424896
    2. 'not' → logprob: -1.501947283744812
    3. 'in' → logprob: -11.376947402954102
    4. ' in' → logprob: -12.001947402954102
    5. '	not' → logprob: -15.001947402954102
    6. ')' → logprob: -15.751947402954102
    7. '(not' → logprob: -17.2519474029541
    8. ':not' → logprob: -17.6269474029541
    9. ' ' → logprob: -17.8769474029541
    10. '   ' → logprob: -18.0019474029541

Token 907: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023266561329364777
    2. 'in' → logprob: -3.773266553878784
    3. 'd' → logprob: -10.898266792297363
    4. 'In' → logprob: -14.523266792297363
    5. ' not' → logprob: -14.898266792297363
    6. ' d' → logprob: -15.023266792297363
    7. '	in' → logprob: -15.648266792297363
    8. ')' → logprob: -15.773266792297363
    9. 'not' → logprob: -15.773266792297363
    10. '_in' → logprob: -15.898266792297363

Token 908: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.005234713666141033
    2. ' d' → logprob: -5.255234718322754
    3. '   ' → logprob: -15.255234718322754
    4. '	d' → logprob: -15.380234718322754
    5. '
' → logprob: -15.755234718322754
    6. ')d' → logprob: -16.130233764648438
    7. '(d' → logprob: -16.505233764648438
    8. ' ' → logprob: -17.255233764648438
    9. '       ' → logprob: -17.255233764648438
    10. '[d' → logprob: -17.380233764648438

Token 909: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.6240566083070007e-06
    2. '1' → logprob: -13.750001907348633
    3. 'd' → logprob: -15.625001907348633
    4. 'keys' → logprob: -16.000001907348633
    5. '_keys' → logprob: -16.750001907348633
    6. '```' → logprob: -17.250001907348633
    7. '₂' → logprob: -17.375001907348633
    8. '.keys' → logprob: -17.625001907348633
    9. ' d' → logprob: -18.375001907348633
    10. ' keys' → logprob: -19.375001907348633

Token 910: '.keys' (ID: 18392)
  Prédit: '.keys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.keys' → logprob: -0.007741609122604132
    2. '.' → logprob: -4.882741451263428
    3. ' .' → logprob: -9.632741928100586
    4. ':' → logprob: -10.632741928100586
    5. '   ' → logprob: -11.632741928100586
    6. ')' → logprob: -11.882741928100586
    7. '.setdefault' → logprob: -11.882741928100586
    8. 'keys' → logprob: -12.382741928100586
    9. '.Keys' → logprob: -12.507741928100586
    10. '	keys' → logprob: -12.507741928100586

Token 911: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.21313828229904175
    2. '():
' → logprob: -1.7131383419036865
    3. '()' → logprob: -4.463138103485107
    4. '():
' → logprob: -9.838138580322266
    5. '():

' → logprob: -10.463138580322266
    6. '()):
' → logprob: -10.963138580322266
    7. '()==' → logprob: -11.463138580322266
    8. '()>' → logprob: -11.463138580322266
    9. '()[' → logprob: -13.713138580322266
    10. ':' → logprob: -13.838138580322266

Token 912: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003396343090571463
    2. 'd' → logprob: -8.25033950805664
    3. '       ' → logprob: -10.00033950805664
    4. '               ' → logprob: -10.87533950805664
    5. ' d' → logprob: -12.12533950805664
    6. '```' → logprob: -12.50033950805664
    7. '          ' → logprob: -12.87533950805664
    8. '   ' → logprob: -13.75033950805664
    9. '{
' → logprob: -15.12533950805664
    10. '         ' → logprob: -15.12533950805664

Token 913: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -7.028536492725834e-05
    2. ' d' → logprob: -9.750070571899414
    3. '           ' → logprob: -11.500070571899414
    4. '       ' → logprob: -13.250070571899414
    5. '   ' → logprob: -17.000070571899414
    6. '               ' → logprob: -17.500070571899414
    7. '	d' → logprob: -18.375070571899414
    8. '          ' → logprob: -19.125070571899414
    9. '         ' → logprob: -19.875070571899414
    10. '```' → logprob: -20.375070571899414

Token 914: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.128163257315464e-07
    2. '[(' → logprob: -15.375
    3. '₂' → logprob: -18.625
    4. '```' → logprob: -19.0
    5. '[' → logprob: -20.0
    6. '۲' → logprob: -20.125
    7. '２' → logprob: -20.375
    8. '   ' → logprob: -20.75
    9. '२' → logprob: -21.5
    10. '{' → logprob: -21.625

Token 915: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: 0.0
    2. '[' → logprob: -19.625
    3. '((' → logprob: -19.875
    4. '```' → logprob: -20.125
    5. '[t' → logprob: -20.75
    6. ' [(' → logprob: -20.875
    7. '[
' → logprob: -21.125
    8. '.setdefault' → logprob: -21.625
    9. '(' → logprob: -22.125
    10. '   ' → logprob: -22.25

Token 916: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -4.787507714354433e-05
    2. '(t' → logprob: -10.00004768371582
    3. ' t' → logprob: -13.50004768371582
    4. '	t' → logprob: -14.75004768371582
    5. ')t' → logprob: -15.12504768371582
    6. '`t' → logprob: -15.25004768371582
    7. '[t' → logprob: -16.12504768371582
    8. '   ' → logprob: -16.37504768371582
    9. '_t' → logprob: -17.75004768371582
    10. '{' → logprob: -18.50004768371582

Token 917: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.018350813537836075
    2. 't' → logprob: -4.018350601196289
    3. '(t' → logprob: -8.643350601196289
    4. '_t' → logprob: -11.518350601196289
    5. ')t' → logprob: -12.518350601196289
    6. ')' → logprob: -12.768350601196289
    7. '```' → logprob: -13.018350601196289
    8. ' t' → logprob: -13.768350601196289
    9. 's' → logprob: -13.893350601196289
    10. '[t' → logprob: -14.268350601196289

Token 918: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.60414821645827e-06
    2. ' ,' → logprob: -12.375004768371582
    3. ',(' → logprob: -15.875004768371582
    4. ',
' → logprob: -16.375003814697266
    5. ',t' → logprob: -17.125003814697266
    6. '),' → logprob: -17.375003814697266
    7. ',c' → logprob: -18.250003814697266
    8. '‌,' → logprob: -18.250003814697266
    9. ',k' → logprob: -18.375003814697266
    10. ',n' → logprob: -18.875003814697266

Token 919: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.009047637693583965
    2. ' cnt' → logprob: -4.759047508239746
    3. '1' → logprob: -8.009047508239746
    4. 'd' → logprob: -10.259047508239746
    5. '(cnt' → logprob: -10.384047508239746
    6. ')' → logprob: -11.134047508239746
    7. 'c' → logprob: -11.759047508239746
    8. '	cnt' → logprob: -12.009047508239746
    9. ' ' → logprob: -13.384047508239746
    10. '[cnt' → logprob: -13.509047508239746

Token 920: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000158842682139948
    2. ' ' → logprob: -9.25015926361084
    3. '2' → logprob: -10.50015926361084
    4. '   ' → logprob: -10.75015926361084
    5. 'cnt' → logprob: -12.50015926361084
    6. ']' → logprob: -12.87515926361084
    7. ' cnt' → logprob: -13.75015926361084
    8. ')' → logprob: -13.75015926361084
    9. '  ' → logprob: -13.75015926361084
    10. '_cnt' → logprob: -14.25015926361084

Token 921: ')]' (ID: 15710)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02992740273475647
    2. ')]' → logprob: -3.5299274921417236
    3. ')' → logprob: -8.904927253723145
    4. ']=' → logprob: -10.154927253723145
    5. '])' → logprob: -14.029927253723145
    6. ']]' → logprob: -14.029927253723145
    7. ' ]' → logprob: -15.529927253723145
    8. '   ' → logprob: -15.904927253723145
    9. ']
' → logprob: -16.27992820739746
    10. ']+=' → logprob: -16.27992820739746

Token 922: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01416350994259119
    2. ' =' → logprob: -4.264163494110107
    3. '<|end|>' → logprob: -18.514163970947266
    4. ']' → logprob: -19.139163970947266
    5. ')' → logprob: -19.514163970947266
    6. ']=' → logprob: -20.014163970947266
    7. ' ' → logprob: -20.264163970947266
    8. '[' → logprob: -20.514163970947266
    9. '＝' → logprob: -21.014163970947266
    10. '=
' → logprob: -21.139163970947266

Token 923: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012368128227535635
    2. ' ' → logprob: -9.000123977661133
    3. '   ' → logprob: -15.375123977661133
    4. '           ' → logprob: -16.750123977661133
    5. '       ' → logprob: -19.125123977661133
    6. '  ' → logprob: -19.750123977661133
    7. '    ' → logprob: -20.625123977661133
    8. '0' → logprob: -20.875123977661133
    9. '```' → logprob: -20.875123977661133
    10. '	' → logprob: -21.500123977661133

Token 924: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '   ' → logprob: -17.625
    4. '```' → logprob: -19.75
    5. '       ' → logprob: -21.625
    6. '  ' → logprob: -21.8125
    7. '           ' → logprob: -21.875
    8. '
' → logprob: -22.0
    9. '`' → logprob: -22.0
    10. '' → logprob: -22.125

Token 925: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011241449974477291
    2. 'else' → logprob: -7.001124382019043
    3. ' else' → logprob: -8.501124382019043
    4. '   ' → logprob: -12.876124382019043
    5. '      ' → logprob: -13.376124382019043
    6. '           ' → logprob: -13.626124382019043
    7. '[' → logprob: -13.876124382019043
    8. 'd' → logprob: -14.251124382019043
    9. '	' → logprob: -14.626124382019043
    10. '<|end|>' → logprob: -15.001124382019043

Token 926: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0022846683859825134
    2. 'else' → logprob: -6.127284526824951
    3. ' else' → logprob: -9.25228500366211
    4. '           ' → logprob: -13.87728500366211
    5. '   ' → logprob: -14.00228500366211
    6. '```' → logprob: -15.00228500366211
    7. '      ' → logprob: -15.12728500366211
    8. '	' → logprob: -15.25228500366211
    9. '	else' → logprob: -15.37728500366211
    10. 'd' → logprob: -15.75228500366211

Token 927: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0791739821434021
    2. 'else' (adapté à ' else') → logprob: -2.579174041748047
    3. ' else' → logprob: -8.204174041748047
    4. '   ' → logprob: -12.204174041748047
    5. '           ' → logprob: -13.079174041748047
    6. '```' → logprob: -13.829174041748047
    7. '	else' → logprob: -14.204174041748047
    8. '	' → logprob: -14.329174041748047
    9. 'elif' → logprob: -14.829174041748047
    10. 'd' → logprob: -14.954174041748047

Token 928: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0029778217431157827
    2. 'd' → logprob: -6.3779778480529785
    3. ' d' → logprob: -6.7529778480529785
    4. '   ' → logprob: -9.87797737121582
    5. '               ' → logprob: -10.50297737121582
    6. '       ' → logprob: -11.75297737121582
    7. ':
' → logprob: -12.12797737121582
    8. ':' → logprob: -12.62797737121582
    9. '          ' → logprob: -12.62797737121582
    10. '	d' → logprob: -13.37797737121582

Token 929: '           ' (ID: 352)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.018368251621723175
    2. '           ' → logprob: -4.018368244171143
    3. ' d' → logprob: -9.0183687210083
    4. '       ' → logprob: -9.7683687210083
    5. '   ' → logprob: -10.6433687210083
    6. '               ' → logprob: -11.2683687210083
    7. '```' → logprob: -12.8933687210083
    8. '	d' → logprob: -15.1433687210083
    9. '          ' → logprob: -15.6433687210083
    10. '         ' → logprob: -15.8933687210083

Token 930: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -5.080963092041202e-06
    2. ' d' → logprob: -12.250004768371582
    3. '           ' → logprob: -15.250004768371582
    4. '       ' → logprob: -17.7500057220459
    5. '   ' → logprob: -19.1250057220459
    6. '	d' → logprob: -19.7500057220459
    7. '               ' → logprob: -20.3750057220459
    8. '```' → logprob: -22.7500057220459
    9. '          ' → logprob: -22.8750057220459
    10. '         ' → logprob: -23.0000057220459

Token 931: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.512236498361744e-07
    2. '[(' → logprob: -15.375000953674316
    3. '₂' → logprob: -15.750000953674316
    4. 'd' → logprob: -16.125
    5. '```' → logprob: -17.625
    6. '1' → logprob: -17.75
    7. '[' → logprob: -18.75
    8. '   ' → logprob: -18.875
    9. '２' → logprob: -19.0
    10. '{' → logprob: -19.125

Token 932: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: 0.0
    2. '```' → logprob: -17.125
    3. '[' → logprob: -17.375
    4. '``' → logprob: -19.75
    5. '[
' → logprob: -20.125
    6. '`' → logprob: -20.5
    7. '[((' → logprob: -20.75
    8. ' [(' → logprob: -20.875
    9. '((' → logprob: -21.0
    10. '(' → logprob: -21.375

Token 933: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -6.825890159234405e-05
    2. '(t' → logprob: -9.625068664550781
    3. 'd' → logprob: -13.125068664550781
    4. '	t' → logprob: -16.75006866455078
    5. ' t' → logprob: -17.00006866455078
    6. '[t' → logprob: -17.25006866455078
    7. '   ' → logprob: -18.62506866455078
    8. '(' → logprob: -18.87506866455078
    9. ' (' → logprob: -19.12506866455078
    10. ')t' → logprob: -19.25006866455078

Token 934: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.135819760151207e-05
    2. '[(' → logprob: -9.62507152557373
    3. 't' → logprob: -13.37507152557373
    4. '(' → logprob: -14.12507152557373
    5. '
' → logprob: -14.75007152557373
    6. '1' → logprob: -14.75007152557373
    7. '[' → logprob: -15.12507152557373
    8. '```' → logprob: -15.31257152557373
    9. '((' → logprob: -15.43757152557373
    10. '(t' → logprob: -15.50007152557373

Token 935: ',' (ID: 11)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -9.088346359931165e-07
    2. '][' → logprob: -14.750000953674316
    3. '[' → logprob: -15.875000953674316
    4. '((' → logprob: -16.375
    5. '[t' → logprob: -16.75
    6. ')[' → logprob: -16.75
    7. ',(' → logprob: -17.0
    8. '(t' → logprob: -18.125
    9. '```' → logprob: -18.5
    10. '(' → logprob: -18.625

Token 936: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.0012952389661222696
    2. 'd' → logprob: -7.50129508972168
    3. '(cnt' → logprob: -7.50129508972168
    4. '1' → logprob: -9.12629508972168
    5. ' cnt' → logprob: -10.25129508972168
    6. ')' → logprob: -10.50129508972168
    7. 'c' → logprob: -11.87629508972168
    8. '[cnt' → logprob: -13.00129508972168
    9. '_cnt' → logprob: -13.25129508972168
    10. '(' → logprob: -13.25129508972168

Token 937: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.38893836736679077
    2. '2' → logprob: -1.1389384269714355
    3. '[(' → logprob: -6.2639384269714355
    4. ']' → logprob: -10.013937950134277
    5. '[' → logprob: -10.388937950134277
    6. '((' → logprob: -10.638937950134277
    7. '   ' → logprob: -11.013937950134277
    8. '(' → logprob: -11.013937950134277
    9. ')]' → logprob: -12.013937950134277
    10. '```' → logprob: -12.638937950134277

Token 938: ')]' (ID: 15710)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0007792501710355282
    2. ']+=' → logprob: -7.250779151916504
    3. ')]' → logprob: -9.625779151916504
    4. ')' → logprob: -12.750779151916504
    5. '']' → logprob: -16.25078010559082
    6. ' ]' → logprob: -16.37578010559082
    7. ']+' → logprob: -16.37578010559082
    8. '+=' → logprob: -17.12578010559082
    9. '`]' → logprob: -17.62578010559082
    10. '"]' → logprob: -17.62578010559082

Token 939: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0015024791937321424
    2. ' +=' → logprob: -6.501502513885498
    3. ']+=' → logprob: -16.001502990722656
    4. '+=(' → logprob: -20.501502990722656
    5. '   ' → logprob: -21.876502990722656
    6. '+='' → logprob: -22.376502990722656
    7. '+="' → logprob: -22.876502990722656
    8. '=' → logprob: -23.126502990722656
    9. '-=' → logprob: -23.251502990722656
    10. '```' → logprob: -24.251502990722656

Token 940: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10020720958709717
    2. ' ' → logprob: -2.3502073287963867
    3. '   ' → logprob: -14.850207328796387
    4. ' ' → logprob: -16.22520637512207
    5. '           ' → logprob: -16.72520637512207
    6. '```' → logprob: -17.10020637512207
    7. '       ' → logprob: -17.72520637512207
    8. '​' → logprob: -19.47520637512207
    9. '    ' → logprob: -19.47520637512207
    10. '  ' → logprob: -19.66270637512207

Token 941: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '   ' → logprob: -20.250001907348633
    4. '```' → logprob: -20.375001907348633
    5. '１' → logprob: -22.250001907348633
    6. '۱' → logprob: -22.937501907348633
    7. '  ' → logprob: -23.062501907348633
    8. '-' → logprob: -23.062501907348633
    9. '`' → logprob: -23.250001907348633
    10. '' → logprob: -23.312501907348633

Token 942: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007878218777477741
    2. '    
' → logprob: -5.632878303527832
    3. '
' → logprob: -6.757878303527832
    4. '```' → logprob: -7.382878303527832
    5. '       ' → logprob: -7.507878303527832
    6. ')' → logprob: -7.632878303527832
    7. '<|end|>' → logprob: -7.757878303527832
    8. '#' → logprob: -8.882878303527832
    9. 'n' → logprob: -9.257878303527832
    10. '        
' → logprob: -9.382878303527832

Token 943: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010605713352560997
    2. 'result' → logprob: -4.760605812072754
    3. '    
' → logprob: -6.885605812072754
    4. '#' → logprob: -8.510605812072754
    5. 'sum' → logprob: -8.760605812072754
    6. 'answer' → logprob: -9.135605812072754
    7. 'total' → logprob: -9.635605812072754
    8. 'count' → logprob: -9.885605812072754
    9. '
' → logprob: -10.010605812072754
    10. 'for' → logprob: -10.135605812072754

Token 944: ' #' (ID: 1069)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.0036940574645996
    2. 'ans' → logprob: -1.5036940574645996
    3. '   ' → logprob: -1.6286940574645996
    4. 'answer' → logprob: -2.1286940574645996
    5. 'res' → logprob: -2.3786940574645996
    6. 'total' → logprob: -7.0036940574646
    7. 'count' → logprob: -7.2536940574646
    8. '    
' → logprob: -7.5036940574646
    9. 'for' → logprob: -8.503694534301758
    10. 'counter' → logprob: -8.878694534301758

Token 945: ' Initialize' (ID: 19496)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.8807128667831421
    2. 'ans' → logprob: -1.380712866783142
    3. 'answer' → logprob: -1.880712866783142
    4. 'res' → logprob: -2.0057129859924316
    5. '#' → logprob: -3.3807129859924316
    6. 'count' → logprob: -5.380712985992432
    7. 'total' → logprob: -6.005712985992432
    8. '   ' → logprob: -6.005712985992432
    9. 'cnt' → logprob: -6.880712985992432
    10. 'counter' → logprob: -7.630712985992432

Token 946: ' a' (ID: 261)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.05305863916873932
    2. 'answer' → logprob: -3.428058624267578
    3. 'res' → logprob: -4.553058624267578
    4. 'result' → logprob: -5.053058624267578
    5. 'count' → logprob: -6.428058624267578
    6. ' ans' → logprob: -7.928058624267578
    7. 'cnt' → logprob: -8.803058624267578
    8. 'total' → logprob: -9.428058624267578
    9. 'counter' → logprob: -10.053058624267578
    10. 'max' → logprob: -11.678058624267578

Token 947: ' variable' (ID: 11076)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.5803637504577637
    2. 'count' → logprob: -1.2053637504577637
    3. 'ans' → logprob: -2.9553637504577637
    4. 'res' → logprob: -3.4553637504577637
    5. 'counter' → logprob: -3.5803637504577637
    6. 'variable' → logprob: -4.205363750457764
    7. 'answer' → logprob: -5.205363750457764
    8. 'cnt' → logprob: -5.580363750457764
    9. 'total' → logprob: -6.080363750457764
    10. ' result' → logprob: -6.830363750457764

Token 948: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.12432082742452621
    2. 'answer' → logprob: -2.9993207454681396
    3. 'res' → logprob: -3.2493207454681396
    4. 'result' → logprob: -3.6243207454681396
    5. ' ans' → logprob: -7.624320983886719
    6. 'total' → logprob: -7.749320983886719
    7. 'count' → logprob: -8.124320983886719
    8. 'ret' → logprob: -9.249320983886719
    9. '   ' → logprob: -9.374320983886719
    10. 'cnt' → logprob: -9.624320983886719

Token 949: ' to' (ID: 316)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759852528572083
    2. ' =' → logprob: -0.8259852528572083
    3. '   ' → logprob: -10.075984954833984
    4. ' ans' → logprob: -12.950984954833984
    5. 'ans' → logprob: -14.075984954833984
    6. '=
' → logprob: -15.825984954833984
    7. '_ans' → logprob: -15.825984954833984
    8. '(ans' → logprob: -16.200984954833984
    9. '=int' → logprob: -16.700984954833984
    10. '	ans' → logprob: -16.825984954833984

Token 950: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004362718027550727
    2. ' ' → logprob: -7.750436305999756
    3. 'int' → logprob: -12.750435829162598
    4. '   ' → logprob: -14.500435829162598
    5. 'n' → logprob: -14.937935829162598
    6. '[' → logprob: -15.062935829162598
    7. '=' → logprob: -15.187935829162598
    8. '[]' → logprob: -15.625435829162598
    9. '1' → logprob: -15.875435829162598
    10. 'len' → logprob: -16.312936782836914

Token 951: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.7835754988482222e-05
    2. ' ' → logprob: -11.125018119812012
    3. 'int' → logprob: -13.000018119812012
    4. 'ans' → logprob: -15.500018119812012
    5. '[' → logprob: -16.125017166137695
    6. 'n' → logprob: -16.750017166137695
    7. '1' → logprob: -17.000017166137695
    8. '-' → logprob: -17.000017166137695
    9. 'len' → logprob: -17.000017166137695
    10. '=' → logprob: -17.062517166137695

Token 952: ';' (ID: 26)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004723795282188803
    2. 'ans' → logprob: -8.250472068786621
    3. '
' → logprob: -8.750472068786621
    4. '    
' → logprob: -11.125472068786621
    5. ' ans' → logprob: -11.125472068786621
    6. '```' → logprob: -11.375472068786621
    7. '	ans' → logprob: -11.750472068786621
    8. '       ' → logprob: -13.000472068786621
    9. '(ans' → logprob: -14.125472068786621
    10. '``' → logprob: -15.250472068786621

Token 953: ' this' (ID: 495)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.12798447906970978
    2. '   ' → logprob: -2.1279845237731934
    3. ' ans' → logprob: -6.877984523773193
    4. '	ans' → logprob: -10.877984046936035
    5. '(ans' → logprob: -13.377984046936035
    6. '```' → logprob: -13.377984046936035
    7. '
' → logprob: -13.502984046936035
    8. '_ans' → logprob: -14.127984046936035
    9. 'answer' → logprob: -14.377984046936035
    10. '    
' → logprob: -15.377984046936035

Token 954: ' variable' (ID: 11076)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16718289256095886
    2. ' =' → logprob: -2.0421829223632812
    3. ' will' → logprob: -4.792182922363281
    4. '
' → logprob: -5.292182922363281
    5. 'ans' → logprob: -5.917182922363281
    6. ' ans' → logprob: -6.417182922363281
    7. ' is' → logprob: -6.917182922363281
    8. '   ' → logprob: -7.042182922363281
    9. 'will' → logprob: -7.042182922363281
    10. 'for' → logprob: -7.042182922363281

Token 955: ' will' (ID: 738)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16271725296974182
    2. ' =' → logprob: -1.9127172231674194
    3. '   ' → logprob: -6.037717342376709
    4. ' will' → logprob: -10.28771686553955
    5. ' ' → logprob: -11.16271686553955
    6. ' is' → logprob: -11.28771686553955
    7. '=
' → logprob: -11.28771686553955
    8. '
' → logprob: -12.03771686553955
    9. ' represents' → logprob: -12.28771686553955
    10. ' can' → logprob: -12.41271686553955

Token 956: ' accumulate' (ID: 74226)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.8503878116607666
    2. 'count' → logprob: -1.6003878116607666
    3. '   ' → logprob: -1.8503878116607666
    4. '
' → logprob: -1.9753878116607666
    5. '=' → logprob: -3.6003878116607666
    6. 'answer' → logprob: -4.4753875732421875
    7. 'store' → logprob: -5.1003875732421875
    8. '#' → logprob: -5.2253875732421875
    9. ' ans' → logprob: -5.6003875732421875
    10. 'be' → logprob: -5.7253875732421875

Token 957: ' the' (ID: 290)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007338665891438723
    2. 'ans' → logprob: -7.500733852386475
    3. ' ' → logprob: -8.750734329223633
    4. ' ans' → logprob: -11.500734329223633
    5. '   ' → logprob: -11.625734329223633
    6. 'the' → logprob: -14.000734329223633
    7. '(ans' → logprob: -14.250734329223633
    8. '	ans' → logprob: -14.500734329223633
    9. '#' → logprob: -14.750734329223633
    10. ' the' → logprob: -14.875734329223633

Token 958: ' final' (ID: 1721)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.2646373510360718
    2. 'answer' → logprob: -1.3896373510360718
    3. 'result' → logprob: -1.5146373510360718
    4. 'ans' → logprob: -2.0146374702453613
    5. ' result' → logprob: -3.2646374702453613
    6. '0' → logprob: -3.7646374702453613
    7. 'sum' → logprob: -4.389637470245361
    8. 'total' → logprob: -4.639637470245361
    9. ' answer' → logprob: -4.639637470245361
    10. ' count' → logprob: -4.764637470245361

Token 959: ' answer' (ID: 6052)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.28323012590408325
    2. 'answer' → logprob: -1.6582300662994385
    3. 'result' → logprob: -3.1582300662994385
    4. 'count' → logprob: -5.158230304718018
    5. ' result' → logprob: -6.033230304718018
    6. ' answer' → logprob: -6.408230304718018
    7. '
' → logprob: -6.408230304718018
    8. '```' → logprob: -7.283230304718018
    9. ' ans' → logprob: -7.408230304718018
    10. '   ' → logprob: -7.783230304718018

Token 960: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00024548539659008384
    2. 'ans' → logprob: -8.875245094299316
    3. '
' → logprob: -9.625245094299316
    4. '    
' → logprob: -11.125245094299316
    5. ' ans' → logprob: -11.500245094299316
    6. '	ans' → logprob: -11.625245094299316
    7. '       ' → logprob: -12.750245094299316
    8. '```' → logprob: -13.750245094299316
    9. '(ans' → logprob: -13.875245094299316
    10. '    ' → logprob: -15.750245094299316

Token 961: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003981376066803932
    2. 'ans' → logprob: -8.375397682189941
    3. '```' → logprob: -8.750397682189941
    4. ' ans' → logprob: -12.625397682189941
    5. '``' → logprob: -13.250397682189941
    6. '
' → logprob: -13.375397682189941
    7. '	ans' → logprob: -13.500397682189941
    8. '    
' → logprob: -14.250397682189941
    9. '(ans' → logprob: -15.750397682189941
    10. '       ' → logprob: -15.750397682189941

Token 962: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.31393253803253174
    2. '   ' → logprob: -1.3139325380325317
    3. ' ans' → logprob: -7.438932418823242
    4. '```' → logprob: -9.938932418823242
    5. '	ans' → logprob: -10.563932418823242
    6. '(ans' → logprob: -12.938932418823242
    7. 'answer' → logprob: -13.188932418823242
    8. '``' → logprob: -13.563932418823242
    9. '_ans' → logprob: -13.688932418823242
    10. '
' → logprob: -14.188932418823242

Token 963: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03804194927215576
    2. '=' → logprob: -3.2880420684814453
    3. ' ' → logprob: -14.913042068481445
    4. ' +=' → logprob: -16.538042068481445
    5. ')' → logprob: -17.038042068481445
    6. ' =
' → logprob: -17.163042068481445
    7. '  ' → logprob: -17.538042068481445
    8. ' ' → logprob: -17.788042068481445
    9. ',' → logprob: -18.163042068481445
    10. '   ' → logprob: -19.038042068481445

Token 964: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010329303331673145
    2. ' ' → logprob: -6.876032829284668
    3. '   ' → logprob: -16.376033782958984
    4. '  ' → logprob: -19.376033782958984
    5. '۰' → logprob: -20.251033782958984
    6. '000' → logprob: -21.063533782958984
    7. '```' → logprob: -21.376033782958984
    8. ' ' → logprob: -21.563533782958984
    9. '=' → logprob: -21.626033782958984
    10. 'int' → logprob: -21.688533782958984

Token 965: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. 'int' → logprob: -18.625001907348633
    4. '   ' → logprob: -19.375001907348633
    5. '۰' → logprob: -20.250001907348633
    6. '000' → logprob: -20.562501907348633
    7. '```' → logprob: -21.437501907348633
    8. '=' → logprob: -21.562501907348633
    9. '[' → logprob: -22.000001907348633
    10. '０' → logprob: -22.062501907348633

Token 966: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.060198187828063965
    2. '
' → logprob: -2.9351983070373535
    3. ' for' → logprob: -6.1851983070373535
    4. 'for' → logprob: -6.1851983070373535
    5. '    
' → logprob: -7.0601983070373535
    6. '<|end|>' → logprob: -9.185197830200195
    7. '```' → logprob: -9.560197830200195
    8. '  
' → logprob: -9.685197830200195
    9. '	for' → logprob: -10.435197830200195
    10. '   
' → logprob: -11.060197830200195

Token 967: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010939467698335648
    2. 'for' → logprob: -4.760939598083496
    3. ' for' → logprob: -6.260939598083496
    4. '
' → logprob: -8.135939598083496
    5. '    
' → logprob: -9.510939598083496
    6. '  ' → logprob: -11.385939598083496
    7. '       ' → logprob: -11.635939598083496
    8. '```' → logprob: -11.760939598083496
    9. '   
' → logprob: -12.260939598083496
    10. ' ' → logprob: -12.635939598083496

Token 968: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0012549920938909054
    2. '   ' → logprob: -7.001255035400391
    3. '#' (adapté à ' #') → logprob: -8.00125503540039
    4. ' for' → logprob: -12.00125503540039
    5. '       ' → logprob: -13.75125503540039
    6. 'keys' → logprob: -14.50125503540039
    7. 'from' → logprob: -15.12625503540039
    8. '```' → logprob: -15.50125503540039
    9. '	for' → logprob: -16.25125503540039
    10. '    
' → logprob: -17.12625503540039

Token 969: ' Iterate' (ID: 129410)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0006242761737667024
    2. '#' → logprob: -7.500624179840088
    3. '   ' → logprob: -9.750624656677246
    4. ' for' → logprob: -11.625624656677246
    5. '       ' → logprob: -13.625624656677246
    6. 'keys' → logprob: -14.125624656677246
    7. '
' → logprob: -14.250624656677246
    8. 'For' → logprob: -15.125624656677246
    9. 'from' → logprob: -15.125624656677246
    10. '```' → logprob: -15.500624656677246

Token 970: ' over' (ID: 1072)
  Prédit: ' over'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' over' → logprob: -0.051317282021045685
    2. 'over' → logprob: -3.8013172149658203
    3. '   ' → logprob: -4.05131721496582
    4. ' through' → logprob: -5.05131721496582
    5. '(' → logprob: -6.17631721496582
    6. ' (' → logprob: -7.42631721496582
    7. '    ' → logprob: -8.67631721496582
    8. '_' → logprob: -8.80131721496582
    9. '_over' → logprob: -9.05131721496582
    10. ' ' → logprob: -9.55131721496582

Token 971: ' each' (ID: 2454)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.4288969039916992
    2. 'd' → logprob: -1.0538969039916992
    3. '   ' → logprob: -9.8038969039917
    4. '(d' → logprob: -10.3038969039917
    5. ' key' → logprob: -10.6788969039917
    6. ' (' → logprob: -10.6788969039917
    7. ' ' → logprob: -10.9288969039917
    8. 'key' → logprob: -11.4288969039917
    9. '[(' → logprob: -12.6788969039917
    10. '((' → logprob: -12.8038969039917

Token 972: ' item' (ID: 2169)
  Prédit: ' key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' key' → logprob: -0.36383119225502014
    2. 'key' → logprob: -1.2388311624526978
    3. ' (' → logprob: -4.863831043243408
    4. '(key' → logprob: -5.113831043243408
    5. 'k' → logprob: -7.238831043243408
    6. ' k' → logprob: -8.113831520080566
    7. '(k' → logprob: -8.863831520080566
    8. '(t' → logprob: -9.363831520080566
    9. '   ' → logprob: -9.488831520080566
    10. '((' → logprob: -9.863831520080566

Token 973: ' (' (ID: 350)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.020506853237748146
    2. 'in' → logprob: -4.895506858825684
    3. ',' → logprob: -5.020506858825684
    4. '   ' → logprob: -5.270506858825684
    5. 's' → logprob: -7.895506858825684
    6. ' (' → logprob: -8.520506858825684
    7. '```' → logprob: -8.645506858825684
    8. ' =' → logprob: -9.770506858825684
    9. '(key' → logprob: -10.645506858825684
    10. '(' → logprob: -10.645506858825684

Token 974: 'key' (ID: 1898)
  Prédit: 'key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.2817693054676056
    2. ' key' → logprob: -1.5317692756652832
    3. '(key' → logprob: -4.281769275665283
    4. ' (' → logprob: -5.281769275665283
    5. 'k' → logprob: -5.656769275665283
    6. '(t' → logprob: -6.281769275665283
    7. 'd' → logprob: -6.406769275665283
    8. '   ' → logprob: -6.656769275665283
    9. '(k' → logprob: -7.406769275665283
    10. 't' → logprob: -7.781769275665283

Token 975: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016486376989632845
    2. ',value' → logprob: -7.376648426055908
    3. ' in' → logprob: -7.501648426055908
    4. ',)' → logprob: -8.751648902893066
    5. ',val' → logprob: -9.626648902893066
    6. 's' → logprob: -9.751648902893066
    7. ')' → logprob: -10.001648902893066
    8. ' ,' → logprob: -10.251648902893066
    9. '```' → logprob: -10.251648902893066
    10. 'in' → logprob: -11.126648902893066

Token 976: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.22625206410884857
    2. ' value' → logprob: -1.6012520790100098
    3. 'val' → logprob: -7.97625207901001
    4. 'count' → logprob: -8.351251602172852
    5. ' val' → logprob: -9.101251602172852
    6. 'v' → logprob: -9.976251602172852
    7. ' count' → logprob: -10.226251602172852
    8. ')' → logprob: -10.351251602172852
    9. '```' → logprob: -11.351251602172852
    10. '(value' → logprob: -12.726251602172852

Token 977: ' pair' (ID: 10610)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6004800200462341
    2. ',' → logprob: -0.9754800200462341
    3. ',)' → logprob: -3.225480079650879
    4. ' in' → logprob: -3.725480079650879
    5. 's' → logprob: -5.225480079650879
    6. '```' → logprob: -6.475480079650879
    7. ' )' → logprob: -7.225480079650879
    8. ' =' → logprob: -7.225480079650879
    9. 'in' → logprob: -7.225480079650879
    10. '()' → logprob: -7.725480079650879

Token 978: ')' (ID: 8)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07392405718564987
    2. ',' → logprob: -3.1989240646362305
    3. 'in' → logprob: -3.8239240646362305
    4. '   ' → logprob: -5.6989240646362305
    5. ')' → logprob: -5.9489240646362305
    6. 's' → logprob: -6.4489240646362305
    7. '```' → logprob: -7.9489240646362305
    8. ' =' → logprob: -8.69892406463623
    9. ' ,' → logprob: -8.94892406463623
    10. ' ' → logprob: -9.44892406463623

Token 979: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.17896725237369537
    2. 'in' → logprob: -1.9289672374725342
    3. '   ' → logprob: -4.428967475891113
    4. ',' → logprob: -5.178967475891113
    5. '```' → logprob: -7.928967475891113
    6. 's' → logprob: -8.553967475891113
    7. ' ' → logprob: -9.303967475891113
    8. '  ' → logprob: -9.803967475891113
    9. ' ,' → logprob: -10.303967475891113
    10. '
' → logprob: -10.428967475891113

Token 980: ' dictionary' (ID: 22131)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.11285030841827393
    2. ' d' → logprob: -2.2378501892089844
    3. '   ' → logprob: -11.362850189208984
    4. '
' → logprob: -11.987850189208984
    5. '(d' → logprob: -12.987850189208984
    6. '```' → logprob: -12.987850189208984
    7. '	d' → logprob: -13.862850189208984
    8. ' ' → logprob: -14.362850189208984
    9. '[d' → logprob: -14.362850189208984
    10. '  ' → logprob: -14.612850189208984

Token 981: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.28133562207221985
    2. 'd' → logprob: -1.4063355922698975
    3. '```' → logprob: -8.906335830688477
    4. '(d' → logprob: -11.156335830688477
    5. ')d' → logprob: -11.906335830688477
    6. '   ' → logprob: -12.281335830688477
    7. 's' → logprob: -12.406335830688477
    8. '`' → logprob: -12.531335830688477
    9. '
' → logprob: -12.656335830688477
    10. '1' → logprob: -12.781335830688477

Token 982: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001613459608051926
    2. '2' → logprob: -8.750161170959473
    3. 'items' → logprob: -13.125161170959473
    4. 'd' → logprob: -15.750161170959473
    5. '.items' → logprob: -15.750161170959473
    6. 'item' → logprob: -16.25016212463379
    7. '```' → logprob: -16.37516212463379
    8. '_items' → logprob: -16.62516212463379
    9. ' items' → logprob: -16.87516212463379
    10. '
' → logprob: -17.37516212463379

Token 983: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06090572476387024
    2. '():' → logprob: -3.685905694961548
    3. ':' → logprob: -4.185905933380127
    4. '():
' → logprob: -4.685905933380127
    5. ' for' → logprob: -5.310905933380127
    6. 'for' → logprob: -5.685905933380127
    7. ':
' → logprob: -7.935905933380127
    8. '()' → logprob: -8.060905456542969
    9. '.items' → logprob: -9.060905456542969
    10. '```' → logprob: -9.060905456542969

Token 984: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04351109266281128
    2. 'for' → logprob: -3.543511152267456
    3. ' for' → logprob: -4.293510913848877
    4. ':' → logprob: -12.918511390686035
    5. '```' → logprob: -13.043511390686035
    6. '	for' → logprob: -13.293511390686035
    7. '    
' → logprob: -13.668511390686035
    8. ',' → logprob: -14.043511390686035
    9. '  ' → logprob: -15.543511390686035
    10. '<|end|>' → logprob: -15.543511390686035

Token 985: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0838349461555481
    2. ' for' → logprob: -2.8338348865509033
    3. '   ' → logprob: -3.8338348865509033
    4. '```' → logprob: -12.833834648132324
    5. '	for' → logprob: -15.208834648132324
    6. '
' → logprob: -15.333834648132324
    7. ' ' → logprob: -15.833834648132324
    8. '    
' → logprob: -16.20883560180664
    9. '  ' → logprob: -17.08383560180664
    10. '``' → logprob: -18.33383560180664

Token 986: ' .' (ID: 887)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.015272959135472775
    2. ' for' → logprob: -4.765273094177246
    3. '   ' → logprob: -5.015273094177246
    4. '```' → logprob: -15.390273094177246
    5. ' ' → logprob: -15.765273094177246
    6. '	for' → logprob: -16.51527214050293
    7. '
' → logprob: -17.76527214050293
    8. '    
' → logprob: -18.01527214050293
    9. '       ' → logprob: -18.26527214050293
    10. '  ' → logprob: -18.39027214050293

Token 987: 'items' (ID: 6918)
  Prédit: 'items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'items' → logprob: -0.002370893256738782
    2. ' items' → logprob: -6.252370834350586
    3. 'for' → logprob: -7.752370834350586
    4. '.items' → logprob: -11.752370834350586
    5. ' for' → logprob: -12.377370834350586
    6. '_items' → logprob: -15.627370834350586
    7. '	items' → logprob: -16.502370834350586
    8. '   ' → logprob: -16.752370834350586
    9. '```' → logprob: -16.877370834350586
    10. 'keys' → logprob: -17.002370834350586

Token 988: '()' (ID: 416)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0016225760336965322
    2. '()' → logprob: -6.751622676849365
    3. '():
' → logprob: -7.751622676849365
    4. '():
' → logprob: -11.126622200012207
    5. '():

' → logprob: -12.376622200012207
    6. ' ():' → logprob: -13.126622200012207
    7. '()`' → logprob: -14.751622200012207
    8. '().' → logprob: -15.251622200012207
    9. '()>' → logprob: -15.501622200012207
    10. ' ()' → logprob: -15.751622200012207

Token 989: ' yields' (ID: 59684)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00042531240615062416
    2. '():
' → logprob: -8.250425338745117
    3. '()' → logprob: -8.875425338745117
    4. ' ():' → logprob: -11.125425338745117
    5. '():
' → logprob: -12.000425338745117
    6. '():

' → logprob: -13.000425338745117
    7. ' ()' → logprob: -15.000425338745117
    8. ':' → logprob: -15.250425338745117
    9. '().' → logprob: -15.500425338745117
    10. '()>' → logprob: -15.875425338745117

Token 990: ' (' (ID: 350)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.23591768741607666
    2. '():' → logprob: -1.6109176874160767
    3. '():
' → logprob: -4.735917568206787
    4. '()):
' → logprob: -7.360917568206787
    5. '())' → logprob: -8.860918045043945
    6. '();' → logprob: -9.235918045043945
    7. ' d' → logprob: -9.360918045043945
    8. ' ()' → logprob: -9.360918045043945
    9. '():
' → logprob: -9.360918045043945
    10. 'd' → logprob: -9.360918045043945

Token 991: 'key' (ID: 1898)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5432924628257751
    2. 'key' → logprob: -1.79329252243042
    3. '(key' → logprob: -2.16829252243042
    4. '()' → logprob: -2.91829252243042
    5. 'd' → logprob: -3.66829252243042
    6. ' key' → logprob: -4.29329252243042
    7. ' (' → logprob: -4.66829252243042
    8. '())' → logprob: -4.91829252243042
    9. ' d' → logprob: -5.41829252243042
    10. ')d' → logprob: -5.41829252243042

Token 992: ',' (ID: 11)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.27906322479248047
    2. '(),' → logprob: -2.1540632247924805
    3. ')' → logprob: -2.9040632247924805
    4. ',' → logprob: -3.2790632247924805
    5. '())' → logprob: -3.4040632247924805
    6. '```' → logprob: -7.5290632247924805
    7. '()`' → logprob: -8.77906322479248
    8. ' ()' → logprob: -8.90406322479248
    9. '()]' → logprob: -9.02906322479248
    10. ' ' → logprob: -9.40406322479248

Token 993: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.2991054058074951
    2. ')' → logprob: -1.5491054058074951
    3. '()' → logprob: -4.174105644226074
    4. ' value' → logprob: -4.924105644226074
    5. 'items' → logprob: -5.674105644226074
    6. 'key' → logprob: -5.799105644226074
    7. ' ' → logprob: -6.174105644226074
    8. '```' → logprob: -6.174105644226074
    9. 'values' → logprob: -6.799105644226074
    10. ',' → logprob: -6.799105644226074

Token 994: ')' (ID: 8)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.04610506072640419
    2. '):' → logprob: -3.171105146408081
    3. '()):
' → logprob: -6.171104907989502
    4. '():' → logprob: -7.546104907989502
    5. ')' → logprob: -8.04610538482666
    6. ' ):' → logprob: -10.17110538482666
    7. '()`' → logprob: -10.42110538482666
    8. '):
' → logprob: -10.54610538482666
    9. '())' → logprob: -11.04610538482666
    10. '():
' → logprob: -11.54610538482666

Token 995: ' tuples' (ID: 112464)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0003520277969073504
    2. '():
' → logprob: -8.000351905822754
    3. '()' → logprob: -11.250351905822754
    4. '():
' → logprob: -13.250351905822754
    5. ' ():' → logprob: -13.375351905822754
    6. ':' → logprob: -15.875351905822754
    7. '():

' → logprob: -16.25035285949707
    8. '().' → logprob: -17.87535285949707
    9. '):' → logprob: -18.12535285949707
    10. '()`' → logprob: -18.50035285949707

Token 996: ',' (ID: 11)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.007717720698565245
    2. '():
' → logprob: -4.882717609405518
    3. '()' → logprob: -9.757718086242676
    4. ':' → logprob: -10.632718086242676
    5. '   ' → logprob: -11.382718086242676
    6. 'for' → logprob: -11.757718086242676
    7. '():
' → logprob: -12.007718086242676
    8. ' ():' → logprob: -12.882718086242676
    9. '():

' → logprob: -14.382718086242676
    10. ' for' → logprob: -15.507718086242676

Token 997: ' where' (ID: 1919)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.21205221116542816
    2. ' for' → logprob: -1.7120522260665894
    3. '():' → logprob: -5.587052345275879
    4. '   ' → logprob: -5.962052345275879
    5. '():
' → logprob: -6.337052345275879
    6. '```' → logprob: -7.712052345275879
    7. ':' → logprob: -7.712052345275879
    8. '):
' → logprob: -8.087052345275879
    9. '()' → logprob: -8.212052345275879
    10. '       ' → logprob: -8.462052345275879

Token 998: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.8967408537864685
    2. '(key' → logprob: -1.3967409133911133
    3. ' key' → logprob: -1.7717409133911133
    4. ' (' → logprob: -1.8967409133911133
    5. '(k' → logprob: -4.271740913391113
    6. '(t' → logprob: -5.271740913391113
    7. 'for' → logprob: -6.396740913391113
    8. 'k' → logprob: -6.521740913391113
    9. ' for' → logprob: -7.771740913391113
    10. '   ' → logprob: -8.021740913391113

Token 999: ' is' (ID: 382)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0034383961465209723
    2. ' in' → logprob: -7.003438472747803
    3. 'for' → logprob: -7.378438472747803
    4. 's' → logprob: -7.628438472747803
    5. ')' → logprob: -7.878438472747803
    6. ' ,' → logprob: -8.003437995910645
    7. '()' → logprob: -9.003437995910645
    8. '```' → logprob: -9.003437995910645
    9. '=' → logprob: -9.378437995910645
    10. ' for' → logprob: -9.503437995910645

Token 1000: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6481544375419617
    2. '(key' → logprob: -1.7731544971466064
    3. '(t' → logprob: -2.3981544971466064
    4. ' d' → logprob: -3.0231544971466064
    5. '(d' → logprob: -3.0231544971466064
    6. '(k' → logprob: -3.3981544971466064
    7. 'd' → logprob: -3.5231544971466064
    8. ',' → logprob: -4.023154258728027
    9. '   ' → logprob: -5.023154258728027
    10. ' key' → logprob: -6.023154258728027

Token 1001: 't' (ID: 83)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.623881459236145
    2. '(t' → logprob: -1.748881459236145
    3. 't' → logprob: -2.3738813400268555
    4. 'k' → logprob: -2.6238813400268555
    5. ' key' → logprob: -2.9988813400268555
    6. ' (' → logprob: -3.1238813400268555
    7. '(key' → logprob: -3.8738813400268555
    8. '(k' → logprob: -5.2488813400268555
    9. ' t' → logprob: -6.6238813400268555
    10. '```' → logprob: -7.4988813400268555

Token 1002: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0028838065918534994
    2. ',' → logprob: -5.8778839111328125
    3. '```' → logprob: -10.002883911132812
    4. ')' → logprob: -12.377883911132812
    5. '
' → logprob: -12.502883911132812
    6. 'o' → logprob: -12.752883911132812
    7. 'e' → logprob: -13.002883911132812
    8. '),' → logprob: -13.127883911132812
    9. '_,' → logprob: -13.252883911132812
    10. 's' → logprob: -13.252883911132812

Token 1003: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001987722353078425
    2. ' ,' → logprob: -9.500198364257812
    3. '),' → logprob: -10.375198364257812
    4. ')' → logprob: -10.750198364257812
    5. ',
' → logprob: -10.875198364257812
    6. ',)' → logprob: -11.500198364257812
    7. '`,' → logprob: -11.625198364257812
    8. ',d' → logprob: -12.625198364257812
    9. '```' → logprob: -12.750198364257812
    10. '   ' → logprob: -13.125198364257812

Token 1004: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.7999858856201172
    2. 'count' → logprob: -1.4249858856201172
    3. 'value' → logprob: -2.674985885620117
    4. ' (' → logprob: -2.799985885620117
    5. ' cnt' → logprob: -3.174985885620117
    6. '(cnt' → logprob: -3.424985885620117
    7. 'key' → logprob: -4.049985885620117
    8. ' count' → logprob: -4.174985885620117
    9. ')' → logprob: -4.299985885620117
    10. ',' → logprob: -4.424985885620117

Token 1005: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.16725367307662964
    2. ')' → logprob: -2.1672537326812744
    3. ',' → logprob: -3.5422537326812744
    4. '()' → logprob: -5.292253494262695
    5. '(),' → logprob: -6.792253494262695
    6. ')d' → logprob: -7.042253494262695
    7. '   ' → logprob: -7.167253494262695
    8. 's' → logprob: -7.667253494262695
    9. '```' → logprob: -7.667253494262695
    10. '),' → logprob: -7.917253494262695

Token 1006: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.046503979712724686
    2. '):' → logprob: -3.921504020690918
    3. '):
' → logprob: -4.046504020690918
    4. '),' → logprob: -5.171504020690918
    5. '   ' → logprob: -7.296504020690918
    6. '()' → logprob: -7.421504020690918
    7. ')
' → logprob: -7.796504020690918
    8. '):

' → logprob: -8.296504020690918
    9. ',' → logprob: -8.421504020690918
    10. '())' → logprob: -9.671504020690918

Token 1007: ' value' (ID: 1432)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8929380178451538
    2. 'value' → logprob: -1.1429380178451538
    3. ' for' → logprob: -1.6429380178451538
    4. 'and' → logprob: -3.6429381370544434
    5. ' and' → logprob: -3.8929381370544434
    6. ' value' → logprob: -4.142938137054443
    7. '       ' → logprob: -5.517938137054443
    8. 'd' → logprob: -5.892938137054443
    9. '   ' → logprob: -6.517938137054443
    10. ' d' → logprob: -6.642938137054443

Token 1008: ' is' (ID: 382)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6216654181480408
    2. ',' → logprob: -1.8716654777526855
    3. ')' → logprob: -1.9966654777526855
    4. ' =' → logprob: -2.2466654777526855
    5. '=' → logprob: -3.1216654777526855
    6. ' is' → logprob: -5.4966654777526855
    7. '()' → logprob: -5.8716654777526855
    8. ' represents' → logprob: -6.3716654777526855
    9. '```' → logprob: -6.3716654777526855
    10. '):
' → logprob: -6.4966654777526855

Token 1009: ' a' (ID: 261)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.6129289269447327
    2. 'd' → logprob: -1.112928867340088
    3. ' count' → logprob: -3.487928867340088
    4. ' the' → logprob: -3.487928867340088
    5. 'the' → logprob: -3.487928867340088
    6. ' d' → logprob: -3.737928867340088
    7. 'value' → logprob: -5.362928867340088
    8. 'v' → logprob: -6.612928867340088
    9. 'number' → logprob: -6.862928867340088
    10. 'cnt' → logprob: -6.987928867340088

Token 1010: ' count' (ID: 3605)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.2018292248249054
    2. 'value' → logprob: -2.201829195022583
    3. 'd' → logprob: -3.326829195022583
    4. 'count' → logprob: -3.701829195022583
    5. 'dict' → logprob: -5.951829433441162
    6. ' d' → logprob: -6.326829433441162
    7. 'v' → logprob: -6.701829433441162
    8. 'number' → logprob: -6.701829433441162
    9. 'integer' → logprob: -6.826829433441162
    10. ' value' → logprob: -6.951829433441162

Token 1011: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029640672728419304
    2. 'for' → logprob: -4.0296406745910645
    3. '():' → logprob: -5.4046406745910645
    4. ' for' → logprob: -6.2796406745910645
    5. ':' → logprob: -6.5296406745910645
    6. '()' → logprob: -6.6546406745910645
    7. '():
' → logprob: -6.6546406745910645
    8. '```' → logprob: -7.1546406745910645
    9. '       ' → logprob: -8.779640197753906
    10. '()
' → logprob: -11.404640197753906

Token 1012: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10662747919559479
    2. 'for' → logprob: -2.3566274642944336
    3. ' for' → logprob: -5.481627464294434
    4. '```' → logprob: -6.106627464294434
    5. '``' → logprob: -12.606627464294434
    6. '    
' → logprob: -13.106627464294434
    7. '
' → logprob: -13.231627464294434
    8. '	for' → logprob: -13.731627464294434
    9. '       ' → logprob: -14.981627464294434
    10. '`' → logprob: -14.981627464294434

Token 1013: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.4809841215610504
    2. '   ' → logprob: -0.980984091758728
    3. ' for' → logprob: -4.980984210968018
    4. '```' → logprob: -11.10598373413086
    5. '	for' → logprob: -14.98098373413086
    6. '    
' → logprob: -15.48098373413086
    7. '
' → logprob: -15.85598373413086
    8. '``' → logprob: -16.10598373413086
    9. '       ' → logprob: -16.23098373413086
    10. ' ' → logprob: -17.10598373413086

Token 1014: ' i' (ID: 575)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.043067216873169
    2. 'key' → logprob: -1.168067216873169
    3. ' key' → logprob: -1.543067216873169
    4. '(key' → logprob: -2.418067216873169
    5. '(t' → logprob: -3.418067216873169
    6. '(k' → logprob: -7.79306697845459
    7. '_key' → logprob: -8.79306697845459
    8. 'k' → logprob: -9.29306697845459
    9. '((' → logprob: -9.54306697845459
    10. '```' → logprob: -10.16806697845459

Token 1015: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007787612266838551
    2. 'in' → logprob: -5.507787704467773
    3. ' in' → logprob: -6.507787704467773
    4. ',(' → logprob: -7.632787704467773
    5. ',v' → logprob: -7.882787704467773
    6. ' ,' → logprob: -8.257787704467773
    7. 's' → logprob: -8.757787704467773
    8. ',value' → logprob: -8.757787704467773
    9. ',key' → logprob: -8.882787704467773
    10. ',d' → logprob: -8.882787704467773

Token 1016: ' j' (ID: 441)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.8346883654594421
    2. 'j' → logprob: -1.209688425064087
    3. '(v' → logprob: -2.084688425064087
    4. '(j' → logprob: -2.459688425064087
    5. ' (' → logprob: -4.334688186645508
    6. '(cnt' → logprob: -5.084688186645508
    7. 'count' → logprob: -5.334688186645508
    8. '(count' → logprob: -5.459688186645508
    9. ' v' → logprob: -5.709688186645508
    10. ' j' → logprob: -5.709688186645508

Token 1017: ' in' (ID: 306)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.604941189289093
    2. 'in' → logprob: -1.1049411296844482
    3. ' in' → logprob: -2.1049411296844482
    4. ' ,' → logprob: -8.479941368103027
    5. ')' → logprob: -8.604941368103027
    6. ' ' → logprob: -9.354941368103027
    7. ',in' → logprob: -10.104941368103027
    8. '<|end|>' → logprob: -10.229941368103027
    9. '=' → logprob: -10.479941368103027
    10. 's' → logprob: -10.479941368103027

Token 1018: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.06197104603052139
    2. ' d' → logprob: -2.8119709491729736
    3. '(d' → logprob: -13.811970710754395
    4. '	d' → logprob: -13.936970710754395
    5. '   ' → logprob: -14.311970710754395
    6. ' ' → logprob: -15.061970710754395
    7. '  ' → logprob: -16.18697166442871
    8. 'in' → logprob: -16.18697166442871
    9. ')d' → logprob: -16.56197166442871
    10. '    ' → logprob: -16.68697166442871

Token 1019: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.610702363715973e-06
    2. '2' → logprob: -11.625009536743164
    3. '(d' → logprob: -15.750009536743164
    4. 'items' → logprob: -15.875009536743164
    5. '_items' → logprob: -16.000009536743164
    6. 'ict' → logprob: -17.125009536743164
    7. '.items' → logprob: -17.250009536743164
    8. 'ef' → logprob: -17.625009536743164
    9. '(' → logprob: -17.750009536743164
    10. '(dict' → logprob: -17.750009536743164

Token 1020: '.items' (ID: 19607)
  Prédit: 'items'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'items' → logprob: -0.8694016337394714
    2. '.items' → logprob: -1.2444016933441162
    3. ' in' → logprob: -2.244401693344116
    4. '_items' → logprob: -2.369401693344116
    5. 'in' → logprob: -2.494401693344116
    6. ',' → logprob: -5.119401454925537
    7. '.iteritems' → logprob: -6.869401454925537
    8. '   ' → logprob: -7.119401454925537
    9. '.' → logprob: -7.369401454925537
    10. ' items' → logprob: -7.619401454925537

Token 1021: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0022085432428866625
    2. '():
' → logprob: -6.127208709716797
    3. '()' → logprob: -11.127208709716797
    4. ':' → logprob: -12.502208709716797
    5. ' ():' → logprob: -12.502208709716797
    6. '():
' → logprob: -13.877208709716797
    7. '(' → logprob: -15.627208709716797
    8. '():

' → logprob: -16.377208709716797
    9. '):' → logprob: -17.127208709716797
    10. '()):
' → logprob: -18.002208709716797

Token 1022: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04102333262562752
    2. ':' → logprob: -3.4160232543945312
    3. ',' → logprob: -6.166023254394531
    4. '   ' → logprob: -6.291023254394531
    5. ':
' → logprob: -7.166023254394531
    6. '
' → logprob: -7.291023254394531
    7. '<|end|>' → logprob: -7.791023254394531
    8. '        
' → logprob: -8.041023254394531
    9. ' if' → logprob: -8.166023254394531
    10. '```' → logprob: -8.541023254394531

Token 1023: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.724461555480957
    2. 'if' → logprob: -1.349461555480957
    3. 'key' → logprob: -2.349461555480957
    4. ' if' → logprob: -2.849461555480957
    5. 't' → logprob: -3.474461555480957
    6. ' key' → logprob: -3.474461555480957
    7. '   ' → logprob: -4.224461555480957
    8. 'k' → logprob: -4.474461555480957
    9. 'temp' → logprob: -5.724461555480957
    10. ' ans' → logprob: -6.349461555480957

Token 1024: ' If' (ID: 1843)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3477352261543274
    2. 't' → logprob: -2.0977351665496826
    3. 'key' → logprob: -2.4727351665496826
    4. 'ans' → logprob: -2.7227351665496826
    5. 'k' → logprob: -4.222735404968262
    6. 'cnt' → logprob: -6.472735404968262
    7. '   ' → logprob: -6.972735404968262
    8. '#' → logprob: -7.597735404968262
    9. 'count' → logprob: -7.597735404968262
    10. 'x' → logprob: -7.597735404968262

Token 1025: ' the' (ID: 290)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.09244643151760101
    2. ' i' → logprob: -2.4674463272094727
    3. '(i' → logprob: -6.092446327209473
    4. ' (' → logprob: -7.217446327209473
    5. '(' → logprob: -7.717446327209473
    6. ' ' → logprob: -10.467446327209473
    7. '(t' → logprob: -11.967446327209473
    8. '   ' → logprob: -12.467446327209473
    9. 'd' → logprob: -12.717446327209473
    10. '((' → logprob: -12.717446327209473

Token 1026: ' current' (ID: 2208)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.011227842420339584
    2. ' i' → logprob: -5.261227607727051
    3. '(i' → logprob: -5.386227607727051
    4. '(' → logprob: -7.636227607727051
    5. ' (' → logprob: -7.636227607727051
    6. 'j' → logprob: -8.51122760772705
    7. 'd' → logprob: -9.51122760772705
    8. '(len' → logprob: -11.19872760772705
    9. 'len' → logprob: -11.26122760772705
    10. 'k' → logprob: -11.32372760772705

Token 1027: ' key' (ID: 2140)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.17120261490345
    2. ' i' → logprob: -2.2962026596069336
    3. 'j' → logprob: -4.046202659606934
    4. '(' → logprob: -4.546202659606934
    5. '[' → logprob: -5.046202659606934
    6. 'cnt' → logprob: -5.296202659606934
    7. '(i' → logprob: -5.421202659606934
    8. ' (' → logprob: -5.671202659606934
    9. ' j' → logprob: -6.171202659606934
    10. 't' → logprob: -6.671202659606934

Token 1028: ' '' (ID: 461)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05492730811238289
    2. 'in' → logprob: -2.929927349090576
    3. ' not' → logprob: -11.304926872253418
    4. '[' → logprob: -11.304926872253418
    5. ' i' → logprob: -12.054926872253418
    6. '   ' → logprob: -12.304926872253418
    7. ' ' → logprob: -13.304926872253418
    8. ')' → logprob: -14.054926872253418
    9. '    ' → logprob: -14.054926872253418
    10. 'not' → logprob: -14.179926872253418

Token 1029: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.004108557943254709
    2. ' i' → logprob: -5.504108428955078
    3. '(i' → logprob: -11.004108428955078
    4. '(' → logprob: -11.879108428955078
    5. ' (' → logprob: -13.004108428955078
    6. '   ' → logprob: -14.004108428955078
    7. 'd' → logprob: -14.254108428955078
    8. 'j' → logprob: -14.254108428955078
    9. ' ' → logprob: -14.629108428955078
    10. ')' → logprob: -15.254108428955078

Token 1030: ''' (ID: 6)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008532542735338211
    2. 'in' → logprob: -4.883532524108887
    3. ' not' → logprob: -7.883532524108887
    4. '[' → logprob: -8.008532524108887
    5. ')' → logprob: -9.508532524108887
    6. ' ' → logprob: -9.883532524108887
    7. 'not' → logprob: -10.633532524108887
    8. '   ' → logprob: -11.633532524108887
    9. ' )' → logprob: -11.758532524108887
    10. ' is' → logprob: -11.758532524108887

Token 1031: ' exists' (ID: 13031)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03851820528507233
    2. 'in' → logprob: -3.288518190383911
    3. '[' → logprob: -7.78851842880249
    4. ' not' → logprob: -10.788517951965332
    5. ' is' → logprob: -11.288517951965332
    6. ' ' → logprob: -11.538517951965332
    7. ')' → logprob: -12.413517951965332
    8. '```' → logprob: -12.788517951965332
    9. '<|end|>' → logprob: -12.913517951965332
    10. ' i' → logprob: -13.038517951965332

Token 1032: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6326327323913574
    2. 'in' → logprob: -0.7576327323913574
    3. '<|end|>' → logprob: -10.632633209228516
    4. '   ' → logprob: -12.507633209228516
    5. ' ' → logprob: -13.382633209228516
    6. '<|end|>' → logprob: -14.132633209228516
    7. ' also' → logprob: -14.757633209228516
    8. '```' → logprob: -15.007633209228516
    9. '	in' → logprob: -15.257633209228516
    10. 'also' → logprob: -15.257633209228516

Token 1033: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.002477796748280525
    2. ' d' → logprob: -6.002477645874023
    3. '   ' → logprob: -13.252477645874023
    4. '```' → logprob: -15.502477645874023
    5. '
' → logprob: -15.877477645874023
    6. '       ' → logprob: -17.252477645874023
    7. ' ' → logprob: -18.377477645874023
    8. '  ' → logprob: -18.627477645874023
    9. '	d' → logprob: -19.252477645874023
    10. '``' → logprob: -19.377477645874023

Token 1034: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.320199877838604e-07
    2. 'd' → logprob: -15.5
    3. '```' → logprob: -17.5
    4. '₂' → logprob: -17.625
    5. ' ' → logprob: -17.75
    6. '_' → logprob: -18.625
    7. ' d' → logprob: -18.625
    8. '
' → logprob: -18.875
    9. '   ' → logprob: -19.0
    10. 's' → logprob: -19.75

Token 1035: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6562724709510803
    2. '       ' → logprob: -1.0312724113464355
    3. ' and' → logprob: -2.7812724113464355
    4. ':
' → logprob: -3.6562724113464355
    5. ',' → logprob: -4.5312724113464355
    6. 'and' → logprob: -5.1562724113464355
    7. '   ' → logprob: -5.5312724113464355
    8. '<|end|>' → logprob: -5.5312724113464355
    9. '=' → logprob: -5.6562724113464355
    10. ' =' → logprob: -6.4062724113464355

Token 1036: '       ' (ID: 309)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5983787178993225
    2. '       ' → logprob: -0.8483787178993225
    3. ':' → logprob: -4.348378658294678
    4. '           ' → logprob: -5.723378658294678
    5. ':
' → logprob: -6.098378658294678
    6. 'and' → logprob: -6.223378658294678
    7. ',' → logprob: -7.473378658294678
    8. ' =' → logprob: -7.598378658294678
    9. '<|end|>' → logprob: -8.598379135131836
    10. ' if' → logprob: -8.973379135131836

Token 1037: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10045618563890457
    2. ' if' → logprob: -2.6004562377929688
    3. 'if' (adapté à ' if') → logprob: -3.8504562377929688
    4. '   ' → logprob: -10.100456237792969
    5. '           ' → logprob: -11.100456237792969
    6. '	if' → logprob: -12.225456237792969
    7. '	' → logprob: -13.475456237792969
    8. '	   ' → logprob: -13.725456237792969
    9. '```' → logprob: -14.225456237792969
    10. '<|end|>' → logprob: -15.100456237792969

Token 1038: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6326271891593933
    2. ' i' → logprob: -0.7576271891593933
    3. '   ' → logprob: -10.757627487182617
    4. ' ' → logprob: -12.757627487182617
    5. '(i' → logprob: -13.632627487182617
    6. 'd' → logprob: -14.382627487182617
    7. '  ' → logprob: -14.632627487182617
    8. '{i' → logprob: -15.007627487182617
    9. '	i' → logprob: -15.132627487182617
    10. ' (' → logprob: -15.507627487182617

Token 1039: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012581583112478256
    2. 'in' → logprob: -4.3875813484191895
    3. ')' → logprob: -10.637581825256348
    4. '<|end|>' → logprob: -10.887581825256348
    5. '[' → logprob: -11.637581825256348
    6. ' ' → logprob: -12.262581825256348
    7. '   ' → logprob: -13.012581825256348
    8. ']' → logprob: -13.137581825256348
    9. '	in' → logprob: -13.137581825256348
    10. 'n' → logprob: -13.762581825256348

Token 1040: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0019286326132714748
    2. ' d' → logprob: -6.251928806304932
    3. '   ' → logprob: -19.501928329467773
    4. '
' → logprob: -20.126928329467773
    5. '	d' → logprob: -20.751928329467773
    6. ')d' → logprob: -20.876928329467773
    7. '```' → logprob: -21.751928329467773
    8. '(d' → logprob: -22.251928329467773
    9. '$d' → logprob: -22.751928329467773
    10. '>d' → logprob: -22.876928329467773

Token 1041: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.320199877838604e-07
    2. '```' → logprob: -16.0
    3. '₂' → logprob: -16.0
    4. '۲' → logprob: -16.625
    5. '२' → logprob: -17.375
    6. '২' → logprob: -18.0
    7. '1' → logprob: -18.625
    8. '٢' → logprob: -18.9375
    9. '２' → logprob: -19.25
    10. '' → logprob: -19.625

Token 1042: '.keys' (ID: 18392)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.47860756516456604
    2. ':' → logprob: -0.9786075353622437
    3. '           ' → logprob: -6.228607654571533
    4. '       ' → logprob: -6.228607654571533
    5. ' and' → logprob: -8.853607177734375
    6. '):
' → logprob: -9.103607177734375
    7. ',' → logprob: -9.353607177734375
    8. '=' → logprob: -9.728607177734375
    9. ':
' → logprob: -10.603607177734375
    10. 'and' → logprob: -10.728607177734375

Token 1043: '():
' (ID: 8595)
  Prédit: '():
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.6703159809112549
    2. ':' → logprob: -1.0453159809112549
    3. ':
' → logprob: -2.045315980911255
    4. '():' → logprob: -5.670315742492676
    5. '       ' → logprob: -6.170315742492676
    6. '):
' → logprob: -6.795315742492676
    7. '<|end|>' → logprob: -7.795315742492676
    8. '()' → logprob: -9.295315742492676
    9. '():
' → logprob: -9.795315742492676
    10. '           ' → logprob: -9.795315742492676

Token 1044: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0015893694944679737
    2. ':' → logprob: -6.751589298248291
    3. '```' → logprob: -8.75158977508545
    4. '<|end|>' → logprob: -9.00158977508545
    5. '       ' → logprob: -9.87658977508545
    6. ':
' → logprob: -10.50158977508545
    7. '               ' → logprob: -10.75158977508545
    8. '	       ' → logprob: -12.12658977508545
    9. '):
' → logprob: -12.12658977508545
    10. ',' → logprob: -12.25158977508545

Token 1045: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6390231847763062
    2. '               ' → logprob: -0.7640231847763062
    3. ' ans' → logprob: -5.889023303985596
    4. '       ' → logprob: -6.389023303985596
    5. '```' → logprob: -6.639023303985596
    6. 'ans' → logprob: -7.639023303985596
    7. '
' → logprob: -10.514022827148438
    8. '   ' → logprob: -10.889022827148438
    9. '	ans' → logprob: -11.264022827148438
    10. '	       ' → logprob: -11.264022827148438

Token 1046: ' Multiply' (ID: 137658)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.1618499904870987
    2. '           ' → logprob: -2.1618499755859375
    3. ' ans' → logprob: -3.4118499755859375
    4. '               ' → logprob: -6.7868499755859375
    5. '	ans' → logprob: -8.786849975585938
    6. '   ' → logprob: -10.786849975585938
    7. '       ' → logprob: -11.286849975585938
    8. 'answer' → logprob: -11.786849975585938
    9. '```' → logprob: -11.911849975585938
    10. '(ans' → logprob: -12.911849975585938

Token 1047: ' the' (ID: 290)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.4945201277732849
    2. '           ' → logprob: -1.4945201873779297
    3. 'ans' → logprob: -1.9945201873779297
    4. ' ans' → logprob: -3.6195201873779297
    5. ' j' → logprob: -5.99452018737793
    6. '(ans' → logprob: -8.61952018737793
    7. '	ans' → logprob: -9.49452018737793
    8. '   ' → logprob: -9.61952018737793
    9. '               ' → logprob: -10.24452018737793
    10. '          ' → logprob: -11.36952018737793

Token 1048: ' count' (ID: 3605)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.08708270639181137
    2. 'j' → logprob: -2.837082624435425
    3. ' ans' → logprob: -3.712082624435425
    4. ' j' → logprob: -9.212082862854004
    5. 'value' → logprob: -9.462082862854004
    6. '   ' → logprob: -9.962082862854004
    7. '	ans' → logprob: -10.212082862854004
    8. '           ' → logprob: -10.337082862854004
    9. 'answer' → logprob: -10.962082862854004
    10. ' value' → logprob: -10.962082862854004

Token 1049: ' from' (ID: 591)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.28973478078842163
    2. ' j' → logprob: -2.6647348403930664
    3. ' =' → logprob: -2.9147348403930664
    4. ' ans' → logprob: -3.4147348403930664
    5. 'j' → logprob: -3.5397348403930664
    6. ' +=' → logprob: -4.414734840393066
    7. ' and' → logprob: -4.789734840393066
    8. '<|end|>' → logprob: -4.789734840393066
    9. '=' → logprob: -5.289734840393066
    10. 'ans' → logprob: -5.414734840393066

Token 1050: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5424097776412964
    2. 'j' → logprob: -0.9174097776412964
    3. ' j' → logprob: -4.542409896850586
    4. ' d' → logprob: -4.792409896850586
    5. '   ' → logprob: -9.417409896850586
    6. '```' → logprob: -9.792409896850586
    7. '       ' → logprob: -11.667409896850586
    8. '[j' → logprob: -12.917409896850586
    9. '`' → logprob: -13.167409896850586
    10. '           ' → logprob: -13.417409896850586

Token 1051: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11285126954317093
    2. '2' → logprob: -2.23785138130188
    3. 'd' → logprob: -10.6128511428833
    4. 's' → logprob: -14.3628511428833
    5. 'i' → logprob: -14.7378511428833
    6. 'a' → logprob: -14.9253511428833
    7. '```' → logprob: -14.9878511428833
    8. ' d' → logprob: -15.3003511428833
    9. ' ' → logprob: -15.5503511428833
    10. 'j' → logprob: -15.6753511428833

Token 1052: ' (' (ID: 350)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.6852403283119202
    2. ' j' → logprob: -1.1852402687072754
    3. '[i' → logprob: -2.9352402687072754
    4. '           ' → logprob: -3.4352402687072754
    5. '*j' → logprob: -3.6852402687072754
    6. 'j' → logprob: -3.9352402687072754
    7. ' *' → logprob: -4.185240268707275
    8. ',' → logprob: -4.185240268707275
    9. ' by' → logprob: -4.435240268707275
    10. ' and' → logprob: -4.935240268707275

Token 1053: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0015310514718294144
    2. ' j' → logprob: -6.50153112411499
    3. '           ' → logprob: -11.376530647277832
    4. 'ans' → logprob: -12.001530647277832
    5. ' ans' → logprob: -12.001530647277832
    6. '```' → logprob: -13.001530647277832
    7. '            
' → logprob: -14.376530647277832
    8. '   ' → logprob: -15.001530647277832
    9. ')' → logprob: -15.251530647277832
    10. '<|end|>' → logprob: -15.626530647277832

Token 1054: ')' (ID: 8)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.08783603459596634
    2. '*' → logprob: -2.9628360271453857
    3. ')' → logprob: -3.4628360271453857
    4. '           ' → logprob: -7.337836265563965
    5. ' ' → logprob: -9.462836265563965
    6. '```' → logprob: -9.462836265563965
    7. ' )' → logprob: -9.962836265563965
    8. ' and' → logprob: -10.087836265563965
    9. ' by' → logprob: -10.337836265563965
    10. ',' → logprob: -10.462836265563965

Token 1055: ' by' (ID: 656)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.2560800611972809
    2. '*' → logprob: -1.8810800313949585
    3. '           ' → logprob: -2.631080150604248
    4. ' and' → logprob: -7.006080150604248
    5. ',' → logprob: -9.50607967376709
    6. '   ' → logprob: -9.75607967376709
    7. ')' → logprob: -9.75607967376709
    8. '       ' → logprob: -9.75607967376709
    9. '*j' → logprob: -9.88107967376709
    10. '               ' → logprob: -10.00607967376709

Token 1056: ' the' (ID: 290)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.16026179492473602
    2. ' d' → logprob: -1.9102617502212524
    3. '           ' → logprob: -10.910262107849121
    4. ' the' → logprob: -12.035262107849121
    5. '   ' → logprob: -12.285262107849121
    6. 'the' → logprob: -13.035262107849121
    7. '          ' → logprob: -13.410262107849121
    8. '       ' → logprob: -14.035262107849121
    9. '
' → logprob: -14.035262107849121
    10. '               ' → logprob: -14.410262107849121

Token 1057: ' matching' (ID: 20238)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.02054363675415516
    2. ' d' → logprob: -3.8955435752868652
    3. '
' → logprob: -14.645544052124023
    4. '```' → logprob: -15.020544052124023
    5. 'count' → logprob: -15.770544052124023
    6. '`' → logprob: -16.145544052124023
    7. 'value' → logprob: -16.270544052124023
    8. ' value' → logprob: -16.270544052124023
    9. '           ' → logprob: -16.395544052124023
    10. '   ' → logprob: -16.895544052124023

Token 1058: ' count' (ID: 3605)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.16054174304008484
    2. ' d' → logprob: -1.9105417728424072
    3. 'count' → logprob: -8.785541534423828
    4. ' count' → logprob: -9.035541534423828
    5. ' value' → logprob: -11.035541534423828
    6. 'value' → logprob: -11.535541534423828
    7. '```' → logprob: -12.035541534423828
    8. '`' → logprob: -12.535541534423828
    9. '   ' → logprob: -12.785541534423828
    10. '
' → logprob: -13.285541534423828

Token 1059: ' in' (ID: 306)
  Prédit: ' from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.665386438369751
    2. ' in' → logprob: -1.040386438369751
    3. ' d' → logprob: -2.415386438369751
    4. 'from' → logprob: -3.665386438369751
    5. 'd' → logprob: -4.540386199951172
    6. 'in' → logprob: -5.790386199951172
    7. ' of' → logprob: -6.290386199951172
    8. '           ' → logprob: -6.915386199951172
    9. '   ' → logprob: -7.290386199951172
    10. '```' → logprob: -8.915386199951172

Token 1060: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.02975292131304741
    2. ' d' → logprob: -3.5297529697418213
    3. '```' → logprob: -13.654752731323242
    4. '   ' → logprob: -14.779752731323242
    5. ')d' → logprob: -15.279752731323242
    6. '           ' → logprob: -15.404752731323242
    7. '       ' → logprob: -16.279752731323242
    8. '
' → logprob: -16.279752731323242
    9. '	d' → logprob: -16.654752731323242
    10. '(d' → logprob: -16.904752731323242

Token 1061: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. '```' → logprob: -16.375
    3. ' ' → logprob: -17.125
    4. '₂' → logprob: -17.375
    5. 'd' → logprob: -17.625
    6. '_' → logprob: -19.375
    7. '``' → logprob: -19.5
    8. '
' → logprob: -19.625
    9. '`' → logprob: -20.125
    10. '   ' → logprob: -20.125

Token 1062: ',' (ID: 11)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.20609067380428314
    2. 'd' → logprob: -2.0810906887054443
    3. '[j' → logprob: -4.081090450286865
    4. '[i' → logprob: -4.331090450286865
    5. '           ' → logprob: -4.581090450286865
    6. '[d' → logprob: -4.706090450286865
    7. '[' → logprob: -5.081090450286865
    8. ' j' → logprob: -6.081090450286865
    9. ' and' → logprob: -6.956090450286865
    10. '*d' → logprob: -7.831090450286865

Token 1063: ' and' (ID: 326)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.7256309986114502
    2. ' ans' → logprob: -0.8506309986114502
    3. '           ' → logprob: -2.47563099861145
    4. ' and' → logprob: -6.475630760192871
    5. 'and' → logprob: -6.600630760192871
    6. '                   ' → logprob: -7.600630760192871
    7. '               ' → logprob: -7.725630760192871
    8. '	ans' → logprob: -8.100630760192871
    9. '(ans' → logprob: -8.475630760192871
    10. '   ' → logprob: -9.475630760192871

Token 1064: ' add' (ID: 1147)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.2560745179653168
    2. ' ans' → logprob: -1.7560745477676392
    3. 'add' → logprob: -3.6310744285583496
    4. '           ' → logprob: -4.13107442855835
    5. ' add' → logprob: -5.50607442855835
    6. '+=' → logprob: -5.63107442855835
    7. ' +=' → logprob: -7.00607442855835
    8. 'acc' → logprob: -7.13107442855835
    9. '```' → logprob: -7.25607442855835
    10. '	ans' → logprob: -8.506074905395508

Token 1065: ' to' (ID: 316)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.6099390983581543
    2. 'd' → logprob: -0.8599390983581543
    3. '           ' → logprob: -3.7349390983581543
    4. ' j' → logprob: -5.734939098358154
    5. ' to' → logprob: -6.109939098358154
    6. 'j' → logprob: -6.109939098358154
    7. '               ' → logprob: -7.734939098358154
    8. '   ' → logprob: -7.984939098358154
    9. '                   ' → logprob: -7.984939098358154
    10. '            ' → logprob: -8.609939575195312

Token 1066: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0002613358374219388
    2. ' ans' → logprob: -8.250261306762695
    3. 'answer' → logprob: -17.250261306762695
    4. '	ans' → logprob: -17.625261306762695
    5. '(ans' → logprob: -17.625261306762695
    6. '_ans' → logprob: -19.875261306762695
    7. '   ' → logprob: -19.875261306762695
    8. '```' → logprob: -21.125261306762695
    9. '           ' → logprob: -21.375261306762695
    10. '
' → logprob: -21.500261306762695

Token 1067: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.093968465924263
    2. ' j' → logprob: -3.468968391418457
    3. 'j' → logprob: -4.093968391418457
    4. ' ans' → logprob: -4.218968391418457
    5. ' +=' → logprob: -4.468968391418457
    6. ' =' → logprob: -5.468968391418457
    7. 'ans' → logprob: -5.718968391418457
    8. '               ' → logprob: -6.093968391418457
    9. '=' → logprob: -6.343968391418457
    10. '+=' → logprob: -6.343968391418457

Token 1068: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.026781022548675537
    2. ' ans' → logprob: -4.15178108215332
    3. 'ans' → logprob: -5.77678108215332
    4. '               ' → logprob: -6.52678108215332
    5. '```' → logprob: -7.02678108215332
    6. ' j' → logprob: -7.15178108215332
    7. 'j' → logprob: -7.15178108215332
    8. ' =' → logprob: -7.40178108215332
    9. '                   ' → logprob: -7.40178108215332
    10. ' +=' → logprob: -7.52678108215332

Token 1069: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.03813650459051132
    2. ' ans' → logprob: -3.2881364822387695
    3. '           ' → logprob: -9.41313648223877
    4. '               ' → logprob: -11.66313648223877
    5. '	ans' → logprob: -13.28813648223877
    6. '(ans' → logprob: -13.41313648223877
    7. '   ' → logprob: -13.78813648223877
    8. 'j' → logprob: -14.78813648223877
    9. '                   ' → logprob: -15.91313648223877
    10. '_ans' → logprob: -17.163137435913086

Token 1070: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.062010254710912704
    2. '+=' → logprob: -2.8120102882385254
    3. '+' → logprob: -10.937009811401367
    4. '           ' → logprob: -12.062009811401367
    5. ']+=' → logprob: -12.312009811401367
    6. '```' → logprob: -12.812009811401367
    7. ' +' → logprob: -12.937009811401367
    8. '=' → logprob: -12.937009811401367
    9. '            ' → logprob: -13.187009811401367
    10. ' =' → logprob: -13.687009811401367

Token 1071: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.003178544342517853
    2. ' j' → logprob: -5.753178596496582
    3. '   ' → logprob: -14.003178596496582
    4. '	j' → logprob: -17.628177642822266
    5. '$j' → logprob: -17.628177642822266
    6. '       ' → logprob: -18.378177642822266
    7. '(j' → logprob: -18.503177642822266
    8. '           ' → logprob: -19.128177642822266
    9. '    ' → logprob: -19.128177642822266
    10. 'd' → logprob: -19.378177642822266

Token 1072: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.27518430352211
    2. '*' → logprob: -1.5251842737197876
    3. '*d' → logprob: -3.775184392929077
    4. 'd' → logprob: -10.525184631347656
    5. '   ' → logprob: -11.275184631347656
    6. ' *
' → logprob: -12.525184631347656
    7. ' d' → logprob: -13.525184631347656
    8. ' ' → logprob: -13.650184631347656
    9. '*
' → logprob: -14.025184631347656
    10. '**' → logprob: -14.275184631347656

Token 1073: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.00020354038861114532
    2. ' d' → logprob: -8.500203132629395
    3. '   ' → logprob: -18.87520408630371
    4. '	d' → logprob: -19.75020408630371
    5. '           ' → logprob: -20.50020408630371
    6. '[d' → logprob: -20.75020408630371
    7. '       ' → logprob: -21.25020408630371
    8. '(d' → logprob: -21.37520408630371
    9. '```' → logprob: -21.37520408630371
    10. '
' → logprob: -21.50020408630371

Token 1074: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. '₂' → logprob: -15.875
    3. '[' → logprob: -17.625
    4. '۲' → logprob: -18.875
    5. '```' → logprob: -18.875
    6. ' ' → logprob: -19.375
    7. '[i' → logprob: -19.375
    8. '[
' → logprob: -19.875
    9. '(' → logprob: -20.0
    10. '２' → logprob: -20.0

Token 1075: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.512236498361744e-07
    2. '[' → logprob: -15.875000953674316
    3. '[(' → logprob: -16.0
    4. ' [' → logprob: -16.625
    5. '```' → logprob: -16.625
    6. '[
' → logprob: -16.875
    7. '\[' → logprob: -17.5
    8. 'i' → logprob: -17.5
    9. '[I' → logprob: -18.625
    10. '`' → logprob: -19.0

Token 1076: ']

' (ID: 3144)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1077: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03636480122804642
    2. '
' → logprob: -3.411364793777466
    3. '    
' → logprob: -6.536365032196045
    4. '<|end|>' → logprob: -7.036365032196045
    5. 'print' → logprob: -8.786364555358887
    6. 'return' → logprob: -9.536364555358887
    7. '```' → logprob: -9.536364555358887
    8. '  
' → logprob: -10.661364555358887
    9. '       ' → logprob: -11.411364555358887
    10. ')' → logprob: -11.661364555358887

Token 1078: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019310681149363518
    2. 'print' → logprob: -4.019310474395752
    3. '
' → logprob: -7.144310474395752
    4. '    
' → logprob: -8.51931095123291
    5. '```' → logprob: -9.14431095123291
    6. ' print' → logprob: -10.76931095123291
    7. 'return' → logprob: -11.39431095123291
    8. '	print' → logprob: -11.39431095123291
    9. '<|end|>' → logprob: -11.39431095123291
    10. '  
' → logprob: -12.76931095123291

Token 1079: ' Output' (ID: 18315)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.000264315924141556
    2. '   ' → logprob: -8.250264167785645
    3. ' print' → logprob: -12.750264167785645
    4. '```' → logprob: -16.50026512145996
    5. '#print' → logprob: -17.12526512145996
    6. '
' → logprob: -18.50026512145996
    7. 'return' → logprob: -18.62526512145996
    8. '	print' → logprob: -18.87526512145996
    9. '``' → logprob: -20.37526512145996
    10. '    
' → logprob: -20.75026512145996

Token 1080: ' the' (ID: 290)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5856571793556213
    2. '   ' → logprob: -1.0856571197509766
    3. '(ans' → logprob: -2.8356571197509766
    4. 'ans' → logprob: -3.0856571197509766
    5. ' ans' → logprob: -7.210657119750977
    6. '```' → logprob: -8.585657119750977
    7. ' print' → logprob: -8.960657119750977
    8. '
' → logprob: -9.835657119750977
    9. '	ans' → logprob: -10.210657119750977
    10. '    
' → logprob: -10.835657119750977

Token 1081: ' final' (ID: 1721)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.014448833651840687
    2. '(ans' → logprob: -4.264448642730713
    3. 'print' → logprob: -8.389449119567871
    4. ' ans' → logprob: -10.389449119567871
    5. 'answer' → logprob: -10.764449119567871
    6. 'result' → logprob: -12.264449119567871
    7. '	ans' → logprob: -14.389449119567871
    8. '   ' → logprob: -14.514449119567871
    9. 'ANS' → logprob: -16.264448165893555
    10. '```' → logprob: -16.389448165893555

Token 1082: ' computed' (ID: 46716)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.03867223486304283
    2. 'print' → logprob: -4.03867244720459
    3. '(ans' → logprob: -4.03867244720459
    4. 'answer' → logprob: -6.03867244720459
    5. ' ans' → logprob: -8.41367244720459
    6. '   ' → logprob: -10.16367244720459
    7. 'result' → logprob: -10.28867244720459
    8. '```' → logprob: -11.78867244720459
    9. '	ans' → logprob: -13.53867244720459
    10. ' answer' → logprob: -13.78867244720459

Token 1083: ' answer' (ID: 6052)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.6981897950172424
    2. '(ans' → logprob: -0.6981897950172424
    3. 'answer' → logprob: -5.448189735412598
    4. 'result' → logprob: -7.698189735412598
    5. ' ans' → logprob: -8.823189735412598
    6. '(' → logprob: -9.698189735412598
    7. 'print' → logprob: -10.573189735412598
    8. '(answer' → logprob: -11.073189735412598
    9. '(
' → logprob: -11.448189735412598
    10. '	ans' → logprob: -12.573189735412598

Token 1084: ' using' (ID: 2360)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008759809657931328
    2. 'print' → logprob: -4.75875997543335
    3. '```' → logprob: -8.883759498596191
    4. ' print' → logprob: -12.883759498596191
    5. '
' → logprob: -13.008759498596191
    6. '    
' → logprob: -13.758759498596191
    7. '``' → logprob: -15.008759498596191
    8. '	print' → logprob: -15.383759498596191
    9. '       ' → logprob: -15.508759498596191
    10. '`' → logprob: -16.383760452270508

Token 1085: ' the' (ID: 290)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0002719449403230101
    2. ' print' → logprob: -8.250271797180176
    3. '```' → logprob: -11.500271797180176
    4. '   ' → logprob: -14.500271797180176
    5. '``' → logprob: -17.000272750854492
    6. '`' → logprob: -18.000272750854492
    7. '(print' → logprob: -18.125272750854492
    8. '
' → logprob: -20.750272750854492
    9. '	print' → logprob: -22.625272750854492
    10. '#print' → logprob: -22.750272750854492

Token 1086: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.073596548754722e-05
    2. '```' → logprob: -10.50005054473877
    3. ' print' → logprob: -10.75005054473877
    4. '   ' → logprob: -13.62505054473877
    5. '`' → logprob: -15.12505054473877
    6. '``' → logprob: -15.50005054473877
    7. '
' → logprob: -17.750051498413086
    8. '#print' → logprob: -18.625051498413086
    9. '(print' → logprob: -20.750051498413086
    10. '#' → logprob: -21.375051498413086

Token 1087: ' function' (ID: 1114)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2543365955352783
    2. '(ans' → logprob: -1.5043365955352783
    3. '()' → logprob: -6.129336357116699
    4. '(answer' → logprob: -9.1293363571167
    5. '(
' → logprob: -9.7543363571167
    6. '("' → logprob: -11.2543363571167
    7. '('' → logprob: -12.0043363571167
    8. ' (' → logprob: -12.1293363571167
    9. '(`' → logprob: -12.1293363571167
    10. '(

' → logprob: -12.3793363571167

Token 1088: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07962125539779663
    2. 'print' → logprob: -2.5796213150024414
    3. '```' → logprob: -7.704621315002441
    4. '(print' → logprob: -9.204621315002441
    5. ' print' → logprob: -9.579621315002441
    6. '(' → logprob: -10.329621315002441
    7. '()' → logprob: -10.454621315002441
    8. '    
' → logprob: -10.579621315002441
    9. '``' → logprob: -11.579621315002441
    10. '	print' → logprob: -12.954621315002441

Token 1089: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0017274183919653296
    2. 'print' → logprob: -6.75172758102417
    3. '```' → logprob: -7.50172758102417
    4. ' print' → logprob: -13.001727104187012
    5. '``' → logprob: -13.126727104187012
    6. '	print' → logprob: -15.376727104187012
    7. '`' → logprob: -15.876727104187012
    8. '       ' → logprob: -16.251728057861328
    9. '    
' → logprob: -16.376728057861328
    10. '(print' → logprob: -18.126728057861328

Token 1090: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.16091986000537872
    2. '   ' → logprob: -1.9109199047088623
    3. '```' → logprob: -7.660919666290283
    4. ' print' → logprob: -8.410920143127441
    5. '``' → logprob: -13.660920143127441
    6. '	print' → logprob: -14.035920143127441
    7. '`' → logprob: -15.535920143127441
    8. '(print' → logprob: -17.910919189453125
    9. '       ' → logprob: -19.410919189453125
    10. '.print' → logprob: -19.910919189453125

Token 1091: '(ans' (ID: 70054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1284390538930893
    2. '(ans' → logprob: -2.128438949584961
    3. '()' → logprob: -7.128438949584961
    4. '("("' → logprob: -7.378438949584961
    5. '('' → logprob: -9.753438949584961
    6. '("")' → logprob: -12.253438949584961
    7. '(f' → logprob: -12.628438949584961
    8. '((' → logprob: -12.878438949584961
    9. '(`' → logprob: -13.003438949584961
    10. ' (' → logprob: -13.128438949584961

Token 1092: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005955583415925503
    2. '())' → logprob: -5.255955696105957
    3. '()' → logprob: -7.255955696105957
    4. ' )' → logprob: -11.880955696105957
    5. '')' → logprob: -13.380955696105957
    6. '`)' → logprob: -13.505955696105957
    7. ')
' → logprob: -13.755955696105957
    8. '```' → logprob: -13.755955696105957
    9. '")' → logprob: -14.005955696105957
    10. '(' → logprob: -14.255955696105957

Token 1093: '#' (ID: 2)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.0201090574264526
    2. '<|end|>' → logprob: -1.3951090574264526
    3. '
' → logprob: -1.5201090574264526
    4. '```' → logprob: -2.145109176635742
    5. ')' → logprob: -3.520109176635742
    6. 'if' → logprob: -4.395109176635742
    7. '(main' → logprob: -5.020109176635742
    8. ' main' → logprob: -5.895109176635742
    9. '()' → logprob: -7.145109176635742
    10. 'def' → logprob: -7.645109176635742

Token 1094: ' Call' (ID: 9238)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.8544160723686218
    2. 'if' → logprob: -1.6044161319732666
    3. '<|end|>' → logprob: -1.7294161319732666
    4. '
' → logprob: -1.9794161319732666
    5. '```' → logprob: -3.4794161319732666
    6. '(main' → logprob: -4.1044158935546875
    7. ' main' → logprob: -5.7294158935546875
    8. '()' → logprob: -5.8544158935546875
    9. ')' → logprob: -6.3544158935546875
    10. '#' → logprob: -7.1044158935546875

Token 1095: ' the' (ID: 290)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -6.134509021649137e-05
    2. '(main' → logprob: -10.25006103515625
    3. ' main' → logprob: -10.75006103515625
    4. 'if' → logprob: -12.75006103515625
    5. '```' → logprob: -13.75006103515625
    6. 'def' → logprob: -14.62506103515625
    7. '	main' → logprob: -16.87506103515625
    8. '_main' → logprob: -18.37506103515625
    9. '__' → logprob: -18.75006103515625
    10. '()' → logprob: -19.00006103515625

Token 1096: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.003214665222913027
    2. ' main' → logprob: -5.7532148361206055
    3. 'if' → logprob: -10.253214836120605
    4. '__' → logprob: -13.628214836120605
    5. '```' → logprob: -15.503214836120605
    6. '`' → logprob: -15.753214836120605
    7. 'def' → logprob: -16.00321388244629
    8. '	main' → logprob: -17.75321388244629
    9. ' if' → logprob: -18.00321388244629
    10. '(main' → logprob: -18.50321388244629

Token 1097: ' function' (ID: 1114)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00630522333085537
    2. '(' → logprob: -5.13130521774292
    3. '()
' → logprob: -8.256305694580078
    4. '(
' → logprob: -9.631305694580078
    5. '()

' → logprob: -11.506305694580078
    6. '()`' → logprob: -11.506305694580078
    7. '_' → logprob: -11.756305694580078
    8. '()<' → logprob: -12.631305694580078
    9. '();' → logprob: -12.756305694580078
    10. '```' → logprob: -12.756305694580078

Token 1098: ' to' (ID: 316)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.026484563946723938
    2. 'main' → logprob: -3.901484489440918
    3. '(main' → logprob: -5.401484489440918
    4. '()
' → logprob: -6.901484489440918
    5. '```' → logprob: -8.776484489440918
    6. '(
' → logprob: -9.151484489440918
    7. ' main' → logprob: -10.276484489440918
    8. '

' → logprob: -10.401484489440918
    9. 'if' → logprob: -10.526484489440918
    10. '
' → logprob: -11.276484489440918

Token 1099: ' execute' (ID: 15792)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.00805513933300972
    2. 'if' → logprob: -5.633055210113525
    3. 'run' → logprob: -6.008055210113525
    4. 'execute' → logprob: -7.258055210113525
    5. '```' → logprob: -7.258055210113525
    6. ' main' → logprob: -8.383054733276367
    7. 'invoke' → logprob: -9.008054733276367
    8. 'complete' → logprob: -9.258054733276367
    9. '__' → logprob: -9.758054733276367
    10. 'start' → logprob: -10.508054733276367

Token 1100: ' the' (ID: 290)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.01747027225792408
    2. 'main' → logprob: -4.767470359802246
    3. '(main' → logprob: -5.142470359802246
    4. '()
' → logprob: -6.642470359802246
    5. '```' → logprob: -7.767470359802246
    6. '(
' → logprob: -7.767470359802246
    7. ' main' → logprob: -8.517470359802246
    8. '

' → logprob: -8.767470359802246
    9. '<|end|>' → logprob: -9.142470359802246
    10. 'if' → logprob: -9.392470359802246

Token 1101: ' program' (ID: 2193)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.005486668087542057
    2. 'program' → logprob: -5.505486488342285
    3. 'if' → logprob: -7.005486488342285
    4. 'script' → logprob: -8.005486488342285
    5. '__' → logprob: -8.880486488342285
    6. 'code' → logprob: -11.255486488342285
    7. ' main' → logprob: -11.505486488342285
    8. ' program' → logprob: -12.880486488342285
    9. 'def' → logprob: -14.380486488342285
    10. '```' → logprob: -14.630486488342285

Token 1102: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.3657811880111694
    2. 'if' → logprob: -1.4907811880111694
    3. 'main' → logprob: -1.4907811880111694
    4. '<|end|>' → logprob: -1.6157811880111694
    5. '(main' → logprob: -3.365781307220459
    6. '```' → logprob: -3.990781307220459
    7. '()' → logprob: -4.240781307220459
    8. ' main' → logprob: -4.615781307220459
    9. ')' → logprob: -4.740781307220459
    10. '(
' → logprob: -6.115781307220459

Token 1103: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.282920129597187e-05
    2. '```' → logprob: -11.875012397766113
    3. ' main' → logprob: -12.375012397766113
    4. '(main' → logprob: -14.375012397766113
    5. '	main' → logprob: -14.625012397766113
    6. '
' → logprob: -14.750012397766113
    7. '``' → logprob: -15.750012397766113
    8. 'if' → logprob: -17.62501335144043
    9. '   ' → logprob: -17.62501335144043
    10. '\' → logprob: -18.62501335144043

Token 1104: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1102
Tokens correctement prédits (1ère position, stricte): 319
Tokens correctement prédits (1ère position, avec adaptation): 344
Tokens correctement prédits (top 10): 722
Précision stricte (1ère position): 28.95%
Précision adaptée (1ère position): 31.22%
Précision (top 10): 65.52%
================================================================================
