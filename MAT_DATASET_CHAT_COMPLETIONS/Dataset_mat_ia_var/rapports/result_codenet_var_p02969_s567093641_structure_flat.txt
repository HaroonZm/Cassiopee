================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:51:05
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
r = int(input())
a = r ** 2
b = 3 * a
print(b)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'r' (ID: 81)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0019693158101290464
    2. '(r' → logprob: -6.501969337463379
    3. 'r' → logprob: -8.501969337463379
    4. '```' → logprob: -8.876969337463379
    5. '('' → logprob: -10.126969337463379
    6. ''' → logprob: -11.251969337463379
    7. '("("' → logprob: -11.251969337463379
    8. '()' → logprob: -11.876969337463379
    9. ' (' → logprob: -12.001969337463379
    10. ')' → logprob: -12.251969337463379

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06202247366309166
    2. ')' → logprob: -2.9370224475860596
    3. '()' → logprob: -6.062022686004639
    4. '(
' → logprob: -7.312022686004639
    5. ''' → logprob: -7.437022686004639
    6. 'r' → logprob: -7.437022686004639
    7. '```' → logprob: -7.437022686004639
    8. '`' → logprob: -7.687022686004639
    9. '(r' → logprob: -8.06202220916748
    10. '('' → logprob: -8.31202220916748

Token 5: 'a' (ID: 64)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8202597498893738
    2. '+' → logprob: -1.4452598094940186
    3. '%' → logprob: -2.0702598094940186
    4. '*' → logprob: -3.1952598094940186
    5. 's' → logprob: -3.3202598094940186
    6. '\n' → logprob: -3.8202598094940186
    7. 'for' → logprob: -3.9452598094940186
    8. 'i' → logprob: -4.6952595710754395
    9. '`' → logprob: -4.6952595710754395
    10. ''' → logprob: -4.8202595710754395

Token 6: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2933398187160492
    2. '+' → logprob: -1.6683398485183716
    3. '*' → logprob: -3.918339729309082
    4. '=' → logprob: -4.543339729309082
    5. '**' → logprob: -5.043339729309082
    6. '%' → logprob: -5.043339729309082
    7. 'r' → logprob: -5.668339729309082
    8. ' ' → logprob: -5.793339729309082
    9. ' =' → logprob: -5.793339729309082
    10. '_' → logprob: -6.168339729309082

Token 7: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.6634898781776428
    2. 'r' → logprob: -0.9134898781776428
    3. ' ' → logprob: -3.038489818572998
    4. '0' → logprob: -3.538489818572998
    5. ' int' → logprob: -6.538489818572998
    6. 'input' → logprob: -6.538489818572998
    7. ' input' → logprob: -6.663489818572998
    8. '1' → logprob: -6.788489818572998
    9. 'int' → logprob: -7.413489818572998
    10. '10' → logprob: -7.913489818572998

Token 8: ' **' (ID: 6240)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.4795348644256592
    2. '**' → logprob: -1.9795348644256592
    3. '+' → logprob: -2.354534864425659
    4. ' **' → logprob: -2.979534864425659
    5. ' *' → logprob: -3.104534864425659
    6. ' +' → logprob: -4.104535102844238
    7. ' ' → logprob: -4.479535102844238
    8. ')' → logprob: -4.854535102844238
    9. '_' → logprob: -4.979535102844238
    10. ''' → logprob: -6.104535102844238

Token 9: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.015863794833421707
    2. ' ' → logprob: -4.26586389541626
    3. '3' → logprob: -6.39086389541626
    4. '0' → logprob: -11.265863418579102
    5. '4' → logprob: -12.890863418579102
    6. '1' → logprob: -13.265863418579102
    7. '5' → logprob: -14.078363418579102
    8. '6' → logprob: -14.203363418579102
    9. '7' → logprob: -14.578363418579102
    10. '(' → logprob: -14.828363418579102

Token 10: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.002270635450258851
    2. '3' → logprob: -6.127270698547363
    3. ' ' → logprob: -9.752270698547363
    4. '0' → logprob: -11.002270698547363
    5. '4' → logprob: -12.252270698547363
    6. '1' → logprob: -13.252270698547363
    7. '5' → logprob: -14.002270698547363
    8. 'a' → logprob: -14.439770698547363
    9. '```' → logprob: -14.502270698547363
    10. '6' → logprob: -14.752270698547363

Token 11: '
' (ID: 198)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.32939377427101135
    2. '+' → logprob: -1.954393744468689
    3. ')' → logprob: -2.0793938636779785
    4. '(' → logprob: -4.9543938636779785
    5. ',' → logprob: -6.5793938636779785
    6. 'print' → logprob: -6.5793938636779785
    7. '**' → logprob: -6.8293938636779785
    8. '#' → logprob: -7.7043938636779785
    9. '<|end|>' → logprob: -7.8293938636779785
    10. '.' → logprob: -7.9543938636779785

Token 12: 'b' (ID: 65)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.30527037382125854
    2. '*' → logprob: -2.1802704334259033
    3. '+' → logprob: -2.1802704334259033
    4. 'p' → logprob: -3.9302704334259033
    5. ')' → logprob: -5.305270195007324
    6. '\' → logprob: -6.055270195007324
    7. 'r' → logprob: -6.305270195007324
    8. 'b' → logprob: -6.555270195007324
    9. '\n' → logprob: -6.805270195007324
    10. 's' → logprob: -6.930270195007324

Token 13: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14737841486930847
    2. '_' → logprob: -2.897378444671631
    3. ' ' → logprob: -2.897378444671631
    4. '=' → logprob: -4.397378444671631
    5. '**' → logprob: -5.397378444671631
    6. ' **' → logprob: -5.647378444671631
    7. ' +' → logprob: -6.022378444671631
    8. '+' → logprob: -6.522378444671631
    9. ' _' → logprob: -7.272378444671631
    10. ' *' → logprob: -8.272377967834473

Token 14: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.7279860377311707
    2. ' ' → logprob: -0.9779860377311707
    3. '2' → logprob: -1.9779860973358154
    4. 'r' → logprob: -6.602985858917236
    5. 'int' → logprob: -7.977985858917236
    6. ' r' → logprob: -8.227986335754395
    7. '6' → logprob: -8.477986335754395
    8. 'a' → logprob: -8.852986335754395
    9. ' (' → logprob: -9.352986335754395
    10. '(' → logprob: -9.852986335754395

Token 15: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.38351625204086304
    2. 'r' → logprob: -1.3835163116455078
    3. '3' → logprob: -2.758516311645508
    4. 'a' → logprob: -6.383516311645508
    5. '4' → logprob: -7.633516311645508
    6. 'int' → logprob: -7.633516311645508
    7. '6' → logprob: -7.883516311645508
    8. '1' → logprob: -8.258516311645508
    9. '(' → logprob: -8.258516311645508
    10. '10' → logprob: -8.508516311645508

Token 16: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.41138172149658203
    2. '**' → logprob: -1.411381721496582
    3. '*' → logprob: -2.786381721496582
    4. ' **' → logprob: -3.661381721496582
    5. 'a' → logprob: -6.286381721496582
    6. 'r' → logprob: -6.786381721496582
    7. '*a' → logprob: -7.536381721496582
    8. '***' → logprob: -7.661381721496582
    9. '*r' → logprob: -8.036381721496582
    10. '.' → logprob: -8.411381721496582

Token 17: ' a' (ID: 261)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.09259412437677383
    2. ' r' → logprob: -2.4675941467285156
    3. '.' → logprob: -6.217594146728516
    4. 'a' → logprob: -7.217594146728516
    5. ' ' → logprob: -7.717594146728516
    6. '2' → logprob: -8.467594146728516
    7. '3' → logprob: -9.092594146728516
    8. ' a' → logprob: -9.217594146728516
    9. '1' → logprob: -11.467594146728516
    10. '7' → logprob: -11.592594146728516

Token 18: '
' (ID: 198)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.588131308555603
    2. '+' → logprob: -1.713131308555603
    3. ' +' → logprob: -2.7131314277648926
    4. '*' → logprob: -2.7131314277648926
    5. '\n' → logprob: -3.0881314277648926
    6. 'c' → logprob: -4.463131427764893
    7. '\' → logprob: -4.463131427764893
    8. ' ' → logprob: -4.463131427764893
    9. ' **' → logprob: -4.588131427764893
    10. 'r' → logprob: -5.338131427764893

Token 19: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.24610178172588348
    2. '+' → logprob: -2.1211018562316895
    3. 'c' → logprob: -2.6211018562316895
    4. '\n' → logprob: -4.3711018562316895
    5. 'r' → logprob: -5.7461018562316895
    6. '#' → logprob: -6.6211018562316895
    7. '*' → logprob: -6.7461018562316895
    8. '\' → logprob: -6.7461018562316895
    9. ' +' → logprob: -6.8711018562316895
    10. ' print' → logprob: -6.9961018562316895

Token 20: '(b' (ID: 3229)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01212343666702509
    2. '(b' → logprob: -4.5121235847473145
    3. '(a' → logprob: -6.8871235847473145
    4. '(r' → logprob: -10.762123107910156
    5. '('' → logprob: -11.137123107910156
    6. '()' → logprob: -11.262123107910156
    7. '((' → logprob: -13.012123107910156
    8. '("("' → logprob: -13.637123107910156
    9. '(s' → logprob: -15.012123107910156
    10. '("' → logprob: -15.262123107910156

Token 21: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1472419600977446e-06
    2. '))' → logprob: -14.500000953674316
    3. ' )' → logprob: -15.250000953674316
    4. ')
' → logprob: -16.625001907348633
    5. '*' → logprob: -16.625001907348633
    6. '')' → logprob: -16.750001907348633
    7. '`)' → logprob: -17.250001907348633
    8. ')`' → logprob: -17.500001907348633
    9. '**' → logprob: -17.750001907348633
    10. '}' → logprob: -17.875001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 19
Tokens correctement prédits (1ère position, stricte): 6
Tokens correctement prédits (1ère position, avec adaptation): 6
Tokens correctement prédits (top 10): 14
Précision stricte (1ère position): 31.58%
Précision adaptée (1ère position): 31.58%
Précision (top 10): 73.68%
================================================================================
