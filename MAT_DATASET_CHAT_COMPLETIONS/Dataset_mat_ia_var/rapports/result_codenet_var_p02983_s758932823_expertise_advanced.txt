================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:52:51
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from sys import exit

L, R = map(int, input().split())
mod = 2019

# Si l'intervalle excède mod, alors au moins deux nombres auront des restes identiques modulo 2019, et donc produit % 2019 == 0
if R - L >= mod:
    print(0)
    exit()

from itertools import combinations

remainders = [x % mod for x in range(L, R + 1)]
min_prod = min((a * b) % mod for a, b in combinations(remainders, 2))
print(min_prod)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' exit' (ID: 10654)
  Prédit: 'argv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'argv' → logprob: -0.0775071308016777
    2. ' argv' → logprob: -2.9525070190429688
    3. 'exit' → logprob: -4.327507019042969
    4. ' exit' → logprob: -5.702507019042969
    5. 'stdout' → logprob: -6.202507019042969
    6. 'path' → logprob: -6.702507019042969
    7. 'import' → logprob: -6.702507019042969
    8. 'stdin' → logprob: -7.327507019042969
    9. 'version' → logprob: -8.202507019042969
    10. ' path' → logprob: -9.327507019042969

Token 4: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09445321559906006
    2. '\n' → logprob: -3.3444533348083496
    3. '\' → logprob: -3.9694533348083496
    4. '.' → logprob: -4.21945333480835
    5. '
' → logprob: -5.09445333480835
    6. '(
' → logprob: -6.09445333480835
    7. '()' → logprob: -6.21945333480835
    8. '```' → logprob: -6.21945333480835
    9. ':' → logprob: -6.34445333480835
    10. ',' → logprob: -6.59445333480835

Token 5: 'L' (ID: 43)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0009704180411063135
    2. '\(' → logprob: -7.500970363616943
    3. '\n' → logprob: -8.875970840454102
    4. '.' → logprob: -9.625970840454102
    5. '(
' → logprob: -9.750970840454102
    6. '\' → logprob: -9.750970840454102
    7. '()' → logprob: -10.000970840454102
    8. '```' → logprob: -11.375970840454102
    9. ',' → logprob: -11.500970840454102
    10. 'newline' → logprob: -12.375970840454102

Token 6: ',' (ID: 11)
  Prédit: 'ine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ine' → logprob: -0.9113292098045349
    2. 'ist' → logprob: -1.0363292694091797
    3. 'i' → logprob: -2.1613292694091797
    4. 'og' → logprob: -3.0363292694091797
    5. 'oop' → logprob: -3.6613292694091797
    6. 'e' → logprob: -4.16132926940918
    7. 'ib' → logprob: -4.66132926940918
    8. 'et' → logprob: -5.78632926940918
    9. 'if' → logprob: -5.78632926940918
    10. 'oad' → logprob: -5.91132926940918

Token 7: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -1.6971522569656372
    2. ' =' → logprob: -2.0721521377563477
    3. '=' → logprob: -2.6971521377563477
    4. '_' → logprob: -2.9471521377563477
    5. 'W' → logprob: -3.3221521377563477
    6. '[]' → logprob: -3.5721521377563477
    7. 'M' → logprob: -3.5721521377563477
    8. 'K' → logprob: -3.6971521377563477
    9. '1' → logprob: -3.8221521377563477
    10. 'input' → logprob: -3.8221521377563477

Token 8: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.523817241191864
    2. '=' → logprob: -0.898817241191864
    3. ',' → logprob: -7.77381706237793
    4. ' ' → logprob: -8.77381706237793
    5. ')' → logprob: -9.39881706237793
    6. '_' → logprob: -11.39881706237793
    7. '.' → logprob: -12.27381706237793
    8. '[' → logprob: -12.52381706237793
    9. ' ,' → logprob: -12.52381706237793
    10. '>' → logprob: -13.27381706237793

Token 9: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.38427355885505676
    2. ' ' → logprob: -1.5092735290527344
    3. 'map' → logprob: -2.6342735290527344
    4. '0' → logprob: -3.7592735290527344
    5. ' input' → logprob: -6.759273529052734
    6. '1' → logprob: -7.634273529052734
    7. 'input' → logprob: -7.884273529052734
    8. ' int' → logprob: -8.509273529052734
    9. ' list' → logprob: -8.634273529052734
    10. 'int' → logprob: -9.134273529052734

Token 10: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.27009546756744385
    2. '(' → logprob: -1.5200954675674438
    3. '(lambda' → logprob: -4.395095348358154
    4. '(str' → logprob: -5.395095348358154
    5. '(input' → logprob: -7.145095348358154
    6. 'int' → logprob: -8.895095825195312
    7. '(eval' → logprob: -9.770095825195312
    8. '[int' → logprob: -10.395095825195312
    9. '(list' → logprob: -11.020095825195312
    10. '<int' → logprob: -11.520095825195312

Token 11: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.01738124154508114
    2. '(' → logprob: -4.892381191253662
    3. ')' → logprob: -5.392381191253662
    4. 'input' → logprob: -5.642381191253662
    5. ',input' → logprob: -7.267381191253662
    6. ',' → logprob: -7.517381191253662
    7. ' input' → logprob: -8.89238166809082
    8. '=input' → logprob: -9.64238166809082
    9. '```' → logprob: -10.39238166809082
    10. ' (' → logprob: -10.89238166809082

Token 12: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.16023294627666473
    2. ' input' → logprob: -1.9102329015731812
    3. '(input' → logprob: -12.535232543945312
    4. ',input' → logprob: -13.035232543945312
    5. ')' → logprob: -13.160232543945312
    6. '=input' → logprob: -15.035232543945312
    7. '	input' → logprob: -15.160232543945312
    8. ' ' → logprob: -16.285232543945312
    9. '```' → logprob: -16.285232543945312
    10. 'open' → logprob: -16.785232543945312

Token 13: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.3120226263999939
    2. '()' → logprob: -1.4370226860046387
    3. ')' → logprob: -4.187022686004639
    4. '().' → logprob: -4.937022686004639
    5. '(' → logprob: -5.937022686004639
    6. '());' → logprob: -5.937022686004639
    7. '()))' → logprob: -7.312022686004639
    8. '('' → logprob: -7.437022686004639
    9. '(()' → logprob: -8.43702220916748
    10. '(""))' → logprob: -8.56202220916748

Token 14: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.001176893594674766
    2. 'strip' → logprob: -6.751176834106445
    3. 'rstrip' → logprob: -12.751176834106445
    4. ' split' → logprob: -13.001176834106445
    5. ')' → logprob: -14.126176834106445
    6. 'read' → logprob: -14.501176834106445
    7. '(split' → logprob: -15.626176834106445
    8. 'spl' → logprob: -17.376176834106445
    9. ').' → logprob: -17.626176834106445
    10. 's' → logprob: -17.876176834106445

Token 15: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07151894271373749
    2. '))' → logprob: -2.696518898010254
    3. '())' → logprob: -6.571518898010254
    4. '()' → logprob: -9.321518898010254
    5. '()))' → logprob: -10.821518898010254
    6. '`)' → logprob: -10.946518898010254
    7. ')))' → logprob: -11.196518898010254
    8. ')`' → logprob: -11.696518898010254
    9. '),' → logprob: -11.821518898010254
    10. ' )' → logprob: -12.446518898010254

Token 16: 'mod' (ID: 4847)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.04677737131714821
    2. ' if' → logprob: -3.7967774868011475
    3. 'for' → logprob: -4.921777248382568
    4. '```' → logprob: -5.046777248382568
    5. 'a' → logprob: -6.171777248382568
    6. 'x' → logprob: -6.421777248382568
    7. 'i' → logprob: -7.046777248382568
    8. '``' → logprob: -7.296777248382568
    9. '`' → logprob: -7.421777248382568
    10. 'n' → logprob: -7.546777248382568

Token 17: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6770613789558411
    2. ' =' → logprob: -0.8020613789558411
    3. '_' → logprob: -3.5520613193511963
    4. ')' → logprob: -4.927061557769775
    5. ',' → logprob: -6.552061557769775
    6. ' ' → logprob: -6.802061557769775
    7. 'mod' → logprob: -6.927061557769775
    8. 'ular' → logprob: -7.302061557769775
    9. '_mod' → logprob: -7.427061557769775
    10. '.' → logprob: -8.177061080932617

Token 18: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.38848236203193665
    2. ' ' → logprob: -1.1384823322296143
    3. '100' → logprob: -6.513482570648193
    4. '1' → logprob: -9.138482093811035
    5. '998' → logprob: -11.013482093811035
    6. '2' → logprob: -14.513482093811035
    7. ' ' → logprob: -14.638482093811035
    8. 'int' → logprob: -15.013482093811035
    9. '109' → logprob: -15.138482093811035
    10. '0' → logprob: -15.138482093811035

Token 19: '201' (ID: 667)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.008728857152163982
    2. '100' → logprob: -4.883728981018066
    3. '998' → logprob: -6.883728981018066
    4. '1' → logprob: -9.383728981018066
    5. ' ' → logprob: -12.008728981018066
    6. 'pow' → logprob: -13.008728981018066
    7. '(' → logprob: -13.508728981018066
    8. '2' → logprob: -13.758728981018066
    9. '9' → logprob: -14.008728981018066
    10. 'int' → logprob: -14.508728981018066

Token 20: '9' (ID: 24)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.04248897731304169
    2. '9' → logprob: -3.2924890518188477
    3. '+' → logprob: -5.917489051818848
    4. '```' → logprob: -7.417489051818848
    5. ' ' → logprob: -8.167489051818848
    6. '*' → logprob: -9.042489051818848
    7. '-' → logprob: -9.042489051818848
    8. ')' → logprob: -9.292489051818848
    9. '3' → logprob: -10.042489051818848
    10. '0' → logprob: -10.292489051818848

Token 21: '

' (ID: 279)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7590017914772034
    2. 'for' → logprob: -1.7590017318725586
    3. ' ' → logprob: -2.7590017318725586
    4. '*' → logprob: -3.1340017318725586
    5. 'if' → logprob: -3.2590017318725586
    6. '\' → logprob: -3.5090017318725586
    7. ' for' → logprob: -3.5090017318725586
    8. '
' → logprob: -3.6340017318725586
    9. '```' → logprob: -3.7590017318725586
    10. ')' → logprob: -3.7590017318725586

Token 22: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4538992941379547
    2. 'min' → logprob: -1.2038992643356323
    3. 'result' → logprob: -3.578899383544922
    4. 'answer' → logprob: -4.078899383544922
    5. 'ans' → logprob: -4.953899383544922
    6. 'for' → logprob: -5.078899383544922
    7. 'max' → logprob: -6.578899383544922
    8. 'res' → logprob: -6.578899383544922
    9. '```' → logprob: -7.203899383544922
    10. 'count' → logprob: -7.328899383544922

Token 23: ' Si' (ID: 7832)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.797438383102417
    2. 'count' → logprob: -1.547438383102417
    3. 'result' → logprob: -2.172438383102417
    4. 'answer' → logprob: -2.422438383102417
    5. 'min' → logprob: -2.797438383102417
    6. 'res' → logprob: -3.672438383102417
    7. 'for' → logprob: -4.047438621520996
    8. ' ans' → logprob: -4.797438621520996
    9. 'cnt' → logprob: -4.797438621520996
    10. 'if' → logprob: -5.047438621520996

Token 24: ' l' (ID: 305)
  Prédit: 'ze'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ze' → logprob: -0.2990286648273468
    2. 'n' → logprob: -2.4240286350250244
    3. 'm' → logprob: -2.9240286350250244
    4. 'zing' → logprob: -3.7990286350250244
    5. 'zes' → logprob: -3.9240286350250244
    6. 'ng' → logprob: -3.9240286350250244
    7. 'z' → logprob: -4.1740288734436035
    8. '#' → logprob: -4.9240288734436035
    9. 'mp' → logprob: -5.5490288734436035
    10. 'nt' → logprob: -6.1740288734436035

Token 25: ''' (ID: 6)
  Prédit: 'imité'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imité' → logprob: -0.9420801997184753
    2. 'im' → logprob: -1.6920802593231201
    3. 'a' → logprob: -2.56708025932312
    4. 'imiter' → logprob: -3.19208025932312
    5. 'imit' → logprob: -3.31708025932312
    6. 'e' → logprob: -3.31708025932312
    7. ''' → logprob: -3.69208025932312
    8. '```' → logprob: -3.81708025932312
    9. 'i' → logprob: -4.067080020904541
    10. 'imited' → logprob: -4.442080020904541

Token 26: 'interval' (ID: 37558)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -1.4632076025009155
    2. 'indice' → logprob: -1.7132076025009155
    3. 'a' → logprob: -2.213207721710205
    4. 'i' → logprob: -3.213207721710205
    5. 'index' → logprob: -3.338207721710205
    6. 'L' → logprob: -3.463207721710205
    7. ''' → logprob: -3.463207721710205
    8. 'interval' → logprob: -3.838207721710205
    9. ''ind' → logprob: -3.963207721710205
    10. ' =' → logprob: -3.963207721710205

Token 27: 'le' (ID: 282)
  Prédit: 'ce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ce' → logprob: -0.6601229906082153
    2. 'n' → logprob: -2.285122871398926
    3. ''' → logprob: -2.410122871398926
    4. '`' → logprob: -2.785122871398926
    5. 'v' → logprob: -3.035122871398926
    6. 'e' → logprob: -3.535122871398926
    7. 'o' → logprob: -3.785122871398926
    8. 'èce' → logprob: -3.910122871398926
    9. '#' → logprob: -4.285122871398926
    10. 't' → logprob: -4.535122871398926

Token 28: ' exc' (ID: 3529)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.2863488793373108
    2. ' R' → logprob: -3.036348819732666
    3. ' L' → logprob: -3.536348819732666
    4. ' is' → logprob: -3.786348819732666
    5. 'R' → logprob: -4.161348819732666
    6. 'est' → logprob: -4.161348819732666
    7. '>' → logprob: -4.286348819732666
    8. 'L' → logprob: -4.411348819732666
    9. '[' → logprob: -4.411348819732666
    10. '>=' → logprob: -4.661348819732666

Token 29: 'ède' (ID: 48404)
  Prédit: 'ède'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ède' → logprob: -0.03094201162457466
    2. 'é' → logprob: -4.280941963195801
    3. 'ede' → logprob: -4.905941963195801
    4. 'è' → logprob: -5.530941963195801
    5. 'e' → logprob: -5.905941963195801
    6. '\' → logprob: -7.405941963195801
    7. '`' → logprob: -7.530941963195801
    8. '{' → logprob: -7.905941963195801
    9. 'ed' → logprob: -8.6559419631958
    10. '?' → logprob: -9.1559419631958

Token 30: ' mod' (ID: 1812)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.48811087012290955
    2. ' mod' → logprob: -1.488110899925232
    3. '201' → logprob: -2.1131107807159424
    4. 'mod' → logprob: -3.7381107807159424
    5. '202' → logprob: -5.1131110191345215
    6. '200' → logprob: -5.6131110191345215
    7. ' le' → logprob: -6.3631110191345215
    8. '2' → logprob: -6.9881110191345215
    9. ' la' → logprob: -7.8631110191345215
    10. '20' → logprob: -8.363110542297363

Token 31: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005679258611053228
    2. ' ,' → logprob: -8.000568389892578
    3. ' ' → logprob: -9.125568389892578
    4. ':' → logprob: -10.250568389892578
    5. '...' → logprob: -11.625568389892578
    6. 'e' → logprob: -11.750568389892578
    7. ' :' → logprob: -11.875568389892578
    8. 'u' → logprob: -12.250568389892578
    9. 'a' → logprob: -12.500568389892578
    10. ' (' → logprob: -12.625568389892578

Token 32: ' alors' (ID: 17971)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.29020434617996216
    2. ' print' → logprob: -1.4152042865753174
    3. ' L' → logprob: -5.5402045249938965
    4. ' ' → logprob: -7.2902045249938965
    5. ' ans' → logprob: -7.2902045249938965
    6. 'result' → logprob: -7.4152045249938965
    7. ' answer' → logprob: -7.7902045249938965
    8. 'ans' → logprob: -7.7902045249938965
    9. 'L' → logprob: -8.165204048156738
    10. ' result' → logprob: -8.165204048156738

Token 33: ' au' (ID: 2791)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0026196548715233803
    2. ' print' → logprob: -6.752619743347168
    3. '0' → logprob: -7.627619743347168
    4. 'L' → logprob: -8.377619743347168
    5. 'answer' → logprob: -9.252619743347168
    6. 'la' → logprob: -9.377619743347168
    7. ' la' → logprob: -10.002619743347168
    8. 'ans' → logprob: -10.127619743347168
    9. '`' → logprob: -10.252619743347168
    10. 'R' → logprob: -10.252619743347168

Token 34: ' moins' (ID: 15924)
  Prédit: 'moins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moins' → logprob: -0.04882637411355972
    2. ' moins' → logprob: -3.1738264560699463
    3. 'mo' → logprob: -6.423826217651367
    4. 'menos' → logprob: -6.548826217651367
    5. '```' → logprob: -6.798826217651367
    6. 'minimum' → logprob: -7.548826217651367
    7. '-' → logprob: -8.423826217651367
    8. '#' → logprob: -8.548826217651367
    9. 'plus' → logprob: -8.798826217651367
    10. 'm' → logprob: -9.048826217651367

Token 35: ' deux' (ID: 10301)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.1470203548669815
    2. 'une' → logprob: -2.8970203399658203
    3. ' deux' → logprob: -3.2720203399658203
    4. 'un' → logprob: -3.5220203399658203
    5. 'one' → logprob: -5.27202033996582
    6. 'two' → logprob: -5.64702033996582
    7. ' un' → logprob: -6.39702033996582
    8. '```' → logprob: -6.64702033996582
    9. ' une' → logprob: -7.14702033996582
    10. ' two' → logprob: -7.52202033996582

Token 36: ' nombres' (ID: 76205)
  Prédit: ' nombres'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombres' → logprob: -0.6257667541503906
    2. 'nombre' → logprob: -1.7507667541503906
    3. 'val' → logprob: -2.7507667541503906
    4. 'des' → logprob: -2.8757667541503906
    5. '<|end|>' → logprob: -3.0007667541503906
    6. ' des' → logprob: -3.1257667541503906
    7. 'num' → logprob: -4.375766754150391
    8. 'indices' → logprob: -4.500766754150391
    9. 'numbers' → logprob: -4.500766754150391
    10. 'i' → logprob: -4.875766754150391

Token 37: ' auront' (ID: 122381)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.2549484968185425
    2. '<|end|>' → logprob: -1.5049484968185425
    3. 'i' → logprob: -2.129948616027832
    4. ' dans' → logprob: -2.754948616027832
    5. ' ' → logprob: -2.754948616027832
    6. ' within' → logprob: -2.879948616027832
    7. '```' → logprob: -3.379948616027832
    8. ' au' → logprob: -3.629948616027832
    9. ' a' → logprob: -4.004948616027832
    10. ',' → logprob: -4.129948616027832

Token 38: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -1.4121458530426025
    2. ' un' → logprob: -1.5371458530426025
    3. 'le' → logprob: -1.6621458530426025
    4. ' le' → logprob: -2.0371458530426025
    5. '<|end|>' → logprob: -2.2871458530426025
    6. '```' → logprob: -3.2871458530426025
    7. ' the' → logprob: -4.037145614624023
    8. 'un' → logprob: -4.162145614624023
    9. 'the' → logprob: -4.287145614624023
    10. ' les' → logprob: -5.037145614624023

Token 39: ' rest' (ID: 2867)
  Prédit: 'reste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reste' → logprob: -0.9260152578353882
    2. 'rest' → logprob: -1.5510152578353882
    3. '```' → logprob: -1.5510152578353882
    4. 'mod' → logprob: -2.6760153770446777
    5. ' rest' → logprob: -2.9260153770446777
    6. '%' → logprob: -4.176015377044678
    7. 'rés' → logprob: -5.051015377044678
    8. ' reste' → logprob: -5.176015377044678
    9. 'modules' → logprob: -5.426015377044678
    10. '   ' → logprob: -6.176015377044678

Token 40: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.008944854140281677
    2. 'e' → logprob: -4.758944988250732
    3. 's' → logprob: -8.633944511413574
    4. 'a' → logprob: -9.508944511413574
    5. 'os' → logprob: -10.633944511413574
    6. '0' → logprob: -11.008944511413574
    7. '=' → logprob: -12.258944511413574
    8. 'u' → logprob: -12.508944511413574
    9. 'o' → logprob: -12.758944511413574
    10. '2' → logprob: -12.883944511413574

Token 41: ' ident' (ID: 3951)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 42: 'iques' (ID: 11654)
  Prédit: 'iques'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iques' → logprob: -0.006586643401533365
    2. 'ique' → logprob: -5.38158655166626
    3. 'fi' → logprob: -7.38158655166626
    4. 'i' → logprob: -8.381587028503418
    5. '#' → logprob: -8.506587028503418
    6. '```' → logprob: -9.131587028503418
    7. 'iqu' → logprob: -9.256587028503418
    8. 'iq' → logprob: -9.506587028503418
    9. 'ques' → logprob: -9.631587028503418
    10. 'tiques' → logprob: -9.756587028503418

Token 43: ' modulo' (ID: 112372)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.49537989497184753
    2. '.' → logprob: -1.74537992477417
    3. ' ' → logprob: -1.74537992477417
    4. '```' → logprob: -3.74537992477417
    5. ':' → logprob: -4.99537992477417
    6. '<|end|>' → logprob: -6.49537992477417
    7. '`' → logprob: -6.74537992477417
    8. ' ,' → logprob: -6.99537992477417
    9. ''' → logprob: -6.99537992477417
    10. '\' → logprob: -7.37037992477417

Token 44: ' ' (ID: 220)
  Prédit: ' mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.31169822812080383
    2. ',' → logprob: -2.1866981983184814
    3. 'mod' → logprob: -2.5616981983184814
    4. ' ' → logprob: -3.1866981983184814
    5. ' ,' → logprob: -4.6866984367370605
    6. '.' → logprob: -5.0616984367370605
    7. ' (' → logprob: -5.1866984367370605
    8. ' `' → logprob: -5.5616984367370605
    9. '```' → logprob: -5.9366984367370605
    10. '`' → logprob: -6.4366984367370605

Token 45: '201' (ID: 667)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.025435084477066994
    2. ' mod' → logprob: -3.775434970855713
    3. '201' → logprob: -6.150434970855713
    4. ' ' → logprob: -10.275435447692871
    5. '```' → logprob: -11.775435447692871
    6. '`' → logprob: -12.400435447692871
    7. 'm' → logprob: -13.400435447692871
    8. '(mod' → logprob: -13.650435447692871
    9. '202' → logprob: -14.150435447692871
    10. '	mod' → logprob: -14.400435447692871

Token 46: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0001967457792488858
    2. '```' → logprob: -10.12519645690918
    3. '``' → logprob: -10.56269645690918
    4. '0' → logprob: -10.62519645690918
    5. '19' → logprob: -11.18769645690918
    6. 'ic' → logprob: -11.75019645690918
    7. '#' → logprob: -12.25019645690918
    8. ' ' → logprob: -12.25019645690918
    9. ',' → logprob: -12.25019645690918
    10. '`' → logprob: -12.31269645690918

Token 47: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0631422996520996
    2. '.' → logprob: -1.1881422996520996
    3. ',' → logprob: -1.3131422996520996
    4. ' ' → logprob: -3.8131422996520996
    5. '```' → logprob: -3.9381422996520996
    6. 'if' → logprob: -4.9381422996521
    7. '\n' → logprob: -5.0631422996521
    8. '\' → logprob: -5.0631422996521
    9. ''' → logprob: -5.6881422996521
    10. ' if' → logprob: -5.6881422996521

Token 48: ' et' (ID: 859)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.5604444742202759
    2. ' ' → logprob: -1.6854444742202759
    3. ' which' → logprob: -1.6854444742202759
    4. ' 
' → logprob: -1.8104444742202759
    5. ' so' → logprob: -2.6854443550109863
    6. ' and' → logprob: -2.8104443550109863
    7. ',' → logprob: -3.9354443550109863
    8. '  
' → logprob: -4.185444355010986
    9. ' a' → logprob: -4.935444355010986
    10. '
' → logprob: -5.060444355010986

Token 49: ' donc' (ID: 14206)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.8287386298179626
    2. 'exit' → logprob: -1.5787386894226074
    3. 'on' → logprob: -2.4537386894226074
    4. 'print' → logprob: -2.8287386894226074
    5. ' donc' → logprob: -2.9537386894226074
    6. ' la' → logprob: -3.4537386894226074
    7. ' exit' → logprob: -3.9537386894226074
    8. ' il' → logprob: -4.078738689422607
    9. 'l' → logprob: -4.078738689422607
    10. ' l' → logprob: -4.328738689422607

Token 50: ' produit' (ID: 29429)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2759840488433838
    2. ' ' → logprob: -1.7759840488433838
    3. ' la' → logprob: -3.150984048843384
    4. ' il' → logprob: -5.025983810424805
    5. ' le' → logprob: -5.150983810424805
    6. ' on' → logprob: -5.775983810424805
    7. ' the' → logprob: -5.900983810424805
    8. 'le' → logprob: -6.150983810424805
    9. '```' → logprob: -6.525983810424805
    10. ' l' → logprob: -7.150983810424805

Token 51: ' %' (ID: 1851)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2260877639055252
    2. 'mod' → logprob: -2.726087808609009
    3. ' divisible' → logprob: -2.976087808609009
    4. ' modulo' → logprob: -3.601087808609009
    5. ' mod' → logprob: -3.726087808609009
    6. ' ' → logprob: -4.60108757019043
    7. '=' → logprob: -5.22608757019043
    8. '```' → logprob: -5.22608757019043
    9. ' zero' → logprob: -6.10108757019043
    10. 'div' → logprob: -6.22608757019043

Token 52: ' ' (ID: 220)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.28762784600257874
    2. ' mod' → logprob: -1.5376278162002563
    3. '201' → logprob: -3.537627935409546
    4. ' ' → logprob: -5.162627696990967
    5. '<|end|>' → logprob: -9.162628173828125
    6. '```' → logprob: -10.412628173828125
    7. '	mod' → logprob: -10.912628173828125
    8. '(mod' → logprob: -11.162628173828125
    9. 'm' → logprob: -11.600128173828125
    10. ' ' → logprob: -11.787628173828125

Token 53: '201' (ID: 667)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.22089029848575592
    2. '201' → logprob: -1.7208902835845947
    3. ' mod' → logprob: -4.095890522003174
    4. ' ' → logprob: -5.970890522003174
    5. '```' → logprob: -10.220890045166016
    6. '(mod' → logprob: -11.783390045166016
    7. '`' → logprob: -12.033390045166016
    8. '0' → logprob: -12.470890045166016
    9. '   ' → logprob: -12.533390045166016
    10. ' ' → logprob: -12.658390045166016

Token 54: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.9862216504407115e-05
    2. '0' → logprob: -11.125020027160645
    3. ' ' → logprob: -13.000020027160645
    4. '```' → logprob: -15.562520027160645
    5. '٩' → logprob: -15.625020027160645
    6. '99' → logprob: -15.750020027160645
    7. '1' → logprob: -15.812520027160645
    8. '৯' → logprob: -16.000019073486328
    9. '९' → logprob: -16.000019073486328
    10. '90' → logprob: -16.125019073486328

Token 55: ' ==' (ID: 951)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4957159757614136
    2. '=' → logprob: -1.6207159757614136
    3. '0' → logprob: -2.495716094970703
    4. ' =' → logprob: -2.745716094970703
    5. ' ==' → logprob: -3.120716094970703
    6. '==' → logprob: -6.495716094970703
    7. ' is' → logprob: -8.745716094970703
    8. '1' → logprob: -8.995716094970703
    9. '```' → logprob: -9.370716094970703
    10. ' will' → logprob: -9.870716094970703

Token 56: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011072466149926186
    2. ' ' → logprob: -4.511072635650635
    3. '```' → logprob: -11.011072158813477
    4. ' ' → logprob: -13.261072158813477
    5. '   ' → logprob: -13.323572158813477
    6. '000' → logprob: -14.198572158813477
    7. '  ' → logprob: -14.386072158813477
    8. '`' → logprob: -14.448572158813477
    9. '00' → logprob: -15.261072158813477
    10. '``' → logprob: -15.323572158813477

Token 57: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011815387988463044
    2. ' ' → logprob: -6.751181602478027
    3. '```' → logprob: -12.251181602478027
    4. ' ' → logprob: -13.251181602478027
    5. '٠' → logprob: -14.313681602478027
    6. '۰' → logprob: -14.626181602478027
    7. '০' → logprob: -15.188681602478027
    8. '

' → logprob: -15.188681602478027
    9. '  ' → logprob: -15.188681602478027
    10. '०' → logprob: -15.313681602478027

Token 58: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3995148539543152
    2. 'if' → logprob: -1.77451491355896
    3. ' ' → logprob: -3.27451491355896
    4. ':' → logprob: -3.52451491355896
    5. '\n' → logprob: -4.024514675140381
    6. ' if' → logprob: -4.274514675140381
    7. ' 
' → logprob: -4.399514675140381
    8. '```' → logprob: -4.774514675140381
    9. '

' → logprob: -5.274514675140381
    10. ')' → logprob: -5.399514675140381

Token 59: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.000692420348059386
    2. ' if' → logprob: -7.375692367553711
    3. 'i' → logprob: -10.000692367553711
    4. '```' → logprob: -11.875692367553711
    5. 's' → logprob: -13.500692367553711
    6. ':' → logprob: -13.750692367553711
    7. 'print' → logprob: -13.750692367553711
    8. '
' → logprob: -14.000692367553711
    9. 'for' → logprob: -14.000692367553711
    10. 'min' → logprob: -14.000692367553711

Token 60: ' R' (ID: 460)
  Prédit: ' R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' R' → logprob: -0.07966648787260056
    2. 'R' → logprob: -2.5796663761138916
    3. ' (' → logprob: -7.704666614532471
    4. '(R' → logprob: -8.829666137695312
    5. ' ' → logprob: -9.079666137695312
    6. '   ' → logprob: -10.579666137695312
    7. '	R' → logprob: -11.204666137695312
    8. ' ' → logprob: -11.579666137695312
    9. '(' → logprob: -11.829666137695312
    10. '  ' → logprob: -12.704666137695312

Token 61: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.31326326727867126
    2. '-' → logprob: -1.3132632970809937
    3. ' ' → logprob: -14.188262939453125
    4. '>' → logprob: -15.188262939453125
    5. '>=' → logprob: -15.188262939453125
    6. '-L' → logprob: -16.313262939453125
    7. ' >=' → logprob: -16.688262939453125
    8. '   ' → logprob: -16.938262939453125
    9. '+' → logprob: -17.313262939453125
    10. '−' → logprob: -18.188262939453125

Token 62: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.14267711341381073
    2. ' L' → logprob: -2.017677068710327
    3. ' ' → logprob: -13.517677307128906
    4. '	L' → logprob: -15.392677307128906
    5. '>L' → logprob: -15.767677307128906
    6. '<|end|>' → logprob: -16.767677307128906
    7. '  ' → logprob: -17.080177307128906
    8. '>' → logprob: -17.455177307128906
    9. '   ' → logprob: -17.455177307128906
    10. '```' → logprob: -18.517677307128906

Token 63: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.9895469546318054
    2. '>=' → logprob: -0.9895469546318054
    3. '>' → logprob: -1.9895470142364502
    4. ' >' → logprob: -2.73954701423645
    5. '+' → logprob: -2.98954701423645
    6. ' ' → logprob: -5.864546775817871
    7. ' +' → logprob: -6.489546775817871
    8. ')>=' → logprob: -9.239546775817871
    9. ']>=' → logprob: -9.364546775817871
    10. '<|end|>' → logprob: -10.114546775817871

Token 64: ' mod' (ID: 1812)
  Prédit: ' mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.2555239200592041
    2. '201' → logprob: -2.005523920059204
    3. ' ' → logprob: -2.880523920059204
    4. 'mod' → logprob: -3.380523920059204
    5. '20' → logprob: -7.630523681640625
    6. '	mod' → logprob: -9.005523681640625
    7. ' ' → logprob: -9.755523681640625
    8. ' mo' → logprob: -10.755523681640625
    9. '2' → logprob: -11.068023681640625
    10. ' modul' → logprob: -11.943023681640625

Token 65: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0020194053649902344
    2. ':
' → logprob: -6.75201940536499
    3. ' :' → logprob: -7.12701940536499
    4. '+:' → logprob: -10.877019882202148
    5. ' :
' → logprob: -11.752019882202148
    6. '+' → logprob: -11.877019882202148
    7. ':
' → logprob: -12.502019882202148
    8. '):' → logprob: -13.127019882202148
    9. '-' → logprob: -13.252019882202148
    10. ':return' → logprob: -13.627019882202148

Token 66: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02551748976111412
    2. ' print' → logprob: -4.150517463684082
    3. ' exit' → logprob: -5.400517463684082
    4. 'print' → logprob: -5.775517463684082
    5. 'exit' → logprob: -7.025517463684082
    6. '	exit' → logprob: -8.400517463684082
    7. '    
' → logprob: -8.650517463684082
    8. '
' → logprob: -8.775517463684082
    9. '   ' → logprob: -9.025517463684082
    10. '	print' → logprob: -9.400517463684082

Token 67: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.11784712970256805
    2. 'exit' → logprob: -2.867847204208374
    3. '   ' → logprob: -3.367847204208374
    4. ' print' → logprob: -3.992847204208374
    5. ' exit' → logprob: -6.742846965789795
    6. '	print' → logprob: -9.742847442626953
    7. ' ' → logprob: -9.867847442626953
    8. '	exit' → logprob: -10.117847442626953
    9. '
' → logprob: -10.492847442626953
    10. '```' → logprob: -10.492847442626953

Token 68: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002889632945880294
    2. '0' → logprob: -5.877889633178711
    3. '("' → logprob: -9.627889633178711
    4. '('' → logprob: -11.502889633178711
    5. ' (' → logprob: -11.877889633178711
    6. '((' → logprob: -14.377889633178711
    7. ' ' → logprob: -14.877889633178711
    8. '"' → logprob: -15.252889633178711
    9. '()' → logprob: -15.627889633178711
    10. '(
' → logprob: -15.752889633178711

Token 69: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1472419600977446e-06
    2. '"' → logprob: -14.750000953674316
    3. ' ' → logprob: -14.750000953674316
    4. ''' → logprob: -16.125001907348633
    5. '   ' → logprob: -16.750001907348633
    6. '1' → logprob: -17.625001907348633
    7. '`' → logprob: -17.750001907348633
    8. '```' → logprob: -17.875001907348633
    9. ')' → logprob: -18.000001907348633
    10. '(' → logprob: -19.125001907348633

Token 70: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.25672852993011475
    2. ')' → logprob: -1.5067285299301147
    3. ')
' → logprob: -5.631728649139404
    4. '   ' → logprob: -6.756728649139404
    5. ' )
' → logprob: -10.506728172302246
    6. ' )' → logprob: -12.006728172302246
    7. '
' → logprob: -13.381728172302246
    8. ')return' → logprob: -13.631728172302246
    9. '```' → logprob: -13.756728172302246
    10. ')

' → logprob: -13.881728172302246

Token 71: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05199505761265755
    2. 'exit' → logprob: -3.801995038986206
    3. 'else' → logprob: -4.051995277404785
    4. '	exit' → logprob: -4.801995277404785
    5. '
' → logprob: -6.801995277404785
    6. ' exit' → logprob: -6.801995277404785
    7. '    
' → logprob: -8.801995277404785
    8. '_exit' → logprob: -9.176995277404785
    9. ' else' → logprob: -9.676995277404785
    10. '(exit' → logprob: -10.176995277404785

Token 72: ' exit' (ID: 10654)
  Prédit: 'exit'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exit' (adapté à ' exit') → logprob: -0.6073228716850281
    2. '   ' → logprob: -0.8573228716850281
    3. ' exit' → logprob: -3.482322931289673
    4. '	exit' → logprob: -8.857322692871094
    5. ' ' → logprob: -11.607322692871094
    6. '.exit' → logprob: -13.232322692871094
    7. '_exit' → logprob: -13.232322692871094
    8. '  ' → logprob: -13.732322692871094
    9. '   ' → logprob: -13.857322692871094
    10. '(exit' → logprob: -13.857322692871094

Token 73: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.01671101525425911
    2. '()
' → logprob: -4.766711235046387
    3. '(' → logprob: -5.016711235046387
    4. '()

' → logprob: -6.766711235046387
    5. '(
' → logprob: -8.516711235046387
    6. '()\' → logprob: -11.016711235046387
    7. '()
' → logprob: -11.141711235046387
    8. '()


' → logprob: -11.141711235046387
    9. '()`' → logprob: -11.141711235046387
    10. '(

' → logprob: -11.891711235046387

Token 74: 'from' (ID: 2845)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.2256416231393814
    2. 'result' → logprob: -2.1006417274475098
    3. 'minimum' → logprob: -3.4756417274475098
    4. 'ans' → logprob: -4.10064172744751
    5. 'res' → logprob: -4.35064172744751
    6. 'answer' → logprob: -4.47564172744751
    7. 'm' → logprob: -6.22564172744751
    8. 'prod' → logprob: -6.35064172744751
    9. 'product' → logprob: -7.10064172744751
    10. 'mi' → logprob: -7.22564172744751

Token 75: ' itertools' (ID: 103178)
  Prédit: ' itertools'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.16513915359973907
    2. ' math' → logprob: -1.9151391983032227
    3. ' sys' → logprob: -5.665139198303223
    4. ' functools' → logprob: -7.790139198303223
    5. '_' → logprob: -7.915139198303223
    6. ' operator' → logprob: -8.665139198303223
    7. 'math' → logprob: -8.790139198303223
    8. ' collections' → logprob: -9.040139198303223
    9. '_it' → logprob: -9.290139198303223
    10. 'it' → logprob: -10.165139198303223

Token 76: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.5289223790168762
    2. 'import' → logprob: -0.9039223790168762
    3. '.com' → logprob: -6.0289225578308105
    4. '	import' → logprob: -6.9039225578308105
    5. 'ertools' → logprob: -7.4039225578308105
    6. '_import' → logprob: -7.4039225578308105
    7. '.' → logprob: -8.153922080993652
    8. '<|end|>' → logprob: -8.653922080993652
    9. '.import' → logprob: -9.028922080993652
    10. 'com' → logprob: -9.028922080993652

Token 77: ' combinations' (ID: 43835)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'product' → logprob: -0.6207392811775208
    2. 'com' → logprob: -0.8707392811775208
    3. ' combinations' → logprob: -3.370739221572876
    4. ' product' → logprob: -4.745739459991455
    5. '.com' → logprob: -8.495738983154297
    6. ' permutations' → logprob: -8.495738983154297
    7. 'comb' → logprob: -9.370738983154297
    8. '	com' → logprob: -9.495738983154297
    9. '```' → logprob: -9.620738983154297
    10. '.product' → logprob: -10.120738983154297

Token 78: '

' (ID: 279)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.6953352093696594
    2. 'for' → logprob: -0.8203352093696594
    3. '(' → logprob: -3.9453351497650146
    4. '(
' → logprob: -4.320335388183594
    5. ' for' → logprob: -4.695335388183594
    6. '(L' → logprob: -5.445335388183594
    7. ',' → logprob: -5.570335388183594
    8. 'range' → logprob: -5.695335388183594
    9. 'import' → logprob: -5.945335388183594
    10. '_' → logprob: -7.320335388183594

Token 79: 'rema' (ID: 59448)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1056918203830719
    2. 'nums' → logprob: -3.105691909790039
    3. 'range' → logprob: -3.730691909790039
    4. 'numbers' → logprob: -4.105691909790039
    5. 'vals' → logprob: -6.105691909790039
    6. 'a' → logprob: -6.355691909790039
    7. 'min' → logprob: -6.730691909790039
    8. 'res' → logprob: -6.980691909790039
    9. 'values' → logprob: -7.230691909790039
    10. 'c' → logprob: -7.230691909790039

Token 80: 'inders' (ID: 41077)
  Prédit: 'inders'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inders' → logprob: -0.030489040538668633
    2. 'inder' → logprob: -4.030488967895508
    3. 'nders' → logprob: -4.530488967895508
    4. 'ind' → logprob: -7.405488967895508
    5. 'inde' → logprob: -7.655488967895508
    6. 'nder' → logprob: -9.155488967895508
    7. '```' → logprob: -9.780488967895508
    8. 'iners' → logprob: -10.530488967895508
    9. 'ders' → logprob: -10.780488967895508
    10. '1' → logprob: -11.030488967895508

Token 81: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03806604817509651
    2. '=' → logprob: -3.2880661487579346
    3. 's' → logprob: -11.163065910339355
    4. '_' → logprob: -11.663065910339355
    5. ',' → logprob: -14.538065910339355
    6. ')' → logprob: -15.038065910339355
    7. '＝' → logprob: -15.413065910339355
    8. ' ' → logprob: -15.413065910339355
    9. '_=' → logprob: -16.163066864013672
    10. ' =[' → logprob: -16.538066864013672

Token 82: ' [' (ID: 723)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.05962436646223068
    2. '[i' → logprob: -3.809624433517456
    3. 'list' → logprob: -4.684624195098877
    4. '[' → logprob: -5.184624195098877
    5. '[list' → logprob: -5.309624195098877
    6. 'set' → logprob: -5.434624195098877
    7. '{' → logprob: -5.559624195098877
    8. ' [(' → logprob: -5.934624195098877
    9. 'range' → logprob: -6.059624195098877
    10. ' [' → logprob: -6.934624195098877

Token 83: 'x' (ID: 87)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8251121640205383
    2. '(i' → logprob: -0.8251121640205383
    3. 'x' → logprob: -2.7001121044158936
    4. '(x' → logprob: -3.5751121044158936
    5. '(L' → logprob: -4.200112342834473
    6. ' (' → logprob: -4.700112342834473
    7. '((' → logprob: -6.575112342834473
    8. '(' → logprob: -6.950112342834473
    9. ' i' → logprob: -7.075112342834473
    10. ' x' → logprob: -8.575112342834473

Token 84: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.1602671891450882
    2. '%' → logprob: -1.9102672338485718
    3. '%d' → logprob: -11.285266876220703
    4. ' for' → logprob: -11.660266876220703
    5. ' ' → logprob: -12.160266876220703
    6. '%i' → logprob: -12.285266876220703
    7. '%m' → logprob: -12.910266876220703
    8. '%x' → logprob: -13.035266876220703
    9. '%e' → logprob: -13.035266876220703
    10. 'for' → logprob: -13.410266876220703

Token 85: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.07192149758338928
    2. ' mod' → logprob: -3.1969215869903564
    3. '201' → logprob: -3.5719215869903564
    4. ' ' → logprob: -7.821921348571777
    5. '	mod' → logprob: -12.946921348571777
    6. '(mod' → logprob: -13.446921348571777
    7. '   ' → logprob: -14.696921348571777
    8. '  ' → logprob: -15.071921348571777
    9. 'm' → logprob: -15.321921348571777
    10. ' ' → logprob: -15.321921348571777

Token 86: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1602477878332138
    2. 'for' → logprob: -1.910247802734375
    3. ' ' → logprob: -11.035247802734375
    4. ')' → logprob: -12.535247802734375
    5. '	for' → logprob: -12.535247802734375
    6. '   ' → logprob: -15.535247802734375
    7. '```' → logprob: -16.910247802734375
    8. ',' → logprob: -17.410247802734375
    9. ' in' → logprob: -17.660247802734375
    10. '  ' → logprob: -17.660247802734375

Token 87: ' x' (ID: 1215)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0005933052161708474
    2. 'range' → logprob: -7.500593185424805
    3. ' x' → logprob: -10.750593185424805
    4. ' xrange' → logprob: -11.750593185424805
    5. ' ' → logprob: -11.875593185424805
    6. '	range' → logprob: -13.250593185424805
    7. '(range' → logprob: -13.375593185424805
    8. 'x' → logprob: -14.750593185424805
    9. '_range' → logprob: -16.250593185424805
    10. ' in' → logprob: -16.500593185424805

Token 88: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005330163054168224
    2. 'in' → logprob: -5.2553300857543945
    3. 'range' → logprob: -9.880330085754395
    4. ' ' → logprob: -10.630330085754395
    5. ' range' → logprob: -10.880330085754395
    6. ',' → logprob: -14.630330085754395
    7. 'n' → logprob: -14.755330085754395
    8. '<|end|>' → logprob: -15.380330085754395
    9. ')' → logprob: -15.505330085754395
    10. 'i' → logprob: -16.00533103942871

Token 89: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.018151231110095978
    2. ' range' → logprob: -4.01815128326416
    3. '(range' → logprob: -14.01815128326416
    4. '	range' → logprob: -15.51815128326416
    5. 'rang' → logprob: -16.393150329589844
    6. 'r' → logprob: -16.768150329589844
    7. ' ' → logprob: -16.768150329589844
    8. '`' → logprob: -17.893150329589844
    9. 'ran' → logprob: -17.893150329589844
    10. 'ra' → logprob: -18.018150329589844

Token 90: '(L' (ID: 11075)
  Prédit: '(L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.00020354038861114532
    2. '(' → logprob: -8.500203132629395
    3. 'L' → logprob: -17.25020408630371
    4. ' (' → logprob: -17.25020408630371
    5. '(
' → logprob: -18.75020408630371
    6. '(l' → logprob: -19.62520408630371
    7. '(R' → logprob: -19.75020408630371
    8. '(I' → logprob: -20.50020408630371
    9. '[L' → logprob: -20.62520408630371
    10. '(

' → logprob: -20.87520408630371

Token 91: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003649017889983952
    2. ' ,' → logprob: -8.500365257263184
    3. ',R' → logprob: -8.750365257263184
    4. 'R' → logprob: -13.250365257263184
    5. ',L' → logprob: -14.375365257263184
    6. ',
' → logprob: -15.500365257263184
    7. 'L' → logprob: -16.250364303588867
    8. ',

' → logprob: -16.375364303588867
    9. '，' → logprob: -16.625364303588867
    10. ' R' → logprob: -16.625364303588867

Token 92: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.005931758787482977
    2. ' R' → logprob: -5.130931854248047
    3. '   ' → logprob: -13.130931854248047
    4. '	R' → logprob: -14.880931854248047
    5. ' ' → logprob: -15.005931854248047
    6. 'r' → logprob: -16.630931854248047
    7. '```' → logprob: -16.755931854248047
    8. '(R' → logprob: -16.880931854248047
    9. '  ' → logprob: -16.880931854248047
    10. ')' → logprob: -17.130931854248047

Token 93: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.029811009764671326
    2. ' +' → logprob: -3.529810905456543
    3. ')' → logprob: -10.279810905456543
    4. ')]' → logprob: -11.279810905456543
    5. '+
' → logprob: -12.279810905456543
    6. ')+' → logprob: -12.654810905456543
    7. ')])' → logprob: -12.654810905456543
    8. '+)' → logprob: -14.529810905456543
    9. ' +
' → logprob: -14.779810905456543
    10. '＋' → logprob: -15.529810905456543

Token 94: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005536287208087742
    2. ' ' → logprob: -7.500553607940674
    3. ')' → logprob: -14.500554084777832
    4. '```' → logprob: -16.375553131103516
    5. '))' → logprob: -17.500553131103516
    6. '2' → logprob: -18.125553131103516
    7. '(' → logprob: -18.250553131103516
    8. ' )' → logprob: -18.375553131103516
    9. '   ' → logprob: -18.375553131103516
    10. '  ' → logprob: -18.625553131103516

Token 95: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.125001907348633
    3. ')' → logprob: -15.500001907348633
    4. '```' → logprob: -17.625001907348633
    5. '))' → logprob: -18.375001907348633
    6. '2' → logprob: -18.625001907348633
    7. '１' → logprob: -19.062501907348633
    8. ')]' → logprob: -19.187501907348633
    9. '0' → logprob: -19.812501907348633
    10. '``' → logprob: -19.875001907348633

Token 96: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0004963174578733742
    2. ']' → logprob: -8.250495910644531
    3. ')' → logprob: -8.375495910644531
    4. ')])' → logprob: -13.375495910644531
    5. '])]' → logprob: -13.875495910644531
    6. '])' → logprob: -14.250495910644531
    7. ' )' → logprob: -14.625495910644531
    8. '))' → logprob: -15.000495910644531
    9. ')]
' → logprob: -15.125495910644531
    10. '')]' → logprob: -16.12549591064453

Token 97: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.08464188873767853
    2. 'm' → logprob: -2.834641933441162
    3. '
' → logprob: -5.084641933441162
    4. 'minimum' → logprob: -5.459641933441162
    5. '  
' → logprob: -6.709641933441162
    6. 'p' → logprob: -6.959641933441162
    7. 'result' → logprob: -7.084641933441162
    8. ' min' → logprob: -7.209641933441162
    9. '```' → logprob: -7.209641933441162
    10. '    
' → logprob: -7.334641933441162

Token 98: '_prod' (ID: 78031)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0484430305659771
    2. '_product' → logprob: -3.548443078994751
    3. '_val' → logprob: -4.298442840576172
    4. '_prod' → logprob: -5.423442840576172
    5. '_value' → logprob: -8.048442840576172
    6. '_pro' → logprob: -9.423442840576172
    7. '_p' → logprob: -10.048442840576172
    8. '_v' → logprob: -10.673442840576172
    9. '_=' → logprob: -10.673442840576172
    10. '_result' → logprob: -12.048442840576172

Token 99: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.313454806804657
    2. ' =' → logprob: -1.3134548664093018
    3. 'uct' → logprob: -8.813454627990723
    4. '_' → logprob: -10.688454627990723
    5. ',' → logprob: -12.063454627990723
    6. '_=' → logprob: -12.438454627990723
    7. 'u' → logprob: -12.813454627990723
    8. ' ' → logprob: -12.938454627990723
    9. 'o' → logprob: -13.313454627990723
    10. '=

' → logprob: -14.063454627990723

Token 100: ' min' (ID: 1349)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.262283056974411
    2. '10' → logprob: -1.8872830867767334
    3. ' float' → logprob: -3.1372830867767334
    4. '201' → logprob: -4.137282848358154
    5. 'mod' → logprob: -4.387282848358154
    6. ' ' → logprob: -5.387282848358154
    7. '2' → logprob: -7.012282848358154
    8. ' mod' → logprob: -7.387282848358154
    9. 'None' → logprob: -8.012283325195312
    10. ' None' → logprob: -8.262283325195312

Token 101: '((' (ID: 2054)
  Prédit: '(re'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(re' → logprob: -0.7377784848213196
    2. '(' → logprob: -1.2377784252166748
    3. '((' → logprob: -1.9877784252166748
    4. '([' → logprob: -2.862778425216675
    5. '(x' → logprob: -4.362778663635254
    6. '(com' → logprob: -4.862778663635254
    7. '(rem' → logprob: -4.862778663635254
    8. '(r' → logprob: -5.612778663635254
    9. '(
' → logprob: -6.612778663635254
    10. '(float' → logprob: -6.737778663635254

Token 102: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6077212691307068
    2. '(a' → logprob: -1.2327213287353516
    3. 'r' → logprob: -2.9827213287353516
    4. '(r' → logprob: -3.8577213287353516
    5. '(x' → logprob: -3.9827213287353516
    6. '(re' → logprob: -4.232721328735352
    7. 'rema' → logprob: -4.357721328735352
    8. 'x' → logprob: -4.607721328735352
    9. '((' → logprob: -4.607721328735352
    10. '[a' → logprob: -5.357721328735352

Token 103: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.10560032725334167
    2. '*b' → logprob: -2.730600357055664
    3. '*' → logprob: -3.355600357055664
    4. '*r' → logprob: -10.605600357055664
    5. '*a' → logprob: -10.730600357055664
    6. '*c' → logprob: -11.105600357055664
    7. '*j' → logprob: -11.105600357055664
    8. '**' → logprob: -11.355600357055664
    9. '*p' → logprob: -11.855600357055664
    10. '*i' → logprob: -11.980600357055664

Token 104: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.20141470432281494
    2. ' b' → logprob: -1.701414704322815
    3. ')b' → logprob: -15.076415061950684
    4. ' ' → logprob: -15.326415061950684
    5. '	b' → logprob: -15.826415061950684
    6. '(b' → logprob: -16.201414108276367
    7. '*b' → logprob: -16.326414108276367
    8. 'a' → logprob: -16.576414108276367
    9. '```' → logprob: -16.701414108276367
    10. '%b' → logprob: -16.826414108276367

Token 105: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.32793426513671875
    2. ' for' → logprob: -1.3279342651367188
    3. ')%' → logprob: -4.952934265136719
    4. ' %' → logprob: -6.202934265136719
    5. 'for' → logprob: -6.202934265136719
    6. ' )' → logprob: -6.452934265136719
    7. '%' → logprob: -6.452934265136719
    8. ' ' → logprob: -8.452934265136719
    9. '%)' → logprob: -10.702934265136719
    10. ',' → logprob: -10.827934265136719

Token 106: ' %' (ID: 1851)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.07281312346458435
    2. 'for' → logprob: -2.697813034057617
    3. '%' → logprob: -6.572813034057617
    4. ')' → logprob: -7.072813034057617
    5. ' %' → logprob: -7.947813034057617
    6. ' ' → logprob: -8.447813034057617
    7. '	for' → logprob: -11.322813034057617
    8. ',' → logprob: -11.822813034057617
    9. '   ' → logprob: -12.197813034057617
    10. '  ' → logprob: -12.322813034057617

Token 107: ' mod' (ID: 1812)
  Prédit: ' mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.10748154670000076
    2. 'mod' → logprob: -2.3574814796447754
    3. '201' → logprob: -5.357481479644775
    4. ' ' → logprob: -5.982481479644775
    5. '	mod' → logprob: -12.482481956481934
    6. '  ' → logprob: -13.482481956481934
    7. '(mod' → logprob: -13.732481956481934
    8. ' ' → logprob: -13.732481956481934
    9. '   ' → logprob: -13.982481956481934
    10. '<|end|>' → logprob: -14.107481956481934

Token 108: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.10036873817443848
    2. 'for' → logprob: -2.3503687381744385
    3. ')' → logprob: -9.35036849975586
    4. ' ' → logprob: -9.60036849975586
    5. ',' → logprob: -12.97536849975586
    6. '
' → logprob: -13.10036849975586
    7. '	for' → logprob: -13.47536849975586
    8. '   ' → logprob: -13.72536849975586
    9. '  ' → logprob: -14.97536849975586
    10. ' )' → logprob: -16.22536849975586

Token 109: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.07910183072090149
    2. ' a' → logprob: -2.579101800918579
    3. '(a' → logprob: -8.7041015625
    4. ' (' → logprob: -10.9541015625
    5. '	a' → logprob: -11.3291015625
    6. ')a' → logprob: -12.7041015625
    7. '[a' → logprob: -13.0791015625
    8. ',' → logprob: -13.0791015625
    9. ',a' → logprob: -13.2041015625
    10. '(' → logprob: -13.5791015625

Token 110: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2021622657775879
    2. ',b' → logprob: -1.702162265777588
    3. ' ,' → logprob: -7.327162265777588
    4. 'b' → logprob: -9.32716178894043
    5. ' b' → logprob: -14.70216178894043
    6. ',
' → logprob: -14.82716178894043
    7. ' in' → logprob: -15.20216178894043
    8. 'in' → logprob: -15.70216178894043
    9. ' ' → logprob: -16.07716178894043
    10. '`,' → logprob: -16.45216178894043

Token 111: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5759442448616028
    2. ' b' → logprob: -0.8259442448616028
    3. '<|end|>' → logprob: -13.200943946838379
    4. ' ' → logprob: -14.325943946838379
    5. ' (' → logprob: -14.450943946838379
    6. '(b' → logprob: -14.825943946838379
    7. ')b' → logprob: -14.950943946838379
    8. '*b' → logprob: -15.450943946838379
    9. ' in' → logprob: -15.700943946838379
    10. '	b' → logprob: -16.075944900512695

Token 112: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006746162660419941
    2. 'in' → logprob: -5.006746292114258
    3. '<|end|>' → logprob: -11.131746292114258
    4. ')' → logprob: -11.381746292114258
    5. ' ' → logprob: -12.756746292114258
    6. '<|end|>' → logprob: -14.006746292114258
    7. 's' → logprob: -15.381746292114258
    8. ',' → logprob: -15.881746292114258
    9. ' )' → logprob: -16.006746292114258
    10. '),' → logprob: -16.131746292114258

Token 113: ' combinations' (ID: 43835)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.10049014538526535
    2. ' combinations' → logprob: -2.350490093231201
    3. '(com' → logprob: -8.47549057006836
    4. 'comb' → logprob: -9.85049057006836
    5. '	com' → logprob: -11.97549057006836
    6. '=com' → logprob: -12.10049057006836
    7. ')' → logprob: -12.72549057006836
    8. ' com' → logprob: -13.35049057006836
    9. '<com' → logprob: -13.60049057006836
    10. '```' → logprob: -13.85049057006836

Token 114: '(re' (ID: 8178)
  Prédit: '(re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(re' → logprob: -2.9040898880339228e-05
    2. 'rema' → logprob: -11.375028610229492
    3. '(rem' → logprob: -11.750028610229492
    4. '(' → logprob: -12.625028610229492
    5. ' (' → logprob: -12.875028610229492
    6. 're' → logprob: -13.875028610229492
    7. '(range' → logprob: -14.375028610229492
    8. ')' → logprob: -14.375028610229492
    9. '```' → logprob: -14.750028610229492
    10. '(
' → logprob: -15.250028610229492

Token 115: 'ma' (ID: 809)
  Prédit: 'ma'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ma' → logprob: -4.8828707804204896e-05
    2. 'mma' → logprob: -10.625048637390137
    3. 'rema' → logprob: -11.250048637390137
    4. 'mainder' → logprob: -12.375048637390137
    5. 'm' → logprob: -12.875048637390137
    6. 'ema' → logprob: -13.750048637390137
    7. 'main' → logprob: -13.750048637390137
    8. 'mada' → logprob: -14.750048637390137
    9. 'maid' → logprob: -14.750048637390137
    10. 'mai' → logprob: -14.875048637390137

Token 116: 'inders' (ID: 41077)
  Prédit: 'inders'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inders' → logprob: -0.015220011584460735
    2. 'nders' → logprob: -4.2652201652526855
    3. 'inder' → logprob: -7.8902201652526855
    4. 'anders' → logprob: -8.265219688415527
    5. 'unders' → logprob: -8.515219688415527
    6. 'inde' → logprob: -9.265219688415527
    7. 'a' → logprob: -10.640219688415527
    8. 'ders' → logprob: -10.890219688415527
    9. 'iders' → logprob: -10.890219688415527
    10. 'ma' → logprob: -11.640219688415527

Token 117: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001764074433594942
    2. ' ,' → logprob: -6.501764297485352
    3. '(),' → logprob: -8.876764297485352
    4. '2' → logprob: -9.376764297485352
    5. '(' → logprob: -10.376764297485352
    6. ' ' → logprob: -12.626764297485352
    7. ')' → logprob: -13.876764297485352
    8. '),' → logprob: -14.626764297485352
    9. '`,' → logprob: -15.001764297485352
    10. '',' → logprob: -15.001764297485352

Token 118: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0059296246618032455
    2. ' ' → logprob: -5.130929470062256
    3. '   ' → logprob: -14.630929946899414
    4. '  ' → logprob: -15.130929946899414
    5. '۲' → logprob: -16.505929946899414
    6. '    ' → logprob: -16.880929946899414
    7. '２' → logprob: -17.380929946899414
    8. '```' → logprob: -17.380929946899414
    9. ' ' → logprob: -17.630929946899414
    10. ')' → logprob: -17.630929946899414

Token 119: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00038074489566497505
    2. ' ' → logprob: -7.875380516052246
    3. '   ' → logprob: -15.125380516052246
    4. '  ' → logprob: -16.000381469726562
    5. '```' → logprob: -16.625381469726562
    6. '۲' → logprob: -17.125381469726562
    7. ')' → logprob: -17.562881469726562
    8. '    ' → logprob: -17.687881469726562
    9. '２' → logprob: -17.812881469726562
    10. '
' → logprob: -18.687881469726562

Token 120: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.5759879350662231
    2. ')' → logprob: -0.8259879350662231
    3. ')))' → logprob: -10.575987815856934
    4. ' )' → logprob: -11.575987815856934
    5. ' ))' → logprob: -11.575987815856934
    6. '())' → logprob: -14.325987815856934
    7. '))
' → logprob: -14.325987815856934
    8. '()' → logprob: -14.825987815856934
    9. '()))' → logprob: -14.950987815856934
    10. ')}' → logprob: -14.950987815856934

Token 121: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0024988483637571335
    2. '
' → logprob: -6.002498626708984
    3. ')
' → logprob: -12.002498626708984
    4. '
' → logprob: -12.502498626708984
    5. '```' → logprob: -12.502498626708984
    6. '  
' → logprob: -12.627498626708984
    7. ' print' → logprob: -12.877498626708984
    8. '<|end|>' → logprob: -13.627498626708984
    9. '\n' → logprob: -14.627498626708984
    10. '

' → logprob: -15.002498626708984

Token 122: '(min' (ID: 26035)
  Prédit: '(min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.0040785204619169235
    2. '(' → logprob: -5.504078388214111
    3. '(
' → logprob: -17.004077911376953
    4. ' (' → logprob: -17.129077911376953
    5. 'min' → logprob: -17.379077911376953
    6. '(max' → logprob: -18.129077911376953
    7. '(f' → logprob: -18.379077911376953
    8. '()' → logprob: -18.504077911376953
    9. ',min' → logprob: -18.629077911376953
    10. '(`' → logprob: -18.754077911376953

Token 123: '_prod' (ID: 78031)
  Prédit: '_prod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prod' → logprob: -1.6166903151315637e-05
    2. '_' → logprob: -11.750016212463379
    3. ' _' → logprob: -12.625016212463379
    4. '_p' → logprob: -13.625016212463379
    5. '_proj' → logprob: -13.750016212463379
    6. '_pro' → logprob: -14.500016212463379
    7. ')_' → logprob: -14.750016212463379
    8. '_proc' → logprob: -15.000016212463379
    9. '_prop' → logprob: -15.625016212463379
    10. '\' → logprob: -15.625016212463379

Token 124: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8624639324116288e-06
    2. ' )' → logprob: -13.500001907348633
    3. ')
' → logprob: -15.500001907348633
    4. '))' → logprob: -15.875001907348633
    5. ')`' → logprob: -16.750001907348633
    6. '`)' → logprob: -18.750001907348633
    7. ')}' → logprob: -19.375001907348633
    8. '())' → logprob: -19.375001907348633
    9. '）' → logprob: -19.625001907348633
    10. '()' → logprob: -19.625001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 122
Tokens correctement prédits (1ère position, stricte): 51
Tokens correctement prédits (1ère position, avec adaptation): 53
Tokens correctement prédits (top 10): 97
Précision stricte (1ère position): 41.80%
Précision adaptée (1ère position): 43.44%
Précision (top 10): 79.51%
================================================================================
