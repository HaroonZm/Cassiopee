================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:33:53
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def main():
    """
    Lit deux entiers depuis l'entrée utilisateur, puis imprime l'entier manquant 
    parmi 1, 2 et 3 sachant que les deux entiers saisis sont distincts dans l'intervalle [1, 3].

    Si les valeurs sont (a=1, b=2), la sortie est 3.
    Si les valeurs sont (a=1, b=3), la sortie est 2.
    Si les valeurs sont (a=2, b=3), la sortie est 1.
    Et inversement selon l'ordre des entrées.
    """
    # Lire le premier entier depuis l'entrée utilisateur
    a = int(input("Entrez le premier entier (1, 2 ou 3) : "))
    # Lire le second entier depuis l'entrée utilisateur
    b = int(input("Entrez le second entier (1, 2 ou 3, et différent du premier) : "))

    # Vérifier le couple d'entrées et afficher la valeur manquante parmi {1, 2, 3}
    if a == 1 and b == 2:
        print('3')
    elif a == 1 and b == 3:
        print('2')
    elif a == 2 and b == 3:
        print('1')
    elif a == 2 and b == 1:
        print('3')
    elif a == 3 and b == 1:
        print('2')
    elif a == 3 and b == 2:
        print('1')

# Exécuter la fonction principale si ce fichier est exécuté comme script principal
if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' main' (ID: 2758)
  → Token d'amorce (pas de prédiction)

Token 2: '():
' (ID: 8595)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -0.35815900564193726
    2. '(' → logprob: -1.858159065246582
    3. '   ' → logprob: -3.108159065246582
    4. '\n' → logprob: -3.108159065246582
    5. ''' → logprob: -4.608159065246582
    6. ' 
' → logprob: -4.733159065246582
    7. ' ' → logprob: -4.733159065246582
    8. '    
' → logprob: -4.983159065246582
    9. '```' → logprob: -5.483159065246582
    10. ' return' → logprob: -6.358159065246582

Token 4: ' """
' (ID: 7037)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.20469899475574493
    2. 'pass' → logprob: -2.3296990394592285
    3. '   ' → logprob: -2.8296990394592285
    4. 'return' → logprob: -4.0796990394592285
    5. 'p' → logprob: -5.3296990394592285
    6. '#' → logprob: -6.3296990394592285
    7. 'r' → logprob: -6.4546990394592285
    8. 'a' → logprob: -7.3296990394592285
    9. '```' → logprob: -7.3296990394592285
    10. 'n' → logprob: -8.07969856262207

Token 5: '   ' (ID: 271)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.7377256751060486
    2. 'This' → logprob: -1.8627257347106934
    3. 'Calculate' → logprob: -1.9877257347106934
    4. 'Initialize' → logprob: -2.4877257347106934
    5. '   ' → logprob: -3.7377257347106934
    6. 'Returns' → logprob: -3.8627257347106934
    7. 'Run' → logprob: -3.9877257347106934
    8. 'Show' → logprob: -5.112725734710693
    9. 'Runs' → logprob: -5.237725734710693
    10. 'Starts' → logprob: -5.237725734710693

Token 6: ' Lit' (ID: 45595)
  Prédit: 'Run'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Run' → logprob: -1.3347530364990234
    2. 'This' → logprob: -1.5847530364990234
    3. 'Initialize' → logprob: -1.9597530364990234
    4. 'Calculate' → logprob: -1.9597530364990234
    5. 'Print' → logprob: -2.8347530364990234
    6. 'Main' → logprob: -3.7097530364990234
    7. 'Start' → logprob: -3.9597530364990234
    8. 'Process' → logprob: -4.084753036499023
    9. 'Runs' → logprob: -4.459753036499023
    10. 'Initial' → logprob: -4.584753036499023

Token 7: ' deux' (ID: 10301)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.26003775000572205
    2. 'tle' → logprob: -1.7600377798080444
    3. 'e' → logprob: -3.385037660598755
    4. '   ' → logprob: -5.260037899017334
    5. '"""
' → logprob: -5.635037899017334
    6. 't' → logprob: -5.760037899017334
    7. '```' → logprob: -6.260037899017334
    8. 'ral' → logprob: -6.385037899017334
    9. 'r' → logprob: -7.010037899017334
    10. '  ' → logprob: -7.135037899017334

Token 8: ' ent' (ID: 1121)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0655493214726448
    2. ' lignes' → logprob: -3.440549373626709
    3. 'l' → logprob: -4.565549373626709
    4. ' chaînes' → logprob: -4.815549373626709
    5. ' espaces' → logprob: -5.815549373626709
    6. ' strings' → logprob: -6.065549373626709
    7. '   ' → logprob: -6.440549373626709
    8. ' caractères' → logprob: -7.190549373626709
    9. ' string' → logprob: -7.565549373626709
    10. ' fichiers' → logprob: -7.565549373626709

Token 9: 'iers' (ID: 11012)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0376187302172184
    2. 'ières' → logprob: -4.037618637084961
    3. 'iers' → logprob: -4.412618637084961
    4. 'i' → logprob: -5.662618637084961
    5. 'ri' → logprob: -7.162618637084961
    6. 'rée' → logprob: -7.162618637084961
    7. 'êtes' → logprob: -7.287618637084961
    8. 'ier' → logprob: -8.162618637084961
    9. 'ré' → logprob: -8.162618637084961
    10. 'ière' → logprob: -8.412618637084961

Token 10: ' depuis' (ID: 16277)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.22425873577594757
    2. ' ' → logprob: -2.7242586612701416
    3. '   ' → logprob: -3.0992586612701416
    4. 's' → logprob: -3.2242586612701416
    5. ' et' → logprob: -4.474258899688721
    6. ',' → logprob: -4.974258899688721
    7. '<|end|>' → logprob: -5.099258899688721
    8. '\' → logprob: -5.599258899688721
    9. '\r' → logprob: -6.099258899688721
    10. '
' → logprob: -6.099258899688721

Token 11: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.4809749126434326
    2. ' l' → logprob: -1.4809749126434326
    3. ' input' → logprob: -1.9809749126434326
    4. 'input' → logprob: -4.480975151062012
    5. ' stdin' → logprob: -6.355975151062012
    6. '   ' → logprob: -6.730975151062012
    7. ' ' → logprob: -7.480975151062012
    8. ' standard' → logprob: -8.230975151062012
    9. 'stdin' → logprob: -8.355975151062012
    10. 'une' → logprob: -8.605975151062012

Token 12: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.06099724769592285
    2. 'a' → logprob: -3.435997247695923
    3. 'entrée' → logprob: -4.310997009277344
    4. 'e' → logprob: -4.685997009277344
    5. ''' → logprob: -5.935997009277344
    6. 'input' → logprob: -7.310997009277344
    7. '’entrée' → logprob: -8.185997009277344
    8. ' entrée' → logprob: -8.810997009277344
    9. ''utilisateur' → logprob: -8.935997009277344
    10. ''ent' → logprob: -9.060997009277344

Token 13: ' utilisateur' (ID: 115595)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.11903829127550125
    2. '   ' → logprob: -2.3690383434295654
    3. ',' → logprob: -5.494038105010986
    4. '\' → logprob: -5.494038105010986
    5. ' ' → logprob: -6.369038105010986
    6. ')' → logprob: -6.619038105010986
    7. '    
' → logprob: -6.869038105010986
    8. '\r' → logprob: -6.994038105010986
    9. '    ' → logprob: -7.119038105010986
    10. '.' → logprob: -7.619038105010986

Token 14: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7119367122650146
    2. '\n' → logprob: -0.7119367122650146
    3. '    ' → logprob: -5.586936950683594
    4. '\' → logprob: -5.711936950683594
    5. '    
' → logprob: -5.961936950683594
    6. ' ' → logprob: -6.461936950683594
    7. '"""' → logprob: -6.711936950683594
    8. ',' → logprob: -6.836936950683594
    9. '.' → logprob: -6.836936950683594
    10. '
' → logprob: -7.461936950683594

Token 15: ' puis' (ID: 18766)
  Prédit: ' et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' et' → logprob: -0.7526807188987732
    2. '   ' → logprob: -1.252680778503418
    3. ' puis' → logprob: -1.752680778503418
    4. ' les' → logprob: -3.377680778503418
    5. ' ' → logprob: -4.877680778503418
    6. '    ' → logprob: -5.002680778503418
    7. 'et' → logprob: -5.127680778503418
    8. '<|end|>' → logprob: -5.627680778503418
    9. ' and' → logprob: -6.127680778503418
    10. ',' → logprob: -6.502680778503418

Token 16: ' imprime' (ID: 195564)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20828625559806824
    2. ' les' → logprob: -2.2082862854003906
    3. ' calc' → logprob: -3.7082862854003906
    4. ' addition' → logprob: -3.8332862854003906
    5. ' affiche' → logprob: -5.083286285400391
    6. ' retourne' → logprob: -5.083286285400391
    7. ' ajoute' → logprob: -5.583286285400391
    8. ' effect' → logprob: -6.083286285400391
    9. '```' → logprob: -6.708286285400391
    10. ' return' → logprob: -6.708286285400391

Token 17: ' l' (ID: 305)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4579252302646637
    2. 's' → logprob: -2.332925319671631
    3. ' leur' → logprob: -2.707925319671631
    4. '   ' → logprob: -2.832925319671631
    5. 'leur' → logprob: -3.082925319671631
    6. ' un' → logprob: -3.582925319671631
    7. '```' → logprob: -4.082925319671631
    8. 'ur' → logprob: -4.457925319671631
    9. '  ' → logprob: -4.707925319671631
    10. ' leurs' → logprob: -5.457925319671631

Token 18: ''ent' (ID: 53422)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.389289915561676
    2. 'es' → logprob: -1.5142898559570312
    3. 'a' → logprob: -2.5142898559570312
    4. 'eur' → logprob: -5.389289855957031
    5. ''ent' → logprob: -5.389289855957031
    6. ''espace' → logprob: -6.014289855957031
    7. 'u' → logprob: -6.389289855957031
    8. ''' → logprob: -6.514289855957031
    9. 's' → logprob: -6.639289855957031
    10. ''e' → logprob: -7.139289855957031

Token 19: 'ier' (ID: 905)
  Prédit: 'ier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ier' → logprob: -0.2406977266073227
    2. 'i' → logprob: -1.7406977415084839
    3. 'iers' → logprob: -3.9906976222991943
    4. '   ' → logprob: -4.490697860717773
    5. 'ié' → logprob: -5.615697860717773
    6. 'ière' → logprob: -5.740697860717773
    7. '```' → logprob: -7.865697860717773
    8. 'e' → logprob: -8.240697860717773
    9. '       ' → logprob: -8.365697860717773
    10. 'er' → logprob: -8.490697860717773

Token 20: ' man' (ID: 873)
  Prédit: ' suivant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' suivant' → logprob: -0.014794440940022469
    2. 's' → logprob: -5.51479434967041
    3. '   ' → logprob: -6.26479434967041
    4. ' suivants' → logprob: -6.76479434967041
    5. 'su' → logprob: -7.26479434967041
    6. ' ' → logprob: -7.51479434967041
    7. ' supérieur' → logprob: -7.51479434967041
    8. ' correspondant' → logprob: -7.63979434967041
    9. ' suivante' → logprob: -7.76479434967041
    10. ' entier' → logprob: -8.01479434967041

Token 21: 'quant' (ID: 39719)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.32482534646987915
    2. 'que' → logprob: -2.0748252868652344
    3. 'quant' → logprob: -3.9498252868652344
    4. 'té' → logprob: -4.574825286865234
    5. 'quent' → logprob: -4.699825286865234
    6. 'ière' → logprob: -4.699825286865234
    7. 'u' → logprob: -4.699825286865234
    8. 'te' → logprob: -4.699825286865234
    9. 'qué' → logprob: -4.824825286865234
    10. 'q' → logprob: -4.824825286865234

Token 22: ' 
' (ID: 793)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.5826278924942017
    2. ' entre' → logprob: -1.8326278924942017
    3. ',' → logprob: -1.9576278924942017
    4. '   ' → logprob: -2.207627773284912
    5. '.' → logprob: -2.207627773284912
    6. ' 
' → logprob: -2.707627773284912
    7. ' ' → logprob: -3.207627773284912
    8. ')' → logprob: -4.207627773284912
    9. '\n' → logprob: -4.332627773284912
    10. '```' → logprob: -4.332627773284912

Token 23: '   ' (ID: 271)
  Prédit: ' entre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' entre' → logprob: -1.6343989372253418
    2. 's' → logprob: -1.7593989372253418
    3. ')' → logprob: -2.009398937225342
    4. '.' → logprob: -2.259398937225342
    5. ',' → logprob: -2.759398937225342
    6. '```' → logprob: -2.759398937225342
    7. ' ' → logprob: -3.259398937225342
    8. '   ' → logprob: -3.509398937225342
    9. '"""' → logprob: -3.759398937225342
    10. '
' → logprob: -4.009398937225342

Token 24: ' parmi' (ID: 51713)
  Prédit: '"""
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""
' → logprob: -0.9790056943893433
    2. '
' → logprob: -1.6040056943893433
    3. '   ' → logprob: -1.7290056943893433
    4. ' entre' → logprob: -2.729005813598633
    5. 'dans' → logprob: -3.729005813598633
    6. 'entre' → logprob: -3.979005813598633
    7. ' 
' → logprob: -4.229005813598633
    8. ' """
' → logprob: -4.229005813598633
    9. ' ' → logprob: -4.229005813598633
    10. '"""' → logprob: -4.604005813598633

Token 25: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3048441410064697
    2. ' les' → logprob: -2.1798441410064697
    3. '1' → logprob: -2.9298441410064697
    4. ' [' → logprob: -3.4298441410064697
    5. ' la' → logprob: -3.8048441410064697
    6. '0' → logprob: -4.804843902587891
    7. ' {' → logprob: -5.054843902587891
    8. '[' → logprob: -5.054843902587891
    9. 'les' → logprob: -5.804843902587891
    10. '3' → logprob: -6.179843902587891

Token 26: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7091574668884277
    2. ' ' → logprob: -1.7091574668884277
    3. 'les' → logprob: -2.3341574668884277
    4. ' les' → logprob: -2.5841574668884277
    5. ' la' → logprob: -3.2091574668884277
    6. ' [' → logprob: -3.5841574668884277
    7. '[' → logprob: -3.8341574668884277
    8. '0' → logprob: -4.084157466888428
    9. '3' → logprob: -4.834157466888428
    10. 'la' → logprob: -5.084157466888428

Token 27: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06999479234218597
    2. '2' → logprob: -3.8199946880340576
    3. ' ,' → logprob: -3.8199946880340576
    4. ' ' → logprob: -4.444994926452637
    5. '0' → logprob: -4.944994926452637
    6. ',
' → logprob: -5.569994926452637
    7. ',

' → logprob: -8.569994926452637
    8. '3' → logprob: -8.819994926452637
    9. ' à' → logprob: -8.819994926452637
    10. '4' → logprob: -9.194994926452637

Token 28: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.6327157616615295
    2. ' ' → logprob: -0.7577157616615295
    3. '  ' → logprob: -9.757716178894043
    4. '   ' → logprob: -10.632716178894043
    5. ',' → logprob: -11.257716178894043
    6. '3' → logprob: -11.882716178894043
    7. ' ,' → logprob: -12.507716178894043
    8. '    ' → logprob: -12.632716178894043
    9. '4' → logprob: -13.257716178894043
    10. ' ' → logprob: -13.507716178894043

Token 29: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.11289747804403305
    2. ' ' → logprob: -2.2378973960876465
    3. '  ' → logprob: -10.612897872924805
    4. '3' → logprob: -10.612897872924805
    5. '   ' → logprob: -11.612897872924805
    6. 'de' → logprob: -12.550397872924805
    7. ',' → logprob: -13.112897872924805
    8. '    ' → logprob: -13.237897872924805
    9. '```' → logprob: -13.550397872924805
    10. ' ' → logprob: -13.925397872924805

Token 30: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005945982877165079
    2. '3' → logprob: -5.380946159362793
    3. ' ,' → logprob: -7.505946159362793
    4. 'et' → logprob: -8.005946159362793
    5. ' et' → logprob: -8.130946159362793
    6. ' ' → logprob: -9.880946159362793
    7. ',
' → logprob: -10.255946159362793
    8. '4' → logprob: -11.255946159362793
    9. ',

' → logprob: -11.505946159362793
    10. '0' → logprob: -11.630946159362793

Token 31: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.5759662985801697
    2. ' ' → logprob: -0.8259662985801697
    3. ' ' → logprob: -11.075965881347656
    4. '  ' → logprob: -12.075965881347656
    5. '```' → logprob: -13.450965881347656
    6. '   ' → logprob: -14.200965881347656
    7. ' trois' → logprob: -14.575965881347656
    8. ' ' → logprob: -14.700965881347656
    9. '4' → logprob: -15.013465881347656
    10. 's' → logprob: -15.138465881347656

Token 32: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.003603036515414715
    2. ' ' → logprob: -5.628602981567383
    3. '```' → logprob: -13.253602981567383
    4. '۳' → logprob: -15.628602981567383
    5. '  ' → logprob: -15.878602981567383
    6. '   ' → logprob: -15.878602981567383
    7. ' trois' → logprob: -16.191102981567383
    8. ' ' → logprob: -16.378602981567383
    9. '³' → logprob: -16.503602981567383
    10. '' → logprob: -16.691102981567383

Token 33: ' sachant' (ID: 174239)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4182650148868561
    2. '
' → logprob: -1.1682649850845337
    3. '\n' → logprob: -4.293264865875244
    4. '"""
' → logprob: -5.168264865875244
    5. '    
' → logprob: -5.418264865875244
    6. '```' → logprob: -5.918264865875244
    7. '\' → logprob: -6.168264865875244
    8. '  
' → logprob: -7.793264865875244
    9. '`' → logprob: -8.543265342712402
    10. '"' → logprob: -8.543265342712402

Token 34: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.043806880712509155
    2. ' qu' → logprob: -3.418806791305542
    3. ' ' → logprob: -5.918807029724121
    4. 'que' → logprob: -5.918807029724121
    5. '```' → logprob: -6.793807029724121
    6. ' ' → logprob: -6.918807029724121
    7. ',' → logprob: -7.793807029724121
    8. ' that' → logprob: -8.043807029724121
    9. '   ' → logprob: -8.168807029724121
    10. '    ' → logprob: -8.668807029724121

Token 35: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.7211432456970215
    2. 'les' → logprob: -0.9711432456970215
    3. ' ce' → logprob: -3.5961432456970215
    4. ' la' → logprob: -3.8461432456970215
    5. ' ' → logprob: -4.4711432456970215
    6. 'l' → logprob: -4.8461432456970215
    7. ' ils' → logprob: -4.8461432456970215
    8. ' le' → logprob: -5.0961432456970215
    9. '   ' → logprob: -5.2211432456970215
    10. ' l' → logprob: -5.3461432456970215

Token 36: ' deux' (ID: 10301)
  Prédit: ' trois'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' trois' → logprob: -0.2987847626209259
    2. 'tro' → logprob: -1.4237847328186035
    3. ' three' → logprob: -5.4237847328186035
    4. 'ent' → logprob: -5.6737847328186035
    5. ' ' → logprob: -5.9237847328186035
    6. '3' → logprob: -6.0487847328186035
    7. ' ent' → logprob: -7.0487847328186035
    8. ' tro' → logprob: -7.0487847328186035
    9. '   ' → logprob: -7.7987847328186035
    10. 't' → logprob: -8.048785209655762

Token 37: ' ent' (ID: 1121)
  Prédit: ' ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ent' → logprob: -0.2629052996635437
    2. 'ent' → logprob: -2.1379053592681885
    3. ' premiers' → logprob: -2.7629053592681885
    4. '_' → logprob: -4.512905120849609
    5. ' n' → logprob: -5.262905120849609
    6. 'n' → logprob: -5.387905120849609
    7. ' ' → logprob: -5.637905120849609
    8. 'prem' → logprob: -5.637905120849609
    9. ' integers' → logprob: -5.762905120849609
    10. ' nombres' → logprob: -5.887905120849609

Token 38: 'iers' (ID: 11012)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5038838982582092
    2. 'iers' → logprob: -1.0038838386535645
    3. 'ier' → logprob: -3.6288838386535645
    4. '```' → logprob: -7.2538838386535645
    5. 'ié' → logprob: -7.8788838386535645
    6. 's' → logprob: -7.8788838386535645
    7. 't' → logprob: -8.253884315490723
    8. '   ' → logprob: -8.503884315490723
    9. 'e' → logprob: -8.628884315490723
    10. 'a' → logprob: -9.128884315490723

Token 39: ' sa' (ID: 880)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7206382155418396
    2. ' sont' → logprob: -2.2206382751464844
    3. ' lus' → logprob: -2.7206382751464844
    4. 'n' → logprob: -2.8456382751464844
    5. '   ' → logprob: -3.0956382751464844
    6. ' n' → logprob: -3.0956382751464844
    7. ' man' → logprob: -3.2206382751464844
    8. ' ' → logprob: -3.4706382751464844
    9. 'lus' → logprob: -3.8456382751464844
    10. 'man' → logprob: -4.470638275146484

Token 40: 'isis' (ID: 11352)
  Prédit: 'nt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nt' → logprob: -0.5887247920036316
    2. 'ont' → logprob: -0.8387247920036316
    3. 'ch' → logprob: -6.213724613189697
    4. 'chent' → logprob: -6.213724613189697
    5. 't' → logprob: -6.338724613189697
    6. 'n' → logprob: -7.338724613189697
    7. 'ion' → logprob: -7.463724613189697
    8. '   ' → logprob: -7.588724613189697
    9. 'nts' → logprob: -7.838724613189697
    10. 'ur' → logprob: -7.838724613189697

Token 41: ' sont' (ID: 5242)
  Prédit: ' sont'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sont' → logprob: -0.2874094545841217
    2. 's' → logprob: -1.5374094247817993
    3. ' ne' → logprob: -4.03740930557251
    4. ' ' → logprob: -5.41240930557251
    5. ' are' → logprob: -5.53740930557251
    6. ' a' → logprob: -6.91240930557251
    7. ' ont' → logprob: -7.03740930557251
    8. ' n' → logprob: -7.03740930557251
    9. '<|end|>' → logprob: -7.16240930557251
    10. ' s' → logprob: -7.28740930557251

Token 42: ' distinct' (ID: 16913)
  Prédit: ' distinct'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' distinct' → logprob: -0.6601603031158447
    2. 'distinct' → logprob: -1.5351603031158447
    3. 'diff' → logprob: -2.2851603031158447
    4. ' différents' → logprob: -2.4101603031158447
    5. 'd' → logprob: -4.035160064697266
    6. ' different' → logprob: -4.285160064697266
    7. ' diff' → logprob: -4.535160064697266
    8. 'different' → logprob: -5.285160064697266
    9. ' toujours' → logprob: -5.410160064697266
    10. ' ' → logprob: -5.785160064697266

Token 43: 's' (ID: 82)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5933489799499512
    2. '   ' → logprob: -0.9683489799499512
    3. '\n' → logprob: -3.843348979949951
    4. '    
' → logprob: -4.093348979949951
    5. '\' → logprob: -4.843348979949951
    6. '```' → logprob: -4.843348979949951
    7. '  
' → logprob: -5.718348979949951
    8. ':
' → logprob: -6.093348979949951
    9. '`
' → logprob: -6.843348979949951
    10. '   
' → logprob: -6.968348979949951

Token 44: ' dans' (ID: 2671)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3164606988430023
    2. '   ' → logprob: -1.8164607286453247
    3. '\n' → logprob: -2.566460609436035
    4. '\' → logprob: -3.941460609436035
    5. '    
' → logprob: -4.941460609436035
    6. '  
' → logprob: -6.566460609436035
    7. '"""
' → logprob: -7.691460609436035
    8. '' → logprob: -7.691460609436035
    9. ' 
' → logprob: -7.816460609436035
    10. '```' → logprob: -7.816460609436035

Token 45: ' l' (ID: 305)
  Prédit: ' {'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {' → logprob: -1.051926612854004
    2. ' [' → logprob: -1.301926612854004
    3. ' la' → logprob: -1.676926612854004
    4. ' ' → logprob: -2.176926612854004
    5. '[' → logprob: -3.676926612854004
    6. '{' → logprob: -4.551926612854004
    7. '   ' → logprob: -4.926926612854004
    8. ' l' → logprob: -4.926926612854004
    9. ' le' → logprob: -5.176926612854004
    10. ' les' → logprob: -5.551926612854004

Token 46: ''' (ID: 6)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.11636842787265778
    2. ''ensemble' → logprob: -3.241368532180786
    3. 'es' → logprob: -3.366368532180786
    4. 'e' → logprob: -3.741368532180786
    5. ''' → logprob: -5.241368293762207
    6. '')' → logprob: -5.866368293762207
    7. ''
' → logprob: -7.616368293762207
    8. 'ensemble' → logprob: -7.741368293762207
    9. '''' → logprob: -7.866368293762207
    10. ''espace' → logprob: -7.866368293762207

Token 47: 'interval' (ID: 37558)
  Prédit: 'ensemble'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ensemble' → logprob: -0.3171018362045288
    2. ''ensemble' → logprob: -1.4421018362045288
    3. 'interval' → logprob: -4.817101955413818
    4. 'e' → logprob: -5.192101955413818
    5. 'ense' → logprob: -5.442101955413818
    6. 'a' → logprob: -5.567101955413818
    7. ''' → logprob: -5.692101955413818
    8. 'es' → logprob: -6.317101955413818
    9. ''''' → logprob: -6.442101955413818
    10. '')' → logprob: -6.817101955413818

Token 48: 'le' (ID: 282)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0418214276432991
    2. 'le' → logprob: -3.4168214797973633
    3. '[' → logprob: -5.666821479797363
    4. ' e' → logprob: -6.541821479797363
    5. '1' → logprob: -6.916821479797363
    6. ' ' → logprob: -6.916821479797363
    7. ' [' → logprob: -8.416821479797363
    8. '2' → logprob: -8.541821479797363
    9. '3' → logprob: -8.791821479797363
    10. 'l' → logprob: -9.291821479797363

Token 49: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.29372724890708923
    2. '[' → logprob: -1.5437272787094116
    3. ' ' → logprob: -3.793727159500122
    4. '1' → logprob: -4.543727397918701
    5. ' de' → logprob: -5.168727397918701
    6. 'de' → logprob: -8.043726921081543
    7. '3' → logprob: -8.168726921081543
    8. '(' → logprob: -8.418726921081543
    9. ' entre' → logprob: -8.418726921081543
    10. '2' → logprob: -8.918726921081543

Token 50: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.015181967988610268
    2. ' ' → logprob: -4.265182018280029
    3. '3' → logprob: -7.390182018280029
    4. '4' → logprob: -8.140181541442871
    5. '2' → logprob: -9.765181541442871
    6. '34' → logprob: -11.265181541442871
    7. '   ' → logprob: -11.515181541442871
    8. '  ' → logprob: -11.640181541442871
    9. ''' → logprob: -12.890181541442871
    10. ',' → logprob: -13.015181541442871

Token 51: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01296103373169899
    2. '3' → logprob: -5.012960910797119
    3. ' ,' → logprob: -5.137960910797119
    4. ' ' → logprob: -8.637961387634277
    5. '1' → logprob: -9.762961387634277
    6. ';' → logprob: -10.012961387634277
    7. '4' → logprob: -10.512961387634277
    8. '2' → logprob: -11.012961387634277
    9. ' ;' → logprob: -11.762961387634277
    10. '```' → logprob: -12.012961387634277

Token 52: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.1452043503522873
    2. ' ' → logprob: -2.1452043056488037
    3. '4' → logprob: -4.020204544067383
    4. '  ' → logprob: -9.895204544067383
    5. '   ' → logprob: -10.270204544067383
    6. ',' → logprob: -10.520204544067383
    7. ' ,' → logprob: -11.520204544067383
    8. '```' → logprob: -11.707704544067383
    9. '1' → logprob: -11.770204544067383
    10. ' ' → logprob: -12.270204544067383

Token 53: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.005396561231464148
    2. ' ' → logprob: -5.255396366119385
    3. '4' → logprob: -8.755396842956543
    4. '```' → logprob: -12.880396842956543
    5. '  ' → logprob: -14.255396842956543
    6. '   ' → logprob: -14.880396842956543
    7. '1' → logprob: -15.067896842956543
    8. ',' → logprob: -15.192896842956543
    9. ' ' → logprob: -15.817896842956543
    10. '"""' → logprob: -15.942896842956543

Token 54: '].

' (ID: 37441)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.360954225063324
    2. ']
' → logprob: -1.2359542846679688
    3. '].' → logprob: -4.610954284667969
    4. '].
' → logprob: -6.360954284667969
    5. ']
' → logprob: -8.610954284667969
    6. '   ' → logprob: -8.985954284667969
    7. ']

' → logprob: -9.110954284667969
    8. '"""
' → logprob: -9.610954284667969
    9. ']"' → logprob: -9.860954284667969
    10. ' ]' → logprob: -9.985954284667969

Token 55: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01567346230149269
    2. '"""' → logprob: -4.890673637390137
    3. '"""
' → logprob: -5.140673637390137
    4. '```' → logprob: -6.515673637390137
    5. '"' → logprob: -8.765673637390137
    6. '
' → logprob: -8.890673637390137
    7. ' """
' → logprob: -8.890673637390137
    8. '    
' → logprob: -9.515673637390137
    9. '    ' → logprob: -10.265673637390137
    10. '`' → logprob: -10.265673637390137

Token 56: ' Si' (ID: 7832)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00840996578335762
    2. '"""' → logprob: -5.6334099769592285
    3. '```' → logprob: -6.2584099769592285
    4. '
' → logprob: -7.3834099769592285
    5. '    
' → logprob: -7.5084099769592285
    6. '"""
' → logprob: -7.7584099769592285
    7. '    ' → logprob: -7.7584099769592285
    8. 'def' → logprob: -8.25840950012207
    9. '""' → logprob: -9.25840950012207
    10. 'n' → logprob: -9.63340950012207

Token 57: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.8349111080169678
    2. ' len' → logprob: -1.3349111080169678
    3. ' ' → logprob: -2.5849111080169678
    4. ' la' → logprob: -2.8349111080169678
    5. ' le' → logprob: -2.9599111080169678
    6. ' __' → logprob: -3.7099111080169678
    7. ' l' → logprob: -3.7099111080169678
    8. ' deux' → logprob: -3.7099111080169678
    9. ' vous' → logprob: -4.209911346435547
    10. '   ' → logprob: -5.584911346435547

Token 58: ' valeurs' (ID: 73668)
  Prédit: ' deux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' deux' → logprob: -0.6730974316596985
    2. 'de' → logprob: -1.9230973720550537
    3. ' ent' → logprob: -2.2980973720550537
    4. 'ent' → logprob: -3.0480973720550537
    5. ' nombres' → logprob: -3.1730973720550537
    6. ' int' → logprob: -3.5480973720550537
    7. ' len' → logprob: -3.5480973720550537
    8. 'len' → logprob: -4.423097610473633
    9. ' ' → logprob: -4.423097610473633
    10. ' two' → logprob: -4.548097610473633

Token 59: ' sont' (ID: 5242)
  Prédit: ' man'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' man' → logprob: -1.9878406524658203
    2. ' entr' → logprob: -2.2378406524658203
    3. ' sais' → logprob: -2.2378406524658203
    4. 's' → logprob: -2.6128406524658203
    5. ' ' → logprob: -2.9878406524658203
    6. ' sont' → logprob: -3.2378406524658203
    7. '   ' → logprob: -3.3628406524658203
    8. ' des' → logprob: -3.3628406524658203
    9. ' val' → logprob: -3.6128406524658203
    10. ' de' → logprob: -3.6128406524658203

Token 60: ' (' (ID: 350)
  Prédit: ' invalid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' invalid' → logprob: -1.0106778144836426
    2. ' incorrect' → logprob: -1.8856778144836426
    3. ' ég' → logprob: -2.0106778144836426
    4. 'invalid' → logprob: -2.7606778144836426
    5. ' val' → logprob: -2.8856778144836426
    6. ' correct' → logprob: -2.8856778144836426
    7. 'incorrect' → logprob: -3.1356778144836426
    8. ' en' → logprob: -3.2606778144836426
    9. 'correct' → logprob: -4.385677814483643
    10. ' ident' → logprob: -4.635677814483643

Token 61: 'a' (ID: 64)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.09102962166070938
    2. ' ' → logprob: -2.466029644012451
    3. '   ' → logprob: -7.091029644012451
    4. '2' → logprob: -7.216029644012451
    5. '  ' → logprob: -8.591029167175293
    6. '3' → logprob: -8.841029167175293
    7. ',' → logprob: -10.278529167175293
    8. '"""' → logprob: -10.591029167175293
    9. '    ' → logprob: -11.028529167175293
    10. ')' → logprob: -11.091029167175293

Token 62: '=' (ID: 28)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03578826040029526
    2. '=' → logprob: -3.7857882976531982
    3. ' ,' → logprob: -5.660788059234619
    4. '1' → logprob: -6.035788059234619
    5. ' =' → logprob: -6.035788059234619
    6. ')' → logprob: -6.160788059234619
    7. ' ==' → logprob: -7.285788059234619
    8. 'a' → logprob: -7.410788059234619
    9. '),' → logprob: -8.535788536071777
    10. ',b' → logprob: -8.910788536071777

Token 63: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.14565856754779816
    2. ' ' → logprob: -2.020658493041992
    3. '2' → logprob: -6.020658493041992
    4. ',' → logprob: -8.020658493041992
    5. ' ,' → logprob: -9.520658493041992
    6. '  ' → logprob: -9.895658493041992
    7. '3' → logprob: -10.145658493041992
    8. '   ' → logprob: -10.645658493041992
    9. '    ' → logprob: -11.895658493041992
    10. '```' → logprob: -12.583158493041992

Token 64: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008383607491850853
    2. ' ,' → logprob: -5.008383750915527
    3. ' et' → logprob: -7.008383750915527
    4. ' ' → logprob: -7.883383750915527
    5. ' and' → logprob: -8.883383750915527
    6. '   ' → logprob: -9.883383750915527
    7. ')' → logprob: -9.883383750915527
    8. 'et' → logprob: -9.883383750915527
    9. 'and' → logprob: -10.258383750915527
    10. ',
' → logprob: -11.258383750915527

Token 65: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.23695848882198334
    2. ' ' → logprob: -2.2369585037231445
    3. 'b' → logprob: -2.3619585037231445
    4. '2' → logprob: -5.4869585037231445
    5. 'a' → logprob: -6.2369585037231445
    6. '  ' → logprob: -6.8619585037231445
    7. '    ' → logprob: -7.2369585037231445
    8. ' a' → logprob: -7.3619585037231445
    9. '   ' → logprob: -7.6119585037231445
    10. '3' → logprob: -7.9869585037231445

Token 66: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0032733723055571318
    2. ' =' → logprob: -6.3782734870910645
    3. ',' → logprob: -6.5032734870910645
    4. ' ,' → logprob: -10.503273010253906
    5. ' ' → logprob: -11.378273010253906
    6. ')=' → logprob: -11.878273010253906
    7. ')' → logprob: -12.503273010253906
    8. '=True' → logprob: -12.628273010253906
    9. '=None' → logprob: -12.878273010253906
    10. '1' → logprob: -13.003273010253906

Token 67: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.09381013363599777
    2. ' ' → logprob: -2.4688100814819336
    3. '1' → logprob: -5.718810081481934
    4. '3' → logprob: -6.468810081481934
    5. '  ' → logprob: -11.843810081481934
    6. ')' → logprob: -12.656310081481934
    7. ',' → logprob: -12.781310081481934
    8. '  
' → logprob: -13.093810081481934
    9. '   ' → logprob: -13.531310081481934
    10. '```' → logprob: -13.968810081481934

Token 68: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10412762314081192
    2. '),' → logprob: -2.4791276454925537
    3. ',' → logprob: -4.854127407073975
    4. ' ou' → logprob: -5.854127407073975
    5. '):' → logprob: -6.479127407073975
    6. '   ' → logprob: -6.854127407073975
    7. ' )' → logprob: -7.229127407073975
    8. ' ' → logprob: -7.354127407073975
    9. ' ),' → logprob: -8.729127883911133
    10. ' or' → logprob: -9.729127883911133

Token 69: ' la' (ID: 557)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09146181493997574
    2. '    ' → logprob: -3.0914618968963623
    3. ' la' → logprob: -4.966461658477783
    4. ' return' → logprob: -4.966461658477783
    5. ' le' → logprob: -5.216461658477783
    6. ' ' → logprob: -5.466461658477783
    7. ' alors' → logprob: -5.466461658477783
    8. ' print' → logprob: -6.591461658477783
    9. 'def' → logprob: -6.716461658477783
    10. ' def' → logprob: -6.841461658477783

Token 70: ' sortie' (ID: 52761)
  Prédit: ' fonction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' fonction' → logprob: -0.41811850666999817
    2. 'fonction' → logprob: -2.293118476867676
    3. ' valeur' → logprob: -2.418118476867676
    4. '   ' → logprob: -3.168118476867676
    5. 's' → logprob: -4.168118476867676
    6. 'n' → logprob: -4.418118476867676
    7. ' function' → logprob: -4.918118476867676
    8. ' man' → logprob: -5.043118476867676
    9. ' code' → logprob: -5.043118476867676
    10. ' solution' → logprob: -5.293118476867676

Token 71: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.6075655817985535
    2. ' doit' → logprob: -1.4825656414031982
    3. ' sera' → logprob: -1.8575656414031982
    4. ' devrait' → logprob: -3.7325656414031982
    5. ' :' → logprob: -4.232565402984619
    6. ' ' → logprob: -4.982565402984619
    7. ' ' → logprob: -5.232565402984619
    8. ' serait' → logprob: -5.357565402984619
    9. ':' → logprob: -5.482565402984619
    10. 'est' → logprob: -5.982565402984619

Token 72: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10360291600227356
    2. '3' → logprob: -2.353602886199951
    3. '`' → logprob: -6.603602886199951
    4. ' ' → logprob: -7.603602886199951
    5. ' `' → logprob: -7.853602886199951
    6. '```' → logprob: -8.10360336303711
    7. '"' → logprob: -8.60360336303711
    8. '  ' → logprob: -8.97860336303711
    9. '    ' → logprob: -9.35360336303711
    10. '   ' → logprob: -9.35360336303711

Token 73: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.033736176788806915
    2. ' ' → logprob: -3.408736228942871
    3. '"' → logprob: -10.408736228942871
    4. '`' → logprob: -10.658736228942871
    5. ''' → logprob: -11.283736228942871
    6. '```' → logprob: -11.533736228942871
    7. '   ' → logprob: -12.408736228942871
    8. '  ' → logprob: -13.408736228942871
    9. '"""' → logprob: -13.408736228942871
    10. '1' → logprob: -13.783736228942871

Token 74: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006387430243194103
    2. '```' → logprob: -6.131387233734131
    3. '    
' → logprob: -6.631387233734131
    4. 'def' → logprob: -7.131387233734131
    5. '
' → logprob: -7.631387233734131
    6. '"""' → logprob: -7.756387233734131
    7. '"""
' → logprob: -7.881387233734131
    8. '  ' → logprob: -8.881387710571289
    9. '   
' → logprob: -9.006387710571289
    10. '\n' → logprob: -9.256387710571289

Token 75: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010507101193070412
    2. '"""
' → logprob: -5.135507106781006
    3. '```' → logprob: -5.760507106781006
    4. '    
' → logprob: -8.135506629943848
    5. 'def' → logprob: -8.135506629943848
    6. '"""' → logprob: -8.510506629943848
    7. '\n' → logprob: -8.635506629943848
    8. '"' → logprob: -9.010506629943848
    9. '\' → logprob: -9.260506629943848
    10. '``' → logprob: -9.760506629943848

Token 76: ' Si' (ID: 7832)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06585518270730972
    2. '"""
' → logprob: -3.0658552646636963
    3. '```' → logprob: -4.815855026245117
    4. '"' → logprob: -5.940855026245117
    5. '"""' → logprob: -5.940855026245117
    6. '`' → logprob: -6.940855026245117
    7. '``' → logprob: -7.315855026245117
    8. '    
' → logprob: -7.815855026245117
    9. '    ' → logprob: -7.940855026245117
    10. '\' → logprob: -8.440855026245117

Token 77: ' les' (ID: 1341)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.2448618859052658
    2. 'a' → logprob: -1.9948618412017822
    3. '    ' → logprob: -3.3698618412017822
    4. ' ' → logprob: -3.8698618412017822
    5. '   ' → logprob: -4.869862079620361
    6. '(a' → logprob: -5.244862079620361
    7. ' les' → logprob: -5.494862079620361
    8. ' ' → logprob: -6.119862079620361
    9. ' (' → logprob: -6.369862079620361
    10. '  ' → logprob: -6.994862079620361

Token 78: ' valeurs' (ID: 73668)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7088735103607178
    2. 'a' → logprob: -1.2088735103607178
    3. ' a' → logprob: -1.5838735103607178
    4. '_' → logprob: -6.833873748779297
    5. ' ' → logprob: -7.458873748779297
    6. ' (' → logprob: -8.583873748779297
    7. ' ,' → logprob: -8.708873748779297
    8. ' valeurs' → logprob: -8.708873748779297
    9. 'v' → logprob: -8.833873748779297
    10. '   ' → logprob: -8.833873748779297

Token 79: ' sont' (ID: 5242)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.003026910126209259
    2. ' =' → logprob: -6.003026962280273
    3. '=(' → logprob: -7.628026962280273
    4. '(' → logprob: -10.253026962280273
    5. 'a' → logprob: -10.878026962280273
    6. ' =(' → logprob: -12.753026962280273
    7. '=a' → logprob: -12.878026962280273
    8. ' (' → logprob: -13.253026962280273
    9. ' a' → logprob: -13.503026962280273
    10. 's' → logprob: -14.128026962280273

Token 80: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.22576461732387543
    2. '(' → logprob: -1.6007646322250366
    3. 'a' → logprob: -8.725764274597168
    4. ' ' → logprob: -9.600764274597168
    5. '(a' → logprob: -9.725764274597168
    6. '1' → logprob: -10.100764274597168
    7. ' a' → logprob: -12.100764274597168
    8. '   ' → logprob: -12.225764274597168
    9. '  ' → logprob: -12.475764274597168
    10. ' ' → logprob: -12.725764274597168

Token 81: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.016415437683463097
    2. ' a' → logprob: -4.266415596008301
    3. '1' → logprob: -6.266415596008301
    4. ' ' → logprob: -8.6414155960083
    5. '2' → logprob: -9.5164155960083
    6. '3' → logprob: -10.1414155960083
    7. '   ' → logprob: -10.6414155960083
    8. 'b' → logprob: -10.7664155960083
    9. '  ' → logprob: -11.8914155960083
    10. ' b' → logprob: -12.8914155960083

Token 82: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0280383548888494e-06
    2. ' =' → logprob: -14.000000953674316
    3. ',' → logprob: -16.500001907348633
    4. '=
' → logprob: -17.000001907348633
    5. '3' → logprob: -17.375001907348633
    6. '=

' → logprob: -17.500001907348633
    7. 'a' → logprob: -17.875001907348633
    8. '1' → logprob: -18.000001907348633
    9. '=}' → logprob: -18.125001907348633
    10. '==' → logprob: -18.875001907348633

Token 83: '1' (ID: 16)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.39359498023986816
    2. '1' → logprob: -1.1435949802398682
    3. ' ' → logprob: -5.393594741821289
    4. '2' → logprob: -6.143594741821289
    5. '  ' → logprob: -12.831094741821289
    6. ',' → logprob: -12.831094741821289
    7. '```' → logprob: -14.393594741821289
    8. '   ' → logprob: -14.518594741821289
    9. ' ,' → logprob: -15.331094741821289
    10. '３' → logprob: -15.643594741821289

Token 84: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005336216650903225
    2. ' ,' → logprob: -5.255336284637451
    3. ' ' → logprob: -9.255335807800293
    4. ')' → logprob: -12.755335807800293
    5. ',
' → logprob: -13.630335807800293
    6. 'a' → logprob: -14.755335807800293
    7. '  ' → logprob: -14.880335807800293
    8. '),' → logprob: -15.130335807800293
    9. '<|end|>' → logprob: -15.130335807800293
    10. '   ' → logprob: -15.255335807800293

Token 85: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.5493011474609375
    2. ' ' → logprob: -1.0493011474609375
    3. 'b' → logprob: -2.6743011474609375
    4. ' ' → logprob: -6.0493011474609375
    5. ' ,' → logprob: -7.9243011474609375
    6. '2' → logprob: -8.674301147460938
    7. '    ' → logprob: -9.424301147460938
    8. ''' → logprob: -9.549301147460938
    9. ' ﻿' → logprob: -9.799301147460938
    10. ' `' → logprob: -9.924301147460938

Token 86: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -5.228561349213123e-05
    2. ' =' → logprob: -9.875052452087402
    3. ',' → logprob: -14.250052452087402
    4. '3' → logprob: -18.125051498413086
    5. ' ' → logprob: -18.250051498413086
    6. '=
' → logprob: -19.000051498413086
    7. '=

' → logprob: -19.250051498413086
    8. '2' → logprob: -19.875051498413086
    9. '  ' → logprob: -20.000051498413086
    10. ' ,' → logprob: -20.125051498413086

Token 87: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.026304252445697784
    2. ' ' → logprob: -3.651304244995117
    3. '2' → logprob: -12.901304244995117
    4. '３' → logprob: -14.776304244995117
    5. '۳' → logprob: -15.276304244995117
    6. '1' → logprob: -15.338804244995117
    7. '  ' → logprob: -15.588804244995117
    8. ' ' → logprob: -16.026304244995117
    9. '```' → logprob: -16.526304244995117
    10. ')' → logprob: -17.213804244995117

Token 88: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18044117093086243
    2. '),' → logprob: -2.30544114112854
    3. '):' → logprob: -2.93044114112854
    4. ',' → logprob: -4.430441379547119
    5. ' ' → logprob: -10.805440902709961
    6. '):
' → logprob: -10.805440902709961
    7. '   ' → logprob: -11.055440902709961
    8. ').' → logprob: -11.555440902709961
    9. '),
' → logprob: -12.305440902709961
    10. ':' → logprob: -12.430440902709961

Token 89: ' la' (ID: 557)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8136550784111023
    2. '    ' → logprob: -1.063655138015747
    3. ' ' → logprob: -2.063655138015747
    4. ' la' → logprob: -3.938655138015747
    5. '   ' → logprob: -4.063654899597168
    6. '3' → logprob: -4.188654899597168
    7. '     
' → logprob: -5.313654899597168
    8. ' 
' → logprob: -5.563654899597168
    9. ''' → logprob: -5.813654899597168
    10. '1' → logprob: -6.563654899597168

Token 90: ' sortie' (ID: 52761)
  Prédit: ' sortie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sortie' → logprob: -0.5195135474205017
    2. 'sort' → logprob: -1.8945136070251465
    3. ' ' → logprob: -3.0195136070251465
    4. 'out' → logprob: -3.2695136070251465
    5. '3' → logprob: -3.5195136070251465
    6. 's' → logprob: -4.0195136070251465
    7. ' espace' → logprob: -4.0195136070251465
    8. ' sort' → logprob: -4.5195136070251465
    9. 'output' → logprob: -4.5195136070251465
    10. 'n' → logprob: -4.7695136070251465

Token 91: ' est' (ID: 893)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.27091726660728455
    2. ' est' → logprob: -1.770917296409607
    3. '3' → logprob: -3.1459171772003174
    4. ' is' → logprob: -3.8959171772003174
    5. '2' → logprob: -6.2709174156188965
    6. ' :' → logprob: -7.7709174156188965
    7. '1' → logprob: -8.270916938781738
    8. ' ' → logprob: -8.270916938781738
    9. ':' → logprob: -8.520916938781738
    10. '  ' → logprob: -8.895916938781738

Token 92: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3485642075538635
    2. '2' → logprob: -1.2235641479492188
    3. ' ' → logprob: -9.473564147949219
    4. '1' → logprob: -11.098564147949219
    5. 'space' → logprob: -11.973564147949219
    6. ''' → logprob: -11.973564147949219
    7. '20' → logprob: -12.723564147949219
    8. '"' → logprob: -12.723564147949219
    9. '`' → logprob: -12.973564147949219
    10. '  ' → logprob: -13.098564147949219

Token 93: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.061969030648469925
    2. ' ' → logprob: -2.811969041824341
    3. '`' → logprob: -15.186968803405762
    4. ' ' → logprob: -15.311968803405762
    5. ''' → logprob: -15.561968803405762
    6. '1' → logprob: -15.811968803405762
    7. ' 
' → logprob: -15.936968803405762
    8. '```' → logprob: -16.249469757080078
    9. '  ' → logprob: -16.374469757080078
    10. '   ' → logprob: -16.436969757080078

Token 94: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009333489462733269
    2. '"""' → logprob: -5.509333610534668
    3. '"' → logprob: -6.384333610534668
    4. '```' → logprob: -6.509333610534668
    5. 'def' → logprob: -6.884333610534668
    6. '"""
' → logprob: -8.259333610534668
    7. '  ' → logprob: -8.259333610534668
    8. '    
' → logprob: -9.134333610534668
    9. '`' → logprob: -9.634333610534668
    10. ')' → logprob: -10.134333610534668

Token 95: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007026745937764645
    2. '"""' → logprob: -5.132026672363281
    3. '"' → logprob: -8.132026672363281
    4. 'def' → logprob: -8.257026672363281
    5. '```' → logprob: -8.382026672363281
    6. '"""
' → logprob: -9.132026672363281
    7. '  ' → logprob: -9.757026672363281
    8. ' """' → logprob: -10.132026672363281
    9. '    
' → logprob: -10.507026672363281
    10. '`' → logprob: -11.132026672363281

Token 96: ' Si' (ID: 7832)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014264107681810856
    2. '"""
' → logprob: -5.514264106750488
    3. '"' → logprob: -5.639264106750488
    4. '```' → logprob: -6.139264106750488
    5. '"""' → logprob: -6.389264106750488
    6. 'def' → logprob: -6.514264106750488
    7. '\' → logprob: -8.514264106750488
    8. '  ' → logprob: -8.639264106750488
    9. ' ' → logprob: -9.014264106750488
    10. '"""

' → logprob: -9.264264106750488

Token 97: ' les' (ID: 1341)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.9096565842628479
    2. 'a' → logprob: -1.2846565246582031
    3. ' (' → logprob: -1.4096565246582031
    4. '   ' → logprob: -3.034656524658203
    5. ' ' → logprob: -4.784656524658203
    6. '    ' → logprob: -5.034656524658203
    7. '(a' → logprob: -5.159656524658203
    8. ' ' → logprob: -6.159656524658203
    9. ' les' → logprob: -6.409656524658203
    10. '(' → logprob: -7.159656524658203

Token 98: ' valeurs' (ID: 73668)
  Prédit: ' valeurs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valeurs' → logprob: -0.33366644382476807
    2. ' values' → logprob: -2.0836663246154785
    3. ' b' → logprob: -2.9586663246154785
    4. ' a' → logprob: -3.3336663246154785
    5. 'a' → logprob: -3.7086663246154785
    6. ' ' → logprob: -4.4586663246154785
    7. 'b' → logprob: -4.5836663246154785
    8. 'values' → logprob: -4.7086663246154785
    9. ' (' → logprob: -5.3336663246154785
    10. '_values' → logprob: -6.2086663246154785

Token 99: ' sont' (ID: 5242)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05789368972182274
    2. ' (' → logprob: -3.557893753051758
    3. '=' → logprob: -4.182893753051758
    4. '(' → logprob: -4.682893753051758
    5. '=(' → logprob: -6.182893753051758
    6. '(a' → logprob: -7.307893753051758
    7. 'a' → logprob: -7.932893753051758
    8. ' =(' → logprob: -9.932893753051758
    9. ' ' → logprob: -10.432893753051758
    10. '   ' → logprob: -10.807893753051758

Token 100: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.31425002217292786
    2. '(' → logprob: -1.3142499923706055
    3. '(a' → logprob: -6.9392499923706055
    4. 'a' → logprob: -11.689249992370605
    5. ' ' → logprob: -12.439249992370605
    6. '(b' → logprob: -13.314249992370605
    7. '1' → logprob: -14.189249992370605
    8. ' a' → logprob: -14.314249992370605
    9. '   ' → logprob: -14.439249992370605
    10. '  ' → logprob: -14.439249992370605

Token 101: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.048456549644470215
    2. '2' → logprob: -3.1734566688537598
    3. ' a' → logprob: -5.42345666885376
    4. ' ' → logprob: -7.17345666885376
    5. '1' → logprob: -8.923456192016602
    6. 'b' → logprob: -9.548456192016602
    7. '   ' → logprob: -10.298456192016602
    8. 'def' → logprob: -11.548456192016602
    9. '  ' → logprob: -11.798456192016602
    10. '3' → logprob: -12.673456192016602

Token 102: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -8.061054359131958e-06
    2. ' =' → logprob: -11.750007629394531
    3. ',' → logprob: -16.50000762939453
    4. '2' → logprob: -16.87500762939453
    5. ' ' → logprob: -17.00000762939453
    6. '=
' → logprob: -17.50000762939453
    7. '=

' → logprob: -17.87500762939453
    8. 'a' → logprob: -19.37500762939453
    9. '3' → logprob: -19.62500762939453
    10. '==' → logprob: -19.75000762939453

Token 103: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.006338030099868774
    2. ' ' → logprob: -5.131338119506836
    3. '1' → logprob: -7.881338119506836
    4. '3' → logprob: -10.506338119506836
    5. '  ' → logprob: -12.756338119506836
    6. '```' → logprob: -14.881338119506836
    7. '   ' → logprob: -15.006338119506836
    8. ',' → logprob: -15.506338119506836
    9. '２' → logprob: -16.068838119506836
    10. '    ' → logprob: -16.318838119506836

Token 104: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007270866190083325
    2. ' ,' → logprob: -7.25072717666626
    3. ',b' → logprob: -11.875726699829102
    4. '   ' → logprob: -12.000726699829102
    5. ' ' → logprob: -13.500726699829102
    6. 'b' → logprob: -13.875726699829102
    7. 'a' → logprob: -14.375726699829102
    8. ',
' → logprob: -15.250726699829102
    9. '`,' → logprob: -16.1257266998291
    10. ')' → logprob: -16.2507266998291

Token 105: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.011090975254774094
    2. 'b' → logprob: -4.5110907554626465
    3. '   ' → logprob: -10.636091232299805
    4. ' ' → logprob: -11.636091232299805
    5. ' ' → logprob: -11.886091232299805
    6. '  ' → logprob: -14.011091232299805
    7. '	b' → logprob: -14.136091232299805
    8. '    ' → logprob: -14.761091232299805
    9. 'a' → logprob: -14.886091232299805
    10. '3' → logprob: -14.886091232299805

Token 106: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -4.23917081207037e-05
    2. ',' → logprob: -10.125041961669922
    3. ' =' → logprob: -13.500041961669922
    4. ')' → logprob: -15.125041961669922
    5. '3' → logprob: -15.625041961669922
    6. '=

' → logprob: -16.000041961669922
    7. '==' → logprob: -16.125041961669922
    8. '=}' → logprob: -17.000041961669922
    9. ' ' → logprob: -17.750041961669922
    10. '1' → logprob: -17.875041961669922

Token 107: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.007714636158198118
    2. ' ' → logprob: -4.882714748382568
    3. '1' → logprob: -9.13271427154541
    4. '   ' → logprob: -15.63271427154541
    5. '  ' → logprob: -16.132715225219727
    6. '۳' → logprob: -16.820215225219727
    7. '３' → logprob: -17.382715225219727
    8. '<|end|>' → logprob: -17.882715225219727
    9. ')' → logprob: -18.195215225219727
    10. '```' → logprob: -18.257715225219727

Token 108: '),' (ID: 936)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2543792128562927
    2. ')' → logprob: -1.5043792724609375
    3. '),' → logprob: -6.6293792724609375
    4. ',' → logprob: -7.6293792724609375
    5. '):
' → logprob: -7.7543792724609375
    6. '   ' → logprob: -8.879379272460938
    7. ' ):' → logprob: -10.754379272460938
    8. ' ' → logprob: -11.129379272460938
    9. ':' → logprob: -11.129379272460938
    10. '```' → logprob: -12.629379272460938

Token 109: ' la' (ID: 557)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.37114763259887695
    2. ' ' → logprob: -1.871147632598877
    3. '1' → logprob: -3.246147632598877
    4. '   ' → logprob: -3.871147632598877
    5. '     
' → logprob: -3.871147632598877
    6. ')' → logprob: -4.121147632598877
    7. ' ' → logprob: -4.371147632598877
    8. ':' → logprob: -4.996147632598877
    9. ' :' → logprob: -5.246147632598877
    10. '2' → logprob: -5.246147632598877

Token 110: ' sortie' (ID: 52761)
  Prédit: ' sortie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sortie' → logprob: -0.15249532461166382
    2. 'sort' → logprob: -2.0274953842163086
    3. ' sort' → logprob: -5.777495384216309
    4. ' output' → logprob: -5.902495384216309
    5. 'output' → logprob: -6.652495384216309
    6. ' sortir' → logprob: -7.152495384216309
    7. 's' → logprob: -7.652495384216309
    8. ' sorti' → logprob: -7.777495384216309
    9. 'out' → logprob: -8.027495384216309
    10. ' ' → logprob: -8.152495384216309

Token 111: ' est' (ID: 893)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0112931402400136
    2. '1' → logprob: -4.761292934417725
    3. ' is' → logprob: -7.011292934417725
    4. '3' → logprob: -7.261292934417725
    5. '2' → logprob: -7.261292934417725
    6. ' :' → logprob: -9.886293411254883
    7. '    ' → logprob: -10.011293411254883
    8. ' ' → logprob: -10.386293411254883
    9. '  ' → logprob: -10.636293411254883
    10. ':' → logprob: -10.886293411254883

Token 112: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07083039730787277
    2. '1' → logprob: -2.6958303451538086
    3. '    ' → logprob: -7.820830345153809
    4. '2' → logprob: -7.945830345153809
    5. '3' → logprob: -9.320830345153809
    6. '  ' → logprob: -10.695830345153809
    7. ' ' → logprob: -11.695830345153809
    8. '   ' → logprob: -12.070830345153809
    9. '     
' → logprob: -13.445830345153809
    10. '"' → logprob: -13.695830345153809

Token 113: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06998979300260544
    2. ' ' → logprob: -2.6949896812438965
    3. '2' → logprob: -9.944990158081055
    4. '   ' → logprob: -12.819990158081055
    5. '  ' → logprob: -13.569990158081055
    6. '    ' → logprob: -14.069990158081055
    7. '3' → logprob: -15.694990158081055
    8. 'def' → logprob: -16.319990158081055
    9. ' ' → logprob: -16.757490158081055
    10. 'print' → logprob: -17.007490158081055

Token 114: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1458801031112671
    2. '"""' → logprob: -2.5208802223205566
    3. '"' → logprob: -3.1458802223205566
    4. '
' → logprob: -5.645880222320557
    5. ' """' → logprob: -5.770880222320557
    6. ')' → logprob: -6.645880222320557
    7. '"""
' → logprob: -6.770880222320557
    8. '    
' → logprob: -6.895880222320557
    9. '""' → logprob: -8.020879745483398
    10. '```' → logprob: -8.020879745483398

Token 115: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09093732386827469
    2. '"""
' → logprob: -2.965937376022339
    3. '"""' → logprob: -3.465937376022339
    4. '"' → logprob: -6.34093713760376
    5. '
' → logprob: -7.21593713760376
    6. '```' → logprob: -7.21593713760376
    7. '    
' → logprob: -8.215937614440918
    8. '""' → logprob: -8.465937614440918
    9. ' """
' → logprob: -8.465937614440918
    10. '"""

' → logprob: -9.215937614440918

Token 116: ' Et' (ID: 10007)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10617455095052719
    2. '"""' → logprob: -2.3561744689941406
    3. '"""
' → logprob: -5.731174468994141
    4. '"' → logprob: -6.856174468994141
    5. ' """' → logprob: -7.356174468994141
    6. '```' → logprob: -7.731174468994141
    7. ' """
' → logprob: -8.23117446899414
    8. '""' → logprob: -8.48117446899414
    9. '
' → logprob: -10.23117446899414
    10. '    
' → logprob: -10.73117446899414

Token 117: ' inverse' (ID: 53743)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021760521456599236
    2. 'def' → logprob: -5.0217604637146
    3. ' :' → logprob: -6.2717604637146
    4. '    ' → logprob: -6.3967604637146
    5. '    
' → logprob: -6.6467604637146
    6. ' a' → logprob: -6.7717604637146
    7. ' def' → logprob: -6.7717604637146
    8. ' ' → logprob: -6.8967604637146
    9. ' """
' → logprob: -7.0217604637146
    10. '  ' → logprob: -7.5217604637146

Token 118: 'ment' (ID: 508)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11605481058359146
    2. '
' → logprob: -3.4910547733306885
    3. ' """
' → logprob: -4.116055011749268
    4. '"""' → logprob: -4.241055011749268
    5. 'def' → logprob: -4.741055011749268
    6. '    
' → logprob: -4.991055011749268
    7. ' """' → logprob: -5.116055011749268
    8. ' 
' → logprob: -5.116055011749268
    9. '"' → logprob: -5.616055011749268
    10. 'a' → logprob: -5.991055011749268

Token 119: ' selon' (ID: 27571)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030024340376257896
    2. '    
' → logprob: -4.405024528503418
    3. '
' → logprob: -4.905024528503418
    4. 'def' → logprob: -5.530024528503418
    5. '```' → logprob: -6.780024528503418
    6. ' 
' → logprob: -7.530024528503418
    7. '"""' → logprob: -7.530024528503418
    8. '   
' → logprob: -7.530024528503418
    9. '    ' → logprob: -7.780024528503418
    10. '\n' → logprob: -8.030024528503418

Token 120: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -1.112937331199646
    2. ' les' → logprob: -1.112937331199646
    3. ' la' → logprob: -1.612937331199646
    4. ' le' → logprob: -2.8629374504089355
    5. 'l' → logprob: -3.8629374504089355
    6. ' ' → logprob: -4.1129374504089355
    7. 'les' → logprob: -4.2379374504089355
    8. ' leurs' → logprob: -4.6129374504089355
    9. ' leur' → logprob: -4.8629374504089355
    10. 'a' → logprob: -5.8629374504089355

Token 121: ''ordre' (ID: 124753)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3860633373260498
    2. 'es' → logprob: -1.6360633373260498
    3. 'e' → logprob: -2.38606333732605
    4. ''' → logprob: -4.636063575744629
    5. ' a' → logprob: -5.761063575744629
    6. ''ordre' → logprob: -6.136063575744629
    7. ''espace' → logprob: -6.261063575744629
    8. 'les' → logprob: -6.386063575744629
    9. ''entrée' → logprob: -6.636063575744629
    10. '```' → logprob: -6.761063575744629

Token 122: ' des' (ID: 731)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006551951635628939
    2. '"""' → logprob: -5.881551742553711
    3. '    
' → logprob: -6.381551742553711
    4. '
' → logprob: -7.881551742553711
    5. 'def' → logprob: -7.881551742553711
    6. '"' → logprob: -8.006551742553711
    7. ' 
' → logprob: -8.881551742553711
    8. '"""
' → logprob: -9.006551742553711
    9. ' """' → logprob: -9.256551742553711
    10. '```' → logprob: -9.381551742553711

Token 123: ' entr' (ID: 7072)
  Prédit: 'param'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'param' → logprob: -1.1601759195327759
    2. 'a' → logprob: -1.7851759195327759
    3. 'arguments' → logprob: -2.0351758003234863
    4. 's' → logprob: -2.0351758003234863
    5. 'val' → logprob: -2.9101758003234863
    6. ' arguments' → logprob: -3.2851758003234863
    7. 'ent' → logprob: -3.2851758003234863
    8. ' paramètres' → logprob: -3.7851758003234863
    9. 'entr' → logprob: -4.285175800323486
    10. ' appels' → logprob: -4.285175800323486

Token 124: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.06150506064295769
    2. 'ée' → logprob: -3.061505079269409
    3. 'er' → logprob: -4.81150484085083
    4. 'r' → logprob: -6.31150484085083
    5. 'rée' → logprob: -7.31150484085083
    6. 'é' → logprob: -7.56150484085083
    7. '   ' → logprob: -7.81150484085083
    8. 'rees' → logprob: -7.93650484085083
    9. 'es' → logprob: -8.811505317687988
    10. 'és' → logprob: -9.061505317687988

Token 125: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18293161690235138
    2. '
' → logprob: -2.182931661605835
    3. '    
' → logprob: -2.932931661605835
    4. ' 
' → logprob: -8.057931900024414
    5. '\n' → logprob: -8.307931900024414
    6. '   
' → logprob: -8.307931900024414
    7. '  
' → logprob: -9.057931900024414
    8. '    ' → logprob: -9.807931900024414
    9. 'a' → logprob: -9.932931900024414
    10. '    
    
' → logprob: -10.057931900024414

Token 126: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.055311787873506546
    2. '"""' → logprob: -3.055311679840088
    3. '"' → logprob: -6.180311679840088
    4. '```' → logprob: -6.430311679840088
    5. '"""
' → logprob: -6.680311679840088
    6. ' """' → logprob: -7.055311679840088
    7. ' """
' → logprob: -8.180312156677246
    8. '
' → logprob: -8.555312156677246
    9. '    
' → logprob: -8.930312156677246
    10. '""' → logprob: -9.055312156677246

Token 127: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021926144137978554
    2. '"""' → logprob: -3.896926164627075
    3. '"""
' (adapté à ' """
') → logprob: -7.271925926208496
    4. ' """' → logprob: -8.521925926208496
    5. '"' → logprob: -9.021925926208496
    6. ' """
' → logprob: -9.271925926208496
    7. '
' → logprob: -9.521925926208496
    8. '    
' → logprob: -9.896925926208496
    9. '```' → logprob: -9.896925926208496
    10. '    ' → logprob: -10.146925926208496

Token 128: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010255450382828712
    2. '    
' → logprob: -4.760255336761475
    3. 'a' → logprob: -6.635255336761475
    4. '
' → logprob: -8.885255813598633
    5. '    ' → logprob: -9.385255813598633
    6. ' a' → logprob: -10.385255813598633
    7. 'import' → logprob: -11.135255813598633
    8. 'def' → logprob: -11.385255813598633
    9. '       ' → logprob: -11.635255813598633
    10. '   
' → logprob: -12.135255813598633

Token 129: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20284822583198547
    2. 'a' → logprob: -1.702848196029663
    3. ' a' → logprob: -6.577848434448242
    4. '    
' → logprob: -10.327848434448242
    5. 'import' → logprob: -12.702848434448242
    6. '    ' → logprob: -13.327848434448242
    7. ' ' → logprob: -13.702848434448242
    8. '
' → logprob: -13.702848434448242
    9. '  ' → logprob: -13.702848434448242
    10. 'n' → logprob: -14.202848434448242

Token 130: ' Lire' (ID: 57624)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1136590763926506
    2. ' a' → logprob: -2.238659143447876
    3. '   ' → logprob: -7.363658905029297
    4. ' ' → logprob: -9.488658905029297
    5. ' #' → logprob: -10.363658905029297
    6. '#' → logprob: -10.988658905029297
    7. 's' → logprob: -11.238658905029297
    8. 'n' → logprob: -11.363658905029297
    9. 'inputs' → logprob: -12.238658905029297
    10. 'input' → logprob: -12.363658905029297

Token 131: ' le' (ID: 505)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2277642786502838
    2. ' a' → logprob: -1.6027642488479614
    3. ' ' → logprob: -6.477764129638672
    4. ' ' → logprob: -7.852764129638672
    5. 'de' → logprob: -9.102764129638672
    6. '   ' → logprob: -9.352764129638672
    7. ' deux' → logprob: -9.602764129638672
    8. '_a' → logprob: -10.102764129638672
    9. ' un' → logprob: -11.102764129638672
    10. '  ' → logprob: -11.227764129638672

Token 132: ' premier' (ID: 15506)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.055973563343286514
    2. ' a' → logprob: -2.930973529815674
    3. ' ' → logprob: -7.055973529815674
    4. 'e' → logprob: -9.555974006652832
    5. ' ent' → logprob: -10.805974006652832
    6. ' premier' → logprob: -10.930974006652832
    7. 'es' → logprob: -11.055974006652832
    8. ',' → logprob: -11.555974006652832
    9. 'ent' → logprob: -11.555974006652832
    10. 'i' → logprob: -11.680974006652832

Token 133: ' entier' (ID: 80473)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8677732944488525
    2. 'a' → logprob: -0.9927732944488525
    3. ' a' → logprob: -2.6177732944488525
    4. ' entier' → logprob: -2.7427732944488525
    5. ' ent' → logprob: -2.9927732944488525
    6. 'ent' → logprob: -4.492773056030273
    7. '_' → logprob: -4.742773056030273
    8. '_ent' → logprob: -7.742773056030273
    9. 'int' → logprob: -8.242773056030273
    10. 'e' → logprob: -8.242773056030273

Token 134: ' depuis' (ID: 16277)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7875261902809143
    2. ' a' → logprob: -1.0375261306762695
    3. '   ' → logprob: -1.6625261306762695
    4. 'n' → logprob: -8.03752613067627
    5. '    
' → logprob: -8.53752613067627
    6. '	a' → logprob: -9.03752613067627
    7. ' ' → logprob: -9.53752613067627
    8. '    ' → logprob: -9.78752613067627
    9. ',' → logprob: -10.03752613067627
    10. ' ' → logprob: -10.41252613067627

Token 135: ' l' (ID: 305)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.16562704741954803
    2. ' l' → logprob: -2.1656270027160645
    3. 'input' → logprob: -4.2906270027160645
    4. 'l' → logprob: -4.4156270027160645
    5. ' ' → logprob: -4.6656270027160645
    6. ' la' → logprob: -6.9156270027160645
    7. ' ' → logprob: -7.2906270027160645
    8. '   ' → logprob: -7.5406270027160645
    9. ' une' → logprob: -8.790627479553223
    10. '=input' → logprob: -9.915627479553223

Token 136: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.09750814735889435
    2. ''' → logprob: -2.972508192062378
    3. ''utilisateur' → logprob: -4.097507953643799
    4. 'input' → logprob: -4.222507953643799
    5. 'entrée' → logprob: -5.722507953643799
    6. 'a' → logprob: -5.972507953643799
    7. 'e' → logprob: -6.097507953643799
    8. ' input' → logprob: -7.222507953643799
    9. ''ent' → logprob: -7.347507953643799
    10. '_' → logprob: -8.097508430480957

Token 137: ' utilisateur' (ID: 115595)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.37861737608909607
    2. '   ' → logprob: -1.8786174058914185
    3. ' a' → logprob: -2.003617286682129
    4. ' ' → logprob: -4.503617286682129
    5. ',' → logprob: -5.503617286682129
    6. '    ' → logprob: -6.003617286682129
    7. '    
' → logprob: -6.253617286682129
    8. ' ,' → logprob: -6.378617286682129
    9. 'n' → logprob: -6.878617286682129
    10. ' =' → logprob: -7.253617286682129

Token 138: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2935861051082611
    2. 'a' → logprob: -1.4185861349105835
    3. '    
' → logprob: -5.043586254119873
    4. ' a' → logprob: -5.293586254119873
    5. 'n' → logprob: -7.543586254119873
    6. '
' → logprob: -9.293585777282715
    7. '    ' → logprob: -9.418585777282715
    8. ' 
' → logprob: -9.918585777282715
    9. '   
' → logprob: -10.793585777282715
    10. '	a' → logprob: -11.043585777282715

Token 139: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3088579475879669
    2. 'a' → logprob: -1.4338579177856445
    3. '    
' → logprob: -3.8088579177856445
    4. ' a' → logprob: -5.8088579177856445
    5. 'n' → logprob: -6.5588579177856445
    6. ' 
' → logprob: -8.183857917785645
    7. '    ' → logprob: -8.308857917785645
    8. '
' → logprob: -9.933857917785645
    9. '     
' → logprob: -10.308857917785645
    10. '   
' → logprob: -10.683857917785645

Token 140: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.026351509615778923
    2. ' a' → logprob: -3.6513514518737793
    3. '   ' → logprob: -10.151351928710938
    4. 'n' → logprob: -11.776351928710938
    5. ' ' → logprob: -13.151351928710938
    6. '	a' → logprob: -13.901351928710938
    7. ' ' → logprob: -14.651351928710938
    8. ' 
' → logprob: -15.526351928710938
    9. 'b' → logprob: -15.526351928710938
    10. 'x' → logprob: -15.651351928710938

Token 141: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026959164068102837
    2. '=' → logprob: -4.15195894241333
    3. ',' → logprob: -4.52695894241333
    4. ' ,' → logprob: -11.026959419250488
    5. '=int' → logprob: -11.151959419250488
    6. '=input' → logprob: -12.026959419250488
    7. ' =
' → logprob: -12.276959419250488
    8. ' ' → logprob: -12.651959419250488
    9. ')' → logprob: -12.776959419250488
    10. ' ' → logprob: -13.276959419250488

Token 142: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.054916925728321075
    2. 'int' → logprob: -2.9299168586730957
    3. ' input' → logprob: -10.429917335510254
    4. 'input' → logprob: -12.929917335510254
    5. ' ' → logprob: -13.679917335510254
    6. ' ' → logprob: -14.554917335510254
    7. ' in' → logprob: -15.554917335510254
    8. '	int' → logprob: -15.554917335510254
    9. '=int' → logprob: -15.554917335510254
    10. ' i' → logprob: -16.179916381835938

Token 143: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.023314662277698517
    2. '(' → logprob: -3.7733147144317627
    3. 'input' → logprob: -9.648314476013184
    4. '()' → logprob: -12.898314476013184
    5. '(
' → logprob: -14.523314476013184
    6. ' (' → logprob: -14.773314476013184
    7. '=input' → logprob: -14.773314476013184
    8. ' input' → logprob: -15.148314476013184
    9. '<|end|>' → logprob: -15.398314476013184
    10. '<input' → logprob: -16.8983154296875

Token 144: '("' (ID: 568)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.38798537850379944
    2. '()' → logprob: -1.137985348701477
    3. '(' → logprob: -7.2629852294921875
    4. '("' → logprob: -8.887985229492188
    5. '()))' → logprob: -9.012985229492188
    6. '("("' → logprob: -10.512985229492188
    7. '(""))' → logprob: -10.762985229492188
    8. '()>' → logprob: -11.012985229492188
    9. ')' → logprob: -11.137985229492188
    10. '();)' → logprob: -11.387985229492188

Token 145: 'Ent' (ID: 3263)
  Prédit: '"))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"))' → logprob: -0.0036267966497689486
    2. 'Ent' → logprob: -6.003626823425293
    3. '>' → logprob: -7.878626823425293
    4. '"' → logprob: -8.003626823425293
    5. 'Enter' → logprob: -9.003626823425293
    6. 'Veuillez' → logprob: -9.628626823425293
    7. '))' → logprob: -10.003626823425293
    8. 'a' → logprob: -10.378626823425293
    9. 'ent' → logprob: -10.378626823425293
    10. ' "))' → logprob: -10.628626823425293

Token 146: 'rez' (ID: 13676)
  Prédit: 'ier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ier' → logprob: -0.004097516182810068
    2. 'rée' → logprob: -6.3790974617004395
    3. 'er' → logprob: -7.3790974617004395
    4. 're' → logprob: -7.8790974617004395
    5. 'ière' → logprob: -8.504097938537598
    6. 'r' → logprob: -8.504097938537598
    7. 'érieur' → logprob: -8.879097938537598
    8. 'ree' → logprob: -9.004097938537598
    9. '   ' → logprob: -9.129097938537598
    10. ' ier' → logprob: -9.254097938537598

Token 147: ' le' (ID: 505)
  Prédit: ' "))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' "))' → logprob: -0.7949302792549133
    2. ' le' → logprob: -1.1699302196502686
    3. ' un' → logprob: -1.6699302196502686
    4. ' ' → logprob: -4.294930458068848
    5. ' "' → logprob: -4.794930458068848
    6. ' ' → logprob: -5.169930458068848
    7. ' l' → logprob: -5.669930458068848
    8. '(' → logprob: -5.669930458068848
    9. ' a' → logprob: -5.919930458068848
    10. ' la' → logprob: -6.044930458068848

Token 148: ' premier' (ID: 15506)
  Prédit: ' premier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' premier' → logprob: -0.055335357785224915
    2. 'prem' → logprob: -2.930335283279419
    3. ' ' → logprob: -8.55533504486084
    4. '1' → logprob: -9.05533504486084
    5. ' premi' → logprob: -10.05533504486084
    6. ' first' → logprob: -10.05533504486084
    7. ' première' → logprob: -10.43033504486084
    8. ' Premier' → logprob: -12.18033504486084
    9. ' premie' → logprob: -12.18033504486084
    10. ' premiere' → logprob: -12.55533504486084

Token 149: ' entier' (ID: 80473)
  Prédit: ' entier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' entier' → logprob: -0.013408087193965912
    2. ' nombre' → logprob: -4.763408184051514
    3. 'ent' → logprob: -5.888408184051514
    4. ' ent' → logprob: -7.013408184051514
    5. ' ' → logprob: -7.013408184051514
    6. 'nombre' → logprob: -9.138407707214355
    7. ' numéro' → logprob: -10.013407707214355
    8. ' "))' → logprob: -11.513407707214355
    9. ' integer' → logprob: -11.638407707214355
    10. ' entière' → logprob: -11.888407707214355

Token 150: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16126294434070587
    2. ' :' → logprob: -1.9112629890441895
    3. ')' → logprob: -7.6612629890441895
    4. '"))' → logprob: -8.161262512207031
    5. ' "))' → logprob: -9.286262512207031
    6. '))' → logprob: -10.286262512207031
    7. ' (' → logprob: -10.286262512207031
    8. '):' → logprob: -10.411262512207031
    9. ' ' → logprob: -10.786262512207031
    10. ' ' → logprob: -11.286262512207031

Token 151: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.032076191157102585
    2. ')' → logprob: -3.782076120376587
    3. ' ' → logprob: -5.157076358795166
    4. '3' → logprob: -6.907076358795166
    5. '[' → logprob: -7.282076358795166
    6. 'entre' → logprob: -7.407076358795166
    7. '):' → logprob: -8.407075881958008
    8. ' entre' → logprob: -8.532075881958008
    9. '))' → logprob: -9.032075881958008
    10. ' )' → logprob: -10.032075881958008

Token 152: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.043188728392124176
    2. '-' → logprob: -3.2931888103485107
    3. ' à' → logprob: -6.293188571929932
    4. ' ,' → logprob: -6.918188571929932
    5. ' ' → logprob: -7.043188571929932
    6. ' ou' → logprob: -7.543188571929932
    7. ' -' → logprob: -7.918188571929932
    8. ')' → logprob: -8.16818904876709
    9. '

' → logprob: -9.54318904876709
    10. 'à' → logprob: -10.54318904876709

Token 153: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.20159731805324554
    2. '2' → logprob: -1.7015973329544067
    3. '3' → logprob: -8.951597213745117
    4. ',' → logprob: -9.951597213745117
    5. '  ' → logprob: -12.826597213745117
    6. ' ,' → logprob: -13.826597213745117
    7. '   ' → logprob: -14.514097213745117
    8. '-' → logprob: -15.139097213745117
    9. '

' → logprob: -15.139097213745117
    10. ')' → logprob: -15.576597213745117

Token 154: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.009990633465349674
    2. ' ' → logprob: -4.634990692138672
    3. '3' → logprob: -8.634990692138672
    4. ',' → logprob: -9.884990692138672
    5. 'ou' → logprob: -13.259990692138672
    6. '  ' → logprob: -13.884990692138672
    7. '   ' → logprob: -14.009990692138672
    8. '-' → logprob: -14.634990692138672
    9. '

' → logprob: -15.259990692138672
    10. ' ou' → logprob: -15.384990692138672

Token 155: ' ou' (ID: 2031)
  Prédit: ' ou'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ou' → logprob: -0.3233461380004883
    2. 'ou' → logprob: -1.6983461380004883
    3. ',' → logprob: -2.4483461380004883
    4. ' ' → logprob: -5.323346138000488
    5. ')' → logprob: -7.073346138000488
    6. ' or' → logprob: -7.573346138000488
    7. ' ,' → logprob: -8.823346138000488
    8. 'or' → logprob: -9.073346138000488
    9. ' ' → logprob: -9.448346138000488
    10. '  ' → logprob: -9.573346138000488

Token 156: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1426871418952942
    2. '3' → logprob: -2.0176870822906494
    3. ' ' → logprob: -11.51768684387207
    4. '  ' → logprob: -13.76768684387207
    5. '   ' → logprob: -14.76768684387207
    6. ')' → logprob: -15.26768684387207
    7. ' )' → logprob: -16.51768684387207
    8. '    ' → logprob: -16.70518684387207
    9. '```' → logprob: -16.76768684387207
    10. ' trois' → logprob: -17.26768684387207

Token 157: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.029752222821116447
    2. ' ' → logprob: -3.529752254486084
    3. '   ' → logprob: -14.529751777648926
    4. '  ' → logprob: -14.654751777648926
    5. ' ' → logprob: -15.029751777648926
    6. '```' → logprob: -16.279752731323242
    7. ')' → logprob: -16.342252731323242
    8. ' trois' → logprob: -17.217252731323242
    9. '    ' → logprob: -17.279752731323242
    10. '۳' → logprob: -17.592252731323242

Token 158: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4740888774394989
    2. ')' → logprob: -0.9740889072418213
    3. '"):' → logprob: -12.724088668823242
    4. ')")' → logprob: -12.849088668823242
    5. ':' → logprob: -12.974088668823242
    6. '")' → logprob: -13.474088668823242
    7. ' ):' → logprob: -13.974088668823242
    8. ''):' → logprob: -14.224088668823242
    9. ' )' → logprob: -14.849088668823242
    10. '')' → logprob: -15.974088668823242

Token 159: ' :' (ID: 712)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10725004971027374
    2. ')' → logprob: -2.3572499752044678
    3. ':' → logprob: -4.982250213623047
    4. ')")' → logprob: -9.607250213623047
    5. ' :' → logprob: -9.982250213623047
    6. '")' → logprob: -10.732250213623047
    7. '"):' → logprob: -11.107250213623047
    8. '"))' → logprob: -12.857250213623047
    9. '))' → logprob: -13.482250213623047
    10. ' ):' → logprob: -13.482250213623047

Token 160: ' "))
' (ID: 94820)
  Prédit: '"))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"))' → logprob: -0.014272568747401237
    2. ')' → logprob: -4.639272689819336
    3. ' "))' → logprob: -5.889272689819336
    4. '))' → logprob: -6.639272689819336
    5. '")' → logprob: -8.389272689819336
    6. '"' → logprob: -9.389272689819336
    7. ')")' → logprob: -9.764272689819336
    8. '"))
' → logprob: -10.514272689819336
    9. ''))' → logprob: -10.889272689819336
    10. '")))' → logprob: -12.264272689819336

Token 161: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03166917338967323
    2. '   ' → logprob: -3.7816691398620605
    3. '    
' → logprob: -5.4066691398620605
    4. ' 
' → logprob: -6.2816691398620605
    5. 'b' → logprob: -7.1566691398620605
    6. '  
' → logprob: -7.1566691398620605
    7. '   
' → logprob: -8.531669616699219
    8. '\n' → logprob: -9.281669616699219
    9. 'n' → logprob: -10.156669616699219
    10. '
' → logprob: -10.156669616699219

Token 162: ' #' (ID: 1069)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.32779255509376526
    2. '   ' → logprob: -1.4527925252914429
    3. '
' → logprob: -3.3277926445007324
    4. '    
' → logprob: -5.202792644500732
    5. ' b' → logprob: -6.202792644500732
    6. ' 
' → logprob: -7.077792644500732
    7. '  
' → logprob: -8.202792167663574
    8. '   
' → logprob: -8.202792167663574
    9. ' ' → logprob: -8.327792167663574
    10. '  ' → logprob: -9.077792167663574

Token 163: ' Lire' (ID: 57624)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.2839592695236206
    2. ' b' → logprob: -1.4089592695236206
    3. ' Lire' → logprob: -7.03395938873291
    4. '#' → logprob: -7.15895938873291
    5. 'Lire' → logprob: -7.90895938873291
    6. '   ' → logprob: -7.90895938873291
    7. ' ' → logprob: -8.53395938873291
    8. ' #' → logprob: -8.78395938873291
    9. '    ' → logprob: -11.28395938873291
    10. '  ' → logprob: -11.40895938873291

Token 164: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.006236622110009193
    2. ' ' → logprob: -5.381236553192139
    3. ' l' → logprob: -7.631236553192139
    4. 'le' → logprob: -7.881236553192139
    5. ' ' → logprob: -8.631237030029297
    6. ' la' → logprob: -8.881237030029297
    7. ' b' → logprob: -9.006237030029297
    8. ' the' → logprob: -9.131237030029297
    9. ' un' → logprob: -9.756237030029297
    10. '  ' → logprob: -9.881237030029297

Token 165: ' second' (ID: 3099)
  Prédit: ' second'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' second' → logprob: -0.08746114373207092
    2. 'second' → logprob: -2.837461233139038
    3. ' ' → logprob: -4.462460994720459
    4. ' deuxième' → logprob: -5.212460994720459
    5. ' b' → logprob: -5.462460994720459
    6. 'de' → logprob: -5.962460994720459
    7. 'b' → logprob: -6.962460994720459
    8. ' segundo' → logprob: -9.837461471557617
    9. '  ' → logprob: -9.962461471557617
    10. ' a' → logprob: -9.962461471557617

Token 166: ' entier' (ID: 80473)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.01964222453534603
    2. ' entier' → logprob: -4.769642353057861
    3. ' b' → logprob: -5.019642353057861
    4. '  ' → logprob: -6.769642353057861
    5. ' ent' → logprob: -7.519642353057861
    6. ' a' → logprob: -7.519642353057861
    7. 'ent' → logprob: -8.019641876220703
    8. 'b' → logprob: -8.269641876220703
    9. '_' → logprob: -8.269641876220703
    10. ' ,' → logprob: -8.519641876220703

Token 167: ' depuis' (ID: 16277)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.26461613178253174
    2. ' (' → logprob: -2.139616012573242
    3. ' ' → logprob: -3.389616012573242
    4. ' b' → logprob: -3.639616012573242
    5. 'b' → logprob: -4.514616012573242
    6. '=' → logprob: -4.514616012573242
    7. '<|end|>' → logprob: -4.639616012573242
    8. '(' → logprob: -5.264616012573242
    9. ' a' → logprob: -5.764616012573242
    10. ',' → logprob: -6.014616012573242

Token 168: ' l' (ID: 305)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.03623363375663757
    2. 'input' → logprob: -3.66123366355896
    3. ' l' → logprob: -4.786233425140381
    4. 'l' → logprob: -6.786233425140381
    5. '(input' → logprob: -8.911233901977539
    6. ' ' → logprob: -9.536233901977539
    7. ' int' → logprob: -9.536233901977539
    8. 'int' → logprob: -10.036233901977539
    9. '=input' → logprob: -10.786233901977539
    10. ' la' → logprob: -11.036233901977539

Token 169: ''entrée' (ID: 115820)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.05399369075894356
    2. ' input' → logprob: -3.1789937019348145
    3. ''entrée' → logprob: -4.6789937019348145
    4. 'entrée' → logprob: -7.3039937019348145
    5. 'a' → logprob: -8.678993225097656
    6. '=input' → logprob: -9.053993225097656
    7. '(input' → logprob: -9.178993225097656
    8. ''' → logprob: -9.303993225097656
    9. '_' → logprob: -9.553993225097656
    10. 'e' → logprob: -9.553993225097656

Token 170: ' utilisateur' (ID: 115595)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.6691763401031494
    2. 'input' → logprob: -0.7941763401031494
    3. '(input' → logprob: -4.16917610168457
    4. ' user' → logprob: -5.04417610168457
    5. '(' → logprob: -5.29417610168457
    6. 'user' → logprob: -5.54417610168457
    7. ' utilisateur' → logprob: -6.66917610168457
    8. '("' → logprob: -6.66917610168457
    9. ' ' → logprob: -6.79417610168457
    10. ' (' → logprob: -7.41917610168457

Token 171: '
' (ID: 198)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.08641914278268814
    2. '   ' → logprob: -2.961419105529785
    3. ' b' → logprob: -3.711419105529785
    4. '
' → logprob: -5.961419105529785
    5. '	b' → logprob: -6.336419105529785
    6. ' 
' → logprob: -6.961419105529785
    7. '    
' → logprob: -7.836419105529785
    8. ' ' → logprob: -7.836419105529785
    9. '    ' → logprob: -8.086419105529785
    10. '  
' → logprob: -10.461419105529785

Token 172: '   ' (ID: 271)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5999505519866943
    2. '   ' → logprob: -1.2249505519866943
    3. ' b' → logprob: -1.8499505519866943
    4. '    ' → logprob: -10.099950790405273
    5. '    
' → logprob: -10.474950790405273
    6. '
' → logprob: -10.599950790405273
    7. ' ' → logprob: -11.099950790405273
    8. '	b' → logprob: -11.099950790405273
    9. ' 
' → logprob: -11.349950790405273
    10. '  ' → logprob: -12.724950790405273

Token 173: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.04858953505754471
    2. 'b' (adapté à ' b') → logprob: -3.0485894680023193
    3. ' ' → logprob: -14.173589706420898
    4. ' ' → logprob: -14.298589706420898
    5. '	b' → logprob: -14.798589706420898
    6. '    ' → logprob: -15.423589706420898
    7. ' 
' → logprob: -16.4235897064209
    8. ' б' → logprob: -16.5485897064209
    9. '   ' → logprob: -16.9235897064209
    10. 's' → logprob: -17.5485897064209

Token 174: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0040801819413900375
    2. '=' → logprob: -5.504080295562744
    3. ' ' → logprob: -13.379079818725586
    4. ')' → logprob: -16.629079818725586
    5. '=int' → logprob: -16.879079818725586
    6. ' =
' → logprob: -17.254079818725586
    7. ' ' → logprob: -17.254079818725586
    8. ',' → logprob: -18.129079818725586
    9. ' =)' → logprob: -18.254079818725586
    10. '   ' → logprob: -18.629079818725586

Token 175: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.07889298349618912
    2. 'int' → logprob: -2.578892946243286
    3. ' ' → logprob: -13.078892707824707
    4. ' ' → logprob: -15.078892707824707
    5. '=int' → logprob: -15.203892707824707
    6. '(int' → logprob: -15.328892707824707
    7. '[int' → logprob: -15.828892707824707
    8. '	int' → logprob: -16.828893661499023
    9. '<int' → logprob: -16.953893661499023
    10. ' in' → logprob: -17.203893661499023

Token 176: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -3.440506407059729e-05
    2. '(' → logprob: -10.87503433227539
    3. 'input' → logprob: -11.12503433227539
    4. ' (' → logprob: -14.87503433227539
    5. ' input' → logprob: -16.37503433227539
    6. '=input' → logprob: -16.37503433227539
    7. '<input' → logprob: -17.25003433227539
    8. '(
' → logprob: -18.00003433227539
    9. '(inp' → logprob: -18.00003433227539
    10. ',input' → logprob: -18.62503433227539

Token 177: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.001714093261398375
    2. '(' → logprob: -6.37671422958374
    3. '("("' → logprob: -12.251713752746582
    4. '(">' → logprob: -13.501713752746582
    5. '(
' → logprob: -13.626713752746582
    6. ')' → logprob: -14.001713752746582
    7. '('' → logprob: -14.001713752746582
    8. ')("' → logprob: -14.001713752746582
    9. ' ("' → logprob: -14.126713752746582
    10. ' ' → logprob: -15.001713752746582

Token 178: 'Ent' (ID: 3263)
  Prédit: 'Ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Ent' → logprob: -0.10045047104358673
    2. '"' → logprob: -2.3504505157470703
    3. ' Ent' → logprob: -8.60045051574707
    4. 'Enter' → logprob: -10.85045051574707
    5. 'Entr' → logprob: -11.10045051574707
    6. ''' → logprob: -11.97545051574707
    7. 'En' → logprob: -12.22545051574707
    8. '_ent' → logprob: -13.22545051574707
    9. '")' → logprob: -13.35045051574707
    10. '("' → logprob: -13.60045051574707

Token 179: 'rez' (ID: 13676)
  Prédit: 'rez'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rez' → logprob: -0.00010986098641296849
    2. 'tre' → logprob: -9.250109672546387
    3. ' rez' → logprob: -12.250109672546387
    4. 'ez' → logprob: -12.875109672546387
    5. 'tez' → logprob: -12.875109672546387
    6. 're' → logprob: -13.500109672546387
    7. 'r' → logprob: -13.625109672546387
    8. 'res' → logprob: -14.500109672546387
    9. '```' → logprob: -15.875109672546387
    10. 't' → logprob: -16.375110626220703

Token 180: ' le' (ID: 505)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.03495148941874504
    2. '(' → logprob: -3.4099514484405518
    3. ' le' → logprob: -6.784951686859131
    4. '('' → logprob: -9.784951210021973
    5. 'le' → logprob: -10.534951210021973
    6. '"' → logprob: -10.784951210021973
    7. ' ' → logprob: -10.909951210021973
    8. ' ("' → logprob: -11.159951210021973
    9. '(le' → logprob: -11.659951210021973
    10. 'l' → logprob: -12.034951210021973

Token 181: ' second' (ID: 3099)
  Prédit: ' second'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' second' → logprob: -0.10369618982076645
    2. 'second' → logprob: -2.47869610786438
    3. 'de' → logprob: -4.853696346282959
    4. ' deuxième' → logprob: -5.103696346282959
    5. ' ' → logprob: -8.2286958694458
    6. ' premier' → logprob: -8.2286958694458
    7. ' deux' → logprob: -9.2286958694458
    8. 'prem' → logprob: -9.8536958694458
    9. '	second' → logprob: -10.4786958694458
    10. '_second' → logprob: -10.8536958694458

Token 182: ' entier' (ID: 80473)
  Prédit: ' entier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' entier' → logprob: -0.020597830414772034
    2. 'ent' → logprob: -5.0205979347229
    3. '(ent' → logprob: -5.0205979347229
    4. ' ent' → logprob: -5.3955979347229
    5. ' ' → logprob: -6.2705979347229
    6. '_ent' → logprob: -8.395597457885742
    7. ' enti' → logprob: -8.895597457885742
    8. ' (' → logprob: -9.145597457885742
    9. '(' → logprob: -9.895597457885742
    10. '  ' → logprob: -9.895597457885742

Token 183: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.007635851390659809
    2. '(' → logprob: -4.882636070251465
    3. ')' → logprob: -11.257636070251465
    4. ' ' → logprob: -12.007636070251465
    5. '")' → logprob: -12.382636070251465
    6. '"' → logprob: -12.882636070251465
    7. ' )' → logprob: -13.257636070251465
    8. '("' → logprob: -14.007636070251465
    9. ' ("' → logprob: -14.007636070251465
    10. ' "' → logprob: -15.882636070251465

Token 184: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006273718317970634
    2. ' ' → logprob: -7.375627517700195
    3. '3' → logprob: -14.375627517700195
    4. '2' → logprob: -16.250627517700195
    5. '"' → logprob: -17.375627517700195
    6. ')' → logprob: -17.375627517700195
    7. '  ' → logprob: -17.375627517700195
    8. '```' → logprob: -17.875627517700195
    9. '(' → logprob: -18.000627517700195
    10. '   ' → logprob: -18.000627517700195

Token 185: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010468624532222748
    2. ' ,' → logprob: -6.876046657562256
    3. ' ou' → logprob: -11.876047134399414
    4. ' ' → logprob: -12.376047134399414
    5. ')' → logprob: -13.876047134399414
    6. 'ou' → logprob: -14.501047134399414
    7. '   ' → logprob: -15.251047134399414
    8. ' or' → logprob: -15.376047134399414
    9. ',
' → logprob: -15.501047134399414
    10. '  ' → logprob: -15.626047134399414

Token 186: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10024776309728622
    2. '2' → logprob: -2.350247859954834
    3. '  ' → logprob: -10.725247383117676
    4. '   ' → logprob: -12.100247383117676
    5. '3' → logprob: -12.725247383117676
    6. ',' → logprob: -12.725247383117676
    7. '    ' → logprob: -13.100247383117676
    8. ' ' → logprob: -13.225247383117676
    9. '```' → logprob: -13.975247383117676
    10. ' ,' → logprob: -14.787747383117676

Token 187: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.004639572463929653
    2. ' ' → logprob: -5.379639625549316
    3. ',' → logprob: -11.379639625549316
    4. '   ' → logprob: -12.754639625549316
    5. '3' → logprob: -13.254639625549316
    6. '  ' → logprob: -13.254639625549316
    7. '    ' → logprob: -15.129639625549316
    8. ')' → logprob: -15.942139625549316
    9. '

' → logprob: -16.004638671875
    10. '     ' → logprob: -16.067138671875

Token 188: ' ou' (ID: 2031)
  Prédit: ' ou'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ou' → logprob: -0.007073147688060999
    2. 'ou' → logprob: -5.132072925567627
    3. ' ' → logprob: -7.757072925567627
    4. ',' → logprob: -7.882072925567627
    5. ' or' → logprob: -8.132073402404785
    6. ' ,' → logprob: -11.507073402404785
    7. ' ' → logprob: -11.757073402404785
    8. '  ' → logprob: -11.757073402404785
    9. ')' → logprob: -11.882073402404785
    10. 'or' → logprob: -12.757073402404785

Token 189: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6362599730491638
    2. '3' → logprob: -0.7612599730491638
    3. ' ou' → logprob: -5.636260032653809
    4. 'ou' → logprob: -9.761260032653809
    5. '  ' → logprob: -10.761260032653809
    6. ' ' → logprob: -12.511260032653809
    7. ' or' → logprob: -13.136260032653809
    8. '   ' → logprob: -14.136260032653809
    9. 'or' → logprob: -14.511260032653809
    10. '```' → logprob: -14.636260032653809

Token 190: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.00023154958034865558
    2. ' ' → logprob: -8.375231742858887
    3. '   ' → logprob: -14.875231742858887
    4. '  ' → logprob: -15.250231742858887
    5. ')' → logprob: -15.500231742858887
    6. '    ' → logprob: -17.37523078918457
    7. '```' → logprob: -17.75023078918457
    8. ' )' → logprob: -18.62523078918457
    9. '
' → logprob: -18.93773078918457
    10. ' ' → logprob: -19.00023078918457

Token 191: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.97024549683556e-05
    2. '")' → logprob: -9.875080108642578
    3. '):' → logprob: -11.375080108642578
    4. ' )' → logprob: -11.375080108642578
    5. '"' → logprob: -12.750080108642578
    6. '')' → logprob: -13.750080108642578
    7. '   ' → logprob: -14.000080108642578
    8. ')")' → logprob: -15.500080108642578
    9. '`)' → logprob: -15.750080108642578
    10. ')
' → logprob: -16.875080108642578

Token 192: ' et' (ID: 859)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014767673797905445
    2. ' )' → logprob: -4.639767646789551
    3. '")' → logprob: -5.389767646789551
    4. '):' → logprob: -8.63976764678955
    5. '"' → logprob: -9.13976764678955
    6. ' ")' → logprob: -9.38976764678955
    7. '   ' → logprob: -10.38976764678955
    8. ' ' → logprob: -11.01476764678955
    9. '')' → logprob: -12.26476764678955
    10. ' ):' → logprob: -12.26476764678955

Token 193: ' différent' (ID: 114823)
  Prédit: ' différent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' différent' → logprob: -0.2870336174964905
    2. ' different' → logprob: -1.7870335578918457
    3. ' distinct' → logprob: -2.9120335578918457
    4. 'diff' → logprob: -4.162033557891846
    5. 'different' → logprob: -4.787033557891846
    6. 'distinct' → logprob: -6.662033557891846
    7. ' diff' → logprob: -6.787033557891846
    8. ' différente' → logprob: -8.412034034729004
    9. ' diferente' → logprob: -8.537034034729004
    10. ' !=' → logprob: -8.662034034729004

Token 194: ' du' (ID: 1462)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.027423549443483353
    2. ' du' → logprob: -3.652423620223999
    3. 'de' → logprob: -7.15242338180542
    4. ' )' → logprob: -8.777423858642578
    5. ')' → logprob: -9.152423858642578
    6. ' ' → logprob: -10.527423858642578
    7. ' from' → logprob: -10.652423858642578
    8. ' ' → logprob: -11.152423858642578
    9. 'du' → logprob: -11.902423858642578
    10. ' des' → logprob: -13.152423858642578

Token 195: ' premier' (ID: 15506)
  Prédit: ' premier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' premier' → logprob: -0.637985348701477
    2. 'prem' → logprob: -0.762985348701477
    3. ' first' → logprob: -5.8879852294921875
    4. 'a' → logprob: -6.3879852294921875
    5. 'first' → logprob: -8.137985229492188
    6. ' a' → logprob: -8.387985229492188
    7. 'pr' → logprob: -8.637985229492188
    8. ' ' → logprob: -9.637985229492188
    9. 'pre' → logprob: -10.637985229492188
    10. 'preced' → logprob: -10.762985229492188

Token 196: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04399671033024788
    2. ' )' → logprob: -3.418996810913086
    3. ' entier' → logprob: -5.418996810913086
    4. 'ent' → logprob: -6.293996810913086
    5. '):' → logprob: -6.293996810913086
    6. '   ' → logprob: -7.418996810913086
    7. '")' → logprob: -7.418996810913086
    8. ' ' → logprob: -7.668996810913086
    9. ' ):' → logprob: -8.918996810913086
    10. '')' → logprob: -9.293996810913086

Token 197: ' :' (ID: 712)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010393376462161541
    2. '")' → logprob: -4.760393142700195
    3. '):' → logprob: -6.510393142700195
    4. ' )' → logprob: -9.010393142700195
    5. '"' → logprob: -9.135393142700195
    6. ':' → logprob: -11.385393142700195
    7. '))' → logprob: -11.635393142700195
    8. ' :' → logprob: -11.885393142700195
    9. '"):' → logprob: -11.885393142700195
    10. '"))' → logprob: -12.010393142700195

Token 198: ' "' (ID: 392)
  Prédit: ' "))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' "))' → logprob: -0.01981966383755207
    2. '"))' → logprob: -4.019819736480713
    3. '"' → logprob: -7.144819736480713
    4. ' "' → logprob: -7.769819736480713
    5. ' "))
' → logprob: -7.894819736480713
    6. ' ))' → logprob: -10.144819259643555
    7. ' ' → logprob: -10.894819259643555
    8. '))' → logprob: -11.144819259643555
    9. ' ' → logprob: -12.019819259643555
    10. '"))
' → logprob: -13.019819259643555

Token 199: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.32844409346580505
    2. ')' → logprob: -1.8284441232681274
    3. '"))' → logprob: -2.203444004058838
    4. '))
' → logprob: -5.453444004058838
    5. ' ))' → logprob: -6.453444004058838
    6. '   ' → logprob: -6.703444004058838
    7. ' "))' → logprob: -7.203444004058838
    8. '"))
' → logprob: -8.078444480895996
    9. ' )' → logprob: -8.453444480895996
    10. '")' → logprob: -8.953444480895996

Token 200: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14638283848762512
    2. 'c' → logprob: -2.2713828086853027
    3. 'missing' → logprob: -4.271382808685303
    4. '
' → logprob: -4.521382808685303
    5. '    
' → logprob: -5.271382808685303
    6. 'print' → logprob: -6.646382808685303
    7. ' missing' → logprob: -7.896382808685303
    8. 'm' → logprob: -8.146383285522461
    9. '#' → logprob: -8.271383285522461
    10. 'result' → logprob: -8.896383285522461

Token 201: ' #' (ID: 1069)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.67510586977005
    2. 'missing' → logprob: -1.3001058101654053
    3. 'print' → logprob: -1.8001058101654053
    4. '#' (adapté à ' #') → logprob: -3.8001058101654053
    5. '   ' → logprob: -4.175106048583984
    6. 'for' → logprob: -5.050106048583984
    7. 'm' → logprob: -5.675106048583984
    8. 'result' → logprob: -6.175106048583984
    9. 'if' → logprob: -6.800106048583984
    10. 's' → logprob: -7.050106048583984

Token 202: ' Vér' (ID: 159169)
  Prédit: 'missing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'missing' → logprob: -0.5256850123405457
    2. 'c' → logprob: -1.7756850719451904
    3. 'man' → logprob: -3.0256850719451904
    4. '#' → logprob: -3.0256850719451904
    5. ' missing' → logprob: -3.1506850719451904
    6. 'ent' → logprob: -3.1506850719451904
    7. 'for' → logprob: -4.275684833526611
    8. 's' → logprob: -4.650684833526611
    9. 'result' → logprob: -5.525684833526611
    10. ' c' → logprob: -5.900684833526611

Token 203: 'ifier' (ID: 4550)
  Prédit: 'ifier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifier' → logprob: -0.3621545135974884
    2. 'ifie' → logprob: -1.487154483795166
    3. 'ifiez' → logprob: -2.987154483795166
    4. '   ' → logprob: -3.987154483795166
    5. 'if' → logprob: -4.862154483795166
    6. 'ifiant' → logprob: -8.112154960632324
    7. 'ifer' → logprob: -8.737154960632324
    8. 'ifiers' → logprob: -8.987154960632324
    9. 'ifi' → logprob: -8.987154960632324
    10. 'ifies' → logprob: -9.362154960632324

Token 204: ' le' (ID: 505)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08766066282987595
    2. ' if' → logprob: -3.837660551071167
    3. '  ' → logprob: -3.962660551071167
    4. ' ' → logprob: -4.212660789489746
    5. '    ' → logprob: -4.462660789489746
    6. '<|end|>' → logprob: -5.212660789489746
    7. 's' → logprob: -5.712660789489746
    8. '    
' → logprob: -6.212660789489746
    9. 'if' → logprob: -6.212660789489746
    10. ' les' → logprob: -7.462660789489746

Token 205: ' couple' (ID: 7167)
  Prédit: ' missing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' missing' → logprob: -0.8662523627281189
    2. 'c' → logprob: -1.8662524223327637
    3. ' if' → logprob: -2.3662524223327637
    4. 's' → logprob: -2.4912524223327637
    5. 'missing' → logprob: -2.6162524223327637
    6. '#' → logprob: -3.1162524223327637
    7. 'if' → logprob: -3.1162524223327637
    8. ' c' → logprob: -3.9912524223327637
    9. ' #' → logprob: -3.9912524223327637
    10. ' set' → logprob: -5.116252422332764

Token 206: ' d' (ID: 272)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.0750932693481445
    2. ' (' → logprob: -1.2000932693481445
    3. ' if' → logprob: -1.8250932693481445
    4. 'a' → logprob: -3.3250932693481445
    5. '(a' → logprob: -3.4500932693481445
    6. ' des' → logprob: -3.9500932693481445
    7. '   ' → logprob: -4.0750932693481445
    8. ' man' → logprob: -4.0750932693481445
    9. 'if' → logprob: -4.3250932693481445
    10. '(' → logprob: -4.3250932693481445

Token 207: ''' (ID: 6)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.9367005825042725
    2. 'a' → logprob: -1.1867005825042725
    3. ' a' → logprob: -1.8117005825042725
    4. ' (' → logprob: -2.1867005825042725
    5. ' ' → logprob: -4.811700820922852
    6. 's' → logprob: -5.311700820922852
    7. '(' → logprob: -6.061700820922852
    8. '   ' → logprob: -6.311700820922852
    9. 'ent' → logprob: -6.436700820922852
    10. '[a' → logprob: -6.811700820922852

Token 208: 'entr' (ID: 12792)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.7486249208450317
    2. 'a' → logprob: -0.9986249208450317
    3. 'val' → logprob: -2.248624801635742
    4. '(a' → logprob: -4.123624801635742
    5. ' a' → logprob: -4.623624801635742
    6. 'inte' → logprob: -5.123624801635742
    7. ' valeurs' → logprob: -5.123624801635742
    8. 'entr' → logprob: -5.748624801635742
    9. 'n' → logprob: -6.248624801635742
    10. '[a' → logprob: -6.748624801635742

Token 209: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.21023029088974
    2. 'ée' → logprob: -1.8352303504943848
    3. 'é' → logprob: -4.710230350494385
    4. 'e' → logprob: -4.835230350494385
    5. 'és' → logprob: -5.085230350494385
    6. 'es' → logprob: -5.460230350494385
    7. 'ete' → logprob: -6.835230350494385
    8. '   ' → logprob: -7.835230350494385
    9. 'a' → logprob: -8.210229873657227
    10. 'et' → logprob: -8.335229873657227

Token 210: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4871995449066162
    2. '    
' → logprob: -0.9871995449066162
    3. '
' → logprob: -5.237199783325195
    4. '   
' → logprob: -5.737199783325195
    5. '    ' → logprob: -6.112199783325195
    6. '    
    
' → logprob: -7.612199783325195
    7. '     
' → logprob: -7.987199783325195
    8. ',' → logprob: -8.487199783325195
    9. '  ' → logprob: -8.737199783325195
    10. '    

' → logprob: -8.737199783325195

Token 211: ' afficher' (ID: 146524)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.18545398116111755
    2. 'im' → logprob: -3.0604538917541504
    3. '   ' → logprob: -3.4354538917541504
    4. ' print' → logprob: -3.6854538917541504
    5. 'aff' → logprob: -3.9354538917541504
    6. ' impr' → logprob: -4.06045389175415
    7. ' déterminer' → logprob: -5.06045389175415
    8. 'if' → logprob: -5.81045389175415
    9. 'return' → logprob: -5.81045389175415
    10. ' afficher' → logprob: -6.06045389175415

Token 212: ' la' (ID: 557)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.020569561049342155
    2. '("' → logprob: -4.770569324493408
    3. 'le' → logprob: -5.520569324493408
    4. ' ' → logprob: -6.645569324493408
    5. ' le' → logprob: -6.645569324493408
    6. 'l' → logprob: -6.645569324493408
    7. '3' → logprob: -6.770569324493408
    8. '(
' → logprob: -7.145569324493408
    9. ' l' → logprob: -7.770569324493408
    10. '   ' → logprob: -8.145569801330566

Token 213: ' valeur' (ID: 41664)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.34333229064941406
    2. 'missing' → logprob: -2.343332290649414
    3. 'ent' → logprob: -3.093332290649414
    4. 'print' → logprob: -3.468332290649414
    5. 'man' → logprob: -3.593332290649414
    6. ' missing' → logprob: -3.843332290649414
    7. 'result' → logprob: -4.343332290649414
    8. '   ' → logprob: -4.468332290649414
    9. 'val' → logprob: -4.968332290649414
    10. '1' → logprob: -5.093332290649414

Token 214: ' man' (ID: 873)
  Prédit: ' man'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' man' → logprob: -0.0966973528265953
    2. 'man' → logprob: -2.4716973304748535
    3. ' abs' → logprob: -5.9716973304748535
    4. ' missing' → logprob: -6.0966973304748535
    5. '   ' → logprob: -7.0966973304748535
    6. ' qui' → logprob: -7.7216973304748535
    7. ' manc' → logprob: -7.7216973304748535
    8. '_man' → logprob: -8.221697807312012
    9. 'abs' → logprob: -8.221697807312012
    10. ' ' → logprob: -8.971697807312012

Token 215: 'qu' (ID: 351)
  Prédit: 'qu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qu' → logprob: -0.0006091519608162344
    2. 'quant' → logprob: -8.750609397888184
    3. 'que' → logprob: -9.000609397888184
    4. 'q' → logprob: -9.125609397888184
    5. '   ' → logprob: -9.625609397888184
    6. '
' → logprob: -10.875609397888184
    7. 'quée' → logprob: -11.000609397888184
    8. 'ante' → logprob: -11.000609397888184
    9. 'in' → logprob: -11.125609397888184
    10. 'a' → logprob: -11.125609397888184

Token 216: 'ante' (ID: 2116)
  Prédit: 'ante'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ante' → logprob: -0.12250225245952606
    2. 'ée' → logprob: -2.247502326965332
    3. '   ' → logprob: -5.122502326965332
    4. ' ' → logprob: -7.497502326965332
    5. 'ant' → logprob: -7.497502326965332
    6. 'é' → logprob: -7.497502326965332
    7. 'a' → logprob: -7.872502326965332
    8. ' ante' → logprob: -7.872502326965332
    9. 'antee' → logprob: -8.747502326965332
    10. 'e' → logprob: -8.747502326965332

Token 217: ' parmi' (ID: 51713)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28005075454711914
    2. '
' → logprob: -1.5300507545471191
    3. '    
' → logprob: -3.655050754547119
    4. '   
' → logprob: -7.655050754547119
    5. 'missing' → logprob: -7.780050754547119
    6. ' missing' → logprob: -8.530050277709961
    7. 'c' → logprob: -9.030050277709961
    8. 'if' → logprob: -9.280050277709961
    9. ' 
' → logprob: -9.530050277709961
    10. '     
' → logprob: -9.780050277709961

Token 218: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.32994702458381653
    2. '1' → logprob: -1.5799469947814941
    3. '[' → logprob: -3.079946994781494
    4. ' {' → logprob: -3.704946994781494
    5. '(' → logprob: -6.079946994781494
    6. ' [' → logprob: -7.079946994781494
    7. ' ' → logprob: -7.204946994781494
    8. '   ' → logprob: -7.704946994781494
    9. '3' → logprob: -9.329947471618652
    10. ' (' → logprob: -10.204947471618652

Token 219: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0090896962210536
    2. ' ' → logprob: -4.884089469909668
    3. '{' → logprob: -6.634089469909668
    4. ' {' → logprob: -8.884089469909668
    5. '   ' → logprob: -10.759089469909668
    6. '  ' → logprob: -12.259089469909668
    7. '```' → logprob: -14.134089469909668
    8. '}' → logprob: -14.509089469909668
    9. ' ' → logprob: -14.634089469909668
    10. '`' → logprob: -14.634089469909668

Token 220: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0052912733517587185
    2. ' ,' → logprob: -5.25529146194458
    3. '1' → logprob: -11.005290985107422
    4. '   ' → logprob: -11.505290985107422
    5. ',
' → logprob: -11.630290985107422
    6. '3' → logprob: -11.755290985107422
    7. ' ' → logprob: -12.005290985107422
    8. '2' → logprob: -12.255290985107422
    9. ',

' → logprob: -13.755290985107422
    10. '  ' → logprob: -14.130290985107422

Token 221: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6330140233039856
    2. '2' → logprob: -0.7580140233039856
    3. ',' → logprob: -8.008013725280762
    4. ' ,' → logprob: -10.633013725280762
    5. '   ' → logprob: -10.758013725280762
    6. '  ' → logprob: -10.883013725280762
    7. '3' → logprob: -11.883013725280762
    8. ' ' → logprob: -12.508013725280762
    9. '1' → logprob: -13.383013725280762
    10. '    ' → logprob: -13.508013725280762

Token 222: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.016280220821499825
    2. ' ' → logprob: -4.141280174255371
    3. ',' → logprob: -8.766280174255371
    4. '1' → logprob: -10.266280174255371
    5. '3' → logprob: -10.641280174255371
    6. '   ' → logprob: -10.766280174255371
    7. '  ' → logprob: -12.266280174255371
    8. '{' → logprob: -12.766280174255371
    9. '```' → logprob: -14.641280174255371
    10. '    ' → logprob: -14.766280174255371

Token 223: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0019894209690392017
    2. ' ,' → logprob: -6.376989364624023
    3. '3' → logprob: -8.251989364624023
    4. ' ' → logprob: -11.626989364624023
    5. 'et' → logprob: -11.876989364624023
    6. '}' → logprob: -12.251989364624023
    7. '   ' → logprob: -13.001989364624023
    8. ' et' → logprob: -13.001989364624023
    9. '  ' → logprob: -15.251989364624023
    10. ',
' → logprob: -15.751989364624023

Token 224: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.25206640362739563
    2. ' ' → logprob: -1.5020663738250732
    3. ',' → logprob: -9.252066612243652
    4. '   ' → logprob: -10.502066612243652
    5. '  ' → logprob: -12.252066612243652
    6. ' ,' → logprob: -12.627066612243652
    7. '    ' → logprob: -13.252066612243652
    8. '}' → logprob: -13.627066612243652
    9. ' ' → logprob: -14.002066612243652
    10. '```' → logprob: -14.502066612243652

Token 225: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.007610651198774576
    2. ' ' → logprob: -4.88261079788208
    3. '   ' → logprob: -12.882610321044922
    4. '```' → logprob: -13.882610321044922
    5. '}' → logprob: -15.007610321044922
    6. '  ' → logprob: -15.132610321044922
    7. ',' → logprob: -16.257610321044922
    8. ' ' → logprob: -16.507610321044922
    9. '    ' → logprob: -16.570110321044922
    10. '`' → logprob: -17.695110321044922

Token 226: '}
' (ID: 739)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.11679841578006744
    2. ' }' → logprob: -2.3667984008789062
    3. '   ' → logprob: -4.491798400878906
    4. '}
' → logprob: -5.991798400878906
    5. ' }
' → logprob: -6.741798400878906
    6. '}")' → logprob: -6.741798400878906
    7. ' ' → logprob: -9.491798400878906
    8. '})' → logprob: -9.866798400878906
    9. '}")
' → logprob: -9.866798400878906
    10. ' })' → logprob: -10.241798400878906

Token 227: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.025749413296580315
    2. '   ' → logprob: -4.400749206542969
    3. '    
' → logprob: -4.400749206542969
    4. '   
' → logprob: -8.025749206542969
    5. ' 
' → logprob: -8.400749206542969
    6. '  
' → logprob: -8.775749206542969
    7. '     
' → logprob: -10.150749206542969
    8. '
' → logprob: -10.650749206542969
    9. 'missing' → logprob: -10.650749206542969
    10. '
    
' → logprob: -10.775749206542969

Token 228: ' if' (ID: 538)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.2657313346862793
    2. 'for' → logprob: -1.5157313346862793
    3. '   ' → logprob: -2.0157313346862793
    4. ' missing' → logprob: -2.0157313346862793
    5. 'missing' → logprob: -2.3907313346862793
    6. 'c' → logprob: -3.5157313346862793
    7. 'print' → logprob: -3.5157313346862793
    8. ' print' → logprob: -4.015731334686279
    9. 'man' → logprob: -4.140731334686279
    10. ' man' → logprob: -4.515731334686279

Token 229: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.5583789348602295
    2. ' (' → logprob: -1.5583789348602295
    3. 'a' → logprob: -1.6833789348602295
    4. ' {' → logprob: -4.058379173278809
    5. '(a' → logprob: -4.933379173278809
    6. '{' → logprob: -5.683379173278809
    7. ' ' → logprob: -6.183379173278809
    8. '(' → logprob: -6.933379173278809
    9. '   ' → logprob: -8.058379173278809
    10. '1' → logprob: -8.683379173278809

Token 230: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.27975594997406006
    2. ' ' → logprob: -1.65475594997406
    3. '==' → logprob: -3.0297560691833496
    4. ' !=' → logprob: -5.52975606918335
    5. '!=' → logprob: -8.654755592346191
    6. ' ,' → logprob: -9.029755592346191
    7. '  ' → logprob: -9.404755592346191
    8. '=' → logprob: -9.904755592346191
    9. ',' → logprob: -10.654755592346191
    10. ' =' → logprob: -10.779755592346191

Token 231: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0031929241959005594
    2. ' ' → logprob: -5.753192901611328
    3. 'b' → logprob: -11.128192901611328
    4. '2' → logprob: -15.378192901611328
    5. '   ' → logprob: -16.128192901611328
    6. ' b' → logprob: -16.253192901611328
    7. '  ' → logprob: -17.128192901611328
    8. '3' → logprob: -17.128192901611328
    9. '```' → logprob: -18.753192901611328
    10. '１' → logprob: -19.128192901611328

Token 232: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0014816515613347292
    2. ' ' → logprob: -7.001481533050537
    3. 'b' → logprob: -7.501481533050537
    4. '2' → logprob: -11.376482009887695
    5. ' b' → logprob: -12.501482009887695
    6. '3' → logprob: -13.376482009887695
    7. '   ' → logprob: -14.626482009887695
    8. '  ' → logprob: -14.876482009887695
    9. '```' → logprob: -15.626482009887695
    10. '
' → logprob: -17.376482009887695

Token 233: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.02362138405442238
    2. 'and' → logprob: -3.7736213207244873
    3. '   ' → logprob: -8.398621559143066
    4. ' ' → logprob: -9.523621559143066
    5. ':' → logprob: -9.648621559143066
    6. ' or' → logprob: -11.898621559143066
    7. ' :' → logprob: -13.273621559143066
    8. '    ' → logprob: -13.523621559143066
    9. ':
' → logprob: -14.148621559143066
    10. '  ' → logprob: -14.523621559143066

Token 234: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.006740357726812363
    2. 'b' → logprob: -5.006740570068359
    3. ' ' → logprob: -10.63174057006836
    4. '   ' → logprob: -14.63174057006836
    5. '  ' → logprob: -15.25674057006836
    6. '	b' → logprob: -16.00674057006836
    7. '    ' → logprob: -17.25674057006836
    8. '2' → logprob: -17.25674057006836
    9. ' ' → logprob: -17.75674057006836
    10. ' a' → logprob: -18.88174057006836

Token 235: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.050286535173654556
    2. '==' → logprob: -3.0502865314483643
    3. ' ' → logprob: -6.425286769866943
    4. ' !=' → logprob: -9.800286293029785
    5. '  ' → logprob: -11.675286293029785
    6. ' ' → logprob: -12.175286293029785
    7. '<|end|>' → logprob: -13.425286293029785
    8. '!=' → logprob: -13.550286293029785
    9. ')' → logprob: -13.925286293029785
    10. '=' → logprob: -14.300286293029785

Token 236: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5232240557670593
    2. '2' → logprob: -0.8982240557670593
    3. '1' → logprob: -9.648223876953125
    4. '3' → logprob: -10.273223876953125
    5. '  ' → logprob: -13.898223876953125
    6. '   ' → logprob: -15.773223876953125
    7. '<|end|>' → logprob: -15.898223876953125
    8. '```' → logprob: -16.398223876953125
    9. '    ' → logprob: -16.523223876953125
    10. ' ' → logprob: -16.773223876953125

Token 237: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.1798418164253235
    2. ' ' → logprob: -1.8048417568206787
    3. '3' → logprob: -9.304841995239258
    4. '  ' → logprob: -12.679841995239258
    5. '1' → logprob: -13.929841995239258
    6. '   ' → logprob: -14.179841995239258
    7. '<|end|>' → logprob: -15.179841995239258
    8. '```' → logprob: -15.742341995239258
    9. '۲' → logprob: -15.992341995239258
    10. '    ' → logprob: -16.117341995239258

Token 238: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.38707709312438965
    2. ':
' → logprob: -1.1370770931243896
    3. ' :
' → logprob: -8.887077331542969
    4. ' :' → logprob: -9.887077331542969
    5. ':
' → logprob: -11.762077331542969
    6. '   ' → logprob: -12.137077331542969
    7. '):
' → logprob: -13.012077331542969
    8. ':

' → logprob: -14.262077331542969
    9. ' or' → logprob: -14.762077331542969
    10. ':\' → logprob: -15.637077331542969

Token 239: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.17855751514434814
    2. '       ' → logprob: -2.1785573959350586
    3. ':
' → logprob: -3.6785573959350586
    4. ' :' → logprob: -4.428557395935059
    5. '   ' → logprob: -4.678557395935059
    6. ' :
' → logprob: -5.803557395935059
    7. '    ' → logprob: -7.678557395935059
    8. '3' → logprob: -8.928557395935059
    9. '
' → logprob: -10.178557395935059
    10. '):' → logprob: -10.928557395935059

Token 240: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.21416354179382324
    2. 'print' (adapté à ' print') → logprob: -1.7141635417938232
    3. '       ' → logprob: -4.464163780212402
    4. '   ' → logprob: -6.839163780212402
    5. '    ' → logprob: -9.839163780212402
    6. '
' → logprob: -11.089163780212402
    7. '3' → logprob: -11.714163780212402
    8. '	print' → logprob: -13.214163780212402
    9. ' ' → logprob: -14.214163780212402
    10. '.print' → logprob: -14.464163780212402

Token 241: '('' (ID: 706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -7.469590491382405e-05
    2. '("' → logprob: -9.87507438659668
    3. '3' → logprob: -11.12507438659668
    4. ' (' → logprob: -11.75007438659668
    5. '('' → logprob: -15.25007438659668
    6. '(
' → logprob: -16.62507438659668
    7. '"' → logprob: -17.00007438659668
    8. '   ' → logprob: -17.37507438659668
    9. ' ' → logprob: -17.75007438659668
    10. '()' → logprob: -18.12507438659668

Token 242: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.00017970333283301443
    2. ' ' → logprob: -8.625179290771484
    3. '   ' → logprob: -16.375179290771484
    4. '')' → logprob: -18.000179290771484
    5. '۳' → logprob: -19.375179290771484
    6. '```' → logprob: -19.500179290771484
    7. '  ' → logprob: -19.625179290771484
    8. '３' → logprob: -19.625179290771484
    9. ''' → logprob: -20.125179290771484
    10. '''' → logprob: -20.562679290771484

Token 243: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.04864697903394699
    2. '')
' → logprob: -3.048646926879883
    3. '')
' → logprob: -10.298646926879883
    4. ''' → logprob: -10.673646926879883
    5. ')' → logprob: -13.923646926879883
    6. '")' → logprob: -14.298646926879883
    7. '')

' → logprob: -14.673646926879883
    8. '3' → logprob: -15.673646926879883
    9. '   ' → logprob: -15.798646926879883
    10. ' ')' → logprob: -15.923646926879883

Token 244: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00018113377154804766
    2. 'elif' → logprob: -9.000181198120117
    3. '    
' → logprob: -10.375181198120117
    4. ' elif' → logprob: -10.750181198120117
    5. '
' → logprob: -13.125181198120117
    6. '	elif' → logprob: -14.125181198120117
    7. ')' → logprob: -14.875181198120117
    8. '   
' → logprob: -14.875181198120117
    9. '```' → logprob: -15.375181198120117
    10. '  ' → logprob: -15.500181198120117

Token 245: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.4296635091304779
    2. '   ' → logprob: -1.1796635389328003
    3. ' elif' → logprob: -3.1796634197235107
    4. 'else' → logprob: -9.42966365814209
    5. ' ' → logprob: -9.55466365814209
    6. '	elif' → logprob: -9.92966365814209
    7. '    
' → logprob: -10.42966365814209
    8. '
' → logprob: -10.80466365814209
    9. ' else' → logprob: -11.30466365814209
    10. '\n' → logprob: -11.80466365814209

Token 246: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.0007723436574451625
    2. 'a' → logprob: -7.250772476196289
    3. ' ' → logprob: -9.750772476196289
    4. ' ' → logprob: -12.625772476196289
    5. ' (' → logprob: -14.875772476196289
    6. '	a' → logprob: -15.750772476196289
    7. '    ' → logprob: -16.00077247619629
    8. '   ' → logprob: -16.50077247619629
    9. '  ' → logprob: -17.25077247619629
    10. '(a' → logprob: -17.75077247619629

Token 247: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.0017445581033825874
    2. '==' → logprob: -6.376744747161865
    3. ' ' → logprob: -10.126744270324707
    4. ' ' → logprob: -13.251744270324707
    5. ' =' → logprob: -15.751744270324707
    6. '=' → logprob: -16.126745223999023
    7. ' ===' → logprob: -16.626745223999023
    8. ' =="' → logprob: -17.126745223999023
    9. '  ' → logprob: -17.376745223999023
    10. ' ==
' → logprob: -17.501745223999023

Token 248: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04862312972545624
    2. ' ' → logprob: -3.0486230850219727
    3. '3' → logprob: -10.423623085021973
    4. '2' → logprob: -12.423623085021973
    5. '  ' → logprob: -14.486123085021973
    6. '   ' → logprob: -14.611123085021973
    7. '<|end|>' → logprob: -15.361123085021973
    8. '[' → logprob: -16.61112403869629
    9. '１' → logprob: -16.61112403869629
    10. '(' → logprob: -16.67362403869629

Token 249: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003633521846495569
    2. ' ' → logprob: -8.12536334991455
    3. '3' → logprob: -9.87536334991455
    4. '2' → logprob: -11.12536334991455
    5. '   ' → logprob: -14.75036334991455
    6. '  ' → logprob: -15.00036334991455
    7. '[' → logprob: -16.875364303588867
    8. '```' → logprob: -17.437864303588867
    9. '１' → logprob: -17.562864303588867
    10. '۱' → logprob: -17.937864303588867

Token 250: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0013534489553421736
    2. 'and' → logprob: -6.6263532638549805
    3. ' ' → logprob: -10.62635326385498
    4. ' et' → logprob: -12.75135326385498
    5. ' ' → logprob: -15.75135326385498
    6. '   ' → logprob: -16.501354217529297
    7. ' и' → logprob: -16.751354217529297
    8. ' or' → logprob: -17.251354217529297
    9. ' ==' → logprob: -17.751354217529297
    10. ' &&' → logprob: -17.751354217529297

Token 251: ' b' (ID: 287)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.514323890209198
    2. ' b' → logprob: -1.0143239498138428
    3. '3' → logprob: -3.5143239498138428
    4. 'b' → logprob: -4.639323711395264
    5. '   ' → logprob: -11.889324188232422
    6. '    ' → logprob: -12.514324188232422
    7. '  ' → logprob: -13.139324188232422
    8. ' ' → logprob: -13.514324188232422
    9. '2' → logprob: -14.389324188232422
    10. ''' → logprob: -15.639324188232422

Token 252: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.020551813766360283
    2. '==' → logprob: -3.895551919937134
    3. ' ' → logprob: -12.145551681518555
    4. '=' → logprob: -13.270551681518555
    5. ' =' → logprob: -13.645551681518555
    6. ' ==
' → logprob: -14.645551681518555
    7. ' ===' → logprob: -15.020551681518555
    8. ' ' → logprob: -15.145551681518555
    9. '  ' → logprob: -15.770551681518555
    10. '===' → logprob: -16.395551681518555

Token 253: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.054883070290088654
    2. ' ' → logprob: -2.9298830032348633
    3. '   ' → logprob: -14.554883003234863
    4. '  ' → logprob: -16.42988395690918
    5. '۳' → logprob: -16.55488395690918
    6. ' ' → logprob: -16.99238395690918
    7. '```' → logprob: -17.24238395690918
    8. '    ' → logprob: -17.36738395690918
    9. '３' → logprob: -17.74238395690918
    10. '1' → logprob: -17.86738395690918

Token 254: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.25001335144043
    3. '۳' → logprob: -18.12501335144043
    4. '৩' → logprob: -18.62501335144043
    5. '   ' → logprob: -18.62501335144043
    6. '３' → logprob: -19.12501335144043
    7. '३' → logprob: -19.62501335144043
    8. '  ' → logprob: -19.81251335144043
    9. '```' → logprob: -19.93751335144043
    10. '<|end|>' → logprob: -20.25001335144043

Token 255: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.018189162015914917
    2. ':
' → logprob: -4.018188953399658
    3. '   ' → logprob: -10.768189430236816
    4. '       ' → logprob: -11.393189430236816
    5. ' :' → logprob: -12.143189430236816
    6. ' :
' → logprob: -14.518189430236816
    7. ':

' → logprob: -14.768189430236816
    8. ':
' → logprob: -15.018189430236816
    9. ' or' → logprob: -16.0181884765625
    10. '):' → logprob: -16.1431884765625

Token 256: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001317977556027472
    2. ':' → logprob: -6.751317977905273
    3. ':
' → logprob: -9.376317977905273
    4. 'print' → logprob: -10.251317977905273
    5. '   ' → logprob: -11.251317977905273
    6. ' print' → logprob: -12.001317977905273
    7. ' :' → logprob: -12.876317977905273
    8. '     ' → logprob: -13.751317977905273
    9. '      ' → logprob: -13.751317977905273
    10. '    ' → logprob: -14.126317977905273

Token 257: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.2564798891544342
    2. ' print' → logprob: -1.5064798593521118
    3. ''' → logprob: -6.131479740142822
    4. '   ' → logprob: -6.381479740142822
    5. '       ' → logprob: -7.381479740142822
    6. ' ' → logprob: -11.00648021697998
    7. ' '' → logprob: -11.63148021697998
    8. '3' → logprob: -12.38148021697998
    9. '('' → logprob: -12.50648021697998
    10. '	print' → logprob: -12.63148021697998

Token 258: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -7.584239938296378e-06
    2. '(' → logprob: -11.875007629394531
    3. ''' → logprob: -15.125007629394531
    4. ' ('' → logprob: -16.12500762939453
    5. '("' → logprob: -16.25000762939453
    6. '3' → logprob: -17.87500762939453
    7. '   ' → logprob: -18.50000762939453
    8. '2' → logprob: -19.37500762939453
    9. '(('' → logprob: -19.37500762939453
    10. '(
' → logprob: -19.62500762939453

Token 259: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.056669361889362335
    2. ''' → logprob: -3.1816694736480713
    3. ' ' → logprob: -4.306669235229492
    4. ' '' → logprob: -9.306669235229492
    5. '   ' → logprob: -11.931669235229492
    6. '"' → logprob: -14.931669235229492
    7. '  ' → logprob: -15.306669235229492
    8. '       ' → logprob: -15.556669235229492
    9. '')' → logprob: -16.181669235229492
    10. '    ' → logprob: -16.306669235229492

Token 260: '')
' (ID: 2515)
  Prédit: '')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')
' → logprob: -0.31367599964141846
    2. '')' → logprob: -1.3136759996414185
    3. '   ' → logprob: -7.813675880432129
    4. ''' → logprob: -12.438675880432129
    5. '')
' → logprob: -12.813675880432129
    6. ' ')
' → logprob: -13.688675880432129
    7. '')

' → logprob: -13.813675880432129
    8. ')' → logprob: -15.313675880432129
    9. '")
' → logprob: -15.313675880432129
    10. ')
' → logprob: -15.688675880432129

Token 261: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001088543445803225
    2. 'elif' → logprob: -6.876088619232178
    3. ' elif' → logprob: -9.87608814239502
    4. '    
' → logprob: -12.87608814239502
    5. '	elif' → logprob: -13.75108814239502
    6. '```' → logprob: -15.62608814239502
    7. 'else' → logprob: -15.75108814239502
    8. '   ' → logprob: -16.126089096069336
    9. '  ' → logprob: -17.376089096069336
    10. '
' → logprob: -17.376089096069336

Token 262: ' elif' (ID: 9497)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3149063289165497
    2. 'elif' (adapté à ' elif') → logprob: -1.314906358718872
    3. ' elif' → logprob: -6.439906120300293
    4. 'else' → logprob: -10.439906120300293
    5. '	elif' → logprob: -11.939906120300293
    6. 'el' → logprob: -12.314906120300293
    7. '    
' → logprob: -12.564906120300293
    8. '```' → logprob: -13.939906120300293
    9. ' else' → logprob: -14.439906120300293
    10. '   ' → logprob: -15.064906120300293

Token 263: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.12699918448925018
    2. 'a' → logprob: -2.1269991397857666
    3. ' ' → logprob: -10.251998901367188
    4. '    ' → logprob: -11.251998901367188
    5. '   ' → logprob: -11.251998901367188
    6. ' b' → logprob: -12.876998901367188
    7. 'b' → logprob: -13.001998901367188
    8. ' (' → logprob: -13.501998901367188
    9. '1' → logprob: -13.626998901367188
    10. '(a' → logprob: -13.751998901367188

Token 264: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.006036515813320875
    2. '==' → logprob: -5.131036281585693
    3. ' ' → logprob: -9.381036758422852
    4. ' =' → logprob: -11.631036758422852
    5. '=' → logprob: -11.881036758422852
    6. ' ===' → logprob: -13.256036758422852
    7. '2' → logprob: -14.131036758422852
    8. ')' → logprob: -14.256036758422852
    9. ' ==
' → logprob: -14.381036758422852
    10. '   ' → logprob: -14.631036758422852

Token 265: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.06197462975978851
    2. ' ' → logprob: -2.81197452545166
    3. '3' → logprob: -13.31197452545166
    4. '  ' → logprob: -13.62447452545166
    5. '   ' → logprob: -13.62447452545166
    6. '1' → logprob: -14.43697452545166
    7. 'def' → logprob: -15.24947452545166
    8. '    ' → logprob: -15.37447452545166
    9. '(' → logprob: -15.43697452545166
    10. '```' → logprob: -15.43697452545166

Token 266: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0004905993700958788
    2. ' ' → logprob: -7.625490665435791
    3. '3' → logprob: -13.375490188598633
    4. '   ' → logprob: -14.625490188598633
    5. '  ' → logprob: -15.000490188598633
    6. 'def' → logprob: -16.875490188598633
    7. '1' → logprob: -16.937990188598633
    8. '２' → logprob: -17.125490188598633
    9. '```' → logprob: -17.500490188598633
    10. '۲' → logprob: -17.562990188598633

Token 267: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.011230312287807465
    2. 'and' → logprob: -4.51123046875
    3. ' ==' → logprob: -8.88623046875
    4. ' ' → logprob: -10.51123046875
    5. '==' → logprob: -11.01123046875
    6. '   ' → logprob: -15.63623046875
    7. ' ' → logprob: -16.38623046875
    8. ' a' → logprob: -16.88623046875
    9. ' &&' → logprob: -17.51123046875
    10. '	and' → logprob: -17.63623046875

Token 268: ' b' (ID: 287)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5453735589981079
    2. ' ' → logprob: -1.295373558998108
    3. '3' → logprob: -1.920373558998108
    4. '   ' → logprob: -11.295373916625977
    5. 'b' → logprob: -12.295373916625977
    6. '  ' → logprob: -12.795373916625977
    7. ' b' → logprob: -13.420373916625977
    8. 'a' → logprob: -13.920373916625977
    9. 'and' → logprob: -13.920373916625977
    10. ' ' → logprob: -14.295373916625977

Token 269: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.12707625329494476
    2. '==' → logprob: -2.1270761489868164
    3. ' ' → logprob: -9.127076148986816
    4. '=' → logprob: -11.002076148986816
    5. '3' → logprob: -11.127076148986816
    6. 'and' → logprob: -13.127076148986816
    7. '1' → logprob: -13.627076148986816
    8. ' =' → logprob: -14.002076148986816
    9. ' and' → logprob: -14.002076148986816
    10. '==
' → logprob: -14.002076148986816

Token 270: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.48292747139930725
    2. '3' → logprob: -0.9829274415969849
    3. ' ' → logprob: -4.732927322387695
    4. '   ' → logprob: -12.232927322387695
    5. '  ' → logprob: -12.357927322387695
    6. '<|end|>' → logprob: -15.357927322387695
    7. '```' → logprob: -16.107927322387695
    8. '[' → logprob: -16.170427322387695
    9. '۳' → logprob: -16.232927322387695
    10. 'import' → logprob: -16.295427322387695

Token 271: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.00011510594777064398
    2. '1' → logprob: -9.125115394592285
    3. ' ' → logprob: -12.000115394592285
    4. '۳' → logprob: -18.00011444091797
    5. '   ' → logprob: -18.62511444091797
    6. '３' → logprob: -19.00011444091797
    7. '<|end|>' → logprob: -19.00011444091797
    8. '  ' → logprob: -19.37511444091797
    9. '৩' → logprob: -19.43761444091797
    10. 'three' → logprob: -19.75011444091797

Token 272: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6932201385498047
    2. ':
' → logprob: -0.6932201385498047
    3. '       ' → logprob: -10.068220138549805
    4. '   ' → logprob: -10.568220138549805
    5. ':
' → logprob: -12.943220138549805
    6. ':

' → logprob: -13.943220138549805
    7. ' :
' → logprob: -14.318220138549805
    8. '):
' → logprob: -14.318220138549805
    9. ' :' → logprob: -16.443220138549805
    10. '():
' → logprob: -17.193220138549805

Token 273: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001354824344161898
    2. 'print' → logprob: -9.12513542175293
    3. '   ' → logprob: -10.87513542175293
    4. ' print' → logprob: -12.12513542175293
    5. '      ' → logprob: -14.62513542175293
    6. ':' → logprob: -14.87513542175293
    7. '           ' → logprob: -14.87513542175293
    8. '	' → logprob: -15.37513542175293
    9. '    ' → logprob: -15.62513542175293
    10. '     ' → logprob: -15.87513542175293

Token 274: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0193939171731472
    2. ' print' → logprob: -4.2693939208984375
    3. '   ' → logprob: -5.2693939208984375
    4. '       ' → logprob: -9.769393920898438
    5. '	print' → logprob: -11.519393920898438
    6. ' ' → logprob: -13.894393920898438
    7. '  ' → logprob: -14.144393920898438
    8. '    ' → logprob: -14.394393920898438
    9. '3' → logprob: -16.019393920898438
    10. '.print' → logprob: -16.144393920898438

Token 275: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -2.129266067640856e-05
    2. '(' → logprob: -11.375020980834961
    3. ''' → logprob: -12.000020980834961
    4. 'print' → logprob: -12.625020980834961
    5. '   ' → logprob: -15.875020980834961
    6. '("' → logprob: -16.12502098083496
    7. ' ('' → logprob: -17.62502098083496
    8. ''s' → logprob: -17.75002098083496
    9. '1' → logprob: -18.00002098083496
    10. '(
' → logprob: -18.62502098083496

Token 276: '1' (ID: 16)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.38736140727996826
    2. '1' → logprob: -1.1373614072799683
    3. 'print' → logprob: -7.637361526489258
    4. '   ' → logprob: -12.137361526489258
    5. ' '' → logprob: -13.637361526489258
    6. '('' → logprob: -13.887361526489258
    7. '"' → logprob: -14.762361526489258
    8. ' ' → logprob: -15.762361526489258
    9. '`' → logprob: -16.512361526489258
    10. ' print' → logprob: -17.387361526489258

Token 277: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.20265035331249237
    2. '')
' → logprob: -1.7026503086090088
    3. '   ' → logprob: -6.827650547027588
    4. ')' → logprob: -9.32765007019043
    5. ''' → logprob: -10.32765007019043
    6. ')
' → logprob: -11.20265007019043
    7. '')
' → logprob: -12.32765007019043
    8. '')

' → logprob: -12.70265007019043
    9. '")' → logprob: -13.45265007019043
    10. '()' → logprob: -14.07765007019043

Token 278: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1604219377040863
    2. 'else' → logprob: -2.160421848297119
    3. ' else' → logprob: -3.785421848297119
    4. 'elif' → logprob: -4.785421848297119
    5. ' elif' → logprob: -6.285421848297119
    6. '	else' → logprob: -11.410422325134277
    7. '	elif' → logprob: -11.785422325134277
    8. '_else' → logprob: -13.535422325134277
    9. ' ' → logprob: -13.910422325134277
    10. '    ' → logprob: -13.910422325134277

Token 279: ' elif' (ID: 9497)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26572421193122864
    2. 'else' → logprob: -1.8907241821289062
    3. 'elif' (adapté à ' elif') → logprob: -2.7657241821289062
    4. ' else' → logprob: -4.515724182128906
    5. ' elif' → logprob: -4.765724182128906
    6. '	elif' → logprob: -13.265724182128906
    7. ' ' → logprob: -14.640724182128906
    8. '	else' → logprob: -14.640724182128906
    9. '    ' → logprob: -15.015724182128906
    10. 'elseif' → logprob: -15.515724182128906

Token 280: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.12249581515789032
    2. 'a' → logprob: -2.4974958896636963
    3. ' b' → logprob: -3.4974958896636963
    4. 'b' → logprob: -5.997495651245117
    5. ' ' → logprob: -8.372495651245117
    6. '	a' → logprob: -12.622495651245117
    7. '   ' → logprob: -13.122495651245117
    8. '1' → logprob: -13.684995651245117
    9. '2' → logprob: -14.122495651245117
    10. '  ' → logprob: -14.184995651245117

Token 281: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.01117749884724617
    2. '==' → logprob: -4.5111775398254395
    3. ' ' → logprob: -9.011177062988281
    4. '=' → logprob: -12.761177062988281
    5. ' =' → logprob: -12.886177062988281
    6. ' !=' → logprob: -14.636177062988281
    7. '  ' → logprob: -14.886177062988281
    8. ' ==
' → logprob: -15.011177062988281
    9. '==
' → logprob: -15.636177062988281
    10. ' ' → logprob: -15.698677062988281

Token 282: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.44777917861938477
    2. ' ' → logprob: -1.4477791786193848
    3. '3' → logprob: -2.0727791786193848
    4. '1' → logprob: -10.697778701782227
    5. '  ' → logprob: -13.822778701782227
    6. '<|end|>' → logprob: -13.947778701782227
    7. '   ' → logprob: -14.010278701782227
    8. '    ' → logprob: -15.760278701782227
    9. '(' → logprob: -15.885278701782227
    10. 's' → logprob: -16.260278701782227

Token 283: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.016100415959954262
    2. '3' → logprob: -4.1411004066467285
    3. ' ' → logprob: -9.641100883483887
    4. '   ' → logprob: -15.141100883483887
    5. '  ' → logprob: -15.203600883483887
    6. '1' → logprob: -15.203600883483887
    7. '```' → logprob: -17.20359992980957
    8. '
' → logprob: -17.26609992980957
    9. '۲' → logprob: -17.70359992980957
    10. 'b' → logprob: -17.70359992980957

Token 284: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.20145836472511292
    2. 'and' → logprob: -1.7014583349227905
    3. ' ' → logprob: -10.576457977294922
    4. '1' → logprob: -11.701457977294922
    5. '==' → logprob: -11.701457977294922
    6. ' ==' → logprob: -13.576457977294922
    7. ' a' → logprob: -14.326457977294922
    8. 'a' → logprob: -14.826457977294922
    9. '   ' → logprob: -14.826457977294922
    10. '  ' → logprob: -16.076457977294922

Token 285: ' b' (ID: 287)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0025173963513225317
    2. ' ' → logprob: -6.002517223358154
    3. '   ' → logprob: -10.127517700195312
    4. '  ' → logprob: -13.377517700195312
    5. '    ' → logprob: -16.377517700195312
    6. 'a' → logprob: -16.377517700195312
    7. '2' → logprob: -18.190017700195312
    8. '
' → logprob: -18.377517700195312
    9. '     ' → logprob: -18.502517700195312
    10. '１' → logprob: -18.502517700195312

Token 286: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.023305227980017662
    2. '==' → logprob: -3.7733051776885986
    3. ' ' → logprob: -9.89830493927002
    4. '1' → logprob: -12.02330493927002
    5. '=' → logprob: -13.64830493927002
    6. '  ' → logprob: -14.39830493927002
    7. '   ' → logprob: -14.52330493927002
    8. ' ==
' → logprob: -15.52330493927002
    9. ' =' → logprob: -15.77330493927002
    10. '==
' → logprob: -15.89830493927002

Token 287: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00038264848990365863
    2. ' ' → logprob: -7.875382423400879
    3. '   ' → logprob: -13.000382423400879
    4. '  ' → logprob: -15.375382423400879
    5. '2' → logprob: -17.812883377075195
    6. '１' → logprob: -18.062883377075195
    7. '۱' → logprob: -18.500383377075195
    8. '    ' → logprob: -18.625383377075195
    9. '```' → logprob: -18.812883377075195
    10. '3' → logprob: -18.937883377075195

Token 288: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.438573680294212e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -17.8750057220459
    4. '  ' → logprob: -18.3750057220459
    5. '１' → logprob: -19.8750057220459
    6. '3' → logprob: -20.7500057220459
    7. '۱' → logprob: -20.8750057220459
    8. '2' → logprob: -21.2500057220459
    9. '१' → logprob: -21.8125057220459
    10. '১' → logprob: -22.0000057220459

Token 289: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.023250021040439606
    2. ':
' → logprob: -3.773250102996826
    3. ' :' → logprob: -13.273249626159668
    4. '   ' → logprob: -14.023249626159668
    5. '       ' → logprob: -14.273249626159668
    6. ':

' → logprob: -14.523249626159668
    7. ' :
' → logprob: -14.523249626159668
    8. '):' → logprob: -15.273249626159668
    9. ':
' → logprob: -16.023250579833984
    10. '):
' → logprob: -16.898250579833984

Token 290: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001075088046491146
    2. 'print' → logprob: -7.126075267791748
    3. '   ' → logprob: -8.62607479095459
    4. ' print' → logprob: -10.25107479095459
    5. '
' → logprob: -10.62607479095459
    6. '    ' → logprob: -11.87607479095459
    7. '	' → logprob: -11.87607479095459
    8. '      ' → logprob: -12.87607479095459
    9. '```' → logprob: -13.12607479095459
    10. '        
' → logprob: -13.37607479095459

Token 291: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.4498052223643754e-05
    2. '3' → logprob: -11.875014305114746
    3. ' print' → logprob: -11.875014305114746
    4. '   ' → logprob: -14.750014305114746
    5. '.print' → logprob: -18.125015258789062
    6. '	print' → logprob: -18.250015258789062
    7. 'pr' → logprob: -18.625015258789062
    8. '       ' → logprob: -18.625015258789062
    9. '
' → logprob: -19.125015258789062
    10. 'prin' → logprob: -19.250015258789062

Token 292: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -3.810037742368877e-05
    2. ''' → logprob: -10.750038146972656
    3. '(' → logprob: -11.250038146972656
    4. '3' → logprob: -12.625038146972656
    5. '("' → logprob: -15.250038146972656
    6. ' ('' → logprob: -17.750038146972656
    7. '   ' → logprob: -18.750038146972656
    8. ''''' → logprob: -19.250038146972656
    9. '(('' → logprob: -19.500038146972656
    10. ' ' → logprob: -19.750038146972656

Token 293: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.006718452088534832
    2. ''' → logprob: -5.006718635559082
    3. ' ' → logprob: -13.006718635559082
    4. ' '' → logprob: -14.756718635559082
    5. '"' → logprob: -15.631718635559082
    6. '')' → logprob: -16.006717681884766
    7. '   ' → logprob: -16.131717681884766
    8. '`' → logprob: -17.006717681884766
    9. ''''' → logprob: -17.631717681884766
    10. '('' → logprob: -18.131717681884766

Token 294: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.313634991645813
    2. '')
' → logprob: -1.313634991645813
    3. ''' → logprob: -8.188634872436523
    4. ')' → logprob: -9.813634872436523
    5. '   ' → logprob: -11.063634872436523
    6. ')
' → logprob: -11.063634872436523
    7. '')
' → logprob: -12.313634872436523
    8. '')

' → logprob: -13.313634872436523
    9. ''
' → logprob: -13.688634872436523
    10. ' ')
' → logprob: -14.313634872436523

Token 295: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0542878694832325
    2. 'elif' → logprob: -3.054287910461426
    3. ' elif' → logprob: -5.679287910461426
    4. '    
' → logprob: -6.554287910461426
    5. '	elif' → logprob: -8.304287910461426
    6. '
' → logprob: -8.554287910461426
    7. '  ' → logprob: -8.929287910461426
    8. '    ' → logprob: -9.554287910461426
    9. ' ' → logprob: -9.679287910461426
    10. '<|end|>' → logprob: -10.304287910461426

Token 296: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.01123538613319397
    2. '   ' → logprob: -4.511235237121582
    3. ' elif' → logprob: -8.636235237121582
    4. 'else' → logprob: -12.011235237121582
    5. '	elif' → logprob: -13.011235237121582
    6. '  ' → logprob: -14.886235237121582
    7. '    
' → logprob: -15.011235237121582
    8. 'el' → logprob: -15.011235237121582
    9. ' ' → logprob: -15.136235237121582
    10. 'elseif' → logprob: -16.0112361907959

Token 297: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.576269805431366
    2. ' a' → logprob: -0.826269805431366
    3. '   ' → logprob: -8.95127010345459
    4. ' ' → logprob: -9.20127010345459
    5. '2' → logprob: -10.32627010345459
    6. ' b' → logprob: -10.45127010345459
    7. 'b' → logprob: -10.82627010345459
    8. '	a' → logprob: -11.82627010345459
    9. '    ' → logprob: -12.45127010345459
    10. '3' → logprob: -12.57627010345459

Token 298: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.0232922974973917
    2. '==' → logprob: -3.773292303085327
    3. '=' → logprob: -10.898292541503906
    4. ' ' → logprob: -11.148292541503906
    5. '   ' → logprob: -12.148292541503906
    6. ' =' → logprob: -12.273292541503906
    7. '  ' → logprob: -13.523292541503906
    8. '    ' → logprob: -14.273292541503906
    9. ' ===' → logprob: -14.898292541503906
    10. '3' → logprob: -15.273292541503906

Token 299: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0028053484857082367
    2. ' ' → logprob: -5.877805233001709
    3. '1' → logprob: -15.252805709838867
    4. '   ' → logprob: -16.127805709838867
    5. '۳' → logprob: -16.627805709838867
    6. '３' → logprob: -17.627805709838867
    7. '  ' → logprob: -17.752805709838867
    8. '৩' → logprob: -18.440305709838867
    9. '३' → logprob: -18.627805709838867
    10. ' three' → logprob: -18.690305709838867

Token 300: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -3.5716304410016164e-05
    2. ' ' → logprob: -10.250035285949707
    3. '۳' → logprob: -16.500036239624023
    4. '   ' → logprob: -16.875036239624023
    5. '３' → logprob: -17.375036239624023
    6. '৩' → logprob: -18.000036239624023
    7. '1' → logprob: -18.000036239624023
    8. '३' → logprob: -18.500036239624023
    9. '٣' → logprob: -19.062536239624023
    10. '  ' → logprob: -19.062536239624023

Token 301: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.09550336748361588
    2. ' ==' → logprob: -2.720503330230713
    3. 'and' → logprob: -3.845503330230713
    4. '==' → logprob: -5.595503330230713
    5. ' ' → logprob: -8.845503807067871
    6. '   ' → logprob: -13.220503807067871
    7. '1' → logprob: -14.095503807067871
    8. '=' → logprob: -14.220503807067871
    9. '  ' → logprob: -14.345503807067871
    10. ' &' → logprob: -14.470503807067871

Token 302: ' b' (ID: 287)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014178793877363205
    2. ' ' → logprob: -4.26417875289917
    3. 'b' → logprob: -11.764179229736328
    4. '2' → logprob: -12.639179229736328
    5. '   ' → logprob: -12.889179229736328
    6. '  ' → logprob: -13.889179229736328
    7. ' b' → logprob: -14.514179229736328
    8. 'a' → logprob: -16.264179229736328
    9. '    ' → logprob: -16.514179229736328
    10. '```' → logprob: -18.139179229736328

Token 303: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.011073758825659752
    2. '==' → logprob: -4.511073589324951
    3. ' ' → logprob: -10.76107406616211
    4. ' =' → logprob: -13.13607406616211
    5. '=' → logprob: -13.38607406616211
    6. ' ' → logprob: -15.63607406616211
    7. ' ==
' → logprob: -16.01107406616211
    8. ''' → logprob: -16.13607406616211
    9. '==
' → logprob: -16.26107406616211
    10. ' ===' → logprob: -16.26107406616211

Token 304: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008083211723715067
    2. ' ' → logprob: -7.125808238983154
    3. '2' → logprob: -12.500808715820312
    4. '  ' → logprob: -16.875808715820312
    5. '<|end|>' → logprob: -17.750808715820312
    6. '   ' → logprob: -17.875808715820312
    7. '１' → logprob: -18.625808715820312
    8. '```' → logprob: -18.750808715820312
    9. '`' → logprob: -18.938308715820312
    10. '[' → logprob: -19.438308715820312

Token 305: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.41866585687967e-06
    2. ' ' → logprob: -11.875008583068848
    3. '2' → logprob: -13.500008583068848
    4. '```' → logprob: -19.12500762939453
    5. '１' → logprob: -19.25000762939453
    6. '<|end|>' → logprob: -19.25000762939453
    7. '  ' → logprob: -19.50000762939453
    8. '   ' → logprob: -19.50000762939453
    9. '`' → logprob: -19.75000762939453
    10. '۱' → logprob: -20.00000762939453

Token 306: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.388262003660202
    2. ':
' → logprob: -1.1382620334625244
    3. '       ' → logprob: -6.638261795043945
    4. '   ' → logprob: -9.888261795043945
    5. ':

' → logprob: -11.763261795043945
    6. ' :
' → logprob: -11.888261795043945
    7. ' :' → logprob: -12.138261795043945
    8. '):
' → logprob: -12.388261795043945
    9. ':
' → logprob: -12.763261795043945
    10. '):' → logprob: -13.513261795043945

Token 307: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002969857305288315
    2. 'print' → logprob: -5.877969741821289
    3. ' print' → logprob: -9.127969741821289
    4. '   ' → logprob: -9.877969741821289
    5. '	' → logprob: -14.127969741821289
    6. '    ' → logprob: -14.252969741821289
    7. '      ' → logprob: -14.377969741821289
    8. '
' → logprob: -14.502969741821289
    9. '	print' → logprob: -14.502969741821289
    10. '```' → logprob: -14.752969741821289

Token 308: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.000572094286326319
    2. ' print' → logprob: -8.000572204589844
    3. '2' → logprob: -8.750572204589844
    4. '   ' → logprob: -9.875572204589844
    5. ''' → logprob: -11.125572204589844
    6. '       ' → logprob: -11.625572204589844
    7. ' ' → logprob: -13.625572204589844
    8. '3' → logprob: -13.875572204589844
    9. '4' → logprob: -15.500572204589844
    10. '	print' → logprob: -15.500572204589844

Token 309: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -5.0259150157216936e-05
    2. ''' → logprob: -10.62505054473877
    3. '(' → logprob: -10.62505054473877
    4. ' ('' → logprob: -14.25005054473877
    5. '("' → logprob: -14.50005054473877
    6. '2' → logprob: -14.75005054473877
    7. '3' → logprob: -16.375049591064453
    8. ' ' → logprob: -16.625049591064453
    9. '   ' → logprob: -18.000049591064453
    10. '(('' → logprob: -18.625049591064453

Token 310: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.006723064463585615
    2. ''' → logprob: -5.006722927093506
    3. ' ' → logprob: -12.006723403930664
    4. ' '' → logprob: -13.881723403930664
    5. '"' → logprob: -14.881723403930664
    6. '   ' → logprob: -16.006723403930664
    7. '('' → logprob: -16.131723403930664
    8. '  ' → logprob: -17.381723403930664
    9. '۲' → logprob: -18.006723403930664
    10. ''s' → logprob: -18.131723403930664

Token 311: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.47482648491859436
    2. '')
' → logprob: -0.974826455116272
    3. ')' → logprob: -7.474826335906982
    4. '   ' → logprob: -9.47482681274414
    5. ''):
' → logprob: -9.97482681274414
    6. ')
' → logprob: -10.34982681274414
    7. ')')
' → logprob: -11.59982681274414
    8. '')
' → logprob: -12.59982681274414
    9. ':')
' → logprob: -12.97482681274414
    10. '")' → logprob: -13.09982681274414

Token 312: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012198211625218391
    2. 'elif' → logprob: -4.762198448181152
    3. ' elif' → logprob: -5.637198448181152
    4. '	elif' → logprob: -11.512198448181152
    5. '    ' → logprob: -13.387198448181152
    6. '  ' → logprob: -13.762198448181152
    7. '    
' → logprob: -13.887198448181152
    8. ' ' → logprob: -14.762198448181152
    9. '<|end|>' → logprob: -15.387198448181152
    10. 'else' → logprob: -16.262197494506836

Token 313: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.050456006079912186
    2. ' elif' → logprob: -3.0504560470581055
    3. '   ' → logprob: -6.3004560470581055
    4. 'e' → logprob: -10.675456047058105
    5. ' ' → logprob: -12.800456047058105
    6. '	elif' → logprob: -13.050456047058105
    7. 'else' → logprob: -13.800456047058105
    8. 'el' → logprob: -14.175456047058105
    9. '  ' → logprob: -14.800456047058105
    10. '    ' → logprob: -14.925456047058105

Token 314: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.3733139634132385
    2. ' ' → logprob: -1.9983139038085938
    3. 'a' → logprob: -2.3733139038085938
    4. ' b' → logprob: -2.8733139038085938
    5. '3' → logprob: -3.8733139038085938
    6. 'b' → logprob: -5.748313903808594
    7. '   ' → logprob: -6.248313903808594
    8. '    ' → logprob: -8.748313903808594
    9. ' ' → logprob: -8.873313903808594
    10. '  ' → logprob: -9.623313903808594

Token 315: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.038210172206163406
    2. '==' → logprob: -3.288210153579712
    3. '=' → logprob: -8.913209915161133
    4. ' =' → logprob: -11.038209915161133
    5. ' ' → logprob: -11.538209915161133
    6. ')' → logprob: -13.288209915161133
    7. '<|end|>' → logprob: -13.413209915161133
    8. ' ===' → logprob: -13.663209915161133
    9. ' ' → logprob: -14.163209915161133
    10. '===' → logprob: -14.538209915161133

Token 316: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.10494442284107208
    2. ' ' → logprob: -2.3549444675445557
    3. '2' → logprob: -5.354944229125977
    4. '   ' → logprob: -13.979944229125977
    5. '  ' → logprob: -14.604944229125977
    6. '<|end|>' → logprob: -15.729944229125977
    7. '```' → logprob: -15.979944229125977
    8. '۳' → logprob: -16.167444229125977
    9. '    ' → logprob: -16.292444229125977
    10. '...' → logprob: -17.917444229125977

Token 317: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.47442176938056946
    2. '3' → logprob: -0.9744217395782471
    3. ' ' → logprob: -7.974421977996826
    4. '  ' → logprob: -15.474421501159668
    5. '   ' → logprob: -15.474421501159668
    6. '<|end|>' → logprob: -16.349422454833984
    7. '```' → logprob: -17.349422454833984
    8. '۲' → logprob: -18.286922454833984
    9. '২' → logprob: -18.411922454833984
    10. '23' → logprob: -18.536922454833984

Token 318: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.07006192207336426
    2. 'and' → logprob: -2.6950619220733643
    3. ' ' → logprob: -9.570061683654785
    4. ' ==' → logprob: -10.820061683654785
    5. '   ' → logprob: -11.070061683654785
    6. '==' → logprob: -11.820061683654785
    7. ' &&' → logprob: -13.445061683654785
    8. '  ' → logprob: -13.570061683654785
    9. '`' → logprob: -13.570061683654785
    10. '=' → logprob: -13.570061683654785

Token 319: ' b' (ID: 287)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.07948286086320877
    2. ' ' → logprob: -2.5794827938079834
    3. 'b' → logprob: -7.9544830322265625
    4. '   ' → logprob: -8.454483032226562
    5. ' b' → logprob: -10.704483032226562
    6. '  ' → logprob: -12.204483032226562
    7. '    ' → logprob: -13.954483032226562
    8. '```' → logprob: -15.579483032226562
    9. ',' → logprob: -16.454483032226562
    10. '`' → logprob: -16.829483032226562

Token 320: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.126997709274292
    2. '==' → logprob: -2.126997709274292
    3. '=' → logprob: -9.751997947692871
    4. ' =' → logprob: -11.751997947692871
    5. ' ' → logprob: -12.876997947692871
    6. '===' → logprob: -15.626997947692871
    7. '  ' → logprob: -15.876997947692871
    8. '==
' → logprob: -15.876997947692871
    9. ')' → logprob: -16.626996994018555
    10. ' ==
' → logprob: -16.626996994018555

Token 321: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0011706985533237457
    2. ' ' → logprob: -6.751170635223389
    3. '   ' → logprob: -15.376171112060547
    4. '<|end|>' → logprob: -16.251171112060547
    5. '۲' → logprob: -16.376171112060547
    6. '```' → logprob: -17.001171112060547
    7. '  ' → logprob: -17.251171112060547
    8. '`' → logprob: -17.751171112060547
    9. '２' → logprob: -18.501171112060547
    10. '২' → logprob: -18.876171112060547

Token 322: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '۲' → logprob: -16.87500762939453
    4. '２' → logprob: -18.75000762939453
    5. '২' → logprob: -19.37500762939453
    6. '२' → logprob: -19.87500762939453
    7. '   ' → logprob: -19.87500762939453
    8. '  ' → logprob: -20.25000762939453
    9. '```' → logprob: -20.37500762939453
    10. '٢' → logprob: -20.75000762939453

Token 323: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5791690945625305
    2. ':' → logprob: -0.8291690945625305
    3. '       ' → logprob: -6.079169273376465
    4. ' :
' → logprob: -7.579169273376465
    5. '   ' → logprob: -8.204169273376465
    6. ' :' → logprob: -9.204169273376465
    7. '):
' → logprob: -10.579169273376465
    8. '):' → logprob: -12.579169273376465
    9. '():
' → logprob: -12.579169273376465
    10. ':

' → logprob: -12.704169273376465

Token 324: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8795193433761597
    2. ' print' → logprob: -1.1295193433761597
    3. 'print' → logprob: -1.3795193433761597
    4. '   ' → logprob: -4.629519462585449
    5. '	print' → logprob: -9.00451946258545
    6. ''' → logprob: -9.50451946258545
    7. '    ' → logprob: -10.12951946258545
    8. ' '' → logprob: -10.25451946258545
    9. '.print' → logprob: -10.75451946258545
    10. ' ' → logprob: -11.00451946258545

Token 325: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00020854694594163448
    2. ' print' → logprob: -8.500208854675293
    3. '   ' → logprob: -12.250208854675293
    4. '	print' → logprob: -15.500208854675293
    5. ' ' → logprob: -18.625207901000977
    6. '       ' → logprob: -18.750207901000977
    7. '```' → logprob: -18.875207901000977
    8. '.print' → logprob: -20.125207901000977
    9. '    ' → logprob: -20.250207901000977
    10. '  ' → logprob: -20.500207901000977

Token 326: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -4.60414821645827e-06
    2. '(' → logprob: -12.375004768371582
    3. ''' → logprob: -15.250004768371582
    4. '("' → logprob: -16.625003814697266
    5. ' ('' → logprob: -19.125003814697266
    6. '('(' → logprob: -19.250003814697266
    7. '   ' → logprob: -20.250003814697266
    8. '(('' → logprob: -20.375003814697266
    9. 'print' → logprob: -20.500003814697266
    10. '()' → logprob: -21.000003814697266

Token 327: '1' (ID: 16)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.07889199256896973
    2. '1' → logprob: -2.5788919925689697
    3. ' '' → logprob: -13.57889175415039
    4. '"' → logprob: -14.32889175415039
    5. '('' → logprob: -16.07889175415039
    6. ' ' → logprob: -16.57889175415039
    7. ''''' → logprob: -16.57889175415039
    8. '')' → logprob: -17.07889175415039
    9. '   ' → logprob: -17.45389175415039
    10. 'print' → logprob: -17.57889175415039

Token 328: '')

' (ID: 9735)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.00013929695705883205
    2. '')
' → logprob: -9.375139236450195
    3. ')' → logprob: -9.875139236450195
    4. '")' → logprob: -13.125139236450195
    5. ''' → logprob: -14.250139236450195
    6. '')

' → logprob: -16.125139236450195
    7. '')
' → logprob: -16.625139236450195
    8. '')"' → logprob: -17.125139236450195
    9. '('' → logprob: -17.750139236450195
    10. '}')' → logprob: -17.875139236450195

Token 329: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 330: ' Ex' (ID: 1771)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.008315625600516796
    2. 'main' → logprob: -4.883315563201904
    3. 'i' → logprob: -7.758315563201904
    4. '#' → logprob: -9.008316040039062
    5. '
' → logprob: -9.758316040039062
    6. ' if' → logprob: -9.883316040039062
    7. '```' → logprob: -11.133316040039062
    8. ' main' → logprob: -12.008316040039062
    9. '<|end|>' → logprob: -12.383316040039062
    10. '(main' → logprob: -12.633316040039062

Token 331: 'éc' (ID: 5675)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.32561665773391724
    2. 'ecute' → logprob: -1.8256165981292725
    3. 'ec' → logprob: -2.9506165981292725
    4. 'e' → logprob: -3.0756165981292725
    5. 'éc' → logprob: -4.450616836547852
    6. 'ecut' → logprob: -6.325616836547852
    7. 'ecu' → logprob: -6.325616836547852
    8. 'é' → logprob: -6.450616836547852
    9. 'ecution' → logprob: -7.950616836547852
    10. 'i' → logprob: -8.325616836547852

Token 332: 'uter' (ID: 23469)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3557316064834595
    2. 'éc' → logprob: -1.6057316064834595
    3. 'é' → logprob: -3.10573148727417
    4. 'ecute' → logprob: -3.35573148727417
    5. 'ec' → logprob: -4.60573148727417
    6. 'e' → logprob: -5.48073148727417
    7. 'ecut' → logprob: -6.98073148727417
    8. '#' → logprob: -7.10573148727417
    9. 'écut' → logprob: -7.10573148727417
    10. 'éf' → logprob: -7.48073148727417

Token 333: ' la' (ID: 557)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.048612575978040695
    2. 'main' → logprob: -3.048612594604492
    3. ' if' → logprob: -10.923612594604492
    4. ' main' → logprob: -11.923612594604492
    5. '
' → logprob: -15.673612594604492
    6. '(main' → logprob: -16.048612594604492
    7. '_main' → logprob: -16.673612594604492
    8. '__' → logprob: -16.673612594604492
    9. '	main' → logprob: -17.423612594604492
    10. '```' → logprob: -17.548612594604492

Token 334: ' fonction' (ID: 17610)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.47792288661003113
    2. 'if' → logprob: -0.9779229164123535
    3. ' main' → logprob: -5.7279229164123535
    4. '__' → logprob: -7.6029229164123535
    5. ' if' → logprob: -10.352922439575195
    6. 'def' → logprob: -10.352922439575195
    7. '(main' → logprob: -11.977922439575195
    8. '_main' → logprob: -12.102922439575195
    9. '```' → logprob: -12.352922439575195
    10. '	main' → logprob: -13.477922439575195

Token 335: ' principale' (ID: 68926)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.12696968019008636
    2. 'if' → logprob: -2.126969575881958
    3. '
' → logprob: -10.126969337463379
    4. ' main' → logprob: -14.001969337463379
    5. '(main' → logprob: -15.001969337463379
    6. ' if' → logprob: -15.626969337463379
    7. '```' → logprob: -15.876969337463379
    8. '

' → logprob: -16.376970291137695
    9. '	main' → logprob: -18.126970291137695
    10. '_main' → logprob: -18.876970291137695

Token 336: ' si' (ID: 1784)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.004783730488270521
    2. '

' → logprob: -5.754783630371094
    3. 'main' → logprob: -6.754783630371094
    4. 'if' → logprob: -7.754783630371094
    5. '
' → logprob: -12.129783630371094
    6. '  
' → logprob: -13.629783630371094
    7. '(main' → logprob: -13.629783630371094
    8. ' 
' → logprob: -14.379783630371094
    9. '
    
' → logprob: -14.379783630371094
    10. ' main' → logprob: -14.754783630371094

Token 337: ' ce' (ID: 2357)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.10020699352025986
    2. ' __' → logprob: -2.3502070903778076
    3. 'name' → logprob: -15.350207328796387
    4. ' ' → logprob: -16.60020637512207
    5. '_name' → logprob: -18.22520637512207
    6. '/__' → logprob: -18.22520637512207
    7. '___' → logprob: -18.47520637512207
    8. '_' → logprob: -19.60020637512207
    9. '(__' → logprob: -19.60020637512207
    10. '.__' → logprob: -19.85020637512207

Token 338: ' fichier' (ID: 69637)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.10027924180030823
    2. ' __' → logprob: -2.3502793312072754
    3. 'name' → logprob: -10.475278854370117
    4. '_name' → logprob: -11.475278854370117
    5. ' ' → logprob: -11.600278854370117
    6. '_' → logprob: -11.725278854370117
    7. ' nom' → logprob: -12.975278854370117
    8. 'n' → logprob: -13.100278854370117
    9. ' ==' → logprob: -13.100278854370117
    10. 'nom' → logprob: -13.100278854370117

Token 339: ' est' (ID: 893)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.15638196468353271
    2. 'est' → logprob: -2.7813820838928223
    3. ' __' → logprob: -2.7813820838928223
    4. ' est' → logprob: -4.406382083892822
    5. ' ==' → logprob: -5.656382083892822
    6. '==' → logprob: -5.781382083892822
    7. ' is' → logprob: -7.406382083892822
    8. '.py' → logprob: -7.531382083892822
    9. 'name' → logprob: -7.781382083892822
    10. '```' → logprob: -9.031381607055664

Token 340: ' exécut' (ID: 165350)
  Prédit: ' __'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.25195297598838806
    2. '__' → logprob: -1.5019530057907104
    3. ' "__' → logprob: -11.376953125
    4. 'name' → logprob: -12.251953125
    5. '_name' → logprob: -13.126953125
    6. ' le' → logprob: -13.626953125
    7. ' ' → logprob: -13.876953125
    8. ' run' → logprob: -14.376953125
    9. ' name' → logprob: -14.626953125
    10. ' ' → logprob: -15.251953125

Token 341: 'é' (ID: 377)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.48631376028060913
    2. 'é' → logprob: -0.9863137602806091
    3. ' en' → logprob: -4.736313819885254
    4. ' __' → logprob: -6.861313819885254
    5. 'd' → logprob: -7.986313819885254
    6. '_' → logprob: -8.111313819885254
    7. ' directement' → logprob: -8.111313819885254
    8. 'e' → logprob: -8.486313819885254
    9. '   ' → logprob: -8.736313819885254
    10. 'direct' → logprob: -8.861313819885254

Token 342: ' comme' (ID: 7971)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5119413137435913
    2. '__' → logprob: -1.0119413137435913
    3. ' en' → logprob: -3.886941432952881
    4. ' __' → logprob: -4.886941432952881
    5. 'dans' → logprob: -6.136941432952881
    6. ' if' → logprob: -6.636941432952881
    7. 'en' → logprob: -6.761941432952881
    8. '
' → logprob: -7.011941432952881
    9. '```' → logprob: -7.261941432952881
    10. 'import' → logprob: -8.136940956115723

Token 343: ' script' (ID: 11713)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.28166136145591736
    2. ' __' → logprob: -1.4066613912582397
    3. ' le' → logprob: -7.781661510467529
    4. ' un' → logprob: -10.531661033630371
    5. '_le' → logprob: -10.906661033630371
    6. 'le' → logprob: -11.531661033630371
    7. 'un' → logprob: -11.656661033630371
    8. ' "__' → logprob: -11.781661033630371
    9. '/__' → logprob: -12.281661033630371
    10. ' la' → logprob: -12.781661033630371

Token 344: ' principal' (ID: 10589)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6936243772506714
    2. 'if' → logprob: -0.6936243772506714
    3. '

' → logprob: -7.693624496459961
    4. ' if' → logprob: -11.943624496459961
    5. '    
' → logprob: -12.443624496459961
    6. '  
' → logprob: -12.443624496459961
    7. '```' → logprob: -12.443624496459961
    8. ' 
' → logprob: -13.693624496459961
    9. '
    
' → logprob: -14.443624496459961
    10. '
' → logprob: -14.443624496459961

Token 345: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.008035747334361076
    2. '

' → logprob: -5.258035659790039
    3. 'if' → logprob: -5.883035659790039
    4. '
' → logprob: -12.133035659790039
    5. ' 
' → logprob: -13.383035659790039
    6. '


' → logprob: -13.383035659790039
    7. '
    
' → logprob: -13.883035659790039
    8. '\n' → logprob: -14.008035659790039
    9. '  
' → logprob: -14.758035659790039
    10. ' if' → logprob: -15.008035659790039

Token 346: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.3856492842023727e-06
    2. '
' → logprob: -14.125000953674316
    3. ' if' → logprob: -14.750000953674316
    4. '```' → logprob: -15.125000953674316
    5. '    
' → logprob: -19.250001907348633
    6. '  
' → logprob: -20.625001907348633
    7. '\
' → logprob: -20.875001907348633
    8. ' 
' → logprob: -21.250001907348633
    9. '``' → logprob: -21.750001907348633
    10. '\' → logprob: -21.875001907348633

Token 347: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.020772524178028107
    2. '__' → logprob: -3.8957724571228027
    3. ' ' → logprob: -8.395772933959961
    4. ' ' → logprob: -13.270772933959961
    5. '_' → logprob: -13.520772933959961
    6. ' ' → logprob: -14.395772933959961
    7. ' _' → logprob: -15.145772933959961
    8. ' name' → logprob: -15.770772933959961
    9. ' ‌' → logprob: -16.27077293395996
    10. '_name' → logprob: -16.52077293395996

Token 348: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.49593424797058105
    2. ' ==' → logprob: -0.995934247970581
    3. '==' → logprob: -4.49593448638916
    4. ' __' → logprob: -4.62093448638916
    5. 'name' → logprob: -7.99593448638916
    6. '_' → logprob: -8.99593448638916
    7. '=="' → logprob: -9.87093448638916
    8. '=='' → logprob: -10.87093448638916
    9. '_name' → logprob: -10.99593448638916
    10. ' =' → logprob: -10.99593448638916

Token 349: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -6.704273118884885e-07
    2. '_' → logprob: -14.750000953674316
    3. '==' → logprob: -15.625000953674316
    4. '__.__' → logprob: -17.0
    5. 'name' → logprob: -18.375
    6. '__

' → logprob: -18.5
    7. ' __' → logprob: -18.625
    8. '___' → logprob: -19.25
    9. '__
' → logprob: -19.375
    10. '____' → logprob: -19.5

Token 350: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00020616286201402545
    2. '==' → logprob: -8.500205993652344
    3. '=="' → logprob: -13.750205993652344
    4. ' ==' → logprob: -13.875205993652344
    5. '_' → logprob: -15.375205993652344
    6. '___' → logprob: -15.750205993652344
    7. '=='' → logprob: -16.750205993652344
    8. '=' → logprob: -16.750205993652344
    9. '__.__' → logprob: -16.750205993652344
    10. '__,' → logprob: -17.125205993652344

Token 351: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.014361179433763027
    2. ''' → logprob: -4.264361381530762
    3. ' "__' → logprob: -8.764361381530762
    4. '__' → logprob: -10.139361381530762
    5. ' '__' → logprob: -13.264361381530762
    6. ''"' → logprob: -16.889360427856445
    7. '"name' → logprob: -17.014360427856445
    8. '("__' → logprob: -17.139360427856445
    9. '"'' → logprob: -17.639360427856445
    10. '"_' → logprob: -18.139360427856445

Token 352: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -6.704273118884885e-07
    2. '__' → logprob: -15.625000953674316
    3. ' main' → logprob: -15.875000953674316
    4. '"' → logprob: -16.375
    5. '_main' → logprob: -16.375
    6. 'name' → logprob: -16.5
    7. '	main' → logprob: -17.5
    8. 'maine' → logprob: -18.875
    9. '-main' → logprob: -19.25
    10. 'ma' → logprob: -19.75

Token 353: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.011057846248149872
    2. '__' → logprob: -4.5110578536987305
    3. '__':
' → logprob: -11.51105785369873
    4. '_' → logprob: -19.761056900024414
    5. '__["' → logprob: -19.761056900024414
    6. '___' → logprob: -21.011056900024414
    7. '__("' → logprob: -21.136056900024414
    8. '__",' → logprob: -21.511056900024414
    9. '```' → logprob: -22.761056900024414
    10. '__:' → logprob: -22.886056900024414

Token 354: '   ' (ID: 271)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.2402162402868271
    2. '   ' → logprob: -2.3652162551879883
    3. 'main' → logprob: -2.3652162551879883
    4. ':
' → logprob: -4.740216255187988
    5. ':' → logprob: -4.865216255187988
    6. '	main' → logprob: -4.990216255187988
    7. '    
' → logprob: -7.240216255187988
    8. '_main' → logprob: -7.240216255187988
    9. '(main' → logprob: -7.490216255187988
    10. '():
' → logprob: -9.115216255187988

Token 355: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -0.00317783304490149
    2. ' main' → logprob: -5.753177642822266
    3. '	main' → logprob: -15.753177642822266
    4. '   ' → logprob: -17.378177642822266
    5. '_main' → logprob: -21.003177642822266
    6. '(main' → logprob: -21.128177642822266
    7. '.main' → logprob: -22.253177642822266
    8. 'Main' → logprob: -23.003177642822266
    9. ' ' → logprob: -24.628177642822266
    10. ' ' → logprob: -25.628177642822266

Token 356: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 354
Tokens correctement prédits (1ère position, stricte): 167
Tokens correctement prédits (1ère position, avec adaptation): 177
Tokens correctement prédits (top 10): 279
Précision stricte (1ère position): 47.18%
Précision adaptée (1ère position): 50.00%
Précision (top 10): 78.81%
================================================================================
