================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:07:00
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import bisect,collections,copy,heapq,itertools,math,string
import sys
S = lambda: sys.stdin.readline().rstrip()
M = lambda: map(int,sys.stdin.readline().rstrip().split())
I = lambda: int(sys.stdin.readline().rstrip())
LI = lambda: list(map(int,sys.stdin.readline().rstrip().split()))
LS = lambda: list(sys.stdin.readline().rstrip().split())
N = S()
trans = str.maketrans('19','91')
print(''.join(map(lambda t: ''.join(itertools.compress('91', [t=='1',t!='1'])), N)))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' bis' (ID: 7204)
  → Token d'amorce (pas de prédiction)

Token 2: 'ect' (ID: 534)
  → Token d'amorce (pas de prédiction)

Token 3: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0004019521293230355
    2. '(' → logprob: -8.000401496887207
    3. '\' → logprob: -11.125401496887207
    4. '\n' → logprob: -11.500401496887207
    5. '```' → logprob: -12.375401496887207
    6. '.
' → logprob: -12.500401496887207
    7. '.\' → logprob: -12.625401496887207
    8. '.

' → logprob: -12.625401496887207
    9. '.b' → logprob: -12.625401496887207
    10. '

' → logprob: -12.625401496887207

Token 4: 'collections' (ID: 83306)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.09881140291690826
    2. 'collections' → logprob: -3.223811388015747
    3. ' heap' → logprob: -3.598811388015747
    4. 'sys' → logprob: -4.223811626434326
    5. 'math' → logprob: -5.223811626434326
    6. ' sys' → logprob: -5.723811626434326
    7. ' collections' → logprob: -6.598811626434326
    8. ' itertools' → logprob: -6.973811626434326
    9. ' math' → logprob: -7.848811626434326
    10. 'copy' → logprob: -8.223811149597168

Token 5: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.03016199730336666
    2. '\n' → logprob: -4.9051618576049805
    3. '

' → logprob: -5.2801618576049805
    4. '<|end|>' → logprob: -5.2801618576049805
    5. '\' → logprob: -5.9051618576049805
    6. '
' → logprob: -6.1551618576049805
    7. ',' → logprob: -6.1551618576049805
    8. 'newline' → logprob: -6.4051618576049805
    9. '```' → logprob: -6.9051618576049805
    10. 'import' → logprob: -7.6551618576049805

Token 6: 'copy' (ID: 14730)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.013838945887982845
    2. 'it' → logprob: -4.888838768005371
    3. 'math' → logprob: -5.513838768005371
    4. 'fun' → logprob: -6.638838768005371
    5. ' heap' → logprob: -8.263838768005371
    6. 'datetime' → logprob: -8.888838768005371
    7. 'copy' → logprob: -9.138838768005371
    8. 'sys' → logprob: -9.388838768005371
    9. ' itertools' → logprob: -9.888838768005371
    10. 'operator' → logprob: -10.013838768005371

Token 7: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.05609810724854469
    2. ',' → logprob: -3.181098222732544
    3. '<|end|>' → logprob: -5.056097984313965
    4. '
' → logprob: -6.556097984313965
    5. 'import' → logprob: -6.806097984313965
    6. '

' → logprob: -6.931097984313965
    7. '\' → logprob: -7.181097984313965
    8. 'newline' → logprob: -7.931097984313965
    9. '\n' → logprob: -8.056097984313965
    10. '```' → logprob: -8.181097984313965

Token 8: 'heap' (ID: 38535)
  Prédit: 'datetime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'datetime' → logprob: -0.22839507460594177
    2. 'heap' → logprob: -2.7283949851989746
    3. 'csv' → logprob: -2.8533949851989746
    4. 'fun' → logprob: -3.8533949851989746
    5. 'it' → logprob: -3.9783949851989746
    6. 'decimal' → logprob: -4.478394985198975
    7. 'dat' → logprob: -4.603394985198975
    8. 'dif' → logprob: -5.728394985198975
    9. 'deque' → logprob: -5.853394985198975
    10. 'copy' → logprob: -6.228394985198975

Token 9: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.2471589798224159e-05
    2. '_' → logprob: -11.875012397766113
    3. '.' → logprob: -13.375012397766113
    4. 's' → logprob: -13.625012397766113
    5. 'queue' → logprob: -14.125012397766113
    6. 'n' → logprob: -14.625012397766113
    7. ',' → logprob: -15.750012397766113
    8. 'p' → logprob: -15.750012397766113
    9. 't' → logprob: -15.750012397766113
    10. 'space' → logprob: -16.00001335144043

Token 10: ',it' (ID: 133769)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2627096176147461
    2. '.' → logprob: -1.637709617614746
    3. '<|end|>' → logprob: -3.637709617614746
    4. 'import' → logprob: -5.512709617614746
    5. ',n' → logprob: -6.887709617614746
    6. ',a' → logprob: -7.137709617614746
    7. '```' → logprob: -7.512709617614746
    8. '

' → logprob: -7.762709617614746
    9. '\n' → logprob: -7.762709617614746
    10. '\' → logprob: -8.387709617614746

Token 11: 'ertools' (ID: 88385)
  Prédit: 'ertools'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ertools' → logprob: -7.088138227118179e-05
    2. 'er' → logprob: -10.000070571899414
    3. 'ert' → logprob: -10.625070571899414
    4. 'erto' → logprob: -14.000070571899414
    5. 'ools' → logprob: -15.125070571899414
    6. 'tools' → logprob: -16.500070571899414
    7. 'ers' → logprob: -17.625070571899414
    8. '```' → logprob: -17.750070571899414
    9. 'erview' → logprob: -19.000070571899414
    10. 'ertu' → logprob: -19.375070571899414

Token 12: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01465043518692255
    2. ',n' → logprob: -5.014650344848633
    3. '.' → logprob: -5.264650344848633
    4. ',.' → logprob: -7.764650344848633
    5. ',re' → logprob: -8.139650344848633
    6. ',b' → logprob: -8.139650344848633
    7. ',r' → logprob: -8.389650344848633
    8. ',a' → logprob: -8.889650344848633
    9. ',json' → logprob: -8.889650344848633
    10. 'import' → logprob: -9.014650344848633

Token 13: 'math' (ID: 20310)
  Prédit: 'json'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'json' → logprob: -0.2594658136367798
    2. 'math' → logprob: -1.5094658136367798
    3. 'operator' → logprob: -5.13446569442749
    4. 'logging' → logprob: -7.38446569442749
    5. 'os' → logprob: -8.259466171264648
    6. 'fun' → logprob: -8.634466171264648
    7. 'locale' → logprob: -9.009466171264648
    8. 'line' → logprob: -9.509466171264648
    9. ' json' → logprob: -9.634466171264648
    10. 'random' → logprob: -9.884466171264648

Token 14: ',string' (ID: 89629)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006523526273667812
    2. ',n' → logprob: -6.256523609161377
    3. '.' → logprob: -7.131523609161377
    4. ',.' → logprob: -7.131523609161377
    5. ',json' → logprob: -7.631523609161377
    6. ',a' → logprob: -7.881523609161377
    7. ',b' → logprob: -7.881523609161377
    8. ',re' → logprob: -8.006523132324219
    9. ',f' → logprob: -8.631523132324219
    10. ',r' → logprob: -9.006523132324219

Token 15: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008688795380294323
    2. ',n' → logprob: -5.383688926696777
    3. '<|end|>' → logprob: -6.508688926696777
    4. ',re' → logprob: -7.383688926696777
    5. ',json' → logprob: -7.508688926696777
    6. ',e' → logprob: -8.633688926696777
    7. 'import' → logprob: -8.758688926696777
    8. ',opt' → logprob: -8.883688926696777
    9. ',a' → logprob: -9.133688926696777
    10. ',p' → logprob: -9.133688926696777

Token 16: 'import' (ID: 561)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.15461041033267975
    2. '<|end|>' → logprob: -2.6546103954315186
    3. '.' → logprob: -3.0296103954315186
    4. '\n' → logprob: -5.154610633850098
    5. 'import' → logprob: -5.279610633850098
    6. '#' → logprob: -5.779610633850098
    7. '
' → logprob: -6.279610633850098
    8. ',n' → logprob: -6.404610633850098
    9. ',
' → logprob: -7.154610633850098
    10. '

' → logprob: -7.404610633850098

Token 17: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.31687480211257935
    2. ' os' → logprob: -1.4418747425079346
    3. ' random' → logprob: -4.316874980926514
    4. ' re' → logprob: -4.566874980926514
    5. ' functools' → logprob: -5.691874980926514
    6. 'sys' → logprob: -6.441874980926514
    7. 'os' → logprob: -6.441874980926514
    8. ' threading' → logprob: -6.941874980926514
    9. 'random' → logprob: -7.191874980926514
    10. ' operator' → logprob: -7.316874980926514

Token 18: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 19: 'S' (ID: 50)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8395559191703796
    2. '<|end|>' → logprob: -1.2145559787750244
    3. 'import' → logprob: -2.2145559787750244
    4. '\n' → logprob: -2.7145559787750244
    5. '.' → logprob: -2.8395559787750244
    6. '
' → logprob: -4.464555740356445
    7. '```' → logprob: -5.214555740356445
    8. '<|end|>' → logprob: -5.339555740356445
    9. '

' → logprob: -5.714555740356445
    10. '\' → logprob: -5.964555740356445

Token 20: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.42913925647735596
    2. ' =' → logprob: -1.804139256477356
    3. '=' → logprob: -2.0541391372680664
    4. '[' → logprob: -3.8041391372680664
    5. ' ' → logprob: -4.179139137268066
    6. 'y' → logprob: -4.679139137268066
    7. 'Y' → logprob: -6.304139137268066
    8. ',' → logprob: -6.304139137268066
    9. ')' → logprob: -6.679139137268066
    10. ' .' → logprob: -7.054139137268066

Token 21: ' lambda' (ID: 27871)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.6659954190254211
    2. 'input' → logprob: -0.7909954190254211
    3. ' sys' → logprob: -4.0409955978393555
    4. ' []' → logprob: -5.7909955978393555
    5. ' list' → logprob: -5.9159955978393555
    6. 'list' → logprob: -6.2909955978393555
    7. 'sys' → logprob: -6.4159955978393555
    8. ' "' → logprob: -6.7909955978393555
    9. ' ' → logprob: -6.9159955978393555
    10. ''' → logprob: -6.9159955978393555

Token 22: ':' (ID: 25)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.04183205962181091
    2. ' x' → logprob: -3.4168319702148438
    3. 's' → logprob: -5.416831970214844
    4. 'x' → logprob: -6.791831970214844
    5. ':' → logprob: -6.791831970214844
    6. ' ' → logprob: -7.041831970214844
    7. ' a' → logprob: -8.666831970214844
    8. '  ' → logprob: -9.541831970214844
    9. ' input' → logprob: -9.666831970214844
    10. ' t' → logprob: -10.041831970214844

Token 23: ' sys' (ID: 12228)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5142090916633606
    2. ' input' → logprob: -1.3892090320587158
    3. 'sys' → logprob: -2.514209032058716
    4. ' sys' → logprob: -2.639209032058716
    5. 'int' → logprob: -8.514208793640137
    6. 'list' → logprob: -9.139208793640137
    7. ' list' → logprob: -9.889208793640137
    8. 'str' → logprob: -10.889208793640137
    9. 'raw' → logprob: -11.889208793640137
    10. ' int' → logprob: -12.389208793640137

Token 24: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0857425406575203
    2. '.' → logprob: -2.585742473602295
    3. '.stdout' → logprob: -5.085742473602295
    4. '.argv' → logprob: -8.460742950439453
    5. '.readline' → logprob: -8.835742950439453
    6. ' .' → logprob: -9.085742950439453
    7. '.std' → logprob: -9.335742950439453
    8. '.stderr' → logprob: -10.335742950439453
    9. '.exit' → logprob: -10.585742950439453
    10. '.read' → logprob: -12.585742950439453

Token 25: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0030726639088243246
    2. '.' → logprob: -5.878072738647461
    3. '.read' → logprob: -8.378072738647461
    4. 'read' → logprob: -10.503072738647461
    5. '.readlines' → logprob: -12.503072738647461
    6. ' readline' → logprob: -12.878072738647461
    7. '.Read' → logprob: -13.253072738647461
    8. '_read' → logprob: -13.253072738647461
    9. '<|end|>' → logprob: -16.25307273864746
    10. 'Read' → logprob: -16.37807273864746

Token 26: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.02325700782239437
    2. '()' → logprob: -3.77325701713562
    3. ' ().' → logprob: -12.5232572555542
    4. '(' → logprob: -12.8982572555542
    5. '()
' → logprob: -13.8982572555542
    6. '()

' → logprob: -14.1482572555542
    7. '()<' → logprob: -14.6482572555542
    8. '()).' → logprob: -14.7732572555542
    9. '.' → logprob: -14.8982572555542
    10. '```' → logprob: -14.8982572555542

Token 27: 'rstrip' (ID: 180429)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.008614926598966122
    2. 'rstrip' → logprob: -4.758615016937256
    3. ' strip' → logprob: -14.883614540100098
    4. 'rst' → logprob: -17.883615493774414
    5. '_strip' → logprob: -18.258615493774414
    6. 'str' → logprob: -18.383615493774414
    7. '-strip' → logprob: -19.133615493774414
    8. 'replace' → logprob: -19.258615493774414
    9. '(strip' → logprob: -19.633615493774414
    10. 'read' → logprob: -19.758615493774414

Token 28: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3151891529560089
    2. '(' → logprob: -1.3151891231536865
    3. '()
' → logprob: -7.315189361572266
    4. '(
' → logprob: -7.440189361572266
    5. '()\' → logprob: -8.815189361572266
    6. '()

' → logprob: -9.190189361572266
    7. '().' → logprob: -9.440189361572266
    8. '(

' → logprob: -9.815189361572266
    9. '\' → logprob: -9.940189361572266
    10. ')' → logprob: -10.065189361572266

Token 29: 'M' (ID: 44)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.209599494934082
    2. 'D' → logprob: -1.584599494934082
    3. 'N' → logprob: -2.334599494934082
    4. 'A' → logprob: -2.334599494934082
    5. 'd' → logprob: -2.334599494934082
    6. 'n' → logprob: -2.334599494934082
    7. 'a' → logprob: -2.834599494934082
    8. '#' → logprob: -3.834599494934082
    9. 'T' → logprob: -4.709599494934082
    10. 't' → logprob: -5.209599494934082

Token 30: ' =' (ID: 314)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.7372090816497803
    2. ' =' → logprob: -1.4872090816497803
    3. 'AX' → logprob: -1.7372090816497803
    4. '=' → logprob: -2.4872090816497803
    5. 'AP' → logprob: -3.9872090816497803
    6. '=A' → logprob: -4.487209320068359
    7. '_A' → logprob: -6.737209320068359
    8. '(A' → logprob: -6.987209320068359
    9. '_' → logprob: -7.112209320068359
    10. '(' → logprob: -7.487209320068359

Token 31: ' lambda' (ID: 27871)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.4622563421726227
    2. '10' → logprob: -1.4622563123703003
    3. '100' → logprob: -2.08725643157959
    4. ' int' → logprob: -4.96225643157959
    5. ' ' → logprob: -5.33725643157959
    6. '1' → logprob: -6.83725643157959
    7. '[int' → logprob: -7.46225643157959
    8. '2' → logprob: -8.83725643157959
    9. '0' → logprob: -9.08725643157959
    10. '(int' → logprob: -9.46225643157959

Token 32: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8776155114173889
    2. ':int' → logprob: -1.2526154518127441
    3. 'int' → logprob: -1.3776154518127441
    4. ' :' → logprob: -3.877615451812744
    5. ' int' → logprob: -3.877615451812744
    6. ' sys' → logprob: -6.377615451812744
    7. '(int' → logprob: -6.877615451812744
    8. '()' → logprob: -7.752615451812744
    9. '():' → logprob: -7.877615451812744
    10. '[int' → logprob: -8.127615928649902

Token 33: ' map' (ID: 4014)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.6277514100074768
    2. 'int' → logprob: -0.8777514100074768
    3. ' map' → logprob: -3.127751350402832
    4. ' sys' → logprob: -5.502751350402832
    5. 'map' → logprob: -6.377751350402832
    6. ' ' → logprob: -8.127751350402832
    7. ' list' → logprob: -8.502751350402832
    8. 'sys' → logprob: -8.502751350402832
    9. '  ' → logprob: -9.627751350402832
    10. 'in' → logprob: -10.752751350402832

Token 34: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0039208377711474895
    2. '(' → logprob: -5.628921031951904
    3. '(str' → logprob: -8.503920555114746
    4. 'int' → logprob: -9.878920555114746
    5. '[int' → logprob: -11.003920555114746
    6. '<|end|>' → logprob: -11.128920555114746
    7. '(lambda' → logprob: -11.878920555114746
    8. '()' → logprob: -11.878920555114746
    9. '```' → logprob: -12.003920555114746
    10. '(
' → logprob: -12.128920555114746

Token 35: ',' (ID: 11)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -1.2175869941711426
    2. '(),' → logprob: -1.4675869941711426
    3. '()' → logprob: -1.7175869941711426
    4. '(sys' → logprob: -1.8425869941711426
    5. '(S' → logprob: -2.9675869941711426
    6. ')' → logprob: -3.0925869941711426
    7. '(' → logprob: -4.092586994171143
    8. ',' → logprob: -4.342586994171143
    9. '(()' → logprob: -6.592586994171143
    10. ' ())' → logprob: -6.592586994171143

Token 36: 'sys' (ID: 17324)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.1547207087278366
    2. 'sys' → logprob: -2.1547207832336426
    3. ' S' → logprob: -3.9047207832336426
    4. ' sys' → logprob: -5.029720783233643
    5. ')' → logprob: -7.529720783233643
    6. 's' → logprob: -9.654720306396484
    7. ' ' → logprob: -10.029720306396484
    8. 'Sys' → logprob: -10.904720306396484
    9. '  ' → logprob: -11.404720306396484
    10. '(sys' → logprob: -11.779720306396484

Token 37: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0009620774653740227
    2. '.' → logprob: -7.000962257385254
    3. '.stdout' → logprob: -10.125962257385254
    4. '.argv' → logprob: -12.500962257385254
    5. '.std' → logprob: -13.125962257385254
    6. '.readline' → logprob: -13.125962257385254
    7. ' .' → logprob: -13.500962257385254
    8. 'stdin' → logprob: -14.125962257385254
    9. '.stderr' → logprob: -15.250962257385254
    10. ' stdin' → logprob: -15.750962257385254

Token 38: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0003418991982471198
    2. '.' → logprob: -8.75034236907959
    3. '.stdin' → logprob: -8.75034236907959
    4. '.read' → logprob: -11.00034236907959
    5. '.readlines' → logprob: -12.50034236907959
    6. '().' → logprob: -13.50034236907959
    7. ').' → logprob: -13.62534236907959
    8. ' .' → logprob: -13.62534236907959
    9. '.stdout' → logprob: -16.375341415405273
    10. '.argv' → logprob: -16.500341415405273

Token 39: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.7014437364414334e-05
    2. '()' → logprob: -10.75002670288086
    3. ' ().' → logprob: -13.00002670288086
    4. '())' → logprob: -13.12502670288086
    5. '()).' → logprob: -14.00002670288086
    6. '().__' → logprob: -15.75002670288086
    7. ')' → logprob: -16.12502670288086
    8. '.' → logprob: -16.87502670288086
    9. ').' → logprob: -17.75002670288086
    10. '.readline' → logprob: -17.87502670288086

Token 40: 'rstrip' (ID: 180429)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.22050577402114868
    2. 'rstrip' → logprob: -1.720505714416504
    3. 'strip' → logprob: -3.970505714416504
    4. 'read' → logprob: -10.470505714416504
    5. ' split' → logprob: -11.720505714416504
    6. ')' → logprob: -12.220505714416504
    7. 'rs' → logprob: -13.345505714416504
    8. 'spl' → logprob: -13.845505714416504
    9. 's' → logprob: -13.970505714416504
    10. 'rst' → logprob: -14.095505714416504

Token 41: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00029625516617670655
    2. '()' → logprob: -8.625296592712402
    3. ')' → logprob: -10.375296592712402
    4. ').' → logprob: -10.375296592712402
    5. ' ().' → logprob: -10.500296592712402
    6. '()).' → logprob: -11.000296592712402
    7. '())' → logprob: -11.625296592712402
    8. ' ()' → logprob: -14.375296592712402
    9. '(' → logprob: -15.750296592712402
    10. '()
' → logprob: -16.500295639038086

Token 42: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.816093228830141e-06
    2. ' split' → logprob: -13.37500286102295
    3. 'rstrip' → logprob: -13.87500286102295
    4. 'strip' → logprob: -16.250001907348633
    5. 's' → logprob: -16.750001907348633
    6. 'spl' → logprob: -17.000001907348633
    7. '.split' → logprob: -17.500001907348633
    8. '(split' → logprob: -18.000001907348633
    9. '().' → logprob: -19.250001907348633
    10. 'rs' → logprob: -19.500001907348633

Token 43: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.027674168348312378
    2. ')' → logprob: -3.9026741981506348
    3. '()' → logprob: -5.027674198150635
    4. '()))' → logprob: -7.902674198150635
    5. '))' → logprob: -8.777673721313477
    6. ' ())' → logprob: -11.402673721313477
    7. '())
' → logprob: -11.652673721313477
    8. '();)' → logprob: -13.152673721313477
    9. '(' → logprob: -13.277673721313477
    10. ' )' → logprob: -14.277673721313477

Token 44: 'I' (ID: 40)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5428763628005981
    2. 'd' → logprob: -2.0428762435913086
    3. 'a' → logprob: -2.6678762435913086
    4. 'N' → logprob: -2.9178762435913086
    5. 'D' → logprob: -3.0428762435913086
    6. '#' → logprob: -3.1678762435913086
    7. 'A' → logprob: -3.5428762435913086
    8. 'def' → logprob: -4.042876243591309
    9. 'x' → logprob: -5.042876243591309
    10. '\' → logprob: -5.167876243591309

Token 45: ' =' (ID: 314)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.32974615693092346
    2. '=' → logprob: -1.954746127128601
    3. ' =' → logprob: -2.2047462463378906
    4. 'np' → logprob: -4.329746246337891
    5. 'nt' → logprob: -4.829746246337891
    6. 'N' → logprob: -6.079746246337891
    7. '()' → logprob: -6.329746246337891
    8. 'nit' → logprob: -6.954746246337891
    9. 'm' → logprob: -7.579746246337891
    10. '_n' → logprob: -7.954746246337891

Token 46: ' lambda' (ID: 27871)
  Prédit: 'nt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nt' → logprob: -0.11286894977092743
    2. 'int' → logprob: -2.6128690242767334
    3. 'lambda' → logprob: -4.487868785858154
    4. ' int' → logprob: -4.737868785858154
    5. 'n' → logprob: -4.862868785858154
    6. ' lambda' → logprob: -5.862868785858154
    7. ' nt' → logprob: -6.612868785858154
    8. 't' → logprob: -6.737868785858154
    9. ' n' → logprob: -10.112869262695312
    10. '  ' → logprob: -10.487869262695312

Token 47: ':' (ID: 25)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.07129263132810593
    2. ' int' → logprob: -2.8212926387786865
    3. ':int' → logprob: -5.696292400360107
    4. 'nt' → logprob: -6.696292400360107
    5. ' input' → logprob: -6.696292400360107
    6. ':' → logprob: -7.071292400360107
    7. 'input' → logprob: -7.196292400360107
    8. 'list' → logprob: -7.696292400360107
    9. ' list' → logprob: -7.946292400360107
    10. 'n' → logprob: -8.571292877197266

Token 48: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.05495608225464821
    2. ' int' → logprob: -2.9299561977386475
    3. ' map' → logprob: -10.429956436157227
    4. 'map' → logprob: -10.679956436157227
    5. 'list' → logprob: -12.054956436157227
    6. ' list' → logprob: -12.679956436157227
    7. ' ' → logprob: -13.179956436157227
    8. '[int' → logprob: -13.179956436157227
    9. 'input' → logprob: -13.304956436157227
    10. '	int' → logprob: -13.429956436157227

Token 49: '(sys' (ID: 41042)
  Prédit: '(sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.16114981472492218
    2. '(' → logprob: -1.9111498594284058
    3. '(S' → logprob: -7.161149978637695
    4. '()' → logprob: -9.911149978637695
    5. '(input' → logprob: -9.911149978637695
    6. '(Sys' → logprob: -10.786149978637695
    7. '(s' → logprob: -11.286149978637695
    8. 'sys' → logprob: -12.161149978637695
    9. '(system' → logprob: -12.536149978637695
    10. '(System' → logprob: -13.161149978637695

Token 50: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -8.363617962459102e-05
    2. 'stdin' → logprob: -9.875083923339844
    3. '.readline' → logprob: -11.625083923339844
    4. '.stdout' → logprob: -11.625083923339844
    5. '.' → logprob: -12.000083923339844
    6. '.argv' → logprob: -12.250083923339844
    7. '.std' → logprob: -13.625083923339844
    8. '.version' → logprob: -14.875083923339844
    9. '(stdin' → logprob: -15.125083923339844
    10. ' stdin' → logprob: -15.125083923339844

Token 51: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.1918317824602127
    2. '().' → logprob: -1.9418318271636963
    3. '()' → logprob: -3.8168318271636963
    4. '())' → logprob: -6.066831588745117
    5. '(stdin' → logprob: -6.441831588745117
    6. '.stdin' → logprob: -6.441831588745117
    7. ')' → logprob: -6.816831588745117
    8. '()>' → logprob: -8.066831588745117
    9. '('.')[' → logprob: -8.566831588745117
    10. '.' → logprob: -8.566831588745117

Token 52: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7116048336029053
    2. '())' → logprob: -0.7116048336029053
    3. '().' → logprob: -4.086605072021484
    4. ')' → logprob: -6.836605072021484
    5. '();)' → logprob: -8.836605072021484
    6. '()]' → logprob: -9.336605072021484
    7. ' ())' → logprob: -9.961605072021484
    8. '`()' → logprob: -10.711605072021484
    9. '()>' → logprob: -10.961605072021484
    10. '()))' → logprob: -11.086605072021484

Token 53: 'rstrip' (ID: 180429)
  Prédit: 'rstrip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rstrip' → logprob: -0.16197073459625244
    2. 'read' → logprob: -1.9119707345962524
    3. 'strip' → logprob: -6.911970615386963
    4. ')' → logprob: -7.286970615386963
    5. ' readline' → logprob: -10.286971092224121
    6. '.readline' → logprob: -10.536971092224121
    7. 'decode' → logprob: -13.536971092224121
    8. '())' → logprob: -14.411971092224121
    9. 'rl' → logprob: -14.786971092224121
    10. '.rstrip' → logprob: -14.911971092224121

Token 54: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.46442756056785583
    2. '())' → logprob: -1.4644275903701782
    3. '()' → logprob: -1.9644275903701782
    4. '))' → logprob: -10.589427947998047
    5. '(' → logprob: -10.714427947998047
    6. ' ())' → logprob: -12.589427947998047
    7. '()))' → logprob: -12.714427947998047
    8. ' )' → logprob: -13.339427947998047
    9. '();)' → logprob: -13.839427947998047
    10. '()]' → logprob: -14.839427947998047

Token 55: 'LI' (ID: 14313)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3217005431652069
    2. 'n' → logprob: -2.1967005729675293
    3. 'def' → logprob: -2.6967005729675293
    4. '#' → logprob: -3.0717005729675293
    5. 'a' → logprob: -4.321700572967529
    6. '\' → logprob: -4.321700572967529
    7. 'D' → logprob: -4.696700572967529
    8. '\n' → logprob: -5.946700572967529
    9. 'A' → logprob: -6.071700572967529
    10. '(' → logprob: -6.696700572967529

Token 56: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.49369797110557556
    2. ' =' → logprob: -0.993698000907898
    3. '()' → logprob: -4.4936981201171875
    4. 'mb' → logprob: -4.9936981201171875
    5. 'ambda' → logprob: -7.7436981201171875
    6. 'st' → logprob: -8.118698120117188
    7. '=lambda' → logprob: -8.118698120117188
    8. 'am' → logprob: -9.493698120117188
    9. 'm' → logprob: -9.743698120117188
    10. 'ST' → logprob: -10.243698120117188

Token 57: ' lambda' (ID: 27871)
  Prédit: ' lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.9096266031265259
    2. 'lambda' → logprob: -0.9096266031265259
    3. ' list' → logprob: -2.4096264839172363
    4. '(lambda' → logprob: -2.7846264839172363
    5. 'list' → logprob: -3.1596264839172363
    6. '(list' → logprob: -8.034626960754395
    7. 'map' → logprob: -9.284626960754395
    8. 'm' → logprob: -10.284626960754395
    9. 'ambda' → logprob: -10.284626960754395
    10. '=lambda' → logprob: -10.284626960754395

Token 58: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2588382363319397
    2. ' list' → logprob: -2.383838176727295
    3. ':list' → logprob: -2.758838176727295
    4. 'list' → logprob: -3.508838176727295
    5. '():' → logprob: -5.008838176727295
    6. 'lambda' → logprob: -5.008838176727295
    7. '()' → logprob: -5.133838176727295
    8. '(list' → logprob: -5.133838176727295
    9. '(lambda' → logprob: -5.133838176727295
    10. ' lambda' → logprob: -5.758838176727295

Token 59: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.5762234926223755
    2. ' list' → logprob: -0.8262234926223755
    3. 'map' → logprob: -8.451223373413086
    4. ' map' → logprob: -9.576223373413086
    5. 'sys' → logprob: -15.076223373413086
    6. '	list' → logprob: -15.701223373413086
    7. ' sys' → logprob: -15.826223373413086
    8. 'List' → logprob: -16.076223373413086
    9. 'm' → logprob: -16.826223373413086
    10. '[list' → logprob: -17.076223373413086

Token 60: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.005318669602274895
    2. '(' → logprob: -5.630318641662598
    3. '(int' → logprob: -6.380318641662598
    4. '(M' → logprob: -12.505318641662598
    5. '<int' → logprob: -12.505318641662598
    6. '()' → logprob: -12.630318641662598
    7. ' (' → logprob: -13.130318641662598
    8. '(I' → logprob: -13.630318641662598
    9. '(input' → logprob: -13.880318641662598
    10. 'map' → logprob: -14.005318641662598

Token 61: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00045962471631355584
    2. 'int' → logprob: -8.250459671020508
    3. '(' → logprob: -9.750459671020508
    4. '<int' → logprob: -10.000459671020508
    5. '<|end|>' → logprob: -10.250459671020508
    6. '=int' → logprob: -10.875459671020508
    7. '[int' → logprob: -11.250459671020508
    8. ',int' → logprob: -11.375459671020508
    9. ']int' → logprob: -11.500459671020508
    10. ')' → logprob: -13.500459671020508

Token 62: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002192256273701787
    2. '(sys' → logprob: -6.25219202041626
    3. ',S' → logprob: -8.877192497253418
    4. '=sys' → logprob: -9.752192497253418
    5. ',System' → logprob: -10.377192497253418
    6. 'sys' → logprob: -11.627192497253418
    7. ' ,' → logprob: -11.877192497253418
    8. ',s' → logprob: -12.252192497253418
    9. ',(' → logprob: -12.502192497253418
    10. ',int' → logprob: -13.377192497253418

Token 63: 'sys' (ID: 17324)
  Prédit: 'sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.018258459866046906
    2. ' sys' → logprob: -4.018258571624756
    3. '(sys' → logprob: -9.268258094787598
    4. '	sys' → logprob: -11.768258094787598
    5. '=sys' → logprob: -12.268258094787598
    6. ')' → logprob: -14.018258094787598
    7. '_sys' → logprob: -14.768258094787598
    8. '/sys' → logprob: -15.393258094787598
    9. '.sys' → logprob: -16.018259048461914
    10. 'Sys' → logprob: -16.143259048461914

Token 64: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -8.602024900028482e-05
    2. '.' → logprob: -10.250085830688477
    3. '.readline' → logprob: -10.500085830688477
    4. 'stdin' → logprob: -11.250085830688477
    5. '.stdout' → logprob: -11.750085830688477
    6. '(stdin' → logprob: -14.375085830688477
    7. '.argv' → logprob: -14.750085830688477
    8. ' .' → logprob: -15.000085830688477
    9. '.std' → logprob: -15.125085830688477
    10. ' stdin' → logprob: -15.500085830688477

Token 65: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -2.7372048862162046e-05
    2. '.stdin' → logprob: -10.875027656555176
    3. '.readlines' → logprob: -12.000027656555176
    4. ' readline' → logprob: -13.875027656555176
    5. 'stdin' → logprob: -14.750027656555176
    6. '```' → logprob: -14.875027656555176
    7. '.read' → logprob: -15.875027656555176
    8. '.stdout' → logprob: -16.50002670288086
    9. '().' → logprob: -16.75002670288086
    10. '.' → logprob: -16.87502670288086

Token 66: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.618001053633634e-05
    2. '.readline' → logprob: -10.750025749206543
    3. '()' → logprob: -13.375025749206543
    4. '.' → logprob: -13.875025749206543
    5. ' ().' → logprob: -14.125025749206543
    6. '().__' → logprob: -14.625025749206543
    7. ').' → logprob: -14.625025749206543
    8. ')' → logprob: -15.875025749206543
    9. ' .' → logprob: -16.50002670288086
    10. '.rstrip' → logprob: -17.00002670288086

Token 67: 'rstrip' (ID: 180429)
  Prédit: 'rstrip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rstrip' → logprob: -0.038386739790439606
    2. 'split' → logprob: -3.288386821746826
    3. 'read' → logprob: -8.038386344909668
    4. ')' → logprob: -11.288386344909668
    5. 'strip' → logprob: -12.413386344909668
    6. '.rstrip' → logprob: -12.913386344909668
    7. 'spl' → logprob: -14.288386344909668
    8. '```' → logprob: -14.413386344909668
    9. 'decode' → logprob: -14.913386344909668
    10. '.readline' → logprob: -14.913386344909668

Token 68: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.438573680294212e-06
    2. ' ().' → logprob: -12.375005722045898
    3. '()' → logprob: -13.750005722045898
    4. ')' → logprob: -17.0000057220459
    5. '.' → logprob: -17.2500057220459
    6. ' .' → logprob: -18.5000057220459
    7. '(' → logprob: -18.5000057220459
    8. '.split' → logprob: -18.7500057220459
    9. '()[' → logprob: -19.8750057220459
    10. ' ' → logprob: -20.0000057220459

Token 69: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -5.2524021157296374e-05
    2. ' split' → logprob: -9.875052452087402
    3. '.split' → logprob: -14.750052452087402
    4. 'spl' → logprob: -15.625052452087402
    5. 'strip' → logprob: -15.750052452087402
    6. 'plit' → logprob: -15.875052452087402
    7. '(split' → logprob: -16.25005340576172
    8. ')' → logprob: -17.75005340576172
    9. 'rstrip' → logprob: -17.87505340576172
    10. '_split' → logprob: -19.12505340576172

Token 70: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.5947959423065186
    2. '))' → logprob: -0.8447959423065186
    3. '())' → logprob: -4.969796180725098
    4. '()' → logprob: -4.969796180725098
    5. ')' → logprob: -5.344796180725098
    6. '()))
' → logprob: -12.094796180725098
    7. '(' → logprob: -12.344796180725098
    8. ')))' → logprob: -12.719796180725098
    9. ' ))' → logprob: -13.844796180725098
    10. '())))' → logprob: -14.094796180725098

Token 71: 'LS' (ID: 10172)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.2473335266113281
    2. 'n' → logprob: -1.3723335266113281
    3. 'def' → logprob: -1.6223335266113281
    4. '#' → logprob: -1.7473335266113281
    5. 'D' → logprob: -4.247333526611328
    6. 'a' → logprob: -4.497333526611328
    7. 'class' → logprob: -4.497333526611328
    8. '_' → logprob: -4.872333526611328
    9. '\' → logprob: -5.247333526611328
    10. 'A' → logprob: -5.622333526611328

Token 72: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38733625411987305
    2. '=' → logprob: -1.137336254119873
    3. '()' → logprob: -7.887336254119873
    4. '=lambda' → logprob: -9.387336730957031
    5. '＝' → logprob: -13.512336730957031
    6. '=[]' → logprob: -14.012336730957031
    7. 'A' → logprob: -14.137336730957031
    8. '(' → logprob: -14.137336730957031
    9. '()='' → logprob: -14.637336730957031
    10. ' ()' → logprob: -15.012336730957031

Token 73: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.20297221839427948
    2. ' lambda' → logprob: -1.702972173690796
    3. '(lambda' → logprob: -6.577972412109375
    4. '=lambda' → logprob: -9.077972412109375
    5. 'ambda' → logprob: -10.452972412109375
    6. 'lam' → logprob: -12.077972412109375
    7. ' =' → logprob: -12.452972412109375
    8. '()' → logprob: -12.577972412109375
    9. 'sys' → logprob: -13.202972412109375
    10. 'S' → logprob: -13.702972412109375

Token 74: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.15588442981243134
    2. 'lambda' → logprob: -2.9058845043182373
    3. 'list' → logprob: -3.1558845043182373
    4. 'sys' → logprob: -3.5308845043182373
    5. ' sys' → logprob: -4.905884265899658
    6. ' lambda' → logprob: -5.405884265899658
    7. ' list' → logprob: -5.655884265899658
    8. ' :' → logprob: -6.780884265899658
    9. ':list' → logprob: -7.155884265899658
    10. '():' → logprob: -9.030884742736816

Token 75: ' list' (ID: 1562)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.15190163254737854
    2. ' sys' → logprob: -2.0269017219543457
    3. 'list' → logprob: -5.276901721954346
    4. 'lambda' → logprob: -6.151901721954346
    5. ' lambda' → logprob: -6.776901721954346
    6. ' list' → logprob: -7.151901721954346
    7. '(sys' → logprob: -11.901901245117188
    8. 'input' → logprob: -12.276901245117188
    9. '	sys' → logprob: -12.901901245117188
    10. '=sys' → logprob: -13.151901245117188

Token 76: '(sys' (ID: 41042)
  Prédit: '(sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.18722938001155853
    2. '(' → logprob: -2.4372293949127197
    3. '(str' → logprob: -3.1872293949127197
    4. '(lambda' → logprob: -3.4372293949127197
    5. '(input' → logprob: -5.687229156494141
    6. '(map' → logprob: -6.312229156494141
    7. '(s' → logprob: -6.812229156494141
    8. '(strings' → logprob: -6.937229156494141
    9. '(string' → logprob: -7.312229156494141
    10. '()' → logprob: -7.562229156494141

Token 77: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -3.106736039626412e-05
    2. '.stdout' → logprob: -10.500031471252441
    3. '.argv' → logprob: -13.750031471252441
    4. '.' → logprob: -13.875031471252441
    5. 'stdin' → logprob: -14.250031471252441
    6. '.stderr' → logprob: -14.625031471252441
    7. '.std' → logprob: -15.500031471252441
    8. '.st' → logprob: -16.625030517578125
    9. '.readline' → logprob: -17.625030517578125
    10. ' stdin' → logprob: -17.750030517578125

Token 78: '.readline' (ID: 74673)
  Prédit: '.stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.09231697022914886
    2. '.readline' → logprob: -2.4673168659210205
    3. '().' → logprob: -5.7173171043396
    4. 'stdin' → logprob: -10.217316627502441
    5. '()' → logprob: -11.342316627502441
    6. '.' → logprob: -11.342316627502441
    7. '.stdout' → logprob: -11.967316627502441
    8. '(stdin' → logprob: -12.217316627502441
    9. ').' → logprob: -12.717316627502441
    10. '.in' → logprob: -13.592316627502441

Token 79: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.7120533811976202e-05
    2. '()' → logprob: -11.125017166137695
    3. ' ().' → logprob: -13.125017166137695
    4. '().'' → logprob: -15.125017166137695
    5. '().__' → logprob: -17.375017166137695
    6. '.' → logprob: -17.750017166137695
    7. '()?.' → logprob: -18.375017166137695
    8. '())' → logprob: -18.750017166137695
    9. '()).' → logprob: -18.875017166137695
    10. '(' → logprob: -19.250017166137695

Token 80: 'rstrip' (ID: 180429)
  Prédit: 'rstrip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rstrip' → logprob: -0.0007669831975363195
    2. 'strip' → logprob: -7.500766754150391
    3. 'read' → logprob: -8.50076675415039
    4. 'split' → logprob: -12.00076675415039
    5. ')' → logprob: -13.00076675415039
    6. '().' → logprob: -14.00076675415039
    7. '()' → logprob: -14.62576675415039
    8. '.rstrip' → logprob: -14.87576675415039
    9. '.readline' → logprob: -15.25076675415039
    10. '())' → logprob: -16.12576675415039

Token 81: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0320744551718235
    2. '()' → logprob: -4.032074451446533
    3. '())' → logprob: -4.282074451446533
    4. ')' → logprob: -12.032074928283691
    5. ' ().' → logprob: -13.407074928283691
    6. '(' → logprob: -13.532074928283691
    7. '().'' → logprob: -13.782074928283691
    8. ' ())' → logprob: -13.907074928283691
    9. '()))' → logprob: -14.282074928283691
    10. ' ()' → logprob: -14.407074928283691

Token 82: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.7432603272027336e-06
    2. ' split' → logprob: -13.500001907348633
    3. 'strip' → logprob: -16.125001907348633
    4. 'rstrip' → logprob: -17.125001907348633
    5. 'spl' → logprob: -17.125001907348633
    6. 'decode' → logprob: -18.125001907348633
    7. 's' → logprob: -18.375001907348633
    8. '.split' → logprob: -19.375001907348633
    9. '(split' → logprob: -21.125001907348633
    10. ')' → logprob: -21.750001907348633

Token 83: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.6336326003074646
    2. '()' → logprob: -0.8836326003074646
    3. ')' → logprob: -2.8836326599121094
    4. '()))' → logprob: -9.50863265991211
    5. '))' → logprob: -10.25863265991211
    6. '(' → logprob: -11.88363265991211
    7. ' ())' → logprob: -12.75863265991211
    8. '();)' → logprob: -12.75863265991211
    9. '()]' → logprob: -13.13363265991211
    10. '())
' → logprob: -13.38363265991211

Token 84: 'N' (ID: 45)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.4517221748828888
    2. 'n' → logprob: -1.3267221450805664
    3. '#' → logprob: -2.8267221450805664
    4. 'def' → logprob: -4.576722145080566
    5. 'a' → logprob: -4.701722145080566
    6. 'D' → logprob: -5.201722145080566
    7. 'N' → logprob: -5.576722145080566
    8. 't' → logprob: -6.076722145080566
    9. '
' → logprob: -6.826722145080566
    10. 'r' → logprob: -6.951722145080566

Token 85: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.059532281011343
    2. '=' → logprob: -3.0595321655273438
    3. ' ' → logprob: -4.559532165527344
    4. ',' → logprob: -8.059532165527344
    5. '<|end|>' → logprob: -10.684532165527344
    6. ' =
' → logprob: -10.809532165527344
    7. '.' → logprob: -11.434532165527344
    8. '  ' → logprob: -11.559532165527344
    9. '=int' → logprob: -11.559532165527344
    10. ' ,' → logprob: -12.184532165527344

Token 86: ' S' (ID: 336)
  Prédit: ' I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' I' → logprob: -0.11831215769052505
    2. 'I' → logprob: -2.243312120437622
    3. ' ' → logprob: -5.243312358856201
    4. ' int' → logprob: -8.743311882019043
    5. 'int' → logprob: -10.618311882019043
    6. '10' → logprob: -12.743311882019043
    7. ' ' → logprob: -13.118311882019043
    8. '  ' → logprob: -14.243311882019043
    9. '0' → logprob: -14.368311882019043
    10. ' 
' → logprob: -15.368311882019043

Token 87: '()
' (ID: 1234)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0318514108657837
    2. '(' → logprob: -1.0318514108657837
    3. '()' → logprob: -1.9068514108657837
    4. '=' → logprob: -3.156851291656494
    5. ':' → logprob: -3.906851291656494
    6. 'def' → logprob: -4.156851291656494
    7. '.' → logprob: -4.531851291656494
    8. ',' → logprob: -4.656851291656494
    9. '_' → logprob: -4.781851291656494
    10. '[' → logprob: -4.906851291656494

Token 88: 'trans' (ID: 2623)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.367089182138443
    2. ':' → logprob: -2.61708927154541
    3. '(' → logprob: -2.86708927154541
    4. '[' → logprob: -2.86708927154541
    5. '=' → logprob: -2.86708927154541
    6. 'a' → logprob: -3.86708927154541
    7. '_' → logprob: -4.86708927154541
    8. 's' → logprob: -5.24208927154541
    9. 'n' → logprob: -5.49208927154541
    10. '[:]' → logprob: -5.61708927154541

Token 89: ' =' (ID: 314)
  Prédit: 'late'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'late' → logprob: -0.7508233785629272
    2. ' =' → logprob: -1.5008233785629272
    3. '_table' → logprob: -2.000823497772217
    4. '=' → logprob: -2.125823497772217
    5. 'lation' → logprob: -4.250823497772217
    6. 'lator' → logprob: -4.625823497772217
    7. 'lated' → logprob: -4.875823497772217
    8. '_' → logprob: -5.625823497772217
    9. 'ate' → logprob: -5.875823497772217
    10. 'l' → logprob: -6.000823497772217

Token 90: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.5264376401901245
    2. ' str' → logprob: -1.1514376401901245
    3. '{' → logprob: -2.901437759399414
    4. ' ' → logprob: -4.026437759399414
    5. ' N' → logprob: -4.776437759399414
    6. ' {' → logprob: -5.401437759399414
    7. '{}' → logprob: -5.651437759399414
    8. '   ' → logprob: -7.401437759399414
    9. '  ' → logprob: -7.651437759399414
    10. '{"' → logprob: -7.776437759399414

Token 91: '.m' (ID: 1021)
  Prédit: '.m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.m' → logprob: -0.03727734833955765
    2. 'ans' → logprob: -3.6622774600982666
    3. '.' → logprob: -4.9122772216796875
    4. 'mak' → logprob: -6.0372772216796875
    5. '<|end|>' → logprob: -7.5372772216796875
    6. '```' → logprob: -8.287277221679688
    7. '.translate' → logprob: -9.037277221679688
    8. 'a' → logprob: -10.412277221679688
    9. 'm' → logprob: -10.537277221679688

Token 92: 'ak' (ID: 422)
  Prédit: 'ak'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ak' → logprob: -1.7120533811976202e-05
    2. 'akr' → logprob: -12.250017166137695
    3. 'akn' → logprob: -13.250017166137695
    4. 'ake' → logprob: -13.375017166137695
    5. 'aker' → logprob: -13.375017166137695
    6. 'mak' → logprob: -13.625017166137695
    7. 'a' → logprob: -13.875017166137695
    8. 'aken' → logprob: -14.000017166137695
    9. 'akap' → logprob: -14.000017166137695
    10. 'ka' → logprob: -14.125017166137695

Token 93: 'etr' (ID: 5505)
  Prédit: 'etr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'etr' → logprob: -0.012193736620247364
    2. 'e' → logprob: -4.63719367980957
    3. 'etras' → logprob: -7.13719367980957
    4. 'etable' → logprob: -8.26219367980957
    5. '	' → logprob: -8.26219367980957
    6. 'etra' → logprob: -8.51219367980957
    7. '{' → logprob: -9.26219367980957
    8. '...' → logprob: -9.51219367980957
    9. '```' → logprob: -9.63719367980957
    10. 'etris' → logprob: -9.88719367980957

Token 94: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -8.93579563125968e-05
    2. 'an' → logprob: -9.750089645385742
    3. 'als' → logprob: -11.125089645385742
    4. 'a' → logprob: -12.375089645385742
    5. 'al' → logprob: -12.500089645385742
    6. 'ate' → logprob: -12.625089645385742
    7. '```' → logprob: -13.375089645385742
    8. 'anst' → logprob: -14.500089645385742
    9. '

' → logprob: -14.750089645385742
    10. 'e' → logprob: -14.750089645385742

Token 95: '('' (ID: 706)
  Prédit: '({'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '({' → logprob: -0.2795701026916504
    2. '({'' → logprob: -1.7795701026916504
    3. '(' → logprob: -3.1545701026916504
    4. '({"' → logprob: -3.7795701026916504
    5. '('' → logprob: -4.90457010269165
    6. '("' → logprob: -7.52957010269165
    7. '('',' → logprob: -7.90457010269165
    8. '({
' → logprob: -8.029569625854492
    9. '()' → logprob: -8.029569625854492
    10. '(dict' → logprob: -8.654569625854492

Token 96: '19' (ID: 858)
  Prédit: 'ae'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ae' → logprob: -1.2987974882125854
    2. 'abc' → logprob: -1.9237974882125854
    3. 'AC' → logprob: -2.048797607421875
    4. 'abcdefghijklmnopqrstuvwxyz' → logprob: -2.173797607421875
    5. '01' → logprob: -3.048797607421875
    6. ''' → logprob: -3.173797607421875
    7. 'ac' → logprob: -3.548797607421875
    8. 'at' → logprob: -3.548797607421875
    9. 'AT' → logprob: -3.548797607421875
    10. '012' → logprob: -3.798797607421875

Token 97: '','' (ID: 4074)
  Prédit: 'abcdefghijklmnopqrstuvwxyz'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abcdefghijklmnopqrstuvwxyz' → logprob: -1.8077359199523926
    2. 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' → logprob: -2.0577359199523926
    3. '0' → logprob: -2.1827359199523926
    4. 'at' → logprob: -2.8077359199523926
    5. '012' → logprob: -3.0577359199523926
    6. 'AT' → logprob: -3.1827359199523926
    7. 'AC' → logprob: -3.4327359199523926
    8. 'ABCDEFG' → logprob: -3.8702359199523926
    9. 'AG' → logprob: -4.057735919952393
    10. '01' → logprob: -4.120235919952393

Token 98: '91' (ID: 8956)
  Prédit: '01'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '01' → logprob: -1.2354934215545654
    2. '0' → logprob: -1.7354934215545654
    3. '10' → logprob: -2.8604934215545654
    4. '1' → logprob: -3.4854934215545654
    5. '6' → logprob: -3.4854934215545654
    6. '16' → logprob: -4.2354936599731445
    7. 'ab' → logprob: -4.2354936599731445
    8. '68' → logprob: -4.2354936599731445
    9. 'io' → logprob: -4.2979936599731445
    10. 'o' → logprob: -4.2979936599731445

Token 99: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.00019579214858822525
    2. '')
' → logprob: -10.000195503234863
    3. ''' → logprob: -10.500195503234863
    4. '',' → logprob: -10.750195503234863
    5. '')

' → logprob: -10.750195503234863
    6. '34' → logprob: -11.000195503234863
    7. '23' → logprob: -11.250195503234863
    8. '")' → logprob: -11.750195503234863
    9. '9' → logprob: -12.000195503234863
    10. '');' → logprob: -12.875195503234863

Token 100: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00026097820955328643
    2. 'N' → logprob: -10.000261306762695
    3. 'A' → logprob: -10.125261306762695
    4. 'for' → logprob: -10.375261306762695
    5. 'P' → logprob: -10.875261306762695
    6. 'O' → logprob: -11.125261306762695
    7. 'answer' → logprob: -11.250261306762695
    8. '#' → logprob: -11.250261306762695
    9. 'result' → logprob: -11.375261306762695
    10. 'p' → logprob: -11.500261306762695

Token 101: '('' (ID: 706)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0486438013613224
    2. '(' → logprob: -3.0486438274383545
    3. '((' → logprob: -10.173644065856934
    4. '(S' → logprob: -11.673644065856934
    5. '(n' → logprob: -12.423644065856934
    6. '('' → logprob: -12.423644065856934
    7. '(
' → logprob: -14.423644065856934
    8. '(int' → logprob: -14.798644065856934
    9. '()' → logprob: -15.548644065856934
    10. '(len' → logprob: -16.673643112182617

Token 102: ''.' (ID: 6120)
  Prédit: ''.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.31054922938346863
    2. ''' → logprob: -1.560549259185791
    3. 'N' → logprob: -3.185549259185791
    4. ''+' → logprob: -4.685549259185791
    5. ''N' → logprob: -5.810549259185791
    6. '{' → logprob: -6.810549259185791
    7. '{}'.' → logprob: -7.810549259185791
    8. '')' → logprob: -8.060548782348633
    9. '[N' → logprob: -8.185548782348633
    10. 'Hello' → logprob: -8.310548782348633

Token 103: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -0.14799144864082336
    2. 'translate' → logprob: -2.022991418838501
    3. 'print' → logprob: -5.64799165725708
    4. 'replace' → logprob: -7.27299165725708
    5. 'trans' → logprob: -7.52299165725708
    6. 'strip' → logprob: -8.897991180419922
    7. 'format' → logprob: -9.397991180419922
    8. 'get' → logprob: -9.522991180419922
    9. 'tran' → logprob: -9.772991180419922
    10. 'eval' → logprob: -10.897991180419922

Token 104: '(map' (ID: 16946)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.654452383518219
    2. '([' → logprob: -1.0294523239135742
    3. '[N' → logprob: -2.779452323913574
    4. '(chr' → logprob: -3.279452323913574
    5. ')' → logprob: -5.154452323913574
    6. '(list' → logprob: -5.279452323913574
    7. '[' → logprob: -5.654452323913574
    8. '(' → logprob: -6.029452323913574
    9. 'N' → logprob: -6.279452323913574
    10. 'chr' → logprob: -6.779452323913574

Token 105: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.04991962015628815
    2. '(str' → logprob: -3.924919605255127
    3. '(N' → logprob: -4.049919605255127
    4. '(int' → logprob: -5.174919605255127
    5. '(' → logprob: -5.924919605255127
    6. '(ord' → logprob: -6.424919605255127
    7. '(chr' → logprob: -6.674919605255127
    8. ')(' → logprob: -9.424920082092285
    9. ')' → logprob: -9.549920082092285
    10. '(list' → logprob: -9.674920082092285

Token 106: ' t' (ID: 260)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.2797548770904541
    2. ' x' → logprob: -1.654754877090454
    3. ' c' → logprob: -3.654754877090454
    4. 'c' → logprob: -3.654754877090454
    5. 'a' → logprob: -7.779754638671875
    6. 's' → logprob: -8.654754638671875
    7. ' a' → logprob: -9.029754638671875
    8. ' s' → logprob: -9.279754638671875
    9. ' ' → logprob: -9.529754638671875
    10. 'n' → logprob: -10.529754638671875

Token 107: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10874258726835251
    2. ':t' → logprob: -2.3587424755096436
    3. ' :' → logprob: -5.108742713928223
    4. 't' → logprob: -6.608742713928223
    5. ':int' → logprob: -7.483742713928223
    6. ':N' → logprob: -8.733742713928223
    7. ':str' → logprob: -8.983742713928223
    8. ',t' → logprob: -9.858742713928223
    9. ',' → logprob: -10.358742713928223
    10. ' t' → logprob: -10.733742713928223

Token 108: ' ''.' (ID: 105941)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.4027491807937622
    2. ' t' → logprob: -1.4027491807937622
    3. 'str' → logprob: -3.2777490615844727
    4. 'N' → logprob: -4.277749061584473
    5. ' str' → logprob: -4.402749061584473
    6. 'int' → logprob: -4.902749061584473
    7. 'chr' → logprob: -5.652749061584473
    8. ' N' → logprob: -5.902749061584473
    9. 'trans' → logprob: -6.027749061584473
    10. ' int' → logprob: -6.277749061584473

Token 109: 'join' (ID: 10891)
  Prédit: 'translate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'translate' → logprob: -0.0041217380203306675
    2. 'tr' → logprob: -6.879121780395508
    3. 'trans' → logprob: -7.129121780395508
    4. 'join' → logprob: -7.254121780395508
    5. 'tran' → logprob: -7.629121780395508
    6. 'str' → logprob: -7.754121780395508
    7. 'chr' → logprob: -8.004121780395508
    8. 'mak' → logprob: -8.254121780395508
    9. 'tras' → logprob: -10.129121780395508
    10. 'translator' → logprob: -12.004121780395508

Token 110: '(it' (ID: 29445)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.026956256479024887
    2. '(trans' → logprob: -4.276956081390381
    3. 't' → logprob: -5.276956081390381
    4. '([' → logprob: -5.901956081390381
    5. '(chr' → logprob: -6.151956081390381
    6. 'trans' → logprob: -7.526956081390381
    7. '(list' → logprob: -7.651956081390381
    8. '(' → logprob: -7.651956081390381
    9. '(sorted' → logprob: -7.901956081390381
    10. '(str' → logprob: -8.276956558227539

Token 111: 'ertools' (ID: 88385)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.6205908060073853
    2. 'ertools' → logprob: -1.3705908060073853
    3. 't' → logprob: -1.9955908060073853
    4. '(t' → logprob: -2.9955906867980957
    5. 'r' → logprob: -4.620590686798096
    6. '[t' → logprob: -5.620590686798096
    7. 'm' → logprob: -6.120590686798096
    8. '(trans' → logprob: -7.245590686798096
    9. 'em' → logprob: -7.370590686798096
    10. '.translate' → logprob: -7.620590686798096

Token 112: '.compress' (ID: 164279)
  Prédit: '.per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.per' → logprob: -0.3243218660354614
    2. '.chain' → logprob: -1.3243218660354614
    3. '.product' → logprob: -5.074321746826172
    4. '.c' → logprob: -5.949321746826172
    5. '.acc' → logprob: -6.449321746826172
    6. '.st' → logprob: -8.574321746826172
    7. '.' → logprob: -9.199321746826172
    8. '.is' → logprob: -9.699321746826172
    9. '.com' → logprob: -9.824321746826172
    10. '.p' → logprob: -10.074321746826172

Token 113: '('' (ID: 706)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.3513340950012207
    2. '(t' → logprob: -1.2263340950012207
    3. '(' → logprob: -6.851334095001221
    4. '(S' → logprob: -7.601334095001221
    5. '(trans' → logprob: -7.851334095001221
    6. '(s' → logprob: -8.476333618164062
    7. '((' → logprob: -8.726333618164062
    8. '([' → logprob: -8.851333618164062
    9. '('' → logprob: -8.976333618164062
    10. '(n' → logprob: -9.226333618164062

Token 114: '91' (ID: 8956)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.009665313176810741
    2. 't' → logprob: -4.759665489196777
    3. '19' → logprob: -8.759665489196777
    4. '123' → logprob: -8.759665489196777
    5. 'abcdefghijklmnopqrstuvwxyz' → logprob: -9.509665489196777
    6. '987' → logprob: -9.759665489196777
    7. 'S' → logprob: -10.009665489196777
    8. '012' → logprob: -10.134665489196777
    9. 'trans' → logprob: -10.634665489196777
    10. '10' → logprob: -10.634665489196777

Token 115: '',' (ID: 787)
  Prédit: '23'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '23' → logprob: -0.6416528820991516
    2. '234' → logprob: -1.7666528224945068
    3. '9' → logprob: -3.016652822494507
    4. '',' → logprob: -3.016652822494507
    5. '7' → logprob: -3.266652822494507
    6. '3' → logprob: -3.516652822494507
    7. '2' → logprob: -3.641652822494507
    8. '012' → logprob: -4.516653060913086
    9. '0' → logprob: -4.766653060913086
    10. '235' → logprob: -4.766653060913086

Token 116: ' [' (ID: 723)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.2916054129600525
    2. 'map' → logprob: -2.2916054725646973
    3. '[' → logprob: -2.5416054725646973
    4. '[t' → logprob: -3.9166054725646973
    5. ' t' → logprob: -4.166605472564697
    6. 'trans' → logprob: -4.291605472564697
    7. '(t' → logprob: -5.041605472564697
    8. ' map' → logprob: -5.791605472564697
    9. '[N' → logprob: -5.791605472564697
    10. ' [' → logprob: -6.041605472564697

Token 117: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -1.3337271213531494
    2. 'c' → logprob: -1.5837271213531494
    3. 'x' → logprob: -1.5837271213531494
    4. 'int' → logprob: -1.7087271213531494
    5. 'i' → logprob: -3.0837271213531494
    6. 'a' → logprob: -3.8337271213531494
    7. '1' → logprob: -4.08372688293457
    8. 'trans' → logprob: -4.70872688293457
    9. 'k' → logprob: -4.83372688293457
    10. 'ord' → logprob: -4.95872688293457

Token 118: '=='' (ID: 20651)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.9531719088554382
    2. ' ==' → logprob: -1.703171968460083
    3. '[i' → logprob: -2.578171968460083
    4. '.index' → logprob: -2.828171968460083
    5. '=='' → logprob: -2.953171968460083
    6. '.find' → logprob: -3.328171968460083
    7. '[int' → logprob: -3.953171968460083
    8. 'x' → logprob: -3.953171968460083
    9. '.count' → logprob: -4.203171730041504
    10. ']),' → logprob: -4.453171730041504

Token 119: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4864143133163452
    2. '9' → logprob: -0.9864143133163452
    3. 'N' → logprob: -6.236414432525635
    4. '19' → logprob: -6.236414432525635
    5. 'i' → logprob: -6.361414432525635
    6. 'x' → logprob: -7.236414432525635
    7. 's' → logprob: -7.298914432525635
    8. ''' → logprob: -7.486414432525635
    9. 'a' → logprob: -7.548914432525635
    10. 'n' → logprob: -7.673914432525635

Token 120: '',' (ID: 787)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.30545565485954285
    2. '',' → logprob: -1.6804556846618652
    3. '']' → logprob: -4.305455684661865
    4. '','' → logprob: -4.555455684661865
    5. '']))' → logprob: -4.680455684661865
    6. ',t' → logprob: -4.930455684661865
    7. ','' → logprob: -5.055455684661865
    8. ''' → logprob: -5.055455684661865
    9. ']))' → logprob: -5.055455684661865
    10. '])),' → logprob: -5.180455684661865

Token 121: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.05030659958720207
    2. ' t' → logprob: -3.050306558609009
    3. 'True' → logprob: -6.925306797027588
    4. 'False' → logprob: -8.80030632019043
    5. ' ' → logprob: -8.92530632019043
    6. ' True' → logprob: -9.05030632019043
    7. '1' → logprob: -9.30030632019043
    8. '   ' → logprob: -9.80030632019043
    9. '  ' → logprob: -10.61280632019043
    10. '0' → logprob: -10.86280632019043

Token 122: '!='' (ID: 58874)
  Prédit: '==''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=='' → logprob: -0.003759824438020587
    2. '==' → logprob: -6.003759860992432
    3. '!='' → logprob: -7.378759860992432
    4. ' ==' → logprob: -8.628759384155273
    5. ']=='' → logprob: -9.378759384155273
    6. ' =='' → logprob: -9.503759384155273
    7. '==
' → logprob: -9.628759384155273
    8. '='' → logprob: -9.878759384155273
    9. ']))' → logprob: -9.878759384155273
    10. ''' → logprob: -10.503759384155273

Token 123: '1' (ID: 16)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5916473865509033
    2. '9' → logprob: -1.3416473865509033
    3. '1' → logprob: -1.7166473865509033
    4. '0' → logprob: -5.716647148132324
    5. '"' → logprob: -7.591647148132324
    6. ' '' → logprob: -7.841647148132324
    7. '
' → logprob: -7.841647148132324
    8. ' ' → logprob: -8.091647148132324
    9. '2' → logprob: -8.591647148132324
    10. '

' → logprob: -9.654147148132324

Token 124: '']' (ID: 1089)
  Prédit: ']))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.7045363187789917
    2. '])),' → logprob: -0.8295363187789917
    3. '']' → logprob: -3.8295364379882812
    4. '']))' → logprob: -3.9545364379882812
    5. ']' → logprob: -3.9545364379882812
    6. '
' → logprob: -5.329536437988281
    7. ')]' → logprob: -6.329536437988281
    8. '])))' → logprob: -6.954536437988281
    9. '])' → logprob: -8.204536437988281
    10. ']
' → logprob: -8.329536437988281

Token 125: ')),' (ID: 12098)
  Prédit: ')),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')),' → logprob: -0.05055607855319977
    2. '))),' → logprob: -3.675556182861328
    3. '))' → logprob: -5.050556182861328
    4. ')))),' → logprob: -5.300556182861328
    5. '))))' → logprob: -5.550556182861328
    6. '),' → logprob: -5.800556182861328
    7. ')).' → logprob: -6.050556182861328
    8. ')))' → logprob: -7.300556182861328
    9. ').' → logprob: -7.550556182861328
    10. ' ' → logprob: -7.550556182861328

Token 126: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.009320616722106934
    2. ' N' → logprob: -4.7593207359313965
    3. ' ' → logprob: -8.259320259094238
    4. '  ' → logprob: -9.009320259094238
    5. '   ' → logprob: -9.259320259094238
    6. '[' → logprob: -9.759320259094238
    7. '[N' → logprob: -9.759320259094238
    8. 'list' → logprob: -10.509320259094238
    9. 'trans' → logprob: -11.384320259094238
    10. ')' → logprob: -11.384320259094238

Token 127: ')))' (ID: 15975)
  Prédit: ')))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.1383945494890213
    2. ').' → logprob: -2.763394594192505
    3. ')' → logprob: -3.513394594192505
    4. '.translate' → logprob: -3.763394594192505
    5. '))' → logprob: -4.513394355773926
    6. ')).' → logprob: -6.638394355773926
    7. '))).' → logprob: -7.888394355773926
    8. '.trans' → logprob: -8.263394355773926
    9. ' ' → logprob: -9.263394355773926
    10. '))))' → logprob: -9.513394355773926


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 125
Tokens correctement prédits (1ère position, stricte): 53
Tokens correctement prédits (1ère position, avec adaptation): 53
Tokens correctement prédits (top 10): 100
Précision stricte (1ère position): 42.40%
Précision adaptée (1ère position): 42.40%
Précision (top 10): 80.00%
================================================================================
