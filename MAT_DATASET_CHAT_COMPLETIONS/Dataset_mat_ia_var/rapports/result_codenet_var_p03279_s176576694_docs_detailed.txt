================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:10:43
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from bisect import bisect
from collections import defaultdict

class Bit:
    """
    Implementation of a Binary Indexed Tree (Fenwick Tree) for efficient prefix sums and updates.

    Attributes:
        size (int): The number of elements managed by the tree.
        tree (list): The internal array representing the binary indexed tree.
        depth (int): Number of bits required for indexing, used in lower_bound.
    """
    def __init__(self, n):
        """
        Initialize the BIT (Fenwick Tree).

        Args:
            n (int): Number of items to manage (the maximum index).
        """
        self.size = n
        self.tree = [0] * (n + 1)  # 1-based index
        self.depth = n.bit_length()

    def sum(self, i):
        """
        Compute the prefix sum of tree[1..i].

        Args:
            i (int): Index up to which the sum is computed (inclusive).

        Returns:
            int: The sum of elements from index 1 to i.
        """
        s = 0
        while i > 0:
            s += self.tree[i]
            i -= i & -i
        return s

    def add(self, i, x):
        """
        Add a value to the element at index i.

        Args:
            i (int): Index at which to add (1-based index).
            x (int): Value to add.
        """
        while i <= self.size:
            self.tree[i] += x
            i += i & -i

    def debug_print(self):
        """
        Print the internal status of the BIT with indentation showing tree structure.

        For debugging purposes.
        """
        for i in range(1, self.size + 1):
            j = (i & -i).bit_length()
            print('  ' * j, self.tree[i])

    def lower_bound(self, x):
        """
        Find the lowest index such that the prefix sum is at least x.

        Args:
            x (int): The required prefix sum.

        Returns:
            tuple (int, int): (index, accumulated sum) such that
            sum of elements up to 'index-1' < x <= sum up to 'index'.
        """
        sum_ = 0
        pos = 0
        for i in range(self.depth, -1, -1):
            k = pos + (1 << i)
            if k <= self.size and sum_ + self.tree[k] < x:
                sum_ += self.tree[k]
                pos += 1 << i
        return pos + 1, sum_

# --- Main Logic Begins Here ---

# Read input values
n, m = map(int, input().split())  # n: number of x coordinates, m: number of y coordinates
xxx = list(map(int, input().split()))  # List of x coordinates
yyy = list(map(int, input().split()))  # List of y coordinates (must be sorted for bisect)

ab = defaultdict(set)  # Stores sets of 'b' for each possible 'a'
coordinates = set()    # Unique collection of 'b' values (distances)

# Preprocessing: For each x, determine its nearest y interval, and compute the deltas a and b
for x in xxx:
    # Only process x if it's within the range covered by yyy
    if x < yyy[0] or yyy[-1] < x:
        continue
    # Find index such that yyy[i-1] <= x < yyy[i]
    i = bisect(yyy, x)
    a = x - yyy[i - 1]       # Distance from x to left y boundary
    b = yyy[i] - x           # Distance from x to right y boundary
    ab[a].add(b)             # For each 'a', keep unique 'b' values
    coordinates.add(b)       # Store all unique 'b' values

# Set up BIT indexing for 'b' values. Indexing is shifted by 1 to allow for '0' sum positions.
# Map each sorted unique 'b' value to a unique index starting from 2
cor_dict = {b: i for i, b in enumerate(sorted(coordinates), start=2)}
cdg = cor_dict.get          # Quick access to index of given 'b'
bit = Bit(len(coordinates) + 1)  # Initialize BIT. Size +1 since index starts at 1, and we shift by 1.

# Initialize the tree at position 1 (special base case for dynamic programming)
bit.add(1, 1)

# Perform dynamic programming using the BIT structure
# Iterate over sorted 'a' values (ascending)
for a in sorted(ab):
    # For each possible 'b' corresponding to current 'a', map to BIT index
    # Sort in reverse order so that updates do not affect the computation for smaller indexes in the same iteration
    bbb = sorted(map(cdg, ab[a]), reverse=True)
    for b in bbb:
        # Update BIT at index b: sum ways from previous indices
        bit.add(b, bit.sum(b - 1))

# Output the total number of ways modulo 10^9 + 7
print(bit.sum(bit.size) % (10 ** 9 + 7))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' bis' (ID: 7204)
  → Token d'amorce (pas de prédiction)

Token 2: 'ect' (ID: 534)
  → Token d'amorce (pas de prédiction)

Token 3: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.055610984563827515
    2. 'import' → logprob: -2.9306108951568604
    3. '.' → logprob: -7.4306111335754395
    4. ' ' → logprob: -9.555610656738281
    5. '_import' → logprob: -10.805610656738281
    6. '.import' → logprob: -11.055610656738281
    7. '_' → logprob: -11.680610656738281
    8. ' .' → logprob: -11.805610656738281
    9. '```' → logprob: -12.430610656738281
    10. '	import' → logprob: -13.305610656738281

Token 4: ' bis' (ID: 7204)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.043759625405073166
    2. 'ins' → logprob: -3.29375958442688
    3. ' bis' → logprob: -5.168759822845459
    4. ' ins' → logprob: -12.1687593460083
    5. 'b' → logprob: -12.9187593460083
    6. '```' → logprob: -13.7937593460083
    7. '_ins' → logprob: -14.4187593460083
    8. '*' → logprob: -15.4187593460083
    9. '.ins' → logprob: -15.5437593460083
    10. 'in' → logprob: -16.168760299682617

Token 5: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.0019508942496031523
    2. 'e' → logprob: -6.251950740814209
    3. 'ec' → logprob: -11.126951217651367
    4. 'ct' → logprob: -12.626951217651367
    5. 'ectl' → logprob: -13.626951217651367
    6. 'ext' → logprob: -14.251951217651367
    7. 't' → logprob: -14.626951217651367
    8. 'sect' → logprob: -14.626951217651367
    9. 'ected' → logprob: -14.876951217651367
    10. 'n' → logprob: -15.376951217651367

Token 6: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04546159505844116
    2. '.' → logprob: -3.170461654663086
    3. '_' → logprob: -6.295461654663086
    4. '\(' → logprob: -9.045461654663086
    5. ',' → logprob: -9.420461654663086
    6. '`' → logprob: -9.920461654663086
    7. '```' → logprob: -9.920461654663086
    8. '.b' → logprob: -10.045461654663086
    9. '(
' → logprob: -10.295461654663086
    10. ' (' → logprob: -10.545461654663086

Token 7: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3016505241394043
    2. '_' → logprob: -1.4266505241394043
    3. '.' → logprob: -4.051650524139404
    4. '._' → logprob: -7.801650524139404
    5. '(
' → logprob: -7.801650524139404
    6. '_left' → logprob: -8.426651000976562
    7. ' (' → logprob: -8.551651000976562
    8. ',' → logprob: -8.676651000976562
    9. '[' → logprob: -9.176651000976562
    10. '`' → logprob: -9.426651000976562

Token 8: ' collections' (ID: 22690)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.209711492061615
    2. ' collections' → logprob: -2.3347115516662598
    3. ' sys' → logprob: -3.0847115516662598
    4. ' itertools' → logprob: -4.33471155166626
    5. ' heap' → logprob: -4.58471155166626
    6. ' typing' → logprob: -4.70971155166626
    7. 'collections' → logprob: -5.20971155166626
    8. 'math' → logprob: -5.45971155166626
    9. ' ' → logprob: -6.58471155166626
    10. 'heap' → logprob: -7.33471155166626

Token 9: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.3192615211009979
    2. ' import' → logprob: -1.3192615509033203
    3. '.' → logprob: -5.44426155090332
    4. '<|end|>' → logprob: -6.94426155090332
    5. ' ' → logprob: -7.81926155090332
    6. '```' → logprob: -8.81926155090332
    7. '.Counter' → logprob: -10.56926155090332
    8. ' defaultdict' → logprob: -10.69426155090332
    9. '.import' → logprob: -10.69426155090332
    10. '_import' → logprob: -10.94426155090332

Token 10: ' defaultdict' (ID: 107098)
  Prédit: ' defaultdict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.9454764723777771
    2. ' deque' → logprob: -1.4454765319824219
    3. ' abc' → logprob: -1.6954765319824219
    4. 'deque' → logprob: -1.8204765319824219
    5. 'abc' → logprob: -3.570476531982422
    6. ' named' → logprob: -7.070476531982422
    7. ' import' → logprob: -8.320476531982422
    8. 'default' → logprob: -8.570476531982422
    9. ' ' → logprob: -8.570476531982422
    10. 'import' → logprob: -8.570476531982422

Token 11: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0384880304336548
    2. '

' → logprob: -1.5384880304336548
    3. '\' → logprob: -1.6634880304336548
    4. '_

' → logprob: -2.2884879112243652
    5. '\n' → logprob: -3.0384879112243652
    6. 'def' → logprob: -4.413487911224365
    7. '_' → logprob: -4.538487911224365
    8. '_
' → logprob: -4.663487911224365
    9. '


' → logprob: -4.663487911224365
    10. '
' → logprob: -4.788487911224365

Token 12: 'class' (ID: 1444)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11302610486745834
    2. '(
' → logprob: -3.1130261421203613
    3. 'd' → logprob: -3.6130261421203613
    4. '_' → logprob: -4.238026142120361
    5. 'def' → logprob: -4.488026142120361
    6. '\' → logprob: -5.988026142120361
    7. '_
' → logprob: -6.988026142120361
    8. '(

' → logprob: -7.238026142120361
    9. '
' → logprob: -7.363026142120361
    10. '`' → logprob: -7.613026142120361

Token 13: ' Bit' (ID: 9422)
  Prédit: ' Sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Sorted' → logprob: -0.7819383144378662
    2. ' Trie' → logprob: -2.156938314437866
    3. ' Mult' → logprob: -2.281938314437866
    4. ' Default' → logprob: -2.906938314437866
    5. ' S' → logprob: -3.406938314437866
    6. ' Binary' → logprob: -3.531938314437866
    7. ' Segment' → logprob: -3.656938314437866
    8. ' ' → logprob: -3.781938314437866
    9. ' Ordered' → logprob: -4.031938552856445
    10. ' Histogram' → logprob: -4.281938552856445

Token 14: ':
' (ID: 734)
  Prédit: 'Vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -0.1284514218568802
    2. ':' → logprob: -2.503451347351074
    3. '   ' → logprob: -5.003451347351074
    4. 'set' → logprob: -5.253451347351074
    5. ' :' → logprob: -5.503451347351074
    6. ' ' → logprob: -5.503451347351074
    7. 'vector' → logprob: -5.628451347351074
    8. 'array' → logprob: -5.628451347351074
    9. '  ' → logprob: -6.128451347351074
    10. ' Vector' → logprob: -6.253451347351074

Token 15: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4014139771461487
    2. '   ' → logprob: -1.401413917541504
    3. ' :' → logprob: -2.901413917541504
    4. '    ' → logprob: -3.901413917541504
    5. ' ' → logprob: -6.151413917541504
    6. '```' → logprob: -6.276413917541504
    7. '<|end|>' → logprob: -6.526413917541504
    8. '):' → logprob: -6.651413917541504
    9. '(object' → logprob: -7.776413917541504
    10. '  ' → logprob: -7.901413917541504

Token 16: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10209306329488754
    2. ':' → logprob: -2.602092981338501
    3. '(object' → logprob: -5.35209321975708
    4. '(' → logprob: -5.85209321975708
    5. '```' → logprob: -5.85209321975708
    6. 'def' → logprob: -5.85209321975708
    7. '    ' → logprob: -5.97709321975708
    8. ' ' → logprob: -6.35209321975708
    9. ' def' → logprob: -6.85209321975708
    10. '  ' → logprob: -7.10209321975708

Token 17: '   ' (ID: 271)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.5681334733963013
    2. ' Binary' → logprob: -1.5681334733963013
    3. '   ' → logprob: -1.9431334733963013
    4. ' A' → logprob: -2.3181333541870117
    5. 'Binary' → logprob: -2.4431333541870117
    6. ' """' → logprob: -2.6931333541870117
    7. 'Fen' → logprob: -3.4431333541870117
    8. 'B' → logprob: -4.443133354187012
    9. ' Fen' → logprob: -4.568133354187012
    10. ' Implements' → logprob: -4.568133354187012

Token 18: ' Implementation' (ID: 60216)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.5860080718994141
    2. ' A' → logprob: -1.336008071899414
    3. 'Fen' → logprob: -2.961008071899414
    4. ' """' → logprob: -3.461008071899414
    5. '   ' → logprob: -3.586008071899414
    6. ' Fen' → logprob: -4.086008071899414
    7. ' Binary' → logprob: -4.586008071899414
    8. ' Implements' → logprob: -4.711008071899414
    9. 'Binary' → logprob: -4.961008071899414
    10. '#' → logprob: -5.211008071899414

Token 19: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.7940835952758789
    2. '<|end|>' → logprob: -1.044083595275879
    3. '   ' → logprob: -2.419083595275879
    4. ' ' → logprob: -2.794083595275879
    5. '<|end|>' → logprob: -3.419083595275879
    6. '  ' → logprob: -5.294083595275879
    7. 'of' → logprob: -6.169083595275879
    8. ' for' → logprob: -6.669083595275879
    9. '(' → logprob: -7.419083595275879
    10. ' (' → logprob: -7.544083595275879

Token 20: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.010639104060828686
    2. ' Fen' → logprob: -5.010639190673828
    3. 'Fen' → logprob: -6.510639190673828
    4. ' fen' → logprob: -6.510639190673828
    5. ' the' → logprob: -7.635639190673828
    6. ' an' → logprob: -8.510639190673828
    7. 'a' → logprob: -9.760639190673828
    8. 'fen' → logprob: -9.760639190673828
    9. ' Binary' → logprob: -10.010639190673828
    10. ' ' → logprob: -10.260639190673828

Token 21: ' Binary' (ID: 32672)
  Prédit: ' Binary'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Binary' → logprob: -0.7239944338798523
    2. ' Fen' → logprob: -0.9739944338798523
    3. ' binary' → logprob: -2.848994493484497
    4. 'Fen' → logprob: -3.223994493484497
    5. ' fen' → logprob: -3.348994493484497
    6. ' ' → logprob: -5.848994255065918
    7. 'Binary' → logprob: -6.473994255065918
    8. 'fen' → logprob: -8.973994255065918
    9. ' bit' → logprob: -10.098994255065918
    10. 'binary' → logprob: -10.348994255065918

Token 22: ' Indexed' (ID: 158810)
  Prédit: ' Indexed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Indexed' → logprob: -0.07002101838588715
    2. ' ' → logprob: -3.320020914077759
    3. 'Indexed' → logprob: -3.820020914077759
    4. ' indexed' → logprob: -5.195021152496338
    5. '  ' → logprob: -6.195021152496338
    6. ' Index' → logprob: -7.195021152496338
    7. 'Index' → logprob: -7.945021152496338
    8. '   ' → logprob: -8.44502067565918
    9. 'I' → logprob: -8.82002067565918
    10. 't' → logprob: -9.57002067565918

Token 23: ' Tree' (ID: 14224)
  Prédit: ' Tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Tree' → logprob: -0.07919027656316757
    2. 'Tree' → logprob: -2.579190254211426
    3. ' ' → logprob: -8.329190254211426
    4. '  ' → logprob: -10.079190254211426
    5. ' tree' → logprob: -11.454190254211426
    6. '   ' → logprob: -12.829190254211426
    7. '	Tree' → logprob: -13.329190254211426
    8. '-' → logprob: -14.579190254211426
    9. 'tree' → logprob: -15.079190254211426
    10. '(Tree' → logprob: -15.079190254211426

Token 24: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.04533733054995537
    2. ' for' → logprob: -3.920337438583374
    3. '   ' → logprob: -4.795337200164795
    4. ' or' → logprob: -5.545337200164795
    5. '(Bit' → logprob: -6.170337200164795
    6. '(F' → logprob: -6.420337200164795
    7. '(Binary' → logprob: -6.545337200164795
    8. '<|end|>' → logprob: -6.670337200164795
    9. '```' → logprob: -6.795337200164795
    10. ' to' → logprob: -7.045337200164795

Token 25: 'Fen' (ID: 155141)
  Prédit: 'Fen'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Fen' → logprob: -0.013672348111867905
    2. ' Fen' → logprob: -4.388672351837158
    3. ')' → logprob: -7.513672351837158
    4. 'fen' → logprob: -9.013671875
    5. ' fen' → logprob: -9.388671875
    6. '   ' → logprob: -9.388671875
    7. 'or' → logprob: -9.888671875
    8. 'F' → logprob: -9.888671875
    9. '```' → logprob: -10.013671875
    10. ' or' → logprob: -10.138671875

Token 26: 'wick' (ID: 14105)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.2827990651130676
    2. 'wick' → logprob: -1.4077990055084229
    3. '```' → logprob: -7.657799243927002
    4. 't' → logprob: -8.407798767089844
    5. ')' → logprob: -8.657798767089844
    6. ']' → logprob: -9.032798767089844
    7. '   ' → logprob: -9.157798767089844
    8. '  ' → logprob: -9.532798767089844
    9. 'tree' → logprob: -9.532798767089844
    10. ' w' → logprob: -10.157798767089844

Token 27: ' Tree' (ID: 14224)
  Prédit: ' Tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Tree' → logprob: -0.07846743613481522
    2. 'Tree' → logprob: -2.82846736907959
    3. ')' → logprob: -4.32846736907959
    4. ' ' → logprob: -6.57846736907959
    5. '  ' → logprob: -7.07846736907959
    6. '	Tree' → logprob: -7.95346736907959
    7. '   ' → logprob: -8.57846736907959
    8. ' )' → logprob: -8.57846736907959
    9. '_T' → logprob: -10.20346736907959
    10. ' tree' → logprob: -10.20346736907959

Token 28: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00016551809676457196
    2. ' for' → logprob: -9.125165939331055
    3. '   ' → logprob: -10.875165939331055
    4. ')
' → logprob: -11.250165939331055
    5. ').' → logprob: -11.375165939331055
    6. '<|end|>' → logprob: -12.875165939331055
    7. '```' → logprob: -13.125165939331055
    8. ' )' → logprob: -13.250165939331055
    9. ' ' → logprob: -14.125165939331055
    10. ' data' → logprob: -14.250165939331055

Token 29: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03669662028551102
    2. ' for' → logprob: -3.786696672439575
    3. '   ' → logprob: -5.036696434020996
    4. '):' → logprob: -5.911696434020996
    5. '<|end|>' → logprob: -7.286696434020996
    6. '):
' → logprob: -7.411696434020996
    7. '
' → logprob: -7.536696434020996
    8. '```' → logprob: -7.536696434020996
    9. '  ' → logprob: -8.286696434020996
    10. ' ' → logprob: -8.286696434020996

Token 30: ' efficient' (ID: 12430)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -1.030636191368103
    2. ' prefix' → logprob: -1.655636191368103
    3. ' cumulative' → logprob: -1.905636191368103
    4. ' point' → logprob: -2.0306363105773926
    5. ' frequency' → logprob: -2.9056363105773926
    6. ' sum' → logprob: -3.1556363105773926
    7. ' updating' → logprob: -3.6556363105773926
    8. ' dynamic' → logprob: -4.155636310577393
    9. ' efficient' → logprob: -4.530636310577393
    10. ' ' → logprob: -5.405636310577393

Token 31: ' prefix' (ID: 18633)
  Prédit: ' update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' update' → logprob: -0.7049471139907837
    2. ' updating' → logprob: -1.8299471139907837
    3. ' range' → logprob: -2.079946994781494
    4. ' updates' → logprob: -2.454946994781494
    5. ' prefix' → logprob: -2.704946994781494
    6. ' query' → logprob: -3.579946994781494
    7. ' point' → logprob: -4.704946994781494
    8. ' ' → logprob: -4.829946994781494
    9. ' cumulative' → logprob: -4.829946994781494
    10. ' sum' → logprob: -5.329946994781494

Token 32: ' sums' (ID: 73121)
  Prédit: ' sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.6711528301239014
    2. ' sums' → logprob: -1.4211528301239014
    3. '_sum' → logprob: -1.6711528301239014
    4. 'sum' → logprob: -2.9211528301239014
    5. '_s' → logprob: -5.7961530685424805
    6. ' _' → logprob: -6.7961530685424805
    7. '   ' → logprob: -7.0461530685424805
    8. ' ' → logprob: -8.29615306854248
    9. '_' → logprob: -8.79615306854248
    10. 's' → logprob: -9.92115306854248

Token 33: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00972999818623066
    2. '  ' → logprob: -5.634729862213135
    3. ' and' → logprob: -6.259729862213135
    4. ' ' → logprob: -6.759729862213135
    5. ')' → logprob: -7.134729862213135
    6. '
' → logprob: -7.384729862213135
    7. '```' → logprob: -8.009730339050293
    8. '.' → logprob: -8.134730339050293
    9. '    
' → logprob: -9.009730339050293
    10. ' operations' → logprob: -9.259730339050293

Token 34: ' updates' (ID: 12663)
  Prédit: ' updates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' updates' → logprob: -0.27854329347610474
    2. ' update' → logprob: -1.52854323387146
    3. ' updating' → logprob: -3.90354323387146
    4. ' range' → logprob: -5.653543472290039
    5. 'updates' → logprob: -7.153543472290039
    6. ' point' → logprob: -7.528543472290039
    7. '   ' → logprob: -7.903543472290039
    8. ' queries' → logprob: -8.153543472290039
    9. 'update' → logprob: -8.528543472290039
    10. ' query' → logprob: -8.903543472290039

Token 35: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0062994156032800674
    2. '```' → logprob: -6.1312994956970215
    3. '.' → logprob: -6.5062994956970215
    4. '<|end|>' → logprob: -7.5062994956970215
    5. ')' → logprob: -7.8812994956970215
    6. '    
' → logprob: -8.006299018859863
    7. '
' → logprob: -8.256299018859863
    8. '  ' → logprob: -8.256299018859863
    9. '"""' → logprob: -8.381299018859863
    10. '<|end|>' → logprob: -9.006299018859863

Token 36: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.040833380073308945
    2. '"""' → logprob: -4.040833473205566
    3. '```' → logprob: -5.040833473205566
    4. '    
' → logprob: -5.040833473205566
    5. ' """' → logprob: -5.790833473205566
    6. '    ' → logprob: -6.165833473205566
    7. ' """
' → logprob: -6.665833473205566
    8. '"""
' → logprob: -7.040833473205566
    9. ')' → logprob: -7.290833473205566
    10. ' 
' → logprob: -7.540833473205566

Token 37: ' Attributes' (ID: 70472)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30398353934288025
    2. '"""' → logprob: -1.5539835691452026
    3. '"""
' → logprob: -3.803983449935913
    4. '
' → logprob: -4.678983688354492
    5. '    
' → logprob: -4.928983688354492
    6. '```' → logprob: -5.803983688354492
    7. ' """' → logprob: -5.803983688354492
    8. ' 
' → logprob: -6.553983688354492
    9. ' """
' → logprob: -6.803983688354492
    10. '    ' → logprob: -7.053983688354492

Token 38: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4745456278324127
    2. ':
' → logprob: -1.4745455980300903
    3. '<|end|>' → logprob: -2.72454571723938
    4. '
' → logprob: -2.84954571723938
    5. '   ' → logprob: -4.349545478820801
    6. '<|end|>' → logprob: -5.099545478820801
    7. '```' → logprob: -5.474545478820801
    8. '):
' → logprob: -6.724545478820801
    9. ' of' → logprob: -9.0995454788208
    10. '    
' → logprob: -9.2245454788208

Token 39: '       ' (ID: 309)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.4812265634536743
    2. '```' → logprob: -1.3562265634536743
    3. '   ' → logprob: -2.8562264442443848
    4. ' ' → logprob: -3.2312264442443848
    5. '     
' → logprob: -5.231226444244385
    6. '``' → logprob: -5.356226444244385
    7. '`' → logprob: -5.606226444244385
    8. ' ```' → logprob: -5.856226444244385
    9. ' 
' → logprob: -6.106226444244385
    10. ')' → logprob: -6.981226444244385

Token 40: ' size' (ID: 2349)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15785296261310577
    2. 'size' (adapté à ' size') → logprob: -2.6578528881073
    3. ' size' → logprob: -3.5328528881073
    4. ' tree' → logprob: -4.157853126525879
    5. '       ' → logprob: -4.532853126525879
    6. 'tree' → logprob: -5.032853126525879
    7. 'n' → logprob: -5.282853126525879
    8. 'data' → logprob: -5.782853126525879
    9. '    ' → logprob: -6.657853126525879
    10. ' n' → logprob: -6.657853126525879

Token 41: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7037445902824402
    2. ')' → logprob: -1.828744649887085
    3. ':' → logprob: -1.828744649887085
    4. '```' → logprob: -2.953744649887085
    5. '<|end|>' → logprob: -3.078744649887085
    6. '<|end|>' → logprob: -3.078744649887085
    7. '):' → logprob: -5.078744411468506
    8. ' =' → logprob: -5.453744411468506
    9. '=' → logprob: -5.453744411468506
    10. '    ' → logprob: -5.453744411468506

Token 42: 'int' (ID: 491)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15674953162670135
    2. '):' → logprob: -2.1567494869232178
    3. 'int' → logprob: -4.031749725341797
    4. ':' → logprob: -4.906749725341797
    5. ':int' → logprob: -6.656749725341797
    6. ' int' → logprob: -7.031749725341797
    7. '=int' → logprob: -7.281749725341797
    8. ' )' → logprob: -7.781749725341797
    9. '):
' → logprob: -8.406749725341797
    10. '   ' → logprob: -9.281749725341797

Token 43: '):' (ID: 3127)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5246745347976685
    2. '):' → logprob: -0.8996745347976685
    3. '):
' → logprob: -6.649674415588379
    4. '   ' → logprob: -9.649674415588379
    5. ':' → logprob: -10.149674415588379
    6. '```' → logprob: -10.524674415588379
    7. '<|end|>' → logprob: -10.649674415588379
    8. '):

' → logprob: -10.774674415588379
    9. ' )' → logprob: -11.274674415588379
    10. ' ' → logprob: -11.399674415588379

Token 44: ' The' (ID: 623)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7208564877510071
    2. ')' → logprob: -1.8458564281463623
    3. '   ' → logprob: -1.9708564281463623
    4. '    ' → logprob: -2.5958564281463623
    5. 'The' → logprob: -3.0958564281463623
    6. 'int' → logprob: -3.8458564281463623
    7. ' The' → logprob: -3.8458564281463623
    8. '```' → logprob: -3.8458564281463623
    9. 'the' → logprob: -4.970856666564941
    10. ' int' → logprob: -5.095856666564941

Token 45: ' number' (ID: 2086)
  Prédit: ' number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.46039456129074097
    2. ' size' → logprob: -1.0853946208953857
    3. ' total' → logprob: -3.9603946208953857
    4. ' ' → logprob: -5.085394382476807
    5. ' maximum' → logprob: -6.460394382476807
    6. ' length' → logprob: -6.585394382476807
    7. 'number' → logprob: -6.585394382476807
    8. 'size' → logprob: -7.335394382476807
    9. ' current' → logprob: -7.460394382476807
    10. 'total' → logprob: -9.585394859313965

Token 46: ' of' (ID: 328)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7156187891960144
    2. ' of' → logprob: -1.0906188488006592
    3. '_of' → logprob: -2.215618848800659
    4. ')' → logprob: -3.840618848800659
    5. 'of' → logprob: -4.21561861038208
    6. 's' → logprob: -4.59061861038208
    7. '<|end|>' → logprob: -5.34061861038208
    8. ' ' → logprob: -5.59061861038208
    9. '_tokens' → logprob: -5.59061861038208
    10. '  ' → logprob: -6.09061861038208

Token 47: ' elements' (ID: 8632)
  Prédit: ' elements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' elements' → logprob: -0.2616412043571472
    2. ')' → logprob: -2.136641263961792
    3. '_elements' → logprob: -2.636641263961792
    4. '   ' → logprob: -4.261641025543213
    5. ' )' → logprob: -5.136641025543213
    6. '_' → logprob: -5.386641025543213
    7. 'elements' → logprob: -5.761641025543213
    8. ' _' → logprob: -6.136641025543213
    9. '  ' → logprob: -6.261641025543213
    10. ' ' → logprob: -6.636641025543213

Token 48: ' managed' (ID: 14256)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07664164900779724
    2. '   ' → logprob: -3.07664155960083
    3. '```' → logprob: -3.82664155960083
    4. ' in' → logprob: -6.57664155960083
    5. '
' → logprob: -6.70164155960083
    6. '_' → logprob: -7.20164155960083
    7. ' )' → logprob: -7.70164155960083
    8. '    
' → logprob: -8.326642036437988
    9. '       ' → logprob: -8.576642036437988
    10. '),' → logprob: -8.701642036437988

Token 49: ' by' (ID: 656)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.95974200963974
    2. '```' → logprob: -1.0847420692443848
    3. '   ' → logprob: -1.5847420692443848
    4. ')
' → logprob: -3.0847420692443848
    5. ' by' → logprob: -4.334742069244385
    6. '
' → logprob: -5.084742069244385
    7. '``' → logprob: -5.834742069244385
    8. '    
' → logprob: -6.459742069244385
    9. '):
' → logprob: -7.334742069244385
    10. '<|end|>' → logprob: -7.584742069244385

Token 50: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.12748287618160248
    2. 'the' → logprob: -2.1274828910827637
    3. 'self' → logprob: -8.002482414245605
    4. ')' → logprob: -9.377482414245605
    5. '   ' → logprob: -9.877482414245605
    6. ' self' → logprob: -9.877482414245605
    7. ' )' → logprob: -11.627482414245605
    8. ' this' → logprob: -11.627482414245605
    9. '```' → logprob: -12.127482414245605
    10. 'bit' → logprob: -12.877482414245605

Token 51: ' tree' (ID: 8165)
  Prédit: ' Bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Bit' → logprob: -0.6568112373352051
    2. ' tree' → logprob: -1.031811237335205
    3. 'Bit' → logprob: -3.531811237335205
    4. ' Binary' → logprob: -3.531811237335205
    5. ' bit' → logprob: -3.656811237335205
    6. ' data' → logprob: -5.156811237335205
    7. ' Fen' → logprob: -5.281811237335205
    8. ' BIT' → logprob: -5.281811237335205
    9. 'BIT' → logprob: -5.656811237335205
    10. 'tree' → logprob: -6.031811237335205

Token 52: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0019600363448262215
    2. '   ' → logprob: -6.501959800720215
    3. '```' → logprob: -8.001959800720215
    4. ')
' → logprob: -10.376959800720215
    5. '<|end|>' → logprob: -10.876959800720215
    6. '"""' → logprob: -11.126959800720215
    7. '}' → logprob: -12.001959800720215
    8. '）' → logprob: -12.251959800720215
    9. ' )' → logprob: -12.251959800720215
    10. '\n' → logprob: -12.376959800720215

Token 53: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06616842746734619
    2. ')' → logprob: -2.9411683082580566
    3. '```' → logprob: -4.941168308258057
    4. '"""' → logprob: -5.941168308258057
    5. '"' → logprob: -8.316168785095215
    6. '    ' → logprob: -8.441168785095215
    7. '"""
' → logprob: -8.441168785095215
    8. '`' → logprob: -8.691168785095215
    9. '
' → logprob: -9.066168785095215
    10. '    
' → logprob: -9.191168785095215

Token 54: ' tree' (ID: 8165)
  Prédit: ' tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tree' → logprob: -0.0853085145354271
    2. 'tree' (adapté à ' tree') → logprob: -2.71030855178833
    3. '   ' → logprob: -4.83530855178833
    4. 'data' → logprob: -5.96030855178833
    5. ' data' → logprob: -6.58530855178833
    6. '_tree' → logprob: -6.71030855178833
    7. ' bit' → logprob: -7.71030855178833
    8. ' def' → logprob: -7.83530855178833
    9. ' fen' → logprob: -8.460308074951172
    10. 'def' → logprob: -8.460308074951172

Token 55: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.5842768549919128
    2. ' =' → logprob: -1.8342769145965576
    3. '   ' → logprob: -2.0842769145965576
    4. ' ' → logprob: -2.5842769145965576
    5. '[' → logprob: -3.9592769145965576
    6. ':' → logprob: -3.9592769145965576
    7. '```' → logprob: -4.5842766761779785
    8. '  ' → logprob: -4.9592766761779785
    9. '_size' → logprob: -4.9592766761779785
    10. '(' → logprob: -5.2092766761779785

Token 56: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.01592104509472847
    2. ' list' → logprob: -4.765921115875244
    3. 'List' → logprob: -5.015921115875244
    4. ')' → logprob: -8.390920639038086
    5. ' List' → logprob: -9.015920639038086
    6. '_list' → logprob: -9.265920639038086
    7. '[list' → logprob: -9.390920639038086
    8. '[List' → logprob: -9.890920639038086
    9. '[int' → logprob: -10.640920639038086
    10. '   ' → logprob: -11.265920639038086

Token 57: '):' (ID: 3127)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07236924022436142
    2. '[int' → logprob: -2.697369337081909
    3. '<int' → logprob: -6.94736909866333
    4. '):' → logprob: -7.44736909866333
    5. ' of' → logprob: -8.072369575500488
    6. ' )' → logprob: -8.572369575500488
    7. '```' → logprob: -9.447369575500488
    8. '[' → logprob: -9.697369575500488
    9. '`)' → logprob: -9.697369575500488
    10. '   ' → logprob: -9.822369575500488

Token 58: ' The' (ID: 623)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7877283096313477
    2. ' [' → logprob: -0.9127283096313477
    3. '[int' → logprob: -3.0377283096313477
    4. '   ' → logprob: -3.6627283096313477
    5. '[]' → logprob: -4.037728309631348
    6. ' []' → logprob: -4.162728309631348
    7. '    ' → logprob: -4.287728309631348
    8. '```' → logprob: -4.662728309631348
    9. ' None' → logprob: -5.537728309631348
    10. ' ' → logprob: -5.787728309631348

Token 59: ' internal' (ID: 8812)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7895733714103699
    2. ' list' → logprob: -1.5395734310150146
    3. '   ' → logprob: -2.2895734310150146
    4. ' internal' → logprob: -3.0395734310150146
    5. '    ' → logprob: -3.2895734310150146
    6. '_' → logprob: -3.2895734310150146
    7. ' data' → logprob: -3.9145734310150146
    8. ' tree' → logprob: -4.0395731925964355
    9. ' cumulative' → logprob: -4.4145731925964355
    10. ' [' → logprob: -4.7895731925964355

Token 60: ' array' (ID: 2644)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.09788762778043747
    2. ')' → logprob: -3.9728875160217285
    3. '   ' → logprob: -3.9728875160217285
    4. ' array' → logprob: -4.8478875160217285
    5. ' representing' → logprob: -4.8478875160217285
    6. '<|end|>' → logprob: -4.8478875160217285
    7. 'list' → logprob: -5.3478875160217285
    8. ' of' → logprob: -5.7228875160217285
    9. '```' → logprob: -5.7228875160217285
    10. ' to' → logprob: -6.0978875160217285

Token 61: ' representing' (ID: 25389)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.5349723696708679
    2. '   ' → logprob: -2.1599724292755127
    3. ' representing' → logprob: -2.5349724292755127
    4. ')' → logprob: -2.6599724292755127
    5. '```' → logprob: -2.7849724292755127
    6. '[' → logprob: -3.7849724292755127
    7. 'of' → logprob: -4.034972190856934
    8. '<|end|>' → logprob: -4.659972190856934
    9. ' that' → logprob: -4.909972190856934
    10. ' for' → logprob: -4.909972190856934

Token 62: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.007130088750272989
    2. 'the' → logprob: -5.132130146026611
    3. '   ' → logprob: -6.757130146026611
    4. '  ' → logprob: -11.882129669189453
    5. '```' → logprob: -12.007129669189453
    6. 'Fen' → logprob: -12.132129669189453
    7. ' Fen' → logprob: -12.757129669189453
    8. ')' → logprob: -12.757129669189453
    9. ' ' → logprob: -12.882129669189453
    10. ' a' → logprob: -12.882129669189453

Token 63: ' binary' (ID: 15600)
  Prédit: ' fen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fen' → logprob: -1.1617971658706665
    2. ' tree' → logprob: -1.2867971658706665
    3. ' Fen' → logprob: -2.036797046661377
    4. ' cumulative' → logprob: -2.286797046661377
    5. 'Fen' → logprob: -2.536797046661377
    6. ' binary' → logprob: -2.911797046661377
    7. ' bit' → logprob: -4.036797046661377
    8. ' data' → logprob: -4.911797046661377
    9. ' Binary' → logprob: -5.286797046661377
    10. '   ' → logprob: -5.536797046661377

Token 64: ' indexed' (ID: 44010)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.09273591637611389
    2. ' _' → logprob: -2.467736005783081
    3. ' indexed' → logprob: -6.717735767364502
    4. '   ' → logprob: -7.092735767364502
    5. '_index' → logprob: -7.592735767364502
    6. ' ' → logprob: -7.842735767364502
    7. ' tree' → logprob: -8.71773624420166
    8. 'indexed' → logprob: -8.71773624420166
    9. ')' → logprob: -9.34273624420166
    10. '_tree' → logprob: -9.46773624420166

Token 65: ' tree' (ID: 8165)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2755851447582245
    2. ' _' → logprob: -2.025585174560547
    3. ' tree' → logprob: -2.650585174560547
    4. ' ' → logprob: -3.775585174560547
    5. '_tree' → logprob: -4.275585174560547
    6. 'tree' → logprob: -7.150585174560547
    7. '  ' → logprob: -8.400585174560547
    8. '   ' → logprob: -8.650585174560547
    9. '_s' → logprob: -9.525585174560547
    10. ')' → logprob: -9.900585174560547

Token 66: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.059861306101083755
    2. '   ' → logprob: -2.934861421585083
    3. '```' → logprob: -5.809861183166504
    4. ']' → logprob: -6.434861183166504
    5. ')
' → logprob: -9.434861183166504
    6. '"""' → logprob: -9.684861183166504
    7. '       ' → logprob: -10.559861183166504
    8. '）' → logprob: -10.684861183166504
    9. '")' → logprob: -10.809861183166504
    10. '[' → logprob: -11.059861183166504

Token 67: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016284914687275887
    2. '"""' → logprob: -4.141284942626953
    3. '```' → logprob: -9.016284942626953
    4. '"""
' → logprob: -9.891284942626953
    5. ')' → logprob: -10.391284942626953
    6. ' """' → logprob: -10.641284942626953
    7. '       ' → logprob: -12.141284942626953
    8. '"' → logprob: -12.266284942626953
    9. '""' → logprob: -12.516284942626953
    10. '    ' → logprob: -12.766284942626953

Token 68: ' depth' (ID: 13636)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48241645097732544
    2. ')' → logprob: -1.8574163913726807
    3. '"""' → logprob: -1.9824163913726807
    4. '"""
' → logprob: -3.2324163913726807
    5. '```' → logprob: -4.23241662979126
    6. '
' → logprob: -4.60741662979126
    7. ' """
' → logprob: -4.98241662979126
    8. ' """' → logprob: -5.35741662979126
    9. '       ' → logprob: -5.85741662979126
    10. ')
' → logprob: -6.23241662979126

Token 69: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.057447291910648346
    2. '   ' → logprob: -3.0574471950531006
    3. ' =' → logprob: -5.55744743347168
    4. '```' → logprob: -6.18244743347168
    5. '(' → logprob: -7.05744743347168
    6. '=' → logprob: -7.18244743347168
    7. ' ' → logprob: -7.80744743347168
    8. '(int' → logprob: -8.55744743347168
    9. ')' → logprob: -8.93244743347168
    10. '_' → logprob: -9.05744743347168

Token 70: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.38270559906959534
    2. ' int' → logprob: -2.0077056884765625
    3. ')' → logprob: -2.3827056884765625
    4. ':int' → logprob: -3.8827056884765625
    5. '=int' → logprob: -4.0077056884765625
    6. ' =' → logprob: -4.2577056884765625
    7. '=' → logprob: -4.6327056884765625
    8. '(int' → logprob: -5.1327056884765625
    9. '   ' → logprob: -5.1327056884765625
    10. ':' → logprob: -5.1327056884765625

Token 71: '):' (ID: 3127)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.667866587638855
    2. '):' → logprob: -0.917866587638855
    3. '   ' → logprob: -2.5428667068481445
    4. ':' → logprob: -4.9178667068481445
    5. '):
' → logprob: -7.1678667068481445
    6. '```' → logprob: -8.292866706848145
    7. ')
' → logprob: -8.792866706848145
    8. ' )' → logprob: -9.042866706848145
    9. '
' → logprob: -9.167866706848145
    10. ' ):' → logprob: -9.292866706848145

Token 72: ' Number' (ID: 9184)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9313452243804932
    2. ' ' → logprob: -1.0563452243804932
    3. '    ' → logprob: -1.9313452243804932
    4. ' int' → logprob: -3.056345224380493
    5. ' None' → logprob: -3.681345224380493
    6. ' The' → logprob: -4.181344985961914
    7. 'The' → logprob: -5.306344985961914
    8. 'int' → logprob: -5.431344985961914
    9. '       ' → logprob: -5.931344985961914
    10. '```' → logprob: -5.931344985961914

Token 73: ' of' (ID: 328)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5599938035011292
    2. ' of' → logprob: -1.8099937438964844
    3. '=' → logprob: -2.3099937438964844
    4. 'of' → logprob: -2.4349937438964844
    5. 'o' → logprob: -3.8099937438964844
    6. '_of' → logprob: -4.059993743896484
    7. 's' → logprob: -4.184993743896484
    8. 'ing' → logprob: -5.434993743896484
    9. ' =' → logprob: -5.684993743896484
    10. 'e' → logprob: -6.184993743896484

Token 74: ' bits' (ID: 18189)
  Prédit: ' levels'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' levels' → logprob: -0.48053503036499023
    2. ' bits' → logprob: -1.3555350303649902
    3. ' elements' → logprob: -2.9805350303649902
    4. ' ' → logprob: -3.9805350303649902
    5. ' layers' → logprob: -4.10553503036499
    6. '_' → logprob: -4.23053503036499
    7. '_levels' → logprob: -5.23053503036499
    8. ')' → logprob: -5.48053503036499
    9. '_bits' → logprob: -5.85553503036499
    10. ' _' → logprob: -6.10553503036499

Token 75: ' required' (ID: 3759)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4112011194229126
    2. ' in' → logprob: -1.9112011194229126
    3. '_needed' → logprob: -2.036201000213623
    4. ' to' → logprob: -2.286201000213623
    5. '_' → logprob: -2.536201000213623
    6. ' used' → logprob: -2.661201000213623
    7. ' needed' → logprob: -3.036201000213623
    8. '```' → logprob: -3.161201000213623
    9. '_required' → logprob: -3.661201000213623
    10. ' of' → logprob: -4.036201000213623

Token 76: ' for' (ID: 395)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.009973402135074139
    2. '   ' → logprob: -5.009973526000977
    3. ' for' → logprob: -6.384973526000977
    4. ' in' → logprob: -7.509973526000977
    5. ' ' → logprob: -8.134973526000977
    6. '  ' → logprob: -8.134973526000977
    7. 'to' → logprob: -8.259973526000977
    8. '    ' → logprob: -9.259973526000977
    9. '```' → logprob: -10.884973526000977
    10. '`' → logprob: -11.009973526000977

Token 77: ' indexing' (ID: 105989)
  Prédit: ' indexing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' indexing' → logprob: -0.5762941241264343
    2. ' the' → logprob: -0.9512941241264343
    3. ' self' → logprob: -3.951294183731079
    4. ' size' → logprob: -4.2012939453125
    5. ' representing' → logprob: -4.8262939453125
    6. ' index' → logprob: -5.4512939453125
    7. ' ' → logprob: -6.2012939453125
    8. ' storing' → logprob: -7.2012939453125
    9. 'self' → logprob: -7.9512939453125
    10. ' updating' → logprob: -8.3262939453125

Token 78: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4111747741699219
    2. ')' → logprob: -1.6611747741699219
    3. '```' → logprob: -2.911174774169922
    4. '.' → logprob: -3.286174774169922
    5. '\n' → logprob: -4.036174774169922
    6. '
' → logprob: -4.911174774169922
    7. ' in' → logprob: -5.036174774169922
    8. '`' → logprob: -5.536174774169922
    9. '\' → logprob: -6.036174774169922
    10. '"' → logprob: -6.161174774169922

Token 79: ' used' (ID: 2061)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.308837890625
    2. ')' → logprob: -2.558837890625
    3. '       ' → logprob: -2.808837890625
    4. '"' → logprob: -3.308837890625
    5. '    ' → logprob: -4.183837890625
    6. ' which' → logprob: -4.808837890625
    7. '    
' → logprob: -5.058837890625
    8. ' ' → logprob: -5.058837890625
    9. '  ' → logprob: -5.433837890625
    10. ' used' → logprob: -5.433837890625

Token 80: ' in' (ID: 306)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.14890141785144806
    2. ' to' → logprob: -2.0239014625549316
    3. ' in' → logprob: -5.898901462554932
    4. ' ' → logprob: -6.398901462554932
    5. '   ' → logprob: -7.148901462554932
    6. '    ' → logprob: -7.898901462554932
    7. 'for' → logprob: -8.148900985717773
    8. '  ' → logprob: -8.773900985717773
    9. 'to' → logprob: -9.398900985717773
    10. ' f' → logprob: -10.523900985717773

Token 81: ' lower' (ID: 6931)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.5772257447242737
    2. ' binary' → logprob: -2.202225685119629
    3. '   ' → logprob: -2.452225685119629
    4. ' update' → logprob: -2.952225685119629
    5. ' navigation' → logprob: -3.452225685119629
    6. ' updates' → logprob: -3.577225685119629
    7. ' traversal' → logprob: -3.952225685119629
    8. ' index' → logprob: -4.077225685119629
    9. ' queries' → logprob: -4.077225685119629
    10. ' updating' → logprob: -4.952225685119629

Token 82: '_bound' (ID: 47558)
  Prédit: '_bound'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bound' → logprob: -0.1945907324552536
    2. '_bits' → logprob: -2.6945908069610596
    3. '_' → logprob: -3.4445908069610596
    4. '_level' → logprob: -3.6945908069610596
    5. ' bound' → logprob: -4.3195905685424805
    6. ' level' → logprob: -4.9445905685424805
    7. '_levels' → logprob: -4.9445905685424805
    8. ' bits' → logprob: -5.0695905685424805
    9. 'bound' → logprob: -5.3195905685424805
    10. '_bit' → logprob: -5.5695905685424805

Token 83: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007390690967440605
    2. '   ' → logprob: -6.38239049911499
    3. ')
' → logprob: -6.50739049911499
    4. ').' → logprob: -6.63239049911499
    5. ' search' → logprob: -7.13239049911499
    6. 'search' → logprob: -7.38239049911499
    7. ' )' → logprob: -7.50739049911499
    8. ')`' → logprob: -8.632390975952148
    9. '_search' → logprob: -8.757390975952148
    10. ' ' → logprob: -8.882390975952148

Token 84: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5914021134376526
    2. '"""' → logprob: -0.8414021134376526
    3. ')' → logprob: -5.091402053833008
    4. '```' → logprob: -5.216402053833008
    5. '"' → logprob: -5.966402053833008
    6. ' """' → logprob: -7.966402053833008
    7. '"""
' → logprob: -8.216402053833008
    8. '    ' → logprob: -8.591402053833008
    9. '`' → logprob: -8.841402053833008
    10. '  ' → logprob: -9.466402053833008

Token 85: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3089235723018646
    2. '"""' → logprob: -1.808923602104187
    3. '```' → logprob: -3.1839234828948975
    4. ')' → logprob: -3.1839234828948975
    5. '"' → logprob: -4.933923721313477
    6. '"""
' (adapté à ' """
') → logprob: -5.058923721313477
    7. '`' → logprob: -5.683923721313477
    8. '""' → logprob: -7.808923721313477
    9. '``' → logprob: -7.933923721313477
    10. '
' → logprob: -8.183923721313477

Token 86: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3031368851661682
    2. '    
' → logprob: -1.6781368255615234
    3. '   ' → logprob: -2.6781368255615234
    4. 'def' → logprob: -5.678136825561523
    5. '    ' → logprob: -7.553136825561523
    6. ' 
' → logprob: -7.678136825561523
    7. ' def' → logprob: -7.803136825561523
    8. '

' → logprob: -8.303136825561523
    9. '   
' → logprob: -8.553136825561523
    10. '     
' → logprob: -8.553136825561523

Token 87: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35232579708099365
    2. 'def' (adapté à ' def') → logprob: -1.8523257970809937
    3. ' def' → logprob: -2.602325916290283
    4. '
' → logprob: -2.977325916290283
    5. '    
' → logprob: -4.352325916290283
    6. ' 
' → logprob: -6.352325916290283
    7. '   
' → logprob: -9.102325439453125
    8. ' ' → logprob: -9.602325439453125
    9. '  
' → logprob: -9.852325439453125
    10. '    ' → logprob: -9.977325439453125

Token 88: ' __' (ID: 2516)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.3985248804092407
    2. 'n' → logprob: -2.023524761199951
    3. ' __' → logprob: -2.523524761199951
    4. ' ' → logprob: -3.023524761199951
    5. 'def' → logprob: -3.898524761199951
    6. '   ' → logprob: -4.648524761199951
    7. ' _' → logprob: -4.898524761199951
    8. 'nit' → logprob: -4.898524761199951
    9. 'init' → logprob: -5.148524761199951
    10. ' init' → logprob: -5.523524761199951

Token 89: 'init' (ID: 3287)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.313396155834198
    2. 'init' → logprob: -1.3133962154388428
    3. 'in' → logprob: -9.188396453857422
    4. 'ini' → logprob: -10.563396453857422
    5. ' i' → logprob: -12.688396453857422
    6. 'int' → logprob: -14.188396453857422
    7. ' ' → logprob: -14.313396453857422
    8. ' init' → logprob: -14.438396453857422
    9. '  ' → logprob: -15.063396453857422
    10. '_i' → logprob: -15.188396453857422

Token 90: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.5326669216156006
    2. '(' → logprob: -1.2826669216156006
    3. '(self' → logprob: -2.4076669216156006
    4. ' (' → logprob: -3.6576669216156006
    5. '<|end|>' → logprob: -4.40766716003418
    6. '__' → logprob: -6.15766716003418
    7. '__(
' → logprob: -6.65766716003418
    8. 'self' → logprob: -6.90766716003418
    9. ' ' → logprob: -7.28266716003418
    10. '_' → logprob: -7.40766716003418

Token 91: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0003362966235727072
    2. ' self' → logprob: -8.000336647033691
    3. ' ' → logprob: -14.625336647033691
    4. ')' → logprob: -15.250336647033691
    5. '0' → logprob: -17.125335693359375
    6. '   ' → logprob: -17.125335693359375
    7. 'size' → logprob: -17.500335693359375
    8. ',' → logprob: -17.500335693359375
    9. '
' → logprob: -17.875335693359375
    10. '(self' → logprob: -17.875335693359375

Token 92: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1427895575761795
    2. ' ,' → logprob: -2.017789602279663
    3. ',size' → logprob: -9.642789840698242
    4. ' ' → logprob: -10.892789840698242
    5. ',self' → logprob: -11.642789840698242
    6. 'self' → logprob: -11.767789840698242
    7. '<|end|>' → logprob: -12.767789840698242
    8. ')' → logprob: -13.017789840698242
    9. '   ' → logprob: -13.892789840698242
    10. ' )' → logprob: -14.017789840698242

Token 93: ' n' (ID: 297)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.7033090591430664
    2. ' size' → logprob: -1.2033090591430664
    3. 'self' → logprob: -2.0783090591430664
    4. ' n' → logprob: -3.2033090591430664
    5. 'size' → logprob: -3.3283090591430664
    6. 'n' → logprob: -5.828309059143066
    7. '   ' → logprob: -8.578309059143066
    8. ' ' → logprob: -10.453309059143066
    9. ' capacity' → logprob: -10.953309059143066
    10. '    ' → logprob: -11.203309059143066

Token 94: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06317110359668732
    2. ')' → logprob: -2.813171148300171
    3. ',' → logprob: -7.563170909881592
    4. ':' → logprob: -7.938170909881592
    5. '):
' → logprob: -8.31317138671875
    6. ' ):' → logprob: -9.68817138671875
    7. ' )' → logprob: -11.81317138671875
    8. '**' → logprob: -13.06317138671875
    9. '*' → logprob: -13.43817138671875
    10. '=' → logprob: -14.06317138671875

Token 95: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004524584859609604
    2. '   ' → logprob: -6.5045247077941895
    3. ':' → logprob: -7.0045247077941895
    4. '    ' → logprob: -7.0045247077941895
    5. '        ' → logprob: -8.254524230957031
    6. '        
' → logprob: -8.504524230957031
    7. ',' → logprob: -9.004524230957031
    8. '     ' → logprob: -9.254524230957031
    9. ' ' → logprob: -9.254524230957031
    10. '    
' → logprob: -9.379524230957031

Token 96: ' """
' (ID: 7037)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.3894386887550354
    2. 'self' → logprob: -1.7644386291503906
    3. '       ' → logprob: -1.8894386291503906
    4. 'n' → logprob: -10.26443862915039
    5. '   ' → logprob: -10.38943862915039
    6. ' ' → logprob: -10.51443862915039
    7. '        ' → logprob: -12.01443862915039
    8. '	self' → logprob: -12.01443862915039
    9. '0' → logprob: -12.51443862915039
    10. ' super' → logprob: -12.76443862915039

Token 97: '       ' (ID: 309)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.08861441165208817
    2. ' n' → logprob: -3.7136144638061523
    3. 'self' → logprob: -3.8386144638061523
    4. ' self' → logprob: -3.8386144638061523
    5. '       ' → logprob: -4.088614463806152
    6. '   ' → logprob: -7.963614463806152
    7. ' ' → logprob: -8.713614463806152
    8. '0' → logprob: -10.838614463806152
    9. '     ' → logprob: -10.963614463806152
    10. '        ' → logprob: -11.338614463806152

Token 98: ' Initialize' (ID: 19496)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.46456462144851685
    2. ' self' → logprob: -1.339564561843872
    3. 'self' → logprob: -2.214564561843872
    4. ' super' → logprob: -8.339564323425293
    5. 'super' → logprob: -9.339564323425293
    6. '   ' → logprob: -10.089564323425293
    7. 'n' → logprob: -10.714564323425293
    8. 's' → logprob: -11.464564323425293
    9. ' ' → logprob: -11.714564323425293
    10. '        ' → logprob: -12.589564323425293

Token 99: ' the' (ID: 290)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.2646332085132599
    2. 'self' → logprob: -2.0146331787109375
    3. '(self' → logprob: -2.7646331787109375
    4. ' ' → logprob: -4.6396331787109375
    5. '       ' → logprob: -4.6396331787109375
    6. ' the' → logprob: -5.2646331787109375
    7. ' (' → logprob: -5.7646331787109375
    8. '_' → logprob: -5.7646331787109375
    9. '   ' → logprob: -6.2646331787109375
    10. '(' → logprob: -6.6396331787109375

Token 100: ' BIT' (ID: 52185)
  Prédit: ' size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' size' → logprob: -0.2888898253440857
    2. ' Bit' → logprob: -1.5388898849487305
    3. ' tree' → logprob: -3.9138898849487305
    4. 'size' → logprob: -4.7888898849487305
    5. ' ' → logprob: -5.9138898849487305
    6. 'Bit' → logprob: -6.0388898849487305
    7. ' bit' → logprob: -6.2888898849487305
    8. 'n' → logprob: -8.28888988494873
    9. 'tree' → logprob: -8.66388988494873
    10. ' n' → logprob: -8.78888988494873

Token 101: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6760493516921997
    2. '(' → logprob: -1.4260493516921997
    3. '(self' → logprob: -2.30104923248291
    4. '   ' → logprob: -2.80104923248291
    5. ':' → logprob: -3.30104923248291
    6. ',' → logprob: -3.80104923248291
    7. ' (' → logprob: -4.67604923248291
    8. '(n' → logprob: -4.80104923248291
    9. ')' → logprob: -5.30104923248291
    10. ' with' → logprob: -6.17604923248291

Token 102: 'Fen' (ID: 155141)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.44215109944343567
    2. ' n' → logprob: -1.0671510696411133
    3. '   ' → logprob: -5.067151069641113
    4. ' )' → logprob: -6.317151069641113
    5. 'self' → logprob: -7.067151069641113
    6. ')' → logprob: -7.192151069641113
    7. ',' → logprob: -7.192151069641113
    8. 'size' → logprob: -7.442151069641113
    9. '       ' → logprob: -7.817151069641113
    10. ' size' → logprob: -8.067151069641113

Token 103: 'wick' (ID: 14105)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0960356742143631
    2. '       ' → logprob: -3.2210357189178467
    3. '   ' → logprob: -4.096035480499268
    4. 'wick' → logprob: -4.471035480499268
    5. '    ' → logprob: -4.971035480499268
    6. '```' → logprob: -5.346035480499268
    7. ']' → logprob: -6.596035480499268
    8. ' w' → logprob: -6.721035480499268
    9. 't' → logprob: -6.721035480499268
    10. ')' → logprob: -6.846035480499268

Token 104: ' Tree' (ID: 14224)
  Prédit: 'Tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -0.039101433008909225
    2. ' Tree' → logprob: -3.4141013622283936
    3. '   ' → logprob: -6.164101600646973
    4. ' tree' → logprob: -6.164101600646973
    5. ')' → logprob: -7.414101600646973
    6. '(Tree' → logprob: -8.789101600646973
    7. '  ' → logprob: -8.914101600646973
    8. ' ' → logprob: -9.164101600646973
    9. '    ' → logprob: -10.164101600646973
    10. 'ree' → logprob: -10.414101600646973

Token 105: ').

' (ID: 3991)
  Prédit: ' with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' with' → logprob: -0.5459786653518677
    2. ',' → logprob: -1.2959786653518677
    3. ')' → logprob: -2.420978546142578
    4. ':' → logprob: -4.045978546142578
    5. '   ' → logprob: -4.170978546142578
    6. '       ' → logprob: -4.795978546142578
    7. ' for' → logprob: -5.545978546142578
    8. '(n' → logprob: -5.670978546142578
    9. '):' → logprob: -6.545978546142578
    10. '(self' → logprob: -6.670978546142578

Token 106: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002139197662472725
    2. '        
' → logprob: -7.002139091491699
    3. 'self' → logprob: -7.377139091491699
    4. ' self' → logprob: -8.7521390914917
    5. '
' → logprob: -9.2521390914917
    6. '  
' → logprob: -9.2521390914917
    7. ' 
' → logprob: -9.6271390914917
    8. '   ' → logprob: -10.0021390914917
    9. '    
' → logprob: -10.5021390914917
    10. '        ' → logprob: -10.6271390914917

Token 107: ' Args' (ID: 39185)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04881831631064415
    2. ' self' → logprob: -3.548818349838257
    3. 'self' → logprob: -4.048818111419678
    4. ' super' → logprob: -7.423818111419678
    5. 'n' → logprob: -8.548818588256836
    6. ' 
' → logprob: -8.798818588256836
    7. 'super' → logprob: -9.298818588256836
    8. '        
' → logprob: -9.423818588256836
    9. '        ' → logprob: -9.548818588256836
    10. '   ' → logprob: -9.798818588256836

Token 108: ':
' (ID: 734)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.025660064071416855
    2. ':' → logprob: -4.275660037994385
    3. '=' → logprob: -5.900660037994385
    4. ')' → logprob: -5.900660037994385
    5. '   ' → logprob: -5.900660037994385
    6. '):' → logprob: -6.650660037994385
    7. '<|end|>' → logprob: -7.775660037994385
    8. '       ' → logprob: -8.150660514831543
    9. ' ,' → logprob: -8.275660514831543
    10. 'self' → logprob: -8.525660514831543

Token 109: '           ' (ID: 352)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4315389096736908
    2. ' n' → logprob: -2.0565388202667236
    3. '       ' → logprob: -2.1815388202667236
    4. ' self' → logprob: -2.4315388202667236
    5. 'self' → logprob: -3.9315388202667236
    6. '        ' → logprob: -6.431539058685303
    7. ' ' → logprob: -7.556539058685303
    8. ' ' → logprob: -10.556538581848145
    9. '	n' → logprob: -11.556538581848145
    10. '   ' → logprob: -12.056538581848145

Token 110: ' n' (ID: 297)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5383396744728088
    2. ' self' → logprob: -1.163339614868164
    3. 'n' (adapté à ' n') → logprob: -2.788339614868164
    4. ' n' → logprob: -3.163339614868164
    5. '       ' → logprob: -10.663339614868164
    6. 'size' → logprob: -12.413339614868164
    7. '   ' → logprob: -12.913339614868164
    8. ' size' → logprob: -13.038339614868164
    9. ' ' → logprob: -14.038339614868164
    10. '    ' → logprob: -14.788339614868164

Token 111: ' (' (ID: 350)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10964346677064896
    2. ':' → logprob: -2.3596434593200684
    3. ' ):' → logprob: -4.859643459320068
    4. '):
' → logprob: -7.609643459320068
    5. ' :' → logprob: -7.859643459320068
    6. ')' → logprob: -7.984643459320068
    7. ':int' → logprob: -8.359643936157227
    8. '<|end|>' → logprob: -9.859643936157227
    9. '=' → logprob: -10.484643936157227
    10. ' )' → logprob: -11.234643936157227

Token 112: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0005597044946625829
    2. ' int' → logprob: -7.5005598068237305
    3. ')' → logprob: -12.00055980682373
    4. '):' → logprob: -15.50055980682373
    5. '[int' → logprob: -16.000558853149414
    6. ':int' → logprob: -16.625558853149414
    7. 'self' → logprob: -16.750558853149414
    8. ']int' → logprob: -16.875558853149414
    9. '=int' → logprob: -17.375558853149414
    10. '(int' → logprob: -17.750558853149414

Token 113: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005878782831132412
    2. ')' → logprob: -5.880878925323486
    3. ' ):' → logprob: -5.880878925323486
    4. '):
' → logprob: -8.380878448486328
    5. ':' → logprob: -11.130878448486328
    6. ' )' → logprob: -11.255878448486328
    7. ' ' → logprob: -11.755878448486328
    8. '   ' → logprob: -12.380878448486328
    9. '=' → logprob: -13.380878448486328
    10. '):
' → logprob: -13.630878448486328

Token 114: ' Number' (ID: 9184)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.4823167622089386
    2. 'n' → logprob: -1.1073167324066162
    3. '        ' → logprob: -3.482316732406616
    4. ' The' → logprob: -4.232316970825195
    5. ' self' → logprob: -5.982316970825195
    6. ' size' → logprob: -6.232316970825195
    7. '       ' → logprob: -7.482316970825195
    8. ' ' → logprob: -7.482316970825195
    9. 'The' → logprob: -7.857316970825195
    10. 'self' → logprob: -7.982316970825195

Token 115: ' of' (ID: 328)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6609151363372803
    2. '=' → logprob: -0.9109151363372803
    3. ')' → logprob: -2.6609151363372803
    4. ' ' → logprob: -5.785915374755859
    5. ':' → logprob: -6.535915374755859
    6. '<|end|>' → logprob: -6.660915374755859
    7. ' of' → logprob: -6.785915374755859
    8. ' _' → logprob: -7.410915374755859
    9. '  ' → logprob: -7.910915374755859
    10. 'er' → logprob: -8.16091537475586

Token 116: ' items' (ID: 4732)
  Prédit: ' elements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' elements' → logprob: -0.16732266545295715
    2. ' ' → logprob: -2.0423226356506348
    3. '_' → logprob: -3.7923226356506348
    4. 'elements' → logprob: -6.792322635650635
    5. ')' → logprob: -8.792323112487793
    6. '_elements' → logprob: -8.917323112487793
    7. ' )' → logprob: -9.042323112487793
    8. '  ' → logprob: -9.167323112487793
    9. ' _' → logprob: -10.417323112487793
    10. ' items' → logprob: -10.417323112487793

Token 117: ' to' (ID: 316)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08216025680303574
    2. ')' → logprob: -2.832160234451294
    3. '):
' → logprob: -4.957160472869873
    4. ' ):' → logprob: -5.082160472869873
    5. '=' → logprob: -5.832160472869873
    6. ':' → logprob: -6.582160472869873
    7. '   ' → logprob: -6.832160472869873
    8. ' ' → logprob: -7.457160472869873
    9. ' )' → logprob: -8.457159996032715
    10. '=None' → logprob: -9.082159996032715

Token 118: ' manage' (ID: 11659)
  Prédit: ' manage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' manage' → logprob: -0.5164000988006592
    2. ' ' → logprob: -1.1414000988006592
    3. ' index' → logprob: -3.391400098800659
    4. ' support' → logprob: -4.266400337219238
    5. ' initialize' → logprob: -4.266400337219238
    6. ' track' → logprob: -5.516400337219238
    7. 'manage' → logprob: -6.141400337219238
    8. 'index' → logprob: -6.266400337219238
    9. '  ' → logprob: -6.391400337219238
    10. ' handle' → logprob: -6.516400337219238

Token 119: ' (' (ID: 350)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.047739654779434204
    2. '):
' → logprob: -3.1727397441864014
    3. ')' → logprob: -5.422739505767822
    4. '   ' → logprob: -8.54773998260498
    5. '):
' → logprob: -9.92273998260498
    6. '       ' → logprob: -10.42273998260498
    7. ' ):' → logprob: -10.79773998260498
    8. ',' → logprob: -11.92273998260498
    9. ':' → logprob: -12.29773998260498
    10. '
' → logprob: -13.79773998260498

Token 120: 'the' (ID: 3086)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19211524724960327
    2. '):' → logprob: -1.817115306854248
    3. '):
' → logprob: -4.567115306854248
    4. ').' → logprob: -7.817115306854248
    5. ' )' → logprob: -8.06711483001709
    6. 'n' → logprob: -8.06711483001709
    7. ' ):' → logprob: -8.19211483001709
    8. '   ' → logprob: -8.31711483001709
    9. '+' → logprob: -9.69211483001709
    10. ' ' → logprob: -9.94211483001709

Token 121: ' maximum' (ID: 10562)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.7850605249404907
    2. ')' → logprob: -1.2850605249404907
    3. ' size' → logprob: -2.035060405731201
    4. ' ' → logprob: -2.285060405731201
    5. 'n' → logprob: -4.785060405731201
    6. ' n' → logprob: -5.035060405731201
    7. '  ' → logprob: -5.785060405731201
    8. ' capacity' → logprob: -5.910060405731201
    9. ' elements' → logprob: -6.035060405731201
    10. '   ' → logprob: -6.035060405731201

Token 122: ' index' (ID: 3472)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' )' → logprob: -1.0848811864852905
    2. ')' → logprob: -1.2098811864852905
    3. ' size' → logprob: -2.20988130569458
    4. '_' → logprob: -2.20988130569458
    5. '+' → logprob: -3.08488130569458
    6. ' index' → logprob: -3.45988130569458
    7. '_size' → logprob: -3.95988130569458
    8. ' ' → logprob: -4.33488130569458
    9. ' +' → logprob: -4.33488130569458
    10. ' _' → logprob: -4.95988130569458

Token 123: ').
' (ID: 6294)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.24414680898189545
    2. '+' → logprob: -1.6191468238830566
    3. ' plus' → logprob: -4.244146823883057
    4. ')' → logprob: -5.869146823883057
    5. '):' → logprob: -7.869146823883057
    6. '):
' → logprob: -8.494146347045898
    7. ' )' → logprob: -8.869146347045898
    8. ')+' → logprob: -8.869146347045898
    9. ' ' → logprob: -9.369146347045898
    10. 'plus' → logprob: -9.619146347045898

Token 124: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.676150918006897
    2. ')' → logprob: -1.051150918006897
    3. '):' → logprob: -2.5511507987976074
    4. '):
' → logprob: -3.6761507987976074
    5. '
' → logprob: -4.051150798797607
    6. '        
' → logprob: -5.051150798797607
    7. ':' → logprob: -5.676150798797607
    8. '  
' → logprob: -6.051150798797607
    9. '\n' → logprob: -6.301150798797607
    10. '   ' → logprob: -6.301150798797607

Token 125: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5518256425857544
    2. ')' → logprob: -1.1768256425857544
    3. '):' → logprob: -2.926825523376465
    4. '):
' → logprob: -3.176825523376465
    5. '
' → logprob: -4.426825523376465
    6. ')
' → logprob: -6.051825523376465
    7. '        
' → logprob: -6.176825523376465
    8. '   ' → logprob: -6.676825523376465
    9. ' 
' → logprob: -7.176825523376465
    10. ':' → logprob: -7.426825523376465

Token 126: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001093841710826382
    2. 'self' → logprob: -9.875109672546387
    3. ' self' → logprob: -10.000109672546387
    4. '   ' → logprob: -12.500109672546387
    5. '        
' → logprob: -12.500109672546387
    6. '      ' → logprob: -13.875109672546387
    7. '  
' → logprob: -14.125109672546387
    8. '        ' → logprob: -14.500109672546387
    9. '           ' → logprob: -14.875109672546387
    10. '```' → logprob: -15.000109672546387

Token 127: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.07706709206104279
    2. ' self' → logprob: -2.8270671367645264
    3. '       ' → logprob: -4.202066898345947
    4. '   ' → logprob: -11.077067375183105
    5. ' ' → logprob: -13.202067375183105
    6. 'n' → logprob: -13.827067375183105
    7. '	self' → logprob: -13.827067375183105
    8. 'import' → logprob: -14.327067375183105
    9. 'super' → logprob: -14.827067375183105
    10. 's' → logprob: -15.577067375183105

Token 128: '.size' (ID: 4463)
  Prédit: '.size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.size' → logprob: -0.4339407682418823
    2. '.' → logprob: -1.0589407682418823
    3. ' .' → logprob: -5.683940887451172
    4. '.n' → logprob: -6.683940887451172
    5. '.s' → logprob: -8.058940887451172
    6. ' ' → logprob: -10.058940887451172
    7. '._' → logprob: -10.058940887451172
    8. 'size' → logprob: -10.308940887451172
    9. ' size' → logprob: -10.433940887451172
    10. '.depth' → logprob: -10.933940887451172

Token 129: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759598016738892
    2. '=' → logprob: -0.8259598016738892
    3. '=n' → logprob: -11.450960159301758
    4. ' ' → logprob: -11.950960159301758
    5. '=int' → logprob: -13.700960159301758
    6. ')' → logprob: -14.200960159301758
    7. ',' → logprob: -15.200960159301758
    8. ' =
' → logprob: -15.575960159301758
    9. '    ' → logprob: -15.825960159301758
    10. '=len' → logprob: -16.075960159301758

Token 130: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.253000408411026
    2. 'n' → logprob: -1.5030003786087036
    3. '1' → logprob: -7.003000259399414
    4. ' ' → logprob: -8.753000259399414
    5. '	n' → logprob: -13.378000259399414
    6. '   ' → logprob: -14.628000259399414
    7. '2' → logprob: -15.003000259399414
    8. '4' → logprob: -15.378000259399414
    9. '0' → logprob: -15.503000259399414
    10. '  ' → logprob: -16.065500259399414

Token 131: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.11138608306646347
    2. '
' → logprob: -2.9863860607147217
    3. '       ' → logprob: -3.4863860607147217
    4. ' +' → logprob: -3.7363860607147217
    5. '+
' → logprob: -9.1113862991333
    6. 'self' → logprob: -9.2363862991333
    7. ' 
' → logprob: -9.4863862991333
    8. '+self' → logprob: -9.6113862991333
    9. '        
' → logprob: -9.8613862991333
    10. '        ' → logprob: -9.9863862991333

Token 132: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.047609638422727585
    2. '
' → logprob: -3.672609567642212
    3. '+' → logprob: -3.922609567642212
    4. 'self' → logprob: -7.422609806060791
    5. ' +' → logprob: -7.672609806060791
    6. '        
' → logprob: -9.547609329223633
    7. ',' → logprob: -10.297609329223633
    8. '   ' → logprob: -10.922609329223633
    9. '+self' → logprob: -10.922609329223633
    10. '*' → logprob: -11.172609329223633

Token 133: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.008911886252462864
    2. ' self' → logprob: -4.758912086486816
    3. ' ' → logprob: -9.133912086486816
    4. '1' → logprob: -9.508912086486816
    5. '
' → logprob: -9.883912086486816
    6. '   ' → logprob: -10.383912086486816
    7. '0' → logprob: -11.758912086486816
    8. '       ' → logprob: -12.008912086486816
    9. '	self' → logprob: -12.633912086486816
    10. 's' → logprob: -12.883912086486816

Token 134: '.tree' (ID: 49211)
  Prédit: '.tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tree' → logprob: -0.0014229720691218972
    2. '.' → logprob: -7.376422882080078
    3. ' .' → logprob: -8.001422882080078
    4. 'tree' → logprob: -9.001422882080078
    5. '+' → logprob: -9.126422882080078
    6. '._' → logprob: -10.001422882080078
    7. '	tree' → logprob: -10.001422882080078
    8. ' ' → logprob: -10.376422882080078
    9. ' tree' → logprob: -10.501422882080078
    10. '.bit' → logprob: -10.626422882080078

Token 135: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889914512634277
    2. '=' → logprob: -2.5788991451263428
    3. ' ' → logprob: -12.578899383544922
    4. '[' → logprob: -12.703899383544922
    5. ' =[' → logprob: -13.453899383544922
    6. '=[' → logprob: -15.078899383544922
    7. '<|end|>' → logprob: -15.203899383544922
    8. ')' → logprob: -15.453899383544922
    9. ']' → logprob: -15.578899383544922
    10. '   ' → logprob: -15.828899383544922

Token 136: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.3132629096508026
    2. '[' → logprob: -1.313262939453125
    3. '[n' → logprob: -14.188262939453125
    4. ' ' → logprob: -15.688262939453125
    5. '[self' → logprob: -16.563262939453125
    6. '[int' → logprob: -16.688262939453125
    7. '[node' → logprob: -18.063262939453125
    8. '[class' → logprob: -18.063262939453125
    9. '[new' → logprob: -18.188262939453125
    10. '[size' → logprob: -18.188262939453125

Token 137: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013259568950161338
    2. ' ' → logprob: -6.626326084136963
    3. '۰' → logprob: -17.501325607299805
    4. '00' → logprob: -18.751325607299805
    5. '000' → logprob: -18.751325607299805
    6. '   ' → logprob: -18.813825607299805
    7. ' ' → logprob: -19.001325607299805
    8. '  ' → logprob: -19.126325607299805
    9. ' 
' → logprob: -19.563825607299805
    10. '    ' → logprob: -20.063825607299805

Token 138: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006949561182409525
    2. ']*(' → logprob: -5.006949424743652
    3. ']*' → logprob: -8.381949424743652
    4. ']+' → logprob: -12.631949424743652
    5. ' ]' → logprob: -14.131949424743652
    6. ',' → logprob: -14.131949424743652
    7. ' for' → logprob: -15.381949424743652
    8. ')' → logprob: -16.50695037841797
    9. '+' → logprob: -16.88195037841797
    10. '*' → logprob: -17.00695037841797

Token 139: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.34099000692367554
    2. ',' → logprob: -1.9659900665283203
    3. ']*(' → logprob: -3.0909900665283203
    4. ' *' → logprob: -3.2159900665283203
    5. ' for' → logprob: -3.9659900665283203
    6. ']+' → logprob: -4.46599006652832
    7. '+' → logprob: -4.84099006652832
    8. ' ' → logprob: -5.21599006652832
    9. '*' → logprob: -5.84099006652832
    10. ']*' → logprob: -5.96599006652832

Token 140: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00016444525681436062
    2. ' (' → logprob: -8.750164031982422
    3. '((' → logprob: -12.375164031982422
    4. '(' → logprob: -13.625164031982422
    5. '(self' → logprob: -14.500164031982422
    6. '(nn' → logprob: -17.625164031982422
    7. '(
' → logprob: -17.875164031982422
    8. '(nx' → logprob: -17.875164031982422
    9. '[n' → logprob: -18.250164031982422
    10. '   ' → logprob: -18.375164031982422

Token 141: 'n' (ID: 77)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.018497096374630928
    2. 'n' → logprob: -4.018496990203857
    3. ' (' → logprob: -8.393497467041016
    4. '(self' → logprob: -10.018497467041016
    5. '(' → logprob: -10.268497467041016
    6. ' n' → logprob: -10.393497467041016
    7. 'self' → logprob: -11.643497467041016
    8. '   ' → logprob: -14.268497467041016
    9. '(
' → logprob: -15.268497467041016
    10. '[n' → logprob: -15.268497467041016

Token 142: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04858827963471413
    2. ' +' → logprob: -3.048588275909424
    3. '+
' → logprob: -15.173588752746582
    4. ' +
' → logprob: -15.548588752746582
    5. ' plus' → logprob: -15.923588752746582
    6. '+n' → logprob: -16.173587799072266
    7. '+)' → logprob: -16.298587799072266
    8. ' ' → logprob: -16.548587799072266
    9. ')' → logprob: -17.173587799072266
    10. '1' → logprob: -18.173587799072266

Token 143: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0019291093340143561
    2. ' ' → logprob: -6.25192928314209
    3. '2' → logprob: -15.37692928314209
    4. '   ' → logprob: -16.126928329467773
    5. '```' → logprob: -17.001928329467773
    6. '  ' → logprob: -17.439428329467773
    7. '7' → logprob: -18.564428329467773
    8. '
' → logprob: -18.939428329467773
    9. ')' → logprob: -18.939428329467773
    10. '１' → logprob: -19.126928329467773

Token 144: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.650518920039758e-06
    2. '2' → logprob: -12.750003814697266
    3. ' ' → logprob: -14.125003814697266
    4. '
' → logprob: -17.000003814697266
    5. '```' → logprob: -18.000003814697266
    6. '   ' → logprob: -18.562503814697266
    7. '5' → logprob: -18.812503814697266
    8. '

' → logprob: -19.000003814697266
    9. '{' → logprob: -19.312503814697266
    10. '１' → logprob: -19.375003814697266

Token 145: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8670179997570813e-05
    2. ')
' → logprob: -11.250019073486328
    3. ' )' → logprob: -12.750019073486328
    4. '<|end|>' → logprob: -13.000019073486328
    5. '}' → logprob: -16.250019073486328
    6. ')

' → logprob: -16.375019073486328
    7. '),' → logprob: -16.500019073486328
    8. ')#' → logprob: -17.250019073486328
    9. ')return' → logprob: -17.500019073486328
    10. ')}' → logprob: -17.625019073486328

Token 146: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05227670073509216
    2. '       ' → logprob: -3.677276611328125
    3. '<|end|>' → logprob: -3.677276611328125
    4. '  
' → logprob: -9.552276611328125
    5. '
' → logprob: -9.927276611328125
    6. 'self' → logprob: -10.177276611328125
    7. '        
' → logprob: -10.302276611328125
    8. '    
' → logprob: -10.427276611328125
    9. '   ' → logprob: -10.677276611328125
    10. ',' → logprob: -10.677276611328125

Token 147: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4721572995185852
    2. '       ' → logprob: -1.4721572399139404
    3. '
' → logprob: -1.9721572399139404
    4. 'depth' → logprob: -5.7221574783325195
    5. 'import' → logprob: -6.5971574783325195
    6. '   ' → logprob: -7.3471574783325195
    7. 'for' → logprob: -7.3471574783325195
    8. '        
' → logprob: -7.9721574783325195
    9. 'from' → logprob: -8.34715747833252
    10. '#' → logprob: -8.47215747833252

Token 148: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6231862306594849
    2. 'self' → logprob: -0.9981862306594849
    3. ' self' → logprob: -3.2481861114501953
    4. ' ' → logprob: -3.8731861114501953
    5. '<|end|>' → logprob: -4.373186111450195
    6. '   ' → logprob: -4.998186111450195
    7. '0' → logprob: -5.373186111450195
    8. 'depth' → logprob: -6.123186111450195
    9. 'for' → logprob: -6.248186111450195
    10. 'def' → logprob: -6.498186111450195

Token 149: '1' (ID: 16)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.5143290162086487
    2. 'self' → logprob: -1.514328956604004
    3. '1' → logprob: -2.514328956604004
    4. 'n' → logprob: -2.639328956604004
    5. '0' → logprob: -4.139328956604004
    6. '(self' → logprob: -6.014328956604004
    7. 'size' → logprob: -6.014328956604004
    8. ' (' → logprob: -6.389328956604004
    9. '
' → logprob: -6.389328956604004
    10. 'def' → logprob: -6.889328956604004

Token 150: '-based' (ID: 8235)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 151: ' index' (ID: 3472)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 152: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7616004943847656
    2. '<|end|>' → logprob: -0.8866004943847656
    3. '       ' → logprob: -2.1366004943847656
    4. '<|end|>' → logprob: -6.886600494384766
    5. '   ' → logprob: -7.386600494384766
    6. '        
' → logprob: -8.386600494384766
    7. 'self' → logprob: -8.511600494384766
    8. '    
' → logprob: -8.636600494384766
    9. ' ' → logprob: -8.636600494384766
    10. ')' → logprob: -9.511600494384766

Token 153: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00680524529889226
    2. '
' → logprob: -5.506805419921875
    3. '<|end|>' → logprob: -6.256805419921875
    4. '   ' → logprob: -8.381805419921875
    5. '        
' → logprob: -8.506805419921875
    6. 'self' → logprob: -8.756805419921875
    7. ' ' → logprob: -10.256805419921875
    8. '        ' → logprob: -10.506805419921875
    9. '    
' → logprob: -10.506805419921875
    10. '	' → logprob: -10.756805419921875

Token 154: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.017024796456098557
    2. 'd' → logprob: -4.517024993896484
    3. 'depth' → logprob: -6.392024993896484
    4. 'x' → logprob: -6.767024993896484
    5. 'import' → logprob: -7.017024993896484
    6. '       ' → logprob: -7.142024993896484
    7. 'i' → logprob: -7.767024993896484
    8. '   ' → logprob: -8.017024993896484
    9. ' self' → logprob: -8.267024993896484
    10. 'from' → logprob: -8.892024993896484

Token 155: '.depth' (ID: 89791)
  Prédit: '.depth'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.depth' → logprob: -0.00043221889063715935
    2. '.' → logprob: -8.000432014465332
    3. 'depth' → logprob: -9.750432014465332
    4. ' .' → logprob: -10.500432014465332
    5. '.Depth' → logprob: -13.125432014465332
    6. ' depth' → logprob: -13.500432014465332
    7. '.dep' → logprob: -13.500432014465332
    8. '-depth' → logprob: -13.750432014465332
    9. '_depth' → logprob: -13.750432014465332
    10. '.deep' → logprob: -14.000432014465332

Token 156: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07890311628580093
    2. '=' → logprob: -2.5789031982421875
    3. ' ' → logprob: -11.328903198242188
    4. '=n' → logprob: -14.328903198242188
    5. '=len' → logprob: -15.078903198242188
    6. '=int' → logprob: -15.203903198242188
    7. ' =(' → logprob: -16.953903198242188
    8. ' =
' → logprob: -17.328903198242188
    9. ',' → logprob: -17.453903198242188
    10. '<|end|>' → logprob: -17.578903198242188

Token 157: ' n' (ID: 297)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.4336704909801483
    2. ' (' → logprob: -1.6836705207824707
    3. 'n' → logprob: -2.1836705207824707
    4. ' n' → logprob: -3.0586705207824707
    5. '(' → logprob: -5.933670520782471
    6. '1' → logprob: -6.558670520782471
    7. '
' → logprob: -6.683670520782471
    8. ' ' → logprob: -7.308670520782471
    9. '(self' → logprob: -8.433670043945312
    10. '((' → logprob: -9.308670043945312

Token 158: '.bit' (ID: 61866)
  Prédit: '.bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.bit' → logprob: -0.018337000161409378
    2. '.' → logprob: -4.018336772918701
    3. ' .' → logprob: -8.64333724975586
    4. ').' → logprob: -12.26833724975586
    5. 'bit' → logprob: -12.76833724975586
    6. '.to' → logprob: -14.89333724975586
    7. '_bit' → logprob: -15.01833724975586
    8. ' bit' → logprob: -15.01833724975586
    9. '>.' → logprob: -15.26833724975586
    10. '().' → logprob: -15.39333724975586

Token 159: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -3.173704271830502e-06
    2. 'length' → logprob: -12.87500286102295
    3. '_l' → logprob: -15.50000286102295
    4. 'ength' → logprob: -16.375003814697266
    5. '_' → logprob: -16.500003814697266
    6. '_width' → logprob: -17.500003814697266
    7. '_LENGTH' → logprob: -17.875003814697266
    8. '```' → logprob: -17.875003814697266
    9. '\' → logprob: -18.125003814697266
    10. '_le' → logprob: -18.250003814697266

Token 160: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -5.0259150157216936e-05
    2. '(' → logprob: -10.87505054473877
    3. ' ()' → logprob: -11.12505054473877
    4. '()
' → logprob: -11.37505054473877
    5. '()+' → logprob: -13.00005054473877
    6. '()<<' → logprob: -14.12505054473877
    7. '()*' → logprob: -15.25005054473877
    8. '(),' → logprob: -15.25005054473877
    9. '()-' → logprob: -15.62505054473877
    10. '()

' → logprob: -15.62505054473877

Token 161: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07389029860496521
    2. '    
' → logprob: -3.073890209197998
    3. '  
' → logprob: -4.698890209197998
    4. '<|end|>' → logprob: -4.823890209197998
    5. '   ' → logprob: -5.698890209197998
    6. ' 
' → logprob: -5.823890209197998
    7. '<|end|>' → logprob: -7.823890209197998
    8. '   
' → logprob: -7.823890209197998
    9. '        
' → logprob: -8.448890686035156
    10. '

' → logprob: -8.698890686035156

Token 162: ' def' (ID: 1056)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12609700858592987
    2. '    
' → logprob: -3.2510969638824463
    3. ' 
' → logprob: -3.5010969638824463
    4. '   ' → logprob: -3.8760969638824463
    5. '  
' → logprob: -4.126097202301025
    6. 'def' (adapté à ' def') → logprob: -4.751097202301025
    7. ' def' → logprob: -6.751097202301025
    8. '   
' → logprob: -7.251097202301025
    9. '<|end|>' → logprob: -7.251097202301025
    10. '	
' → logprob: -7.501097202301025

Token 163: ' sum' (ID: 4215)
  Prédit: '_update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_update' → logprob: -0.5004522204399109
    2. ' update' → logprob: -1.6254522800445557
    3. '_' → logprob: -2.0004522800445557
    4. 'update' → logprob: -3.5004522800445557
    5. '_add' → logprob: -4.125452041625977
    6. ' _' → logprob: -5.250452041625977
    7. ' add' → logprob: -5.875452041625977
    8. 'sum' → logprob: -6.000452041625977
    9. '_sum' → logprob: -6.250452041625977
    10. 'add' → logprob: -7.250452041625977

Token 164: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.5890529155731201
    2. '_' → logprob: -1.4640529155731201
    3. '(' → logprob: -1.8390529155731201
    4. '_prefix' → logprob: -3.33905291557312
    5. '_up' → logprob: -4.589053153991699
    6. ' (' → logprob: -6.089053153991699
    7. '_range' → logprob: -6.589053153991699
    8. '_query' → logprob: -6.839053153991699
    9. '_until' → logprob: -6.839053153991699
    10. '_(' → logprob: -6.964053153991699

Token 165: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08220856636762619
    2. '(self' → logprob: -2.8322086334228516
    3. ')' → logprob: -4.582208633422852
    4. '(' → logprob: -6.582208633422852
    5. '   ' → logprob: -6.582208633422852
    6. 'self' → logprob: -6.707208633422852
    7. ')(' → logprob: -6.832208633422852
    8. '):' → logprob: -6.957208633422852
    9. '_,' → logprob: -6.957208633422852
    10. ' ' → logprob: -8.082208633422852

Token 166: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.22817398607730865
    2. ' i' → logprob: -1.7281739711761475
    3. 'idx' → logprob: -4.478174209594727
    4. 'self' → logprob: -4.728174209594727
    5. 'r' → logprob: -6.228174209594727
    6. 'index' → logprob: -6.603174209594727
    7. ' self' → logprob: -6.728174209594727
    8. ' idx' → logprob: -6.978174209594727
    9. ' r' → logprob: -8.228174209594727
    10. 'k' → logprob: -8.603174209594727

Token 167: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006549697834998369
    2. '):
' → logprob: -5.381549835205078
    3. ')' → logprob: -6.506549835205078
    4. ':' → logprob: -8.381549835205078
    5. ' ):' → logprob: -9.881549835205078
    6. '   ' → logprob: -10.006549835205078
    7. '(self' → logprob: -10.256549835205078
    8. 'self' → logprob: -10.381549835205078
    9. ',' → logprob: -10.756549835205078
    10. '):
' → logprob: -12.131549835205078

Token 168: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03974870219826698
    2. ':' → logprob: -4.164748668670654
    3. '(self' → logprob: -4.164748668670654
    4. '(' → logprob: -6.414748668670654
    5. '   ' → logprob: -6.789748668670654
    6. '        ' → logprob: -7.039748668670654
    7. '<|end|>' → logprob: -7.164748668670654
    8. ',' → logprob: -7.539748668670654
    9. 'self' → logprob: -7.664748668670654
    10. '<|end|>' → logprob: -8.164749145507812

Token 169: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0735654830932617
    2. 's' → logprob: -1.1985654830932617
    3. 'result' → logprob: -2.0735654830932617
    4. ' s' → logprob: -2.1985654830932617
    5. '   ' → logprob: -3.1985654830932617
    6. '    ' → logprob: -3.3235654830932617
    7. 'total' → logprob: -4.448565483093262
    8. ' ' → logprob: -4.823565483093262
    9. 'res' → logprob: -5.198565483093262
    10. ' result' → logprob: -5.698565483093262

Token 170: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003142070025205612
    2. '    ' → logprob: -6.3781418800354
    3. '   ' → logprob: -7.6281418800354
    4. 's' → logprob: -8.378142356872559
    5. ' """' → logprob: -8.628142356872559
    6. '      ' → logprob: -8.753142356872559
    7. '        ' → logprob: -9.128142356872559
    8. '     ' → logprob: -9.128142356872559
    9. '"""' → logprob: -10.253142356872559
    10. ' s' → logprob: -10.503142356872559

Token 171: ' Compute' (ID: 45438)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0758321285247803
    2. ' result' → logprob: -1.4508321285247803
    3. ' s' → logprob: -1.5758321285247803
    4. '    ' → logprob: -2.8258321285247803
    5. '   ' → logprob: -3.2008321285247803
    6. 'result' → logprob: -3.2008321285247803
    7. ' """' → logprob: -3.7008321285247803
    8. ' ' → logprob: -4.075832366943359
    9. ' total' → logprob: -4.575832366943359
    10. 's' → logprob: -4.825832366943359

Token 172: ' the' (ID: 290)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6352154016494751
    2. '0' → logprob: -2.7602152824401855
    3. '    ' → logprob: -2.7602152824401855
    4. ' i' → logprob: -2.7602152824401855
    5. 's' → logprob: -2.8852152824401855
    6. 'result' → logprob: -3.0102152824401855
    7. ' s' → logprob: -3.8852152824401855
    8. '=' → logprob: -4.0102152824401855
    9. '<|end|>' → logprob: -4.3852152824401855
    10. '_' → logprob: -4.3852152824401855

Token 173: ' prefix' (ID: 18633)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8821090459823608
    2. ' s' → logprob: -1.3821090459823608
    3. ' result' → logprob: -2.0071091651916504
    4. ' prefix' → logprob: -2.5071091651916504
    5. 'prefix' → logprob: -2.7571091651916504
    6. 'result' → logprob: -3.7571091651916504
    7. ' total' → logprob: -4.00710916519165
    8. ' cumulative' → logprob: -5.13210916519165
    9. ' sum' → logprob: -6.13210916519165
    10. 'total' → logprob: -6.25710916519165

Token 174: ' sum' (ID: 4215)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.15772907435894012
    2. ' up' → logprob: -2.782729148864746
    3. '   ' → logprob: -3.282729148864746
    4. '_sum' → logprob: -3.907729148864746
    5. '       ' → logprob: -4.532729148864746
    6. ' _' → logprob: -5.532729148864746
    7. 'sum' → logprob: -6.032729148864746
    8. ' ' → logprob: -6.157729148864746
    9. '_up' → logprob: -6.282729148864746
    10. '    ' → logprob: -6.907729148864746

Token 175: ' of' (ID: 328)
  Prédit: ' up'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' up' → logprob: -0.3949258625507355
    2. '(self' → logprob: -1.769925832748413
    3. '(' → logprob: -2.019925832748413
    4. '       ' → logprob: -5.769926071166992
    5. '   ' → logprob: -5.769926071166992
    6. 'u' → logprob: -6.144926071166992
    7. '<|end|>' → logprob: -6.144926071166992
    8. '_up' → logprob: -6.269926071166992
    9. '_' → logprob: -6.519926071166992
    10. '(i' → logprob: -6.519926071166992

Token 176: ' tree' (ID: 8165)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0021416936069726944
    2. 'i' → logprob: -6.25214147567749
    3. ' up' → logprob: -9.627141952514648
    4. '   ' → logprob: -10.252141952514648
    5. ' ' → logprob: -10.627141952514648
    6. ' the' → logprob: -11.127141952514648
    7. '	i' → logprob: -11.502141952514648
    8. ' self' → logprob: -11.627141952514648
    9. 's' → logprob: -11.877141952514648
    10. 'self' → logprob: -12.002141952514648

Token 177: '[' (ID: 58)
  Prédit: ' up'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' up' → logprob: -0.30006372928619385
    2. '(' → logprob: -2.3000636100769043
    3. '(self' → logprob: -3.4250636100769043
    4. '_up' → logprob: -3.9250636100769043
    5. '(i' → logprob: -4.050063610076904
    6. '   ' → logprob: -4.300063610076904
    7. ')' → logprob: -4.300063610076904
    8. ',' → logprob: -4.550063610076904
    9. '_' → logprob: -4.675063610076904
    10. ' ' → logprob: -4.675063610076904

Token 178: '1' (ID: 16)
  Prédit: '[:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -1.1048645973205566
    2. '1' → logprob: -1.8548645973205566
    3. '[i' → logprob: -1.9798645973205566
    4. ':i' → logprob: -1.9798645973205566
    5. '[' → logprob: -2.6048645973205566
    6. 'i' → logprob: -2.7298645973205566
    7. ':' → logprob: -2.9798645973205566
    8. '   ' → logprob: -3.9798645973205566
    9. ' i' → logprob: -4.854864597320557
    10. ' ' → logprob: -5.479864597320557

Token 179: '..' (ID: 485)
  Prédit: ':i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':i' → logprob: -0.391830176115036
    2. ':' → logprob: -1.2668302059173584
    3. ']' → logprob: -3.5168302059173584
    4. ' :' → logprob: -5.016829967498779
    5. '   ' → logprob: -6.516829967498779
    6. '..' → logprob: -6.766829967498779
    7. ',' → logprob: -7.391829967498779
    8. '
' → logprob: -7.766829967498779
    9. '...' → logprob: -8.141830444335938
    10. ':j' → logprob: -8.266830444335938

Token 180: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.08969702571630478
    2. ' i' → logprob: -2.4646971225738525
    3. ']' → logprob: -7.714696884155273
    4. '   ' → logprob: -9.214696884155273
    5. ' ' → logprob: -9.589696884155273
    6. ',' → logprob: -10.589696884155273
    7. ':' → logprob: -11.214696884155273
    8. ')' → logprob: -11.214696884155273
    9. '[i' → logprob: -11.214696884155273
    10. '=' → logprob: -11.214696884155273

Token 181: '].

' (ID: 37441)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.24192698299884796
    2. ']:' → logprob: -1.9919270277023315
    3. ')' → logprob: -3.241926908493042
    4. '):' → logprob: -3.491926908493042
    5. '])' → logprob: -6.241927146911621
    6. ' ]' → logprob: -6.366927146911621
    7. '+' → logprob: -6.616927146911621
    8. '       ' → logprob: -6.991927146911621
    9. '   ' → logprob: -6.991927146911621
    10. ']):' → logprob: -7.241927146911621

Token 182: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10208918899297714
    2. '<|end|>' → logprob: -3.6020891666412354
    3. ':' → logprob: -4.2270894050598145
    4. ')' → logprob: -4.6020894050598145
    5. '   ' → logprob: -4.7270894050598145
    6. '
' → logprob: -4.9770894050598145
    7. '        
' → logprob: -5.2270894050598145
    8. '  
' → logprob: -5.6020894050598145
    9. '=' → logprob: -5.7270894050598145
    10. '    ' → logprob: -6.2270894050598145

Token 183: ' Args' (ID: 39185)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05425535514950752
    2. '   ' → logprob: -4.054255485534668
    3. '    ' → logprob: -5.304255485534668
    4. '        
' → logprob: -5.304255485534668
    5. ' 
' → logprob: -5.679255485534668
    6. ' result' → logprob: -5.804255485534668
    7. ' i' → logprob: -6.054255485534668
    8. ' ' → logprob: -6.054255485534668
    9. '  
' → logprob: -6.179255485534668
    10. 'result' → logprob: -6.179255485534668

Token 184: ':
' (ID: 734)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0451784133911133
    2. '<|end|>' → logprob: -1.5451784133911133
    3. '=' → logprob: -1.6701784133911133
    4. ',' → logprob: -2.9201784133911133
    5. '):' → logprob: -3.4201784133911133
    6. ':' → logprob: -3.6701784133911133
    7. ' ' → logprob: -3.6701784133911133
    8. '):
' → logprob: -3.7951784133911133
    9. '   ' → logprob: -4.045178413391113
    10. '       ' → logprob: -4.045178413391113

Token 185: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.478829950094223
    2. '=' → logprob: -1.6038299798965454
    3. ')' → logprob: -2.853829860687256
    4. '<|end|>' → logprob: -3.728829860687256
    5. '        ' → logprob: -3.978829860687256
    6. 'self' → logprob: -4.478829860687256
    7. ' self' → logprob: -4.478829860687256
    8. '   ' → logprob: -4.728829860687256
    9. ' i' → logprob: -4.853829860687256
    10. '    ' → logprob: -5.103829860687256

Token 186: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.575946033000946
    2. ' i' → logprob: -0.825946033000946
    3. '       ' → logprob: -12.450945854187012
    4. '   ' → logprob: -13.950945854187012
    5. 'int' → logprob: -14.450945854187012
    6. 'self' → logprob: -14.450945854187012
    7. ' self' → logprob: -14.950945854187012
    8. '    ' → logprob: -15.575945854187012
    9. '	i' → logprob: -16.200946807861328
    10. ' ' → logprob: -16.325946807861328

Token 187: ' (' (ID: 350)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01211813185364008
    2. '):
' → logprob: -5.012118339538574
    3. ':' → logprob: -5.762118339538574
    4. ')' → logprob: -6.637118339538574
    5. ' ):' → logprob: -7.762118339538574
    6. ':int' → logprob: -8.387118339538574
    7. '<|end|>' → logprob: -8.762118339538574
    8. '   ' → logprob: -10.387118339538574
    9. '=' → logprob: -10.637118339538574
    10. ' ' → logprob: -11.262118339538574

Token 188: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.06059522554278374
    2. ')' → logprob: -3.4355952739715576
    3. ' int' → logprob: -3.6855952739715576
    4. ':int' → logprob: -7.1855950355529785
    5. ' )' → logprob: -7.8105950355529785
    6. '=int' → logprob: -8.810595512390137
    7. '):
' → logprob: -9.560595512390137
    8. '):' → logprob: -10.435595512390137
    9. '[int' → logprob: -10.560595512390137
    10. '<int' → logprob: -10.560595512390137

Token 189: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.22832942008972168
    2. ')' → logprob: -1.6033294200897217
    3. ' ):' → logprob: -6.103329658508301
    4. '):
' → logprob: -7.728329658508301
    5. ' )' → logprob: -8.7283296585083
    6. ':' → logprob: -10.4783296585083
    7. '=' → logprob: -10.9783296585083
    8. '   ' → logprob: -11.3533296585083
    9. ' ' → logprob: -11.8533296585083
    10. '       ' → logprob: -13.2283296585083

Token 190: ' Index' (ID: 14580)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02569909393787384
    2. '<|end|>' → logprob: -4.650699138641357
    3. ')' → logprob: -4.775699138641357
    4. '        ' → logprob: -5.900699138641357
    5. '    ' → logprob: -6.775699138641357
    6. ' )' → logprob: -7.275699138641357
    7. ' i' → logprob: -7.400699138641357
    8. '       ' → logprob: -7.900699138641357
    9. '=' → logprob: -8.1506986618042
    10. ' The' → logprob: -8.2756986618042

Token 191: ' up' (ID: 869)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 192: ' to' (ID: 316)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7492682933807373
    2. ' +' → logprob: -1.6242682933807373
    3. '=' → logprob: -2.1242682933807373
    4. '   ' → logprob: -2.8742682933807373
    5. '       ' → logprob: -2.9992682933807373
    6. ')' → logprob: -3.2492682933807373
    7. '):' → logprob: -4.249268531799316
    8. '_' → logprob: -4.999268531799316
    9. ' +=' → logprob: -5.249268531799316
    10. '    ' → logprob: -5.374268531799316

Token 193: ' which' (ID: 1118)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08792544901371002
    2. '<|end|>' → logprob: -3.212925434112549
    3. ' )' → logprob: -4.212925434112549
    4. ' (' → logprob: -4.837925434112549
    5. '=' → logprob: -5.712925434112549
    6. ' ' → logprob: -5.712925434112549
    7. ' i' → logprob: -6.212925434112549
    8. '<|end|>' → logprob: -6.587925434112549
    9. ',' → logprob: -6.712925434112549
    10. '   ' → logprob: -6.837925434112549

Token 194: ' the' (ID: 290)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.05456220358610153
    2. ' the' → logprob: -3.3045620918273926
    3. 'to' → logprob: -4.929562091827393
    4. '       ' → logprob: -6.554562091827393
    5. ' sum' → logprob: -6.554562091827393
    6. ' is' → logprob: -7.054562091827393
    7. '   ' → logprob: -7.304562091827393
    8. ',' → logprob: -7.429562091827393
    9. ' (' → logprob: -7.429562091827393
    10. ' you' → logprob: -7.429562091827393

Token 195: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.3667062520980835
    2. 'sum' → logprob: -1.3667062520980835
    3. ' result' → logprob: -3.866706371307373
    4. ' prefix' → logprob: -4.116706371307373
    5. 'prefix' → logprob: -4.991706371307373
    6. ')' → logprob: -5.616706371307373
    7. 'result' → logprob: -6.241706371307373
    8. '_sum' → logprob: -7.991706371307373
    9. 's' → logprob: -8.116705894470215
    10. ' total' → logprob: -8.241705894470215

Token 196: ' is' (ID: 382)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5830383896827698
    2. '   ' → logprob: -2.458038330078125
    3. ')' → logprob: -2.583038330078125
    4. ':' → logprob: -2.833038330078125
    5. ' ):' → logprob: -2.833038330078125
    6. ' is' → logprob: -3.583038330078125
    7. '       ' → logprob: -3.708038330078125
    8. ' +=' → logprob: -3.958038330078125
    9. '):
' → logprob: -3.958038330078125
    10. ' ' → logprob: -4.083038330078125

Token 197: ' computed' (ID: 46716)
  Prédit: ' calculated'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calculated' → logprob: -0.3617490828037262
    2. ' computed' → logprob: -1.3617490530014038
    3. ')' → logprob: -4.486749172210693
    4. '       ' → logprob: -4.611749172210693
    5. '   ' → logprob: -4.736749172210693
    6. ' )' → logprob: -5.486749172210693
    7. ' to' → logprob: -5.736749172210693
    8. '    ' → logprob: -5.861749172210693
    9. 'computed' → logprob: -5.861749172210693
    10. ' included' → logprob: -6.611749172210693

Token 198: ' (' (ID: 350)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.23573876917362213
    2. '):
' → logprob: -2.110738754272461
    3. ')' → logprob: -2.735738754272461
    4. '       ' → logprob: -3.860738754272461
    5. '   ' → logprob: -6.235738754272461
    6. ' ):' → logprob: -7.610738754272461
    7. ' ):
' → logprob: -8.985738754272461
    8. ':' → logprob: -9.110738754272461
    9. ' )' → logprob: -9.485738754272461
    10. ')
' → logprob: -9.860738754272461

Token 199: 'inclusive' (ID: 186093)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.036153730005025864
    2. ' )' → logprob: -3.661153793334961
    3. '):
' → logprob: -5.536153793334961
    4. '):' → logprob: -5.786153793334961
    5. ' ):
' → logprob: -6.536153793334961
    6. ' ):' → logprob: -8.036153793334961
    7. ' inclusive' → logprob: -8.161153793334961
    8. '   ' → logprob: -9.036153793334961
    9. ')
' → logprob: -9.161153793334961
    10. '       ' → logprob: -9.286153793334961

Token 200: ').

' (ID: 3991)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4956771731376648
    2. ')' → logprob: -0.9956771731376648
    3. '):
' → logprob: -3.8706772327423096
    4. ' )' → logprob: -8.49567699432373
    5. ' ):' → logprob: -8.49567699432373
    6. '       ' → logprob: -10.12067699432373
    7. '   ' → logprob: -10.62067699432373
    8. ' ):
' → logprob: -11.24567699432373
    9. ')
' → logprob: -11.62067699432373
    10. ' ' → logprob: -11.74567699432373

Token 201: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2367108017206192
    2. ':' → logprob: -1.986710786819458
    3. ')' → logprob: -3.736710786819458
    4. '   ' → logprob: -3.861710786819458
    5. '):' → logprob: -4.361711025238037
    6. '):
' → logprob: -5.486711025238037
    7. '        
' → logprob: -6.236711025238037
    8. '    ' → logprob: -6.486711025238037
    9. ' :' → logprob: -6.861711025238037
    10. ' ' → logprob: -6.861711025238037

Token 202: ' Returns' (ID: 9609)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2800157368183136
    2. ' result' → logprob: -2.030015707015991
    3. 'result' → logprob: -2.405015707015991
    4. 'res' → logprob: -4.53001594543457
    5. ' res' → logprob: -4.90501594543457
    6. '   ' → logprob: -6.28001594543457
    7. ' s' → logprob: -6.90501594543457
    8. 's' → logprob: -7.03001594543457
    9. 'sum' → logprob: -8.90501594543457
    10. '    ' → logprob: -9.65501594543457

Token 203: ':
' (ID: 734)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.1112247109413147
    2. ' ' → logprob: -2.86122465133667
    3. 'self' → logprob: -4.48622465133667
    4. ' =' → logprob: -4.73622465133667
    5. ':' → logprob: -5.11122465133667
    6. '=' → logprob: -5.36122465133667
    7. '<|end|>' → logprob: -5.48622465133667
    8. ' None' → logprob: -6.11122465133667
    9. ' int' → logprob: -6.23622465133667
    10. 'int' → logprob: -6.48622465133667

Token 204: '           ' (ID: 352)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.5304515957832336
    2. '       ' → logprob: -1.5304515361785889
    3. ' int' → logprob: -2.530451536178589
    4. '        ' → logprob: -3.030451536178589
    5. '0' → logprob: -4.030451774597168
    6. 'int' → logprob: -4.280451774597168
    7. 'self' → logprob: -4.655451774597168
    8. ' ' → logprob: -4.905451774597168
    9. ' i' → logprob: -5.155451774597168
    10. ' The' → logprob: -5.405451774597168

Token 205: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' (adapté à ' int') → logprob: -0.018150178715586662
    2. ' int' → logprob: -4.018150329589844
    3. '   ' → logprob: -16.268150329589844
    4. '       ' → logprob: -16.643150329589844
    5. 'The' → logprob: -17.018150329589844
    6. 'Int' → logprob: -17.143150329589844
    7. '(int' → logprob: -17.893150329589844
    8. 'return' → logprob: -18.393150329589844
    9. '[int' → logprob: -18.643150329589844
    10. ':int' → logprob: -18.768150329589844

Token 206: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.025053948163986206
    2. '<|end|>' → logprob: -4.150053977966309
    3. '       ' → logprob: -5.775053977966309
    4. '   ' → logprob: -6.525053977966309
    5. ':
' → logprob: -7.025053977966309
    6. ')' → logprob: -7.275053977966309
    7. '):' → logprob: -7.525053977966309
    8. ' :' → logprob: -7.650053977966309
    9. '    ' → logprob: -7.775053977966309
    10. ',' → logprob: -8.150053977966309

Token 207: ' The' (ID: 623)
  Prédit: ' The'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' The' → logprob: -0.24840418994426727
    2. ' self' → logprob: -1.8734041452407837
    3. ' ' → logprob: -3.6234042644500732
    4. 'The' → logprob: -4.248404026031494
    5. '       ' → logprob: -4.623404026031494
    6. ' sum' → logprob: -5.248404026031494
    7. '0' → logprob: -5.998404026031494
    8. ' result' → logprob: -6.498404026031494
    9. 'self' → logprob: -6.998404026031494
    10. ' Sum' → logprob: -6.998404026031494

Token 208: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.540212094783783
    2. ' result' → logprob: -1.0402121543884277
    3. 'sum' → logprob: -3.5402121543884277
    4. ' cumulative' → logprob: -4.165212154388428
    5. ' prefix' → logprob: -4.540212154388428
    6. 'result' → logprob: -6.040212154388428
    7. 'prefix' → logprob: -6.415212154388428
    8. ' total' → logprob: -6.415212154388428
    9. ' ' → logprob: -7.540212154388428
    10. ' accumulated' → logprob: -7.665212154388428

Token 209: ' of' (ID: 328)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 210: ' elements' (ID: 8632)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.1493835598230362
    2. 'self' → logprob: -2.024383544921875
    3. ' the' → logprob: -5.399383544921875
    4. ' elements' → logprob: -7.024383544921875
    5. ' all' → logprob: -7.899383544921875
    6. ' tree' → logprob: -8.274383544921875
    7. '   ' → logprob: -8.524383544921875
    8. ' ' → logprob: -9.399383544921875
    9. 'the' → logprob: -9.524383544921875
    10. '       ' → logprob: -9.774383544921875

Token 211: ' from' (ID: 591)
  Prédit: ' up'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' up' → logprob: -0.0849158987402916
    2. '[' → logprob: -3.45991587638855
    3. '   ' → logprob: -4.709916114807129
    4. '=' → logprob: -5.084916114807129
    5. ' ' → logprob: -5.334916114807129
    6. ')' → logprob: -5.334916114807129
    7. '       ' → logprob: -5.334916114807129
    8. '<|end|>' → logprob: -5.459916114807129
    9. ',' → logprob: -6.084916114807129
    10. ' =' → logprob: -6.584916114807129

Token 212: ' index' (ID: 3472)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10547053813934326
    2. '1' → logprob: -2.730470657348633
    3. '0' → logprob: -3.355470657348633
    4. '[' → logprob: -12.480470657348633
    5. '    ' → logprob: -12.980470657348633
    6. '   ' → logprob: -13.105470657348633
    7. '```' → logprob: -13.355470657348633
    8. ' [' → logprob: -13.855470657348633
    9. ' 
' → logprob: -14.605470657348633
    10. '       ' → logprob: -14.605470657348633

Token 213: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.39655566215515137
    2. '0' → logprob: -1.2715556621551514
    3. '1' → logprob: -3.3965556621551514
    4. '[' → logprob: -4.6465559005737305
    5. ' up' → logprob: -7.0215559005737305
    6. '=' → logprob: -7.1465559005737305
    7. '   ' → logprob: -7.6465559005737305
    8. '    ' → logprob: -8.27155590057373
    9. '       ' → logprob: -8.27155590057373
    10. ' [' → logprob: -8.52155590057373

Token 214: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10257333517074585
    2. '0' → logprob: -2.3525733947753906
    3. ' ' → logprob: -6.102573394775391
    4. '   ' → logprob: -9.97757339477539
    5. '```' → logprob: -10.35257339477539
    6. '       ' → logprob: -10.60257339477539
    7. '[' → logprob: -11.60257339477539
    8. '`' → logprob: -12.22757339477539
    9. '        ' → logprob: -13.22757339477539
    10. '           ' → logprob: -13.47757339477539

Token 215: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.02001013420522213
    2. ' through' → logprob: -4.395009994506836
    3. '       ' → logprob: -5.520009994506836
    4. '   ' → logprob: -6.520009994506836
    5. 'to' → logprob: -6.770009994506836
    6. ' up' → logprob: -7.770009994506836
    7. '        ' → logprob: -9.395009994506836
    8. '    ' → logprob: -9.645009994506836
    9. ' ' → logprob: -10.020009994506836
    10. '           ' → logprob: -10.270009994506836

Token 216: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.20142163336277008
    2. 'i' → logprob: -1.7014216184616089
    3. ' ' → logprob: -12.951421737670898
    4. '	i' → logprob: -12.951421737670898
    5. '   ' → logprob: -13.826421737670898
    6. '```' → logprob: -14.326421737670898
    7. ' ' → logprob: -14.826421737670898
    8. '0' → logprob: -15.201421737670898
    9. '`' → logprob: -15.576421737670898
    10. ')' → logprob: -15.701421737670898

Token 217: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3700520992279053
    2. '+' → logprob: -1.7450520992279053
    3. '       ' → logprob: -2.4950520992279053
    4. '
' → logprob: -3.9950520992279053
    5. '.' → logprob: -4.495052337646484
    6. ' +' → logprob: -4.745052337646484
    7. ')
' → logprob: -5.120052337646484
    8. '   ' → logprob: -5.620052337646484
    9. ').' → logprob: -6.370052337646484
    10. '):
' → logprob: -7.370052337646484

Token 218: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08051563799381256
    2. '   ' → logprob: -3.9555156230926514
    3. '        
' → logprob: -4.2055158615112305
    4. ':' → logprob: -4.3305158615112305
    5. ')' → logprob: -4.9555158615112305
    6. '    
' → logprob: -5.2055158615112305
    7. '  
' → logprob: -5.9555158615112305
    8. '
' → logprob: -5.9555158615112305
    9. ' 
' → logprob: -6.2055158615112305
    10. '    ' → logprob: -6.8305158615112305

Token 219: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009766596369445324
    2. '   ' → logprob: -5.384766578674316
    3. '        
' → logprob: -6.509766578674316
    4. '```' → logprob: -7.134766578674316
    5. '    ' → logprob: -7.509766578674316
    6. ':' → logprob: -7.884766578674316
    7. '        ' → logprob: -8.384766578674316
    8. ')' → logprob: -8.759766578674316
    9. ' 
' → logprob: -8.884766578674316
    10. '    
' → logprob: -8.884766578674316

Token 220: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010996110504493117
    2. 'i' → logprob: -7.876099586486816
    3. '   ' → logprob: -7.876099586486816
    4. '    ' → logprob: -9.501099586486816
    5. ' i' → logprob: -9.626099586486816
    6. 'n' → logprob: -10.126099586486816
    7. 's' → logprob: -10.376099586486816
    8. 'result' → logprob: -10.751099586486816
    9. '        ' → logprob: -11.001099586486816
    10. '        
' → logprob: -11.126099586486816

Token 221: ' s' (ID: 265)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.49351081252098083
    2. 's' (adapté à ' s') → logprob: -0.9935108423233032
    3. 'result' → logprob: -3.9935107231140137
    4. '   ' → logprob: -7.993510723114014
    5. '       ' → logprob: -8.618511199951172
    6. ' s' → logprob: -8.868511199951172
    7. ' res' → logprob: -8.868511199951172
    8. ' result' → logprob: -12.118511199951172
    9. 'ret' → logprob: -12.743511199951172
    10. 'r' → logprob: -13.993511199951172

Token 222: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08325311541557312
    2. '=' → logprob: -2.7082531452178955
    3. '   ' → logprob: -4.958252906799316
    4. '       ' → logprob: -5.583252906799316
    5. ' ' → logprob: -6.208252906799316
    6. '    ' → logprob: -8.458252906799316
    7. '  ' → logprob: -9.583252906799316
    8. '	' → logprob: -10.083252906799316
    9. ' +=' → logprob: -10.083252906799316
    10. '        ' → logprob: -10.708252906799316

Token 223: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0788901224732399
    2. ' ' → logprob: -2.578890085220337
    3. '   ' → logprob: -15.578889846801758
    4. '       ' → logprob: -15.578889846801758
    5. ' ' → logprob: -17.703889846801758
    6. '  ' → logprob: -18.078889846801758
    7. '        ' → logprob: -18.203889846801758
    8. '	' → logprob: -18.328889846801758
    9. '۰' → logprob: -18.328889846801758
    10. '=' → logprob: -18.328889846801758

Token 224: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '۰' → logprob: -20.500001907348633
    4. 'self' → logprob: -21.125001907348633
    5. '０' → logprob: -21.375001907348633
    6. '=' → logprob: -22.250001907348633
    7. '   ' → logprob: -22.250001907348633
    8. '00' → logprob: -23.500001907348633
    9. '000' → logprob: -23.625001907348633
    10. 's' → logprob: -23.750001907348633

Token 225: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014360117726027966
    2. '<|end|>' → logprob: -4.639359951019287
    3. '
' → logprob: -6.139359951019287
    4. ',' → logprob: -7.014359951019287
    5. '<|end|>' → logprob: -7.639359951019287
    6. ';' → logprob: -8.014360427856445
    7. '   ' → logprob: -9.264360427856445
    8. ' while' → logprob: -9.389360427856445
    9. '	' → logprob: -9.514360427856445
    10. '        
' → logprob: -9.514360427856445

Token 226: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005035852082073689
    2. ' while' → logprob: -8.125503540039062
    3. 'while' → logprob: -9.375503540039062
    4. ',' → logprob: -9.750503540039062
    5. '	' → logprob: -11.000503540039062
    6. '	while' → logprob: -11.125503540039062
    7. '<|end|>' → logprob: -12.000503540039062
    8. '        
' → logprob: -12.000503540039062
    9. '   ' → logprob: -12.250503540039062
    10. '
' → logprob: -12.750503540039062

Token 227: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.002723683137446642
    2. ' while' → logprob: -6.502723693847656
    3. '       ' → logprob: -6.752723693847656
    4. 'i' → logprob: -10.252723693847656
    5. '   ' → logprob: -11.002723693847656
    6. '	while' → logprob: -14.502723693847656
    7. 'While' → logprob: -14.877723693847656
    8. ' i' → logprob: -16.377723693847656
    9. 'x' → logprob: -17.002723693847656
    10. '        
' → logprob: -17.627723693847656

Token 228: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.016038941219449043
    2. 'i' → logprob: -4.14103889465332
    3. ' ' → logprob: -13.39103889465332
    4. '   ' → logprob: -13.39103889465332
    5. '	i' → logprob: -14.26603889465332
    6. '  ' → logprob: -14.76603889465332
    7. '(i' → logprob: -14.89103889465332
    8. '    ' → logprob: -16.26603889465332
    9. '_i' → logprob: -17.26603889465332
    10. '{i' → logprob: -17.26603889465332

Token 229: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.04866412654519081
    2. ' >' → logprob: -3.048664093017578
    3. '>=' → logprob: -9.673664093017578
    4. ' >=' → logprob: -11.923664093017578
    5. '&gt' → logprob: -13.298664093017578
    6. ' >
' → logprob: -13.548664093017578
    7. '>
' → logprob: -13.673664093017578
    8. '   ' → logprob: -13.923664093017578
    9. ' ' → logprob: -14.423664093017578
    10. ':' → logprob: -15.298664093017578

Token 230: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.055003244429826736
    2. ' ' → logprob: -2.9300031661987305
    3. '=' → logprob: -9.18000316619873
    4. '   ' → logprob: -12.55500316619873
    5. '<|end|>' → logprob: -12.68000316619873
    6. '       ' → logprob: -13.18000316619873
    7. '        ' → logprob: -13.18000316619873
    8. '    ' → logprob: -13.55500316619873
    9. 's' → logprob: -13.80500316619873
    10. 'i' → logprob: -13.80500316619873

Token 231: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00038241007132455707
    2. ' ' → logprob: -7.875382423400879
    3. '=' → logprob: -13.625382423400879
    4. 'i' → logprob: -15.125382423400879
    5. '       ' → logprob: -15.500382423400879
    6. '   ' → logprob: -15.625382423400879
    7. 's' → logprob: -16.250381469726562
    8. ':
' → logprob: -17.125381469726562
    9. '>' → logprob: -17.375381469726562
    10. '  ' → logprob: -17.625381469726562

Token 232: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.04342206194996834
    2. ':' → logprob: -3.168421983718872
    3. '           ' → logprob: -8.168421745300293
    4. ',' → logprob: -9.793421745300293
    5. '       ' → logprob: -10.293421745300293
    6. '):
' → logprob: -10.918421745300293
    7. ' s' → logprob: -11.668421745300293
    8. 's' → logprob: -12.043421745300293
    9. '=' → logprob: -12.293421745300293
    10. ',
' → logprob: -12.543421745300293

Token 233: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009299712255597115
    2. ' s' → logprob: -5.3842997550964355
    3. 's' → logprob: -5.5092997550964355
    4. '
' → logprob: -8.259299278259277
    5. '       ' → logprob: -8.509299278259277
    6. '```' → logprob: -10.259299278259277
    7. 'i' → logprob: -10.509299278259277
    8. '	       ' → logprob: -11.259299278259277
    9. '               ' → logprob: -11.384299278259277
    10. '   ' → logprob: -11.509299278259277

Token 234: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.01562147680670023
    2. ' s' → logprob: -4.515621662139893
    3. '           ' → logprob: -5.390621662139893
    4. '               ' → logprob: -13.140621185302734
    5. '   ' → logprob: -13.515621185302734
    6. '       ' → logprob: -14.890621185302734
    7. ' ' → logprob: -16.140621185302734
    8. '```' → logprob: -16.390621185302734
    9. '{s' → logprob: -16.765621185302734
    10. '          ' → logprob: -17.015621185302734

Token 235: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0789046585559845
    2. ' +=' → logprob: -2.578904628753662
    3. '+' → logprob: -11.45390510559082
    4. '   ' → logprob: -13.57890510559082
    5. ']+=' → logprob: -13.82890510559082
    6. '       ' → logprob: -14.07890510559082
    7. '           ' → logprob: -14.82890510559082
    8. '+=(' → logprob: -15.20390510559082
    9. '=' → logprob: -15.82890510559082
    10. '    ' → logprob: -15.95390510559082

Token 236: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0019288709154352546
    2. ' self' → logprob: -6.251928806304932
    3. '[self' → logprob: -16.126928329467773
    4. '           ' → logprob: -16.876928329467773
    5. '       ' → logprob: -17.376928329467773
    6. '(self' → logprob: -17.501928329467773
    7. '	self' → logprob: -17.626928329467773
    8. '   ' → logprob: -18.376928329467773
    9. '```' → logprob: -18.501928329467773
    10. '=self' → logprob: -19.001928329467773

Token 237: '.tree' (ID: 49211)
  Prédit: '.tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tree' → logprob: -0.00013810492237098515
    2. '.' → logprob: -9.000138282775879
    3. ' .' → logprob: -11.375138282775879
    4. 'tree' → logprob: -12.875138282775879
    5. '	tree' → logprob: -15.125138282775879
    6. '.table' → logprob: -15.875138282775879
    7. '._' → logprob: -16.250137329101562
    8. ' tree' → logprob: -17.000137329101562
    9. '.Tree' → logprob: -17.625137329101562
    10. '
' → logprob: -18.000137329101562

Token 238: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.512236498361744e-07
    2. '[' → logprob: -14.625000953674316
    3. 'i' → logprob: -18.5
    4. '[
' → logprob: -18.625
    5. '   ' → logprob: -18.875
    6. '[self' → logprob: -18.875
    7. '```' → logprob: -19.0
    8. ' [' → logprob: -19.375
    9. '       ' → logprob: -20.0
    10. '[I' → logprob: -20.625

Token 239: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0022118736524134874
    2. ']
' → logprob: -6.127212047576904
    3. ' ]' → logprob: -12.127211570739746
    4. ')' → logprob: -12.252211570739746
    5. '           ' → logprob: -12.377211570739746
    6. '       ' → logprob: -12.627211570739746
    7. '[i' → logprob: -13.252211570739746
    8. '<|end|>' → logprob: -13.502211570739746
    9. ']
' → logprob: -13.752211570739746
    10. ']+=' → logprob: -14.127211570739746

Token 240: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07645493000745773
    2. 'i' → logprob: -3.3264548778533936
    3. ' i' → logprob: -3.9514548778533936
    4. '
' → logprob: -4.076455116271973
    5. '       ' → logprob: -7.951455116271973
    6. ',i' → logprob: -8.076455116271973
    7. '   ' → logprob: -8.326455116271973
    8. '            
' → logprob: -8.576455116271973
    9. '[i' → logprob: -9.076455116271973
    10. '               ' → logprob: -9.826455116271973

Token 241: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.12741822004318237
    2. ' i' → logprob: -2.127418279647827
    3. '           ' → logprob: -7.627418041229248
    4. '   ' → logprob: -13.252418518066406
    5. '       ' → logprob: -14.002418518066406
    6. '	i' → logprob: -15.127418518066406
    7. '               ' → logprob: -16.252418518066406
    8. ' ' → logprob: -17.002418518066406
    9. '            ' → logprob: -17.252418518066406
    10. '    ' → logprob: -17.502418518066406

Token 242: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.06560592353343964
    2. '-=' → logprob: -2.940605878829956
    3. '-' → logprob: -4.690606117248535
    4. '&' → logprob: -6.815606117248535
    5. ' &=' → logprob: -8.690606117248535
    6. ' &' → logprob: -8.815606117248535
    7. ' -' → logprob: -10.190606117248535
    8. ' ' → logprob: -11.065606117248535
    9. '    ' → logprob: -11.940606117248535
    10. '   ' → logprob: -12.565606117248535

Token 243: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.023273317143321037
    2. ' i' → logprob: -3.773273229598999
    3. '(i' → logprob: -11.023273468017578
    4. ' (' → logprob: -11.898273468017578
    5. '	i' → logprob: -13.523273468017578
    6. ' ' → logprob: -13.523273468017578
    7. '   ' → logprob: -13.898273468017578
    8. '(' → logprob: -14.023273468017578
    9. '  ' → logprob: -15.148273468017578
    10. '{i' → logprob: -18.023273468017578

Token 244: ' &' (ID: 827)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.31329768896102905
    2. ' &' → logprob: -1.3132977485656738
    3. '&i' → logprob: -10.563297271728516
    4. '&t' → logprob: -12.188297271728516
    5. '&r' → logprob: -13.063297271728516
    6. '&B' → logprob: -14.313297271728516
    7. '&p' → logprob: -15.188297271728516
    8. '&amp' → logprob: -15.313297271728516
    9. '&nbsp' → logprob: -15.313297271728516
    10. ' ' → logprob: -15.563297271728516

Token 245: ' -' (ID: 533)
  Prédit: '-i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-i' → logprob: -0.35636717081069946
    2. '-' → logprob: -1.3563671112060547
    3. ' -' → logprob: -3.6063671112060547
    4. 'i' → logprob: -4.356367111206055
    5. ' i' → logprob: -6.481367111206055
    6. '(-' → logprob: -7.356367111206055
    7. ' (-' → logprob: -10.731367111206055
    8. '(i' → logprob: -11.356367111206055
    9. '_i' → logprob: -12.356367111206055
    10. '	i' → logprob: -12.981367111206055

Token 246: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -2.7610454708337784e-05
    2. ' i' → logprob: -10.500027656555176
    3. '	i' → logprob: -17.62502670288086
    4. ' ' → logprob: -18.00002670288086
    5. '_i' → logprob: -18.50002670288086
    6. '   ' → logprob: -19.12502670288086
    7. '[i' → logprob: -19.50002670288086
    8. 'I' → logprob: -19.75002670288086
    9. ''i' → logprob: -20.12502670288086
    10. ')i' → logprob: -20.12502670288086

Token 247: '
' (ID: 198)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.23988814651966095
    2. ' i' → logprob: -1.8648881912231445
    3. '1' → logprob: -4.1148881912231445
    4. ')' → logprob: -4.6148881912231445
    5. ' ' → logprob: -4.6148881912231445
    6. '       ' → logprob: -4.7398881912231445
    7. '<|end|>' → logprob: -5.2398881912231445
    8. '_i' → logprob: -6.7398881912231445
    9. '0' → logprob: -7.2398881912231445
    10. '[i' → logprob: -7.2398881912231445

Token 248: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004251608159393072
    2. ' return' → logprob: -6.129251480102539
    3. '
' → logprob: -6.879251480102539
    4. '        
' → logprob: -8.254251480102539
    5. 'return' → logprob: -8.629251480102539
    6. '<|end|>' → logprob: -8.879251480102539
    7. '\n' → logprob: -9.254251480102539
    8. '   ' → logprob: -9.504251480102539
    9. ' ' → logprob: -10.129251480102539
    10. '    
' → logprob: -10.254251480102539

Token 249: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1799350529909134
    2. ' return' → logprob: -1.929935097694397
    3. 'return' (adapté à ' return') → logprob: -4.679934978485107
    4. '
' → logprob: -5.429934978485107
    5. ' 
' → logprob: -5.429934978485107
    6. '   ' → logprob: -7.429934978485107
    7. '	return' → logprob: -8.304935455322266
    8. ' ' → logprob: -8.429935455322266
    9. '        
' → logprob: -8.804935455322266
    10. '    ' → logprob: -9.304935455322266

Token 250: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.5759395360946655
    2. 's' → logprob: -0.8259395360946655
    3. ' ' → logprob: -16.825939178466797
    4. '_s' → logprob: -18.450939178466797
    5. '	s' → logprob: -18.450939178466797
    6. '<s' → logprob: -19.700939178466797
    7. '{s' → logprob: -19.950939178466797
    8. '`s' → logprob: -19.950939178466797
    9. '(s' → logprob: -20.075939178466797
    10. ' ' → logprob: -20.075939178466797

Token 251: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 252: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3302537202835083
    2. ' 
' → logprob: -2.0802536010742188
    3. '<|end|>' → logprob: -2.5802536010742188
    4. '
' → logprob: -3.9552536010742188
    5. ' ' → logprob: -4.205253601074219
    6. '    
' → logprob: -4.330253601074219
    7. '  
' → logprob: -4.330253601074219
    8. 'def' → logprob: -4.705253601074219
    9. '   
' → logprob: -5.580253601074219
    10. ' def' → logprob: -6.205253601074219

Token 253: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -1.6047699318733066e-05
    2. ' def' → logprob: -11.250016212463379
    3. '   ' → logprob: -12.750016212463379
    4. '0' → logprob: -17.500015258789062
    5. 'de' → logprob: -17.625015258789062
    6. '1' → logprob: -17.625015258789062
    7. '
' → logprob: -18.000015258789062
    8. '    
' → logprob: -18.125015258789062
    9. ' ' → logprob: -18.500015258789062
    10. '2' → logprob: -19.000015258789062

Token 254: ' add' (ID: 1147)
  Prédit: ' add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.3167705833911896
    2. 'add' → logprob: -1.3167705535888672
    3. 'update' → logprob: -6.066770553588867
    4. ' update' → logprob: -6.816770553588867
    5. '_add' → logprob: -9.441770553588867
    6. '_update' → logprob: -13.316770553588867
    7. ' ' → logprob: -13.566770553588867
    8. 'append' → logprob: -14.191770553588867
    9. '.add' → logprob: -14.316770553588867
    10. 'set' → logprob: -14.316770553588867

Token 255: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.03819410875439644
    2. '(' → logprob: -3.288194179534912
    3. ' (' → logprob: -9.038193702697754
    4. '(i' → logprob: -10.913193702697754
    5. '(s' → logprob: -11.413193702697754
    6. '(sel' → logprob: -13.788193702697754
    7. '(
' → logprob: -14.038193702697754
    8. 'self' → logprob: -14.413193702697754
    9. ' ' → logprob: -15.288193702697754
    10. '(Self' → logprob: -15.413193702697754

Token 256: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.1270371973514557
    2. ',' → logprob: -2.127037286758423
    3. ',self' → logprob: -10.502037048339844
    4. ' ,' → logprob: -10.752037048339844
    5. '(' → logprob: -10.877037048339844
    6. 'self' → logprob: -11.252037048339844
    7. ' (' → logprob: -11.502037048339844
    8. ')' → logprob: -11.752037048339844
    9. '(i' → logprob: -12.627037048339844
    10. '       ' → logprob: -13.252037048339844

Token 257: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.31360673904418945
    2. 'i' → logprob: -1.3136067390441895
    3. 'self' → logprob: -8.813606262207031
    4. ' self' → logprob: -9.313606262207031
    5. 'index' → logprob: -10.063606262207031
    6. '<|end|>' → logprob: -10.313606262207031
    7. ' ' → logprob: -11.313606262207031
    8. ' index' → logprob: -11.938606262207031
    9. ')' → logprob: -12.313606262207031
    10. '   ' → logprob: -13.063606262207031

Token 258: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4378848391061183e-05
    2. ' ,' → logprob: -11.250014305114746
    3. ',i' → logprob: -15.125014305114746
    4. ',value' → logprob: -15.250014305114746
    5. ',self' → logprob: -15.250014305114746
    6. ',int' → logprob: -16.125015258789062
    7. 'self' → logprob: -16.125015258789062
    8. ',n' → logprob: -17.000015258789062
    9. ',k' → logprob: -17.000015258789062
    10. '   ' → logprob: -17.125015258789062

Token 259: ' x' (ID: 1215)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.166629672050476
    2. ' v' → logprob: -1.666629672050476
    3. 'x' → logprob: -1.791629672050476
    4. ' x' → logprob: -2.0416297912597656
    5. 'value' → logprob: -2.5416297912597656
    6. '1' → logprob: -2.6666297912597656
    7. ' val' → logprob: -4.166629791259766
    8. ' ' → logprob: -4.166629791259766
    9. ' value' → logprob: -4.666629791259766
    10. 'delta' → logprob: -4.916629791259766

Token 260: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.31336045265197754
    2. '):
' → logprob: -1.3133604526519775
    3. '):
' → logprob: -9.688360214233398
    4. ')' → logprob: -10.313360214233398
    5. '):

' → logprob: -13.813360214233398
    6. '   ' → logprob: -14.188360214233398
    7. ' ):' → logprob: -14.188360214233398
    8. ':' → logprob: -14.313360214233398
    9. ' ' → logprob: -16.1883602142334
    10. ' ):
' → logprob: -16.1883602142334

Token 261: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.018788449466228485
    2. '<|end|>' → logprob: -5.0187883377075195
    3. '):' → logprob: -5.5187883377075195
    4. '       ' → logprob: -5.6437883377075195
    5. ':
' → logprob: -5.8937883377075195
    6. '):
' → logprob: -7.2687883377075195
    7. '   ' → logprob: -7.5187883377075195
    8. '():' → logprob: -9.51878833770752
    9. '<|end|>' → logprob: -9.51878833770752
    10. ')' → logprob: -9.76878833770752

Token 262: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06670697778463364
    2. '<|end|>' → logprob: -3.066706895828247
    3. '   ' → logprob: -4.191707134246826
    4. ':' → logprob: -7.191707134246826
    5. '<|end|>' → logprob: -8.066706657409668
    6. '```' → logprob: -8.316706657409668
    7. ':
' → logprob: -8.316706657409668
    8. '
' → logprob: -8.316706657409668
    9. ')' → logprob: -8.566706657409668
    10. ' ' → logprob: -8.691706657409668

Token 263: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017066044732928276
    2. ' 
' → logprob: -5.01706600189209
    3. '   ' → logprob: -5.39206600189209
    4. '        ' → logprob: -6.01706600189209
    5. '    ' → logprob: -6.89206600189209
    6. ' """
' → logprob: -6.89206600189209
    7. ' ' → logprob: -8.01706600189209
    8. '        
' → logprob: -8.51706600189209
    9. '  
' → logprob: -9.26706600189209
    10. ')' → logprob: -9.64206600189209

Token 264: ' Add' (ID: 4063)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2201605588197708
    2. ' while' → logprob: -2.095160484313965
    3. ' i' → logprob: -3.095160484313965
    4. 'while' → logprob: -3.845160484313965
    5. '   ' → logprob: -5.595160484313965
    6. 'i' → logprob: -5.595160484313965
    7. '    ' → logprob: -9.220160484313965
    8. ' ' → logprob: -9.345160484313965
    9. '        ' → logprob: -9.470160484313965
    10. '
' → logprob: -10.220160484313965

Token 265: ' a' (ID: 261)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.166114941239357
    2. ' i' → logprob: -2.0411150455474854
    3. ' ' → logprob: -4.041114807128906
    4. '<|end|>' → logprob: -5.541114807128906
    5. 'x' → logprob: -7.666114807128906
    6. ' a' → logprob: -8.666114807128906
    7. '    ' → logprob: -8.666114807128906
    8. ')' → logprob: -8.791114807128906
    9. ' (' → logprob: -8.916114807128906
    10. '   ' → logprob: -9.666114807128906

Token 266: ' value' (ID: 1432)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.22237670421600342
    2. ' x' → logprob: -2.097376823425293
    3. 'n' → logprob: -3.847376823425293
    4. ' value' → logprob: -4.472376823425293
    5. '    ' → logprob: -5.097376823425293
    6. ' n' → logprob: -5.097376823425293
    7. ')' → logprob: -5.097376823425293
    8. ' +=' → logprob: -5.347376823425293
    9. 'x' → logprob: -5.472376823425293
    10. '  ' → logprob: -5.847376823425293

Token 267: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3247084617614746
    2. '(i' → logprob: -1.5747084617614746
    3. '<|end|>' → logprob: -1.8247084617614746
    4. '(' → logprob: -2.3247084617614746
    5. ',' → logprob: -2.5747084617614746
    6. '       ' → logprob: -2.5747084617614746
    7. ' (' → logprob: -3.4497084617614746
    8. ' ' → logprob: -3.4497084617614746
    9. '    ' → logprob: -4.199708461761475
    10. ' to' → logprob: -4.574708461761475

Token 268: ' the' (ID: 290)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.14326970279216766
    2. 'i' → logprob: -2.0182697772979736
    3. ' the' → logprob: -8.268269538879395
    4. '<|end|>' → logprob: -9.643269538879395
    5. '       ' → logprob: -9.893269538879395
    6. '[i' → logprob: -10.143269538879395
    7. ' ' → logprob: -10.268269538879395
    8. ' self' → logprob: -10.268269538879395
    9. 'self' → logprob: -10.393269538879395
    10. '   ' → logprob: -10.893269538879395

Token 269: ' element' (ID: 3577)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.10842913389205933
    2. ' i' → logprob: -2.358429193496704
    3. ' element' → logprob: -5.858428955078125
    4. ' value' → logprob: -6.483428955078125
    5. 'tree' → logprob: -6.858428955078125
    6. ' tree' → logprob: -7.233428955078125
    7. ' position' → logprob: -7.733428955078125
    8. '[i' → logprob: -7.733428955078125
    9. 'value' → logprob: -8.233428955078125
    10. 'index' → logprob: -8.233428955078125

Token 270: ' at' (ID: 540)
  Prédit: ' at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.014067007228732109
    2. ' i' → logprob: -4.51406717300415
    3. '   ' → logprob: -6.63906717300415
    4. '[i' → logprob: -6.63906717300415
    5. ' ' → logprob: -8.389066696166992
    6. 'i' → logprob: -9.889066696166992
    7. '       ' → logprob: -10.514066696166992
    8. 'at' → logprob: -10.764066696166992
    9. '  ' → logprob: -11.014066696166992
    10. '<|end|>' → logprob: -11.514066696166992

Token 271: ' index' (ID: 3472)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.023247109726071358
    2. 'i' → logprob: -3.773247003555298
    3. '   ' → logprob: -14.273246765136719
    4. ' ' → logprob: -14.523246765136719
    5. '	i' → logprob: -15.523246765136719
    6. '    ' → logprob: -16.14824676513672
    7. '  ' → logprob: -17.02324676513672
    8. '```' → logprob: -17.39824676513672
    9. ' the' → logprob: -17.77324676513672
    10. '(i' → logprob: -17.77324676513672

Token 272: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.016117185354232788
    2. 'i' → logprob: -4.141117095947266
    3. '   ' → logprob: -9.641117095947266
    4. ' ' → logprob: -11.766117095947266
    5. '(i' → logprob: -12.516117095947266
    6. '    ' → logprob: -13.391117095947266
    7. '	i' → logprob: -13.516117095947266
    8. '  ' → logprob: -13.516117095947266
    9. '       ' → logprob: -14.266117095947266
    10. ' (' → logprob: -15.016117095947266

Token 273: '.

' (ID: 364)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6902232766151428
    2. '<|end|>' → logprob: -1.315223217010498
    3. '       ' → logprob: -2.190223217010498
    4. '):' → logprob: -2.815223217010498
    5. '   ' → logprob: -3.440223217010498
    6. '):
' → logprob: -4.315223217010498
    7. '<|end|>' → logprob: -5.690223217010498
    8. ',' → logprob: -5.815223217010498
    9. ':
' → logprob: -6.190223217010498
    10. ')' → logprob: -6.440223217010498

Token 274: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39437419176101685
    2. '<|end|>' → logprob: -1.894374132156372
    3. ')' → logprob: -2.519374132156372
    4. '   ' → logprob: -3.144374132156372
    5. ' 
' → logprob: -3.894374132156372
    6. '  
' → logprob: -5.394374370574951
    7. '    ' → logprob: -5.644374370574951
    8. ' ' → logprob: -5.644374370574951
    9. '        ' → logprob: -5.769374370574951
    10. '        
' → logprob: -5.894374370574951

Token 275: ' Args' (ID: 39185)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.223541259765625
    2. ' i' → logprob: -1.473541259765625
    3. ' 
' → logprob: -2.098541259765625
    4. '):
' → logprob: -2.598541259765625
    5. ')' → logprob: -2.723541259765625
    6. '   ' → logprob: -2.848541259765625
    7. 'i' → logprob: -2.973541259765625
    8. '```' → logprob: -3.473541259765625
    9. '(i' → logprob: -4.598541259765625
    10. ' ' → logprob: -4.723541259765625

Token 276: ':
' (ID: 734)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0454775094985962
    2. ':' → logprob: -1.2954775094985962
    3. '):' → logprob: -1.6704775094985962
    4. ',' → logprob: -1.7954775094985962
    5. '<|end|>' → logprob: -4.920477390289307
    6. ')' → logprob: -5.545477390289307
    7. '):
' → logprob: -5.795477390289307
    8. '   ' → logprob: -6.295477390289307
    9. '=i' → logprob: -6.420477390289307
    10. '       ' → logprob: -6.670477390289307

Token 277: '           ' (ID: 352)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.1668904721736908
    2. 'i' → logprob: -2.6668903827667236
    3. '       ' → logprob: -2.6668903827667236
    4. '(i' → logprob: -5.541890621185303
    5. '   ' → logprob: -5.666890621185303
    6. ',' → logprob: -5.916890621185303
    7. ':' → logprob: -6.916890621185303
    8. 'int' → logprob: -6.916890621185303
    9. ',i' → logprob: -7.166890621185303
    10. '(int' → logprob: -8.041890144348145

Token 278: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.20142367482185364
    2. ' i' → logprob: -1.7014236450195312
    3. 'int' → logprob: -11.701423645019531
    4. ' int' → logprob: -13.701423645019531
    5. '   ' → logprob: -14.201423645019531
    6. '       ' → logprob: -15.701423645019531
    7. '	i' → logprob: -16.82642364501953
    8. ' ' → logprob: -17.07642364501953
    9. '    ' → logprob: -17.32642364501953
    10. 'self' → logprob: -18.45142364501953

Token 279: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.017598183825612068
    2. '<|end|>' → logprob: -4.7675981521606445
    3. ' ,' → logprob: -5.1425981521606445
    4. ' +=' → logprob: -6.7675981521606445
    5. '=' → logprob: -7.6425981521606445
    6. ' i' → logprob: -7.7675981521606445
    7. ')' → logprob: -8.517598152160645
    8. ':' → logprob: -8.767598152160645
    9. '+=' → logprob: -8.892598152160645
    10. '<|end|>' → logprob: -9.017598152160645

Token 280: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.005619566421955824
    2. 'i' → logprob: -5.505619525909424
    3. ' int' → logprob: -6.755619525909424
    4. ':int' → logprob: -8.755620002746582
    5. ',' → logprob: -9.380620002746582
    6. ',int' → logprob: -9.755620002746582
    7. ' i' → logprob: -10.005620002746582
    8. ')' → logprob: -12.005620002746582
    9. '=int' → logprob: -12.005620002746582
    10. '[int' → logprob: -12.130620002746582

Token 281: '):' (ID: 3127)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00029589756741188467
    2. ' ,' → logprob: -8.375295639038086
    3. ':' → logprob: -10.500295639038086
    4. '   ' → logprob: -12.000295639038086
    5. ',int' → logprob: -12.000295639038086
    6. ',
' → logprob: -12.125295639038086
    7. '):
' → logprob: -12.250295639038086
    8. '):' → logprob: -12.375295639038086
    9. ',i' → logprob: -12.625295639038086
    10. '       ' → logprob: -13.500295639038086

Token 282: ' Index' (ID: 14580)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.18020057678222656
    2. 'i' → logprob: -1.8052005767822266
    3. '<|end|>' → logprob: -8.305200576782227
    4. ' ' → logprob: -8.555200576782227
    5. ')' → logprob: -12.305200576782227
    6. ' The' → logprob: -13.680200576782227
    7. '```' → logprob: -13.680200576782227
    8. '<|end|>' → logprob: -13.680200576782227
    9. ')i' → logprob: -14.055200576782227
    10. '	i' → logprob: -14.180200576782227

Token 283: ' at' (ID: 540)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 284: ' which' (ID: 1118)
  Prédit: ' which'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' which' → logprob: -0.042205363512039185
    2. ' i' → logprob: -3.917205333709717
    3. 'which' → logprob: -4.042205333709717
    4. 'i' → logprob: -5.917205333709717
    5. ' ' → logprob: -6.917205333709717
    6. ')' → logprob: -9.417205810546875
    7. '<|end|>' → logprob: -10.417205810546875
    8. ' least' → logprob: -10.792205810546875
    9. '  ' → logprob: -11.167205810546875
    10. '1' → logprob: -11.542205810546875

Token 285: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.4333794116973877
    2. ' i' → logprob: -1.1833794116973877
    3. 'i' → logprob: -3.9333794116973877
    4. ' the' → logprob: -4.058379173278809
    5. '       ' → logprob: -5.308379173278809
    6. 'to' → logprob: -6.808379173278809
    7. '   ' → logprob: -7.433379173278809
    8. ' add' → logprob: -7.808379173278809
    9. 'the' → logprob: -7.808379173278809
    10. ' ' → logprob: -8.933379173278809

Token 286: ' add' (ID: 1147)
  Prédit: ' add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.024882089346647263
    2. ' i' → logprob: -3.7748820781707764
    3. 'add' → logprob: -7.1498823165893555
    4. ' +=' → logprob: -7.8998823165893555
    5. ' ' → logprob: -8.774882316589355
    6. 'i' → logprob: -8.899882316589355
    7. '+=' → logprob: -9.649882316589355
    8. '   ' → logprob: -10.024882316589355
    9. '       ' → logprob: -10.774882316589355
    10. '  ' → logprob: -11.399882316589355

Token 287: ' (' (ID: 350)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5431035161018372
    2. ',' → logprob: -2.2931034564971924
    3. '<|end|>' → logprob: -2.2931034564971924
    4. ' )' → logprob: -2.5431034564971924
    5. ' x' → logprob: -2.9181034564971924
    6. ' the' → logprob: -3.7931034564971924
    7. ' a' → logprob: -4.2931036949157715
    8. ' value' → logprob: -4.2931036949157715
    9. ' ' → logprob: -4.9181036949157715
    10. ' i' → logprob: -5.0431036949157715

Token 288: '1' (ID: 16)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.26321887969970703
    2. '):' → logprob: -1.763218879699707
    3. ',' → logprob: -3.638218879699707
    4. ' i' → logprob: -4.388218879699707
    5. '):
' → logprob: -4.763218879699707
    6. '),' → logprob: -5.763218879699707
    7. ' )' → logprob: -6.013218879699707
    8. 'i' → logprob: -6.638218879699707
    9. ' ):' → logprob: -7.138218879699707
    10. '   ' → logprob: -7.263218879699707

Token 289: '-based' (ID: 8235)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6506119966506958
    2. ')' → logprob: -0.9006119966506958
    3. '   ' → logprob: -4.150611877441406
    4. '):
' → logprob: -4.400611877441406
    5. ' )' → logprob: -4.525611877441406
    6. '):' → logprob: -4.775611877441406
    7. '       ' → logprob: -5.400611877441406
    8. ' ,' → logprob: -5.400611877441406
    9. ' +' → logprob: -5.900611877441406
    10. ' +=' → logprob: -6.275611877441406

Token 290: ' index' (ID: 3472)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014933731406927109
    2. ' index' → logprob: -4.3899335861206055
    3. 'index' → logprob: -6.5149335861206055
    4. ')
' → logprob: -7.3899335861206055
    5. ' )' → logprob: -8.514933586120605
    6. ').' → logprob: -10.014933586120605
    7. '   ' → logprob: -10.764933586120605
    8. ' indexing' → logprob: -11.264933586120605
    9. ' ' → logprob: -11.389933586120605
    10. '):
' → logprob: -11.639933586120605

Token 291: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0033582046162337065
    2. ')
' → logprob: -5.753358364105225
    3. '):
' → logprob: -9.628357887268066
    4. '       ' → logprob: -9.753357887268066
    5. ').' → logprob: -10.003357887268066
    6. '<|end|>' → logprob: -12.878357887268066
    7. '),' → logprob: -13.003357887268066
    8. '):' → logprob: -13.753357887268066
    9. '   ' → logprob: -13.753357887268066
    10. ')

' → logprob: -14.253357887268066

Token 292: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019491545855998993
    2. '<|end|>' → logprob: -4.769491672515869
    3. ' 
' → logprob: -6.019491672515869
    4. '        
' → logprob: -6.019491672515869
    5. ')' → logprob: -6.769491672515869
    6. '        ' → logprob: -6.894491672515869
    7. '\n' → logprob: -7.019491672515869
    8. '```' → logprob: -7.519491672515869
    9. '\' → logprob: -7.769491672515869
    10. '  
' → logprob: -7.894491672515869

Token 293: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.38762548565864563
    2. 'x' (adapté à ' x') → logprob: -1.1376254558563232
    3. '       ' → logprob: -7.512625694274902
    4. '           ' → logprob: -8.637625694274902
    5. '   ' → logprob: -10.637625694274902
    6. '    ' → logprob: -12.762625694274902
    7. ' ' → logprob: -13.762625694274902
    8. '     ' → logprob: -14.762625694274902
    9. '        ' → logprob: -14.887625694274902
    10. '  ' → logprob: -14.887625694274902

Token 294: ' (' (ID: 350)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04964979737997055
    2. ':' → logprob: -3.299649715423584
    3. '):
' → logprob: -4.549649715423584
    4. '<|end|>' → logprob: -7.674649715423584
    5. ')' → logprob: -8.674650192260742
    6. '<|end|>' → logprob: -9.174650192260742
    7. ':int' → logprob: -9.299650192260742
    8. ' ):' → logprob: -10.299650192260742
    9. '):
' → logprob: -10.924650192260742
    10. '   ' → logprob: -11.049650192260742

Token 295: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.017724676057696342
    2. ' int' → logprob: -4.267724514007568
    3. ')' → logprob: -6.267724514007568
    4. ':int' → logprob: -6.642724514007568
    5. '):
' → logprob: -8.517724990844727
    6. '):' → logprob: -9.142724990844727
    7. '=int' → logprob: -11.267724990844727
    8. ']int' → logprob: -12.017724990844727
    9. ',int' → logprob: -12.267724990844727
    10. '<int' → logprob: -12.517724990844727

Token 296: '):' (ID: 3127)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2529297173023224
    2. '):' → logprob: -1.5029296875
    3. ')' → logprob: -7.1279296875
    4. '):
' → logprob: -9.8779296875
    5. '):

' → logprob: -10.0029296875
    6. '   ' → logprob: -10.2529296875
    7. '       ' → logprob: -10.6279296875
    8. ')
' → logprob: -10.8779296875
    9. ':' → logprob: -11.6279296875
    10. ')**' → logprob: -11.8779296875

Token 297: ' Value' (ID: 9963)
  Prédit: ' The'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' The' → logprob: -0.7948455214500427
    2. ' value' → logprob: -1.2948455810546875
    3. ' x' → logprob: -2.2948455810546875
    4. '<|end|>' → logprob: -3.0448455810546875
    5. ' ' → logprob: -3.4198455810546875
    6. 'The' → logprob: -3.5448455810546875
    7. 'value' → logprob: -3.9198455810546875
    8. ' int' → logprob: -4.1698455810546875
    9. ')' → logprob: -4.4198455810546875
    10. 'Value' → logprob: -5.7948455810546875

Token 298: ' to' (ID: 316)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.13188248872756958
    2. '):
' → logprob: -2.506882429122925
    3. '<|end|>' → logprob: -3.756882429122925
    4. ':' → logprob: -4.881882667541504
    5. ')' → logprob: -5.506882667541504
    6. '<|end|>' → logprob: -6.131882667541504
    7. ' to' → logprob: -6.756882667541504
    8. '   ' → logprob: -7.006882667541504
    9. '       ' → logprob: -7.131882667541504
    10. '=' → logprob: -7.256882667541504

Token 299: ' add' (ID: 1147)
  Prédit: ' add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.005523777101188898
    2. 'add' → logprob: -5.380523681640625
    3. '+' → logprob: -8.005523681640625
    4. ')add' → logprob: -8.755523681640625
    5. '_add' → logprob: -9.255523681640625
    6. '+=' → logprob: -9.505523681640625
    7. ' be' → logprob: -9.630523681640625
    8. '   ' → logprob: -9.755523681640625
    9. 'Add' → logprob: -10.130523681640625
    10. '	add' → logprob: -10.505523681640625

Token 300: '.
' (ID: 558)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5356899499893188
    2. '):' → logprob: -1.4106899499893188
    3. ')' → logprob: -1.7856899499893188
    4. '       ' → logprob: -6.035689830780029
    5. '<|end|>' → logprob: -8.410690307617188
    6. '   ' → logprob: -8.535690307617188
    7. '):
' → logprob: -9.410690307617188
    8. '):

' → logprob: -9.910690307617188
    9. ')
' → logprob: -10.410690307617188
    10. '<|end|>' → logprob: -10.785690307617188

Token 301: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21404287219047546
    2. ')' → logprob: -2.214042901992798
    3. '
' → logprob: -2.839042901992798
    4. '):
' → logprob: -4.464042663574219
    5. '<|end|>' → logprob: -5.464042663574219
    6. '   ' → logprob: -5.714042663574219
    7. ')
' → logprob: -6.464042663574219
    8. '        
' → logprob: -7.214042663574219
    9. '\n' → logprob: -7.214042663574219
    10. '  
' → logprob: -7.464042663574219

Token 302: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0292739886790514
    2. '
' → logprob: -4.279273986816406
    3. ')' → logprob: -4.779273986816406
    4. ')
' → logprob: -5.904273986816406
    5. '):
' → logprob: -6.154273986816406
    6. '        
' → logprob: -7.404273986816406
    7. '   ' → logprob: -7.904273986816406
    8. ' 
' → logprob: -8.279273986816406
    9. '  
' → logprob: -9.029273986816406
    10. '\n' → logprob: -9.279273986816406

Token 303: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00028374246903695166
    2. '
' → logprob: -8.375284194946289
    3. ' i' → logprob: -10.625284194946289
    4. '   ' → logprob: -11.500284194946289
    5. 'i' → logprob: -12.250284194946289
    6. '```' → logprob: -12.375284194946289
    7. 'n' → logprob: -13.000284194946289
    8. '        
' → logprob: -13.125284194946289
    9. ' while' → logprob: -13.750284194946289
    10. '  
' → logprob: -14.125284194946289

Token 304: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.15646588802337646
    2. '       ' → logprob: -2.406466007232666
    3. ' while' → logprob: -2.906466007232666
    4. '   ' → logprob: -10.406465530395508
    5. '	while' → logprob: -12.406465530395508
    6. 'n' → logprob: -13.281465530395508
    7. '```' → logprob: -14.906465530395508
    8. 'While' → logprob: -15.031465530395508
    9. '           ' → logprob: -15.156465530395508
    10. 'j' → logprob: -15.781465530395508

Token 305: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6931489109992981
    2. ' i' → logprob: -0.6931489109992981
    3. '   ' → logprob: -14.193148612976074
    4. '	i' → logprob: -14.318148612976074
    5. '(i' → logprob: -15.318148612976074
    6. '  ' → logprob: -16.56814956665039
    7. ' ' → logprob: -16.69314956665039
    8. '```' → logprob: -17.19314956665039
    9. '1' → logprob: -17.56814956665039
    10. '    ' → logprob: -18.19314956665039

Token 306: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.07889121770858765
    2. '<=' → logprob: -2.5788912773132324
    3. ' <' → logprob: -14.078890800476074
    4. ' +=' → logprob: -14.578890800476074
    5. '+=' → logprob: -15.828890800476074
    6. '<' → logprob: -16.45389175415039
    7. ' ≤' → logprob: -17.70389175415039
    8. ' <<=' → logprob: -18.57889175415039
    9. '≤' → logprob: -18.95389175415039
    10. ' ' → logprob: -19.20389175415039

Token 307: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00015860427811276168
    2. ' self' → logprob: -8.750158309936523
    3. '[self' → logprob: -17.625158309936523
    4. '       ' → logprob: -17.875158309936523
    5. '(self' → logprob: -17.875158309936523
    6. '<|end|>' → logprob: -17.875158309936523
    7. '
' → logprob: -18.000158309936523
    8. '	self' → logprob: -18.500158309936523
    9. 's' → logprob: -18.750158309936523
    10. '   ' → logprob: -18.875158309936523

Token 308: '.size' (ID: 4463)
  Prédit: '.size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.size' → logprob: -0.003295109374448657
    2. 'size' → logprob: -5.753294944763184
    3. 'self' → logprob: -9.253294944763184
    4. ' size' → logprob: -11.128294944763184
    5. '.' → logprob: -12.128294944763184
    6. '<size' → logprob: -15.378294944763184
    7. '	size' → logprob: -15.503294944763184
    8. '.self' → logprob: -15.753294944763184
    9. '.n' → logprob: -15.878294944763184
    10. 's' → logprob: -16.0032958984375

Token 309: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.31362494826316833
    2. ':' → logprob: -1.3136249780654907
    3. '):
' → logprob: -8.93862533569336
    4. '           ' → logprob: -9.06362533569336
    5. '       ' → logprob: -9.81362533569336
    6. ':
' → logprob: -11.06362533569336
    7. ',' → logprob: -11.56362533569336
    8. '<|end|>' → logprob: -11.56362533569336
    9. ' :
' → logprob: -12.06362533569336
    10. '   ' → logprob: -12.31362533569336

Token 310: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0028580129146575928
    2. 'self' → logprob: -6.0028581619262695
    3. ' self' → logprob: -8.00285816192627
    4. '```' → logprob: -10.50285816192627
    5. '               ' → logprob: -12.12785816192627
    6. '   ' → logprob: -12.12785816192627
    7. '[self' → logprob: -12.75285816192627
    8. '<|end|>' → logprob: -13.50285816192627
    9. '       ' → logprob: -14.12785816192627
    10. '	self' → logprob: -14.12785816192627

Token 311: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.06635451316833496
    2. ' self' → logprob: -2.816354513168335
    3. '           ' → logprob: -5.441354751586914
    4. '               ' → logprob: -10.816354751586914
    5. '	self' → logprob: -11.566354751586914
    6. '   ' → logprob: -12.191354751586914
    7. '```' → logprob: -12.441354751586914
    8. '[self' → logprob: -13.316354751586914
    9. '       ' → logprob: -13.316354751586914
    10. '*self' → logprob: -14.441354751586914

Token 312: '.tree' (ID: 49211)
  Prédit: '.tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tree' → logprob: -0.00023762896307744086
    2. '.' → logprob: -8.500237464904785
    3. ' .' → logprob: -10.875237464904785
    4. '	tree' → logprob: -12.625237464904785
    5. 'tree' → logprob: -12.875237464904785
    6. '.table' → logprob: -13.125237464904785
    7. '.thread' → logprob: -13.500237464904785
    8. '`.' → logprob: -14.000237464904785
    9. '>.' → logprob: -14.125237464904785
    10. '       ' → logprob: -14.375237464904785

Token 313: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -15.375
    3. '[I' → logprob: -16.625
    4. '```' → logprob: -17.875
    5. '[self' → logprob: -18.75
    6. 'i' → logprob: -19.875
    7. '[index' → logprob: -20.0
    8. ' [' → logprob: -20.125
    9. '           ' → logprob: -20.25
    10. '[int' → logprob: -20.375

Token 314: ']' (ID: 60)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.16025875508785248
    2. ' +=' → logprob: -1.9102587699890137
    3. ']+=' → logprob: -10.285258293151855
    4. '+' → logprob: -15.660258293151855
    5. '    ' → logprob: -16.660259246826172
    6. '[' → logprob: -17.035259246826172
    7. '+=(' → logprob: -17.160259246826172
    8. '=' → logprob: -17.660259246826172
    9. '        ' → logprob: -17.660259246826172
    10. '+='' → logprob: -17.785259246826172

Token 315: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.008614808320999146
    2. ' +=' → logprob: -4.758615016937256
    3. ']+=' → logprob: -15.383614540100098
    4. '+' → logprob: -18.258615493774414
    5. '+=(' → logprob: -18.883615493774414
    6. '=' → logprob: -19.008615493774414
    7. '        ' → logprob: -19.508615493774414
    8. '           ' → logprob: -20.133615493774414
    9. '+='' → logprob: -20.133615493774414
    10. '+="' → logprob: -20.508615493774414

Token 316: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.07888978719711304
    2. ' x' → logprob: -2.578889846801758
    3. '	x' → logprob: -19.203889846801758
    4. '$x' → logprob: -23.328889846801758
    5. ')x' → logprob: -24.078889846801758
    6. '(x' → logprob: -24.078889846801758
    7. '{x' → logprob: -24.578889846801758
    8. '"x' → logprob: -24.953889846801758
    9. '_x' → logprob: -25.078889846801758
    10. '*x' → logprob: -25.078889846801758

Token 317: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007794709876179695
    2. '
' → logprob: -4.8827948570251465
    3. 'i' → logprob: -9.132794380187988
    4. '   ' → logprob: -11.257794380187988
    5. ',' → logprob: -11.507794380187988
    6. ',i' → logprob: -11.632794380187988
    7. '<|end|>' → logprob: -11.757794380187988
    8. '            
' → logprob: -11.882794380187988
    9. ' i' → logprob: -11.882794380187988
    10. '[i' → logprob: -12.007794380187988

Token 318: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001308809849433601
    2. 'i' → logprob: -7.001308917999268
    3. ' i' → logprob: -7.876308917999268
    4. '   ' → logprob: -11.87630844116211
    5. ',i' → logprob: -12.25130844116211
    6. '
' → logprob: -13.12630844116211
    7. '```' → logprob: -13.62630844116211
    8. ',' → logprob: -14.00130844116211
    9. '       ' → logprob: -14.50130844116211
    10. '[i' → logprob: -14.75130844116211

Token 319: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.062022581696510315
    2. ' i' → logprob: -2.8120226860046387
    3. '           ' → logprob: -9.81202220916748
    4. '   ' → logprob: -16.937023162841797
    5. '	i' → logprob: -16.937023162841797
    6. '               ' → logprob: -18.437023162841797
    7. '
' → logprob: -19.812023162841797
    8. '       ' → logprob: -19.937023162841797
    9. ',i' → logprob: -20.562023162841797
    10. ' ' → logprob: -20.562023162841797

Token 320: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.1269306242465973
    2. '+=' → logprob: -2.1269307136535645
    3. ' |=' → logprob: -13.751930236816406
    4. '=' → logprob: -14.376930236816406
    5. ' <<=' → logprob: -15.001930236816406
    6. ' ' → logprob: -15.376930236816406
    7. '|' → logprob: -16.251930236816406
    8. ']+=' → logprob: -16.501930236816406
    9. '    ' → logprob: -16.876930236816406
    10. '+=(' → logprob: -17.001930236816406

Token 321: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.16022545099258423
    2. ' i' → logprob: -1.9102253913879395
    3. '(i' → logprob: -14.160225868225098
    4. '	i' → logprob: -14.910225868225098
    5. ' (' → logprob: -15.785225868225098
    6. '   ' → logprob: -16.16022491455078
    7. '{i' → logprob: -16.91022491455078
    8. '  ' → logprob: -17.28522491455078
    9. '```' → logprob: -17.53522491455078
    10. ' ' → logprob: -17.53522491455078

Token 322: ' &' (ID: 827)
  Prédit: ' &'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.09779011458158493
    2. '&' → logprob: -2.847790002822876
    3. '&i' → logprob: -3.347790002822876
    4. '&amp' → logprob: -10.722789764404297
    5. '&I' → logprob: -13.222789764404297
    6. 'i' → logprob: -13.847789764404297
    7. '&id' → logprob: -14.847789764404297
    8. '&t' → logprob: -15.347789764404297
    9. '&r' → logprob: -15.347789764404297
    10. '&nbsp' → logprob: -15.347789764404297

Token 323: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.39317622780799866
    2. '-i' → logprob: -1.1431761980056763
    3. '-' → logprob: -5.143176078796387
    4. ' i' → logprob: -8.018176078796387
    5. 'i' → logprob: -9.143176078796387
    6. '(-' → logprob: -12.143176078796387
    7. ' (-' → logprob: -13.518176078796387
    8. '	i' → logprob: -14.768176078796387
    9. ' ' → logprob: -14.893176078796387
    10. '-in' → logprob: -15.018176078796387

Token 324: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.306760805164231e-05
    2. ' i' → logprob: -11.25001335144043
    3. '	i' → logprob: -17.62501335144043
    4. '-i' → logprob: -19.00001335144043
    5. ' ' → logprob: -20.62501335144043
    6. '<|end|>' → logprob: -20.62501335144043
    7. '```' → logprob: -20.62501335144043
    8. '_i' → logprob: -20.87501335144043
    9. '[i' → logprob: -21.12501335144043
    10. '   ' → logprob: -21.25001335144043

Token 325: '

' (ID: 279)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0022281676065176725
    2. ' i' → logprob: -6.127228260040283
    3. '.i' → logprob: -11.877227783203125
    4. ')' → logprob: -11.877227783203125
    5. '       ' → logprob: -12.002227783203125
    6. '(i' → logprob: -12.252227783203125
    7. '[i' → logprob: -12.377227783203125
    8. '_i' → logprob: -12.502227783203125
    9. ',i' → logprob: -13.127227783203125
    10. '   ' → logprob: -13.377227783203125

Token 326: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030239364132285118
    2. '
' → logprob: -4.530239582061768
    3. '<|end|>' → logprob: -4.530239582061768
    4. '    
' → logprob: -5.280239582061768
    5. '  
' → logprob: -7.280239582061768
    6. ' ' → logprob: -7.655239582061768
    7. '  ' → logprob: -7.780239582061768
    8. ' 
' → logprob: -7.780239582061768
    9. 'def' → logprob: -8.40523910522461
    10. '       ' → logprob: -8.78023910522461

Token 327: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.02099679224193096
    2. ' def' → logprob: -4.520996570587158
    3. '   ' → logprob: -4.645996570587158
    4. '
' → logprob: -8.270997047424316
    5. '    
' → logprob: -10.645997047424316
    6. ' ' → logprob: -12.020997047424316
    7. '```' → logprob: -12.145997047424316
    8. '	def' → logprob: -12.895997047424316
    9. '  
' → logprob: -13.395997047424316
    10. '        
' → logprob: -13.770997047424316

Token 328: ' debug' (ID: 15199)
  Prédit: 'lower'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lower' → logprob: -0.1269584596157074
    2. ' lower' → logprob: -2.1269583702087402
    3. 'def' → logprob: -10.876958847045898
    4. '_lower' → logprob: -12.501958847045898
    5. ' ' → logprob: -13.376958847045898
    6. ' def' → logprob: -13.626958847045898
    7. '.lower' → logprob: -14.376958847045898
    8. 'lowest' → logprob: -14.501958847045898
    9. 'upper' → logprob: -14.626958847045898
    10. '   ' → logprob: -14.626958847045898

Token 329: '_print' (ID: 31509)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.017418265342712402
    2. '(' → logprob: -4.892418384552002
    3. '_' → logprob: -5.517418384552002
    4. 'self' → logprob: -5.642418384552002
    5. '_print' → logprob: -7.017418384552002
    6. '_(' → logprob: -7.392418384552002
    7. '_sum' → logprob: -8.267417907714844
    8. 'print' → logprob: -9.017417907714844
    9. '()' → logprob: -9.267417907714844
    10. '_self' → logprob: -9.892417907714844

Token 330: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00026979928952641785
    2. '(' → logprob: -8.250269889831543
    3. ' (' → logprob: -12.125269889831543
    4. '(s' → logprob: -13.625269889831543
    5. 'self' → logprob: -14.000269889831543
    6. '()' → logprob: -14.500269889831543
    7. '(
' → logprob: -15.250269889831543
    8. '(sel' → logprob: -16.375268936157227
    9. '   ' → logprob: -16.500268936157227
    10. ' ' → logprob: -17.375268936157227

Token 331: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3757631182670593
    2. 'self' → logprob: -1.250763177871704
    3. ',' → logprob: -4.500762939453125
    4. '):
' → logprob: -4.750762939453125
    5. '(self' → logprob: -5.000762939453125
    6. ')' → logprob: -8.750762939453125
    7. ' self' → logprob: -9.000762939453125
    8. ')(' → logprob: -9.625762939453125
    9. ' ):' → logprob: -9.875762939453125
    10. '   ' → logprob: -11.125762939453125

Token 332: '       ' (ID: 309)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.5549925565719604
    2. '       ' → logprob: -0.9299925565719604
    3. '(' → logprob: -3.92999267578125
    4. '   ' → logprob: -5.30499267578125
    5. '():
' → logprob: -5.80499267578125
    6. '(
' → logprob: -6.17999267578125
    7. ':
' → logprob: -7.17999267578125
    8. ':' → logprob: -8.30499267578125
    9. '():' → logprob: -8.30499267578125
    10. '()' → logprob: -8.80499267578125

Token 333: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16090910136699677
    2. 'print' → logprob: -1.9109090566635132
    3. ' print' → logprob: -7.410909175872803
    4. 'for' → logprob: -10.035908699035645
    5. '   ' → logprob: -11.285908699035645
    6. '```' → logprob: -11.285908699035645
    7. ' for' → logprob: -12.160908699035645
    8. 'def' → logprob: -12.910908699035645
    9. '	print' → logprob: -14.160908699035645
    10. 'self' → logprob: -14.285908699035645

Token 334: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2538072466850281
    2. 'print' → logprob: -1.5038073062896729
    3. ' print' → logprob: -6.878807067871094
    4. 'for' → logprob: -7.753807067871094
    5. '   ' → logprob: -8.128807067871094
    6. ' for' → logprob: -9.753807067871094
    7. '"""' → logprob: -10.253807067871094
    8. 'return' → logprob: -11.253807067871094
    9. '"""
' → logprob: -12.628807067871094
    10. '           ' → logprob: -12.753807067871094

Token 335: ' Print' (ID: 13103)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.20426949858665466
    2. ' print' → logprob: -1.704269528388977
    3. ' for' → logprob: -6.3292694091796875
    4. '       ' → logprob: -7.5792694091796875
    5. 'for' → logprob: -7.5792694091796875
    6. '   ' → logprob: -10.079269409179688
    7. 'return' → logprob: -13.204269409179688
    8. ' return' → logprob: -14.329269409179688
    9. 'def' → logprob: -14.329269409179688
    10. ' pass' → logprob: -14.704269409179688

Token 336: ' the' (ID: 290)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.014140471816062927
    2. '(' → logprob: -4.639140605926514
    3. '()' → logprob: -6.389140605926514
    4. 'self' → logprob: -6.389140605926514
    5. '("' → logprob: -8.139140129089355
    6. '(f' → logprob: -8.389140129089355
    7. '(
' → logprob: -8.889140129089355
    8. '('' → logprob: -9.264140129089355
    9. '   ' → logprob: -9.639140129089355
    10. ' (' → logprob: -9.639140129089355

Token 337: ' internal' (ID: 8812)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.57779860496521
    2. 'self' → logprob: -1.20279860496521
    3. ' tree' → logprob: -2.95279860496521
    4. ' current' → logprob: -2.95279860496521
    5. 'current' → logprob: -4.077798843383789
    6. ' self' → logprob: -4.452798843383789
    7. ' internal' → logprob: -5.577798843383789
    8. 'internal' → logprob: -7.077798843383789
    9. 'state' → logprob: -8.077798843383789
    10. ' contents' → logprob: -8.952798843383789

Token 338: ' status' (ID: 4495)
  Prédit: ' tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tree' → logprob: -0.9435940384864807
    2. ' state' → logprob: -1.193593978881836
    3. 'state' → logprob: -1.318593978881836
    4. 'tree' → logprob: -3.693593978881836
    5. 'self' → logprob: -4.443593978881836
    6. ' self' → logprob: -5.943593978881836
    7. '   ' → logprob: -8.693593978881836
    8. ' array' → logprob: -8.818593978881836
    9. '_tree' → logprob: -9.193593978881836
    10. ' states' → logprob: -9.943593978881836

Token 339: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.7938358187675476
    2. '       ' → logprob: -1.5438358783721924
    3. '(self' → logprob: -2.0438358783721924
    4. '()' → logprob: -2.1688358783721924
    5. '   ' → logprob: -2.5438358783721924
    6. 'self' → logprob: -5.168835639953613
    7. 'of' → logprob: -5.918835639953613
    8. ' self' → logprob: -6.543835639953613
    9. '(' → logprob: -7.043835639953613
    10. ' (' → logprob: -8.168835639953613

Token 340: ' the' (ID: 290)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.38398995995521545
    2. 'the' → logprob: -1.758989930152893
    3. ' the' → logprob: -2.0089900493621826
    4. ' self' → logprob: -4.3839898109436035
    5. 'def' → logprob: -11.258990287780762
    6. 'tree' → logprob: -11.258990287780762
    7. '   ' → logprob: -11.633990287780762
    8. 'bit' → logprob: -13.258990287780762
    9. '```' → logprob: -13.633990287780762
    10. '(self' → logprob: -13.758990287780762

Token 341: ' BIT' (ID: 52185)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.3283630609512329
    2. ' tree' → logprob: -1.328363060951233
    3. 'bit' → logprob: -5.078362941741943
    4. 'self' → logprob: -5.453362941741943
    5. 'Bit' → logprob: -6.578362941741943
    6. 'BIT' → logprob: -6.703362941741943
    7. ' bit' → logprob: -7.328362941741943
    8. ' Bit' → logprob: -7.953362941741943
    9. ' self' → logprob: -8.453363418579102
    10. ' BIT' → logprob: -8.453363418579102

Token 342: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13955844938755035
    2. ':' → logprob: -3.0145585536956787
    3. '   ' → logprob: -3.3895585536956787
    4. '(self' → logprob: -3.7645585536956787
    5. '.' → logprob: -4.5145583152771
    6. ',' → logprob: -5.1395583152771
    7. 'self' → logprob: -5.7645583152771
    8. '()' → logprob: -6.7645583152771
    9. '():' → logprob: -7.2645583152771
    10. ':
' → logprob: -7.5145583152771

Token 343: ' indentation' (ID: 170733)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.8640185594558716
    2. ' indices' → logprob: -1.3640185594558716
    3. 'indexes' → logprob: -2.364018440246582
    4. ' current' → logprob: -3.239018440246582
    5. ' indexes' → logprob: -3.239018440246582
    6. ' the' → logprob: -3.614018440246582
    7. 'index' → logprob: -3.989018440246582
    8. 'self' → logprob: -4.364018440246582
    9. 'values' → logprob: -4.489018440246582
    10. ' spaces' → logprob: -4.614018440246582

Token 344: ' showing' (ID: 14253)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01440312247723341
    2. '   ' → logprob: -4.389403343200684
    3. ',' → logprob: -7.889403343200684
    4. '.' → logprob: -7.889403343200684
    5. '(' → logprob: -8.014403343200684
    6. '(self' → logprob: -8.139403343200684
    7. 'self' → logprob: -8.639403343200684
    8. ' for' → logprob: -8.889403343200684
    9. ':' → logprob: -10.264403343200684
    10. '           ' → logprob: -10.389403343200684

Token 345: ' tree' (ID: 8165)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.44213002920150757
    2. 'the' → logprob: -1.9421300888061523
    3. 'depth' → logprob: -2.9421300888061523
    4. 'levels' → logprob: -3.8171300888061523
    5. 'bit' → logprob: -3.9421300888061523
    6. ' depth' → logprob: -4.067130088806152
    7. ' bit' → logprob: -4.192130088806152
    8. ' levels' → logprob: -4.317130088806152
    9. 'current' → logprob: -4.567130088806152
    10. ' tree' → logprob: -4.692130088806152

Token 346: ' structure' (ID: 8866)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.324486255645752
    2. ' levels' → logprob: -1.699486255645752
    3. ' depth' → logprob: -2.074486255645752
    4. ' structure' → logprob: -2.324486255645752
    5. 'depth' → logprob: -2.324486255645752
    6. '[' → logprob: -2.699486255645752
    7. ' nodes' → logprob: -3.074486255645752
    8. 'levels' → logprob: -3.449486255645752
    9. '_depth' → logprob: -3.949486255645752
    10. '       ' → logprob: -3.949486255645752

Token 347: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2374785840511322
    2. '(self' → logprob: -1.8624786138534546
    3. '   ' → logprob: -4.112478733062744
    4. ',' → logprob: -4.487478733062744
    5. '.' → logprob: -4.987478733062744
    6. ':' → logprob: -4.987478733062744
    7. ':
' → logprob: -5.612478733062744
    8. '
' → logprob: -5.737478733062744
    9. '(' → logprob: -5.737478733062744
    10. 'self' → logprob: -6.112478733062744

Token 348: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00022082125360611826
    2. '   ' → logprob: -9.125221252441406
    3. '```' → logprob: -10.625221252441406
    4. 'def' → logprob: -10.750221252441406
    5. '
' → logprob: -11.000221252441406
    6. ' for' → logprob: -11.500221252441406
    7. ' lines' → logprob: -12.000221252441406
    8. '           ' → logprob: -12.375221252441406
    9. ',' → logprob: -12.500221252441406
    10. '        
' → logprob: -12.750221252441406

Token 349: ' For' (ID: 2214)
  Prédit: ' level'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' level' → logprob: -1.3603670597076416
    2. ' for' → logprob: -1.7353670597076416
    3. ' def' → logprob: -2.2353670597076416
    4. 'def' → logprob: -2.3603670597076416
    5. ' indent' → logprob: -2.4853670597076416
    6. 'level' → logprob: -2.7353670597076416
    7. '       ' → logprob: -3.2353670597076416
    8. ' depth' → logprob: -3.7353670597076416
    9. 'indent' → logprob: -3.7353670597076416
    10. 'depth' → logprob: -3.8603670597076416

Token 350: ' debugging' (ID: 64667)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.22026002407073975
    2. 'i' → logprob: -2.4702601432800293
    3. ' level' → logprob: -2.5952601432800293
    4. ' d' → logprob: -4.595260143280029
    5. ' depth' → logprob: -4.595260143280029
    6. 'level' → logprob: -5.095260143280029
    7. 'depth' → logprob: -5.470260143280029
    8. 'd' → logprob: -5.970260143280029
    9. ' l' → logprob: -6.970260143280029
    10. ' idx' → logprob: -7.345260143280029

Token 351: ' purposes' (ID: 14189)
  Prédit: ' purposes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' purposes' → logprob: -0.7439795732498169
    2. ',' → logprob: -0.9939795732498169
    3. ':' → logprob: -1.993979573249817
    4. ':
' → logprob: -5.243979454040527
    5. '.' → logprob: -5.368979454040527
    6. ' in' → logprob: -6.368979454040527
    7. ',
' → logprob: -6.493979454040527
    8. 'def' → logprob: -6.993979454040527
    9. 'pur' → logprob: -6.993979454040527
    10. 'purpose' → logprob: -7.243979454040527

Token 352: '.
' (ID: 558)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.30741268396377563
    2. ':' → logprob: -1.6824126243591309
    3. ':
' → logprob: -3.182412624359131
    4. '       ' → logprob: -3.807412624359131
    5. ',
' → logprob: -5.307412624359131
    6. '   ' → logprob: -5.557412624359131
    7. '
' → logprob: -6.182412624359131
    8. '):' → logprob: -6.682412624359131
    9. '.' → logprob: -6.807412624359131
    10. '):
' → logprob: -6.932412624359131

Token 353: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014353510923683643
    2. '   ' → logprob: -6.626435279846191
    3. '```' → logprob: -10.001435279846191
    4. '
' → logprob: -10.251435279846191
    5. 'def' → logprob: -12.001435279846191
    6. '        
' → logprob: -12.376435279846191
    7. ',' → logprob: -12.626435279846191
    8. '<|end|>' → logprob: -13.251435279846191
    9. '           ' → logprob: -13.501435279846191
    10. '    
' → logprob: -13.626435279846191

Token 354: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0033345604315400124
    2. '   ' → logprob: -6.5033345222473145
    3. '
' → logprob: -7.1283345222473145
    4. '```' → logprob: -8.003334999084473
    5. '"""
' (adapté à ' """
') → logprob: -8.253334999084473
    6. 'def' → logprob: -8.878334999084473
    7. '"""' → logprob: -9.003334999084473
    8. '        
' → logprob: -10.128334999084473
    9. '`' → logprob: -11.128334999084473
    10. '           ' → logprob: -11.378334999084473

Token 355: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0026761337649077177
    2. 'n' → logprob: -7.252676010131836
    3. 'def' → logprob: -7.752676010131836
    4. 'level' → logprob: -8.002676010131836
    5. ' indent' → logprob: -8.502676010131836
    6. 'indent' → logprob: -8.502676010131836
    7. '   ' → logprob: -8.752676010131836
    8. ' level' → logprob: -9.002676010131836
    9. 'i' → logprob: -9.252676010131836
    10. ' for' → logprob: -9.377676010131836

Token 356: ' for' (ID: 395)
  Prédit: 'level'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'level' → logprob: -1.2856953144073486
    2. 'def' → logprob: -1.6606953144073486
    3. 'for' (adapté à ' for') → logprob: -1.6606953144073486
    4. 'indent' → logprob: -1.7856953144073486
    5. 'i' → logprob: -3.5356953144073486
    6. 'depth' → logprob: -3.9106953144073486
    7. 'h' → logprob: -4.0356950759887695
    8. 'l' → logprob: -4.1606950759887695
    9. 'd' → logprob: -4.4106950759887695
    10. 'n' → logprob: -4.5356950759887695

Token 357: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5847047567367554
    2. 'depth' → logprob: -2.209704875946045
    3. ' i' → logprob: -2.334704875946045
    4. 'd' → logprob: -2.334704875946045
    5. 'level' → logprob: -2.834704875946045
    6. ' d' → logprob: -3.459704875946045
    7. ' level' → logprob: -3.834704875946045
    8. ' depth' → logprob: -4.334704875946045
    9. 'h' → logprob: -4.709704875946045
    10. 'k' → logprob: -6.584704875946045

Token 358: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018275899812579155
    2. 'in' → logprob: -4.143275737762451
    3. ',' → logprob: -6.268275737762451
    4. ' ' → logprob: -8.39327621459961
    5. '   ' → logprob: -10.51827621459961
    6. ' ,' → logprob: -10.64327621459961
    7. '  ' → logprob: -10.89327621459961
    8. '    ' → logprob: -11.26827621459961
    9. '```' → logprob: -12.26827621459961
    10. '	in' → logprob: -12.39327621459961

Token 359: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.003178544342517853
    2. ' range' → logprob: -5.753178596496582
    3. '   ' → logprob: -15.253178596496582
    4. ' ' → logprob: -15.628178596496582
    5. '(range' → logprob: -16.003177642822266
    6. '  ' → logprob: -16.253177642822266
    7. '[' → logprob: -16.503177642822266
    8. 're' → logprob: -17.378177642822266
    9. '
' → logprob: -17.628177642822266
    10. '1' → logprob: -17.753177642822266

Token 360: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00013846253568772227
    2. '1' → logprob: -9.000138282775879
    3. '(self' → logprob: -11.125138282775879
    4. 'self' → logprob: -16.250139236450195
    5. ' (' → logprob: -16.375139236450195
    6. '   ' → logprob: -16.500139236450195
    7. '(
' → logprob: -18.000139236450195
    8. ' ' → logprob: -18.125139236450195
    9. '           ' → logprob: -18.750139236450195
    10. '[' → logprob: -18.875139236450195

Token 361: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004094619944225997
    2. 'self' → logprob: -7.8754096031188965
    3. '2' → logprob: -10.875409126281738
    4. ' ' → logprob: -12.375409126281738
    5. '0' → logprob: -13.125409126281738
    6. 'len' → logprob: -14.125409126281738
    7. '(' → logprob: -14.250409126281738
    8. '(self' → logprob: -14.500409126281738
    9. '16' → logprob: -14.750409126281738
    10. '   ' → logprob: -14.875409126281738

Token 362: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00026407750556245446
    2. ',self' → logprob: -8.750264167785645
    3. ' ,' → logprob: -9.250264167785645
    4. ',
' → logprob: -12.000264167785645
    5. '   ' → logprob: -13.750264167785645
    6. ',len' → logprob: -14.125264167785645
    7. 'self' → logprob: -14.375264167785645
    8. '       ' → logprob: -14.625264167785645
    9. ' ' → logprob: -16.500263214111328
    10. '    ' → logprob: -16.625263214111328

Token 363: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -5.657694418914616e-05
    2. 'len' → logprob: -10.125056266784668
    3. ' self' → logprob: -11.125056266784668
    4. '1' → logprob: -13.875056266784668
    5. '2' → logprob: -15.500056266784668
    6. '(self' → logprob: -15.625056266784668
    7. '   ' → logprob: -16.000057220458984
    8. '4' → logprob: -16.750057220458984
    9. '10' → logprob: -17.375057220458984
    10. '
' → logprob: -18.000057220458984

Token 364: '.size' (ID: 4463)
  Prédit: '.size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.size' → logprob: -4.894790981779806e-05
    2. 'size' → logprob: -10.375048637390137
    3. '.' → logprob: -11.250048637390137
    4. ' .' → logprob: -13.500048637390137
    5. '.depth' → logprob: -13.500048637390137
    6. ' size' → logprob: -14.750048637390137
    7. '   ' → logprob: -15.125048637390137
    8. '.length' → logprob: -15.750048637390137
    9. '.n' → logprob: -16.000049591064453
    10. '.user' → logprob: -16.125049591064453

Token 365: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03816749155521393
    2. ' +' → logprob: -3.2881674766540527
    3. '):' → logprob: -9.288167953491211
    4. '):
' → logprob: -10.663167953491211
    5. '+
' → logprob: -12.788167953491211
    6. '   ' → logprob: -12.788167953491211
    7. ' ):' → logprob: -14.163167953491211
    8. ',' → logprob: -14.288167953491211
    9. ' ' → logprob: -14.538167953491211
    10. '    ' → logprob: -14.788167953491211

Token 366: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.082895273109898e-05
    2. ' ' → logprob: -10.625030517578125
    3. '2' → logprob: -12.500030517578125
    4. 'self' → logprob: -13.000030517578125
    5. '   ' → logprob: -15.500030517578125
    6. '
' → logprob: -16.500030517578125
    7. '(self' → logprob: -17.437530517578125
    8. '(' → logprob: -18.000030517578125
    9. '11' → logprob: -18.062530517578125
    10. '10' → logprob: -18.312530517578125

Token 367: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.500001907348633
    3. '2' → logprob: -14.875001907348633
    4. '
' → logprob: -17.000001907348633
    5. '   ' → logprob: -17.000001907348633
    6. 'self' → logprob: -17.125001907348633
    7. '```' → logprob: -18.312501907348633
    8. '11' → logprob: -18.875001907348633
    9. '10' → logprob: -19.062501907348633
    10. '16' → logprob: -19.250001907348633

Token 368: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.04868774116039276
    2. '):' → logprob: -3.048687696456909
    3. ',' → logprob: -10.423687934875488
    4. '       ' → logprob: -10.923687934875488
    5. ':' → logprob: -11.048687934875488
    6. '):
' → logprob: -11.048687934875488
    7. ':
' → logprob: -11.923687934875488
    8. ' ):
' → logprob: -12.048687934875488
    9. '   ' → logprob: -12.798687934875488
    10. ')' → logprob: -12.923687934875488

Token 369: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003531178692355752
    2. 'print' → logprob: -5.878530979156494
    3. ' print' → logprob: -7.503530979156494
    4. ' if' → logprob: -9.628531455993652
    5. '       ' → logprob: -10.628531455993652
    6. '            ' → logprob: -11.128531455993652
    7. '	       ' → logprob: -11.628531455993652
    8. 'if' → logprob: -11.753531455993652
    9. '<|end|>' → logprob: -12.003531455993652
    10. '```' → logprob: -12.003531455993652

Token 370: ' j' (ID: 441)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2816179096698761
    2. 'level' → logprob: -2.5316178798675537
    3. 'depth' → logprob: -2.7816178798675537
    4. 'indent' → logprob: -2.9066178798675537
    5. ' print' → logprob: -3.9066178798675537
    6. ' indent' → logprob: -4.906618118286133
    7. 'spaces' → logprob: -5.406618118286133
    8. 'space' → logprob: -5.781618118286133
    9. ' level' → logprob: -6.156618118286133
    10. 'self' → logprob: -6.281618118286133

Token 371: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.43151965737342834
    2. ' =' → logprob: -1.056519627571106
    3. ',' → logprob: -6.181519508361816
    4. '   ' → logprob: -7.806519508361816
    5. '    ' → logprob: -8.931519508361816
    6. ' ' → logprob: -9.556519508361816
    7. '=i' → logprob: -10.181519508361816
    8. '  ' → logprob: -10.931519508361816
    9. '       ' → logprob: -11.681519508361816
    10. 'in' → logprob: -11.681519508361816

Token 372: ' (' (ID: 350)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3956368863582611
    2. '1' → logprob: -1.1456369161605835
    3. '(i' → logprob: -5.770637035369873
    4. '0' → logprob: -6.020637035369873
    5. 'self' → logprob: -6.020637035369873
    6. '2' → logprob: -7.645637035369873
    7. '(' → logprob: -9.145636558532715
    8. ' i' → logprob: -10.020636558532715
    9. '4' → logprob: -10.520636558532715
    10. ' ' → logprob: -10.520636558532715

Token 373: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00577520439401269
    2. '1' → logprob: -5.380774974822998
    3. 'self' → logprob: -7.505774974822998
    4. '(i' → logprob: -7.630774974822998
    5. '2' → logprob: -10.005775451660156
    6. ' i' → logprob: -10.880775451660156
    7. '(' → logprob: -11.380775451660156
    8. '0' → logprob: -11.755775451660156
    9. '4' → logprob: -12.130775451660156
    10. 'bin' → logprob: -12.505775451660156

Token 374: ' &' (ID: 827)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>>' → logprob: -1.3415007591247559
    2. '-' → logprob: -1.5915007591247559
    3. '&' → logprob: -2.466500759124756
    4. '+' → logprob: -2.591500759124756
    5. '<<' → logprob: -2.591500759124756
    6. '   ' → logprob: -2.591500759124756
    7. '^' → logprob: -2.591500759124756
    8. ')' → logprob: -3.091500759124756
    9. '.bit' → logprob: -3.341500759124756
    10. ').' → logprob: -3.966500759124756

Token 375: ' -' (ID: 533)
  Prédit: '-i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-i' → logprob: -0.2883242070674896
    2. '-' → logprob: -1.538324236869812
    3. ' -' → logprob: -3.6633241176605225
    4. '(-' → logprob: -5.038324356079102
    5. '-(' → logprob: -6.788324356079102
    6. '(i' → logprob: -7.663324356079102
    7. '-j' → logprob: -7.663324356079102
    8. '-s' → logprob: -8.038324356079102
    9. '-int' → logprob: -8.288324356079102
    10. '~' → logprob: -8.788324356079102

Token 376: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00013643606507685035
    2. 'j' → logprob: -9.500136375427246
    3. ' i' → logprob: -10.000136375427246
    4. ')i' → logprob: -11.750136375427246
    5. ')' → logprob: -12.250136375427246
    6. '   ' → logprob: -14.375136375427246
    7. ''i' → logprob: -14.625136375427246
    8. '	i' → logprob: -14.750136375427246
    9. '-i' → logprob: -15.000136375427246
    10. '_i' → logprob: -15.312636375427246

Token 377: ').' (ID: 741)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09601270407438278
    2. ')
' → logprob: -2.471012592315674
    3. ')<<' → logprob: -5.721012592315674
    4. ')>>' → logprob: -6.096012592315674
    5. ').' → logprob: -6.971012592315674
    6. ')*' → logprob: -8.596013069152832
    7. '           ' → logprob: -9.471013069152832
    8. '       ' → logprob: -9.596013069152832
    9. ')+' → logprob: -10.221013069152832
    10. '   ' → logprob: -10.221013069152832

Token 378: 'bit' (ID: 6516)
  Prédit: 'bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.0004948906716890633
    2. '.bit' → logprob: -8.250494956970215
    3. 'j' → logprob: -9.000494956970215
    4. ' bit' → logprob: -9.500494956970215
    5. '```' → logprob: -12.000494956970215
    6. ' ' → logprob: -12.000494956970215
    7. 'hex' → logprob: -12.250494956970215
    8. '__' → logprob: -12.750494956970215
    9. 'i' → logprob: -13.500494956970215
    10. '2' → logprob: -13.625494956970215

Token 379: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -6.392202976712724e-06
    2. '_' → logprob: -12.125006675720215
    3. 'length' → logprob: -14.750006675720215
    4. '_l' → logprob: -15.000006675720215
    5. '_le' → logprob: -17.2500057220459
    6. '_LENGTH' → logprob: -17.3750057220459
    7. '_width' → logprob: -18.0000057220459
    8. '_count' → logprob: -18.1250057220459
    9. 'ength' → logprob: -18.5000057220459
    10. '```' → logprob: -18.8750057220459

Token 380: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.006732660811394453
    2. '()-' → logprob: -5.00673246383667
    3. '()
' → logprob: -11.631732940673828
    4. '           ' → logprob: -12.881732940673828
    5. ' ()' → logprob: -12.881732940673828
    6. '()+' → logprob: -13.756732940673828
    7. '())' → logprob: -14.631732940673828
    8. '()*' → logprob: -14.881732940673828
    9. '()>' → logprob: -15.006732940673828
    10. '-' → logprob: -15.506732940673828

Token 381: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002553307916969061
    2. '       ' → logprob: -6.127553462982178
    3. '	   ' → logprob: -9.50255298614502
    4. '   ' → logprob: -9.50255298614502
    5. '	       ' → logprob: -9.62755298614502
    6. '-' → logprob: -10.00255298614502
    7. '		' → logprob: -10.62755298614502
    8. '               ' → logprob: -11.50255298614502
    9. ',' → logprob: -11.75255298614502
    10. ' ' → logprob: -11.75255298614502

Token 382: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.2568325698375702
    2. '           ' → logprob: -1.5068325996398926
    3. ' print' → logprob: -5.631832599639893
    4. '       ' → logprob: -7.506832599639893
    5. '   ' → logprob: -7.756832599639893
    6. ' ' → logprob: -9.131832122802734
    7. 's' → logprob: -10.131832122802734
    8. '               ' → logprob: -10.381832122802734
    9. '            ' → logprob: -10.756832122802734
    10. '         ' → logprob: -10.881832122802734

Token 383: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.5982227921485901
    2. '("' → logprob: -0.8482227921485901
    3. '(' → logprob: -4.098222732543945
    4. '(i' → logprob: -5.973222732543945
    5. '(f' → logprob: -6.098222732543945
    6. '((' → logprob: -8.348222732543945
    7. '(("' → logprob: -9.223222732543945
    8. '(('' → logprob: -9.598222732543945
    9. '("."' → logprob: -10.473222732543945
    10. '("("' → logprob: -10.598222732543945

Token 384: ' ' (ID: 220)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.021668370813131332
    2. ' '' → logprob: -4.896668434143066
    3. ''i' → logprob: -5.396668434143066
    4. '   ' → logprob: -5.896668434143066
    5. '"' → logprob: -5.896668434143066
    6. ' ' → logprob: -6.146668434143066
    7. '(i' → logprob: -7.771668434143066
    8. ''s' → logprob: -8.521668434143066
    9. ''\' → logprob: -8.896668434143066
    10. '    ' → logprob: -9.021668434143066

Token 385: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.3352160155773163
    2. '(i' → logprob: -1.5852160453796387
    3. ''i' → logprob: -3.0852160453796387
    4. ''*' → logprob: -4.210216045379639
    5. 'i' → logprob: -4.835216045379639
    6. '('' → logprob: -5.460216045379639
    7. ' '' → logprob: -6.335216045379639
    8. '(' → logprob: -6.460216045379639
    9. '"' → logprob: -6.710216045379639
    10. '   ' → logprob: -7.710216045379639

Token 386: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.12848947942256927
    2. '*(' → logprob: -2.1284894943237305
    3. ' *' → logprob: -7.5034894943237305
    4. '*i' → logprob: -7.6284894943237305
    5. ' ' → logprob: -8.87848949432373
    6. '*j' → logprob: -9.12848949432373
    7. '   ' → logprob: -9.25348949432373
    8. '"' → logprob: -10.12848949432373
    9. ')' → logprob: -10.50348949432373
    10. '       ' → logprob: -10.75348949432373

Token 387: ' j' (ID: 441)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.017694929614663124
    2. '(self' → logprob: -4.64269495010376
    3. 'j' → logprob: -5.14269495010376
    4. '(' → logprob: -6.76769495010376
    5. '(i' → logprob: -7.39269495010376
    6. ' (' → logprob: -9.017694473266602
    7. 'self' → logprob: -9.017694473266602
    8. '(max' → logprob: -10.517694473266602
    9. '(n' → logprob: -12.017694473266602
    10. '((' → logprob: -12.142694473266602

Token 388: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2813495695590973
    2. '+' → logprob: -1.656349539756775
    3. ',i' → logprob: -3.4063496589660645
    4. ',end' → logprob: -4.7813496589660645
    5. '+i' → logprob: -4.9063496589660645
    6. ' +' → logprob: -5.4063496589660645
    7. ' ,' → logprob: -7.5313496589660645
    8. '+,' → logprob: -8.656349182128906
    9. ',j' → logprob: -9.031349182128906
    10. ',f' → logprob: -10.406349182128906

Token 389: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.007175663486123085
    2. 'i' → logprob: -5.382175445556641
    3. 'f' → logprob: -6.007175445556641
    4. 'j' → logprob: -10.13217544555664
    5. 'str' → logprob: -10.50717544555664
    6. ' self' → logprob: -11.50717544555664
    7. ''i' → logprob: -12.88217544555664
    8. 'repr' → logprob: -13.00717544555664
    9. '(self' → logprob: -13.38217544555664
    10. 's' → logprob: -13.88217544555664

Token 390: '.tree' (ID: 49211)
  Prédit: '.tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tree' → logprob: -2.641841820150148e-05
    2. '.' → logprob: -11.37502670288086
    3. ' .' → logprob: -11.87502670288086
    4. 'tree' → logprob: -12.87502670288086
    5. '.size' → logprob: -13.00002670288086
    6. '.t' → logprob: -14.37502670288086
    7. '.i' → logprob: -14.37502670288086
    8. ').' → logprob: -14.37502670288086
    9. '	tree' → logprob: -15.37502670288086
    10. '.user' → logprob: -15.87502670288086

Token 391: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.553032628493384e-05
    2. '[' → logprob: -9.625075340270996
    3. ')' → logprob: -11.875075340270996
    4. ')[' → logprob: -14.125075340270996
    5. '[j' → logprob: -14.250075340270996
    6. 'i' → logprob: -14.625075340270996
    7. ' [' → logprob: -16.375076293945312
    8. ')i' → logprob: -16.375076293945312
    9. ',i' → logprob: -16.625076293945312
    10. '[
' → logprob: -16.625076293945312

Token 392: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006933739641681314
    2. ',' → logprob: -7.500693321228027
    3. ' )' → logprob: -9.625693321228027
    4. ',)' → logprob: -10.250693321228027
    5. ',end' → logprob: -11.000693321228027
    6. ',i' → logprob: -11.500693321228027
    7. ')
' → logprob: -12.750693321228027
    8. ')i' → logprob: -13.375693321228027
    9. '))' → logprob: -14.000693321228027
    10. ')#' → logprob: -14.250693321228027

Token 393: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4392799437046051
    2. 'def' → logprob: -1.0642799139022827
    3. ' def' → logprob: -4.689280033111572
    4. '
' → logprob: -7.439280033111572
    5. '```' → logprob: -8.314279556274414
    6. ' ' → logprob: -8.439279556274414
    7. '    
' → logprob: -9.189279556274414
    8. '    ' → logprob: -10.314279556274414
    9. ' 
' → logprob: -10.564279556274414
    10. '  ' → logprob: -10.689279556274414

Token 394: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.10638517886400223
    2. '   ' → logprob: -2.3563852310180664
    3. ' def' → logprob: -5.106385231018066
    4. '
' → logprob: -9.606385231018066
    5. ' ' → logprob: -11.356385231018066
    6. '    
' → logprob: -11.481385231018066
    7. '	def' → logprob: -12.356385231018066
    8. ' 
' → logprob: -13.106385231018066
    9. '        
' → logprob: -13.606385231018066
    10. '  ' → logprob: -13.731385231018066

Token 395: ' lower' (ID: 6931)
  Prédit: 'lower'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lower' → logprob: -0.003205161774531007
    2. ' lower' → logprob: -5.753205299377441
    3. '_lower' → logprob: -11.253205299377441
    4. 'def' → logprob: -12.628205299377441
    5. 'find' → logprob: -12.628205299377441
    6. 'clear' → logprob: -12.753205299377441
    7. 'build' → logprob: -13.753205299377441
    8. 'max' → logprob: -14.503205299377441
    9. 'upper' → logprob: -14.503205299377441
    10. 'get' → logprob: -14.878205299377441

Token 396: '_bound' (ID: 47558)
  Prédit: '_bound'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bound' → logprob: -5.200166469876422e-06
    2. '_bounds' → logprob: -12.750004768371582
    3. '_' → logprob: -13.875004768371582
    4. '_lower' → logprob: -14.875004768371582
    5. ' _' → logprob: -15.750004768371582
    6. '_find' → logprob: -16.1250057220459
    7. '_case' → logprob: -16.2500057220459
    8. '_limit' → logprob: -16.3750057220459
    9. '_upper' → logprob: -16.5000057220459
    10. '_b' → logprob: -16.6250057220459

Token 397: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00013285996101330966
    2. '(' → logprob: -9.00013256072998
    3. ' (' → logprob: -11.62513256072998
    4. '   ' → logprob: -15.25013256072998
    5. 'self' → logprob: -16.125133514404297
    6. ' ' → logprob: -16.750133514404297
    7. '(
' → logprob: -16.875133514404297
    8. '       ' → logprob: -16.875133514404297
    9. '(s' → logprob: -17.000133514404297
    10. '(sel' → logprob: -17.250133514404297

Token 398: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.016929874196648598
    2. 'self' → logprob: -4.641930103302002
    3. ',' → logprob: -5.141930103302002
    4. '   ' → logprob: -8.016929626464844
    5. ')' → logprob: -8.391929626464844
    6. ' (' → logprob: -8.391929626464844
    7. '       ' → logprob: -8.641929626464844
    8. '(' → logprob: -8.641929626464844
    9. ' self' → logprob: -9.766929626464844
    10. ',self' → logprob: -9.891929626464844

Token 399: ' x' (ID: 1215)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.12063198536634445
    2. 'w' → logprob: -2.6206319332122803
    3. 'x' → logprob: -3.2456319332122803
    4. ' self' → logprob: -6.620632171630859
    5. ' w' → logprob: -7.745632171630859
    6. ' x' → logprob: -9.62063217163086
    7. 's' → logprob: -10.12063217163086
    8. ' ' → logprob: -11.37063217163086
    9. '(self' → logprob: -11.49563217163086
    10. 'value' → logprob: -11.62063217163086

Token 400: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.20294108986854553
    2. '):
' → logprob: -1.7029410600662231
    3. 'self' → logprob: -7.077940940856934
    4. ',' → logprob: -8.202940940856934
    5. ')' → logprob: -8.702940940856934
    6. '   ' → logprob: -9.327940940856934
    7. '       ' → logprob: -9.452940940856934
    8. '):
' → logprob: -9.827940940856934
    9. ' ):' → logprob: -12.077940940856934
    10. '):

' → logprob: -12.202940940856934

Token 401: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15314729511737823
    2. ':' → logprob: -2.0281472206115723
    3. '   ' → logprob: -5.278147220611572
    4. '():' → logprob: -6.028147220611572
    5. ':
' → logprob: -7.278147220611572
    6. '):' → logprob: -7.653147220611572
    7. '(' → logprob: -7.903147220611572
    8. ' :' → logprob: -8.40314769744873
    9. '):
' → logprob: -8.65314769744873
    10. ',' → logprob: -8.65314769744873

Token 402: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002788826823234558
    2. ':' → logprob: -6.87778902053833
    3. '   ' → logprob: -7.00278902053833
    4. '"""
' (adapté à ' """
') → logprob: -8.377788543701172
    5. '"""' → logprob: -8.502788543701172
    6. '#' → logprob: -9.377788543701172
    7. '```' → logprob: -9.752788543701172
    8. 'def' → logprob: -9.877788543701172
    9. '(' → logprob: -10.252788543701172
    10. ':
' → logprob: -10.752788543701172

Token 403: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04003679007291794
    2. '"""
' → logprob: -3.290036678314209
    3. '"""' → logprob: -7.040036678314209
    4. '   ' → logprob: -7.540036678314209
    5. 'i' → logprob: -8.540037155151367
    6. ' """
' → logprob: -8.665037155151367
    7. 'def' → logprob: -9.290037155151367
    8. 'pos' → logprob: -10.790037155151367
    9. 'Find' → logprob: -10.915037155151367
    10. '
' → logprob: -10.915037155151367

Token 404: ' Find' (ID: 9764)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.49514836072921753
    2. 'i' → logprob: -1.8701484203338623
    3. '       ' → logprob: -2.8701484203338623
    4. '"""
' → logprob: -2.8701484203338623
    5. 'Find' (adapté à ' Find') → logprob: -2.9951484203338623
    6. 'idx' → logprob: -3.1201484203338623
    7. 'res' → logprob: -4.745148181915283
    8. 's' → logprob: -5.370148181915283
    9. '"""' → logprob: -5.620148181915283
    10. 'def' → logprob: -5.870148181915283

Token 405: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.6368268132209778
    2. 'the' → logprob: -0.7618268132209778
    3. 'idx' → logprob: -6.511826992034912
    4. 'index' → logprob: -6.761826992034912
    5. 'i' → logprob: -7.511826992034912
    6. 'pos' → logprob: -7.761826992034912
    7. '   ' → logprob: -9.011826515197754
    8. 'def' → logprob: -9.511826515197754
    9. 'j' → logprob: -10.261826515197754
    10. '`' → logprob: -10.261826515197754

Token 406: ' lowest' (ID: 23120)
  Prédit: 'minimum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'minimum' → logprob: -0.590636134147644
    2. 'index' → logprob: -1.090636134147644
    3. ' smallest' → logprob: -3.0906362533569336
    4. 'idx' → logprob: -3.8406362533569336
    5. 'pos' → logprob: -4.465636253356934
    6. 'small' → logprob: -4.715636253356934
    7. 'position' → logprob: -4.715636253356934
    8. 'largest' → logprob: -5.840636253356934
    9. 'lowest' → logprob: -6.340636253356934
    10. '"""
' → logprob: -6.590636253356934

Token 407: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.13043560087680817
    2. ' index' → logprob: -2.1304357051849365
    3. 'i' → logprob: -6.005435466766357
    4. ' i' → logprob: -7.130435466766357
    5. '_index' → logprob: -9.255435943603516
    6. ' ' → logprob: -9.630435943603516
    7. 'idx' → logprob: -11.005435943603516
    8. '   ' → logprob: -11.130435943603516
    9. '1' → logprob: -11.255435943603516
    10. '
' → logprob: -11.630435943603516

Token 408: ' such' (ID: 2238)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -1.1598963737487793
    2. ' such' → logprob: -1.6598963737487793
    3. '(self' → logprob: -1.7848963737487793
    4. ' i' → logprob: -2.0348963737487793
    5. '       ' → logprob: -2.2848963737487793
    6. 'self' → logprob: -3.0348963737487793
    7. 'i' → logprob: -4.034896373748779
    8. '   ' → logprob: -4.659896373748779
    9. ' where' → logprob: -4.909896373748779
    10. ' ' → logprob: -5.784896373748779

Token 409: ' that' (ID: 484)
  Prédit: ' that'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.12775546312332153
    2. 'that' → logprob: -2.1277554035186768
    3. '_that' → logprob: -7.627755641937256
    4. '       ' → logprob: -8.127755165100098
    5. 'That' → logprob: -10.377755165100098
    6. 'x' → logprob: -12.252755165100098
    7. ' x' → logprob: -12.502755165100098
    8. '	that' → logprob: -13.252755165100098
    9. '   ' → logprob: -14.002755165100098
    10. '```' → logprob: -14.877755165100098

Token 410: ' the' (ID: 290)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.030473781749606133
    2. ' self' → logprob: -3.9054737091064453
    3. '       ' → logprob: -5.405473709106445
    4. '   ' → logprob: -5.905473709106445
    5. 'sum' → logprob: -7.030473709106445
    6. 'def' → logprob: -7.530473709106445
    7. ' the' → logprob: -7.780473709106445
    8. 's' → logprob: -8.530473709106445
    9. '(self' → logprob: -8.780473709106445
    10. 'the' → logprob: -9.030473709106445

Token 411: ' prefix' (ID: 18633)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.19672784209251404
    2. 'prefix' → logprob: -1.9467278718948364
    3. ' sum' → logprob: -4.571727752685547
    4. ' prefix' → logprob: -5.196727752685547
    5. 'self' → logprob: -5.446727752685547
    6. 'c' → logprob: -5.696727752685547
    7. 'current' → logprob: -6.071727752685547
    8. ' cumulative' → logprob: -6.071727752685547
    9. 's' → logprob: -6.196727752685547
    10. '```' → logprob: -6.571727752685547

Token 412: ' sum' (ID: 4215)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.30888164043426514
    2. 'sum' → logprob: -1.6838816404342651
    3. ' sum' → logprob: -2.5588817596435547
    4. '_' → logprob: -6.183881759643555
    5. '       ' → logprob: -8.058881759643555
    6. '_s' → logprob: -9.433881759643555
    7. ' _' → logprob: -9.433881759643555
    8. 's' → logprob: -9.433881759643555
    9. '   ' → logprob: -9.933881759643555
    10. ' >=' → logprob: -12.308881759643555

Token 413: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -1.188606858253479
    2. ' >=' → logprob: -1.438606858253479
    3. 'is' → logprob: -1.813606858253479
    4. '>=' → logprob: -1.813606858253479
    5. '   ' → logprob: -2.4386067390441895
    6. '       ' → logprob: -3.6886067390441895
    7. '```' → logprob: -4.3136067390441895
    8. '()' → logprob: -6.0636067390441895
    9. '    ' → logprob: -7.3136067390441895
    10. '        ' → logprob: -7.9386067390441895

Token 414: ' at' (ID: 540)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.03312988206744194
    2. ' >=' → logprob: -3.783129930496216
    3. ' at' → logprob: -5.033129692077637
    4. 'greater' → logprob: -6.533129692077637
    5. 'at' → logprob: -6.658129692077637
    6. '   ' → logprob: -8.533129692077637
    7. 'not' → logprob: -9.033129692077637
    8. ' greater' → logprob: -9.033129692077637
    9. '≥' → logprob: -9.658129692077637
    10. '    ' → logprob: -10.408129692077637

Token 415: ' least' (ID: 5153)
  Prédit: 'least'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'least' → logprob: -0.014183958061039448
    2. ' least' → logprob: -4.26418399810791
    3. '   ' → logprob: -11.13918399810791
    4. '```' → logprob: -13.76418399810791
    5. 'at' → logprob: -13.88918399810791
    6. '       ' → logprob: -14.13918399810791
    7. 'Least' → logprob: -14.26418399810791
    8. '
' → logprob: -14.38918399810791
    9. '_le' → logprob: -14.63918399810791
    10. '           ' → logprob: -14.63918399810791

Token 416: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.014209349639713764
    2. ' x' → logprob: -4.264209270477295
    3. '       ' → logprob: -10.389209747314453
    4. '   ' → logprob: -11.264209747314453
    5. '```' → logprob: -13.639209747314453
    6. '`' → logprob: -15.389209747314453
    7. ' ' → logprob: -15.514209747314453
    8. '	x' → logprob: -16.139209747314453
    9. '
' → logprob: -16.514209747314453
    10. '(x' → logprob: -16.639209747314453

Token 417: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2120114117860794
    2. '(self' → logprob: -1.712011456489563
    3. '   ' → logprob: -5.212011337280273
    4. '(' → logprob: -6.087011337280273
    5. ',' → logprob: -6.712011337280273
    6. '.' → logprob: -6.962011337280273
    7. ':' → logprob: -8.087011337280273
    8. ' (' → logprob: -9.837011337280273
    9. '        
' → logprob: -10.087011337280273
    10. ':
' → logprob: -10.087011337280273

Token 418: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004552215104922652
    2. '   ' → logprob: -8.625454902648926
    3. '        
' → logprob: -8.750454902648926
    4. '    
' → logprob: -10.125454902648926
    5. '  
' → logprob: -10.875454902648926
    6. ' 
' → logprob: -11.250454902648926
    7. '
' → logprob: -11.500454902648926
    8. '```' → logprob: -11.500454902648926
    9. '"""
' → logprob: -12.250454902648926
    10. '           ' → logprob: -12.750454902648926

Token 419: ' Args' (ID: 39185)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03581921011209488
    2. 'i' → logprob: -3.6608192920684814
    3. ' i' → logprob: -5.660819053649902
    4. '   ' → logprob: -6.535819053649902
    5. 'idx' → logprob: -6.660819053649902
    6. 'def' → logprob: -7.160819053649902
    7. 'index' → logprob: -7.285819053649902
    8. 'if' → logprob: -7.785819053649902
    9. '
' → logprob: -8.035819053649902
    10. 'pos' → logprob: -8.410819053649902

Token 420: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.849872350692749
    2. '=' → logprob: -1.474872350692749
    3. '       ' → logprob: -1.849872350692749
    4. ',' → logprob: -2.974872350692749
    5. '   ' → logprob: -2.974872350692749
    6. '):' → logprob: -3.099872350692749
    7. '(self' → logprob: -4.349872589111328
    8. ')' → logprob: -4.974872589111328
    9. '):
' → logprob: -5.599872589111328
    10. ' (' → logprob: -5.724872589111328

Token 421: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.166338137816638e-05
    2. 'x' → logprob: -11.750031471252441
    3. '           ' → logprob: -11.750031471252441
    4. ' x' → logprob: -12.250031471252441
    5. '```' → logprob: -12.500031471252441
    6. '   ' → logprob: -13.375031471252441
    7. '        ' → logprob: -13.375031471252441
    8. ':' → logprob: -13.750031471252441
    9. '
' → logprob: -14.375031471252441
    10. '      ' → logprob: -14.500031471252441

Token 422: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.08974388986825943
    2. ' x' → logprob: -2.4647438526153564
    3. '       ' → logprob: -7.3397440910339355
    4. 'int' → logprob: -8.964743614196777
    5. '   ' → logprob: -11.339743614196777
    6. 'self' → logprob: -12.089743614196777
    7. ' int' → logprob: -12.589743614196777
    8. '
' → logprob: -13.089743614196777
    9. '           ' → logprob: -14.089743614196777
    10. '        ' → logprob: -14.714743614196777

Token 423: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4136448800563812
    2. '):' → logprob: -1.2886449098587036
    3. '       ' → logprob: -4.038644790649414
    4. '=' → logprob: -4.413644790649414
    5. '):
' → logprob: -4.538644790649414
    6. '   ' → logprob: -4.538644790649414
    7. ' :' → logprob: -5.788644790649414
    8. ' =' → logprob: -6.413644790649414
    9. '>=' → logprob: -6.788644790649414
    10. '>:' → logprob: -6.913644790649414

Token 424: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0002314303710591048
    2. ':int' → logprob: -9.000231742858887
    3. ')' → logprob: -9.500231742858887
    4. ' int' → logprob: -11.000231742858887
    5. '):' → logprob: -11.375231742858887
    6. '):
' → logprob: -12.750231742858887
    7. ':' → logprob: -14.250231742858887
    8. '[int' → logprob: -14.625231742858887
    9. '       ' → logprob: -14.875231742858887
    10. '(int' → logprob: -15.125231742858887

Token 425: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4742792546749115
    2. '):
' → logprob: -0.9742792844772339
    3. '):
' → logprob: -9.724279403686523
    4. '       ' → logprob: -9.974279403686523
    5. '   ' → logprob: -10.474279403686523
    6. ')' → logprob: -10.599279403686523
    7. ':' → logprob: -10.974279403686523
    8. ' ):' → logprob: -11.599279403686523
    9. '):

' → logprob: -11.849279403686523
    10. '**' → logprob: -12.599279403686523

Token 426: ' The' (ID: 623)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -1.3396929502487183
    2. ' target' → logprob: -1.5896929502487183
    3. 'The' → logprob: -2.214693069458008
    4. '       ' → logprob: -2.589693069458008
    5. ' The' → logprob: -2.589693069458008
    6. ' res' → logprob: -3.089693069458008
    7. '0' → logprob: -3.714693069458008
    8. '   ' → logprob: -3.839693069458008
    9. 'val' → logprob: -4.089693069458008
    10. '"""' → logprob: -4.089693069458008

Token 427: ' required' (ID: 3759)
  Prédit: ' target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' target' → logprob: -0.7537215948104858
    2. 'target' → logprob: -1.0037215948104858
    3. 'value' → logprob: -3.0037217140197754
    4. ' value' → logprob: -3.1287217140197754
    5. 'sum' → logprob: -3.3787217140197754
    6. '
' → logprob: -5.003721714019775
    7. ' sum' → logprob: -5.128721714019775
    8. 'prefix' → logprob: -5.253721714019775
    9. 'desired' → logprob: -5.503721714019775
    10. 'x' → logprob: -5.503721714019775

Token 428: ' prefix' (ID: 18633)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.004796069115400314
    2. 'sum' → logprob: -5.504796028137207
    3. ' prefix' → logprob: -7.629796028137207
    4. 'c' → logprob: -8.504796028137207
    5. 'threshold' → logprob: -11.754796028137207
    6. 'cum' → logprob: -12.129796028137207
    7. 'minimum' → logprob: -12.379796028137207
    8. '   ' → logprob: -12.754796028137207
    9. 'value' → logprob: -13.129796028137207
    10. ' cumulative' → logprob: -13.504796028137207

Token 429: ' sum' (ID: 4215)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.41961511969566345
    2. ' _' → logprob: -1.6696151494979858
    3. ' sum' → logprob: -2.6696150302886963
    4. '_' → logprob: -3.2946150302886963
    5. 'sum' → logprob: -3.4196150302886963
    6. '   ' → logprob: -4.669615268707275
    7. '       ' → logprob: -5.669615268707275
    8. '_s' → logprob: -7.169615268707275
    9. '_value' → logprob: -7.419615268707275
    10. ' ' → logprob: -8.294614791870117

Token 430: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8473899960517883
    2. '):
' → logprob: -1.0973899364471436
    3. ')' → logprob: -1.9723899364471436
    4. ')
' → logprob: -2.4723899364471436
    5. '):' → logprob: -4.347390174865723
    6. '):
' → logprob: -8.097390174865723
    7. '   ' → logprob: -8.222390174865723
    8. ':
' → logprob: -9.097390174865723
    9. '):

' → logprob: -9.347390174865723
    10. '.' → logprob: -9.597390174865723

Token 431: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005475530633702874
    2. '
' → logprob: -7.750547409057617
    3. '```' → logprob: -9.750547409057617
    4. '        
' → logprob: -10.500547409057617
    5. '"""' → logprob: -11.125547409057617
    6. '"""
' → logprob: -11.875547409057617
    7. '   ' → logprob: -12.375547409057617
    8. '           ' → logprob: -13.875547409057617
    9. ')' → logprob: -14.250547409057617
    10. '    
' → logprob: -14.375547409057617

Token 432: ' Returns' (ID: 9609)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04315173625946045
    2. '"""
' → logprob: -3.91815185546875
    3. 'Returns' (adapté à ' Returns') → logprob: -4.29315185546875
    4. '"""' → logprob: -5.79315185546875
    5. 'if' → logprob: -5.91815185546875
    6. '
' → logprob: -6.79315185546875
    7. '```' → logprob: -6.91815185546875
    8. 'If' → logprob: -7.29315185546875
    9. '   ' → logprob: -10.29315185546875
    10. 'def' → logprob: -10.54315185546875

Token 433: ':
' (ID: 734)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.793927013874054
    2. '0' → logprob: -1.6689269542694092
    3. ' ' → logprob: -1.7939269542694092
    4. ' self' → logprob: -2.543926954269409
    5. ' -' → logprob: -3.918926954269409
    6. ' i' → logprob: -4.293927192687988
    7. '       ' → logprob: -4.293927192687988
    8. '        
' → logprob: -4.668927192687988
    9. '   ' → logprob: -4.793927192687988
    10. ' 
' → logprob: -4.918927192687988

Token 434: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3897066116333008
    2. '0' → logprob: -1.2647066116333008
    3. ' ' → logprob: -3.264706611633301
    4. 'int' → logprob: -7.014706611633301
    5. ' self' → logprob: -7.639706611633301
    6. 'self' → logprob: -8.7647066116333
    7. ' -' → logprob: -8.7647066116333
    8. '   ' → logprob: -8.8897066116333
    9. '1' → logprob: -9.0147066116333
    10. '
' → logprob: -9.3897066116333

Token 435: ' tuple' (ID: 31311)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.2664456789934775e-06
    2. ' int' → logprob: -13.750000953674316
    3. '[int' → logprob: -16.500001907348633
    4. '```' → logprob: -16.750001907348633
    5. '
' → logprob: -17.375001907348633
    6. '(int' → logprob: -17.875001907348633
    7. '   ' → logprob: -18.500001907348633
    8. '`' → logprob: -18.625001907348633
    9. ':int' → logprob: -19.250001907348633
    10. '       ' → logprob: -19.750001907348633

Token 436: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.4160701036453247
    2. '(int' → logprob: -1.2910701036453247
    3. ':' → logprob: -3.291069984436035
    4. '(self' → logprob: -4.166069984436035
    5. '(None' → logprob: -5.291069984436035
    6. '[int' → logprob: -6.041069984436035
    7. '(' → logprob: -6.791069984436035
    8. '(bool' → logprob: -7.166069984436035
    9. '
' → logprob: -7.291069984436035
    10. '   ' → logprob: -7.791069984436035

Token 437: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.002083166502416134
    2. 'bool' → logprob: -6.6270833015441895
    3. '(int' → logprob: -7.2520833015441895
    4. '[int' → logprob: -10.752082824707031
    5. ')' → logprob: -11.502082824707031
    6. ' int' → logprob: -12.252082824707031
    7. '   ' → logprob: -12.627082824707031
    8. '(bool' → logprob: -13.002082824707031
    9. ',int' → logprob: -13.502082824707031
    10. '
' → logprob: -13.502082824707031

Token 438: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.289473822107539e-05
    2. ',int' → logprob: -9.875062942504883
    3. ' ,' → logprob: -12.250062942504883
    4. ',
' → logprob: -13.250062942504883
    5. ',bool' → logprob: -13.625062942504883
    6. 'int' → logprob: -13.875062942504883
    7. '[int' → logprob: -14.250062942504883
    8. '(),' → logprob: -14.500062942504883
    9. '   ' → logprob: -15.000062942504883
    10. ':' → logprob: -15.625062942504883

Token 439: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.44581371545791626
    2. 'bool' → logprob: -1.0708136558532715
    3. ' int' → logprob: -4.6958136558532715
    4. ' bool' → logprob: -4.9458136558532715
    5. ')' → logprob: -7.5708136558532715
    6. '[int' → logprob: -10.07081413269043
    7. 'list' → logprob: -10.57081413269043
    8. ',bool' → logprob: -11.38331413269043
    9. ' ' → logprob: -11.44581413269043
    10. 'Optional' → logprob: -11.50831413269043

Token 440: '):' (ID: 3127)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.795317530632019
    2. ',' → logprob: -1.045317530632019
    3. '):' → logprob: -1.670317530632019
    4. ')' → logprob: -4.795317649841309
    5. '):
' → logprob: -8.170317649841309
    6. '):

' → logprob: -9.545317649841309
    7. '   ' → logprob: -9.795317649841309
    8. '       ' → logprob: -10.545317649841309
    9. '```' → logprob: -11.045317649841309
    10. ')
' → logprob: -11.295317649841309

Token 441: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.25248202681541443
    2. '(index' → logprob: -1.8774820566177368
    3. ' index' → logprob: -3.7524819374084473
    4. '(i' → logprob: -5.002481937408447
    5. '       ' → logprob: -5.252481937408447
    6. 'index' → logprob: -5.377481937408447
    7. 'The' → logprob: -5.627481937408447
    8. ' The' → logprob: -5.877481937408447
    9. '(self' → logprob: -5.877481937408447
    10. '(found' → logprob: -5.877481937408447

Token 442: 'index' (ID: 2257)
  Prédit: 'index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.1032412126660347
    2. 'idx' → logprob: -2.978241205215454
    3. 'self' → logprob: -3.228241205215454
    4. '(index' → logprob: -6.228241443634033
    5. ' index' → logprob: -6.478241443634033
    6. 'found' → logprob: -6.603241443634033
    7. 'ans' → logprob: -7.978241443634033
    8. 'low' → logprob: -7.978241443634033
    9. 'pos' → logprob: -8.478240966796875
    10. 'True' → logprob: -8.603240966796875

Token 443: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.0948158382670954e-05
    2. ' ,' → logprob: -11.250030517578125
    3. '(),' → logprob: -11.750030517578125
    4. ',
' → logprob: -12.000030517578125
    5. ')' → logprob: -14.125030517578125
    6. '   ' → logprob: -14.375030517578125
    7. '       ' → logprob: -14.625030517578125
    8. '),' → logprob: -15.250030517578125
    9. ',n' → logprob: -16.000030517578125
    10. '
' → logprob: -16.000030517578125

Token 444: ' accumulated' (ID: 64757)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'offset' → logprob: -1.4854143857955933
    2. 'prefix' → logprob: -1.8604143857955933
    3. 'acc' → logprob: -2.360414505004883
    4. ' prefix' → logprob: -2.485414505004883
    5. 'current' → logprob: -2.610414505004883
    6. 'sum' → logprob: -2.610414505004883
    7. 's' → logprob: -2.735414505004883
    8. ' offset' → logprob: -3.110414505004883
    9. ' current' → logprob: -3.360414505004883
    10. 'value' → logprob: -4.110414505004883

Token 445: ' sum' (ID: 4215)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.26882368326187134
    2. '_sum' → logprob: -1.5188236236572266
    3. 'sum' → logprob: -4.268823623657227
    4. ' )' → logprob: -6.518823623657227
    5. ' sum' → logprob: -7.893823623657227
    6. ',' → logprob: -7.893823623657227
    7. '_value' → logprob: -8.393823623657227
    8. ',)' → logprob: -8.643823623657227
    9. '_s' → logprob: -10.643823623657227
    10. ')
' → logprob: -10.643823623657227

Token 446: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009782418608665466
    2. ')
' → logprob: -4.634782314300537
    3. ')
' → logprob: -12.009782791137695
    4. ',' → logprob: -12.509782791137695
    5. '   ' → logprob: -12.634782791137695
    6. ')

' → logprob: -12.759782791137695
    7. ' )' → logprob: -12.759782791137695
    8. '       ' → logprob: -13.509782791137695
    9. ')`' → logprob: -13.884782791137695
    10. '),' → logprob: -14.009782791137695

Token 447: ' such' (ID: 2238)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8126081824302673
    2. ':
' → logprob: -0.8126081824302673
    3. '       ' → logprob: -2.562608242034912
    4. '
' → logprob: -4.187608242034912
    5. ',' → logprob: -5.062608242034912
    6. '```' → logprob: -5.562608242034912
    7. '):
' → logprob: -5.812608242034912
    8. '   ' → logprob: -5.937608242034912
    9. '        
' → logprob: -6.062608242034912
    10. ',
' → logprob: -7.437608242034912

Token 448: ' that' (ID: 484)
  Prédit: 'that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'that' → logprob: -0.14376477897167206
    2. ' that' → logprob: -2.0187647342681885
    3. '_that' → logprob: -7.268764972686768
    4. 'as' → logprob: -8.39376449584961
    5. 'That' → logprob: -9.26876449584961
    6. ' as' → logprob: -10.26876449584961
    7. 'if' → logprob: -11.64376449584961
    8. '       ' → logprob: -11.76876449584961
    9. ' if' → logprob: -12.39376449584961
    10. '=' → logprob: -12.76876449584961

Token 449: '
' (ID: 198)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.4321982860565186
    2. ' (' → logprob: -1.6821982860565186
    3. 'index' → logprob: -1.8071982860565186
    4. ' self' → logprob: -2.1821982860565186
    5. ' the' → logprob: -2.5571982860565186
    6. ' index' → logprob: -2.8071982860565186
    7. 'x' → logprob: -3.8071982860565186
    8. '(self' → logprob: -3.8071982860565186
    9. 'the' → logprob: -3.8071982860565186
    10. '(index' → logprob: -3.8071982860565186

Token 450: '           ' (ID: 352)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.36869698762893677
    2. '(self' → logprob: -2.868696928024292
    3. ' self' → logprob: -2.993696928024292
    4. 'self' → logprob: -3.243696928024292
    5. '(index' → logprob: -3.368696928024292
    6. '           ' → logprob: -3.868696928024292
    7. '       ' → logprob: -3.868696928024292
    8. 'index' → logprob: -3.993696928024292
    9. ' index' → logprob: -4.243697166442871
    10. ')' → logprob: -4.493697166442871

Token 451: ' sum' (ID: 4215)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.3547894358634949
    2. '#' → logprob: -2.6047894954681396
    3. 'self' → logprob: -2.6047894954681396
    4. ' index' → logprob: -2.9797894954681396
    5. '           ' → logprob: -3.2297894954681396
    6. '(index' → logprob: -3.7297894954681396
    7. '       ' → logprob: -5.4797892570495605
    8. ' self' → logprob: -5.4797892570495605
    9. 'the' → logprob: -5.7297892570495605
    10. '0' → logprob: -5.7297892570495605

Token 452: ' of' (ID: 328)
  Prédit: '_,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_,' → logprob: -0.3385242223739624
    2. ',' → logprob: -1.4635242223739624
    3. '_' → logprob: -4.213524341583252
    4. ' =' → logprob: -4.213524341583252
    5. '(' → logprob: -4.963524341583252
    6. '(i' → logprob: -5.588524341583252
    7. ' ,' → logprob: -5.713524341583252
    8. ' (' → logprob: -5.963524341583252
    9. ' >=' → logprob: -6.463524341583252
    10. '=' → logprob: -6.588524341583252

Token 453: ' elements' (ID: 8632)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.6401458978652954
    2. 'the' → logprob: -1.3901458978652954
    3. 'index' → logprob: -2.765145778656006
    4. ' the' → logprob: -3.265145778656006
    5. 'prefix' → logprob: -4.015145778656006
    6. ')' → logprob: -4.140145778656006
    7. '(tree' → logprob: -4.390145778656006
    8. 'range' → logprob: -4.765145778656006
    9. ' tree' → logprob: -5.015145778656006
    10. 'self' → logprob: -5.140145778656006

Token 454: ' up' (ID: 869)
  Prédit: ' up'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' up' → logprob: -0.1647718995809555
    2. 'up' → logprob: -2.664771795272827
    3. 'from' → logprob: -3.789771795272827
    4. ' upto' → logprob: -3.789771795272827
    5. '[' → logprob: -4.164772033691406
    6. ' from' → logprob: -5.289772033691406
    7. '>=' → logprob: -5.414772033691406
    8. '[:' → logprob: -6.039772033691406
    9. ' >=' → logprob: -6.164772033691406
    10. '```' → logprob: -6.664772033691406

Token 455: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.0025925389491021633
    2. '   ' → logprob: -7.37759256362915
    3. ' to' → logprob: -7.50259256362915
    4. '_to' → logprob: -7.87759256362915
    5. '       ' → logprob: -8.127592086791992
    6. '[' → logprob: -8.627592086791992
    7. 'ntil' → logprob: -8.877592086791992
    8. 'i' → logprob: -9.252592086791992
    9. '           ' → logprob: -10.002592086791992
    10. '```' → logprob: -10.127592086791992

Token 456: ' '' (ID: 461)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.22583557665348053
    2. ' index' → logprob: -1.9758355617523193
    3. 'the' → logprob: -3.4758355617523193
    4. ' the' → logprob: -3.7258355617523193
    5. '(index' → logprob: -5.475835800170898
    6. 'that' → logprob: -6.975835800170898
    7. ')' → logprob: -7.100835800170898
    8. ' (' → logprob: -7.600835800170898
    9. ' that' → logprob: -7.725835800170898
    10. 'i' → logprob: -8.225835800170898

Token 457: 'index' (ID: 2257)
  Prédit: 'index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.0010729423956945539
    2. ' index' → logprob: -6.876072883605957
    3. '(index' → logprob: -11.001072883605957
    4. '
' → logprob: -12.001072883605957
    5. '   ' → logprob: -12.501072883605957
    6. '_index' → logprob: -13.376072883605957
    7. ')' → logprob: -13.376072883605957
    8. '       ' → logprob: -13.501072883605957
    9. 'idx' → logprob: -13.501072883605957
    10. '```' → logprob: -13.501072883605957

Token 458: '-' (ID: 12)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3665265142917633
    2. ' >=' → logprob: -1.616526484489441
    3. ' is' → logprob: -3.6165266036987305
    4. '>=' → logprob: -3.7415266036987305
    5. '')' → logprob: -4.3665266036987305
    6. ',' → logprob: -4.3665266036987305
    7. '```' → logprob: -4.9915266036987305
    8. ' +' → logprob: -5.2415266036987305
    9. '+' → logprob: -5.3665266036987305
    10. ')>=' → logprob: -5.4915266036987305

Token 459: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.013726906850934029
    2. 'index' → logprob: -5.513726711273193
    3. '```' → logprob: -5.638726711273193
    4. ')' → logprob: -5.888726711273193
    5. '0' → logprob: -6.888726711273193
    6. ' ' → logprob: -7.138726711273193
    7. '+' → logprob: -7.513726711273193
    8. 'i' → logprob: -8.513727188110352
    9. ' index' → logprob: -8.763727188110352
    10. '`' → logprob: -8.888727188110352

Token 460: ''' (ID: 6)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17917506396770477
    2. ',' → logprob: -1.9291750192642212
    3. '+' → logprob: -4.929174900054932
    4. ' +' → logprob: -5.429174900054932
    5. ')+' → logprob: -6.304174900054932
    6. ' >=' → logprob: -6.554174900054932
    7. ' )' → logprob: -6.929174900054932
    8. '),' → logprob: -6.929174900054932
    9. ' is' → logprob: -8.17917537689209
    10. '```' → logprob: -8.17917537689209

Token 461: ' <' (ID: 464)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5983323454856873
    2. '+' → logprob: -1.973332405090332
    3. ' >=' → logprob: -1.973332405090332
    4. ')' → logprob: -2.723332405090332
    5. ',' → logprob: -3.098332405090332
    6. '>=' → logprob: -4.223332405090332
    7. ' plus' → logprob: -4.473332405090332
    8. ' is' → logprob: -4.598332405090332
    9. ' <=' → logprob: -5.223332405090332
    10. '```' → logprob: -5.473332405090332

Token 462: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.9479684829711914
    2. 'index' → logprob: -1.6979684829711914
    3. ' x' → logprob: -1.6979684829711914
    4. '=' → logprob: -2.1979684829711914
    5. ' index' → logprob: -2.3229684829711914
    6. '=index' → logprob: -3.9479684829711914
    7. ' =' → logprob: -4.322968482971191
    8. '=x' → logprob: -6.447968482971191
    9. '```' → logprob: -7.447968482971191
    10. ')' → logprob: -7.822968482971191

Token 463: ' <=' (ID: 5017)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.28703969717025757
    2. ',' → logprob: -1.4120397567749023
    3. 'and' → logprob: -5.287039756774902
    4. '           ' → logprob: -7.912039756774902
    5. '       ' → logprob: -8.287039756774902
    6. ' or' → logprob: -9.537039756774902
    7. ' ,' → logprob: -10.037039756774902
    8. ',
' → logprob: -10.412039756774902
    9. '   ' → logprob: -11.162039756774902
    10. '
' → logprob: -11.537039756774902

Token 464: ' sum' (ID: 4215)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -1.1976957321166992
    2. 'sum' → logprob: -1.1976957321166992
    3. ' sum' → logprob: -1.4476957321166992
    4. ' index' → logprob: -1.9476957321166992
    5. ' the' → logprob: -5.447695732116699
    6. ''s' → logprob: -5.822695732116699
    7. 'self' → logprob: -6.197695732116699
    8. 'the' → logprob: -6.572695732116699
    9. '(index' → logprob: -6.947695732116699
    10. '```' → logprob: -6.947695732116699

Token 465: ' up' (ID: 869)
  Prédit: '[index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[index' → logprob: -1.2270961999893188
    2. '(index' → logprob: -1.3520961999893188
    3. ' of' → logprob: -1.7270961999893188
    4. 'of' → logprob: -1.8520961999893188
    5. '       ' → logprob: -3.7270960807800293
    6. 'index' → logprob: -4.102096080780029
    7. ')' → logprob: -4.227096080780029
    8. ' (' → logprob: -4.727096080780029
    9. '[' → logprob: -4.727096080780029
    10. ',' → logprob: -4.852096080780029

Token 466: ' to' (ID: 316)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.35828521847724915
    2. '[index' → logprob: -2.2332851886749268
    3. 'index' → logprob: -2.6082851886749268
    4. '[
' → logprob: -3.6082851886749268
    5. '       ' → logprob: -3.7332851886749268
    6. '(index' → logprob: -3.9832851886749268
    7. '[i' → logprob: -4.108285427093506
    8. '(' → logprob: -4.608285427093506
    9. ')' → logprob: -4.733285427093506
    10. '   ' → logprob: -5.358285427093506

Token 467: ' '' (ID: 461)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.11499045789241791
    2. ' index' → logprob: -2.239990472793579
    3. ''' → logprob: -6.739990234375
    4. '`' → logprob: -8.364990234375
    5. ' '' → logprob: -8.364990234375
    6. '(index' → logprob: -8.364990234375
    7. ''s' → logprob: -9.614990234375
    8. '   ' → logprob: -9.989990234375
    9. '[index' → logprob: -10.114990234375
    10. '```' → logprob: -10.239990234375

Token 468: 'index' (ID: 2257)
  Prédit: 'index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.0002060436672763899
    2. ' index' → logprob: -8.500205993652344
    3. '(index' → logprob: -14.125205993652344
    4. '```' → logprob: -14.375205993652344
    5. '[index' → logprob: -14.750205993652344
    6. '
' → logprob: -15.250205993652344
    7. '   ' → logprob: -15.375205993652344
    8. '`' → logprob: -16.000205993652344
    9. '=index' → logprob: -17.000205993652344
    10. '	index' → logprob: -17.500205993652344

Token 469: ''.
' (ID: 49980)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.49025759100914
    2. '-' → logprob: -1.1152576208114624
    3. '')' → logprob: -4.240257740020752
    4. ' -' → logprob: -4.365257740020752
    5. '       ' → logprob: -4.615257740020752
    6. '+' → logprob: -5.240257740020752
    7. '```' → logprob: -5.365257740020752
    8. '   ' → logprob: -5.740257740020752
    9. ')
' → logprob: -5.740257740020752
    10. '[' → logprob: -6.615257740020752

Token 470: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2026192992925644
    2. '
' → logprob: -2.0776193141937256
    3. ')' → logprob: -3.7026193141937256
    4. '```' → logprob: -4.4526190757751465
    5. ')
' → logprob: -5.0776190757751465
    6. '   ' → logprob: -5.2026190757751465
    7. '"""
' → logprob: -5.4526190757751465
    8. '        
' → logprob: -5.8276190757751465
    9. '\n' → logprob: -7.3276190757751465
    10. ',' → logprob: -7.5776190757751465

Token 471: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.043404482305049896
    2. '
' → logprob: -3.5434045791625977
    3. '        
' → logprob: -4.793404579162598
    4. ')' → logprob: -6.793404579162598
    5. '```' → logprob: -6.793404579162598
    6. '   ' → logprob: -7.168404579162598
    7. '"""
' (adapté à ' """
') → logprob: -7.543404579162598
    8. '    
' → logprob: -8.418404579162598
    9. ')
' → logprob: -8.543404579162598
    10. ' 
' → logprob: -8.543404579162598

Token 472: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016168579459190369
    2. 'i' → logprob: -7.001616954803467
    3. ' i' → logprob: -8.126616477966309
    4. '```' → logprob: -8.251616477966309
    5. 'index' → logprob: -9.626616477966309
    6. '   ' → logprob: -9.876616477966309
    7. ' index' → logprob: -11.001616477966309
    8. 'idx' → logprob: -12.126616477966309
    9. ' idx' → logprob: -13.001616477966309
    10. 'def' → logprob: -13.126616477966309

Token 473: ' sum' (ID: 4215)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.09700984507799149
    2. 'pos' → logprob: -3.0970098972320557
    3. 'i' → logprob: -3.4720098972320557
    4. 'index' → logprob: -4.472009658813477
    5. '   ' → logprob: -5.847009658813477
    6. '       ' → logprob: -7.222009658813477
    7. ' idx' → logprob: -7.472009658813477
    8. 'sum' (adapté à ' sum') → logprob: -8.972009658813477
    9. 'ind' → logprob: -9.097009658813477
    10. 's' → logprob: -9.472009658813477

Token 474: '_' (ID: 62)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4446294903755188
    2. '=' → logprob: -1.694629430770874
    3. '_' → logprob: -1.819629430770874
    4. ',' → logprob: -5.319629669189453
    5. '_=' → logprob: -5.569629669189453
    6. '_,' → logprob: -5.694629669189453
    7. '_idx' → logprob: -7.819629669189453
    8. '_val' → logprob: -8.444629669189453
    9. 'val' → logprob: -9.319629669189453
    10. 'idx' → logprob: -9.444629669189453

Token 475: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4822203516960144
    2. ' =' → logprob: -0.9822203516960144
    3. ',' → logprob: -5.48222017288208
    4. '_' → logprob: -5.73222017288208
    5. '_=' → logprob: -7.98222017288208
    6. '_,' → logprob: -9.107220649719238
    7. ' ' → logprob: -9.732220649719238
    8. 'val' → logprob: -10.107220649719238
    9. 'd' → logprob: -10.232220649719238
    10. '   ' → logprob: -10.607220649719238

Token 476: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.4391956685576588e-05
    2. ' ' → logprob: -10.625024795532227
    3. 'idx' → logprob: -18.750024795532227
    4. 'index' → logprob: -19.000024795532227
    5. '   ' → logprob: -19.250024795532227
    6. 'pos' → logprob: -19.500024795532227
    7. '۰' → logprob: -20.375024795532227
    8. '０' → logprob: -20.500024795532227
    9. 'result' → logprob: -20.875024795532227
    10. '```' → logprob: -20.875024795532227

Token 477: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '۰' → logprob: -18.500003814697266
    4. '０' → logprob: -18.875003814697266
    5. 'result' → logprob: -20.250003814697266
    6. '   ' → logprob: -20.375003814697266
    7. 'index' → logprob: -20.500003814697266
    8. 'idx' → logprob: -20.625003814697266
    9. '=' → logprob: -20.750003814697266
    10. '```' → logprob: -21.125003814697266

Token 478: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08700217306613922
    2. ',' → logprob: -2.7120022773742676
    3. 'index' → logprob: -5.462002277374268
    4. '
' → logprob: -5.587002277374268
    5. 'pos' → logprob: -5.587002277374268
    6. 'idx' → logprob: -6.337002277374268
    7. 'i' → logprob: -6.587002277374268
    8. '   ' → logprob: -7.337002277374268
    9. ' index' → logprob: -7.587002277374268
    10. ' and' → logprob: -8.58700180053711

Token 479: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1386319100856781
    2. 'pos' → logprob: -3.513631820678711
    3. ',' → logprob: -3.763631820678711
    4. 'idx' → logprob: -4.013631820678711
    5. 'index' → logprob: -4.388631820678711
    6. ' index' → logprob: -4.388631820678711
    7. '   ' → logprob: -4.763631820678711
    8. 'i' → logprob: -4.763631820678711
    9. ' pos' → logprob: -4.888631820678711
    10. ' idx' → logprob: -5.638631820678711

Token 480: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' (adapté à ' pos') → logprob: -0.00047726318007335067
    2. 'idx' → logprob: -7.750477313995361
    3. 'index' → logprob: -10.500476837158203
    4. ' pos' → logprob: -11.250476837158203
    5. 'i' → logprob: -12.125476837158203
    6. 'k' → logprob: -15.750476837158203
    7. 'position' → logprob: -16.125476837158203
    8. '   ' → logprob: -16.750476837158203
    9. '```' → logprob: -17.000476837158203
    10. 'ind' → logprob: -17.125476837158203

Token 481: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759517550468445
    2. ' =' → logprob: -0.8259517550468445
    3. ' ' → logprob: -11.82595157623291
    4. '   ' → logprob: -13.45095157623291
    5. '    ' → logprob: -13.70095157623291
    6. ' +=' → logprob: -14.70095157623291
    7. ' <<=' → logprob: -14.70095157623291
    8. '```' → logprob: -14.82595157623291
    9. '       ' → logprob: -15.32595157623291
    10. '        ' → logprob: -15.32595157623291

Token 482: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '000' → logprob: -19.500001907348633
    4. '   ' → logprob: -19.625001907348633
    5. '۰' → logprob: -20.500001907348633
    6. '00' → logprob: -20.875001907348633
    7. '1' → logprob: -20.875001907348633
    8. '```' → logprob: -21.375001907348633
    9. '=' → logprob: -21.812501907348633
    10. '０' → logprob: -23.312501907348633

Token 483: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '000' → logprob: -19.375001907348633
    4. '۰' → logprob: -19.875001907348633
    5. '00' → logprob: -20.750001907348633
    6. '1' → logprob: -22.000001907348633
    7. '```' → logprob: -22.375001907348633
    8. '０' → logprob: -22.500001907348633
    9. '   ' → logprob: -22.750001907348633
    10. '=' → logprob: -22.750001907348633

Token 484: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1351262778043747
    2. '
' → logprob: -2.1351263523101807
    3. '        
' → logprob: -5.885126113891602
    4. ' for' → logprob: -6.510126113891602
    5. ',' → logprob: -6.635126113891602
    6. '   ' → logprob: -6.760126113891602
    7. '  
' → logprob: -7.510126113891602
    8. '    
' → logprob: -8.260126113891602
    9. ' 
' → logprob: -8.885126113891602
    10. ',
' → logprob: -9.135126113891602

Token 485: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00898845586925745
    2. 'for' → logprob: -5.383988380432129
    3. ' for' → logprob: -5.633988380432129
    4. '   ' → logprob: -7.633988380432129
    5. 'i' → logprob: -9.133988380432129
    6. '
' → logprob: -10.133988380432129
    7. '```' → logprob: -10.258988380432129
    8. '        
' → logprob: -10.633988380432129
    9. 'mask' → logprob: -10.758988380432129
    10. ' i' → logprob: -11.508988380432129

Token 486: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.07166708260774612
    2. 'i' → logprob: -2.821667194366455
    3. 'k' → logprob: -5.321667194366455
    4. '   ' → logprob: -5.696667194366455
    5. 'd' → logprob: -7.446667194366455
    6. ' for' → logprob: -7.821667194366455
    7. 'bit' → logprob: -8.446666717529297
    8. '       ' → logprob: -8.821666717529297
    9. ' ' → logprob: -11.321666717529297
    10. ' i' → logprob: -11.446666717529297

Token 487: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2901259660720825
    2. 'd' → logprob: -1.5401259660720825
    3. 'k' → logprob: -3.290125846862793
    4. 'j' → logprob: -9.540125846862793
    5. ' i' → logprob: -9.790125846862793
    6. 'bit' → logprob: -10.415125846862793
    7. 'p' → logprob: -10.915125846862793
    8. 'h' → logprob: -10.915125846862793
    9. 'w' → logprob: -11.290125846862793
    10. 'shift' → logprob: -12.165125846862793

Token 488: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0015036711702123284
    2. 'in' → logprob: -6.5015034675598145
    3. 's' → logprob: -14.376503944396973
    4. '   ' → logprob: -15.876503944396973
    5. ' reversed' → logprob: -16.251502990722656
    6. ' ' → logprob: -16.876502990722656
    7. '	in' → logprob: -17.001502990722656
    8. 'self' → logprob: -17.126502990722656
    9. '```' → logprob: -17.126502990722656
    10. '=' → logprob: -17.251502990722656

Token 489: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3137950897216797
    2. 're' → logprob: -1.3137950897216797
    3. ' reversed' → logprob: -7.56379508972168
    4. ' range' → logprob: -11.68879508972168
    5. '[' → logprob: -12.43879508972168
    6. 'reverse' → logprob: -13.31379508972168
    7. '[::-' → logprob: -15.56379508972168
    8. '(range' → logprob: -16.43879508972168
    9. '(re' → logprob: -16.81379508972168
    10. '   ' → logprob: -18.56379508972168

Token 490: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.2521763741970062
    2. 'self' → logprob: -1.5021764039993286
    3. ' self' → logprob: -9.002176284790039
    4. '[self' → logprob: -9.877176284790039
    5. 's' → logprob: -10.252176284790039
    6. '=self' → logprob: -11.627176284790039
    7. '	self' → logprob: -11.752176284790039
    8. '
' → logprob: -11.877176284790039
    9. '   ' → logprob: -12.502176284790039
    10. '(' → logprob: -13.252176284790039

Token 491: '.depth' (ID: 89791)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.09139613062143326
    2. ' self' → logprob: -2.7163960933685303
    3. '[self' → logprob: -4.341396331787109
    4. '(self' → logprob: -6.091396331787109
    5. '
' → logprob: -6.466396331787109
    6. '   ' → logprob: -6.841396331787109
    7. 'depth' → logprob: -6.841396331787109
    8. '=self' → logprob: -7.841396331787109
    9. ' ' → logprob: -8.09139633178711
    10. ',' → logprob: -8.34139633178711

Token 492: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6493090987205505
    2. ' -' → logprob: -1.1493091583251953
    3. '-' → logprob: -1.8993091583251953
    4. ' ,' → logprob: -4.524309158325195
    5. ',-' → logprob: -8.649309158325195
    6. '-,' → logprob: -11.149309158325195
    7. ' ,-' → logprob: -11.274309158325195
    8. ',
' → logprob: -11.899309158325195
    9. ' -,' → logprob: -12.274309158325195
    10. ' ' → logprob: -12.649309158325195

Token 493: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -3.392824874026701e-05
    2. ' -' → logprob: -10.37503433227539
    3. '0' → logprob: -12.87503433227539
    4. '```' → logprob: -18.37503433227539
    5. '
' → logprob: -18.50003433227539
    6. ' ' → logprob: -19.25003433227539
    7. '−' → logprob: -19.75003433227539
    8. '-
' → logprob: -20.12503433227539
    9. '   ' → logprob: -21.00003433227539
    10. '–' → logprob: -21.87503433227539

Token 494: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.750000953674316
    3. '
' → logprob: -16.0
    4. '   ' → logprob: -16.75
    5. '```' → logprob: -16.75
    6. '2' → logprob: -17.375
    7. '  ' → logprob: -18.5625
    8. ' -' → logprob: -18.75
    9. '

' → logprob: -18.8125
    10. '-' → logprob: -18.8125

Token 495: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01573554240167141
    2. ',-' → logprob: -4.765735626220703
    3. '-' → logprob: -5.140735626220703
    4. ' -' → logprob: -7.390735626220703
    5. ' ,' → logprob: -7.640735626220703
    6. '1' → logprob: -9.515735626220703
    7. '   ' → logprob: -10.640735626220703
    8. ',
' → logprob: -11.140735626220703
    9. '       ' → logprob: -11.265735626220703
    10. ' ,-' → logprob: -11.265735626220703

Token 496: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -9.615255839889869e-05
    2. ' -' → logprob: -9.250096321105957
    3. '1' → logprob: -17.37509536743164
    4. '   ' → logprob: -18.12509536743164
    5. '```' → logprob: -18.25009536743164
    6. '  ' → logprob: -18.50009536743164
    7. '−' → logprob: -19.25009536743164
    8. ' ' → logprob: -19.37509536743164
    9. '
' → logprob: -19.37509536743164
    10. '﻿' → logprob: -19.50009536743164

Token 497: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '   ' → logprob: -17.5
    4. '
' → logprob: -18.25
    5. '```' → logprob: -19.375
    6. ')' → logprob: -20.0
    7. '  ' → logprob: -20.125
    8. '2' → logprob: -20.625
    9. '):
' → logprob: -21.5
    10. ',' → logprob: -21.5

Token 498: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4758896231651306
    2. '):
' → logprob: -0.9758896231651306
    3. ',' → logprob: -7.350889682769775
    4. ' ):' → logprob: -7.850889682769775
    5. '1' → logprob: -8.225889205932617
    6. ':' → logprob: -8.475889205932617
    7. ' ):
' → logprob: -9.350889205932617
    8. '   ' → logprob: -9.475889205932617
    9. '       ' → logprob: -9.975889205932617
    10. '):
' → logprob: -10.725889205932617

Token 499: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.025355009362101555
    2. '   ' → logprob: -4.775354862213135
    3. '1' → logprob: -5.025354862213135
    4. '    ' → logprob: -6.025354862213135
    5. ' if' → logprob: -6.150354862213135
    6. ' ' → logprob: -6.650354862213135
    7. '       ' → logprob: -6.775354862213135
    8. '        ' → logprob: -7.150354862213135
    9. ' 
' → logprob: -7.525354862213135
    10. '            ' → logprob: -8.025355339050293

Token 500: ' k' (ID: 372)
  Prédit: ' bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bit' → logprob: -0.6080302000045776
    2. ' k' → logprob: -1.7330302000045776
    3. ' next' → logprob: -2.858030319213867
    4. '           ' → logprob: -2.858030319213867
    5. ' if' → logprob: -3.233030319213867
    6. ' step' → logprob: -3.233030319213867
    7. ' w' → logprob: -4.108030319213867
    8. '1' → logprob: -4.358030319213867
    9. ' nxt' → logprob: -4.358030319213867
    10. ' mask' → logprob: -4.983030319213867

Token 501: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0183071531355381
    2. '=' → logprob: -4.018307209014893
    3. ' ' → logprob: -9.768306732177734
    4. '1' → logprob: -10.018306732177734
    5. ' <<=' → logprob: -10.768306732177734
    6. '   ' → logprob: -11.518306732177734
    7. 'p' → logprob: -12.893306732177734
    8. 'w' → logprob: -12.893306732177734
    9. 'k' → logprob: -13.268306732177734
    10. '  ' → logprob: -13.518306732177734

Token 502: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.3869606554508209
    2. '1' → logprob: -1.1369606256484985
    3. ' pos' → logprob: -9.636960983276367
    4. ' ' → logprob: -11.511960983276367
    5. '(pos' → logprob: -11.636960983276367
    6. '(' → logprob: -12.261960983276367
    7. '[pos' → logprob: -15.636960983276367
    8. '   ' → logprob: -15.761960983276367
    9. '_pos' → logprob: -15.761960983276367
    10. '	pos' → logprob: -16.136960983276367

Token 503: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.12727516889572144
    2. ' +' → logprob: -2.127275228500366
    3. '|' → logprob: -8.127275466918945
    4. '+(' → logprob: -10.252275466918945
    5. ' |' → logprob: -11.252275466918945
    6. ' ' → logprob: -13.752275466918945
    7. '   ' → logprob: -14.127275466918945
    8. '+i' → logprob: -15.002275466918945
    9. '+k' → logprob: -15.002275466918945
    10. '+=' → logprob: -15.377275466918945

Token 504: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.320199877838604e-07
    2. '1' → logprob: -15.375
    3. ' (' → logprob: -15.625
    4. '((' → logprob: -17.25
    5. '(i' → logprob: -17.75
    6. '[' → logprob: -18.125
    7. '   ' → logprob: -19.75
    8. ' ' → logprob: -20.125
    9. '(self' → logprob: -20.375
    10. '(bit' → logprob: -20.625

Token 505: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.375
    3. '(' → logprob: -18.875
    4. '   ' → logprob: -20.625
    5. '```' → logprob: -21.625
    6. ')' → logprob: -22.0
    7. '2' → logprob: -22.5
    8. '[' → logprob: -22.75
    9. '0' → logprob: -23.25
    10. '`' → logprob: -23.875

Token 506: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.00766222458332777
    2. ' <<' → logprob: -4.882662296295166
    3. '<' → logprob: -9.882661819458008
    4. '<<<' → logprob: -12.632661819458008
    5. '<<(' → logprob: -14.132661819458008
    6. ')<<' → logprob: -15.507661819458008
    7. '&lt' → logprob: -15.632661819458008
    8. '1' → logprob: -15.882661819458008
    9. '<<<<' → logprob: -16.132661819458008
    10. '()<<' → logprob: -16.132661819458008

Token 507: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.306760805164231e-05
    2. ' i' → logprob: -11.25001335144043
    3. ')i' → logprob: -18.37501335144043
    4. '	i' → logprob: -18.50001335144043
    5. '*i' → logprob: -19.75001335144043
    6. '{i' → logprob: -21.00001335144043
    7. '[i' → logprob: -21.25001335144043
    8. '(i' → logprob: -21.87501335144043
    9. '$i' → logprob: -22.37501335144043
    10. '%i' → logprob: -22.50001335144043

Token 508: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2521958351135254
    2. ')' → logprob: -1.5021958351135254
    3. ' )
' → logprob: -8.377195358276367
    4. ' )' → logprob: -10.377195358276367
    5. ')
' → logprob: -13.002195358276367
    6. ')

' → logprob: -13.627195358276367
    7. '           ' → logprob: -13.877195358276367
    8. ')`
' → logprob: -15.002195358276367
    9. ')#' → logprob: -16.127195358276367
    10. ')`' → logprob: -16.377195358276367

Token 509: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1736477017402649
    2. ' if' → logprob: -3.17364764213562
    3. '       ' → logprob: -3.29864764213562
    4. '<|end|>' → logprob: -3.42364764213562
    5. '
' → logprob: -4.798647880554199
    6. ' ' → logprob: -5.048647880554199
    7. '[' → logprob: -5.048647880554199
    8. ':' → logprob: -5.048647880554199
    9. '            
' → logprob: -5.298647880554199
    10. '<|end|>' → logprob: -5.548647880554199

Token 510: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.06232370436191559
    2. '           ' → logprob: -3.437323808670044
    3. 'if' (adapté à ' if') → logprob: -4.062323570251465
    4. ' ' → logprob: -5.437323570251465
    5. '[' → logprob: -6.312323570251465
    6. '<|end|>' → logprob: -6.687323570251465
    7. '
' → logprob: -6.937323570251465
    8. ' 
' → logprob: -7.312323570251465
    9. '            
' → logprob: -7.312323570251465
    10. '            ' → logprob: -8.187323570251465

Token 511: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0001238004770129919
    2. ' k' → logprob: -9.000123977661133
    3. '   ' → logprob: -16.125123977661133
    4. '	k' → logprob: -16.375123977661133
    5. 'x' → logprob: -16.750123977661133
    6. '(k' → logprob: -17.125123977661133
    7. ' ' → logprob: -17.625123977661133
    8. '  ' → logprob: -18.000123977661133
    9. '           ' → logprob: -18.000123977661133
    10. 'kx' → logprob: -18.750123977661133

Token 512: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.12693524360656738
    2. ' <=' → logprob: -2.1269352436065674
    3. '<' → logprob: -12.001935005187988
    4. ' <' → logprob: -14.876935005187988
    5. '[' → logprob: -15.001935005187988
    6. ')<=' → logprob: -16.126935958862305
    7. '```' → logprob: -16.626935958862305
    8. 'le' → logprob: -16.876935958862305
    9. ' ' → logprob: -16.876935958862305
    10. '<len' → logprob: -17.126935958862305

Token 513: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.15310683415737e-05
    2. ' self' → logprob: -10.750021934509277
    3. '[self' → logprob: -19.12502098083496
    4. '=self' → logprob: -19.62502098083496
    5. '(self' → logprob: -19.62502098083496
    6. '	self' → logprob: -20.12502098083496
    7. '   ' → logprob: -20.87502098083496
    8. '```' → logprob: -21.37502098083496
    9. 'this' → logprob: -21.62502098083496
    10. '<|end|>' → logprob: -21.87502098083496

Token 514: '.size' (ID: 4463)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.6931813955307007
    2. '.size' → logprob: -0.6931813955307007
    3. ' size' → logprob: -10.443181037902832
    4. 's' → logprob: -13.318181037902832
    5. '<size' → logprob: -13.568181037902832
    6. '.' → logprob: -14.693181037902832
    7. ':size' → logprob: -14.693181037902832
    8. 'self' → logprob: -14.818181037902832
    9. '	size' → logprob: -15.068181037902832
    10. '_size' → logprob: -15.568181037902832

Token 515: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.01815064437687397
    2. 'and' → logprob: -4.018150806427002
    3. '           ' → logprob: -14.768150329589844
    4. '	and' → logprob: -16.518150329589844
    5. '            ' → logprob: -17.143150329589844
    6. '          ' → logprob: -17.268150329589844
    7. ' ' → logprob: -17.393150329589844
    8. '               ' → logprob: -17.518150329589844
    9. '        ' → logprob: -18.018150329589844
    10. '    ' → logprob: -18.518150329589844

Token 516: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.0003049570368602872
    2. 'self' → logprob: -8.25030517578125
    3. ' sum' → logprob: -10.12530517578125
    4. '(sum' → logprob: -12.87530517578125
    5. '   ' → logprob: -13.87530517578125
    6. '	sum' → logprob: -17.00030517578125
    7. '  ' → logprob: -18.12530517578125
    8. '       ' → logprob: -18.62530517578125
    9. '           ' → logprob: -18.75030517578125
    10. ' ' → logprob: -18.75030517578125

Token 517: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00019305046589579433
    2. '+' → logprob: -8.625192642211914
    3. ' +' → logprob: -11.250192642211914
    4. '_
' → logprob: -15.375192642211914
    5. '```' → logprob: -16.125192642211914
    6. '_
' → logprob: -17.250192642211914
    7. '_

' → logprob: -17.875192642211914
    8. '_=' → logprob: -17.875192642211914
    9. '   ' → logprob: -18.000192642211914
    10. ' _' → logprob: -18.375192642211914

Token 518: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04540509358048439
    2. ' +' → logprob: -3.170405149459839
    3. '+x' → logprob: -6.17040491104126
    4. '+k' → logprob: -8.295405387878418
    5. '<' → logprob: -10.420405387878418
    6. '+s' → logprob: -11.545405387878418
    7. '+c' → logprob: -12.295405387878418
    8. '+self' → logprob: -12.670405387878418
    9. '+r' → logprob: -13.295405387878418
    10. '+i' → logprob: -13.295405387878418

Token 519: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00014025058771949261
    2. ' self' → logprob: -8.875140190124512
    3. '[self' → logprob: -15.375140190124512
    4. '(self' → logprob: -16.250141143798828
    5. '=self' → logprob: -17.000141143798828
    6. '	self' → logprob: -17.500141143798828
    7. '   ' → logprob: -18.375141143798828
    8. '           ' → logprob: -18.625141143798828
    9. '```' → logprob: -18.875141143798828
    10. '       ' → logprob: -19.375141143798828

Token 520: '.tree' (ID: 49211)
  Prédit: '.tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tree' → logprob: -0.323818564414978
    2. 'tree' → logprob: -1.323818564414978
    3. 'self' → logprob: -4.573818683624268
    4. '[self' → logprob: -9.69881820678711
    5. '.' → logprob: -10.07381820678711
    6. ' tree' → logprob: -11.07381820678711
    7. '	tree' → logprob: -11.32381820678711
    8. ' .' → logprob: -11.69881820678711
    9. '   ' → logprob: -11.69881820678711
    10. '```' → logprob: -12.19881820678711

Token 521: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -15.625
    3. 'k' → logprob: -17.75
    4. '[
' → logprob: -20.5
    5. '(k' → logprob: -22.125
    6. '{k' → logprob: -22.25
    7. '[key' → logprob: -22.625
    8. '[i' → logprob: -22.75
    9. '	k' → logprob: -22.875
    10. '```' → logprob: -23.0

Token 522: ']' (ID: 60)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.47417911887168884
    2. ' <' → logprob: -0.9741791486740112
    3. '<x' → logprob: -10.7241792678833
    4. ' ' → logprob: -11.2241792678833
    5. '[' → logprob: -11.3491792678833
    6. ')' → logprob: -11.8491792678833
    7. '<n' → logprob: -12.3491792678833
    8. '<th' → logprob: -12.3491792678833
    9. '<int' → logprob: -12.3491792678833
    10. '<len' → logprob: -12.5991792678833

Token 523: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.06218300759792328
    2. ' <' → logprob: -2.812182903289795
    3. '<x' → logprob: -9.187183380126953
    4. '<int' → logprob: -9.812183380126953
    5. '<th' → logprob: -11.812183380126953
    6. '<n' → logprob: -11.937183380126953
    7. '<num' → logprob: -11.937183380126953
    8. '<len' → logprob: -12.437183380126953
    9. '<size' → logprob: -12.687183380126953
    10. '<
' → logprob: -12.812183380126953

Token 524: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.01815006136894226
    2. ' x' → logprob: -4.0181498527526855
    3. '	x' → logprob: -16.143150329589844
    4. '
' → logprob: -17.393150329589844
    5. ' ' → logprob: -17.518150329589844
    6. '   ' → logprob: -18.143150329589844
    7. ')x' → logprob: -20.143150329589844
    8. '```' → logprob: -20.643150329589844
    9. '$x' → logprob: -21.143150329589844
    10. '"x' → logprob: -21.268150329589844

Token 525: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6932122707366943
    2. ':
' → logprob: -0.6932122707366943
    3. '           ' → logprob: -10.318212509155273
    4. '):
' → logprob: -11.318212509155273
    5. '               ' → logprob: -12.068212509155273
    6. ':
' → logprob: -12.193212509155273
    7. ' :
' → logprob: -12.568212509155273
    8. ':

' → logprob: -13.193212509155273
    9. ' :' → logprob: -13.943212509155273
    10. ',' → logprob: -14.443212509155273

Token 526: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.007172232493758202
    2. ':
' → logprob: -6.257172107696533
    3. ':' → logprob: -6.507172107696533
    4. '           ' → logprob: -7.007172107696533
    5. '                
' → logprob: -7.132172107696533
    6. '```' → logprob: -7.132172107696533
    7. '``' → logprob: -8.257172584533691
    8. ' 
' → logprob: -9.007172584533691
    9. '+' → logprob: -9.507172584533691
    10. '`' → logprob: -9.507172584533691

Token 527: ' sum' (ID: 4215)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.9719896912574768
    2. 'sum' (adapté à ' sum') → logprob: -1.096989631652832
    3. ' sum' → logprob: -1.721989631652832
    4. ' pos' → logprob: -2.221989631652832
    5. '               ' → logprob: -7.971989631652832
    6. '                   ' → logprob: -8.596989631652832
    7. '```' → logprob: -9.471989631652832
    8. '``' → logprob: -11.096989631652832
    9. '[pos' → logprob: -11.221989631652832
    10. '(pos' → logprob: -11.846989631652832

Token 528: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.9361264946837764e-07
    2. '_
' → logprob: -16.375
    3. '_=' → logprob: -16.5
    4. '+' → logprob: -17.5
    5. '_

' → logprob: -18.625
    6. '__' → logprob: -18.875
    7. '_,' → logprob: -19.125
    8. '_
' → logprob: -19.25
    9. '+=' → logprob: -19.875
    10. '_]' → logprob: -20.375

Token 529: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.0486002042889595
    2. '+=' → logprob: -3.048600196838379
    3. '+' → logprob: -11.923600196838379
    4. ' +' → logprob: -13.048600196838379
    5. ']+=' → logprob: -14.423600196838379
    6. '               ' → logprob: -14.423600196838379
    7. '=' → logprob: -14.548600196838379
    8. '            ' → logprob: -14.673600196838379
    9. ',' → logprob: -15.048600196838379
    10. ' =' → logprob: -15.173600196838379

Token 530: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0002625278721097857
    2. ' self' → logprob: -8.250262260437012
    3. '               ' → logprob: -14.375262260437012
    4. '[self' → logprob: -15.750262260437012
    5. '           ' → logprob: -15.875262260437012
    6. '(self' → logprob: -16.125263214111328
    7. '                   ' → logprob: -16.375263214111328
    8. '	self' → logprob: -16.875263214111328
    9. '   ' → logprob: -17.875263214111328
    10. '       ' → logprob: -18.125263214111328

Token 531: '.tree' (ID: 49211)
  Prédit: '.tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tree' → logprob: -6.44443862256594e-05
    2. '.' → logprob: -10.375064849853516
    3. 'tree' → logprob: -10.375064849853516
    4. '	tree' → logprob: -13.750064849853516
    5. ' .' → logprob: -14.250064849853516
    6. ' tree' → logprob: -16.875064849853516
    7. '.table' → logprob: -17.000064849853516
    8. '.t' → logprob: -17.625064849853516
    9. 'Tree' → logprob: -17.750064849853516
    10. '
' → logprob: -18.125064849853516

Token 532: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -1.8074162653647363e-05
    2. 'k' → logprob: -11.000018119812012
    3. ' k' → logprob: -13.875018119812012
    4. '[' → logprob: -15.875018119812012
    5. '               ' → logprob: -16.375017166137695
    6. '           ' → logprob: -16.750017166137695
    7. '{k' → logprob: -16.750017166137695
    8. '(k' → logprob: -17.500017166137695
    9. ',k' → logprob: -17.625017166137695
    10. '	k' → logprob: -18.250017166137695

Token 533: ']
' (ID: 1592)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05716227367520332
    2. ')' → logprob: -3.432162284851074
    3. ',' → logprob: -4.682162284851074
    4. '<|end|>' → logprob: -5.307162284851074
    5. '           ' → logprob: -5.432162284851074
    6. ')
' → logprob: -6.307162284851074
    7. '                   ' → logprob: -6.682162284851074
    8. '
' → logprob: -7.682162284851074
    9. ';' → logprob: -8.432162284851074
    10. '<|end|>' → logprob: -8.807162284851074

Token 534: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -7.755678961984813e-05
    2. '                
' → logprob: -9.875077247619629
    3. '```' → logprob: -11.625077247619629
    4. '                   ' → logprob: -12.875077247619629
    5. '                ' → logprob: -13.000077247619629
    6. ',' → logprob: -13.125077247619629
    7. '           ' → logprob: -13.125077247619629
    8. '              ' → logprob: -13.125077247619629
    9. 'pos' → logprob: -13.500077247619629
    10. '
' → logprob: -14.000077247619629

Token 535: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' (adapté à ' pos') → logprob: -0.003177952254191041
    2. ' pos' → logprob: -5.753178119659424
    3. '               ' → logprob: -15.253177642822266
    4. '	pos' → logprob: -18.628177642822266
    5. ',pos' → logprob: -19.253177642822266
    6. '                   ' → logprob: -20.003177642822266
    7. '_pos' → logprob: -20.253177642822266
    8. '[pos' → logprob: -20.753177642822266
    9. '.pos' → logprob: -20.878177642822266
    10. 'k' → logprob: -21.628177642822266

Token 536: ' +=' (ID: 2757)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011055837385356426
    2. ' =' → logprob: -4.511055946350098
    3. '+=' → logprob: -12.261055946350098
    4. '=k' → logprob: -12.886055946350098
    5. ' +=' → logprob: -14.136055946350098
    6. '.=' → logprob: -17.51105499267578
    7. 'k' → logprob: -18.38605499267578
    8. '=
' → logprob: -18.88605499267578
    9. '＝' → logprob: -19.26105499267578
    10. '_=' → logprob: -20.26105499267578

Token 537: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009011837653815746
    2. '(' → logprob: -4.759011745452881
    3. 'k' → logprob: -8.634012222290039
    4. ' ' → logprob: -8.634012222290039
    5. ' (' → logprob: -10.134012222290039
    6. '(k' → logprob: -13.759012222290039
    7. ' k' → logprob: -14.884012222290039
    8. '```' → logprob: -16.75901222229004
    9. '{' → logprob: -16.88401222229004
    10. '`' → logprob: -17.25901222229004

Token 538: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03031211346387863
    2. '(' → logprob: -3.5303120613098145
    3. 'k' → logprob: -7.5303120613098145
    4. ' (' → logprob: -11.405312538146973
    5. ' ' → logprob: -11.405312538146973
    6. '(k' → logprob: -12.905312538146973
    7. '```' → logprob: -16.655311584472656
    8. ' k' → logprob: -16.780311584472656
    9. '`' → logprob: -17.030311584472656
    10. '{' → logprob: -17.030311584472656

Token 539: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.20147912204265594
    2. ' <<' → logprob: -1.7014790773391724
    3. '<' → logprob: -9.951478958129883
    4. '<<(' → logprob: -11.701478958129883
    5. ' <<=' → logprob: -12.326478958129883
    6. ' <' → logprob: -13.326478958129883
    7. '<<<' → logprob: -14.451478958129883
    8. '   ' → logprob: -14.576478958129883
    9. '```' → logprob: -14.701478958129883
    10. 'k' → logprob: -14.826478958129883

Token 540: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.676292231422849e-05
    2. ' i' → logprob: -11.000017166137695
    3. '<|end|>' → logprob: -17.250017166137695
    4. '	i' → logprob: -18.500017166137695
    5. '*i' → logprob: -19.625017166137695
    6. '<|end|>' → logprob: -20.000017166137695
    7. '{i' → logprob: -20.625017166137695
    8. ')i' → logprob: -20.875017166137695
    9. 'I' → logprob: -21.000017166137695
    10. '<i' → logprob: -21.375017166137695

Token 541: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4750979542732239
    2. '<|end|>' → logprob: -1.475097894668579
    3. '               ' → logprob: -2.100097894668579
    4. 'k' → logprob: -4.600098133087158
    5. '       ' → logprob: -5.850098133087158
    6. '_k' → logprob: -6.225098133087158
    7. '                   ' → logprob: -6.225098133087158
    8. '```' → logprob: -6.600098133087158
    9. '0' → logprob: -6.850098133087158
    10. '<|end|>' → logprob: -6.975098133087158

Token 542: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 543: ' return' (ID: 622)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.0748894214630127
    2. '           ' → logprob: -1.3248894214630127
    3. '<|end|>' → logprob: -1.6998894214630127
    4. '       ' → logprob: -2.1998894214630127
    5. 'return' (adapté à ' return') → logprob: -2.9498894214630127
    6. ' return' → logprob: -4.074889183044434
    7. '```' → logprob: -4.074889183044434
    8. '          ' → logprob: -6.449889183044434
    9. ')' → logprob: -6.699889183044434
    10. '                   ' → logprob: -6.949889183044434

Token 544: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.075453020632267
    2. ' pos' → logprob: -2.825453042984009
    3. '(pos' → logprob: -4.32545280456543
    4. ' (' → logprob: -8.70045280456543
    5. '[pos' → logprob: -15.07545280456543
    6. '	pos' → logprob: -15.70045280456543
    7. ',pos' → logprob: -16.45045280456543
    8. '(' → logprob: -16.70045280456543
    9. '_pos' → logprob: -17.57545280456543
    10. '   ' → logprob: -17.82545280456543

Token 545: ' +' (ID: 659)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 546: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.623244553338736e-05
    2. ' ' → logprob: -9.625065803527832
    3. '```' → logprob: -16.62506675720215
    4. '0' → logprob: -17.62506675720215
    5. '<|end|>' → logprob: -19.62506675720215
    6. '   ' → logprob: -20.00006675720215
    7. '`' → logprob: -20.37506675720215
    8. 'def' → logprob: -21.12506675720215
    9. '2' → logprob: -21.12506675720215
    10. '``' → logprob: -21.50006675720215

Token 547: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '```' → logprob: -16.75
    4. '0' → logprob: -16.875
    5. '<|end|>' → logprob: -20.0
    6. '2' → logprob: -20.625
    7. '   ' → logprob: -20.75
    8. '`' → logprob: -20.875
    9. '+' → logprob: -21.875
    10. '[' → logprob: -21.9375

Token 548: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 549: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.0009114635176956654
    2. ' sum' → logprob: -7.000911235809326
    3. 'x' → logprob: -18.250911712646484
    4. '(sum' → logprob: -19.000911712646484
    5. 's' → logprob: -19.125911712646484
    6. '	sum' → logprob: -20.375911712646484
    7. ' ' → logprob: -20.875911712646484
    8. '   ' → logprob: -22.000911712646484
    9. '0' → logprob: -22.125911712646484
    10. '.sum' → logprob: -22.250911712646484

Token 550: '_

' (ID: 44557)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0280383548888494e-06
    2. '_)' → logprob: -14.750000953674316
    3. '+' → logprob: -15.750000953674316
    4. '_

' → logprob: -15.875000953674316
    5. '_
' → logprob: -16.125001907348633
    6. '_]' → logprob: -16.375001907348633
    7. '_[' → logprob: -17.500001907348633
    8. '_
' → logprob: -17.750001907348633
    9. '_^(' → logprob: -18.000001907348633
    10. '_;' → logprob: -18.250001907348633

Token 551: '#' (ID: 2)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7688511610031128
    2. '<|end|>' → logprob: -1.1438511610031128
    3. '           ' → logprob: -2.1438512802124023
    4. '+' → logprob: -3.0188512802124023
    5. '              ' → logprob: -5.018851280212402
    6. '```' → logprob: -5.018851280212402
    7. '                ' → logprob: -5.143851280212402
    8. '          ' → logprob: -5.143851280212402
    9. '       ' → logprob: -5.268851280212402
    10. '                   ' → logprob: -5.518851280212402

Token 552: ' ---' (ID: 26691)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 553: ' Main' (ID: 7956)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 554: ' Logic' (ID: 61151)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 555: ' Begins' (ID: 178327)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.97868412733078
    2. '<|end|>' → logprob: -1.1036841869354248
    3. '       ' → logprob: -1.9786841869354248
    4. '               ' → logprob: -3.853684186935425
    5. '        ' → logprob: -4.103683948516846
    6. '[' → logprob: -4.228683948516846
    7. '```' → logprob: -4.353683948516846
    8. '   ' → logprob: -4.353683948516846
    9. '            ' → logprob: -4.603683948516846
    10. ' ' → logprob: -4.728683948516846

Token 556: ' Here' (ID: 7306)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 557: ' --' (ID: 2230)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 558: '-

' (ID: 16364)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6478025913238525
    2. '<|end|>' → logprob: -0.8978025913238525
    3. '[' → logprob: -4.022802352905273
    4. '   ' → logprob: -4.147802352905273
    5. '       ' → logprob: -5.272802352905273
    6. '#' → logprob: -5.272802352905273
    7. ')' → logprob: -5.772802352905273
    8. '<|end|>' → logprob: -5.897802352905273
    9. '           ' → logprob: -6.022802352905273
    10. '```' → logprob: -6.147802352905273

Token 559: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6354881525039673
    2. '[' → logprob: -1.7604881525039673
    3. 'i' → logprob: -2.0104880332946777
    4. ' ' → logprob: -2.8854880332946777
    5. 'n' → logprob: -3.6354880332946777
    6. 'd' → logprob: -3.7604880332946777
    7. 'x' → logprob: -4.885488033294678
    8. 's' → logprob: -4.885488033294678
    9. 'def' → logprob: -5.010488033294678
    10. '(' → logprob: -5.510488033294678

Token 560: ' Read' (ID: 5405)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 561: ' input' (ID: 3422)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.09459669888019562
    2. '(' → logprob: -3.8445966243743896
    3. 'int' → logprob: -3.8445966243743896
    4. 'input' → logprob: -4.094596862792969
    5. '()' → logprob: -4.469596862792969
    6. '_' → logprob: -5.344596862792969
    7. '```' → logprob: -5.969596862792969
    8. ' n' → logprob: -6.469596862792969
    9. 'line' → logprob: -6.594596862792969
    10. 'import' → logprob: -6.594596862792969

Token 562: ' values' (ID: 4824)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.07685605436563492
    2. ' =' → logprob: -3.3268561363220215
    3. '=' → logprob: -3.5768561363220215
    4. 'N' → logprob: -5.9518561363220215
    5. 'line' → logprob: -6.0768561363220215
    6. '()' → logprob: -7.0768561363220215
    7. '
' → logprob: -7.0768561363220215
    8. '```' → logprob: -7.5768561363220215
    9. '_n' → logprob: -7.9518561363220215
    10. 'i' → logprob: -7.9518561363220215

Token 563: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0019007938681170344
    2. 'N' → logprob: -6.501900672912598
    3. '
' → logprob: -8.251900672912598
    4. ' n' → logprob: -10.001900672912598
    5. ' =' → logprob: -11.126900672912598
    6. '(n' → logprob: -11.126900672912598
    7. '```' → logprob: -11.376900672912598
    8. '(
' → logprob: -11.626900672912598
    9. '   ' → logprob: -11.876900672912598
    10. 'import' → logprob: -12.501900672912598

Token 564: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.006726737599819899
    2. 'N' → logprob: -5.1317267417907715
    3. ' n' → logprob: -7.2567267417907715
    4. '```' → logprob: -9.631726264953613
    5. '   ' → logprob: -10.881726264953613
    6. ' N' → logprob: -12.756726264953613
    7. '``' → logprob: -13.631726264953613
    8. 'import' → logprob: -13.881726264953613
    9. '
' → logprob: -14.506726264953613
    10. 'input' → logprob: -14.881726264953613

Token 565: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04746003448963165
    2. '=' → logprob: -3.2974600791931152
    3. ' =' → logprob: -4.672460079193115
    4. ',n' → logprob: -11.422459602355957
    5. '=int' → logprob: -12.172459602355957
    6. ',k' → logprob: -12.922459602355957
    7. '=input' → logprob: -13.297459602355957
    8. ' ,' → logprob: -13.547459602355957
    9. ',input' → logprob: -14.422459602355957
    10. ',
' → logprob: -14.922459602355957

Token 566: ' m' (ID: 284)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.5744960904121399
    2. 'k' → logprob: -1.4494960308074951
    3. 'm' → logprob: -1.9494960308074951
    4. 'x' → logprob: -2.949496030807495
    5. 'Q' → logprob: -5.949496269226074
    6. ' q' → logprob: -6.574496269226074
    7. 't' → logprob: -7.449496269226074
    8. 'w' → logprob: -7.574496269226074
    9. 'K' → logprob: -7.574496269226074
    10. ' k' → logprob: -7.824496269226074

Token 567: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0112067349255085
    2. ' =' → logprob: -4.51120662689209
    3. ',' → logprob: -8.76120662689209
    4. '=input' → logprob: -13.26120662689209
    5. '<|end|>' → logprob: -15.76120662689209
    6. '=int' → logprob: -15.88620662689209
    7. '=n' → logprob: -16.886207580566406
    8. '=

' → logprob: -17.136207580566406
    9. '=
' → logprob: -17.636207580566406
    10. ')' → logprob: -17.761207580566406

Token 568: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.2519322335720062
    2. 'map' → logprob: -1.5019322633743286
    3. '[' → logprob: -13.876932144165039
    4. ' ' → logprob: -14.626932144165039
    5. '(map' → logprob: -14.626932144165039
    6. '	map' → logprob: -14.876932144165039
    7. 'list' → logprob: -15.126932144165039
    8. ' [' → logprob: -15.251932144165039
    9. 'm' → logprob: -16.00193214416504
    10. ' list' → logprob: -16.12693214416504

Token 569: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -8.816591434879228e-05
    2. '(input' → logprob: -10.00008773803711
    3. '(' → logprob: -10.62508773803711
    4. 'int' → logprob: -11.25008773803711
    5. '(str' → logprob: -12.62508773803711
    6. '[int' → logprob: -13.75008773803711
    7. 'input' → logprob: -14.87508773803711
    8. '=int' → logprob: -15.25008773803711
    9. '()' → logprob: -16.00008773803711
    10. '(
' → logprob: -16.12508773803711

Token 570: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.48678797483444214
    2. 'input' → logprob: -1.361788034439087
    3. ',input' → logprob: -2.111788034439087
    4. '=input' → logprob: -5.236787796020508
    5. ',' → logprob: -6.486787796020508
    6. '(' → logprob: -7.236787796020508
    7. ' input' → logprob: -7.861787796020508
    8. '<input' → logprob: -10.111787796020508
    9. '```' → logprob: -10.111787796020508
    10. '(int' → logprob: -10.361787796020508

Token 571: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0005530327325686812
    2. ' input' → logprob: -7.500553131103516
    3. 'str' → logprob: -16.750553131103516
    4. 'int' → logprob: -16.875553131103516
    5. 'open' → logprob: -19.250553131103516
    6. '(input' → logprob: -19.875553131103516
    7. '=input' → logprob: -20.125553131103516
    8. '<input' → logprob: -21.375553131103516
    9. ',input' → logprob: -21.375553131103516
    10. '0' → logprob: -22.000553131103516

Token 572: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -8.180258191714529e-06
    2. '()' → logprob: -11.750008583068848
    3. '())' → logprob: -16.37500762939453
    4. ' ().' → logprob: -17.00000762939453
    5. '(' → logprob: -17.50000762939453
    6. '()[' → logprob: -18.12500762939453
    7. '()
' → logprob: -19.62500762939453
    8. '().__' → logprob: -20.00000762939453
    9. '()?.' → logprob: -20.00000762939453
    10. '()>' → logprob: -20.62500762939453

Token 573: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0005550591740757227
    2. 'strip' → logprob: -7.500555038452148
    3. 'rstrip' → logprob: -13.750555038452148
    4. '(split' → logprob: -14.875555038452148
    5. ' split' → logprob: -15.250555038452148
    6. '().' → logprob: -15.625555038452148
    7. 's' → logprob: -16.00055503845215
    8. 'spl' → logprob: -16.50055503845215
    9. ')' → logprob: -16.87555503845215
    10. '_split' → logprob: -18.12555503845215

Token 574: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.08185923099517822
    2. ')' → logprob: -2.5818591117858887
    3. '()' → logprob: -5.831859111785889
    4. '(' → logprob: -10.956859588623047
    5. '())
' → logprob: -11.331859588623047
    6. '())

' → logprob: -14.456859588623047
    7. '(),' → logprob: -14.581859588623047
    8. '().' → logprob: -14.831859588623047
    9. '());' → logprob: -15.456859588623047
    10. '(','' → logprob: -15.581859588623047

Token 575: ' ' (ID: 220)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9340266585350037
    2. 'm' → logprob: -2.1840267181396484
    3. 'x' → logprob: -2.4340267181396484
    4. 'p' → logprob: -2.9340267181396484
    5. 'for' → logprob: -3.0590267181396484
    6. 'positions' → logprob: -3.1840267181396484
    7. 'k' → logprob: -3.3090267181396484
    8. 's' → logprob: -3.4340267181396484
    9. 'q' → logprob: -3.6840267181396484
    10. 'arr' → logprob: -3.9340267181396484

Token 576: ' #' (ID: 1069)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.382760226726532
    2. 'p' → logprob: -2.0077602863311768
    3. 'c' → logprob: -3.8827602863311768
    4. 'arr' → logprob: -3.8827602863311768
    5. 'q' → logprob: -4.132760047912598
    6. 's' → logprob: -4.257760047912598
    7. 'items' → logprob: -4.382760047912598
    8. 'k' → logprob: -4.507760047912598
    9. 'positions' → logprob: -4.882760047912598
    10. 'l' → logprob: -4.882760047912598

Token 577: ' n' (ID: 297)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5528215765953064
    2. 'arr' → logprob: -2.052821636199951
    3. 'q' → logprob: -2.927821636199951
    4. 'cards' → logprob: -3.677821636199951
    5. 'k' → logprob: -4.052821636199951
    6. 'x' → logprob: -4.177821636199951
    7. 'p' → logprob: -4.177821636199951
    8. 'c' → logprob: -4.302821636199951
    9. 'A' → logprob: -4.302821636199951
    10. 'lst' → logprob: -4.427821636199951

Token 578: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.029528522863984108
    2. '<|end|>' → logprob: -4.654528617858887
    3. ')' → logprob: -4.779528617858887
    4. ',m' → logprob: -5.779528617858887
    5. 'm' → logprob: -6.029528617858887
    6. ',n' → logprob: -6.529528617858887
    7. ' ,' → logprob: -7.404528617858887
    8. '#' → logprob: -7.654528617858887
    9. 'n' → logprob: -7.904528617858887
    10. '=' → logprob: -7.904528617858887

Token 579: ' number' (ID: 2086)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.4098021984100342
    2. 'number' → logprob: -1.1598021984100342
    3. ' number' → logprob: -4.284802436828613
    4. 'maximum' → logprob: -6.034802436828613
    5. 'size' → logprob: -6.659802436828613
    6. 'initial' → logprob: -6.909802436828613
    7. ' m' → logprob: -7.034802436828613
    8. 'total' → logprob: -7.409802436828613
    9. 'max' → logprob: -7.409802436828613
    10. ' maximum' → logprob: -8.534802436828613

Token 580: ' of' (ID: 328)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.13380292057991028
    2. ' =' → logprob: -3.008802890777588
    3. ' +=' → logprob: -3.758802890777588
    4. ',' → logprob: -3.883802890777588
    5. '+=' → logprob: -5.008802890777588
    6. '<|end|>' → logprob: -5.008802890777588
    7. '+' → logprob: -5.258802890777588
    8. ' of' → logprob: -5.508802890777588
    9. ')' → logprob: -6.383802890777588
    10. 'of' → logprob: -6.508802890777588

Token 581: ' x' (ID: 1215)
  Prédit: 'elements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elements' → logprob: -0.9987235069274902
    2. 'items' → logprob: -1.6237235069274902
    3. 'cards' → logprob: -1.6237235069274902
    4. ' elements' → logprob: -2.9987235069274902
    5. 'students' → logprob: -4.12372350692749
    6. 'queries' → logprob: -4.24872350692749
    7. 'points' → logprob: -4.37372350692749
    8. 'tickets' → logprob: -4.37372350692749
    9. 'books' → logprob: -4.74872350692749
    10. ' cards' → logprob: -4.99872350692749

Token 582: ' coordinates' (ID: 27933)
  Prédit: '_values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_values' → logprob: -1.006578803062439
    2. 'values' → logprob: -1.381578803062439
    3. 's' → logprob: -2.0065789222717285
    4. ',' → logprob: -2.2565789222717285
    5. ' values' → logprob: -3.5065789222717285
    6. '_points' → logprob: -3.7565789222717285
    7. 'points' → logprob: -4.2565789222717285
    8. '_positions' → logprob: -4.7565789222717285
    9. '_elements' → logprob: -5.2565789222717285
    10. 'vals' → logprob: -5.5065789222717285

Token 583: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 584: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.006855558138340712
    2. ' m' → logprob: -5.006855487823486
    3. 'q' → logprob: -9.506855964660645
    4. 'x' → logprob: -10.006855964660645
    5. 'k' → logprob: -13.381855964660645
    6. '#' → logprob: -13.381855964660645
    7. ' x' → logprob: -13.381855964660645
    8. ' q' → logprob: -13.631855964660645
    9. 'positions' → logprob: -13.756855964660645
    10. '   ' → logprob: -13.756855964660645

Token 585: ':' (ID: 25)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3509480953216553
    2. ',' → logprob: -1.4759480953216553
    3. ' =' → logprob: -2.7259480953216553
    4. ',m' → logprob: -7.725948333740234
    5. '<|end|>' → logprob: -7.725948333740234
    6. 'n' → logprob: -8.100948333740234
    7. 'm' → logprob: -8.475948333740234
    8. ',n' → logprob: -8.600948333740234
    9. ')' → logprob: -9.600948333740234
    10. '```' → logprob: -9.975948333740234

Token 586: ' number' (ID: 2086)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.06608206778764725
    2. 'int' → logprob: -3.816082000732422
    3. 'k' → logprob: -4.066082000732422
    4. 'y' → logprob: -4.816082000732422
    5. 'n' → logprob: -5.566082000732422
    6. 'queries' → logprob: -5.691082000732422
    7. 'm' → logprob: -5.941082000732422
    8. ' q' → logprob: -6.066082000732422
    9. 'x' → logprob: -6.191082000732422
    10. 'len' → logprob: -8.191082000732422

Token 587: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -1.111587405204773
    2. '=' → logprob: -1.486587405204773
    3. ')' → logprob: -1.611587405204773
    4. '<|end|>' → logprob: -2.4865875244140625
    5. 'of' → logprob: -3.1115875244140625
    6. '<|end|>' → logprob: -3.6115875244140625
    7. '_of' → logprob: -3.9865875244140625
    8. '[' → logprob: -4.4865875244140625
    9. '_' → logprob: -4.6115875244140625
    10. ',' → logprob: -4.7365875244140625

Token 588: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.07104671001434326
    2. 'queries' → logprob: -3.321046829223633
    3. 'points' → logprob: -4.196046829223633
    4. ' y' → logprob: -5.071046829223633
    5. ' queries' → logprob: -5.696046829223633
    6. 'interval' → logprob: -6.821046829223633
    7. 'x' → logprob: -7.071046829223633
    8. ' points' → logprob: -7.571046829223633
    9. 'segments' → logprob: -7.696046829223633
    10. 'q' → logprob: -7.946046829223633

Token 589: ' coordinates' (ID: 27933)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 590: '
' (ID: 198)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.6092168688774109
    2. 'x' → logprob: -1.4842169284820557
    3. 'm' → logprob: -2.3592169284820557
    4. '
' → logprob: -3.4842169284820557
    5. 'points' → logprob: -3.8592169284820557
    6. ')' → logprob: -4.484216690063477
    7. 'positions' → logprob: -4.609216690063477
    8. 'coordinates' → logprob: -4.609216690063477
    9. '<|end|>' → logprob: -4.859216690063477
    10. 'for' → logprob: -5.109216690063477

Token 591: 'xxx' (ID: 49993)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.5102119445800781
    2. 'x' → logprob: -1.5102119445800781
    3. 'a' → logprob: -2.760211944580078
    4. 'ys' → logprob: -3.260211944580078
    5. 'points' → logprob: -3.385211944580078
    6. 'xs' → logprob: -4.635211944580078
    7. 'arr' → logprob: -4.760211944580078
    8. 'positions' → logprob: -5.510211944580078
    9. 'lst' → logprob: -6.010211944580078
    10. 'coords' → logprob: -6.135211944580078

Token 592: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.28518542647361755
    2. ' =' → logprob: -1.78518545627594
    3. ',' → logprob: -2.5351853370666504
    4. 's' → logprob: -7.53518533706665
    5. '=[]' → logprob: -8.410185813903809
    6. ',y' → logprob: -9.535185813903809
    7. 'y' → logprob: -10.160185813903809
    8. '[]' → logprob: -10.535185813903809
    9. 'x' → logprob: -10.535185813903809
    10. '=list' → logprob: -11.285185813903809

Token 593: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.014732779935002327
    2. '[list' → logprob: -4.514732837677002
    3. 'sorted' → logprob: -6.514732837677002
    4. '[]' → logprob: -6.639732837677002
    5. '[' → logprob: -8.014732360839844
    6. '[input' → logprob: -8.389732360839844
    7. ' list' → logprob: -8.389732360839844
    8. 'input' → logprob: -10.889732360839844
    9. '[int' → logprob: -10.889732360839844
    10. '[l' → logprob: -11.639732360839844

Token 594: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -2.534558552724775e-05
    2. '(' → logprob: -11.250025749206543
    3. 'map' → logprob: -12.250025749206543
    4. '(int' → logprob: -12.625025749206543
    5. '()' → logprob: -12.625025749206543
    6. '(range' → logprob: -14.625025749206543
    7. '(m' → logprob: -16.750024795532227
    8. '.map' → logprob: -16.750024795532227
    9. '(input' → logprob: -17.125024795532227
    10. '(x' → logprob: -17.125024795532227

Token 595: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0017437237547710538
    2. 'int' → logprob: -6.376743793487549
    3. '(' → logprob: -10.62674331665039
    4. '[int' → logprob: -12.12674331665039
    5. '```' → logprob: -12.50174331665039
    6. '(str' → logprob: -12.50174331665039
    7. ',int' → logprob: -13.50174331665039
    8. '=int' → logprob: -14.12674331665039
    9. '(input' → logprob: -14.25174331665039
    10. 'list' → logprob: -14.75174331665039

Token 596: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.6269892454147339
    2. '(input' → logprob: -1.0019892454147339
    3. ',' → logprob: -2.3769893646240234
    4. 'input' → logprob: -5.376989364624023
    5. '(' → logprob: -6.876989364624023
    6. ' ,' → logprob: -9.376989364624023
    7. ' (' → logprob: -10.626989364624023
    8. '=input' → logprob: -11.126989364624023
    9. ' input' → logprob: -11.626989364624023
    10. '```' → logprob: -12.001989364624023

Token 597: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0001234428636962548
    2. ' input' → logprob: -9.000123023986816
    3. '(input' → logprob: -19.000123977661133
    4. '<input' → logprob: -19.500123977661133
    5. ' ' → logprob: -20.125123977661133
    6. '=input' → logprob: -20.375123977661133
    7. 'x' → logprob: -20.500123977661133
    8. '_input' → logprob: -21.000123977661133
    9. 'lambda' → logprob: -21.125123977661133
    10. 'int' → logprob: -21.375123977661133

Token 598: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.919942486798391e-05
    2. '()' → logprob: -9.875059127807617
    3. '())' → logprob: -12.250059127807617
    4. '()))' → logprob: -13.375059127807617
    5. '(' → logprob: -15.000059127807617
    6. ' ().' → logprob: -15.125059127807617
    7. '(),' → logprob: -15.250059127807617
    8. '()[' → logprob: -15.500059127807617
    9. ')' → logprob: -16.625059127807617
    10. 'input' → logprob: -17.000059127807617

Token 599: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.6405310816480778e-05
    2. 'strip' → logprob: -11.125016212463379
    3. '(split' → logprob: -13.625016212463379
    4. ' split' → logprob: -15.125016212463379
    5. 'rstrip' → logprob: -16.375017166137695
    6. 'spl' → logprob: -16.750017166137695
    7. '.split' → logprob: -19.125017166137695
    8. ')' → logprob: -19.250017166137695
    9. '_split' → logprob: -19.500017166137695
    10. 'plit' → logprob: -20.375017166137695

Token 600: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.010128481313586235
    2. '())' → logprob: -5.010128498077393
    3. '()' → logprob: -6.385128498077393
    4. '))' → logprob: -6.510128498077393
    5. '(' → logprob: -9.010128021240234
    6. '()))
' → logprob: -10.010128021240234
    7. '()));' → logprob: -10.260128021240234
    8. ')' → logprob: -11.260128021240234
    9. '(),' → logprob: -12.385128021240234
    10. '());' → logprob: -12.760128021240234

Token 601: ' ' (ID: 220)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.6769543290138245
    2. 'm' → logprob: -1.0519542694091797
    3. 'yyy' → logprob: -2.8019542694091797
    4. '<|end|>' → logprob: -3.1769542694091797
    5. ')' → logprob: -4.92695426940918
    6. 'mmm' → logprob: -5.05195426940918
    7. '
' → logprob: -5.55195426940918
    8. '  
' → logprob: -5.80195426940918
    9. ' 
' → logprob: -5.80195426940918
    10. '```' → logprob: -6.05195426940918

Token 602: ' #' (ID: 1069)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.920604944229126
    2. ')' → logprob: -1.170604944229126
    3. 'm' → logprob: -2.545604944229126
    4. '<|end|>' → logprob: -2.545604944229126
    5. '#' → logprob: -3.420604944229126
    6. 'xxx' → logprob: -4.170604705810547
    7. 'yyy' → logprob: -4.170604705810547
    8. '[:]' → logprob: -4.545604705810547
    9. '<|end|>' → logprob: -4.795604705810547
    10. '[' → logprob: -5.545604705810547

Token 603: ' List' (ID: 2655)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.15282638370990753
    2. 'xxx' → logprob: -2.7778263092041016
    3. 'map' → logprob: -3.2778263092041016
    4. '()' → logprob: -3.2778263092041016
    5. '(input' → logprob: -6.527826309204102
    6. 'x' → logprob: -7.402826309204102
    7. '(x' → logprob: -7.402826309204102
    8. '(map' → logprob: -8.027826309204102
    9. 'list' → logprob: -8.152826309204102
    10. 'sorted' → logprob: -8.527826309204102

Token 604: ' of' (ID: 328)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5438866019248962
    2. 'of' → logprob: -1.168886661529541
    3. '(
' → logprob: -3.043886661529541
    4. '(x' → logprob: -3.293886661529541
    5. ' of' → logprob: -5.043886661529541
    6. '()' → logprob: -5.043886661529541
    7. '(map' → logprob: -5.168886661529541
    8. '=' → logprob: -6.168886661529541
    9. 'xxx' → logprob: -6.918886661529541
    10. '(range' → logprob: -7.668886661529541

Token 605: ' x' (ID: 1215)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.34581226110458374
    2. 'x' → logprob: -1.3458123207092285
    3. 'xxx' → logprob: -4.0958123207092285
    4. 'ints' → logprob: -4.7208123207092285
    5. 'map' → logprob: -5.7208123207092285
    6. '[int' → logprob: -6.8458123207092285
    7. 'sorted' → logprob: -7.2208123207092285
    8. '(int' → logprob: -8.22081184387207
    9. 'inte' → logprob: -8.47081184387207
    10. 'y' → logprob: -8.84581184387207

Token 606: ' coordinates' (ID: 27933)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10592099279165268
    2. 'coordinates' → logprob: -2.9809210300445557
    3. ' )' → logprob: -3.9809210300445557
    4. '_coordinates' → logprob: -4.480920791625977
    5. 's' → logprob: -5.230920791625977
    6. ' coordinates' → logprob: -5.480920791625977
    7. '())' → logprob: -5.855920791625977
    8. '(' → logprob: -6.855920791625977
    9. '_coords' → logprob: -6.855920791625977
    10. ' ' → logprob: -6.980920791625977

Token 607: '
' (ID: 198)
  Prédit: 'yyy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'yyy' → logprob: -0.07230836153030396
    2. ',' → logprob: -4.197308540344238
    3. 'mmm' → logprob: -4.572308540344238
    4. 'm' → logprob: -4.572308540344238
    5. 'y' → logprob: -4.822308540344238
    6. 'xxx' → logprob: -5.197308540344238
    7. ')' → logprob: -5.322308540344238
    8. 'ooo' → logprob: -6.572308540344238
    9. '```' → logprob: -6.697308540344238
    10. '#' → logprob: -6.697308540344238

Token 608: 'yyy' (ID: 77541)
  Prédit: 'yyy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yyy' → logprob: -0.0035588506143540144
    2. 'mmm' → logprob: -6.12855863571167
    3. '```' → logprob: -8.503559112548828
    4. 'zzz' → logprob: -8.503559112548828
    5. 'yy' → logprob: -8.878559112548828
    6. 'ooo' → logprob: -9.628559112548828
    7. 'eee' → logprob: -9.753559112548828
    8. 'uuu' → logprob: -9.878559112548828
    9. 'xxx' → logprob: -9.878559112548828
    10. 'yyyy' → logprob: -10.003559112548828

Token 609: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011048642918467522
    2. ' =' → logprob: -4.511048793792725
    3. ')' → logprob: -14.636048316955566
    4. '=list' → logprob: -15.886048316955566
    5. ',' → logprob: -16.011049270629883
    6. ')=' → logprob: -16.261049270629883
    7. '＝' → logprob: -17.136049270629883
    8. '=[]' → logprob: -17.636049270629883
    9. '=input' → logprob: -18.011049270629883
    10. ' ' → logprob: -18.136049270629883

Token 610: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -9.662937372922897e-05
    2. ' list' → logprob: -9.250096321105957
    3. 'map' → logprob: -15.500096321105957
    4. '(list' → logprob: -15.625096321105957
    5. '[list' → logprob: -17.250097274780273
    6. '=list' → logprob: -18.875097274780273
    7. 'List' → logprob: -19.000097274780273
    8. '[' → logprob: -19.750097274780273
    9. 'sorted' → logprob: -19.875097274780273
    10. '[]' → logprob: -20.125097274780273

Token 611: '(map' (ID: 16946)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0010145875858142972
    2. '(list' → logprob: -7.376014709472656
    3. '(' → logprob: -8.501014709472656
    4. '(map' → logprob: -9.126014709472656
    5. 'int' → logprob: -10.251014709472656
    6. ' (' → logprob: -11.501014709472656
    7. '()' → logprob: -11.626014709472656
    8. '=int' → logprob: -11.626014709472656
    9. '(lambda' → logprob: -12.376014709472656
    10. 'map' → logprob: -13.251014709472656

Token 612: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.01823423244059086
    2. 'int' → logprob: -4.0182342529296875
    3. '=int' → logprob: -9.893234252929688
    4. '[int' → logprob: -10.893234252929688
    5. ',int' → logprob: -12.018234252929688
    6. '<int' → logprob: -12.643234252929688
    7. ']int' → logprob: -13.518234252929688
    8. ' int' → logprob: -14.018234252929688
    9. '```' → logprob: -14.393234252929688
    10. ')' → logprob: -14.518234252929688

Token 613: ',' (ID: 11)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.021752353757619858
    2. 'int' → logprob: -4.02175235748291
    3. ',int' → logprob: -5.89675235748291
    4. '=int' → logprob: -7.89675235748291
    5. ',' → logprob: -8.14675235748291
    6. '[int' → logprob: -8.89675235748291
    7. '<int' → logprob: -10.89675235748291
    8. ']int' → logprob: -11.64675235748291
    9. ')' → logprob: -12.02175235748291
    10. ':int' → logprob: -12.52175235748291

Token 614: ' input' (ID: 3422)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.1472419600977446e-06
    2. ' int' → logprob: -14.875000953674316
    3. 'input' → logprob: -15.000000953674316
    4. '(int' → logprob: -15.000000953674316
    5. '[int' → logprob: -17.000001907348633
    6. '```' → logprob: -18.500001907348633
    7. '   ' → logprob: -18.750001907348633
    8. '=int' → logprob: -19.250001907348633
    9. 'str' → logprob: -19.625001907348633
    10. 'ints' → logprob: -19.750001907348633

Token 615: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -8.673547563375905e-05
    2. '.' → logprob: -10.125086784362793
    3. '.split' → logprob: -10.750086784362793
    4. '()' → logprob: -10.750086784362793
    5. '()))' → logprob: -14.250086784362793
    6. '))' → logprob: -14.750086784362793
    7. ' .' → logprob: -14.750086784362793
    8. 'split' → logprob: -14.875086784362793
    9. '())' → logprob: -15.250086784362793
    10. '   ' → logprob: -15.500086784362793

Token 616: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.723352049040841e-06
    2. 'int' → logprob: -12.875004768371582
    3. 'skip' → logprob: -14.000004768371582
    4. '(split' → logprob: -15.125004768371582
    5. 'plit' → logprob: -15.500004768371582
    6. ' split' → logprob: -15.750004768371582
    7. 'input' → logprob: -15.875004768371582
    8. 'shift' → logprob: -16.125003814697266
    9. 'spl' → logprob: -16.250003814697266
    10. 'strip' → logprob: -16.250003814697266

Token 617: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.009236755780875683
    2. '())' → logprob: -5.009236812591553
    3. '))' → logprob: -6.259236812591553
    4. '()' → logprob: -7.509236812591553
    5. ')' → logprob: -10.509236335754395
    6. '()))
' → logprob: -11.384236335754395
    7. '()));' → logprob: -11.509236335754395
    8. '(' → logprob: -12.634236335754395
    9. '())))' → logprob: -13.384236335754395
    10. '()))

' → logprob: -13.759236335754395

Token 618: ' ' (ID: 220)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -1.487750768661499
    2. 'z' → logprob: -1.987750768661499
    3. 'x' → logprob: -2.487750768661499
    4. 'points' → logprob: -2.862750768661499
    5. 'events' → logprob: -3.237750768661499
    6. '#' → logprob: -3.362750768661499
    7. 'answers' → logprob: -3.487750768661499
    8. 'indices' → logprob: -3.862750768661499
    9. 'pairs' → logprob: -3.862750768661499
    10. 'result' → logprob: -4.112751007080078

Token 619: ' #' (ID: 1069)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.819298267364502
    2. 'items' → logprob: -2.444298267364502
    3. '#' → logprob: -2.694298267364502
    4. 'pairs' → logprob: -2.944298267364502
    5. 'positions' → logprob: -3.069298267364502
    6. 'queries' → logprob: -3.319298267364502
    7. 'events' → logprob: -3.444298267364502
    8. 'z' → logprob: -3.944298267364502
    9. '
' → logprob: -4.319298267364502
    10. 'xy' → logprob: -4.444298267364502

Token 620: ' List' (ID: 2655)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00029744720086455345
    2. '(int' → logprob: -8.750297546386719
    3. 'list' → logprob: -9.000297546386719
    4. 'map' → logprob: -11.625297546386719
    5. '[int' → logprob: -12.000297546386719
    6. 'ints' → logprob: -15.375297546386719
    7. 'y' → logprob: -16.50029754638672
    8. ' int' → logprob: -16.62529754638672
    9. '<int' → logprob: -17.12529754638672
    10. '=int' → logprob: -17.25029754638672

Token 621: ' of' (ID: 328)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.021274572238326073
    2. '(map' → logprob: -4.271274566650391
    3. 'of' → logprob: -5.646274566650391
    4. '(
' → logprob: -6.271274566650391
    5. '(int' → logprob: -7.271274566650391
    6. '=' → logprob: -8.77127456665039
    7. ' of' → logprob: -8.89627456665039
    8. '()' → logprob: -8.89627456665039
    9. '(len' → logprob: -8.89627456665039
    10. ')' → logprob: -10.02127456665039

Token 622: ' y' (ID: 342)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -5.967624019831419e-05
    2. '(int' → logprob: -9.750060081481934
    3. 'y' → logprob: -13.625060081481934
    4. '[int' → logprob: -16.000059127807617
    5. ' int' → logprob: -17.500059127807617
    6. 'ints' → logprob: -17.625059127807617
    7. '<int' → logprob: -19.375059127807617
    8. 'input' → logprob: -19.875059127807617
    9. '=int' → logprob: -20.125059127807617
    10. '(y' → logprob: -20.250059127807617

Token 623: ' coordinates' (ID: 27933)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4007664620876312
    2. '()' → logprob: -1.6507664918899536
    3. '_coordinates' → logprob: -2.650766372680664
    4. 'coordinates' → logprob: -3.150766372680664
    5. '())' → logprob: -4.525766372680664
    6. '_' → logprob: -4.900766372680664
    7. '_coords' → logprob: -6.025766372680664
    8. '(' → logprob: -6.900766372680664
    9. ' coordinates' → logprob: -7.275766372680664
    10. 's' → logprob: -7.275766372680664

Token 624: ' (' (ID: 350)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'points' → logprob: -1.8477340936660767
    2. 'positions' → logprob: -2.722733974456787
    3. '#' → logprob: -2.972733974456787
    4. 'answers' → logprob: -2.972733974456787
    5. 'xxx' → logprob: -3.097733974456787
    6. 'z' → logprob: -3.222733974456787
    7. 'events' → logprob: -3.222733974456787
    8. 'counts' → logprob: -3.472733974456787
    9. 'pairs' → logprob: -3.472733974456787
    10. 'q' → logprob: -3.722733974456787

Token 625: 'must' (ID: 46036)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013290488859638572
    2. '))' → logprob: -7.376328945159912
    3. ' )' → logprob: -7.876328945159912
    4. ')))' → logprob: -8.62632942199707
    5. '[' → logprob: -10.75132942199707
    6. ')
' → logprob: -10.87632942199707
    7. '#' → logprob: -11.12632942199707
    8. ')

' → logprob: -11.25132942199707
    9. ')])' → logprob: -11.50132942199707
    10. '])' → logprob: -11.62632942199707

Token 626: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.28392356634140015
    2. 'be' → logprob: -1.408923625946045
    3. '=' → logprob: -6.408923625946045
    4. '_be' → logprob: -7.533923625946045
    5. ')' → logprob: -9.033923149108887
    6. 'not' → logprob: -9.158923149108887
    7. 'have' → logprob: -9.658923149108887
    8. 'remain' → logprob: -9.908923149108887
    9. 'always' → logprob: -10.283923149108887
    10. 'also' → logprob: -10.658923149108887

Token 627: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.011456850916147232
    2. 'strict' → logprob: -5.3864569664001465
    3. ' sorted' → logprob: -5.3864569664001465
    4. 'in' → logprob: -7.6364569664001465
    5. ' strictly' → logprob: -7.6364569664001465
    6. 'non' → logprob: -7.7614569664001465
    7. ')' → logprob: -8.386456489562988
    8. 'len' → logprob: -9.511456489562988
    9. 'already' → logprob: -9.636456489562988
    10. 'm' → logprob: -9.761456489562988

Token 628: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0016255488153547049
    2. '())' → logprob: -6.6266255378723145
    3. '))' → logprob: -9.126626014709473
    4. ' )' → logprob: -9.376626014709473
    5. '()' → logprob: -9.876626014709473
    6. ')
' → logprob: -11.626626014709473
    7. ').' → logprob: -11.876626014709473
    8. ')))' → logprob: -12.376626014709473
    9. '[' → logprob: -12.626626014709473
    10. '(' → logprob: -12.626626014709473

Token 629: ' bis' (ID: 7204)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.018648045137524605
    2. 'lambda' → logprob: -4.768648147583008
    3. ' bis' → logprob: -5.518648147583008
    4. ')' → logprob: -5.893648147583008
    5. 'y' → logprob: -7.143648147583008
    6. 'b' → logprob: -7.268648147583008
    7. 'import' → logprob: -8.018648147583008
    8. '```' → logprob: -8.893648147583008
    9. '=lambda' → logprob: -9.018648147583008
    10. 'reverse' → logprob: -9.143648147583008

Token 630: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -4.36574100604048e-06
    2. 'e' → logprob: -13.000004768371582
    3. 'ec' → logprob: -14.125004768371582
    4. ')' → logprob: -14.250004768371582
    5. 'ected' → logprob: -15.500004768371582
    6. 'ep' → logprob: -16.250003814697266
    7. 't' → logprob: -16.375003814697266
    8. 'ectl' → logprob: -16.625003814697266
    9. '```' → logprob: -16.875003814697266
    10. 'ects' → logprob: -17.250003814697266

Token 631: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001564586127642542
    2. '<|end|>' → logprob: -10.25015640258789
    3. ' )' → logprob: -10.62515640258789
    4. ')

' → logprob: -11.12515640258789
    5. ')#' → logprob: -11.37515640258789
    6. '#' → logprob: -11.50015640258789
    7. ')
' → logprob: -11.62515640258789
    8. '<|end|>' → logprob: -11.75015640258789
    9. '())' → logprob: -12.00015640258789
    10. '))' → logprob: -12.37515640258789

Token 632: 'ab' (ID: 378)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.831908106803894
    2. 'for' → logprob: -2.3319082260131836
    3. 'answers' → logprob: -2.4569082260131836
    4. 'result' → logprob: -2.5819082260131836
    5. 'ans' → logprob: -2.5819082260131836
    6. 'positions' → logprob: -3.0819082260131836
    7. 'results' → logprob: -3.4569082260131836
    8. 'points' → logprob: -4.081908226013184
    9. 'q' → logprob: -4.456908226013184
    10. 'answer' → logprob: -4.456908226013184

Token 633: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.031780727207660675
    2. 's' → logprob: -4.15678071975708
    3. '=' → logprob: -5.15678071975708
    4. '_pairs' → logprob: -5.40678071975708
    5. '_list' → logprob: -6.53178071975708
    6. 'a' → logprob: -6.53178071975708
    7. '_values' → logprob: -6.65678071975708
    8. 'pairs' → logprob: -8.531781196594238
    9. 'c' → logprob: -8.656781196594238
    10. '_vals' → logprob: -8.781781196594238

Token 634: ' defaultdict' (ID: 107098)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.019029296934604645
    2. '[]' → logprob: -4.269029140472412
    3. '[list' → logprob: -6.019029140472412
    4. 'default' → logprob: -6.394029140472412
    5. ' [' → logprob: -8.26902961730957
    6. '[int' → logprob: -8.51902961730957
    7. '[n' → logprob: -10.76902961730957
    8. '[[' → logprob: -10.76902961730957
    9. '[d' → logprob: -10.76902961730957
    10. '[class' → logprob: -10.89402961730957

Token 635: '(set' (ID: 25904)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.40895751118659973
    2. 'int' → logprob: -1.7839574813842773
    3. '(int' → logprob: -2.2839574813842773
    4. '(list' → logprob: -2.7839574813842773
    5. '(lambda' → logprob: -5.908957481384277
    6. 'lambda' → logprob: -7.158957481384277
    7. '<int' → logprob: -8.783957481384277
    8. '[int' → logprob: -9.283957481384277
    9. 'def' → logprob: -9.908957481384277
    10. '=list' → logprob: -9.908957481384277

Token 636: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.3438327843905427e-05
    2. ')
' → logprob: -10.75002384185791
    3. ')

' → logprob: -14.25002384185791
    4. '())' → logprob: -15.37502384185791
    5. ' )' → logprob: -15.50002384185791
    6. ')`' → logprob: -15.50002384185791
    7. ')#' → logprob: -15.62502384185791
    8. '[' → logprob: -15.75002384185791
    9. '))' → logprob: -16.125022888183594
    10. ')
' → logprob: -16.750022888183594

Token 637: ' ' (ID: 220)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.003020845353603363
    2. ' for' → logprob: -6.753020763397217
    3. 'x' → logprob: -8.003021240234375
    4. '<|end|>' → logprob: -8.003021240234375
    5. 'n' → logprob: -8.378021240234375
    6. '
' → logprob: -8.378021240234375
    7. 'i' → logprob: -8.628021240234375
    8. 'a' → logprob: -9.003021240234375
    9. ')' → logprob: -9.003021240234375
    10. 'while' → logprob: -10.753021240234375

Token 638: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03473286330699921
    2. '
' → logprob: -3.4097328186035156
    3. ' for' → logprob: -7.659732818603516
    4. 'n' → logprob: -8.659732818603516
    5. '<|end|>' → logprob: -9.534732818603516
    6. 'a' → logprob: -9.659732818603516
    7. 'x' → logprob: -9.784732818603516
    8. ')' → logprob: -10.284732818603516
    9. 'while' → logprob: -10.284732818603516
    10. '
' → logprob: -10.909732818603516

Token 639: ' Stores' (ID: 60337)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.030971713364124298
    2. '[]' → logprob: -4.655971527099609
    3. 'list' → logprob: -5.280971527099609
    4. '#' → logprob: -5.405971527099609
    5. ' for' → logprob: -5.405971527099609
    6. 'x' → logprob: -6.405971527099609
    7. '
' → logprob: -7.280971527099609
    8. ')' → logprob: -7.405971527099609
    9. 'ab' → logprob: -7.405971527099609
    10. 'set' → logprob: -7.530971527099609

Token 640: ' sets' (ID: 11982)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.46159452199935913
    2. ')' → logprob: -1.211594581604004
    3. '(int' → logprob: -3.711594581604004
    4. '[int' → logprob: -3.961594581604004
    5. 'x' → logprob: -4.711594581604004
    6. 'for' → logprob: -4.961594581604004
    7. 'list' → logprob: -5.961594581604004
    8. '()' → logprob: -6.461594581604004
    9. 'tuple' → logprob: -6.836594581604004
    10. 'y' → logprob: -6.836594581604004

Token 641: ' of' (ID: 328)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3329240381717682
    2. 'for' → logprob: -1.8329240083694458
    3. ' of' → logprob: -3.5829241275787354
    4. ' for' → logprob: -3.5829241275787354
    5. 'of' → logprob: -3.5829241275787354
    6. '[int' → logprob: -3.8329241275787354
    7. '<|end|>' → logprob: -5.207923889160156
    8. ')' → logprob: -6.207923889160156
    9. 'ab' → logprob: -6.207923889160156
    10. '()
' → logprob: -6.582923889160156

Token 642: ' '' (ID: 461)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -1.1610287427902222
    2. 'int' → logprob: -1.1610287427902222
    3. 'indices' → logprob: -1.7860287427902222
    4. 'x' → logprob: -1.9110287427902222
    5. 'ints' → logprob: -4.161028861999512
    6. 'indexes' → logprob: -4.411028861999512
    7. 'inte' → logprob: -4.911028861999512
    8. 'positions' → logprob: -5.286028861999512
    9. 'a' → logprob: -5.661028861999512
    10. 'ab' → logprob: -6.536028861999512

Token 643: 'b' (ID: 65)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.6902351379394531
    2. 'int' → logprob: -1.8152351379394531
    3. 'a' → logprob: -2.190235137939453
    4. 'b' → logprob: -2.565235137939453
    5. 'x' → logprob: -2.690235137939453
    6. 'indices' → logprob: -3.440235137939453
    7. 'ab' → logprob: -4.315235137939453
    8. 'ints' → logprob: -5.315235137939453
    9. 'indexes' → logprob: -5.690235137939453
    10. 'inte' → logprob: -6.065235137939453

Token 644: ''' (ID: 6)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.6582436561584473
    2. ''' → logprob: -1.2832436561584473
    3. ')'' → logprob: -2.5332436561584473
    4. ')' → logprob: -2.6582436561584473
    5. ' values' → logprob: -4.658243656158447
    6. 'values' → logprob: -4.908243656158447
    7. ''s' → logprob: -4.908243656158447
    8. 'y' → logprob: -5.158243656158447
    9. '_values' → logprob: -5.158243656158447
    10. 's' → logprob: -5.283243656158447

Token 645: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7488763928413391
    2. ')' → logprob: -1.3738763332366943
    3. ']' → logprob: -1.7488763332366943
    4. '=' → logprob: -3.3738763332366943
    5. ' for' → logprob: -4.373876571655273
    6. ' =' → logprob: -4.623876571655273
    7. ',' → logprob: -4.873876571655273
    8. '])' → logprob: -4.873876571655273
    9. '<|end|>' → logprob: -5.248876571655273
    10. '[]' → logprob: -5.623876571655273

Token 646: ' each' (ID: 2454)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.0920531377196312
    2. 'a' → logprob: -2.967053174972534
    3. 'x' → logprob: -3.717053174972534
    4. ' each' → logprob: -4.842052936553955
    5. ''a' → logprob: -6.842052936553955
    6. 'ab' → logprob: -6.967052936553955
    7. ''ab' → logprob: -7.717052936553955
    8. 'key' → logprob: -8.092053413391113
    9. 'for' → logprob: -8.467053413391113
    10. ''x' → logprob: -8.467053413391113

Token 647: ' possible' (ID: 4149)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0034760551061481237
    2. ''a' → logprob: -5.878476142883301
    3. 'x' → logprob: -8.5034761428833
    4. 'key' → logprob: -8.8784761428833
    5. ' a' → logprob: -9.6284761428833
    6. 'value' → logprob: -9.8784761428833
    7. '[a' → logprob: -10.5034761428833
    8. ')' → logprob: -10.6284761428833
    9. 'b' → logprob: -10.7534761428833
    10. 'for' → logprob: -10.8784761428833

Token 648: ' '' (ID: 461)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.001945533906109631
    2. 'x' → logprob: -6.751945495605469
    3. 'value' → logprob: -8.001945495605469
    4. ''a' → logprob: -8.501945495605469
    5. 'b' → logprob: -9.376945495605469
    6. 'index' → logprob: -9.876945495605469
    7. 'y' → logprob: -10.626945495605469
    8. ' a' → logprob: -11.751945495605469
    9. 'c' → logprob: -11.876945495605469
    10. 'coordinate' → logprob: -12.001945495605469

Token 649: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0008616767590865493
    2. ''a' → logprob: -7.125861644744873
    3. 'x' → logprob: -10.625862121582031
    4. ' a' → logprob: -10.875862121582031
    5. 'b' → logprob: -13.250862121582031
    6. '')' → logprob: -13.625862121582031
    7. 'y' → logprob: -14.188362121582031
    8. ''' → logprob: -14.188362121582031
    9. '	a' → logprob: -14.188362121582031
    10. '`' → logprob: -14.313362121582031

Token 650: ''
' (ID: 2207)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.050612516701221466
    2. '')' → logprob: -3.175612449645996
    3. ']' → logprob: -5.425612449645996
    4. '])' → logprob: -6.550612449645996
    5. '[' → logprob: -7.050612449645996
    6. ')'' → logprob: -8.550612449645996
    7. '<|end|>' → logprob: -8.800612449645996
    8. ''' → logprob: -9.050612449645996
    9. 'a' → logprob: -9.675612449645996
    10. ']'' → logprob: -10.425612449645996

Token 651: 'coordinates' (ID: 74508)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0004365102213341743
    2. ' for' → logprob: -8.625436782836914
    3. 'n' → logprob: -9.500436782836914
    4. 'a' → logprob: -9.625436782836914
    5. 'm' → logprob: -10.250436782836914
    6. ')' → logprob: -10.375436782836914
    7. '<|end|>' → logprob: -11.750436782836914
    8. 'b' → logprob: -11.875436782836914
    9. 'x' → logprob: -12.125436782836914
    10. '#' → logprob: -12.125436782836914

Token 652: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12719812989234924
    2. ' =' → logprob: -2.1271982192993164
    3. ',' → logprob: -8.752198219299316
    4. '[' → logprob: -10.502198219299316
    5. ']' → logprob: -11.127198219299316
    6. '_' → logprob: -11.127198219299316
    7. 'a' → logprob: -11.502198219299316
    8. ')' → logprob: -12.002198219299316
    9. ' ' → logprob: -12.002198219299316
    10. '={}' → logprob: -12.377198219299316

Token 653: ' set' (ID: 920)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0007092170417308807
    2. '[' → logprob: -8.000709533691406
    3. 'set' → logprob: -8.750709533691406
    4. 'default' → logprob: -8.875709533691406
    5. ' []' → logprob: -9.750709533691406
    6. '[]}' → logprob: -12.375709533691406
    7. '[]
' → logprob: -12.500709533691406
    8. '[][]' → logprob: -13.250709533691406
    9. '[(' → logprob: -13.500709533691406
    10. '{}' → logprob: -13.625709533691406

Token 654: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00016337241686414927
    2. '()
' → logprob: -8.875163078308105
    3. '(' → logprob: -11.125163078308105
    4. '()

' → logprob: -12.750163078308105
    5. '()\' → logprob: -13.125163078308105
    6. '();' → logprob: -14.000163078308105
    7. '()]' → logprob: -14.500163078308105
    8. '())' → logprob: -14.875163078308105
    9. '()
' → logprob: -15.000163078308105
    10. ' ()' → logprob: -15.250163078308105

Token 655: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 656: ' #' (ID: 1069)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.012352596037089825
    2. '()
' → logprob: -4.512352466583252
    3. '<|end|>' → logprob: -6.887352466583252
    4. '()

' → logprob: -9.13735294342041
    5. '()\' → logprob: -10.26235294342041
    6. ' =' → logprob: -10.51235294342041
    7. ')' → logprob: -10.76235294342041
    8. '(' → logprob: -10.88735294342041
    9. 'for' → logprob: -10.88735294342041
    10. '=' → logprob: -11.26235294342041

Token 657: ' Unique' (ID: 42417)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.10445079952478409
    2. 'set' → logprob: -2.3544507026672363
    3. '[]' → logprob: -6.229450702667236
    4. 'coordinates' → logprob: -7.604450702667236
    5. 'True' → logprob: -7.854450702667236
    6. '{}' → logprob: -8.104451179504395
    7. 'for' → logprob: -8.354451179504395
    8. '()
' → logprob: -8.729451179504395
    9. '(' → logprob: -9.104451179504395
    10. '#' → logprob: -9.104451179504395

Token 658: ' collection' (ID: 5801)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0071918657049536705
    2. 'coordinates' → logprob: -5.2571916580200195
    3. '()
' → logprob: -6.6321916580200195
    4. '(' → logprob: -8.63219165802002
    5. '_coordinates' → logprob: -9.38219165802002
    6. '<|end|>' → logprob: -9.63219165802002
    7. '(co' → logprob: -10.13219165802002
    8. '())' → logprob: -10.63219165802002
    9. ' ()' → logprob: -10.63219165802002
    10. '(x' → logprob: -10.75719165802002

Token 659: ' of' (ID: 328)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.036826808005571365
    2. 'of' → logprob: -3.4118268489837646
    3. 'coordinates' → logprob: -6.7868266105651855
    4. ' of' → logprob: -7.2868266105651855
    5. '()
' → logprob: -7.5368266105651855
    6. '(' → logprob: -7.6618266105651855
    7. '<|end|>' → logprob: -9.411827087402344
    8. '_coordinates' → logprob: -9.786827087402344
    9. 'for' → logprob: -10.536827087402344
    10. '=' → logprob: -10.661827087402344

Token 660: ' '' (ID: 461)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.9204122424125671
    2. '(x' → logprob: -1.170412302017212
    3. 'coordinates' → logprob: -2.045412302017212
    4. '(a' → logprob: -2.670412302017212
    5. '(ab' → logprob: -3.295412302017212
    6. '(' → logprob: -3.920412302017212
    7. 'ab' → logprob: -4.045412063598633
    8. 'a' → logprob: -5.170412063598633
    9. 'x' → logprob: -5.920412063598633
    10. 'xxx' → logprob: -6.670412063598633

Token 661: 'b' (ID: 65)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.3418045938014984
    2. '(x' → logprob: -1.5918046236038208
    3. '()' → logprob: -4.091804504394531
    4. '(ab' → logprob: -4.091804504394531
    5. 'a' → logprob: -4.216804504394531
    6. '(' → logprob: -4.716804504394531
    7. 'ab' → logprob: -4.966804504394531
    8. 'x' → logprob: -5.216804504394531
    9. ' (' → logprob: -5.466804504394531
    10. 'coordinates' → logprob: -5.591804504394531

Token 662: ''' (ID: 6)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005491060670465231
    2. 's' → logprob: -6.380491256713867
    3. 'coordinates' → logprob: -6.630491256713867
    4. ')s' → logprob: -7.630491256713867
    5. '')' → logprob: -7.755491256713867
    6. ' )' → logprob: -8.005491256713867
    7. '_coordinates' → logprob: -8.005491256713867
    8. '<|end|>' → logprob: -8.505491256713867
    9. ')
' → logprob: -8.755491256713867
    10. '_coords' → logprob: -9.880491256713867

Token 663: ' values' (ID: 4824)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 664: ' (' (ID: 350)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 665: 'dist' (ID: 24126)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00014251544780563563
    2. ')
' → logprob: -9.875142097473145
    3. '()' → logprob: -10.875142097473145
    4. 'for' → logprob: -11.000142097473145
    5. ' )' → logprob: -11.375142097473145
    6. 'b' → logprob: -11.750142097473145
    7. '())' → logprob: -11.875142097473145
    8. '))' → logprob: -12.375142097473145
    9. ',' → logprob: -12.625142097473145
    10. '#' → logprob: -12.875142097473145

Token 666: 'ances' (ID: 3528)
  Prédit: 'ance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ance' → logprob: -0.6732797026634216
    2. ')' → logprob: -1.1732797622680664
    3. 'inct' → logprob: -2.5482797622680664
    4. 'ances' → logprob: -3.2982797622680664
    5. '>' → logprob: -4.673279762268066
    6. 'set' → logprob: -5.048279762268066
    7. 'orted' → logprob: -5.173279762268066
    8. 'len' → logprob: -5.548279762268066
    9. 'rib' → logprob: -5.673279762268066
    10. 'anced' → logprob: -5.798279762268066

Token 667: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000755427754484117
    2. '<|end|>' → logprob: -8.250755310058594
    3. 'for' → logprob: -9.125755310058594
    4. ')
' → logprob: -9.500755310058594
    5. ' )' → logprob: -9.625755310058594
    6. '())' → logprob: -9.875755310058594
    7. '=' → logprob: -10.375755310058594
    8. ',' → logprob: -10.500755310058594
    9. '<|end|>' → logprob: -11.125755310058594
    10. ' =' → logprob: -11.500755310058594

Token 668: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03360225260257721
    2. '   ' → logprob: -4.033602237701416
    3. ' for' → logprob: -4.533602237701416
    4. '       ' → logprob: -6.408602237701416
    5. 'i' → logprob: -7.158602237701416
    6. '#' → logprob: -7.908602237701416
    7. 'a' → logprob: -8.033602714538574
    8. 'x' → logprob: -8.033602714538574
    9. ' ' → logprob: -8.033602714538574
    10. ')' → logprob: -8.783602714538574

Token 669: ' Pre' (ID: 4659)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.5048530030981055e-06
    2. '#' → logprob: -14.125001907348633
    3. ' for' → logprob: -14.375001907348633
    4. 'def' → logprob: -16.750001907348633
    5. 'For' → logprob: -17.875001907348633
    6. 'while' → logprob: -18.000001907348633
    7. 'import' → logprob: -18.500001907348633
    8. '
' → logprob: -18.625001907348633
    9. 'from' → logprob: -18.625001907348633
    10. 'n' → logprob: -19.125001907348633

Token 670: 'processing' (ID: 41376)
  Prédit: 'dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dict' → logprob: -0.7537388801574707
    2. 'pare' → logprob: -1.8787388801574707
    3. 'sent' → logprob: -2.0037388801574707
    4. 'd' → logprob: -2.8787388801574707
    5. 'for' → logprob: -2.8787388801574707
    6. 'process' → logprob: -3.3787388801574707
    7. 'sum' → logprob: -3.6287388801574707
    8. 'serve' → logprob: -4.003738880157471
    9. 's' → logprob: -4.253738880157471
    10. 'vent' → logprob: -4.753738880157471

Token 671: ':' (ID: 25)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0001596771035110578
    2. ' for' → logprob: -8.87515926361084
    3. '<|end|>' → logprob: -11.25015926361084
    4. '#' → logprob: -12.50015926361084
    5. '...' → logprob: -14.25015926361084
    6. 'x' → logprob: -14.50015926361084
    7. '<|end|>' → logprob: -14.75015926361084
    8. '```' → logprob: -15.62515926361084
    9. 'a' → logprob: -15.75015926361084
    10. 'coordinates' → logprob: -15.87515926361084

Token 672: ' For' (ID: 2214)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00038014890742488205
    2. ' for' → logprob: -8.000380516052246
    3. '<|end|>' → logprob: -10.625380516052246
    4. '#' → logprob: -10.875380516052246
    5. '<|end|>' → logprob: -15.250380516052246
    6. '...' → logprob: -15.625380516052246
    7. 'x' → logprob: -15.875380516052246
    8. '```' → logprob: -15.875380516052246
    9. '
' → logprob: -16.25037956237793
    10. 'continue' → logprob: -16.37537956237793

Token 673: ' each' (ID: 2454)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0923665463924408
    2. '_' → logprob: -3.0923664569854736
    3. '_a' → logprob: -3.4673664569854736
    4. 'i' → logprob: -6.092366695404053
    5. '_x' → logprob: -6.092366695404053
    6. 'x' → logprob: -6.092366695404053
    7. '_ai' → logprob: -6.467366695404053
    8. 'ai' → logprob: -7.092366695404053
    9. '_i' → logprob: -7.592366695404053
    10. ' a' → logprob: -8.342366218566895

Token 674: ' x' (ID: 1215)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6449968218803406
    2. '_a' → logprob: -0.8949968218803406
    3. 'a' → logprob: -3.3949968814849854
    4. '_i' → logprob: -4.519996643066406
    5. '_x' → logprob: -4.769996643066406
    6. '_ai' → logprob: -5.019996643066406
    7. '_b' → logprob: -5.769996643066406
    8. 'i' → logprob: -6.894996643066406
    9. ' _' → logprob: -7.144996643066406
    10. '_j' → logprob: -7.644996643066406

Token 675: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.563029408454895
    2. 'in' → logprob: -1.188029408454895
    3. ',' → logprob: -2.6880292892456055
    4. 'i' → logprob: -4.3130292892456055
    5. '_' → logprob: -4.3130292892456055
    6. 'x' → logprob: -4.4380292892456055
    7. '_,' → logprob: -5.4380292892456055
    8. ')' → logprob: -5.5630292892456055
    9. 'for' → logprob: -6.5630292892456055
    10. '_in' → logprob: -6.9380292892456055

Token 676: ' determine' (ID: 11433)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8652298450469971
    2. 'for' → logprob: -0.8652298450469971
    3. ' for' → logprob: -2.490229845046997
    4. 'y' → logprob: -3.865229845046997
    5. 'x' → logprob: -4.115229606628418
    6. 'b' → logprob: -4.490229606628418
    7. ' a' → logprob: -4.740229606628418
    8. '   ' → logprob: -5.115229606628418
    9. ' y' → logprob: -6.240229606628418
    10. '_' → logprob: -6.490229606628418

Token 677: ' its' (ID: 1617)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -1.1684150695800781
    2. 'a' → logprob: -1.5434150695800781
    3. 'for' → logprob: -1.6684150695800781
    4. 'b' → logprob: -1.7934150695800781
    5. 'the' → logprob: -3.418415069580078
    6. '_' → logprob: -3.918415069580078
    7. 'x' → logprob: -4.293415069580078
    8. ' for' → logprob: -4.543415069580078
    9. 'j' → logprob: -4.668415069580078
    10. ' the' → logprob: -5.418415069580078

Token 678: ' nearest' (ID: 35210)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.9408491849899292
    2. 'idx' → logprob: -1.1908491849899292
    3. 'index' → logprob: -2.4408493041992188
    4. 'position' → logprob: -3.0658493041992188
    5. 'possible' → logprob: -3.6908493041992188
    6. 'j' → logprob: -3.8158493041992188
    7. 'closest' → logprob: -3.9408493041992188
    8. 'positions' → logprob: -4.065849304199219
    9. 'p' → logprob: -4.315849304199219
    10. 'distance' → logprob: -4.815849304199219

Token 679: ' y' (ID: 342)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.858193576335907
    2. 'x' → logprob: -1.9831936359405518
    3. 'y' → logprob: -2.1081936359405518
    4. ' neighbor' → logprob: -2.3581936359405518
    5. 'neighbors' → logprob: -3.3581936359405518
    6. 'idx' → logprob: -3.9831936359405518
    7. '_neighbor' → logprob: -4.108193397521973
    8. 'b' → logprob: -4.233193397521973
    9. 'pos' → logprob: -4.358193397521973
    10. 'distance' → logprob: -4.358193397521973

Token 680: ' interval' (ID: 17116)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6364445686340332
    2. ' for' → logprob: -1.6364445686340332
    3. 'y' → logprob: -2.386444568634033
    4. 'index' → logprob: -3.636444568634033
    5. 'pos' → logprob: -3.761444568634033
    6. 'idx' → logprob: -4.011444568634033
    7. ',' → logprob: -4.261444568634033
    8. 'i' → logprob: -4.386444568634033
    9. ' =' → logprob: -4.636444568634033
    10. 's' → logprob: -4.761444568634033

Token 681: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6664170622825623
    2. ' for' → logprob: -1.041417121887207
    3. '   ' → logprob: -3.416417121887207
    4. 'y' → logprob: -3.541417121887207
    5. ' =' → logprob: -4.166417121887207
    6. '=' → logprob: -4.666417121887207
    7. ',' → logprob: -5.041417121887207
    8. 'in' → logprob: -5.541417121887207
    9. 'x' → logprob: -5.666417121887207
    10. ':' → logprob: -5.791417121887207

Token 682: ' and' (ID: 326)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.24988576769828796
    2. ' for' → logprob: -1.6248857975006104
    3. ' and' → logprob: -4.749885559082031
    4. 'and' → logprob: -5.374885559082031
    5. '   ' → logprob: -5.624885559082031
    6. '#' → logprob: -5.999885559082031
    7. 'y' → logprob: -7.249885559082031
    8. '...' → logprob: -7.374885559082031
    9. 'idx' → logprob: -7.374885559082031
    10. 'pos' → logprob: -7.874885559082031

Token 683: ' compute' (ID: 23864)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1251581311225891
    2. '#' → logprob: -3.0001580715179443
    3. ' for' → logprob: -3.7501580715179443
    4. 'add' → logprob: -4.875158309936523
    5. 'store' → logprob: -5.000158309936523
    6. 'insert' → logprob: -5.250158309936523
    7. 'update' → logprob: -5.625158309936523
    8. 'y' → logprob: -6.000158309936523
    9. 'if' → logprob: -6.375158309936523
    10. 'dist' → logprob: -6.625158309936523

Token 684: ' the' (ID: 290)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.8784132599830627
    2. 'd' → logprob: -1.503413200378418
    3. 'for' → logprob: -2.128413200378418
    4. 'distance' → logprob: -2.253413200378418
    5. 'the' → logprob: -3.253413200378418
    6. 'a' → logprob: -4.003413200378418
    7. 'dx' → logprob: -4.378413200378418
    8. 'x' → logprob: -4.753413200378418
    9. 'b' → logprob: -4.878413200378418
    10. '   ' → logprob: -5.253413200378418

Token 685: ' del' (ID: 1083)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6271133422851562
    2. 'dist' → logprob: -1.8771133422851562
    3. 'distance' → logprob: -2.1271133422851562
    4. 'd' → logprob: -2.3771133422851562
    5. 'a' → logprob: -4.127113342285156
    6. 'dx' → logprob: -4.502113342285156
    7. 'diff' → logprob: -4.752113342285156
    8. '#' → logprob: -4.752113342285156
    9. 'l' → logprob: -4.877113342285156
    10. 'b' → logprob: -5.877113342285156

Token 686: 'tas' (ID: 34419)
  Prédit: 'ta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ta' → logprob: -0.07228629291057587
    2. 'tas' → logprob: -3.322286367416382
    3. 't' → logprob: -4.072286128997803
    4. 'ay' → logprob: -4.572286128997803
    5. 'tay' → logprob: -6.197286128997803
    6. 'tax' → logprob: -7.197286128997803
    7. 'y' → logprob: -7.322286128997803
    8. 'distance' → logprob: -8.197286605834961
    9. '```' → logprob: -8.447286605834961
    10. 'tat' → logprob: -8.759786605834961

Token 687: ' a' (ID: 261)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2867477238178253
    2. ' for' → logprob: -1.661747694015503
    3. '   ' → logprob: -2.911747694015503
    4. '       ' → logprob: -6.536747932434082
    5. ',' → logprob: -7.286747932434082
    6. '<|end|>' → logprob: -7.286747932434082
    7. 'x' → logprob: -8.036747932434082
    8. ' ' → logprob: -8.161747932434082
    9. '
' → logprob: -8.286747932434082
    10. '	for' → logprob: -8.536747932434082

Token 688: ' and' (ID: 326)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8600701689720154
    2. ' =' → logprob: -1.2350702285766602
    3. 'for' → logprob: -2.48507022857666
    4. '   ' → logprob: -3.11007022857666
    5. 'f' → logprob: -3.73507022857666
    6. ',' → logprob: -3.98507022857666
    7. ' for' → logprob: -4.11007022857666
    8. '<|end|>' → logprob: -4.11007022857666
    9. '       ' → logprob: -4.23507022857666
    10. ' and' → logprob: -4.98507022857666

Token 689: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.01607026532292366
    2. 'd' → logprob: -4.266070365905762
    3. 'c' → logprob: -7.141070365905762
    4. 'x' → logprob: -9.016070365905762
    5. 'a' → logprob: -9.141070365905762
    6. 'r' → logprob: -9.266070365905762
    7. 'abs' → logprob: -9.516070365905762
    8. 'distance' → logprob: -9.766070365905762
    9. '```' → logprob: -9.891070365905762
    10. 'dist' → logprob: -9.891070365905762

Token 690: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.000473091087769717
    2. ' for' → logprob: -7.7504730224609375
    3. '
' → logprob: -10.625473022460938
    4. '   ' → logprob: -11.625473022460938
    5. '#' → logprob: -12.750473022460938
    6. '       ' → logprob: -14.250473022460938
    7. '```' → logprob: -14.250473022460938
    8. 'x' → logprob: -14.875473022460938
    9. ')' → logprob: -14.875473022460938
    10. 'from' → logprob: -15.000473022460938

Token 691: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -6.2729995988775045e-06
    2. ' for' → logprob: -12.000006675720215
    3. '```' → logprob: -16.2500057220459
    4. '
' → logprob: -18.2500057220459
    5. '   ' → logprob: -18.3750057220459
    6. 'x' → logprob: -18.5000057220459
    7. '#' → logprob: -18.6250057220459
    8. '	for' → logprob: -19.5000057220459
    9. 'i' → logprob: -19.6250057220459
    10. 'a' → logprob: -19.8750057220459

Token 692: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5984691977500916
    2. 'i' → logprob: -1.2234692573547363
    3. 'xi' → logprob: -2.3484692573547363
    4. '_x' → logprob: -3.2234692573547363
    5. 'xx' → logprob: -4.223469257354736
    6. '_i' → logprob: -5.848469257354736
    7. 'idx' → logprob: -6.848469257354736
    8. 'a' → logprob: -7.598469257354736
    9. ' xi' → logprob: -8.348468780517578
    10. ' i' → logprob: -8.473468780517578

Token 693: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4307139813899994
    2. 'in' → logprob: -1.0557140111923218
    3. '_in' → logprob: -7.430714130401611
    4. '_' → logprob: -7.805714130401611
    5. ',' → logprob: -7.930714130401611
    6. ' ' → logprob: -8.555713653564453
    7. 'i' → logprob: -9.305713653564453
    8. 'x' → logprob: -9.680713653564453
    9. '  ' → logprob: -9.930713653564453
    10. '_idx' → logprob: -9.930713653564453

Token 694: ' xxx' (ID: 33484)
  Prédit: 'xxx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xxx' → logprob: -0.05552900582551956
    2. 'range' → logprob: -2.9305291175842285
    3. ' xxx' → logprob: -7.8055291175842285
    4. ' range' → logprob: -8.93052864074707
    5. 'yyy' → logprob: -9.68052864074707
    6. 'xx' → logprob: -11.18052864074707
    7. 'enumer' → logprob: -12.05552864074707
    8. 'xxxx' → logprob: -12.30552864074707
    9. 'x' → logprob: -12.55552864074707
    10. 'xyz' → logprob: -12.55552864074707

Token 695: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11312533169984818
    2. ':
' → logprob: -2.2381253242492676
    3. '   ' → logprob: -8.363125801086426
    4. ':
' → logprob: -10.363125801086426
    5. '):
' → logprob: -11.238125801086426
    6. '=' → logprob: -11.488125801086426
    7. ',' → logprob: -12.613125801086426
    8. ':

' → logprob: -13.363125801086426
    9. '):' → logprob: -13.488125801086426
    10. 'y' → logprob: -14.175625801086426

Token 696: '   ' (ID: 271)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.4729012250900269
    2. '   ' → logprob: -1.4729012250900269
    3. 'idx' → logprob: -1.4729012250900269
    4. 'pos' → logprob: -1.7229012250900269
    5. 'j' → logprob: -2.8479013442993164
    6. 'y' → logprob: -3.4729013442993164
    7. 'p' → logprob: -4.347901344299316
    8. 'k' → logprob: -4.847901344299316
    9. 'iy' → logprob: -5.347901344299316
    10. 'l' → logprob: -5.722901344299316

Token 697: ' #' (ID: 1069)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -1.1794534921646118
    2. 'i' → logprob: -1.4294534921646118
    3. 'pos' → logprob: -1.8044534921646118
    4. 'j' → logprob: -1.8044534921646118
    5. 'p' → logprob: -2.8044533729553223
    6. 'k' → logprob: -4.179453372955322
    7. 'ind' → logprob: -4.679453372955322
    8. 'index' → logprob: -5.054453372955322
    9. 'id' → logprob: -5.179453372955322
    10. 'y' → logprob: -5.554453372955322

Token 698: ' Only' (ID: 12817)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.8150675296783447
    2. 'pos' → logprob: -1.3150675296783447
    3. 'j' → logprob: -2.1900675296783447
    4. 'i' → logprob: -2.4400675296783447
    5. 'p' → logprob: -3.3150675296783447
    6. 'index' → logprob: -4.690067291259766
    7. 'k' → logprob: -4.690067291259766
    8. 'ind' → logprob: -4.815067291259766
    9. 'y' → logprob: -5.315067291259766
    10. 'id' → logprob: -5.565067291259766

Token 699: ' process' (ID: 2273)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.8912375569343567
    2. 'idx' → logprob: -0.8912375569343567
    3. 'j' → logprob: -2.266237497329712
    4. 'if' → logprob: -3.766237497329712
    5. 'y' → logprob: -4.641237735748291
    6. '   ' → logprob: -4.766237735748291
    7. 'p' → logprob: -5.016237735748291
    8. 'index' → logprob: -5.266237735748291
    9. 'ind' → logprob: -5.266237735748291
    10. 'k' → logprob: -5.391237735748291

Token 700: ' x' (ID: 1215)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.7285997271537781
    2. 'idx' → logprob: -1.1035997867584229
    3. 'if' → logprob: -2.228599786758423
    4. 'j' → logprob: -3.853599786758423
    5. 'y' → logprob: -4.353599548339844
    6. 'p' → logprob: -4.478599548339844
    7. '   ' → logprob: -4.728599548339844
    8. 'index' → logprob: -5.478599548339844
    9. 'ind' → logprob: -5.603599548339844
    10. 'i' → logprob: -5.978599548339844

Token 701: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.572131335735321
    2. ' if' → logprob: -1.1971313953399658
    3. 'idx' → logprob: -3.697131395339966
    4. 'pos' → logprob: -4.072131156921387
    5. '   ' → logprob: -4.197131156921387
    6. '_idx' → logprob: -4.447131156921387
    7. ')' → logprob: -4.697131156921387
    8. ':' → logprob: -4.697131156921387
    9. '=' → logprob: -5.197131156921387
    10. 'index' → logprob: -5.322131156921387

Token 702: ' it's' (ID: 4275)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.9259265065193176
    2. 'y' → logprob: -1.4259264469146729
    3. 'yyy' → logprob: -1.6759264469146729
    4. 'len' → logprob: -2.550926446914673
    5. 'm' → logprob: -3.050926446914673
    6. ' y' → logprob: -4.050926685333252
    7. '1' → logprob: -5.050926685333252
    8. ' x' → logprob: -5.425926685333252
    9. 'xxx' → logprob: -5.550926685333252
    10. 'True' → logprob: -5.800926685333252

Token 703: ' within' (ID: 3518)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.24323923885822296
    2. '>=' → logprob: -2.618239164352417
    3. 'not' → logprob: -2.868239164352417
    4. 'less' → logprob: -3.493239164352417
    5. '<' → logprob: -4.118239402770996
    6. 'within' → logprob: -4.118239402770996
    7. 'between' → logprob: -4.618239402770996
    8. '>' → logprob: -6.368239402770996
    9. 'greater' → logprob: -6.368239402770996
    10. 'y' → logprob: -6.618239402770996

Token 704: ' the' (ID: 290)
  Prédit: 'yyy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'yyy' → logprob: -0.0013784486800432205
    2. ' y' → logprob: -7.751378536224365
    3. '0' → logprob: -7.876378536224365
    4. ' ' → logprob: -8.751378059387207
    5. '(' → logprob: -9.376378059387207
    6. 'yyyy' → logprob: -9.501378059387207
    7. '1' → logprob: -9.626378059387207
    8. 'min' → logprob: -10.376378059387207
    9. '   ' → logprob: -10.501378059387207
    10. 'yy' → logprob: -10.876378059387207

Token 705: ' range' (ID: 3352)
  Prédit: 'yyy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'yyy' → logprob: -0.00010664248111424968
    2. 'min' → logprob: -10.625106811523438
    3. ' y' → logprob: -11.125106811523438
    4. 'yyyy' → logprob: -11.500106811523438
    5. '```' → logprob: -11.625106811523438
    6. '[' → logprob: -11.625106811523438
    7. 'yy' → logprob: -12.000106811523438
    8. '0' → logprob: -12.125106811523438
    9. ' ' → logprob: -12.250106811523438
    10. 'bbb' → logprob: -12.375106811523438

Token 706: ' covered' (ID: 13083)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.8075795769691467
    2. 'if' → logprob: -2.057579517364502
    3. ' if' → logprob: -2.307579517364502
    4. 'and' → logprob: -2.682579517364502
    5. ' <=' → logprob: -3.307579517364502
    6. 'yyy' → logprob: -3.307579517364502
    7. '>=' → logprob: -3.307579517364502
    8. '   ' → logprob: -3.557579517364502
    9. '<=' → logprob: -3.557579517364502
    10. 'y' → logprob: -3.807579517364502

Token 707: ' by' (ID: 656)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7891066670417786
    2. 'if' → logprob: -1.6641066074371338
    3. ' if' → logprob: -2.039106607437134
    4. ' by' → logprob: -2.539106607437134
    5. 'by' → logprob: -2.914106607437134
    6. '(' → logprob: -3.289106607437134
    7. 'y' → logprob: -4.039106845855713
    8. ' of' → logprob: -4.539106845855713
    9. ' (' → logprob: -5.164106845855713
    10. 'yyy' → logprob: -5.289106845855713

Token 708: ' y' (ID: 342)
  Prédit: 'yyy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yyy' → logprob: -0.0006444069440476596
    2. ' y' → logprob: -7.375644207000732
    3. 'yy' → logprob: -12.62564468383789
    4. '
' → logprob: -12.87564468383789
    5. '(' → logprob: -13.37564468383789
    6. 'yyyy' → logprob: -13.62564468383789
    7. '   ' → logprob: -13.62564468383789
    8. '  ' → logprob: -13.62564468383789
    9. '```' → logprob: -13.87564468383789
    10. 'y' → logprob: -14.00064468383789

Token 709: 'yy' (ID: 7496)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.2597311735153198
    2. '   ' → logprob: -1.5097311735153198
    3. ' and' → logprob: -1.6347311735153198
    4. ' if' → logprob: -1.8847311735153198
    5. ':' → logprob: -2.5097312927246094
    6. 'and' → logprob: -3.5097312927246094
    7. ':
' → logprob: -4.634731292724609
    8. 'pos' → logprob: -5.259731292724609
    9. 'y' → logprob: -5.384731292724609
    10. ')' → logprob: -5.759731292724609

Token 710: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7793097496032715
    2. '   ' → logprob: -1.5293097496032715
    3. ' if' → logprob: -2.2793097496032715
    4. 'and' → logprob: -2.2793097496032715
    5. ' and' → logprob: -2.2793097496032715
    6. ':' → logprob: -4.1543097496032715
    7. ',' → logprob: -7.9043097496032715
    8. ':
' → logprob: -8.15431022644043
    9. 'idx' → logprob: -8.65431022644043
    10. '=' → logprob: -8.77931022644043

Token 711: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08063562959432602
    2. 'if' → logprob: -3.0806355476379395
    3. ' if' → logprob: -4.2056355476379395
    4. 'pos' → logprob: -4.5806355476379395
    5. 'idx' → logprob: -5.7056355476379395
    6. ' pos' → logprob: -7.3306355476379395
    7. ' idx' → logprob: -7.4556355476379395
    8. 'l' → logprob: -7.9556355476379395
    9. 'i' → logprob: -8.080636024475098
    10. 'r' → logprob: -8.705636024475098

Token 712: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.008231926709413528
    2. 'idx' → logprob: -5.383232116699219
    3. 'pos' → logprob: -6.133232116699219
    4. 'l' → logprob: -7.258232116699219
    5. '   ' → logprob: -8.383232116699219
    6. 'i' → logprob: -8.508232116699219
    7. 'p' → logprob: -9.758232116699219
    8. 'j' → logprob: -9.883232116699219
    9. 'index' → logprob: -9.883232116699219
    10. 'r' → logprob: -9.883232116699219

Token 713: ' x' (ID: 1215)
  Prédit: 'yyy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'yyy' → logprob: -0.002392771653831005
    2. 'y' → logprob: -6.752392768859863
    3. 'yy' → logprob: -7.627392768859863
    4. 'x' → logprob: -7.877392768859863
    5. ' y' → logprob: -8.877392768859863
    6. 'xxx' → logprob: -9.127392768859863
    7. 'yyyy' → logprob: -10.127392768859863
    8. '0' → logprob: -11.252392768859863
    9. 'bbb' → logprob: -11.877392768859863
    10. '1' → logprob: -12.127392768859863

Token 714: ' <' (ID: 464)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.16134856641292572
    2. '<=' → logprob: -2.536348581314087
    3. '<' → logprob: -3.286348581314087
    4. '>' → logprob: -4.036348342895508
    5. ' >=' → logprob: -4.536348342895508
    6. ' <=' → logprob: -6.411348342895508
    7. ' <' → logprob: -6.536348342895508
    8. ' >' → logprob: -7.911348342895508
    9. ')' → logprob: -9.161348342895508
    10. '=' → logprob: -9.411348342895508

Token 715: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.6931592226028442
    2. 'yyy' → logprob: -0.6931592226028442
    3. 'yy' → logprob: -11.943159103393555
    4. '=' → logprob: -13.568159103393555
    5. 'y' → logprob: -13.818159103393555
    6. '0' → logprob: -13.943159103393555
    7. ' ' → logprob: -14.193159103393555
    8. 'yyyy' → logprob: -14.943159103393555
    9. '
' → logprob: -15.318159103393555
    10. '  ' → logprob: -15.693159103393555

Token 716: 'yy' (ID: 7496)
  Prédit: 'yy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yy' → logprob: -0.0001645644661039114
    2. 'y' → logprob: -9.000164985656738
    3. 'yyy' → logprob: -10.625164985656738
    4. '[' → logprob: -11.125164985656738
    5. '
' → logprob: -14.625164985656738
    6. '[-' → logprob: -15.000164985656738
    7. '```' → logprob: -15.125164985656738
    8. '   ' → logprob: -15.375164985656738
    9. '-' → logprob: -15.875164985656738
    10. 'YY' → logprob: -16.125164031982422

Token 717: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10933574289083481
    2. '[-' → logprob: -2.3593356609344482
    3. '[m' → logprob: -4.734335899353027
    4. '0' → logprob: -9.109335899353027
    5. '-' → logprob: -9.609335899353027
    6. 'm' → logprob: -9.984335899353027
    7. '   ' → logprob: -10.109335899353027
    8. '[M' → logprob: -12.234335899353027
    9. '1' → logprob: -12.484335899353027
    10. '[j' → logprob: -13.234335899353027

Token 718: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3152686357498169
    2. '-' → logprob: -1.315268635749817
    3. 'm' → logprob: -6.440268516540527
    4. '-m' → logprob: -8.190268516540527
    5. ' ' → logprob: -10.565268516540527
    6. '1' → logprob: -10.565268516540527
    7. '[-' → logprob: -11.190268516540527
    8. '[' → logprob: -11.190268516540527
    9. ' -' → logprob: -11.752768516540527
    10. '
' → logprob: -11.815268516540527

Token 719: ']' (ID: 60)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.7794034481048584
    2. ':' → logprob: -1.7794034481048584
    3. ' or' → logprob: -1.9044034481048584
    4. '):
' → logprob: -2.4044034481048584
    5. ']:' → logprob: -2.9044034481048584
    6. ')' → logprob: -3.5294034481048584
    7. ']' → logprob: -3.7794034481048584
    8. 'or' → logprob: -4.5294036865234375
    9. ']:
' → logprob: -5.0294036865234375
    10. ':
' → logprob: -5.4044036865234375

Token 720: ' or' (ID: 503)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.052729845046997
    2. ' or' → logprob: -1.302729845046997
    3. 'or' → logprob: -1.427729845046997
    4. ':
' → logprob: -2.052729845046997
    5. '   ' → logprob: -5.177729606628418
    6. '       ' → logprob: -5.552729606628418
    7. ':return' → logprob: -7.552729606628418
    8. 'continue' → logprob: -7.927729606628418
    9. 'and' → logprob: -8.302729606628418
    10. '	or' → logprob: -9.177729606628418

Token 721: ' y' (ID: 342)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0008098635007627308
    2. 'yyy' → logprob: -7.250809669494629
    3. ' x' → logprob: -10.000809669494629
    4. 'xxx' → logprob: -10.250809669494629
    5. 'y' → logprob: -11.500809669494629
    6. '   ' → logprob: -12.375809669494629
    7. ' ' → logprob: -13.875809669494629
    8. '```' → logprob: -14.313309669494629
    9. '  ' → logprob: -14.500809669494629
    10. 'yy' → logprob: -15.188309669494629

Token 722: 'yy' (ID: 7496)
  Prédit: 'yy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yy' → logprob: -0.0002788551209960133
    2. '>' → logprob: -9.50027847290039
    3. 'y' → logprob: -10.00027847290039
    4. 'xx' → logprob: -10.25027847290039
    5. '[' → logprob: -10.37527847290039
    6. 'yyy' → logprob: -10.37527847290039
    7. '>[' → logprob: -11.00027847290039
    8. '>>' → logprob: -11.37527847290039
    9. '```' → logprob: -12.25027847290039
    10. 'YY' → logprob: -13.00027847290039

Token 723: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.015235154889523983
    2. '[' → logprob: -4.26523494720459
    3. '[len' → logprob: -7.64023494720459
    4. '[m' → logprob: -8.26523494720459
    5. 'len' → logprob: -9.76523494720459
    6. '-' → logprob: -10.01523494720459
    7. '   ' → logprob: -10.39023494720459
    8. 'm' → logprob: -10.51523494720459
    9. '][-' → logprob: -10.51523494720459
    10. '.index' → logprob: -10.76523494720459

Token 724: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.3199920178740285e-05
    2. '-' → logprob: -10.750022888183594
    3. ']' → logprob: -15.000022888183594
    4. '```' → logprob: -15.000022888183594
    5. ' ' → logprob: -15.375022888183594
    6. '
' → logprob: -15.500022888183594
    7. 'm' → logprob: -15.750022888183594
    8. '   ' → logprob: -16.250022888183594
    9. '0' → logprob: -16.250022888183594
    10. '#' → logprob: -16.375022888183594

Token 725: ']' (ID: 60)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1637052297592163
    2. '):' → logprob: -1.1637052297592163
    3. ' <' → logprob: -2.163705348968506
    4. '>' → logprob: -2.663705348968506
    5. ']:' → logprob: -2.913705348968506
    6. ' >' → logprob: -3.163705348968506
    7. '>:' → logprob: -3.163705348968506
    8. ' >=' → logprob: -4.538705348968506
    9. ']>' → logprob: -4.913705348968506
    10. '<' → logprob: -5.163705348968506

Token 726: ' <' (ID: 464)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.08776790648698807
    2. ' >' → logprob: -3.0877678394317627
    3. '<' → logprob: -3.9627678394317627
    4. ':' → logprob: -4.587768077850342
    5. '>=' → logprob: -5.712768077850342
    6. '<=' → logprob: -5.837768077850342
    7. ' <' → logprob: -6.462768077850342
    8. '>:' → logprob: -7.087768077850342
    9. ' <=' → logprob: -8.587767601013184
    10. ' >=' → logprob: -8.587767601013184

Token 727: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -8.506661833962426e-05
    2. ' x' → logprob: -9.37508487701416
    3. '<|end|>' → logprob: -16.750085830688477
    4. ')x' → logprob: -17.375085830688477
    5. '	x' → logprob: -17.375085830688477
    6. ' ' → logprob: -17.500085830688477
    7. '   ' → logprob: -18.375085830688477
    8. 'y' → logprob: -18.750085830688477
    9. '>x' → logprob: -19.000085830688477
    10. '0' → logprob: -19.312585830688477

Token 728: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.47484275698661804
    2. ':
' → logprob: -1.5998427867889404
    3. '   ' → logprob: -1.9748427867889404
    4. '       ' → logprob: -3.3498427867889404
    5. 'continue' → logprob: -6.474842548370361
    6. ' continue' → logprob: -7.849842548370361
    7. '	continue' → logprob: -8.59984302520752
    8. ':
' → logprob: -10.34984302520752
    9. ' continues' → logprob: -11.47484302520752
    10. '.' → logprob: -11.59984302520752

Token 729: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008254152722656727
    2. '   ' → logprob: -5.258254051208496
    3. ' continue' → logprob: -6.133254051208496
    4. 'continue' → logprob: -7.258254051208496
    5. '	continue' → logprob: -9.008254051208496
    6. '           ' → logprob: -12.508254051208496
    7. ':' → logprob: -12.883254051208496
    8. ' continues' → logprob: -12.883254051208496
    9. ',' → logprob: -13.258254051208496
    10. '_continue' → logprob: -13.508254051208496

Token 730: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.6514876484870911
    2. 'continue' (adapté à ' continue') → logprob: -1.2764875888824463
    3. '   ' → logprob: -1.6514875888824463
    4. '       ' → logprob: -4.901487827301025
    5. '	continue' → logprob: -7.651487827301025
    6. '           ' → logprob: -11.401487350463867
    7. 'contin' → logprob: -11.901487350463867
    8. '_continue' → logprob: -12.151487350463867
    9. ' ' → logprob: -12.401487350463867
    10. ' continues' → logprob: -12.776487350463867

Token 731: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00024608144303783774
    2. '    
' → logprob: -9.250246047973633
    3. '       ' → logprob: -9.875246047973633
    4. '<|end|>' → logprob: -10.500246047973633
    5. '
' → logprob: -11.125246047973633
    6. ')' → logprob: -11.250246047973633
    7. '.' → logprob: -12.125246047973633
    8. '        
' → logprob: -12.250246047973633
    9. 'n' → logprob: -12.625246047973633
    10. ',' → logprob: -12.750246047973633

Token 732: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004766671918332577
    2. '       ' → logprob: -8.250476837158203
    3. '    
' → logprob: -9.500476837158203
    4. '
' → logprob: -10.750476837158203
    5. 'a' → logprob: -11.375476837158203
    6. 'n' → logprob: -11.500476837158203
    7. '```' → logprob: -11.625476837158203
    8. '<|end|>' → logprob: -11.625476837158203
    9. ' for' → logprob: -11.875476837158203
    10. ')' → logprob: -12.000476837158203

Token 733: ' #' (ID: 1069)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -1.0617009401321411
    2. 'i' → logprob: -1.1867009401321411
    3. 'j' → logprob: -1.8117009401321411
    4. 'pos' → logprob: -2.6867008209228516
    5. 'k' → logprob: -3.6867008209228516
    6. 'p' → logprob: -4.186700820922852
    7. 'ind' → logprob: -4.311700820922852
    8. 'l' → logprob: -4.436700820922852
    9. 'r' → logprob: -4.811700820922852
    10. 'index' → logprob: -4.811700820922852

Token 734: ' Find' (ID: 9764)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -1.0818768739700317
    2. 'i' → logprob: -1.3318768739700317
    3. 'j' → logprob: -1.4568768739700317
    4. 'k' → logprob: -3.206876754760742
    5. 'pos' → logprob: -3.331876754760742
    6. 'ind' → logprob: -3.956876754760742
    7. 'p' → logprob: -4.331876754760742
    8. 'index' → logprob: -4.581876754760742
    9. 'id' → logprob: -4.831876754760742
    10. 'l' → logprob: -4.831876754760742

Token 735: ' index' (ID: 3472)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.8913288712501526
    2. 'pos' → logprob: -1.3913288116455078
    3. 'i' → logprob: -2.016328811645508
    4. 'j' → logprob: -2.141328811645508
    5. 'index' → logprob: -3.891328811645508
    6. 'p' → logprob: -3.891328811645508
    7. ' idx' → logprob: -4.641328811645508
    8. 'ind' → logprob: -5.641328811645508
    9. 'r' → logprob: -5.641328811645508
    10. 'left' → logprob: -5.641328811645508

Token 736: ' such' (ID: 2238)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.4809727668762207
    2. ' =' → logprob: -1.2309727668762207
    3. 'pos' → logprob: -3.7309727668762207
    4. 'j' → logprob: -3.9809727668762207
    5. 'i' → logprob: -4.480972766876221
    6. '=' → logprob: -4.605972766876221
    7. 'p' → logprob: -5.355972766876221
    8. '_idx' → logprob: -5.855972766876221
    9. 'ind' → logprob: -6.355972766876221
    10. ' idx' → logprob: -6.605972766876221

Token 737: ' that' (ID: 484)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09753204882144928
    2. ' =' → logprob: -2.472532033920288
    3. 'idx' → logprob: -6.097532272338867
    4. '=index' → logprob: -6.972532272338867
    5. '_=' → logprob: -7.097532272338867
    6. 'x' → logprob: -7.097532272338867
    7. '=k' → logprob: -7.222532272338867
    8. '=i' → logprob: -7.472532272338867
    9. '_idx' → logprob: -8.347532272338867
    10. 'index' → logprob: -8.347532272338867

Token 738: ' y' (ID: 342)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.7680612206459045
    2. 'j' → logprob: -1.6430611610412598
    3. 'pos' → logprob: -1.8930611610412598
    4. 'i' → logprob: -2.5180611610412598
    5. 'r' → logprob: -2.7680611610412598
    6. 'p' → logprob: -4.26806116104126
    7. 'k' → logprob: -4.51806116104126
    8. 'index' → logprob: -5.14306116104126
    9. 'ind' → logprob: -5.64306116104126
    10. 'right' → logprob: -6.14306116104126

Token 739: 'yy' (ID: 7496)
  Prédit: '_idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -1.0401309728622437
    2. 'pos' → logprob: -2.040131092071533
    3. 'idx' → logprob: -2.040131092071533
    4. ' =' → logprob: -2.165131092071533
    5. 'yy' → logprob: -2.290131092071533
    6. '_index' → logprob: -2.665131092071533
    7. 'index' → logprob: -3.790131092071533
    8. '=' → logprob: -4.290131092071533
    9. 'i' → logprob: -4.290131092071533
    10. '_pos' → logprob: -4.290131092071533

Token 740: '[i' (ID: 1768)
  Prédit: '_idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.4665283262729645
    2. 'pos' → logprob: -2.2165284156799316
    3. '_index' → logprob: -2.4665284156799316
    4. '_pos' → logprob: -2.7165284156799316
    5. '_i' → logprob: -3.2165284156799316
    6. 'idx' → logprob: -3.7165284156799316
    7. 'index' → logprob: -4.216528415679932
    8. '=' → logprob: -4.341528415679932
    9. ' =' → logprob: -5.216528415679932
    10. 'i' → logprob: -5.966528415679932

Token 741: '-' (ID: 12)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5135717988014221
    2. ']' → logprob: -1.5135717391967773
    3. '=' → logprob: -2.1385717391967773
    4. '=i' → logprob: -3.6385717391967773
    5. ']=' → logprob: -4.013571739196777
    6. '-' → logprob: -5.138571739196777
    7. '[i' → logprob: -6.013571739196777
    8. ')' → logprob: -6.388571739196777
    9. 'i' → logprob: -6.888571739196777
    10. ' -' → logprob: -7.138571739196777

Token 742: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.0172791481018066
    2. '1' → logprob: -1.2672791481018066
    3. 'bis' → logprob: -1.6422791481018066
    4. ')' → logprob: -2.8922791481018066
    5. ']' → logprob: -3.7672791481018066
    6. '=' → logprob: -4.642279148101807
    7. ' bis' → logprob: -4.642279148101807
    8. 'x' → logprob: -5.017279148101807
    9. ' i' → logprob: -5.142279148101807
    10. '```' → logprob: -5.142279148101807

Token 743: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.37375909090042114
    2. '<=' → logprob: -2.3737590312957764
    3. ']>=' → logprob: -2.7487590312957764
    4. ' <=' → logprob: -2.8737590312957764
    5. ']<=' → logprob: -3.1237590312957764
    6. '>=' → logprob: -3.4987590312957764
    7. ' >=' → logprob: -4.2487592697143555
    8. ')' → logprob: -5.9987592697143555
    9. ']>' → logprob: -7.3737592697143555
    10. '=' → logprob: -7.3737592697143555

Token 744: ' <=' (ID: 5017)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.310850590467453
    2. '<=' → logprob: -2.0608506202697754
    3. ' >=' → logprob: -2.4358506202697754
    4. ' <=' → logprob: -3.6858506202697754
    5. '=' → logprob: -4.310850620269775
    6. ']>=' → logprob: -5.810850620269775
    7. ' =' → logprob: -6.185850620269775
    8. ')' → logprob: -6.310850620269775
    9. ')>=' → logprob: -7.060850620269775
    10. '>' → logprob: -7.060850620269775

Token 745: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0002682496269699186
    2. ' x' → logprob: -8.25026798248291
    3. 'i' → logprob: -12.37526798248291
    4. 'bis' → logprob: -14.25026798248291
    5. 'y' → logprob: -14.87526798248291
    6. '
' → logprob: -15.37526798248291
    7. '```' → logprob: -15.56276798248291
    8. ' ' → logprob: -15.87526798248291
    9. '   ' → logprob: -15.93776798248291
    10. 'b' → logprob: -16.000268936157227

Token 746: ' <' (ID: 464)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.9001473188400269
    2. '=' → logprob: -1.5251473188400269
    3. ' and' → logprob: -1.9001473188400269
    4. 'and' → logprob: -2.4001474380493164
    5. ' <=' → logprob: -2.5251474380493164
    6. ' =' → logprob: -3.0251474380493164
    7. 'le' → logprob: -6.025147438049316
    8. '=i' → logprob: -7.150147438049316
    9. 'i' → logprob: -7.275147438049316
    10. '≤' → logprob: -7.275147438049316

Token 747: ' y' (ID: 342)
  Prédit: 'yyy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yyy' → logprob: -0.12696339190006256
    2. ' y' → logprob: -2.1269633769989014
    3. 'yy' → logprob: -10.62696361541748
    4. 'y' → logprob: -13.00196361541748
    5. '```' → logprob: -13.00196361541748
    6. '  ' → logprob: -13.37696361541748
    7. ' ' → logprob: -13.50196361541748
    8. '
' → logprob: -14.00196361541748
    9. '`' → logprob: -14.37696361541748
    10. '   ' → logprob: -14.75196361541748

Token 748: 'yy' (ID: 7496)
  Prédit: 'yy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yy' → logprob: -0.02496243640780449
    2. '[i' → logprob: -4.399962425231934
    3. 'i' → logprob: -4.774962425231934
    4. 'y' → logprob: -6.274962425231934
    5. 'ii' → logprob: -6.649962425231934
    6. '[' → logprob: -8.274962425231934
    7. 'yyy' → logprob: -8.274962425231934
    8. '   ' → logprob: -9.649962425231934
    9. '```' → logprob: -10.899962425231934
    10. '       ' → logprob: -10.899962425231934

Token 749: '[i' (ID: 1768)
  Prédit: '_i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.41323861479759216
    2. 'i' → logprob: -1.9132386445999146
    3. '_idx' → logprob: -2.538238525390625
    4. '_index' → logprob: -3.288238525390625
    5. '[i' → logprob: -3.663238525390625
    6. 'pos' → logprob: -4.788238525390625
    7. ' =' → logprob: -4.913238525390625
    8. 'index' → logprob: -4.913238525390625
    9. '_pos' → logprob: -5.038238525390625
    10. 'idx' → logprob: -5.538238525390625

Token 750: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17674201726913452
    2. ']' → logprob: -2.4267420768737793
    3. ')
' → logprob: -3.4267420768737793
    4. '])' → logprob: -4.051742076873779
    5. ' =' → logprob: -4.926742076873779
    6. '   ' → logprob: -5.301742076873779
    7. '`)' → logprob: -6.426742076873779
    8. '):
' → logprob: -6.676742076873779
    9. 'i' → logprob: -6.926742076873779
    10. '=' → logprob: -7.301742076873779

Token 751: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2772180438041687
    2. 'i' → logprob: -1.9022181034088135
    3. ' i' → logprob: -2.5272181034088135
    4. ' =' → logprob: -4.527217864990234
    5. '=i' → logprob: -7.902217864990234
    6. 'idx' → logprob: -8.152217864990234
    7. '[i' → logprob: -8.277217864990234
    8. '```' → logprob: -8.527217864990234
    9. '
' → logprob: -8.902217864990234
    10. '	i' → logprob: -8.902217864990234

Token 752: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.0032335598953068256
    2. 'idx' → logprob: -6.628233432769775
    3. 'j' → logprob: -7.628233432769775
    4. '   ' → logprob: -7.878233432769775
    5. ' i' → logprob: -8.253233909606934
    6. 'r' → logprob: -8.503233909606934
    7. 'k' → logprob: -9.253233909606934
    8. 'pos' → logprob: -9.253233909606934
    9. 'ind' → logprob: -9.378233909606934
    10. 'l' → logprob: -9.878233909606934

Token 753: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5233094692230225
    2. '=' → logprob: -0.8983094692230225
    3. '=i' → logprob: -8.898309707641602
    4. ')' → logprob: -11.023309707641602
    5. ' ' → logprob: -11.898309707641602
    6. 'x' → logprob: -12.023309707641602
    7. 'i' → logprob: -12.273309707641602
    8. 'n' → logprob: -13.648309707641602
    9. ' =
' → logprob: -13.648309707641602
    10. '=
' → logprob: -13.898309707641602

Token 754: ' bis' (ID: 7204)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.0009138475870713592
    2. ' bis' → logprob: -7.000913619995117
    3. '	b' → logprob: -14.250913619995117
    4. 'b' → logprob: -14.375913619995117
    5. 'bi' → logprob: -14.750913619995117
    6. '   ' → logprob: -15.125913619995117
    7. '
' → logprob: -16.250913619995117
    8. ' ' → logprob: -16.375913619995117
    9. 'bs' → logprob: -17.000913619995117
    10. '```' → logprob: -17.625913619995117

Token 755: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -5.512236498361744e-07
    2. 'e' → logprob: -15.000000953674316
    3. '```' → logprob: -16.875
    4. 'ectl' → logprob: -18.0
    5. 'sect' → logprob: -18.25
    6. '   ' → logprob: -18.625
    7. 'ected' → logprob: -18.625
    8. 'ec' → logprob: -18.875
    9. '`' → logprob: -19.0
    10. 'pect' → logprob: -19.25

Token 756: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.165027217415627e-05
    2. '_right' → logprob: -11.375021934509277
    3. 'Right' → logprob: -12.500021934509277
    4. ' (' → logprob: -13.500021934509277
    5. '_left' → logprob: -13.750021934509277
    6. 'right' → logprob: -14.125021934509277
    7. ')' → logprob: -14.250021934509277
    8. '(
' → logprob: -14.625021934509277
    9. '('' → logprob: -15.250021934509277
    10. '(rr' → logprob: -15.500021934509277

Token 757: 'yyy' (ID: 77541)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00033403540146537125
    2. 'right' → logprob: -8.750333786010742
    3. ')' → logprob: -9.500333786010742
    4. 'yyy' → logprob: -9.875333786010742
    5. ')(' → logprob: -10.750333786010742
    6. '```' → logprob: -11.250333786010742
    7. 'Right' → logprob: -12.250333786010742
    8. '_right' → logprob: -13.625333786010742
    9. 'left' → logprob: -13.625333786010742
    10. '(
' → logprob: -13.625333786010742

Token 758: ',' (ID: 11)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.4249487817287445
    2. '(i' → logprob: -1.674948811531067
    3. ',' → logprob: -2.2999486923217773
    4. '(' → logprob: -3.7999486923217773
    5. ',i' → logprob: -4.049948692321777
    6. ',x' → logprob: -4.299948692321777
    7. ' ,' → logprob: -7.174948692321777
    8. '(y' → logprob: -7.299948692321777
    9. ')' → logprob: -7.299948692321777
    10. ' (' → logprob: -7.299948692321777

Token 759: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0002966127940453589
    2. ' x' → logprob: -8.125296592712402
    3. '(x' → logprob: -15.125296592712402
    4. ')x' → logprob: -15.500296592712402
    5. '	x' → logprob: -17.12529754638672
    6. ')' → logprob: -18.62529754638672
    7. '{x' → logprob: -19.62529754638672
    8. ',x' → logprob: -20.37529754638672
    9. '>x' → logprob: -20.37529754638672
    10. '```' → logprob: -21.12529754638672

Token 760: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007635262445546687
    2. ')
' → logprob: -7.375763416290283
    3. ')-' → logprob: -9.375763893127441
    4. ' )' → logprob: -10.500763893127441
    5. ')i' → logprob: -11.500763893127441
    6. ')#' → logprob: -12.125763893127441
    7. ')return' → logprob: -13.250763893127441
    8. ')

' → logprob: -13.750763893127441
    9. '#' → logprob: -14.000763893127441
    10. ')>' → logprob: -14.125763893127441

Token 761: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.050962865352630615
    2. '<|end|>' → logprob: -4.425962924957275
    3. ' i' → logprob: -4.800962924957275
    4. '-' → logprob: -4.800962924957275
    5. '+' → logprob: -4.925962924957275
    6. 'i' → logprob: -6.050962924957275
    7. '```' → logprob: -6.050962924957275
    8. ' if' → logprob: -6.050962924957275
    9. ' pos' → logprob: -7.175962924957275
    10. 'pos' → logprob: -7.175962924957275

Token 762: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.11106405407190323
    2. '   ' → logprob: -2.3610639572143555
    3. ' a' → logprob: -4.6110639572143555
    4. '
' → logprob: -8.361063957214355
    5. 'if' → logprob: -8.861063957214355
    6. '#' → logprob: -8.986063957214355
    7. 'b' → logprob: -9.236063957214355
    8. '    
' → logprob: -10.236063957214355
    9. '```' → logprob: -10.236063957214355
    10. '	a' → logprob: -10.611063957214355

Token 763: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17977529764175415
    2. '=' → logprob: -1.8047752380371094
    3. '=i' → logprob: -11.67977523803711
    4. ',' → logprob: -11.92977523803711
    5. ' -=' → logprob: -12.55477523803711
    6. '-' → logprob: -12.92977523803711
    7. '=a' → logprob: -12.92977523803711
    8. '-=' → logprob: -13.42977523803711
    9. ' +=' → logprob: -14.05477523803711
    10. ' ' → logprob: -14.17977523803711

Token 764: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.15234312415122986
    2. 'yyy' → logprob: -2.2773430347442627
    3. 'xxx' → logprob: -3.7773430347442627
    4. 'i' → logprob: -4.652343273162842
    5. 'abs' → logprob: -6.152343273162842
    6. 'max' → logprob: -6.652343273162842
    7. 'y' → logprob: -7.027343273162842
    8. 'min' → logprob: -8.027342796325684
    9. 'iii' → logprob: -8.027342796325684
    10. '(x' → logprob: -8.277342796325684

Token 765: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.2811649441719055
    2. '-' → logprob: -1.4061648845672607
    3. '-yyyy' → logprob: -12.65616512298584
    4. ' ' → logprob: -12.78116512298584
    5. '<|end|>' → logprob: -12.90616512298584
    6. ' ' → logprob: -13.90616512298584
    7. ',' → logprob: -14.40616512298584
    8. '-y' → logprob: -14.65616512298584
    9. '
' → logprob: -14.65616512298584
    10. ')' → logprob: -14.90616512298584

Token 766: ' y' (ID: 342)
  Prédit: 'yyy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yyy' → logprob: -0.00020580526324920356
    2. ' y' → logprob: -8.500205993652344
    3. 'yy' → logprob: -13.625205993652344
    4. '  ' → logprob: -15.000205993652344
    5. '   ' → logprob: -15.250205993652344
    6. '(' → logprob: -16.250205993652344
    7. ' ' → logprob: -16.500205993652344
    8. '```' → logprob: -16.500205993652344
    9. 'yyyy' → logprob: -16.625205993652344
    10. ' (' → logprob: -17.125205993652344

Token 767: 'yy' (ID: 7496)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0009704180411063135
    2. 'i' → logprob: -7.750970363616943
    3. 'y' → logprob: -7.750970363616943
    4. 'yyy' → logprob: -9.750970840454102
    5. '[' → logprob: -11.000970840454102
    6. '```' → logprob: -11.625970840454102
    7. 'ppy' → logprob: -11.875970840454102
    8. 'yy' → logprob: -12.250970840454102
    9. '[y' → logprob: -13.125970840454102
    10. '{i' → logprob: -13.625970840454102

Token 768: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.941850526549388e-06
    2. 'i' → logprob: -12.250007629394531
    3. '[' → logprob: -13.000007629394531
    4. '```' → logprob: -15.000007629394531
    5. '[
' → logprob: -15.875007629394531
    6. 'a' → logprob: -15.875007629394531
    7. '`' → logprob: -16.62500762939453
    8. '
' → logprob: -16.62500762939453
    9. '[max' → logprob: -17.25000762939453
    10. '[I' → logprob: -17.37500762939453

Token 769: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00014609156642109156
    2. ' -' → logprob: -9.37514591217041
    3. '[i' → logprob: -10.50014591217041
    4. 'i' → logprob: -11.12514591217041
    5. '[' → logprob: -11.62514591217041
    6. '1' → logprob: -11.75014591217041
    7. '```' → logprob: -13.87514591217041
    8. ']' → logprob: -15.25014591217041
    9. '<|end|>' → logprob: -16.000146865844727
    10. ')' → logprob: -16.125146865844727

Token 770: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.173704271830502e-06
    2. ' ' → logprob: -12.75000286102295
    3. '```' → logprob: -17.125003814697266
    4. '   ' → logprob: -18.125003814697266
    5. '-' → logprob: -18.500003814697266
    6. ']' → logprob: -18.562503814697266
    7. '2' → logprob: -18.812503814697266
    8. '[' → logprob: -19.125003814697266
    9. '<|end|>' → logprob: -19.312503814697266
    10. '۱' → logprob: -19.625003814697266

Token 771: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.008129963040119e-06
    2. ' ' → logprob: -12.625003814697266
    3. '```' → logprob: -15.125003814697266
    4. '   ' → logprob: -16.687503814697266
    5. '2' → logprob: -17.062503814697266
    6. '۱' → logprob: -17.562503814697266
    7. ']' → logprob: -17.687503814697266
    8. '-' → logprob: -17.812503814697266
    9. '<|end|>' → logprob: -17.875003814697266
    10. 'i' → logprob: -17.875003814697266

Token 772: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15570926666259766
    2. ')
' → logprob: -2.0307092666625977
    3. '   ' → logprob: -4.905709266662598
    4. '<|end|>' → logprob: -5.905709266662598
    5. ']' → logprob: -6.905709266662598
    6. ')b' → logprob: -7.280709266662598
    7. 'b' → logprob: -8.280709266662598
    8. '
' → logprob: -8.655709266662598
    9. ']
' → logprob: -8.780709266662598
    10. 'a' → logprob: -9.155709266662598

Token 773: '      ' (ID: 1699)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.387846976518631
    2. '   ' → logprob: -1.1378469467163086
    3. ' b' → logprob: -7.637846946716309
    4. '
' → logprob: -8.137846946716309
    5. '```' → logprob: -9.012846946716309
    6. ' ' → logprob: -10.262846946716309
    7. '	b' → logprob: -10.762846946716309
    8. '  ' → logprob: -12.387846946716309
    9. ';b' → logprob: -12.637846946716309
    10. '       ' → logprob: -12.762846946716309

Token 774: ' #' (ID: 1069)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.023889832198619843
    2. '
' → logprob: -4.023890018463135
    3. '   ' → logprob: -5.273890018463135
    4. ' b' → logprob: -8.148889541625977
    5. '	b' → logprob: -9.398889541625977
    6. ';b' → logprob: -9.773889541625977
    7. '<|end|>' → logprob: -10.148889541625977
    8. ' ' → logprob: -10.523889541625977
    9. '    
' → logprob: -10.523889541625977
    10. ';' → logprob: -10.648889541625977

Token 775: ' Distance' (ID: 53583)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.113867163658142
    2. '<|end|>' → logprob: -1.613867163658142
    3. 'x' → logprob: -2.1138672828674316
    4. 'b' → logprob: -2.1138672828674316
    5. '0' → logprob: -2.8638672828674316
    6. 'i' → logprob: -3.1138672828674316
    7. 'xxx' → logprob: -3.4888672828674316
    8. '...' → logprob: -3.7388672828674316
    9. ')' → logprob: -4.488867282867432
    10. '(' → logprob: -4.988867282867432

Token 776: ' from' (ID: 591)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 777: ' x' (ID: 1215)
  Prédit: 'yyy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'yyy' → logprob: -0.003415935905650258
    2. ' y' → logprob: -5.878416061401367
    3. ' a' → logprob: -9.128416061401367
    4. ' ' → logprob: -9.503416061401367
    5. 'previous' → logprob: -9.628416061401367
    6. ' previous' → logprob: -9.878416061401367
    7. '(' → logprob: -10.253416061401367
    8. 'xxx' → logprob: -10.253416061401367
    9. 'x' → logprob: -10.753416061401367
    10. 'yyyy' → logprob: -10.878416061401367

Token 778: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.7177389860153198
    2. ' -' → logprob: -2.2177391052246094
    3. '<|end|>' → logprob: -2.2177391052246094
    4. 'to' → logprob: -2.3427391052246094
    5. '   ' → logprob: -2.9677391052246094
    6. ' ' → logprob: -2.9677391052246094
    7. '-' → logprob: -3.0927391052246094
    8. 'a' → logprob: -3.7177391052246094
    9. ')' → logprob: -5.092739105224609
    10. '    ' → logprob: -5.342739105224609

Token 779: ' left' (ID: 3561)
  Prédit: 'yyy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'yyy' → logprob: -0.002980790799483657
    2. ' y' → logprob: -5.877980709075928
    3. ' a' → logprob: -10.252981185913086
    4. 'yy' → logprob: -10.752981185913086
    5. '```' → logprob: -11.002981185913086
    6. 'xxx' → logprob: -11.127981185913086
    7. 'yyyy' → logprob: -11.127981185913086
    8. ' (' → logprob: -11.502981185913086
    9. ' ' → logprob: -11.627981185913086
    10. '  ' → logprob: -12.002981185913086

Token 780: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.4046158790588379
    2. ')' → logprob: -2.404615879058838
    3. 'yyy' → logprob: -2.779615879058838
    4. 'neighbor' → logprob: -2.904615879058838
    5. '```' → logprob: -3.654615879058838
    6. ']' → logprob: -4.154615879058838
    7. '[i' → logprob: -4.279615879058838
    8. 'boundary' → logprob: -4.404615879058838
    9. 'interval' → logprob: -4.904615879058838
    10. ' breakpoint' → logprob: -5.154615879058838

Token 781: ' boundary' (ID: 35021)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0972684845328331
    2. ')' → logprob: -3.347268581390381
    3. 'y' → logprob: -3.847268581390381
    4. 'a' → logprob: -4.597268581390381
    5. 'yyy' → logprob: -5.472268581390381
    6. '[' → logprob: -5.722268581390381
    7. 'i' → logprob: -5.972268581390381
    8. 'b' → logprob: -6.347268581390381
    9. '       ' → logprob: -6.722268581390381
    10. '[a' → logprob: -6.722268581390381

Token 782: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20408153533935547
    2. 'b' → logprob: -1.7040815353393555
    3. ' b' → logprob: -6.7040815353393555
    4. '
' → logprob: -7.5790815353393555
    5. '```' → logprob: -7.5790815353393555
    6. ' ' → logprob: -8.829081535339355
    7. '<|end|>' → logprob: -9.954081535339355
    8. 'a' → logprob: -10.079081535339355
    9. ',' → logprob: -10.329081535339355
    10. '  ' → logprob: -10.454081535339355

Token 783: '   ' (ID: 271)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0037373718805611134
    2. '   ' → logprob: -6.003737449645996
    3. ' b' → logprob: -6.753737449645996
    4. '	b' → logprob: -9.503737449645996
    5. '```' → logprob: -11.003737449645996
    6. ',b' → logprob: -13.503737449645996
    7. '    ' → logprob: -15.003737449645996
    8. ' ' → logprob: -15.128737449645996
    9. ',' → logprob: -15.128737449645996
    10. 'a' → logprob: -15.378737449645996

Token 784: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.00010115911572938785
    2. ' b' → logprob: -9.750101089477539
    3. 'a' → logprob: -10.500101089477539
    4. '   ' → logprob: -12.000101089477539
    5. '```' → logprob: -12.000101089477539
    6. 'i' → logprob: -14.500101089477539
    7. 'if' → logprob: -14.875101089477539
    8. ' ' → logprob: -15.375101089477539
    9. '(b' → logprob: -15.500101089477539
    10. '(' → logprob: -15.500101089477539

Token 785: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1269291490316391
    2. ' =' → logprob: -2.1269290447235107
    3. '=b' → logprob: -15.25192928314209
    4. 'b' → logprob: -15.25192928314209
    5. '=
' → logprob: -16.251928329467773
    6. ' ' → logprob: -16.751928329467773
    7. '<|end|>' → logprob: -16.751928329467773
    8. '=user' → logprob: -17.126928329467773
    9. '＝' → logprob: -17.251928329467773
    10. ')' → logprob: -17.501928329467773

Token 786: ' y' (ID: 342)
  Prédit: 'yyy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yyy' → logprob: -0.0010033934377133846
    2. ' y' → logprob: -7.001003265380859
    3. 'yy' → logprob: -9.50100326538086
    4. 'yyyy' → logprob: -12.37600326538086
    5. 'xxx' → logprob: -13.00100326538086
    6. '```' → logprob: -13.37600326538086
    7. 'ypy' → logprob: -13.62600326538086
    8. '   ' → logprob: -13.62600326538086
    9. '  ' → logprob: -14.12600326538086
    10. ' ' → logprob: -14.50100326538086

Token 787: 'yy' (ID: 7496)
  Prédit: 'yy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yy' → logprob: -0.3031691312789917
    2. 'yyy' → logprob: -1.5531691312789917
    3. 'y' → logprob: -3.0531692504882812
    4. '_' → logprob: -7.803169250488281
    5. '```' → logprob: -7.803169250488281
    6. '=' → logprob: -7.803169250488281
    7. ' y' → logprob: -8.178169250488281
    8. '-' → logprob: -8.303169250488281
    9. 'yyyy' → logprob: -8.803169250488281
    10. '   ' → logprob: -9.303169250488281

Token 788: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.941850526549388e-06
    2. '[' → logprob: -12.500007629394531
    3. 'i' → logprob: -12.625007629394531
    4. '[
' → logprob: -14.750007629394531
    5. '```' → logprob: -15.375007629394531
    6. '`' → logprob: -16.75000762939453
    7. '[index' → logprob: -17.62500762939453
    8. '[int' → logprob: -17.75000762939453
    9. '[k' → logprob: -18.00000762939453
    10. '[I' → logprob: -18.12500762939453

Token 789: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00503356009721756
    2. '[i' → logprob: -5.755033493041992
    3. '-' → logprob: -6.880033493041992
    4. ']-' → logprob: -8.005033493041992
    5. 'i' → logprob: -8.380033493041992
    6. '[' → logprob: -8.630033493041992
    7. '```' → logprob: -10.505033493041992
    8. '#' → logprob: -10.880033493041992
    9. ' -' → logprob: -11.255033493041992
    10. ')' → logprob: -12.505033493041992

Token 790: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.575945258140564
    2. ' -' → logprob: -0.825945258140564
    3. '-x' → logprob: -12.450944900512695
    4. 'x' → logprob: -14.450944900512695
    5. ' ' → logprob: -14.950944900512695
    6. '<|end|>' → logprob: -15.575944900512695
    7. '–' → logprob: -15.700944900512695
    8. '#' → logprob: -16.200944900512695
    9. '−' → logprob: -16.200944900512695
    10. ' –' → logprob: -16.700944900512695

Token 791: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -2.8087270038668066e-05
    2. ' x' → logprob: -10.500027656555176
    3. '<|end|>' → logprob: -15.000027656555176
    4. '	x' → logprob: -17.000028610229492
    5. '{x' → logprob: -17.500028610229492
    6. '   ' → logprob: -17.750028610229492
    7. ')x' → logprob: -17.750028610229492
    8. '[' → logprob: -18.000028610229492
    9. ' ' → logprob: -18.125028610229492
    10. '[x' → logprob: -18.250028610229492

Token 792: '          ' (ID: 3550)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0128179294988513
    2. 'ab' → logprob: -5.012817859649658
    3. '
' → logprob: -5.387817859649658
    4. '    
' → logprob: -8.012818336486816
    5. '```' → logprob: -8.262818336486816
    6. '<|end|>' → logprob: -8.512818336486816
    7. '<|end|>' → logprob: -8.637818336486816
    8. ')' → logprob: -9.012818336486816
    9. '  ' → logprob: -9.012818336486816
    10. '#ab' → logprob: -9.512818336486816

Token 793: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010580945760011673
    2. 'ab' → logprob: -5.010581016540527
    3. '
' → logprob: -6.635581016540527
    4. ')' → logprob: -6.760581016540527
    5. ' ab' → logprob: -7.510581016540527
    6. '    
' → logprob: -8.135581016540527
    7. '<|end|>' → logprob: -8.885581016540527
    8. '  ' → logprob: -9.510581016540527
    9. '#ab' → logprob: -9.885581016540527
    10. '```' → logprob: -10.135581016540527

Token 794: ' Distance' (ID: 53583)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.013695396482944489
    2. '   ' → logprob: -4.888695240020752
    3. ' b' → logprob: -6.138695240020752
    4. '<|end|>' → logprob: -7.013695240020752
    5. ' ' → logprob: -7.263695240020752
    6. ')' → logprob: -7.263695240020752
    7. '#' → logprob: -7.513695240020752
    8. '```' → logprob: -7.888695240020752
    9. '  ' → logprob: -8.51369571685791
    10. '1' → logprob: -9.26369571685791

Token 795: ' from' (ID: 591)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 796: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0040830280631780624
    2. ' x' → logprob: -5.504083156585693
    3. 'b' → logprob: -13.379082679748535
    4. 'xxx' → logprob: -14.004082679748535
    5. 'yyy' → logprob: -14.379082679748535
    6. '```' → logprob: -15.129082679748535
    7. 'y' → logprob: -15.254082679748535
    8. 'a' → logprob: -15.254082679748535
    9. '(x' → logprob: -16.00408363342285
    10. '	x' → logprob: -16.00408363342285

Token 797: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.4773257374763489
    2. ' to' → logprob: -0.9773257374763489
    3. '-' → logprob: -6.352325916290283
    4. ' -' → logprob: -6.977325916290283
    5. ')' → logprob: -8.727325439453125
    6. '<|end|>' → logprob: -8.977325439453125
    7. 'To' → logprob: -9.227325439453125
    8. ' ' → logprob: -9.977325439453125
    9. '```' → logprob: -9.977325439453125
    10. '_to' → logprob: -10.727325439453125

Token 798: ' right' (ID: 1849)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7032077312469482
    2. 'yyy' → logprob: -1.4532077312469482
    3. 'right' → logprob: -1.8282077312469482
    4. ' right' → logprob: -2.7032077312469482
    5. ' x' → logprob: -3.8282077312469482
    6. ' the' → logprob: -5.078207969665527
    7. 'xxx' → logprob: -5.203207969665527
    8. 'the' → logprob: -5.328207969665527
    9. ' ' → logprob: -6.828207969665527
    10. ' y' → logprob: -7.203207969665527

Token 799: ' y' (ID: 342)
  Prédit: ' boundary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' boundary' → logprob: -0.7465659976005554
    2. ' y' → logprob: -1.2465660572052002
    3. 'y' → logprob: -1.8715660572052002
    4. 'boundary' → logprob: -3.4965660572052
    5. 'yyy' → logprob: -3.9965660572052
    6. '<|end|>' → logprob: -4.121565818786621
    7. ' neighbor' → logprob: -4.996565818786621
    8. '```' → logprob: -5.621565818786621
    9. ')' → logprob: -5.996565818786621
    10. ' bound' → logprob: -6.621565818786621

Token 800: ' boundary' (ID: 35021)
  Prédit: ' boundary'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' boundary' → logprob: -0.35282477736473083
    2. ')' → logprob: -2.2278246879577637
    3. 'boundary' → logprob: -2.2278246879577637
    4. '<|end|>' → logprob: -2.8528246879577637
    5. '[' → logprob: -4.352824687957764
    6. '[i' → logprob: -5.477824687957764
    7. ']' → logprob: -5.852824687957764
    8. 'bound' → logprob: -7.102824687957764
    9. '#' → logprob: -7.227824687957764
    10. '```' → logprob: -7.977824687957764

Token 801: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7420033812522888
    2. '
' → logprob: -0.9920033812522888
    3. '<|end|>' → logprob: -2.6170034408569336
    4. '   ' → logprob: -3.3670034408569336
    5. '       ' → logprob: -3.8670034408569336
    6. '<|end|>' → logprob: -4.492003440856934
    7. '          ' → logprob: -6.367003440856934
    8. '  ' → logprob: -6.617003440856934
    9. '    
' → logprob: -6.617003440856934
    10. 'if' → logprob: -6.867003440856934

Token 802: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03993886336684227
    2. 'ab' → logprob: -4.164938926696777
    3. '           ' → logprob: -4.289938926696777
    4. '       ' → logprob: -4.789938926696777
    5. '
' → logprob: -6.789938926696777
    6. ' ab' → logprob: -8.664938926696777
    7. '               ' → logprob: -9.164938926696777
    8. '    
' → logprob: -10.039938926696777
    9. '```' → logprob: -10.164938926696777
    10. '
' → logprob: -10.789938926696777

Token 803: ' ab' (ID: 692)
  Prédit: 'ab'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ab' (adapté à ' ab') → logprob: -0.009030976332724094
    2. '   ' → logprob: -5.259030818939209
    3. 'if' → logprob: -5.634030818939209
    4. ' ab' → logprob: -8.634031295776367
    5. '
' → logprob: -12.259031295776367
    6. '       ' → logprob: -12.384031295776367
    7. '#ab' → logprob: -12.384031295776367
    8. 'a' → logprob: -12.509031295776367
    9. '_ab' → logprob: -12.634031295776367
    10. ' if' → logprob: -12.759031295776367

Token 804: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.03808005899190903
    2. '[i' → logprob: -3.2880799770355225
    3. '[' → logprob: -10.413080215454102
    4. 'a' → logprob: -12.413080215454102
    5. '[x' → logprob: -13.538080215454102
    6. '\[' → logprob: -13.913080215454102
    7. '```' → logprob: -13.913080215454102
    8. ' [' → logprob: -14.788080215454102
    9. '   ' → logprob: -15.663080215454102
    10. '[`' → logprob: -15.788080215454102

Token 805: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0001911432045744732
    2. ']' → logprob: -8.750190734863281
    3. '.add' → logprob: -11.375190734863281
    4. '][' → logprob: -12.250190734863281
    5. ' ].' → logprob: -12.250190734863281
    6. '[' → logprob: -12.625190734863281
    7. '[a' → logprob: -13.250190734863281
    8. '[i' → logprob: -13.375190734863281
    9. 'add' → logprob: -13.375190734863281
    10. '   ' → logprob: -14.250190734863281

Token 806: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -4.127333340875339e-06
    2. '.add' → logprob: -12.500003814697266
    3. ' add' → logprob: -14.750003814697266
    4. ')add' → logprob: -18.750003814697266
    5. '_add' → logprob: -19.000003814697266
    6. '	add' → logprob: -19.375003814697266
    7. 'update' → logprob: -20.250003814697266
    8. 'append' → logprob: -21.500003814697266
    9. 'adde' → logprob: -22.125003814697266
    10. '(add' → logprob: -22.250003814697266

Token 807: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.00033546582562848926
    2. 'b' → logprob: -8.000335693359375
    3. '(' → logprob: -17.375335693359375
    4. ' b' → logprob: -18.750335693359375
    5. '	b' → logprob: -19.625335693359375
    6. '(
' → logprob: -20.125335693359375
    7. ')b' → logprob: -21.250335693359375
    8. ' (' → logprob: -21.375335693359375
    9. '[b' → logprob: -23.000335693359375
    10. '((' → logprob: -23.250335693359375

Token 808: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.015305552864447e-05
    2. '<|end|>' → logprob: -10.750060081481934
    3. ' )' → logprob: -10.875060081481934
    4. ')
' → logprob: -11.500060081481934
    5. '   ' → logprob: -11.875060081481934
    6. ')return' → logprob: -14.750060081481934
    7. ')add' → logprob: -15.000060081481934
    8. '       ' → logprob: -15.000060081481934
    9. ')#' → logprob: -15.500060081481934
    10. '<|end|>' → logprob: -15.750060081481934

Token 809: '            ' (ID: 3346)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0821374654769897
    2. '<|end|>' → logprob: -1.2071374654769897
    3. 'for' → logprob: -1.7071374654769897
    4. 'print' → logprob: -2.2071375846862793
    5. '
' → logprob: -3.3321375846862793
    6. 'coordinates' → logprob: -4.957137584686279
    7. '<|end|>' → logprob: -5.457137584686279
    8. 'n' → logprob: -5.457137584686279
    9. '   ' → logprob: -5.957137584686279
    10. 'ab' → logprob: -6.082137584686279

Token 810: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 811: ' For' (ID: 2214)
  Prédit: 'coordinates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coordinates' → logprob: -0.0002831464516930282
    2. ' coordinates' → logprob: -8.375283241271973
    3. 'b' → logprob: -10.250283241271973
    4. 'ab' → logprob: -11.875283241271973
    5. '   ' → logprob: -12.375283241271973
    6. '```' → logprob: -13.625283241271973
    7. 'continue' → logprob: -13.750283241271973
    8. '
' → logprob: -14.375283241271973
    9. '.coordinates' → logprob: -14.375283241271973
    10. 'co' → logprob: -15.000283241271973

Token 812: ' each' (ID: 2454)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00010151672904612496
    2. ' a' → logprob: -9.375101089477539
    3. 'each' → logprob: -11.375101089477539
    4. 'b' → logprob: -13.000101089477539
    5. 'the' → logprob: -13.750101089477539
    6. 'ab' → logprob: -14.375101089477539
    7. '<|end|>' → logprob: -14.750101089477539
    8. ' each' → logprob: -15.125101089477539
    9. 'x' → logprob: -15.250101089477539
    10. '```' → logprob: -16.37510108947754

Token 813: ' '' (ID: 461)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0004408015520311892
    2. ' a' → logprob: -7.75044059753418
    3. 'b' → logprob: -11.87544059753418
    4. '<|end|>' → logprob: -13.25044059753418
    5. 'ab' → logprob: -14.12544059753418
    6. '<|end|>' → logprob: -15.62544059753418
    7. '
' → logprob: -16.00044059753418
    8. 'x' → logprob: -16.00044059753418
    9. '	a' → logprob: -16.75044059753418
    10. '_a' → logprob: -17.25044059753418

Token 814: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00018542143516242504
    2. ' a' → logprob: -8.625185012817383
    3. '   ' → logprob: -12.250185012817383
    4. ' ' → logprob: -15.500185012817383
    5. '       ' → logprob: -15.500185012817383
    6. '```' → logprob: -15.750185012817383
    7. '  ' → logprob: -16.375185012817383
    8. '
' → logprob: -16.625185012817383
    9. '    ' → logprob: -17.000185012817383
    10. 'ab' → logprob: -17.125185012817383

Token 815: '',' (ID: 787)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0924239382147789
    2. ' in' → logprob: -3.092423915863037
    3. ')' → logprob: -3.842423915863037
    4. '),' → logprob: -5.092423915863037
    5. '<|end|>' → logprob: -5.217423915863037
    6. ' ,' → logprob: -6.217423915863037
    7. '   ' → logprob: -6.467423915863037
    8. '',' → logprob: -6.592423915863037
    9. 'in' → logprob: -7.092423915863037
    10. ',a' → logprob: -7.467423915863037

Token 816: ' keep' (ID: 3357)
  Prédit: 'ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ab' → logprob: -0.09110122919082642
    2. ' ab' → logprob: -2.4661011695861816
    3. 'add' → logprob: -7.091101169586182
    4. ' add' → logprob: -8.09110164642334
    5. 'continue' → logprob: -8.59110164642334
    6. 'store' → logprob: -8.71610164642334
    7. '#ab' → logprob: -8.71610164642334
    8. '   ' → logprob: -8.96610164642334
    9. ' store' → logprob: -9.71610164642334
    10. ' continue' → logprob: -9.71610164642334

Token 817: ' unique' (ID: 5746)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.1423114687204361
    2. 'ab' → logprob: -2.5173115730285645
    3. 'the' → logprob: -3.2673115730285645
    4. ' the' → logprob: -5.0173115730285645
    5. 'all' → logprob: -6.1423115730285645
    6. ' b' → logprob: -6.2673115730285645
    7. ' all' → logprob: -7.3923115730285645
    8. 'unique' → logprob: -7.6423115730285645
    9. ' ab' → logprob: -7.7673115730285645
    10. '```' → logprob: -8.267311096191406

Token 818: ' '' (ID: 461)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.12728819251060486
    2. ' b' → logprob: -2.1272881031036377
    3. '   ' → logprob: -8.877287864685059
    4. ' values' → logprob: -9.502287864685059
    5. 'values' → logprob: -9.752287864685059
    6. ' ' → logprob: -10.752287864685059
    7. '       ' → logprob: -11.002287864685059
    8. '           ' → logprob: -11.502287864685059
    9. ' elements' → logprob: -11.752287864685059
    10. '    ' → logprob: -12.127287864685059

Token 819: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.001974669052287936
    2. ' b' → logprob: -6.251974582672119
    3. 'values' → logprob: -10.501975059509277
    4. '   ' → logprob: -12.126975059509277
    5. ' values' → logprob: -12.376975059509277
    6. '```' → logprob: -12.626975059509277
    7. '`' → logprob: -13.376975059509277
    8. ' ' → logprob: -14.376975059509277
    9. '       ' → logprob: -14.501975059509277
    10. ''b' → logprob: -14.626975059509277

Token 820: ''' (ID: 6)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7130519151687622
    2. ')' → logprob: -1.7130519151687622
    3. '')' → logprob: -1.7130519151687622
    4. ' values' → logprob: -2.4630517959594727
    5. 'values' → logprob: -2.9630517959594727
    6. ')s' → logprob: -5.213051795959473
    7. ')'' → logprob: -6.213051795959473
    8. ')set' → logprob: -7.338051795959473
    9. ' set' → logprob: -7.588051795959473
    10. '')
' → logprob: -7.713051795959473

Token 821: ' values' (ID: 4824)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 822: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 823: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 824: ' coordinates' (ID: 27933)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 825: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.003532486269250512
    2. '.' → logprob: -6.003532409667969
    3. '.update' → logprob: -6.878532409667969
    4. '.setdefault' → logprob: -11.253532409667969
    5. ' .' → logprob: -12.378532409667969
    6. '.append' → logprob: -13.378532409667969
    7. '.insert' → logprob: -13.503532409667969
    8. ').' → logprob: -13.628532409667969
    9. '.union' → logprob: -13.753532409667969
    10. 'add' → logprob: -14.128532409667969

Token 826: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -3.106736039626412e-05
    2. '(' → logprob: -10.750031471252441
    3. 'b' → logprob: -11.625031471252441
    4. ' (' → logprob: -14.500031471252441
    5. '((' → logprob: -16.875030517578125
    6. ' b' → logprob: -17.000030517578125
    7. '(
' → logprob: -17.625030517578125
    8. '('' → logprob: -18.750030517578125
    9. '(a' → logprob: -18.875030517578125
    10. '(B' → logprob: -19.000030517578125

Token 827: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.166338137816638e-05
    2. ')
' → logprob: -11.000031471252441
    3. '   ' → logprob: -11.625031471252441
    4. ' )' → logprob: -12.125031471252441
    5. ')}' → logprob: -16.125032424926758
    6. '}' → logprob: -16.750032424926758
    7. '<|end|>' → logprob: -17.000032424926758
    8. ' ' → logprob: -17.125032424926758
    9. ')return' → logprob: -17.125032424926758
    10. '')' → logprob: -17.250032424926758

Token 828: '      ' (ID: 1699)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 829: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 830: ' Store' (ID: 12600)
  Prédit: 'coordinates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coordinates' → logprob: -0.1266026645898819
    2. '<|end|>' → logprob: -2.6266026496887207
    3. ')' → logprob: -4.376602649688721
    4. '#' → logprob: -4.376602649688721
    5. 'b' → logprob: -4.626602649688721
    6. ' coordinates' → logprob: -5.751602649688721
    7. '
' → logprob: -5.876602649688721
    8. '<|end|>' → logprob: -6.501602649688721
    9. '```' → logprob: -6.876602649688721
    10. 'a' → logprob: -7.626602649688721

Token 831: ' all' (ID: 722)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0623508021235466
    2. '<|end|>' → logprob: -3.5623507499694824
    3. ' b' → logprob: -4.312350749969482
    4. ' ' → logprob: -4.812350749969482
    5. ')' → logprob: -5.312350749969482
    6. 'coordinates' → logprob: -5.812350749969482
    7. ' 
' → logprob: -7.062350749969482
    8. ' coordinates' → logprob: -7.437350749969482
    9. '<|end|>' → logprob: -7.437350749969482
    10. ' )' → logprob: -8.81235122680664

Token 832: ' unique' (ID: 5746)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.011178210377693176
    2. ' b' → logprob: -4.511178016662598
    3. ')' → logprob: -10.011178016662598
    4. '<|end|>' → logprob: -10.386178016662598
    5. ')b' → logprob: -10.886178016662598
    6. '   ' → logprob: -11.636178016662598
    7. 'coordinates' → logprob: -12.136178016662598
    8. '```' → logprob: -12.386178016662598
    9. ' ' → logprob: -12.511178016662598
    10. '           ' → logprob: -13.011178016662598

Token 833: ' '' (ID: 461)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.14481505751609802
    2. ' b' → logprob: -2.144814968109131
    3. ')' → logprob: -4.894814968109131
    4. 'coordinates' → logprob: -5.269814968109131
    5. '<|end|>' → logprob: -6.019814968109131
    6. ')b' → logprob: -6.519814968109131
    7. ' coordinates' → logprob: -7.144814968109131
    8. ' )' → logprob: -8.769815444946289
    9. '```' → logprob: -9.519815444946289
    10. ' ' → logprob: -10.019815444946289

Token 834: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.022357219830155373
    2. ' b' → logprob: -3.897357225418091
    3. 'coordinates' → logprob: -6.897356986999512
    4. ')' → logprob: -7.272356986999512
    5. ')b' → logprob: -9.647356986999512
    6. ' coordinates' → logprob: -10.397356986999512
    7. '```' → logprob: -12.397356986999512
    8. ' )' → logprob: -12.647356986999512
    9. '<|end|>' → logprob: -13.647356986999512
    10. ' ' → logprob: -14.022356986999512

Token 835: ''' (ID: 6)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0036499607376754284
    2. 's' → logprob: -5.878650188446045
    3. ' )' → logprob: -8.128649711608887
    4. ')
' → logprob: -9.003649711608887
    5. ')s' → logprob: -9.003649711608887
    6. ' values' → logprob: -9.128649711608887
    7. 'values' → logprob: -9.253649711608887
    8. '_values' → logprob: -10.503649711608887
    9. '<|end|>' → logprob: -10.503649711608887
    10. ' ' → logprob: -11.878649711608887

Token 836: ' values' (ID: 4824)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2868683338165283
    2. '<|end|>' → logprob: -1.4118683338165283
    3. '
' → logprob: -6.786868095397949
    4. ' values' → logprob: -7.161868095397949
    5. '<|end|>' → logprob: -7.286868095397949
    6. ' coordinates' → logprob: -7.411868095397949
    7. ')
' → logprob: -7.536868095397949
    8. 'coordinates' → logprob: -7.786868095397949
    9. 's' → logprob: -7.786868095397949
    10. ' )' → logprob: -8.03686809539795

Token 837: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 838: '#' (ID: 2)
  Prédit: 'coordinates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coordinates' → logprob: -0.13060089945793152
    2. '#' → logprob: -3.130600929260254
    3. 'sorted' → logprob: -3.380600929260254
    4. 'coordinate' → logprob: -4.005600929260254
    5. 'coords' → logprob: -4.380600929260254
    6. 'co' → logprob: -5.130600929260254
    7. 'coord' → logprob: -6.130600929260254
    8. 'b' → logprob: -6.130600929260254
    9. 'import' → logprob: -7.005600929260254
    10. 'compressed' → logprob: -7.130600929260254

Token 839: ' Set' (ID: 3957)
  Prédit: 'coordinates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coordinates' → logprob: -0.09279784560203552
    2. 'sorted' → logprob: -3.4677977561950684
    3. 'coords' → logprob: -3.5927977561950684
    4. 'coordinate' → logprob: -4.217797756195068
    5. 'co' → logprob: -5.342797756195068
    6. '#' → logprob: -5.342797756195068
    7. 'b' → logprob: -5.842797756195068
    8. 'coord' → logprob: -6.967797756195068
    9. 'compressed' → logprob: -7.342797756195068
    10. 'c' → logprob: -7.717797756195068

Token 840: ' up' (ID: 869)
  Prédit: 'coordinates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coordinates' → logprob: -0.019688282161951065
    2. 's' → logprob: -5.519688129425049
    3. 'coords' → logprob: -5.894688129425049
    4. 'b' → logprob: -5.894688129425049
    5. 'sorted' → logprob: -6.144688129425049
    6. ' coordinates' → logprob: -6.269688129425049
    7. 'co' → logprob: -6.519688129425049
    8. 'coordinate' → logprob: -6.519688129425049
    9. '_coordinates' → logprob: -6.519688129425049
    10. 'coord' → logprob: -8.144688606262207

Token 841: ' BIT' (ID: 52185)
  Prédit: 'coordinates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coordinates' → logprob: -0.9434828162193298
    2. 'coords' → logprob: -1.8184828758239746
    3. 'sorted' → logprob: -1.9434828758239746
    4. 'coord' → logprob: -2.3184828758239746
    5. 'coordinate' → logprob: -2.4434828758239746
    6. 'b' → logprob: -2.8184828758239746
    7. 'co' → logprob: -4.068482875823975
    8. 'compressed' → logprob: -4.318482875823975
    9. 'c' → logprob: -4.818482875823975
    10. 'bit' → logprob: -5.443482875823975

Token 842: ' indexing' (ID: 105989)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.5991157293319702
    2. 'size' → logprob: -0.9741157293319702
    3. 'coords' → logprob: -3.7241158485412598
    4. 'b' → logprob: -4.22411584854126
    5. 'coord' → logprob: -4.34911584854126
    6. 'coordinates' → logprob: -4.59911584854126
    7. 'coordinate' → logprob: -5.72411584854126
    8. 'co' → logprob: -6.09911584854126
    9. 'sz' → logprob: -6.34911584854126
    10. 'max' → logprob: -7.22411584854126

Token 843: ' for' (ID: 395)
  Prédit: 'coords'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coords' → logprob: -0.7958835959434509
    2. 'coordinates' → logprob: -1.0458836555480957
    3. 'coord' → logprob: -2.7958836555480957
    4. 'b' → logprob: -3.0458836555480957
    5. 'coordinate' → logprob: -3.0458836555480957
    6. 'co' → logprob: -4.545883655548096
    7. '=' → logprob: -4.795883655548096
    8. 'sorted' → logprob: -4.920883655548096
    9. ' =' → logprob: -5.295883655548096
    10. '
' → logprob: -5.295883655548096

Token 844: ' '' (ID: 461)
  Prédit: 'coordinates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coordinates' → logprob: -0.03498050197958946
    2. 'len' → logprob: -4.409980297088623
    3. 'sorted' → logprob: -5.034980297088623
    4. 'b' → logprob: -5.034980297088623
    5. 'coordinate' → logprob: -5.034980297088623
    6. 'y' → logprob: -7.659980297088623
    7. 'compressed' → logprob: -7.784980297088623
    8. 'bit' → logprob: -8.409980773925781
    9. 'coords' → logprob: -8.534980773925781
    10. 'co' → logprob: -8.659980773925781

Token 845: 'b' (ID: 65)
  Prédit: 'coordinates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coordinates' → logprob: -0.08165469020605087
    2. 'b' → logprob: -2.5816547870635986
    3. 'len' → logprob: -6.5816545486450195
    4. ' coordinates' → logprob: -7.8316545486450195
    5. 'sorted' → logprob: -8.08165454864502
    6. 'coordinate' → logprob: -8.58165454864502
    7. 'co' → logprob: -9.08165454864502
    8. ' b' → logprob: -9.70665454864502
    9. ''b' → logprob: -10.08165454864502
    10. '```' → logprob: -10.33165454864502

Token 846: ''' (ID: 6)
  Prédit: '_values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_values' → logprob: -0.3178546726703644
    2. 's' → logprob: -2.692854642868042
    3. ' =' → logprob: -2.817854642868042
    4. '_list' → logprob: -2.817854642868042
    5. ')' → logprob: -3.317854642868042
    6. '_vals' → logprob: -4.567854881286621
    7. '_coords' → logprob: -4.942854881286621
    8. 'values' → logprob: -5.192854881286621
    9. '_positions' → logprob: -5.192854881286621
    10. '_indices' → logprob: -5.442854881286621

Token 847: ' values' (ID: 4824)
  Prédit: 'coords'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coords' → logprob: -1.252943754196167
    2. 'coordinates' → logprob: -1.377943754196167
    3. 'b' → logprob: -1.502943754196167
    4. 'sorted' → logprob: -3.002943754196167
    5. 'size' → logprob: -3.127943754196167
    6. '=' → logprob: -3.502943754196167
    7. 'coord' → logprob: -3.627943754196167
    8. ' =' → logprob: -3.877943754196167
    9. '
' → logprob: -4.002943992614746
    10. 'coordinate' → logprob: -4.002943992614746

Token 848: '.' (ID: 13)
  Prédit: 'coordinates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coordinates' → logprob: -1.2186332941055298
    2. 'coords' → logprob: -1.3436332941055298
    3. 'sorted' → logprob: -1.8436332941055298
    4. 'b' → logprob: -2.2186331748962402
    5. 'coord' → logprob: -2.5936331748962402
    6. 'coordinate' → logprob: -2.5936331748962402
    7. 'co' → logprob: -4.34363317489624
    8. 'compressed' → logprob: -5.84363317489624
    9. 'idx' → logprob: -5.96863317489624
    10. 'index' → logprob: -6.34363317489624

Token 849: ' Index' (ID: 14580)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -1.1425741910934448
    2. 'coords' → logprob: -1.3925741910934448
    3. 'coordinates' → logprob: -1.7675741910934448
    4. 'b' → logprob: -1.8925741910934448
    5. 'coordinate' → logprob: -3.2675743103027344
    6. 'coord' → logprob: -3.3925743103027344
    7. 'idx' → logprob: -5.017574310302734
    8. 'co' → logprob: -5.017574310302734
    9. 'index' → logprob: -5.642574310302734
    10. 'bs' → logprob: -5.767574310302734

Token 850: 'ing' (ID: 289)
  Prédit: '_map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_map' → logprob: -0.08959120512008667
    2. '_mapping' → logprob: -3.5895912647247314
    3. ' =' → logprob: -4.089591026306152
    4. '_b' → logprob: -4.214591026306152
    5. 'es' → logprob: -4.339591026306152
    6. 'er' → logprob: -5.714591026306152
    7. '_by' → logprob: -6.339591026306152
    8. 'ed' → logprob: -6.464591026306152
    9. 'map' → logprob: -6.464591026306152
    10. '=' → logprob: -6.589591026306152

Token 851: ' is' (ID: 382)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.310422420501709
    2. 'starts' → logprob: -1.435422420501709
    3. '_map' → logprob: -1.685422420501709
    4. ' starts' → logprob: -2.935422420501709
    5. ' =' → logprob: -3.310422420501709
    6. '_mapping' → logprob: -3.435422420501709
    7. '_list' → logprob: -3.685422420501709
    8. 'coordinates' → logprob: -4.185422420501709
    9. 'by' → logprob: -4.310422420501709
    10. 'from' → logprob: -4.435422420501709

Token 852: ' shifted' (ID: 58644)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.899433434009552
    2. 'based' → logprob: -1.0244333744049072
    3. 'from' → logprob: -1.8994333744049072
    4. ' ' → logprob: -3.5244333744049072
    5. 'sorted' → logprob: -4.399433612823486
    6. '0' → logprob: -4.649433612823486
    7. 'by' → logprob: -4.649433612823486
    8. 'coordinate' → logprob: -5.399433612823486
    9. 'starting' → logprob: -5.649433612823486
    10. 'compressed' → logprob: -6.024433612823486

Token 853: ' by' (ID: 656)
  Prédit: 'by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'by' → logprob: -0.05564447492361069
    2. '=' → logprob: -3.6806445121765137
    3. ' by' → logprob: -4.430644512176514
    4. '+' → logprob: -5.305644512176514
    5. '1' → logprob: -5.305644512176514
    6. '   ' → logprob: -5.805644512176514
    7. 'to' → logprob: -7.305644512176514
    8. 'b' → logprob: -7.430644512176514
    9. 'from' → logprob: -7.555644512176514
    10. ' =' → logprob: -7.805644512176514

Token 854: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.490809417096898e-05
    2. ' ' → logprob: -10.000055313110352
    3. 'one' → logprob: -12.750055313110352
    4. '+' → logprob: -12.875055313110352
    5. '   ' → logprob: -13.875055313110352
    6. '2' → logprob: -14.000055313110352
    7. ' one' → logprob: -14.500055313110352
    8. '
' → logprob: -15.125055313110352
    9. '```' → logprob: -15.125055313110352
    10. '`' → logprob: -16.00005531311035

Token 855: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.451116051815916e-05
    2. ' ' → logprob: -10.875024795532227
    3. 'one' → logprob: -13.375024795532227
    4. '+' → logprob: -13.750024795532227
    5. '   ' → logprob: -14.375024795532227
    6. '2' → logprob: -14.500024795532227
    7. '0' → logprob: -14.625024795532227
    8. '```' → logprob: -15.125024795532227
    9. '
' → logprob: -15.500024795532227
    10. '`' → logprob: -15.625024795532227

Token 856: ' to' (ID: 316)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.781534731388092
    2. '=' → logprob: -1.2815346717834473
    3. 'coordinates' → logprob: -1.9065346717834473
    4. 'b' → logprob: -3.4065346717834473
    5. 'size' → logprob: -4.031534671783447
    6. 'coords' → logprob: -4.156534671783447
    7. '+' → logprob: -4.656534671783447
    8. '
' → logprob: -4.781534671783447
    9. 'co' → logprob: -5.406534671783447
    10. '_coordinates' → logprob: -5.781534671783447

Token 857: ' allow' (ID: 3763)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.9278175234794617
    2. 'account' → logprob: -1.5528175830841064
    3. ' accommodate' → logprob: -1.9278175830841064
    4. 'allow' → logprob: -2.4278175830841064
    5. ' account' → logprob: -2.6778175830841064
    6. '1' → logprob: -3.9278175830841064
    7. ' avoid' → logprob: -4.302817344665527
    8. 'avoid' → logprob: -4.427817344665527
    9. 'handle' → logprob: -4.802817344665527
    10. ' len' → logprob: -5.177817344665527

Token 858: ' for' (ID: 395)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.029388470575213432
    2. 'one' → logprob: -5.029388427734375
    3. ' ' → logprob: -5.404388427734375
    4. 'for' → logprob: -5.529388427734375
    5. '+' → logprob: -5.779388427734375
    6. ' one' → logprob: -6.029388427734375
    7. 'coordinates' → logprob: -6.154388427734375
    8. '```' → logprob: -6.654388427734375
    9. 'len' → logprob: -6.904388427734375
    10. ' for' → logprob: -7.404388427734375

Token 859: ' '' (ID: 461)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.09469018876552582
    2. '0' → logprob: -2.7196900844573975
    3. '```' → logprob: -5.219690322875977
    4. 'len' → logprob: -5.594690322875977
    5. 'sent' → logprob: -5.594690322875977
    6. 'bis' → logprob: -5.844690322875977
    7. 'coordinate' → logprob: -5.969690322875977
    8. 'binary' → logprob: -6.719690322875977
    9. 'dummy' → logprob: -7.094690322875977
    10. 'one' → logprob: -7.469690322875977

Token 860: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10804838687181473
    2. 'len' → logprob: -2.733048439025879
    3. 'coordinates' → logprob: -4.233048439025879
    4. 'None' → logprob: -5.483048439025879
    5. '0' → logprob: -5.858048439025879
    6. 'coordinate' → logprob: -5.983048439025879
    7. 'offset' → logprob: -6.108048439025879
    8. ' ' → logprob: -6.233048439025879
    9. 'bis' → logprob: -7.233048439025879
    10. 'sent' → logprob: -7.358048439025879

Token 861: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5334452390670776
    2. ')' → logprob: -1.7834452390670776
    3. 'based' → logprob: -2.158445358276367
    4. '-based' → logprob: -2.408445358276367
    5. ')'' → logprob: -4.158445358276367
    6. '')' → logprob: -5.908445358276367
    7. '
' → logprob: -6.033445358276367
    8. '+' → logprob: -6.283445358276367
    9. ''
' → logprob: -6.408445358276367
    10. ' based' → logprob: -6.408445358276367

Token 862: ' sum' (ID: 4215)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.510532021522522
    2. '<|end|>' → logprob: -1.760532021522522
    3. 'based' → logprob: -2.1355319023132324
    4. 'offset' → logprob: -2.3855319023132324
    5. ' for' → logprob: -2.3855319023132324
    6. 'coordinates' → logprob: -2.8855319023132324
    7. '-based' → logprob: -3.1355319023132324
    8. 'index' → logprob: -3.2605319023132324
    9. 'for' → logprob: -3.5105319023132324
    10. ' coordinates' → logprob: -3.8855319023132324

Token 863: ' positions' (ID: 15897)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.41775211691856384
    2. ' =' → logprob: -1.4177521467208862
    3. '+' → logprob: -3.6677520275115967
    4. 'coordinates' → logprob: -3.7927520275115967
    5. '_coordinates' → logprob: -4.542752265930176
    6. 'b' → logprob: -4.792752265930176
    7. '
' → logprob: -4.792752265930176
    8. '   ' → logprob: -5.542752265930176
    9. ')' → logprob: -5.917752265930176
    10. '```' → logprob: -6.292752265930176

Token 864: '.
' (ID: 558)
  Prédit: 'coords'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coords' → logprob: -0.8461005687713623
    2. 'coordinates' → logprob: -1.7211005687713623
    3. 'coord' → logprob: -1.9711005687713623
    4. 'size' → logprob: -2.7211005687713623
    5. 'coordinate' → logprob: -3.0961005687713623
    6. 'b' → logprob: -3.0961005687713623
    7. ' =' → logprob: -3.2211005687713623
    8. '=' → logprob: -4.096100807189941
    9. 'co' → logprob: -4.471100807189941
    10. 'bit' → logprob: -5.096100807189941

Token 865: '#' (ID: 2)
  Prédit: 'coords'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coords' → logprob: -1.217414140701294
    2. 'sorted' → logprob: -1.717414140701294
    3. 'b' → logprob: -1.842414140701294
    4. 'coord' → logprob: -2.092414140701294
    5. 'coordinates' → logprob: -2.217414140701294
    6. 'coordinate' → logprob: -3.092414140701294
    7. 'co' → logprob: -4.092413902282715
    8. 'idx' → logprob: -4.217413902282715
    9. 'size' → logprob: -4.842413902282715
    10. 'c' → logprob: -4.842413902282715

Token 866: ' Map' (ID: 7343)
  Prédit: 'coordinates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coordinates' → logprob: -1.244289517402649
    2. 'coords' → logprob: -1.619289517402649
    3. 'b' → logprob: -1.869289517402649
    4. 'sorted' → logprob: -2.1192893981933594
    5. 'coord' → logprob: -2.3692893981933594
    6. 'coordinate' → logprob: -2.6192893981933594
    7. 'idx' → logprob: -3.8692893981933594
    8. 'index' → logprob: -4.619289398193359
    9. 'co' → logprob: -4.744289398193359
    10. 'compressed' → logprob: -5.994289398193359

Token 867: ' each' (ID: 2454)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.022567620500922203
    2. '_b' → logprob: -4.1475677490234375
    3. 'coordinates' → logprob: -5.7725677490234375
    4. 'coordinate' → logprob: -6.8975677490234375
    5. 'coords' → logprob: -7.6475677490234375
    6. ' =' → logprob: -7.8975677490234375
    7. '=' → logprob: -8.022567749023438
    8. 'coord' → logprob: -8.522567749023438
    9. '_coordinates' → logprob: -8.647567749023438
    10. 'value' → logprob: -8.772567749023438

Token 868: ' sorted' (ID: 20099)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.03315858542919159
    2. 'coordinate' → logprob: -3.533158540725708
    3. ' b' → logprob: -6.158158779144287
    4. ' coordinate' → logprob: -7.783158779144287
    5. 'coord' → logprob: -7.783158779144287
    6. 'value' → logprob: -8.783158302307129
    7. 'co' → logprob: -9.783158302307129
    8. '   ' → logprob: -9.908158302307129
    9. 'coordinates' → logprob: -9.908158302307129
    10. 'c' → logprob: -10.033158302307129

Token 869: ' unique' (ID: 5746)
  Prédit: 'coordinates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coordinates' → logprob: -0.5831863880157471
    2. 'coordinate' → logprob: -0.9581863880157471
    3. 'b' → logprob: -3.458186388015747
    4. '_coordinate' → logprob: -4.333186149597168
    5. '_coordinates' → logprob: -4.708186149597168
    6. '_b' → logprob: -5.958186149597168
    7. 'co' → logprob: -7.208186149597168
    8. 'coord' → logprob: -7.333186149597168
    9. 'value' → logprob: -8.333186149597168
    10. '```' → logprob: -8.958186149597168

Token 870: ' '' (ID: 461)
  Prédit: 'coordinates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coordinates' → logprob: -0.24773333966732025
    2. 'coordinate' → logprob: -1.7477333545684814
    3. 'b' → logprob: -3.1227333545684814
    4. '_coordinate' → logprob: -7.622733116149902
    5. '_b' → logprob: -7.997733116149902
    6. '_coordinates' → logprob: -8.747733116149902
    7. 'coord' → logprob: -9.497733116149902
    8. 'co' → logprob: -9.622733116149902
    9. 'value' → logprob: -9.997733116149902
    10. '`' → logprob: -11.372733116149902

Token 871: 'b' (ID: 65)
  Prédit: 'coordinates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coordinates' → logprob: -0.03085833229124546
    2. 'b' → logprob: -3.530858278274536
    3. 'coordinate' → logprob: -7.155858516693115
    4. '_coordinates' → logprob: -8.530858039855957
    5. '_b' → logprob: -10.405858039855957
    6. 'list' → logprob: -10.655858039855957
    7. 'sorted' → logprob: -10.655858039855957
    8. 'co' → logprob: -11.280858039855957
    9. ' coordinates' → logprob: -11.405858039855957
    10. 'coord' → logprob: -11.780858039855957

Token 872: ''' (ID: 6)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0158642530441284
    2. '_values' → logprob: -2.015864372253418
    3. '_value' → logprob: -2.265864372253418
    4. 'value' → logprob: -2.390864372253418
    5. ']' → logprob: -2.890864372253418
    6. ''' → logprob: -3.140864372253418
    7. '_b' → logprob: -3.265864372253418
    8. 'coordinate' → logprob: -3.640864372253418
    9. 'b' → logprob: -3.890864372253418
    10. ')_' → logprob: -4.015864372253418

Token 873: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.8899134993553162
    2. '=' → logprob: -1.514913558959961
    3. 'b' → logprob: -2.514913558959961
    4. ' =' → logprob: -2.639913558959961
    5. 'coordinate' → logprob: -2.639913558959961
    6. '_b' → logprob: -3.264913558959961
    7. '_value' → logprob: -3.264913558959961
    8. '_values' → logprob: -4.389913558959961
    9. '_to' → logprob: -4.764913558959961
    10. 'to' → logprob: -4.889913558959961

Token 874: ' to' (ID: 316)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.019712010398507118
    2. ' =' → logprob: -4.894711971282959
    3. 'b' → logprob: -5.019711971282959
    4. 'to' → logprob: -5.519711971282959
    5. '=b' → logprob: -7.144711971282959
    6. ' to' → logprob: -8.894712448120117
    7. 'coordinates' → logprob: -9.769712448120117
    8. '[b' → logprob: -9.769712448120117
    9. ',' → logprob: -10.394712448120117
    10. '_b' → logprob: -10.394712448120117

Token 875: ' a' (ID: 261)
  Prédit: ' its'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' its' → logprob: -0.8649280667304993
    2. 'its' → logprob: -0.9899280667304993
    3. 'index' → logprob: -2.2399280071258545
    4. 'an' → logprob: -2.9899280071258545
    5. '{' → logprob: -4.114928245544434
    6. 'b' → logprob: -4.489928245544434
    7. 'idx' → logprob: -5.114928245544434
    8. ' an' → logprob: -5.864928245544434
    9. 'their' → logprob: -5.989928245544434
    10. 'coordinate' → logprob: -5.989928245544434

Token 876: ' unique' (ID: 5746)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.4852680563926697
    2. '1' → logprob: -1.3602681159973145
    3. 'coordinate' → logprob: -2.7352681159973145
    4. 'b' → logprob: -4.1102681159973145
    5. '{' → logprob: -4.4852681159973145
    6. 'idx' → logprob: -5.1102681159973145
    7. ' ' → logprob: -5.1102681159973145
    8. ' index' → logprob: -5.2352681159973145
    9. ' coordinate' → logprob: -5.4852681159973145
    10. 'n' → logprob: -5.4852681159973145

Token 877: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.03981171175837517
    2. ' index' → logprob: -3.789811611175537
    3. '1' → logprob: -4.789811611175537
    4. 'coordinate' → logprob: -5.289811611175537
    5. 'b' → logprob: -6.289811611175537
    6. 'id' → logprob: -8.164812088012695
    7. ' coordinate' → logprob: -8.289812088012695
    8. 'integer' → logprob: -8.539812088012695
    9. 'idx' → logprob: -9.164812088012695
    10. 'position' → logprob: -9.414812088012695

Token 878: ' starting' (ID: 8601)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.583720862865448
    2. '=' → logprob: -1.4587209224700928
    3. ' =' → logprob: -2.0837209224700928
    4. 'coordinates' → logprob: -3.4587209224700928
    5. 'coord' → logprob: -4.208720684051514
    6. 'coordinate' → logprob: -4.208720684051514
    7. 'coords' → logprob: -4.208720684051514
    8. '=
' → logprob: -5.583720684051514
    9. '=b' → logprob: -7.333720684051514
    10. 'co' → logprob: -7.458720684051514

Token 879: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.030860643833875656
    2. 'at' → logprob: -4.155860424041748
    3. '=' → logprob: -4.280860424041748
    4. '1' → logprob: -7.530860424041748
    5. ' from' → logprob: -8.655860900878906
    6. ' at' → logprob: -9.405860900878906
    7. '0' → logprob: -9.780860900878906
    8. '+' → logprob: -11.155860900878906
    9. '```' → logprob: -11.905860900878906
    10. 'with' → logprob: -12.155860900878906

Token 880: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.045823566731997e-05
    2. '0' → logprob: -11.375020027160645
    3. ' ' → logprob: -12.250020027160645
    4. '
' → logprob: -13.000020027160645
    5. '```' → logprob: -13.750020027160645
    6. '   ' → logprob: -14.250020027160645
    7. '`' → logprob: -16.25002098083496
    8. '``' → logprob: -17.31252098083496
    9. '2' → logprob: -17.43752098083496
    10. 'def' → logprob: -18.18752098083496

Token 881: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.153795766294934e-06
    2. '0' → logprob: -12.500005722045898
    3. ' ' → logprob: -13.625005722045898
    4. '```' → logprob: -14.875005722045898
    5. '   ' → logprob: -15.000005722045898
    6. '2' → logprob: -16.1250057220459
    7. '=' → logprob: -16.1250057220459
    8. '
' → logprob: -16.2500057220459
    9. 'def' → logprob: -17.0625057220459
    10. '`' → logprob: -17.1250057220459

Token 882: '
' (ID: 198)
  Prédit: 'coordinates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coordinates' → logprob: -0.07765395939350128
    2. 'b' → logprob: -4.202653884887695
    3. 'coords' → logprob: -4.327653884887695
    4. '=' → logprob: -4.452653884887695
    5. 'coordinate' → logprob: -4.702653884887695
    6. 'co' → logprob: -4.827653884887695
    7. '
' → logprob: -4.952653884887695
    8. ' =' → logprob: -5.452653884887695
    9. 'coord' → logprob: -5.577653884887695
    10. '_coordinates' → logprob: -7.077653884887695

Token 883: 'cor' (ID: 11111)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.8898158073425293
    2. 'coord' → logprob: -2.1398158073425293
    3. 'coordinate' → logprob: -2.2648158073425293
    4. 'idx' → logprob: -2.3898158073425293
    5. 'coords' → logprob: -3.2648158073425293
    6. 'index' → logprob: -3.2648158073425293
    7. 'co' → logprob: -3.3898158073425293
    8. 'coordinates' → logprob: -3.6398158073425293
    9. 'sorted' → logprob: -4.264815807342529
    10. 'pos' → logprob: -4.514815807342529

Token 884: '_dict' (ID: 11295)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3828226625919342
    2. 'respond' → logprob: -2.3828227519989014
    3. 'ds' → logprob: -2.8828227519989014
    4. ' =' → logprob: -3.3828227519989014
    5. 'dict' → logprob: -4.132822513580322
    6. 'ordinates' → logprob: -4.382822513580322
    7. 'ordinate' → logprob: -4.507822513580322
    8. 's' → logprob: -4.757822513580322
    9. 'o' → logprob: -4.757822513580322
    10. 'rect' → logprob: -4.882822513580322

Token 885: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.348456472158432
    2. '=' → logprob: -1.2234565019607544
    3. '={' → logprob: -12.598456382751465
    4. '={'' → logprob: -12.973456382751465
    5. '={}' → logprob: -13.348456382751465
    6. ',' → logprob: -13.723456382751465
    7. ' ={' → logprob: -13.848456382751465
    8. '={"' → logprob: -14.723456382751465
    9. '＝' → logprob: -14.848456382751465
    10. '[' → logprob: -15.098456382751465

Token 886: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.002077813260257244
    2. ' {' → logprob: -6.377077579498291
    3. '{}' → logprob: -8.25207805633545
    4. '{i' → logprob: -10.00207805633545
    5. '{x' → logprob: -10.37707805633545
    6. '{id' → logprob: -11.62707805633545
    7. 'default' → logprob: -11.75207805633545
    8. 'dict' → logprob: -11.75207805633545
    9. '{k' → logprob: -12.62707805633545
    10. ' defaultdict' → logprob: -13.25207805633545

Token 887: 'b' (ID: 65)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.582119345664978
    2. 'b' → logprob: -0.957119345664978
    3. 'c' → logprob: -3.4571194648742676
    4. 'k' → logprob: -4.457119464874268
    5. 'val' → logprob: -5.082119464874268
    6. 'x' → logprob: -6.457119464874268
    7. 'coord' → logprob: -6.707119464874268
    8. 'bv' → logprob: -6.832119464874268
    9. 'e' → logprob: -7.207119464874268
    10. 'cb' → logprob: -7.332119464874268

Token 888: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.018288305029273033
    2. ':b' → logprob: -4.1432881355285645
    3. ':i' → logprob: -6.1432881355285645
    4. ' :' → logprob: -9.518288612365723
    5. '   ' → logprob: -11.143288612365723
    6. ':k' → logprob: -12.018288612365723
    7. ':index' → logprob: -12.393288612365723
    8. ':x' → logprob: -14.143288612365723
    9. ':v' → logprob: -14.393288612365723
    10. 'b' → logprob: -14.518288612365723

Token 889: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.06486870348453522
    2. 'idx' → logprob: -2.814868688583374
    3. ' i' → logprob: -6.689868927001953
    4. 'index' → logprob: -7.189868927001953
    5. ' idx' → logprob: -7.564868927001953
    6. 'b' → logprob: -8.439868927001953
    7. '(i' → logprob: -10.189868927001953
    8. 'v' → logprob: -10.314868927001953
    9. 'bis' → logprob: -10.939868927001953
    10. 'ii' → logprob: -10.939868927001953

Token 890: ' for' (ID: 395)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.09233861416578293
    2. 'for' → logprob: -2.7173385620117188
    3. ' for' → logprob: -3.9673385620117188
    4. ' +' → logprob: -5.842338562011719
    5. ':' → logprob: -8.592338562011719
    6. ' ' → logprob: -9.467338562011719
    7. '   ' → logprob: -9.967338562011719
    8. '2' → logprob: -11.342338562011719
    9. '  ' → logprob: -13.592338562011719
    10. '+b' → logprob: -13.717338562011719

Token 891: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0635341927409172
    2. 'b' → logprob: -2.8135342597961426
    3. ' i' → logprob: -6.563534259796143
    4. ' b' → logprob: -9.688533782958984
    5. ',' → logprob: -10.188533782958984
    6. '1' → logprob: -11.938533782958984
    7. ',i' → logprob: -11.938533782958984
    8. '2' → logprob: -12.251033782958984
    9. ' ' → logprob: -12.376033782958984
    10. '(i' → logprob: -12.501033782958984

Token 892: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12722541391849518
    2. 'b' → logprob: -3.002225399017334
    3. 'i' → logprob: -3.502225399017334
    4. 'in' → logprob: -3.752225399017334
    5. ',b' → logprob: -4.627225399017334
    6. ' in' → logprob: -5.627225399017334
    7. ' i' → logprob: -6.752225399017334
    8. ',i' → logprob: -7.377225399017334
    9. ' ,' → logprob: -7.627225399017334
    10. ' b' → logprob: -8.002225875854492

Token 893: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0007997421780601144
    2. ' b' → logprob: -7.250799655914307
    3. '(b' → logprob: -9.500800132751465
    4. 'in' → logprob: -11.875800132751465
    5. ' (' → logprob: -12.875800132751465
    6. ' in' → logprob: -13.000800132751465
    7. '(' → logprob: -13.125800132751465
    8. '_b' → logprob: -14.500800132751465
    9. '	b' → logprob: -15.625800132751465
    10. ',b' → logprob: -15.750800132751465

Token 894: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.4741089344024658
    2. ' in' → logprob: -0.9741089344024658
    3. ',' → logprob: -10.724108695983887
    4. 'n' → logprob: -11.974108695983887
    5. ' ' → logprob: -13.349108695983887
    6. '<|end|>' → logprob: -14.599108695983887
    7. '	in' → logprob: -15.474108695983887
    8. 'b' → logprob: -15.974108695983887
    9. '```' → logprob: -16.224109649658203
    10. 'enumer' → logprob: -16.474109649658203

Token 895: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.005234594456851482
    2. ' enumerate' → logprob: -5.255234718322754
    3. 'enum' → logprob: -15.130234718322754
    4. '```' → logprob: -15.255234718322754
    5. 'b' → logprob: -16.755233764648438
    6. '
' → logprob: -17.005233764648438
    7. 'range' → logprob: -17.130233764648438
    8. 'in' → logprob: -17.255233764648438
    9. 'value' → logprob: -17.255233764648438
    10. '{' → logprob: -17.630233764648438

Token 896: '(sorted' (ID: 92488)
  Prédit: '(sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sorted' → logprob: -0.0706300288438797
    2. '(co' → logprob: -2.6956300735473633
    3. 'sorted' → logprob: -7.320630073547363
    4. 'coordinates' → logprob: -11.070630073547363
    5. '(' → logprob: -12.195630073547363
    6. 'co' → logprob: -12.445630073547363
    7. '(Co' → logprob: -12.820630073547363
    8. '(coord' → logprob: -13.695630073547363
    9. '(range' → logprob: -14.695630073547363
    10. '([' → logprob: -14.945630073547363

Token 897: '(co' (ID: 41772)
  Prédit: '(co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(co' → logprob: -0.011055483482778072
    2. 'coordinates' → logprob: -4.5110554695129395
    3. 'co' → logprob: -11.886055946350098
    4. ' coordinates' → logprob: -15.261055946350098
    5. '   ' → logprob: -16.01105499267578
    6. '_coordinates' → logprob: -16.13605499267578
    7. ')' → logprob: -16.13605499267578
    8. '.coordinates' → logprob: -16.76105499267578
    9. 'coordinate' → logprob: -17.26105499267578
    10. 'Coordinates' → logprob: -17.51105499267578

Token 898: 'ordinates' (ID: 15343)
  Prédit: 'ordinates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ordinates' → logprob: -0.006748058367520571
    2. 'coordinates' → logprob: -5.006748199462891
    3. 'ordin' → logprob: -11.25674819946289
    4. 'ordinate' → logprob: -11.75674819946289
    5. 'rd' → logprob: -12.38174819946289
    6. '_coordinates' → logprob: -12.75674819946289
    7. '{' → logprob: -13.75674819946289
    8. 'or' → logprob: -14.00674819946289
    9. '.coordinates' → logprob: -14.38174819946289
    10. 'o' → logprob: -14.75674819946289

Token 899: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00031580092036165297
    2. ',start' → logprob: -8.87531566619873
    3. ' ,' → logprob: -9.37531566619873
    4. '(),' → logprob: -9.50031566619873
    5. ',b' → logprob: -12.37531566619873
    6. '   ' → logprob: -12.50031566619873
    7. 'start' → logprob: -13.00031566619873
    8. '),' → logprob: -13.75031566619873
    9. ')}' → logprob: -13.75031566619873
    10. ')' → logprob: -13.87531566619873

Token 900: ' start' (ID: 1604)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.20146304368972778
    2. 'start' → logprob: -1.701462984085083
    3. ' start' → logprob: -10.326462745666504
    4. ' ' → logprob: -11.326462745666504
    5. '1' → logprob: -12.951462745666504
    6. '   ' → logprob: -13.451462745666504
    7. '(start' → logprob: -15.451462745666504
    8. 'key' → logprob: -15.451462745666504
    9. '       ' → logprob: -15.826462745666504
    10. '	start' → logprob: -15.826462745666504

Token 901: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31648823618888855
    2. '2' → logprob: -1.691488265991211
    3. '(' → logprob: -2.441488265991211
    4. '   ' → logprob: -11.941488265991211
    5. '(
' → logprob: -12.191488265991211
    6. '1' → logprob: -12.316488265991211
    7. ' ' → logprob: -13.441488265991211
    8. ' =' → logprob: -14.316488265991211
    9. '```' → logprob: -14.441488265991211
    10. '=
' → logprob: -14.566488265991211

Token 902: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.531315314830863e-06
    2. ' ' → logprob: -12.875003814697266
    3. '1' → logprob: -14.625003814697266
    4. '   ' → logprob: -15.750003814697266
    5. '```' → logprob: -16.875003814697266
    6. '(' → logprob: -17.125003814697266
    7. '0' → logprob: -17.750003814697266
    8. '
' → logprob: -18.062503814697266
    9. '3' → logprob: -18.375003814697266
    10. '=' → logprob: -18.437503814697266

Token 903: ')}
' (ID: 19324)
  Prédit: ')}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')}' → logprob: -0.0004172065819147974
    2. ')' → logprob: -7.875417232513428
    3. '}' → logprob: -10.37541675567627
    4. ')}
' → logprob: -12.87541675567627
    5. ');}' → logprob: -13.50041675567627
    6. '})' → logprob: -14.37541675567627
    7. ' )' → logprob: -14.87541675567627
    8. ')}
' → logprob: -15.00041675567627
    9. '   ' → logprob: -15.25041675567627
    10. ')}

' → logprob: -16.125417709350586

Token 904: 'cd' (ID: 8301)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.2998731136322021
    2. 'for' → logprob: -1.5498731136322021
    3. 'count' → logprob: -2.424873113632202
    4. 'max' → logprob: -3.174873113632202
    5. 'cur' → logprob: -3.549873113632202
    6. 'bit' → logprob: -3.549873113632202
    7. 'counts' → logprob: -3.924873113632202
    8. 'd' → logprob: -3.924873113632202
    9. 'q' → logprob: -4.049873352050781
    10. 'x' → logprob: -4.174873352050781

Token 905: 'g' (ID: 70)
  Prédit: 'ict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ict' → logprob: -0.16210657358169556
    2. '_dict' → logprob: -2.787106513977051
    3. '=' → logprob: -4.162106513977051
    4. ' =' → logprob: -4.287106513977051
    5. 'c' → logprob: -4.412106513977051
    6. 'ount' → logprob: -5.162106513977051
    7. 'or' → logprob: -5.162106513977051
    8. 'r' → logprob: -5.287106513977051
    9. 'ct' → logprob: -5.412106513977051
    10. '_count' → logprob: -5.412106513977051

Token 906: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2760149836540222
    2. '=' → logprob: -2.151015043258667
    3. 'ict' → logprob: -2.776015043258667
    4. '_dict' → logprob: -3.651015043258667
    5. '_len' → logprob: -5.526014804840088
    6. '_count' → logprob: -5.526014804840088
    7. '_idx' → logprob: -5.651014804840088
    8. '_counts' → logprob: -6.276014804840088
    9. 'e' → logprob: -6.401014804840088
    10. '_size' → logprob: -6.401014804840088

Token 907: ' cor' (ID: 1907)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5185062885284424
    2. '{' → logprob: -2.0185062885284424
    3. 'default' → logprob: -2.3935062885284424
    4. 'Bit' → logprob: -2.7685062885284424
    5. 'sorted' → logprob: -3.3935062885284424
    6. 'len' → logprob: -3.7685062885284424
    7. '[len' → logprob: -4.143506050109863
    8. '[n' → logprob: -4.768506050109863
    9. 'cor' → logprob: -5.143506050109863
    10. 'list' → logprob: -5.518506050109863

Token 908: '_dict' (ID: 11295)
  Prédit: '_dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dict' → logprob: -0.11050640791654587
    2. 'dict' → logprob: -3.110506296157837
    3. 'sorted' → logprob: -3.360506296157837
    4. '{' → logprob: -4.235506534576416
    5. 'ict' → logprob: -5.235506534576416
    6. 'Dict' → logprob: -6.860506534576416
    7. '=' → logprob: -6.860506534576416
    8. '{}' → logprob: -6.985506534576416
    9. '_sorted' → logprob: -7.860506534576416
    10. ' =' → logprob: -7.985506534576416

Token 909: '.get' (ID: 775)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7354764938354492
    2. '<|end|>' → logprob: -0.9854764938354492
    3. '[c' → logprob: -3.110476493835449
    4. '[b' → logprob: -3.610476493835449
    5. '.copy' → logprob: -3.610476493835449
    6. 'cd' → logprob: -4.235476493835449
    7. '.get' → logprob: -4.485476493835449
    8. '
' → logprob: -5.360476493835449
    9. 'cor' → logprob: -5.735476493835449
    10. '<|end|>' → logprob: -6.360476493835449

Token 910: '         ' (ID: 983)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2376641482114792
    2. '(max' → logprob: -2.112664222717285
    3. '(min' → logprob: -2.612664222717285
    4. '<|end|>' → logprob: -5.112664222717285
    5. 'max' → logprob: -5.862664222717285
    6. '(b' → logprob: -6.112664222717285
    7. '0' → logprob: -6.862664222717285
    8. 'min' → logprob: -6.987664222717285
    9. '(ab' → logprob: -7.237664222717285
    10. ' ' → logprob: -7.362664222717285

Token 911: ' #' (ID: 1069)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1812591403722763
    2. '<|end|>' → logprob: -2.4312591552734375
    3. '(co' → logprob: -3.4312591552734375
    4. '(b' → logprob: -3.6812591552734375
    5. '(None' → logprob: -5.3062591552734375
    6. '(ab' → logprob: -5.6812591552734375
    7. '(max' → logprob: -6.8062591552734375
    8. ' ' → logprob: -7.0562591552734375
    9. '(-' → logprob: -7.1812591552734375
    10. '#' (adapté à ' #') → logprob: -7.1812591552734375

Token 912: ' Quick' (ID: 23584)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 913: ' access' (ID: 3158)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 914: ' to' (ID: 316)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8808733224868774
    2. '
' → logprob: -1.3808733224868774
    3. '<|end|>' → logprob: -1.8808733224868774
    4. 'for' → logprob: -2.755873203277588
    5. '   ' → logprob: -2.755873203277588
    6. '(' → logprob: -4.755873203277588
    7. '<|end|>' → logprob: -4.880873203277588
    8. 'while' → logprob: -5.255873203277588
    9. '(i' → logprob: -5.255873203277588
    10. '#' → logprob: -5.255873203277588

Token 915: ' index' (ID: 3472)
  Prédit: 'cor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cor' → logprob: -0.04488438367843628
    2. 'lambda' → logprob: -3.294884443283081
    3. 'coordinates' → logprob: -5.044884204864502
    4. '(lambda' → logprob: -8.41988468170166
    5. 'coordinate' → logprob: -9.29488468170166
    6. ' lambda' → logprob: -10.66988468170166
    7. 'co' → logprob: -11.79488468170166
    8. ' cor' → logprob: -11.91988468170166
    9. 'coord' → logprob: -12.04488468170166
    10. 'b' → logprob: -12.04488468170166

Token 916: ' of' (ID: 328)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 917: ' given' (ID: 4335)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.015858042985200882
    2. '<|end|>' → logprob: -4.640858173370361
    3. 'coordinates' → logprob: -5.265858173370361
    4. ' b' → logprob: -8.515857696533203
    5. 'the' → logprob: -8.765857696533203
    6. ' coordinates' → logprob: -9.140857696533203
    7. 'lambda' → logprob: -9.390857696533203
    8. 'coordinate' → logprob: -9.515857696533203
    9. ''b' → logprob: -9.765857696533203
    10. ')' → logprob: -10.140857696533203

Token 918: ' '' (ID: 461)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.002665192587301135
    2. '<|end|>' → logprob: -6.002665042877197
    3. ')' → logprob: -9.752665519714355
    4. 'token' → logprob: -9.877665519714355
    5. ' b' → logprob: -10.377665519714355
    6. 'value' → logprob: -11.627665519714355
    7. ')b' → logprob: -11.752665519714355
    8. 'coordinate' → logprob: -12.002665519714355
    9. ''b' → logprob: -12.502665519714355
    10. 'coordinates' → logprob: -12.752665519714355

Token 919: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -8.149051427608356e-05
    2. ' b' → logprob: -10.125081062316895
    3. '<|end|>' → logprob: -11.250081062316895
    4. ')' → logprob: -11.375081062316895
    5. 'x' → logprob: -13.000081062316895
    6. ' ' → logprob: -13.000081062316895
    7. ')b' → logprob: -13.375081062316895
    8. '_b' → logprob: -13.875081062316895
    9. 'a' → logprob: -14.000081062316895
    10. ']' → logprob: -14.250081062316895

Token 920: ''
' (ID: 2207)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03711643069982529
    2. '')' → logprob: -3.537116527557373
    3. 'value' → logprob: -5.662116527557373
    4. ',' → logprob: -6.912116527557373
    5. 'b' → logprob: -7.162116527557373
    6. '<|end|>' → logprob: -7.537116527557373
    7. '('' → logprob: -8.412116050720215
    8. '_value' → logprob: -8.537116050720215
    9. ''' → logprob: -9.162116050720215
    10. '',' → logprob: -9.537116050720215

Token 921: 'bit' (ID: 6516)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06949760019779205
    2. '#' → logprob: -3.569497585296631
    3. 'def' → logprob: -5.194497585296631
    4. 'idx' → logprob: -5.194497585296631
    5. 'max' → logprob: -5.444497585296631
    6. 'i' → logprob: -5.569497585296631
    7. 'pos' → logprob: -6.319497585296631
    8. 'cur' → logprob: -6.319497585296631
    9. 'count' → logprob: -6.694497585296631
    10. 'cnt' → logprob: -6.819497585296631

Token 922: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14280186593532562
    2. '=' → logprob: -2.0178017616271973
    3. '.' → logprob: -10.017802238464355
    4. '   ' → logprob: -10.267802238464355
    5. ' ' → logprob: -11.392802238464355
    6. ')' → logprob: -11.517802238464355
    7. '.add' → logprob: -11.517802238464355
    8. '(' → logprob: -12.017802238464355
    9. ':' → logprob: -12.892802238464355
    10. '    ' → logprob: -13.267802238464355

Token 923: ' Bit' (ID: 9422)
  Prédit: 'Bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Bit' → logprob: -0.0619698166847229
    2. ' Bit' → logprob: -2.811969757080078
    3. '(Bit' → logprob: -13.436969757080078
    4. 'Bi' → logprob: -15.686969757080078
    5. ' ' → logprob: -15.811969757080078
    6. 'BIT' → logprob: -15.936969757080078
    7. 'None' → logprob: -16.936969757080078
    8. 'bit' → logprob: -17.061969757080078
    9. 'Bin' → logprob: -17.186969757080078
    10. '.Bit' → logprob: -17.186969757080078

Token 924: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -5.621933451038785e-05
    2. 'len' → logprob: -10.000056266784668
    3. '(' → logprob: -11.625056266784668
    4. '((' → logprob: -14.250056266784668
    5. '[len' → logprob: -14.500056266784668
    6. '(max' → logprob: -14.750056266784668
    7. '(n' → logprob: -16.37505531311035
    8. ' len' → logprob: -17.00005531311035
    9. ' (' → logprob: -17.12505531311035
    10. '(m' → logprob: -17.50005531311035

Token 925: '(co' (ID: 41772)
  Prédit: '(co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(co' → logprob: -0.19558212161064148
    2. '(c' → logprob: -1.8205821514129639
    3. 'cor' → logprob: -4.445581912994385
    4. 'coordinates' → logprob: -5.570581912994385
    5. 'co' → logprob: -9.320582389831543
    6. 'c' → logprob: -10.070582389831543
    7. '(coord' → logprob: -10.820582389831543
    8. 'coordinate' → logprob: -11.820582389831543
    9. '(' → logprob: -12.820582389831543
    10. '(sorted' → logprob: -12.945582389831543

Token 926: 'ordinates' (ID: 15343)
  Prédit: 'ordinates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ordinates' → logprob: -0.06431452184915543
    2. 'coordinates' → logprob: -3.439314603805542
    3. 'cor' → logprob: -3.564314603805542
    4. 'or' → logprob: -6.564314365386963
    5. 'r' → logprob: -8.939314842224121
    6. 'ordinate' → logprob: -9.064314842224121
    7. 'cord' → logprob: -9.689314842224121
    8. 'ord' → logprob: -9.939314842224121
    9. '_coordinates' → logprob: -10.314314842224121
    10. 'rd' → logprob: -10.939314842224121

Token 927: ')' (ID: 8)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.03516765311360359
    2. ')' → logprob: -3.410167694091797
    3. '+' → logprob: -6.910167694091797
    4. ')+' → logprob: -7.785167694091797
    5. '))
' → logprob: -9.785167694091797
    6. ' +' → logprob: -10.160167694091797
    7. ')))' → logprob: -12.410167694091797
    8. ')
' → logprob: -12.785167694091797
    9. '))

' → logprob: -14.410167694091797
    10. ')}' → logprob: -14.410167694091797

Token 928: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013959495117887855
    2. '+' → logprob: -6.751396179199219
    3. ')
' → logprob: -8.876396179199219
    4. ' +' → logprob: -9.501396179199219
    5. '))' → logprob: -12.876396179199219
    6. ')

' → logprob: -13.126396179199219
    7. ' )' → logprob: -13.251396179199219
    8. '+)' → logprob: -13.376396179199219
    9. ')
' → logprob: -14.001396179199219
    10. ')}' → logprob: -15.126396179199219

Token 929: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.4391627609729767
    2. '3' → logprob: -1.0641627311706543
    3. '5' → logprob: -5.064162731170654
    4. '4' → logprob: -6.064162731170654
    5. '10' → logprob: -6.439162731170654
    6. '1' → logprob: -8.814163208007812
    7. ' ' → logprob: -12.064163208007812
    8. '6' → logprob: -12.939163208007812
    9. '100' → logprob: -13.064163208007812
    10. '7' → logprob: -13.689163208007812

Token 930: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.23702752590179443
    2. '3' → logprob: -1.6120275259017944
    3. '1' → logprob: -5.487027645111084
    4. '4' → logprob: -5.612027645111084
    5. '5' → logprob: -5.737027645111084
    6. '10' → logprob: -7.612027645111084
    7. '6' → logprob: -11.362027168273926
    8. '7' → logprob: -12.174527168273926
    9. ' ' → logprob: -12.674527168273926
    10. '20' → logprob: -12.924527168273926

Token 931: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2961512513575144e-05
    2. ')
' → logprob: -10.750022888183594
    3. ' )' → logprob: -14.500022888183594
    4. ')

' → logprob: -15.250022888183594
    5. '))' → logprob: -15.875022888183594
    6. ')
' → logprob: -15.875022888183594
    7. ')`' → logprob: -16.500022888183594
    8. '   ' → logprob: -16.750022888183594
    9. ')#' → logprob: -16.750022888183594
    10. '),' → logprob: -17.125022888183594

Token 932: ' ' (ID: 220)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6958590745925903
    2. '   ' → logprob: -1.0708590745925903
    3. '       ' → logprob: -1.9458590745925903
    4. ' for' → logprob: -4.320858955383301
    5. '           ' → logprob: -6.820858955383301
    6. '
' → logprob: -7.820858955383301
    7. 'while' → logprob: -7.820858955383301
    8. '	for' → logprob: -9.1958589553833
    9. 'i' → logprob: -9.3208589553833
    10. '```' → logprob: -9.6958589553833

Token 933: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1596328765153885
    2. ' for' → logprob: -2.909632921218872
    3. '   ' → logprob: -3.159632921218872
    4. '
' → logprob: -3.659632921218872
    5. '       ' → logprob: -4.159632682800293
    6. 'while' → logprob: -5.659632682800293
    7. 'i' → logprob: -6.284632682800293
    8. ')' → logprob: -6.534632682800293
    9. '    
' → logprob: -7.909632682800293
    10. '        
' → logprob: -8.034632682800293

Token 934: ' Initialize' (ID: 19496)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.22702889144420624
    2. '#' → logprob: -2.2270288467407227
    3. 'pass' → logprob: -3.7270288467407227
    4. 'while' → logprob: -4.227028846740723
    5. 'current' → logprob: -4.852028846740723
    6. 'count' → logprob: -5.227028846740723
    7. '
' → logprob: -5.477028846740723
    8. 'bit' → logprob: -5.602028846740723
    9. 'def' → logprob: -5.852028846740723
    10. 'total' → logprob: -6.102028846740723

Token 935: ' BIT' (ID: 52185)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.0713876485824585
    2. '#' → logprob: -3.196387767791748
    3. 'for' → logprob: -4.196387767791748
    4. '
' → logprob: -5.571387767791748
    5. 'the' → logprob: -5.696387767791748
    6. ')' → logprob: -6.946387767791748
    7. '```' → logprob: -6.946387767791748
    8. ' bit' → logprob: -7.071387767791748
    9. '<|end|>' → logprob: -7.821387767791748
    10. ' for' → logprob: -8.19638729095459

Token 936: '.' (ID: 13)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6823143362998962
    2. '<|end|>' → logprob: -1.182314395904541
    3. ' for' → logprob: -2.307314395904541
    4. '
' → logprob: -3.057314395904541
    5. '   ' → logprob: -4.182314395904541
    6. '<|end|>' → logprob: -5.307314395904541
    7. 'i' → logprob: -5.807314395904541
    8. ' ' → logprob: -6.057314395904541
    9. '    
' → logprob: -6.182314395904541
    10. '#' → logprob: -6.182314395904541

Token 937: ' Size' (ID: 13568)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01810862123966217
    2. '#' → logprob: -4.76810884475708
    3. ' for' → logprob: -6.39310884475708
    4. 'i' → logprob: -6.64310884475708
    5. 'current' → logprob: -6.89310884475708
    6. 'idx' → logprob: -7.26810884475708
    7. 'cur' → logprob: -7.64310884475708
    8. 'def' → logprob: -7.76810884475708
    9. 'x' → logprob: -8.018108367919922
    10. '
' → logprob: -8.143108367919922

Token 938: ' +' (ID: 659)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00192067155148834
    2. ' =' → logprob: -6.626920700073242
    3. '=len' → logprob: -7.501920700073242
    4. '+=' → logprob: -11.126920700073242
    5. ')' → logprob: -12.001920700073242
    6. '=
' → logprob: -12.001920700073242
    7. '<|end|>' → logprob: -12.126920700073242
    8. '+' → logprob: -12.251920700073242
    9. '=size' → logprob: -14.001920700073242
    10. '=max' → logprob: -14.251920700073242

Token 939: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07003513723611832
    2. '2' → logprob: -2.695035219192505
    3. ' ' → logprob: -10.195034980773926
    4. '3' → logprob: -10.570034980773926
    5. '5' → logprob: -10.945034980773926
    6. '```' → logprob: -12.320034980773926
    7. '   ' → logprob: -12.820034980773926
    8. '10' → logprob: -12.820034980773926
    9. '
' → logprob: -13.445034980773926
    10. '7' → logprob: -13.570034980773926

Token 940: ' since' (ID: 3630)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 941: ' index' (ID: 3472)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.6819729804992676
    2. 'coordinates' → logprob: -1.5569729804992676
    3. 'we' → logprob: -2.0569729804992676
    4. 'indices' → logprob: -3.3069729804992676
    5. '1' → logprob: -3.4319729804992676
    6. 'the' → logprob: -3.5569729804992676
    7. ' coordinates' → logprob: -4.306972980499268
    8. 'len' → logprob: -4.556972980499268
    9. 'cor' → logprob: -5.056972980499268
    10. ' we' → logprob: -5.056972980499268

Token 942: ' starts' (ID: 13217)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2977909445762634
    2. 's' → logprob: -2.047791004180908
    3. 'ing' → logprob: -3.922791004180908
    4. ' starts' → logprob: -3.922791004180908
    5. '=len' → logprob: -4.422791004180908
    6. 'starts' → logprob: -4.547791004180908
    7. ' =' → logprob: -4.672791004180908
    8. '+=' → logprob: -5.547791004180908
    9. '0' → logprob: -5.672791004180908
    10. '+' → logprob: -5.797791004180908

Token 943: ' at' (ID: 540)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.10675831139087677
    2. 'at' → logprob: -2.7317583560943604
    3. '=' → logprob: -3.3567583560943604
    4. ' at' → logprob: -7.106758117675781
    5. ' from' → logprob: -7.731758117675781
    6. '2' → logprob: -11.106758117675781
    7. '1' → logprob: -11.106758117675781
    8. '```' → logprob: -11.981758117675781
    9. ' =' → logprob: -12.981758117675781
    10. '=
' → logprob: -13.481758117675781

Token 944: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.576816976070404
    2. '2' → logprob: -0.951816976070404
    3. '0' → logprob: -2.951817035675049
    4. '```' → logprob: -10.57681655883789
    5. '
' → logprob: -12.95181655883789
    6. ' ' → logprob: -13.82681655883789
    7. '   ' → logprob: -13.95181655883789
    8. '`' → logprob: -14.38931655883789
    9. 'index' → logprob: -14.70181655883789
    10. '``' → logprob: -14.76431655883789

Token 945: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.21830864250659943
    2. '1' → logprob: -1.718308687210083
    3. '2' → logprob: -4.093308448791504
    4. '```' → logprob: -10.968308448791504
    5. ' ' → logprob: -11.280808448791504
    6. '   ' → logprob: -12.093308448791504
    7. '
' → logprob: -12.218308448791504
    8. '3' → logprob: -13.093308448791504
    9. 'import' → logprob: -13.218308448791504
    10. 'from' → logprob: -13.530808448791504

Token 946: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8288050293922424
    2. '<|end|>' → logprob: -1.2038049697875977
    3. 'for' → logprob: -1.9538049697875977
    4. '<|end|>' → logprob: -3.4538049697875977
    5. ' for' → logprob: -3.8288049697875977
    6. 'while' → logprob: -3.8288049697875977
    7. '   ' → logprob: -3.9538049697875977
    8. ')' → logprob: -5.078804969787598
    9. '#' → logprob: -5.328804969787598
    10. '    
' → logprob: -6.078804969787598

Token 947: ' and' (ID: 326)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09906504303216934
    2. '0' → logprob: -3.599065065383911
    3. 'size' → logprob: -3.974065065383911
    4. '<|end|>' → logprob: -4.349064826965332
    5. ' size' → logprob: -5.474064826965332
    6. ' ' → logprob: -5.974064826965332
    7. ' and' → logprob: -6.224064826965332
    8. 'index' → logprob: -6.224064826965332
    9. '
' → logprob: -6.599064826965332
    10. 'bit' → logprob: -6.724064826965332

Token 948: ' we' (ID: 581)
  Prédit: 'we'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'we' → logprob: -0.8249290585517883
    2. 'bit' → logprob: -0.9499290585517883
    3. '1' → logprob: -2.8249289989471436
    4. 'indices' → logprob: -3.6999289989471436
    5. 'the' → logprob: -3.9499289989471436
    6. ' we' → logprob: -4.074929237365723
    7. 'indexes' → logprob: -4.199929237365723
    8. 'index' → logprob: -5.199929237365723
    9. ' bit' → logprob: -5.199929237365723
    10. 'coordinates' → logprob: -5.324929237365723

Token 949: ' shift' (ID: 12847)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.5867915749549866
    2. 'reserve' → logprob: -1.5867915153503418
    3. 'start' → logprob: -2.336791515350342
    4. 'use' → logprob: -2.961791515350342
    5. 'need' → logprob: -3.961791515350342
    6. ' add' → logprob: -4.086791515350342
    7. 'have' → logprob: -5.086791515350342
    8. 'added' → logprob: -5.211791515350342
    9. 'want' → logprob: -5.211791515350342
    10. 'will' → logprob: -5.586791515350342

Token 950: ' by' (ID: 656)
  Prédit: 'by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'by' → logprob: -0.15469865500926971
    2. ' by' → logprob: -2.529698610305786
    3. '+' → logprob: -4.154698848724365
    4. '=' → logprob: -4.154698848724365
    5. '<|end|>' → logprob: -4.779698848724365
    6. '+=' → logprob: -5.279698848724365
    7. '<|end|>' → logprob: -5.279698848724365
    8. '1' → logprob: -5.529698848724365
    9. 'i' → logprob: -6.154698848724365
    10. ')' → logprob: -6.654698848724365

Token 951: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02092406339943409
    2. '2' → logprob: -3.8959240913391113
    3. 'one' → logprob: -8.395923614501953
    4. ' ' → logprob: -9.270923614501953
    5. '3' → logprob: -11.020923614501953
    6. '
' → logprob: -11.270923614501953
    7. ' one' → logprob: -11.645923614501953
    8. '```' → logprob: -12.270923614501953
    9. '   ' → logprob: -12.395923614501953
    10. '4' → logprob: -13.333423614501953

Token 952: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1616978794336319
    2. '2' → logprob: -1.9116978645324707
    3. '0' → logprob: -6.911697864532471
    4. '3' → logprob: -7.911697864532471
    5. '-' → logprob: -10.286698341369629
    6. ' ' → logprob: -10.411698341369629
    7. '
' → logprob: -11.161698341369629
    8. '4' → logprob: -11.724198341369629
    9. 'one' → logprob: -12.224198341369629
    10. '```' → logprob: -13.224198341369629

Token 953: '.

' (ID: 364)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.49109187722206116
    2. '
' → logprob: -1.7410918474197388
    3. ' for' → logprob: -2.3660919666290283
    4. '   ' → logprob: -2.4910919666290283
    5. ')' → logprob: -3.9910919666290283
    6. 'while' → logprob: -5.741091728210449
    7. '<|end|>' → logprob: -6.491091728210449
    8. '       ' → logprob: -6.741091728210449
    9. '    
' → logprob: -6.741091728210449
    10. '#' → logprob: -6.741091728210449

Token 954: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0032061156816780567
    2. '#' → logprob: -6.003206253051758
    3. ' for' → logprob: -7.878206253051758
    4. 'def' → logprob: -9.128206253051758
    5. 'while' → logprob: -9.628206253051758
    6. '
' → logprob: -10.003206253051758
    7. '   ' → logprob: -10.378206253051758
    8. 'i' → logprob: -11.128206253051758
    9. 'max' → logprob: -11.503206253051758
    10. '       ' → logprob: -11.628206253051758

Token 955: ' Initialize' (ID: 19496)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.21529272198677063
    2. '#' → logprob: -2.9652926921844482
    3. 'ans' → logprob: -3.9652926921844482
    4. 'cur' → logprob: -4.215292930603027
    5. 'res' → logprob: -4.465292930603027
    6. 'total' → logprob: -4.465292930603027
    7. 'current' → logprob: -4.590292930603027
    8. 'count' → logprob: -4.715292930603027
    9. 'result' → logprob: -4.840292930603027
    10. 'def' → logprob: -4.840292930603027

Token 956: ' the' (ID: 290)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.86639803647995
    2. 'answer' → logprob: -1.3663980960845947
    3. 'res' → logprob: -2.3663980960845947
    4. 'result' → logprob: -2.8663980960845947
    5. 'count' → logprob: -2.8663980960845947
    6. 'cnt' → logprob: -3.3663980960845947
    7. 'max' → logprob: -4.491397857666016
    8. 'answers' → logprob: -4.741397857666016
    9. 'counts' → logprob: -4.741397857666016
    10. 'total' → logprob: -5.116397857666016

Token 957: ' tree' (ID: 8165)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.9263876676559448
    2. 'answer' → logprob: -1.5513876676559448
    3. 'res' → logprob: -2.5513877868652344
    4. 'result' → logprob: -2.8013877868652344
    5. 'max' → logprob: -3.3013877868652344
    6. 'cur' → logprob: -3.8013877868652344
    7. 'prev' → logprob: -3.9263877868652344
    8. 'cnt' → logprob: -4.051387786865234
    9. 'sorted' → logprob: -4.176387786865234
    10. 'results' → logprob: -4.301387786865234

Token 958: ' at' (ID: 540)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0026805330999195576
    2. 'bit' → logprob: -7.62768030166626
    3. 'counts' → logprob: -8.127680778503418
    4. '#' → logprob: -8.377680778503418
    5. 'count' → logprob: -8.627680778503418
    6. '   ' → logprob: -8.752680778503418
    7. 'cnt' → logprob: -8.877680778503418
    8. 'cur' → logprob: -9.002680778503418
    9. 'prev' → logprob: -9.127680778503418
    10. ' for' → logprob: -9.377680778503418

Token 959: ' position' (ID: 4010)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4224860966205597
    2. 'index' → logprob: -1.7974860668182373
    3. '0' → logprob: -2.4224860668182373
    4. '2' → logprob: -2.7974860668182373
    5. 'position' → logprob: -4.047486305236816
    6. 'pos' → logprob: -5.047486305236816
    7. 'cor' → logprob: -6.922486305236816
    8. 'len' → logprob: -7.047486305236816
    9. 'idx' → logprob: -7.047486305236816
    10. 'bit' → logprob: -7.172486305236816

Token 960: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2958110272884369
    2. '0' → logprob: -1.7958110570907593
    3. '2' → logprob: -2.4208109378814697
    4. ' ' → logprob: -7.920811176300049
    5. 'cor' → logprob: -7.920811176300049
    6. '   ' → logprob: -8.79581069946289
    7. '[' → logprob: -8.79581069946289
    8. 'cd' → logprob: -9.79581069946289
    9. '=' → logprob: -10.04581069946289
    10. 'bit' → logprob: -10.17081069946289

Token 961: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12892088294029236
    2. '2' → logprob: -2.503920793533325
    3. '0' → logprob: -3.253920793533325
    4. ' ' → logprob: -7.878921031951904
    5. '   ' → logprob: -10.128920555114746
    6. 'cor' → logprob: -10.128920555114746
    7. '(' → logprob: -10.878920555114746
    8. '[' → logprob: -10.878920555114746
    9. 'bit' → logprob: -11.691420555114746
    10. 'for' → logprob: -11.878920555114746

Token 962: ' (' (ID: 350)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bit' → logprob: -7.107425062713446e-06
    2. 'for' → logprob: -12.000006675720215
    3. ' bit' → logprob: -14.875006675720215
    4. '1' → logprob: -15.500006675720215
    5. '```' → logprob: -15.750006675720215
    6. '(bit' → logprob: -16.37500762939453
    7. '   ' → logprob: -16.87500762939453
    8. '
' → logprob: -17.00000762939453
    9. 'with' → logprob: -17.87500762939453
    10. '.bit' → logprob: -17.87500762939453

Token 963: 'special' (ID: 32718)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.47937366366386414
    2. '1' → logprob: -1.2293736934661865
    3. ')' → logprob: -3.2293736934661865
    4. ',' → logprob: -3.8543736934661865
    5. '0' → logprob: -4.104373455047607
    6. 'for' → logprob: -5.979373455047607
    7. 'with' → logprob: -6.104373455047607
    8. ' bit' → logprob: -6.479373455047607
    9. '(' → logprob: -7.104373455047607
    10. ' with' → logprob: -7.104373455047607

Token 964: ' base' (ID: 3611)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.30384576320648193
    2. ',' → logprob: -2.5538458824157715
    3. 'token' → logprob: -2.5538458824157715
    4. 'position' → logprob: -3.3038458824157715
    5. ' token' → logprob: -4.5538458824157715
    6. '0' → logprob: -4.8038458824157715
    7. ' ' → logprob: -5.1788458824157715
    8. '
' → logprob: -5.3038458824157715
    9. 'index' → logprob: -5.3038458824157715
    10. ' position' → logprob: -5.4288458824157715

Token 965: ' case' (ID: 1890)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.30093565583229065
    2. ')' → logprob: -1.9259356260299683
    3. ' bit' → logprob: -2.300935745239258
    4. '(bit' → logprob: -6.050935745239258
    5. '1' → logprob: -6.175935745239258
    6. '=' → logprob: -6.300935745239258
    7. ')
' → logprob: -6.300935745239258
    8. 'position' → logprob: -6.675935745239258
    9. '   ' → logprob: -7.175935745239258
    10. '0' → logprob: -7.300935745239258

Token 966: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.753329336643219
    2. ')
' → logprob: -1.3783292770385742
    3. ',' → logprob: -1.8783292770385742
    4. 'bit' → logprob: -2.128329277038574
    5. '(bit' → logprob: -6.253329277038574
    6. '   ' → logprob: -6.878329277038574
    7. 'with' → logprob: -7.753329277038574
    8. ').' → logprob: -7.753329277038574
    9. '```' → logprob: -8.253329277038574
    10. ' bit' → logprob: -8.628329277038574

Token 967: ' dynamic' (ID: 14012)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.26352956891059875
    2. '1' → logprob: -2.0135295391082764
    3. 'bit' → logprob: -2.7635295391082764
    4. 'the' → logprob: -3.7635295391082764
    5. ' ' → logprob: -6.2635297775268555
    6. 'position' → logprob: -6.3885297775268555
    7. 'coordinates' → logprob: -6.5135297775268555
    8. 'pos' → logprob: -7.1385297775268555
    9. 'index' → logprob: -7.3885297775268555
    10. 'b' → logprob: -7.3885297775268555

Token 968: ' programming' (ID: 23238)
  Prédit: ' programming'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' programming' → logprob: -0.20260627567768097
    2. 'program' → logprob: -2.577606201171875
    3. 'updates' → logprob: -2.952606201171875
    4. ' insertion' → logprob: -4.577606201171875
    5. ' updates' → logprob: -4.577606201171875
    6. ' addition' → logprob: -5.077606201171875
    7. 'bit' → logprob: -5.202606201171875
    8. 'count' → logprob: -5.327606201171875
    9. ' additions' → logprob: -5.702606201171875
    10. 'addition' → logprob: -5.827606201171875

Token 969: ')
' (ID: 446)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -1.3858685493469238
    2. '.bit' → logprob: -1.3858685493469238
    3. ',' → logprob: -1.6358685493469238
    4. ')' → logprob: -2.010868549346924
    5. 'bit' → logprob: -2.260868549346924
    6. '.add' → logprob: -3.260868549346924
    7. ')
' → logprob: -3.760868549346924
    8. '(bit' → logprob: -6.385868549346924
    9. '
' → logprob: -6.885868549346924
    10. '   ' → logprob: -7.635868549346924

Token 970: 'bit' (ID: 6516)
  Prédit: 'bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: 0.0
    2. ' bit' → logprob: -16.75
    3. '```' → logprob: -18.375
    4. '   ' → logprob: -19.125
    5. '(bit' → logprob: -19.375
    6. '1' → logprob: -19.75
    7. '
' → logprob: -19.75
    8. 'for' → logprob: -20.0
    9. '.bit' → logprob: -20.625
    10. 'bitr' → logprob: -21.75

Token 971: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.00011653638648567721
    2. '.' → logprob: -9.125116348266602
    3. ').' → logprob: -13.125116348266602
    4. '   ' → logprob: -13.875116348266602
    5. '].' → logprob: -13.875116348266602
    6. 'add' → logprob: -14.250116348266602
    7. '```' → logprob: -14.250116348266602
    8. ' .' → logprob: -14.500116348266602
    9. '}.' → logprob: -14.750116348266602
    10. '`.' → logprob: -15.125116348266602

Token 972: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.392824874026701e-05
    2. '1' → logprob: -10.50003433227539
    3. '(
' → logprob: -12.00003433227539
    4. ' (' → logprob: -15.75003433227539
    5. '2' → logprob: -19.50003433227539
    6. '((' → logprob: -19.50003433227539
    7. '(

' → logprob: -19.75003433227539
    8. '(
' → logprob: -20.62503433227539
    9. '   ' → logprob: -21.37503433227539
    10. '0' → logprob: -21.62503433227539

Token 973: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.061054359131958e-06
    2. ' ' → logprob: -12.250007629394531
    3. '   ' → logprob: -13.000007629394531
    4. '2' → logprob: -15.125007629394531
    5. '  ' → logprob: -15.500007629394531
    6. '(' → logprob: -16.18750762939453
    7. ')' → logprob: -16.62500762939453
    8. '```' → logprob: -17.18750762939453
    9. '    ' → logprob: -17.56250762939453
    10. 'cor' → logprob: -17.75000762939453

Token 974: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.5048530030981055e-06
    2. ' ,' → logprob: -14.000001907348633
    3. ',
' → logprob: -14.500001907348633
    4. '1' → logprob: -15.750001907348633
    5. ',
' → logprob: -19.625001907348633
    6. '```' → logprob: -19.750001907348633
    7. ')' → logprob: -20.375001907348633
    8. '2' → logprob: -21.000001907348633
    9. '
' → logprob: -21.125001907348633
    10. '0' → logprob: -21.250001907348633

Token 975: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.723352049040841e-06
    2. ' ' → logprob: -12.625004768371582
    3. '2' → logprob: -14.250004768371582
    4. '   ' → logprob: -14.750004768371582
    5. '0' → logprob: -16.250003814697266
    6. '```' → logprob: -16.812503814697266
    7. '3' → logprob: -17.187503814697266
    8. '  ' → logprob: -17.250003814697266
    9. '`' → logprob: -17.562503814697266
    10. ')' → logprob: -17.937503814697266

Token 976: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.610702363715973e-06
    2. ' ' → logprob: -12.250009536743164
    3. '2' → logprob: -13.000009536743164
    4. '0' → logprob: -14.250009536743164
    5. '   ' → logprob: -14.562509536743164
    6. '3' → logprob: -15.562509536743164
    7. '-' → logprob: -15.687509536743164
    8. 'a' → logprob: -15.750009536743164
    9. ')' → logprob: -15.937509536743164
    10. '  ' → logprob: -16.312509536743164

Token 977: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00018089536752086133
    2. ')
' → logprob: -8.625181198120117
    3. ' )' → logprob: -14.625181198120117
    4. ')

' → logprob: -15.125181198120117
    5. ')
' → logprob: -15.500181198120117
    6. '),' → logprob: -16.875181198120117
    7. ')#' → logprob: -16.875181198120117
    8. '   ' → logprob: -17.500181198120117
    9. ')`' → logprob: -17.500181198120117
    10. ')}' → logprob: -17.875181198120117

Token 978: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10069550573825836
    2. 'max' → logprob: -3.8506956100463867
    3. 'ans' → logprob: -4.100695610046387
    4. 'dp' → logprob: -4.225695610046387
    5. 'prev' → logprob: -4.850695610046387
    6. 'res' → logprob: -5.100695610046387
    7. 'result' → logprob: -5.600695610046387
    8. 'last' → logprob: -5.725695610046387
    9. 'sorted' → logprob: -5.725695610046387
    10. 'keys' → logprob: -5.850695610046387

Token 979: ' Perform' (ID: 36780)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7831323146820068
    2. 'ans' → logprob: -1.7831323146820068
    3. 'dp' → logprob: -2.408132314682007
    4. 'prev' → logprob: -2.783132314682007
    5. 'result' → logprob: -3.408132314682007
    6. 'last' → logprob: -3.533132314682007
    7. 'answer' → logprob: -3.533132314682007
    8. 'res' → logprob: -3.658132314682007
    9. 'sorted' → logprob: -3.783132314682007
    10. 'max' → logprob: -4.658132553100586

Token 980: ' dynamic' (ID: 14012)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.06170658394694328
    2. 'len' → logprob: -4.06170654296875
    3. 'range' → logprob: -4.18670654296875
    4. ' a' → logprob: -5.18670654296875
    5. 'sorted' → logprob: -5.31170654296875
    6. 'i' → logprob: -5.81170654296875
    7. '_a' → logprob: -6.06170654296875
    8. 'for' → logprob: -6.18670654296875
    9. 'b' → logprob: -6.18670654296875
    10. 'list' → logprob: -6.31170654296875

Token 981: ' programming' (ID: 23238)
  Prédit: ' programming'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' programming' → logprob: -0.0031379126012325287
    2. 'program' → logprob: -5.878138065338135
    3. '_program' → logprob: -8.378137588500977
    4. 'Programming' → logprob: -10.128137588500977
    5. 'for' → logprob: -10.378137588500977
    6. ' programmation' → logprob: -11.878137588500977
    7. ' Programming' → logprob: -12.378137588500977
    8. '_' → logprob: -12.753137588500977
    9. ' for' → logprob: -13.128137588500977
    10. '   ' → logprob: -13.128137588500977

Token 982: ' using' (ID: 2360)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2789287567138672
    2. 'dp' → logprob: -1.7789287567138672
    3. 'sorted' → logprob: -4.403928756713867
    4. 'ans' → logprob: -4.653928756713867
    5. 'res' → logprob: -4.903928756713867
    6. '
' → logprob: -5.153928756713867
    7. 'prev' → logprob: -5.278928756713867
    8. 'a' → logprob: -5.403928756713867
    9. 'result' → logprob: -5.528928756713867
    10. 'keys' → logprob: -5.778928756713867

Token 983: ' the' (ID: 290)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.07140195369720459
    2. 'for' → logprob: -2.696402072906494
    3. 'the' → logprob: -7.196402072906494
    4. '
' → logprob: -8.571401596069336
    5. '#' → logprob: -9.071401596069336
    6. '```' → logprob: -9.321401596069336
    7. 'all' → logprob: -9.696401596069336
    8. 'enumer' → logprob: -9.946401596069336
    9. 'range' → logprob: -9.946401596069336
    10. ' for' → logprob: -10.321401596069336

Token 984: ' BIT' (ID: 52185)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.21679280698299408
    2. 'sorted' → logprob: -1.8417928218841553
    3. 'keys' → logprob: -4.091792583465576
    4. 'ab' → logprob: -4.466792583465576
    5. '#' → logprob: -6.091792583465576
    6. ' for' → logprob: -6.341792583465576
    7. '```' → logprob: -7.091792583465576
    8. '...' → logprob: -7.091792583465576
    9. '
' → logprob: -7.591792583465576
    10. 'import' → logprob: -8.216793060302734

Token 985: ' structure' (ID: 8866)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04904886707663536
    2. 'dp' → logprob: -3.549048900604248
    3. 'sorted' → logprob: -5.299048900604248
    4. 'a' → logprob: -6.299048900604248
    5. 'max' → logprob: -6.424048900604248
    6. 'ans' → logprob: -6.549048900604248
    7. 'ab' → logprob: -6.549048900604248
    8. 'prev' → logprob: -6.924048900604248
    9. 'res' → logprob: -7.299048900604248
    10. 'from' → logprob: -7.549048900604248

Token 986: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4313713014125824
    2. 'dp' → logprob: -1.5563713312149048
    3. 'ans' → logprob: -3.4313712120056152
    4. 'prev' → logprob: -3.5563712120056152
    5. 'sorted' → logprob: -3.9313712120056152
    6. 'last' → logprob: -4.431371212005615
    7. 'res' → logprob: -5.056371212005615
    8. 'result' → logprob: -5.431371212005615
    9. 'keys' → logprob: -5.931371212005615
    10. 'max' → logprob: -6.181371212005615

Token 987: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.15936385095119476
    2. 'prev' → logprob: -3.1593637466430664
    3. 'dp' → logprob: -3.4093637466430664
    4. 'sorted' → logprob: -3.7843637466430664
    5. 'last' → logprob: -4.284363746643066
    6. 'ans' → logprob: -4.784363746643066
    7. 'max' → logprob: -5.784363746643066
    8. 'res' → logprob: -5.909363746643066
    9. 'keys' → logprob: -6.034363746643066
    10. 'result' → logprob: -6.284363746643066

Token 988: ' Iterate' (ID: 129410)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04009039327502251
    2. 'prev' → logprob: -4.290090560913086
    3. 'dp' → logprob: -4.540090560913086
    4. 'sorted' → logprob: -5.540090560913086
    5. 'last' → logprob: -5.915090560913086
    6. 'ans' → logprob: -6.165090560913086
    7. 'keys' → logprob: -6.665090560913086
    8. 'a' → logprob: -7.540090560913086
    9. 'cur' → logprob: -7.665090560913086
    10. 'res' → logprob: -8.165090560913086

Token 989: ' over' (ID: 1072)
  Prédit: ' over'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' over' → logprob: -0.8317995667457581
    2. 'over' → logprob: -0.9567995667457581
    3. 'in' → logprob: -2.9567995071411133
    4. ' in' → logprob: -3.7067995071411133
    5. '   ' → logprob: -3.7067995071411133
    6. 'from' → logprob: -3.8317995071411133
    7. 'for' → logprob: -3.9567995071411133
    8. 'a' → logprob: -4.956799507141113
    9. ',' → logprob: -5.081799507141113
    10. '(a' → logprob: -5.331799507141113

Token 990: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.0006597769097425044
    2. 'range' → logprob: -7.625659942626953
    3. 'a' → logprob: -9.500659942626953
    4. 'ab' → logprob: -9.875659942626953
    5. 'enumer' → logprob: -10.625659942626953
    6. 'for' → logprob: -12.250659942626953
    7. 'i' → logprob: -12.500659942626953
    8. 're' → logprob: -12.750659942626953
    9. '(sorted' → logprob: -12.875659942626953
    10. ' sorted' → logprob: -13.250659942626953

Token 991: ' '' (ID: 461)
  Prédit: 'ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ab' → logprob: -0.46284499764442444
    2. 'sorted' → logprob: -1.337844967842102
    3. '(ab' → logprob: -2.7128450870513916
    4. '(sorted' → logprob: -3.7128450870513916
    5. 'keys' → logprob: -4.7128448486328125
    6. 'a' → logprob: -4.9628448486328125
    7. '(a' → logprob: -7.2128448486328125
    8. 'for' → logprob: -7.7128448486328125
    9. '_ab' → logprob: -10.212844848632812
    10. 'list' → logprob: -10.587844848632812

Token 992: 'a' (ID: 64)
  Prédit: 'ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ab' → logprob: -0.08820106834173203
    2. 'a' → logprob: -2.7132010459899902
    3. '(ab' → logprob: -4.33820104598999
    4. 'sorted' → logprob: -5.58820104598999
    5. '(a' → logprob: -6.96320104598999
    6. '(sorted' → logprob: -8.588201522827148
    7. 'keys' → logprob: -9.338201522827148
    8. '#ab' → logprob: -11.588201522827148
    9. 'list' → logprob: -11.713201522827148
    10. '_ab' → logprob: -11.838201522827148

Token 993: ''' (ID: 6)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2328515648841858
    2. 'keys' → logprob: -2.732851505279541
    3. '_keys' → logprob: -3.607851505279541
    4. '):' → logprob: -3.732851505279541
    5. '):
' → logprob: -3.732851505279541
    6. '_values' → logprob: -3.982851505279541
    7. 'values' → logprob: -4.982851505279541
    8. '_s' → logprob: -5.232851505279541
    9. '(s' → logprob: -5.357851505279541
    10. 'items' → logprob: -5.857851505279541

Token 994: ' values' (ID: 4824)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.4717930555343628
    2. 'for' → logprob: -2.0967931747436523
    3. ':
' → logprob: -2.7217931747436523
    4. ':' → logprob: -2.8467931747436523
    5. '   ' → logprob: -3.2217931747436523
    6. ' in' → logprob: -3.5967931747436523
    7. 'keys' → logprob: -3.7217931747436523
    8. ',' → logprob: -3.9717931747436523
    9. '       ' → logprob: -6.096793174743652
    10. ' for' → logprob: -6.221793174743652

Token 995: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.18164682388305664
    2. '   ' → logprob: -2.1816468238830566
    3. ':
' → logprob: -3.5566468238830566
    4. ':' → logprob: -4.431646823883057
    5. 'in' → logprob: -5.306646823883057
    6. ',' → logprob: -6.056646823883057
    7. ' for' → logprob: -6.306646823883057
    8. 'sorted' → logprob: -6.431646823883057
    9. '       ' → logprob: -7.056646823883057
    10. '```' → logprob: -8.806646347045898

Token 996: 'ascending' (ID: 163444)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.01260512787848711
    2. 'for' → logprob: -5.1376051902771
    3. '   ' → logprob: -5.8876051902771
    4. '):
' → logprob: -6.1376051902771
    5. 'ab' → logprob: -7.5126051902771
    6. '(sorted' → logprob: -8.262604713439941
    7. '       ' → logprob: -8.887604713439941
    8. ' sorted' → logprob: -9.012604713439941
    9. 'in' → logprob: -9.012604713439941
    10. ')' → logprob: -9.387604713439941

Token 997: ')
' (ID: 446)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.020488867536187172
    2. '):' → logprob: -4.145488739013672
    3. 'for' → logprob: -6.270488739013672
    4. '   ' → logprob: -6.770488739013672
    5. '():
' → logprob: -7.395488739013672
    6. ':
' → logprob: -8.770488739013672
    7. '()):
' → logprob: -8.895488739013672
    8. '       ' → logprob: -9.395488739013672
    9. '
' → logprob: -9.395488739013672
    10. 'in' → logprob: -10.020488739013672

Token 998: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.003850193927064538
    2. 'prev' → logprob: -5.878849983215332
    3. 'dp' → logprob: -7.378849983215332
    4. 'ans' → logprob: -9.253849983215332
    5. 'cur' → logprob: -9.378849983215332
    6. '   ' → logprob: -10.003849983215332
    7. 'result' → logprob: -10.378849983215332
    8. 'sorted' → logprob: -10.753849983215332
    9. 'res' → logprob: -10.878849983215332
    10. '
' → logprob: -11.128849983215332

Token 999: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00018983196059707552
    2. ' a' → logprob: -9.250189781188965
    3. 'key' → logprob: -10.375189781188965
    4. 'aa' → logprob: -10.750189781188965
    5. 'k' → logprob: -11.750189781188965
    6. 'A' → logprob: -11.750189781188965
    7. '_a' → logprob: -12.000189781188965
    8. 'v' → logprob: -12.875189781188965
    9. 'i' → logprob: -13.125189781188965
    10. 'x' → logprob: -13.375189781188965

Token 1000: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.18136325478553772
    2. 'in' → logprob: -1.8063632249832153
    3. ',' → logprob: -7.431363105773926
    4. '   ' → logprob: -7.931363105773926
    5. 'a' → logprob: -8.681363105773926
    6. ')' → logprob: -8.806363105773926
    7. '_in' → logprob: -9.181363105773926
    8. '):
' → logprob: -10.056363105773926
    9. ' ' → logprob: -10.931363105773926
    10. '	in' → logprob: -11.056363105773926

Token 1001: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -1.1472419600977446e-06
    2. ' sorted' → logprob: -14.000000953674316
    3. 'ab' → logprob: -15.375000953674316
    4. '(sorted' → logprob: -17.500001907348633
    5. '   ' → logprob: -18.375001907348633
    6. 'range' → logprob: -19.750001907348633
    7. '.sorted' → logprob: -21.625001907348633
    8. 'Sorted' → logprob: -22.875001907348633
    9. ' ' → logprob: -23.000001907348633
    10. '
' → logprob: -23.125001907348633

Token 1002: '(ab' (ID: 115191)
  Prédit: '(ab'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ab' → logprob: -0.004078401252627373
    2. 'ab' → logprob: -5.504078388214111
    3. '#ab' → logprob: -17.754077911376953
    4. '_ab' → logprob: -18.504077911376953
    5. 'abbr' → logprob: -20.004077911376953
    6. ' ab' → logprob: -20.129077911376953
    7. '(a' → logprob: -20.129077911376953
    8. ''ab' → logprob: -20.379077911376953
    9. 'list' → logprob: -21.379077911376953
    10. '.ab' → logprob: -21.504077911376953

Token 1003: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.35026586055755615
    2. '):' → logprob: -1.2252658605575562
    3. '.keys' → logprob: -7.350265979766846
    4. ')' → logprob: -8.100265502929688
    5. '(a' → logprob: -8.225265502929688
    6. '):
' → logprob: -8.475265502929688
    7. '[a' → logprob: -8.850265502929688
    8. '):

' → logprob: -9.475265502929688
    9. '   ' → logprob: -9.975265502929688
    10. ').' → logprob: -10.475265502929688

Token 1004: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009754554368555546
    2. 'dp' → logprob: -5.759754657745361
    3. 'for' → logprob: -5.884754657745361
    4. 'prev' → logprob: -7.134754657745361
    5. '#' → logprob: -7.384754657745361
    6. 'cnt' → logprob: -8.259754180908203
    7. '```' → logprob: -8.384754180908203
    8. 'count' → logprob: -8.634754180908203
    9. ' for' → logprob: -8.634754180908203
    10. '    
' → logprob: -8.884754180908203

Token 1005: ' #' (ID: 1069)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -1.5837526321411133
    2. '#' (adapté à ' #') → logprob: -2.2087526321411133
    3. 'dp' → logprob: -2.2087526321411133
    4. 'temp' → logprob: -2.5837526321411133
    5. 's' → logprob: -3.0837526321411133
    6. 'for' → logprob: -3.4587526321411133
    7. '   ' → logprob: -3.4587526321411133
    8. 'cur' → logprob: -3.4587526321411133
    9. 'cnt' → logprob: -3.5837526321411133
    10. 'new' → logprob: -3.7087526321411133

Token 1006: ' For' (ID: 2214)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -1.097806692123413
    2. 'dp' → logprob: -1.847806692123413
    3. 'temp' → logprob: -2.472806692123413
    4. 'for' → logprob: -2.597806692123413
    5. 'bit' → logprob: -3.222806692123413
    6. '#' → logprob: -3.222806692123413
    7. 'cur' → logprob: -3.472806692123413
    8. 'new' → logprob: -3.597806692123413
    9. 's' → logprob: -3.722806692123413
    10. 'cnt' → logprob: -4.222806930541992

Token 1007: ' each' (ID: 2454)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.000770436367020011
    2. 'a' → logprob: -7.875770568847656
    3. 'ab' → logprob: -9.375770568847656
    4. 'key' → logprob: -9.625770568847656
    5. ' b' → logprob: -10.125770568847656
    6. 'x' → logprob: -10.500770568847656
    7. 'bb' → logprob: -10.875770568847656
    8. '_b' → logprob: -11.000770568847656
    9. 'i' → logprob: -11.000770568847656
    10. 'pos' → logprob: -11.250770568847656

Token 1008: ' possible' (ID: 4149)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0005268189124763012
    2. ' b' → logprob: -8.250526428222656
    3. 'a' → logprob: -8.500526428222656
    4. '   ' → logprob: -10.375526428222656
    5. 'ab' → logprob: -11.500526428222656
    6. '```' → logprob: -11.625526428222656
    7. '       ' → logprob: -13.000526428222656
    8. '
' → logprob: -13.750526428222656
    9. 'bb' → logprob: -14.000526428222656
    10. '           ' → logprob: -14.250526428222656

Token 1009: ' '' (ID: 461)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0009118211455643177
    2. ' b' → logprob: -7.375911712646484
    3. 'a' → logprob: -8.750911712646484
    4. '   ' → logprob: -10.125911712646484
    5. '```' → logprob: -11.875911712646484
    6. 'c' → logprob: -12.000911712646484
    7. 'prev' → logprob: -12.000911712646484
    8. 'd' → logprob: -12.250911712646484
    9. 'x' → logprob: -12.250911712646484
    10. '
' → logprob: -12.375911712646484

Token 1010: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.005325785372406244
    2. 'a' → logprob: -5.255325794219971
    3. '   ' → logprob: -11.005325317382812
    4. 'x' → logprob: -11.380325317382812
    5. '```' → logprob: -11.505325317382812
    6. '
' → logprob: -12.005325317382812
    7. 'c' → logprob: -12.067825317382812
    8. 'ab' → logprob: -12.192825317382812
    9. ' b' → logprob: -12.692825317382812
    10. 'k' → logprob: -13.067825317382812

Token 1011: ''' (ID: 6)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.050005581229925156
    2. ' in' → logprob: -3.0500056743621826
    3. 'b' → logprob: -6.8000054359436035
    4. ',' → logprob: -9.925005912780762
    5. ''' → logprob: -10.050005912780762
    6. '_in' → logprob: -10.425005912780762
    7. '
' → logprob: -10.675005912780762
    8. ')' → logprob: -10.675005912780762
    9. 's' → logprob: -11.050005912780762
    10. '):' → logprob: -11.175005912780762

Token 1012: ' corresponding' (ID: 21824)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.42898520827293396
    2. ' in' → logprob: -1.0539852380752563
    3. 'b' → logprob: -8.428985595703125
    4. ',' → logprob: -11.053985595703125
    5. 'value' → logprob: -11.178985595703125
    6. 'for' → logprob: -11.928985595703125
    7. '   ' → logprob: -11.928985595703125
    8. 'set' → logprob: -12.178985595703125
    9. ':' → logprob: -12.803985595703125
    10. 's' → logprob: -12.928985595703125

Token 1013: ' to' (ID: 316)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.18235543370246887
    2. 'a' → logprob: -2.5573554039001465
    3. '   ' → logprob: -3.3073554039001465
    4. 'to' → logprob: -3.9323554039001465
    5. ' to' → logprob: -4.4323554039001465
    6. ' b' → logprob: -5.0573554039001465
    7. ' in' → logprob: -5.0573554039001465
    8. 'in' → logprob: -5.4323554039001465
    9. '       ' → logprob: -6.4323554039001465
    10. ' a' → logprob: -6.5573554039001465

Token 1014: ' current' (ID: 2208)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.014479031786322594
    2. 'ab' → logprob: -4.264479160308838
    3. ' a' → logprob: -8.38947868347168
    4. 'b' → logprob: -9.63947868347168
    5. 'bit' → logprob: -11.51447868347168
    6. ' ab' → logprob: -13.13947868347168
    7. 'the' → logprob: -13.51447868347168
    8. 'cor' → logprob: -13.63947868347168
    9. 'sorted' → logprob: -13.88947868347168
    10. ''ab' → logprob: -14.01447868347168

Token 1015: ' '' (ID: 461)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.27099974633893e-05
    2. ' a' → logprob: -11.625012397766113
    3. 'ab' → logprob: -12.875012397766113
    4. '   ' → logprob: -13.875012397766113
    5. '
' → logprob: -16.12501335144043
    6. 'b' → logprob: -17.37501335144043
    7. 'for' → logprob: -17.75001335144043
    8. '	a' → logprob: -18.00001335144043
    9. ''a' → logprob: -18.25001335144043
    10. ' ' → logprob: -18.31251335144043

Token 1016: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.2471589798224159e-05
    2. ' a' → logprob: -11.750012397766113
    3. '   ' → logprob: -12.625012397766113
    4. '
' → logprob: -14.750012397766113
    5. '```' → logprob: -15.500012397766113
    6. ' ' → logprob: -15.750012397766113
    7. 'ab' → logprob: -15.875012397766113
    8. '`' → logprob: -16.50001335144043
    9. ''a' → logprob: -16.62501335144043
    10. '_a' → logprob: -17.37501335144043

Token 1017: '',' (ID: 787)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1575301885604858
    2. ':
' → logprob: -1.2825301885604858
    3. '   ' → logprob: -1.6575301885604858
    4. '       ' → logprob: -2.5325303077697754
    5. ',' → logprob: -3.4075303077697754
    6. 'in' → logprob: -3.9075303077697754
    7. '':' → logprob: -4.032530307769775
    8. '):
' → logprob: -4.157530307769775
    9. '':
' → logprob: -4.157530307769775
    10. ' in' → logprob: -4.532530307769775

Token 1018: ' map' (ID: 4014)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14963291585445404
    2. 'bit' → logprob: -2.6496329307556152
    3. '       ' → logprob: -3.5246329307556152
    4. 'for' → logprob: -4.774632930755615
    5. '#' → logprob: -4.899632930755615
    6. ' bit' → logprob: -4.899632930755615
    7. 'b' → logprob: -5.399632930755615
    8. ' for' → logprob: -5.649632930755615
    9. ' b' → logprob: -5.899632930755615
    10. '```' → logprob: -6.524632930755615

Token 1019: ' to' (ID: 316)
  Prédit: 'cd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.32383596897125244
    2. 'cor' → logprob: -2.073835849761963
    3. 'b' → logprob: -2.573835849761963
    4. 'bit' → logprob: -2.823835849761963
    5. 'lambda' → logprob: -4.323835849761963
    6. 'ab' → logprob: -6.698835849761963
    7. '   ' → logprob: -7.698835849761963
    8. '(cd' → logprob: -9.073836326599121
    9. 'bd' → logprob: -9.698836326599121
    10. '(lambda' → logprob: -10.073836326599121

Token 1020: ' BIT' (ID: 52185)
  Prédit: 'cor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cor' → logprob: -0.4389572739601135
    2. 'cd' → logprob: -1.0639572143554688
    3. 'b' → logprob: -5.188957214355469
    4. 'ab' → logprob: -6.438957214355469
    5. 'bit' → logprob: -6.813957214355469
    6. 'sorted' → logprob: -7.688957214355469
    7. ' cor' → logprob: -7.813957214355469
    8. ' cd' → logprob: -8.313957214355469
    9. 'range' → logprob: -8.438957214355469
    10. 'a' → logprob: -9.063957214355469

Token 1021: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.3651562035083771
    2. 'indices' → logprob: -2.1151561737060547
    3. ')' → logprob: -3.1151561737060547
    4. '[' → logprob: -3.4901561737060547
    5. '```' → logprob: -3.7401561737060547
    6. '_index' → logprob: -3.8651561737060547
    7. ']' → logprob: -4.115156173706055
    8. 'idx' → logprob: -4.740156173706055
    9. 'b' → logprob: -4.990156173706055
    10. '[b' → logprob: -5.615156173706055

Token 1022: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013071521185338497
    2. 'for' → logprob: -4.888071537017822
    3. '       ' → logprob: -5.763071537017822
    4. ':' → logprob: -6.888071537017822
    5. 'and' → logprob: -8.513071060180664
    6. ':
' → logprob: -8.513071060180664
    7. ',' → logprob: -8.763071060180664
    8. 'idx' → logprob: -8.763071060180664
    9. 'b' → logprob: -9.138071060180664
    10. ' and' → logprob: -9.388071060180664

Token 1023: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07137665152549744
    2. 'for' → logprob: -3.4463765621185303
    3. '	for' → logprob: -4.946376800537109
    4. ':' → logprob: -4.946376800537109
    5. ' for' → logprob: -5.321376800537109
    6. '):
' → logprob: -5.446376800537109
    7. '       ' → logprob: -5.946376800537109
    8. 'b' → logprob: -6.321376800537109
    9. ':
' → logprob: -6.321376800537109
    10. 'bit' → logprob: -6.571376800537109

Token 1024: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7735375761985779
    2. 'for' → logprob: -1.7735376358032227
    3. 'idx' → logprob: -2.0235376358032227
    4. 'indices' → logprob: -2.2735376358032227
    5. 'indexes' → logprob: -3.2735376358032227
    6. 'inds' → logprob: -3.8985376358032227
    7. 'b' → logprob: -4.648537635803223
    8. 'tmp' → logprob: -4.898537635803223
    9. 'dp' → logprob: -5.023537635803223
    10. 'pos' → logprob: -5.023537635803223

Token 1025: ' Sort' (ID: 25945)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43356943130493164
    2. 'idx' → logprob: -1.9335694313049316
    3. 'indices' → logprob: -2.8085694313049316
    4. 'inds' → logprob: -3.4335694313049316
    5. 'indexes' → logprob: -3.6835694313049316
    6. 'dp' → logprob: -3.8085694313049316
    7. 'for' → logprob: -4.183569431304932
    8. 'b' → logprob: -5.183569431304932
    9. 'pos' → logprob: -5.308569431304932
    10. 'ind' → logprob: -5.308569431304932

Token 1026: ' in' (ID: 306)
  Prédit: 'ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ab' → logprob: -0.06925547122955322
    2. 'sorted' → logprob: -3.5692553520202637
    3. 'for' → logprob: -4.194255352020264
    4. '(ab' → logprob: -4.444255352020264
    5. 'b' → logprob: -5.319255352020264
    6. '_ab' → logprob: -5.444255352020264
    7. '(sorted' → logprob: -7.069255352020264
    8. '   ' → logprob: -8.069255828857422
    9. 'bs' → logprob: -8.194255828857422
    10. 'indices' → logprob: -8.569255828857422

Token 1027: ' reverse' (ID: 18199)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.2760738730430603
    2. 'ab' → logprob: -2.276073932647705
    3. 'reverse' → logprob: -2.276073932647705
    4. 'lambda' → logprob: -3.401073932647705
    5. 'ascending' → logprob: -6.401073932647705
    6. 'range' → logprob: -8.401073455810547
    7. 'key' → logprob: -8.651073455810547
    8. 're' → logprob: -8.651073455810547
    9. 'b' → logprob: -9.401073455810547
    10. '
' → logprob: -10.276073455810547

Token 1028: ' order' (ID: 2569)
  Prédit: '(reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(reverse' → logprob: -0.7250100374221802
    2. '(sorted' → logprob: -2.1000099182128906
    3. '(ab' → logprob: -2.2250099182128906
    4. 'reverse' → logprob: -2.2250099182128906
    5. 'sorted' → logprob: -2.6000099182128906
    6. '=' → logprob: -3.3500099182128906
    7. '=True' → logprob: -3.4750099182128906
    8. 'ab' → logprob: -4.100009918212891
    9. 'for' → logprob: -4.600009918212891
    10. 'b' → logprob: -5.975009918212891

Token 1029: ' so' (ID: 813)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16248807311058044
    2. '(sorted' → logprob: -3.2874879837036133
    3. 'for' → logprob: -3.4124879837036133
    4. '(ab' → logprob: -3.5374879837036133
    5. 'ab' → logprob: -4.037487983703613
    6. ',' → logprob: -5.162487983703613
    7. '(reverse' → logprob: -5.287487983703613
    8. 'sorted' → logprob: -5.537487983703613
    9. '(b' → logprob: -5.662487983703613
    10. '[::-' → logprob: -5.662487983703613

Token 1030: ' that' (ID: 484)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6756455898284912
    2. 'for' → logprob: -1.4256455898284912
    3. 'reverse' → logprob: -2.050645589828491
    4. 'cor' → logprob: -3.925645589828491
    5. 'cd' → logprob: -3.925645589828491
    6. 'ab' → logprob: -4.05064582824707
    7. 'that' → logprob: -4.55064582824707
    8. 'bit' → logprob: -5.05064582824707
    9. ' for' → logprob: -5.05064582824707
    10. '       ' → logprob: -5.30064582824707

Token 1031: ' updates' (ID: 12663)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.5395451188087463
    2. 'cd' → logprob: -1.0395450592041016
    3. 'pos' → logprob: -3.7895450592041016
    4. 'cor' → logprob: -4.289545059204102
    5. 'idx' → logprob: -4.414545059204102
    6. '   ' → logprob: -4.539545059204102
    7. 'b' → logprob: -6.539545059204102
    8. ' cd' → logprob: -7.539545059204102
    9. 'for' → logprob: -7.789545059204102
    10. 'len' → logprob: -8.039545059204102

Token 1032: ' do' (ID: 621)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5670746564865112
    2. '+=' → logprob: -1.8170746564865112
    3. '   ' → logprob: -2.567074775695801
    4. 'are' → logprob: -2.817074775695801
    5. 'for' → logprob: -3.442074775695801
    6. ' are' → logprob: -3.817074775695801
    7. ' +=' → logprob: -3.942074775695801
    8. 'occur' → logprob: -4.942074775695801
    9. ' =' → logprob: -5.192074775695801
    10. ' for' → logprob: -5.317074775695801

Token 1033: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.12901969254016876
    2. ' not' → logprob: -2.3790197372436523
    3. 'for' → logprob: -4.754019737243652
    4. 'bit' → logprob: -5.004019737243652
    5. '   ' → logprob: -5.129019737243652
    6. 'n't' → logprob: -6.504019737243652
    7. 't' → logprob: -6.754019737243652
    8. '=' → logprob: -6.879019737243652
    9. '       ' → logprob: -7.129019737243652
    10. ' bit' → logprob: -7.504019737243652

Token 1034: ' affect' (ID: 7902)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.7797770500183105
    2. 'break' → logprob: -1.5297770500183105
    3. 'skip' → logprob: -1.9047770500183105
    4. 'overwrite' → logprob: -2.7797770500183105
    5. 'increment' → logprob: -3.5297770500183105
    6. 'ex' → logprob: -3.5297770500183105
    7. 'pos' → logprob: -4.7797770500183105
    8. 'shift' → logprob: -4.9047770500183105
    9. '
' → logprob: -5.1547770500183105
    10. 'increase' → logprob: -5.2797770500183105

Token 1035: ' the' (ID: 290)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'indices' → logprob: -1.5858997106552124
    2. 'the' → logprob: -1.7108997106552124
    3. 'range' → logprob: -1.8358997106552124
    4. 'previous' → logprob: -2.210899829864502
    5. 'cd' → logprob: -2.460899829864502
    6. 'bit' → logprob: -2.710899829864502
    7. 'positions' → logprob: -2.835899829864502
    8. 'cor' → logprob: -3.085899829864502
    9. 'b' → logprob: -3.960899829864502
    10. 'indexes' → logprob: -4.460899829864502

Token 1036: ' computation' (ID: 76411)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bit' → logprob: -1.2817281484603882
    2. 'b' → logprob: -2.0317282676696777
    3. 'len' → logprob: -2.2817282676696777
    4. 'index' → logprob: -2.5317282676696777
    5. 'positions' → logprob: -2.5317282676696777
    6. 'indices' → logprob: -2.7817282676696777
    7. 'previous' → logprob: -3.0317282676696777
    8. 'current' → logprob: -3.1567282676696777
    9. 'position' → logprob: -3.6567282676696777
    10. '...' → logprob: -4.031728267669678

Token 1037: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6519385576248169
    2. '   ' → logprob: -1.651938557624817
    3. '[::-' → logprob: -2.6519384384155273
    4. '=' → logprob: -2.9019384384155273
    5. 'in' → logprob: -3.2769384384155273
    6. ' for' → logprob: -3.6519384384155273
    7. ':' → logprob: -4.276938438415527
    8. ',' → logprob: -4.276938438415527
    9. 'of' → logprob: -4.401938438415527
    10. ':
' → logprob: -5.151938438415527

Token 1038: ' smaller' (ID: 13679)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.016162700951099396
    2. ' b' → logprob: -4.516162872314453
    3. 'the' → logprob: -6.766162872314453
    4. 'previous' → logprob: -6.766162872314453
    5. 'next' → logprob: -7.766162872314453
    6. 'each' → logprob: -7.891162872314453
    7. 'other' → logprob: -7.891162872314453
    8. '0' → logprob: -9.016162872314453
    9. 'existing' → logprob: -9.141162872314453
    10. '```' → logprob: -9.266162872314453

Token 1039: ' indexes' (ID: 50739)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.2007380723953247
    2. 'indices' → logprob: -2.075737953186035
    3. 'indexes' → logprob: -3.825737953186035
    4. 'idx' → logprob: -4.825737953186035
    5. 'index' → logprob: -4.825737953186035
    6. 'cor' → logprob: -5.075737953186035
    7. 'i' → logprob: -5.450737953186035
    8. ' indices' → logprob: -5.700737953186035
    9. ' b' → logprob: -6.575737953186035
    10. '   ' → logprob: -6.950737953186035

Token 1040: ' in' (ID: 306)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24183696508407593
    2. 'for' → logprob: -1.7418370246887207
    3. ' for' → logprob: -4.241837024688721
    4. ':
' → logprob: -4.491837024688721
    5. ':' → logprob: -5.116837024688721
    6. '       ' → logprob: -6.116837024688721
    7. '[::-' → logprob: -6.241837024688721
    8. '```' → logprob: -7.366837024688721
    9. 'in' → logprob: -7.616837024688721
    10. ',' → logprob: -7.616837024688721

Token 1041: ' the' (ID: 290)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2770274877548218
    2. 'b' → logprob: -2.6520276069641113
    3. 'ab' → logprob: -2.9020276069641113
    4. 're' → logprob: -3.1520276069641113
    5. 'enumer' → logprob: -3.2770276069641113
    6. 'bit' → logprob: -4.527027606964111
    7. 'this' → logprob: -4.527027606964111
    8. 'reverse' → logprob: -5.152027606964111
    9. 'the' → logprob: -5.777027606964111
    10. ' range' → logprob: -6.652027606964111

Token 1042: ' same' (ID: 2684)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.659238874912262
    2. 'range' → logprob: -1.7842388153076172
    3. ' for' → logprob: -2.784238815307617
    4. ' loop' → logprob: -2.909238815307617
    5. 'loop' → logprob: -3.284238815307617
    6. '   ' → logprob: -3.409238815307617
    7. 'current' → logprob: -3.534238815307617
    8. ' range' → logprob: -4.159238815307617
    9. 'b' → logprob: -4.284238815307617
    10. 'same' → logprob: -4.409238815307617

Token 1043: ' iteration' (ID: 43155)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4172216057777405
    2. 'for' → logprob: -1.2922215461730957
    3. '   ' → logprob: -3.6672215461730957
    4. 'range' → logprob: -4.167221546173096
    5. 'ab' → logprob: -4.292221546173096
    6. 'loop' → logprob: -5.042221546173096
    7. 'block' → logprob: -6.417221546173096
    8. ' ' → logprob: -7.167221546173096
    9. 'batch' → logprob: -7.417221546173096
    10. '       ' → logprob: -7.917221546173096

Token 1044: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13283683359622955
    2. 'for' → logprob: -2.2578368186950684
    3. '[::-' → logprob: -4.757836818695068
    4. ':
' → logprob: -5.882836818695068
    5. '       ' → logprob: -6.882836818695068
    6. ':' → logprob: -6.882836818695068
    7. 'sorted' → logprob: -7.007836818695068
    8. '):
' → logprob: -7.007836818695068
    9. '```' → logprob: -7.007836818695068
    10. ' for' → logprob: -7.382836818695068

Token 1045: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002540705492720008
    2. 'for' → logprob: -6.752540588378906
    3. '	for' → logprob: -7.377540588378906
    4. ' for' → logprob: -7.752540588378906
    5. '       ' → logprob: -9.502540588378906
    6. 'b' → logprob: -9.627540588378906
    7. '```' → logprob: -9.752540588378906
    8. '[::-' → logprob: -10.127540588378906
    9. ',' → logprob: -11.127540588378906
    10. '    ' → logprob: -11.752540588378906

Token 1046: ' b' (ID: 287)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03681842237710953
    2. '   ' → logprob: -3.786818504333496
    3. 'bs' → logprob: -4.661818504333496
    4. ' for' → logprob: -6.036818504333496
    5. 'b' (adapté à ' b') → logprob: -7.661818504333496
    6. 'vals' → logprob: -8.411818504333496
    7. 'idx' → logprob: -8.536818504333496
    8. 'lst' → logprob: -8.661818504333496
    9. 'indices' → logprob: -8.786818504333496
    10. 'inds' → logprob: -9.661818504333496

Token 1047: 'bb' (ID: 10029)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.011875491589307785
    2. 'in' → logprob: -4.636875629425049
    3. 'for' → logprob: -6.511875629425049
    4. ' in' → logprob: -8.26187515258789
    5. '_list' → logprob: -8.38687515258789
    6. '=' → logprob: -10.13687515258789
    7. ',' → logprob: -10.88687515258789
    8. ' s' → logprob: -11.13687515258789
    9. '_s' → logprob: -11.63687515258789
    10. '_values' → logprob: -11.76187515258789

Token 1048: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02059701271355152
    2. ' =' → logprob: -3.895596981048584
    3. ' in' → logprob: -11.020597457885742
    4. 'for' → logprob: -11.145597457885742
    5. 'in' → logprob: -11.520597457885742
    6. 'sorted' → logprob: -12.520597457885742
    7. 's' → logprob: -12.895597457885742
    8. '=b' → logprob: -13.145597457885742
    9. '   ' → logprob: -13.395597457885742
    10. '=list' → logprob: -14.020597457885742

Token 1049: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -1.747814349073451e-05
    2. ' sorted' → logprob: -11.500017166137695
    3. '[' → logprob: -12.500017166137695
    4. '   ' → logprob: -12.875017166137695
    5. 'list' → logprob: -14.375017166137695
    6. '(sorted' → logprob: -14.625017166137695
    7. ' ' → logprob: -18.625017166137695
    8. 're' → logprob: -18.750017166137695
    9. '.sorted' → logprob: -19.000017166137695
    10. '[s' → logprob: -19.250017166137695

Token 1050: '(map' (ID: 16946)
  Prédit: '(ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ab' → logprob: -0.011060554534196854
    2. 'ab' → logprob: -4.51106071472168
    3. '(list' → logprob: -12.38606071472168
    4. 'list' → logprob: -12.63606071472168
    5. '#ab' → logprob: -13.13606071472168
    6. '_ab' → logprob: -13.51106071472168
    7. ''ab' → logprob: -14.51106071472168
    8. '(
' → logprob: -14.76106071472168
    9. '   ' → logprob: -14.76106071472168
    10. '(' → logprob: -15.63606071472168

Token 1051: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.034336820244789124
    2. '(ab' → logprob: -3.409336805343628
    3. 'ab' → logprob: -8.034337043762207
    4. '(cd' → logprob: -8.284337043762207
    5. 'cd' → logprob: -10.409337043762207
    6. '(lambda' → logprob: -10.534337043762207
    7. '(b' → logprob: -10.659337043762207
    8. '(' → logprob: -12.034337043762207
    9. 'cor' → logprob: -12.159337043762207
    10. 'c' → logprob: -12.534337043762207

Token 1052: 'dg' (ID: 49449)
  Prédit: 'cd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.1284540444612503
    2. 'cor' → logprob: -2.1284539699554443
    3. 'd' → logprob: -7.128454208374023
    4. 'ab' → logprob: -7.878454208374023
    5. ' cor' → logprob: -9.128454208374023
    6. '(cd' → logprob: -9.628454208374023
    7. 'bd' → logprob: -10.003454208374023
    8. 'cod' → logprob: -10.378454208374023
    9. 'or' → logprob: -10.753454208374023
    10. '(c' → logprob: -11.253454208374023

Token 1053: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06035498529672623
    2. '(ab' → logprob: -2.9353549480438232
    3. '),' → logprob: -5.810355186462402
    4. ',b' → logprob: -6.685355186462402
    5. ' ,' → logprob: -7.810355186462402
    6. 'ab' → logprob: -8.185355186462402
    7. '(b' → logprob: -8.685355186462402
    8. '#ab' → logprob: -9.060355186462402
    9. '   ' → logprob: -10.060355186462402
    10. ',[' → logprob: -10.310355186462402

Token 1054: ' ab' (ID: 692)
  Prédit: 'ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ab' → logprob: -0.0015536671271547675
    2. ' ab' → logprob: -6.501553535461426
    3. '(ab' → logprob: -11.001553535461426
    4. 'list' → logprob: -11.126553535461426
    5. '#ab' → logprob: -12.126553535461426
    6. ''ab' → logprob: -12.376553535461426
    7. '   ' → logprob: -12.626553535461426
    8. 'sorted' → logprob: -13.126553535461426
    9. '_ab' → logprob: -13.751553535461426
    10. '[' → logprob: -14.251553535461426

Token 1055: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.001485939254052937
    2. '[b' → logprob: -6.876485824584961
    3. '),' → logprob: -8.751485824584961
    4. '   ' → logprob: -9.126485824584961
    5. 'a' → logprob: -9.501485824584961
    6. ')[' → logprob: -10.876485824584961
    7. '(a' → logprob: -11.251485824584961
    8. ',' → logprob: -11.376485824584961
    9. '))' → logprob: -11.751485824584961
    10. 'b' → logprob: -11.751485824584961

Token 1056: ']),' (ID: 19560)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.3256286382675171
    2. ']),' → logprob: -1.575628638267517
    3. ')),' → logprob: -3.0756287574768066
    4. '],' → logprob: -3.9506287574768066
    5. ')],' → logprob: -6.325628757476807
    6. ',' → logprob: -6.700628757476807
    7. '   ' → logprob: -6.950628757476807
    8. ')[' → logprob: -7.700628757476807
    9. '       ' → logprob: -8.075628280639648
    10. '[b' → logprob: -8.700628280639648

Token 1057: ' reverse' (ID: 18199)
  Prédit: 'reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reverse' → logprob: -0.0002625278721097857
    2. ' reverse' → logprob: -8.250262260437012
    3. '(reverse' → logprob: -14.000262260437012
    4. '_reverse' → logprob: -15.750262260437012
    5. '           ' → logprob: -16.000263214111328
    6. '   ' → logprob: -16.125263214111328
    7. '       ' → logprob: -16.750263214111328
    8. 'Reverse' → logprob: -17.500263214111328
    9. '.reverse' → logprob: -18.750263214111328
    10. '```' → logprob: -19.125263214111328

Token 1058: '=True' (ID: 7827)
  Prédit: '=True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=True' → logprob: -0.0009739940869621933
    2. 'True' → logprob: -7.000974178314209
    3. '(True' → logprob: -9.75097370147705
    4. '=' → logprob: -12.62597370147705
    5. '       ' → logprob: -15.00097370147705
    6. ' True' → logprob: -15.25097370147705
    7. '   ' → logprob: -15.75097370147705
    8. '1' → logprob: -16.125974655151367
    9. '           ' → logprob: -16.375974655151367
    10. '```' → logprob: -17.125974655151367

Token 1059: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2897173762321472
    2. ')
' → logprob: -1.414717435836792
    3. '):
' → logprob: -5.039717197418213
    4. '):' → logprob: -6.539717197418213
    5. '   ' → logprob: -7.664717197418213
    6. '       ' → logprob: -9.789717674255371
    7. ')
' → logprob: -10.164717674255371
    8. ',' → logprob: -11.789717674255371
    9. ')

' → logprob: -12.414717674255371
    10. ')**' → logprob: -12.789717674255371

Token 1060: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4499858021736145
    2. 'for' → logprob: -1.3249857425689697
    3. '	for' → logprob: -2.6999857425689697
    4. ' for' → logprob: -4.074985980987549
    5. '```' → logprob: -4.574985980987549
    6. '       ' → logprob: -7.199985980987549
    7. '\t' → logprob: -8.44998550415039
    8. '[' → logprob: -8.44998550415039
    9. '``' → logprob: -8.94998550415039
    10. ' ' → logprob: -8.94998550415039

Token 1061: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.10371199250221252
    2. '       ' → logprob: -2.3537120819091797
    3. '           ' → logprob: -6.72871208190918
    4. ' for' → logprob: -6.85371208190918
    5. '   ' → logprob: -7.47871208190918
    6. '```' → logprob: -7.47871208190918
    7. '``' → logprob: -10.22871208190918
    8. 'i' → logprob: -10.97871208190918
    9. 'pos' → logprob: -11.10371208190918
    10. '
' → logprob: -11.35371208190918

Token 1062: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.26057305932044983
    2. 'bb' → logprob: -1.7605730295181274
    3. 'idx' → logprob: -4.135572910308838
    4. 'bbb' → logprob: -4.635572910308838
    5. 'pos' → logprob: -4.885572910308838
    6. 'x' → logprob: -5.010572910308838
    7. 'j' → logprob: -5.885572910308838
    8. 'c' → logprob: -5.885572910308838
    9. 'v' → logprob: -5.885572910308838
    10. 'bi' → logprob: -6.010572910308838

Token 1063: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5262417197227478
    2. ' in' → logprob: -0.9012417197227478
    3. 'b' → logprob: -6.526241779327393
    4. '   ' → logprob: -7.651241779327393
    5. ' ' → logprob: -8.276241302490234
    6. '  ' → logprob: -8.901241302490234
    7. ')' → logprob: -9.026241302490234
    8. 'idx' → logprob: -9.276241302490234
    9. '_in' → logprob: -9.526241302490234
    10. 'n' → logprob: -9.526241302490234

Token 1064: ' b' (ID: 287)
  Prédit: 'bbb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bbb' → logprob: -0.00043734462815336883
    2. ' b' → logprob: -7.875437259674072
    3. 'bb' → logprob: -10.37543773651123
    4. 'b' → logprob: -11.87543773651123
    5. '   ' → logprob: -12.00043773651123
    6. 'bbbb' → logprob: -12.25043773651123
    7. 'bit' → logprob: -12.75043773651123
    8. 'range' → logprob: -13.87543773651123
    9. '  ' → logprob: -13.87543773651123
    10. ' ' → logprob: -14.12543773651123

Token 1065: 'bb' (ID: 10029)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7729586958885193
    2. '   ' → logprob: -1.647958755493164
    3. '-' → logprob: -2.397958755493164
    4. '       ' → logprob: -2.647958755493164
    5. '+' → logprob: -3.272958755493164
    6. '    ' → logprob: -3.647958755493164
    7. '):
' → logprob: -3.897958755493164
    8. ',' → logprob: -4.147958755493164
    9. ' in' → logprob: -4.272958755493164
    10. ' ' → logprob: -4.647958755493164

Token 1066: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7660610675811768
    2. ':
' → logprob: -0.7660610675811768
    3. '       ' → logprob: -2.7660610675811768
    4. '   ' → logprob: -5.766060829162598
    5. '):
' → logprob: -5.766060829162598
    6. ',' → logprob: -7.141060829162598
    7. ':
' → logprob: -9.391060829162598
    8. '():
' → logprob: -9.766060829162598
    9. '	' → logprob: -10.141060829162598
    10. '):' → logprob: -10.266060829162598

Token 1067: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00771818682551384
    2. 'bit' → logprob: -4.882718086242676
    3. '```' → logprob: -9.882718086242676
    4. '   ' → logprob: -10.132718086242676
    5. ' bit' → logprob: -11.007718086242676
    6. '           ' → logprob: -13.007718086242676
    7. '     ' → logprob: -14.132718086242676
    8. '``' → logprob: -14.257718086242676
    9. '      ' → logprob: -15.507718086242676
    10. 'bitr' → logprob: -15.757718086242676

Token 1068: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.9829068779945374
    2. 's' → logprob: -1.9829068183898926
    3. 'cnt' → logprob: -2.3579068183898926
    4. 'count' → logprob: -2.6079068183898926
    5. 'c' → logprob: -2.7329068183898926
    6. 'bit' → logprob: -3.1079068183898926
    7. 'cur' → logprob: -3.1079068183898926
    8. '       ' → logprob: -3.3579068183898926
    9. 'val' → logprob: -3.4829068183898926
    10. 'v' → logprob: -3.9829068183898926

Token 1069: ' Update' (ID: 9152)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.3226300477981567
    2. 's' → logprob: -2.072629928588867
    3. 'cnt' → logprob: -2.072629928588867
    4. 'cur' → logprob: -2.322629928588867
    5. 'val' → logprob: -2.447629928588867
    6. 'c' → logprob: -2.447629928588867
    7. 'count' → logprob: -2.697629928588867
    8. 'v' → logprob: -3.572629928588867
    9. 'current' → logprob: -3.572629928588867
    10. 'bit' → logprob: -3.947629928588867

Token 1070: ' BIT' (ID: 52185)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.20277787744998932
    2. 'b' → logprob: -1.8277778625488281
    3. '1' → logprob: -3.827777862548828
    4. '       ' → logprob: -7.327777862548828
    5. '           ' → logprob: -9.202777862548828
    6. ' bit' → logprob: -9.327777862548828
    7. '(' → logprob: -9.702777862548828
    8. '   ' → logprob: -10.827777862548828
    9. '(bit' → logprob: -10.827777862548828
    10. ' b' → logprob: -10.952777862548828

Token 1071: ' at' (ID: 540)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.2705158591270447
    2. '.add' → logprob: -1.8955159187316895
    3. 'b' → logprob: -2.8955159187316895
    4. 'bit' → logprob: -4.7705159187316895
    5. '.b' → logprob: -4.8955159187316895
    6. '.bit' → logprob: -5.5205159187316895
    7. '       ' → logprob: -5.7705159187316895
    8. '.' → logprob: -5.7705159187316895
    9. '(bit' → logprob: -5.8955159187316895
    10. '   ' → logprob: -6.7705159187316895

Token 1072: ' index' (ID: 3472)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00016563729150220752
    2. 'bit' → logprob: -9.375165939331055
    3. '1' → logprob: -10.375165939331055
    4. '   ' → logprob: -10.625165939331055
    5. ' b' → logprob: -11.125165939331055
    6. '       ' → logprob: -12.375165939331055
    7. 'a' → logprob: -13.000165939331055
    8. '           ' → logprob: -13.875165939331055
    9. '```' → logprob: -14.125165939331055
    10. '    ' → logprob: -14.625165939331055

Token 1073: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0011622462188825011
    2. '       ' → logprob: -7.251162052154541
    3. ' b' → logprob: -8.2511625289917
    4. 'bit' → logprob: -9.6261625289917
    5. '   ' → logprob: -10.3761625289917
    6. '(b' → logprob: -10.6261625289917
    7. '1' → logprob: -10.6261625289917
    8. '```' → logprob: -10.8761625289917
    9. '           ' → logprob: -11.7511625289917
    10. '    ' → logprob: -12.2511625289917

Token 1074: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.38042283058166504
    2. 'bit' → logprob: -1.255422830581665
    3. '       ' → logprob: -4.505422592163086
    4. '(bit' → logprob: -5.005422592163086
    5. '```' → logprob: -5.380422592163086
    6. ',b' → logprob: -5.505422592163086
    7. '           ' → logprob: -6.255422592163086
    8. 'b' → logprob: -6.505422592163086
    9. '   ' → logprob: -7.755422592163086
    10. ')' → logprob: -8.380422592163086

Token 1075: ' sum' (ID: 4215)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.0031241215765476227
    2. 'x' → logprob: -7.628124237060547
    3. ' bit' → logprob: -7.628124237060547
    4. 'current' → logprob: -7.878124237060547
    5. 'count' → logprob: -7.878124237060547
    6. 'val' → logprob: -8.003124237060547
    7. '       ' → logprob: -8.253124237060547
    8. 'prev' → logprob: -8.378124237060547
    9. 'cur' → logprob: -9.128124237060547
    10. '           ' → logprob: -9.253124237060547

Token 1076: ' ways' (ID: 6984)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07853466272354126
    2. ')' → logprob: -4.2035346031188965
    3. ' +=' → logprob: -4.3285346031188965
    4. '+' → logprob: -4.5785346031188965
    5. '=' → logprob: -4.8285346031188965
    6. ',' → logprob: -5.4535346031188965
    7. '(b' → logprob: -5.4535346031188965
    8. '(bit' → logprob: -5.4535346031188965
    9. ' =' → logprob: -5.7035346031188965
    10. ' +' → logprob: -5.7035346031188965

Token 1077: ' from' (ID: 591)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.21521784365177155
    2. '(b' → logprob: -2.4652178287506104
    3. '```' → logprob: -2.7152178287506104
    4. '+=' → logprob: -4.2152180671691895
    5. ' +=' → logprob: -4.8402180671691895
    6. 'b' → logprob: -5.0902180671691895
    7. '+' → logprob: -5.3402180671691895
    8. '(+' → logprob: -6.0902180671691895
    9. '       ' → logprob: -6.2152180671691895
    10. '(i' → logprob: -6.5902180671691895

Token 1078: ' previous' (ID: 5880)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.05637093633413315
    2. 'bit' → logprob: -3.056370973587036
    3. '1' → logprob: -5.181370735168457
    4. ' b' → logprob: -6.431370735168457
    5. ' bit' → logprob: -9.556370735168457
    6. 'previous' → logprob: -9.806370735168457
    7. '   ' → logprob: -9.931370735168457
    8. '       ' → logprob: -10.181370735168457
    9. '           ' → logprob: -10.181370735168457
    10. 'the' → logprob: -10.306370735168457

Token 1079: ' indices' (ID: 30378)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.02481464482843876
    2. 'positions' → logprob: -5.274814605712891
    3. 'pos' → logprob: -5.399814605712891
    4. '```' → logprob: -5.524814605712891
    5. 'position' → logprob: -5.649814605712891
    6. '   ' → logprob: -6.399814605712891
    7. 'i' → logprob: -6.774814605712891
    8. '       ' → logprob: -7.024814605712891
    9. 'index' → logprob: -7.649814605712891
    10. '1' → logprob: -7.649814605712891

Token 1080: '
' (ID: 198)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.2619743347167969
    2. 'bit' → logprob: -2.136974334716797
    3. '(b' → logprob: -3.011974334716797
    4. ' b' → logprob: -4.136974334716797
    5. '```' → logprob: -4.886974334716797
    6. ' +=' → logprob: -5.011974334716797
    7. '       ' → logprob: -5.136974334716797
    8. ',' → logprob: -5.261974334716797
    9. '+=' → logprob: -5.636974334716797
    10. '(bit' → logprob: -5.886974334716797

Token 1081: '       ' (ID: 309)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.5825745463371277
    2. '       ' → logprob: -1.7075746059417725
    3. '()' → logprob: -2.4575746059417725
    4. '(' → logprob: -2.7075746059417725
    5. ')' → logprob: -3.7075746059417725
    6. '(bit' → logprob: -3.7075746059417725
    7. ' bit' → logprob: -3.8325746059417725
    8. 'b' → logprob: -4.332574367523193
    9. '+' → logprob: -5.332574367523193
    10. '```' → logprob: -5.707574367523193

Token 1082: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' (adapté à ' bit') → logprob: -0.11666804552078247
    2. 's' → logprob: -2.6166679859161377
    3. 'val' → logprob: -4.866668224334717
    4. 'v' → logprob: -5.241668224334717
    5. 'cur' → logprob: -5.241668224334717
    6. 'sum' → logprob: -5.366668224334717
    7. 'ways' → logprob: -5.616668224334717
    8. 'x' → logprob: -5.866668224334717
    9. '       ' → logprob: -6.616668224334717
    10. ' bit' → logprob: -6.741668224334717

Token 1083: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0010560338851064444
    2. '.' → logprob: -7.62605619430542
    3. '.sum' → logprob: -8.376055717468262
    4. 'add' → logprob: -9.126055717468262
    5. 'sum' → logprob: -9.251055717468262
    6. ').' → logprob: -9.501055717468262
    7. '```' → logprob: -11.126055717468262
    8. '   ' → logprob: -11.251055717468262
    9. '`.' → logprob: -11.251055717468262
    10. '].' → logprob: -12.376055717468262

Token 1084: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.2061164528131485
    2. 'b' → logprob: -1.7061164379119873
    3. ' b' → logprob: -5.956116676330566
    4. '(' → logprob: -6.581116676330566
    5. '1' → logprob: -7.331116676330566
    6. '0' → logprob: -10.956116676330566
    7. ' (' → logprob: -11.331116676330566
    8. ')b' → logprob: -11.331116676330566
    9. ',b' → logprob: -12.081116676330566
    10. '	b' → logprob: -12.831116676330566

Token 1085: ',' (ID: 11)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.28905805945396423
    2. ',' → logprob: -1.4140580892562866
    3. ' -' → logprob: -4.914058208465576
    4. ',b' → logprob: -8.664057731628418
    5. '   ' → logprob: -9.164057731628418
    6. '       ' → logprob: -9.789057731628418
    7. '+' → logprob: -10.289057731628418
    8. ' ,' → logprob: -10.289057731628418
    9. 'b' → logprob: -10.414057731628418
    10. ',-' → logprob: -10.539057731628418

Token 1086: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.00015943869948387146
    2. ' bit' → logprob: -8.75015926361084
    3. '(bit' → logprob: -14.12515926361084
    4. '-bit' → logprob: -16.750160217285156
    5. 'bitr' → logprob: -16.875160217285156
    6. '           ' → logprob: -16.875160217285156
    7. '   ' → logprob: -17.125160217285156
    8. '       ' → logprob: -18.250160217285156
    9. '               ' → logprob: -18.250160217285156
    10. '_bit' → logprob: -19.000160217285156

Token 1087: '.sum' (ID: 35381)
  Prédit: '.sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sum' → logprob: -0.0006650181603617966
    2. '.b' → logprob: -7.750665187835693
    3. '.' → logprob: -9.000664710998535
    4. 'sum' → logprob: -10.000664710998535
    5. '.add' → logprob: -10.500664710998535
    6. ').' → logprob: -11.375664710998535
    7. '.s' → logprob: -11.875664710998535
    8. '   ' → logprob: -13.000664710998535
    9. '.lower' → logprob: -13.000664710998535
    10. '```' → logprob: -13.250664710998535

Token 1088: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.011583536863327026
    2. 'b' → logprob: -4.51158332824707
    3. '(' → logprob: -8.01158332824707
    4. ')' → logprob: -10.01158332824707
    5. ')b' → logprob: -10.13658332824707
    6. ' b' → logprob: -10.26158332824707
    7. '1' → logprob: -10.63658332824707
    8. '```' → logprob: -11.01158332824707
    9. '(bit' → logprob: -11.38658332824707
    10. '[b' → logprob: -12.01158332824707

Token 1089: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.04742218554019928
    2. ' -' → logprob: -3.172422170639038
    3. 'b' → logprob: -5.672422409057617
    4. ')' → logprob: -7.297422409057617
    5. ' b' → logprob: -8.797422409057617
    6. '   ' → logprob: -10.172422409057617
    7. '[' → logprob: -10.422422409057617
    8. '       ' → logprob: -10.797422409057617
    9. '1' → logprob: -11.172422409057617
    10. '```' → logprob: -11.547422409057617

Token 1090: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.856408536899835e-05
    2. ' ' → logprob: -11.125028610229492
    3. '2' → logprob: -11.625028610229492
    4. '```' → logprob: -12.875028610229492
    5. '   ' → logprob: -14.250028610229492
    6. ')' → logprob: -15.125028610229492
    7. '0' → logprob: -15.250028610229492
    8. '           ' → logprob: -15.250028610229492
    9. '`' → logprob: -15.875028610229492
    10. '       ' → logprob: -16.062528610229492

Token 1091: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.0100624169572257e-05
    2. '-' → logprob: -11.125020027160645
    3. 'b' → logprob: -13.125020027160645
    4. '2' → logprob: -13.625020027160645
    5. '```' → logprob: -14.812520027160645
    6. ' ' → logprob: -14.937520027160645
    7. ')' → logprob: -15.500020027160645
    8. '0' → logprob: -15.562520027160645
    9. '   ' → logprob: -15.812520027160645
    10. '
' → logprob: -15.937520027160645

Token 1092: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.034256886690855026
    2. ')' → logprob: -3.409256935119629
    3. '))
' → logprob: -8.034256935119629
    4. '+' → logprob: -8.909256935119629
    5. '       ' → logprob: -10.034256935119629
    6. ')
' → logprob: -10.659256935119629
    7. '           ' → logprob: -11.284256935119629
    8. ')+' → logprob: -11.284256935119629
    9. '()))' → logprob: -11.534256935119629
    10. ' +' → logprob: -11.659256935119629

Token 1093: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1094: ' Output' (ID: 18315)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0002387018030276522
    2. '#' → logprob: -8.625238418579102
    3. 'ans' → logprob: -11.125238418579102
    4. 'result' → logprob: -11.250238418579102
    5. 'answer' → logprob: -11.250238418579102
    6. '
' → logprob: -12.000238418579102
    7. 'res' → logprob: -12.375238418579102
    8. 'index' → logprob: -12.500238418579102
    9. '```' → logprob: -13.875238418579102
    10. '#print' → logprob: -14.250238418579102

Token 1095: ' the' (ID: 290)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.12127808178775e-05
    2. '(bit' → logprob: -10.500051498413086
    3. 'bit' → logprob: -11.000051498413086
    4. '(print' → logprob: -12.375051498413086
    5. '```' → logprob: -12.875051498413086
    6. ' print' → logprob: -16.000051498413086
    7. '``' → logprob: -16.750051498413086
    8. '
' → logprob: -19.375051498413086
    9. '1' → logprob: -19.500051498413086
    10. '`' → logprob: -19.875051498413086

Token 1096: ' total' (ID: 3609)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.04261760786175728
    2. 'sum' → logprob: -3.9176175594329834
    3. 'print' → logprob: -4.7926177978515625
    4. '.bit' → logprob: -5.2926177978515625
    5. '(bit' → logprob: -5.4176177978515625
    6. 'result' → logprob: -6.4176177978515625
    7. '.sum' → logprob: -7.0426177978515625
    8. '1' → logprob: -7.9176177978515625
    9. '```' → logprob: -8.167617797851562
    10. '().' → logprob: -8.292617797851562

Token 1097: ' number' (ID: 2086)
  Prédit: '(bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(bit' → logprob: -0.021054456010460854
    2. 'bit' → logprob: -4.271054267883301
    3. 'print' → logprob: -5.271054267883301
    4. '(len' → logprob: -7.771054267883301
    5. '1' → logprob: -7.771054267883301
    6. '(' → logprob: -7.896054267883301
    7. '```' → logprob: -8.3960542678833
    8. '()' → logprob: -8.7710542678833
    9. '(
' → logprob: -10.2710542678833
    10. '(print' → logprob: -10.2710542678833

Token 1098: ' of' (ID: 328)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7654996514320374
    2. '=' → logprob: -1.1404995918273926
    3. ' =' → logprob: -2.1404995918273926
    4. '()
' → logprob: -3.3904995918273926
    5. 'of' → logprob: -4.015499591827393
    6. 'print' → logprob: -4.015499591827393
    7. '(' → logprob: -4.265499591827393
    8. '(
' → logprob: -5.140499591827393
    9. '```' → logprob: -5.890499591827393
    10. ')' → logprob: -7.515499591827393

Token 1099: ' ways' (ID: 6984)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' → logprob: -0.00010139751975657418
    2. ' ways' → logprob: -9.375101089477539
    3. 'bit' → logprob: -11.375101089477539
    4. 'way' → logprob: -13.125101089477539
    5. '#' → logprob: -13.625101089477539
    6. '
' → logprob: -14.750101089477539
    7. 'valid' → logprob: -15.375101089477539
    8. 'possible' → logprob: -15.625101089477539
    9. 'positions' → logprob: -15.625101089477539
    10. 'bits' → logprob: -15.750101089477539

Token 1100: ' modulo' (ID: 112372)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.04278026521205902
    2. '```' → logprob: -3.4177801609039307
    3. '(bit' → logprob: -5.16778039932251
    4. 'bit' → logprob: -5.91778039932251
    5. '(len' → logprob: -8.292779922485352
    6. '1' → logprob: -8.542779922485352
    7. '(print' → logprob: -9.542779922485352
    8. '(' → logprob: -9.917779922485352
    9. ')' → logprob: -10.417779922485352
    10. '
' → logprob: -10.417779922485352

Token 1101: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.25479599833488464
    2. '(' → logprob: -2.004796028137207
    3. ' (' → logprob: -2.629796028137207
    4. '100' → logprob: -4.129796028137207
    5. '998' → logprob: -6.879796028137207
    6. ' ' → logprob: -7.379796028137207
    7. '```' → logprob: -8.879796028137207
    8. '(int' → logprob: -9.379796028137207
    9. '1' → logprob: -9.504796028137207
    10. '
' → logprob: -10.379796028137207

Token 1102: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.13480453193187714
    2. '100' → logprob: -2.1348044872283936
    3. '(' → logprob: -5.384804725646973
    4. '998' → logprob: -5.759804725646973
    5. '1' → logprob: -9.634804725646973
    6. '```' → logprob: -11.384804725646973
    7. '\(' → logprob: -11.884804725646973
    8. '2' → logprob: -12.384804725646973
    9. '`' → logprob: -12.384804725646973
    10. '(int' → logprob: -12.634804725646973

Token 1103: '^' (ID: 61)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.16822460293769836
    2. '9' → logprob: -3.043224573135376
    3. '```' → logprob: -3.168224573135376
    4. '``' → logprob: -4.043224811553955
    5. '(' → logprob: -4.543224811553955
    6. ' %' → logprob: -4.668224811553955
    7. '%
' → logprob: -4.668224811553955
    8. '`' → logprob: -5.293224811553955
    9. '100' → logprob: -6.293224811553955
    10. '0' → logprob: -6.418224811553955

Token 1104: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -13.12500286102295
    3. '^' → logprob: -15.25000286102295
    4. '```' → logprob: -15.37500286102295
    5. '**' → logprob: -15.75000286102295
    6. '+' → logprob: -15.87500286102295
    7. '09' → logprob: -16.000003814697266
    8. '``' → logprob: -17.750003814697266
    9. '=' → logprob: -18.125003814697266
    10. '_' → logprob: -19.500003814697266

Token 1105: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0035497010685503483
    2. '9' → logprob: -6.003549575805664
    3. '```' → logprob: -7.378549575805664
    4. ' +' → logprob: -8.128549575805664
    5. '+
' → logprob: -9.628549575805664
    6. '``' → logprob: -10.628549575805664
    7. '
' → logprob: -10.753549575805664
    8. '7' → logprob: -10.878549575805664
    9. '**' → logprob: -11.628549575805664
    10. '-' → logprob: -12.003549575805664

Token 1106: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.031455837190151215
    2. '+' → logprob: -3.9064557552337646
    3. '7' → logprob: -4.531455993652344
    4. '```' → logprob: -9.656455993652344
    5. ' ' → logprob: -11.531455993652344
    6. ' +' → logprob: -11.656455993652344
    7. '``' → logprob: -13.156455993652344
    8. '
' → logprob: -13.406455993652344
    9. '+
' → logprob: -13.531455993652344
    10. '=' → logprob: -13.781455993652344

Token 1107: '7' (ID: 22)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -3.5120287066092715e-05
    2. '+' → logprob: -10.500035285949707
    3. '```' → logprob: -11.875035285949707
    4. '``' → logprob: -15.500035285949707
    5. ' ' → logprob: -16.62503433227539
    6. '987' → logprob: -16.75003433227539
    7. '
' → logprob: -16.75003433227539
    8. '7' → logprob: -17.25003433227539
    9. '09' → logprob: -17.50003433227539
    10. '109' → logprob: -18.25003433227539

Token 1108: '
' (ID: 198)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.165352463722229
    2. '```' → logprob: -2.4153523445129395
    3. '%(' → logprob: -3.7903523445129395
    4. '(' → logprob: -4.4153523445129395
    5. '%
' → logprob: -4.5403523445129395
    6. ' %' → logprob: -4.5403523445129395
    7. '
' → logprob: -5.6653523445129395
    8. '()%' → logprob: -6.9153523445129395
    9. '``' → logprob: -7.5403523445129395
    10. '(
' → logprob: -7.7903523445129395

Token 1109: 'print' (ID: 1598)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.07068467885255814
    2. '(' → logprob: -3.4456846714019775
    3. '```' → logprob: -3.6956846714019775
    4. '()%' → logprob: -5.945684909820557
    5. '10' → logprob: -6.445684909820557
    6. '%(' → logprob: -6.695684909820557
    7. '%=' → logprob: -6.820684909820557
    8. '%n' → logprob: -7.695684909820557
    9. '100' → logprob: -7.820684909820557
    10. '%\' → logprob: -8.195684432983398

Token 1110: '(bit' (ID: 123258)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0012684474932029843
    2. '10' → logprob: -7.62626838684082
    3. '(bit' → logprob: -7.75126838684082
    4. '((' → logprob: -8.62626838684082
    5. '(pow' → logprob: -9.50126838684082
    6. '(int' → logprob: -10.25126838684082
    7. ' (' → logprob: -10.37626838684082
    8. '100' → logprob: -11.75126838684082
    9. '```' → logprob: -11.87626838684082
    10. '1' → logprob: -12.25126838684082

Token 1111: '.sum' (ID: 35381)
  Prédit: '.size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.size' → logprob: -0.97501140832901
    2. '.add' → logprob: -1.3500113487243652
    3. ').' → logprob: -2.2250113487243652
    4. '.sum' → logprob: -2.2250113487243652
    5. '.print' → logprob: -2.6000113487243652
    6. '.' → logprob: -3.3500113487243652
    7. ')' → logprob: -4.725011348724365
    8. ' .' → logprob: -4.975011348724365
    9. '.bit' → logprob: -5.100011348724365
    10. '```' → logprob: -5.725011348724365

Token 1112: '(bit' (ID: 123258)
  Prédit: '(bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(bit' → logprob: -0.031105075031518936
    2. '(len' → logprob: -4.031105041503906
    3. 'bit' → logprob: -4.406105041503906
    4. 'len' → logprob: -7.906105041503906
    5. ')' → logprob: -9.281105041503906
    6. '(' → logprob: -9.406105041503906
    7. ' bit' → logprob: -9.781105041503906
    8. ')(' → logprob: -10.031105041503906
    9. '(bits' → logprob: -11.906105041503906
    10. '.bit' → logprob: -12.656105041503906

Token 1113: '.size' (ID: 4463)
  Prédit: '.size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.size' → logprob: -5.6696149840718135e-05
    2. 'size' → logprob: -10.375056266784668
    3. ' .' → logprob: -11.875056266784668
    4. '.' → logprob: -12.500056266784668
    5. ').' → logprob: -12.750056266784668
    6. '1' → logprob: -13.125056266784668
    7. ')' → logprob: -13.250056266784668
    8. ' ' → logprob: -13.500056266784668
    9. '```' → logprob: -13.500056266784668
    10. '.length' → logprob: -13.750056266784668

Token 1114: ')' (ID: 8)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.9120223522186279
    2. ' -' → logprob: -0.9120223522186279
    3. ')' → logprob: -1.662022352218628
    4. '))' → logprob: -5.037022590637207
    5. ' )' → logprob: -8.787022590637207
    6. ')-' → logprob: -9.787022590637207
    7. ',' → logprob: -10.162022590637207
    8. '```' → logprob: -11.287022590637207
    9. ' ' → logprob: -11.537022590637207
    10. '),' → logprob: -12.037022590637207

Token 1115: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06985684484243393
    2. ' -' → logprob: -3.319856882095337
    3. '-' → logprob: -4.319856643676758
    4. ')%' → logprob: -5.069856643676758
    5. ' %' → logprob: -5.569856643676758
    6. '%' → logprob: -5.569856643676758
    7. '))' → logprob: -5.819856643676758
    8. ' )' → logprob: -8.194856643676758
    9. '()' → logprob: -8.444856643676758
    10. '%)' → logprob: -8.819856643676758

Token 1116: ' (' (ID: 350)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.06836888194084167
    2. '(' → logprob: -2.818368911743164
    3. '10' → logprob: -5.068368911743164
    4. ' ' → logprob: -10.193368911743164
    5. '109' → logprob: -10.818368911743164
    6. '1' → logprob: -10.943368911743164
    7. ' (' → logprob: -11.443368911743164
    8. '(int' → logprob: -14.068368911743164
    9. '```' → logprob: -14.318368911743164
    10. '999' → logprob: -15.318368911743164

Token 1117: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.011054190807044506
    2. '100' → logprob: -4.511054039001465
    3. '1' → logprob: -12.136054039001465
    4. '109' → logprob: -14.511054039001465
    5. ' ' → logprob: -14.886054039001465
    6. 'int' → logprob: -16.38605499267578
    7. '​' → logprob: -17.51105499267578
    8. '(' → logprob: -18.13605499267578
    9. '   ' → logprob: -18.26105499267578
    10. '```' → logprob: -19.13605499267578

Token 1118: ' **' (ID: 6240)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.22673548758029938
    2. '**' → logprob: -1.6017354726791382
    3. ' ' → logprob: -7.101735591888428
    4. ' **' → logprob: -8.35173511505127
    5. '+' → logprob: -8.60173511505127
    6. '09' → logprob: -10.60173511505127
    7. '^' → logprob: -10.60173511505127
    8. ')' → logprob: -11.60173511505127
    9. '```' → logprob: -11.72673511505127
    10. '*' → logprob: -12.22673511505127

Token 1119: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: 0.0
    2. '```' → logprob: -17.375
    3. '09' → logprob: -17.875
    4. ' ' → logprob: -20.5
    5. '``' → logprob: -21.375
    6. '+' → logprob: -21.75
    7. '=' → logprob: -22.75
    8. '   ' → logprob: -23.0
    9. '
' → logprob: -23.125
    10. '９' → logprob: -23.75

Token 1120: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: 0.0
    2. '09' → logprob: -18.25
    3. '```' → logprob: -19.125
    4. ' ' → logprob: -20.0
    5. '   ' → logprob: -21.75
    6. '``' → logprob: -22.125
    7. '９' → logprob: -23.0
    8. '
' → logprob: -24.375
    9. '+' → logprob: -24.375
    10. 'nine' → logprob: -24.875

Token 1121: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -5.4192871175473556e-05
    2. ' +' → logprob: -9.875054359436035
    3. '+
' → logprob: -13.000054359436035
    4. '7' → logprob: -15.375054359436035
    5. '＋' → logprob: -16.37505340576172
    6. ')+' → logprob: -17.37505340576172
    7. '```' → logprob: -17.75005340576172
    8. '+)' → logprob: -18.62505340576172
    9. ')' → logprob: -19.12505340576172
    10. ' +
' → logprob: -19.37505340576172

Token 1122: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -2.696889623621246e-06
    2. '+' → logprob: -12.87500286102295
    3. '9' → logprob: -16.625001907348633
    4. ' ' → logprob: -17.250001907348633
    5. '```' → logprob: -17.250001907348633
    6. '   ' → logprob: -20.750001907348633
    7. '07' → logprob: -20.750001907348633
    8. '``' → logprob: -21.125001907348633
    9. ' +' → logprob: -21.250001907348633
    10. '
' → logprob: -22.375001907348633

Token 1123: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -1.4974866644479334e-05
    2. '+' → logprob: -11.125015258789062
    3. '```' → logprob: -16.625015258789062
    4. '9' → logprob: -17.375015258789062
    5. ' ' → logprob: -18.875015258789062
    6. '``' → logprob: -20.000015258789062
    7. ' +' → logprob: -20.750015258789062
    8. '07' → logprob: -21.125015258789062
    9. '​' → logprob: -21.500015258789062
    10. '+
' → logprob: -21.625015258789062

Token 1124: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.16025042533874512
    2. ')' → logprob: -1.9102504253387451
    3. '))
' → logprob: -11.785250663757324
    4. '+' → logprob: -12.160250663757324
    5. ')))' → logprob: -12.285250663757324
    6. ')
' → logprob: -12.410250663757324
    7. '**' → logprob: -12.785250663757324
    8. ')+' → logprob: -14.785250663757324
    9. '```' → logprob: -15.285250663757324
    10. ' ))' → logprob: -15.910250663757324


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1122
Tokens correctement prédits (1ère position, stricte): 317
Tokens correctement prédits (1ère position, avec adaptation): 344
Tokens correctement prédits (top 10): 706
Précision stricte (1ère position): 28.25%
Précision adaptée (1ère position): 30.66%
Précision (top 10): 62.92%
================================================================================
