================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:16:55
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys as system
import numpy as NUMPYMODULE
get_input = lambda: system.stdin.readline()

def run__():
    varA, varB = map(int, get_input().split())
    Mtx_D = NUMPYMODULE.array([list(map(int, get_input().split())) for _iqAz in range(varB)])
    lll_board = [list(map(int, get_input().split())) for _LInk in range(varA)]

    # ΩRIGIN: cost[i][j] := mod3==i group assigned to color j, total discomfort
    awkward = NUMPYMODULE.zeros((3, varB), dtype=int)
    bucket = NUMPYMODULE.zeros((3, varB), dtype=int)
    idx_pairs = [(x, y) for x in range(varA) for y in range(varA)]
    for X_idx, Y_idx in idx_pairs:
        k3 = (X_idx + Y_idx) % 3
        current_color = lll_board[X_idx][Y_idx] - 1
        bucket[k3][current_color] += 1

    for tr in range(3):
        for CLR in range(varB):
            awkward[tr] += Mtx_D[CLR] * bucket[tr][CLR]

    abs_min = None
    for c1 in range(varB):
        for c2 in range(varB):
            if c1 == c2: continue
            for c3 in range(varB):
                if c3 in (c1, c2): continue
                SUM_SUM = awkward[0][c1] + awkward[1][c2] + awkward[2][c3]
                if abs_min is None or SUM_SUM < abs_min:
                    abs_min = SUM_SUM
    print(int(abs_min))

if '__main__' == __name__:
    run__()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: ' as' (ID: 472)
  → Token d'amorce (pas de prédiction)

Token 3: ' system' (ID: 2420)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.9999720454216003
    2. 'sys' → logprob: -1.1249721050262451
    3. ' ' → logprob: -1.6249721050262451
    4. '   ' → logprob: -2.999972105026245
    5. '__' → logprob: -4.874971866607666
    6. ' _' → logprob: -5.124971866607666
    7. '```' → logprob: -5.124971866607666
    8. 'sy' → logprob: -5.249971866607666
    9. ' s' → logprob: -5.374971866607666
    10. 's' → logprob: -5.499971866607666

Token 4: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0007233949727378786
    2. 'import' → logprob: -8.750723838806152
    3. '
' → logprob: -9.125723838806152
    4. '<|end|>' → logprob: -9.125723838806152
    5. '.import' → logprob: -10.000723838806152
    6. ',' → logprob: -10.125723838806152
    7. '```' → logprob: -10.500723838806152
    8. '<|end|>' → logprob: -10.625723838806152
    9. '.
' → logprob: -10.750723838806152
    10. '.system' → logprob: -10.875723838806152

Token 5: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0070480601862072945
    2. '
' → logprob: -6.5070481300354
    3. '\n' → logprob: -6.5070481300354
    4. 'import' → logprob: -6.7570481300354
    5. '.import' → logprob: -7.7570481300354
    6. '<|end|>' → logprob: -7.7570481300354
    7. 'newline' → logprob: -7.8820481300354
    8. '.
' → logprob: -8.382047653198242
    9. '.readline' → logprob: -8.507047653198242
    10. ',' → logprob: -8.882047653198242

Token 6: ' numpy' (ID: 19529)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00024025145103223622
    2. 'os' → logprob: -8.500240325927734
    3. ' math' → logprob: -10.875240325927734
    4. ' numpy' → logprob: -12.000240325927734
    5. ' sys' → logprob: -12.875240325927734
    6. ' ' → logprob: -13.000240325927734
    7. ' json' → logprob: -13.250240325927734
    8. '	os' → logprob: -13.875240325927734
    9. '_os' → logprob: -14.500240325927734
    10. ' io' → logprob: -14.750240325927734

Token 7: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.001865571946837008
    2. 'as' → logprob: -6.376865386962891
    3. '<|end|>' → logprob: -9.25186538696289
    4. ' ' → logprob: -10.25186538696289
    5. '.' → logprob: -11.25186538696289
    6. '<|end|>' → logprob: -11.87686538696289
    7. ' .' → logprob: -13.00186538696289
    8. 'import' → logprob: -13.25186538696289
    9. '.ndarray' → logprob: -13.25186538696289
    10. '.pyplot' → logprob: -13.37686538696289

Token 8: ' NUM' (ID: 32253)
  Prédit: ' np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' np' → logprob: -0.008309832774102688
    2. ' ' → logprob: -5.133309841156006
    3. 'np' → logprob: -6.258309841156006
    4. ' numpy' → logprob: -8.383309364318848
    5. ' ' → logprob: -8.508309364318848
    6. 'numpy' → logprob: -11.258309364318848
    7. ' system' → logprob: -11.883309364318848
    8. ' ' → logprob: -13.008309364318848
    9. '_np' → logprob: -13.258309364318848
    10. ' n' → logprob: -13.758309364318848

Token 9: 'PY' (ID: 64719)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.04669159650802612
    2. 'as' → logprob: -3.171691656112671
    3. '<|end|>' → logprob: -6.421691417694092
    4. 'import' → logprob: -6.921691417694092
    5. ' as' → logprob: -7.421691417694092
    6. '.as' → logprob: -8.92169189453125
    7. '\' → logprob: -10.17169189453125
    8. ' .' → logprob: -10.29669189453125
    9. '
' → logprob: -10.54669189453125
    10. '[' → logprob: -10.67169189453125

Token 10: 'MODULE' (ID: 61663)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.008868645876646042
    2. '<|end|>' → logprob: -5.25886869430542
    3. 'as' → logprob: -6.25886869430542
    4. 'import' → logprob: -7.13386869430542
    5. '<|end|>' → logprob: -8.383868217468262
    6. ' as' → logprob: -8.508868217468262
    7. '
' → logprob: -9.633868217468262
    8. 'newline' → logprob: -9.633868217468262
    9. '\n' → logprob: -9.758868217468262
    10. '.as' → logprob: -9.758868217468262

Token 11: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3492143452167511
    2. 'as' → logprob: -1.3492143154144287
    3. ' as' → logprob: -4.099214553833008
    4. '.as' → logprob: -4.724214553833008
    5. '<|end|>' → logprob: -5.474214553833008
    6. 'import' → logprob: -5.974214553833008
    7. '
' → logprob: -7.349214553833008
    8. '\n' → logprob: -7.724214553833008
    9. '<|end|>' → logprob: -7.974214553833008
    10. '.n' → logprob: -8.349214553833008

Token 12: 'get' (ID: 522)
  Prédit: 'as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.41001296043395996
    2. '.' → logprob: -1.16001296043396
    3. ' as' → logprob: -4.285013198852539
    4. '<|end|>' → logprob: -5.410013198852539
    5. 'import' → logprob: -6.535013198852539
    6. '.as' → logprob: -7.035013198852539
    7. '
' → logprob: -7.285013198852539
    8. '\n' → logprob: -7.785013198852539
    9. 'newline' → logprob: -8.035013198852539
    10. '<|end|>' → logprob: -8.535013198852539

Token 13: '_input' (ID: 12507)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.27894166111946106
    2. 'attr' → logprob: -1.9039416313171387
    3. '_' → logprob: -2.9039416313171387
    4. '.' → logprob: -3.4039416313171387
    5. '_t' → logprob: -6.403941631317139
    6. 'ting' → logprob: -6.903941631317139
    7. 'te' → logprob: -7.028941631317139
    8. 'r' → logprob: -7.278941631317139
    9. 'ter' → logprob: -7.653941631317139
    10. 'at' → logprob: -7.778941631317139

Token 14: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0024632872082293034
    2. '()' → logprob: -6.252463340759277
    3. '('' → logprob: -8.002463340759277
    4. '("' → logprob: -10.377463340759277
    5. '_' → logprob: -10.502463340759277
    6. '(
' → logprob: -10.627463340759277
    7. '("("' → logprob: -10.627463340759277
    8. 's' → logprob: -10.877463340759277
    9. 'r' → logprob: -11.377463340759277
    10. '_input' → logprob: -11.377463340759277

Token 15: ' lambda' (ID: 27871)
  Prédit: ' system'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' system' → logprob: -0.6666962504386902
    2. ' input' → logprob: -0.7916962504386902
    3. 'input' → logprob: -3.541696310043335
    4. 'system' → logprob: -5.791696071624756
    5. ' ' → logprob: -7.541696071624756
    6. ' sys' → logprob: -7.666696071624756
    7. ' lambda' → logprob: -8.166696548461914
    8. ' raw' → logprob: -10.041696548461914
    9. ' SYSTEM' → logprob: -10.666696548461914
    10. '(system' → logprob: -10.666696548461914

Token 16: ':' (ID: 25)
  Prédit: ' system'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' system' → logprob: -0.7158921360969543
    2. ' input' → logprob: -0.9658921360969543
    3. ' x' → logprob: -2.9658920764923096
    4. ' sys' → logprob: -3.8408920764923096
    5. ' ' → logprob: -4.215892314910889
    6. 'input' → logprob: -4.215892314910889
    7. ' s' → logprob: -4.465892314910889
    8. 'system' → logprob: -5.090892314910889
    9. 'x' → logprob: -6.090892314910889
    10. ':' → logprob: -6.215892314910889

Token 17: ' system' (ID: 2420)
  Prédit: ' system'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' system' → logprob: -0.458210289478302
    2. ' input' → logprob: -1.0832102298736572
    3. 'input' → logprob: -4.083210468292236
    4. ' sys' → logprob: -5.083210468292236
    5. 'system' → logprob: -5.208210468292236
    6. 'sys' → logprob: -7.958210468292236
    7. ' ' → logprob: -9.583209991455078
    8. ' int' → logprob: -10.208209991455078
    9. ' __' → logprob: -10.708209991455078
    10. ' System' → logprob: -11.458209991455078

Token 18: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.007851134054362774
    2. ' .' → logprob: -5.6328511238098145
    3. '.stdin' → logprob: -5.8828511238098145
    4. '.stdout' → logprob: -8.132851600646973
    5. '.system' → logprob: -8.382851600646973
    6. '.readline' → logprob: -8.632851600646973
    7. '.import' → logprob: -8.757851600646973
    8. '.get' → logprob: -8.882851600646973
    9. '.argv' → logprob: -8.882851600646973
    10. '.exit' → logprob: -9.257851600646973

Token 19: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0869293063879013
    2. '.read' → logprob: -2.7119293212890625
    3. '.' → logprob: -4.0869293212890625
    4. 'read' → logprob: -10.961929321289062
    5. '.Read' → logprob: -11.086929321289062
    6. '.readlines' → logprob: -11.461929321289062
    7. '.write' → logprob: -12.586929321289062
    8. '.get' → logprob: -12.961929321289062
    9. '```' → logprob: -13.086929321289062
    10. ' readline' → logprob: -13.211929321289062

Token 20: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03684450685977936
    2. '().' → logprob: -3.411844491958618
    3. '(' → logprob: -5.786844730377197
    4. ' ()' → logprob: -9.786844253540039
    5. '()(' → logprob: -10.911844253540039
    6. '()
' → logprob: -11.036844253540039
    7. '(
' → logprob: -12.161844253540039
    8. '.' → logprob: -12.536844253540039
    9. '()

' → logprob: -12.536844253540039
    10. '`()' → logprob: -13.036844253540039

Token 21: 'def' (ID: 1314)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -1.0785176753997803
    2. 'x' → logprob: -1.8285176753997803
    3. 'print' → logprob: -1.8285176753997803
    4. '(' → logprob: -2.4535176753997803
    5. 'result' → logprob: -2.5785176753997803
    6. 'input' → logprob: -3.8285176753997803
    7. '.' → logprob: -3.8285176753997803
    8. 'def' → logprob: -3.8285176753997803
    9. 'import' → logprob: -4.078517913818359
    10. ')' → logprob: -4.453517913818359

Token 22: ' run' (ID: 2461)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3800141215324402
    2. ' process' → logprob: -2.130014181137085
    3. ' main' → logprob: -2.255014181137085
    4. ' calculate' → logprob: -3.505014181137085
    5. '_' → logprob: -4.005013942718506
    6. ' my' → logprob: -4.630013942718506
    7. ' space' → logprob: -5.005013942718506
    8. 'process' → logprob: -5.505013942718506
    9. ' read' → logprob: -5.630013942718506
    10. ' compute' → logprob: -5.880013942718506

Token 23: '__' (ID: 771)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.36371129751205444
    2. '():' → logprob: -1.2387113571166992
    3. '()' → logprob: -4.988711357116699
    4. '_' → logprob: -5.488711357116699
    5. '(:' → logprob: -6.988711357116699
    6. '```' → logprob: -7.488711357116699
    7. '(_' → logprob: -7.988711357116699
    8. '(":' → logprob: -7.988711357116699
    9. '(_:' → logprob: -8.6137113571167
    10. '(**' → logprob: -8.6137113571167

Token 24: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.024465138092637062
    2. '()' → logprob: -4.024465084075928
    3. ' ():' → logprob: -5.149465084075928
    4. '():
' → logprob: -8.649465560913086
    5. '_' → logprob: -9.024465560913086
    6. ' ()' → logprob: -9.149465560913086
    7. '(' → logprob: -10.274465560913086
    8. '_:' → logprob: -10.899465560913086
    9. ':' → logprob: -11.774465560913086
    10. '):' → logprob: -11.899465560913086

Token 25: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0024119194131344557
    2. '    
' → logprob: -7.127411842346191
    3. '    ' → logprob: -7.252411842346191
    4. '\' → logprob: -9.002411842346191
    5. '  ' → logprob: -9.002411842346191
    6. ' ' → logprob: -9.377411842346191
    7. 'input' → logprob: -10.002411842346191
    8. ' return' → logprob: -10.002411842346191
    9. '\n' → logprob: -10.002411842346191
    10. 'return' → logprob: -10.627411842346191

Token 26: ' var' (ID: 972)
  Prédit: ' user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' user' → logprob: -0.9166868925094604
    2. ' line' → logprob: -1.7916868925094604
    3. ' data' → logprob: -2.54168701171875
    4. 'user' → logprob: -2.79168701171875
    5. 'data' → logprob: -3.04168701171875
    6. ' input' → logprob: -3.29168701171875
    7. '   ' → logprob: -3.41668701171875
    8. ' for' → logprob: -3.79168701171875
    9. 'input' → logprob: -3.91668701171875
    10. 'line' → logprob: -4.04168701171875

Token 27: 'A' (ID: 32)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4563440680503845
    2. '_' → logprob: -1.9563441276550293
    3. 's' → logprob: -2.2063441276550293
    4. 'iable' → logprob: -3.2063441276550293
    5. '_name' → logprob: -3.8313441276550293
    6. 'i' → logprob: -4.331344127655029
    7. '   ' → logprob: -4.581344127655029
    8. '=' → logprob: -4.706344127655029
    9. '_input' → logprob: -5.706344127655029
    10. 'name' → logprob: -5.706344127655029

Token 28: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029157401993870735
    2. '=' → logprob: -4.779157638549805
    3. ' ' → logprob: -4.779157638549805
    4. ' +=' → logprob: -5.404157638549805
    5. '.' → logprob: -5.779157638549805
    6. '_' → logprob: -6.404157638549805
    7. ',' → logprob: -7.529157638549805
    8. '  ' → logprob: -8.154157638549805
    9. '   ' → logprob: -8.154157638549805
    10. '[' → logprob: -8.154157638549805

Token 29: ' var' (ID: 972)
  Prédit: 'var'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'var' → logprob: -0.5787261128425598
    2. ' var' → logprob: -0.8287261128425598
    3. ' system' → logprob: -6.453726291656494
    4. ' ' → logprob: -7.078726291656494
    5. ' =' → logprob: -9.328725814819336
    6. 'system' → logprob: -10.078725814819336
    7. '_' → logprob: -10.078725814819336
    8. ' _' → logprob: -10.453725814819336
    9. '=' → logprob: -10.703725814819336
    10. ',var' → logprob: -10.703725814819336

Token 30: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.002195933135226369
    2. ' =' → logprob: -7.252195835113525
    3. '=' → logprob: -7.752195835113525
    4. ',' → logprob: -8.002196311950684
    5. '_' → logprob: -8.627196311950684
    6. 'A' → logprob: -8.627196311950684
    7. '_B' → logprob: -9.502196311950684
    8. '1' → logprob: -9.752196311950684
    9. 's' → logprob: -9.877196311950684
    10. 'b' → logprob: -10.002196311950684

Token 31: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14269983768463135
    2. '=' → logprob: -2.017699718475342
    3. ' ' → logprob: -11.8927001953125
    4. ')' → logprob: -11.8927001953125
    5. ',' → logprob: -12.0177001953125
    6. '=input' → logprob: -13.7677001953125
    7. '  ' → logprob: -14.2677001953125
    8. '<|end|>' → logprob: -14.2677001953125
    9. '=line' → logprob: -14.7677001953125
    10. ' =
' → logprob: -15.3927001953125

Token 32: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.09756037592887878
    2. 'map' → logprob: -3.097560405731201
    3. ' get' → logprob: -3.222560405731201
    4. 'get' → logprob: -4.972560405731201
    5. ' ' → logprob: -7.722560405731201
    6. ' [' → logprob: -8.597559928894043
    7. '[' → logprob: -9.347559928894043
    8. ' var' → logprob: -9.722559928894043
    9. ' list' → logprob: -10.222559928894043
    10. 'var' → logprob: -10.347559928894043

Token 33: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0702451765537262
    2. '(' → logprob: -2.6952452659606934
    3. '(str' → logprob: -8.445244789123535
    4. '(eval' → logprob: -10.570244789123535
    5. 'int' → logprob: -10.695244789123535
    6. '(lambda' → logprob: -11.195244789123535
    7. '(float' → logprob: -11.695244789123535
    8. '(
' → logprob: -11.945244789123535
    9. '(get' → logprob: -12.070244789123535
    10. '(input' → logprob: -12.945244789123535

Token 34: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.697374165058136
    2. ',get' → logprob: -1.1973741054534912
    3. '(get' → logprob: -1.6973741054534912
    4. 'get' → logprob: -4.57237434387207
    5. '(system' → logprob: -5.82237434387207
    6. 'system' → logprob: -6.19737434387207
    7. ' ,' → logprob: -6.94737434387207
    8. '(' → logprob: -8.32237434387207
    9. ' get' → logprob: -9.44737434387207
    10. ')' → logprob: -9.57237434387207

Token 35: ' get' (ID: 717)
  Prédit: ' get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.07039974629878998
    2. 'get' → logprob: -2.695399761199951
    3. ')' → logprob: -8.570399284362793
    4. ' system' → logprob: -8.945399284362793
    5. ')get' → logprob: -9.320399284362793
    6. '(get' → logprob: -10.320399284362793
    7. ' )' → logprob: -12.320399284362793
    8. 'system' → logprob: -12.570399284362793
    9. '[get' → logprob: -12.820399284362793
    10. '	get' → logprob: -13.195399284362793

Token 36: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.0002753981971181929
    2. '_' → logprob: -8.750275611877441
    3. '()' → logprob: -9.500275611877441
    4. ')' → logprob: -10.875275611877441
    5. '_output' → logprob: -12.500275611877441
    6. '())' → logprob: -12.500275611877441
    7. '_line' → logprob: -13.125275611877441
    8. 'input' → logprob: -13.125275611877441
    9. ')_' → logprob: -13.250275611877441
    10. '().' → logprob: -13.625275611877441

Token 37: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0001387009397149086
    2. '())' → logprob: -9.375138282775879
    3. '()' → logprob: -10.000138282775879
    4. '()))' → logprob: -12.250138282775879
    5. ')' → logprob: -13.375138282775879
    6. ' ().' → logprob: -13.625138282775879
    7. '()));' → logprob: -15.875138282775879
    8. '());' → logprob: -16.000139236450195
    9. '()),' → logprob: -16.125139236450195
    10. '()[' → logprob: -16.250139236450195

Token 38: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.252648264169693
    2. 'strip' → logprob: -1.5026482343673706
    3. 'rstrip' → logprob: -7.25264835357666
    4. ' split' → logprob: -12.00264835357666
    5. ')' → logprob: -13.37764835357666
    6. ' strip' → logprob: -13.50264835357666
    7. '(split' → logprob: -14.50264835357666
    8. '().' → logprob: -14.50264835357666
    9. '(strip' → logprob: -16.127647399902344
    10. ' ' → logprob: -16.127647399902344

Token 39: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.01840171217918396
    2. ')' → logprob: -4.768401622772217
    3. '()' → logprob: -4.768401622772217
    4. '()))' → logprob: -6.768401622772217
    5. '))' → logprob: -9.893402099609375
    6. '())
' → logprob: -11.268402099609375
    7. '(' → logprob: -11.643402099609375
    8. '(),' → logprob: -11.893402099609375
    9. ' ())' → logprob: -12.393402099609375
    10. '()]' → logprob: -12.893402099609375

Token 40: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.43274953961372375
    2. '<|end|>' → logprob: -1.1827495098114014
    3. '
' → logprob: -3.6827495098114014
    4. '   ' → logprob: -5.6827497482299805
    5. ':' → logprob: -5.9327497482299805
    6. ' ' → logprob: -5.9327497482299805
    7. '\n' → logprob: -6.3077497482299805
    8. '<|end|>' → logprob: -6.4327497482299805
    9. '    
' → logprob: -7.3077497482299805
    10. '#' → logprob: -7.3077497482299805

Token 41: ' M' (ID: 391)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.1552780866622925
    2. '   ' → logprob: -1.6552780866622925
    3. 'print' → logprob: -2.280278205871582
    4. ' ' → logprob: -2.405278205871582
    5. ')' → logprob: -3.030278205871582
    6. 'return' → logprob: -3.030278205871582
    7. 'var' → logprob: -3.280278205871582
    8. ' if' → logprob: -3.780278205871582
    9. ' 
' → logprob: -3.905278205871582
    10. '
' → logprob: -4.280278205871582

Token 42: 'tx' (ID: 6874)
  Prédit: 'AX'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'AX' → logprob: -1.1955680847167969
    2. ' =' → logprob: -1.6955680847167969
    3. 'A' → logprob: -2.070568084716797
    4. 'ODULE' → logprob: -2.695568084716797
    5. 'OD' → logprob: -2.945568084716797
    6. 'ULT' → logprob: -3.195568084716797
    7. 'ax' → logprob: -3.195568084716797
    8. 'UL' → logprob: -3.320568084716797
    9. 'IN' → logprob: -3.570568084716797
    10. 'ATRIX' → logprob: -3.695568084716797

Token 43: '_D' (ID: 2958)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.5069392919540405
    2. ' =' → logprob: -1.3819392919540405
    3. 'var' → logprob: -3.50693941116333
    4. 'ODULE' → logprob: -3.63193941116333
    5. 'atrix' → logprob: -3.63193941116333
    6. 'odule' → logprob: -3.75693941116333
    7. '_' → logprob: -4.88193941116333
    8. '=' → logprob: -5.00693941116333
    9. 'ATRIX' → logprob: -5.38193941116333
    10. 'MODULE' → logprob: -5.75693941116333

Token 44: ' =' (ID: 314)
  Prédit: 'ATA'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ATA' → logprob: -0.58305823802948
    2. 'E' → logprob: -1.95805823802948
    3. 'ef' → logprob: -2.5830583572387695
    4. 'EL' → logprob: -3.0830583572387695
    5. 'EF' → logprob: -3.2080583572387695
    6. 'ata' → logprob: -3.7080583572387695
    7. 'A' → logprob: -4.2080583572387695
    8. ' =' → logprob: -4.5830583572387695
    9. 'e' → logprob: -4.9580583572387695
    10. 'el' → logprob: -4.9580583572387695

Token 45: ' NUM' (ID: 32253)
  Prédit: ' NUM'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' NUM' → logprob: -0.12612159550189972
    2. 'NUM' → logprob: -2.3761215209960938
    3. ' np' → logprob: -4.501121520996094
    4. ' numpy' → logprob: -5.626121520996094
    5. ' var' → logprob: -5.751121520996094
    6. 'np' → logprob: -6.626121520996094
    7. 'var' → logprob: -6.876121520996094
    8. ' ' → logprob: -6.876121520996094
    9. 'numpy' → logprob: -6.876121520996094
    10. ' [[' → logprob: -7.501121520996094

Token 46: 'PY' (ID: 64719)
  Prédit: 'PY'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'PY' → logprob: -0.0002752790169324726
    2. 'Y' → logprob: -8.250275611877441
    3. 'YP' → logprob: -11.500275611877441
    4. 'P' → logprob: -13.000275611877441
    5. ' PY' → logprob: -14.750275611877441
    6. 'NUM' → logprob: -16.125274658203125
    7. 'XY' → logprob: -16.250274658203125
    8. 'OPY' → logprob: -16.250274658203125
    9. '>' → logprob: -16.250274658203125
    10. '=' → logprob: -16.500274658203125

Token 47: 'MODULE' (ID: 61663)
  Prédit: 'MODULE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MODULE' → logprob: -2.5941604690160602e-05
    2. 'MOD' → logprob: -11.250025749206543
    3. 'module' → logprob: -12.125025749206543
    4. 'ODULE' → logprob: -12.500025749206543
    5. '_MODULE' → logprob: -13.500025749206543
    6. 'ARRAY' → logprob: -14.250025749206543
    7. 'M' → logprob: -14.375025749206543
    8. 'MO' → logprob: -15.000025749206543
    9. ' MODULE' → logprob: -15.000025749206543
    10. 'OM' → logprob: -16.00002670288086

Token 48: '.array' (ID: 14557)
  Prédit: '.array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.array' → logprob: -0.6272367238998413
    2. '.' → logprob: -1.0022367238998413
    3. '.dot' → logprob: -3.502236843109131
    4. '.zeros' → logprob: -4.002236843109131
    5. '.di' → logprob: -4.127236843109131
    6. '.matmul' → logprob: -5.002236843109131
    7. '.eye' → logprob: -5.502236843109131
    8. '.arange' → logprob: -5.502236843109131
    9. '.ndarray' → logprob: -5.877236843109131
    10. '.random' → logprob: -6.002236843109131

Token 49: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.12040530890226364
    2. '(' → logprob: -2.2454051971435547
    3. '([[' → logprob: -5.995405197143555
    4. '([
' → logprob: -6.495405197143555
    5. '(([' → logprob: -6.620405197143555
    6. '((' → logprob: -7.120405197143555
    7. '([]' → logprob: -7.245405197143555
    8. '([(' → logprob: -7.995405197143555
    9. '([...' → logprob: -8.495405197143555
    10. '(list' → logprob: -9.620405197143555

Token 50: 'list' (ID: 2641)
  Prédit: '[var'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[var' → logprob: -0.09214621037244797
    2. 'var' → logprob: -3.342146158218384
    3. 'list' → logprob: -3.342146158218384
    4. '[list' → logprob: -4.342146396636963
    5. '[int' → logprob: -6.092146396636963
    6. '[' → logprob: -6.592146396636963
    7. ' [' → logprob: -8.467145919799805
    8. '[get' → logprob: -9.092145919799805
    9. '[input' → logprob: -9.467145919799805
    10. '   ' → logprob: -10.217145919799805

Token 51: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0025008674710989
    2. 'map' → logprob: -6.127501010894775
    3. '(' → logprob: -8.252500534057617
    4. '(get' → logprob: -10.502500534057617
    5. ' map' → logprob: -11.377500534057617
    6. '(range' → logprob: -12.377500534057617
    7. '(system' → logprob: -13.377500534057617
    8. '  ' → logprob: -13.752500534057617
    9. '(
' → logprob: -13.752500534057617
    10. '	map' → logprob: -14.002500534057617

Token 52: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.008607598952949047
    2. '(' → logprob: -5.258607387542725
    3. '<|end|>' → logprob: -5.883607387542725
    4. ')' → logprob: -8.133607864379883
    5. '<int' → logprob: -9.133607864379883
    6. 'int' → logprob: -9.883607864379883
    7. '<|end|>' → logprob: -10.383607864379883
    8. ']int' → logprob: -10.633607864379883
    9. '[int' → logprob: -10.758607864379883
    10. '(
' → logprob: -11.383607864379883

Token 53: ',' (ID: 11)
  Prédit: '(get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(get' → logprob: -0.34097620844841003
    2. ',' → logprob: -1.8409762382507324
    3. '<|end|>' → logprob: -2.7159762382507324
    4. ',get' → logprob: -3.2159762382507324
    5. '(' → logprob: -4.340976238250732
    6. ')' → logprob: -4.965976238250732
    7. 'get' → logprob: -7.090976238250732
    8. '<|end|>' → logprob: -7.090976238250732
    9. ')get' → logprob: -7.715976238250732
    10. '...' → logprob: -7.840976238250732

Token 54: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.5771108269691467
    2. ' get' → logprob: -0.8271108269691467
    3. '(get' → logprob: -7.077110767364502
    4. ')get' → logprob: -9.45211124420166
    5. ')' → logprob: -9.82711124420166
    6. '[get' → logprob: -9.82711124420166
    7. ' ' → logprob: -10.07711124420166
    8. ',get' → logprob: -11.20211124420166
    9. '	get' → logprob: -11.45211124420166
    10. '  ' → logprob: -11.82711124420166

Token 55: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.0034281739499419928
    2. '(input' → logprob: -6.753427982330322
    3. 'input' → logprob: -7.253427982330322
    4. '(get' → logprob: -8.00342845916748
    5. '(' → logprob: -8.25342845916748
    6. '(system' → logprob: -8.25342845916748
    7. ')' → logprob: -8.50342845916748
    8. '(_' → logprob: -9.37842845916748
    9. '_tokens' → logprob: -9.37842845916748
    10. '))' → logprob: -10.37842845916748

Token 56: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00342211639508605
    2. '()' → logprob: -5.753422260284424
    3. '())' → logprob: -9.378421783447266
    4. '()))' → logprob: -9.503421783447266
    5. '())))' → logprob: -10.503421783447266
    6. ')' → logprob: -11.253421783447266
    7. '()).' → logprob: -11.253421783447266
    8. '()[' → logprob: -12.378421783447266
    9. '().__' → logprob: -12.378421783447266
    10. '()));' → logprob: -12.503421783447266

Token 57: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.001311074709519744
    2. 'strip' → logprob: -6.751311302185059
    3. 'rstrip' → logprob: -9.126311302185059
    4. '().' → logprob: -11.001311302185059
    5. ' split' → logprob: -11.501311302185059
    6. '(split' → logprob: -12.751311302185059
    7. ')' → logprob: -13.876311302185059
    8. 'read' → logprob: -14.501311302185059
    9. '.split' → logprob: -14.876311302185059
    10. '()' → logprob: -15.751311302185059

Token 58: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.008971202187240124
    2. '()' → logprob: -5.758971214294434
    3. '))' → logprob: -5.758971214294434
    4. '())' → logprob: -6.008971214294434
    5. '())))' → logprob: -9.258971214294434
    6. '())).' → logprob: -10.633971214294434
    7. ')' → logprob: -11.883971214294434
    8. '()));' → logprob: -12.008971214294434
    9. '()),' → logprob: -12.133971214294434
    10. '()))
' → logprob: -12.258971214294434

Token 59: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.8334048390388489
    2. ')' → logprob: -1.583404779434204
    3. '())' → logprob: -1.958404779434204
    4. ')])' → logprob: -2.083404779434204
    5. '(),' → logprob: -3.458404779434204
    6. '),' → logprob: -3.583404779434204
    7. '])' → logprob: -4.583405017852783
    8. '()),' → logprob: -4.833405017852783
    9. ')]' → logprob: -5.458405017852783
    10. ')],' → logprob: -5.708405017852783

Token 60: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.43472009897232056
    2. ' _' → logprob: -1.1847200393676758
    3. '_' → logprob: -3.434720039367676
    4. 'range' → logprob: -4.809720039367676
    5. ' ' → logprob: -5.184720039367676
    6. '_range' → logprob: -8.434720039367676
    7. ' i' → logprob: -8.809720039367676
    8. ' in' → logprob: -9.059720039367676
    9. '	range' → logprob: -9.059720039367676
    10. ' xrange' → logprob: -10.184720039367676

Token 61: 'iq' (ID: 24366)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0015887735644355416
    2. 'in' → logprob: -6.876588821411133
    3. 'range' → logprob: -8.001588821411133
    4. ' range' → logprob: -9.126588821411133
    5. ' ' → logprob: -9.251588821411133
    6. '  ' → logprob: -11.626588821411133
    7. ')' → logprob: -13.126588821411133
    8. '(' → logprob: -14.126588821411133
    9. ' i' → logprob: -14.251588821411133
    10. ' _' → logprob: -14.376588821411133

Token 62: 'Az' (ID: 28610)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03939348831772804
    2. ' range' → logprob: -3.914393424987793
    3. 'range' → logprob: -4.914393424987793
    4. '_' → logprob: -5.539393424987793
    5. 'in' → logprob: -5.664393424987793
    6. ' ' → logprob: -6.164393424987793
    7. ' _' → logprob: -7.664393424987793
    8. 'x' → logprob: -7.664393424987793
    9. '_range' → logprob: -8.414393424987793
    10. 'n' → logprob: -8.539393424987793

Token 63: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2601422071456909
    2. ' range' → logprob: -1.760142207145691
    3. 'range' → logprob: -3.7601423263549805
    4. ' ' → logprob: -3.7601423263549805
    5. 'in' → logprob: -5.2601423263549805
    6. '_' → logprob: -5.6351423263549805
    7. ' _' → logprob: -6.6351423263549805
    8. 'i' → logprob: -8.63514232635498
    9. ' i' → logprob: -9.38514232635498
    10. '_range' → logprob: -10.26014232635498

Token 64: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.2014656662940979
    2. 'range' → logprob: -1.7014656066894531
    3. ' ' → logprob: -10.451465606689453
    4. '	range' → logprob: -11.451465606689453
    5. '  ' → logprob: -12.326465606689453
    6. 'rang' → logprob: -13.076465606689453
    7. '   ' → logprob: -13.201465606689453
    8. '(range' → logprob: -13.701465606689453
    9. ' xrange' → logprob: -13.701465606689453
    10. ' rang' → logprob: -14.326465606689453

Token 65: '(var' (ID: 15816)
  Prédit: '(var'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(var' → logprob: -0.0010429323883727193
    2. '(' → logprob: -6.87604284286499
    3. 'var' → logprob: -11.751043319702148
    4. ')var' → logprob: -13.876043319702148
    5. '(VAR' → logprob: -15.251043319702148
    6. '(int' → logprob: -15.251043319702148
    7. ' (' → logprob: -15.376043319702148
    8. ' var' → logprob: -15.626043319702148
    9. '(len' → logprob: -16.37604331970215
    10. '(
' → logprob: -16.37604331970215

Token 66: 'B' (ID: 33)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.004621187690645456
    2. 'B' → logprob: -5.3796210289001465
    3. '_A' → logprob: -15.129621505737305
    4. ' A' → logprob: -15.254621505737305
    5. 'a' → logprob: -16.379621505737305
    6. ')' → logprob: -16.629621505737305
    7. 'D' → logprob: -17.254621505737305
    8. 'А' → logprob: -17.379621505737305
    9. ' ' → logprob: -17.504621505737305
    10. 'AM' → logprob: -17.754621505737305

Token 67: ')])
' (ID: 66560)
  Prédit: ')])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')])' → logprob: -0.016490597277879715
    2. ')' → logprob: -4.641490459442139
    3. ')]' → logprob: -5.391490459442139
    4. ')],' → logprob: -6.641490459442139
    5. ' )' → logprob: -7.266490459442139
    6. '])' → logprob: -10.141490936279297
    7. '),' → logprob: -10.641490936279297
    8. ')])
' → logprob: -10.766490936279297
    9. ' ' → logprob: -11.391490936279297
    10. '   ' → logprob: -11.516490936279297

Token 68: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008411027491092682
    2. '   ' → logprob: -5.633410930633545
    3. '<|end|>' → logprob: -6.633410930633545
    4. '
' → logprob: -7.008410930633545
    5. ',' → logprob: -7.008410930633545
    6. ')
' → logprob: -7.758410930633545
    7. '[' → logprob: -8.008411407470703
    8. ' )' → logprob: -8.883411407470703
    9. ' ' → logprob: -9.258411407470703
    10. ',
' → logprob: -9.383411407470703

Token 69: ' l' (ID: 305)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14418718218803406
    2. '   ' → logprob: -2.5191872119903564
    3. '<|end|>' → logprob: -3.6441872119903564
    4. '
' → logprob: -4.769186973571777
    5. ' ' → logprob: -5.519186973571777
    6. '[' → logprob: -5.519186973571777
    7. ')
' → logprob: -6.644186973571777
    8. '#' → logprob: -6.894186973571777
    9. '  ' → logprob: -7.019186973571777
    10. '.' → logprob: -7.144186973571777

Token 70: 'll' (ID: 680)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.5698085427284241
    2. 'ist' → logprob: -2.0698084831237793
    3. 'ength' → logprob: -2.6948084831237793
    4. 'ine' → logprob: -2.8198084831237793
    5. 'oop' → logprob: -3.1948084831237793
    6. 'og' → logprob: -3.1948084831237793
    7. 'ast' → logprob: -3.6948084831237793
    8. 'inear' → logprob: -3.9448084831237793
    9. 'var' → logprob: -4.569808483123779
    10. 'ayout' → logprob: -5.819808483123779

Token 71: '_board' (ID: 55737)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1601811647415161
    2. '_D' → logprob: -1.5351811647415161
    3. 'D' → logprob: -2.4101810455322266
    4. ' =' → logprob: -2.7851810455322266
    5. 'var' → logprob: -2.7851810455322266
    6. 'M' → logprob: -2.9101810455322266
    7. 'A' → logprob: -3.0351810455322266
    8. '_M' → logprob: -4.410181045532227
    9. 'ength' → logprob: -4.535181045532227
    10. '_var' → logprob: -4.660181045532227

Token 72: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06850993633270264
    2. '=' → logprob: -2.943510055541992
    3. '_' → logprob: -4.693510055541992
    4. ' ' → logprob: -6.318510055541992
    5. ',' → logprob: -6.818510055541992
    6. '[' → logprob: -8.068510055541992
    7. ')' → logprob: -8.318510055541992
    8. '  ' → logprob: -8.818510055541992
    9. '[]' → logprob: -8.818510055541992
    10. '=[]' → logprob: -8.943510055541992

Token 73: ' [' (ID: 723)
  Prédit: ' NUM'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' NUM' → logprob: -0.07059038430452347
    2. 'NUM' → logprob: -2.8205904960632324
    3. ' ' → logprob: -5.570590496063232
    4. '[]' → logprob: -6.695590496063232
    5. ' [' → logprob: -6.945590496063232
    6. ' M' → logprob: -7.320590496063232
    7. ' []' → logprob: -7.320590496063232
    8. '[' → logprob: -8.445590019226074
    9. '(NUM' → logprob: -8.445590019226074
    10. ' np' → logprob: -9.070590019226074

Token 74: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.9404910802841187
    2. '[' → logprob: -1.1904910802841187
    3. '0' → logprob: -1.4404910802841187
    4. ' [' → logprob: -4.065491199493408
    5. '[]' → logprob: -4.315491199493408
    6. ' list' → logprob: -4.315491199493408
    7. '[list' → logprob: -4.440491199493408
    8. '[M' → logprob: -5.190491199493408
    9. 'False' → logprob: -6.565491199493408
    10. '[int' → logprob: -6.690491199493408

Token 75: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.001375591498799622
    2. '(' → logprob: -7.001375675201416
    3. '(range' → logprob: -7.876375675201416
    4. '()' → logprob: -10.126375198364258
    5. '()]' → logprob: -10.751375198364258
    6. 'map' → logprob: -11.501375198364258
    7. '(int' → logprob: -12.876375198364258
    8. '(
' → logprob: -13.001375198364258
    9. '(system' → logprob: -13.876375198364258
    10. '(

' → logprob: -14.001375198364258

Token 76: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -8.232493564719334e-05
    2. '(' → logprob: -10.250082015991211
    3. 'int' → logprob: -10.625082015991211
    4. ',int' → logprob: -11.750082015991211
    5. '<int' → logprob: -12.375082015991211
    6. ')' → logprob: -12.625082015991211
    7. '=int' → logprob: -13.000082015991211
    8. ']int' → logprob: -13.000082015991211
    9. '<|end|>' → logprob: -13.625082015991211
    10. '(
' → logprob: -14.375082015991211

Token 77: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05694001540541649
    2. ',get' → logprob: -3.5569400787353516
    3. '(get' → logprob: -3.6819400787353516
    4. '(' → logprob: -6.556940078735352
    5. '(),' → logprob: -9.431940078735352
    6. '<|end|>' → logprob: -9.681940078735352
    7. 'get' → logprob: -10.556940078735352
    8. ' ,' → logprob: -10.931940078735352
    9. ',(' → logprob: -11.431940078735352
    10. ')' → logprob: -12.056940078735352

Token 78: ' get' (ID: 717)
  Prédit: ' get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.2817325294017792
    2. 'get' → logprob: -1.4067325592041016
    3. '(get' → logprob: -7.781732559204102
    4. ')get' → logprob: -9.406732559204102
    5. '[get' → logprob: -10.656732559204102
    6. ' system' → logprob: -11.156732559204102
    7. ')' → logprob: -11.156732559204102
    8. ',get' → logprob: -11.656732559204102
    9. 'system' → logprob: -12.406732559204102
    10. '	get' → logprob: -13.031732559204102

Token 79: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.0012652362929657102
    2. 'input' → logprob: -7.001265048980713
    3. '(input' → logprob: -8.751265525817871
    4. '(get' → logprob: -9.501265525817871
    5. '(_' → logprob: -10.376265525817871
    6. '(' → logprob: -10.501265525817871
    7. '```' → logprob: -11.501265525817871
    8. ' input' → logprob: -12.126265525817871
    9. ')' → logprob: -12.126265525817871
    10. '(system' → logprob: -12.501265525817871

Token 80: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00021033499797340482
    2. '()' → logprob: -8.500210762023926
    3. '())' → logprob: -12.625210762023926
    4. '()[' → logprob: -14.250210762023926
    5. '()
' → logprob: -14.500210762023926
    6. ')' → logprob: -14.500210762023926
    7. '<|end|>' → logprob: -15.000210762023926
    8. '().'' → logprob: -15.125210762023926
    9. '()))' → logprob: -15.500210762023926
    10. ' ().' → logprob: -15.625210762023926

Token 81: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.3676733690081164e-05
    2. ' split' → logprob: -11.62502384185791
    3. ')' → logprob: -11.75002384185791
    4. '(split' → logprob: -12.50002384185791
    5. 'strip' → logprob: -13.62502384185791
    6. '())' → logprob: -14.62502384185791
    7. '().' → logprob: -14.75002384185791
    8. '()' → logprob: -14.87502384185791
    9. 'rstrip' → logprob: -15.37502384185791
    10. 'spl' → logprob: -15.75002384185791

Token 82: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.006031299941241741
    2. '()' → logprob: -5.756031513214111
    3. '())' → logprob: -6.006031513214111
    4. '))' → logprob: -8.006031036376953
    5. '()));' → logprob: -11.131031036376953
    6. '()]' → logprob: -11.631031036376953
    7. '())).' → logprob: -11.881031036376953
    8. '()))
' → logprob: -12.006031036376953
    9. '()),' → logprob: -12.631031036376953
    10. '(' → logprob: -12.756031036376953

Token 83: ' for' (ID: 395)
  Prédit: '(var'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(var' → logprob: -0.16496236622333527
    2. '(range' → logprob: -2.5399622917175293
    3. '(' → logprob: -3.2899622917175293
    4. '()' → logprob: -3.5399622917175293
    5. ')' → logprob: -6.289962291717529
    6. '())' → logprob: -6.789962291717529
    7. ' for' → logprob: -6.789962291717529
    8. 'for' → logprob: -7.539962291717529
    9. ' (' → logprob: -7.664962291717529
    10. '()]' → logprob: -8.039962768554688

Token 84: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0010948538547381759
    2. 'range' → logprob: -7.626094818115234
    3. '(range' → logprob: -7.876094818115234
    4. ' _' → logprob: -8.626094818115234
    5. '_' → logprob: -10.001094818115234
    6. '_range' → logprob: -13.876094818115234
    7. ' ' → logprob: -14.626094818115234
    8. '	range' → logprob: -14.751094818115234
    9. '(' → logprob: -15.376094818115234
    10. ' xrange' → logprob: -16.376094818115234

Token 85: 'L' (ID: 43)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.06983327120542526
    2. 'range' → logprob: -3.319833278656006
    3. ' _' → logprob: -4.194833278656006
    4. '_' → logprob: -5.319833278656006
    5. '(range' → logprob: -5.569833278656006
    6. ' in' → logprob: -6.194833278656006
    7. 'var' → logprob: -6.819833278656006
    8. ' i' → logprob: -7.194833278656006
    9. ' var' → logprob: -7.194833278656006
    10. 'i' → logprob: -7.319833278656006

Token 86: 'Ink' (ID: 122773)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.41491788625717163
    2. ' range' → logprob: -1.2899179458618164
    3. 'range' → logprob: -3.0399179458618164
    4. 'in' → logprob: -4.914917945861816
    5. '_' → logprob: -5.664917945861816
    6. ' _' → logprob: -6.414917945861816
    7. 'i' → logprob: -6.414917945861816
    8. ' ' → logprob: -7.289917945861816
    9. '(range' → logprob: -8.039917945861816
    10. 'A' → logprob: -8.414917945861816

Token 87: ' in' (ID: 306)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.32641440629959106
    2. '(var' → logprob: -1.9514143466949463
    3. ' in' → logprob: -2.5764143466949463
    4. '(' → logprob: -3.5764143466949463
    5. 'range' → logprob: -3.7014143466949463
    6. ' range' → logprob: -5.701414585113525
    7. 'in' → logprob: -5.826414585113525
    8. 'var' → logprob: -7.451414585113525
    9. ' (' → logprob: -8.076414108276367
    10. '(in' → logprob: -9.076414108276367

Token 88: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.17976394295692444
    2. 'range' → logprob: -1.804763913154602
    3. '(range' → logprob: -11.554763793945312
    4. '	range' → logprob: -12.429763793945312
    5. ' ' → logprob: -12.554763793945312
    6. '  ' → logprob: -14.304763793945312
    7. '   ' → logprob: -14.929763793945312
    8. '_' → logprob: -15.804763793945312
    9. ' xrange' → logprob: -15.929763793945312
    10. 'r' → logprob: -15.929763793945312

Token 89: '(var' (ID: 15816)
  Prédit: '(var'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(var' → logprob: -0.0007272057700902224
    2. '(' → logprob: -7.25072717666626
    3. ' (' → logprob: -11.625727653503418
    4. 'var' → logprob: -12.250727653503418
    5. '(VAR' → logprob: -13.750727653503418
    6. ' var' → logprob: -13.875727653503418
    7. ')var' → logprob: -14.875727653503418
    8. '(variable' → logprob: -15.000727653503418
    9. '(v' → logprob: -15.500727653503418
    10. '[var' → logprob: -16.3757266998291

Token 90: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0004891689168289304
    2. 'B' → logprob: -7.625489234924316
    3. 'А' → logprob: -15.375489234924316
    4. ' A' → logprob: -15.437989234924316
    5. '_A' → logprob: -15.500489234924316
    6. 'a' → logprob: -16.06298828125
    7. '_' → logprob: -16.31298828125
    8. ')' → logprob: -16.43798828125
    9. 'C' → logprob: -17.25048828125
    10. 'D' → logprob: -17.31298828125

Token 91: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0005507678724825382
    2. ' )' → logprob: -8.125551223754883
    3. ')' → logprob: -8.500551223754883
    4. ']' → logprob: -10.625551223754883
    5. ')])' → logprob: -11.375551223754883
    6. ' ]' → logprob: -11.875551223754883
    7. '   ' → logprob: -13.125551223754883
    8. ')],' → logprob: -13.750551223754883
    9. '])' → logprob: -14.000551223754883
    10. '])]' → logprob: -14.250551223754883

Token 92: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.151417851448059
    2. '   ' → logprob: -1.651417851448059
    3. '
' → logprob: -1.776417851448059
    4. 'for' → logprob: -2.4014177322387695
    5. '<|end|>' → logprob: -2.6514177322387695
    6. '#' → logprob: -3.4014177322387695
    7. '[' → logprob: -3.5264177322387695
    8. 'def' → logprob: -3.9014177322387695
    9. ' for' → logprob: -4.5264177322387695
    10. ' ' → logprob: -4.5264177322387695

Token 93: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.659585177898407
    2. '   ' → logprob: -1.1595852375030518
    3. ' for' → logprob: -2.2845852375030518
    4. 'result' → logprob: -4.034584999084473
    5. 'M' → logprob: -4.659584999084473
    6. '#' (adapté à ' #') → logprob: -5.409584999084473
    7. 'if' → logprob: -5.534584999084473
    8. 'return' → logprob: -5.659584999084473
    9. ' ' → logprob: -6.034584999084473
    10. 'sum' → logprob: -6.284584999084473

Token 94: ' Ω' (ID: 159488)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0227866172790527
    2. '#' → logprob: -1.7727866172790527
    3. ' for' → logprob: -2.1477866172790527
    4. ' #' → logprob: -2.2727866172790527
    5. ' ' → logprob: -2.3977866172790527
    6. '<|end|>' → logprob: -2.7727866172790527
    7. '    ' → logprob: -3.2727866172790527
    8. 'for' → logprob: -3.8977866172790527
    9. '  ' → logprob: -5.397786617279053
    10. '<|end|>' → logprob: -5.397786617279053

Token 95: 'R' (ID: 49)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2017309069633484
    2. '<|end|>' → logprob: -2.326730966567993
    3. '#' → logprob: -3.951730966567993
    4. ' for' → logprob: -4.326730728149414
    5. '
' → logprob: -4.451730728149414
    6. ' ' → logprob: -4.576730728149414
    7. 'for' → logprob: -4.826730728149414
    8. '    
' → logprob: -5.576730728149414
    9. '    ' → logprob: -5.701730728149414
    10. ')' → logprob: -5.701730728149414

Token 96: 'IGIN' (ID: 126108)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.668611466884613
    2. ')' → logprob: -2.043611526489258
    3. '<|end|>' → logprob: -2.418611526489258
    4. ' ' → logprob: -2.668611526489258
    5. ':' → logprob: -3.543611526489258
    6. '[' → logprob: -3.793611526489258
    7. '#' → logprob: -3.793611526489258
    8. '.' → logprob: -4.168611526489258
    9. 'for' → logprob: -4.168611526489258
    10. '_' → logprob: -4.293611526489258

Token 97: ':' (ID: 25)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37367162108421326
    2. '<|end|>' → logprob: -1.7486716508865356
    3. ' ' → logprob: -3.498671531677246
    4. ')' → logprob: -3.748671531677246
    5. '#' → logprob: -3.873671531677246
    6. '    ' → logprob: -4.123671531677246
    7. '
' → logprob: -4.748671531677246
    8. ':' → logprob: -5.248671531677246
    9. '    
' → logprob: -5.248671531677246
    10. '[' → logprob: -5.498671531677246

Token 98: ' cost' (ID: 3097)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.106216311454773
    2. '    ' → logprob: -1.481216311454773
    3. ' for' → logprob: -1.606216311454773
    4. '   ' → logprob: -1.856216311454773
    5. 'for' → logprob: -3.9812164306640625
    6. '<|end|>' → logprob: -3.9812164306640625
    7. ' M' → logprob: -4.7312164306640625
    8. ' var' → logprob: -5.1062164306640625
    9. '  ' → logprob: -5.2312164306640625
    10. ' l' → logprob: -5.8562164306640625

Token 99: '[i' (ID: 1768)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9655084013938904
    2. '_' → logprob: -0.9655084013938904
    3. '[' → logprob: -2.465508460998535
    4. ' =' → logprob: -3.090508460998535
    5. ')' → logprob: -3.340508460998535
    6. '=' → logprob: -3.840508460998535
    7. 's' → logprob: -4.090508460998535
    8. '_matrix' → logprob: -4.465508460998535
    9. ' ' → logprob: -4.840508460998535
    10. ']' → logprob: -5.965508460998535

Token 100: '][' (ID: 2696)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.43385985493659973
    2. 's' → logprob: -1.1838598251342773
    3. ',' → logprob: -4.183859825134277
    4. ' ]' → logprob: -4.558859825134277
    5. '][' → logprob: -4.558859825134277
    6. '])' → logprob: -6.058859825134277
    7. '_]' → logprob: -6.183859825134277
    8. ')' → logprob: -6.558859825134277
    9. ' ' → logprob: -7.058859825134277
    10. ' ][' → logprob: -7.558859825134277

Token 101: 'j' (ID: 73)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7393311858177185
    2. '][' → logprob: -0.8643311858177185
    3. 'j' → logprob: -2.8643312454223633
    4. 'i' → logprob: -3.6143312454223633
    5. ' ][' → logprob: -5.114331245422363
    6. ' ]' → logprob: -5.614331245422363
    7. ' ' → logprob: -6.489331245422363
    8. '][]' → logprob: -7.239331245422363
    9. 'var' → logprob: -7.489331245422363
    10. ',j' → logprob: -7.489331245422363

Token 102: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0822722539305687
    2. '][' → logprob: -2.7072722911834717
    3. ' ]' → logprob: -5.457272052764893
    4. ',' → logprob: -6.457272052764893
    5. ']=' → logprob: -6.582272052764893
    6. ')' → logprob: -6.957272052764893
    7. ' ][' → logprob: -7.082272052764893
    8. '])' → logprob: -7.582272052764893
    9. '   ' → logprob: -7.582272052764893
    10. ' =' → logprob: -7.707272052764893

Token 103: ' :=' (ID: 3405)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0337486267089844
    2. ' =' → logprob: -1.6587486267089844
    3. '=' → logprob: -1.9087486267089844
    4. ']' → logprob: -1.9087486267089844
    5. ',' → logprob: -2.7837486267089844
    6. '   ' → logprob: -3.2837486267089844
    7. '<|end|>' → logprob: -3.9087486267089844
    8. ' ' → logprob: -4.533748626708984
    9. '_' → logprob: -4.658748626708984
    10. ')' → logprob: -5.658748626708984

Token 104: ' mod' (ID: 1812)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1937892585992813
    2. ' ' → logprob: -2.56878924369812
    3. ' [' → logprob: -3.94378924369812
    4. ' i' → logprob: -4.318789482116699
    5. '[' → logprob: -4.443789482116699
    6. 'i' → logprob: -4.443789482116699
    7. ' M' → logprob: -4.943789482116699
    8. 'var' → logprob: -5.193789482116699
    9. '1' → logprob: -5.568789482116699
    10. ' (' → logprob: -5.693789482116699

Token 105: '3' (ID: 18)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7731578350067139
    2. '[' → logprob: -1.2731578350067139
    3. ']' → logprob: -2.898157835006714
    4. '   ' → logprob: -3.023157835006714
    5. ' (' → logprob: -3.023157835006714
    6. ' ' → logprob: -3.398157835006714
    7. ')' → logprob: -3.523157835006714
    8. '_' → logprob: -4.898158073425293
    9. '[i' → logprob: -5.773158073425293
    10. '  ' → logprob: -5.898158073425293

Token 106: '==' (ID: 560)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9741220474243164
    2. ']' → logprob: -1.3491220474243164
    3. ')' → logprob: -2.0991220474243164
    4. '(' → logprob: -2.5991220474243164
    5. '[
' → logprob: -2.7241220474243164
    6. 'def' → logprob: -3.9741220474243164
    7. ' ' → logprob: -4.099122047424316
    8. '   ' → logprob: -4.349122047424316
    9. '(
' → logprob: -4.724122047424316
    10. '
' → logprob: -4.724122047424316

Token 107: 'i' (ID: 72)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5104131698608398
    2. ' (' → logprob: -1.7604131698608398
    3. ' ' → logprob: -2.26041316986084
    4. ']' → logprob: -3.13541316986084
    5. ')' → logprob: -4.51041316986084
    6. '(i' → logprob: -4.51041316986084
    7. ' ]' → logprob: -4.63541316986084
    8. '0' → logprob: -4.88541316986084
    9. '   ' → logprob: -5.01041316986084
    10. '(M' → logprob: -5.51041316986084

Token 108: ' group' (ID: 3566)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2079336643218994
    2. '[' → logprob: -1.4579336643218994
    3. '   ' → logprob: -1.7079336643218994
    4. '_' → logprob: -1.9579336643218994
    5. ',' → logprob: -3.4579336643218994
    6. ']' → logprob: -3.9579336643218994
    7. 'def' → logprob: -4.08293342590332
    8. ')' → logprob: -4.20793342590332
    9. '  ' → logprob: -4.70793342590332
    10. '#' → logprob: -4.70793342590332

Token 109: ' assigned' (ID: 21482)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.5354417562484741
    2. '_' → logprob: -1.7854417562484741
    3. '   ' → logprob: -1.9104417562484741
    4. ')' → logprob: -2.2854418754577637
    5. ']' → logprob: -2.7854418754577637
    6. ',' → logprob: -2.9104418754577637
    7. ' =' → logprob: -3.0354418754577637
    8. '[' → logprob: -3.6604418754577637
    9. 'def' → logprob: -3.7854418754577637
    10. '(' → logprob: -3.9104418754577637

Token 110: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.105846881866455
    2. ' ' → logprob: -1.605846881866455
    3. '_' → logprob: -2.105846881866455
    4. ')' → logprob: -2.230846881866455
    5. ']' → logprob: -2.480846881866455
    6. '[' → logprob: -2.855846881866455
    7. '
' → logprob: -3.730846881866455
    8. '  ' → logprob: -4.230846881866455
    9. ',' → logprob: -4.355846881866455
    10. 'def' → logprob: -4.605846881866455

Token 111: ' color' (ID: 3089)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.14446526765823364
    2. 'j' → logprob: -2.144465208053589
    3. ' i' → logprob: -6.019465446472168
    4. ' l' → logprob: -6.019465446472168
    5. ' range' → logprob: -6.019465446472168
    6. ' var' → logprob: -6.144465446472168
    7. 'var' → logprob: -6.394465446472168
    8. 'range' → logprob: -6.894465446472168
    9. ' ' → logprob: -7.269465446472168
    10. 'i' → logprob: -7.269465446472168

Token 112: ' j' (ID: 441)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -2.035299062728882
    2. '   ' → logprob: -2.035299062728882
    3. ' ' → logprob: -2.035299062728882
    4. ')' → logprob: -2.160299062728882
    5. '[' → logprob: -2.160299062728882
    6. '
' → logprob: -2.660299062728882
    7. ',' → logprob: -3.160299062728882
    8. ':' → logprob: -3.410299062728882
    9. 'def' → logprob: -3.410299062728882
    10. ' =' → logprob: -3.535299062728882

Token 113: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.3936783075332642
    2. '
' → logprob: -1.6436783075332642
    3. '[' → logprob: -1.8936783075332642
    4. '   ' → logprob: -2.6436781883239746
    5. ',' → logprob: -2.7686781883239746
    6. ']' → logprob: -3.2686781883239746
    7. ' ' → logprob: -3.2686781883239746
    8. ')' → logprob: -3.3936781883239746
    9. 'def' → logprob: -3.6436781883239746
    10. '#' → logprob: -3.8936781883239746

Token 114: ' total' (ID: 3609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7140508890151978
    2. ' ' → logprob: -1.4640508890151978
    3. ')' → logprob: -2.339050769805908
    4. '    ' → logprob: -3.214050769805908
    5. ' ]' → logprob: -3.339050769805908
    6. '#' → logprob: -4.214050769805908
    7. ']' → logprob: -4.339050769805908
    8. '  ' → logprob: -4.589050769805908
    9. ':' → logprob: -4.839050769805908
    10. ' :' → logprob: -5.214050769805908

Token 115: ' discomfort' (ID: 54523)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1856600046157837
    2. '_' → logprob: -1.3106600046157837
    3. '_cost' → logprob: -1.3106600046157837
    4. ']' → logprob: -3.060659885406494
    5. 'cost' → logprob: -3.560659885406494
    6. ' ' → logprob: -4.310659885406494
    7. '
' → logprob: -4.435659885406494
    8. '<|end|>' → logprob: -4.935659885406494
    9. ' =' → logprob: -5.185659885406494
    10. 's' → logprob: -5.310659885406494

Token 116: '
' (ID: 198)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.7202403545379639
    2. '   ' → logprob: -1.8452403545379639
    3. ')' → logprob: -2.220240354537964
    4. 'def' → logprob: -2.470240354537964
    5. ' ' → logprob: -2.595240354537964
    6. ']' → logprob: -2.845240354537964
    7. ',' → logprob: -3.095240354537964
    8. '_cost' → logprob: -3.220240354537964
    9. '
' → logprob: -3.345240354537964
    10. '(' → logprob: -3.470240354537964

Token 117: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2569037675857544
    2. '_' → logprob: -1.8819037675857544
    3. '   ' → logprob: -2.006903648376465
    4. '
' → logprob: -2.381903648376465
    5. 'cost' → logprob: -2.381903648376465
    6. ':' → logprob: -3.131903648376465
    7. '_cost' → logprob: -3.381903648376465
    8. 'def' → logprob: -3.631903648376465
    9. 'c' → logprob: -4.006903648376465
    10. ')' → logprob: -4.006903648376465

Token 118: ' awkward' (ID: 52520)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.31567177176475525
    2. ' ' → logprob: -3.065671682357788
    3. ' =' → logprob: -3.190671682357788
    4. '_cost' → logprob: -3.190671682357788
    5. ' cost' → logprob: -3.440671682357788
    6. '   ' → logprob: -3.565671682357788
    7. 'c' → logprob: -3.940671682357788
    8. '
' → logprob: -4.440671920776367
    9. ':' → logprob: -4.440671920776367
    10. '_' → logprob: -4.940671920776367

Token 119: ' =' (ID: 314)
  Prédit: '_cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.3540085554122925
    2. '_' → logprob: -1.7290085554122925
    3. ' =' → logprob: -2.479008674621582
    4. '=' → logprob: -3.854008674621582
    5. 's' → logprob: -5.354008674621582
    6. '_dp' → logprob: -6.229008674621582
    7. ',' → logprob: -6.729008674621582
    8. 'cost' → logprob: -6.854008674621582
    9. '_matrix' → logprob: -7.104008674621582
    10. ' ' → logprob: -7.354008674621582

Token 120: ' NUM' (ID: 32253)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -1.0729819536209106
    2. '[' → logprob: -1.5729819536209106
    3. 'NUM' → logprob: -1.6979819536209106
    4. ' [[' → logprob: -1.8229819536209106
    5. ' [' → logprob: -2.822981834411621
    6. ' NUM' → logprob: -3.822981834411621
    7. ' [[[' → logprob: -3.947981834411621
    8. '[-' → logprob: -7.197981834411621
    9. '[
' → logprob: -7.197981834411621
    10. '[]' → logprob: -7.322981834411621

Token 121: 'PY' (ID: 64719)
  Prédit: 'PY'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'PY' → logprob: -0.00024096666311379522
    2. 'Y' → logprob: -8.62524127960205
    3. 'YP' → logprob: -9.87524127960205
    4. 'P' → logprob: -12.12524127960205
    5. 'OPY' → logprob: -13.25024127960205
    6. 'MODULE' → logprob: -14.75024127960205
    7. ' PY' → logprob: -15.12524127960205
    8. '```' → logprob: -15.25024127960205
    9. 'PTY' → logprob: -15.62524127960205
    10. 'Py' → logprob: -15.75024127960205

Token 122: 'MODULE' (ID: 61663)
  Prédit: 'MODULE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MODULE' → logprob: -1.9146995327901095e-05
    2. '_MODULE' → logprob: -11.625019073486328
    3. 'ODULE' → logprob: -12.625019073486328
    4. 'MOD' → logprob: -12.625019073486328
    5. 'module' → logprob: -12.750019073486328
    6. ' MODULE' → logprob: -15.000019073486328
    7. 'M' → logprob: -16.000019073486328
    8. 'MO' → logprob: -16.500019073486328
    9. '```' → logprob: -17.500019073486328
    10. 'Module' → logprob: -17.625019073486328

Token 123: '.zeros' (ID: 29146)
  Prédit: '.zeros'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.zeros' → logprob: -0.024783015251159668
    2. '.full' → logprob: -3.899783134460449
    3. 'zeros' → logprob: -6.524783134460449
    4. '.' → logprob: -6.774783134460449
    5. ' zeros' → logprob: -7.524783134460449
    6. '.inf' → logprob: -7.649783134460449
    7. '.ndarray' → logprob: -8.27478313446045
    8. '.array' → logprob: -9.27478313446045
    9. 'full' → logprob: -9.27478313446045
    10. 'array' → logprob: -9.64978313446045

Token 124: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.00033832306507974863
    2. '(' → logprob: -8.000338554382324
    3. '([' → logprob: -13.125338554382324
    4. ' ((' → logprob: -15.125338554382324
    5. '(shape' → logprob: -15.500338554382324
    6. '<|end|>' → logprob: -16.750337600708008
    7. ' ' → logprob: -16.875337600708008
    8. '(
' → logprob: -17.000337600708008
    9. '(([' → logprob: -17.125337600708008
    10. ' (' → logprob: -17.250337600708008

Token 125: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.040086496621370316
    2. '(' → logprob: -3.290086507797241
    3. ' ' → logprob: -6.290086269378662
    4. ' (' → logprob: -8.91508674621582
    5. '6' → logprob: -10.54008674621582
    6. '9' → logprob: -11.91508674621582
    7. ',' → logprob: -12.29008674621582
    8. ')' → logprob: -12.41508674621582
    9. '
' → logprob: -12.91508674621582
    10. '   ' → logprob: -13.47758674621582

Token 126: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006736916024237871
    2. ' ,' → logprob: -5.006736755371094
    3. ' ' → logprob: -11.631736755371094
    4. '3' → logprob: -12.006736755371094
    5. ',
' → logprob: -13.506736755371094
    6. '<|end|>' → logprob: -13.506736755371094
    7. ',len' → logprob: -14.756736755371094
    8. '```' → logprob: -14.881736755371094
    9. ')' → logprob: -15.131736755371094
    10. '   ' → logprob: -15.256736755371094

Token 127: ' var' (ID: 972)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0034835392143577337
    2. ' ' → logprob: -5.878483772277832
    3. 'var' → logprob: -8.003483772277832
    4. '4' → logprob: -8.503483772277832
    5. '   ' → logprob: -9.753483772277832
    6. ' var' → logprob: -10.628483772277832
    7. 'lll' → logprob: -11.315983772277832
    8. '  ' → logprob: -11.440983772277832
    9. 'len' → logprob: -11.753483772277832
    10. ')' → logprob: -12.378483772277832

Token 128: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.25204676389694214
    2. 'A' → logprob: -1.502046823501587
    3. 'C' → logprob: -10.127046585083008
    4. ',' → logprob: -10.564546585083008
    5. '3' → logprob: -11.689546585083008
    6. ' B' → logprob: -11.752046585083008
    7. ' A' → logprob: -12.189546585083008
    8. ' ' → logprob: -12.439546585083008
    9. ')' → logprob: -12.939546585083008
    10. 'D' → logprob: -13.252046585083008

Token 129: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005561132449656725
    2. ' ,' → logprob: -5.255561351776123
    3. '+' → logprob: -8.380560874938965
    4. ' +' → logprob: -9.755560874938965
    5. '),' → logprob: -10.630560874938965
    6. ')' → logprob: -12.255560874938965
    7. ' ' → logprob: -12.755560874938965
    8. '3' → logprob: -13.505560874938965
    9. ')),' → logprob: -13.755560874938965
    10. '))' → logprob: -13.755560874938965

Token 130: ' dtype' (ID: 29770)
  Prédit: 'dtype'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dtype' → logprob: -0.0739453136920929
    2. ' dtype' → logprob: -3.0739452838897705
    3. ')' → logprob: -4.07394552230835
    4. 'float' → logprob: -5.57394552230835
    5. '3' → logprob: -6.32394552230835
    6. 'int' → logprob: -6.69894552230835
    7. ' ' → logprob: -7.94894552230835
    8. ' float' → logprob: -7.94894552230835
    9. '100' → logprob: -9.823945045471191
    10. 'var' → logprob: -10.198945045471191

Token 131: '=int' (ID: 37431)
  Prédit: '=int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=int' → logprob: -0.07891666889190674
    2. '=' → logprob: -2.578916549682617
    3. 'int' → logprob: -11.953916549682617
    4. '=num' → logprob: -11.953916549682617
    5. '=
' → logprob: -12.328916549682617
    6. '=np' → logprob: -12.828916549682617
    7. '=n' → logprob: -12.828916549682617
    8. ' =' → logprob: -13.203916549682617
    9. '=float' → logprob: -13.953916549682617
    10. '=

' → logprob: -14.828916549682617

Token 132: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.47495681833243e-05
    2. ' )' → logprob: -11.500024795532227
    3. ')
' → logprob: -12.125024795532227
    4. ',' → logprob: -12.625024795532227
    5. '))' → logprob: -13.250024795532227
    6. ')...' → logprob: -14.000024795532227
    7. '),' → logprob: -14.375024795532227
    8. ');' → logprob: -14.500024795532227
    9. ',)' → logprob: -14.625024795532227
    10. ')`' → logprob: -15.000024795532227

Token 133: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9444910287857056
    2. '   ' → logprob: -1.0694910287857056
    3. '
' → logprob: -1.9444910287857056
    4. '<|end|>' → logprob: -2.569490909576416
    5. '    
' → logprob: -4.944490909576416
    6. '[' → logprob: -5.069490909576416
    7. ' ' → logprob: -5.194490909576416
    8. ' for' → logprob: -5.444490909576416
    9. 'for' → logprob: -5.694490909576416
    10. 'def' → logprob: -6.194490909576416

Token 134: ' bucket' (ID: 28257)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6034582257270813
    2. ')' → logprob: -1.4784581661224365
    3. '
' → logprob: -2.1034581661224365
    4. ' for' → logprob: -2.9784581661224365
    5. '#' → logprob: -4.228458404541016
    6. '<|end|>' → logprob: -4.353458404541016
    7. '.' → logprob: -5.353458404541016
    8. ' ' → logprob: -5.478458404541016
    9. ',' → logprob: -6.228458404541016
    10. 'def' → logprob: -6.478458404541016

Token 135: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8028472065925598
    2. '=' → logprob: -1.177847146987915
    3. ' =' → logprob: -2.052847146987915
    4. 's' → logprob: -2.177847146987915
    5. '[' → logprob: -7.802847385406494
    6. '_s' → logprob: -8.052846908569336
    7. ')' → logprob: -8.552846908569336
    8. '_=' → logprob: -8.552846908569336
    9. ']' → logprob: -8.802846908569336
    10. '=[]' → logprob: -9.052846908569336

Token 136: ' NUM' (ID: 32253)
  Prédit: 'NUM'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NUM' → logprob: -0.14662975072860718
    2. ' NUM' → logprob: -2.396629810333252
    3. '[' → logprob: -4.021629810333252
    4. '[]' → logprob: -4.646629810333252
    5. ' [' → logprob: -4.896629810333252
    6. '0' → logprob: -5.896629810333252
    7. ' ' → logprob: -6.271629810333252
    8. ' []' → logprob: -6.771629810333252
    9. 'awk' → logprob: -7.146629810333252
    10. ' [[]' → logprob: -7.896629810333252

Token 137: 'PY' (ID: 64719)
  Prédit: 'PY'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'PY' → logprob: -7.3458322731312364e-06
    2. 'Y' → logprob: -12.875007629394531
    3. 'PTY' → logprob: -13.375007629394531
    4. 'YP' → logprob: -13.625007629394531
    5. 'OPY' → logprob: -13.875007629394531
    6. 'P' → logprob: -14.875007629394531
    7. 'Py' → logprob: -15.500007629394531
    8. ' PY' → logprob: -15.750007629394531
    9. '```' → logprob: -17.00000762939453
    10. 'KY' → logprob: -17.37500762939453

Token 138: 'MODULE' (ID: 61663)
  Prédit: 'MODULE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MODULE' → logprob: -0.00021724513499066234
    2. 'ODULE' → logprob: -8.50021743774414
    3. '_MODULE' → logprob: -11.50021743774414
    4. 'MOD' → logprob: -13.25021743774414
    5. 'PY' → logprob: -13.87521743774414
    6. 'module' → logprob: -15.12521743774414
    7. 'odule' → logprob: -15.62521743774414
    8. ' MODULE' → logprob: -15.62521743774414
    9. 'MO' → logprob: -15.75021743774414
    10. 'OM' → logprob: -17.50021743774414

Token 139: '.zeros' (ID: 29146)
  Prédit: '.zeros'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.zeros' → logprob: -0.0017464581178501248
    2. '.array' → logprob: -7.626746654510498
    3. '.arange' → logprob: -8.12674617767334
    4. '.ndarray' → logprob: -8.37674617767334
    5. '.' → logprob: -8.50174617767334
    6. '.empty' → logprob: -8.75174617767334
    7. '.ones' → logprob: -8.87674617767334
    8. '.vstack' → logprob: -9.50174617767334
    9. '.full' → logprob: -10.50174617767334
    10. '.argmax' → logprob: -10.75174617767334

Token 140: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0015080781886354089
    2. '(' → logprob: -6.6265082359313965
    3. ' ((' → logprob: -9.001507759094238
    4. ' (' → logprob: -10.751507759094238
    5. '<|end|>' → logprob: -11.376507759094238
    6. ' ' → logprob: -11.501507759094238
    7. '(
' → logprob: -11.876507759094238
    8. '_like' → logprob: -12.501507759094238
    9. '>((' → logprob: -13.876507759094238
    10. '__((' → logprob: -14.751507759094238

Token 141: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.11593615263700485
    2. '(' → logprob: -2.240936040878296
    3. ' ' → logprob: -6.740936279296875
    4. 'var' → logprob: -6.865936279296875
    5. ' (' → logprob: -7.615936279296875
    6. ')' → logprob: -9.240936279296875
    7. ',' → logprob: -9.615936279296875
    8. '   ' → logprob: -10.240936279296875
    9. '(var' → logprob: -10.490936279296875
    10. ' var' → logprob: -10.865936279296875

Token 142: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002214172709500417
    2. ' ,' → logprob: -8.750221252441406
    3. ',
' → logprob: -10.750221252441406
    4. ',var' → logprob: -10.750221252441406
    5. 'import' → logprob: -12.500221252441406
    6. '+' → logprob: -12.625221252441406
    7. 'var' → logprob: -13.375221252441406
    8. ')' → logprob: -13.500221252441406
    9. '),' → logprob: -13.812721252441406
    10. '‌,' → logprob: -13.937721252441406

Token 143: ' var' (ID: 972)
  Prédit: 'var'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'var' → logprob: -0.06620703637599945
    2. ' var' → logprob: -2.941206932067871
    3. '3' → logprob: -4.566206932067871
    4. ' ' → logprob: -7.816206932067871
    5. ')var' → logprob: -8.816206932067871
    6. ')' → logprob: -9.191206932067871
    7. '   ' → logprob: -9.941206932067871
    8. '2' → logprob: -10.441206932067871
    9. '  ' → logprob: -10.691206932067871
    10. 'num' → logprob: -11.128706932067871

Token 144: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.00023405285901390016
    2. 'A' → logprob: -8.37523365020752
    3. 'C' → logprob: -13.62523365020752
    4. ')' → logprob: -15.00023365020752
    5. 'var' → logprob: -15.12523365020752
    6. 'Б' → logprob: -15.12523365020752
    7. 'b' → logprob: -15.68773365020752
    8. '_B' → logprob: -16.000234603881836
    9. '```' → logprob: -16.062734603881836
    10. 'D' → logprob: -16.125234603881836

Token 145: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.20195791125297546
    2. ',' → logprob: -1.7019579410552979
    3. ')' → logprob: -8.326957702636719
    4. ' ,' → logprob: -9.076957702636719
    5. '+' → logprob: -9.326957702636719
    6. ' ),' → logprob: -10.326957702636719
    7. ',),' → logprob: -10.576957702636719
    8. '],' → logprob: -11.826957702636719
    9. '))' → logprob: -11.826957702636719
    10. ',d' → logprob: -12.076957702636719

Token 146: ' dtype' (ID: 29770)
  Prédit: 'dtype'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dtype' → logprob: -0.12721188366413116
    2. ' dtype' → logprob: -2.127211809158325
    3. 'int' → logprob: -9.002211570739746
    4. '   ' → logprob: -9.252211570739746
    5. ' ' → logprob: -11.627211570739746
    6. 'd' → logprob: -11.877211570739746
    7. '     ' → logprob: -11.939711570739746
    8. '  ' → logprob: -12.064711570739746
    9. ')' → logprob: -12.189711570739746
    10. '    ' → logprob: -12.627211570739746

Token 147: '=int' (ID: 37431)
  Prédit: '=int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=int' → logprob: -0.00029279827140271664
    2. 'int' → logprob: -8.375292778015137
    3. '=' → logprob: -9.750292778015137
    4. '=float' → logprob: -13.250292778015137
    5. ' =' → logprob: -14.750292778015137
    6. ' int' → logprob: -14.875292778015137
    7. '=np' → logprob: -15.125292778015137
    8. ',int' → logprob: -15.250292778015137
    9. '=i' → logprob: -15.375292778015137
    10. '=in' → logprob: -15.875292778015137

Token 148: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.014684110297821e-06
    2. ')
' → logprob: -11.750008583068848
    3. ' )' → logprob: -14.375008583068848
    4. ')

' → logprob: -15.625008583068848
    5. '))' → logprob: -16.625009536743164
    6. ')`' → logprob: -16.625009536743164
    7. '   ' → logprob: -17.000009536743164
    8. '),' → logprob: -17.250009536743164
    9. ').' → logprob: -17.625009536743164
    10. ')
' → logprob: -17.875009536743164

Token 149: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32493752241134644
    2. ')' → logprob: -1.8249375820159912
    3. '<|end|>' → logprob: -2.949937582015991
    4. '
' → logprob: -3.449937582015991
    5. ' ' → logprob: -4.824937343597412
    6. '    
' → logprob: -4.949937343597412
    7. '\n' → logprob: -5.574937343597412
    8. '  
' → logprob: -6.324937343597412
    9. ' for' → logprob: -6.324937343597412
    10. '.' → logprob: -6.574937343597412

Token 150: ' idx' (ID: 14016)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.49409905076026917
    2. '
' → logprob: -1.8690990209579468
    3. ' for' → logprob: -2.1190991401672363
    4. '   ' → logprob: -2.9940991401672363
    5. ')' → logprob: -3.4940991401672363
    6. ' ' → logprob: -4.119099140167236
    7. '<|end|>' → logprob: -5.369099140167236
    8. ' 
' → logprob: -5.744099140167236
    9. '.' → logprob: -6.369099140167236
    10. '    
' → logprob: -6.744099140167236

Token 151: '_pairs' (ID: 90005)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.49052006006240845
    2. ' =' → logprob: -1.1155200004577637
    3. 's' → logprob: -3.3655200004577637
    4. '=' → logprob: -3.7405200004577637
    5. 'es' → logprob: -7.990520000457764
    6. '_=' → logprob: -7.990520000457764
    7. ',' → logprob: -8.740520477294922
    8. '_s' → logprob: -9.615520477294922
    9. ' ' → logprob: -9.740520477294922
    10. '_var' → logprob: -9.865520477294922

Token 152: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016292301937937737
    2. '=' → logprob: -4.141292095184326
    3. ',' → logprob: -8.891292572021484
    4. ' ' → logprob: -9.391292572021484
    5. ' ,' → logprob: -10.891292572021484
    6. '  ' → logprob: -12.516292572021484
    7. ')' → logprob: -12.641292572021484
    8. 's' → logprob: -12.891292572021484
    9. '_' → logprob: -13.016292572021484
    10. '=[]' → logprob: -13.391292572021484

Token 153: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.3922230005264282
    2. ' [(' → logprob: -1.5172230005264282
    3. '[]' → logprob: -2.7672228813171387
    4. ' []' → logprob: -4.767222881317139
    5. '[' → logprob: -4.767222881317139
    6. 'NUM' → logprob: -5.142222881317139
    7. '[
' → logprob: -5.392222881317139
    8. ' [' → logprob: -5.517222881317139
    9. ' NUM' → logprob: -6.142222881317139
    10. '[((' → logprob: -6.392222881317139

Token 154: 'x' (ID: 87)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.010500733740627766
    2. 'i' → logprob: -5.135500907897949
    3. ' ' → logprob: -6.010500907897949
    4. '(' → logprob: -7.135500907897949
    5. '(i' → logprob: -7.635500907897949
    6. ' i' → logprob: -7.885500907897949
    7. '1' → logprob: -8.51050090789795
    8. ' (' → logprob: -9.01050090789795
    9. '2' → logprob: -10.26050090789795
    10. 'x' → logprob: -10.63550090789795

Token 155: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0046169147826731205
    2. ',y' → logprob: -5.754616737365723
    3. ' ,' → logprob: -6.754616737365723
    4. '0' → logprob: -9.129616737365723
    5. ',x' → logprob: -9.879616737365723
    6. 'y' → logprob: -10.504616737365723
    7. ',i' → logprob: -10.879616737365723
    8. ')' → logprob: -11.254616737365723
    9. '=' → logprob: -11.629616737365723
    10. ',j' → logprob: -11.754616737365723

Token 156: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.16767758131027222
    2. ' y' → logprob: -1.917677640914917
    3. '0' → logprob: -5.917677402496338
    4. 'j' → logprob: -6.167677402496338
    5. 'x' → logprob: -7.042677402496338
    6. 'z' → logprob: -7.167677402496338
    7. ' ' → logprob: -8.417677879333496
    8. ' j' → logprob: -8.917677879333496
    9. 'i' → logprob: -9.542677879333496
    10. ')' → logprob: -9.542677879333496

Token 157: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011772842844948173
    2. 'for' → logprob: -10.000117301940918
    3. ',' → logprob: -10.500117301940918
    4. ' for' → logprob: -10.875117301940918
    5. ')
' → logprob: -11.750117301940918
    6. ' )' → logprob: -11.875117301940918
    7. ',)' → logprob: -12.250117301940918
    8. '),' → logprob: -13.875117301940918
    9. ')]' → logprob: -13.875117301940918
    10. '<|end|>' → logprob: -13.875117301940918

Token 158: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.12487725168466568
    2. 'for' → logprob: -2.6248772144317627
    3. ')' → logprob: -3.1248772144317627
    4. ' ' → logprob: -7.374877452850342
    5. ' )' → logprob: -8.624876976013184
    6. ',' → logprob: -9.499876976013184
    7. '<|end|>' → logprob: -9.749876976013184
    8. '	for' → logprob: -10.874876976013184
    9. ' in' → logprob: -11.249876976013184
    10. '
' → logprob: -11.999876976013184

Token 159: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.39047175645828247
    2. ' x' → logprob: -1.1404716968536377
    3. ' range' → logprob: -6.265471935272217
    4. ' y' → logprob: -7.265471935272217
    5. 'range' → logprob: -7.890471935272217
    6. 'y' → logprob: -8.140471458435059
    7. '0' → logprob: -8.515471458435059
    8. ' ' → logprob: -9.515471458435059
    9. '(' → logprob: -11.390471458435059
    10. '_x' → logprob: -11.640471458435059

Token 160: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0890280157327652
    2. 'in' → logprob: -2.4640281200408936
    3. ' ' → logprob: -10.464028358459473
    4. '<|end|>' → logprob: -10.714028358459473
    5. ',' → logprob: -11.089028358459473
    6. 'x' → logprob: -11.964028358459473
    7. ')' → logprob: -12.589028358459473
    8. '=' → logprob: -12.714028358459473
    9. ' x' → logprob: -13.839028358459473
    10. 'import' → logprob: -13.964028358459473

Token 161: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5760048627853394
    2. 'range' → logprob: -0.8260048627853394
    3. '[' → logprob: -10.201004981994629
    4. '(range' → logprob: -10.826004981994629
    5. '(' → logprob: -13.201004981994629
    6. ' ' → logprob: -13.576004981994629
    7. '	range' → logprob: -13.701004981994629
    8. '0' → logprob: -13.826004981994629
    9. ' [' → logprob: -13.951004981994629
    10. ' xrange' → logprob: -14.451004981994629

Token 162: '(var' (ID: 15816)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002139909425750375
    2. '3' → logprob: -6.252140045166016
    3. '(var' → logprob: -8.627140045166016
    4. 'var' → logprob: -11.377140045166016
    5. '(
' → logprob: -11.502140045166016
    6. ' (' → logprob: -12.502140045166016
    7. ' ' → logprob: -12.752140045166016
    8. ' var' → logprob: -14.127140045166016
    9. ')' → logprob: -14.377140045166016
    10. '   ' → logprob: -14.627140045166016

Token 163: 'A' (ID: 32)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.11318091303110123
    2. 'A' → logprob: -2.2381808757781982
    3. '3' → logprob: -7.988181114196777
    4. ' ' → logprob: -11.738181114196777
    5. '(' → logprob: -12.863181114196777
    6. ')' → logprob: -13.113181114196777
    7. 'b' → logprob: -13.800681114196777
    8. '2' → logprob: -14.050681114196777
    9. 'C' → logprob: -14.613181114196777
    10. '1' → logprob: -14.738181114196777

Token 164: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.588793960167095e-05
    2. ' )' → logprob: -10.250076293945312
    3. ')
' → logprob: -11.250076293945312
    4. '+' → logprob: -11.625076293945312
    5. 'for' → logprob: -11.625076293945312
    6. ')]' → logprob: -13.000076293945312
    7. '   ' → logprob: -13.500076293945312
    8. ' for' → logprob: -13.875076293945312
    9. '-' → logprob: -14.000076293945312
    10. ' ' → logprob: -14.375076293945312

Token 165: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.21595601737499237
    2. ')' → logprob: -1.8409559726715088
    3. 'for' → logprob: -3.340955972671509
    4. ' ' → logprob: -9.96595573425293
    5. ' )' → logprob: -10.09095573425293
    6. '   ' → logprob: -10.21595573425293
    7. ',' → logprob: -11.59095573425293
    8. '),' → logprob: -12.21595573425293
    9. ')]' → logprob: -12.34095573425293
    10. '	for' → logprob: -12.46595573425293

Token 166: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.01816187985241413
    2. 'y' → logprob: -4.018161773681641
    3. '_y' → logprob: -12.76816177368164
    4. ' ' → logprob: -13.14316177368164
    5. '(y' → logprob: -13.14316177368164
    6. '	y' → logprob: -13.26816177368164
    7. ' ' → logprob: -14.14316177368164
    8. '_' → logprob: -15.08066177368164
    9. ',y' → logprob: -15.26816177368164
    10. ')' → logprob: -15.39316177368164

Token 167: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02064349502325058
    2. 'in' → logprob: -3.895643472671509
    3. '(' → logprob: -9.77064323425293
    4. '(range' → logprob: -10.77064323425293
    5. 'range' → logprob: -11.52064323425293
    6. ' (' → logprob: -13.14564323425293
    7. 'var' → logprob: -13.39564323425293
    8. ')' → logprob: -13.52064323425293
    9. '(x' → logprob: -13.77064323425293
    10. '(var' → logprob: -13.89564323425293

Token 168: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6399276852607727
    2. 'range' → logprob: -0.7649276852607727
    3. 'var' → logprob: -5.014927864074707
    4. ' var' → logprob: -8.014927864074707
    5. '(range' → logprob: -8.389927864074707
    6. '[var' → logprob: -9.764927864074707
    7. ' xrange' → logprob: -10.764927864074707
    8. '(var' → logprob: -11.889927864074707
    9. ' ' → logprob: -12.264927864074707
    10. '	range' → logprob: -12.514927864074707

Token 169: '(var' (ID: 15816)
  Prédit: '(var'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(var' → logprob: -0.0025282183196395636
    2. 'var' → logprob: -6.002528190612793
    3. '(' → logprob: -10.002528190612793
    4. '(x' → logprob: -13.002528190612793
    5. '(len' → logprob: -13.377528190612793
    6. ')var' → logprob: -13.752528190612793
    7. ' var' → logprob: -13.877528190612793
    8. ' (' → logprob: -14.502528190612793
    9. '[var' → logprob: -15.002528190612793
    10. ',var' → logprob: -16.25252914428711

Token 170: 'A' (ID: 32)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0006421420839615166
    2. 'A' → logprob: -7.3756422996521
    3. 'Б' → logprob: -12.625641822814941
    4. ')' → logprob: -13.125641822814941
    5. '_B' → logprob: -13.188141822814941
    6. 'b' → logprob: -13.875641822814941
    7. 'Β' → logprob: -14.625641822814941
    8. '_' → logprob: -14.688141822814941
    9. '
' → logprob: -15.063141822814941
    10. '```' → logprob: -15.125641822814941

Token 171: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00038801267510280013
    2. ')' → logprob: -8.750388145446777
    3. '+' → logprob: -9.000388145446777
    4. ' )' → logprob: -9.750388145446777
    5. ',' → logprob: -10.625388145446777
    6. ' if' → logprob: -11.500388145446777
    7. ')],' → logprob: -12.375388145446777
    8. ')][' → logprob: -13.250388145446777
    9. ')]
' → logprob: -13.625388145446777
    10. ' +' → logprob: -13.750388145446777

Token 172: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 173: ' for' (ID: 395)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8463398814201355
    2. '<|end|>' → logprob: -1.4713399410247803
    3. ')' → logprob: -1.5963399410247803
    4. '   ' → logprob: -2.9713399410247803
    5. ']' → logprob: -3.7213399410247803
    6. '[' → logprob: -4.346339702606201
    7. ':' → logprob: -4.721339702606201
    8. ' ' → logprob: -5.221339702606201
    9. '_' → logprob: -5.346339702606201
    10. '    
' → logprob: -5.721339702606201

Token 174: ' X' (ID: 2127)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2207135558128357
    2. ' x' → logprob: -2.0957136154174805
    3. ' _' → logprob: -3.2207136154174805
    4. ' ' → logprob: -4.4707136154174805
    5. 'i' → logprob: -5.4707136154174805
    6. ' (' → logprob: -5.5957136154174805
    7. 'x' → logprob: -6.2207136154174805
    8. ' ix' → logprob: -6.3457136154174805
    9. ' b' → logprob: -6.4707136154174805
    10. '_' → logprob: -6.6582136154174805

Token 175: '_idx' (ID: 15257)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3240342140197754
    2. 'in' → logprob: -1.5740342140197754
    3. ',' → logprob: -2.8240342140197754
    4. ' ' → logprob: -5.449034214019775
    5. '_' → logprob: -6.199034214019775
    6. ' ,' → logprob: -6.324034214019775
    7. '_in' → logprob: -7.324034214019775
    8. 'i' → logprob: -7.949034214019775
    9. 'a' → logprob: -9.199033737182617
    10. '0' → logprob: -9.199033737182617

Token 176: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5950491428375244
    2. ',' → logprob: -1.3450491428375244
    3. 'in' → logprob: -1.7200491428375244
    4. ' ,' → logprob: -4.970048904418945
    5. ' ' → logprob: -7.470048904418945
    6. '1' → logprob: -8.220048904418945
    7. '_in' → logprob: -8.595048904418945
    8. '0' → logprob: -8.845048904418945
    9. '_' → logprob: -8.845048904418945
    10. 'X' → logprob: -9.220048904418945

Token 177: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.20791767537593842
    2. ' Y' → logprob: -1.7079176902770996
    3. 'y' → logprob: -6.3329176902771
    4. 'Z' → logprob: -6.7079176902771
    5. ' y' → logprob: -6.8329176902771
    6. 'X' → logprob: -8.020417213439941
    7. '_Y' → logprob: -8.020417213439941
    8. 'x' → logprob: -8.207917213439941
    9. ' Z' → logprob: -8.645417213439941
    10. 'j' → logprob: -8.707917213439941

Token 178: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -4.9186317482963204e-05
    2. '_' → logprob: -10.000049591064453
    3. '_in' → logprob: -13.750049591064453
    4. '_idxs' → logprob: -14.500049591064453
    5. '_IDX' → logprob: -14.750049591064453
    6. ' in' → logprob: -14.750049591064453
    7. 'idx' → logprob: -15.000049591064453
    8. '_ix' → logprob: -15.125049591064453
    9. '_id' → logprob: -15.625049591064453
    10. '_i' → logprob: -15.750049591064453

Token 179: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009781353175640106
    2. 'in' → logprob: -4.634781360626221
    3. ' ' → logprob: -11.759780883789062
    4. ',' → logprob: -12.134780883789062
    5. '<|end|>' → logprob: -12.259780883789062
    6. ')' → logprob: -12.634780883789062
    7. 'import' → logprob: -14.134780883789062
    8. 's' → logprob: -14.884780883789062
    9. '_' → logprob: -15.197280883789062
    10. '_in' → logprob: -15.322280883789062

Token 180: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.022527171298861504
    2. ' range' → logprob: -4.02252721786499
    3. 'idx' → logprob: -5.64752721786499
    4. 'range' → logprob: -7.27252721786499
    5. ' ' → logprob: -10.397526741027832
    6. '[idx' → logprob: -10.772526741027832
    7. ' xrange' → logprob: -10.772526741027832
    8. ' [(' → logprob: -11.022526741027832
    9. '(idx' → logprob: -11.272526741027832
    10. '  ' → logprob: -12.147526741027832

Token 181: '_pairs' (ID: 90005)
  Prédit: '_pairs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pairs' → logprob: -0.012959860265254974
    2. 'in' → logprob: -4.762959957122803
    3. ' in' → logprob: -6.512959957122803
    4. ':' → logprob: -6.887959957122803
    5. '_idxs' → logprob: -7.387959957122803
    6. '):' → logprob: -8.137959480285645
    7. '_idx' → logprob: -8.512959480285645
    8. '   ' → logprob: -8.762959480285645
    9. ')' → logprob: -9.762959480285645
    10. 's' → logprob: -9.887959480285645

Token 182: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00017278951418120414
    2. ' :' → logprob: -9.00017261505127
    3. ':
' → logprob: -11.00017261505127
    4. ',' → logprob: -11.25017261505127
    5. '<|end|>' → logprob: -12.00017261505127
    6. '):' → logprob: -12.12517261505127
    7. ':**' → logprob: -12.50017261505127
    8. ' in' → logprob: -13.25017261505127
    9. ',:' → logprob: -14.37517261505127
    10. ']:' → logprob: -14.87517261505127

Token 183: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.47547250986099243
    2. '       ' → logprob: -1.1004724502563477
    3. '   ' → logprob: -3.4754724502563477
    4. ':
' → logprob: -5.100472450256348
    5. '<|end|>' → logprob: -5.100472450256348
    6. ' :' → logprob: -7.600472450256348
    7. ' if' → logprob: -7.850472450256348
    8. ' ' → logprob: -8.100472450256348
    9. '    ' → logprob: -8.350472450256348
    10. ',' → logprob: -8.475472450256348

Token 184: ' k' (ID: 372)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2336195856332779
    2. '    ' → logprob: -3.1086196899414062
    3. ' 
' → logprob: -3.1086196899414062
    4. '       ' → logprob: -3.3586196899414062
    5. '   ' → logprob: -3.6086196899414062
    6. '<|end|>' → logprob: -3.9836196899414062
    7. '        ' → logprob: -4.608619689941406
    8. '    
' → logprob: -5.608619689941406
    9. ' if' → logprob: -5.608619689941406
    10. '           ' → logprob: -5.858619689941406

Token 185: '3' (ID: 18)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17017748951911926
    2. '=' → logprob: -2.045177459716797
    3. 'ey' → logprob: -5.170177459716797
    4. '_' → logprob: -5.170177459716797
    5. 'ernel' → logprob: -5.420177459716797
    6. ' ' → logprob: -5.920177459716797
    7. '   ' → logprob: -6.545177459716797
    8. ',' → logprob: -6.670177459716797
    9. 'x' → logprob: -7.045177459716797
    10. '_idx' → logprob: -7.045177459716797

Token 186: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16029541194438934
    2. '=' → logprob: -1.9102953672409058
    3. ' ' → logprob: -10.535295486450195
    4. ',' → logprob: -11.035295486450195
    5. '_' → logprob: -11.785295486450195
    6. 'x' → logprob: -12.660295486450195
    7. '   ' → logprob: -12.660295486450195
    8. 'k' → logprob: -13.785295486450195
    9. '_code' → logprob: -13.785295486450195
    10. '  ' → logprob: -14.035295486450195

Token 187: ' (' (ID: 350)
  Prédit: '(X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -0.021741624921560287
    2. ' (' → logprob: -3.8967416286468506
    3. '(x' → logprob: -7.5217413902282715
    4. '(' → logprob: -8.14674186706543
    5. '(Y' → logprob: -9.02174186706543
    6. '((' → logprob: -9.52174186706543
    7. '   ' → logprob: -9.52174186706543
    8. '(abs' → logprob: -10.39674186706543
    9. 'X' → logprob: -11.02174186706543
    10. '(M' → logprob: -11.14674186706543

Token 188: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.023698803037405014
    2. '(X' → logprob: -3.8986988067626953
    3. ' X' → logprob: -5.898698806762695
    4. ' (' → logprob: -8.398698806762695
    5. '(' → logprob: -9.273698806762695
    6. 'x' → logprob: -10.398698806762695
    7. '(x' → logprob: -11.148698806762695
    8. '   ' → logprob: -11.398698806762695
    9. 'Y' → logprob: -11.648698806762695
    10. ' ' → logprob: -11.898698806762695

Token 189: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -5.5577775128767826e-06
    2. 'idx' → logprob: -12.875005722045898
    3. ' _' → logprob: -13.500005722045898
    4. '_' → logprob: -14.500005722045898
    5. '_IDX' → logprob: -15.500005722045898
    6. '   ' → logprob: -15.875005722045898
    7. '_idxs' → logprob: -16.0000057220459
    8. '_i' → logprob: -16.3750057220459
    9. ')' → logprob: -16.6250057220459
    10. ' idx' → logprob: -16.7500057220459

Token 190: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5778257846832275
    2. '+' → logprob: -0.8278257846832275
    3. '%' → logprob: -7.077825546264648
    4. '*' → logprob: -7.702825546264648
    5. ' %' → logprob: -8.077825546264648
    6. ' *' → logprob: -8.702825546264648
    7. ' ' → logprob: -9.577825546264648
    8. '+
' → logprob: -11.202825546264648
    9. ' +
' → logprob: -11.577825546264648
    10. ')' → logprob: -12.577825546264648

Token 191: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.0160470362752676
    2. ' Y' → logprob: -4.14104700088501
    3. ' ' → logprob: -12.141047477722168
    4. ')' → logprob: -13.266047477722168
    5. '   ' → logprob: -13.266047477722168
    6. '	Y' → logprob: -13.391047477722168
    7. '    ' → logprob: -14.391047477722168
    8. '  ' → logprob: -14.641047477722168
    9. '<|end|>' → logprob: -15.016047477722168
    10. 'y' → logprob: -15.016047477722168

Token 192: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -2.9160102712921798e-05
    2. 'idx' → logprob: -10.875029563903809
    3. '_IDX' → logprob: -12.375029563903809
    4. '_idxs' → logprob: -12.875029563903809
    5. 'Idx' → logprob: -13.875029563903809
    6. '_token' → logprob: -13.875029563903809
    7. ')' → logprob: -14.250029563903809
    8. '_' → logprob: -15.375029563903809
    9. ')_' → logprob: -15.625029563903809
    10. '_tokens' → logprob: -16.625028610229492

Token 193: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008720364421606064
    2. ')%' → logprob: -7.2508721351623535
    3. ' )' → logprob: -8.750871658325195
    4. '%' → logprob: -12.750871658325195
    5. ')
' → logprob: -15.750871658325195
    6. '   ' → logprob: -15.875871658325195
    7. ' %' → logprob: -16.125871658325195
    8. '+' → logprob: -16.750871658325195
    9. '）' → logprob: -17.000871658325195
    10. ']' → logprob: -17.000871658325195

Token 194: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7860358953475952
    2. ' %' → logprob: -0.7860358953475952
    3. '%' → logprob: -2.6610360145568848
    4. ')%' → logprob: -4.036036014556885
    5. ' )' → logprob: -7.036036014556885
    6. ' ' → logprob: -8.661035537719727
    7. ' ' → logprob: -10.286035537719727
    8. '
' → logprob: -10.911035537719727
    9. '<|end|>' → logprob: -11.661035537719727
    10. '3' → logprob: -11.661035537719727

Token 195: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -8.506661833962426e-05
    2. ' ' → logprob: -9.37508487701416
    3. '```' → logprob: -17.000085830688477
    4. '   ' → logprob: -17.250085830688477
    5. '  ' → logprob: -17.875085830688477
    6. '(' → logprob: -18.250085830688477
    7. ')' → logprob: -18.875085830688477
    8. '۳' → logprob: -19.187585830688477
    9. '' → logprob: -19.562585830688477
    10. '
' → logprob: -19.750085830688477

Token 196: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -4.4849443838757e-06
    2. ' ' → logprob: -12.375004768371582
    3. 'var' → logprob: -15.375004768371582
    4. '```' → logprob: -17.500003814697266
    5. '   ' → logprob: -18.125003814697266
    6. '  ' → logprob: -19.000003814697266
    7. '۳' → logprob: -19.375003814697266
    8. 'system' → logprob: -19.500003814697266
    9. '33' → logprob: -20.062503814697266
    10. '³' → logprob: -20.312503814697266

Token 197: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7348241209983826
    2. '<|end|>' → logprob: -0.7348241209983826
    3. '   ' → logprob: -3.9848241806030273
    4. '
' → logprob: -4.234824180603027
    5. '<|end|>' → logprob: -5.484824180603027
    6. ',' → logprob: -7.234824180603027
    7. ')' → logprob: -7.359824180603027
    8. ':' → logprob: -7.609824180603027
    9. '           ' → logprob: -7.734824180603027
    10. '        
' → logprob: -7.984824180603027

Token 198: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02987845428287983
    2. '<|end|>' → logprob: -3.7798783779144287
    3. '   ' → logprob: -6.529878616333008
    4. ',' → logprob: -6.779878616333008
    5. ' for' → logprob: -6.904878616333008
    6. '        
' → logprob: -7.029878616333008
    7. '
' → logprob: -7.529878616333008
    8. ' ' → logprob: -7.779878616333008
    9. '<|end|>' → logprob: -8.529878616333008
    10. '        ' → logprob: -8.654878616333008

Token 199: ' current' (ID: 2208)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2889699339866638
    2. 'awk' → logprob: -1.4139699935913086
    3. 'bucket' → logprob: -5.913969993591309
    4. '   ' → logprob: -6.163969993591309
    5. 'cost' → logprob: -7.538969993591309
    6. ' for' → logprob: -7.663969993591309
    7. 'aw' → logprob: -8.288969993591309
    8. 'if' → logprob: -8.413969993591309
    9. 'lll' → logprob: -8.913969993591309
    10. ' awkward' → logprob: -8.913969993591309

Token 200: '_color' (ID: 15576)
  Prédit: '_cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.4960940182209015
    2. ' =' → logprob: -2.371093988418579
    3. '_dis' → logprob: -2.621093988418579
    4. '_color' → logprob: -2.621093988418579
    5. '_token' → logprob: -3.371093988418579
    6. '_' → logprob: -3.496093988418579
    7. 'cost' → logprob: -4.621094226837158
    8. '_col' → logprob: -4.621094226837158
    9. '_val' → logprob: -4.621094226837158
    10. '_dist' → logprob: -4.871094226837158

Token 201: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25499603152275085
    2. '=' → logprob: -1.5049960613250732
    3. ',' → logprob: -6.754995822906494
    4. '_' → logprob: -7.254995822906494
    5. 's' → logprob: -7.879995822906494
    6. '[' → logprob: -8.004996299743652
    7. ' ' → logprob: -8.254996299743652
    8. '_idx' → logprob: -10.254996299743652
    9. ' _' → logprob: -10.504996299743652
    10. ')' → logprob: -10.629996299743652

Token 202: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.7057022452354431
    2. 'lll' → logprob: -0.7057022452354431
    3. 'll' → logprob: -5.205702304840088
    4. ' M' → logprob: -5.580702304840088
    5. 'l' → logprob: -6.830702304840088
    6. 'llll' → logprob: -7.705702304840088
    7. 'var' → logprob: -8.14320182800293
    8. '   ' → logprob: -8.95570182800293
    9. ' var' → logprob: -9.08070182800293
    10. 'mmm' → logprob: -9.20570182800293

Token 203: 'll' (ID: 680)
  Prédit: 'll'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'll' → logprob: -2.2723104848410003e-05
    2. 'l' → logprob: -10.750022888183594
    3. 'lll' → logprob: -14.375022888183594
    4. ' ll' → logprob: -14.875022888183594
    5. '_ll' → logprob: -16.375022888183594
    6. '	ll' → logprob: -17.250022888183594
    7. '<ll' → logprob: -17.500022888183594
    8. 'LL' → logprob: -17.750022888183594
    9. '```' → logprob: -18.000022888183594
    10. 'лл' → logprob: -18.375022888183594

Token 204: '_board' (ID: 55737)
  Prédit: '_board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_board' → logprob: -4.320199877838604e-07
    2. '_' → logprob: -15.375
    3. 'board' → logprob: -16.5
    4. '_b' → logprob: -17.0
    5. '_bo' → logprob: -18.0
    6. '_box' → logprob: -18.0
    7. '```' → logprob: -18.25
    8. '_BOARD' → logprob: -18.5
    9. ' _' → logprob: -18.875
    10. '   ' → logprob: -19.625

Token 205: '[X' (ID: 118621)
  Prédit: '[X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[X' → logprob: -0.0004693994123954326
    2. '[' → logprob: -8.000469207763672
    3. '[Y' → logprob: -9.125469207763672
    4. 'X' → logprob: -11.375469207763672
    5. ' [' → logprob: -12.250469207763672
    6. '[
' → logprob: -12.500469207763672
    7. '```' → logprob: -13.500469207763672
    8. '[x' → logprob: -14.250469207763672
    9. '[current' → logprob: -14.500469207763672
    10. '[[' → logprob: -14.750469207763672

Token 206: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -6.20603168499656e-05
    2. 'idx' → logprob: -10.875061988830566
    3. '_IDX' → logprob: -11.125061988830566
    4. '][' → logprob: -11.625061988830566
    5. 'Idx' → logprob: -12.375061988830566
    6. '[' → logprob: -12.750061988830566
    7. '_' → logprob: -12.875061988830566
    8. '[idx' → logprob: -13.375061988830566
    9. '   ' → logprob: -13.500061988830566
    10. '_idxs' → logprob: -13.500061988830566

Token 207: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.001274758018553257
    2. '[Y' → logprob: -7.501274585723877
    3. ' ][' → logprob: -7.876274585723877
    4. ',' → logprob: -8.501275062561035
    5. ']' → logprob: -9.501275062561035
    6. '[' → logprob: -10.751275062561035
    7. ',Y' → logprob: -10.751275062561035
    8. ' [' → logprob: -12.501275062561035
    9. 'Y' → logprob: -12.876275062561035
    10. ' ,' → logprob: -13.126275062561035

Token 208: 'Y' (ID: 56)
  Prédit: 'Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -3.166338137816638e-05
    2. ' Y' → logprob: -10.375031471252441
    3. '   ' → logprob: -15.375031471252441
    4. ' ' → logprob: -15.875031471252441
    5. '  ' → logprob: -17.125032424926758
    6. '	Y' → logprob: -17.125032424926758
    7. '
' → logprob: -17.500032424926758
    8. '    ' → logprob: -18.125032424926758
    9. '           ' → logprob: -19.000032424926758
    10. '     ' → logprob: -19.125032424926758

Token 209: '_idx' (ID: 15257)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.0007123126997612417
    2. '_idx' → logprob: -8.000712394714355
    3. 'nd' → logprob: -8.875712394714355
    4. 'idx' → logprob: -9.000712394714355
    5. 'dx' → logprob: -10.500712394714355
    6. 'x' → logprob: -10.750712394714355
    7. ' Y' → logprob: -11.375712394714355
    8. 'y' → logprob: -11.500712394714355
    9. ']' → logprob: -11.500712394714355
    10. 'd' → logprob: -12.500712394714355

Token 210: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1638866811990738
    2. ')' → logprob: -1.9138866662979126
    3. ' ]' → logprob: -6.413886547088623
    4. '])' → logprob: -7.413886547088623
    5. ' )' → logprob: -7.913886547088623
    6. ')]' → logprob: -8.163887023925781
    7. ']
' → logprob: -8.163887023925781
    8. ')
' → logprob: -8.663887023925781
    9. '<|end|>' → logprob: -8.788887023925781
    10. '-' → logprob: -10.413887023925781

Token 211: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04222113639116287
    2. '
' → logprob: -3.7922210693359375
    3. '<|end|>' → logprob: -4.2922210693359375
    4. '        
' → logprob: -6.1672210693359375
    5. ')' → logprob: -6.9172210693359375
    6. ',' → logprob: -7.7922210693359375
    7. '<|end|>' → logprob: -8.042221069335938
    8. ' 
' → logprob: -8.167221069335938
    9. ',
' → logprob: -8.417221069335938
    10. ')
' → logprob: -9.292221069335938

Token 212: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014132341311778873
    2. ' ' → logprob: -8.875141143798828
    3. '   ' → logprob: -13.625141143798828
    4. '  ' → logprob: -17.000141143798828
    5. '```' → logprob: -17.000141143798828
    6. '<|end|>' → logprob: -17.125141143798828
    7. '0' → logprob: -18.937641143798828
    8. '       ' → logprob: -19.000141143798828
    9. '=' → logprob: -19.062641143798828
    10. '#' → logprob: -19.062641143798828

Token 213: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.822646693966817e-06
    2. ' ' → logprob: -11.875007629394531
    3. '   ' → logprob: -14.375007629394531
    4. '  ' → logprob: -17.00000762939453
    5. '```' → logprob: -17.56250762939453
    6. '...' → logprob: -18.43750762939453
    7. '<|end|>' → logprob: -18.50000762939453
    8. '-' → logprob: -18.75000762939453
    9. '۱' → logprob: -18.75000762939453
    10. 'int' → logprob: -19.00000762939453

Token 214: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7632660865783691
    2. '
' → logprob: -0.8882660865783691
    3. '<|end|>' → logprob: -2.138266086578369
    4. ')' → logprob: -6.263266086578369
    5. '<|end|>' → logprob: -6.638266086578369
    6. '        
' → logprob: -8.138265609741211
    7. '   ' → logprob: -9.013265609741211
    8. ',' → logprob: -9.013265609741211
    9. ')
' → logprob: -9.013265609741211
    10. ' 
' → logprob: -9.263265609741211

Token 215: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02282562665641308
    2. '
' → logprob: -4.647825717926025
    3. '<|end|>' → logprob: -4.647825717926025
    4. '        
' → logprob: -6.272825717926025
    5. '   ' → logprob: -7.772825717926025
    6. ',' → logprob: -8.522825241088867
    7. '           ' → logprob: -8.897825241088867
    8. ' for' → logprob: -9.022825241088867
    9. ' 
' → logprob: -9.147825241088867
    10. '    
' → logprob: -9.522825241088867

Token 216: ' bucket' (ID: 28257)
  Prédit: 'awk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'awk' → logprob: -0.032471511512994766
    2. 'for' → logprob: -3.9074714183807373
    3. 'bucket' (adapté à ' bucket') → logprob: -5.282471656799316
    4. '   ' → logprob: -6.282471656799316
    5. ' awkward' → logprob: -6.282471656799316
    6. 'aw' → logprob: -7.032471656799316
    7. '       ' → logprob: -7.282471656799316
    8. ' for' → logprob: -7.907471656799316
    9. '           ' → logprob: -7.907471656799316
    10. 'current' → logprob: -8.407471656799316

Token 217: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.00022082125360611826
    2. '[' → logprob: -8.500221252441406
    3. ' [' → logprob: -12.500221252441406
    4. '[
' → logprob: -12.625221252441406
    5. 'k' → logprob: -13.500221252441406
    6. '[c' → logprob: -13.625221252441406
    7. '[i' → logprob: -13.875221252441406
    8. '[key' → logprob: -14.000221252441406
    9. '[m' → logprob: -14.375221252441406
    10. '[current' → logprob: -14.375221252441406

Token 218: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -4.723352049040841e-06
    2. '[' → logprob: -14.125004768371582
    3. 'ernel' → logprob: -14.437504768371582
    4. '_idx' → logprob: -14.750004768371582
    5. '```' → logprob: -15.000004768371582
    6. ',' → logprob: -15.250004768371582
    7. '][' → logprob: -15.625004768371582
    8. ']' → logprob: -15.687504768371582
    9. '_' → logprob: -15.750004768371582
    10. ',k' → logprob: -16.312503814697266

Token 219: '][' (ID: 2696)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.40752968192100525
    2. '][' → logprob: -1.5325297117233276
    3. ',current' → logprob: -2.157529592514038
    4. '[current' → logprob: -6.782529830932617
    5. ',k' → logprob: -7.157529830932617
    6. ' ,' → logprob: -8.032529830932617
    7. ']' → logprob: -8.157529830932617
    8. 'current' → logprob: -9.032529830932617
    9. '[' → logprob: -9.157529830932617
    10. ',X' → logprob: -9.282529830932617

Token 220: 'current' (ID: 5804)
  Prédit: 'current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.00031496648443862796
    2. ' current' → logprob: -8.625314712524414
    3. 'M' → logprob: -10.125314712524414
    4. 'var' → logprob: -10.125314712524414
    5. 'Y' → logprob: -11.625314712524414
    6. 'system' → logprob: -11.625314712524414
    7. 'lll' → logprob: -12.125314712524414
    8. 'X' → logprob: -12.125314712524414
    9. 'cur' → logprob: -12.875314712524414
    10. '
' → logprob: -12.875314712524414

Token 221: '_color' (ID: 15576)
  Prédit: '_color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_color' → logprob: -0.0005713827558793128
    2. 'color' → logprob: -7.625571250915527
    3. ']' → logprob: -11.000571250915527
    4. '_token' → logprob: -11.250571250915527
    5. '_' → logprob: -11.500571250915527
    6. 'olor' → logprob: -12.375571250915527
    7. ' _' → logprob: -12.625571250915527
    8. '_col' → logprob: -12.625571250915527
    9. 'current' → logprob: -12.750571250915527
    10. 'Color' → logprob: -12.750571250915527

Token 222: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4458397328853607
    2. ']+=' → logprob: -1.070839762687683
    3. '+=' → logprob: -4.320839881896973
    4. ' +=' → logprob: -5.945839881896973
    5. '+' → logprob: -7.445839881896973
    6. ' ]' → logprob: -7.820839881896973
    7. ']+' → logprob: -10.070839881896973
    8. '   ' → logprob: -11.570839881896973
    9. ')' → logprob: -11.570839881896973
    10. '[' → logprob: -11.820839881896973

Token 223: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.1431829333305359
    2. '+=' → logprob: -2.0181829929351807
    3. ']+=' → logprob: -8.268182754516602
    4. '+' → logprob: -9.268182754516602
    5. '=' → logprob: -9.768182754516602
    6. ' ' → logprob: -10.393182754516602
    7. ' =' → logprob: -11.393182754516602
    8. ' -=' → logprob: -11.518182754516602
    9. ' +' → logprob: -11.768182754516602
    10. '    ' → logprob: -11.893182754516602

Token 224: ' ' (ID: 220)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.6389653086662292
    2. '1' → logprob: -0.7639653086662292
    3. ' M' → logprob: -6.138965129852295
    4. 'lll' → logprob: -6.263965129852295
    5. ' ' → logprob: -7.513965129852295
    6. '   ' → logprob: -7.638965129852295
    7. 'll' → logprob: -8.013965606689453
    8. 'MMM' → logprob: -8.763965606689453
    9. '0' → logprob: -8.888965606689453
    10. 'var' → logprob: -9.138965606689453

Token 225: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.527405321598053
    2. 'M' → logprob: -0.902405321598053
    3. 'lll' → logprob: -6.152405261993408
    4. ' M' → logprob: -7.527405261993408
    5. '   ' → logprob: -7.652405261993408
    6. ' ' → logprob: -8.277405738830566
    7. 'll' → logprob: -8.652405738830566
    8. 'MMM' → logprob: -8.777405738830566
    9. '0' → logprob: -8.902405738830566
    10. 'var' → logprob: -9.277405738830566

Token 226: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 227: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 228: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.02767312340438366
    2. '   ' → logprob: -4.152673244476318
    3. ' for' → logprob: -5.152673244476318
    4. ')' → logprob: -6.652673244476318
    5. 'dis' → logprob: -6.652673244476318
    6. 'cost' → logprob: -6.902673244476318
    7. 'diff' → logprob: -7.402673244476318
    8. 'awk' → logprob: -8.15267276763916
    9. 'current' → logprob: -8.65267276763916
    10. 'total' → logprob: -9.02767276763916

Token 229: ' tr' (ID: 498)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.0394585132598877
    2. ' k' → logprob: -1.2894585132598877
    3. ' color' → logprob: -2.1644585132598877
    4. ' c' → logprob: -2.9144585132598877
    5. 'i' → logprob: -3.2894585132598877
    6. 'k' → logprob: -3.7894585132598877
    7. ' j' → logprob: -3.9144585132598877
    8. ' col' → logprob: -4.039458274841309
    9. ' mod' → logprob: -4.164458274841309
    10. ' idx' → logprob: -4.414458274841309

Token 230: ' in' (ID: 306)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.09404388815164566
    2. 'ip' → logprob: -3.0940439701080322
    3. '_i' → logprob: -4.594043731689453
    4. 'k' → logprob: -5.094043731689453
    5. 'X' → logprob: -5.219043731689453
    6. '_' → logprob: -5.344043731689453
    7. 'x' → logprob: -5.469043731689453
    8. ' i' → logprob: -5.844043731689453
    9. 'iple' → logprob: -6.094043731689453
    10. 'I' → logprob: -6.969043731689453

Token 231: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0006745471036992967
    2. 'range' → logprob: -7.375674724578857
    3. ' ' → logprob: -10.6256742477417
    4. ' var' → logprob: -11.6256742477417
    5. '(range' → logprob: -12.8756742477417
    6. ' xrange' → logprob: -12.8756742477417
    7. '  ' → logprob: -13.3756742477417
    8. ' num' → logprob: -13.9381742477417
    9. '   ' → logprob: -14.1881742477417
    10. '	range' → logprob: -14.5006742477417

Token 232: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4288087487220764
    2. '(var' → logprob: -1.0538086891174316
    3. 'var' → logprob: -10.05380916595459
    4. '(len' → logprob: -10.55380916595459
    5. ' var' → logprob: -11.17880916595459
    6. ' (' → logprob: -11.55380916595459
    7. ' ' → logprob: -12.92880916595459
    8. '3' → logprob: -12.92880916595459
    9. '(system' → logprob: -12.92880916595459
    10. '(num' → logprob: -13.05380916595459

Token 233: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.006102981511503458
    2. 'var' → logprob: -5.131103038787842
    3. ' ' → logprob: -8.881102561950684
    4. ' var' → logprob: -11.131102561950684
    5. '   ' → logprob: -12.131102561950684
    6. '1' → logprob: -12.131102561950684
    7. '0' → logprob: -13.631102561950684
    8. '(' → logprob: -13.631102561950684
    9. '4' → logprob: -13.756102561950684
    10. 'num' → logprob: -13.756102561950684

Token 234: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.023960482329130173
    2. '):
' → logprob: -3.773960590362549
    3. ':' → logprob: -7.398960590362549
    4. ' ):' → logprob: -9.77396011352539
    5. ')' → logprob: -10.77396011352539
    6. '   ' → logprob: -11.02396011352539
    7. ',' → logprob: -12.52396011352539
    8. '):
' → logprob: -13.64896011352539
    9. ' ):
' → logprob: -13.64896011352539
    10. ':
' → logprob: -13.77396011352539

Token 235: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.048925478011369705
    2. ' for' → logprob: -3.2989253997802734
    3. '   ' → logprob: -4.548925399780273
    4. 'for' → logprob: -8.923925399780273
    5. '	for' → logprob: -10.673925399780273
    6. '<|end|>' → logprob: -10.923925399780273
    7. ',' → logprob: -11.048925399780273
    8. '    ' → logprob: -11.548925399780273
    9. ' ' → logprob: -11.548925399780273
    10. '	   ' → logprob: -12.173925399780273

Token 236: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.4526151120662689
    2. ' for' → logprob: -1.0776151418685913
    3. '   ' → logprob: -3.9526150226593018
    4. '       ' → logprob: -5.577615261077881
    5. '    ' → logprob: -8.327614784240723
    6. '           ' → logprob: -9.327614784240723
    7. '	for' → logprob: -9.702614784240723
    8. ' ' → logprob: -9.827614784240723
    9. ' current' → logprob: -10.140114784240723
    10. '        ' → logprob: -10.265114784240723

Token 237: ' CLR' (ID: 172481)
  Prédit: 'var'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'var' → logprob: -0.22481098771095276
    2. ' var' → logprob: -1.8498109579086304
    3. 'col' → logprob: -4.34981107711792
    4. 'j' → logprob: -4.59981107711792
    5. 'color' → logprob: -5.97481107711792
    6. ' j' → logprob: -6.34981107711792
    7. 'i' → logprob: -6.34981107711792
    8. 'b' → logprob: -6.34981107711792
    9. ' col' → logprob: -6.47481107711792
    10. 'c' → logprob: -6.47481107711792

Token 238: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0005848454311490059
    2. ' ' → logprob: -8.250584602355957
    3. 'in' → logprob: -8.375584602355957
    4. '_idx' → logprob: -10.375584602355957
    5. '_' → logprob: -10.625584602355957
    6. 's' → logprob: -12.000584602355957
    7. 'idx' → logprob: -12.000584602355957
    8. '_in' → logprob: -12.375584602355957
    9. ')' → logprob: -12.750584602355957
    10. '_i' → logprob: -13.625584602355957

Token 239: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.01416738796979189
    2. ' range' → logprob: -4.264167308807373
    3. '(range' → logprob: -12.514167785644531
    4. 'var' → logprob: -16.13916778564453
    5. ' ' → logprob: -17.26416778564453
    6. '	range' → logprob: -17.63916778564453
    7. '   ' → logprob: -19.01416778564453
    8. ')' → logprob: -19.01416778564453
    9. '(' → logprob: -19.13916778564453
    10. 'num' → logprob: -19.38916778564453

Token 240: '(var' (ID: 15816)
  Prédit: 'var'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'var' → logprob: -0.05405140668153763
    2. '(var' → logprob: -3.054051399230957
    3. '3' → logprob: -5.929051399230957
    4. ' var' → logprob: -6.054051399230957
    5. '(' → logprob: -7.804051399230957
    6. '[var' → logprob: -11.679051399230957
    7. ')var' → logprob: -11.929051399230957
    8. 'num' → logprob: -12.554051399230957
    9. '   ' → logprob: -12.804051399230957
    10. ',var' → logprob: -12.929051399230957

Token 241: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.000533732702024281
    2. 'A' → logprob: -7.750533580780029
    3. ' ' → logprob: -10.625534057617188
    4. 'b' → logprob: -10.750534057617188
    5. '3' → logprob: -10.875534057617188
    6. ' B' → logprob: -11.563034057617188
    7. 'module' → logprob: -12.438034057617188
    8. ')' → logprob: -12.625534057617188
    9. '_B' → logprob: -12.688034057617188
    10. 'NUM' → logprob: -13.125534057617188

Token 242: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.4742152988910675
    2. '):' → logprob: -0.9742152690887451
    3. '       ' → logprob: -9.974215507507324
    4. '   ' → logprob: -10.224215507507324
    5. ' ):
' → logprob: -11.099215507507324
    6. '           ' → logprob: -11.349215507507324
    7. ' ):' → logprob: -11.724215507507324
    8. ')' → logprob: -12.099215507507324
    9. '):
' → logprob: -12.099215507507324
    10. ':' → logprob: -12.224215507507324

Token 243: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002843384863808751
    2. '               ' → logprob: -8.625284194946289
    3. ',' → logprob: -10.750284194946289
    4. '            
' → logprob: -10.875284194946289
    5. '            ' → logprob: -11.375284194946289
    6. '<|end|>' → logprob: -11.625284194946289
    7. '```' → logprob: -12.250284194946289
    8. '       ' → logprob: -12.375284194946289
    9. ' cost' → logprob: -12.625284194946289
    10. '	       ' → logprob: -12.625284194946289

Token 244: ' awkward' (ID: 52520)
  Prédit: 'awk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'awk' → logprob: -0.019937923178076744
    2. ' awkward' → logprob: -4.394937992095947
    3. '               ' → logprob: -5.394937992095947
    4. '           ' → logprob: -6.144937992095947
    5. 'aw' → logprob: -8.269937515258789
    6. '   ' → logprob: -8.269937515258789
    7. ' awk' → logprob: -9.269937515258789
    8. '       ' → logprob: -11.144937515258789
    9. 'cost' → logprob: -11.519937515258789
    10. ' aw' → logprob: -11.519937515258789

Token 245: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00024870390188880265
    2. ' [' → logprob: -8.625248908996582
    3. ' +=' → logprob: -11.000248908996582
    4. '[k' → logprob: -11.000248908996582
    5. '+=' → logprob: -11.750248908996582
    6. '][' → logprob: -12.250248908996582
    7. '[...]' → logprob: -12.750248908996582
    8. '[:,' → logprob: -12.875248908996582
    9. '   ' → logprob: -13.375248908996582
    10. ')[' → logprob: -13.875248908996582

Token 246: 'tr' (ID: 371)
  Prédit: 'tr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.00031890018726699054
    2. ' tr' → logprob: -8.12531852722168
    3. 'trl' → logprob: -11.25031852722168
    4. '(tr' → logprob: -12.87531852722168
    5. ' ' → logprob: -14.00031852722168
    6. '
' → logprob: -14.12531852722168
    7. 'k' → logprob: -14.25031852722168
    8. '<tr' → logprob: -14.25031852722168
    9. '0' → logprob: -14.62531852722168
    10. '(' → logprob: -14.75031852722168

Token 247: ']' (ID: 60)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0065335920080542564
    2. ',' → logprob: -5.381533622741699
    3. ']' → logprob: -6.756533622741699
    4. ' ][' → logprob: -7.381533622741699
    5. ' ,' → logprob: -9.8815336227417
    6. ']+=' → logprob: -10.5065336227417
    7. '   ' → logprob: -11.7565336227417
    8. '[' → logprob: -11.7565336227417
    9. ']][' → logprob: -11.8815336227417
    10. '][_' → logprob: -12.3815336227417

Token 248: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.5149917602539062
    2. ' +=' → logprob: -1.0149917602539062
    3. '[' → logprob: -3.3899917602539062
    4. '=' → logprob: -5.264991760253906
    5. ']+=' → logprob: -8.139991760253906
    6. '[:,' → logprob: -8.514991760253906
    7. '+' → logprob: -8.639991760253906
    8. ' =' → logprob: -9.264991760253906
    9. ',' → logprob: -9.389991760253906
    10. '[k' → logprob: -9.514991760253906

Token 249: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.14152409136295319
    2. '(M' → logprob: -3.141524076461792
    3. 'NUM' → logprob: -3.391524076461792
    4. ' M' → logprob: -3.641524076461792
    5. 'bucket' → logprob: -4.766524314880371
    6. 'abs' → logprob: -5.016524314880371
    7. '(' → logprob: -6.141524314880371
    8. '   ' → logprob: -6.266524314880371
    9. 'MMM' → logprob: -6.391524314880371
    10. '(bucket' → logprob: -6.516524314880371

Token 250: 'tx' (ID: 6874)
  Prédit: 'tx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tx' → logprob: -5.085517113911919e-05
    2. '_tx' → logprob: -10.87505054473877
    3. 'Tx' → logprob: -11.00005054473877
    4. 'TX' → logprob: -12.25005054473877
    5. 'M' → logprob: -12.50005054473877
    6. 'atrix' → logprob: -13.50005054473877
    7. ' tx' → logprob: -14.25005054473877
    8. 'tc' → logprob: -14.25005054473877
    9. 'xt' → logprob: -14.37505054473877
    10. 'T' → logprob: -14.50005054473877

Token 251: '_D' (ID: 2958)
  Prédit: '_D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_D' → logprob: -3.011373155459296e-05
    2. 'D' → logprob: -11.750030517578125
    3. 'MODULE' → logprob: -11.875030517578125
    4. '_MODULE' → logprob: -12.250030517578125
    5. 'module' → logprob: -12.250030517578125
    6. '   ' → logprob: -13.250030517578125
    7. 'M' → logprob: -14.000030517578125
    8. '_d' → logprob: -14.375030517578125
    9. '[' → logprob: -14.625030517578125
    10. '```' → logprob: -14.875030517578125

Token 252: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0010443627834320068
    2. '[:,' → logprob: -7.376044273376465
    3. '[k' → logprob: -8.376044273376465
    4. '[
' → logprob: -9.501044273376465
    5. '[b' → logprob: -10.876044273376465
    6. 'tr' → logprob: -11.001044273376465
    7. '[...,' → logprob: -11.126044273376465
    8. '[,' → logprob: -11.751044273376465
    9. ' [' → logprob: -12.126044273376465
    10. '[[' → logprob: -12.376044273376465

Token 253: 'CLR' (ID: 148994)
  Prédit: 'CLR'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CLR' → logprob: -0.48546314239501953
    2. 'tr' → logprob: -0.9854631423950195
    3. 'clr' → logprob: -4.9854631423950195
    4. 'k' → logprob: -6.9854631423950195
    5. ' CLR' → logprob: -6.9854631423950195
    6. 'bucket' → logprob: -7.7354631423950195
    7. 'Clr' → logprob: -8.36046314239502
    8. 'TR' → logprob: -8.54796314239502
    9. ':,' → logprob: -8.67296314239502
    10. ',' → logprob: -8.73546314239502

Token 254: ']' (ID: 60)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.28805604577064514
    2. ',' → logprob: -1.7880560159683228
    3. ']' → logprob: -3.5380561351776123
    4. '][:' → logprob: -4.413055896759033
    5. ',b' → logprob: -4.413055896759033
    6. '[b' → logprob: -4.538055896759033
    7. ',tr' → logprob: -5.038055896759033
    8. ',k' → logprob: -5.663055896759033
    9. '[' → logprob: -5.663055896759033
    10. '[k' → logprob: -6.413055896759033

Token 255: ' *' (ID: 425)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.035829097032547
    2. '<|end|>' → logprob: -3.9108290672302246
    3. '*' → logprob: -5.160829067230225
    4. ' *' → logprob: -5.285829067230225
    5. '*[' → logprob: -7.285829067230225
    6. '[var' → logprob: -7.785829067230225
    7. '[
' → logprob: -7.785829067230225
    8. '[X' → logprob: -8.035829544067383
    9. '[token' → logprob: -8.285829544067383
    10. '[k' → logprob: -8.410829544067383

Token 256: ' bucket' (ID: 28257)
  Prédit: 'bucket'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bucket' → logprob: -0.020670579746365547
    2. ' bucket' → logprob: -3.8956706523895264
    3. '(bucket' → logprob: -9.145670890808105
    4. '   ' → logprob: -12.020670890808105
    5. ' ' → logprob: -12.145670890808105
    6. 'b' → logprob: -13.020670890808105
    7. '.bucket' → logprob: -13.770670890808105
    8. 'buck' → logprob: -13.895670890808105
    9. 'bundle' → logprob: -14.020670890808105
    10. '(' → logprob: -14.520670890808105

Token 257: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00011784763046307489
    2. '[k' → logprob: -9.375118255615234
    3. ' [' → logprob: -11.375118255615234
    4. '[
' → logprob: -12.375118255615234
    5. 'tr' → logprob: -12.625118255615234
    6. '[[' → logprob: -12.750118255615234
    7. '][' → logprob: -12.875118255615234
    8. '<tr' → logprob: -13.375118255615234
    9. '(tr' → logprob: -13.500118255615234
    10. ')[' → logprob: -14.375118255615234

Token 258: 'tr' (ID: 371)
  Prédit: 'tr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.023663757368922234
    2. '[' → logprob: -3.7736637592315674
    3. '(tr' → logprob: -7.898663520812988
    4. ' tr' → logprob: -10.148663520812988
    5. '<tr' → logprob: -13.148663520812988
    6. '[(' → logprob: -13.398663520812988
    7. '(' → logprob: -13.773663520812988
    8. '   ' → logprob: -14.148663520812988
    9. ',tr' → logprob: -14.648663520812988
    10. '	tr' → logprob: -14.648663520812988

Token 259: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.20545688271522522
    2. '[' → logprob: -1.7054568529129028
    3. ',' → logprob: -6.205456733703613
    4. ']' → logprob: -6.705456733703613
    5. ' ][' → logprob: -7.830456733703613
    6. '][:' → logprob: -8.830456733703613
    7. ' ,' → logprob: -9.955456733703613
    8. ' [' → logprob: -10.205456733703613
    9. ']][' → logprob: -10.580456733703613
    10. '[:,' → logprob: -11.080456733703613

Token 260: 'CLR' (ID: 148994)
  Prédit: 'CLR'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CLR' → logprob: -0.0003955224819947034
    2. ' CLR' → logprob: -7.87539529800415
    3. '_CLR' → logprob: -12.000395774841309
    4. 'clr' → logprob: -12.625395774841309
    5. 'Clr' → logprob: -13.000395774841309
    6. '0' → logprob: -14.000395774841309
    7. 'CL' → logprob: -14.250395774841309
    8. ']' → logprob: -14.375395774841309
    9. 'CLC' → logprob: -14.500395774841309
    10. 'CLK' → logprob: -15.250395774841309

Token 261: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6969871520996094
    2. '<|end|>' → logprob: -0.6969871520996094
    3. '<|end|>' → logprob: -5.821987152099609
    4. ')' → logprob: -8.19698715209961
    5. ' ]' → logprob: -8.32198715209961
    6. '[' → logprob: -9.44698715209961
    7. '
' → logprob: -9.44698715209961
    8. '           ' → logprob: -10.32198715209961
    9. ' ' → logprob: -10.57198715209961
    10. '       ' → logprob: -10.69698715209961

Token 262: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.25978928804397583
    2. '<|end|>' → logprob: -1.884789228439331
    3. '\n' → logprob: -3.509789228439331
    4. '   ' → logprob: -4.38478946685791
    5. ' ' → logprob: -4.50978946685791
    6. ')' → logprob: -4.75978946685791
    7. '[' → logprob: -4.88478946685791
    8. '(' → logprob: -7.25978946685791
    9. '[
' → logprob: -7.25978946685791
    10. '    
' → logprob: -7.25978946685791

Token 263: ' abs' (ID: 8443)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.913157045841217
    2. 'return' → logprob: -1.2881569862365723
    3. '
' → logprob: -1.7881569862365723
    4. ')' → logprob: -3.2881569862365723
    5. ' return' → logprob: -3.4131569862365723
    6. '\n' → logprob: -4.288156986236572
    7. '<|end|>' → logprob: -4.413156986236572
    8. ' ' → logprob: -4.538156986236572
    9. 'for' → logprob: -5.163156986236572
    10. '    
' → logprob: -5.163156986236572

Token 264: '_min' (ID: 15950)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.17696145176887512
    2. '_' → logprob: -2.3019614219665527
    3. 'ent' → logprob: -4.301961421966553
    4. '_val' → logprob: -4.426961421966553
    5. '_tol' → logprob: -5.176961421966553
    6. '()' → logprob: -5.426961421966553
    7. 't' → logprob: -5.801961421966553
    8. 'orption' → logprob: -5.926961421966553
    9. '(
' → logprob: -6.051961421966553
    10. '_value' → logprob: -6.301961421966553

Token 265: ' =' (ID: 314)
  Prédit: '_val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.5589640736579895
    2. '_' → logprob: -1.0589640140533447
    3. '_idx' → logprob: -2.9339640140533447
    4. '_cost' → logprob: -4.058964252471924
    5. '_value' → logprob: -4.808964252471924
    6. '_index' → logprob: -6.808964252471924
    7. ' =' → logprob: -7.558964252471924
    8. '=' → logprob: -8.308963775634766
    9. '_=' → logprob: -8.308963775634766
    10. '_score' → logprob: -9.058963775634766

Token 266: ' None' (ID: 4662)
  Prédit: 'awk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'awk' → logprob: -0.19904550909996033
    2. 'NUM' → logprob: -2.949045419692993
    3. 'float' → logprob: -3.199045419692993
    4. ' awkward' → logprob: -3.324045419692993
    5. ' NUM' → logprob: -3.574045419692993
    6. ' float' → logprob: -5.199045658111572
    7. 'int' → logprob: -5.449045658111572
    8. 'min' → logprob: -6.199045658111572
    9. ' awk' → logprob: -6.199045658111572
    10. ' min' → logprob: -6.574045658111572

Token 267: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02694987691938877
    2. '   ' → logprob: -4.026949882507324
    3. ' for' → logprob: -5.526949882507324
    4. 'for' → logprob: -6.151949882507324
    5. ',' → logprob: -7.151949882507324
    6. '<|end|>' → logprob: -7.401949882507324
    7. ',
' → logprob: -8.151949882507324
    8. ' 
' → logprob: -8.401949882507324
    9. '  
' → logprob: -8.776949882507324
    10. '    
' → logprob: -8.901949882507324

Token 268: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8580872416496277
    2. '
' → logprob: -1.2330873012542725
    3. '   ' → logprob: -1.7330873012542725
    4. 'for' → logprob: -2.7330873012542725
    5. '<|end|>' → logprob: -3.2330873012542725
    6. ',' → logprob: -7.358087062835693
    7. ' ' → logprob: -7.733087062835693
    8. ' 
' → logprob: -7.983087062835693
    9. '<|end|>' → logprob: -8.233087539672852
    10. '    
' → logprob: -8.233087539672852

Token 269: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.29426562786102295
    2. 'for' (adapté à ' for') → logprob: -2.1692657470703125
    3. ' from' → logprob: -2.5442657470703125
    4. 'from' → logprob: -3.1692657470703125
    5. 'import' → logprob: -4.1692657470703125
    6. ' import' → logprob: -6.5442657470703125
    7. '   ' → logprob: -7.0442657470703125
    8. ' best' → logprob: -7.9192657470703125
    9. ' possible' → logprob: -8.044265747070312
    10. 'indices' → logprob: -8.044265747070312

Token 270: ' c' (ID: 274)
  Prédit: ' color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' color' → logprob: -1.5928019285202026
    2. ' i' → logprob: -2.217802047729492
    3. ' c' → logprob: -2.342802047729492
    4. 'color' → logprob: -2.592802047729492
    5. 'i' → logprob: -2.717802047729492
    6. ' tr' → logprob: -2.842802047729492
    7. ' perm' → logprob: -3.092802047729492
    8. ' clr' → logprob: -3.217802047729492
    9. 'clr' → logprob: -3.342802047729492
    10. 'c' → logprob: -3.467802047729492

Token 271: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.49347493052482605
    2. '0' → logprob: -1.7434749603271484
    3. '_' → logprob: -2.4934749603271484
    4. 'A' → logprob: -2.9934749603271484
    5. 'olor' → logprob: -4.368474960327148
    6. ' in' → logprob: -4.493474960327148
    7. '_i' → logprob: -4.493474960327148
    8. '_color' → logprob: -4.868474960327148
    9. '_comb' → logprob: -4.868474960327148
    10. '_combo' → logprob: -4.993474960327148

Token 272: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004816003609448671
    2. 'in' → logprob: -5.379816055297852
    3. ' ' → logprob: -9.504816055297852
    4. ',' → logprob: -10.129816055297852
    5. '1' → logprob: -10.129816055297852
    6. '0' → logprob: -11.254816055297852
    7. '_' → logprob: -11.629816055297852
    8. '<|end|>' → logprob: -12.504816055297852
    9. '_in' → logprob: -12.879816055297852
    10. '   ' → logprob: -13.004816055297852

Token 273: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.006004163529723883
    2. 'range' → logprob: -5.131004333496094
    3. '(range' → logprob: -9.756004333496094
    4. '[' → logprob: -12.006004333496094
    5. ' ' → logprob: -12.756004333496094
    6. ' in' → logprob: -13.131004333496094
    7. '	range' → logprob: -13.131004333496094
    8. '  ' → logprob: -14.131004333496094
    9. '_range' → logprob: -14.381004333496094
    10. '(' → logprob: -14.756004333496094

Token 274: '(var' (ID: 15816)
  Prédit: '(var'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(var' → logprob: -0.0006154587608762085
    2. '(' → logprob: -7.62561559677124
    3. 'var' → logprob: -9.250615119934082
    4. ' (' → logprob: -11.250615119934082
    5. ' var' → logprob: -11.375615119934082
    6. ',var' → logprob: -13.000615119934082
    7. ')var' → logprob: -13.375615119934082
    8. '   ' → logprob: -14.000615119934082
    9. '[var' → logprob: -14.000615119934082
    10. '(len' → logprob: -14.375615119934082

Token 275: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0015708031132817268
    2. '3' → logprob: -6.876570701599121
    3. '0' → logprob: -8.251570701599121
    4. 'A' → logprob: -8.751570701599121
    5. 'var' → logprob: -10.376570701599121
    6. '1' → logprob: -10.501570701599121
    7. 'b' → logprob: -10.876570701599121
    8. '   ' → logprob: -12.126570701599121
    9. ' B' → logprob: -12.126570701599121
    10. '2' → logprob: -12.251570701599121

Token 276: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.20267070829868317
    2. '):' → logprob: -1.702670693397522
    3. '+' → logprob: -7.327670574188232
    4. '   ' → logprob: -7.827670574188232
    5. '-' → logprob: -9.32767105102539
    6. '):
' → logprob: -10.32767105102539
    7. ' -' → logprob: -10.82767105102539
    8. ' +' → logprob: -10.82767105102539
    9. ')' → logprob: -11.20267105102539
    10. ' ):
' → logprob: -11.82767105102539

Token 277: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06283901631832123
    2. ' for' → logprob: -3.1878390312194824
    3. '<|end|>' → logprob: -4.062839031219482
    4. '   ' → logprob: -6.437839031219482
    5. ',' → logprob: -7.687839031219482
    6. ' ' → logprob: -8.437838554382324
    7. '<|end|>' → logprob: -10.312838554382324
    8. '    ' → logprob: -10.562838554382324
    9. ' and' → logprob: -10.812838554382324
    10. ':' → logprob: -11.187838554382324

Token 278: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.4271974563598633
    2. '       ' → logprob: -1.8021974563598633
    3. ' for' → logprob: -1.8021974563598633
    4. '   ' → logprob: -4.052197456359863
    5. ' ' → logprob: -8.427197456359863
    6. '	for' → logprob: -9.052197456359863
    7. '           ' → logprob: -10.427197456359863
    8. '    ' → logprob: -11.677197456359863
    9. '     ' → logprob: -11.802197456359863
    10. '  ' → logprob: -11.927197456359863

Token 279: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.38768869638442993
    2. ' c' → logprob: -1.1376886367797852
    3. '   ' → logprob: -7.137688636779785
    4. ' ' → logprob: -11.012688636779785
    5. '  ' → logprob: -12.887688636779785
    6. '    ' → logprob: -13.137688636779785
    7. '	c' → logprob: -14.137688636779785
    8. '(c' → logprob: -14.387688636779785
    9. '       ' → logprob: -16.0126895904541
    10. '1' → logprob: -16.5126895904541

Token 280: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.14518269896507263
    2. '1' → logprob: -2.0201826095581055
    3. ' ' → logprob: -6.3951826095581055
    4. 'c' → logprob: -7.8951826095581055
    5. '(' → logprob: -9.020182609558105
    6. '(c' → logprob: -9.395182609558105
    7. ' c' → logprob: -9.520182609558105
    8. '_' → logprob: -9.895182609558105
    9. '0' → logprob: -10.395182609558105
    10. '+' → logprob: -10.895182609558105

Token 281: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -1.9266199160483666e-05
    2. ' ' → logprob: -11.500019073486328
    3. 'in' → logprob: -11.625019073486328
    4. '<|end|>' → logprob: -15.875019073486328
    5. 'range' → logprob: -16.875019073486328
    6. '  ' → logprob: -17.125019073486328
    7. '   ' → logprob: -17.625019073486328
    8. 'import' → logprob: -18.000019073486328
    9. ' range' → logprob: -18.250019073486328
    10. '    ' → logprob: -18.750019073486328

Token 282: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.31339800357818604
    2. ' range' → logprob: -1.313398003578186
    3. '(range' → logprob: -9.063398361206055
    4. ' c' → logprob: -12.188398361206055
    5. 'var' → logprob: -12.688398361206055
    6. '   ' → logprob: -12.688398361206055
    7. ' ' → logprob: -12.813398361206055
    8. 'c' → logprob: -13.313398361206055
    9. ' in' → logprob: -13.563398361206055
    10. '  ' → logprob: -14.438398361206055

Token 283: '(var' (ID: 15816)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20827066898345947
    2. 'range' → logprob: -2.20827054977417
    3. '(range' → logprob: -3.08327054977417
    4. '(var' → logprob: -4.45827054977417
    5. 'in' → logprob: -4.58327054977417
    6. ' range' → logprob: -5.20827054977417
    7. 'var' → logprob: -5.70827054977417
    8. '(c' → logprob: -6.83327054977417
    9. ' (' → logprob: -7.70827054977417
    10. ' ' → logprob: -9.708271026611328

Token 284: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0014815322356298566
    2. '1' → logprob: -6.626481533050537
    3. 'A' → logprob: -10.376481056213379
    4. '3' → logprob: -10.501481056213379
    5. '(' → logprob: -10.501481056213379
    6. '(c' → logprob: -10.876481056213379
    7. '           ' → logprob: -11.376481056213379
    8. '2' → logprob: -11.751481056213379
    9. 'c' → logprob: -12.001481056213379
    10. '       ' → logprob: -12.126481056213379

Token 285: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.28175994753837585
    2. '):' → logprob: -1.4067599773406982
    3. '+' → logprob: -7.781759738922119
    4. '):
' → logprob: -9.656760215759277
    5. '       ' → logprob: -10.281760215759277
    6. '   ' → logprob: -10.406760215759277
    7. '):

' → logprob: -10.906760215759277
    8. '           ' → logprob: -11.531760215759277
    9. ':' → logprob: -11.781760215759277
    10. ')' → logprob: -12.031760215759277

Token 286: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11826026439666748
    2. '           ' → logprob: -2.868260383605957
    3. '<|end|>' → logprob: -3.243260383605957
    4. ' if' → logprob: -4.743260383605957
    5. '               ' → logprob: -5.993260383605957
    6. '        ' → logprob: -6.243260383605957
    7. ' ' → logprob: -7.868260383605957
    8. ' and' → logprob: -8.243260383605957
    9. '<|end|>' → logprob: -8.368260383605957
    10. '                               ' → logprob: -8.493260383605957

Token 287: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.007640820927917957
    2. ' if' → logprob: -5.257640838623047
    3. '           ' → logprob: -7.257640838623047
    4. ' ' → logprob: -7.382640838623047
    5. ' for' → logprob: -7.757640838623047
    6. '<|end|>' → logprob: -8.757640838623047
    7. '       ' → logprob: -9.132640838623047
    8. 'if' (adapté à ' if') → logprob: -9.757640838623047
    9. '   ' → logprob: -9.882640838623047
    10. '	       ' → logprob: -10.007640838623047

Token 288: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.10021012276411057
    2. ' c' → logprob: -2.350210189819336
    3. '            ' → logprob: -13.225210189819336
    4. '           ' → logprob: -13.725210189819336
    5. '               ' → logprob: -15.600210189819336
    6. '(c' → logprob: -15.600210189819336
    7. '   ' → logprob: -16.225210189819336
    8. '             ' → logprob: -17.100210189819336
    9. ' ' → logprob: -17.100210189819336
    10. ' ' → logprob: -17.100210189819336

Token 289: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.24041207134723663
    2. '_' → logprob: -1.6154121160507202
    3. ' ==' → logprob: -5.24041223526001
    4. ' !=' → logprob: -5.36541223526001
    5. '!=' → logprob: -6.11541223526001
    6. '==' → logprob: -6.49041223526001
    7. ' ' → logprob: -8.115411758422852
    8. '```' → logprob: -8.490411758422852
    9. ' _' → logprob: -8.990411758422852
    10. '   ' → logprob: -9.240411758422852

Token 290: ' ==' (ID: 951)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.03865813836455345
    2. '!=' → logprob: -3.5386581420898438
    3. ' ==' → logprob: -4.788658142089844
    4. '==' → logprob: -7.663658142089844
    5. ' ' → logprob: -10.413658142089844
    6. ' ' → logprob: -10.663658142089844
    7. '<|end|>' → logprob: -11.413658142089844
    8. '   ' → logprob: -12.663658142089844
    9. '  ' → logprob: -13.538658142089844
    10. '           ' → logprob: -14.538658142089844

Token 291: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0040785204619169235
    2. ' c' → logprob: -5.504078388214111
    3. '   ' → logprob: -16.379077911376953
    4. '           ' → logprob: -17.004077911376953
    5. ' ' → logprob: -17.379077911376953
    6. '	c' → logprob: -18.004077911376953
    7. '
' → logprob: -18.629077911376953
    8. '               ' → logprob: -18.754077911376953
    9. ')c' → logprob: -19.004077911376953
    10. '  ' → logprob: -19.379077911376953

Token 292: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.759734732331708e-05
    2. 'c' → logprob: -11.125017166137695
    3. '1' → logprob: -13.125017166137695
    4. ' ' → logprob: -14.250017166137695
    5. ' c' → logprob: -16.125017166137695
    6. '   ' → logprob: -17.250017166137695
    7. '_' → logprob: -17.625017166137695
    8. '3' → logprob: -18.375017166137695
    9. '```' → logprob: -18.375017166137695
    10. 's' → logprob: -18.625017166137695

Token 293: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07700992375612259
    2. '               ' → logprob: -2.702009916305542
    3. ' or' → logprob: -5.452010154724121
    4. ':
' → logprob: -6.077010154724121
    5. ' continue' → logprob: -9.077010154724121
    6. 'continue' → logprob: -9.452010154724121
    7. '           ' → logprob: -9.577010154724121
    8. '                               ' → logprob: -10.077010154724121
    9. '                       ' → logprob: -10.202010154724121
    10. '                   ' → logprob: -10.202010154724121

Token 294: ' continue' (ID: 4901)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00012118533049942926
    2. ' continue' → logprob: -9.125121116638184
    3. 'continue' → logprob: -12.000121116638184
    4. '                   ' → logprob: -13.375121116638184
    5. '           ' → logprob: -13.625121116638184
    6. '<|end|>' → logprob: -14.250121116638184
    7. '                       ' → logprob: -14.625121116638184
    8. '                               ' → logprob: -14.875121116638184
    9. '              ' → logprob: -15.375121116638184
    10. ' for' → logprob: -15.500121116638184

Token 295: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.12103068083524704
    2. '           ' → logprob: -2.621030569076538
    3. '<|end|>' → logprob: -3.246030569076538
    4. '<|end|>' → logprob: -6.996030807495117
    5. '                       ' → logprob: -8.121030807495117
    6. '
' → logprob: -8.246030807495117
    7. '                   ' → logprob: -8.496030807495117
    8. ' for' → logprob: -9.246030807495117
    9. '       ' → logprob: -9.246030807495117
    10. ',' → logprob: -9.246030807495117

Token 296: '           ' (ID: 352)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.11305730789899826
    2. '           ' → logprob: -2.2380573749542236
    3. '       ' → logprob: -9.363057136535645
    4. '                   ' → logprob: -9.488057136535645
    5. '              ' → logprob: -11.113057136535645
    6. '             ' → logprob: -11.238057136535645
    7. ' for' → logprob: -11.363057136535645
    8. '                       ' → logprob: -11.613057136535645
    9. '            ' → logprob: -11.738057136535645
    10. '   ' → logprob: -12.488057136535645

Token 297: ' for' (ID: 395)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4552510380744934
    2. 'for' (adapté à ' for') → logprob: -1.2052509784698486
    3. ' for' → logprob: -2.9552509784698486
    4. '           ' → logprob: -4.330251216888428
    5. '       ' → logprob: -7.330251216888428
    6. '                   ' → logprob: -9.33025074005127
    7. '   ' → logprob: -9.95525074005127
    8. '	for' → logprob: -10.58025074005127
    9. '                       ' → logprob: -11.33025074005127
    10. '              ' → logprob: -12.08025074005127

Token 298: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.014164102263748646
    2. ' c' → logprob: -4.264163970947266
    3. '   ' → logprob: -14.639163970947266
    4. ' ' → logprob: -16.264163970947266
    5. '  ' → logprob: -17.764163970947266
    6. '    ' → logprob: -18.764163970947266
    7. 'range' → logprob: -19.889163970947266
    8. '	c' → logprob: -20.139163970947266
    9. '0' → logprob: -20.264163970947266
    10. '_c' → logprob: -20.389163970947266

Token 299: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -5.3358446166384965e-05
    2. ' in' → logprob: -10.625053405761719
    3. '2' → logprob: -11.375053405761719
    4. '1' → logprob: -11.500053405761719
    5. ' ' → logprob: -12.250053405761719
    6. '       ' → logprob: -14.500053405761719
    7. '           ' → logprob: -14.750053405761719
    8. '   ' → logprob: -14.875053405761719
    9. 'import' → logprob: -15.500053405761719
    10. '0' → logprob: -15.750053405761719

Token 300: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011048528365790844
    2. 'in' → logprob: -4.511048316955566
    3. ' ' → logprob: -14.261048316955566
    4. 'import' → logprob: -17.511049270629883
    5. 'range' → logprob: -17.636049270629883
    6. '  ' → logprob: -18.886049270629883
    7. '<|end|>' → logprob: -19.261049270629883
    8. ',' → logprob: -19.511049270629883
    9. '   ' → logprob: -20.386049270629883
    10. 'n' → logprob: -20.386049270629883

Token 301: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.4740777611732483
    2. ' range' → logprob: -0.9740777611732483
    3. '(range' → logprob: -14.099078178405762
    4. 'in' → logprob: -18.724077224731445
    5. ' in' → logprob: -18.724077224731445
    6. ' ' → logprob: -18.849077224731445
    7. '	range' → logprob: -19.224077224731445
    8. '_range' → logprob: -20.599077224731445
    9. '  ' → logprob: -20.724077224731445
    10. 'var' → logprob: -20.849077224731445

Token 302: '(var' (ID: 15816)
  Prédit: '(var'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(var' → logprob: -6.704273118884885e-07
    2. 'var' → logprob: -15.000000953674316
    3. '[var' → logprob: -16.0
    4. '(' → logprob: -16.75
    5. ' (' → logprob: -17.125
    6. '(variable' → logprob: -17.875
    7. ',var' → logprob: -17.875
    8. '(range' → logprob: -18.25
    9. ')var' → logprob: -18.5
    10. ' var' → logprob: -19.5

Token 303: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -6.704273118884885e-07
    2. 'var' → logprob: -14.875000953674316
    3. 'b' → logprob: -16.875
    4. 'A' → logprob: -17.375
    5. '3' → logprob: -17.5
    6. ' ' → logprob: -18.0
    7. 'module' → logprob: -18.0
    8. ')' → logprob: -18.125
    9. 'Б' → logprob: -18.375
    10. '   ' → logprob: -18.5

Token 304: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.10056646913290024
    2. '):' → logprob: -2.3505663871765137
    3. ':' → logprob: -9.100566864013672
    4. ')' → logprob: -9.475566864013672
    5. '):
' → logprob: -9.475566864013672
    6. '):

' → logprob: -10.725566864013672
    7. '           ' → logprob: -10.850566864013672
    8. '       ' → logprob: -11.100566864013672
    9. ':
' → logprob: -11.225566864013672
    10. '():
' → logprob: -11.850566864013672

Token 305: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002051885472610593
    2. ' if' → logprob: -6.877051830291748
    3. '           ' → logprob: -7.627051830291748
    4. '<|end|>' → logprob: -8.252052307128906
    5. '       ' → logprob: -8.627052307128906
    6. '	       ' → logprob: -11.252052307128906
    7. 'if' → logprob: -11.502052307128906
    8. '   ' → logprob: -11.627052307128906
    9. ' ' → logprob: -11.627052307128906
    10. '	           ' → logprob: -11.877052307128906

Token 306: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.011420201510190964
    2. ' if' → logprob: -4.511420249938965
    3. 'if' (adapté à ' if') → logprob: -8.511420249938965
    4. '                   ' → logprob: -10.261420249938965
    5. '       ' → logprob: -10.511420249938965
    6. '           ' → logprob: -10.761420249938965
    7. '   ' → logprob: -10.886420249938965
    8. '                               ' → logprob: -10.886420249938965
    9. '                ' → logprob: -11.261420249938965
    10. '<|end|>' → logprob: -11.386420249938965

Token 307: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.026606684550642967
    2. ' c' → logprob: -3.651606798171997
    3. '(c' → logprob: -8.401606559753418
    4. ' (' → logprob: -9.776606559753418
    5. '   ' → logprob: -11.401606559753418
    6. ' ' → logprob: -11.651606559753418
    7. '	c' → logprob: -13.776606559753418
    8. '(' → logprob: -13.901606559753418
    9. '  ' → logprob: -13.901606559753418
    10. '    ' → logprob: -14.401606559753418

Token 308: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.43248093128204346
    2. '1' → logprob: -1.0574809312820435
    3. 'c' → logprob: -5.932480812072754
    4. ' c' → logprob: -7.557480812072754
    5. '==' → logprob: -8.057480812072754
    6. ' ==' → logprob: -8.807480812072754
    7. '```' → logprob: -9.432480812072754
    8. ' ' → logprob: -10.557480812072754
    9. '{' → logprob: -12.432480812072754
    10. ' in' → logprob: -12.932480812072754

Token 309: ' in' (ID: 306)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.10193655639886856
    2. ' ==' → logprob: -2.3519365787506104
    3. ' in' → logprob: -6.476936340332031
    4. 'in' → logprob: -8.601936340332031
    5. '==
' → logprob: -12.726936340332031
    6. '===' → logprob: -13.601936340332031
    7. 'In' → logprob: -14.601936340332031
    8. ' ' → logprob: -14.601936340332031
    9. '==(' → logprob: -15.351936340332031
    10. '=' → logprob: -15.851936340332031

Token 310: ' (' (ID: 350)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.03266800940036774
    2. '(c' → logprob: -4.032668113708496
    3. '[c' → logprob: -4.282668113708496
    4. ' {' → logprob: -7.532668113708496
    5. ' (' → logprob: -9.657668113708496
    6. '({' → logprob: -12.157668113708496
    7. '<c' → logprob: -14.282668113708496
    8. '(' → logprob: -14.282668113708496
    9. ' [' → logprob: -14.657668113708496
    10. '[' → logprob: -15.282668113708496

Token 311: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.029822124168276787
    2. '{' → logprob: -3.5298221111297607
    3. ' c' → logprob: -10.40482234954834
    4. '(c' → logprob: -10.77982234954834
    5. '[c' → logprob: -11.27982234954834
    6. ')c' → logprob: -12.40482234954834
    7. '{
' → logprob: -13.27982234954834
    8. '   ' → logprob: -13.65482234954834
    9. ')' → logprob: -15.40482234954834
    10. '	c' → logprob: -15.65482234954834

Token 312: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.5577775128767826e-06
    2. '{' → logprob: -12.125005722045898
    3. ' ' → logprob: -17.0000057220459
    4. '[c' → logprob: -17.3750057220459
    5. '[' → logprob: -18.6250057220459
    6. '   ' → logprob: -19.0000057220459
    7. '{
' → logprob: -19.7500057220459
    8. '(c' → logprob: -19.7500057220459
    9. ' (' → logprob: -20.0000057220459
    10. ' c' → logprob: -20.1250057220459

Token 313: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012833295622840524
    2. ',c' → logprob: -6.751283168792725
    3. ' ,' → logprob: -9.126283645629883
    4. ',
' → logprob: -12.376283645629883
    5. 'c' → logprob: -16.251283645629883
    6. ' ' → logprob: -17.126283645629883
    7. ' c' → logprob: -18.126283645629883
    8. '   ' → logprob: -19.626283645629883
    9. ' ,
' → logprob: -20.001283645629883
    10. '  ' → logprob: -20.251283645629883

Token 314: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0015031944494694471
    2. ' c' → logprob: -6.501502990722656
    3. '   ' → logprob: -14.126502990722656
    4. '	c' → logprob: -16.501502990722656
    5. ' ' → logprob: -17.751502990722656
    6. ')c' → logprob: -17.751502990722656
    7. '           ' → logprob: -18.501502990722656
    8. '       ' → logprob: -18.501502990722656
    9. '    ' → logprob: -18.626502990722656
    10. '
' → logprob: -18.751502990722656

Token 315: '2' (ID: 17)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0025133544113487005
    2. '2' → logprob: -6.627513408660889
    3. 'c' → logprob: -6.752513408660889
    4. ',' → logprob: -11.37751293182373
    5. ' ' → logprob: -12.75251293182373
    6. ' c' → logprob: -13.12751293182373
    7. '   ' → logprob: -14.12751293182373
    8. ',c' → logprob: -14.37751293182373
    9. '```' → logprob: -14.75251293182373
    10. '1' → logprob: -15.25251293182373

Token 316: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0001487140398239717
    2. '):
' → logprob: -8.87514877319336
    3. ')' → logprob: -12.62514877319336
    4. ' ):' → logprob: -12.75014877319336
    5. 'continue' → logprob: -13.75014877319336
    6. ':' → logprob: -14.62514877319336
    7. ',' → logprob: -14.75014877319336
    8. ' continue' → logprob: -15.50014877319336
    9. '):
' → logprob: -16.12514877319336
    10. '   ' → logprob: -16.25014877319336

Token 317: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.16809482872486115
    2. '                   ' → logprob: -1.9180948734283447
    3. 'continue' → logprob: -5.043094635009766
    4. '               ' → logprob: -7.043094635009766
    5. '   ' → logprob: -7.918094635009766
    6. '           ' → logprob: -9.293094635009766
    7. '	continue' → logprob: -10.418094635009766
    8. '                       ' → logprob: -11.918094635009766
    9. '       ' → logprob: -12.418094635009766
    10. ' ' → logprob: -12.543094635009766

Token 318: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.13438346982002258
    2. ':' → logprob: -2.5093834400177
    3. '               ' → logprob: -3.6343834400177
    4. ':
' → logprob: -4.634383678436279
    5. '<|end|>' → logprob: -5.884383678436279
    6. '                       ' → logprob: -6.384383678436279
    7. '                ' → logprob: -7.634383678436279
    8. '<|end|>' → logprob: -7.759383678436279
    9. '                    
' → logprob: -7.884383678436279
    10. ',' → logprob: -8.259383201599121

Token 319: '               ' (ID: 506)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.7703529596328735
    2. ':' → logprob: -1.2703529596328735
    3. '               ' → logprob: -1.6453529596328735
    4. ':
' → logprob: -3.395352840423584
    5. '<|end|>' → logprob: -4.645352840423584
    6. '                       ' → logprob: -5.520352840423584
    7. '   ' → logprob: -6.270352840423584
    8. '                               ' → logprob: -6.270352840423584
    9. '                ' → logprob: -6.520352840423584
    10. '                    
' → logprob: -6.770352840423584

Token 320: ' SUM' (ID: 52418)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.2719928026199341
    2. '               ' → logprob: -1.646992802619934
    3. 'total' → logprob: -4.0219926834106445
    4. ' total' → logprob: -5.2719926834106445
    5. '   ' → logprob: -5.3969926834106445
    6. 'cost' → logprob: -5.3969926834106445
    7. '           ' → logprob: -5.7719926834106445
    8. 'current' → logprob: -6.0219926834106445
    9. 'abs' → logprob: -6.8969926834106445
    10. ' current' → logprob: -7.0219926834106445

Token 321: '_SUM' (ID: 121371)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20158398151397705
    2. '=' → logprob: -1.701583981513977
    3. '_' → logprob: -8.826583862304688
    4. '_=' → logprob: -11.326583862304688
    5. ' ' → logprob: -12.201583862304688
    6. '_cost' → logprob: -13.201583862304688
    7. '_val' → logprob: -13.826583862304688
    8. ' ' → logprob: -13.826583862304688
    9. '	' → logprob: -14.826583862304688
    10. 's' → logprob: -15.201583862304688

Token 322: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04300170764327049
    2. '=' → logprob: -3.168001651763916
    3. ' ' → logprob: -13.418002128601074
    4. ' ' → logprob: -14.543002128601074
    5. '_' → logprob: -15.918002128601074
    6. ' =
' → logprob: -16.043001174926758
    7. 's' → logprob: -16.293001174926758
    8. '_=' → logprob: -16.918001174926758
    9. '=int' → logprob: -17.168001174926758
    10. ' =(' → logprob: -17.168001174926758

Token 323: ' awkward' (ID: 52520)
  Prédit: 'awk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'awk' → logprob: -0.03906909376382828
    2. ' awkward' → logprob: -3.289069175720215
    3. '   ' → logprob: -7.664069175720215
    4. ' awk' → logprob: -8.164069175720215
    5. 'aw' → logprob: -9.164069175720215
    6. '       ' → logprob: -10.289069175720215
    7. '0' → logprob: -10.289069175720215
    8. 'int' → logprob: -10.539069175720215
    9. '           ' → logprob: -11.664069175720215
    10. '    ' → logprob: -11.789069175720215

Token 324: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.096126576769166e-05
    2. '.copy' → logprob: -10.625041007995605
    3. '[
' → logprob: -12.625041007995605
    4. '0' → logprob: -13.000041007995605
    5. '[[' → logprob: -13.250041007995605
    6. '.sum' → logprob: -13.500041007995605
    7. ' [' → logprob: -13.875041007995605
    8. '[(' → logprob: -14.000041007995605
    9. '
' → logprob: -14.125041007995605
    10. 'copy' → logprob: -14.125041007995605

Token 325: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.550411151489243e-05
    2. ' ' → logprob: -9.875055313110352
    3. '   ' → logprob: -14.125055313110352
    4. '[' → logprob: -14.250055313110352
    5. '(' → logprob: -14.375055313110352
    6. '
' → logprob: -14.500055313110352
    7. '1' → logprob: -14.937555313110352
    8. '  ' → logprob: -15.375055313110352
    9. 'c' → logprob: -15.500055313110352
    10. '    ' → logprob: -16.12505531311035

Token 326: '][' (ID: 2696)
  Prédit: '[c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.0012114259880036116
    2. '][' → logprob: -6.751211643218994
    3. ']' → logprob: -11.626211166381836
    4. ' [' → logprob: -11.876211166381836
    5. 'c' → logprob: -12.001211166381836
    6. '[' → logprob: -12.126211166381836
    7. '+c' → logprob: -12.126211166381836
    8. ',c' → logprob: -12.876211166381836
    9. ' +' → logprob: -13.126211166381836
    10. ',' → logprob: -14.001211166381836

Token 327: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -2.2200749754119897e-06
    2. ' c' → logprob: -13.750001907348633
    3. '[c' → logprob: -13.875001907348633
    4. '   ' → logprob: -16.375001907348633
    5. ']' → logprob: -17.000001907348633
    6. '[' → logprob: -18.000001907348633
    7. ' ' → logprob: -18.000001907348633
    8. '
' → logprob: -18.625001907348633
    9. ':c' → logprob: -18.750001907348633
    10. '(c' → logprob: -19.000001907348633

Token 328: '1' (ID: 16)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.5761106610298157
    2. '1' → logprob: -0.8261106610298157
    3. '[c' → logprob: -9.20111083984375
    4. ' c' → logprob: -10.20111083984375
    5. ']' → logprob: -10.82611083984375
    6. '(c' → logprob: -12.32611083984375
    7. '```' → logprob: -13.70111083984375
    8. 's' → logprob: -14.20111083984375
    9. ',c' → logprob: -14.20111083984375
    10. '	c' → logprob: -14.82611083984375

Token 329: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2532939910888672
    2. '+' → logprob: -1.5032939910888672
    3. ']' → logprob: -6.878293991088867
    4. ']+' → logprob: -8.253293991088867
    5. '+
' → logprob: -10.628293991088867
    6. ' +
' → logprob: -10.753293991088867
    7. '+]' → logprob: -11.753293991088867
    8. ' ]' → logprob: -12.003293991088867
    9. '[' → logprob: -12.503293991088867
    10. ' ' → logprob: -12.878293991088867

Token 330: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.10022101551294327
    2. '+' → logprob: -2.3502209186553955
    3. '+
' → logprob: -12.475220680236816
    4. ' +
' → logprob: -12.600220680236816
    5. '               ' → logprob: -12.600220680236816
    6. '           ' → logprob: -13.850220680236816
    7. '                ' → logprob: -14.350220680236816
    8. '                   ' → logprob: -14.725220680236816
    9. '            ' → logprob: -15.100220680236816
    10. '              ' → logprob: -15.100220680236816

Token 331: ' awkward' (ID: 52520)
  Prédit: 'awk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'awk' → logprob: -0.000931825372390449
    2. ' awkward' → logprob: -7.000931739807129
    3. 'aw' → logprob: -10.875931739807129
    4. '   ' → logprob: -14.750931739807129
    5. '  ' → logprob: -15.000931739807129
    6. ' awk' → logprob: -15.250931739807129
    7. ' ' → logprob: -16.500932693481445
    8. '       ' → logprob: -16.625932693481445
    9. '      ' → logprob: -16.750932693481445
    10. '           ' → logprob: -17.125932693481445

Token 332: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2664456789934775e-06
    2. '1' → logprob: -13.625000953674316
    3. '[
' → logprob: -17.250001907348633
    4. ' [' → logprob: -17.625001907348633
    5. '2' → logprob: -17.750001907348633
    6. '```' → logprob: -17.750001907348633
    7. '0' → logprob: -18.500001907348633
    8. '3' → logprob: -18.625001907348633
    9. '   ' → logprob: -19.625001907348633
    10. '\[' → logprob: -19.750001907348633

Token 333: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.25
    3. '   ' → logprob: -18.0
    4. '
' → logprob: -18.0
    5. '0' → logprob: -18.25
    6. '[' → logprob: -19.125
    7. '

' → logprob: -20.125
    8. '2' → logprob: -20.25
    9. '  ' → logprob: -20.5
    10. '```' → logprob: -20.75

Token 334: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0009162207134068012
    2. '[c' → logprob: -7.000916004180908
    3. '[' → logprob: -13.125916481018066
    4. ']' → logprob: -13.250916481018066
    5. ' ][' → logprob: -14.375916481018066
    6. 'c' → logprob: -16.37591552734375
    7. '}[' → logprob: -16.37591552734375
    8. '>[' → logprob: -16.50091552734375
    9. ' [' → logprob: -17.12591552734375
    10. '"][' → logprob: -17.25091552734375

Token 335: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -2.339278580620885e-06
    2. '[c' → logprob: -13.500001907348633
    3. ' c' → logprob: -14.000001907348633
    4. '   ' → logprob: -18.500001907348633
    5. '][' → logprob: -19.625001907348633
    6. ' ' → logprob: -19.625001907348633
    7. '
' → logprob: -19.750001907348633
    8. ')c' → logprob: -20.000001907348633
    9. '	c' → logprob: -20.500001907348633
    10. '[' → logprob: -20.625001907348633

Token 336: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0006475062109529972
    2. 'c' → logprob: -7.87564754486084
    3. '3' → logprob: -8.25064754486084
    4. '[c' → logprob: -12.62564754486084
    5. '][' → logprob: -13.50064754486084
    6. '```' → logprob: -13.87564754486084
    7. ']' → logprob: -15.00064754486084
    8. '[' → logprob: -16.375646591186523
    9. '``' → logprob: -16.750646591186523
    10. '   ' → logprob: -17.125646591186523

Token 337: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.08899868279695511
    2. '+' → logprob: -2.463998794555664
    3. ']' → logprob: -10.338998794555664
    4. ' ' → logprob: -11.588998794555664
    5. ']+' → logprob: -11.838998794555664
    6. '[' → logprob: -12.338998794555664
    7. '               ' → logprob: -13.213998794555664
    8. ')' → logprob: -14.088998794555664
    9. '           ' → logprob: -14.338998794555664
    10. ' +
' → logprob: -14.588998794555664

Token 338: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.12781117856502533
    2. ' +' → logprob: -2.1278111934661865
    3. '               ' → logprob: -7.127810955047607
    4. '+c' → logprob: -10.502811431884766
    5. '[' → logprob: -10.877811431884766
    6. '+
' → logprob: -12.002811431884766
    7. '                ' → logprob: -12.127811431884766
    8. '                               ' → logprob: -12.627811431884766
    9. '                   ' → logprob: -12.752811431884766
    10. '+s' → logprob: -12.877811431884766

Token 339: ' awkward' (ID: 52520)
  Prédit: 'awk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'awk' → logprob: -0.00595427630469203
    2. ' awkward' → logprob: -5.130954265594482
    3. 'aw' → logprob: -10.75595474243164
    4. ' awk' → logprob: -13.38095474243164
    5. '   ' → logprob: -13.63095474243164
    6. '  ' → logprob: -14.50595474243164
    7. ' ' → logprob: -15.63095474243164
    8. '       ' → logprob: -15.88095474243164
    9. 'ak' → logprob: -16.25595474243164
    10. '           ' → logprob: -16.38095474243164

Token 340: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.069664333248511e-05
    2. '2' → logprob: -10.875020980834961
    3. ' [' → logprob: -14.125020980834961
    4. '[
' → logprob: -15.125020980834961
    5. ' ' → logprob: -15.375020980834961
    6. '```' → logprob: -15.500020980834961
    7. '3' → logprob: -15.750020980834961
    8. '][' → logprob: -16.37502098083496
    9. '   ' → logprob: -17.00002098083496
    10. '0' → logprob: -17.75002098083496

Token 341: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0011821311200037599
    2. '0' → logprob: -6.7511820793151855
    3. ' ' → logprob: -11.626182556152344
    4. '[' → logprob: -13.876182556152344
    5. '   ' → logprob: -14.251182556152344
    6. '```' → logprob: -14.501182556152344
    7. '3' → logprob: -14.876182556152344
    8. '  ' → logprob: -15.876182556152344
    9. 'c' → logprob: -15.876182556152344
    10. '
' → logprob: -16.001182556152344

Token 342: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0009286141721531749
    2. '[c' → logprob: -7.0009284019470215
    3. '[' → logprob: -11.62592887878418
    4. ']' → logprob: -12.12592887878418
    5. ' ][' → logprob: -13.37592887878418
    6. '}[' → logprob: -14.87592887878418
    7. 'c' → logprob: -15.25092887878418
    8. '   ' → logprob: -15.75092887878418
    9. '>[' → logprob: -15.87592887878418
    10. ' [' → logprob: -17.12592887878418

Token 343: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -4.961759259458631e-06
    2. ' c' → logprob: -12.250004768371582
    3. '   ' → logprob: -16.8750057220459
    4. ')c' → logprob: -18.2500057220459
    5. '[c' → logprob: -18.2500057220459
    6. '(c' → logprob: -18.5000057220459
    7. '           ' → logprob: -18.6250057220459
    8. '       ' → logprob: -19.2500057220459
    9. '               ' → logprob: -19.3750057220459
    10. ' ' → logprob: -19.5000057220459

Token 344: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: 0.0
    2. '```' → logprob: -17.625
    3. ']' → logprob: -18.875
    4. ' ' → logprob: -19.625
    5. '۳' → logprob: -20.375
    6. '[' → logprob: -21.375
    7. '``' → logprob: -22.125
    8. '３' → logprob: -22.125
    9. '٣' → logprob: -22.375
    10. '৩' → logprob: -23.0

Token 345: ']
' (ID: 1592)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.19986529648303986
    2. '
' → logprob: -2.8248653411865234
    3. ')
' → logprob: -2.9498653411865234
    4. ')' → logprob: -3.4498653411865234
    5. '           ' → logprob: -3.4498653411865234
    6. 'if' → logprob: -5.949865341186523
    7. ' if' → logprob: -6.449865341186523
    8. '                   ' → logprob: -6.824865341186523
    9. '<|end|>' → logprob: -8.949865341186523
    10. '   ' → logprob: -9.199865341186523

Token 346: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08876670151948929
    2. '<|end|>' → logprob: -3.3387668132781982
    3. '                   ' → logprob: -4.088766574859619
    4. '
' → logprob: -4.338766574859619
    5. '                               ' → logprob: -5.463766574859619
    6. '           ' → logprob: -6.088766574859619
    7. '                           ' → logprob: -6.088766574859619
    8. '                
' → logprob: -6.338766574859619
    9. '                ' → logprob: -6.338766574859619
    10. '                       ' → logprob: -7.088766574859619

Token 347: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04568437859416008
    2. ' if' → logprob: -3.295684337615967
    3. 'if' (adapté à ' if') → logprob: -5.170684337615967
    4. '                   ' → logprob: -7.295684337615967
    5. '                ' → logprob: -7.420684337615967
    6. '           ' → logprob: -8.170684814453125
    7. '
' → logprob: -8.670684814453125
    8. '                               ' → logprob: -9.795684814453125
    9. '                
' → logprob: -10.420684814453125
    10. '              ' → logprob: -10.920684814453125

Token 348: ' abs' (ID: 8443)
  Prédit: ' abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abs' → logprob: -0.06236984208226204
    2. 'abs' → logprob: -2.8123698234558105
    3. '(abs' → logprob: -7.9373698234558105
    4. ' (' → logprob: -10.187370300292969
    5. '_abs' → logprob: -12.937370300292969
    6. '(' → logprob: -13.812370300292969
    7. ' absorb' → logprob: -14.062370300292969
    8. '   ' → logprob: -14.312370300292969
    9. ' Abs' → logprob: -14.437370300292969
    10. 'Abs' → logprob: -14.687370300292969

Token 349: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -5.512236498361744e-07
    2. 'min' → logprob: -15.125000953674316
    3. '_' → logprob: -15.750000953674316
    4. '_max' → logprob: -17.5
    5. '_abs' → logprob: -18.25
    6. '_m' → logprob: -19.25
    7. '_sum' → logprob: -19.5
    8. '[' → logprob: -20.625
    9. '_MIN' → logprob: -20.625
    10. ' _' → logprob: -20.75

Token 350: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.011049704626202583
    2. 'is' → logprob: -4.511049747467041
    3. ' ' → logprob: -13.886049270629883
    4. '	is' → logprob: -14.261049270629883
    5. ' None' → logprob: -16.261049270629883
    6. '   ' → logprob: -16.636049270629883
    7. ' i' → logprob: -17.136049270629883
    8. ' >' → logprob: -18.136049270629883
    9. '  ' → logprob: -18.261049270629883
    10. '>' → logprob: -18.261049270629883

Token 351: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.3132619559764862
    2. 'None' → logprob: -1.3132619857788086
    3. '(None' → logprob: -16.563261032104492
    4. '=None' → logprob: -16.813261032104492
    5. '_None' → logprob: -17.063261032104492
    6. 'none' → logprob: -17.813261032104492
    7. '   ' → logprob: -18.313261032104492
    8. ' none' → logprob: -18.688261032104492
    9. ' ' → logprob: -18.938261032104492
    10. '0' → logprob: -18.938261032104492

Token 352: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.002952024107798934
    2. '                   ' → logprob: -6.6279520988464355
    3. 'or' → logprob: -6.7529520988464355
    4. '               ' → logprob: -7.7529520988464355
    5. '                ' → logprob: -11.502951622009277
    6. '	or' → logprob: -12.252951622009277
    7. '                  ' → logprob: -12.502951622009277
    8. '              ' → logprob: -12.877951622009277
    9. '                    ' → logprob: -13.377951622009277
    10. '                       ' → logprob: -13.377951622009277

Token 353: ' SUM' (ID: 52418)
  Prédit: ' SUM'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' SUM' → logprob: -0.3873508870601654
    2. 'SUM' → logprob: -1.1373509168624878
    3. '                   ' → logprob: -8.012351036071777
    4. '               ' → logprob: -9.137351036071777
    5. '_SUM' → logprob: -10.887351036071777
    6. ' abs' → logprob: -12.262351036071777
    7. '                ' → logprob: -12.387351036071777
    8. ' sum' → logprob: -13.012351036071777
    9. 'Sum' → logprob: -13.262351036071777
    10. 'abs' → logprob: -13.512351036071777

Token 354: '_SUM' (ID: 121371)
  Prédit: '_SUM'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_SUM' → logprob: -0.00017410075815860182
    2. '_MIN' → logprob: -8.750174522399902
    3. '_sum' → logprob: -11.250174522399902
    4. 'SUM' → logprob: -13.250174522399902
    5. '_S' → logprob: -15.125174522399902
    6. '_' → logprob: -16.375173568725586
    7. '_SUP' → logprob: -16.500173568725586
    8. '<' → logprob: -16.500173568725586
    9. '           ' → logprob: -16.500173568725586
    10. 'min' → logprob: -16.750173568725586

Token 355: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.31502145528793335
    2. ' <' → logprob: -1.3150215148925781
    3. '<S' → logprob: -6.440021514892578
    4. ' >' → logprob: -9.565021514892578
    5. '>' → logprob: -9.815021514892578
    6. '<int' → logprob: -11.315021514892578
    7. '<const' → logprob: -12.815021514892578
    8. '<class' → logprob: -12.940021514892578
    9. '<System' → logprob: -13.065021514892578
    10. '<ll' → logprob: -13.065021514892578

Token 356: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.018150178715586662
    2. ' abs' → logprob: -4.018150329589844
    3. '   ' → logprob: -16.393150329589844
    4. '_abs' → logprob: -17.393150329589844
    5. '(abs' → logprob: -17.518150329589844
    6. '           ' → logprob: -17.768150329589844
    7. '               ' → logprob: -18.143150329589844
    8. '.abs' → logprob: -19.143150329589844
    9. ' ' → logprob: -19.143150329589844
    10. '
' → logprob: -19.143150329589844

Token 357: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -6.704273118884885e-07
    2. 'min' → logprob: -14.750000953674316
    3. '_max' → logprob: -15.875000953674316
    4. 'abs' → logprob: -16.5
    5. '_abs' → logprob: -18.625
    6. 'Min' → logprob: -20.0
    7. '_MIN' → logprob: -20.375
    8. 's' → logprob: -21.5
    9. '```' → logprob: -21.5
    10. '   ' → logprob: -22.25

Token 358: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.20143817365169525
    2. ':' → logprob: -1.8264381885528564
    3. '                   ' → logprob: -4.326437950134277
    4. '               ' → logprob: -4.951437950134277
    5. '                       ' → logprob: -7.326437950134277
    6. '           ' → logprob: -8.576437950134277
    7. '):
' → logprob: -8.951437950134277
    8. '                           ' → logprob: -9.826437950134277
    9. ' :
' → logprob: -10.201437950134277
    10. ':
' → logprob: -10.826437950134277

Token 359: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00035357745946384966
    2. '                       ' → logprob: -8.125353813171387
    3. '               ' → logprob: -10.875353813171387
    4. 'abs' → logprob: -11.625353813171387
    5. ' abs' → logprob: -11.750353813171387
    6. '                  ' → logprob: -11.875353813171387
    7. '                    
' → logprob: -12.750353813171387
    8. '                    ' → logprob: -12.750353813171387
    9. '                           ' → logprob: -13.250353813171387
    10. '                               ' → logprob: -13.500353813171387

Token 360: ' abs' (ID: 8443)
  Prédit: ' abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abs' → logprob: -0.6281833648681641
    2. 'abs' (adapté à ' abs') → logprob: -0.8781833648681641
    3. '                   ' → logprob: -3.503183364868164
    4. '                       ' → logprob: -3.878183364868164
    5. '                    ' → logprob: -9.628183364868164
    6. '               ' → logprob: -10.753183364868164
    7. '                               ' → logprob: -12.253183364868164
    8. '                  ' → logprob: -12.753183364868164
    9. '   ' → logprob: -12.878183364868164
    10. '                           ' → logprob: -13.003183364868164

Token 361: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -1.9361264946837764e-07
    2. '_max' → logprob: -16.375
    3. 'min' → logprob: -17.375
    4. '_MIN' → logprob: -21.875
    5. '_m' → logprob: -22.625
    6. '_' → logprob: -22.75
    7. '```' → logprob: -22.875
    8. 'Min' → logprob: -23.125
    9. '_Min' → logprob: -23.375
    10. '_mod' → logprob: -23.625

Token 362: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020678490400314
    2. '=' → logprob: -2.3502068519592285
    3. ' =
' → logprob: -17.60020637512207
    4. '＝' → logprob: -17.60020637512207
    5. ' ' → logprob: -17.72520637512207
    6. ',' → logprob: -18.35020637512207
    7. '   ' → logprob: -18.85020637512207
    8. ' =
' → logprob: -19.10020637512207
    9. '=
' → logprob: -19.22520637512207
    10. '=S' → logprob: -19.22520637512207

Token 363: ' SUM' (ID: 52418)
  Prédit: 'SUM'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SUM' → logprob: -0.061967913061380386
    2. ' SUM' → logprob: -2.8119678497314453
    3. '   ' → logprob: -15.561967849731445
    4. '_SUM' → logprob: -16.811967849731445
    5. 'SU' → logprob: -18.186967849731445
    6. ' ' → logprob: -18.311967849731445
    7. ' sum' → logprob: -18.436967849731445
    8. 'SUB' → logprob: -19.186967849731445
    9. 'SUN' → logprob: -19.186967849731445
    10. '    ' → logprob: -19.436967849731445

Token 364: '_SUM' (ID: 121371)
  Prédit: '_SUM'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_SUM' → logprob: -3.607391408877447e-05
    2. 'SUM' → logprob: -10.250036239624023
    3. '_MIN' → logprob: -15.000036239624023
    4. '_sum' → logprob: -15.375036239624023
    5. ' SUM' → logprob: -18.125036239624023
    6. 'sum' → logprob: -18.625036239624023
    7. '_SUP' → logprob: -18.750036239624023
    8. '\' → logprob: -19.375036239624023
    9. '_S' → logprob: -19.625036239624023
    10. '   ' → logprob: -19.625036239624023

Token 365: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1703099012374878
    2. '
' → logprob: -2.0453100204467773
    3. 'print' → logprob: -3.7953100204467773
    4. '    
' → logprob: -5.795310020446777
    5. '<|end|>' → logprob: -7.295310020446777
    6. '                    
' → logprob: -8.170310020446777
    7. '                   ' → logprob: -8.420310020446777
    8. '                        
' → logprob: -9.420310020446777
    9. '  
' → logprob: -9.670310020446777
    10. ' print' → logprob: -9.920310020446777

Token 366: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10413428395986557
    2. '
' → logprob: -2.8541343212127686
    3. 'print' → logprob: -3.3541343212127686
    4. '    
' → logprob: -5.9791340827941895
    5. '                   ' → logprob: -6.7291340827941895
    6. 'return' → logprob: -7.2291340827941895
    7. '                    
' → logprob: -7.3541340827941895
    8. '<|end|>' → logprob: -8.604134559631348
    9. ')' → logprob: -8.979134559631348
    10. '       ' → logprob: -9.104134559631348

Token 367: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.35633111000061035
    2. '   ' → logprob: -1.2313311100006104
    3. 'return' → logprob: -5.106330871582031
    4. '
' → logprob: -7.106330871582031
    5. ')' → logprob: -8.106330871582031
    6. ' print' → logprob: -8.106330871582031
    7. '    
' → logprob: -8.481330871582031
    8. ' return' → logprob: -9.481330871582031
    9. '<|end|>' → logprob: -10.731330871582031
    10. '	print' → logprob: -11.606330871582031

Token 368: '(int' (ID: 2742)
  Prédit: '(abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(abs' → logprob: -1.7954958821064793e-05
    2. '(' → logprob: -11.000018119812012
    3. '(ab' → logprob: -13.875018119812012
    4. 'abs' → logprob: -15.250018119812012
    5. ' (' → logprob: -17.250017166137695
    6. '(ans' → logprob: -17.875017166137695
    7. '(
' → logprob: -18.000017166137695
    8. '()' → logprob: -19.000017166137695
    9. '(f' → logprob: -19.500017166137695
    10. '(ins' → logprob: -19.750017166137695

Token 369: '(abs' (ID: 71957)
  Prédit: '(abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(abs' → logprob: -1.0206720617134124e-05
    2. 'abs' → logprob: -12.00001049041748
    3. '(' → logprob: -12.62501049041748
    4. ' abs' → logprob: -14.62501049041748
    5. '(ab' → logprob: -15.75001049041748
    6. ' (' → logprob: -16.000009536743164
    7. '.abs' → logprob: -18.375009536743164
    8. '(round' → logprob: -19.000009536743164
    9. ')' → logprob: -19.375009536743164
    10. ')(' → logprob: -19.375009536743164

Token 370: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -1.9361264946837764e-07
    2. 'min' → logprob: -16.25
    3. '_max' → logprob: -18.375
    4. '_MIN' → logprob: -20.25
    5. 'Min' → logprob: -20.625
    6. '_abs' → logprob: -20.75
    7. '-min' → logprob: -21.125
    8. 'abs' → logprob: -22.125
    9. '_Min' → logprob: -22.5
    10. '_sum' → logprob: -22.625

Token 371: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.787507714354433e-05
    2. '())' → logprob: -10.12504768371582
    3. '))' → logprob: -12.37504768371582
    4. '()' → logprob: -13.50004768371582
    5. ' )' → logprob: -13.62504768371582
    6. ')
' → logprob: -14.50004768371582
    7. ')}' → logprob: -15.62504768371582
    8. ')`' → logprob: -16.25004768371582
    9. '})' → logprob: -16.62504768371582
    10. ')}}' → logprob: -17.12504768371582

Token 372: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 373: ' '__' (ID: 28278)
  Prédit: ' __'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.048589304089546204
    2. '__' → logprob: -3.0485892295837402
    3. 'name' → logprob: -14.048589706420898
    4. '_name' → logprob: -14.173589706420898
    5. '___' → logprob: -15.923589706420898
    6. ' ' → logprob: -16.5485897064209
    7. '_' → logprob: -16.9235897064209
    8. ' ' → logprob: -17.2985897064209
    9. '.__' → logprob: -17.5485897064209
    10. '  ' → logprob: -17.5485897064209

Token 374: 'main' (ID: 7731)
  Prédit: 'name'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'name' → logprob: -0.006715370807796717
    2. 'main' → logprob: -5.006715297698975
    3. 'na' → logprob: -17.881715774536133
    4. '__' → logprob: -18.381715774536133
    5. 'nam' → logprob: -19.256715774536133
    6. ' name' → logprob: -19.381715774536133
    7. '_main' → logprob: -19.506715774536133
    8. ''name' → logprob: -20.631715774536133
    9. '==' → logprob: -20.756715774536133
    10. ' main' → logprob: -20.756715774536133

Token 375: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.700132997939363e-05
    2. ''' → logprob: -11.625017166137695
    3. '__':
' → logprob: -12.375017166137695
    4. '_'' → logprob: -12.750017166137695
    5. '=='' → logprob: -14.250017166137695
    6. '___' → logprob: -16.125017166137695
    7. '_' → logprob: -17.500017166137695
    8. '____' → logprob: -17.750017166137695
    9. '__('' → logprob: -18.375017166137695
    10. ' __' → logprob: -19.125017166137695

Token 376: ''' (ID: 6)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.001042574760504067
    2. ''' → logprob: -7.001042366027832
    3. '_'' → logprob: -9.626042366027832
    4. '=='' → logprob: -9.876042366027832
    5. '_' → logprob: -11.751042366027832
    6. '__':
' → logprob: -12.251042366027832
    7. '___' → logprob: -14.126042366027832
    8. ' =='' → logprob: -16.50104331970215
    9. '____' → logprob: -16.87604331970215
    10. '__('' → logprob: -17.12604331970215

Token 377: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6934787631034851
    2. ' ==' → logprob: -0.6934787631034851
    3. '__' → logprob: -8.81847858428955
    4. '=' → logprob: -9.31847858428955
    5. '=='' → logprob: -10.19347858428955
    6. '=="' → logprob: -10.56847858428955
    7. ' ' → logprob: -11.31847858428955
    8. '==
' → logprob: -11.94347858428955
    9. '  ' → logprob: -12.44347858428955
    10. ' =' → logprob: -13.31847858428955

Token 378: ' __' (ID: 2516)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.04330277815461159
    2. '"' → logprob: -3.1683027744293213
    3. ' '__' → logprob: -8.543302536010742
    4. '__' → logprob: -10.168302536010742
    5. ' '' → logprob: -10.293302536010742
    6. ' "__' → logprob: -10.668302536010742
    7. ' ' → logprob: -11.918302536010742
    8. ' __' → logprob: -12.918302536010742
    9. ' "' → logprob: -13.418302536010742
    10. '   ' → logprob: -14.543302536010742

Token 379: 'name' (ID: 897)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.056388065218925476
    2. 'name' → logprob: -3.4313881397247314
    3. ''' → logprob: -4.556387901306152
    4. ''m' → logprob: -5.056387901306152
    5. '"' → logprob: -6.431387901306152
    6. ''name' → logprob: -6.431387901306152
    7. 'm' → logprob: -7.681387901306152
    8. ''s' → logprob: -8.306387901306152
    9. ' ==' → logprob: -8.306387901306152
    10. ' ' → logprob: -8.431387901306152

Token 380: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.16377931833267212
    2. '__:' → logprob: -1.9137792587280273
    3. ':' → logprob: -5.663779258728027
    4. '_' → logprob: -10.163779258728027
    5. '__':
' → logprob: -10.913779258728027
    6. ':
' → logprob: -11.538779258728027
    7. '__":
' → logprob: -12.163779258728027
    8. '__
' → logprob: -12.538779258728027
    9. '__[' → logprob: -14.413779258728027
    10. '__,' → logprob: -14.413779258728027

Token 381: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00010115911572938785
    2. ':
' → logprob: -9.750101089477539
    3. '__:' → logprob: -10.375101089477539
    4. ' :' → logprob: -12.500101089477539
    5. '__' → logprob: -12.625101089477539
    6. '):' → logprob: -13.250101089477539
    7. ':**' → logprob: -13.875101089477539
    8. '():' → logprob: -14.750101089477539
    9. ':

' → logprob: -15.000101089477539
    10. '>:' → logprob: -15.625101089477539

Token 382: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003794135060161352
    2. '	run' → logprob: -5.628794193267822
    3. ' run' → logprob: -9.503793716430664
    4. ':
' → logprob: -10.628793716430664
    5. '(run' → logprob: -10.753793716430664
    6. '<|end|>' → logprob: -11.128793716430664
    7. '    
' → logprob: -11.253793716430664
    8. '.run' → logprob: -11.878793716430664
    9. 'run' → logprob: -11.878793716430664
    10. ':' → logprob: -12.128793716430664

Token 383: ' run' (ID: 2461)
  Prédit: 'run'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'run' (adapté à ' run') → logprob: -0.0007657911046408117
    2. '   ' → logprob: -7.250765800476074
    3. ' run' → logprob: -9.875765800476074
    4. '	run' → logprob: -12.375765800476074
    5. '  ' → logprob: -16.625764846801758
    6. '(run' → logprob: -17.250764846801758
    7. '.run' → logprob: -17.375764846801758
    8. '    
' → logprob: -17.750764846801758
    9. '_run' → logprob: -18.125764846801758
    10. ' ' → logprob: -18.625764846801758

Token 384: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00037681119283661246
    2. '()' → logprob: -8.00037670135498
    3. '__()
' → logprob: -11.25037670135498
    4. '__()

' → logprob: -11.75037670135498
    5. '___' → logprob: -12.00037670135498
    6. '__('' → logprob: -12.25037670135498
    7. '__.__' → logprob: -12.50037670135498
    8. '____' → logprob: -12.62537670135498
    9. '__*/' → logprob: -14.00037670135498
    10. '__("' → logprob: -14.87537670135498

Token 385: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 383
Tokens correctement prédits (1ère position, stricte): 184
Tokens correctement prédits (1ère position, avec adaptation): 189
Tokens correctement prédits (top 10): 313
Précision stricte (1ère position): 48.04%
Précision adaptée (1ère position): 49.35%
Précision (top 10): 81.72%
================================================================================
