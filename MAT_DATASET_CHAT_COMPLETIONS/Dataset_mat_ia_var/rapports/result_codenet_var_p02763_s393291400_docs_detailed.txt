================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:24:15
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def initialize(N):
    """
    Initialise le segment tree utilisé pour effectuer les opérations efficacement sur la chaîne de caractères.
    
    Args:
        N (int): La longueur de la chaîne initiale.
        
    Returns:
        tuple: 
            - Un tableau SEG initialisé de taille (2 * puissance de 2 supérieure ou égale à N) - 1, rempli de zéros.
            - La taille d (puissance de 2) qui couvre N.
    """
    i = 1
    # Trouve la puissance de 2 supérieure ou égale à N
    while i < N:
        i *= 2
    # SEG a une taille de 2*i-1 pour représenter complètement le segment tree
    return [0] * (2 * i - 1), i

def update(i, x):
    """
    Met à jour la lettre à la position i de la chaîne dans l'arbre segmentaire.
    
    Args:
        i (int): L'indice (0-based) du caractère à modifier.
        x (str): Le nouveau caractère à placer à la position i.
        
    Effet de bord:
        Modifie SEG pour refléter le changement de caractère.
    """
    # Met à jour la feuille correspondante dans l'arbre segmentaire
    global SEG, d
    i += d - 1  # Passage à l'indice de la feuille dans SEG
    bit = ord(x) - 97  # Obtient la position de la lettre (0 pour 'a', 1 pour 'b', etc.)
    SEG[i] = 1 << bit  # Mets à jour avec le bit correspondant à la lettre
    # Met à jour les noeuds ancêtres
    while i > 0:
        i = (i - 1) // 2
        SEG[i] = SEG[2 * i + 1] | SEG[2 * i + 2]  # Union des deux enfants

def find(a, b, k, l, r):
    """
    Effectue une requête pour obtenir l'union des bits dans l'intervalle [a, b) dans la chaîne,
    ce qui permet de connaitre les lettres distinctes dans cette plage.
    
    Args:
        a (int): Début de l'intervalle (inclus).
        b (int): Fin de l'intervalle (exclu).
        k (int): Numéro du noeud courant dans l'arbre segmentaire.
        l (int): Début du segment couvert par ce noeud.
        r (int): Fin du segment couvert par ce noeud.
        
    Returns:
        int: Un entier dont les bits à 1 représentent les lettres présentes dans l'intervalle [a, b).
    """
    # Aucun recouvrement
    if r <= a or b <= l:
        return 0
    # Entièrement couvert
    if a <= l and r <= b:
        return SEG[k]
    else:
        # Recouvre partiellement, doit interroger les enfants
        c1 = find(a, b, 2 * k + 1, l, (l + r) // 2)
        c2 = find(a, b, 2 * k + 2, (l + r) // 2, r)
        return c1 | c2

# Lecture des entrées
N = int(input())           # Longueur de la chaîne
S = input()                # La chaîne de caractères
Q = int(input())           # Nombre de requêtes

# Initialisation du segment tree
SEG, d = initialize(N)
for i in range(N):
    update(i, S[i])        # Initialise le segment tree avec les caractères de la chaîne

# Traitement des requêtes
for _ in range(Q):
    com, s, t = map(str, input().split())
    if com == '1':
        # Modification d'un caractère
        update(int(s) - 1, t)
    else:
        # Demande du nombre de lettres distinctes dans l'intervalle [int(s)-1, int(t))
        cnt = 0
        bit = find(int(s) - 1, int(t), 0, 0, d)
        # Compte le nombre de bits à 1 dans le résultat (nombre de lettres distinctes)
        while bit > 0:
            if bit & 1:
                cnt += 1
            bit //= 2
        print(cnt)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' initialize' (ID: 18400)
  → Token d'amorce (pas de prédiction)

Token 2: '(N' (ID: 10564)
  → Token d'amorce (pas de prédiction)

Token 3: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.26891833543777466
    2. ')' → logprob: -1.5189182758331299
    3. ',' → logprob: -4.143918514251709
    4. ':' → logprob: -7.893918514251709
    5. '=' → logprob: -8.76891803741455
    6. '```' → logprob: -9.01891803741455
    7. '_' → logprob: -9.64391803741455
    8. '[' → logprob: -10.01891803741455
    9. '*' → logprob: -10.26891803741455
    10. '):
' → logprob: -10.51891803741455

Token 4: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6955414414405823
    2. '```' → logprob: -0.9455414414405823
    3. ':' → logprob: -3.1955413818359375
    4. '\n' → logprob: -3.3205413818359375
    5. '    
' → logprob: -4.6955413818359375
    6. '\' → logprob: -4.6955413818359375
    7. '``' → logprob: -4.6955413818359375
    8. '  
' → logprob: -6.1955413818359375
    9. '   
' → logprob: -7.0705413818359375
    10. ':
' → logprob: -7.0705413818359375

Token 5: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0113370418548584
    2. 'return' → logprob: -1.1363370418548584
    3. 'result' → logprob: -2.0113370418548584
    4. ' return' → logprob: -3.1363370418548584
    5. '```' → logprob: -3.5113370418548584
    6. '`' → logprob: -3.6363370418548584
    7. 'data' → logprob: -4.5113372802734375
    8. ' ' → logprob: -4.7613372802734375
    9. 'r' → logprob: -5.2613372802734375
    10. ' result' → logprob: -5.3863372802734375

Token 6: '   ' (ID: 271)
  Prédit: 'Initialize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Initialize' → logprob: -0.818172037601471
    2. 'Initial' → logprob: -1.0681719779968262
    3. '"""' → logprob: -2.068171977996826
    4. '   ' → logprob: -2.818171977996826
    5. ' Initialize' → logprob: -5.193171977996826
    6. ' Initializes' → logprob: -5.443171977996826
    7. 'Set' → logprob: -5.943171977996826
    8. ' """' → logprob: -6.068171977996826
    9. ' initial' → logprob: -6.318171977996826
    10. ' Initial' → logprob: -6.693171977996826

Token 7: ' Initialise' (ID: 179601)
  Prédit: 'Initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Initial' → logprob: -0.27172499895095825
    2. 'Initialize' → logprob: -1.5217249393463135
    3. 'Set' → logprob: -4.396725177764893
    4. 'Create' → logprob: -6.396725177764893
    5. '"""' → logprob: -6.646725177764893
    6. '   ' → logprob: -7.021725177764893
    7. 'Generate' → logprob: -7.271725177764893
    8. 'Sets' → logprob: -7.771725177764893
    9. '```' → logprob: -7.771725177764893
    10. 'Creates' → logprob: -7.896725177764893

Token 8: ' le' (ID: 505)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2728791236877441
    2. '(N' → logprob: -1.5228791236877441
    3. '   ' → logprob: -2.022879123687744
    4. '(n' → logprob: -2.522879123687744
    5. '_' → logprob: -2.897879123687744
    6. '(' → logprob: -3.022879123687744
    7. 'def' → logprob: -3.272879123687744
    8. ' the' → logprob: -3.272879123687744
    9. ' )' → logprob: -4.272879123687744
    10. 'the' → logprob: -4.272879123687744

Token 9: ' segment' (ID: 14806)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.20740368962287903
    2. 'r' → logprob: -1.7074036598205566
    3. 'n' → logprob: -6.707403659820557
    4. 't' → logprob: -7.207403659820557
    5. '   ' → logprob: -7.332403659820557
    6. ' s' → logprob: -7.457403659820557
    7. 'l' → logprob: -7.707403659820557
    8. ' ' → logprob: -7.707403659820557
    9. '_' → logprob: -7.832403659820557
    10. '  ' → logprob: -8.582404136657715

Token 10: ' tree' (ID: 8165)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.11296158283948898
    2. ' de' → logprob: -2.612961530685425
    3. ' ' → logprob: -3.987961530685425
    4. '   ' → logprob: -4.862961769104004
    5. ' _' → logprob: -6.112961769104004
    6. 's' → logprob: -6.862961769104004
    7. ' d' → logprob: -7.487961769104004
    8. '  ' → logprob: -7.737961769104004
    9. 'r' → logprob: -8.112961769104004
    10. '```' → logprob: -8.237961769104004

Token 11: ' utilisé' (ID: 53138)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0702733993530273
    2. '   ' → logprob: -1.5702733993530273
    3. ''' → logprob: -2.5702733993530273
    4. '\n' → logprob: -2.5702733993530273
    5. '```' → logprob: -2.5702733993530273
    6. '(' → logprob: -3.1952733993530273
    7. '    ' → logprob: -3.9452733993530273
    8. ')' → logprob: -4.070273399353027
    9. '\' → logprob: -4.070273399353027
    10. '`' → logprob: -4.195273399353027

Token 12: ' pour' (ID: 1930)
  Prédit: ' pour'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pour' → logprob: -0.13885989785194397
    2. ' for' → logprob: -2.263859987258911
    3. '   ' → logprob: -4.263859748840332
    4. 'pour' → logprob: -4.888859748840332
    5. ' ' → logprob: -6.638859748840332
    6. '.' → logprob: -7.763859748840332
    7. ' to' → logprob: -8.138859748840332
    8. '    ' → logprob: -8.388859748840332
    9. ' à' → logprob: -8.388859748840332
    10. ')' → logprob: -8.513859748840332

Token 13: ' effectuer' (ID: 98625)
  Prédit: ' stock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' stock' → logprob: -1.3570748567581177
    2. ' la' → logprob: -1.7320748567581177
    3. ' gérer' → logprob: -1.7320748567581177
    4. 'la' → logprob: -2.107074737548828
    5. ' le' → logprob: -2.357074737548828
    6. 'l' → logprob: -3.357074737548828
    7. 'le' → logprob: -3.857074737548828
    8. 'stock' → logprob: -4.232074737548828
    9. 'les' → logprob: -4.232074737548828
    10. ' range' → logprob: -4.357074737548828

Token 14: ' les' (ID: 1341)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.14571699500083923
    2. ' la' → logprob: -3.145716905593872
    3. ' les' → logprob: -3.270716905593872
    4. ' le' → logprob: -4.145717144012451
    5. ' l' → logprob: -4.270717144012451
    6. ' ' → logprob: -4.395717144012451
    7. 's' → logprob: -5.645717144012451
    8. 'des' → logprob: -5.770717144012451
    9. '```' → logprob: -6.270717144012451
    10. '   ' → logprob: -7.020717144012451

Token 15: ' opérations' (ID: 102793)
  Prédit: ' opérations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' opérations' → logprob: -0.5806972980499268
    2. ' mises' → logprob: -1.0806972980499268
    3. ' ' → logprob: -4.080697059631348
    4. ' updates' → logprob: -4.080697059631348
    5. ' requ' → logprob: -4.580697059631348
    6. '   ' → logprob: -4.580697059631348
    7. ' op' → logprob: -4.580697059631348
    8. ' operations' → logprob: -4.955697059631348
    9. ' calcul' → logprob: -5.080697059631348
    10. ' mise' → logprob: -5.830697059631348

Token 16: ' efficacement' (ID: 155449)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.15280693769454956
    2. ' ' → logprob: -3.1528069972991943
    3. '   ' → logprob: -3.4028069972991943
    4. ' sur' → logprob: -4.027806758880615
    5. 'de' → logprob: -4.277806758880615
    6. 's' → logprob: -4.652806758880615
    7. '```' → logprob: -5.152806758880615
    8. ' d' → logprob: -5.527806758880615
    9. '.' → logprob: -5.777806758880615
    10. '`' → logprob: -6.652806758880615

Token 17: ' sur' (ID: 1512)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3040434420108795
    2. '\n' → logprob: -2.1790435314178467
    3. '
' → logprob: -2.9290435314178467
    4. '```' → logprob: -3.5540435314178467
    5. '  
' → logprob: -4.054043292999268
    6. ' ' → logprob: -4.304043292999268
    7. ')' → logprob: -4.804043292999268
    8. '.' → logprob: -5.054043292999268
    9. '    
' → logprob: -5.804043292999268
    10. '"""' → logprob: -5.929043292999268

Token 18: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.1159999370574951
    2. ' le' → logprob: -1.2409999370574951
    3. ' l' → logprob: -2.115999937057495
    4. ' les' → logprob: -2.115999937057495
    5. 'l' → logprob: -2.865999937057495
    6. 'le' → logprob: -3.865999937057495
    7. 'la' → logprob: -4.366000175476074
    8. ' un' → logprob: -4.991000175476074
    9. ' ' → logprob: -4.991000175476074
    10. ' ' → logprob: -5.116000175476074

Token 19: ' chaîne' (ID: 89288)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.3496372699737549
    2. ' tableau' → logprob: -1.3496372699737549
    3. '```' → logprob: -1.5996372699737549
    4. ' tableaux' → logprob: -2.474637269973755
    5. '   ' → logprob: -2.724637269973755
    6. 's' → logprob: -3.474637269973755
    7. ' données' → logprob: -4.474637031555176
    8. 'd' → logprob: -4.724637031555176
    9. ' ' → logprob: -4.974637031555176
    10. '`' → logprob: -5.099637031555176

Token 20: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34482303261756897
    2. ' de' → logprob: -2.094823122024536
    3. 'e' → logprob: -2.594823122024536
    4. 'de' → logprob: -4.594822883605957
    5. ' d' → logprob: -4.844822883605957
    6. ')' → logprob: -4.844822883605957
    7. '```' → logprob: -4.844822883605957
    8. '\' → logprob: -4.969822883605957
    9. '`' → logprob: -5.094822883605957
    10. '.' → logprob: -5.094822883605957

Token 21: ' caractères' (ID: 183106)
  Prédit: ' caractères'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' caractères' → logprob: -0.3037802577018738
    2. 'car' → logprob: -2.4287803173065186
    3. ' s' → logprob: -2.9287803173065186
    4. ' la' → logprob: -3.8037803173065186
    5. 's' → logprob: -3.8037803173065186
    6. ' segments' → logprob: -4.0537800788879395
    7. ' segment' → logprob: -4.4287800788879395
    8. ' caracteres' → logprob: -4.9287800788879395
    9. ' l' → logprob: -5.4287800788879395
    10. ' S' → logprob: -5.5537800788879395

Token 22: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0316324420273304
    2. '
' → logprob: -4.906632423400879
    3. ')' → logprob: -5.156632423400879
    4. '```' → logprob: -5.531632423400879
    5. '\n' → logprob: -5.656632423400879
    6. ' ' → logprob: -6.156632423400879
    7. '.' → logprob: -6.531632423400879
    8. ')
' → logprob: -6.656632423400879
    9. '    
' → logprob: -7.156632423400879
    10. 'n' → logprob: -7.156632423400879

Token 23: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01420135423541069
    2. '```' → logprob: -5.3892011642456055
    3. '    
' → logprob: -5.8892011642456055
    4. 'n' → logprob: -6.0142011642456055
    5. '\n' → logprob: -6.5142011642456055
    6. ')' → logprob: -7.0142011642456055
    7. '
' → logprob: -7.3892011642456055
    8. ' 
' → logprob: -8.264201164245605
    9. '\' → logprob: -8.514201164245605
    10. '  
' → logprob: -9.014201164245605

Token 24: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0071370708756148815
    2. '```' → logprob: -6.507137298583984
    3. ' segment' → logprob: -6.882137298583984
    4. ' tree' → logprob: -7.132137298583984
    5. 'n' → logprob: -7.132137298583984
    6. 'segment' → logprob: -7.507137298583984
    7. '    
' → logprob: -8.007137298583984
    8. 'tree' → logprob: -8.257137298583984
    9. ' global' → logprob: -8.382137298583984
    10. 'global' → logprob: -8.382137298583984

Token 25: ' Args' (ID: 39185)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.4907052516937256
    2. 'global' → logprob: -2.2407052516937256
    3. ' tree' → logprob: -2.3657052516937256
    4. 'segment' → logprob: -2.3657052516937256
    5. 'size' → logprob: -3.6157052516937256
    6. '   ' → logprob: -3.6157052516937256
    7. ' global' → logprob: -4.615705490112305
    8. 's' → logprob: -4.865705490112305
    9. 'seg' → logprob: -4.990705490112305
    10. ' segment' → logprob: -5.365705490112305

Token 26: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1334941387176514
    2. '):' → logprob: -1.3834941387176514
    3. ':' → logprob: -1.7584941387176514
    4. ')' → logprob: -2.5084941387176514
    5. ',' → logprob: -2.6334941387176514
    6. '```' → logprob: -3.2584941387176514
    7. ' :' → logprob: -3.3834941387176514
    8. '(N' → logprob: -4.5084943771362305
    9. '[N' → logprob: -5.8834943771362305
    10. '):
' → logprob: -6.0084943771362305

Token 27: '       ' (ID: 309)
  Prédit: ' N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.8905934691429138
    2. 'n' → logprob: -1.3905935287475586
    3. '   ' → logprob: -1.6405935287475586
    4. 'N' → logprob: -2.8905935287475586
    5. ' n' → logprob: -3.1405935287475586
    6. '    ' → logprob: -4.015593528747559
    7. ')' → logprob: -4.765593528747559
    8. ' )' → logprob: -4.890593528747559
    9. ' ' → logprob: -5.390593528747559
    10. '```' → logprob: -5.390593528747559

Token 28: ' N' (ID: 478)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.9286925792694092
    2. ' self' → logprob: -1.6786925792694092
    3. 'n' → logprob: -1.9286925792694092
    4. 'N' (adapté à ' N') → logprob: -2.303692579269409
    5. ' N' → logprob: -2.428692579269409
    6. '   ' → logprob: -3.678692579269409
    7. ' n' → logprob: -3.678692579269409
    8. 'size' → logprob: -4.303692817687988
    9. ' size' → logprob: -4.928692817687988
    10. ' la' → logprob: -6.303692817687988

Token 29: ' (' (ID: 350)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004069970920681953
    2. ' ):' → logprob: -6.379069805145264
    3. ':' → logprob: -7.004069805145264
    4. ')' → logprob: -7.004069805145264
    5. '):
' → logprob: -8.129070281982422
    6. ' :' → logprob: -9.129070281982422
    7. ':int' → logprob: -10.129070281982422
    8. '   ' → logprob: -10.629070281982422
    9. ',' → logprob: -10.879070281982422
    10. 'int' → logprob: -11.254070281982422

Token 30: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.08960485458374023
    2. ' int' → logprob: -2.4646048545837402
    3. ')' → logprob: -7.71460485458374
    4. '   ' → logprob: -9.964605331420898
    5. ' ' → logprob: -10.339605331420898
    6. '):' → logprob: -10.714605331420898
    7. 'l' → logprob: -11.089605331420898
    8. ' )' → logprob: -11.089605331420898
    9. '  ' → logprob: -11.214605331420898
    10. ' ' → logprob: -11.589605331420898

Token 31: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.11315982788801193
    2. ')' → logprob: -2.2381598949432373
    3. ' ):' → logprob: -8.113160133361816
    4. '):
' → logprob: -11.238160133361816
    5. ' )' → logprob: -11.488160133361816
    6. ':' → logprob: -12.113160133361816
    7. '```' → logprob: -13.113160133361816
    8. '):

' → logprob: -13.238160133361816
    9. ' ' → logprob: -13.988160133361816
    10. ',' → logprob: -13.988160133361816

Token 32: ' La' (ID: 3038)
  Prédit: ' Le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Le' → logprob: -0.7530909180641174
    2. ' la' → logprob: -1.5030908584594727
    3. ' La' → logprob: -2.0030908584594727
    4. ' le' → logprob: -2.2530908584594727
    5. ' The' → logprob: -3.6280908584594727
    6. 'Le' → logprob: -4.503090858459473
    7. 'La' → logprob: -4.878090858459473
    8. ' the' → logprob: -5.253090858459473
    9. '   ' → logprob: -5.628090858459473
    10. ')' → logprob: -6.003090858459473

Token 33: ' longueur' (ID: 104613)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5341339707374573
    2. ' longueur' → logprob: -1.9091339111328125
    3. ' taille' → logprob: -2.0341339111328125
    4. 'tail' → logprob: -2.2841339111328125
    5. 'long' → logprob: -4.6591339111328125
    6. ' ' → logprob: -5.4091339111328125
    7. ' long' → logprob: -5.7841339111328125
    8. '   ' → logprob: -6.0341339111328125
    9. ' nombre' → logprob: -6.1591339111328125
    10. '  ' → logprob: -6.2841339111328125

Token 34: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.1676996499300003
    2. ' ' → logprob: -2.6676995754241943
    3. ')' → logprob: -3.1676995754241943
    4. ' )' → logprob: -3.9176995754241943
    5. ' du' → logprob: -4.667699813842773
    6. ' totale' → logprob: -5.542699813842773
    7. ' total' → logprob: -5.792699813842773
    8. ' des' → logprob: -6.917699813842773
    9. ' d' → logprob: -7.042699813842773
    10. '_' → logprob: -7.042699813842773

Token 35: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.30203521251678467
    2. 'la' → logprob: -1.4270352125167847
    3. 'l' → logprob: -4.177035331726074
    4. ' l' → logprob: -5.802035331726074
    5. ' ' → logprob: -6.927035331726074
    6. 's' → logprob: -7.927035331726074
    7. ' ' → logprob: -8.052035331726074
    8. ' the' → logprob: -9.052035331726074
    9. 'a' → logprob: -9.177035331726074
    10. 'chaine' → logprob: -9.552035331726074

Token 36: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.10349661111831665
    2. 'chaine' → logprob: -3.103496551513672
    3. 'cha' → logprob: -3.228496551513672
    4. 's' → logprob: -5.228496551513672
    5. ' chaine' → logprob: -5.978496551513672
    6. ' ' → logprob: -6.603496551513672
    7. 'c' → logprob: -7.103496551513672
    8. 'string' → logprob: -7.353496551513672
    9. ' cha' → logprob: -7.478496551513672
    10. 'sé' → logprob: -7.728496551513672

Token 37: ' initial' (ID: 4871)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8128311038017273
    2. ')' → logprob: -1.062831163406372
    3. ' )' → logprob: -2.437831163406372
    4. ')
' → logprob: -3.062831163406372
    5. '):' → logprob: -3.437831163406372
    6. '):
' → logprob: -3.937831163406372
    7. ' )
' → logprob: -5.187830924987793
    8. ' de' → logprob: -5.562830924987793
    9. '```' → logprob: -6.062830924987793
    10. '    
' → logprob: -6.312830924987793

Token 38: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.00039766079862602055
    2. '_' → logprob: -9.000397682189941
    3. ' e' → logprob: -9.000397682189941
    4. ' ' → logprob: -9.625397682189941
    5. ')' → logprob: -9.750397682189941
    6. ''e' → logprob: -12.375397682189941
    7. '   ' → logprob: -12.625397682189941
    8. 'a' → logprob: -12.750397682189941
    9. ''' → logprob: -12.750397682189941
    10. '_e' → logprob: -12.875397682189941

Token 39: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004356298595666885
    2. '):' → logprob: -5.504356384277344
    3. ')
' → logprob: -9.004356384277344
    4. '   ' → logprob: -9.629356384277344
    5. '```' → logprob: -10.629356384277344
    6. '):
' → logprob: -10.754356384277344
    7. ' )' → logprob: -11.379356384277344
    8. '"""' → logprob: -11.754356384277344
    9. ',' → logprob: -12.004356384277344
    10. 'n' → logprob: -12.754356384277344

Token 40: '        
' (ID: 3564)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.271802693605423
    2. ')' → logprob: -2.0218026638031006
    3. '"""' → logprob: -3.1468026638031006
    4. '"""
' → logprob: -4.27180290222168
    5. '```' → logprob: -4.39680290222168
    6. '    
' → logprob: -4.64680290222168
    7. '\n' → logprob: -4.77180290222168
    8. ')
' → logprob: -5.02180290222168
    9. '""' → logprob: -6.14680290222168
    10. '"' → logprob: -6.27180290222168

Token 41: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026567215099930763
    2. ')' → logprob: -3.776567220687866
    3. '"""' → logprob: -6.526566982269287
    4. '    
' → logprob: -7.526566982269287
    5. '```' → logprob: -8.151567459106445
    6. '"""
' → logprob: -8.526567459106445
    7. '
' → logprob: -9.026567459106445
    8. ')
' → logprob: -9.401567459106445
    9. '    ' → logprob: -9.526567459106445
    10. '):' → logprob: -9.651567459106445

Token 42: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2478179931640625
    2. 'segment' → logprob: -3.1228179931640625
    3. ' tree' → logprob: -3.3728179931640625
    4. 'tree' → logprob: -3.3728179931640625
    5. 'n' → logprob: -3.4978179931640625
    6. '```' → logprob: -3.7478179931640625
    7. ' segment' → logprob: -4.4978179931640625
    8. 's' → logprob: -4.6228179931640625
    9. ')' → logprob: -4.8728179931640625
    10. '"""' → logprob: -4.9978179931640625

Token 43: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.49662941694259644
    2. '[' → logprob: -1.6216294765472412
    3. ' :' → logprob: -3.121629476547241
    4. '[]' → logprob: -3.496629476547241
    5. ':' → logprob: -4.121629238128662
    6. '```' → logprob: -4.246629238128662
    7. ' ' → logprob: -4.496629238128662
    8. ' [' → logprob: -4.496629238128662
    9. '<|end|>' → logprob: -4.496629238128662
    10. '    ' → logprob: -4.621629238128662

Token 44: '       ' (ID: 309)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.1716918796300888
    2. '[' → logprob: -1.92169189453125
    3. ' []' → logprob: -5.54669189453125
    4. '   ' → logprob: -5.79669189453125
    5. '[]' → logprob: -6.04669189453125
    6. ' ['' → logprob: -7.79669189453125
    7. '"' → logprob: -8.29669189453125
    8. '['' → logprob: -8.54669189453125
    9. '[s' → logprob: -8.92169189453125
    10. ' ["' → logprob: -9.54669189453125

Token 45: ' tuple' (ID: 31311)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.685032308101654
    2. ' list' → logprob: -0.810032308101654
    3. ' None' → logprob: -4.435032367706299
    4. ' segment' → logprob: -4.685032367706299
    5. 'None' → logprob: -4.685032367706299
    6. 'int' → logprob: -4.935032367706299
    7. 'segment' → logprob: -5.185032367706299
    8. ' int' → logprob: -6.185032367706299
    9. 'List' → logprob: -6.310032367706299
    10. 'dict' → logprob: -6.810032367706299

Token 46: ':' (ID: 25)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4425635039806366
    2. ' (' → logprob: -1.192563533782959
    3. '(int' → logprob: -3.067563533782959
    4. ')' → logprob: -5.942563533782959
    5. '[' → logprob: -6.817563533782959
    6. '(None' → logprob: -7.192563533782959
    7. '(tuple' → logprob: -7.442563533782959
    8. '[int' → logprob: -7.567563533782959
    9. ' ' → logprob: -7.942563533782959
    10. '(n' → logprob: -8.0675630569458

Token 47: ' 
' (ID: 793)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.18402644991874695
    2. '(' → logprob: -2.3090264797210693
    3. '([],' → logprob: -3.6840264797210693
    4. '(None' → logprob: -3.9340264797210693
    5. '(list' → logprob: -5.05902624130249
    6. '(int' → logprob: -5.30902624130249
    7. '([' → logprob: -5.93402624130249
    8. ' ([' → logprob: -6.43402624130249
    9. '(N' → logprob: -6.80902624130249
    10. '[]' → logprob: -6.80902624130249

Token 48: '           ' (ID: 352)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.25916439294815063
    2. '(' → logprob: -1.7591643333435059
    3. '(int' → logprob: -3.759164333343506
    4. '(None' → logprob: -4.759164333343506
    5. '(list' → logprob: -4.759164333343506
    6. '(tree' → logprob: -5.884164333343506
    7. '(n' → logprob: -6.009164333343506
    8. '   ' → logprob: -6.634164333343506
    9. '(N' → logprob: -6.759164333343506
    10. '(s' → logprob: -7.134164333343506

Token 49: ' -' (ID: 533)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.4607801139354706
    2. '(int' → logprob: -2.210780143737793
    3. '(list' → logprob: -2.335780143737793
    4. '(tree' → logprob: -3.460780143737793
    5. '(' → logprob: -3.710780143737793
    6. '(None' → logprob: -3.835780143737793
    7. 'list' → logprob: -4.085780143737793
    8. '([],' → logprob: -4.085780143737793
    9. '(segment' → logprob: -4.835780143737793
    10. '(N' → logprob: -5.210780143737793

Token 50: ' Un' (ID: 1367)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.30136966705322266
    2. '(int' → logprob: -1.6763696670532227
    3. '(list' → logprob: -4.051369667053223
    4. '(' → logprob: -4.676369667053223
    5. ' list' → logprob: -4.676369667053223
    6. 'list' → logprob: -4.926369667053223
    7. '(None' → logprob: -5.551369667053223
    8. ' int' → logprob: -5.676369667053223
    9. 'int' → logprob: -5.676369667053223
    10. '(n' → logprob: -5.926369667053223

Token 51: ' tableau' (ID: 67053)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.7741619944572449
    2. ' []' → logprob: -1.7741620540618896
    3. ' list' → logprob: -2.2741620540618896
    4. '[' → logprob: -2.3991620540618896
    5. '[]' → logprob: -2.5241620540618896
    6. 'list' → logprob: -2.6491620540618896
    7. ' None' → logprob: -5.5241618156433105
    8. 'None' → logprob: -5.7741618156433105
    9. 's' → logprob: -5.8991618156433105
    10. ' segment' → logprob: -6.2741618156433105

Token 52: ' SEG' (ID: 90192)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.6794906258583069
    2. '[' → logprob: -0.9294906258583069
    3. '(' → logprob: -2.929490566253662
    4. ' (' → logprob: -4.554490566253662
    5. ' de' → logprob: -4.679490566253662
    6. '(s' → logprob: -5.304490566253662
    7. '[int' → logprob: -5.804490566253662
    8. '<|end|>' → logprob: -5.804490566253662
    9. ' d' → logprob: -6.054490566253662
    10. 's' → logprob: -6.304490566253662

Token 53: ' initial' (ID: 4871)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.17875711619853973
    2. 'm' → logprob: -2.3037571907043457
    3. 'ment' → logprob: -3.3037571907043457
    4. '[' → logprob: -4.178757190704346
    5. 'MENT' → logprob: -5.803757190704346
    6. '[]' → logprob: -6.803757190704346
    7. 'men' → logprob: -6.928757190704346
    8. 'mentation' → logprob: -6.928757190704346
    9. ')' → logprob: -7.053757190704346
    10. '_tree' → logprob: -7.178757190704346

Token 54: 'isé' (ID: 30065)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7740915417671204
    2. '[' → logprob: -1.1490914821624756
    3. 'ment' → logprob: -2.3990914821624756
    4. 'mented' → logprob: -2.8990914821624756
    5. '[]' → logprob: -3.5240914821624756
    6. 'mentation' → logprob: -4.024091720581055
    7. 'm' → logprob: -5.024091720581055
    8. 'ement' → logprob: -5.399091720581055
    9. '_array' → logprob: -5.899091720581055
    10. '_tree' → logprob: -6.399091720581055

Token 55: ' de' (ID: 334)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8859304189682007
    2. '(' → logprob: -1.8859304189682007
    3. '_' → logprob: -1.8859304189682007
    4. ' de' → logprob: -2.1359305381774902
    5. ' des' → logprob: -3.1359305381774902
    6. ' (' → logprob: -3.6359305381774902
    7. ',' → logprob: -3.7609305381774902
    8. '   ' → logprob: -4.13593053817749
    9. ' d' → logprob: -4.38593053817749
    10. ' _' → logprob: -5.13593053817749

Token 56: ' taille' (ID: 41644)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9597244262695312
    2. ' [' → logprob: -1.0847244262695312
    3. ' taille' → logprob: -1.7097244262695312
    4. ' None' → logprob: -2.9597244262695312
    5. ' ' → logprob: -3.8347244262695312
    6. ' size' → logprob: -5.209724426269531
    7. 'None' → logprob: -5.334724426269531
    8. '0' → logprob: -5.459724426269531
    9. 'tail' → logprob: -6.334724426269531
    10. '[N' → logprob: -6.709724426269531

Token 57: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.24289558827877045
    2. '(' → logprob: -1.8678956031799316
    3. ' ' → logprob: -3.2428956031799316
    4. '[' → logprob: -4.617895603179932
    5. ' [' → logprob: -4.742895603179932
    6. '(N' → logprob: -6.617895603179932
    7. '2' → logprob: -7.617895603179932
    8. ' )' → logprob: -8.242895126342773
    9. ' de' → logprob: -8.492895126342773
    10. ' N' → logprob: -8.742895126342773

Token 58: '2' (ID: 17)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5265131592750549
    2. '4' → logprob: -1.1515130996704102
    3. '1' → logprob: -3.02651309967041
    4. '2' → logprob: -3.52651309967041
    5. '(' → logprob: -4.52651309967041
    6. ' (' → logprob: -6.02651309967041
    7. ' N' → logprob: -7.27651309967041
    8. ')' → logprob: -7.65151309967041
    9. '   ' → logprob: -7.90151309967041
    10. 'N' → logprob: -8.02651309967041

Token 59: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.19088630378246307
    2. '*' → logprob: -2.0658862590789795
    3. '*N' → logprob: -3.0658862590789795
    4. ' ' → logprob: -8.565886497497559
    5. '**' → logprob: -8.690886497497559
    6. '*(' → logprob: -9.440886497497559
    7. ' **' → logprob: -12.065886497497559
    8. '*n' → logprob: -12.315886497497559
    9. '   ' → logprob: -13.440886497497559
    10. 'N' → logprob: -13.940886497497559

Token 60: ' puissance' (ID: 63494)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.57630455493927
    2. ' N' → logprob: -0.82630455493927
    3. ' ' → logprob: -8.20130443572998
    4. '*N' → logprob: -10.45130443572998
    5. ')' → logprob: -11.07630443572998
    6. ' (' → logprob: -11.45130443572998
    7. ' *' → logprob: -11.82630443572998
    8. '(' → logprob: -12.57630443572998
    9. '*' → logprob: -12.76380443572998
    10. ' ' → logprob: -13.26380443572998

Token 61: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5296491384506226
    2. '2' → logprob: -1.2796491384506226
    3. ' de' → logprob: -3.029649257659912
    4. 'de' → logprob: -3.529649257659912
    5. ' ' → logprob: -3.654649257659912
    6. ' (' → logprob: -4.654649257659912
    7. '   ' → logprob: -4.779649257659912
    8. '_de' → logprob: -5.154649257659912
    9. '_' → logprob: -5.779649257659912
    10. '(N' → logprob: -7.279649257659912

Token 62: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.12433219701051712
    2. ' ' → logprob: -2.3743321895599365
    3. 'de' → logprob: -3.8743321895599365
    4. ' deux' → logprob: -6.499332427978516
    5. '(' → logprob: -7.249332427978516
    6. ' two' → logprob: -7.874332427978516
    7. 'two' → logprob: -8.624332427978516
    8. '   ' → logprob: -8.874332427978516
    9. '`' → logprob: -10.749332427978516
    10. '  ' → logprob: -10.749332427978516

Token 63: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.057609476149082184
    2. 'de' → logprob: -3.0576095581054688
    3. ' ' → logprob: -4.807609558105469
    4. '(' → logprob: -7.682609558105469
    5. 'N' → logprob: -9.307609558105469
    6. '   ' → logprob: -9.932609558105469
    7. ' deux' → logprob: -10.432609558105469
    8. '`' → logprob: -10.557609558105469
    9. '(N' → logprob: -10.557609558105469
    10. ')' → logprob: -10.932609558105469

Token 64: ' supérieure' (ID: 106336)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.17844003438949585
    2. ')' → logprob: -2.1784400939941406
    3. ' ' → logprob: -4.053440093994141
    4. '_' → logprob: -4.553440093994141
    5. ' )' → logprob: -4.928440093994141
    6. ' (' → logprob: -5.053440093994141
    7. '**' → logprob: -6.428440093994141
    8. '(N' → logprob: -6.428440093994141
    9. '(n' → logprob: -7.178440093994141
    10. '[' → logprob: -7.178440093994141

Token 65: ' ou' (ID: 2031)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0496622323989868
    2. '(' → logprob: -1.5496622323989868
    3. ' à' → logprob: -1.6746622323989868
    4. 'à' → logprob: -1.7996622323989868
    5. ' au' → logprob: -3.4246621131896973
    6. 'au' → logprob: -4.049662113189697
    7. '   ' → logprob: -4.549662113189697
    8. ' ' → logprob: -5.424662113189697
    9. '(n' → logprob: -6.049662113189697
    10. '(next' → logprob: -6.424662113189697

Token 66: ' ég' (ID: 33150)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.9920725226402283
    2. 'N' → logprob: -1.367072582244873
    3. ' N' → logprob: -2.117072582244873
    4. ' ' → logprob: -2.367072582244873
    5. '2' → logprob: -2.992072582244873
    6. '   ' → logprob: -3.617072582244873
    7. ')' → logprob: -3.617072582244873
    8. 'de' → logprob: -3.992072582244873
    9. '(' → logprob: -4.742072582244873
    10. 'à' → logprob: -5.367072582244873

Token 67: 'ale' (ID: 1167)
  Prédit: 'ale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ale' → logprob: -0.0076343161053955555
    2. 'al' → logprob: -4.882634162902832
    3. 'a' → logprob: -11.382634162902832
    4. '</' → logprob: -12.757634162902832
    5. 'alee' → logprob: -13.007634162902832
    6. 'alité' → logprob: -13.007634162902832
    7. 'але' → logprob: -13.257634162902832
    8. '```' → logprob: -13.382634162902832
    9. 'alable' → logprob: -14.132634162902832
    10. 'ales' → logprob: -14.382634162902832

Token 68: ' à' (ID: 1221)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.114499568939209
    2. ' à' → logprob: -1.114499568939209
    3. '(' → logprob: -1.489499568939209
    4. ' (' → logprob: -3.239499568939209
    5. ')' → logprob: -3.489499568939209
    6. '(N' → logprob: -3.864499568939209
    7. 'à' → logprob: -4.364499568939209
    8. ' au' → logprob: -4.989499568939209
    9. '(n' → logprob: -6.489499568939209
    10. '(
' → logprob: -6.614499568939209

Token 69: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.25360071659088135
    2. 'N' → logprob: -1.5036007165908813
    3. ' ' → logprob: -6.628600597381592
    4. ')' → logprob: -9.00360107421875
    5. '(N' → logprob: -9.50360107421875
    6. ' )' → logprob: -10.25360107421875
    7. ' (' → logprob: -10.37860107421875
    8. '   ' → logprob: -11.12860107421875
    9. '(' → logprob: -11.25360107421875
    10. '1' → logprob: -11.50360107421875

Token 70: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01263254601508379
    2. ' )' → logprob: -5.512632369995117
    3. '_' → logprob: -5.637632369995117
    4. ')_' → logprob: -6.262632369995117
    5. ',' → logprob: -6.762632369995117
    6. '(' → logprob: -7.512632369995117
    7. ' ' → logprob: -8.387632369995117
    8. '_)' → logprob: -8.387632369995117
    9. '),' → logprob: -8.762632369995117
    10. '   ' → logprob: -8.762632369995117

Token 71: ' -' (ID: 533)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20465399324893951
    2. ')' → logprob: -2.2046539783477783
    3. '_' → logprob: -2.9546539783477783
    4. ' ,' → logprob: -4.954654216766357
    5. '[' → logprob: -5.704654216766357
    6. '   ' → logprob: -5.829654216766357
    7. '```' → logprob: -6.704654216766357
    8. '(' → logprob: -6.954654216766357
    9. ' ' → logprob: -7.204654216766357
    10. 's' → logprob: -7.204654216766357

Token 72: ' ' (ID: 220)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0585728883743286
    2. ' ' → logprob: -1.5585728883743286
    3. '1' → logprob: -1.6835728883743286
    4. ' (' → logprob: -2.308572769165039
    5. '2' → logprob: -2.808572769165039
    6. '   ' → logprob: -3.308572769165039
    7. ')' → logprob: -3.308572769165039
    8. '```' → logprob: -4.933572769165039
    9. '[' → logprob: -5.183572769165039
    10. '(N' → logprob: -6.433572769165039

Token 73: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.031609226018190384
    2. ' ' → logprob: -3.531609296798706
    3. '(' → logprob: -6.531609058380127
    4. ' (' → logprob: -8.156609535217285
    5. '2' → logprob: -9.906609535217285
    6. '(N' → logprob: -10.906609535217285
    7. ' N' → logprob: -11.156609535217285
    8. '```' → logprob: -12.031609535217285
    9. '   ' → logprob: -12.281609535217285
    10. '  ' → logprob: -12.406609535217285

Token 74: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.39931559562683105
    2. ',' → logprob: -1.399315595626831
    3. '_' → logprob: -3.649315595626831
    4. ']' → logprob: -4.14931583404541
    5. '[' → logprob: -4.27431583404541
    6. '):' → logprob: -5.39931583404541
    7. '   ' → logprob: -5.77431583404541
    8. ' ,' → logprob: -6.02431583404541
    9. ',
' → logprob: -6.14931583404541
    10. '
' → logprob: -6.27431583404541

Token 75: ' rempli' (ID: 192613)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0774800777435303
    2. '[' → logprob: -1.3274800777435303
    3. ' ' → logprob: -1.8274800777435303
    4. ',' → logprob: -2.4524800777435303
    5. ')' → logprob: -2.5774800777435303
    6. '   ' → logprob: -4.077480316162109
    7. ' _' → logprob: -4.202480316162109
    8. ' ,' → logprob: -4.702480316162109
    9. ''' → logprob: -4.827480316162109
    10. ' )' → logprob: -5.452480316162109

Token 76: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.8786194324493408
    2. ' à' → logprob: -1.0036194324493408
    3. '[' → logprob: -1.8786194324493408
    4. '[]' → logprob: -3.878619432449341
    5. ' ' → logprob: -4.378619194030762
    6. ' [' → logprob: -4.753619194030762
    7. ' d' → logprob: -4.753619194030762
    8. ' au' → logprob: -6.128619194030762
    9. ' aux' → logprob: -6.128619194030762
    10. 'à' → logprob: -6.253619194030762

Token 77: ' z' (ID: 579)
  Prédit: ' None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.847431480884552
    2. '0' → logprob: -1.2224314212799072
    3. 'None' → logprob: -1.8474314212799072
    4. ' ' → logprob: -2.4724314212799072
    5. ' [' → logprob: -4.597431659698486
    6. ' (' → logprob: -4.847431659698486
    7. '[' → logprob: -5.097431659698486
    8. '(None' → logprob: -5.847431659698486
    9. '(' → logprob: -6.722431659698486
    10. ' '' → logprob: -6.847431659698486

Token 78: 'éros' (ID: 120888)
  Prédit: 'éros'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éros' → logprob: -0.03454863652586937
    2. 'eros' → logprob: -3.90954852104187
    3. 'é' → logprob: -5.284548759460449
    4. 'ero' → logprob: -6.159548759460449
    5. ''' → logprob: -6.159548759460449
    6. '\' → logprob: -6.659548759460449
    7. 'éro' → logprob: -6.659548759460449
    8. 'e' → logprob: -7.659548759460449
    9. '```' → logprob: -8.15954875946045
    10. ''\' → logprob: -8.90954875946045

Token 79: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5981724858283997
    2. ',' → logprob: -1.7231724262237549
    3. ']' → logprob: -1.7231724262237549
    4. '   ' → logprob: -2.598172426223755
    5. '[' → logprob: -5.223172664642334
    6. ',
' → logprob: -5.348172664642334
    7. '.' → logprob: -6.098172664642334
    8. '}' → logprob: -6.348172664642334
    9. ' ' → logprob: -7.473172664642334
    10. 's' → logprob: -7.598172664642334

Token 80: '           ' (ID: 352)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5535021424293518
    2. '   ' → logprob: -0.9285021424293518
    3. '"""' → logprob: -4.678502082824707
    4. '```' → logprob: -5.053502082824707
    5. ')
' → logprob: -5.303502082824707
    6. '[' → logprob: -6.678502082824707
    7. ']' → logprob: -6.803502082824707
    8. '_' → logprob: -6.803502082824707
    9. ',' → logprob: -6.803502082824707
    10. '"""
' → logprob: -6.928502082824707

Token 81: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7052115797996521
    2. ')' → logprob: -1.2052116394042969
    3. '"""' → logprob: -2.205211639404297
    4. '"""
' → logprob: -3.580211639404297
    5. '```' → logprob: -4.330211639404297
    6. '\n' → logprob: -4.455211639404297
    7. '\' → logprob: -4.580211639404297
    8. ')
' → logprob: -5.080211639404297
    9. ',' → logprob: -5.330211639404297
    10. '""' → logprob: -5.455211639404297

Token 82: ' La' (ID: 3038)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.8690731525421143
    2. ' int' → logprob: -0.9940731525421143
    3. 'int' → logprob: -3.2440731525421143
    4. ' l' → logprob: -3.4940731525421143
    5. ' L' → logprob: -3.9940731525421143
    6. ' La' → logprob: -4.119072914123535
    7. 'La' → logprob: -4.119072914123535
    8. ' max' → logprob: -4.244072914123535
    9. ' log' → logprob: -4.494072914123535
    10. ' size' → logprob: -4.494072914123535

Token 83: ' taille' (ID: 41644)
  Prédit: ' taille'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' taille' → logprob: -0.7343083620071411
    2. ' size' → logprob: -1.3593083620071411
    3. ' next' → logprob: -1.4843083620071411
    4. ' power' → logprob: -4.109308242797852
    5. 'size' → logprob: -4.984308242797852
    6. ' prochaine' → logprob: -5.984308242797852
    7. ' pow' → logprob: -6.109308242797852
    8. ' plus' → logprob: -6.234308242797852
    9. ' puissance' → logprob: -6.609308242797852
    10. 'next' → logprob: -7.109308242797852

Token 84: ' d' (ID: 272)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0023236756678670645
    2. '_max' → logprob: -7.502323627471924
    3. ')' → logprob: -8.627324104309082
    4. '_seg' → logprob: -8.627324104309082
    5. '_de' → logprob: -8.752324104309082
    6. '_segment' → logprob: -8.877324104309082
    7. ' _' → logprob: -9.002324104309082
    8. '_com' → logprob: -9.127324104309082
    9. '_des' → logprob: -9.377324104309082
    10. '_total' → logprob: -9.377324104309082

Token 85: ' (' (ID: 350)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12335479259490967
    2. ' la' → logprob: -2.623354911804199
    3. ' l' → logprob: -3.498354911804199
    4. ' the' → logprob: -5.498354911804199
    5. ' ' → logprob: -6.623354911804199
    6. ' (' → logprob: -6.998354911804199
    7. 'l' → logprob: -6.998354911804199
    8. ' a' → logprob: -7.123354911804199
    9. 'e' → logprob: -7.248354911804199
    10. '_' → logprob: -7.248354911804199

Token 86: 'pu' (ID: 5112)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07221054285764694
    2. ' )' → logprob: -3.3222105503082275
    3. ',' → logprob: -4.447210311889648
    4. '):' → logprob: -5.572210311889648
    5. ' ' → logprob: -6.072210311889648
    6. 'int' → logprob: -6.197210311889648
    7. ')`' → logprob: -6.447210311889648
    8. 'le' → logprob: -7.072210311889648
    9. '   ' → logprob: -7.197210311889648
    10. ')**' → logprob: -7.447210311889648

Token 87: 'issance' (ID: 17968)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5034480690956116
    2. 'issance' → logprob: -1.2534480094909668
    3. '2' → logprob: -2.878448009490967
    4. 'iss' → logprob: -3.753448009490967
    5. '```' → logprob: -5.128448009490967
    6. 'is' → logprob: -5.753448009490967
    7. '``' → logprob: -5.878448009490967
    8. 'd' → logprob: -6.253448009490967
    9. 's' → logprob: -6.378448009490967
    10. '\' → logprob: -6.628448009490967

Token 88: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8510812520980835
    2. '   ' → logprob: -1.4760812520980835
    3. '2' → logprob: -1.6010812520980835
    4. ' de' → logprob: -2.726081371307373
    5. ' ' → logprob: -3.226081371307373
    6. '_de' → logprob: -4.476081371307373
    7. ')' → logprob: -4.726081371307373
    8. 'de' → logprob: -5.351081371307373
    9. '_sup' → logprob: -6.101081371307373
    10. '       ' → logprob: -6.726081371307373

Token 89: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.6987324357032776
    2. ' ' → logprob: -0.6987324357032776
    3. 'de' → logprob: -5.573732376098633
    4. ' deux' → logprob: -6.573732376098633
    5. ' two' → logprob: -8.823732376098633
    6. ')' → logprob: -9.198732376098633
    7. ' ' → logprob: -9.448732376098633
    8. ' de' → logprob: -11.198732376098633
    9. 'two' → logprob: -12.073732376098633
    10. '  ' → logprob: -12.073732376098633

Token 90: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.16245512664318085
    2. ' ' → logprob: -1.9124550819396973
    3. 'de' → logprob: -6.162455081939697
    4. ' deux' → logprob: -10.037455558776855
    5. '```' → logprob: -10.912455558776855
    6. ' ' → logprob: -11.037455558776855
    7. ' two' → logprob: -11.162455558776855
    8. 'd' → logprob: -11.912455558776855
    9. ')' → logprob: -12.412455558776855
    10. ' d' → logprob: -12.662455558776855

Token 91: ')' (ID: 8)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6730372309684753
    2. ')' → logprob: -1.1730372905731201
    3. '_sup' → logprob: -2.17303729057312
    4. '_)' → logprob: -3.67303729057312
    5. ' ' → logprob: -4.048037052154541
    6. ' )' → logprob: -4.423037052154541
    7. '   ' → logprob: -6.298037052154541
    8. ',' → logprob: -6.423037052154541
    9. 'sup' → logprob: -6.923037052154541
    10. ' _' → logprob: -7.173037052154541

Token 92: ' qui' (ID: 2780)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0793113708496094
    2. '   ' → logprob: -1.9543113708496094
    3. ' ' → logprob: -2.0793113708496094
    4. '
' → logprob: -2.5793113708496094
    5. '_' → logprob: -2.7043113708496094
    6. ' :' → logprob: -2.7043113708496094
    7. ' 
' → logprob: -2.8293113708496094
    8. '  
' → logprob: -3.4543113708496094
    9. '\' → logprob: -3.9543113708496094
    10. 'd' → logprob: -4.329311370849609

Token 93: ' couvre' (ID: 137218)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.014710457064211369
    2. ' =' → logprob: -5.889710426330566
    3. ' )' → logprob: -6.639710426330566
    4. '_' → logprob: -6.764710426330566
    5. '=' → logprob: -7.014710426330566
    6. '  ' → logprob: -7.014710426330566
    7. ' ```' → logprob: -7.139710426330566
    8. ')' → logprob: -7.389710426330566
    9. ' sera' → logprob: -7.389710426330566
    10. ' correspond' → logprob: -7.389710426330566

Token 94: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.4304661154747009
    2. ' ' → logprob: -1.9304661750793457
    3. ' la' → logprob: -2.3054661750793457
    4. ' au' → logprob: -3.3054661750793457
    5. ' l' → logprob: -3.5554661750793457
    6. 'N' → logprob: -4.055466175079346
    7. ' ' → logprob: -4.805466175079346
    8. '   ' → logprob: -5.930466175079346
    9. ' the' → logprob: -6.055466175079346
    10. ' le' → logprob: -6.180466175079346

Token 95: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7450135350227356
    2. ':' → logprob: -0.9950135350227356
    3. '   ' → logprob: -2.495013475418091
    4. ':
' → logprob: -3.370013475418091
    5. ' :' → logprob: -4.74501371383667
    6. ' ' → logprob: -5.24501371383667
    7. '\n' → logprob: -5.37001371383667
    8. '  
' → logprob: -5.49501371383667
    9. '    
' → logprob: -5.87001371383667
    10. ' 
' → logprob: -5.99501371383667

Token 96: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2088935524225235
    2. '
' → logprob: -2.2088935375213623
    3. '    
' → logprob: -3.2088935375213623
    4. ')' → logprob: -4.708893775939941
    5. ' 
' → logprob: -5.333893775939941
    6. '"""' → logprob: -5.458893775939941
    7. '```' → logprob: -5.583893775939941
    8. '"""
' → logprob: -5.708893775939941
    9. '\n' → logprob: -6.208893775939941
    10. ')
' → logprob: -6.333893775939941

Token 97: ' """
' (ID: 7037)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6640323996543884
    2. '   ' → logprob: -1.4140324592590332
    3. '\n' → logprob: -2.289032459259033
    4. '    
' → logprob: -3.039032459259033
    5. '  
' → logprob: -3.914032459259033
    6. ':' → logprob: -4.164032459259033
    7. '```' → logprob: -4.414032459259033
    8. '   
' → logprob: -4.539032459259033
    9. ':
' → logprob: -4.914032459259033
    10. ')' → logprob: -5.164032459259033

Token 98: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3159180283546448
    2. ' 
' → logprob: -1.56591796875
    3. '    
' → logprob: -3.31591796875
    4. '   ' → logprob: -4.69091796875
    5. 'd' → logprob: -4.94091796875
    6. '\n' → logprob: -5.81591796875
    7. 'n' → logprob: -6.19091796875
    8. 'import' → logprob: -6.56591796875
    9. '  
' → logprob: -7.44091796875
    10. '   
' → logprob: -7.56591796875

Token 99: ' i' (ID: 575)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -1.0469144582748413
    2. 'd' → logprob: -1.4219144582748413
    3. ' import' → logprob: -1.6719144582748413
    4. '   ' → logprob: -2.296914577484131
    5. 'import' → logprob: -2.421914577484131
    6. '    
' → logprob: -4.796914577484131
    7. ' 
' → logprob: -4.921914577484131
    8. 'n' → logprob: -5.296914577484131
    9. ' n' → logprob: -5.546914577484131
    10. ' #' → logprob: -6.546914577484131

Token 100: ' =' (ID: 314)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.6067437529563904
    2. 'n' → logprob: -1.7317438125610352
    3. '=' → logprob: -2.231743812561035
    4. ' =' → logprob: -2.356743812561035
    5. 'f' → logprob: -2.856743812561035
    6. 'nt' → logprob: -5.106743812561035
    7. 'nd' → logprob: -5.481743812561035
    8. 'mp' → logprob: -5.731743812561035
    9. 'd' → logprob: -6.356743812561035
    10. 's' → logprob: -7.231743812561035

Token 101: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.38690221309661865
    2. ' ' → logprob: -1.1369022130966187
    3. 'N' → logprob: -11.26190185546875
    4. ' N' → logprob: -11.76190185546875
    5. '0' → logprob: -12.26190185546875
    6. '2' → logprob: -13.01190185546875
    7. '  ' → logprob: -13.88690185546875
    8. '(' → logprob: -14.51190185546875
    9. 'int' → logprob: -15.19940185546875
    10. '   ' → logprob: -15.19940185546875

Token 102: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000650125031825155
    2. '0' → logprob: -7.875649929046631
    3. ' ' → logprob: -8.250650405883789
    4. 'N' → logprob: -12.250650405883789
    5. '2' → logprob: -13.625650405883789
    6. 'int' → logprob: -13.875650405883789
    7. '   ' → logprob: -14.000650405883789
    8. '(' → logprob: -14.875650405883789
    9. '  ' → logprob: -15.000650405883789
    10. 'n' → logprob: -15.875650405883789

Token 103: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4212398827075958
    2. 'while' → logprob: -1.1712398529052734
    3. ' while' → logprob: -4.171239852905273
    4. '0' → logprob: -4.671239852905273
    5. '2' → logprob: -5.421239852905273
    6. '<<' → logprob: -7.046239852905273
    7. '	while' → logprob: -7.671239852905273
    8. '<|end|>' → logprob: -7.671239852905273
    9. 'd' → logprob: -7.921239852905273
    10. 's' → logprob: -8.546239852905273

Token 104: '   ' (ID: 271)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.3658760190010071
    2. '
' → logprob: -1.3658759593963623
    3. ' while' → logprob: -3.3658759593963623
    4. '0' → logprob: -4.990876197814941
    5. '2' → logprob: -5.365876197814941
    6. 'd' → logprob: -7.115876197814941
    7. '	while' → logprob: -7.240876197814941
    8. '<|end|>' → logprob: -7.240876197814941
    9. '<<' → logprob: -7.615876197814941
    10. 's' → logprob: -8.115876197814941

Token 105: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.3136848211288452
    2. ' while' → logprob: -1.3136848211288452
    3. '
' → logprob: -8.813684463500977
    4. '	while' → logprob: -8.938684463500977
    5. '2' → logprob: -9.688684463500977
    6. ' 
' → logprob: -10.188684463500977
    7. 'd' → logprob: -11.313684463500977
    8. '    
' → logprob: -11.813684463500977
    9. 'While' → logprob: -12.188684463500977
    10. ' ' → logprob: -12.188684463500977

Token 106: ' Trou' (ID: 58947)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.04395655170083046
    2. 'while' → logprob: -3.1689565181732178
    3. ' i' → logprob: -7.543956756591797
    4. 'While' → logprob: -8.668956756591797
    5. '    ' → logprob: -9.793956756591797
    6. 'i' → logprob: -9.918956756591797
    7. 'd' → logprob: -10.043956756591797
    8. '   ' → logprob: -10.668956756591797
    9. ' While' → logprob: -10.668956756591797
    10. ' ' → logprob: -10.793956756591797

Token 107: 've' (ID: 737)
  Prédit: 've'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 've' → logprob: -0.2937851846218109
    2. 'ver' → logprob: -1.4187852144241333
    3. 'v' → logprob: -5.043785095214844
    4. 'vez' → logprob: -5.543785095214844
    5. 'te' → logprob: -6.668785095214844
    6. 'vre' → logprob: -7.918785095214844
    7. 'vé' → logprob: -8.793785095214844
    8. 'le' → logprob: -9.418785095214844
    9. 'r' → logprob: -9.918785095214844
    10. '   ' → logprob: -10.168785095214844

Token 108: ' la' (ID: 557)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.13352154195308685
    2. ' d' → logprob: -3.008521556854248
    3. ' while' → logprob: -3.258521556854248
    4. 'd' → logprob: -4.133521556854248
    5. ' i' → logprob: -4.383521556854248
    6. '   ' → logprob: -6.133521556854248
    7. '  ' → logprob: -6.258521556854248
    8. 'while' → logprob: -6.258521556854248
    9. 'i' → logprob: -7.758521556854248
    10. '    ' → logprob: -7.758521556854248

Token 109: ' puissance' (ID: 63494)
  Prédit: ' plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' plus' → logprob: -0.6191685199737549
    2. 'plus' → logprob: -1.4941685199737549
    3. 'pu' → logprob: -2.494168519973755
    4. ' prochaine' → logprob: -3.244168519973755
    5. 'while' → logprob: -3.744168519973755
    6. ' while' → logprob: -3.869168519973755
    7. ' puissance' → logprob: -4.369168281555176
    8. ' ' → logprob: -4.744168281555176
    9. ' next' → logprob: -4.869168281555176
    10. 'd' → logprob: -4.869168281555176

Token 110: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.6811181902885437
    2. 'de' → logprob: -1.5561182498931885
    3. '   ' → logprob: -2.0561182498931885
    4. '2' → logprob: -2.6811182498931885
    5. '_de' → logprob: -2.8061182498931885
    6. ' suivante' → logprob: -4.681118011474609
    7. '    ' → logprob: -4.931118011474609
    8. ' ' → logprob: -6.431118011474609
    9. '  ' → logprob: -6.931118011474609
    10. '       ' → logprob: -7.056118011474609

Token 111: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.48984238505363464
    2. ' ' → logprob: -1.114842414855957
    3. 'de' → logprob: -2.864842414855957
    4. ' deux' → logprob: -6.614842414855957
    5. ' two' → logprob: -7.489842414855957
    6. ' i' → logprob: -8.864842414855957
    7. 'two' → logprob: -9.239842414855957
    8. 'i' → logprob: -9.489842414855957
    9. '   ' → logprob: -10.239842414855957
    10. '```' → logprob: -10.739842414855957

Token 112: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.011325911618769169
    2. 'de' → logprob: -4.511325836181641
    3. ' ' → logprob: -8.26132583618164
    4. '```' → logprob: -12.01132583618164
    5. ' deux' → logprob: -12.01132583618164
    6. 'two' → logprob: -12.38632583618164
    7. 'i' → logprob: -13.88632583618164
    8. ' two' → logprob: -15.01132583618164
    9. '   ' → logprob: -15.01132583618164
    10. '#' → logprob: -15.63632583618164

Token 113: ' supérieure' (ID: 106336)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.8304759860038757
    2. '   ' → logprob: -1.7054760456085205
    3. ' while' → logprob: -2.2054760456085205
    4. 'd' → logprob: -2.7054760456085205
    5. ' <=' → logprob: -3.2054760456085205
    6. 'while' → logprob: -3.4554760456085205
    7. ' ' → logprob: -3.4554760456085205
    8. ' supérieure' → logprob: -3.5804760456085205
    9. ' suivante' → logprob: -4.455475807189941
    10. '2' → logprob: -4.580475807189941

Token 114: ' ou' (ID: 2031)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.705903947353363
    2. '   ' → logprob: -0.955903947353363
    3. ' ' → logprob: -2.580904006958008
    4. ' i' → logprob: -3.955904006958008
    5. '    ' → logprob: -5.080904006958008
    6. '  ' → logprob: -5.330904006958008
    7. '       ' → logprob: -5.830904006958008
    8. 'à' → logprob: -6.080904006958008
    9. ' a' → logprob: -6.205904006958008
    10. 'i' → logprob: -6.205904006958008

Token 115: ' ég' (ID: 33150)
  Prédit: ' ég'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ég' → logprob: -0.341145783662796
    2. 'ou' → logprob: -1.8411457538604736
    3. '=' → logprob: -2.7161457538604736
    4. 'ég' → logprob: -3.0911457538604736
    5. ' eg' → logprob: -5.091145992279053
    6. 'eg' → logprob: -5.216145992279053
    7. 'égal' → logprob: -5.466145992279053
    8. ' ou' → logprob: -6.466145992279053
    9. 'Ég' → logprob: -8.091145515441895
    10. 'é' → logprob: -8.591145515441895

Token 116: 'ale' (ID: 1167)
  Prédit: 'ale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ale' → logprob: -0.00022201328829396516
    2. 'alee' → logprob: -9.125222206115723
    3. 'al' → logprob: -9.500222206115723
    4. 'alie' → logprob: -10.750222206115723
    5. 'le' → logprob: -12.625222206115723
    6. 'u' → logprob: -13.125222206115723
    7. 'alité' → logprob: -13.625222206115723
    8. 'aled' → logprob: -13.625222206115723
    9. 'e' → logprob: -13.750222206115723
    10. 'ales' → logprob: -14.000222206115723

Token 117: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.19647470116615295
    2. ' ' → logprob: -1.8214746713638306
    3. ' i' → logprob: -5.446474552154541
    4. ' a' → logprob: -5.446474552154541
    5. '   ' → logprob: -5.571474552154541
    6. 'à' → logprob: -5.696474552154541
    7. '  ' → logprob: -7.946474552154541
    8. ' to' → logprob: -9.0714750289917
    9. '    ' → logprob: -9.4464750289917
    10. 'a' → logprob: -9.5714750289917

Token 118: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.28174617886543274
    2. ' N' → logprob: -1.4067461490631104
    3. 'i' → logprob: -8.281745910644531
    4. ' i' → logprob: -8.906745910644531
    5. 'n' → logprob: -9.406745910644531
    6. '   ' → logprob: -10.156745910644531
    7. ' ' → logprob: -10.156745910644531
    8. '	N' → logprob: -10.906745910644531
    9. ' n' → logprob: -11.656745910644531
    10. '`' → logprob: -12.406745910644531

Token 119: '
' (ID: 198)
  Prédit: '    
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    
' → logprob: -1.5185251235961914
    2. '
' → logprob: -1.7685251235961914
    3. ' 
' → logprob: -1.7685251235961914
    4. '   ' → logprob: -2.0185251235961914
    5. ' while' → logprob: -2.1435251235961914
    6. 'while' → logprob: -2.3935251235961914
    7. '  
' → logprob: -2.6435251235961914
    8. ' ' → logprob: -5.143525123596191
    9. '   
' → logprob: -5.268525123596191
    10. '     
' → logprob: -6.018525123596191

Token 120: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1741534173488617
    2. ' while' → logprob: -2.7991533279418945
    3. 'while' → logprob: -3.4241533279418945
    4. '    
' → logprob: -3.4241533279418945
    5. '
' → logprob: -4.0491533279418945
    6. ' 
' → logprob: -4.7991533279418945
    7. '  
' → logprob: -5.7991533279418945
    8. '   
' → logprob: -6.7991533279418945
    9. ' ' → logprob: -7.2991533279418945
    10. ' <<=' → logprob: -7.5491533279418945

Token 121: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.47442251443862915
    2. 'while' (adapté à ' while') → logprob: -0.9744225144386292
    3. '   ' → logprob: -8.224422454833984
    4. '	while' → logprob: -9.849422454833984
    5. 'While' → logprob: -11.724422454833984
    6. '    
' → logprob: -12.224422454833984
    7. ' i' → logprob: -13.099422454833984
    8. 'if' → logprob: -13.474422454833984
    9. ' ' → logprob: -13.599422454833984
    10. 'i' → logprob: -13.599422454833984

Token 122: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.026331299915909767
    2. 'i' → logprob: -3.6513311862945557
    3. '   ' → logprob: -11.026330947875977
    4. '	i' → logprob: -12.026330947875977
    5. ' ' → logprob: -12.401330947875977
    6. '(i' → logprob: -13.151330947875977
    7. ' ' → logprob: -14.526330947875977
    8. 'd' → logprob: -14.776330947875977
    9. ' (' → logprob: -15.026330947875977
    10. '  ' → logprob: -15.026330947875977

Token 123: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.2254752218723297
    2. ' <' → logprob: -1.6004751920700073
    3. '<N' → logprob: -10.350475311279297
    4. '<n' → logprob: -11.100475311279297
    5. '<size' → logprob: -12.225475311279297
    6. '<len' → logprob: -12.225475311279297
    7. '<num' → logprob: -13.600475311279297
    8. '<int' → logprob: -14.100475311279297
    9. ' ' → logprob: -14.100475311279297
    10. '<s' → logprob: -14.850475311279297

Token 124: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.20141352713108063
    2. ' N' → logprob: -1.7014135122299194
    3. '	N' → logprob: -15.82641315460205
    4. ' ' → logprob: -16.326414108276367
    5. '>N' → logprob: -17.451414108276367
    6. '<N' → logprob: -18.201414108276367
    7. '=N' → logprob: -18.326414108276367
    8. 'n' → logprob: -18.826414108276367
    9. '   ' → logprob: -19.201414108276367
    10. ' ' → logprob: -19.326414108276367

Token 125: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4800150394439697
    2. ':' → logprob: -0.9800150394439697
    3. ' <<=' → logprob: -5.605014801025391
    4. '   ' → logprob: -6.605014801025391
    5. '<<' → logprob: -7.355014801025391
    6. '*' → logprob: -9.60501480102539
    7. ' <<' → logprob: -10.48001480102539
    8. '       ' → logprob: -10.48001480102539
    9. ' *' → logprob: -10.48001480102539
    10. ' :
' → logprob: -10.85501480102539

Token 126: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.036169715225696564
    2. ' i' → logprob: -3.6611697673797607
    3. 'i' → logprob: -4.911169528961182
    4. '   ' → logprob: -6.036169528961182
    5. '
' → logprob: -11.03617000579834
    6. '    
' → logprob: -11.66117000579834
    7. ' 
' → logprob: -12.03617000579834
    8. '```' → logprob: -12.16117000579834
    9. ' ' → logprob: -12.28617000579834
    10. '        
' → logprob: -12.53617000579834

Token 127: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.38690125942230225
    2. 'i' (adapté à ' i') → logprob: -1.1369012594223022
    3. '   ' → logprob: -10.761900901794434
    4. '	i' → logprob: -12.136900901794434
    5. '    ' → logprob: -13.136900901794434
    6. ' ' → logprob: -13.761900901794434
    7. '       ' → logprob: -14.886900901794434
    8. '  ' → logprob: -16.38690185546875
    9. ' ' → logprob: -16.38690185546875
    10. '
' → logprob: -16.88690185546875

Token 128: ' *=' (ID: 25253)
  Prédit: ' <<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <<=' → logprob: -0.029876720160245895
    2. '*=' → logprob: -3.779876708984375
    3. ' *=' → logprob: -5.154876708984375
    4. '<<' → logprob: -7.279876708984375
    5. '=' → logprob: -8.904876708984375
    6. '   ' → logprob: -11.654876708984375
    7. ' =' → logprob: -13.154876708984375
    8. ' ' → logprob: -13.904876708984375
    9. '```' → logprob: -14.904876708984375
    10. '	' → logprob: -15.029876708984375

Token 129: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.004621187690645456
    2. ' ' → logprob: -5.3796210289001465
    3. '   ' → logprob: -14.254621505737305
    4. '```' → logprob: -15.754621505737305
    5. '
' → logprob: -16.504621505737305
    6. '    ' → logprob: -17.754621505737305
    7. '۲' → logprob: -18.004621505737305
    8. ' ' → logprob: -18.004621505737305
    9. '  ' → logprob: -18.129621505737305
    10. '２' → logprob: -19.004621505737305

Token 130: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '   ' → logprob: -17.25
    4. '```' → logprob: -17.625
    5. '۲' → logprob: -19.375
    6. '２' → logprob: -20.0
    7. '२' → logprob: -20.125
    8. '
' → logprob: -20.25
    9. '২' → logprob: -20.5625
    10. '  ' → logprob: -20.75

Token 131: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7265134453773499
    2. '   ' → logprob: -0.7265134453773499
    3. '    
' → logprob: -3.851513385772705
    4. 'SEG' → logprob: -5.601513385772705
    5. 'd' → logprob: -5.726513385772705
    6. '  
' → logprob: -6.851513385772705
    7. '   
' → logprob: -7.101513385772705
    8. 'seg' → logprob: -7.351513385772705
    9. '
' → logprob: -7.976513385772705
    10. '```' → logprob: -8.226513862609863

Token 132: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23355834186077118
    2. '
' → logprob: -1.9835582971572876
    3. '    
' → logprob: -2.858558416366577
    4. 'SEG' → logprob: -5.733558177947998
    5. '  
' → logprob: -6.108558177947998
    6. ' 
' → logprob: -6.358558177947998
    7. '   
' → logprob: -6.483558177947998
    8. 'd' → logprob: -6.608558177947998
    9. '```' → logprob: -7.358558177947998
    10. 'seg' → logprob: -7.358558177947998

Token 133: ' #' (ID: 1069)
  Prédit: 'SEG'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'SEG' → logprob: -0.6265733242034912
    2. '   ' → logprob: -1.0015733242034912
    3. 'd' → logprob: -3.126573324203491
    4. ' SEG' → logprob: -3.626573324203491
    5. 'seg' → logprob: -4.12657356262207
    6. '
' → logprob: -5.50157356262207
    7. ' d' → logprob: -5.87657356262207
    8. '    
' → logprob: -6.62657356262207
    9. 'return' → logprob: -7.25157356262207
    10. ' seg' → logprob: -7.62657356262207

Token 134: ' SEG' (ID: 90192)
  Prédit: 'SEG'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SEG' → logprob: -0.07189387083053589
    2. ' SEG' → logprob: -3.3218939304351807
    3. 'seg' → logprob: -3.9468939304351807
    4. ' seg' → logprob: -5.446893692016602
    5. 'd' → logprob: -6.196893692016602
    6. 'size' → logprob: -6.196893692016602
    7. 'segment' → logprob: -6.696893692016602
    8. ' size' → logprob: -6.821893692016602
    9. '   ' → logprob: -6.821893692016602
    10. ' segment' → logprob: -7.446893692016602

Token 135: ' a' (ID: 261)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0001848254178185016
    2. '=' → logprob: -8.625185012817383
    3. ' ' → logprob: -13.000185012817383
    4. ' =[' → logprob: -13.500185012817383
    5. '[' → logprob: -14.500185012817383
    6. '_' → logprob: -15.375185012817383
    7. '   ' → logprob: -15.625185012817383
    8. ',' → logprob: -15.875185012817383
    9. ' =
' → logprob: -15.875185012817383
    10. ' ' → logprob: -16.250185012817383

Token 136: ' une' (ID: 2463)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008094288408756256
    2. '=' → logprob: -5.758094310760498
    3. '   ' → logprob: -6.133094310760498
    4. ' [' → logprob: -6.508094310760498
    5. ' ' → logprob: -7.883094310760498
    6. '=[' → logprob: -8.38309383392334
    7. ' =[' → logprob: -8.50809383392334
    8. '[' → logprob: -8.75809383392334
    9. '    ' → logprob: -8.75809383392334
    10. '  ' → logprob: -10.13309383392334

Token 137: ' taille' (ID: 41644)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.520351767539978
    2. 'size' → logprob: -1.270351767539978
    3. ' [' → logprob: -3.2703518867492676
    4. 'tail' → logprob: -3.2703518867492676
    5. ' size' → logprob: -3.5203518867492676
    6. '[i' → logprob: -5.145351886749268
    7. ' taille' → logprob: -5.520351886749268
    8. 'rray' → logprob: -6.020351886749268
    9. '[size' → logprob: -6.770351886749268
    10. 'i' → logprob: -7.020351886749268

Token 138: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22728696465492249
    2. '=' → logprob: -1.8522869348526
    3. ' (' → logprob: -3.9772870540618896
    4. '   ' → logprob: -4.2272868156433105
    5. ' ' → logprob: -4.6022868156433105
    6. '(' → logprob: -6.6022868156433105
    7. ',' → logprob: -7.6022868156433105
    8. '[' → logprob: -7.8522868156433105
    9. ' i' → logprob: -8.727287292480469
    10. '=(' → logprob: -8.727287292480469

Token 139: ' ' (ID: 220)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.1069271564483643
    2. '2' → logprob: -1.2319271564483643
    3. ' (' → logprob: -1.6069271564483643
    4. ' ' → logprob: -1.7319271564483643
    5. '   ' → logprob: -8.981926918029785
    6. ' i' → logprob: -10.106926918029785
    7. '1' → logprob: -10.606926918029785
    8. '0' → logprob: -11.606926918029785
    9. 'i' → logprob: -11.606926918029785
    10. '[' → logprob: -11.731926918029785

Token 140: '2' (ID: 17)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3231200575828552
    2. '2' → logprob: -1.5731201171875
    3. ' (' → logprob: -2.8231201171875
    4. ' ' → logprob: -4.6981201171875
    5. '   ' → logprob: -9.5731201171875
    6. '(i' → logprob: -9.6981201171875
    7. 'i' → logprob: -11.0731201171875
    8. ' i' → logprob: -11.1981201171875
    9. '0' → logprob: -12.4481201171875
    10. '`' → logprob: -12.4481201171875

Token 141: '*i' (ID: 51147)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.04537149518728256
    2. '*' → logprob: -3.2953715324401855
    3. '*i' → logprob: -4.9203715324401855
    4. 'i' → logprob: -12.420371055603027
    5. ' ' → logprob: -13.670371055603027
    6. '**' → logprob: -14.920371055603027
    7. '```' → logprob: -15.045371055603027
    8. '*object' → logprob: -15.545371055603027
    9. '`' → logprob: -15.545371055603027
    10. '*d' → logprob: -16.170372009277344

Token 142: '-' (ID: 12)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.2254316359758377
    2. '-' → logprob: -1.6004316806793213
    3. ' ' → logprob: -11.225431442260742
    4. ',' → logprob: -13.350431442260742
    5. ' ' → logprob: -13.475431442260742
    6. ')' → logprob: -13.725431442260742
    7. '+' → logprob: -14.850431442260742
    8. '   ' → logprob: -15.100431442260742
    9. '  ' → logprob: -15.600431442260742
    10. '*' → logprob: -16.037931442260742

Token 143: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009114635176956654
    2. ' ' → logprob: -7.000911235809326
    3. ' ' → logprob: -17.375911712646484
    4. '   ' → logprob: -17.625911712646484
    5. '  ' → logprob: -18.250911712646484
    6. '１' → logprob: -18.625911712646484
    7. '2' → logprob: -19.000911712646484
    8. '```' → logprob: -19.250911712646484
    9. '۱' → logprob: -19.500911712646484
    10. '    ' → logprob: -20.500911712646484

Token 144: ' pour' (ID: 1930)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0025685220025479794
    2. '
' → logprob: -7.00256872177124
    3. '    
' → logprob: -7.50256872177124
    4. '  
' → logprob: -8.002568244934082
    5. '   ' → logprob: -8.252568244934082
    6. ',' → logprob: -8.377568244934082
    7. ' 
' → logprob: -9.002568244934082
    8. '   
' → logprob: -9.627568244934082
    9. ',
' → logprob: -10.502568244934082
    10. '

' → logprob: -11.002568244934082

Token 145: ' représ' (ID: 31534)
  Prédit: ' stock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stock' → logprob: -0.682006299495697
    2. ' couvrir' → logprob: -2.182006359100342
    3. ' accueillir' → logprob: -2.682006359100342
    4. ' pouvoir' → logprob: -3.182006359100342
    5. ' représ' → logprob: -3.182006359100342
    6. '[' → logprob: -3.432006359100342
    7. 'stock' → logprob: -3.557006359100342
    8. '[]' → logprob: -3.557006359100342
    9. 'ac' → logprob: -3.682006359100342
    10. ' ac' → logprob: -3.932006359100342

Token 146: 'enter' (ID: 3547)
  Prédit: 'enter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enter' → logprob: -7.107425062713446e-06
    2. 'anter' → logprob: -12.625006675720215
    3. 'ent' → logprob: -13.250006675720215
    4. 'ENTER' → logprob: -13.500006675720215
    5. 'ente' → logprob: -16.00000762939453
    6. '   ' → logprob: -16.12500762939453
    7. 'entation' → logprob: -16.25000762939453
    8. ' enter' → logprob: -16.25000762939453
    9. 'inter' → logprob: -16.50000762939453
    10. 'Enter' → logprob: -17.37500762939453

Token 147: ' complètement' (ID: 81766)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.2570798993110657
    2. ' l' → logprob: -2.007079839706421
    3. ' le' → logprob: -3.257079839706421
    4. ' une' → logprob: -4.507080078125
    5. ' la' → logprob: -4.507080078125
    6. 'un' → logprob: -4.882080078125
    7. ' ' → logprob: -5.382080078125
    8. 'le' → logprob: -5.382080078125
    9. ' arbre' → logprob: -5.632080078125
    10. 'l' → logprob: -6.382080078125

Token 148: ' le' (ID: 505)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7647212743759155
    2. ' [' → logprob: -1.3897212743759155
    3. ' un' → logprob: -2.389721393585205
    4. ' i' → logprob: -3.139721393585205
    5. '   ' → logprob: -3.889721393585205
    6. ',' → logprob: -4.264721393585205
    7. 'le' → logprob: -4.264721393585205
    8. 'segment' → logprob: -4.264721393585205
    9. ' la' → logprob: -4.389721393585205
    10. '[i' → logprob: -4.764721393585205

Token 149: ' segment' (ID: 14806)
  Prédit: ' segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' segment' → logprob: -0.054044291377067566
    2. 'segment' → logprob: -3.554044246673584
    3. ' arbre' → logprob: -4.054044246673584
    4. 'ar' → logprob: -5.804044246673584
    5. ' tree' → logprob: -6.054044246673584
    6. ' seg' → logprob: -8.179044723510742
    7. 'tree' → logprob: -8.429044723510742
    8. 'seg' → logprob: -8.429044723510742
    9. ' complete' → logprob: -9.179044723510742
    10. ' binary' → logprob: -9.554044723510742

Token 150: ' tree' (ID: 8165)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.3762395679950714
    2. ' tree' → logprob: -1.751239538192749
    3. '_tree' → logprob: -2.626239538192749
    4. '_' → logprob: -2.751239538192749
    5. 's' → logprob: -6.626239776611328
    6. '   ' → logprob: -7.001239776611328
    7. 'ar' → logprob: -8.126239776611328
    8. ' ' → logprob: -8.751239776611328
    9. ' _' → logprob: -8.876239776611328
    10. ' arbre' → logprob: -9.126239776611328

Token 151: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04724219813942909
    2. '   ' → logprob: -3.2972421646118164
    3. '    
' → logprob: -4.922242164611816
    4. '  
' → logprob: -6.922242164611816
    5. '
' → logprob: -7.797242164611816
    6. '   
' → logprob: -8.672242164611816
    7. ' 
' → logprob: -9.047242164611816
    8. ',' → logprob: -9.672242164611816
    9. ',
' → logprob: -10.297242164611816
    10. '        
' → logprob: -10.922242164611816

Token 152: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45823797583580017
    2. '
' → logprob: -1.0832380056381226
    3. '    
' → logprob: -4.083238124847412
    4. 'SEG' → logprob: -4.958238124847412
    5. 'seg' → logprob: -6.583238124847412
    6. 'return' → logprob: -7.458238124847412
    7. ' SEG' → logprob: -7.458238124847412
    8. '  
' → logprob: -7.583238124847412
    9. ',' → logprob: -7.583238124847412
    10. ' 
' → logprob: -8.083237648010254

Token 153: ' return' (ID: 622)
  Prédit: 'SEG'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SEG' → logprob: -0.059531375765800476
    2. '   ' → logprob: -3.3095314502716064
    3. ' SEG' → logprob: -3.9345314502716064
    4. 'seg' → logprob: -7.059531211853027
    5. '
' → logprob: -7.809531211853027
    6. 'return' (adapté à ' return') → logprob: -9.184531211853027
    7. '    
' → logprob: -9.809531211853027
    8. '_SEG' → logprob: -9.809531211853027
    9. 'segment' → logprob: -9.934531211853027
    10. 'SE' → logprob: -10.559531211853027

Token 154: ' [' (ID: 723)
  Prédit: '(['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.610381543636322
    2. '[' → logprob: -1.3603816032409668
    3. ' [' → logprob: -1.8603816032409668
    4. ' ([' → logprob: -3.110381603240967
    5. '(' → logprob: -11.360381126403809
    6. '[i' → logprob: -11.360381126403809
    7. '   ' → logprob: -11.485381126403809
    8. ' ' → logprob: -11.610381126403809
    9. '[np' → logprob: -11.610381126403809
    10. ' (' → logprob: -11.610381126403809

Token 155: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '[' → logprob: -17.750001907348633
    4. '۰' → logprob: -18.250001907348633
    5. '   ' → logprob: -18.875001907348633
    6. ' [' → logprob: -19.687501907348633
    7. '
' → logprob: -19.937501907348633
    8. '```' → logprob: -20.000001907348633
    9. '    ' → logprob: -20.312501907348633
    10. '０' → logprob: -20.375001907348633

Token 156: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0009841008577495813
    2. ']*(' → logprob: -7.500984191894531
    3. ']*' → logprob: -7.750984191894531
    4. ' for' → logprob: -15.250984191894531
    5. ' ]' → logprob: -15.375984191894531
    6. '*' → logprob: -16.37598419189453
    7. ')' → logprob: -16.62598419189453
    8. 'for' → logprob: -16.75098419189453
    9. ']+' → logprob: -16.75098419189453
    10. '   ' → logprob: -17.00098419189453

Token 157: ' *' (ID: 425)
  Prédit: '*('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*(' → logprob: -0.5882625579833984
    2. '*' → logprob: -0.8382625579833984
    3. ' *' → logprob: -4.963262557983398
    4. ',' → logprob: -6.338262557983398
    5. '*i' → logprob: -6.838262557983398
    6. '*[' → logprob: -7.213262557983398
    7. ']*(' → logprob: -7.463262557983398
    8. '0' → logprob: -7.463262557983398
    9. '[' → logprob: -8.463262557983398
    10. '*((' → logprob: -9.713262557983398

Token 158: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -9.794061770662665e-05
    2. ' (' → logprob: -9.50009822845459
    3. '((' → logprob: -10.75009822845459
    4. '2' → logprob: -13.50009822845459
    5. '(int' → logprob: -16.500097274780273
    6. '(
' → logprob: -17.625097274780273
    7. '   ' → logprob: -17.625097274780273
    8. '{' → logprob: -18.000097274780273
    9. '[' → logprob: -19.000097274780273
    10. ' ' → logprob: -19.375097274780273

Token 159: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.112930066883564
    2. '(' → logprob: -2.2379300594329834
    3. ' ' → logprob: -9.487930297851562
    4. ' (' → logprob: -10.487930297851562
    5. '   ' → logprob: -12.612930297851562
    6. '((' → logprob: -15.362930297851562
    7. '```' → logprob: -16.362930297851562
    8. '[' → logprob: -16.362930297851562
    9. '{' → logprob: -16.612930297851562
    10. '  ' → logprob: -16.987930297851562

Token 160: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.22580836713314056
    2. '*i' → logprob: -1.7258083820343018
    3. ' *' → logprob: -3.7258083820343018
    4. '**' → logprob: -12.475808143615723
    5. '*object' → logprob: -14.725808143615723
    6. ' ' → logprob: -14.975808143615723
    7. '*a' → logprob: -15.350808143615723
    8. '*out' → logprob: -15.475808143615723
    9. '*j' → logprob: -15.600808143615723
    10. '*l' → logprob: -15.600808143615723

Token 161: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2014141082763672
    2. ' i' → logprob: -1.7014141082763672
    3. '	i' → logprob: -14.826414108276367
    4. '*i' → logprob: -14.826414108276367
    5. ' ' → logprob: -17.701414108276367
    6. '_i' → logprob: -17.951414108276367
    7. '<|end|>' → logprob: -18.201414108276367
    8. '{i' → logprob: -18.826414108276367
    9. '[i' → logprob: -19.201414108276367
    10. '   ' → logprob: -19.201414108276367

Token 162: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4740937054157257
    2. ' -' → logprob: -0.9740936756134033
    3. ')' → logprob: -11.349093437194824
    4. ' ' → logprob: -12.474093437194824
    5. '   ' → logprob: -14.724093437194824
    6. ')-' → logprob: -14.974093437194824
    7. '  ' → logprob: -16.59909439086914
    8. ' ' → logprob: -16.59909439086914
    9. '−' → logprob: -16.59909439086914
    10. '```' → logprob: -16.97409439086914

Token 163: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009115827269852161
    2. ' ' → logprob: -7.000911712646484
    3. '<|end|>' → logprob: -16.500911712646484
    4. '   ' → logprob: -17.125911712646484
    5. '```' → logprob: -18.625911712646484
    6. '  ' → logprob: -18.875911712646484
    7. ' ' → logprob: -19.250911712646484
    8. ')' → logprob: -19.688411712646484
    9. '
' → logprob: -20.188411712646484
    10. '۱' → logprob: -20.250911712646484

Token 164: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. '<|end|>' → logprob: -17.75
    4. '```' → logprob: -19.0
    5. '   ' → logprob: -19.25
    6. '۱' → logprob: -19.8125
    7. ')' → logprob: -20.875
    8. '१' → logprob: -21.0625
    9. '１' → logprob: -21.0625
    10. '  ' → logprob: -21.3125

Token 165: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002262901747599244
    2. '),' → logprob: -6.127263069152832
    3. ')' → logprob: -10.502263069152832
    4. ' ,' → logprob: -10.627263069152832
    5. ',i' → logprob: -10.627263069152832
    6. ',),' → logprob: -13.877263069152832
    7. ' ),' → logprob: -14.377263069152832
    8. '   ' → logprob: -16.127262115478516
    9. ' ' → logprob: -17.002262115478516
    10. '],' → logprob: -17.252262115478516

Token 166: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0031777136027812958
    2. ' i' → logprob: -5.753177642822266
    3. '	i' → logprob: -18.628177642822266
    4. '   ' → logprob: -19.128177642822266
    5. ' ' → logprob: -19.628177642822266
    6. ' ' → logprob: -20.378177642822266
    7. '_i' → logprob: -21.253177642822266
    8. '  ' → logprob: -21.753177642822266
    9. '```' → logprob: -22.003177642822266
    10. '*i' → logprob: -22.503177642822266

Token 167: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 168: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4837077558040619
    2. '<|end|>' → logprob: -1.3587077856063843
    3. '\n' → logprob: -2.9837076663970947
    4. 'def' → logprob: -3.6087076663970947
    5. '#' → logprob: -3.9837076663970947
    6. '```' → logprob: -4.983707904815674
    7. ' ' → logprob: -5.483707904815674
    8. ' 
' → logprob: -5.733707904815674
    9. '\' → logprob: -5.983707904815674
    10. '<|end|>' → logprob: -6.233707904815674

Token 169: ' update' (ID: 4027)
  Prédit: ' build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' build' → logprob: -0.6957613229751587
    2. ' update' → logprob: -0.6957613229751587
    3. 'update' → logprob: -6.695761203765869
    4. 'build' → logprob: -6.945761203765869
    5. ' query' → logprob: -8.945761680603027
    6. ' construct' → logprob: -9.445761680603027
    7. ' ' → logprob: -10.070761680603027
    8. ' construire' → logprob: -10.945761680603027
    9. ' main' → logprob: -11.070761680603027
    10. '   ' → logprob: -11.445761680603027

Token 170: '(i' (ID: 3649)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11768259853124619
    2. ' (' → logprob: -2.242682695388794
    3. '(S' → logprob: -6.492682456970215
    4. '(seg' → logprob: -6.867682456970215
    5. '(segment' → logprob: -7.367682456970215
    6. '_segment' → logprob: -8.242682456970215
    7. '(tree' → logprob: -8.242682456970215
    8. '_' → logprob: -8.242682456970215
    9. '(node' → logprob: -8.492682456970215
    10. ' ' → logprob: -8.617682456970215

Token 171: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013183351838961244
    2. ' ,' → logprob: -6.751318454742432
    3. 'index' → logprob: -10.251317977905273
    4. ',index' → logprob: -10.626317977905273
    5. '):' → logprob: -11.501317977905273
    6. '   ' → logprob: -11.751317977905273
    7. '_,' → logprob: -12.126317977905273
    8. 'idx' → logprob: -12.251317977905273
    9. ')' → logprob: -12.376317977905273
    10. 'n' → logprob: -12.501317977905273

Token 172: ' x' (ID: 1215)
  Prédit: ' pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pos' → logprob: -1.3252794742584229
    2. ' val' → logprob: -1.3252794742584229
    3. 'pos' → logprob: -1.9502794742584229
    4. ' value' → logprob: -2.075279474258423
    5. 'val' → logprob: -2.575279474258423
    6. 'value' → logprob: -3.075279474258423
    7. ' idx' → logprob: -3.950279474258423
    8. ' v' → logprob: -4.575279235839844
    9. 'index' → logprob: -4.700279235839844
    10. ' index' → logprob: -4.700279235839844

Token 173: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000546122610103339
    2. ' ,' → logprob: -7.875545978546143
    3. 's' → logprob: -10.3755464553833
    4. 'seg' → logprob: -11.0005464553833
    5. 'value' → logprob: -11.0005464553833
    6. 'tree' → logprob: -11.2505464553833
    7. '):' → logprob: -11.7505464553833
    8. 'd' → logprob: -12.0005464553833
    9. '_,' → logprob: -12.0005464553833
    10. 'index' → logprob: -12.3755464553833

Token 174: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2177022248506546
    2. ' global' → logprob: -2.2177021503448486
    3. 'global' → logprob: -2.5927021503448486
    4. 'def' → logprob: -4.717702388763428
    5. ' pass' → logprob: -6.717702388763428
    6. '    
' → logprob: -7.717702388763428
    7. '	global' → logprob: -7.967702388763428
    8. ' def' → logprob: -8.46770191192627
    9. 'pass' → logprob: -8.71770191192627
    10. ',' → logprob: -8.96770191192627

Token 175: ' """
' (ID: 7037)
  Prédit: ' global'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' global' → logprob: -0.8637527227401733
    2. '   ' → logprob: -0.9887527227401733
    3. 'global' → logprob: -2.363752841949463
    4. ' pass' → logprob: -2.738752841949463
    5. '    ' → logprob: -3.738752841949463
    6. 'pass' → logprob: -4.863752841949463
    7. ' ' → logprob: -5.613752841949463
    8. '    
' → logprob: -5.738752841949463
    9. ' #' → logprob: -6.363752841949463
    10. 'def' → logprob: -6.363752841949463

Token 176: '   ' (ID: 271)
  Prédit: 'global'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'global' → logprob: -0.5480743646621704
    2. ' global' → logprob: -1.5480743646621704
    3. '   ' → logprob: -2.298074245452881
    4. 'def' → logprob: -3.798074245452881
    5. '#' → logprob: -4.048074245452881
    6. 'seg' → logprob: -4.548074245452881
    7. 'segment' → logprob: -4.798074245452881
    8. 'SEG' → logprob: -4.798074245452881
    9. 'pos' → logprob: -5.173074245452881
    10. 'index' → logprob: -5.298074245452881

Token 177: ' Met' (ID: 7227)
  Prédit: 'global'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'global' → logprob: -0.9415035247802734
    2. '   ' → logprob: -1.4415035247802734
    3. 'pass' → logprob: -1.6915035247802734
    4. ' global' → logprob: -2.5665035247802734
    5. ' pass' → logprob: -2.5665035247802734
    6. 'def' → logprob: -3.8165035247802734
    7. '#' → logprob: -5.191503524780273
    8. 'segment' → logprob: -6.816503524780273
    9. ' ' → logprob: -6.941503524780273
    10. ' #' → logprob: -7.191503524780273

Token 178: ' à' (ID: 1221)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5910303592681885
    2. ' à' → logprob: -1.2160303592681885
    3. '   ' → logprob: -2.0910303592681885
    4. ' ' → logprob: -5.216030120849609
    5. '  ' → logprob: -5.466030120849609
    6. ' def' → logprob: -5.716030120849609
    7. 'ion' → logprob: -5.966030120849609
    8. ' a' → logprob: -6.091030120849609
    9. ',' → logprob: -6.341030120849609
    10. ' i' → logprob: -6.466030120849609

Token 179: ' jour' (ID: 8379)
  Prédit: 'jour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jour' → logprob: -0.0016581593081355095
    2. 'jou' → logprob: -6.751657962799072
    3. 'jours' → logprob: -8.62665843963623
    4. '```' → logprob: -8.87665843963623
    5. '   ' → logprob: -9.75165843963623
    6. ' jour' → logprob: -10.25165843963623
    7. 'j' → logprob: -10.37665843963623
    8. ' ' → logprob: -12.00165843963623
    9. ' ' → logprob: -12.25165843963623
    10. '_j' → logprob: -12.25165843963623

Token 180: ' la' (ID: 557)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4699566960334778
    2. '   ' → logprob: -2.719956636428833
    3. 'seg' → logprob: -2.719956636428833
    4. 'segment' → logprob: -3.219956636428833
    5. 'index' → logprob: -3.344956636428833
    6. '(seg' → logprob: -3.469956636428833
    7. 'SEG' → logprob: -3.594956636428833
    8. 'pos' → logprob: -4.094956874847412
    9. '(segment' → logprob: -4.594956874847412
    10. 'global' → logprob: -4.719956874847412

Token 181: ' lettre' (ID: 68013)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5014376044273376
    2. 'global' → logprob: -1.7514376640319824
    3. 'segment' → logprob: -2.7514376640319824
    4. 'pass' → logprob: -3.0014376640319824
    5. 'index' → logprob: -3.3764376640319824
    6. 'seg' → logprob: -4.001437664031982
    7. 'SEG' → logprob: -4.376437664031982
    8. '#' → logprob: -4.376437664031982
    9. 'value' → logprob: -4.501437664031982
    10. 'i' → logprob: -6.251437664031982

Token 182: ' à' (ID: 1221)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6246906518936157
    2. '(' → logprob: -2.999690532684326
    3. ' de' → logprob: -2.999690532684326
    4. ' ' → logprob: -2.999690532684326
    5. ',' → logprob: -3.124690532684326
    6. ' dans' → logprob: -3.124690532684326
    7. ' at' → logprob: -3.249690532684326
    8. ' du' → logprob: -3.374690532684326
    9. '(i' → logprob: -3.499690532684326
    10. '   ' → logprob: -3.874690532684326

Token 183: ' la' (ID: 557)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6411617994308472
    2. ' i' → logprob: -0.7661617994308472
    3. 'index' → logprob: -6.391161918640137
    4. 'l' → logprob: -6.391161918640137
    5. ' l' → logprob: -6.641161918640137
    6. ' la' → logprob: -7.016161918640137
    7. ' index' → logprob: -7.016161918640137
    8. ' position' → logprob: -7.266161918640137
    9. 'position' → logprob: -7.516161918640137
    10. ' ' → logprob: -8.266161918640137

Token 184: ' position' (ID: 4010)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.009539205580949783
    2. 'i' → logprob: -5.0095391273498535
    3. 'pos' → logprob: -6.7595391273498535
    4. ' position' → logprob: -7.1345391273498535
    5. 'index' → logprob: -8.009539604187012
    6. '   ' → logprob: -8.759539604187012
    7. ' i' → logprob: -8.884539604187012
    8. ' ' → logprob: -8.884539604187012
    9. 'indice' → logprob: -10.509539604187012
    10. '```' → logprob: -11.634539604187012

Token 185: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.26182663440704346
    2. ' ' → logprob: -1.7618266344070435
    3. ' (' → logprob: -4.011826515197754
    4. 'i' → logprob: -4.011826515197754
    5. '   ' → logprob: -5.136826515197754
    6. ' de' → logprob: -5.261826515197754
    7. '(i' → logprob: -5.386826515197754
    8. '  ' → logprob: -6.386826515197754
    9. '(' → logprob: -6.636826515197754
    10. ' dans' → logprob: -7.011826515197754

Token 186: ' de' (ID: 334)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10339460521936417
    2. ' dans' → logprob: -2.9783945083618164
    3. ' ,' → logprob: -3.3533945083618164
    4. 'dans' → logprob: -4.853394508361816
    5. ' ' → logprob: -6.478394508361816
    6. ' de' → logprob: -7.603394508361816
    7. ' i' → logprob: -7.728394508361816
    8. ' du' → logprob: -8.103394508361816
    9. ',
' → logprob: -8.603394508361816
    10. ' (' → logprob: -8.603394508361816

Token 187: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.6925173997879028
    2. 'SEG' → logprob: -1.6925173997879028
    3. 'la' → logprob: -1.8175173997879028
    4. ' the' → logprob: -3.4425172805786133
    5. ' SEG' → logprob: -3.4425172805786133
    6. 'the' → logprob: -3.9425172805786133
    7. 'segment' → logprob: -4.192517280578613
    8. 'le' → logprob: -4.442517280578613
    9. 'seg' → logprob: -4.692517280578613
    10. ' segment' → logprob: -5.067517280578613

Token 188: ' chaîne' (ID: 89288)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.6141210794448853
    2. ' chaîne' → logprob: -1.3641210794448853
    3. 'cha' → logprob: -1.9891210794448853
    4. 'string' → logprob: -4.114120960235596
    5. 'segment' → logprob: -4.489120960235596
    6. 'seg' → logprob: -4.739120960235596
    7. ' chaine' → logprob: -4.739120960235596
    8. 'SEG' → logprob: -5.239120960235596
    9. 'ch' → logprob: -5.489120960235596
    10. 'chain' → logprob: -6.364120960235596

Token 189: ' dans' (ID: 2671)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.28739607334136963
    2. ' ,' → logprob: -1.5373960733413696
    3. '   ' → logprob: -4.03739595413208
    4. ' ' → logprob: -5.16239595413208
    5. ' (' → logprob: -5.91239595413208
    6. 'def' → logprob: -6.53739595413208
    7. ' in' → logprob: -7.28739595413208
    8. '<|end|>' → logprob: -7.28739595413208
    9. '_' → logprob: -7.41239595413208
    10. 's' → logprob: -7.78739595413208

Token 190: ' l' (ID: 305)
  Prédit: 'SEG'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'SEG' → logprob: -0.39580225944519043
    2. ' SEG' → logprob: -2.1458022594451904
    3. ' le' → logprob: -2.2708022594451904
    4. ' la' → logprob: -3.2708022594451904
    5. 'def' → logprob: -4.1458024978637695
    6. 'le' → logprob: -4.3958024978637695
    7. 'seg' → logprob: -4.3958024978637695
    8. 'segment' → logprob: -5.0208024978637695
    9. ' segment' → logprob: -5.5208024978637695
    10. ' the' → logprob: -5.6458024978637695

Token 191: ''ar' (ID: 54307)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.5371494889259338
    2. 'a' → logprob: -1.162149429321289
    3. ' segment' → logprob: -3.037149429321289
    4. ''' → logprob: -4.162149429321289
    5. ' global' → logprob: -4.537149429321289
    6. ' SEG' → logprob: -4.912149429321289
    7. ' def' → logprob: -5.912149429321289
    8. '_SEG' → logprob: -6.287149429321289
    9. 'def' → logprob: -6.412149429321289
    10. ' a' → logprob: -6.537149429321289

Token 192: 'bre' (ID: 9945)
  Prédit: 'bre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bre' → logprob: -0.008520251139998436
    2. 'bo' → logprob: -5.383520126342773
    3. 'ray' → logprob: -6.258520126342773
    4. 'g' → logprob: -6.758520126342773
    5. 'e' → logprob: -8.633520126342773
    6. 'gv' → logprob: -9.258520126342773
    7. 'b' → logprob: -9.508520126342773
    8. 'r' → logprob: -9.508520126342773
    9. 'BRE' → logprob: -9.758520126342773
    10. 'bres' → logprob: -9.758520126342773

Token 193: ' segment' (ID: 14806)
  Prédit: ' segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' segment' → logprob: -0.947642982006073
    2. 'segment' → logprob: -2.0726430416107178
    3. '   ' → logprob: -2.3226430416107178
    4. ',' → logprob: -2.9476430416107178
    5. ' de' → logprob: -3.1976430416107178
    6. '_SEG' → logprob: -3.1976430416107178
    7. ' SEG' → logprob: -3.1976430416107178
    8. '_segment' → logprob: -3.4476430416107178
    9. ' ' → logprob: -3.5726430416107178
    10. ' ,' → logprob: -3.9476430416107178

Token 194: 'aire' (ID: 8189)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.059373900294303894
    2. ',' → logprob: -3.0593738555908203
    3. '   ' → logprob: -5.43437385559082
    4. 't' → logprob: -6.55937385559082
    5. ' e' → logprob: -7.30937385559082
    6. ' ' → logprob: -7.30937385559082
    7. '_' → logprob: -7.55937385559082
    8. 'tree' → logprob: -7.55937385559082
    9. ' ,' → logprob: -7.68437385559082
    10. 'es' → logprob: -7.80937385559082

Token 195: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8678814172744751
    2. ',' → logprob: -1.492881417274475
    3. ':' → logprob: -1.492881417274475
    4. 'def' → logprob: -2.3678812980651855
    5. '(seg' → logprob: -4.3678812980651855
    6. ':
' → logprob: -4.7428812980651855
    7. '(segment' → logprob: -5.9928812980651855
    8. '):' → logprob: -6.1178812980651855
    9. ' :' → logprob: -6.1178812980651855
    10. '(' → logprob: -7.2428812980651855

Token 196: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18582755327224731
    2. '<|end|>' → logprob: -2.1858274936676025
    3. 'def' → logprob: -3.5608274936676025
    4. '    
' → logprob: -4.560827732086182
    5. ' 
' → logprob: -5.685827732086182
    6. ')' → logprob: -5.935827732086182
    7. ' pass' → logprob: -6.060827732086182
    8. '
' → logprob: -6.310827732086182
    9. '<|end|>' → logprob: -6.685827732086182
    10. ' ' → logprob: -6.810827732086182

Token 197: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0783863067626953
    2. ' global' → logprob: -1.0783863067626953
    3. 'global' → logprob: -1.2033863067626953
    4. ' pass' → logprob: -4.578386306762695
    5. 'def' → logprob: -5.703386306762695
    6. 'pass' → logprob: -6.078386306762695
    7. ' index' → logprob: -7.203386306762695
    8. 'index' → logprob: -7.578386306762695
    9. ' def' → logprob: -8.328386306762695
    10. ' segment' → logprob: -8.328386306762695

Token 198: ' Args' (ID: 39185)
  Prédit: 'global'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'global' → logprob: -0.06182694435119629
    2. 'def' → logprob: -3.0618269443511963
    3. 'index' → logprob: -6.186826705932617
    4. 'pos' → logprob: -6.311826705932617
    5. 'seg' → logprob: -6.311826705932617
    6. 'segment' → logprob: -6.311826705932617
    7. '#' → logprob: -6.561826705932617
    8. 'SEG' → logprob: -7.061826705932617
    9. '   ' → logprob: -7.186826705932617
    10. 'd' → logprob: -7.186826705932617

Token 199: ':
' (ID: 734)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018771719187498093
    2. '   ' → logprob: -4.643771648406982
    3. ':' → logprob: -5.268771648406982
    4. '):' → logprob: -6.643771648406982
    5. '):
' → logprob: -7.643771648406982
    6. 'def' → logprob: -7.893771648406982
    7. '[i' → logprob: -8.14377212524414
    8. ' (' → logprob: -8.39377212524414
    9. ',i' → logprob: -8.51877212524414
    10. ' ,' → logprob: -8.64377212524414

Token 200: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07593664526939392
    2. '    ' → logprob: -3.2009365558624268
    3. ' i' → logprob: -3.7009365558624268
    4. '       ' → logprob: -5.075936794281006
    5. ' index' → logprob: -7.950936794281006
    6. 'i' → logprob: -8.450936317443848
    7. '    
' → logprob: -8.700936317443848
    8. 'index' → logprob: -9.075936317443848
    9. ',' → logprob: -9.325936317443848
    10. ' ' → logprob: -9.825936317443848

Token 201: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.09738194942474365
    2. 'index' → logprob: -2.722382068634033
    3. ' i' → logprob: -4.347382068634033
    4. 'pos' → logprob: -5.472382068634033
    5. 'position' → logprob: -5.597382068634033
    6. ' index' → logprob: -5.972382068634033
    7. '   ' → logprob: -6.597382068634033
    8. 'idx' → logprob: -6.722382068634033
    9. 'indice' → logprob: -7.972382068634033
    10. ' position' → logprob: -8.347381591796875

Token 202: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1809290200471878
    2. ' ,' → logprob: -2.055928945541382
    3. ' (' → logprob: -3.555928945541382
    4. ':int' → logprob: -5.555929183959961
    5. ':' → logprob: -6.180929183959961
    6. '(int' → logprob: -7.305929183959961
    7. ' :' → logprob: -7.305929183959961
    8. '   ' → logprob: -7.680929183959961
    9. 'int' → logprob: -7.680929183959961
    10. ',int' → logprob: -7.930929183959961

Token 203: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -4.961759259458631e-06
    2. ' int' → logprob: -12.250004768371582
    3. 'i' → logprob: -17.7500057220459
    4. '[int' → logprob: -17.8750057220459
    5. '   ' → logprob: -18.1250057220459
    6. ':int' → logprob: -18.3750057220459
    7. '=int' → logprob: -18.8750057220459
    8. ')' → logprob: -19.0000057220459
    9. ',int' → logprob: -19.1250057220459
    10. 'index' → logprob: -19.5000057220459

Token 204: '):' (ID: 3127)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002251007128506899
    2. ' ,' → logprob: -6.127251148223877
    3. '),' → logprob: -11.002250671386719
    4. ',
' → logprob: -11.752250671386719
    5. '   ' → logprob: -11.877250671386719
    6. ')' → logprob: -12.002250671386719
    7. '):' → logprob: -12.002250671386719
    8. ' ' → logprob: -12.502250671386719
    9. ',int' → logprob: -12.627250671386719
    10. ',x' → logprob: -13.127250671386719

Token 205: ' L' (ID: 451)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.615394651889801
    2. ' int' → logprob: -0.865394651889801
    3. ' ' → logprob: -4.240394592285156
    4. ' index' → logprob: -4.740394592285156
    5. ' position' → logprob: -5.115394592285156
    6. 'index' → logprob: -5.615394592285156
    7. ' i' → logprob: -6.240394592285156
    8. '    ' → logprob: -7.115394592285156
    9. 'position' → logprob: -7.365394592285156
    10. ' L' → logprob: -7.865394592285156

Token 206: ''ind' (ID: 82245)
  Prédit: ' index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' index' → logprob: -0.024517251178622246
    2. 'index' → logprob: -4.274517059326172
    3. ' indice' → logprob: -5.274517059326172
    4. ' ' → logprob: -7.024517059326172
    5. 'indice' → logprob: -7.024517059326172
    6. ' position' → logprob: -7.274517059326172
    7. ''' → logprob: -7.399517059326172
    8. 'e' → logprob: -7.524517059326172
    9. ''ind' → logprob: -7.774517059326172
    10. 'a' → logprob: -8.899517059326172

Token 207: 'ice' (ID: 603)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.28127849102020264
    2. 'ice' → logprob: -1.4062784910202026
    3. 'ices' → logprob: -10.156278610229492
    4. 'index' → logprob: -10.406278610229492
    5. 'e' → logprob: -11.406278610229492
    6. 'é' → logprob: -11.656278610229492
    7. 'ic' → logprob: -11.781278610229492
    8. '   ' → logprob: -12.156278610229492
    9. 'exe' → logprob: -12.781278610229492
    10. 'dex' → logprob: -13.156278610229492

Token 208: ' (' (ID: 350)
  Prédit: ' ,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ,' → logprob: -0.5788383483886719
    2. ',' → logprob: -0.8288383483886719
    3. '   ' → logprob: -7.328838348388672
    4. ' de' → logprob: -7.703838348388672
    5. ')' → logprob: -7.828838348388672
    6. ' )' → logprob: -8.328838348388672
    7. '<|end|>' → logprob: -8.703838348388672
    8. ' des' → logprob: -8.828838348388672
    9. ' ' → logprob: -9.078838348388672
    10. ',
' → logprob: -9.453838348388672

Token 209: '0' (ID: 15)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6622429490089417
    2. ',' → logprob: -1.9122428894042969
    3. ' )' → logprob: -2.287242889404297
    4. '0' → logprob: -2.662242889404297
    5. ' ,' → logprob: -2.912242889404297
    6. ' position' → logprob: -3.537242889404297
    7. '   ' → logprob: -4.162242889404297
    8. ' ' → logprob: -4.287242889404297
    9. 'position' → logprob: -4.537242889404297
    10. 'int' → logprob: -4.787242889404297

Token 210: '-based' (ID: 8235)
  Prédit: '-based'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-based' → logprob: -0.6129832863807678
    2. ')' → logprob: -1.487983226776123
    3. ' <=' → logprob: -1.987983226776123
    4. 'based' → logprob: -3.112983226776123
    5. '<=' → logprob: -3.987983226776123
    6. ' )' → logprob: -4.487983226776123
    7. '-index' → logprob: -4.862983226776123
    8. ')-' → logprob: -5.112983226776123
    9. 'Based' → logprob: -5.987983226776123
    10. '-' → logprob: -7.112983226776123

Token 211: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006840049289166927
    2. ' )' → logprob: -5.006840229034424
    3. ')
' → logprob: -10.006839752197266
    4. ',' → logprob: -10.881839752197266
    5. '   ' → logprob: -11.256839752197266
    6. 'index' → logprob: -11.506839752197266
    7. '):
' → logprob: -11.881839752197266
    8. '```' → logprob: -12.381839752197266
    9. ' ' → logprob: -12.506839752197266
    10. ' index' → logprob: -12.631839752197266

Token 212: ' du' (ID: 1462)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0840500071644783
    2. ' ,' → logprob: -3.334049940109253
    3. ')' → logprob: -3.584049940109253
    4. '<|end|>' → logprob: -4.834050178527832
    5. '   ' → logprob: -5.584050178527832
    6. ',
' → logprob: -6.209050178527832
    7. ' ' → logprob: -6.459050178527832
    8. '  ' → logprob: -8.084050178527832
    9. ' )' → logprob: -8.334050178527832
    10. '),' → logprob: -8.334050178527832

Token 213: ' caractère' (ID: 80509)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.9817453622817993
    2. ' segment' → logprob: -1.3567453622817993
    3. 'car' → logprob: -1.7317453622817993
    4. 'x' → logprob: -3.1067452430725098
    5. ' caractère' → logprob: -3.3567452430725098
    6. 'i' → logprob: -3.3567452430725098
    7. ' i' → logprob: -4.10674524307251
    8. 'élé' → logprob: -4.10674524307251
    9. 'point' → logprob: -4.98174524307251
    10. 'la' → logprob: -5.48174524307251

Token 214: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.07284947484731674
    2. ' )' → logprob: -3.8228495121002197
    3. ' ,' → logprob: -3.8228495121002197
    4. ')' → logprob: -4.572849273681641
    5. ',' → logprob: -4.947849273681641
    6. ' de' → logprob: -6.072849273681641
    7. ' ' → logprob: -6.447849273681641
    8. ' dans' → logprob: -6.572849273681641
    9. 'à' → logprob: -7.822849273681641
    10. ' to' → logprob: -7.947849273681641

Token 215: ' modifier' (ID: 37684)
  Prédit: 'mettre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mettre' → logprob: -0.5247154235839844
    2. ' mettre' → logprob: -0.8997154235839844
    3. 'modifier' → logprob: -7.274715423583984
    4. ' modifier' → logprob: -8.274715423583984
    5. 'met' → logprob: -8.524715423583984
    6. ' updater' → logprob: -9.524715423583984
    7. '   ' → logprob: -9.649715423583984
    8. ' update' → logprob: -9.899715423583984
    9. 'update' → logprob: -10.024715423583984
    10. ' ' → logprob: -10.149715423583984

Token 216: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47833824157714844
    2. ',' → logprob: -1.1033382415771484
    3. '   ' → logprob: -3.6033382415771484
    4. ')
' → logprob: -4.103338241577148
    5. ',
' → logprob: -6.978338241577148
    6. '<|end|>' → logprob: -7.103338241577148
    7. ' ,' → logprob: -7.603338241577148
    8. '):
' → logprob: -7.728338241577148
    9. ' )' → logprob: -7.978338241577148
    10. '),' → logprob: -8.103338241577148

Token 217: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1770414561033249
    2. '    
' → logprob: -3.177041530609131
    3. ' 
' → logprob: -3.302041530609131
    4. '  
' → logprob: -3.677041530609131
    5. ' x' → logprob: -4.427041530609131
    6. 'x' → logprob: -5.427041530609131
    7. '   
' → logprob: -5.427041530609131
    8. 'value' → logprob: -5.677041530609131
    9. 'def' → logprob: -5.802041530609131
    10. '
' → logprob: -5.802041530609131

Token 218: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.000644764571916312
    2. ' x' → logprob: -7.375644683837891
    3. '   ' → logprob: -11.75064468383789
    4. 'value' → logprob: -12.75064468383789
    5. '```' → logprob: -13.12564468383789
    6. ' ' → logprob: -14.12564468383789
    7. 'def' → logprob: -14.12564468383789
    8. 'n' → logprob: -14.62564468383789
    9. 'val' → logprob: -14.75064468383789
    10. 'c' → logprob: -15.12564468383789

Token 219: ' (' (ID: 350)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5408530235290527
    2. '):' → logprob: -0.9158530235290527
    3. ' ):' → logprob: -5.290853023529053
    4. ',' → logprob: -5.540853023529053
    5. ' )' → logprob: -5.790853023529053
    6. '):
' → logprob: -6.290853023529053
    7. ':' → logprob: -6.540853023529053
    8. ' ' → logprob: -7.165853023529053
    9. ' :' → logprob: -7.790853023529053
    10. '   ' → logprob: -8.165853500366211

Token 220: 'str' (ID: 689)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.9004798531532288
    2. 'str' → logprob: -1.025479793548584
    3. ')' → logprob: -1.775479793548584
    4. '1' → logprob: -3.275479793548584
    5. ' str' → logprob: -4.525479793548584
    6. ' int' → logprob: -5.275479793548584
    7. 'ord' → logprob: -5.650479793548584
    8. ' )' → logprob: -6.275479793548584
    9. '')' → logprob: -6.525479793548584
    10. ' ord' → logprob: -7.150479793548584

Token 221: '):' (ID: 3127)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006049312651157379
    2. '')' → logprob: -6.006049156188965
    3. '):' → logprob: -6.131049156188965
    4. '):
' → logprob: -7.631049156188965
    5. ''' → logprob: -8.006049156188965
    6. '   ' → logprob: -8.631049156188965
    7. ' )' → logprob: -8.881049156188965
    8. '")' → logprob: -9.756049156188965
    9. '[' → logprob: -10.256049156188965
    10. ''):' → logprob: -10.631049156188965

Token 222: ' Le' (ID: 2018)
  Prédit: ' ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.2922684848308563
    2. ''' → logprob: -2.0422685146331787
    3. ' x' → logprob: -2.6672685146331787
    4. ' ' → logprob: -3.4172685146331787
    5. '"' → logprob: -5.2922682762146
    6. ' "' → logprob: -5.2922682762146
    7. '   ' → logprob: -5.6672682762146
    8. ')' → logprob: -6.0422682762146
    9. 'x' → logprob: -6.5422682762146
    10. ''x' → logprob: -7.2922682762146

Token 223: ' nouveau' (ID: 23184)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.49566391110420227
    2. ' ' → logprob: -2.37066388130188
    3. 'value' → logprob: -2.99566388130188
    4. ' valeur' → logprob: -3.24566388130188
    5. ' value' → logprob: -3.37066388130188
    6. ' code' → logprob: -3.49566388130188
    7. ' val' → logprob: -3.62066388130188
    8. ' nouveau' → logprob: -3.74566388130188
    9. 'car' → logprob: -3.87066388130188
    10. ' new' → logprob: -3.87066388130188

Token 224: ' caractère' (ID: 80509)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.29502972960472107
    2. ')' → logprob: -1.9200297594070435
    3. ' caractère' → logprob: -3.170029640197754
    4. ' )' → logprob: -3.545029640197754
    5. ' caract' → logprob: -4.670029640197754
    6. '<|end|>' → logprob: -5.170029640197754
    7. 'car' → logprob: -5.170029640197754
    8. '  ' → logprob: -5.295029640197754
    9. 'token' → logprob: -6.170029640197754
    10. '   ' → logprob: -6.545029640197754

Token 225: ' à' (ID: 1221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01616152748465538
    2. '   ' → logprob: -4.7661614418029785
    3. '')' → logprob: -5.6411614418029785
    4. '<|end|>' → logprob: -6.0161614418029785
    5. ''' → logprob: -7.7661614418029785
    6. '")' → logprob: -7.8911614418029785
    7. ' ' → logprob: -9.016161918640137
    8. ' )' → logprob: -9.016161918640137
    9. ')
' → logprob: -9.141161918640137
    10. ',' → logprob: -9.891161918640137

Token 226: ' placer' (ID: 55591)
  Prédit: 'mettre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mettre' → logprob: -0.6291373372077942
    2. 'aff' → logprob: -1.2541372776031494
    3. 'aj' → logprob: -1.8791372776031494
    4. 'assign' → logprob: -4.2541375160217285
    5. ' mettre' → logprob: -5.6291375160217285
    6. '   ' → logprob: -6.2541375160217285
    7. 'modifier' → logprob: -6.2541375160217285
    8. 'ins' → logprob: -6.3791375160217285
    9. ' ajouter' → logprob: -7.3791375160217285
    10. ' ins' → logprob: -7.3791375160217285

Token 227: ' à' (ID: 1221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09679257124662399
    2. '   ' → logprob: -2.846792459487915
    3. '):
' → logprob: -4.346792697906494
    4. '')' → logprob: -4.721792697906494
    5. ')
' → logprob: -5.221792697906494
    6. '):' → logprob: -5.721792697906494
    7. ' )' → logprob: -7.346792697906494
    8. '")' → logprob: -7.596792697906494
    9. ''' → logprob: -7.721792697906494
    10. '"""
' → logprob: -7.971792697906494

Token 228: ' la' (ID: 557)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.059766869992017746
    2. 'l' → logprob: -3.3097667694091797
    3. ' i' → logprob: -4.43476676940918
    4. 'la' → logprob: -5.43476676940918
    5. '   ' → logprob: -6.55976676940918
    6. ' la' → logprob: -6.68476676940918
    7. ' l' → logprob: -7.05976676940918
    8. ' ' → logprob: -7.18476676940918
    9. 'position' → logprob: -7.68476676940918
    10. 'c' → logprob: -8.43476676940918

Token 229: ' position' (ID: 4010)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.05404305085539818
    2. 'i' → logprob: -3.3040430545806885
    3. ' position' → logprob: -5.179042816162109
    4. '   ' → logprob: -5.679042816162109
    5. ' i' → logprob: -6.304042816162109
    6. 'pos' → logprob: -6.429042816162109
    7. ' ' → logprob: -6.804042816162109
    8. 'update' → logprob: -7.804042816162109
    9. '[i' → logprob: -8.67904281616211
    10. 'modifier' → logprob: -8.80404281616211

Token 230: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6946226358413696
    2. ' i' → logprob: -1.1946226358413696
    3. ')' → logprob: -1.9446226358413696
    4. '   ' → logprob: -3.19462251663208
    5. ' )' → logprob: -4.94462251663208
    6. ' ' → logprob: -5.81962251663208
    7. ')
' → logprob: -6.69462251663208
    8. '  ' → logprob: -7.44462251663208
    9. ',' → logprob: -8.069622993469238
    10. '(i' → logprob: -8.194622993469238

Token 231: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5975648164749146
    2. '):' → logprob: -1.0975648164749146
    3. '):
' → logprob: -2.222564697265625
    4. '   ' → logprob: -4.972564697265625
    5. ')
' → logprob: -8.847564697265625
    6. ''):' → logprob: -8.847564697265625
    7. ' ):' → logprob: -9.472564697265625
    8. ' ' → logprob: -9.722564697265625
    9. ' )' → logprob: -9.847564697265625
    10. '')' → logprob: -10.097564697265625

Token 232: '        
' (ID: 3564)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010735335759818554
    2. '    
' → logprob: -5.760735511779785
    3. ')' → logprob: -6.010735511779785
    4. 'def' → logprob: -6.135735511779785
    5. '
' → logprob: -7.010735511779785
    6. 'global' → logprob: -7.135735511779785
    7. '  
' → logprob: -8.635735511779785
    8. ':' → logprob: -8.760735511779785
    9. ':
' → logprob: -8.760735511779785
    10. ')
' → logprob: -8.760735511779785

Token 233: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4649720788002014
    2. 'global' → logprob: -1.0899720191955566
    3. ' global' → logprob: -3.4649720191955566
    4. 'pass' → logprob: -6.339972019195557
    5. 'non' → logprob: -7.589972019195557
    6. '    
' → logprob: -7.964972019195557
    7. 'def' → logprob: -8.089972496032715
    8. ' pass' → logprob: -8.339972496032715
    9. ')' → logprob: -8.464972496032715
    10. ' non' → logprob: -8.714972496032715

Token 234: ' Eff' (ID: 33330)
  Prédit: 'global'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'global' → logprob: -0.4191030263900757
    2. '   ' → logprob: -1.6691030263900757
    3. '#' → logprob: -2.7941031455993652
    4. '"""
' → logprob: -3.0441031455993652
    5. 'pass' → logprob: -4.294103145599365
    6. '"""' → logprob: -4.919103145599365
    7. 'segment' → logprob: -5.044103145599365
    8. 'def' → logprob: -5.419103145599365
    9. 'i' → logprob: -6.294103145599365
    10. ' global' → logprob: -6.669103145599365

Token 235: 'et' (ID: 292)
  Prédit: 'ect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.057603735476732254
    2. 'ct' → logprob: -4.05760383605957
    3. 't' → logprob: -4.30760383605957
    4. 'et' → logprob: -4.93260383605957
    5. '   ' → logprob: -5.05760383605957
    6. 'ects' → logprob: -5.05760383605957
    7. 'ic' → logprob: -6.30760383605957
    8. 'ace' → logprob: -7.30760383605957
    9. ' ' → logprob: -7.68260383605957
    10. 'ec' → logprob: -8.05760383605957

Token 236: ' de' (ID: 334)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5903604030609131
    2. 's' → logprob: -1.840360403060913
    3. '   ' → logprob: -1.840360403060913
    4. ' :' → logprob: -2.840360403060913
    5. ' =' → logprob: -3.715360403060913
    6. ':
' → logprob: -3.840360403060913
    7. ' :
' → logprob: -4.965360641479492
    8. 'def' → logprob: -5.215360641479492
    9. '=' → logprob: -6.465360641479492
    10. '<|end|>' → logprob: -6.840360641479492

Token 237: ' bord' (ID: 26431)
  Prédit: ' update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' update' → logprob: -0.5922551155090332
    2. 'update' → logprob: -1.3422551155090332
    3. ' global' → logprob: -2.592255115509033
    4. 'global' → logprob: -3.467255115509033
    5. ' la' → logprob: -3.967255115509033
    6. 'def' → logprob: -4.217255115509033
    7. ' def' → logprob: -4.342255115509033
    8. ':' → logprob: -5.592255115509033
    9. '(update' → logprob: -5.842255115509033
    10. ' None' → logprob: -6.217255115509033

Token 238: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06299718469381332
    2. ' :' → logprob: -2.8129971027374268
    3. ':
' → logprob: -7.312997341156006
    4. ' :
' → logprob: -8.312996864318848
    5. '   ' → logprob: -9.562996864318848
    6. ' ' → logprob: -10.437996864318848
    7. ' ' → logprob: -12.187996864318848
    8. ':def' → logprob: -13.187996864318848
    9. 's' → logprob: -13.562996864318848
    10. 'def' → logprob: -13.687996864318848

Token 239: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009477207437157631
    2. '    
' → logprob: -5.634477138519287
    3. ' global' → logprob: -5.884477138519287
    4. '    ' → logprob: -7.134477138519287
    5. ' ' → logprob: -7.384477138519287
    6. ' 
' → logprob: -7.759477138519287
    7. '   ' → logprob: -8.259477615356445
    8. ' pass' → logprob: -8.884477615356445
    9. '```' → logprob: -9.259477615356445
    10. ' ' → logprob: -9.259477615356445

Token 240: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' (adapté à ' Mod') → logprob: -0.7347514033317566
    2. 'Met' → logprob: -0.9847514033317566
    3. 'mod' → logprob: -2.8597514629364014
    4. ' mod' → logprob: -3.4847514629364014
    5. ' Mod' → logprob: -4.609751224517822
    6. ' Met' → logprob: -4.984751224517822
    7. ' met' → logprob: -5.109751224517822
    8. 'M' → logprob: -5.109751224517822
    9. 'global' → logprob: -5.109751224517822
    10. ' global' → logprob: -5.234751224517822

Token 241: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -1.4974866644479334e-05
    2. 'if' → logprob: -11.375015258789062
    3. 'ifies' → logprob: -13.375015258789062
    4. '   ' → logprob: -14.000015258789062
    5. 'ifier' → logprob: -14.625015258789062
    6. 'ify' → logprob: -15.625015258789062
    7. 'i' → logprob: -15.875015258789062
    8. 'ife' → logprob: -16.750015258789062
    9. 'ifié' → logprob: -16.875015258789062
    10. 'ifiez' → logprob: -16.875015258789062

Token 242: ' SEG' (ID: 90192)
  Prédit: ' global'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' global' → logprob: -0.37185776233673096
    2. 'global' → logprob: -1.246857762336731
    3. ' le' → logprob: -4.871857643127441
    4. 'le' → logprob: -5.371857643127441
    5. '   ' → logprob: -5.496857643127441
    6. ' la' → logprob: -5.621857643127441
    7. 'la' → logprob: -7.871857643127441
    8. ' l' → logprob: -7.996857643127441
    9. 'l' → logprob: -8.121857643127441
    10. '	global' → logprob: -8.371857643127441

Token 243: ' pour' (ID: 1930)
  Prédit: 'global'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'global' → logprob: -0.6354511380195618
    2. '[i' → logprob: -1.510451078414917
    3. '   ' → logprob: -2.010451078414917
    4. '[' → logprob: -2.885451078414917
    5. ' global' → logprob: -3.260451078414917
    6. ':' → logprob: -4.885451316833496
    7. 'def' → logprob: -5.135451316833496
    8. '	global' → logprob: -6.260451316833496
    9. ':
' → logprob: -6.635451316833496
    10. '_global' → logprob: -7.010451316833496

Token 244: ' refl' (ID: 115512)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -1.4148471355438232
    2. ' refl' → logprob: -1.4148471355438232
    3. 'mettre' → logprob: -1.5398471355438232
    4. 'ré' → logprob: -2.0398471355438232
    5. 'reflect' → logprob: -2.5398471355438232
    6. 'y' → logprob: -3.5398471355438232
    7. ' y' → logprob: -3.9148471355438232
    8. ' mettre' → logprob: -4.414847373962402
    9. 'ref' → logprob: -4.664847373962402
    10. 'prendre' → logprob: -5.164847373962402

Token 245: 'éter' (ID: 73737)
  Prédit: 'éter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éter' → logprob: -0.001226062304340303
    2. 'eter' → logprob: -7.00122594833374
    3. 'è' → logprob: -8.251226425170898
    4. 'ète' → logprob: -10.501226425170898
    5. 'é' → logprob: -11.126226425170898
    6. 'etter' → logprob: -13.376226425170898
    7. 'êter' → logprob: -13.376226425170898
    8. '\' → logprob: -13.626226425170898
    9. '#' → logprob: -13.751226425170898
    10. '"' → logprob: -13.876226425170898

Token 246: ' le' (ID: 505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.050654336810112
    2. ' le' → logprob: -3.800654411315918
    3. ' l' → logprob: -3.925654411315918
    4. '   ' → logprob: -5.925654411315918
    5. 'la' → logprob: -5.925654411315918
    6. 'le' → logprob: -6.925654411315918
    7. ' les' → logprob: -7.675654411315918
    8. 'l' → logprob: -8.050654411315918
    9. '    ' → logprob: -9.675654411315918
    10. ' ' → logprob: -10.300654411315918

Token 247: ' changement' (ID: 61912)
  Prédit: ' changement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' changement' → logprob: -0.014168326742947102
    2. ' nouveau' → logprob: -4.8891682624816895
    3. 'ch' → logprob: -6.6391682624816895
    4. ' ' → logprob: -7.1391682624816895
    5. 'nou' → logprob: -7.2641682624816895
    6. '   ' → logprob: -7.2641682624816895
    7. ' update' → logprob: -7.5141682624816895
    8. ' change' → logprob: -7.6391682624816895
    9. ' caractère' → logprob: -7.7641682624816895
    10. '  ' → logprob: -7.7641682624816895

Token 248: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03933480754494667
    2. 'global' → logprob: -4.039334774017334
    3. 'def' → logprob: -5.414334774017334
    4. '
' → logprob: -5.789334774017334
    5. ' global' → logprob: -5.914334774017334
    6. '[' → logprob: -6.164334774017334
    7. ',' → logprob: -6.289334774017334
    8. ':' → logprob: -6.539334774017334
    9. '<|end|>' → logprob: -6.914334774017334
    10. ':
' → logprob: -7.164334774017334

Token 249: ' caractère' (ID: 80509)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.7893924117088318
    2. 'la' → logprob: -1.6643924713134766
    3. 'car' → logprob: -2.5393924713134766
    4. 'val' → logprob: -2.7893924713134766
    5. ' caractère' → logprob: -2.7893924713134766
    6. 'l' → logprob: -3.0393924713134766
    7. ' valeur' → logprob: -3.2893924713134766
    8. 'i' → logprob: -4.789392471313477
    9. ' l' → logprob: -4.914392471313477
    10. 'x' → logprob: -5.039392471313477

Token 250: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23290161788463593
    2. ':' → logprob: -2.8579015731811523
    3. ')' → logprob: -2.9829015731811523
    4. '.' → logprob: -3.4829015731811523
    5. ',' → logprob: -4.107901573181152
    6. 'global' → logprob: -4.232901573181152
    7. '):' → logprob: -4.482901573181152
    8. ':
' → logprob: -4.482901573181152
    9. 'def' → logprob: -5.357901573181152
    10. '):
' → logprob: -5.857901573181152

Token 251: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03451799601316452
    2. 'global' → logprob: -4.159517765045166
    3. ' global' → logprob: -4.784517765045166
    4. ')' → logprob: -5.284517765045166
    5. 'def' → logprob: -6.534517765045166
    6. '
' → logprob: -6.784517765045166
    7. '    
' → logprob: -7.284517765045166
    8. '	global' → logprob: -8.034518241882324
    9. ')
' → logprob: -8.159518241882324
    10. '):
' → logprob: -8.409518241882324

Token 252: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07663866877555847
    2. 'global' → logprob: -2.701638698577881
    3. ' global' → logprob: -5.201638698577881
    4. '
' → logprob: -8.326638221740723
    5. '	global' → logprob: -8.326638221740723
    6. 'def' → logprob: -8.451638221740723
    7. ')' → logprob: -8.701638221740723
    8. '    
' → logprob: -9.326638221740723
    9. ':
' → logprob: -10.076638221740723
    10. ':' → logprob: -10.326638221740723

Token 253: '   ' (ID: 271)
  Prédit: 'global'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'global' → logprob: -0.5558962821960449
    2. '   ' → logprob: -0.9308962821960449
    3. ' global' → logprob: -3.805896282196045
    4. 'def' → logprob: -4.680896282196045
    5. 'pos' → logprob: -8.180896759033203
    6. 'index' → logprob: -8.680896759033203
    7. '#' → logprob: -9.680896759033203
    8. '	global' → logprob: -9.930896759033203
    9. 'i' → logprob: -10.305896759033203
    10. 'seg' → logprob: -10.805896759033203

Token 254: ' #' (ID: 1069)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.4454558491706848
    2. 'global' → logprob: -2.07045578956604
    3. 'index' → logprob: -2.19545578956604
    4. '   ' → logprob: -2.82045578956604
    5. 'idx' → logprob: -3.57045578956604
    6. 'i' → logprob: -3.82045578956604
    7. '#' (adapté à ' #') → logprob: -4.695456027984619
    8. 'seg' → logprob: -7.070456027984619
    9. 'def' → logprob: -7.195456027984619
    10. ' pos' → logprob: -7.820456027984619

Token 255: ' Met' (ID: 7227)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.09010659903287888
    2. 'global' → logprob: -3.46510648727417
    3. 'index' → logprob: -3.84010648727417
    4. 'idx' → logprob: -4.21510648727417
    5. 'def' → logprob: -5.46510648727417
    6. ' pos' → logprob: -5.59010648727417
    7. '#' → logprob: -5.71510648727417
    8. 'i' → logprob: -5.84010648727417
    9. '   ' → logprob: -6.34010648727417
    10. ' global' → logprob: -7.46510648727417

Token 256: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18060697615146637
    2. 'SEG' → logprob: -2.9306070804595947
    3. ' SEG' → logprob: -3.0556070804595947
    4. 'def' → logprob: -3.9306070804595947
    5. 'seg' → logprob: -4.430606842041016
    6. 'global' → logprob: -5.180606842041016
    7. 'i' → logprob: -5.305606842041016
    8. 'à' → logprob: -5.555606842041016
    9. '       ' → logprob: -5.680606842041016
    10. 'od' → logprob: -5.805606842041016

Token 257: ' jour' (ID: 8379)
  Prédit: 'jour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jour' → logprob: -0.000543857691809535
    2. 'jours' → logprob: -8.375543594360352
    3. 'jou' → logprob: -9.000543594360352
    4. ' jour' → logprob: -9.625543594360352
    5. '```' → logprob: -9.750543594360352
    6. 'SEG' → logprob: -10.500543594360352
    7. '   ' → logprob: -11.125543594360352
    8. 'Jour' → logprob: -11.625543594360352
    9. 'j' → logprob: -12.250543594360352
    10. 'day' → logprob: -13.250543594360352

Token 258: ' la' (ID: 557)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.21349357068538666
    2. 'i' → logprob: -2.338493585586548
    3. ' pos' → logprob: -3.588493585586548
    4. 'idx' → logprob: -3.713493585586548
    5. ' i' → logprob: -4.338493347167969
    6. 'index' → logprob: -4.463493347167969
    7. '   ' → logprob: -4.963493347167969
    8. ' idx' → logprob: -5.213493347167969
    9. ' index' → logprob: -6.088493347167969
    10. 'seg' → logprob: -6.838493347167969

Token 259: ' feuille' (ID: 129760)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.12972219288349152
    2. 'index' → logprob: -2.8797221183776855
    3. 'i' → logprob: -3.1297221183776855
    4. 'idx' → logprob: -3.8797221183776855
    5. ' pos' → logprob: -8.504722595214844
    6. '   ' → logprob: -8.754722595214844
    7. 'p' → logprob: -8.754722595214844
    8. '#' → logprob: -9.129722595214844
    9. 'seg' → logprob: -9.254722595214844
    10. 'position' → logprob: -9.254722595214844

Token 260: ' correspond' (ID: 11095)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8979223966598511
    2. ' =' → logprob: -1.272922396659851
    3. '   ' → logprob: -2.3979225158691406
    4. 'index' → logprob: -2.5229225158691406
    5. 'idx' → logprob: -3.7729225158691406
    6. 'pos' → logprob: -3.7729225158691406
    7. '[' → logprob: -4.272922515869141
    8. '[pos' → logprob: -4.522922515869141
    9. 'd' → logprob: -4.897922515869141
    10. 'i' → logprob: -5.147922515869141

Token 261: 'ante' (ID: 2116)
  Prédit: 'ante'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ante' → logprob: -0.0001968649885384366
    2. 'ant' → logprob: -8.75019645690918
    3. 'ance' → logprob: -10.75019645690918
    4. '   ' → logprob: -11.37519645690918
    5. 'ente' → logprob: -12.50019645690918
    6. '#' → logprob: -15.00019645690918
    7. ' à' → logprob: -15.12519645690918
    8. 'a' → logprob: -15.25019645690918
    9. 'ANTE' → logprob: -15.25019645690918
    10. 'à' → logprob: -15.62519645690918

Token 262: ' dans' (ID: 2671)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.873051106929779
    2. 'def' → logprob: -2.373051166534424
    3. 'global' → logprob: -2.498051166534424
    4. 'index' → logprob: -2.623051166534424
    5. '   ' → logprob: -2.873051166534424
    6. 'idx' → logprob: -2.998051166534424
    7. '[' → logprob: -3.248051166534424
    8. '[pos' → logprob: -3.373051166534424
    9. 'seg' → logprob: -3.623051166534424
    10. 'i' → logprob: -3.998051166534424

Token 263: ' l' (ID: 305)
  Prédit: 'SEG'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'SEG' → logprob: -0.0038542284164577723
    2. ' SEG' → logprob: -6.503854274749756
    3. 'seg' → logprob: -7.003854274749756
    4. 'segment' → logprob: -7.503854274749756
    5. '   ' → logprob: -8.253853797912598
    6. 'd' → logprob: -8.628853797912598
    7. 'i' → logprob: -9.003853797912598
    8. 'index' → logprob: -9.378853797912598
    9. 'pos' → logprob: -9.753853797912598
    10. 'le' → logprob: -10.628853797912598

Token 264: ''ar' (ID: 54307)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.7748687267303467
    2. 'SEG' → logprob: -1.7748687267303467
    3. 'a' → logprob: -1.8998687267303467
    4. ''' → logprob: -1.8998687267303467
    5. 'eg' → logprob: -4.524868965148926
    6. ''ar' → logprob: -4.774868965148926
    7. ' SEG' → logprob: -5.274868965148926
    8. 'es' → logprob: -5.399868965148926
    9. 'ist' → logprob: -5.649868965148926
    10. 'seg' → logprob: -5.774868965148926

Token 265: 'bre' (ID: 9945)
  Prédit: 'bre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bre' → logprob: -0.00020902375399600714
    2. 'bo' → logprob: -9.250208854675293
    3. 'b' → logprob: -10.000208854675293
    4. 'bor' → logprob: -10.625208854675293
    5. 'e' → logprob: -10.875208854675293
    6. 'bres' → logprob: -11.500208854675293
    7. 'vore' → logprob: -12.750208854675293
    8. 'bol' → logprob: -13.000208854675293
    9. 'brev' → logprob: -13.625208854675293
    10. 'Bre' → logprob: -13.875208854675293

Token 266: ' segment' (ID: 14806)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.5355821251869202
    2. 'index' → logprob: -1.5355820655822754
    3. '   ' → logprob: -2.6605820655822754
    4. 'idx' → logprob: -3.0355820655822754
    5. '_pos' → logprob: -4.035582065582275
    6. 'i' → logprob: -4.535582065582275
    7. ' =' → logprob: -4.910582065582275
    8. 'def' → logprob: -4.910582065582275
    9. '_index' → logprob: -5.285582065582275
    10. '_idx' → logprob: -5.410582065582275

Token 267: 'aire' (ID: 8189)
  Prédit: 'aire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aire' → logprob: -0.489122211933136
    2. '   ' → logprob: -1.7391221523284912
    3. 'tree' → logprob: -1.7391221523284912
    4. ' tree' → logprob: -3.989122152328491
    5. 'ary' → logprob: -5.23912239074707
    6. '[' → logprob: -6.11412239074707
    7. 'ree' → logprob: -6.61412239074707
    8. 'naire' → logprob: -7.48912239074707
    9. '  ' → logprob: -7.61412239074707
    10. 'ale' → logprob: -7.73912239074707

Token 268: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.373176634311676
    2. '[' → logprob: -1.8731765747070312
    3. 'def' → logprob: -3.7481765747070312
    4. '[pos' → logprob: -4.373176574707031
    5. '    
' → logprob: -4.498176574707031
    6. 'seg' → logprob: -4.623176574707031
    7. 'index' → logprob: -4.623176574707031
    8. '[i' → logprob: -4.748176574707031
    9. 'pos' → logprob: -4.748176574707031
    10. '
' → logprob: -4.998176574707031

Token 269: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13548581302165985
    2. 'pos' → logprob: -2.635485887527466
    3. ' pos' → logprob: -3.885485887527466
    4. 'def' → logprob: -4.760485649108887
    5. 'global' → logprob: -4.760485649108887
    6. ' global' → logprob: -5.010485649108887
    7. 'index' → logprob: -5.635485649108887
    8. ',' → logprob: -6.635485649108887
    9. ' index' → logprob: -6.760485649108887
    10. 'i' → logprob: -7.260485649108887

Token 270: ' global' (ID: 5466)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.1515728235244751
    2. 'index' → logprob: -3.0265727043151855
    3. 'idx' → logprob: -3.2765727043151855
    4. ' pos' → logprob: -3.4015727043151855
    5. '   ' → logprob: -4.9015727043151855
    6. ' index' → logprob: -5.1515727043151855
    7. ' idx' → logprob: -5.2765727043151855
    8. 'i' → logprob: -6.9015727043151855
    9. 'global' (adapté à ' global') → logprob: -7.1515727043151855
    10. ' i' → logprob: -8.651573181152344

Token 271: ' SEG' (ID: 90192)
  Prédit: 'SEG'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SEG' → logprob: -0.011048882268369198
    2. ' SEG' → logprob: -4.511048793792725
    3. '   ' → logprob: -14.261049270629883
    4. 'SE' → logprob: -15.511049270629883
    5. 'seg' → logprob: -16.136049270629883
    6. ' ' → logprob: -16.761049270629883
    7. '_SEG' → logprob: -17.261049270629883
    8. 'SG' → logprob: -17.636049270629883
    9. 'i' → logprob: -18.636049270629883
    10. 'segment' → logprob: -18.636049270629883

Token 272: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08899781107902527
    2. '[i' → logprob: -2.8389978408813477
    3. '   ' → logprob: -4.338997840881348
    4. '[' → logprob: -5.588997840881348
    5. 'i' → logprob: -5.713997840881348
    6. ',' → logprob: -6.088997840881348
    7. '    
' → logprob: -6.088997840881348
    8. '
' → logprob: -7.463997840881348
    9. 'SEG' → logprob: -8.088997840881348
    10. ' i' → logprob: -8.338997840881348

Token 273: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.03313426673412323
    2. 'D' → logprob: -3.5331342220306396
    3. ' d' → logprob: -5.783134460449219
    4. 'N' → logprob: -9.533134460449219
    5. 'size' → logprob: -9.533134460449219
    6. ' D' → logprob: -9.533134460449219
    7. 'SIZE' → logprob: -9.658134460449219
    8. ' size' → logprob: -12.658134460449219
    9. '_d' → logprob: -12.908134460449219
    10. 'n' → logprob: -12.908134460449219

Token 274: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.024845808744430542
    2. '
' → logprob: -4.524845600128174
    3. 'ef' → logprob: -6.149845600128174
    4. ',' → logprob: -6.274845600128174
    5. '    
' → logprob: -6.274845600128174
    6. 'if' → logprob: -6.649845600128174
    7. 'i' → logprob: -6.899845600128174
    8. 'for' → logprob: -7.024845600128174
    9. '   ' → logprob: -7.274845600128174
    10. 'e' → logprob: -7.274845600128174

Token 275: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08159106969833374
    2. ' pos' → logprob: -3.3315911293029785
    3. 'pos' → logprob: -3.5815911293029785
    4. ' i' → logprob: -5.2065911293029785
    5. 'i' → logprob: -5.9565911293029785
    6. ' index' → logprob: -6.3315911293029785
    7. 'index' → logprob: -6.8315911293029785
    8. ' idx' → logprob: -6.8315911293029785
    9. 'idx' → logprob: -7.2065911293029785
    10. '    
' → logprob: -7.3315911293029785

Token 276: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.7354122996330261
    2. 'pos' → logprob: -1.110412359237671
    3. '   ' → logprob: -2.110412359237671
    4. 'idx' → logprob: -3.110412359237671
    5. 'index' → logprob: -3.735412359237671
    6. ' i' → logprob: -7.735412120819092
    7. ' pos' → logprob: -7.860412120819092
    8. 'p' → logprob: -8.36041259765625
    9. 'ind' → logprob: -9.11041259765625
    10. 'indice' → logprob: -9.48541259765625

Token 277: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.5908581018447876
    2. '+=' → logprob: -0.8408581018447876
    3. '=' → logprob: -4.340857982635498
    4. ' =' → logprob: -6.340857982635498
    5. '+' → logprob: -11.715858459472656
    6. '   ' → logprob: -12.340858459472656
    7. ' +' → logprob: -12.340858459472656
    8. ' ' → logprob: -13.965858459472656
    9. ']+=' → logprob: -14.715858459472656
    10. '+=(' → logprob: -14.840858459472656

Token 278: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.004080062732100487
    2. ' d' → logprob: -5.504080295562744
    3. '   ' → logprob: -13.379079818725586
    4. '	d' → logprob: -17.879079818725586
    5. '(d' → logprob: -18.379079818725586
    6. '[d' → logprob: -19.504079818725586
    7. ' ' → logprob: -20.129079818725586
    8. '  ' → logprob: -20.254079818725586
    9. '>d' → logprob: -21.004079818725586
    10. 'def' → logprob: -21.254079818725586

Token 279: ' -' (ID: 533)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.24107389152050018
    2. '-' → logprob: -2.2410738468170166
    3. '   ' → logprob: -2.4910738468170166
    4. ' -' → logprob: -4.366074085235596
    5. ' i' → logprob: -5.116074085235596
    6. ' ' → logprob: -5.991074085235596
    7. '2' → logprob: -6.366074085235596
    8. 'd' → logprob: -7.366074085235596
    9. '  ' → logprob: -8.116073608398438
    10. '<|end|>' → logprob: -8.366073608398438

Token 280: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.500001907348633
    3. '   ' → logprob: -16.250001907348633
    4. '<|end|>' → logprob: -17.500001907348633
    5. '```' → logprob: -19.125001907348633
    6. '  ' → logprob: -19.750001907348633
    7. '<|end|>' → logprob: -21.250001907348633
    8. '
' → logprob: -21.625001907348633
    9. '۱' → logprob: -22.250001907348633
    10. '...' → logprob: -22.500001907348633

Token 281: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -14.000000953674316
    3. '   ' → logprob: -16.375001907348633
    4. '<|end|>' → logprob: -16.625001907348633
    5. '```' → logprob: -17.250001907348633
    6. '
' → logprob: -19.250001907348633
    7. '  ' → logprob: -19.750001907348633
    8. '...' → logprob: -20.375001907348633
    9. '۱' → logprob: -20.562501907348633
    10. '<|end|>' → logprob: -20.562501907348633

Token 282: ' ' (ID: 220)
  Prédit: 'SEG'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'SEG' → logprob: -0.11396504193544388
    2. '   ' → logprob: -2.2389650344848633
    3. ' SEG' → logprob: -7.613965034484863
    4. 'seg' → logprob: -7.863965034484863
    5. '_SEG' → logprob: -9.113965034484863
    6. '#' → logprob: -10.238965034484863
    7. '    
' → logprob: -10.863965034484863
    8. '
' → logprob: -10.863965034484863
    9. 'SE' → logprob: -10.988965034484863
    10. 'if' → logprob: -11.613965034484863

Token 283: ' #' (ID: 1069)
  Prédit: 'SEG'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'SEG' → logprob: -0.32009753584861755
    2. '   ' → logprob: -1.44509756565094
    3. '
' → logprob: -3.4450974464416504
    4. ' SEG' → logprob: -6.07009744644165
    5. '    
' → logprob: -6.32009744644165
    6. 'seg' → logprob: -6.69509744644165
    7. '  
' → logprob: -8.570097923278809
    8. '_SEG' → logprob: -9.070097923278809
    9. 'if' → logprob: -9.320097923278809
    10. '   
' → logprob: -9.320097923278809

Token 284: ' Passage' (ID: 152604)
  Prédit: 'SEG'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'SEG' → logprob: -0.014792563393712044
    2. '   ' → logprob: -5.014792442321777
    3. ' SEG' → logprob: -5.514792442321777
    4. '#' → logprob: -6.514792442321777
    5. 'i' → logprob: -6.764792442321777
    6. 'seg' → logprob: -8.014792442321777
    7. 'value' → logprob: -8.264792442321777
    8. 'segment' → logprob: -9.264792442321777
    9. '
' → logprob: -9.389792442321777
    10. '    
' → logprob: -9.514792442321777

Token 285: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.4897465407848358
    2. ' au' → logprob: -1.1147465705871582
    3. ' aux' → logprob: -3.864746570587158
    4. ' des' → logprob: -4.114746570587158
    5. 'au' → logprob: -4.614746570587158
    6. ' to' → logprob: -5.989746570587158
    7. 'à' → logprob: -5.989746570587158
    8. ' du' → logprob: -6.114746570587158
    9. ' de' → logprob: -6.489746570587158
    10. ' from' → logprob: -6.989746570587158

Token 286: ' l' (ID: 305)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.713302493095398
    2. 'l' → logprob: -1.088302493095398
    3. ' la' → logprob: -2.4633026123046875
    4. 'i' → logprob: -2.7133026123046875
    5. ' l' → logprob: -4.5883026123046875
    6. 'le' → logprob: -5.7133026123046875
    7. 'leaf' → logprob: -5.7133026123046875
    8. ' i' → logprob: -6.3383026123046875
    9. 'the' → logprob: -6.3383026123046875
    10. 'fe' → logprob: -8.213302612304688

Token 287: ''ind' (ID: 82245)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.09862876683473587
    2. 'index' → logprob: -2.9736287593841553
    3. 'i' → logprob: -4.098628997802734
    4. 'indice' → logprob: -4.348628997802734
    5. 'e' → logprob: -4.973628997802734
    6. 'la' → logprob: -6.098628997802734
    7. 'fe' → logprob: -7.098628997802734
    8. ''ind' → logprob: -7.473628997802734
    9. 'l' → logprob: -7.598628997802734
    10. ''' → logprob: -8.223628997802734

Token 288: 'ice' (ID: 603)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.03382907435297966
    2. 'ice' → logprob: -3.4088289737701416
    3. 'dex' → logprob: -9.783828735351562
    4. 'exe' → logprob: -10.033828735351562
    5. 'e' → logprob: -11.033828735351562
    6. 'de' → logprob: -11.158828735351562
    7. 'i' → logprob: -11.658828735351562
    8. '   ' → logprob: -12.158828735351562
    9. 'ices' → logprob: -12.408828735351562
    10. 'x' → logprob: -12.408828735351562

Token 289: ' de' (ID: 334)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.1755701303482056
    2. 'fe' → logprob: -1.8005701303482056
    3. ' de' → logprob: -2.050570011138916
    4. 'i' → logprob: -2.050570011138916
    5. 'de' → logprob: -2.175570011138916
    6. ' des' → logprob: -2.550570011138916
    7. 'des' → logprob: -4.050570011138916
    8. ' ' → logprob: -4.425570011138916
    9. '   ' → logprob: -4.675570011138916
    10. 'le' → logprob: -4.675570011138916

Token 290: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.00823511928319931
    2. 'fe' → logprob: -5.008234977722168
    3. 'l' → logprob: -6.758234977722168
    4. 'leaf' → logprob: -8.633234977722168
    5. ' la' → logprob: -8.883234977722168
    6. 'i' → logprob: -11.133234977722168
    7. 'le' → logprob: -11.383234977722168
    8. 'SEG' → logprob: -12.133234977722168
    9. ' ' → logprob: -12.758234977722168
    10. 'a' → logprob: -13.508234977722168

Token 291: ' feuille' (ID: 129760)
  Prédit: 'fe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fe' → logprob: -0.00019388488726690412
    2. 'leaf' → logprob: -8.87519359588623
    3. ' feuille' → logprob: -10.50019359588623
    4. 'i' → logprob: -10.87519359588623
    5. '   ' → logprob: -13.00019359588623
    6. 'f' → logprob: -13.50019359588623
    7. 'le' → logprob: -14.37519359588623
    8. ' ' → logprob: -14.37519359588623
    9. 'base' → logprob: -14.75019359588623
    10. 'position' → logprob: -15.25019359588623

Token 292: ' dans' (ID: 2671)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5295228362083435
    2. 'SEG' → logprob: -0.9045228362083435
    3. ' SEG' → logprob: -5.529522895812988
    4. 'seg' → logprob: -7.529522895812988
    5. '    
' → logprob: -7.529522895812988
    6. '_SEG' → logprob: -7.654522895812988
    7. '
' → logprob: -8.404522895812988
    8. '  ' → logprob: -9.154522895812988
    9. ' ' → logprob: -9.279522895812988
    10. ',' → logprob: -9.654522895812988

Token 293: ' SEG' (ID: 90192)
  Prédit: 'SEG'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SEG' → logprob: -0.0020318960305303335
    2. 'le' → logprob: -7.1270318031311035
    3. 'l' → logprob: -7.5020318031311035
    4. ' SEG' → logprob: -7.7520318031311035
    5. 'la' → logprob: -8.752032279968262
    6. 'the' → logprob: -9.877032279968262
    7. 'SE' → logprob: -11.002032279968262
    8. '_SEG' → logprob: -12.002032279968262
    9. ' le' → logprob: -12.377032279968262
    10. 'SG' → logprob: -12.627032279968262

Token 294: '
' (ID: 198)
  Prédit: 'SEG'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'SEG' → logprob: -0.4361311197280884
    2. '   ' → logprob: -1.0611311197280884
    3. ' SEG' → logprob: -5.311131000518799
    4. 'if' → logprob: -7.436131000518799
    5. '_SEG' → logprob: -7.811131000518799
    6. 'seg' → logprob: -7.811131000518799
    7. ' ' → logprob: -8.561131477355957
    8. '    
' → logprob: -8.936131477355957
    9. '#' → logprob: -9.311131477355957
    10. '  ' → logprob: -9.436131477355957

Token 295: '   ' (ID: 271)
  Prédit: 'SEG'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SEG' → logprob: -0.32186731696128845
    2. '   ' → logprob: -1.3218673467636108
    3. ' SEG' → logprob: -4.8218674659729
    4. '    
' → logprob: -8.946866989135742
    5. '_SEG' → logprob: -9.071866989135742
    6. 'seg' → logprob: -9.446866989135742
    7. 'if' → logprob: -10.571866989135742
    8. 'segment' → logprob: -10.821866989135742
    9. 'SE' → logprob: -11.071866989135742
    10. '#' → logprob: -11.321866989135742

Token 296: ' bit' (ID: 3546)
  Prédit: 'SEG'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'SEG' → logprob: -0.002391706220805645
    2. '   ' → logprob: -7.377391815185547
    3. 'if' → logprob: -7.627391815185547
    4. ' SEG' → logprob: -7.877391815185547
    5. 'value' → logprob: -8.502391815185547
    6. 'c' → logprob: -8.752391815185547
    7. 'char' → logprob: -9.002391815185547
    8. 'seg' → logprob: -9.252391815185547
    9. 'val' → logprob: -9.627391815185547
    10. '#' → logprob: -9.752391815185547

Token 297: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.20287461578845978
    2. 'mask' → logprob: -2.5778746604919434
    3. ' =' → logprob: -2.8278746604919434
    4. '=' → logprob: -3.4528746604919434
    5. 'set' → logprob: -5.452874660491943
    6. '_' → logprob: -6.577874660491943
    7. '_mask' → logprob: -6.577874660491943
    8. '_val' → logprob: -6.827874660491943
    9. '_s' → logprob: -7.452874660491943
    10. 'val' → logprob: -7.452874660491943

Token 298: ' ord' (ID: 6608)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02227700874209404
    2. 'ord' → logprob: -4.272276878356934
    3. '0' → logprob: -5.522276878356934
    4. 'x' → logprob: -6.772276878356934
    5. '(' → logprob: -7.272276878356934
    6. 'int' → logprob: -7.647276878356934
    7. '(ord' → logprob: -7.647276878356934
    8. ' ' → logprob: -7.772276878356934
    9. '{' → logprob: -7.772276878356934
    10. '{'' → logprob: -8.647276878356934

Token 299: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0019687197636812925
    2. '(' → logprob: -6.376968860626221
    3. 'x' → logprob: -8.751968383789062
    4. '('' → logprob: -9.501968383789062
    5. ' (' → logprob: -10.501968383789062
    6. ' x' → logprob: -13.251968383789062
    7. '(s' → logprob: -13.376968383789062
    8. '(
' → logprob: -13.876968383789062
    9. 's' → logprob: -14.501968383789062
    10. '("("' → logprob: -15.001968383789062

Token 300: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002890705829486251
    2. '')' → logprob: -7.252890586853027
    3. 'a' → logprob: -7.377890586853027
    4. '   ' → logprob: -7.752890586853027
    5. ' )' → logprob: -7.877890586853027
    6. '('' → logprob: -7.877890586853027
    7. '())' → logprob: -9.377890586853027
    8. ' ' → logprob: -9.752890586853027
    9. '[' → logprob: -9.877890586853027
    10. '")' → logprob: -11.252890586853027

Token 301: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6697661876678467
    2. '&' → logprob: -2.1697661876678467
    3. '   ' → logprob: -2.1697661876678467
    4. ' &' → logprob: -3.2947661876678467
    5. '^' → logprob: -3.4197661876678467
    6. ' -' → logprob: -3.7947661876678467
    7. '=' → logprob: -3.7947661876678467
    8. '%' → logprob: -3.7947661876678467
    9. '()' → logprob: -3.9197661876678467
    10. ' ' → logprob: -4.044766426086426

Token 302: ' ' (ID: 220)
  Prédit: 'ord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ord' → logprob: -0.26105520129203796
    2. '97' → logprob: -1.5110552310943604
    3. '96' → logprob: -5.636054992675781
    4. '65' → logprob: -6.136054992675781
    5. ' ord' → logprob: -6.136054992675781
    6. '64' → logprob: -7.511054992675781
    7. ' ' → logprob: -8.636054992675781
    8. '32' → logprob: -9.261054992675781
    9. '48' → logprob: -9.261054992675781
    10. '(ord' → logprob: -9.386054992675781

Token 303: '97' (ID: 5170)
  Prédit: 'ord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ord' → logprob: -0.4476926922798157
    2. '97' → logprob: -1.072692632675171
    3. '96' → logprob: -4.44769287109375
    4. '65' → logprob: -5.44769287109375
    5. '64' → logprob: -7.07269287109375
    6. ' ord' → logprob: -7.19769287109375
    7. 'a' → logprob: -7.19769287109375
    8. '(ord' → logprob: -8.44769287109375
    9. '48' → logprob: -9.94769287109375
    10. ' ' → logprob: -9.94769287109375

Token 304: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2528637945652008
    2. '
' → logprob: -1.6278637647628784
    3. '  
' → logprob: -5.127863883972168
    4. 'SEG' → logprob: -5.127863883972168
    5. '    
' → logprob: -5.127863883972168
    6. '<|end|>' → logprob: -5.377863883972168
    7. ' 
' → logprob: -7.002863883972168
    8. '   
' → logprob: -7.252863883972168
    9. '  ' → logprob: -7.752863883972168
    10. ' ' → logprob: -7.877863883972168

Token 305: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09402359277009964
    2. '
' → logprob: -3.8440237045288086
    3. '    
' → logprob: -3.9690237045288086
    4. '1' → logprob: -3.9690237045288086
    5. 'SEG' → logprob: -5.094023704528809
    6. '  
' → logprob: -5.219023704528809
    7. '<|end|>' → logprob: -5.594023704528809
    8. ' ' → logprob: -5.594023704528809
    9. '   
' → logprob: -5.844023704528809
    10. ' 
' → logprob: -6.094023704528809

Token 306: ' Obt' (ID: 98208)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.048798445612192154
    2. '(' → logprob: -3.0487985610961914
    3. '   ' → logprob: -9.298798561096191
    4. '0' → logprob: -9.673798561096191
    5. ' ' → logprob: -10.923798561096191
    6. '[' → logprob: -10.923798561096191
    7. ' (' → logprob: -11.923798561096191
    8. '
' → logprob: -12.548798561096191
    9. 'SEG' → logprob: -12.798798561096191
    10. 'seg' → logprob: -13.423798561096191

Token 307: 'ient' (ID: 773)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.0286238193511963
    2. 'e' → logprob: -1.5286238193511963
    3. '=' → logprob: -1.6536238193511963
    4. 'ained' → logprob: -2.1536238193511963
    5. 'ient' → logprob: -3.0286238193511963
    6. 'i' → logprob: -3.9036238193511963
    7. 'ention' → logprob: -4.528623580932617
    8. 'aining' → logprob: -5.153623580932617
    9. '0' → logprob: -5.278623580932617
    10. 'enir' → logprob: -5.653623580932617

Token 308: ' la' (ID: 557)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.030257759615778923
    2. '(' → logprob: -3.6552577018737793
    3. ' ' → logprob: -5.780257701873779
    4. ' (' → logprob: -7.405257701873779
    5. '   ' → logprob: -8.530258178710938
    6. '0' → logprob: -10.280258178710938
    7. '(i' → logprob: -12.530258178710938
    8. '  ' → logprob: -13.030258178710938
    9. '[' → logprob: -13.155258178710938
    10. ')' → logprob: -13.280258178710938

Token 309: ' position' (ID: 4010)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0034642943646758795
    2. '(' → logprob: -5.878464221954346
    3. ' ' → logprob: -7.878464221954346
    4. ' (' → logprob: -9.128464698791504
    5. 'position' → logprob: -9.628464698791504
    6. 'bit' → logprob: -10.003464698791504
    7. '[' → logprob: -11.753464698791504
    8. 'pos' → logprob: -12.128464698791504
    9. 'mask' → logprob: -12.503464698791504
    10. ' position' → logprob: -12.503464698791504

Token 310: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4673320949077606
    2. '1' → logprob: -2.217332124710083
    3. ' ' → logprob: -2.717332124710083
    4. ' de' → logprob: -2.842332124710083
    5. 'de' → logprob: -3.217332124710083
    6. ' of' → logprob: -3.717332124710083
    7. ' bit' → logprob: -4.342331886291504
    8. '    ' → logprob: -4.467331886291504
    9. 'd' → logprob: -4.467331886291504
    10. ' du' → logprob: -4.717331886291504

Token 311: ' la' (ID: 557)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.8925633430480957
    2. ' x' → logprob: -1.7675633430480957
    3. '1' → logprob: -1.8925633430480957
    4. ' ' → logprob: -2.3925633430480957
    5. 'l' → logprob: -2.6425633430480957
    6. 'bit' → logprob: -3.0175633430480957
    7. ' l' → logprob: -3.7675633430480957
    8. ' la' → logprob: -4.642563343048096
    9. ' bit' → logprob: -4.767563343048096
    10. 'le' → logprob: -5.267563343048096

Token 312: ' lettre' (ID: 68013)
  Prédit: 'lett'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lett' → logprob: -0.1451500952243805
    2. 'bit' → logprob: -2.2701501846313477
    3. '1' → logprob: -4.145150184631348
    4. ' lettre' → logprob: -5.395150184631348
    5. 'b' → logprob: -5.520150184631348
    6. 'a' → logprob: -6.020150184631348
    7. 'x' → logprob: -6.020150184631348
    8. ' ' → logprob: -6.895150184631348
    9. 'le' → logprob: -7.645150184631348
    10. 'let' → logprob: -8.895150184631348

Token 313: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42667996883392334
    2. '1' → logprob: -1.6766799688339233
    3. ' ' → logprob: -2.926680088043213
    4. ' =' → logprob: -4.176680088043213
    5. '<|end|>' → logprob: -4.551680088043213
    6. ')' → logprob: -4.801680088043213
    7. ' i' → logprob: -4.801680088043213
    8. 'i' → logprob: -4.926680088043213
    9. ' (' → logprob: -5.051680088043213
    10. 's' → logprob: -5.551680088043213

Token 314: '0' (ID: 15)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.5415098071098328
    2. ' bit' → logprob: -1.2915098667144775
    3. '0' → logprob: -2.1665098667144775
    4. 'x' → logprob: -4.541509628295898
    5. 'b' → logprob: -4.791509628295898
    6. ' ' → logprob: -5.666509628295898
    7. 'a' → logprob: -6.416509628295898
    8. ' x' → logprob: -6.666509628295898
    9. ')' → logprob: -6.791509628295898
    10. '   ' → logprob: -7.416509628295898

Token 315: ' pour' (ID: 1930)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0158405564725399
    2. ' )' → logprob: -4.390840530395508
    3. '<|end|>' → logprob: -7.140840530395508
    4. 'x' → logprob: -8.140840530395508
    5. '   ' → logprob: -8.265840530395508
    6. '0' → logprob: -8.390840530395508
    7. '#' → logprob: -8.515840530395508
    8. ' ' → logprob: -8.640840530395508
    9. ',' → logprob: -8.890840530395508
    10. '+' → logprob: -8.890840530395508

Token 316: ' '' (ID: 461)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.479674756526947
    2. ''a' → logprob: -0.979674756526947
    3. ' a' → logprob: -5.229674816131592
    4. ' '' → logprob: -8.604674339294434
    5. ''' → logprob: -10.604674339294434
    6. 'x' → logprob: -12.229674339294434
    7. ''x' → logprob: -12.229674339294434
    8. ''z' → logprob: -13.229674339294434
    9. ''ap' → logprob: -13.604674339294434
    10. ''un' → logprob: -13.729674339294434

Token 317: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -5.512236498361744e-07
    2. ''a' → logprob: -14.875000953674316
    3. ' a' → logprob: -15.875000953674316
    4. 'а' → logprob: -21.25
    5. 'abcdefghijklmnopqrstuvwxyz' → logprob: -21.5
    6. '`' → logprob: -22.0
    7. 'z' → logprob: -22.125
    8. '	a' → logprob: -22.75
    9. ''' → logprob: -23.125
    10. '```' → logprob: -23.25

Token 318: '',' (ID: 787)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.7378965616226196
    2. ')' → logprob: -1.1128965616226196
    3. ',' → logprob: -2.23789644241333
    4. '',' → logprob: -2.48789644241333
    5. 'a' → logprob: -6.23789644241333
    6. ''' → logprob: -7.11289644241333
    7. ' )' → logprob: -8.362896919250488
    8. ' ,' → logprob: -8.862896919250488
    9. ''a' → logprob: -9.862896919250488
    10. ' ')' → logprob: -9.862896919250488

Token 319: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3410269021987915
    2. 'b' → logprob: -1.9660269021987915
    3. ' b' → logprob: -2.841026782989502
    4. '0' → logprob: -3.591026782989502
    5. '1' → logprob: -3.716026782989502
    6. ' bit' → logprob: -4.591026782989502
    7. ')' → logprob: -5.591026782989502
    8. ' )' → logprob: -5.591026782989502
    9. ',' → logprob: -5.716026782989502
    10. 'a' → logprob: -5.966026782989502

Token 320: '1' (ID: 16)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.4333988130092621
    2. ' b' → logprob: -1.9333988428115845
    3. '1' → logprob: -2.058398723602295
    4. ' ' → logprob: -2.808398723602295
    5. ' bit' → logprob: -4.933398723602295
    6. 'z' → logprob: -5.183398723602295
    7. '...' → logprob: -6.433398723602295
    8. 'bit' → logprob: -6.433398723602295
    9. ' ...' → logprob: -7.808398723602295
    10. ''b' → logprob: -8.058399200439453

Token 321: ' pour' (ID: 1930)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.001215934753418
    2. ' pour' → logprob: -1.126215934753418
    3. ' for' → logprob: -1.626215934753418
    4. ' =' → logprob: -2.501215934753418
    5. 'for' → logprob: -4.626215934753418
    6. ')' → logprob: -4.626215934753418
    7. 'pour' → logprob: -5.376215934753418
    8. ',' → logprob: -5.626215934753418
    9. '   ' → logprob: -7.001215934753418
    10. '='' → logprob: -8.376215934753418

Token 322: ' '' (ID: 461)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.033835992217063904
    2. ' b' → logprob: -3.6588358879089355
    3. ''b' → logprob: -4.9088358879089355
    4. 'z' → logprob: -9.783836364746094
    5. ' '' → logprob: -10.158836364746094
    6. ' ' → logprob: -11.658836364746094
    7. ''z' → logprob: -12.033836364746094
    8. ''' → logprob: -12.033836364746094
    9. 'a' → logprob: -12.408836364746094
    10. '	b' → logprob: -13.033836364746094

Token 323: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00011224505578866228
    2. ' b' → logprob: -9.250112533569336
    3. 'z' → logprob: -11.500112533569336
    4. ''b' → logprob: -12.375112533569336
    5. ''' → logprob: -14.375112533569336
    6. '')' → logprob: -15.125112533569336
    7. ' ' → logprob: -15.500112533569336
    8. ')' → logprob: -15.500112533569336
    9. 'a' → logprob: -15.875112533569336
    10. '	b' → logprob: -16.375112533569336

Token 324: '',' (ID: 787)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.21121369302272797
    2. '',' → logprob: -2.2112135887145996
    3. '')' → logprob: -2.7112135887145996
    4. ')' → logprob: -4.3362135887146
    5. ' ,' → logprob: -7.2112135887146
    6. ''' → logprob: -8.711214065551758
    7. '   ' → logprob: -9.086214065551758
    8. '')
' → logprob: -9.711214065551758
    9. '...' → logprob: -9.836214065551758
    10. ',...' → logprob: -10.586214065551758

Token 325: ' etc' (ID: 5178)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.072219967842102
    2. ' ' → logprob: -1.322219967842102
    3. '2' → logprob: -1.447219967842102
    4. '...' → logprob: -2.8222198486328125
    5. '   ' → logprob: -3.4472198486328125
    6. ',' → logprob: -3.8222198486328125
    7. ' ...' → logprob: -4.6972198486328125
    8. '...)' → logprob: -4.6972198486328125
    9. ' )' → logprob: -4.8222198486328125
    10. '0' → logprob: -5.6972198486328125

Token 326: '.)
' (ID: 32616)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '')' → logprob: -0.5262141823768616
    2. ')' → logprob: -1.0262141227722168
    3. '')
' → logprob: -3.401214122772217
    4. 'a' → logprob: -5.026214122772217
    5. ')
' → logprob: -5.026214122772217
    6. '   ' → logprob: -6.026214122772217
    7. 'e' → logprob: -7.151214122772217
    8. '.')' → logprob: -8.151214599609375
    9. ')')
' → logprob: -8.526214599609375
    10. '0' → logprob: -9.151214599609375

Token 327: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.476582407951355
    2. 'SEG' → logprob: -0.976582407951355
    3. ' SEG' → logprob: -6.6015825271606445
    4. '_SEG' → logprob: -8.101582527160645
    5. '    
' → logprob: -8.601582527160645
    6. '  ' → logprob: -9.226582527160645
    7. 'seg' → logprob: -9.351582527160645
    8. ' ' → logprob: -10.101582527160645
    9. '    ' → logprob: -10.101582527160645
    10. 'SE' → logprob: -10.226582527160645

Token 328: ' SEG' (ID: 90192)
  Prédit: 'SEG'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SEG' (adapté à ' SEG') → logprob: -0.017306607216596603
    2. '   ' → logprob: -4.142306804656982
    3. ' SEG' → logprob: -6.892306804656982
    4. 'seg' → logprob: -9.142306327819824
    5. 'for' → logprob: -10.517306327819824
    6. 'segment' → logprob: -11.017306327819824
    7. '_SEG' → logprob: -11.642306327819824
    8. 'new' → logprob: -11.642306327819824
    9. 'value' → logprob: -11.767306327819824
    10. '    
' → logprob: -11.892306327819824

Token 329: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.255023956531659e-05
    2. '[' → logprob: -9.625072479248047
    3. ' [' → logprob: -12.125072479248047
    4. 'i' → logprob: -15.125072479248047
    5. '[I' → logprob: -16.125072479248047
    6. ' ' → logprob: -16.500072479248047
    7. ')[' → logprob: -16.625072479248047
    8. '[index' → logprob: -16.875072479248047
    9. ' i' → logprob: -17.000072479248047
    10. '[ii' → logprob: -17.125072479248047

Token 330: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002681367564946413
    2. ']=' → logprob: -6.002681255340576
    3. ' ]' → logprob: -8.877681732177734
    4. '][' → logprob: -10.627681732177734
    5. '=' → logprob: -10.877681732177734
    6. '[' → logprob: -11.377681732177734
    7. ')' → logprob: -11.877681732177734
    8. ' =' → logprob: -13.502681732177734
    9. ']+=' → logprob: -14.127681732177734
    10. ']=(' → logprob: -14.877681732177734

Token 331: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03837044537067413
    2. ' =' → logprob: -3.288370370864868
    3. '|' → logprob: -8.913370132446289
    4. '[' → logprob: -9.288370132446289
    5. ' |=' → logprob: -9.288370132446289
    6. '+=' → logprob: -12.538370132446289
    7. '=[' → logprob: -13.663370132446289
    8. 'bit' → logprob: -13.663370132446289
    9. ' ' → logprob: -14.663370132446289
    10. ' +=' → logprob: -14.913370132446289

Token 332: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.023799385875463486
    2. '[' → logprob: -3.773799419403076
    3. '(' → logprob: -7.648799419403076
    4. 'bit' → logprob: -10.648798942565918
    5. ' ' → logprob: -10.773798942565918
    6. '{' → logprob: -11.023798942565918
    7. '0' → logprob: -12.023798942565918
    8. ' [' → logprob: -12.773798942565918
    9. '(bit' → logprob: -13.648798942565918
    10. '[b' → logprob: -14.148798942565918

Token 333: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.027520393952727318
    2. '[' → logprob: -3.6525204181671143
    3. '(' → logprob: -6.777520179748535
    4. 'bit' → logprob: -10.277520179748535
    5. '0' → logprob: -10.527520179748535
    6. '{' → logprob: -11.902520179748535
    7. ' ' → logprob: -12.902520179748535
    8. ' [' → logprob: -13.527520179748535
    9. '(bit' → logprob: -13.652520179748535
    10. 'set' → logprob: -13.777520179748535

Token 334: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.0619683600962162
    2. ' <<' → logprob: -2.8119683265686035
    3. '<<<' → logprob: -15.311968803405762
    4. '<<(' → logprob: -15.686968803405762
    5. '<' → logprob: -15.811968803405762
    6. '[' → logprob: -16.686967849731445
    7. ' <<=' → logprob: -16.936967849731445
    8. '1' → logprob: -18.311967849731445
    9. '<<<<' → logprob: -18.561967849731445
    10. ' <<
' → logprob: -19.811967849731445

Token 335: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.0007099286303855479
    2. ' bit' → logprob: -7.2507100105285645
    3. '(bit' → logprob: -17.125709533691406
    4. ' ' → logprob: -21.000709533691406
    5. 'Bit' → logprob: -21.625709533691406
    6. '_bit' → logprob: -22.000709533691406
    7. 'bits' → logprob: -22.750709533691406
    8. 'bot' → logprob: -22.875709533691406
    9. '-bit' → logprob: -23.000709533691406
    10. 'bitr' → logprob: -23.000709533691406

Token 336: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0016656580846756697
    2. 'i' → logprob: -7.1266655921936035
    3. 'while' → logprob: -7.7516655921936035
    4. '
' → logprob: -8.376666069030762
    5. '	while' → logprob: -9.751666069030762
    6. '    
' → logprob: -10.001666069030762
    7. ' while' → logprob: -10.126666069030762
    8. '	i' → logprob: -10.251666069030762
    9. ' i' → logprob: -11.501666069030762
    10. '  
' → logprob: -12.626666069030762

Token 337: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015896284952759743
    2. 'i' → logprob: -4.765896320343018
    3. 'while' → logprob: -5.140896320343018
    4. '
' → logprob: -6.765896320343018
    5. ' while' → logprob: -9.26589584350586
    6. '    
' → logprob: -9.64089584350586
    7. ' i' → logprob: -10.14089584350586
    8. '	while' → logprob: -10.89089584350586
    9. '	i' → logprob: -11.26589584350586
    10. ',i' → logprob: -12.01589584350586

Token 338: ' Mets' (ID: 76126)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -1.0772123336791992
    2. 'while' → logprob: -1.0772123336791992
    3. '   ' → logprob: -1.2022123336791992
    4. 'for' → logprob: -4.952212333679199
    5. ' for' → logprob: -5.702212333679199
    6. '#' → logprob: -6.202212333679199
    7. ' ' → logprob: -6.452212333679199
    8. ' return' → logprob: -7.077212333679199
    9. ' update' → logprob: -7.452212333679199
    10. 'return' → logprob: -7.577212333679199

Token 339: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.6161472797393799
    2. 'à' → logprob: -0.8661472797393799
    3. ' ' → logprob: -4.241147041320801
    4. 'bit' → logprob: -4.866147041320801
    5. 'a' → logprob: -5.491147041320801
    6. '-à' → logprob: -5.616147041320801
    7. '1' → logprob: -5.991147041320801
    8. ' bit' → logprob: -6.741147041320801
    9. 'le' → logprob: -6.866147041320801
    10. 'la' → logprob: -6.866147041320801

Token 340: ' jour' (ID: 8379)
  Prédit: 'jour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jour' → logprob: -0.002045221161097288
    2. ' jour' → logprob: -6.502045154571533
    3. '1' → logprob: -8.627045631408691
    4. 'jou' → logprob: -9.002045631408691
    5. 'jours' → logprob: -9.502045631408691
    6. 'SEG' → logprob: -9.877045631408691
    7. '```' → logprob: -9.877045631408691
    8. '0' → logprob: -11.002045631408691
    9. 'Jour' → logprob: -11.377045631408691
    10. ' ' → logprob: -11.627045631408691

Token 341: ' avec' (ID: 3937)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 342: ' le' (ID: 505)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.2152639627456665
    2. ' bit' → logprob: -1.7152639627456665
    3. ' la' → logprob: -4.965263843536377
    4. 'le' → logprob: -6.465263843536377
    5. 'la' → logprob: -6.590263843536377
    6. 'SEG' → logprob: -6.590263843536377
    7. ' le' → logprob: -6.840263843536377
    8. ' SEG' → logprob: -7.340263843536377
    9. ' l' → logprob: -8.715264320373535
    10. ' the' → logprob: -9.090264320373535

Token 343: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.016655215993523598
    2. ' bit' → logprob: -4.266655445098877
    3. 'bits' → logprob: -7.391655445098877
    4. 'segment' → logprob: -7.641655445098877
    5. ' nouveau' → logprob: -8.016654968261719
    6. 'val' → logprob: -8.141654968261719
    7. 'nou' → logprob: -8.891654968261719
    8. '1' → logprob: -9.391654968261719
    9. ' segment' → logprob: -9.516654968261719
    10. 'mask' → logprob: -9.641654968261719

Token 344: ' correspondant' (ID: 146058)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '|' → logprob: -1.481931447982788
    2. ' ' → logprob: -1.731931447982788
    3. ')' → logprob: -2.231931447982788
    4. 'mask' → logprob: -2.231931447982788
    5. '   ' → logprob: -2.356931447982788
    6. '_' → logprob: -2.981931447982788
    7. '```' → logprob: -3.356931447982788
    8. '<|end|>' → logprob: -3.731931447982788
    9. 'set' → logprob: -3.981931447982788
    10. ';' → logprob: -4.106931686401367

Token 345: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00047630956396460533
    2. 'i' → logprob: -8.500475883483887
    3. ' i' → logprob: -8.875475883483887
    4. '    
' → logprob: -9.750475883483887
    5. ' while' → logprob: -10.000475883483887
    6. '
' → logprob: -11.500475883483887
    7. 'while' → logprob: -11.750475883483887
    8. '	i' → logprob: -12.750475883483887
    9. ',i' → logprob: -13.125475883483887
    10. '   
' → logprob: -13.375475883483887

Token 346: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.423922598361969
    2. 'bit' → logprob: -1.5489225387573242
    3. 'la' → logprob: -2.673922538757324
    4. ' bit' → logprob: -3.048922538757324
    5. ' l' → logprob: -4.923922538757324
    6. 'l' → logprob: -5.548922538757324
    7. ' ' → logprob: -6.298922538757324
    8. 'le' → logprob: -6.798922538757324
    9. ' cette' → logprob: -6.798922538757324
    10. 'the' → logprob: -8.048922538757324

Token 347: ' lettre' (ID: 68013)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.5797730088233948
    2. 'lett' → logprob: -0.8297730088233948
    3. 'bit' → logprob: -6.82977294921875
    4. 'char' → logprob: -7.20477294921875
    5. ' lettre' → logprob: -7.45477294921875
    6. ' caractère' → logprob: -7.70477294921875
    7. 'letter' → logprob: -8.45477294921875
    8. 'nou' → logprob: -8.70477294921875
    9. 'let' → logprob: -8.95477294921875
    10. 'c' → logprob: -9.07977294921875

Token 348: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0014722455525770783
    2. ' while' → logprob: -7.751472473144531
    3. ' i' → logprob: -7.876472473144531
    4. 'i' → logprob: -7.876472473144531
    5. '    
' → logprob: -8.626472473144531
    6. 'while' → logprob: -9.751472473144531
    7. '
' → logprob: -11.501472473144531
    8. '   
' → logprob: -11.626472473144531
    9. '	i' → logprob: -11.751472473144531
    10. '	while' → logprob: -12.126472473144531

Token 349: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021725185215473175
    2. 'i' → logprob: -3.8967251777648926
    3. 'while' → logprob: -6.896725177764893
    4. ' while' → logprob: -9.39672565460205
    5. ' i' → logprob: -9.52172565460205
    6. '    
' → logprob: -11.52172565460205
    7. '	i' → logprob: -13.39672565460205
    8. '	while' → logprob: -13.64672565460205
    9. '  ' → logprob: -14.27172565460205
    10. '       ' → logprob: -14.52172565460205

Token 350: ' #' (ID: 1069)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5768392086029053
    2. '   ' → logprob: -1.0768392086029053
    3. 'while' → logprob: -2.3268392086029053
    4. ' i' → logprob: -10.576839447021484
    5. ' while' → logprob: -10.701839447021484
    6. '	while' → logprob: -12.826839447021484
    7. '	i' → logprob: -13.451839447021484
    8. '  ' → logprob: -13.826839447021484
    9. 'While' → logprob: -14.201839447021484
    10. '    
' → logprob: -14.826839447021484

Token 351: ' Met' (ID: 7227)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.28720080852508545
    2. 'while' → logprob: -1.4122008085250854
    3. '   ' → logprob: -5.287200927734375
    4. ' i' → logprob: -7.662200927734375
    5. ' while' → logprob: -7.787200927734375
    6. '  ' → logprob: -10.287200927734375
    7. ' ' → logprob: -10.412200927734375
    8. 'While' → logprob: -11.412200927734375
    9. '
' → logprob: -12.537200927734375
    10. '    
' → logprob: -12.787200927734375

Token 352: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05600500851869583
    2. ' i' → logprob: -3.6810050010681152
    3. ' à' → logprob: -4.306005001068115
    4. '  ' → logprob: -5.181005001068115
    5. 'à' → logprob: -5.681005001068115
    6. ' j' → logprob: -6.181005001068115
    7. 're' → logprob: -7.431005001068115
    8. ' ' → logprob: -7.431005001068115
    9. 'er' → logprob: -7.556005001068115
    10. 'tre' → logprob: -7.556005001068115

Token 353: ' jour' (ID: 8379)
  Prédit: ' jour'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' jour' → logprob: -0.3485400080680847
    2. 'jour' → logprob: -1.3485400676727295
    3. 'i' → logprob: -3.5985400676727295
    4. 'range' → logprob: -6.47353982925415
    5. 'j' → logprob: -6.84853982925415
    6. 'for' → logprob: -7.34853982925415
    7. 'jours' → logprob: -7.72353982925415
    8. ' jours' → logprob: -7.84853982925415
    9. ' i' → logprob: -8.098540306091309
    10. 're' → logprob: -8.223540306091309

Token 354: ' les' (ID: 1341)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.453153520822525
    2. 'i' → logprob: -1.0781534910202026
    3. '   ' → logprob: -3.828153610229492
    4. ' while' → logprob: -6.703153610229492
    5. ' ' → logprob: -7.453153610229492
    6. 'while' → logprob: -8.078153610229492
    7. '  ' → logprob: -8.453153610229492
    8. '    ' → logprob: -10.328153610229492
    9. '	i' → logprob: -10.453153610229492
    10. ' (' → logprob: -12.703153610229492

Token 355: ' noe' (ID: 49921)
  Prédit: ' parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' parent' → logprob: -0.8247650265693665
    2. 'i' → logprob: -1.3247649669647217
    3. ' i' → logprob: -1.5747649669647217
    4. 'parent' → logprob: -3.0747649669647217
    5. ' parents' → logprob: -3.4497649669647217
    6. '   ' → logprob: -5.199765205383301
    7. ' ' → logprob: -5.824765205383301
    8. 'parents' → logprob: -6.699765205383301
    9. '  ' → logprob: -8.1997652053833
    10. ' p' → logprob: -8.4497652053833

Token 356: 'uds' (ID: 44387)
  Prédit: 'uds'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uds' → logprob: -0.5253048539161682
    2. 'ud' → logprob: -0.9003048539161682
    3. 'x' → logprob: -6.900304794311523
    4. '   ' → logprob: -7.275304794311523
    5. 's' → logprob: -9.275304794311523
    6. ' ' → logprob: -9.525304794311523
    7. 'd' → logprob: -9.650304794311523
    8. 'e' → logprob: -10.150304794311523
    9. 'ds' → logprob: -10.150304794311523
    10. 'u' → logprob: -10.900304794311523

Token 357: ' anc' (ID: 11568)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028689069673419
    2. ' i' → logprob: -3.90368914604187
    3. ' parent' → logprob: -6.028688907623291
    4. ' parents' → logprob: -6.153688907623291
    5. 'i' → logprob: -7.028688907623291
    6. ' ' → logprob: -7.278688907623291
    7. ' père' → logprob: -7.403688907623291
    8. 'parent' → logprob: -8.15368938446045
    9. 'anc' → logprob: -8.52868938446045
    10. '  ' → logprob: -8.77868938446045

Token 358: 'êtres' (ID: 81442)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.6783860921859741
    2. 'êtres' → logprob: -0.8033860921859741
    3. 'et' → logprob: -3.6783862113952637
    4. 'estors' → logprob: -4.553386211395264
    5. 'ets' → logprob: -6.428386211395264
    6. 'es' → logprob: -6.678386211395264
    7. 'estres' → logprob: -6.803386211395264
    8. 'être' → logprob: -7.178386211395264
    9. 'eux' → logprob: -7.178386211395264
    10. 'ects' → logprob: -7.303386211395264

Token 359: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006770504405722022
    2. ' while' → logprob: -7.750677108764648
    3. ' i' → logprob: -8.625677108764648
    4. 'while' → logprob: -10.250677108764648
    5. ',' → logprob: -11.375677108764648
    6. 'i' → logprob: -11.875677108764648
    7. '    
' → logprob: -12.875677108764648
    8. '  ' → logprob: -13.000677108764648
    9. '	while' → logprob: -13.500677108764648
    10. ' ' → logprob: -13.500677108764648

Token 360: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0018604497890919447
    2. 'i' → logprob: -7.001860618591309
    3. ' i' → logprob: -7.876860618591309
    4. ' while' → logprob: -8.001860618591309
    5. 'while' → logprob: -8.376860618591309
    6. '    
' → logprob: -13.126860618591309
    7. '	while' → logprob: -14.376860618591309
    8. '
' → logprob: -14.501860618591309
    9. ',' → logprob: -15.251860618591309
    10. '       ' → logprob: -15.501860618591309

Token 361: ' while' (ID: 2049)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.21280397474765778
    2. '   ' → logprob: -1.9628039598464966
    3. 'while' (adapté à ' while') → logprob: -3.462804079055786
    4. ' i' → logprob: -3.962804079055786
    5. ' while' → logprob: -7.087803840637207
    6. '	i' → logprob: -11.087803840637207
    7. ' ' → logprob: -11.712803840637207
    8. '  ' → logprob: -12.337803840637207
    9. '	while' → logprob: -12.837803840637207
    10. 'While' → logprob: -13.962803840637207

Token 362: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.06197015196084976
    2. ' i' → logprob: -2.8119702339172363
    3. '	i' → logprob: -13.561969757080078
    4. '   ' → logprob: -13.936969757080078
    5. '(i' → logprob: -16.061969757080078
    6. ' ' → logprob: -16.686969757080078
    7. '  ' → logprob: -17.811969757080078
    8. '_i' → logprob: -18.686969757080078
    9. '1' → logprob: -18.936969757080078
    10. ')i' → logprob: -19.311969757080078

Token 363: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.023248272016644478
    2. ' >' → logprob: -3.7732481956481934
    3. '=' → logprob: -14.148248672485352
    4. '   ' → logprob: -14.273248672485352
    5. '!=' → logprob: -14.273248672485352
    6. ' ' → logprob: -14.773248672485352
    7. '	' → logprob: -16.39824867248535
    8. '  ' → logprob: -16.52324867248535
    9. '>>' → logprob: -16.77324867248535
    10. '//' → logprob: -17.39824867248535

Token 364: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004624153021723032
    2. ' ' → logprob: -5.379624366760254
    3. '1' → logprob: -12.754624366760254
    4. '   ' → logprob: -14.379624366760254
    5. '=' → logprob: -15.004624366760254
    6. '  ' → logprob: -16.379623413085938
    7. '۰' → logprob: -17.504623413085938
    8. '    ' → logprob: -18.004623413085938
    9. '>' → logprob: -18.442123413085938
    10. ':' → logprob: -19.317123413085938

Token 365: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001239196863025427
    2. ' ' → logprob: -9.000123977661133
    3. '1' → logprob: -14.875123977661133
    4. '   ' → logprob: -16.250123977661133
    5. '۰' → logprob: -17.562623977661133
    6. '=' → logprob: -18.062623977661133
    7. '  ' → logprob: -18.187623977661133
    8. '٠' → logprob: -19.687623977661133
    9. '０' → logprob: -20.000123977661133
    10. '>' → logprob: -20.062623977661133

Token 366: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.30617111921310425
    2. ':
' → logprob: -1.431171178817749
    3. '   ' → logprob: -3.931171178817749
    4. ' :' → logprob: -6.55617094039917
    5. ' :
' → logprob: -6.55617094039917
    6. '=' → logprob: -6.80617094039917
    7. ' =' → logprob: -7.80617094039917
    8. '>' → logprob: -7.93117094039917
    9. '    ' → logprob: -9.181171417236328
    10. '       ' → logprob: -10.056171417236328

Token 367: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008829176425933838
    2. 'i' → logprob: -5.508829116821289
    3. '   ' → logprob: -5.633829116821289
    4. ' i' → logprob: -6.758829116821289
    5. '[i' → logprob: -14.383829116821289
    6. '	i' → logprob: -14.383829116821289
    7. '    ' → logprob: -14.508829116821289
    8. '1' → logprob: -14.633829116821289
    9. ' ' → logprob: -14.883829116821289
    10. '     ' → logprob: -15.133829116821289

Token 368: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.0073270248249173164
    2. '   ' → logprob: -5.507327079772949
    3. ' i' → logprob: -6.257327079772949
    4. '       ' → logprob: -6.632327079772949
    5. ' ' → logprob: -13.13232707977295
    6. '           ' → logprob: -13.25732707977295
    7. '     ' → logprob: -13.25732707977295
    8. '	i' → logprob: -13.50732707977295
    9. '  ' → logprob: -14.00732707977295
    10. '    ' → logprob: -14.13232707977295

Token 369: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06207849085330963
    2. ' =' → logprob: -2.8120784759521484
    3. '-=' → logprob: -9.312078475952148
    4. ' -=' → logprob: -11.062078475952148
    5. '//=' → logprob: -12.687078475952148
    6. ' //' → logprob: -14.562078475952148
    7. '   ' → logprob: -14.812078475952148
    8. ' ' → logprob: -15.187078475952148
    9. '+=' → logprob: -15.312078475952148
    10. '=(' → logprob: -15.562078475952148

Token 370: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0004914337769150734
    2. ' (' → logprob: -7.750491619110107
    3. '(' → logprob: -10.00049114227295
    4. '(parent' → logprob: -11.62549114227295
    5. '(I' → logprob: -13.12549114227295
    6. '(id' → logprob: -13.37549114227295
    7. '(ii' → logprob: -13.87549114227295
    8. '(index' → logprob: -14.87549114227295
    9. '(ind' → logprob: -15.25049114227295
    10. '(idx' → logprob: -15.50049114227295

Token 371: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.043874990195035934
    2. '(i' → logprob: -3.168874979019165
    3. ' i' → logprob: -7.168875217437744
    4. ' (' → logprob: -9.293874740600586
    5. ')i' → logprob: -12.418874740600586
    6. '	i' → logprob: -13.418874740600586
    7. '[i' → logprob: -13.418874740600586
    8. '   ' → logprob: -13.418874740600586
    9. ' ' → logprob: -13.793874740600586
    10. ')' → logprob: -13.918874740600586

Token 372: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.4740775227546692
    2. '-' → logprob: -0.9740775227546692
    3. ' ' → logprob: -15.224077224731445
    4. '1' → logprob: -15.849077224731445
    5. ')' → logprob: -17.099077224731445
    6. '2' → logprob: -17.349077224731445
    7. '  ' → logprob: -17.599077224731445
    8. '   ' → logprob: -18.099077224731445
    9. ' (' → logprob: -18.974077224731445
    10. 's' → logprob: -19.099077224731445

Token 373: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.130576806142926e-05
    2. ' ' → logprob: -10.375031471252441
    3. '   ' → logprob: -19.500030517578125
    4. '  ' → logprob: -21.500030517578125
    5. ')' → logprob: -21.625030517578125
    6. '2' → logprob: -22.000030517578125
    7. '-' → logprob: -22.375030517578125
    8. '```' → logprob: -23.125030517578125
    9. '    ' → logprob: -23.250030517578125
    10. '     ' → logprob: -23.250030517578125

Token 374: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '   ' → logprob: -19.5
    4. ')' → logprob: -20.0
    5. '```' → logprob: -21.625
    6. '۱' → logprob: -22.0
    7. '-' → logprob: -22.4375
    8. '  ' → logprob: -22.5
    9. '१' → logprob: -22.5625
    10. '১' → logprob: -22.6875

Token 375: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003213997988495976
    2. ')//' → logprob: -8.125321388244629
    3. ' )' → logprob: -10.875321388244629
    4. ')>>' → logprob: -12.250321388244629
    5. ')
' → logprob: -14.125321388244629
    6. '   ' → logprob: -14.750321388244629
    7. '//' → logprob: -15.000321388244629
    8. '>>' → logprob: -16.000322341918945
    9. '")' → logprob: -17.375322341918945
    10. ' ' → logprob: -17.625322341918945

Token 376: ' //' (ID: 602)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.927078127861023
    2. '>>' → logprob: -1.177078127861023
    3. '//' → logprob: -1.802078127861023
    4. '   ' → logprob: -3.1770782470703125
    5. ' //' → logprob: -3.5520782470703125
    6. '       ' → logprob: -4.4270782470703125
    7. ')
' → logprob: -4.8020782470703125
    8. ')' → logprob: -4.9270782470703125
    9. '=' → logprob: -5.3020782470703125
    10. ' ' → logprob: -5.8020782470703125

Token 377: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.623244553338736e-05
    2. ' ' → logprob: -9.625065803527832
    3. '   ' → logprob: -16.75006675720215
    4. '```' → logprob: -19.37506675720215
    5. '  ' → logprob: -19.50006675720215
    6. '    ' → logprob: -20.37506675720215
    7. '
' → logprob: -21.12506675720215
    8. '     ' → logprob: -21.12506675720215
    9. '3' → logprob: -21.12506675720215
    10. '=' → logprob: -21.37506675720215

Token 378: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00010914575977949426
    2. ' ' → logprob: -9.12510871887207
    3. '   ' → logprob: -16.12510871887207
    4. '  ' → logprob: -18.37510871887207
    5. '```' → logprob: -19.68760871887207
    6. '    ' → logprob: -19.75010871887207
    7. '     ' → logprob: -19.75010871887207
    8. '3' → logprob: -19.87510871887207
    9. '
' → logprob: -20.12510871887207
    10. '       ' → logprob: -20.56260871887207

Token 379: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00013882013445254415
    2. '   ' → logprob: -9.500139236450195
    3. ' SEG' → logprob: -10.750139236450195
    4. ',' → logprob: -11.000139236450195
    5. 'SEG' → logprob: -11.500139236450195
    6. 'seg' → logprob: -13.125139236450195
    7. '      ' → logprob: -13.125139236450195
    8. '_SEG' → logprob: -13.250139236450195
    9. '           ' → logprob: -13.375139236450195
    10. 'Seg' → logprob: -13.750139236450195

Token 380: '       ' (ID: 309)
  Prédit: 'SEG'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SEG' → logprob: -0.12382518500089645
    2. '       ' → logprob: -2.2488250732421875
    3. '   ' → logprob: -5.1238250732421875
    4. ' SEG' → logprob: -5.3738250732421875
    5. 'SE' → logprob: -8.248825073242188
    6. '           ' → logprob: -10.623825073242188
    7. '_SEG' → logprob: -10.623825073242188
    8. 'seg' → logprob: -11.623825073242188
    9. ' ' → logprob: -11.873825073242188
    10. '	' → logprob: -11.998825073242188

Token 381: ' SEG' (ID: 90192)
  Prédit: 'SEG'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SEG' (adapté à ' SEG') → logprob: -2.045823566731997e-05
    2. ' SEG' → logprob: -10.875020027160645
    3. '_SEG' → logprob: -14.375020027160645
    4. '   ' → logprob: -14.500020027160645
    5. '       ' → logprob: -15.375020027160645
    6. 'seg' → logprob: -16.25002098083496
    7. '           ' → logprob: -18.00002098083496
    8. 'segment' → logprob: -20.25002098083496
    9. ' ' → logprob: -20.37502098083496
    10. 'SEQ' → logprob: -20.62502098083496

Token 382: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.4987974029500037e-05
    2. '[' → logprob: -10.625024795532227
    3. '[(' → logprob: -15.625024795532227
    4. ' [' → logprob: -16.125024795532227
    5. '=' → logprob: -16.875024795532227
    6. '   ' → logprob: -17.000024795532227
    7. '[
' → logprob: -17.000024795532227
    8. ' =' → logprob: -17.000024795532227
    9. 'i' → logprob: -17.125024795532227
    10. '[I' → logprob: -18.000024795532227

Token 383: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.28118976950645447
    2. ' =' → logprob: -1.4061897993087769
    3. ']' → logprob: -10.906189918518066
    4. ')' → logprob: -11.531189918518066
    5. '>' → logprob: -12.406189918518066
    6. ' ' → logprob: -13.156189918518066
    7. ']=' → logprob: -13.281189918518066
    8. '   ' → logprob: -14.031189918518066
    9. ')=' → logprob: -14.031189918518066
    10. ' |=' → logprob: -14.781189918518066

Token 384: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.012509774416685104
    2. ' =' → logprob: -4.387509822845459
    3. '=

' → logprob: -16.887510299682617
    4. '=
' → logprob: -17.137510299682617
    5. '>' → logprob: -17.262510299682617
    6. '＝' → logprob: -17.512510299682617
    7. '=(' → logprob: -17.887510299682617
    8. '[' → logprob: -18.012510299682617
    9. '.=' → logprob: -18.012510299682617
    10. ' ' → logprob: -18.137510299682617

Token 385: ' SEG' (ID: 90192)
  Prédit: 'SEG'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SEG' → logprob: -5.526570384972729e-05
    2. ' SEG' → logprob: -9.875055313110352
    3. '   ' → logprob: -13.500055313110352
    4. 'SE' → logprob: -13.750055313110352
    5. '_SEG' → logprob: -14.500055313110352
    6. '(' → logprob: -14.750055313110352
    7. '0' → logprob: -16.00005531311035
    8. ' ' → logprob: -16.50005531311035
    9. '  ' → logprob: -16.62505531311035
    10. 'SG' → logprob: -17.12505531311035

Token 386: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0009118211455643177
    2. '[i' → logprob: -7.000911712646484
    3. '[(' → logprob: -15.875911712646484
    4. '2' → logprob: -16.500911712646484
    5. '   ' → logprob: -17.375911712646484
    6. ' ' → logprob: -17.375911712646484
    7. '	' → logprob: -17.625911712646484
    8. '[
' → logprob: -18.000911712646484
    9. '(' → logprob: -19.125911712646484
    10. 'i' → logprob: -19.125911712646484

Token 387: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.007653831038624048
    2. 'i' → logprob: -4.882653713226318
    3. '   ' → logprob: -11.132654190063477
    4. '(' → logprob: -11.257654190063477
    5. ' ' → logprob: -11.632654190063477
    6. '(i' → logprob: -12.007654190063477
    7. '1' → logprob: -13.382654190063477
    8. '[i' → logprob: -14.132654190063477
    9. ' i' → logprob: -14.257654190063477
    10. '[' → logprob: -14.507654190063477

Token 388: ' *' (ID: 425)
  Prédit: '*i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*i' → logprob: -0.0749521404504776
    2. '*' → logprob: -2.8249521255493164
    3. ' *' → logprob: -4.824952125549316
    4. 'i' → logprob: -5.324952125549316
    5. ' i' → logprob: -12.699952125549316
    6. '   ' → logprob: -13.449952125549316
    7. '[i' → logprob: -15.574952125549316
    8. ' ' → logprob: -16.199953079223633
    9. '*(' → logprob: -16.324953079223633
    10. '    ' → logprob: -16.324953079223633

Token 389: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -4.656383680412546e-05
    2. ' i' → logprob: -10.000046730041504
    3. '   ' → logprob: -13.875046730041504
    4. '*i' → logprob: -15.750046730041504
    5. ' ' → logprob: -17.250045776367188
    6. '  ' → logprob: -18.000045776367188
    7. '	i' → logprob: -18.000045776367188
    8. '    ' → logprob: -18.625045776367188
    9. '     ' → logprob: -19.250045776367188
    10. '```' → logprob: -20.250045776367188

Token 390: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.029754074290394783
    2. ' +' → logprob: -3.529754161834717
    3. '   ' → logprob: -12.654753684997559
    4. '1' → logprob: -15.529753684997559
    5. ' ' → logprob: -16.279754638671875
    6. '＋' → logprob: -16.279754638671875
    7. '    ' → logprob: -17.279754638671875
    8. ' plus' → logprob: -17.404754638671875
    9. '  ' → logprob: -17.904754638671875
    10. '```' → logprob: -18.279754638671875

Token 391: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002810007717926055
    2. ' ' → logprob: -8.62528133392334
    3. '   ' → logprob: -9.25028133392334
    4. '+' → logprob: -12.87528133392334
    5. '  ' → logprob: -13.75028133392334
    6. '    ' → logprob: -14.12528133392334
    7. '     ' → logprob: -14.87528133392334
    8. ' +' → logprob: -15.18778133392334
    9. '       ' → logprob: -16.250280380249023
    10. '           ' → logprob: -17.500280380249023

Token 392: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2127087504486553e-05
    2. ' ' → logprob: -10.875021934509277
    3. '   ' → logprob: -13.125021934509277
    4. '+' → logprob: -15.187521934509277
    5. '    ' → logprob: -15.937521934509277
    6. '  ' → logprob: -16.000022888183594
    7. '0' → logprob: -16.062522888183594
    8. ']' → logprob: -16.062522888183594
    9. '     ' → logprob: -16.687522888183594
    10. '2' → logprob: -16.812522888183594

Token 393: ']' (ID: 60)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.029901834204792976
    2. ' |' → logprob: -3.5299017429351807
    3. ']' → logprob: -8.904901504516602
    4. ' ' → logprob: -11.404901504516602
    5. ')' → logprob: -12.779901504516602
    6. '   ' → logprob: -14.779901504516602
    7. '    ' → logprob: -15.029901504516602
    8. '│' → logprob: -15.529901504516602
    9. ' ' → logprob: -16.0299015045166
    10. '  ' → logprob: -16.1549015045166

Token 394: ' |' (ID: 1022)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.0019294669618830085
    2. ' |' → logprob: -6.25192928314209
    3. ' ' → logprob: -15.00192928314209
    4. '   ' → logprob: -16.501930236816406
    5. '^' → logprob: -16.626930236816406
    6. '│' → logprob: -16.626930236816406
    7. '
' → logprob: -16.751930236816406
    8. '[' → logprob: -17.251930236816406
    9. '    ' → logprob: -17.501930236816406
    10. '|`
' → logprob: -17.751930236816406

Token 395: ' SEG' (ID: 90192)
  Prédit: 'SEG'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SEG' → logprob: -0.04859134554862976
    2. ' SEG' → logprob: -3.048591375350952
    3. '_SEG' → logprob: -12.798591613769531
    4. 'SE' → logprob: -14.048591613769531
    5. '   ' → logprob: -15.173591613769531
    6. ' ' → logprob: -16.29859161376953
    7. '  ' → logprob: -17.04859161376953
    8. 'SEQ' → logprob: -17.79859161376953
    9. '    ' → logprob: -18.17359161376953
    10. 'SG' → logprob: -18.42359161376953

Token 396: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.339278580620885e-06
    2. '2' → logprob: -13.750001907348633
    3. '[
' → logprob: -14.250001907348633
    4. ' [' → logprob: -14.500001907348633
    5. '[(' → logprob: -16.875001907348633
    6. '(' → logprob: -17.500001907348633
    7. '   ' → logprob: -17.500001907348633
    8. '][' → logprob: -17.625001907348633
    9. ' ' → logprob: -17.875001907348633
    10. ']' → logprob: -18.000001907348633

Token 397: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00012976066500414163
    2. ' ' → logprob: -9.000129699707031
    3. '   ' → logprob: -12.750129699707031
    4. '(' → logprob: -13.125129699707031
    5. '[' → logprob: -14.000129699707031
    6. '  ' → logprob: -14.750129699707031
    7. '    ' → logprob: -16.25012969970703
    8. '       ' → logprob: -17.87512969970703
    9. '     ' → logprob: -18.12512969970703
    10. '`' → logprob: -18.37512969970703

Token 398: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.3140594959259033
    2. '*' → logprob: -1.3140594959259033
    3. '[' → logprob: -7.439059257507324
    4. '*i' → logprob: -9.439059257507324
    5. '2' → logprob: -9.939059257507324
    6. '[i' → logprob: -10.189059257507324
    7. ' ' → logprob: -11.189059257507324
    8. ']' → logprob: -11.564059257507324
    9. '   ' → logprob: -12.064059257507324
    10. ')' → logprob: -12.314059257507324

Token 399: ' i' (ID: 575)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.006863963324576616
    2. ' ' → logprob: -5.006864070892334
    3. '(' → logprob: -9.381863594055176
    4. '   ' → logprob: -10.756863594055176
    5. 'i' → logprob: -11.006863594055176
    6. '  ' → logprob: -12.131863594055176
    7. ' i' → logprob: -12.131863594055176
    8. ' (' → logprob: -12.881863594055176
    9. ']' → logprob: -12.881863594055176
    10. '(i' → logprob: -13.131863594055176

Token 400: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.11974413692951202
    2. ' +' → logprob: -2.369744062423706
    3. '2' → logprob: -3.994744062423706
    4. ']' → logprob: -8.119744300842285
    5. '   ' → logprob: -8.119744300842285
    6. ' ' → logprob: -9.119744300842285
    7. '    ' → logprob: -9.369744300842285
    8. '[' → logprob: -9.369744300842285
    9. '  ' → logprob: -10.869744300842285
    10. '       ' → logprob: -11.494744300842285

Token 401: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0028958094771951437
    2. '244' → logprob: -7.127895832061768
    3. ' ' → logprob: -8.00289535522461
    4. '246' → logprob: -8.50289535522461
    5. '264' → logprob: -8.62789535522461
    6. '248' → logprob: -8.87789535522461
    7. '22' → logprob: -8.87789535522461
    8. '224' → logprob: -9.00289535522461
    9. '254' → logprob: -9.00289535522461
    10. '242' → logprob: -9.00289535522461

Token 402: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00011224505578866228
    2. ' ' → logprob: -9.750112533569336
    3. '244' → logprob: -12.312612533569336
    4. '22' → logprob: -12.437612533569336
    5. '246' → logprob: -12.500112533569336
    6. '0' → logprob: -12.562612533569336
    7. '264' → logprob: -12.687612533569336
    8. '224' → logprob: -13.250112533569336
    9. '292' → logprob: -13.250112533569336
    10. '   ' → logprob: -13.500112533569336

Token 403: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.012044870294630527
    2. '<|end|>' → logprob: -5.137044906616211
    3. ')' → logprob: -5.262044906616211
    4. ' ]' → logprob: -7.137044906616211
    5. ')]' → logprob: -9.887044906616211
    6. '<|end|>' → logprob: -11.012044906616211
    7. '   ' → logprob: -11.512044906616211
    8. '])' → logprob: -11.887044906616211
    9. ' )' → logprob: -12.012044906616211
    10. ']
' → logprob: -12.012044906616211

Token 404: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 405: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 406: ' Union' (ID: 14746)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 407: ' des' (ID: 731)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 408: ' deux' (ID: 10301)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.09247022867202759
    2. 'bits' → logprob: -3.217470169067383
    3. ' deux' → logprob: -3.842470169067383
    4. 'segments' → logprob: -5.217470169067383
    5. 'SEG' → logprob: -5.717470169067383
    6. ' enfants' → logprob: -5.717470169067383
    7. 'seg' → logprob: -5.967470169067383
    8. 'mas' → logprob: -5.967470169067383
    9. 'bit' → logprob: -6.342470169067383
    10. ' segments' → logprob: -6.842470169067383

Token 409: ' enfants' (ID: 24681)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.6960150003433228
    2. ' enfants' → logprob: -1.0710150003433228
    3. 'f' → logprob: -2.071014881134033
    4. ' fils' → logprob: -4.196014881134033
    5. 'bits' → logprob: -5.071014881134033
    6. 'children' → logprob: -5.446014881134033
    7. 'child' → logprob: -6.696014881134033
    8. 'segments' → logprob: -6.821014881134033
    9. 's' → logprob: -7.071014881134033
    10. 'mas' → logprob: -7.571014881134033

Token 410: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 411: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0003963569179177284
    2. '
' → logprob: -8.125396728515625
    3. '<|end|>' → logprob: -9.250396728515625
    4. '```' → logprob: -13.375396728515625
    5. '  
' → logprob: -13.875396728515625
    6. '    
' → logprob: -14.500396728515625
    7. ' def' → logprob: -14.625396728515625
    8. '#' → logprob: -15.250396728515625
    9. '

' → logprob: -15.625396728515625
    10. '<|end|>' → logprob: -16.000396728515625

Token 412: ' find' (ID: 1646)
  Prédit: 'query'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'query' → logprob: -0.082671158015728
    2. ' query' → logprob: -3.0826711654663086
    3. 'build' → logprob: -3.4576711654663086
    4. ' build' → logprob: -6.832671165466309
    5. 'count' → logprob: -8.332671165466309
    6. 'range' → logprob: -8.957671165466309
    7. 'update' → logprob: -9.457671165466309
    8. 'get' → logprob: -9.457671165466309
    9. 'combine' → logprob: -9.832671165466309
    10. 'process' → logprob: -10.457671165466309

Token 413: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.400273859500885
    2. '_missing' → logprob: -2.9002737998962402
    3. '(l' → logprob: -3.0252737998962402
    4. '(k' → logprob: -3.6502737998962402
    5. '_first' → logprob: -3.6502737998962402
    6. '(x' → logprob: -3.7752737998962402
    7. '_unique' → logprob: -4.27527379989624
    8. '(i' → logprob: -4.27527379989624
    9. '_next' → logprob: -4.40027379989624
    10. '_left' → logprob: -5.02527379989624

Token 414: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00045700959162786603
    2. ',b' → logprob: -9.250456809997559
    3. ' ,' → logprob: -9.250456809997559
    4. 'r' → logprob: -9.750456809997559
    5. '[],' → logprob: -10.750456809997559
    6. ',r' → logprob: -10.750456809997559
    7. ',l' → logprob: -10.875456809997559
    8. 'def' → logprob: -10.875456809997559
    9. 'b' → logprob: -11.125456809997559
    10. ',a' → logprob: -11.250456809997559

Token 415: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00014001218369230628
    2. ' b' → logprob: -8.875140190124512
    3. 'def' → logprob: -17.375139236450195
    4. '   ' → logprob: -17.375139236450195
    5. '<|end|>' → logprob: -17.375139236450195
    6. 'd' → logprob: -18.875139236450195
    7. 'a' → logprob: -18.875139236450195
    8. 'l' → logprob: -19.125139236450195
    9. '<|end|>' → logprob: -19.125139236450195
    10. 'r' → logprob: -19.250139236450195

Token 416: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006459566066041589
    2. '):' → logprob: -7.375646114349365
    3. ' ,' → logprob: -11.625645637512207
    4. ',a' → logprob: -12.250645637512207
    5. '   ' → logprob: -12.875645637512207
    6. '):
' → logprob: -14.125645637512207
    7. ',i' → logprob: -14.250645637512207
    8. ')' → logprob: -14.750645637512207
    9. ',b' → logprob: -15.000645637512207
    10. 'def' → logprob: -16.375646591186523

Token 417: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.2267308235168457
    2. 'i' → logprob: -1.6017308235168457
    3. 'x' → logprob: -7.351730823516846
    4. ' k' → logprob: -8.101730346679688
    5. 'v' → logprob: -8.726730346679688
    6. ' i' → logprob: -9.601730346679688
    7. 'idx' → logprob: -10.101730346679688
    8. '0' → logprob: -10.476730346679688
    9. '1' → logprob: -10.851730346679688
    10. 'node' → logprob: -11.476730346679688

Token 418: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0028223509434610605
    2. '=' → logprob: -5.877822399139404
    3. ' ,' → logprob: -11.002821922302246
    4. '0' → logprob: -15.127821922302246
    5. '   ' → logprob: -15.627821922302246
    6. '=None' → logprob: -16.502822875976562
    7. '1' → logprob: -16.627822875976562
    8. ',k' → logprob: -16.752822875976562
    9. 'def' → logprob: -17.377822875976562
    10. ',
' → logprob: -17.627822875976562

Token 419: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0029110272880643606
    2. 'x' → logprob: -6.12791109085083
    3. 'lo' → logprob: -8.252910614013672
    4. 's' → logprob: -8.627910614013672
    5. 'lx' → logprob: -9.002910614013672
    6. 'left' → logprob: -9.877910614013672
    7. 'c' → logprob: -10.002910614013672
    8. ' l' → logprob: -10.377910614013672
    9. 'p' → logprob: -12.002910614013672
    10. '0' → logprob: -12.502910614013672

Token 420: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.610702363715973e-06
    2. ' ,' → logprob: -11.625009536743164
    3. ',b' → logprob: -15.500009536743164
    4. ',r' → logprob: -15.500009536743164
    5. ',int' → logprob: -16.625009536743164
    6. ',k' → logprob: -16.750009536743164
    7. '=' → logprob: -17.375009536743164
    8. ',
' → logprob: -17.625009536743164
    9. '=None' → logprob: -18.250009536743164
    10. ',v' → logprob: -18.625009536743164

Token 421: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0007099286303855479
    2. ' r' → logprob: -7.2507100105285645
    3. 'm' → logprob: -19.000709533691406
    4. 'b' → logprob: -19.125709533691406
    5. ',r' → logprob: -19.125709533691406
    6. ',' → logprob: -19.875709533691406
    7. 'rans' → logprob: -19.875709533691406
    8. 'd' → logprob: -20.250709533691406
    9. 't' → logprob: -20.250709533691406
    10. 'x' → logprob: -20.625709533691406

Token 422: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0008284482173621655
    2. '):
' → logprob: -7.125828266143799
    3. ')' → logprob: -10.875828742980957
    4. ':' → logprob: -13.250828742980957
    5. ',' → logprob: -13.750828742980957
    6. ' ):' → logprob: -13.875828742980957
    7. '):
' → logprob: -13.875828742980957
    8. '):

' → logprob: -15.625828742980957
    9. '=' → logprob: -16.50082778930664
    10. '   ' → logprob: -17.00082778930664

Token 423: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006324975984171033
    2. 'if' → logprob: -7.625632286071777
    3. ' if' → logprob: -9.125632286071777
    4. ':' → logprob: -11.625632286071777
    5. '<|end|>' → logprob: -12.000632286071777
    6. '    ' → logprob: -12.625632286071777
    7. '```' → logprob: -12.625632286071777
    8. '	if' → logprob: -12.875632286071777
    9. '  ' → logprob: -13.000632286071777
    10. 'If' → logprob: -13.250632286071777

Token 424: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3336688280105591
    2. 'if' → logprob: -1.708668828010559
    3. ':' → logprob: -2.9586687088012695
    4. ' if' → logprob: -3.4586687088012695
    5. ':
' → logprob: -4.0836687088012695
    6. '    ' → logprob: -7.3336687088012695
    7. '  ' → logprob: -7.8336687088012695
    8. ' ' → logprob: -8.33366870880127
    9. ' 
' → logprob: -8.83366870880127
    10. '):
' → logprob: -8.83366870880127

Token 425: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015075122006237507
    2. 'if' → logprob: -4.515075206756592
    3. '"""
' → logprob: -5.640075206756592
    4. ' if' → logprob: -8.515074729919434
    5. '"""' → logprob: -8.640074729919434
    6. '#' → logprob: -10.015074729919434
    7. ' """
' → logprob: -10.890074729919434
    8. '    ' → logprob: -12.390074729919434
    9. '       ' → logprob: -12.515074729919434
    10. '"' → logprob: -12.640074729919434

Token 426: ' Effect' (ID: 22448)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.01730404421687126
    2. 'def' → logprob: -5.142303943634033
    3. '   ' → logprob: -5.267303943634033
    4. ' if' → logprob: -5.642303943634033
    5. 'If' → logprob: -6.892303943634033
    6. '"""' → logprob: -6.892303943634033
    7. '#' → logprob: -8.017304420471191
    8. ':' → logprob: -9.392304420471191
    9. '"""
' → logprob: -10.392304420471191
    10. ')' → logprob: -10.517304420471191

Token 427: 'ue' (ID: 466)
  Prédit: 'ue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -2.939851037808694e-05
    2. 'u' → logprob: -10.500029563903809
    3. 'ues' → logprob: -14.625029563903809
    4. 'uer' → logprob: -14.625029563903809
    5. 'uate' → logprob: -15.250029563903809
    6. 'ure' → logprob: -15.500029563903809
    7. '#' → logprob: -16.000028610229492
    8. 'uez' → logprob: -16.625028610229492
    9. 'uie' → logprob: -16.875028610229492
    10. 'uera' → logprob: -17.000028610229492

Token 428: ' une' (ID: 2463)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.5890456438064575
    2. 'une' → logprob: -1.0890456438064575
    3. 'def' → logprob: -3.464045524597168
    4. ' la' → logprob: -3.464045524597168
    5. 'l' → logprob: -4.214045524597168
    6. ' une' → logprob: -4.464045524597168
    7. 'a' → logprob: -4.964045524597168
    8. 're' → logprob: -6.089045524597168
    9. '   ' → logprob: -6.214045524597168
    10. 'int' → logprob: -6.589045524597168

Token 429: ' requ' (ID: 7028)
  Prédit: 'query'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'query' → logprob: -0.7918774485588074
    2. 're' → logprob: -0.9168774485588074
    3. 'requ' → logprob: -2.041877508163452
    4. 'intersection' → logprob: -4.916877269744873
    5. 'range' → logprob: -5.291877269744873
    6. 'interval' → logprob: -7.041877269744873
    7. 'inter' → logprob: -7.166877269744873
    8. 'partial' → logprob: -7.291877269744873
    9. 'quête' → logprob: -8.416877746582031
    10. 'union' → logprob: -8.541877746582031

Token 430: 'ête' (ID: 16808)
  Prédit: 'ête'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ête' → logprob: -0.023277277126908302
    2. 'ete' → logprob: -3.7732772827148438
    3. 'ète' → logprob: -11.523277282714844
    4. 'êt' → logprob: -12.023277282714844
    5. '?' → logprob: -12.523277282714844
    6. 'te' → logprob: -12.898277282714844
    7. '�' → logprob: -13.398277282714844
    8. '^' → logprob: -13.523277282714844
    9. 'êtes' → logprob: -13.898277282714844
    10. '**' → logprob: -14.148277282714844

Token 431: ' pour' (ID: 1930)
  Prédit: 'sur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sur' → logprob: -0.14613495767116547
    2. ' sur' → logprob: -2.771134853363037
    3. '(a' → logprob: -3.646134853363037
    4. 'def' → logprob: -4.146134853363037
    5. 'part' → logprob: -4.521134853363037
    6. 'de' → logprob: -5.396134853363037
    7. ' de' → logprob: -5.646134853363037
    8. 'a' → logprob: -6.146134853363037
    9. '   ' → logprob: -6.146134853363037
    10. 'range' → logprob: -6.396134853363037

Token 432: ' obtenir' (ID: 54423)
  Prédit: 'ren'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ren' → logprob: -1.9139734506607056
    2. 'count' → logprob: -1.9139734506607056
    3. 'l' → logprob: -2.413973331451416
    4. ' compter' → logprob: -2.413973331451416
    5. 'chercher' → logprob: -2.788973331451416
    6. 'max' → logprob: -3.038973331451416
    7. ' trouver' → logprob: -3.163973331451416
    8. ' ren' → logprob: -3.288973331451416
    9. 'inter' → logprob: -3.413973331451416
    10. '#' → logprob: -3.413973331451416

Token 433: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.5536620616912842
    2. 'le' → logprob: -1.6786620616912842
    3. 'la' → logprob: -2.053662061691284
    4. 'les' → logprob: -2.928662061691284
    5. 'the' → logprob: -3.803662061691284
    6. ' l' → logprob: -4.428662300109863
    7. ' la' → logprob: -4.678662300109863
    8. ' le' → logprob: -5.803662300109863
    9. 'un' → logprob: -6.053662300109863
    10. ' les' → logprob: -6.303662300109863

Token 434: ''un' (ID: 9788)
  Prédit: ''un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''un' → logprob: -0.5139800310134888
    2. 'e' → logprob: -1.2639800310134888
    3. 'union' → logprob: -3.263979911804199
    4. ''ensemble' → logprob: -3.388979911804199
    5. 'a' → logprob: -3.513979911804199
    6. ''' → logprob: -5.013979911804199
    7. ''or' → logprob: -5.388979911804199
    8. ' union' → logprob: -6.388979911804199
    9. 'u' → logprob: -6.638979911804199
    10. '_union' → logprob: -7.388979911804199

Token 435: 'ion' (ID: 294)
  Prédit: 'ion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ion' → logprob: -1.981667537620524e-06
    2. 'ION' → logprob: -13.750001907348633
    3. 'io' → logprob: -15.000001907348633
    4. 'ions' → logprob: -15.500001907348633
    5. '|' → logprob: -15.625001907348633
    6. 'i' → logprob: -16.625001907348633
    7. 'Ion' → logprob: -17.000001907348633
    8. '```' → logprob: -17.250001907348633
    9. 'ique' → logprob: -17.875001907348633
    10. '#' → logprob: -19.125001907348633

Token 436: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.23847758769989014
    2. 'des' → logprob: -2.1134777069091797
    3. ' bit' → logprob: -3.3634777069091797
    4. 'de' → logprob: -3.8634777069091797
    5. 'bit' → logprob: -4.61347770690918
    6. ' complète' → logprob: -4.73847770690918
    7. ' de' → logprob: -4.86347770690918
    8. '<|end|>' → logprob: -6.23847770690918
    9. '|' → logprob: -7.11347770690918
    10. 'd' → logprob: -7.11347770690918

Token 437: ' bits' (ID: 18189)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.5834000706672668
    2. 'SEG' → logprob: -1.208400011062622
    3. 'segments' → logprob: -2.833400011062622
    4. 'bit' → logprob: -3.583400011062622
    5. 'mas' → logprob: -4.083400249481201
    6. ' bits' → logprob: -4.583400249481201
    7. 'val' → logprob: -5.208400249481201
    8. ' segments' → logprob: -5.208400249481201
    9. 'ense' → logprob: -5.583400249481201
    10. 'seg' → logprob: -5.708400249481201

Token 438: ' dans' (ID: 2671)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -1.4942107200622559
    2. 'sur' → logprob: -1.6192107200622559
    3. ' sur' → logprob: -1.9942107200622559
    4. 'set' → logprob: -2.244210720062256
    5. ' set' → logprob: -2.494210720062256
    6. 'dans' → logprob: -2.869210720062256
    7. 'des' → logprob: -3.369210720062256
    8. ' représentant' → logprob: -3.619210720062256
    9. '   ' → logprob: -3.744210720062256
    10. 'represent' → logprob: -3.994210720062256

Token 439: ' l' (ID: 305)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.023937787860631943
    2. '[b' → logprob: -4.148937702178955
    3. '[l' → logprob: -6.273937702178955
    4. '[' → logprob: -6.773937702178955
    5. ' la' → logprob: -6.898937702178955
    6. ' [' → logprob: -7.023937702178955
    7. 'b' → logprob: -7.273937702178955
    8. 'a' → logprob: -7.398937702178955
    9. '[min' → logprob: -7.648937702178955
    10. 'range' → logprob: -7.898937702178955

Token 440: ''' (ID: 6)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.6859660744667053
    2. 'interval' → logprob: -1.5609660148620605
    3. '[' → logprob: -2.0609660148620605
    4. 'a' → logprob: -2.0609660148620605
    5. 'range' → logprob: -3.9359660148620605
    6. 'e' → logprob: -5.6859660148620605
    7. ' [' → logprob: -5.8109660148620605
    8. ' interval' → logprob: -5.9359660148620605
    9. ''' → logprob: -7.0609660148620605
    10. ' a' → logprob: -7.9359660148620605

Token 441: 'interval' (ID: 37558)
  Prédit: 'interval'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.17382796108722687
    2. 'segment' → logprob: -2.298827886581421
    3. 'inter' → logprob: -3.298827886581421
    4. 'intersection' → logprob: -4.173828125
    5. 'range' → logprob: -5.673828125
    6. 'ensemble' → logprob: -6.173828125
    7. ''inter' → logprob: -7.923828125
    8. '[' → logprob: -8.548828125
    9. 'pl' → logprob: -8.798828125
    10. 'seg' → logprob: -9.048828125

Token 442: 'le' (ID: 282)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.013542874716222286
    2. '[' → logprob: -5.263542652130127
    3. ']' → logprob: -5.638542652130127
    4. ')' → logprob: -6.763542652130127
    5. '[e' → logprob: -6.888542652130127
    6. ' e' → logprob: -7.138542652130127
    7. '[a' → logprob: -7.388542652130127
    8. '   ' → logprob: -8.513543128967285
    9. 'a' → logprob: -8.888543128967285
    10. ' ]' → logprob: -9.138543128967285

Token 443: ' [' (ID: 723)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.01877686195075512
    2. '(a' → logprob: -4.018776893615723
    3. ' [' → logprob: -8.143776893615723
    4. 'a' → logprob: -8.643776893615723
    5. '   ' → logprob: -9.643776893615723
    6. 'def' → logprob: -10.393776893615723
    7. ' (' → logprob: -10.643776893615723
    8. ' a' → logprob: -11.143776893615723
    9. '[' → logprob: -11.393776893615723
    10. '```' → logprob: -12.768776893615723

Token 444: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -3.128163257315464e-07
    2. ' a' → logprob: -15.125
    3. 'l' → logprob: -20.625
    4. '   ' → logprob: -21.25
    5. '	a' → logprob: -22.0
    6. 'а' → logprob: -22.25
    7. ',' → logprob: -22.25
    8. '[a' → logprob: -22.5
    9. ',a' → logprob: -22.625
    10. '
' → logprob: -22.625

Token 445: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00031401283922605217
    2. ' ,' → logprob: -8.125313758850098
    3. ',b' → logprob: -11.000313758850098
    4. ',
' → logprob: -14.625313758850098
    5. ',r' → logprob: -15.750313758850098
    6. 'a' → logprob: -16.000314712524414
    7. '   ' → logprob: -16.375314712524414
    8. ',a' → logprob: -16.500314712524414
    9. 'b' → logprob: -17.000314712524414
    10. 's' → logprob: -17.250314712524414

Token 446: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.011047935113310814
    2. ' b' → logprob: -4.511047840118408
    3. ',b' → logprob: -16.51104736328125
    4. ',' → logprob: -17.88604736328125
    5. '   ' → logprob: -19.26104736328125
    6. '	b' → logprob: -20.26104736328125
    7. 'r' → logprob: -20.26104736328125
    8. 'a' → logprob: -20.88604736328125
    9. ')b' → logprob: -21.13604736328125
    10. ' ' → logprob: -21.76104736328125

Token 447: ')' (ID: 8)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.024994879961013794
    2. ']:' → logprob: -4.649994850158691
    3. ']:
' → logprob: -4.774994850158691
    4. ')' → logprob: -5.524994850158691
    5. '].' → logprob: -6.649994850158691
    6. '):
' → logprob: -8.024994850158691
    7. ']
' → logprob: -8.149994850158691
    8. '],' → logprob: -8.399994850158691
    9. '):' → logprob: -8.399994850158691
    10. '   ' → logprob: -8.649994850158691

Token 448: ' dans' (ID: 2671)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44091641902923584
    2. ':' → logprob: -1.0659164190292358
    3. ' :' → logprob: -5.565916538238525
    4. '):' → logprob: -6.065916538238525
    5. ',' → logprob: -6.315916538238525
    6. '<|end|>' → logprob: -6.315916538238525
    7. ':
' → logprob: -6.690916538238525
    8. ')' → logprob: -7.565916538238525
    9. '):
' → logprob: -8.690916061401367
    10. '.' → logprob: -8.940916061401367

Token 449: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.9328104853630066
    2. 'def' → logprob: -1.8078105449676514
    3. ' le' → logprob: -2.1828105449676514
    4. 'l' → logprob: -2.4328105449676514
    5. 'le' → logprob: -2.6828105449676514
    6. '   ' → logprob: -3.4328105449676514
    7. ')' → logprob: -3.8078105449676514
    8. 'la' → logprob: -3.9328105449676514
    9. 'k' → logprob: -4.057810306549072
    10. ' l' → logprob: -4.307810306549072

Token 450: ' chaîne' (ID: 89288)
  Prédit: 'SEG'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'SEG' → logprob: -1.0012792348861694
    2. ' segment' → logprob: -1.1262792348861694
    3. 'segment' → logprob: -1.2512792348861694
    4. ' SEG' → logprob: -4.501279354095459
    5. 'seg' → logprob: -4.626279354095459
    6. ' seg' → logprob: -8.0012788772583
    7. '   ' → logprob: -8.7512788772583
    8. ' tree' → logprob: -9.6262788772583
    9. ' code' → logprob: -9.7512788772583
    10. ' arbre' → logprob: -9.8762788772583

Token 451: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1014942154288292
    2. ':' → logprob: -2.976494312286377
    3. '.' → logprob: -4.226494312286377
    4. '):
' → logprob: -4.601494312286377
    5. '):' → logprob: -4.601494312286377
    6. ':
' → logprob: -5.601494312286377
    7. ',' → logprob: -5.726494312286377
    8. ' :' → logprob: -6.101494312286377
    9. ')' → logprob: -7.351494312286377
    10. ' :
' → logprob: -8.351493835449219

Token 452: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0047772107645869255
    2. 'def' → logprob: -6.629777431488037
    3. ')' → logprob: -7.254777431488037
    4. '):
' → logprob: -7.629777431488037
    5. ' return' → logprob: -8.379776954650879
    6. '    ' → logprob: -8.379776954650879
    7. ' et' → logprob: -8.629776954650879
    8. '       ' → logprob: -8.754776954650879
    9. 'return' → logprob: -8.754776954650879
    10. '```' → logprob: -8.754776954650879

Token 453: ' ce' (ID: 2357)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030360804870724678
    2. '):
' → logprob: -4.405360698699951
    3. ')' → logprob: -4.780360698699951
    4. '    
' → logprob: -6.280360698699951
    5. '    ' → logprob: -7.155360698699951
    6. ' """
' → logprob: -7.280360698699951
    7. '```' → logprob: -7.280360698699951
    8. '
' → logprob: -7.405360698699951
    9. 'def' → logprob: -7.530360698699951
    10. ' 
' → logprob: -7.655360698699951

Token 454: ' qui' (ID: 2780)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5706884264945984
    2. ' qui' → logprob: -1.5706884860992432
    3. 'qui' → logprob: -1.5706884860992432
    4. ' que' → logprob: -5.320688247680664
    5. 'ci' → logprob: -5.695688247680664
    6. 'n' → logprob: -6.570688247680664
    7. 'pend' → logprob: -6.695688247680664
    8. '  ' → logprob: -6.695688247680664
    9. ' ' → logprob: -6.945688247680664
    10. ' that' → logprob: -7.195688247680664

Token 455: ' permet' (ID: 11798)
  Prédit: ' permet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' permet' → logprob: -0.900040328502655
    2. ' correspond' → logprob: -1.6500403881072998
    3. ' signifie' → logprob: -2.0250403881073
    4. ' représente' → logprob: -2.1500403881073
    5. ' indique' → logprob: -2.2750403881073
    6. 'ind' → logprob: -3.9000403881073
    7. 'cor' → logprob: -4.400040149688721
    8. ' donne' → logprob: -5.775040149688721
    9. ' refl' → logprob: -6.400040149688721
    10. ' veut' → logprob: -6.400040149688721

Token 456: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.45608052611351013
    2. ' d' → logprob: -1.3310805559158325
    3. 'de' → logprob: -2.956080436706543
    4. 'd' → logprob: -3.206080436706543
    5. '   ' → logprob: -5.081080436706543
    6. 'def' → logprob: -7.206080436706543
    7. ' ' → logprob: -7.456080436706543
    8. '<|end|>' → logprob: -7.581080436706543
    9. 't' → logprob: -8.081080436706543
    10. ' à' → logprob: -8.956080436706543

Token 457: ' connaitre' (ID: 179435)
  Prédit: ' déterminer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' déterminer' → logprob: -1.2213701009750366
    2. 'con' → logprob: -1.3463701009750366
    3. ' savoir' → logprob: -2.221370220184326
    4. 'dé' → logprob: -2.721370220184326
    5. 's' → logprob: -2.971370220184326
    6. ' compter' → logprob: -2.971370220184326
    7. ' connaître' → logprob: -3.096370220184326
    8. 'conn' → logprob: -3.471370220184326
    9. 'com' → logprob: -4.346370220184326
    10. 'determ' → logprob: -4.471370220184326

Token 458: ' les' (ID: 1341)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.8764182925224304
    2. ' les' → logprob: -1.7514183521270752
    3. ' le' → logprob: -1.7514183521270752
    4. 'les' → logprob: -2.001418352127075
    5. ' la' → logprob: -3.251418352127075
    6. 'la' → logprob: -3.501418352127075
    7. 'l' → logprob: -4.501418113708496
    8. ' quelles' → logprob: -4.501418113708496
    9. ' l' → logprob: -5.251418113708496
    10. ' combien' → logprob: -6.126418113708496

Token 459: ' lettres' (ID: 101234)
  Prédit: ' lettres'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lettres' → logprob: -0.39077478647232056
    2. ' caractères' → logprob: -1.7657747268676758
    3. 'car' → logprob: -2.390774726867676
    4. 'lett' → logprob: -3.765774726867676
    5. 'letters' → logprob: -4.890774726867676
    6. ' types' → logprob: -5.015774726867676
    7. ' letters' → logprob: -5.390774726867676
    8. ' caract' → logprob: -5.890774726867676
    9. 'types' → logprob: -5.890774726867676
    10. ' différentes' → logprob: -6.015774726867676

Token 460: ' distinct' (ID: 16913)
  Prédit: ' présentes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' présentes' → logprob: -0.2826259136199951
    2. 'prés' → logprob: -1.5326259136199951
    3. ' uniques' → logprob: -5.157626152038574
    4. 'distinct' → logprob: -5.282626152038574
    5. '   ' → logprob: -5.782626152038574
    6. ' distinct' → logprob: -6.157626152038574
    7. ' présents' → logprob: -6.282626152038574
    8. 'present' → logprob: -6.407626152038574
    9. 'poss' → logprob: -6.532626152038574
    10. ' présentent' → logprob: -6.657626152038574

Token 461: 'es' (ID: 268)
  Prédit: ' présentes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' présentes' → logprob: -0.07779910415410995
    2. 'prés' → logprob: -3.452799081802368
    3. 'dans' → logprob: -4.077799320220947
    4. 'es' → logprob: -4.827799320220947
    5. ' présents' → logprob: -5.702799320220947
    6. ' dans' → logprob: -5.952799320220947
    7. 'ues' → logprob: -5.952799320220947
    8. ' presentes' → logprob: -6.077799320220947
    9. 'du' → logprob: -6.202799320220947
    10. 'ques' → logprob: -6.827799320220947

Token 462: ' dans' (ID: 2671)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5090647339820862
    2. 'prés' → logprob: -2.0090646743774414
    3. ' présentes' → logprob: -2.1340646743774414
    4. 'dans' → logprob: -2.7590646743774414
    5. ' dans' → logprob: -3.5090646743774414
    6. 'present' → logprob: -4.759064674377441
    7. ' présents' → logprob: -4.884064674377441
    8. ' sur' → logprob: -4.884064674377441
    9. ' présent' → logprob: -5.009064674377441
    10. ' conten' → logprob: -5.384064674377441

Token 463: ' cette' (ID: 7696)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.0805295705795288
    2. ' cet' → logprob: -1.2055295705795288
    3. 'cet' → logprob: -1.8305295705795288
    4. ' l' → logprob: -2.2055296897888184
    5. 'c' → logprob: -3.2055296897888184
    6. ' cette' → logprob: -3.9555296897888184
    7. ' ce' → logprob: -4.580529689788818
    8. 'ce' → logprob: -5.080529689788818
    9. 'la' → logprob: -5.330529689788818
    10. 'le' → logprob: -6.205529689788818

Token 464: ' plage' (ID: 78241)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.5597348809242249
    2. ' interval' → logprob: -1.05973482131958
    3. ' plage' → logprob: -2.68473482131958
    4. ' segment' → logprob: -5.55973482131958
    5. ' portion' → logprob: -6.30973482131958
    6. ' interv' → logprob: -6.55973482131958
    7. 'range' → logprob: -6.55973482131958
    8. 'segment' → logprob: -6.93473482131958
    9. ' range' → logprob: -7.05973482131958
    10. '   ' → logprob: -7.55973482131958

Token 465: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014228497631847858
    2. ':' → logprob: -5.139228343963623
    3. '.' → logprob: -5.514228343963623
    4. '):
' → logprob: -6.389228343963623
    5. '):' → logprob: -6.764228343963623
    6. ':
' → logprob: -7.139228343963623
    7. ',' → logprob: -8.389228820800781
    8. ' if' → logprob: -8.889228820800781
    9. ')' → logprob: -9.264228820800781
    10. ' :' → logprob: -9.514228820800781

Token 466: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01292773149907589
    2. ':' → logprob: -5.012927532196045
    3. ')' → logprob: -6.012927532196045
    4. '):' → logprob: -6.637927532196045
    5. '):
' → logprob: -6.637927532196045
    6. ':
' → logprob: -7.637927532196045
    7. '    
' → logprob: -8.387928009033203
    8. '
' → logprob: -8.887928009033203
    9. '```' → logprob: -9.387928009033203
    10. '<|end|>' → logprob: -9.887928009033203

Token 467: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -7.040457421680912e-05
    2. 'if' → logprob: -9.875070571899414
    3. ' if' → logprob: -11.000070571899414
    4. '```' → logprob: -14.250070571899414
    5. '
' → logprob: -14.625070571899414
    6. ')' → logprob: -15.125070571899414
    7. '	if' → logprob: -15.625070571899414
    8. '       ' → logprob: -15.750070571899414
    9. '    
' → logprob: -16.125070571899414
    10. 'If' → logprob: -16.375070571899414

Token 468: ' Args' (ID: 39185)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0038560128305107355
    2. 'if' → logprob: -5.878856182098389
    3. ' if' → logprob: -6.878856182098389
    4. '```' → logprob: -11.12885570526123
    5. '
' → logprob: -12.25385570526123
    6. '	if' → logprob: -14.50385570526123
    7. '    ' → logprob: -15.25385570526123
    8. '    
' → logprob: -15.37885570526123
    9. 'If' → logprob: -15.75385570526123
    10. '       ' → logprob: -16.128856658935547

Token 469: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42612460255622864
    2. ':' → logprob: -1.9261245727539062
    3. ':
' → logprob: -1.9261245727539062
    4. '       ' → logprob: -3.3011245727539062
    5. '):
' → logprob: -4.551124572753906
    6. ',' → logprob: -5.801124572753906
    7. ' :' → logprob: -6.301124572753906
    8. 'def' → logprob: -6.801124572753906
    9. ' :
' → logprob: -7.551124572753906
    10. '):' → logprob: -8.301124572753906

Token 470: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008137687109410763
    2. '       ' → logprob: -4.8831377029418945
    3. 'a' → logprob: -7.7581377029418945
    4. '    ' → logprob: -10.633137702941895
    5. '
' → logprob: -10.758137702941895
    6. ' a' → logprob: -11.008137702941895
    7. '    
' → logprob: -11.008137702941895
    8. '```' → logprob: -11.633137702941895
    9. 'def' → logprob: -12.383137702941895
    10. '     ' → logprob: -13.133137702941895

Token 471: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -7.755678961984813e-05
    2. '   ' → logprob: -9.625077247619629
    3. ' a' → logprob: -11.500077247619629
    4. '       ' → logprob: -13.750077247619629
    5. '
' → logprob: -16.375078201293945
    6. '```' → logprob: -17.250078201293945
    7. '    
' → logprob: -18.000078201293945
    8. ' ' → logprob: -18.000078201293945
    9. '  ' → logprob: -18.000078201293945
    10. 'self' → logprob: -18.375078201293945

Token 472: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0029086542781442404
    2. '(int' → logprob: -6.377908706665039
    3. ',int' → logprob: -7.752908706665039
    4. ' (' → logprob: -7.752908706665039
    5. ' ,' → logprob: -9.252908706665039
    6. 'int' → logprob: -9.377908706665039
    7. '<|end|>' → logprob: -9.627908706665039
    8. ':int' → logprob: -10.752908706665039
    9. ',b' → logprob: -10.752908706665039
    10. '   ' → logprob: -10.877908706665039

Token 473: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.981667537620524e-06
    2. ' int' → logprob: -13.750001907348633
    3. ')' → logprob: -15.125001907348633
    4. '[int' → logprob: -15.250001907348633
    5. ',int' → logprob: -16.375001907348633
    6. ']int' → logprob: -16.625001907348633
    7. ':int' → logprob: -17.000001907348633
    8. '(int' → logprob: -17.375001907348633
    9. '<int' → logprob: -17.375001907348633
    10. '=int' → logprob: -17.500001907348633

Token 474: '):' (ID: 3127)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003242607053834945
    2. '<|end|>' → logprob: -9.125324249267578
    3. ':' → logprob: -9.250324249267578
    4. ' ,' → logprob: -9.500324249267578
    5. '   ' → logprob: -10.875324249267578
    6. '):' → logprob: -11.750324249267578
    7. '       ' → logprob: -12.875324249267578
    8. ',b' → logprob: -13.125324249267578
    9. '),' → logprob: -13.250324249267578
    10. ',
' → logprob: -13.375324249267578

Token 475: ' Dé' (ID: 27247)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.034027501940727234
    2. ' int' → logprob: -4.284027576446533
    3. '   ' → logprob: -5.159027576446533
    4. 'b' → logprob: -5.284027576446533
    5. 'l' → logprob: -6.034027576446533
    6. 'a' → logprob: -6.159027576446533
    7. '       ' → logprob: -6.409027576446533
    8. 'L' → logprob: -6.659027576446533
    9. ' l' → logprob: -7.909027576446533
    10. ' b' → logprob: -8.159027099609375

Token 476: 'but' (ID: 8293)
  Prédit: 'but'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'but' → logprob: -0.271814227104187
    2. 'part' → logprob: -2.0218143463134766
    3. 'lim' → logprob: -2.6468143463134766
    4. 'f' → logprob: -3.5218143463134766
    5. 'b' → logprob: -5.896814346313477
    6. 'limit' → logprob: -6.271814346313477
    7. 'fin' → logprob: -8.896814346313477
    8. ' but' → logprob: -9.146814346313477
    9. 'l' → logprob: -10.021814346313477
    10. 'la' → logprob: -10.771814346313477

Token 477: ' de' (ID: 334)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.33162543177604675
    2. '<|end|>' → logprob: -1.5816254615783691
    3. ')' → logprob: -2.831625461578369
    4. '   ' → logprob: -4.956625461578369
    5. 'a' → logprob: -5.956625461578369
    6. '       ' → logprob: -6.206625461578369
    7. '),' → logprob: -6.706625461578369
    8. ' ,' → logprob: -7.206625461578369
    9. '<|end|>' → logprob: -7.206625461578369
    10. ',
' → logprob: -7.456625461578369

Token 478: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.9540674686431885
    2. ' l' → logprob: -1.2040674686431885
    3. 'a' → logprob: -2.3290674686431885
    4. ' interval' → logprob: -2.5790674686431885
    5. 'interval' → logprob: -2.8290674686431885
    6. ' la' → logprob: -3.3290674686431885
    7. ' a' → logprob: -4.204067230224609
    8. ' the' → logprob: -4.329067230224609
    9. 'b' → logprob: -5.204067230224609
    10. 'la' → logprob: -5.579067230224609

Token 479: ''' (ID: 6)
  Prédit: ' interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' interval' → logprob: -0.1402018964290619
    2. 'interval' → logprob: -2.1402018070220947
    3. ' segment' → logprob: -5.265202045440674
    4. ' range' → logprob: -6.140202045440674
    5. ' a' → logprob: -6.765202045440674
    6. 'range' → logprob: -6.890202045440674
    7. ' intervalo' → logprob: -6.890202045440674
    8. 'b' → logprob: -7.390202045440674
    9. ' interv' → logprob: -7.890202045440674
    10. ')' → logprob: -8.265201568603516

Token 480: 'interval' (ID: 37558)
  Prédit: ' interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' interval' → logprob: -0.6835065484046936
    2. 'interval' → logprob: -1.1835064888000488
    3. 'a' → logprob: -2.808506488800049
    4. 'range' → logprob: -2.933506488800049
    5. ' range' → logprob: -3.433506488800049
    6. 'b' → logprob: -3.933506488800049
    7. ' a' → logprob: -3.933506488800049
    8. ' b' → logprob: -6.933506488800049
    9. ' segment' → logprob: -7.308506488800049
    10. ' plage' → logprob: -7.933506488800049

Token 481: 'le' (ID: 282)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.9024839401245117
    2. 'val' → logprob: -1.6524839401245117
    3. 've' → logprob: -1.7774839401245117
    4. 'v' → logprob: -2.1524839401245117
    5. 'et' → logprob: -3.1524839401245117
    6. 'ale' → logprob: -4.152483940124512
    7. 'le' → logprob: -4.527483940124512
    8. 'ève' → logprob: -4.777483940124512
    9. 'vale' → logprob: -4.777483940124512
    10. 'vre' → logprob: -5.027483940124512

Token 482: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.045945338904857635
    2. ',
' → logprob: -4.170945167541504
    3. '   ' → logprob: -4.420945167541504
    4. '<|end|>' → logprob: -4.545945167541504
    5. ')' → logprob: -5.170945167541504
    6. '       ' → logprob: -8.295945167541504
    7. ' ,' → logprob: -8.420945167541504
    8. '),' → logprob: -8.545945167541504
    9. ' (' → logprob: -8.795945167541504
    10. '):
' → logprob: -9.420945167541504

Token 483: 'in' (ID: 258)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.10736355930566788
    2. ')' → logprob: -2.35736346244812
    3. 'b' → logprob: -5.982363700866699
    4. 'a' → logprob: -6.232363700866699
    5. '       ' → logprob: -6.732363700866699
    6. ' int' → logprob: -7.857363700866699
    7. '),' → logprob: -7.982363700866699
    8. ',' → logprob: -8.9823637008667
    9. '0' → logprob: -9.4823637008667
    10. '):' → logprob: -9.6073637008667

Token 484: 'clus' (ID: 4085)
  Prédit: 'clusive'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'clusive' → logprob: -0.010961392894387245
    2. 'clus' → logprob: -4.885961532592773
    3. 'cl' → logprob: -5.885961532592773
    4. 'a' → logprob: -8.510961532592773
    5. 'cluded' → logprob: -8.510961532592773
    6. ' cl' → logprob: -9.885961532592773
    7. '
' → logprob: -10.760961532592773
    8. '   ' → logprob: -11.010961532592773
    9. '```' → logprob: -11.010961532592773
    10. 't' → logprob: -11.260961532592773

Token 485: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.030298110097646713
    2. '):
' → logprob: -4.280298233032227
    3. '),' → logprob: -5.530298233032227
    4. ',' → logprob: -5.905298233032227
    5. '   ' → logprob: -6.030298233032227
    6. '),
' → logprob: -6.155298233032227
    7. '):' → logprob: -6.155298233032227
    8. ')
' → logprob: -6.405298233032227
    9. ').' → logprob: -7.655298233032227
    10. '       ' → logprob: -8.655298233032227

Token 486: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8082016706466675
    2. 'b' → logprob: -1.1832016706466675
    3. '   ' → logprob: -1.6832016706466675
    4. ' b' → logprob: -2.808201789855957
    5. '```' → logprob: -6.433201789855957
    6. '    ' → logprob: -9.183201789855957
    7. '        ' → logprob: -10.183201789855957
    8. '        
' → logprob: -10.433201789855957
    9. ',' → logprob: -10.558201789855957
    10. '           ' → logprob: -10.558201789855957

Token 487: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.008617527782917023
    2. ' b' → logprob: -4.758617401123047
    3. '       ' → logprob: -13.383617401123047
    4. '   ' → logprob: -13.508617401123047
    5. '    ' → logprob: -16.633617401123047
    6. '	b' → logprob: -18.008617401123047
    7. ' ' → logprob: -18.008617401123047
    8. '```' → logprob: -18.133617401123047
    9. 'B' → logprob: -18.633617401123047
    10. '        ' → logprob: -19.008617401123047

Token 488: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.5283530354499817
    2. '(int' → logprob: -1.028352975845337
    3. 'int' → logprob: -4.153353214263916
    4. ':int' → logprob: -4.528353214263916
    5. ')' → logprob: -5.028353214263916
    6. '[int' → logprob: -5.153353214263916
    7. ':' → logprob: -5.903353214263916
    8. '(' → logprob: -5.903353214263916
    9. '=int' → logprob: -5.903353214263916
    10. '<int' → logprob: -6.653353214263916

Token 489: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -3.128163257315464e-07
    2. ' int' → logprob: -15.125
    3. '[int' → logprob: -20.75
    4. ')' → logprob: -21.125
    5. '(int' → logprob: -22.375
    6. '=int' → logprob: -22.5
    7. '<int' → logprob: -22.625
    8. '   ' → logprob: -23.125
    9. '	int' → logprob: -23.625
    10. '```' → logprob: -23.75

Token 490: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.14479288458824158
    2. ')' → logprob: -3.0197927951812744
    3. ':int' → logprob: -3.1447927951812744
    4. ':' → logprob: -3.5197927951812744
    5. 'int' → logprob: -5.2697930335998535
    6. '(int' → logprob: -5.8947930335998535
    7. '):
' → logprob: -6.2697930335998535
    8. '<int' → logprob: -7.0197930335998535
    9. '<|end|>' → logprob: -7.1447930335998535
    10. '[int' → logprob: -7.5197930335998535

Token 491: ' Fin' (ID: 7772)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5762478709220886
    2. ' int' → logprob: -0.8262478709220886
    3. '(int' → logprob: -9.076248168945312
    4. ' ' → logprob: -9.451248168945312
    5. ')' → logprob: -10.576248168945312
    6. 'b' → logprob: -10.701248168945312
    7. '   ' → logprob: -10.951248168945312
    8. '[int' → logprob: -11.076248168945312
    9. '<int' → logprob: -11.576248168945312
    10. ' (' → logprob: -12.076248168945312

Token 492: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3930436968803406
    2. ' (' → logprob: -1.8930437564849854
    3. '   ' → logprob: -2.5180437564849854
    4. ' de' → logprob: -2.7680437564849854
    5. '<|end|>' → logprob: -4.268043518066406
    6. ',' → logprob: -5.518043518066406
    7. ' ' → logprob: -5.643043518066406
    8. 'de' → logprob: -5.893043518066406
    9. '    ' → logprob: -6.518043518066406
    10. ' )' → logprob: -6.768043518066406

Token 493: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.492522269487381
    2. 'l' → logprob: -1.1175222396850586
    3. 'b' → logprob: -3.3675222396850586
    4. ')' → logprob: -4.367522239685059
    5. ' b' → logprob: -4.492522239685059
    6. 'a' → logprob: -6.992522239685059
    7. ' the' → logprob: -7.617522239685059
    8. ' interval' → logprob: -7.617522239685059
    9. 'interval' → logprob: -7.867522239685059
    10. ' a' → logprob: -7.992522239685059

Token 494: ''' (ID: 6)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.769665002822876
    2. ')' → logprob: -1.019665002822876
    3. ' interval' → logprob: -2.519665002822876
    4. 'b' → logprob: -3.019665002822876
    5. '_interval' → logprob: -3.394665002822876
    6. 'range' → logprob: -5.269664764404297
    7. 'a' → logprob: -6.519664764404297
    8. '')' → logprob: -7.394664764404297
    9. '(interval' → logprob: -7.394664764404297
    10. '_b' → logprob: -7.519664764404297

Token 495: 'interval' (ID: 37558)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.6313356161117554
    2. ')' → logprob: -1.2563356161117554
    3. 'interval' → logprob: -2.256335735321045
    4. ' interval' → logprob: -3.381335735321045
    5. 'int' → logprob: -3.381335735321045
    6. 'a' → logprob: -5.131335735321045
    7. ' b' → logprob: -5.881335735321045
    8. 'range' → logprob: -7.756335735321045
    9. ' int' → logprob: -7.756335735321045
    10. ' a' → logprob: -8.631335258483887

Token 496: 'le' (ID: 282)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3945799767971039
    2. ',' → logprob: -1.1445800065994263
    3. '   ' → logprob: -6.144579887390137
    4. 'e' → logprob: -6.519579887390137
    5. '),' → logprob: -7.019579887390137
    6. ',
' → logprob: -7.519579887390137
    7. ')
' → logprob: -7.894579887390137
    8. '```' → logprob: -8.019579887390137
    9. 'ètre' → logprob: -8.394579887390137
    10. '`' → logprob: -8.644579887390137

Token 497: ' (' (ID: 350)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5541649460792542
    2. ' (' → logprob: -0.9291649460792542
    3. '(ex' → logprob: -3.6791648864746094
    4. '(in' → logprob: -5.679164886474609
    5. '   ' → logprob: -7.429164886474609
    6. ' excl' → logprob: -8.05416488647461
    7. '(not' → logprob: -8.17916488647461
    8. '(exc' → logprob: -8.67916488647461
    9. 'ex' → logprob: -8.92916488647461
    10. '(int' → logprob: -9.05416488647461

Token 498: 'ex' (ID: 490)
  Prédit: 'ex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.023764224722981453
    2. ' excl' → logprob: -3.898764133453369
    3. ')' → logprob: -6.648764133453369
    4. 'excluded' → logprob: -6.648764133453369
    5. ' exclus' → logprob: -8.148764610290527
    6. '(ex' → logprob: -9.148764610290527
    7. '   ' → logprob: -9.898764610290527
    8. 'exclusive' → logprob: -10.023764610290527
    9. '_ex' → logprob: -10.398764610290527
    10. 'Ex' → logprob: -10.648764610290527

Token 499: 'cl' (ID: 565)
  Prédit: 'clus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'clus' → logprob: -0.5978339314460754
    2. 'cl' → logprob: -1.5978338718414307
    3. ')' → logprob: -1.9728338718414307
    4. 'clusive' → logprob: -2.5978338718414307
    5. 'cluded' → logprob: -3.9728338718414307
    6. 'clude' → logprob: -5.47283411026001
    7. '):' → logprob: -5.97283411026001
    8. 'clud' → logprob: -6.34783411026001
    9. 'c' → logprob: -6.47283411026001
    10. 'lus' → logprob: -6.84783411026001

Token 500: 'u' (ID: 84)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08482249826192856
    2. ')
' → logprob: -3.209822416305542
    3. 'u' → logprob: -3.459822416305542
    4. '   ' → logprob: -6.459822654724121
    5. 'e' → logprob: -6.459822654724121
    6. '):
' → logprob: -6.584822654724121
    7. ')`' → logprob: -6.709822654724121
    8. '=' → logprob: -6.959822654724121
    9. '):' → logprob: -7.334822654724121
    10. 'ut' → logprob: -8.084822654724121

Token 501: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004325076472014189
    2. ').' → logprob: -5.504324913024902
    3. 'e' → logprob: -8.379324913024902
    4. ')
' → logprob: -12.004324913024902
    5. 't' → logprob: -13.004324913024902
    6. '),' → logprob: -13.129324913024902
    7. 'a' → logprob: -13.254324913024902
    8. '   ' → logprob: -13.629324913024902
    9. ').
' → logprob: -14.629324913024902
    10. '):
' → logprob: -14.879324913024902

Token 502: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003932948689907789
    2. '```' → logprob: -6.253932952880859
    3. '
' → logprob: -6.628932952880859
    4. '    
' → logprob: -8.25393295288086
    5. ',' → logprob: -8.87893295288086
    6. '       ' → logprob: -9.75393295288086
    7. ')' → logprob: -10.25393295288086
    8. '\n' → logprob: -10.25393295288086
    9. '  
' → logprob: -10.50393295288086
    10. '"""
' → logprob: -11.12893295288086

Token 503: ' k' (ID: 372)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5230927467346191
    2. 'k' (adapté à ' k') → logprob: -2.023092746734619
    3. ' if' → logprob: -2.023092746734619
    4. '   ' → logprob: -2.273092746734619
    5. '       ' → logprob: -3.773092746734619
    6. 'l' → logprob: -4.523092746734619
    7. ' k' → logprob: -6.523092746734619
    8. '"""
' → logprob: -6.523092746734619
    9. '```' → logprob: -6.898092746734619
    10. '
' → logprob: -7.148092746734619

Token 504: ' (' (ID: 350)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.20062629878520966
    2. ' (' → logprob: -2.2006263732910156
    3. ':int' → logprob: -2.8256263732910156
    4. ':' → logprob: -5.575626373291016
    5. '[int' → logprob: -6.200626373291016
    6. ' int' → logprob: -6.200626373291016
    7. 'int' → logprob: -6.700626373291016
    8. ',' → logprob: -7.325626373291016
    9. '=int' → logprob: -7.325626373291016
    10. ')' → logprob: -7.575626373291016

Token 505: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -7.553032628493384e-05
    2. '0' → logprob: -10.125075340270996
    3. ' int' → logprob: -10.625075340270996
    4. '(int' → logprob: -12.000075340270996
    5. '[int' → logprob: -13.250075340270996
    6. ':int' → logprob: -13.625075340270996
    7. ')' → logprob: -13.625075340270996
    8. ',int' → logprob: -15.375075340270996
    9. ']int' → logprob: -15.750075340270996
    10. '<int' → logprob: -16.000076293945312

Token 506: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.7961732149124146
    2. ':int' → logprob: -0.9211732149124146
    3. ':' → logprob: -2.671173095703125
    4. '(int' → logprob: -3.671173095703125
    5. 'int' → logprob: -3.921173095703125
    6. '):
' → logprob: -4.421173095703125
    7. ',' → logprob: -4.921173095703125
    8. '=int' → logprob: -4.921173095703125
    9. '   ' → logprob: -5.546173095703125
    10. ',int' → logprob: -6.421173095703125

Token 507: ' Num' (ID: 33827)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.015977714210748672
    2. ')' → logprob: -5.01597785949707
    3. ' k' → logprob: -5.51597785949707
    4. '   ' → logprob: -5.89097785949707
    5. '[int' → logprob: -8.14097785949707
    6. '0' → logprob: -8.26597785949707
    7. '(k' → logprob: -8.26597785949707
    8. ' (' → logprob: -8.64097785949707
    9. ' ' → logprob: -8.64097785949707
    10. '[' → logprob: -8.76597785949707

Token 508: 'éro' (ID: 28155)
  Prédit: 'éro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éro' → logprob: -0.030647674575448036
    2. 'érique' → logprob: -4.0306477546691895
    3. '   ' → logprob: -5.6556477546691895
    4. ')' → logprob: -5.6556477546691895
    5. 'é' → logprob: -6.5306477546691895
    6. '=' → logprob: -7.1556477546691895
    7. 'éros' → logprob: -8.030647277832031
    8. '_' → logprob: -8.030647277832031
    9. '  ' → logprob: -8.405647277832031
    10. '       ' → logprob: -8.405647277832031

Token 509: ' du' (ID: 1462)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.3747296333312988
    2. ')' → logprob: -1.4997296333312988
    3. '   ' → logprob: -1.6247296333312988
    4. ' du' → logprob: -1.9997296333312988
    5. ' des' → logprob: -3.624729633331299
    6. ' =' → logprob: -3.749729633331299
    7. 'de' → logprob: -4.249729633331299
    8. '=' → logprob: -4.249729633331299
    9. ',' → logprob: -4.374729633331299
    10. ' ' → logprob: -4.499729633331299

Token 510: ' noe' (ID: 49921)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.014774834737181664
    2. 'no' → logprob: -5.014774799346924
    3. 'node' → logprob: -5.139774799346924
    4. ' noe' → logprob: -7.014774799346924
    5. 'segment' → logprob: -7.764774799346924
    6. ' n' → logprob: -8.014775276184082
    7. 'k' → logprob: -8.389775276184082
    8. ')' → logprob: -8.764775276184082
    9. ')n' → logprob: -10.389775276184082
    10. '```' → logprob: -10.514775276184082

Token 511: 'ud' (ID: 527)
  Prédit: 'ud'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ud' → logprob: -0.15371060371398926
    2. ')' → logprob: -3.0287106037139893
    3. 'œ' → logprob: -3.4037106037139893
    4. 'e' → logprob: -3.5287106037139893
    5. 'de' → logprob: -5.02871036529541
    6. 'd' → logprob: -5.02871036529541
    7. '```' → logprob: -5.27871036529541
    8. 'u' → logprob: -5.77871036529541
    9. '#' → logprob: -6.15371036529541
    10. 'ude' → logprob: -6.40371036529541

Token 512: ' courant' (ID: 74694)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4826560318470001
    2. '<|end|>' → logprob: -1.7326560020446777
    3. ',' → logprob: -1.8576560020446777
    4. ':' → logprob: -4.232656002044678
    5. ')' → logprob: -4.232656002044678
    6. '):' → logprob: -5.232656002044678
    7. '):
' → logprob: -5.732656002044678
    8. ' (' → logprob: -5.982656002044678
    9. '       ' → logprob: -6.232656002044678
    10. '<|end|>' → logprob: -6.732656002044678

Token 513: ' dans' (ID: 2671)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33328989148139954
    2. ',' → logprob: -1.4582898616790771
    3. '<|end|>' → logprob: -3.958289861679077
    4. '):
' → logprob: -4.333290100097656
    5. '):' → logprob: -4.333290100097656
    6. ')' → logprob: -5.958290100097656
    7. '<|end|>' → logprob: -6.583290100097656
    8. ':' → logprob: -7.708290100097656
    9. '       ' → logprob: -7.958290100097656
    10. ',
' → logprob: -9.083290100097656

Token 514: ' l' (ID: 305)
  Prédit: 'SEG'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SEG' → logprob: -0.04170869290828705
    2. 'l' → logprob: -3.2917087078094482
    3. ' SEG' → logprob: -6.291708469390869
    4. 'le' → logprob: -7.291708469390869
    5. 'the' → logprob: -7.416708469390869
    6. ' l' → logprob: -8.541708946228027
    7. 'la' → logprob: -9.291708946228027
    8. '_SEG' → logprob: -9.666708946228027
    9. '   ' → logprob: -10.416708946228027
    10. ' the' → logprob: -10.666708946228027

Token 515: ''ar' (ID: 54307)
  Prédit: 'SEG'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'SEG' → logprob: -0.012302549555897713
    2. '_SEG' → logprob: -5.762302398681641
    3. ')' → logprob: -6.012302398681641
    4. ' SEG' → logprob: -6.137302398681641
    5. 'ar' → logprob: -6.262302398681641
    6. 'segment' → logprob: -6.512302398681641
    7. ' arbre' → logprob: -8.51230239868164
    8. ' segment' → logprob: -8.76230239868164
    9. 'seg' → logprob: -8.88730239868164
    10. '   ' → logprob: -9.63730239868164

Token 516: 'bre' (ID: 9945)
  Prédit: 'bre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bre' → logprob: -5.455048449221067e-05
    2. 'b' → logprob: -10.250054359436035
    3. 'e' → logprob: -12.250054359436035
    4. 'bo' → logprob: -12.375054359436035
    5. 'bres' → logprob: -12.875054359436035
    6. '```' → logprob: -13.250054359436035
    7. 'br' → logprob: -14.000054359436035
    8. 'r' → logprob: -14.500054359436035
    9. 'BRE' → logprob: -14.500054359436035
    10. 'bol' → logprob: -15.000054359436035

Token 517: ' segment' (ID: 14806)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.27624526619911194
    2. '   ' → logprob: -1.7762452363967896
    3. ')' → logprob: -3.026245355606079
    4. ',
' → logprob: -4.9012451171875
    5. ' segment' → logprob: -5.4012451171875
    6. 'segment' → logprob: -5.7762451171875
    7. '       ' → logprob: -6.4012451171875
    8. ' ,' → logprob: -7.1512451171875
    9. '(segment' → logprob: -7.2762451171875
    10. '),' → logprob: -7.2762451171875

Token 518: 'aire' (ID: 8189)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.13818982243537903
    2. 'aire' → logprob: -2.1381897926330566
    3. ')' → logprob: -5.138189792633057
    4. 'ee' → logprob: -6.263189792633057
    5. '   ' → logprob: -6.513189792633057
    6. 'ree' → logprob: -8.013190269470215
    7. ',' → logprob: -8.013190269470215
    8. 'es' → logprob: -8.888190269470215
    9. 'ey' → logprob: -9.138190269470215
    10. 'er' → logprob: -9.138190269470215

Token 519: '.
' (ID: 558)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.030569393187761307
    2. '   ' → logprob: -3.530569314956665
    3. ',
' → logprob: -7.780569553375244
    4. '):
' → logprob: -8.155569076538086
    5. '):' → logprob: -9.780569076538086
    6. ' ,' → logprob: -10.155569076538086
    7. ',k' → logprob: -12.405569076538086
    8. ')' → logprob: -13.155569076538086
    9. 'def' → logprob: -13.905569076538086
    10. '       ' → logprob: -14.155569076538086

Token 520: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00893776398152113
    2. ',' → logprob: -5.633937835693359
    3. '       ' → logprob: -6.133937835693359
    4. '```' → logprob: -6.758937835693359
    5. ')' → logprob: -7.258937835693359
    6. '    
' → logprob: -7.383937835693359
    7. '  ' → logprob: -9.00893783569336
    8. '
' → logprob: -9.25893783569336
    9. ' l' → logprob: -9.50893783569336
    10. ' ' → logprob: -9.63393783569336

Token 521: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -1.1637164789135568e-05
    2. ' l' → logprob: -11.375011444091797
    3. '   ' → logprob: -15.875011444091797
    4. 'k' → logprob: -17.125011444091797
    5. 'a' → logprob: -18.125011444091797
    6. '	l' → logprob: -18.375011444091797
    7. '  ' → logprob: -19.000011444091797
    8. ' ' → logprob: -19.500011444091797
    9. '[l' → logprob: -20.375011444091797
    10. '
' → logprob: -20.875011444091797

Token 522: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03193892538547516
    2. '<|end|>' → logprob: -4.4069390296936035
    3. ':int' → logprob: -4.9069390296936035
    4. ')' → logprob: -5.7819390296936035
    5. ',int' → logprob: -6.5319390296936035
    6. ' (' → logprob: -6.7819390296936035
    7. ' ,' → logprob: -6.7819390296936035
    8. '(int' → logprob: -6.7819390296936035
    9. '[int' → logprob: -7.0319390296936035
    10. ':' → logprob: -7.1569390296936035

Token 523: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.9361264946837764e-07
    2. ' int' → logprob: -16.25
    3. ')' → logprob: -17.125
    4. '[int' → logprob: -17.625
    5. '(int' → logprob: -20.25
    6. ',int' → logprob: -20.375
    7. ':int' → logprob: -20.5
    8. '   ' → logprob: -20.625
    9. '```' → logprob: -20.625
    10. '=int' → logprob: -21.0

Token 524: '):' (ID: 3127)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04177328944206238
    2. ':int' → logprob: -3.5417733192443848
    3. 'int' → logprob: -5.416773319244385
    4. ',int' → logprob: -6.041773319244385
    5. '   ' → logprob: -6.541773319244385
    6. ':' → logprob: -7.041773319244385
    7. ')' → logprob: -7.291773319244385
    8. '[int' → logprob: -7.666773319244385
    9. '):' → logprob: -8.041772842407227
    10. ' ,' → logprob: -8.291772842407227

Token 525: ' Dé' (ID: 27247)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.14906832575798035
    2. 'l' → logprob: -2.0240683555603027
    3. ' int' → logprob: -5.149068355560303
    4. ' l' → logprob: -7.899068355560303
    5. '[int' → logprob: -9.149067878723145
    6. 'le' → logprob: -10.274067878723145
    7. 'g' → logprob: -11.274067878723145
    8. '   ' → logprob: -11.774067878723145
    9. 'L' → logprob: -12.024067878723145
    10. '(int' → logprob: -12.149067878723145

Token 526: 'but' (ID: 8293)
  Prédit: 'ft'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ft' → logprob: -0.7874197959899902
    2. 'f' → logprob: -1.1624197959899902
    3. 'eft' → logprob: -1.6624197959899902
    4. 'e' → logprob: -3.4124197959899902
    5. 't' → logprob: -5.78741979598999
    6. 'ef' → logprob: -6.03741979598999
    7. '   ' → logprob: -6.91241979598999
    8. 'fte' → logprob: -7.28741979598999
    9. 'éf' → logprob: -7.66241979598999
    10. 'l' → logprob: -7.91241979598999

Token 527: ' du' (ID: 1462)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2925221920013428
    2. '   ' → logprob: -1.6675221920013428
    3. ')' → logprob: -1.7925221920013428
    4. 'de' → logprob: -1.9175221920013428
    5. ' de' → logprob: -3.0425221920013428
    6. '<|end|>' → logprob: -3.0425221920013428
    7. '       ' → logprob: -3.4175221920013428
    8. 'du' → logprob: -4.167522430419922
    9. '=' → logprob: -4.417522430419922
    10. ' (' → logprob: -4.542522430419922

Token 528: ' segment' (ID: 14806)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.1274075210094452
    2. 'segment' → logprob: -2.2524075508117676
    3. ' segment' → logprob: -4.377407550811768
    4. ' l' → logprob: -6.877407550811768
    5. 'interval' → logprob: -7.252407550811768
    6. ' interval' → logprob: -9.37740707397461
    7. 'seg' → logprob: -10.12740707397461
    8. '[l' → logprob: -10.25240707397461
    9. 'range' → logprob: -12.00240707397461
    10. '   ' → logprob: -12.62740707397461

Token 529: ' couvert' (ID: 140806)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3981782793998718
    2. '<|end|>' → logprob: -1.3981783390045166
    3. '   ' → logprob: -3.1481783390045166
    4. ',' → logprob: -4.0231781005859375
    5. '[' → logprob: -5.2731781005859375
    6. '       ' → logprob: -5.5231781005859375
    7. ' (' → logprob: -5.8981781005859375
    8. '<|end|>' → logprob: -6.7731781005859375
    9. '),' → logprob: -7.0231781005859375
    10. '```' → logprob: -7.1481781005859375

Token 530: ' par' (ID: 686)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09660254418849945
    2. '   ' → logprob: -2.596602439880371
    3. 'par' → logprob: -5.221602439880371
    4. ',' → logprob: -5.346602439880371
    5. ' par' → logprob: -5.846602439880371
    6. '       ' → logprob: -6.846602439880371
    7. '):
' → logprob: -6.971602439880371
    8. '<|end|>' → logprob: -7.221602439880371
    9. '),' → logprob: -7.471602439880371
    10. ' )' → logprob: -8.596602439880371

Token 531: ' ce' (ID: 2357)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.026899278163909912
    2. 'le' → logprob: -3.7768993377685547
    3. ' k' → logprob: -5.901899337768555
    4. ' le' → logprob: -7.026899337768555
    5. '[k' → logprob: -11.401899337768555
    6. ' ce' → logprob: -11.526899337768555
    7. 'l' → logprob: -13.401899337768555
    8. '{k' → logprob: -14.401899337768555
    9. 'ce' → logprob: -14.526899337768555
    10. '   ' → logprob: -15.026899337768555

Token 532: ' noe' (ID: 49921)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.6851025223731995
    2. ' k' → logprob: -1.4351024627685547
    3. ' noe' → logprob: -2.1851024627685547
    4. ' node' → logprob: -2.5601024627685547
    5. 'node' → logprob: -3.8101024627685547
    6. 'n' → logprob: -3.9351024627685547
    7. ' n' → logprob: -4.185102462768555
    8. ' segment' → logprob: -5.310102462768555
    9. 'no' → logprob: -6.060102462768555
    10. ' no' → logprob: -6.185102462768555

Token 533: 'ud' (ID: 527)
  Prédit: 'ud'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ud' → logprob: -0.00012201975914649665
    2. 'u' → logprob: -9.2501220703125
    3. 'd' → logprob: -10.6251220703125
    4. 'уд' → logprob: -15.0001220703125
    5. 'e' → logprob: -15.2501220703125
    6. '#' → logprob: -15.6251220703125
    7. 'l' → logprob: -15.6251220703125
    8. ' ud' → logprob: -15.7501220703125
    9. '```' → logprob: -15.8751220703125
    10. '   ' → logprob: -16.6251220703125

Token 534: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5330512523651123
    2. ',' → logprob: -0.9080512523651123
    3. ',
' → logprob: -5.033051490783691
    4. ')' → logprob: -6.408051490783691
    5. '):
' → logprob: -6.908051490783691
    6. '       ' → logprob: -8.408051490783691
    7. '<|end|>' → logprob: -8.408051490783691
    8. 'def' → logprob: -10.158051490783691
    9. ')
' → logprob: -10.408051490783691
    10. '),' → logprob: -10.533051490783691

Token 535: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021089941263198853
    2. 'r' → logprob: -3.896090030670166
    3. '	r' → logprob: -8.271089553833008
    4. ' r' → logprob: -9.021089553833008
    5. '       ' → logprob: -9.521089553833008
    6. '```' → logprob: -10.521089553833008
    7. ',' → logprob: -11.146089553833008
    8. '    ' → logprob: -11.271089553833008
    9. '    
' → logprob: -11.396089553833008
    10. ')' → logprob: -11.771089553833008

Token 536: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.0007099286303855479
    2. ' r' → logprob: -7.2507100105285645
    3. '   ' → logprob: -19.250709533691406
    4. '	r' → logprob: -22.875709533691406
    5. ' ' → logprob: -24.625709533691406
    6. '
' → logprob: -24.625709533691406
    7. '_r' → logprob: -25.000709533691406
    8. '       ' → logprob: -25.750709533691406
    9. '  ' → logprob: -26.000709533691406
    10. ' ' → logprob: -26.375709533691406

Token 537: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5540562868118286
    2. '):' → logprob: -1.5540562868118286
    3. ')' → logprob: -1.9290562868118286
    4. ':int' → logprob: -3.179056167602539
    5. ' (' → logprob: -3.929056167602539
    6. '(int' → logprob: -6.304056167602539
    7. ' :' → logprob: -6.429056167602539
    8. '):
' → logprob: -7.054056167602539
    9. ',' → logprob: -7.304056167602539
    10. '```' → logprob: -7.429056167602539

Token 538: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00012821101699955761
    2. ')' → logprob: -9.625127792358398
    3. ' int' → logprob: -10.125127792358398
    4. 'r' → logprob: -11.250127792358398
    5. '   ' → logprob: -11.875127792358398
    6. ')
' → logprob: -15.125127792358398
    7. 'l' → logprob: -15.125127792358398
    8. '):' → logprob: -15.375127792358398
    9. 'k' → logprob: -15.500127792358398
    10. '[int' → logprob: -15.875127792358398

Token 539: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.027360688894987106
    2. ')' → logprob: -4.027360916137695
    3. '):
' → logprob: -5.277360916137695
    4. ':' → logprob: -6.152360916137695
    5. 'int' → logprob: -6.902360916137695
    6. ':int' → logprob: -7.527360916137695
    7. '):

' → logprob: -9.152360916137695
    8. '(int' → logprob: -9.527360916137695
    9. '   ' → logprob: -9.652360916137695
    10. '```' → logprob: -10.152360916137695

Token 540: ' Fin' (ID: 7772)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.03837331384420395
    2. ' int' → logprob: -3.2883732318878174
    3. 'Fin' → logprob: -8.538372993469238
    4. 'r' → logprob: -9.288372993469238
    5. '(int' → logprob: -11.288372993469238
    6. 'Int' → logprob: -11.913372993469238
    7. '   ' → logprob: -11.913372993469238
    8. 'End' → logprob: -12.538372993469238
    9. '[int' → logprob: -12.538372993469238
    10. ' ' → logprob: -12.663372993469238

Token 541: ' du' (ID: 1462)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.251910924911499
    2. ' du' → logprob: -1.376910924911499
    3. '   ' → logprob: -1.751910924911499
    4. ' de' → logprob: -2.376910924911499
    5. ' (' → logprob: -2.876910924911499
    6. ' des' → logprob: -3.251910924911499
    7. 'r' → logprob: -3.501910924911499
    8. ' of' → logprob: -3.876910924911499
    9. 'de' → logprob: -4.751911163330078
    10. 'du' → logprob: -4.876911163330078

Token 542: ' segment' (ID: 14806)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07485149800777435
    2. 'r' → logprob: -3.3248515129089355
    3. ' segment' → logprob: -3.9498515129089355
    4. 'segment' → logprob: -4.1998515129089355
    5. ' r' → logprob: -6.6998515129089355
    6. ')
' → logprob: -8.324851036071777
    7. ')`' → logprob: -8.949851036071777
    8. ' )' → logprob: -8.949851036071777
    9. ')`
' → logprob: -10.324851036071777
    10. 'seg' → logprob: -10.824851036071777

Token 543: ' couvert' (ID: 140806)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5131123065948486
    2. '   ' → logprob: -1.3881123065948486
    3. '):' → logprob: -2.6381123065948486
    4. '):
' → logprob: -3.7631123065948486
    5. ' couvert' → logprob: -3.8881123065948486
    6. 'covered' → logprob: -4.1381120681762695
    7. '       ' → logprob: -4.8881120681762695
    8. ' covered' → logprob: -5.8881120681762695
    9. ')
' → logprob: -5.8881120681762695
    10. '    ' → logprob: -6.5131120681762695

Token 544: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.5327363610267639
    2. '   ' → logprob: -1.0327363014221191
    3. ')' → logprob: -3.282736301422119
    4. '):
' → logprob: -4.782736301422119
    5. '):' → logprob: -4.907736301422119
    6. 'par' → logprob: -6.157736301422119
    7. '       ' → logprob: -7.282736301422119
    8. '    ' → logprob: -8.407736778259277
    9. '  ' → logprob: -8.907736778259277
    10. ' ' → logprob: -9.157736778259277

Token 545: ' ce' (ID: 2357)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.017716359347105026
    2. ' r' → logprob: -4.517716407775879
    3. ' ce' → logprob: -5.017716407775879
    4. 'ce' → logprob: -10.767716407775879
    5. ')' → logprob: -12.892716407775879
    6. '   ' → logprob: -13.767716407775879
    7. 'c' → logprob: -13.767716407775879
    8. '(r' → logprob: -14.892716407775879
    9. ' ' → logprob: -15.642716407775879
    10. ' ' → logprob: -16.267715454101562

Token 546: ' noe' (ID: 49921)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8431084752082825
    2. ' noe' → logprob: -1.3431084156036377
    3. 'node' → logprob: -2.0931084156036377
    4. 'n' → logprob: -2.5931084156036377
    5. 'r' → logprob: -3.0931084156036377
    6. 'no' → logprob: -3.4681084156036377
    7. ' node' → logprob: -3.5931084156036377
    8. ' n' → logprob: -6.468108654022217
    9. ' segment' → logprob: -6.843108654022217
    10. 'k' → logprob: -6.968108654022217

Token 547: 'ud' (ID: 527)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.2319166511297226
    2. ')' → logprob: -1.8569166660308838
    3. 'ud' → logprob: -3.106916666030884
    4. 'au' → logprob: -6.356916427612305
    5. 'ur' → logprob: -6.731916427612305
    6. 'ut' → logprob: -6.981916427612305
    7. ']' → logprob: -7.481916427612305
    8. '```' → logprob: -7.981916427612305
    9. ')
' → logprob: -8.606916427612305
    10. 'l' → logprob: -8.981916427612305

Token 548: '.
' (ID: 558)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.05588383227586746
    2. '):' → logprob: -3.1808838844299316
    3. '   ' → logprob: -4.430883884429932
    4. ')' → logprob: -7.305883884429932
    5. '):
' → logprob: -8.555883407592773
    6. ')
' → logprob: -10.930883407592773
    7. '):

' → logprob: -12.055883407592773
    8. '```' → logprob: -12.055883407592773
    9. ' ):
' → logprob: -14.055883407592773
    10. ' ' → logprob: -14.680883407592773

Token 549: '        
' (ID: 3564)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004072347655892372
    2. ':' → logprob: -6.379072189331055
    3. '):
' → logprob: -6.504072189331055
    4. '):' → logprob: -8.379072189331055
    5. ':
' → logprob: -8.504072189331055
    6. '    
' → logprob: -8.879072189331055
    7. '
' → logprob: -9.254072189331055
    8. ')' → logprob: -9.379072189331055
    9. '```' → logprob: -9.504072189331055
    10. '\n' → logprob: -11.504072189331055

Token 550: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0001612267515156418
    2. 'if' → logprob: -8.875161170959473
    3. ')' → logprob: -11.375161170959473
    4. '    
' → logprob: -13.125161170959473
    5. '):
' → logprob: -13.250161170959473
    6. '
' → logprob: -13.250161170959473
    7. ' if' → logprob: -13.375161170959473
    8. '```' → logprob: -14.125161170959473
    9. '"""' → logprob: -14.375161170959473
    10. '):' → logprob: -14.750161170959473

Token 551: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002470350591465831
    2. 'if' → logprob: -8.37524700164795
    3. ' if' → logprob: -12.12524700164795
    4. '    
' → logprob: -12.12524700164795
    5. '
' → logprob: -12.62524700164795
    6. '"""' → logprob: -14.00024700164795
    7. '```' → logprob: -14.25024700164795
    8. '   ' → logprob: -15.37524700164795
    9. '"""
' → logprob: -15.50024700164795
    10. '	if' → logprob: -15.75024700164795

Token 552: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3381675183773041
    2. ' SEG' → logprob: -1.4631675481796265
    3. 'SEG' → logprob: -3.713167428970337
    4. '0' → logprob: -4.463167667388916
    5. ' (' → logprob: -4.838167667388916
    6. ' ' → logprob: -4.963167667388916
    7. '    ' → logprob: -7.213167667388916
    8. '       ' → logprob: -7.338167667388916
    9. '(' → logprob: -7.838167667388916
    10. ' None' → logprob: -7.963167667388916

Token 553: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14322517812252045
    2. '0' → logprob: -2.1432251930236816
    3. ' ' → logprob: -4.518225193023682
    4. ' SEG' → logprob: -5.643225193023682
    5. 'SEG' → logprob: -6.643225193023682
    6. ' (' → logprob: -9.143224716186523
    7. '       ' → logprob: -9.518224716186523
    8. '    ' → logprob: -9.768224716186523
    9. ' None' → logprob: -10.143224716186523
    10. '  ' → logprob: -10.268224716186523

Token 554: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' (adapté à ' int') → logprob: -0.002555926563218236
    2. ' int' → logprob: -6.627555847167969
    3. '0' → logprob: -7.252555847167969
    4. 'SEG' → logprob: -8.377555847167969
    5. '(int' → logprob: -8.752555847167969
    6. '   ' → logprob: -9.252555847167969
    7. '[int' → logprob: -11.127555847167969
    8. 'INT' → logprob: -12.627555847167969
    9. 'Segment' → logprob: -12.752555847167969
    10. 'seg' → logprob: -12.877555847167969

Token 555: ':' (ID: 25)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018205545842647552
    2. ' if' → logprob: -5.393205642700195
    3. ':' → logprob: -5.643205642700195
    4. 'SEG' → logprob: -6.018205642700195
    5. '0' → logprob: -6.518205642700195
    6. '       ' → logprob: -6.643205642700195
    7. 'if' → logprob: -7.143205642700195
    8. ' =' → logprob: -7.143205642700195
    9. ' SEG' → logprob: -7.268205642700195
    10. '    ' → logprob: -7.518205642700195

Token 556: ' Un' (ID: 1367)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.18936456739902496
    2. 'SEG' → logprob: -2.1893646717071533
    3. '   ' → logprob: -3.4393646717071533
    4. ' ' → logprob: -4.189364433288574
    5. ' SEG' → logprob: -4.439364433288574
    6. '(' → logprob: -8.189364433288574
    7. 'seg' → logprob: -8.314364433288574
    8. ' (' → logprob: -9.126864433288574
    9. '(seg' → logprob: -9.251864433288574
    10. '  ' → logprob: -9.439364433288574

Token 557: ' entier' (ID: 80473)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.684851348400116
    2. '|' → logprob: -1.1848514080047607
    3. ' bit' → logprob: -2.9348514080047607
    4. ' |' → logprob: -3.5598514080047607
    5. ' masque' → logprob: -3.5598514080047607
    6. '   ' → logprob: -3.9348514080047607
    7. 'OR' → logprob: -4.309851169586182
    8. ' OR' → logprob: -4.434851169586182
    9. 'bit' → logprob: -4.809851169586182
    10. ' ou' → logprob: -5.309851169586182

Token 558: ' dont' (ID: 11562)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10081373900175095
    2. '       ' → logprob: -3.350813627243042
    3. '
' → logprob: -4.350813865661621
    4. '  ' → logprob: -5.225813865661621
    5. '0' → logprob: -5.350813865661621
    6. '(' → logprob: -5.600813865661621
    7. ' ' → logprob: -5.600813865661621
    8. ' (' → logprob: -5.725813865661621
    9. ' if' → logprob: -5.850813865661621
    10. '|' → logprob: -5.975813865661621

Token 559: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.5704946517944336
    2. ' les' → logprob: -1.0704946517944336
    3. ' chaque' → logprob: -2.5704946517944336
    4. 'l' → logprob: -5.945494651794434
    5. 'le' → logprob: -6.070494651794434
    6. '1' → logprob: -6.320494651794434
    7. 'bits' → logprob: -6.320494651794434
    8. 'Chaque' → logprob: -6.820494651794434
    9. 'la' → logprob: -7.070494651794434
    10. 's' → logprob: -7.195494651794434

Token 560: ' bits' (ID: 18189)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.045112643390893936
    2. ' bits' → logprob: -3.1701126098632812
    3. 'bit' → logprob: -6.920112609863281
    4. '1' → logprob: -7.170112609863281
    5. 'b' → logprob: -8.670112609863281
    6. ' ' → logprob: -9.795112609863281
    7. ' ' → logprob: -9.795112609863281
    8. ' bit' → logprob: -10.420112609863281
    9. '```' → logprob: -11.045112609863281
    10. 'flags' → logprob: -12.045112609863281

Token 561: ' à' (ID: 1221)
  Prédit: ' sont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sont' → logprob: -0.4714246988296509
    2. ' représentent' → logprob: -2.4714245796203613
    3. 's' → logprob: -2.7214245796203613
    4. 'represent' → logprob: -3.2214245796203613
    5. 'set' → logprob: -3.2214245796203613
    6. ' set' → logprob: -3.2214245796203613
    7. '1' → logprob: -3.8464245796203613
    8. ' represent' → logprob: -4.096424579620361
    9. ' ' → logprob: -4.096424579620361
    10. '```' → logprob: -4.221424579620361

Token 562: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00386801571585238
    2. 'l' → logprob: -5.753868103027344
    3. 'un' → logprob: -8.128868103027344
    4. '```' → logprob: -8.503868103027344
    5. 'set' → logprob: -10.378868103027344
    6. '0' → logprob: -10.378868103027344
    7. '`' → logprob: -10.628868103027344
    8. 'positions' → logprob: -10.878868103027344
    9. 'position' → logprob: -11.128868103027344
    10. ' ' → logprob: -11.503868103027344

Token 563: '1' (ID: 16)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.125983476638794
    2. '1' → logprob: -1.250983476638794
    3. 'l' → logprob: -1.750983476638794
    4. 'r' → logprob: -2.125983476638794
    5. 'a' → logprob: -3.500983476638794
    6. '(r' → logprob: -4.250983238220215
    7. '```' → logprob: -4.500983238220215
    8. 'k' → logprob: -4.625983238220215
    9. '(b' → logprob: -5.375983238220215
    10. '(a' → logprob: -5.625983238220215

Token 564: ' représentent' (ID: 169478)
  Prédit: ' représentent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' représentent' → logprob: -0.47388139367103577
    2. ' indiqu' → logprob: -1.3488813638687134
    3. 'ind' → logprob: -2.723881483078003
    4. 's' → logprob: -3.973881483078003
    5. 'represent' → logprob: -4.473881244659424
    6. '```' → logprob: -5.223881244659424
    7. ' sont' → logprob: -5.348881244659424
    8. ' correspondent' → logprob: -5.473881244659424
    9. 're' → logprob: -6.223881244659424
    10. '   ' → logprob: -6.598881244659424

Token 565: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.3886193335056305
    2. ' les' → logprob: -1.138619303703308
    3. 'l' → logprob: -7.138619422912598
    4. '<|end|>' → logprob: -7.638619422912598
    5. 'la' → logprob: -8.763619422912598
    6. ' la' → logprob: -9.138619422912598
    7. ' l' → logprob: -9.263619422912598
    8. 'le' → logprob: -10.513619422912598
    9. '```' → logprob: -10.763619422912598
    10. 'the' → logprob: -11.138619422912598

Token 566: ' lettres' (ID: 101234)
  Prédit: ' lettres'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lettres' → logprob: -0.061889804899692535
    2. 'letters' → logprob: -3.311889886856079
    3. 'lett' → logprob: -4.4368896484375
    4. ' letters' → logprob: -4.8118896484375
    5. ' caractères' → logprob: -5.9368896484375
    6. ' différentes' → logprob: -8.1868896484375
    7. 'le' → logprob: -8.3118896484375
    8. 'car' → logprob: -8.9368896484375
    9. '```' → logprob: -9.9368896484375
    10. ' letras' → logprob: -10.3118896484375

Token 567: ' présentes' (ID: 154902)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3130524456501007
    2. ' présentes' → logprob: -1.6880524158477783
    3. 'prés' → logprob: -3.1880524158477783
    4. '       ' → logprob: -4.938052654266357
    5. 'distinct' → logprob: -5.063052654266357
    6. ' présents' → logprob: -5.313052654266357
    7. '```' → logprob: -5.563052654266357
    8. ' ' → logprob: -5.563052654266357
    9. ' distinct' → logprob: -6.063052654266357
    10. ' que' → logprob: -6.313052654266357

Token 568: ' dans' (ID: 2671)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04604700207710266
    2. ' dans' → logprob: -3.9210469722747803
    3. 'dans' → logprob: -3.9210469722747803
    4. '       ' → logprob: -5.921047210693359
    5. ' if' → logprob: -6.421047210693359
    6. '  ' → logprob: -8.67104721069336
    7. '    ' → logprob: -8.67104721069336
    8. '
' → logprob: -9.17104721069336
    9. ' in' → logprob: -9.17104721069336
    10. ' ' → logprob: -9.29604721069336

Token 569: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.6467172503471375
    2. ' l' → logprob: -1.8967173099517822
    3. 'la' → logprob: -2.2717173099517822
    4. 'le' → logprob: -2.2717173099517822
    5. ' la' → logprob: -2.5217173099517822
    6. ' le' → logprob: -4.396717071533203
    7. 'b' → logprob: -5.396717071533203
    8. 'segment' → logprob: -5.396717071533203
    9. 'a' → logprob: -6.021717071533203
    10. 'interval' → logprob: -6.271717071533203

Token 570: ''' (ID: 6)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.48091012239456177
    2. 'segment' → logprob: -1.230910062789917
    3. ' interval' → logprob: -2.980910062789917
    4. ' segment' → logprob: -3.605910062789917
    5. 'a' → logprob: -5.730910301208496
    6. 'range' → logprob: -6.105910301208496
    7. '[' → logprob: -6.355910301208496
    8. 'seg' → logprob: -7.480910301208496
    9. '`' → logprob: -7.855910301208496
    10. 'b' → logprob: -7.980910301208496

Token 571: 'interval' (ID: 37558)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.3724732995033264
    2. 'interval' → logprob: -1.3724732398986816
    3. ' segment' → logprob: -3.2474732398986816
    4. ' interval' → logprob: -4.497473239898682
    5. 'range' → logprob: -6.247473239898682
    6. 'seg' → logprob: -6.247473239898682
    7. 'SEG' → logprob: -6.747473239898682
    8. 'b' → logprob: -7.747473239898682
    9. 'chaine' → logprob: -8.49747371673584
    10. 'a' → logprob: -8.62247371673584

Token 572: 'le' (ID: 282)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.17250020802021027
    2. 'vale' → logprob: -2.5475001335144043
    3. 'v' → logprob: -3.0475001335144043
    4. 'e' → logprob: -3.7975001335144043
    5. '   ' → logprob: -5.672500133514404
    6. 'ale' → logprob: -5.797500133514404
    7. '       ' → logprob: -7.172500133514404
    8. 'aire' → logprob: -7.547500133514404
    9. 'va' → logprob: -7.922500133514404
    10. 'al' → logprob: -7.922500133514404

Token 573: ' [' (ID: 723)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026920868083834648
    2. '.' → logprob: -4.276920795440674
    3. '
' → logprob: -5.026920795440674
    4. '    
' → logprob: -6.401920795440674
    5. '.
' → logprob: -6.526920795440674
    6. '```' → logprob: -6.651920795440674
    7. '       ' → logprob: -7.401920795440674
    8. ',' → logprob: -8.651921272277832
    9. ')' → logprob: -9.276921272277832
    10. '):
' → logprob: -9.526921272277832

Token 574: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -9.9728669738397e-05
    2. ' a' → logprob: -9.250100135803223
    3. '   ' → logprob: -13.125100135803223
    4. ')' → logprob: -14.500100135803223
    5. ',' → logprob: -14.875100135803223
    6. '
' → logprob: -15.625100135803223
    7. ')a' → logprob: -16.250099182128906
    8. '_a' → logprob: -16.625099182128906
    9. '```' → logprob: -16.750099182128906
    10. ']' → logprob: -16.750099182128906

Token 575: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008853725739754736
    2. ' ,' → logprob: -8.125885009765625
    3. ',b' → logprob: -8.125885009765625
    4. '   ' → logprob: -8.375885009765625
    5. ')' → logprob: -10.375885009765625
    6. ']' → logprob: -11.750885009765625
    7. '       ' → logprob: -12.375885009765625
    8. '),' → logprob: -12.750885009765625
    9. '],' → logprob: -12.875885009765625
    10. ',
' → logprob: -13.250885009765625

Token 576: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.16022492945194244
    2. ' b' → logprob: -1.9102249145507812
    3. 'r' → logprob: -15.160224914550781
    4. '   ' → logprob: -16.16022491455078
    5. ' r' → logprob: -16.66022491455078
    6. ')' → logprob: -16.78522491455078
    7. ' ' → logprob: -16.78522491455078
    8. ')b' → logprob: -16.91022491455078
    9. ',' → logprob: -17.16022491455078
    10. 'a' → logprob: -17.16022491455078

Token 577: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007177923689596355
    2. ']' → logprob: -7.875717639923096
    3. '])' → logprob: -8.625718116760254
    4. '   ' → logprob: -9.625718116760254
    5. ')
' → logprob: -10.375718116760254
    6. ' )' → logprob: -10.875718116760254
    7. ').' → logprob: -11.125718116760254
    8. '))' → logprob: -11.875718116760254
    9. ')]' → logprob: -11.875718116760254
    10. ')])' → logprob: -12.125718116760254

Token 578: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00236137886531651
    2. '
' → logprob: -6.502361297607422
    3. '    
' → logprob: -7.252361297607422
    4. '\n' → logprob: -9.502361297607422
    5. ':' → logprob: -11.002361297607422
    6. '```' → logprob: -11.002361297607422
    7. ')' → logprob: -11.627361297607422
    8. '):
' → logprob: -11.752361297607422
    9. '   
' → logprob: -12.377361297607422
    10. ' 
' → logprob: -12.377361297607422

Token 579: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007807997753843665
    2. ')' → logprob: -8.500781059265137
    3. ':' → logprob: -8.750781059265137
    4. '
' → logprob: -8.750781059265137
    5. '):
' → logprob: -9.250781059265137
    6. '    
' → logprob: -9.500781059265137
    7. '\n' → logprob: -10.500781059265137
    8. '```' → logprob: -11.000781059265137
    9. ':
' → logprob: -11.125781059265137
    10. '):' → logprob: -11.375781059265137

Token 580: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010136376367881894
    2. 'if' → logprob: -7.12601375579834
    3. ' if' → logprob: -8.50101375579834
    4. '	if' → logprob: -12.37601375579834
    5. '    
' → logprob: -14.00101375579834
    6. '   ' → logprob: -14.25101375579834
    7. '    ' → logprob: -16.376012802124023
    8. '```' → logprob: -17.251012802124023
    9. '       ' → logprob: -18.126012802124023
    10. '  ' → logprob: -18.376012802124023

Token 581: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.20162753760814667
    2. '   ' → logprob: -1.701627492904663
    3. ' if' → logprob: -8.451627731323242
    4. '	if' → logprob: -14.451627731323242
    5. '  ' → logprob: -16.451627731323242
    6. '    
' → logprob: -17.326627731323242
    7. '    ' → logprob: -17.826627731323242
    8. '```' → logprob: -18.826627731323242
    9. 'If' → logprob: -18.951627731323242
    10. '
' → logprob: -19.201627731323242

Token 582: ' Aucun' (ID: 199365)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -2.5107177862082608e-05
    2. '   ' → logprob: -11.000024795532227
    3. ' if' → logprob: -11.750024795532227
    4. '#' → logprob: -15.000024795532227
    5. '
' → logprob: -15.750024795532227
    6. 'If' → logprob: -16.875024795532227
    7. '       ' → logprob: -18.250024795532227
    8. '	if' → logprob: -18.375024795532227
    9. '```' → logprob: -18.625024795532227
    10. 'b' → logprob: -19.250024795532227

Token 583: ' rec' (ID: 1369)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.35202622413635254
    2. ' if' → logprob: -1.2270262241363525
    3. '   ' → logprob: -6.227025985717773
    4. '       ' → logprob: -7.102025985717773
    5. '>=' → logprob: -8.352025985717773
    6. '>' → logprob: -8.977025985717773
    7. 'elif' → logprob: -9.602025985717773
    8. 'a' → logprob: -9.727025985717773
    9. ' overlap' → logprob: -9.852025985717773
    10. 'à' → logprob: -10.602025985717773

Token 584: 'ouv' (ID: 14851)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.05995931476354599
    2. 'over' → logprob: -3.8099594116210938
    3. 'u' → logprob: -4.434959411621094
    4. 'ur' → logprob: -5.184959411621094
    5. 'ut' → logprob: -5.559959411621094
    6. 'urrent' → logprob: -6.559959411621094
    7. ' overlap' → logprob: -6.934959411621094
    8. 'up' → logprob: -7.059959411621094
    9. 'urs' → logprob: -7.184959411621094
    10. 'ouvr' → logprob: -7.184959411621094

Token 585: 'rement' (ID: 66132)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.14376530051231384
    2. 'erp' → logprob: -2.2687652111053467
    3. 'ert' → logprob: -4.518765449523926
    4. 'rement' → logprob: -4.768765449523926
    5. 'erc' → logprob: -5.393765449523926
    6. 'erte' → logprob: -6.143765449523926
    7. 'ep' → logprob: -6.518765449523926
    8. 'erap' → logprob: -7.643765449523926
    9. 'urement' → logprob: -8.018765449523926
    10. 'verture' → logprob: -8.143765449523926

Token 586: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04242784157395363
    2. ' if' → logprob: -3.7924277782440186
    3. 'if' → logprob: -4.167428016662598
    4. ':' → logprob: -5.792428016662598
    5. '       ' → logprob: -8.167428016662598
    6. '	if' → logprob: -9.667428016662598
    7. ':
' → logprob: -10.292428016662598
    8. '  ' → logprob: -10.917428016662598
    9. ',' → logprob: -11.042428016662598
    10. '    ' → logprob: -11.417428016662598

Token 587: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007161272224038839
    2. ' if' → logprob: -7.875716209411621
    3. 'if' → logprob: -8.500716209411621
    4. '    
' → logprob: -9.125716209411621
    5. ':' → logprob: -12.125716209411621
    6. '       ' → logprob: -12.500716209411621
    7. '
' → logprob: -12.625716209411621
    8. '\n' → logprob: -12.750716209411621
    9. '    ' → logprob: -13.250716209411621
    10. '  ' → logprob: -13.625716209411621

Token 588: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.20401252806186676
    2. '   ' → logprob: -1.7040125131607056
    3. ' if' → logprob: -5.954012393951416
    4. '	if' → logprob: -14.829012870788574
    5. '    
' → logprob: -17.704011917114258
    6. '  ' → logprob: -18.204011917114258
    7. '    ' → logprob: -18.704011917114258
    8. '```' → logprob: -18.704011917114258
    9. 'If' → logprob: -18.829011917114258
    10. '       ' → logprob: -19.204011917114258

Token 589: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.5761734843254089
    2. 'b' → logprob: -0.8261734843254089
    3. 'a' → logprob: -8.451173782348633
    4. '   ' → logprob: -11.201173782348633
    5. ' r' → logprob: -12.576173782348633
    6. ' b' → logprob: -13.451173782348633
    7. '(r' → logprob: -14.076173782348633
    8. '(b' → logprob: -15.201173782348633
    9. '[r' → logprob: -15.326173782348633
    10. '	r' → logprob: -16.076173782348633

Token 590: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.000146687583765015
    2. ' <=' → logprob: -8.875146865844727
    3. ')<=' → logprob: -12.625146865844727
    4. '```' → logprob: -13.250146865844727
    5. '   ' → logprob: -14.125146865844727
    6. ']<=' → logprob: -14.500146865844727
    7. '≤' → logprob: -15.125146865844727
    8. 'a' → logprob: -16.500146865844727
    9. 'le' → logprob: -16.625146865844727
    10. '_' → logprob: -17.625146865844727

Token 591: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0001234428636962548
    2. ' a' → logprob: -9.000123023986816
    3. '   ' → logprob: -17.625123977661133
    4. '	a' → logprob: -18.750123977661133
    5. '#a' → logprob: -19.625123977661133
    6. ' ' → logprob: -20.750123977661133
    7. '    ' → logprob: -21.500123977661133
    8. '  ' → logprob: -21.625123977661133
    9. '_a' → logprob: -21.750123977661133
    10. '[a' → logprob: -21.750123977661133

Token 592: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.0067745838314294815
    2. 'or' → logprob: -5.006774425506592
    3. '	or' → logprob: -10.50677490234375
    4. '<|end|>' → logprob: -11.13177490234375
    5. '   ' → logprob: -12.38177490234375
    6. ' ' → logprob: -12.38177490234375
    7. '<|end|>' → logprob: -13.25677490234375
    8. '    ' → logprob: -13.50677490234375
    9. ':' → logprob: -13.75677490234375
    10. ' أو' → logprob: -14.13177490234375

Token 593: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00044663884909823537
    2. 'l' → logprob: -7.875446796417236
    3. ' b' → logprob: -9.875446319580078
    4. '   ' → logprob: -11.750446319580078
    5. 'a' → logprob: -12.000446319580078
    6. ' l' → logprob: -15.000446319580078
    7. '    ' → logprob: -15.125446319580078
    8. '       ' → logprob: -15.625446319580078
    9. '	b' → logprob: -16.000446319580078
    10. '```' → logprob: -16.750446319580078

Token 594: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.3868970274925232
    2. ' <=' → logprob: -1.136897087097168
    3. '>=' → logprob: -11.386897087097168
    4. ')<=' → logprob: -12.011897087097168
    5. ' >=' → logprob: -12.886897087097168
    6. ')' → logprob: -13.261897087097168
    7. '   ' → logprob: -13.511897087097168
    8. ' or' → logprob: -13.636897087097168
    9. '<|end|>' → logprob: -14.511897087097168
    10. ']<=' → logprob: -14.886897087097168

Token 595: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -3.128163257315464e-07
    2. ' l' → logprob: -15.25
    3. '   ' → logprob: -18.375
    4. '	l' → logprob: -18.625
    5. '       ' → logprob: -21.625
    6. '_l' → logprob: -22.75
    7. '[l' → logprob: -22.75
    8. '    ' → logprob: -22.875
    9. '     ' → logprob: -23.5
    10. '           ' → logprob: -23.625

Token 596: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.017142456024885178
    2. ':
' → logprob: -4.517142295837402
    3. ':return' → logprob: -5.142142295837402
    4. ' or' → logprob: -9.017142295837402
    5. '   ' → logprob: -9.267142295837402
    6. '       ' → logprob: -11.642142295837402
    7. ' :' → logprob: -12.392142295837402
    8. 'return' → logprob: -14.642142295837402
    9. ':
' → logprob: -15.017142295837402
    10. ' return' → logprob: -15.517142295837402

Token 597: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004305022768676281
    2. '   ' → logprob: -5.629304885864258
    3. 'return' → logprob: -7.754304885864258
    4. ':return' → logprob: -9.004304885864258
    5. ' return' → logprob: -9.254304885864258
    6. ':' → logprob: -10.004304885864258
    7. ':
' → logprob: -13.004304885864258
    8. '	' → logprob: -13.129304885864258
    9. '	return' → logprob: -13.379304885864258
    10. '           ' → logprob: -13.504304885864258

Token 598: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.01841716282069683
    2. '0' → logprob: -4.5184173583984375
    3. '       ' → logprob: -5.5184173583984375
    4. ' return' → logprob: -6.0184173583984375
    5. '   ' → logprob: -7.0184173583984375
    6. ' ' → logprob: -14.393417358398438
    7. '	return' → logprob: -14.643417358398438
    8. '000' → logprob: -16.393417358398438
    9. '1' → logprob: -16.643417358398438
    10. ':return' → logprob: -16.643417358398438

Token 599: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.493430894101039e-05
    2. ' ' → logprob: -9.500075340270996
    3. '   ' → logprob: -17.62507438659668
    4. '000' → logprob: -18.00007438659668
    5. '۰' → logprob: -20.00007438659668
    6. '00' → logprob: -20.37507438659668
    7. ' ' → logprob: -20.37507438659668
    8. '  ' → logprob: -20.62507438659668
    9. '
' → logprob: -21.31257438659668
    10. '０' → logprob: -21.50007438659668

Token 600: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '000' → logprob: -19.25
    4. '   ' → logprob: -21.125
    5. '00' → logprob: -21.375
    6. '۰' → logprob: -21.5
    7. '０' → logprob: -22.625
    8. '```' → logprob: -23.25
    9. '٠' → logprob: -23.4375
    10. '`' → logprob: -23.625

Token 601: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0032348709646612406
    2. '
' → logprob: -6.50323486328125
    3. '    
' → logprob: -6.62823486328125
    4. '<|end|>' → logprob: -8.25323486328125
    5. '\n' → logprob: -10.25323486328125
    6. '  ' → logprob: -10.87823486328125
    7. '<|end|>' → logprob: -11.37823486328125
    8. 'elif' → logprob: -11.50323486328125
    9. 'newline' → logprob: -11.75323486328125
    10. '```' → logprob: -11.87823486328125

Token 602: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00416981428861618
    2. '    
' → logprob: -6.129169940948486
    3. '
' → logprob: -6.379169940948486
    4. '\n' → logprob: -9.379169464111328
    5. '  
' → logprob: -9.754169464111328
    6. ' 
' → logprob: -10.129169464111328
    7. '   
' → logprob: -10.879169464111328
    8. '<|end|>' → logprob: -11.129169464111328
    9. '```' → logprob: -11.254169464111328
    10. 'elif' → logprob: -11.379169464111328

Token 603: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07099631428718567
    2. 'if' → logprob: -2.6959962844848633
    3. ' if' → logprob: -7.820996284484863
    4. 'elif' → logprob: -8.195996284484863
    5. '#' (adapté à ' #') → logprob: -8.320996284484863
    6. '    
' → logprob: -9.070996284484863
    7. '```' → logprob: -11.945996284484863
    8. '	if' → logprob: -12.570996284484863
    9. '  ' → logprob: -12.695996284484863
    10. '
' → logprob: -12.820996284484863

Token 604: ' Ent' (ID: 6815)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.009897744283080101
    2. '#' → logprob: -4.634897708892822
    3. 'a' → logprob: -9.50989818572998
    4. '   ' → logprob: -10.63489818572998
    5. 'elif' → logprob: -10.88489818572998
    6. ' if' → logprob: -11.00989818572998
    7. '#a' → logprob: -13.13489818572998
    8. 'l' → logprob: -13.50989818572998
    9. '[a' → logprob: -13.63489818572998
    10. 'If' → logprob: -13.88489818572998

Token 605: 'ière' (ID: 12452)
  Prédit: 'ière'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ière' → logprob: -0.7251808643341064
    2. 'ier' → logprob: -0.9751808643341064
    3. 'ire' → logprob: -2.6001808643341064
    4. 'iere' → logprob: -3.4751808643341064
    5. '   ' → logprob: -3.7251808643341064
    6. '       ' → logprob: -5.725180625915527
    7. 're' → logprob: -6.350180625915527
    8. 'iers' → logprob: -7.350180625915527
    9. 'ierre' → logprob: -7.350180625915527
    10. 'e' → logprob: -7.600180625915527

Token 606: 'ment' (ID: 508)
  Prédit: 'ment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.00022821188031230122
    2. 'm' → logprob: -9.375227928161621
    3. '   ' → logprob: -10.375227928161621
    4. 'mente' → logprob: -10.500227928161621
    5. 'mentation' → logprob: -10.750227928161621
    6. 't' → logprob: -11.500227928161621
    7. 'rement' → logprob: -11.500227928161621
    8. 'ement' → logprob: -11.500227928161621
    9. '```' → logprob: -12.750227928161621
    10. 'me' → logprob: -12.875227928161621

Token 607: ' couvert' (ID: 140806)
  Prédit: 'dans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dans' → logprob: -0.3182674050331116
    2. 'conten' → logprob: -1.5682673454284668
    3. 'c' → logprob: -3.818267345428467
    4. 'contained' → logprob: -4.568267345428467
    5. 'in' → logprob: -4.693267345428467
    6. 'incl' → logprob: -4.943267345428467
    7. 'if' → logprob: -5.568267345428467
    8. '   ' → logprob: -5.943267345428467
    9. 'covered' → logprob: -6.318267345428467
    10. 'cont' → logprob: -6.693267345428467

Token 608: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01057859044522047
    2. ' if' → logprob: -4.635578632354736
    3. 'if' → logprob: -7.260578632354736
    4. '<|end|>' → logprob: -9.760578155517578
    5. ',' → logprob: -11.010578155517578
    6. '  ' → logprob: -11.260578155517578
    7. '.' → logprob: -11.510578155517578
    8. '    ' → logprob: -12.510578155517578
    9. '	if' → logprob: -12.760578155517578
    10. ':' → logprob: -12.885578155517578

Token 609: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03208773210644722
    2. 'if' → logprob: -4.032087802886963
    3. ' if' → logprob: -4.282087802886963
    4. '  ' → logprob: -11.907087326049805
    5. 'elif' → logprob: -12.157087326049805
    6. '	if' → logprob: -12.282087326049805
    7. '<|end|>' → logprob: -12.907087326049805
    8. '```' → logprob: -13.032087326049805
    9. ',' → logprob: -13.282087326049805
    10. '    ' → logprob: -13.532087326049805

Token 610: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.010308429598808289
    2. '   ' → logprob: -4.760308265686035
    3. ' if' → logprob: -6.385308265686035
    4. 'elif' → logprob: -12.260308265686035
    5. '	if' → logprob: -14.260308265686035
    6. '       ' → logprob: -14.885308265686035
    7. '```' → logprob: -15.385308265686035
    8. '  ' → logprob: -15.635308265686035
    9. '    ' → logprob: -16.13530921936035
    10. ' ' → logprob: -17.01030921936035

Token 611: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.5690089639974758e-05
    2. ' a' → logprob: -11.625015258789062
    3. '   ' → logprob: -12.000015258789062
    4. '[a' → logprob: -14.875015258789062
    5. ' ' → logprob: -15.875015258789062
    6. '	a' → logprob: -17.625015258789062
    7. '(a' → logprob: -17.750015258789062
    8. 'l' → logprob: -18.125015258789062
    9. '  ' → logprob: -18.375015258789062
    10. ' ' → logprob: -18.500015258789062

Token 612: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.09249795228242874
    2. ' <=' → logprob: -2.4674980640411377
    3. '>=' → logprob: -5.717497825622559
    4. ' >=' → logprob: -8.342497825622559
    5. '   ' → logprob: -10.967497825622559
    6. '[' → logprob: -12.092497825622559
    7. '```' → logprob: -13.842497825622559
    8. ' ' → logprob: -13.967497825622559
    9. ')<=' → logprob: -15.467497825622559
    10. ']<=' → logprob: -15.592497825622559

Token 613: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0007099286303855479
    2. ' l' → logprob: -7.2507100105285645
    3. '	l' → logprob: -17.625709533691406
    4. '   ' → logprob: -19.250709533691406
    5. '[l' → logprob: -19.625709533691406
    6. '_l' → logprob: -19.750709533691406
    7. '```' → logprob: -21.875709533691406
    8. '$l' → logprob: -22.125709533691406
    9. '­l' → logprob: -22.500709533691406
    10. '*l' → logprob: -22.875709533691406

Token 614: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.04859009385108948
    2. 'and' → logprob: -3.0485901832580566
    3. ' ' → logprob: -13.548589706420898
    4. '    ' → logprob: -14.673589706420898
    5. '   ' → logprob: -15.048589706420898
    6. '	and' → logprob: -15.673589706420898
    7. '<|end|>' → logprob: -16.5485897064209
    8. '        ' → logprob: -16.5485897064209
    9. ' và' → logprob: -16.9235897064209
    10. ' и' → logprob: -16.9235897064209

Token 615: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0015430726343765855
    2. ' r' → logprob: -6.501543045043945
    3. 'b' → logprob: -10.126543045043945
    4. '   ' → logprob: -14.251543045043945
    5. ' b' → logprob: -16.501543045043945
    6. '	r' → logprob: -17.376543045043945
    7. ' ' → logprob: -18.376543045043945
    8. '  ' → logprob: -20.126543045043945
    9. '    ' → logprob: -20.251543045043945
    10. '(r' → logprob: -20.876543045043945

Token 616: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.07902760058641434
    2. ' <=' → logprob: -2.5790276527404785
    3. '<|end|>' → logprob: -9.70402717590332
    4. '>=' → logprob: -10.07902717590332
    5. ')<=' → logprob: -10.57902717590332
    6. ']<=' → logprob: -12.70402717590332
    7. ' >=' → logprob: -13.20402717590332
    8. '   ' → logprob: -13.20402717590332
    9. '<|end|>' → logprob: -13.95402717590332
    10. ')' → logprob: -14.82902717590332

Token 617: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0002613358374219388
    2. ' b' → logprob: -8.250261306762695
    3. '   ' → logprob: -17.250261306762695
    4. '	b' → logprob: -19.500261306762695
    5. ' ' → logprob: -20.750261306762695
    6. ')b' → logprob: -21.750261306762695
    7. '  ' → logprob: -21.875261306762695
    8. '       ' → logprob: -22.000261306762695
    9. '    ' → logprob: -22.375261306762695
    10. '```' → logprob: -22.500261306762695

Token 618: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5788163542747498
    2. ':' → logprob: -0.8288163542747498
    3. '       ' → logprob: -6.4538164138793945
    4. ':return' → logprob: -6.8288164138793945
    5. '   ' → logprob: -8.578816413879395
    6. ':
' → logprob: -10.953816413879395
    7. '):
' → logprob: -12.453816413879395
    8. ' :
' → logprob: -13.203816413879395
    9. 'return' → logprob: -13.703816413879395
    10. ':

' → logprob: -14.078816413879395

Token 619: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000517886015586555
    2. 'return' → logprob: -7.875517845153809
    3. ' return' → logprob: -9.000517845153809
    4. '   ' → logprob: -11.875517845153809
    5. '	return' → logprob: -13.125517845153809
    6. ':return' → logprob: -13.375517845153809
    7. '	' → logprob: -13.750517845153809
    8. '	   ' → logprob: -14.375517845153809
    9. '           ' → logprob: -14.625517845153809
    10. ':' → logprob: -15.000517845153809

Token 620: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.040312428027391434
    2. '       ' → logprob: -3.2903125286102295
    3. ' return' → logprob: -6.16531229019165
    4. '   ' → logprob: -9.040312767028809
    5. '	return' → logprob: -10.040312767028809
    6. '{return' → logprob: -12.915312767028809
    7. ':return' → logprob: -13.540312767028809
    8. '           ' → logprob: -14.415312767028809
    9. '	   ' → logprob: -15.540312767028809
    10. '	' → logprob: -15.790312767028809

Token 621: ' SEG' (ID: 90192)
  Prédit: 'SEG'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SEG' → logprob: -2.935296834039036e-06
    2. ' SEG' → logprob: -12.75000286102295
    3. '   ' → logprob: -19.250003814697266
    4. '_SEG' → logprob: -20.250003814697266
    5. 'SE' → logprob: -21.125003814697266
    6. 'seg' → logprob: -21.750003814697266
    7. 'SG' → logprob: -21.750003814697266
    8. 'SIG' → logprob: -22.250003814697266
    9. '       ' → logprob: -23.375003814697266
    10. 'SEQ' → logprob: -23.625003814697266

Token 622: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -2.339278580620885e-06
    2. '[i' → logprob: -13.375001907348633
    3. '[' → logprob: -14.750001907348633
    4. 'k' → logprob: -15.125001907348633
    5. '[n' → logprob: -19.625001907348633
    6. '[
' → logprob: -20.000001907348633
    7. '[j' → logprob: -20.625001907348633
    8. '[m' → logprob: -21.125001907348633
    9. '[c' → logprob: -21.125001907348633
    10. '[l' → logprob: -21.375001907348633

Token 623: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00046379686682485044
    2. ' ]' → logprob: -7.750463962554932
    3. ']
' → logprob: -10.375463485717773
    4. '   ' → logprob: -13.875463485717773
    5. '<|end|>' → logprob: -14.875463485717773
    6. '[' → logprob: -16.625463485717773
    7. ']

' → logprob: -16.625463485717773
    8. ']
' → logprob: -16.875463485717773
    9. '<|end|>' → logprob: -16.875463485717773
    10. ' ]
' → logprob: -16.875463485717773

Token 624: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -2.117345684382599e-05
    2. 'return' → logprob: -11.125020980834961
    3. '```' → logprob: -13.250020980834961
    4. '    
' → logprob: -13.500020980834961
    5. 'if' → logprob: -14.250020980834961
    6. '#' → logprob: -14.625020980834961
    7. '
' → logprob: -15.000020980834961
    8. '       ' → logprob: -15.000020980834961
    9. ' return' → logprob: -15.250020980834961
    10. 'bit' → logprob: -15.375020980834961

Token 625: ' else' (ID: 1203)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.5265641212463379
    2. '   ' → logprob: -1.526564121246338
    3. ' left' → logprob: -2.276564121246338
    4. 'mid' → logprob: -2.901564121246338
    5. 'res' → logprob: -4.651564121246338
    6. '#' → logprob: -4.776564121246338
    7. ' mid' → logprob: -4.901564121246338
    8. 'return' → logprob: -6.151564121246338
    9. 'm' → logprob: -6.151564121246338
    10. 'else' (adapté à ' else') → logprob: -6.401564121246338

Token 626: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5638704895973206
    2. ':' → logprob: -0.9388704895973206
    3. '       ' → logprob: -3.438870429992676
    4. '   ' → logprob: -5.063870429992676
    5. ' :
' → logprob: -7.813870429992676
    6. ' :' → logprob: -8.063870429992676
    7. ':return' → logprob: -8.063870429992676
    8. ' return' → logprob: -8.438870429992676
    9. ':
' → logprob: -9.563870429992676
    10. 'return' → logprob: -9.688870429992676

Token 627: '       ' (ID: 309)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.6455792784690857
    2. '   ' → logprob: -1.2705793380737305
    3. 'mid' → logprob: -2.3955793380737305
    4. 'return' → logprob: -2.6455793380737305
    5. '       ' → logprob: -4.1455793380737305
    6. ' left' → logprob: -4.7705793380737305
    7. 'm' → logprob: -5.0205793380737305
    8. ' mid' → logprob: -7.0205793380737305
    9. ' return' → logprob: -7.8955793380737305
    10. 'l' → logprob: -9.02057933807373

Token 628: ' #' (ID: 1069)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.48178666830062866
    2. 'left' → logprob: -1.1067867279052734
    3. 'm' → logprob: -3.2317867279052734
    4. 'vl' → logprob: -4.731786727905273
    5. 'return' → logprob: -6.731786727905273
    6. 'vm' → logprob: -8.106786727905273
    7. 'vg' → logprob: -8.356786727905273
    8. 'val' → logprob: -8.481786727905273
    9. 'res' → logprob: -8.481786727905273
    10. 'middle' → logprob: -8.481786727905273

Token 629: ' Rec' (ID: 14753)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.12270525097846985
    2. 'left' → logprob: -2.7477052211761475
    3. 'm' → logprob: -3.1227052211761475
    4. 'vl' → logprob: -5.122705459594727
    5. 'vm' → logprob: -7.997705459594727
    6. 'res' → logprob: -8.372705459594727
    7. 'middle' → logprob: -8.997705459594727
    8. 'return' → logprob: -9.122705459594727
    9. 'v' → logprob: -9.122705459594727
    10. 'g' → logprob: -9.247705459594727

Token 630: 'ouvre' (ID: 81331)
  Prédit: 'urse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'urse' → logprob: -0.9997596740722656
    2. 'urs' → logprob: -1.1247596740722656
    3. 'all' → logprob: -2.9997596740722656
    4. 'alc' → logprob: -3.2497596740722656
    5. 'u' → logprob: -3.4997596740722656
    6. 'ur' → logprob: -4.124759674072266
    7. 'ours' → logprob: -4.249759674072266
    8. 'ursion' → logprob: -4.249759674072266
    9. 'l' → logprob: -4.499759674072266
    10. 'ursive' → logprob: -4.874759674072266

Token 631: ' part' (ID: 997)
  Prédit: 'ment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.47338536381721497
    2. 'r' → logprob: -1.2233853340148926
    3. 'rement' → logprob: -4.098385334014893
    4. 're' → logprob: -4.223385334014893
    5. 'rage' → logprob: -4.223385334014893
    6. 'l' → logprob: -5.098385334014893
    7. 's' → logprob: -5.598385334014893
    8. 'split' → logprob: -5.598385334014893
    9. 'm' → logprob: -6.598385334014893
    10. '[' → logprob: -6.598385334014893

Token 632: 'iellement' (ID: 70958)
  Prédit: 'iel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iel' → logprob: -0.6736222505569458
    2. 'iellement' → logprob: -0.9236222505569458
    3. 'ielle' → logprob: -2.6736221313476562
    4. 'age' → logprob: -5.423622131347656
    5. 'ie' → logprob: -5.423622131347656
    6. 'e' → logprob: -5.673622131347656
    7. 't' → logprob: -5.798622131347656
    8. 'i' → logprob: -6.048622131347656
    9. 'ition' → logprob: -6.798622131347656
    10. '   ' → logprob: -7.548622131347656

Token 633: ',' (ID: 11)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.4046071171760559
    2. 'm' → logprob: -1.1546070575714111
    3. 'left' → logprob: -4.65460729598999
    4. ' mid' → logprob: -5.27960729598999
    5. 'return' → logprob: -7.02960729598999
    6. '   ' → logprob: -7.27960729598999
    7. 'vl' → logprob: -7.90460729598999
    8. ' m' → logprob: -8.154606819152832
    9. ' left' → logprob: -8.654606819152832
    10. 'middle' → logprob: -8.779606819152832

Token 634: ' doit' (ID: 21822)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.20673099160194397
    2. 'm' → logprob: -2.081731081008911
    3. ' mid' → logprob: -3.331731081008911
    4. 'left' → logprob: -4.081730842590332
    5. ' left' → logprob: -6.206730842590332
    6. 'return' → logprob: -6.331730842590332
    7. '   ' → logprob: -6.456730842590332
    8. '       ' → logprob: -6.706730842590332
    9. 'g' → logprob: -6.831730842590332
    10. ' m' → logprob: -7.206730842590332

Token 635: ' inter' (ID: 993)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.7438742518424988
    2. 'return' → logprob: -0.7438742518424988
    3. ' retourner' → logprob: -3.4938743114471436
    4. 'split' → logprob: -5.4938740730285645
    5. ' split' → logprob: -5.6188740730285645
    6. 're' → logprob: -5.8688740730285645
    7. 'div' → logprob: -6.6188740730285645
    8. 'ret' → logprob: -7.1188740730285645
    9. ' rec' → logprob: -7.2438740730285645
    10. 'ren' → logprob: -7.6188740730285645

Token 636: 'roger' (ID: 165648)
  Prédit: 'roger'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'roger' → logprob: -0.0012222514487802982
    2. 'ro' → logprob: -7.376222133636475
    3. 'preter' → logprob: -9.126222610473633
    4. 'p' → logprob: -9.376222610473633
    5. 'oger' → logprob: -9.626222610473633
    6. 'rom' → logprob: -9.876222610473633
    7. 'n' → logprob: -10.126222610473633
    8. 'r' → logprob: -10.376222610473633
    9. 'caler' → logprob: -10.376222610473633
    10. 'rog' → logprob: -10.626222610473633

Token 637: ' les' (ID: 1341)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -1.1303330659866333
    2. '2' → logprob: -1.2553330659866333
    3. 'les' → logprob: -2.3803329467773438
    4. 'le' → logprob: -2.6303329467773438
    5. 'left' → logprob: -3.0053329467773438
    6. '(' → logprob: -3.1303329467773438
    7. ' les' → logprob: -3.3803329467773438
    8. ' find' → logprob: -3.6303329467773438
    9. 'la' → logprob: -4.005332946777344
    10. 'l' → logprob: -4.755332946777344

Token 638: ' enfants' (ID: 24681)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.43429064750671387
    2. 'de' → logprob: -1.5592906475067139
    3. 'en' → logprob: -2.309290647506714
    4. 'find' → logprob: -3.934290647506714
    5. ' enfants' → logprob: -4.434290885925293
    6. 'f' → logprob: -5.184290885925293
    7. 'fill' → logprob: -6.184290885925293
    8. 'children' → logprob: -6.684290885925293
    9. ' ' → logprob: -7.434290885925293
    10. '1' → logprob: -7.434290885925293

Token 639: '
' (ID: 198)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.9894731640815735
    2. 'mid' → logprob: -1.4894731044769287
    3. ' left' → logprob: -1.4894731044769287
    4. '           ' → logprob: -2.4894731044769287
    5. ' mid' → logprob: -3.6144731044769287
    6. 'return' → logprob: -3.8644731044769287
    7. 'm' → logprob: -3.9894731044769287
    8. '       ' → logprob: -4.489473342895508
    9. ' return' → logprob: -5.114473342895508
    10. '   ' → logprob: -5.989473342895508

Token 640: '       ' (ID: 309)
  Prédit: ' left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.6964477300643921
    2. 'left' → logprob: -1.321447730064392
    3. '       ' → logprob: -3.1964478492736816
    4. 'mid' → logprob: -3.3214478492736816
    5. ' return' → logprob: -3.4464478492736816
    6. 'return' → logprob: -3.4464478492736816
    7. '   ' → logprob: -3.8214478492736816
    8. '           ' → logprob: -3.8214478492736816
    9. ' mid' → logprob: -4.196447849273682
    10. 'm' → logprob: -4.196447849273682

Token 641: ' c' (ID: 274)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.8579778075218201
    2. 'mid' → logprob: -0.8579778075218201
    3. 'vl' → logprob: -1.9829778671264648
    4. 'm' → logprob: -4.607977867126465
    5. 'vm' → logprob: -6.732977867126465
    6. ' left' → logprob: -7.107977867126465
    7. 'v' → logprob: -7.732977867126465
    8. 'vg' → logprob: -7.857977867126465
    9. ' mid' → logprob: -7.982977867126465
    10. 'res' → logprob: -7.982977867126465

Token 642: '1' (ID: 16)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20613422989845276
    2. '1' → logprob: -2.20613431930542
    3. '=' → logprob: -2.83113431930542
    4. 'ont' → logprob: -4.83113431930542
    5. 'h' → logprob: -5.20613431930542
    6. '_' → logprob: -7.20613431930542
    7. 'on' → logprob: -7.70613431930542
    8. '_left' → logprob: -7.83113431930542
    9. 'o' → logprob: -8.581133842468262
    10. 'd' → logprob: -8.706133842468262

Token 643: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03365987911820412
    2. '=' → logprob: -3.4086599349975586
    3. ',' → logprob: -11.908659934997559
    4. ' ' → logprob: -13.158659934997559
    5. '=find' → logprob: -13.533659934997559
    6. '1' → logprob: -13.658659934997559
    7. '=k' → logprob: -14.658659934997559
    8. '   ' → logprob: -14.658659934997559
    9. 'k' → logprob: -15.033659934997559
    10. '_' → logprob: -15.533659934997559

Token 644: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.009757150895893574
    2. ' find' → logprob: -4.634757041931152
    3. '   ' → logprob: -14.634757041931152
    4. ' ' → logprob: -15.384757041931152
    5. '(find' → logprob: -15.384757041931152
    6. '  ' → logprob: -16.50975799560547
    7. '	find' → logprob: -16.88475799560547
    8. '=find' → logprob: -17.63475799560547
    9. '2' → logprob: -18.00975799560547
    10. '    ' → logprob: -18.25975799560547

Token 645: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.15462961792945862
    2. '(a' → logprob: -2.029629707336426
    3. '(k' → logprob: -4.529629707336426
    4. '2' → logprob: -7.154629707336426
    5. 'a' → logprob: -8.904629707336426
    6. '((' → logprob: -9.279629707336426
    7. 'k' → logprob: -10.529629707336426
    8. ' (' → logprob: -10.654629707336426
    9. '(c' → logprob: -11.029629707336426
    10. ' ' → logprob: -12.029629707336426

Token 646: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008565509924665093
    2. ' ,' → logprob: -7.125856399536133
    3. ',b' → logprob: -10.500856399536133
    4. ',k' → logprob: -11.500856399536133
    5. '   ' → logprob: -12.250856399536133
    6. ',c' → logprob: -12.875856399536133
    7. '       ' → logprob: -13.250856399536133
    8. ' ' → logprob: -13.375856399536133
    9. ',
' → logprob: -14.750856399536133
    10. '2' → logprob: -14.750856399536133

Token 647: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00029637437546625733
    2. ' b' → logprob: -8.125296592712402
    3. '   ' → logprob: -15.125296592712402
    4. '(b' → logprob: -16.875295639038086
    5. '       ' → logprob: -17.750295639038086
    6. ' ' → logprob: -18.125295639038086
    7. '    ' → logprob: -18.125295639038086
    8. '     ' → logprob: -18.750295639038086
    9. 'min' → logprob: -19.250295639038086
    10. '  ' → logprob: -19.375295639038086

Token 648: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015565206995233893
    2. ' ,' → logprob: -6.751556396484375
    3. ',k' → logprob: -7.876556396484375
    4. '   ' → logprob: -12.876556396484375
    5. ' ' → logprob: -13.876556396484375
    6. '       ' → logprob: -14.001556396484375
    7. 'k' → logprob: -14.251556396484375
    8. '2' → logprob: -14.376556396484375
    9. ' k' → logprob: -15.376556396484375
    10. ',c' → logprob: -15.501556396484375

Token 649: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.008129963040119e-06
    2. ' ' → logprob: -12.500003814697266
    3. '   ' → logprob: -16.125003814697266
    4. '(' → logprob: -17.000003814697266
    5. 'k' → logprob: -17.500003814697266
    6. '     ' → logprob: -19.000003814697266
    7. '    ' → logprob: -19.125003814697266
    8. '           ' → logprob: -19.250003814697266
    9. '       ' → logprob: -19.625003814697266
    10. '２' → logprob: -19.625003814697266

Token 650: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.392202976712724e-06
    2. ' ' → logprob: -12.375006675720215
    3. '(' → logprob: -13.250006675720215
    4. '   ' → logprob: -15.500006675720215
    5. 'k' → logprob: -16.1250057220459
    6. '[' → logprob: -17.0000057220459
    7. '``' → logprob: -18.1250057220459
    8. '２' → logprob: -18.2500057220459
    9. '3' → logprob: -18.3750057220459
    10. '```' → logprob: -18.6250057220459

Token 651: ' *' (ID: 425)
  Prédit: '*k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*k' → logprob: -0.09249512106180191
    2. ' *' → logprob: -2.5924952030181885
    3. '*' → logprob: -4.342494964599609
    4. 'k' → logprob: -7.592494964599609
    5. ' k' → logprob: -12.46749496459961
    6. '   ' → logprob: -14.21749496459961
    7. '	k' → logprob: -15.71749496459961
    8. ' ' → logprob: -15.96749496459961
    9. '*c' → logprob: -16.84249496459961
    10. '*i' → logprob: -16.84249496459961

Token 652: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -2.7729658540920354e-05
    2. ' k' → logprob: -10.500027656555176
    3. '	k' → logprob: -16.500028610229492
    4. '   ' → logprob: -20.875028610229492
    5. '*k' → logprob: -21.000028610229492
    6. ' ' → logprob: -21.875028610229492
    7. '"k' → logprob: -22.000028610229492
    8. 'kx' → logprob: -22.375028610229492
    9. '```' → logprob: -23.000028610229492
    10. '{k' → logprob: -23.000028610229492

Token 653: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03805193677544594
    2. ' +' → logprob: -3.2880518436431885
    3. '   ' → logprob: -11.66305160522461
    4. '1' → logprob: -14.53805160522461
    5. ' ' → logprob: -14.53805160522461
    6. '  ' → logprob: -15.28805160522461
    7. '＋' → logprob: -15.41305160522461
    8. ',' → logprob: -15.78805160522461
    9. '```' → logprob: -16.41305160522461
    10. ' plus' → logprob: -16.41305160522461

Token 654: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007189844618551433
    2. ' ' → logprob: -7.25071907043457
    3. '   ' → logprob: -11.87571907043457
    4. '  ' → logprob: -13.50071907043457
    5. '<|end|>' → logprob: -16.43821907043457
    6. '    ' → logprob: -16.50071907043457
    7. '<|end|>' → logprob: -16.62571907043457
    8. '+' → logprob: -16.68821907043457
    9. '     ' → logprob: -16.87571907043457
    10. ',' → logprob: -17.12571907043457

Token 655: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0325924449716695e-05
    2. ' ' → logprob: -11.50001049041748
    3. '   ' → logprob: -17.312509536743164
    4. '۱' → logprob: -18.125009536743164
    5. '  ' → logprob: -18.562509536743164
    6. '１' → logprob: -18.687509536743164
    7. '0' → logprob: -18.750009536743164
    8. '१' → logprob: -18.875009536743164
    9. '' → logprob: -19.000009536743164
    10. '১' → logprob: -19.250009536743164

Token 656: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008684676722623408
    2. ' ,' → logprob: -7.250868320465088
    3. ',l' → logprob: -8.750868797302246
    4. '   ' → logprob: -16.62586784362793
    5. 'l' → logprob: -16.87586784362793
    6. ')' → logprob: -17.37586784362793
    7. ',
' → logprob: -17.50086784362793
    8. ' l' → logprob: -17.50086784362793
    9. ' ' → logprob: -18.00086784362793
    10. ',c' → logprob: -18.50086784362793

Token 657: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0001375089050270617
    2. ' l' → logprob: -9.000137329101562
    3. '       ' → logprob: -12.250137329101562
    4. '    ' → logprob: -12.500137329101562
    5. '   ' → logprob: -12.750137329101562
    6. '	l' → logprob: -13.375137329101562
    7. '        ' → logprob: -14.750137329101562
    8. '     ' → logprob: -15.000137329101562
    9. '      ' → logprob: -16.000137329101562
    10. '           ' → logprob: -16.375137329101562

Token 658: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002737330214586109
    2. ',l' → logprob: -8.875273704528809
    3. ' ,' → logprob: -9.500273704528809
    4. ',r' → logprob: -10.750273704528809
    5. ',m' → logprob: -11.125273704528809
    6. ',(' → logprob: -11.500273704528809
    7. '   ' → logprob: -12.000273704528809
    8. ',
' → logprob: -13.375273704528809
    9. ',c' → logprob: -13.875273704528809
    10. 'l' → logprob: -14.125273704528809

Token 659: ' (' (ID: 350)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.06506487727165222
    2. '(r' → logprob: -3.0650649070739746
    3. '(' → logprob: -4.190064907073975
    4. ' (' → logprob: -6.940064907073975
    5. '   ' → logprob: -9.065064430236816
    6. '(k' → logprob: -9.940064430236816
    7. '(m' → logprob: -10.315064430236816
    8. '(i' → logprob: -11.940064430236816
    9. ' ' → logprob: -12.315064430236816
    10. '(n' → logprob: -12.440064430236816

Token 660: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -6.813969957875088e-05
    2. 'r' → logprob: -10.250067710876465
    3. '   ' → logprob: -11.125067710876465
    4. ' l' → logprob: -11.375067710876465
    5. '(l' → logprob: -12.125067710876465
    6. '	l' → logprob: -14.000067710876465
    7. ' ' → logprob: -15.625067710876465
    8. '(r' → logprob: -16.87506866455078
    9. ' (' → logprob: -17.37506866455078
    10. '[l' → logprob: -17.50006866455078

Token 661: ' +' (ID: 659)
  Prédit: '+r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+r' → logprob: -0.26973816752433777
    2. '+' → logprob: -2.01973819732666
    3. ' +' → logprob: -2.26973819732666
    4. 'r' → logprob: -7.89473819732666
    5. ' r' → logprob: -11.89473819732666
    6. '(r' → logprob: -12.51973819732666
    7. '   ' → logprob: -12.76973819732666
    8. ' ' → logprob: -13.14473819732666
    9. '[r' → logprob: -13.89473819732666
    10. '	r' → logprob: -14.26973819732666

Token 662: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -5.466968650580384e-05
    2. ' r' → logprob: -9.875054359436035
    3. '(r' → logprob: -13.500054359436035
    4. '   ' → logprob: -13.500054359436035
    5. ' ' → logprob: -15.500054359436035
    6. '	r' → logprob: -17.00005531311035
    7. ' (' → logprob: -17.62505531311035
    8. '
' → logprob: -17.75005531311035
    9. '[r' → logprob: -18.12505531311035
    10. '  ' → logprob: -18.37505531311035

Token 663: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0017164701130241156
    2. ')//' → logprob: -6.376716613769531
    3. ' )' → logprob: -12.001716613769531
    4. ')>>' → logprob: -12.501716613769531
    5. '   ' → logprob: -13.126716613769531
    6. '//' → logprob: -13.501716613769531
    7. ' ' → logprob: -15.001716613769531
    8. ')
' → logprob: -15.001716613769531
    9. ' //' → logprob: -15.626716613769531
    10. '```' → logprob: -16.50171661376953

Token 664: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.17999249696731567
    2. ')' → logprob: -1.929992437362671
    3. '>>' → logprob: -4.30499267578125
    4. ')//' → logprob: -5.80499267578125
    5. ' //' → logprob: -6.30499267578125
    6. '   ' → logprob: -7.30499267578125
    7. ')>>' → logprob: -8.05499267578125
    8. '```' → logprob: -9.92999267578125
    9. '2' → logprob: -10.05499267578125
    10. ' ' → logprob: -10.17999267578125

Token 665: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.639096970204264e-05
    2. ' ' → logprob: -9.250096321105957
    3. '   ' → logprob: -15.250096321105957
    4. '```' → logprob: -17.375097274780273
    5. '۲' → logprob: -18.750097274780273
    6. '２' → logprob: -18.812597274780273
    7. '  ' → logprob: -18.937597274780273
    8. '
' → logprob: -19.625097274780273
    9. '=' → logprob: -19.687597274780273
    10. '२' → logprob: -19.687597274780273

Token 666: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '۲' → logprob: -19.75
    4. '   ' → logprob: -19.75
    5. '２' → logprob: -19.875
    6. '```' → logprob: -21.0
    7. '२' → logprob: -21.5
    8. '
' → logprob: -21.75
    9. '{' → logprob: -22.625
    10. '٢' → logprob: -22.75

Token 667: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.014616718515753746
    2. ')' → logprob: -4.2646164894104
    3. ')
' → logprob: -7.8896164894104
    4. '   ' → logprob: -9.764616966247559
    5. ' )
' → logprob: -10.889616966247559
    6. ')c' → logprob: -13.514616966247559
    7. '       ' → logprob: -14.764616966247559
    8. ')

' → logprob: -15.764616966247559
    9. ' )' → logprob: -15.764616966247559
    10. ')`
' → logprob: -16.389616012573242

Token 668: '       ' (ID: 309)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.3199988603591919
    2. ' c' → logprob: -1.819998860359192
    3. '
' → logprob: -2.8199987411499023
    4. '   ' → logprob: -3.6949987411499023
    5. '       ' → logprob: -3.6949987411499023
    6. ' ' → logprob: -7.069998741149902
    7. '	c' → logprob: -7.194998741149902
    8. '
' → logprob: -7.569998741149902
    9. ' +' → logprob: -9.944998741149902
    10. '' → logprob: -9.944998741149902

Token 669: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.04885520040988922
    2. ' c' → logprob: -3.0488553047180176
    3. '       ' → logprob: -8.42385482788086
    4. '	c' → logprob: -10.04885482788086
    5. '   ' → logprob: -12.54885482788086
    6. '
' → logprob: -14.04885482788086
    7. '	' → logprob: -15.54885482788086
    8. ' ' → logprob: -15.67385482788086
    9. '           ' → logprob: -16.29885482788086
    10. '    ' → logprob: -16.79885482788086

Token 670: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.004416347946971655
    2. ' =' → logprob: -5.879416465759277
    3. '=' → logprob: -6.754416465759277
    4. ' ' → logprob: -8.379416465759277
    5. '   ' → logprob: -9.004416465759277
    6. '  ' → logprob: -10.629416465759277
    7. '(' → logprob: -10.754416465759277
    8. ',' → logprob: -11.504416465759277
    9. ' (' → logprob: -12.504416465759277
    10. '[' → logprob: -12.629416465759277

Token 671: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.575942873954773
    2. ' =' → logprob: -0.825942873954773
    3. '=find' → logprob: -12.575942993164062
    4. ' ' → logprob: -18.200942993164062
    5. ',' → logprob: -18.450942993164062
    6. 'find' → logprob: -18.825942993164062
    7. 'c' → logprob: -18.950942993164062
    8. ')' → logprob: -19.075942993164062
    9. '＝' → logprob: -19.575942993164062
    10. ' find' → logprob: -19.825942993164062

Token 672: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.014163747429847717
    2. ' find' → logprob: -4.264163970947266
    3. '(find' → logprob: -16.139163970947266
    4. '	find' → logprob: -16.639163970947266
    5. 'f' → logprob: -17.889163970947266
    6. '   ' → logprob: -18.139163970947266
    7. '.find' → logprob: -18.389163970947266
    8. ' ' → logprob: -18.389163970947266
    9. '=find' → logprob: -18.389163970947266
    10. 'fin' → logprob: -19.139163970947266

Token 673: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -1.1472419600977446e-06
    2. '(' → logprob: -13.875000953674316
    3. 'a' → logprob: -16.250001907348633
    4. '(
' → logprob: -18.375001907348633
    5. ' (' → logprob: -20.625001907348633
    6. '(A' → logprob: -21.750001907348633
    7. '   ' → logprob: -22.625001907348633
    8. '((' → logprob: -22.750001907348633
    9. '[a' → logprob: -23.500001907348633
    10. '```' → logprob: -23.625001907348633

Token 674: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007229181355796754
    2. ',b' → logprob: -7.625722885131836
    3. 'b' → logprob: -8.875722885131836
    4. ' ,' → logprob: -9.375722885131836
    5. ' b' → logprob: -12.000722885131836
    6. '(b' → logprob: -13.250722885131836
    7. '(' → logprob: -14.375722885131836
    8. '   ' → logprob: -15.125722885131836
    9. ' ' → logprob: -15.313222885131836
    10. ',
' → logprob: -15.500722885131836

Token 675: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.029751643538475037
    2. ' b' → logprob: -3.5297515392303467
    3. '   ' → logprob: -14.029751777648926
    4. ' ' → logprob: -15.654751777648926
    5. '	b' → logprob: -16.52975082397461
    6. '    ' → logprob: -16.90475082397461
    7. '       ' → logprob: -18.02975082397461
    8. '  ' → logprob: -18.27975082397461
    9. '     ' → logprob: -18.27975082397461
    10. '(b' → logprob: -19.27975082397461

Token 676: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002067588793579489
    2. ' ,' → logprob: -8.50020694732666
    3. ',b' → logprob: -13.12520694732666
    4. 'b' → logprob: -15.00020694732666
    5. ',c' → logprob: -15.25020694732666
    6. '   ' → logprob: -15.37520694732666
    7. '(' → logprob: -16.125205993652344
    8. 'c' → logprob: -16.375205993652344
    9. ',k' → logprob: -16.750205993652344
    10. ' (' → logprob: -17.250205993652344

Token 677: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.023309072479605675
    2. ' ' → logprob: -3.7733089923858643
    3. 'b' → logprob: -9.773308753967285
    4. '   ' → logprob: -12.148308753967285
    5. ' b' → logprob: -13.898308753967285
    6. '  ' → logprob: -15.273308753967285
    7. 'a' → logprob: -15.773308753967285
    8. 'c' → logprob: -16.8983097076416
    9. '    ' → logprob: -16.8983097076416
    10. '       ' → logprob: -17.5233097076416

Token 678: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00014239625306800008
    2. ' ' → logprob: -8.875142097473145
    3. 'b' → logprob: -13.375142097473145
    4. '   ' → logprob: -14.000142097473145
    5. '  ' → logprob: -16.50014305114746
    6. '    ' → logprob: -18.12514305114746
    7. 'c' → logprob: -19.12514305114746
    8. '     ' → logprob: -19.37514305114746
    9. '       ' → logprob: -19.50014305114746
    10. ' b' → logprob: -20.37514305114746

Token 679: ' *' (ID: 425)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.6822680234909058
    2. '+' → logprob: -0.8072680234909058
    3. ' *' → logprob: -3.1822681427001953
    4. 'k' → logprob: -5.557268142700195
    5. '*' → logprob: -6.307268142700195
    6. 'c' → logprob: -7.557268142700195
    7. ' k' → logprob: -8.557268142700195
    8. '*k' → logprob: -8.932268142700195
    9. ' ' → logprob: -9.432268142700195
    10. '+k' → logprob: -9.432268142700195

Token 680: ' k' (ID: 372)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.46985623240470886
    2. 'k' → logprob: -1.4698562622070312
    3. 'b' → logprob: -1.9698562622070312
    4. 'c' → logprob: -5.469856262207031
    5. ' r' → logprob: -7.969856262207031
    6. '(r' → logprob: -7.969856262207031
    7. ' b' → logprob: -8.469856262207031
    8. '((' → logprob: -9.094856262207031
    9. ' k' → logprob: -9.219856262207031
    10. '(b' → logprob: -10.094856262207031

Token 681: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.023247575387358665
    2. ' +' → logprob: -3.773247480392456
    3. '2' → logprob: -13.898247718811035
    4. '   ' → logprob: -14.523247718811035
    5. ' ' → logprob: -15.398247718811035
    6. '＋' → logprob: -15.648247718811035
    7. '  ' → logprob: -15.773247718811035
    8. '+k' → logprob: -16.52324676513672
    9. '```' → logprob: -16.64824676513672
    10. '+c' → logprob: -17.02324676513672

Token 682: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.02355326898396015
    2. ' ' → logprob: -3.7735533714294434
    3. '1' → logprob: -8.148552894592285
    4. 'r' → logprob: -11.648552894592285
    5. '   ' → logprob: -11.773552894592285
    6. '  ' → logprob: -14.148552894592285
    7. '(' → logprob: -14.523552894592285
    8. '(r' → logprob: -15.586052894592285
    9. '	' → logprob: -16.1485538482666
    10. ' r' → logprob: -16.3360538482666

Token 683: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00030197695014066994
    2. ' ' → logprob: -8.1253023147583
    3. '1' → logprob: -12.1253023147583
    4. '   ' → logprob: -15.3753023147583
    5. '  ' → logprob: -16.250301361083984
    6. 'r' → logprob: -17.125301361083984
    7. '(' → logprob: -17.125301361083984
    8. '

' → logprob: -17.437801361083984
    9. '
' → logprob: -17.750301361083984
    10. '	' → logprob: -18.000301361083984

Token 684: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.954393079970032e-05
    2. ',l' → logprob: -10.500049591064453
    3. ' ,' → logprob: -10.750049591064453
    4. '   ' → logprob: -15.500049591064453
    5. ',(' → logprob: -16.000049591064453
    6. ',
' → logprob: -16.250049591064453
    7. ')' → logprob: -17.000049591064453
    8. '(l' → logprob: -17.000049591064453
    9. ',r' → logprob: -17.250049591064453
    10. '       ' → logprob: -18.750049591064453

Token 685: ' (' (ID: 350)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.11408312618732452
    2. ' (' → logprob: -2.2390830516815186
    3. 'l' → logprob: -6.864083290100098
    4. ' l' → logprob: -9.489083290100098
    5. '   ' → logprob: -9.989083290100098
    6. '(' → logprob: -10.489083290100098
    7. ',' → logprob: -11.239083290100098
    8. '    ' → logprob: -11.489083290100098
    9. '       ' → logprob: -12.114083290100098
    10. 'r' → logprob: -12.239083290100098

Token 686: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.6932042837142944
    2. '(l' → logprob: -0.6932042837142944
    3. ' (' → logprob: -9.943203926086426
    4. '(r' → logprob: -12.818203926086426
    5. '   ' → logprob: -13.068203926086426
    6. 'r' → logprob: -13.068203926086426
    7. '	l' → logprob: -13.943203926086426
    8. ' l' → logprob: -14.943203926086426
    9. '(' → logprob: -15.443203926086426
    10. ' ' → logprob: -15.443203926086426

Token 687: ' +' (ID: 659)
  Prédit: '+r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+r' → logprob: -0.6414279937744141
    2. ' +' → logprob: -0.8914279937744141
    3. '+' → logprob: -2.766427993774414
    4. 'r' → logprob: -7.766427993774414
    5. '+l' → logprob: -10.016427993774414
    6. ' ' → logprob: -11.766427993774414
    7. '(r' → logprob: -11.766427993774414
    8. ' r' → logprob: -12.266427993774414
    9. '   ' → logprob: -12.266427993774414
    10. 'l' → logprob: -13.141427993774414

Token 688: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00038074489566497505
    2. ' r' → logprob: -7.875380516052246
    3. '   ' → logprob: -14.875380516052246
    4. '	r' → logprob: -16.000381469726562
    5. '(r' → logprob: -16.500381469726562
    6. ' ' → logprob: -16.750381469726562
    7. '_r' → logprob: -18.250381469726562
    8. '  ' → logprob: -19.250381469726562
    9. '     ' → logprob: -19.375381469726562
    10. '    ' → logprob: -19.625381469726562

Token 689: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00012558852904476225
    2. ')//' → logprob: -9.125125885009766
    3. ' )' → logprob: -11.250125885009766
    4. '//' → logprob: -13.000125885009766
    5. '   ' → logprob: -14.625125885009766
    6. ' //' → logprob: -15.375125885009766
    7. '()' → logprob: -15.375125885009766
    8. ' ' → logprob: -15.750125885009766
    9. ']' → logprob: -16.000125885009766
    10. '}' → logprob: -17.125125885009766

Token 690: ' //' (ID: 602)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13131879270076752
    2. '//' → logprob: -2.3813188076019287
    3. ' //' → logprob: -3.6313188076019287
    4. ')//' → logprob: -6.13131856918335
    5. '   ' → logprob: -6.88131856918335
    6. 'r' → logprob: -7.50631856918335
    7. ' ' → logprob: -8.756319046020508
    8. ' )' → logprob: -9.256319046020508
    9. ' r' → logprob: -9.881319046020508
    10. '```' → logprob: -10.881319046020508

Token 691: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.055885300040245056
    2. 'r' → logprob: -2.9308853149414062
    3. ' ' → logprob: -7.430885314941406
    4. ' r' → logprob: -8.555885314941406
    5. '(r' → logprob: -8.930885314941406
    6. '   ' → logprob: -9.430885314941406
    7. '[r' → logprob: -13.055885314941406
    8. '	r' → logprob: -13.805885314941406
    9. ',r' → logprob: -14.555885314941406
    10. '  ' → logprob: -14.680885314941406

Token 692: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.53050296427682e-05
    2. ' ' → logprob: -9.37508487701416
    3. '   ' → logprob: -15.00008487701416
    4. '```' → logprob: -17.000085830688477
    5. '２' → logprob: -17.437585830688477
    6. '۲' → logprob: -18.250085830688477
    7. '  ' → logprob: -18.375085830688477
    8. '
' → logprob: -19.125085830688477
    9. '0' → logprob: -19.312585830688477
    10. '``' → logprob: -19.625085830688477

Token 693: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006496482528746128
    2. ',r' → logprob: -7.875649452209473
    3. ' ,' → logprob: -8.250649452209473
    4. 'r' → logprob: -11.875649452209473
    5. '   ' → logprob: -14.375649452209473
    6. '```' → logprob: -15.500649452209473
    7. ',l' → logprob: -15.625649452209473
    8. ')' → logprob: -16.25065040588379
    9. ' r' → logprob: -16.62565040588379
    10. ',c' → logprob: -16.62565040588379

Token 694: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -4.56102097814437e-05
    2. ' r' → logprob: -10.000045776367188
    3. '   ' → logprob: -15.875045776367188
    4. '	r' → logprob: -18.500045776367188
    5. '       ' → logprob: -19.125045776367188
    6. '           ' → logprob: -22.875045776367188
    7. '    ' → logprob: -22.875045776367188
    8. ' ' → logprob: -23.000045776367188
    9. '     ' → logprob: -23.250045776367188
    10. '  ' → logprob: -23.375045776367188

Token 695: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10027632862329483
    2. ')
' → logprob: -2.350276231765747
    3. ')
' → logprob: -9.600275993347168
    4. '   ' → logprob: -13.600275993347168
    5. ' )' → logprob: -15.100275993347168
    6. ')return' → logprob: -15.225275993347168
    7. ' )
' → logprob: -16.475276947021484
    8. ')c' → logprob: -16.725276947021484
    9. ')`
' → logprob: -16.850276947021484
    10. ')

' → logprob: -16.975276947021484

Token 696: '       ' (ID: 309)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.313505083322525
    2. ' return' → logprob: -1.8135050535202026
    3. '       ' → logprob: -2.313505172729492
    4. '   ' → logprob: -5.063505172729492
    5. '	return' → logprob: -7.688505172729492
    6. '
' → logprob: -8.188505172729492
    7. ' ' → logprob: -10.563505172729492
    8. '	' → logprob: -11.063505172729492
    9. ' ' → logprob: -12.438505172729492
    10. '  ' → logprob: -12.563505172729492

Token 697: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -5.872261317563243e-05
    2. ' return' → logprob: -9.750059127807617
    3. '       ' → logprob: -15.750059127807617
    4. '	return' → logprob: -16.375059127807617
    5. 'ret' → logprob: -16.500059127807617
    6. '   ' → logprob: -18.125059127807617
    7. '{return' → logprob: -18.500059127807617
    8. ':return' → logprob: -18.500059127807617
    9. 'c' → logprob: -18.625059127807617
    10. '
' → logprob: -18.875059127807617

Token 698: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.004078758880496025
    2. ' c' → logprob: -5.5040788650512695
    3. '(c' → logprob: -15.75407886505127
    4. '	c' → logprob: -16.629077911376953
    5. '   ' → logprob: -18.629077911376953
    6. ')c' → logprob: -20.004077911376953
    7. '[c' → logprob: -20.129077911376953
    8. '$c' → logprob: -20.129077911376953
    9. ' ' → logprob: -20.254077911376953
    10. ' ' → logprob: -20.379077911376953

Token 699: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. '[c' → logprob: -17.0
    3. '[' → logprob: -17.375
    4. '１' → logprob: -17.875
    5. '```' → logprob: -18.8125
    6. '
' → logprob: -19.375
    7. '#' → logprob: -19.5625
    8. '۱' → logprob: -19.625
    9. '১' → logprob: -19.75
    10. '१' → logprob: -19.75

Token 700: ' |' (ID: 1022)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.04858771339058876
    2. ' |' → logprob: -3.0485877990722656
    3. ' ' → logprob: -15.798587799072266
    4. '│' → logprob: -16.173587799072266
    5. ' ' → logprob: -17.173587799072266
    6. '   ' → logprob: -17.548587799072266
    7. '    ' → logprob: -18.298587799072266
    8. '|string' → logprob: -18.423587799072266
    9. '|get' → logprob: -18.673587799072266
    10. '  ' → logprob: -19.048587799072266

Token 701: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.16022463142871857
    2. ' c' → logprob: -1.9102246761322021
    3. '	c' → logprob: -15.160224914550781
    4. ' ' → logprob: -15.410224914550781
    5. ' ' → logprob: -17.28522491455078
    6. '   ' → logprob: -18.91022491455078
    7. '(c' → logprob: -19.53522491455078
    8. ')c' → logprob: -19.78522491455078
    9. '​' → logprob: -20.91022491455078
    10. '  ' → logprob: -20.91022491455078

Token 702: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.547789674485102e-05
    2. 'c' → logprob: -10.250035285949707
    3. ' ' → logprob: -17.250036239624023
    4. 's' → logprob: -17.750036239624023
    5. '₂' → logprob: -17.875036239624023
    6. '۲' → logprob: -18.375036239624023
    7. ' c' → logprob: -19.125036239624023
    8. '_' → logprob: -19.500036239624023
    9. '<|end|>' → logprob: -19.750036239624023
    10. '`' → logprob: -19.750036239624023

Token 703: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00015633940347470343
    2. '<|end|>' → logprob: -8.87515640258789
    3. '#' → logprob: -11.25015640258789
    4. '```' → logprob: -13.87515640258789
    5. 'from' → logprob: -14.25015640258789
    6. '<|end|>' → logprob: -15.00015640258789
    7. ' def' → logprob: -15.50015640258789
    8. 'N' → logprob: -15.75015640258789
    9. 'import' → logprob: -15.87515640258789
    10. 'count' → logprob: -16.25015640258789

Token 704: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0007056408794596791
    2. '#' → logprob: -7.375705718994141
    3. 'N' → logprob: -11.00070571899414
    4. 'count' → logprob: -11.00070571899414
    5. 'SEG' → logprob: -11.75070571899414
    6. 'd' → logprob: -12.12570571899414
    7. 'seg' → logprob: -12.25070571899414
    8. 'from' → logprob: -12.37570571899414
    9. 'segment' → logprob: -12.50070571899414
    10. 'string' → logprob: -12.75070571899414

Token 705: ' Lecture' (ID: 106534)
  Prédit: 'SEG'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'SEG' → logprob: -0.49478963017463684
    2. 'def' → logprob: -1.1197896003723145
    3. 'N' → logprob: -2.8697896003723145
    4. '#' → logprob: -5.3697896003723145
    5. 'import' → logprob: -6.1197896003723145
    6. 'global' → logprob: -9.369790077209473
    7. '```' → logprob: -9.619790077209473
    8. 'from' → logprob: -9.869790077209473
    9. 'segment' → logprob: -10.119790077209473
    10. 'n' → logprob: -10.494790077209473

Token 706: ' des' (ID: 731)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6424298882484436
    2. 'n' → logprob: -1.6424298286437988
    3. 'string' → logprob: -2.267429828643799
    4. 'chaine' → logprob: -2.267429828643799
    5. 'N' → logprob: -4.142429828643799
    6. 'input' → logprob: -4.517429828643799
    7. 'length' → logprob: -5.267429828643799
    8. 'size' → logprob: -5.517429828643799
    9. '```' → logprob: -5.517429828643799
    10. ' s' → logprob: -5.517429828643799

Token 707: ' entr' (ID: 7072)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.12439093738794327
    2. 'n' → logprob: -2.6243908405303955
    3. 'input' → logprob: -4.124391078948975
    4. 'N' → logprob: -4.249391078948975
    5. 'Q' → logprob: -5.374391078948975
    6. ' N' → logprob: -5.874391078948975
    7. 'inputs' → logprob: -5.999391078948975
    8. 'entr' → logprob: -6.999391078948975
    9. ' input' → logprob: -7.124391078948975
    10. ' import' → logprob: -7.624391078948975

Token 708: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.5439842343330383
    2. 'r' → logprob: -1.9189841747283936
    3. 'puts' → logprob: -2.4189841747283936
    4. 't' → logprob: -2.5439841747283936
    5. 'ees' → logprob: -2.9189841747283936
    6. 'tr' → logprob: -3.6689841747283936
    7. 'rees' → logprob: -4.918984413146973
    8. 'tries' → logprob: -5.043984413146973
    9. 'ée' → logprob: -6.043984413146973
    10. '```' → logprob: -6.293984413146973

Token 709: '
' (ID: 198)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0724291130900383
    2. 'n' → logprob: -2.6974291801452637
    3. 'Q' → logprob: -6.322429180145264
    4. 'import' → logprob: -7.322429180145264
    5. ' N' → logprob: -11.322428703308105
    6. 's' → logprob: -11.822428703308105
    7. 'q' → logprob: -12.072428703308105
    8. ' n' → logprob: -12.822428703308105
    9. 'S' → logprob: -13.447428703308105
    10. ',' → logprob: -14.572428703308105

Token 710: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.015656325966119766
    2. 'n' → logprob: -4.265656471252441
    3. 'import' → logprob: -6.640656471252441
    4. 'Q' → logprob: -8.640656471252441
    5. '```' → logprob: -12.390656471252441
    6. 's' → logprob: -13.515656471252441
    7. ' N' → logprob: -13.640656471252441
    8. 'S' → logprob: -14.140656471252441
    9. 'q' → logprob: -14.390656471252441
    10. ' import' → logprob: -15.015656471252441

Token 711: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009570024907588959
    2. '=' → logprob: -5.009570121765137
    3. ' =' → logprob: -5.884570121765137
    4. '=int' → logprob: -9.884570121765137
    5. ',Q' → logprob: -12.259570121765137
    6. ' ,' → logprob: -12.634570121765137
    7. ',N' → logprob: -12.884570121765137
    8. '=input' → logprob: -13.009570121765137
    9. ',n' → logprob: -14.259570121765137
    10. ',M' → logprob: -14.384570121765137

Token 712: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0019286326132714748
    2. ' int' → logprob: -6.251928806304932
    3. 'len' → logprob: -17.376928329467773
    4. '[int' → logprob: -18.001928329467773
    5. '<int' → logprob: -19.251928329467773
    6. 'ord' → logprob: -19.626928329467773
    7. '10' → logprob: -19.876928329467773
    8. '(int' → logprob: -19.876928329467773
    9. '	int' → logprob: -20.126928329467773
    10. '0' → logprob: -20.376928329467773

Token 713: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -9.043078898685053e-05
    2. 'input' → logprob: -10.000090599060059
    3. '()' → logprob: -10.125090599060059
    4. '(' → logprob: -12.250090599060059
    5. '=input' → logprob: -16.125089645385742
    6. ' input' → logprob: -18.000089645385742
    7. '(
' → logprob: -18.000089645385742
    8. '	input' → logprob: -19.000089645385742
    9. '<input' → logprob: -19.250089645385742
    10. '(...)' → logprob: -19.625089645385742

Token 714: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.000758288602810353
    2. '()' → logprob: -7.250758171081543
    3. ')' → logprob: -10.750758171081543
    4. '())
' → logprob: -11.000758171081543
    5. '().' → logprob: -11.875758171081543
    6. '(' → logprob: -13.000758171081543
    7. '()
' → logprob: -14.875758171081543
    8. ' ())' → logprob: -14.875758171081543
    9. '())

' → logprob: -16.00075912475586
    10. '();)' → logprob: -16.50075912475586

Token 715: '          ' (ID: 3550)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.07010560482740402
    2. 's' → logprob: -2.69510555267334
    3. 'string' → logprob: -10.07010555267334
    4. 'Q' → logprob: -10.94510555267334
    5. ',' → logprob: -11.19510555267334
    6. 'chaine' → logprob: -11.32010555267334
    7. 'C' → logprob: -11.44510555267334
    8. '
' → logprob: -11.44510555267334
    9. 'A' → logprob: -11.82010555267334
    10. '```' → logprob: -11.94510555267334

Token 716: ' #' (ID: 1069)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.045515939593315125
    2. 's' → logprob: -3.295516014099121
    3. 'Q' → logprob: -4.920516014099121
    4. 'SEG' → logprob: -9.795516014099121
    5. 'seg' → logprob: -10.420516014099121
    6. 'd' → logprob: -11.420516014099121
    7. 'string' → logprob: -11.670516014099121
    8. 'chaine' → logprob: -11.670516014099121
    9. 'q' → logprob: -12.045516014099121
    10. ',' → logprob: -12.420516014099121

Token 717: ' Long' (ID: 7790)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.18040373921394348
    2. 's' → logprob: -1.805403709411621
    3. 'Q' → logprob: -7.430403709411621
    4. 'chaine' → logprob: -11.055403709411621
    5. 'string' → logprob: -11.180403709411621
    6. ' S' → logprob: -12.180403709411621
    7. 'seg' → logprob: -12.305403709411621
    8. '```' → logprob: -13.055403709411621
    9. 'q' → logprob: -13.180403709411621
    10. 'L' → logprob: -13.305403709411621

Token 718: 'ueur' (ID: 43728)
  Prédit: 'ueur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ueur' → logprob: -0.005906519014388323
    2. 'ue' → logprob: -5.505906581878662
    3. 'eur' → logprob: -6.630906581878662
    4. 'uer' → logprob: -8.880906105041504
    5. 'u' → logprob: -9.755906105041504
    6. 's' → logprob: -9.880906105041504
    7. '=input' → logprob: -10.130906105041504
    8. '=' → logprob: -10.380906105041504
    9. 'input' → logprob: -10.505906105041504
    10. 'e' → logprob: -10.505906105041504

Token 719: ' de' (ID: 334)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.1381339728832245
    2. 's' → logprob: -2.388134002685547
    3. 'chaine' → logprob: -3.763134002685547
    4. 'string' → logprob: -5.263134002685547
    5. 'chain' → logprob: -5.388134002685547
    6. 'N' → logprob: -7.388134002685547
    7. 'Q' → logprob: -7.388134002685547
    8. 'str' → logprob: -7.638134002685547
    9. 'C' → logprob: -7.763134002685547
    10. '()' → logprob: -8.263134002685547

Token 720: ' la' (ID: 557)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0008236800786107779
    2. '(input' → logprob: -7.250823497772217
    3. ' input' → logprob: -9.125823974609375
    4. '=input' → logprob: -13.250823974609375
    5. '<input' → logprob: -13.625823974609375
    6. 'str' → logprob: -13.875823974609375
    7. 'N' → logprob: -14.875823974609375
    8. '[input' → logprob: -15.000823974609375
    9. ',input' → logprob: -16.250823974609375
    10. 'list' → logprob: -17.125823974609375

Token 721: ' chaîne' (ID: 89288)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.4203922152519226
    2. 'chaine' → logprob: -1.2953922748565674
    3. 'string' → logprob: -3.5453922748565674
    4. 'str' → logprob: -3.9203922748565674
    5. 's' → logprob: -4.170392036437988
    6. 'chain' → logprob: -5.670392036437988
    7. '(input' → logprob: -7.420392036437988
    8. 'S' → logprob: -8.545392036437988
    9. 'ch' → logprob: -8.545392036437988
    10. ' input' → logprob: -9.170392036437988

Token 722: '
' (ID: 198)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.32714298367500305
    2. 's' → logprob: -1.3271429538726807
    3. 'chaine' → logprob: -4.45214319229126
    4. 'chain' → logprob: -7.07714319229126
    5. 'string' → logprob: -7.20214319229126
    6. 'str' → logprob: -9.077142715454102
    7. 'Q' → logprob: -9.577142715454102
    8. '```' → logprob: -9.827142715454102
    9. 'C' → logprob: -9.952142715454102
    10. 'N' → logprob: -10.202142715454102

Token 723: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.05074725300073624
    2. 's' → logprob: -3.0507471561431885
    3. 'SEG' → logprob: -6.800747394561768
    4. 'chaine' → logprob: -7.050747394561768
    5. 'Q' → logprob: -9.80074691772461
    6. 'seg' → logprob: -10.42574691772461
    7. 'string' → logprob: -11.05074691772461
    8. 'initial' → logprob: -11.55074691772461
    9. 'segment' → logprob: -12.05074691772461
    10. 'SEQ' → logprob: -12.05074691772461

Token 724: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022838652133942
    2. '=' → logprob: -1.9102283716201782
    3. '=input' → logprob: -12.535228729248047
    4. ' ' → logprob: -14.535228729248047
    5. ' ' → logprob: -16.660228729248047
    6. '.' → logprob: -17.285228729248047
    7. '＝' → logprob: -17.535228729248047
    8. '_' → logprob: -17.785228729248047
    9. '=int' → logprob: -18.035228729248047
    10. 's' → logprob: -18.160228729248047

Token 725: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0002624086628202349
    2. ' input' → logprob: -8.250262260437012
    3. 'list' → logprob: -13.750262260437012
    4. 'str' → logprob: -18.500263214111328
    5. '(input' → logprob: -19.500263214111328
    6. '<input' → logprob: -19.625263214111328
    7. '=input' → logprob: -19.750263214111328
    8. ' list' → logprob: -21.125263214111328
    9. '	input' → logprob: -21.375263214111328
    10. '[input' → logprob: -21.750263214111328

Token 726: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.004416705574840307
    2. '.strip' → logprob: -5.8794169425964355
    3. '().' → logprob: -6.8794169425964355
    4. '()
' → logprob: -8.129416465759277
    5. ' ()' → logprob: -9.004416465759277
    6. 'strip' → logprob: -9.754416465759277
    7. '(' → logprob: -10.004416465759277
    8. '()

' → logprob: -11.879416465759277
    9. 's' → logprob: -12.004416465759277
    10. '.' → logprob: -12.129416465759277

Token 727: '               ' (ID: 506)
  Prédit: 'SEG'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'SEG' → logprob: -0.0001975802006199956
    2. '#' → logprob: -9.500197410583496
    3. ',' → logprob: -9.625197410583496
    4. ' SEG' → logprob: -10.500197410583496
    5. '
' → logprob: -11.000197410583496
    6. '_SEG' → logprob: -11.875197410583496
    7. '(' → logprob: -13.625197410583496
    8. '```' → logprob: -14.000197410583496
    9. 'seg' → logprob: -14.125197410583496
    10. 'SG' → logprob: -14.750197410583496

Token 728: ' #' (ID: 1069)
  Prédit: 'SEG'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SEG' → logprob: -9.436450636712834e-05
    2. '
' → logprob: -10.250094413757324
    3. '#' (adapté à ' #') → logprob: -10.375094413757324
    4. ' SEG' → logprob: -11.250094413757324
    5. '_SEG' → logprob: -11.875094413757324
    6. 'seg' → logprob: -13.375094413757324
    7. '```' → logprob: -13.500094413757324
    8. 'SG' → logprob: -13.625094413757324
    9. '
' → logprob: -14.125094413757324
    10. 'segment' → logprob: -14.125094413757324

Token 729: ' La' (ID: 3038)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0027032315265387297
    2. 'S' → logprob: -6.0027031898498535
    3. 'list' → logprob: -8.502703666687012
    4. ' input' → logprob: -11.252703666687012
    5. 'str' → logprob: -11.877703666687012
    6. '(input' → logprob: -12.627703666687012
    7. '[input' → logprob: -14.377703666687012
    8. '<input' → logprob: -14.877703666687012
    9. 'strip' → logprob: -15.877703666687012
    10. '=input' → logprob: -16.127702713012695

Token 730: ' chaîne' (ID: 89288)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.14733612537384033
    2. 'string' → logprob: -2.397336006164551
    3. 'str' → logprob: -4.022336006164551
    4. 'S' → logprob: -4.522336006164551
    5. ' chaîne' → logprob: -4.897336006164551
    6. 's' → logprob: -5.772336006164551
    7. 'chain' → logprob: -5.897336006164551
    8. 'input' → logprob: -5.897336006164551
    9. ' chaine' → logprob: -7.272336006164551
    10. 'cha' → logprob: -8.89733600616455

Token 731: ' de' (ID: 334)
  Prédit: 'SEG'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'SEG' → logprob: -0.004568134900182486
    2. '#' → logprob: -5.629568099975586
    3. '
' → logprob: -7.129568099975586
    4. ',' → logprob: -9.379568099975586
    5. '
' → logprob: -10.504568099975586
    6. ' SEG' → logprob: -10.879568099975586
    7. '

' → logprob: -11.754568099975586
    8. '_SEG' → logprob: -12.004568099975586
    9. 'seg' → logprob: -12.129568099975586
    10. 'SG' → logprob: -12.504568099975586

Token 732: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.01000798400491476
    2. ' caractères' → logprob: -4.760007858276367
    3. 'chars' → logprob: -7.010007858276367
    4. 'characters' → logprob: -8.635007858276367
    5. 'lett' → logprob: -9.510007858276367
    6. ' caracteres' → logprob: -9.510007858276367
    7. 'str' → logprob: -10.260007858276367
    8. 's' → logprob: -10.635007858276367
    9. 'char' → logprob: -11.010007858276367
    10. 'input' → logprob: -11.135007858276367

Token 733: '
' (ID: 198)
  Prédit: 'SEG'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SEG' → logprob: -0.00018565983918961138
    2. '#' → logprob: -8.7501859664917
    3. '
' → logprob: -11.2501859664917
    4. ' SEG' → logprob: -12.6251859664917
    5. 'global' → logprob: -12.7501859664917
    6. ',' → logprob: -13.1251859664917
    7. '_SEG' → logprob: -13.6251859664917
    8. 'd' → logprob: -14.0001859664917
    9. 'SG' → logprob: -14.3751859664917
    10. '
' → logprob: -14.5001859664917

Token 734: 'Q' (ID: 48)
  Prédit: 'SEG'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'SEG' → logprob: -2.696889623621246e-06
    2. '#' → logprob: -13.37500286102295
    3. ' SEG' → logprob: -14.00000286102295
    4. 'global' → logprob: -16.375001907348633
    5. '_SEG' → logprob: -16.500001907348633
    6. '```' → logprob: -16.750001907348633
    7. '
' → logprob: -17.000001907348633
    8. 'SG' → logprob: -17.750001907348633
    9. 'SE' → logprob: -18.125001907348633
    10. 'segment' → logprob: -18.625001907348633

Token 735: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06199704483151436
    2. '=' → logprob: -2.8119969367980957
    3. '=int' → logprob: -10.436997413635254
    4. '  ' → logprob: -17.686996459960938
    5. '   ' → logprob: -19.186996459960938
    6. ',' → logprob: -19.186996459960938
    7. '=input' → logprob: -19.186996459960938
    8. ' =
' → logprob: -19.436996459960938
    9. 'int' → logprob: -19.686996459960938
    10. ' ' → logprob: -19.686996459960938

Token 736: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0002613358374219388
    2. ' int' → logprob: -8.250261306762695
    3. '=int' → logprob: -18.875261306762695
    4. '[int' → logprob: -19.375261306762695
    5. '(int' → logprob: -20.500261306762695
    6. '<int' → logprob: -20.625261306762695
    7. '	int' → logprob: -22.750261306762695
    8. ':int' → logprob: -23.375261306762695
    9. '   ' → logprob: -24.625261306762695
    10. ']int' → logprob: -24.750261306762695

Token 737: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0015053401002660394
    2. 'input' → logprob: -6.501505374908447
    3. '=input' → logprob: -13.001504898071289
    4. ' input' → logprob: -14.251504898071289
    5. '(' → logprob: -17.12650489807129
    6. '<input' → logprob: -17.62650489807129
    7. '()' → logprob: -18.00150489807129
    8. ',input' → logprob: -18.25150489807129
    9. '(
' → logprob: -18.75150489807129
    10. '	input' → logprob: -19.00150489807129

Token 738: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0034281739499419928
    2. '()' → logprob: -5.753427982330322
    3. ')' → logprob: -8.37842845916748
    4. '())
' → logprob: -11.00342845916748
    5. ' ())' → logprob: -12.87842845916748
    6. '()
' → logprob: -14.00342845916748
    7. '(' → logprob: -15.12842845916748
    8. '())
' → logprob: -15.62842845916748
    9. '())

' → logprob: -16.753427505493164
    10. ' )' → logprob: -16.753427505493164

Token 739: '          ' (ID: 3550)
  Prédit: 'SEG'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'SEG' → logprob: -0.00021617230959236622
    2. '#' → logprob: -8.500216484069824
    3. '_SEG' → logprob: -12.500216484069824
    4. ' SEG' → logprob: -12.625216484069824
    5. '
' → logprob: -12.750216484069824
    6. 'SG' → logprob: -14.250216484069824
    7. '```' → logprob: -14.625216484069824
    8. 'seg' → logprob: -15.250216484069824
    9. 'import' → logprob: -15.375216484069824
    10. 'def' → logprob: -15.375216484069824

Token 740: ' #' (ID: 1069)
  Prédit: 'SEG'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SEG' → logprob: -0.0008703675703145564
    2. '#' (adapté à ' #') → logprob: -7.125870227813721
    3. '(' → logprob: -10.625870704650879
    4. '_SEG' → logprob: -11.250870704650879
    5. ' SEG' → logprob: -11.375870704650879
    6. '(seg' → logprob: -12.500870704650879
    7. '
' → logprob: -12.500870704650879
    8. '(S' → logprob: -12.625870704650879
    9. ',' → logprob: -13.750870704650879
    10. 'segments' → logprob: -14.000870704650879

Token 741: ' Nombre' (ID: 70208)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0054451776668429375
    2. '#' → logprob: -6.2554450035095215
    3. ' for' → logprob: -6.3804450035095215
    4. '
' → logprob: -6.7554450035095215
    5. 'int' → logprob: -8.13044548034668
    6. 'input' → logprob: -8.63044548034668
    7. 'query' → logprob: -10.50544548034668
    8. 'Q' → logprob: -10.75544548034668
    9. '[]' → logprob: -11.00544548034668
    10. 'print' → logprob: -11.13044548034668

Token 742: ' de' (ID: 334)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.08041498810052872
    2. ' of' → logprob: -3.5804150104522705
    3. 'of' → logprob: -4.080414772033691
    4. 'des' → logprob: -4.955414772033691
    5. '<|end|>' → logprob: -4.955414772033691
    6. 'de' → logprob: -5.705414772033691
    7. ')' → logprob: -5.955414772033691
    8. 'queries' → logprob: -5.955414772033691
    9. '(' → logprob: -6.330414772033691
    10. ' des' → logprob: -6.455414772033691

Token 743: ' requ' (ID: 7028)
  Prédit: 'queries'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queries' → logprob: -0.07085639238357544
    2. 'input' → logprob: -3.5708563327789307
    3. 'questions' → logprob: -3.9458563327789307
    4. 'requests' → logprob: -4.94585657119751
    5. 'int' → logprob: -5.57085657119751
    6. 'query' → logprob: -5.69585657119751
    7. ' queries' → logprob: -5.94585657119751
    8. '
' → logprob: -6.57085657119751
    9. '_queries' → logprob: -6.82085657119751
    10. 'for' → logprob: -8.070856094360352

Token 744: 'êtes' (ID: 23720)
  Prédit: 'êtes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êtes' → logprob: -0.0008064138819463551
    2. 'etes' → logprob: -7.1258063316345215
    3. 'ètes' → logprob: -13.37580680847168
    4. 'ête' → logprob: -15.75080680847168
    5. 'quetes' → logprob: -16.12580680847168
    6. 'êt' → logprob: -16.75080680847168
    7. 'tes' → logprob: -17.25080680847168
    8. 'é' → logprob: -17.37580680847168
    9. 'ertes' → logprob: -17.37580680847168
    10. 'p' → logprob: -17.62580680847168

Token 745: '

' (ID: 279)
  Prédit: 'SEG'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'SEG' → logprob: -5.526570384972729e-05
    2. '#' → logprob: -9.875055313110352
    3. 'import' → logprob: -13.500055313110352
    4. ' SEG' → logprob: -13.875055313110352
    5. '_SEG' → logprob: -14.625055313110352
    6. 'SG' → logprob: -15.375055313110352
    7. 'global' → logprob: -15.750055313110352
    8. 'segments' → logprob: -15.750055313110352
    9. '```' → logprob: -16.12505531311035
    10. 'segment' → logprob: -16.12505531311035

Token 746: '#' (ID: 2)
  Prédit: 'SEG'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SEG' → logprob: -1.2664456789934775e-06
    2. '#' → logprob: -14.000000953674316
    3. ' SEG' → logprob: -15.375000953674316
    4. '_SEG' → logprob: -17.000001907348633
    5. 'global' → logprob: -17.500001907348633
    6. '```' → logprob: -18.000001907348633
    7. 'SG' → logprob: -18.625001907348633
    8. 'seg' → logprob: -19.500001907348633
    9. 'SE' → logprob: -19.500001907348633
    10. 'segment' → logprob: -19.500001907348633

Token 747: ' Initial' (ID: 9209)
  Prédit: 'SEG'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'SEG' → logprob: -8.537868779967539e-06
    2. '#' → logprob: -11.750008583068848
    3. 'global' → logprob: -14.500008583068848
    4. ' SEG' → logprob: -16.12500762939453
    5. 'seg' → logprob: -18.00000762939453
    6. 'SG' → logprob: -18.25000762939453
    7. 'segment' → logprob: -18.25000762939453
    8. 'segments' → logprob: -18.37500762939453
    9. '_SEG' → logprob: -19.12500762939453
    10. 'SE' → logprob: -19.87500762939453

Token 748: 'isation' (ID: 6993)
  Prédit: 'SEG'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'SEG' → logprob: -0.05148826539516449
    2. 'ize' → logprob: -3.051488161087036
    3. ' SEG' → logprob: -7.176488399505615
    4. 'ise' → logprob: -7.551488399505615
    5. '#' → logprob: -7.801488399505615
    6. 'IZE' → logprob: -7.926488399505615
    7. 'seg' → logprob: -8.551487922668457
    8. 'ialize' → logprob: -8.551487922668457
    9. '_SEG' → logprob: -9.176487922668457
    10. ',' → logprob: -9.176487922668457

Token 749: ' du' (ID: 1462)
  Prédit: 'SEG'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'SEG' → logprob: -1.3856492842023727e-06
    2. ' SEG' → logprob: -13.875000953674316
    3. '(' → logprob: -15.625000953674316
    4. '_SEG' → logprob: -15.750000953674316
    5. 'segment' → logprob: -17.125001907348633
    6. 'SE' → logprob: -17.250001907348633
    7. 'seg' → logprob: -18.500001907348633
    8. 'global' → logprob: -18.750001907348633
    9. 'Segment' → logprob: -18.875001907348633
    10. 'SEQ' → logprob: -19.000001907348633

Token 750: ' segment' (ID: 14806)
  Prédit: 'SEG'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'SEG' → logprob: -8.180258191714529e-06
    2. '(' → logprob: -12.375008583068848
    3. 'segment' → logprob: -13.125008583068848
    4. ' SEG' → logprob: -14.500008583068848
    5. 'global' → logprob: -14.750008583068848
    6. 'segments' → logprob: -15.000008583068848
    7. 'seg' → logprob: -15.250008583068848
    8. '(S' → logprob: -16.25000762939453
    9. '_SEG' → logprob: -16.25000762939453
    10. '[' → logprob: -17.37500762939453

Token 751: ' tree' (ID: 8165)
  Prédit: 'SEG'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SEG' → logprob: -0.3514693081378937
    2. 'tree' → logprob: -1.2264692783355713
    3. 'TREE' → logprob: -6.22646951675415
    4. ',' → logprob: -7.47646951675415
    5. ' SEG' → logprob: -8.851469039916992
    6. 'segment' → logprob: -8.851469039916992
    7. ' tree' → logprob: -9.726469039916992
    8. '_SEG' → logprob: -10.476469039916992
    9. '(' → logprob: -10.976469039916992
    10. 'seg' → logprob: -10.976469039916992

Token 752: '
' (ID: 198)
  Prédit: 'SEG'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'SEG' → logprob: -1.6240566083070007e-06
    2. ' SEG' → logprob: -13.750001907348633
    3. '_SEG' → logprob: -15.500001907348633
    4. '(' → logprob: -15.625001907348633
    5. 'SE' → logprob: -16.500001907348633
    6. 'segment' → logprob: -17.250001907348633
    7. 'seg' → logprob: -17.500001907348633
    8. '(S' → logprob: -18.250001907348633
    9. 'SG' → logprob: -18.500001907348633
    10. 'SEQ' → logprob: -18.500001907348633

Token 753: 'SEG' (ID: 128217)
  Prédit: 'SEG'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SEG' → logprob: -1.6240566083070007e-06
    2. ' SEG' → logprob: -13.750001907348633
    3. '_SEG' → logprob: -15.250001907348633
    4. '(' → logprob: -16.375001907348633
    5. 'SE' → logprob: -17.375001907348633
    6. 'SEQ' → logprob: -18.250001907348633
    7. 'seg' → logprob: -19.000001907348633
    8. 'segment' → logprob: -19.000001907348633
    9. 'SEP' → logprob: -19.000001907348633
    10. 'Segment' → logprob: -19.625001907348633

Token 754: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008102210704237223
    2. ',d' → logprob: -7.125810146331787
    3. ',n' → logprob: -12.875810623168945
    4. ' ,' → logprob: -14.625810623168945
    5. ',N' → logprob: -14.750810623168945
    6. ',s' → logprob: -15.000810623168945
    7. ',D' → logprob: -15.125810623168945
    8. ',S' → logprob: -15.250810623168945
    9. ',se' → logprob: -15.375810623168945
    10. ',t' → logprob: -15.625810623168945

Token 755: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.06196768581867218
    2. ' d' → logprob: -2.811967611312866
    3. '	d' → logprob: -17.811967849731445
    4. '_d' → logprob: -18.686967849731445
    5. ' ' → logprob: -20.311967849731445
    6. '(d' → logprob: -20.436967849731445
    7. ' ' → logprob: -20.686967849731445
    8. ')d' → logprob: -20.811967849731445
    9. '<|end|>' → logprob: -20.811967849731445
    10. '>d' → logprob: -21.311967849731445

Token 756: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07895323634147644
    2. ' =' → logprob: -2.578953266143799
    3. ',' → logprob: -9.70395278930664
    4. '<|end|>' → logprob: -14.45395278930664
    5. '=create' → logprob: -14.57895278930664
    6. '＝' → logprob: -15.45395278930664
    7. '=d' → logprob: -15.57895278930664
    8. ' ' → logprob: -15.57895278930664
    9. '=parse' → logprob: -16.07895278930664
    10. '=get' → logprob: -17.20395278930664

Token 757: ' initialize' (ID: 18400)
  Prédit: 'initialize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initialize' → logprob: -0.00015860427811276168
    2. ' initialize' → logprob: -8.750158309936523
    3. '	initialize' → logprob: -17.500158309936523
    4. 'initial' → logprob: -17.875158309936523
    5. '.initialize' → logprob: -20.250158309936523
    6. '_initialize' → logprob: -20.250158309936523
    7. 'init' → logprob: -21.125158309936523
    8. 'itialize' → logprob: -21.500158309936523
    9. 'initialized' → logprob: -21.875158309936523
    10. 'initializer' → logprob: -22.125158309936523

Token 758: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0002615742268972099
    2. 'N' → logprob: -8.250261306762695
    3. '(' → logprob: -15.875261306762695
    4. '(S' → logprob: -16.125261306762695
    5. '(n' → logprob: -19.375261306762695
    6. '(len' → logprob: -19.500261306762695
    7. '```' → logprob: -19.500261306762695
    8. '	N' → logprob: -19.625261306762695
    9. '(int' → logprob: -19.875261306762695
    10. '[N' → logprob: -20.250261306762695

Token 759: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1472419600977446e-06
    2. ')
' → logprob: -14.250000953674316
    3. ' )' → logprob: -15.500000953674316
    4. ')

' → logprob: -16.125001907348633
    5. ')`' → logprob: -18.250001907348633
    6. '))' → logprob: -18.625001907348633
    7. ')#' → logprob: -18.625001907348633
    8. '),' → logprob: -19.125001907348633
    9. ');' → logprob: -19.375001907348633
    10. '())' → logprob: -19.625001907348633

Token 760: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.306760805164231e-05
    2. '#' → logprob: -11.25001335144043
    3. ' for' → logprob: -17.50001335144043
    4. '
' → logprob: -17.62501335144043
    5. '```' → logprob: -20.25001335144043
    6. 'def' → logprob: -20.75001335144043
    7. '    
' → logprob: -21.12501335144043
    8. '   ' → logprob: -21.75001335144043
    9. '	for' → logprob: -22.62501335144043
    10. '  
' → logprob: -22.62501335144043

Token 761: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.05321430787444115
    2. ' i' → logprob: -3.0532143115997314
    3. 'idx' → logprob: -5.803214073181152
    4. ' idx' → logprob: -6.553214073181152
    5. 'index' → logprob: -8.803214073181152
    6. ' index' → logprob: -11.303214073181152
    7. 'j' → logprob: -11.678214073181152
    8. 'x' → logprob: -14.428214073181152
    9. ' j' → logprob: -14.553214073181152
    10. 'pos' → logprob: -14.928214073181152

Token 762: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.062260307371616364
    2. 'in' → logprob: -2.812260389328003
    3. ' ' → logprob: -8.812260627746582
    4. ',' → logprob: -8.937260627746582
    5. 'range' → logprob: -12.062260627746582
    6. '(' → logprob: -13.437260627746582
    7. ' range' → logprob: -13.562260627746582
    8. '  ' → logprob: -13.812260627746582
    9. 'n' → logprob: -14.187260627746582
    10. '```' → logprob: -14.937260627746582

Token 763: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0009114635176956654
    2. ' range' → logprob: -7.000911235809326
    3. ' ' → logprob: -18.125911712646484
    4. '(range' → logprob: -18.625911712646484
    5. '   ' → logprob: -18.875911712646484
    6. 'rang' → logprob: -19.375911712646484
    7. '	range' → logprob: -19.500911712646484
    8. 'ange' → logprob: -20.000911712646484
    9. '  ' → logprob: -20.250911712646484
    10. '
' → logprob: -21.125911712646484

Token 764: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.00887738261371851
    2. '(len' → logprob: -4.758877277374268
    3. 'len' → logprob: -8.883877754211426
    4. 'N' → logprob: -9.008877754211426
    5. 'd' → logprob: -14.258877754211426
    6. '(n' → logprob: -14.508877754211426
    7. '(' → logprob: -14.508877754211426
    8. '   ' → logprob: -16.88387680053711
    9. 'Len' → logprob: -17.13387680053711
    10. '(
' → logprob: -17.38387680053711

Token 765: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.38697734475135803
    2. '):' → logprob: -1.1369773149490356
    3. ')' → logprob: -9.386977195739746
    4. ' ):' → logprob: -11.636977195739746
    5. '):
' → logprob: -12.136977195739746
    6. ' ):
' → logprob: -12.261977195739746
    7. '   ' → logprob: -12.886977195739746
    8. ':' → logprob: -15.261977195739746
    9. '):

' → logprob: -15.261977195739746
    10. 'def' → logprob: -15.761977195739746

Token 766: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06689921766519547
    2. 'update' → logprob: -2.816899299621582
    3. ' update' → logprob: -5.316899299621582
    4. '	update' → logprob: -11.566899299621582
    5. '   ' → logprob: -14.441899299621582
    6. '.update' → logprob: -14.816899299621582
    7. '(update' → logprob: -15.441899299621582
    8. '  ' → logprob: -15.691899299621582
    9. '_update' → logprob: -15.816899299621582
    10. '       ' → logprob: -15.816899299621582

Token 767: ' update' (ID: 4027)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' (adapté à ' update') → logprob: -0.00027301779482513666
    2. ' update' → logprob: -8.250272750854492
    3. '   ' → logprob: -11.375272750854492
    4. '	update' → logprob: -15.500272750854492
    5. '.update' → logprob: -18.250272750854492
    6. ' ' → logprob: -18.250272750854492
    7. '  ' → logprob: -19.125272750854492
    8. '(update' → logprob: -19.250272750854492
    9. '    
' → logprob: -19.875272750854492
    10. ':update' → logprob: -19.875272750854492

Token 768: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.4974866644479334e-05
    2. '(' → logprob: -11.125015258789062
    3. ' (' → logprob: -15.750015258789062
    4. 'i' → logprob: -16.250015258789062
    5. '(
' → logprob: -18.125015258789062
    6. ' i' → logprob: -19.500015258789062
    7. '```' → logprob: -19.875015258789062
    8. '((' → logprob: -21.375015258789062
    9. ')' → logprob: -21.375015258789062
    10. '(int' → logprob: -22.125015258789062

Token 769: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07569972425699234
    2. 'S' → logprob: -2.825699806213379
    3. ',S' → logprob: -4.825699806213379
    4. ' S' → logprob: -5.825699806213379
    5. ' ,' → logprob: -5.950699806213379
    6. ')' → logprob: -10.450699806213379
    7. 's' → logprob: -11.575699806213379
    8. '(S' → logprob: -11.950699806213379
    9. '   ' → logprob: -12.075699806213379
    10. ' ' → logprob: -12.200699806213379

Token 770: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -3.547789674485102e-05
    2. ' S' → logprob: -10.250035285949707
    3. '>S' → logprob: -21.000036239624023
    4. '   ' → logprob: -21.875036239624023
    5. ')' → logprob: -22.000036239624023
    6. '=S' → logprob: -22.125036239624023
    7. ' ' → logprob: -22.250036239624023
    8. '<S' → logprob: -22.500036239624023
    9. '[S' → logprob: -22.625036239624023
    10. '	S' → logprob: -22.875036239624023

Token 771: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: 0.0
    2. '[' → logprob: -17.375
    3. '[
' → logprob: -20.5
    4. '[I' → logprob: -21.875
    5. '```' → logprob: -22.375
    6. 'i' → logprob: -23.125
    7. '{i' → logprob: -24.125
    8. '[int' → logprob: -24.25
    9. ')' → logprob: -24.625
    10. ' [' → logprob: -24.75

Token 772: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -9.610702363715973e-06
    2. ' )' → logprob: -11.625009536743164
    3. ')
' → logprob: -14.625009536743164
    4. '))' → logprob: -16.000009536743164
    5. '')' → logprob: -17.375009536743164
    6. ')`' → logprob: -17.375009536743164
    7. ')

' → logprob: -17.625009536743164
    8. '[' → logprob: -18.000009536743164
    9. ')]' → logprob: -18.500009536743164
    10. '),' → logprob: -18.625009536743164

Token 773: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -7.147740689106286e-05
    2. '
' → logprob: -9.62507152557373
    3. 'results' → logprob: -12.87507152557373
    4. ' for' → logprob: -13.75007152557373
    5. 'result' → logprob: -14.37507152557373
    6. '    
' → logprob: -14.75007152557373
    7. 'output' → logprob: -15.12507152557373
    8. 'import' → logprob: -15.37507152557373
    9. '```' → logprob: -15.50007152557373
    10. 'print' → logprob: -16.750070571899414

Token 774: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.143808109802194e-05
    2. ' for' → logprob: -10.750041007995605
    3. '
' → logprob: -12.250041007995605
    4. 'results' → logprob: -12.250041007995605
    5. 'output' → logprob: -12.375041007995605
    6. 'result' → logprob: -12.875041007995605
    7. '<|end|>' → logprob: -13.375041007995605
    8. 'import' → logprob: -14.250041007995605
    9. 'print' → logprob: -14.625041007995605
    10. '    
' → logprob: -15.250041007995605

Token 775: ' Initialise' (ID: 179601)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 776: ' le' (ID: 505)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 777: ' segment' (ID: 14806)
  Prédit: 'SEG'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SEG' → logprob: -0.384159117937088
    2. 'segment' → logprob: -1.2591590881347656
    3. ' segment' → logprob: -4.134159088134766
    4. 'i' → logprob: -4.384159088134766
    5. 'tree' → logprob: -5.884159088134766
    6. ' SEG' → logprob: -6.759159088134766
    7. 'seg' → logprob: -7.384159088134766
    8. ')' → logprob: -7.509159088134766
    9. '```' → logprob: -8.009159088134766
    10. ' tree' → logprob: -8.634159088134766

Token 778: ' tree' (ID: 8165)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.00832461193203926
    2. ' tree' → logprob: -4.88332462310791
    3. 'trees' → logprob: -8.38332462310791
    4. 'for' → logprob: -8.75832462310791
    5. '<|end|>' → logprob: -9.00832462310791
    6. '(tree' → logprob: -10.25832462310791
    7. 'segment' → logprob: -10.75832462310791
    8. '	tree' → logprob: -11.00832462310791
    9. '.' → logprob: -11.13332462310791
    10. 'def' → logprob: -11.38332462310791

Token 779: ' avec' (ID: 3937)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.009865285828709602
    2. '
' → logprob: -4.6348652839660645
    3. ' for' → logprob: -9.259865760803223
    4. '```' → logprob: -12.009865760803223
    5. '

' → logprob: -13.509865760803223
    6. 'results' → logprob: -13.759865760803223
    7. 'def' → logprob: -13.884865760803223
    8. '    
' → logprob: -14.009865760803223
    9. '#' → logprob: -14.509865760803223
    10. '<|end|>' → logprob: -14.509865760803223

Token 780: ' les' (ID: 1341)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.023339353501796722
    2. ' S' → logprob: -3.77333927154541
    3. 'le' → logprob: -11.02333927154541
    4. 'les' → logprob: -11.14833927154541
    5. ' la' → logprob: -11.14833927154541
    6. ' les' → logprob: -11.39833927154541
    7. 'la' → logprob: -11.52333927154541
    8. ' le' → logprob: -11.64833927154541
    9. 'the' → logprob: -12.14833927154541
    10. 'l' → logprob: -12.64833927154541

Token 781: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.1487998217344284
    2. 'S' → logprob: -2.6487998962402344
    3. 'val' → logprob: -3.3987998962402344
    4. 'lett' → logprob: -3.5237998962402344
    5. ' caractères' → logprob: -6.398799896240234
    6. 'initial' → logprob: -7.148799896240234
    7. 'élé' → logprob: -7.523799896240234
    8. 'i' → logprob: -7.898799896240234
    9. ' S' → logprob: -8.398799896240234
    10. 'characters' → logprob: -8.773799896240234

Token 782: ' de' (ID: 334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00012403888104017824
    2. '
' → logprob: -9.125123977661133
    3. ' for' → logprob: -11.500123977661133
    4. 'def' → logprob: -13.125123977661133
    5. 'import' → logprob: -13.625123977661133
    6. '```' → logprob: -14.250123977661133
    7. '<|end|>' → logprob: -15.125123977661133
    8. '#' → logprob: -15.125123977661133
    9. 'while' → logprob: -16.125123977661133
    10. '    
' → logprob: -16.500123977661133

Token 783: ' la' (ID: 557)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.005568602122366428
    2. ' S' → logprob: -5.630568504333496
    3. ' la' → logprob: -6.755568504333496
    4. 'la' → logprob: -7.130568504333496
    5. 'l' → logprob: -13.380568504333496
    6. ' ' → logprob: -15.880568504333496
    7. 'initial' → logprob: -16.255569458007812
    8. 's' → logprob: -16.755569458007812
    9. 'the' → logprob: -16.755569458007812
    10. '<S' → logprob: -17.005569458007812

Token 784: ' chaîne' (ID: 89288)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.6116325855255127
    2. 'S' → logprob: -0.8616325855255127
    3. 'string' → logprob: -3.4866325855255127
    4. ' chaîne' → logprob: -5.736632347106934
    5. 'cha' → logprob: -7.611632347106934
    6. 's' → logprob: -7.611632347106934
    7. 'chain' → logprob: -8.736632347106934
    8. ' chaine' → logprob: -10.861632347106934
    9. ' S' → logprob: -11.111632347106934
    10. ' string' → logprob: -11.361632347106934

Token 785: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -8.602024900028482e-05
    2. '
' → logprob: -9.375085830688477
    3. '```' → logprob: -14.625085830688477
    4. ' for' → logprob: -14.750085830688477
    5. 'results' → logprob: -16.250085830688477
    6. '    
' → logprob: -17.125085830688477
    7. 'import' → logprob: -17.250085830688477
    8. 'def' → logprob: -17.375085830688477
    9. 'result' → logprob: -17.750085830688477
    10. 'while' → logprob: -17.750085830688477

Token 786: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.128163257315464e-07
    2. ' for' → logprob: -15.5
    3. '```' → logprob: -17.0
    4. 'import' → logprob: -17.75
    5. 'result' → logprob: -17.75
    6. 'results' → logprob: -18.125
    7. '
' → logprob: -18.625
    8. 'output' → logprob: -19.0
    9. 'from' → logprob: -20.125
    10. '	for' → logprob: -20.125

Token 787: ' Trait' (ID: 146188)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -9.088346359931165e-07
    2. 'import' → logprob: -14.125000953674316
    3. ' for' → logprob: -16.75
    4. 'from' → logprob: -16.875
    5. 'output' → logprob: -17.0
    6. 'results' → logprob: -17.875
    7. 'result' → logprob: -17.875
    8. '```' → logprob: -20.25
    9. 'outputs' → logprob: -20.5
    10. '
' → logprob: -20.75

Token 788: 'ement' (ID: 962)
  Prédit: 'ement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ement' → logprob: -0.005988877732306719
    2. 'ements' → logprob: -5.130989074707031
    3. 'er' → logprob: -10.255989074707031
    4. 'e' → logprob: -11.505989074707031
    5. 'ment' → logprob: -11.755989074707031
    6. '#' → logprob: -12.630989074707031
    7. '```' → logprob: -13.130989074707031
    8. 'em' → logprob: -14.505989074707031
    9. 'rement' → logprob: -14.755989074707031
    10. 'es' → logprob: -14.755989074707031

Token 789: ' des' (ID: 731)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0007117166533134878
    2. ' for' → logprob: -7.250711917877197
    3. 'des' → logprob: -14.375711441040039
    4. '
' → logprob: -14.625711441040039
    5. ' des' → logprob: -15.375711441040039
    6. 'pour' → logprob: -15.375711441040039
    7. ' of' → logprob: -16.37571144104004
    8. 'of' → logprob: -16.50071144104004
    9. '	for' → logprob: -17.62571144104004
    10. '#' → logprob: -17.75071144104004

Token 790: ' requ' (ID: 7028)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.026163268834352493
    2. 'queries' → logprob: -4.276163101196289
    3. 'range' → logprob: -5.151163101196289
    4. ' for' → logprob: -5.776163101196289
    5. ' queries' → logprob: -6.776163101196289
    6. 'import' → logprob: -7.026163101196289
    7. 'Q' → logprob: -7.526163101196289
    8. ' range' → logprob: -8.151163101196289
    9. '
' → logprob: -9.401163101196289
    10. '```' → logprob: -10.401163101196289

Token 791: 'êtes' (ID: 23720)
  Prédit: 'êtes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êtes' → logprob: -2.057743949990254e-05
    2. 'etes' → logprob: -10.875020980834961
    3. 'êt' → logprob: -14.750020980834961
    4. 'ê' → logprob: -14.875020980834961
    5. 'êts' → logprob: -14.875020980834961
    6. 'ètes' → logprob: -15.375020980834961
    7. 'queries' → logprob: -16.75002098083496
    8. '#' → logprob: -16.75002098083496
    9. '```' → logprob: -17.37502098083496
    10. 'Ê' → logprob: -17.50002098083496

Token 792: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.9361264946837764e-07
    2. ' for' → logprob: -16.5
    3. '```' → logprob: -19.25
    4. 'import' → logprob: -20.25
    5. 'from' → logprob: -21.875
    6. '
' → logprob: -23.5
    7. '	for' → logprob: -23.625
    8. 'while' → logprob: -23.875
    9. 'result' → logprob: -26.25
    10. '.for' → logprob: -26.375

Token 793: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1472419600977446e-06
    2. '```' → logprob: -13.750000953674316
    3. ' for' → logprob: -19.250001907348633
    4. 'import' → logprob: -20.000001907348633
    5. '
' → logprob: -20.000001907348633
    6. '``' → logprob: -21.000001907348633
    7. 'from' → logprob: -21.625001907348633
    8. '	for' → logprob: -21.750001907348633
    9. 'while' → logprob: -22.500001907348633
    10. 'For' → logprob: -25.375001907348633

Token 794: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00317783304490149
    2. ' _' → logprob: -5.753177642822266
    3. '_=' → logprob: -16.003177642822266
    4. '_q' → logprob: -17.753177642822266
    5. ' ' → logprob: -18.003177642822266
    6. '__' → logprob: -18.003177642822266
    7. '_i' → logprob: -18.753177642822266
    8. '_s' → logprob: -19.878177642822266
    9. '_]' → logprob: -19.878177642822266
    10. '_j' → logprob: -20.003177642822266

Token 795: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.18004058301448822
    2. 'in' → logprob: -1.8050405979156494
    3. '_' → logprob: -8.80504035949707
    4. 'n' → logprob: -9.68004035949707
    5. 's' → logprob: -10.80504035949707
    6. 'range' → logprob: -10.80504035949707
    7. ' ' → logprob: -11.43004035949707
    8. '  ' → logprob: -12.18004035949707
    9. 'i' → logprob: -12.43004035949707
    10. ' _' → logprob: -12.80504035949707

Token 796: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0019286326132714748
    2. ' range' → logprob: -6.251928806304932
    3. '_' → logprob: -17.751928329467773
    4. 'r' → logprob: -19.126928329467773
    5. '	range' → logprob: -19.751928329467773
    6. '(range' → logprob: -20.251928329467773
    7. 'rang' → logprob: -20.501928329467773
    8. '_range' → logprob: -20.501928329467773
    9. 'in' → logprob: -21.626928329467773
    10. ' ' → logprob: -21.876928329467773

Token 797: '(Q' (ID: 14437)
  Prédit: '(Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Q' → logprob: -0.055563513189554214
    2. 'Q' → logprob: -3.305563449859619
    3. ' Q' → logprob: -4.055563449859619
    4. '(' → logprob: -10.805563926696777
    5. ' (' → logprob: -11.305563926696777
    6. ' range' → logprob: -11.555563926696777
    7. 'range' → logprob: -13.805563926696777
    8. '(range' → logprob: -15.555563926696777
    9. '	Q' → logprob: -15.805563926696777
    10. ',Q' → logprob: -16.80556297302246

Token 798: '):
' (ID: 1883)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0832066535949707
    2. '):
' → logprob: -1.0832066535949707
    3. '):' → logprob: -1.2082066535949707
    4. '():
' → logprob: -4.333206653594971
    5. ':
' → logprob: -4.958206653594971
    6. '():' → logprob: -5.833206653594971
    7. ' :' → logprob: -7.833206653594971
    8. '):
' → logprob: -8.708206176757812
    9. ',' → logprob: -9.083206176757812
    10. '```' → logprob: -9.208206176757812

Token 799: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02863127365708351
    2. '```' → logprob: -4.278631210327148
    3. 'inp' → logprob: -5.903631210327148
    4. ' line' → logprob: -5.903631210327148
    5. 't' → logprob: -6.278631210327148
    6. 'a' → logprob: -6.653631210327148
    7. '	line' → logprob: -6.778631210327148
    8. 'line' → logprob: -7.153631210327148
    9. 'input' → logprob: -7.153631210327148
    10. ' parts' → logprob: -7.528631210327148

Token 800: ' com' (ID: 452)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.7544270157814026
    2. 'query' → logprob: -0.7544270157814026
    3. 'line' → logprob: -3.629426956176758
    4. 'cmd' → logprob: -4.504426956176758
    5. 'q' → logprob: -4.629426956176758
    6. 'tmp' → logprob: -6.004426956176758
    7. 'command' → logprob: -6.254426956176758
    8. 'qry' → logprob: -6.254426956176758
    9. 'inputs' → logprob: -7.129426956176758
    10. 'inp' → logprob: -7.129426956176758

Token 801: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6413405537605286
    2. ',' → logprob: -1.1413404941558838
    3. 'mand' → logprob: -2.891340494155884
    4. 'm' → logprob: -3.016340494155884
    5. 'mande' → logprob: -3.266340494155884
    6. '=' → logprob: -5.266340732574463
    7. 'p' → logprob: -6.016340732574463
    8. 'd' → logprob: -7.016340732574463
    9. 'e' → logprob: -7.266340732574463
    10. 'mands' → logprob: -7.766340732574463

Token 802: ' s' (ID: 265)
  Prédit: '*l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*l' → logprob: -0.5390584468841553
    2. '*' → logprob: -1.1640584468841553
    3. '*a' → logprob: -2.4140584468841553
    4. '*x' → logprob: -5.289058685302734
    5. 'a' → logprob: -5.789058685302734
    6. 'l' → logprob: -5.914058685302734
    7. ' *' → logprob: -7.039058685302734
    8. 'args' → logprob: -7.539058685302734
    9. '*s' → logprob: -7.539058685302734
    10. '*t' → logprob: -7.539058685302734

Token 803: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5356742143630981
    2. '=' → logprob: -1.1606742143630981
    3. ' =' → logprob: -2.4106740951538086
    4. '=input' → logprob: -5.660674095153809
    5. 'plit' → logprob: -5.910674095153809
    6. 'tr' → logprob: -6.910674095153809
    7. 'plits' → logprob: -6.910674095153809
    8. 'p' → logprob: -7.535674095153809
    9. '=line' → logprob: -8.035674095153809
    10. 't' → logprob: -8.410674095153809

Token 804: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.38736042380332947
    2. 'e' → logprob: -1.1373604536056519
    3. 'x' → logprob: -8.387360572814941
    4. 'f' → logprob: -9.012360572814941
    5. 'c' → logprob: -10.887360572814941
    6. ' t' → logprob: -11.137360572814941
    7. '*' → logprob: -11.137360572814941
    8. 'd' → logprob: -11.262360572814941
    9. 'l' → logprob: -11.512360572814941
    10. 'v' → logprob: -11.512360572814941

Token 805: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04859543219208717
    2. ' =' → logprob: -3.048595428466797
    3. '=input' → logprob: -12.048595428466797
    4. ',' → logprob: -13.673595428466797
    5. '=line' → logprob: -14.673595428466797
    6. '_=' → logprob: -15.298595428466797
    7. ' ' → logprob: -16.923595428466797
    8. '＝' → logprob: -17.298595428466797
    9. '_' → logprob: -17.423595428466797
    10. '   ' → logprob: -17.673595428466797

Token 806: ' map' (ID: 4014)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -1.5213274309644476e-05
    2. ' input' → logprob: -11.375015258789062
    3. '(input' → logprob: -12.625015258789062
    4. 'map' → logprob: -14.875015258789062
    5. '[input' → logprob: -17.250015258789062
    6. '=input' → logprob: -17.750015258789062
    7. '<input' → logprob: -17.875015258789062
    8. 'int' → logprob: -19.000015258789062
    9. ',input' → logprob: -20.000015258789062
    10. 'list' → logprob: -20.000015258789062

Token 807: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.2530958652496338
    2. '(int' → logprob: -1.5030958652496338
    3. '(input' → logprob: -7.253095626831055
    4. 'str' → logprob: -7.753095626831055
    5. 'int' → logprob: -11.128095626831055
    6. 'input' → logprob: -11.253095626831055
    7. ' str' → logprob: -14.378095626831055
    8. '=str' → logprob: -15.503095626831055
    9. '(lambda' → logprob: -16.003095626831055
    10. '(' → logprob: -16.378095626831055

Token 808: ',' (ID: 11)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.0648455619812012
    2. '.split' → logprob: -1.0648455619812012
    3. ',' → logprob: -1.3148455619812012
    4. '.strip' → logprob: -3.689845561981201
    5. ',input' → logprob: -5.064845561981201
    6. 'input' → logprob: -5.189845561981201
    7. 'split' → logprob: -5.814845561981201
    8. '.' → logprob: -6.814845561981201
    9. '(input' → logprob: -8.43984603881836
    10. ' .' → logprob: -8.68984603881836

Token 809: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0004307884373702109
    2. ' input' → logprob: -7.750430583953857
    3. '(input' → logprob: -16.250431060791016
    4. '=input' → logprob: -17.625431060791016
    5. ' ' → logprob: -18.250431060791016
    6. ')' → logprob: -18.500431060791016
    7. '<input' → logprob: -19.125431060791016
    8. ',input' → logprob: -19.125431060791016
    9. '   ' → logprob: -19.250431060791016
    10. '	input' → logprob: -19.625431060791016

Token 810: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -9.088346359931165e-07
    2. '()' → logprob: -14.125000953674316
    3. ' ().' → logprob: -16.75
    4. '.split' → logprob: -17.0
    5. '(' → logprob: -17.125
    6. '   ' → logprob: -19.25
    7. '()
' → logprob: -19.5
    8. 'split' → logprob: -19.875
    9. '()).' → logprob: -20.125
    10. ').' → logprob: -20.125

Token 811: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -6.110668618930504e-05
    2. 'strip' → logprob: -9.75006103515625
    3. ' split' → logprob: -13.00006103515625
    4. 'rstrip' → logprob: -15.00006103515625
    5. '(split' → logprob: -15.50006103515625
    6. 'spl' → logprob: -18.12506103515625
    7. '.split' → logprob: -18.50006103515625
    8. '_split' → logprob: -20.12506103515625
    9. '().' → logprob: -21.12506103515625
    10. ' strip' → logprob: -22.12506103515625

Token 812: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0026607930194586515
    2. '())' → logprob: -6.002660751342773
    3. '()' → logprob: -9.002660751342773
    4. ')
' → logprob: -9.877660751342773
    5. ' )' → logprob: -12.002660751342773
    6. ')`' → logprob: -13.877660751342773
    7. '())
' → logprob: -14.127660751342773
    8. '(' → logprob: -14.502660751342773
    9. '   ' → logprob: -14.627660751342773
    10. ',' → logprob: -14.752660751342773

Token 813: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1754986047744751
    2. ' if' → logprob: -2.5504984855651855
    3. 'if' → logprob: -2.6754984855651855
    4. '    
' → logprob: -4.5504984855651855
    5. '<|end|>' → logprob: -6.1754984855651855
    6. '  
' → logprob: -7.6754984855651855
    7. ' 
' → logprob: -8.175498962402344
    8. '	if' → logprob: -8.175498962402344
    9. '   
' → logprob: -9.175498962402344
    10. '[' → logprob: -9.425498962402344

Token 814: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.06965261697769165
    2. ' if' → logprob: -2.819652557373047
    3. '   ' → logprob: -4.944652557373047
    4. ' 
' → logprob: -8.319652557373047
    5. '    
' → logprob: -8.694652557373047
    6. '    ' → logprob: -10.319652557373047
    7. '	if' → logprob: -10.694652557373047
    8. 'i' → logprob: -10.819652557373047
    9. '
' → logprob: -11.444652557373047
    10. '  ' → logprob: -11.569652557373047

Token 815: ' com' (ID: 452)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.03804275393486023
    2. ' com' → logprob: -3.2880427837371826
    3. '	com' → logprob: -14.288043022155762
    4. '(com' → logprob: -15.288043022155762
    5. '<com' → logprob: -15.413043022155762
    6. '=com' → logprob: -15.538043022155762
    7. '   ' → logprob: -16.288042068481445
    8. '_com' → logprob: -17.538042068481445
    9. ' ' → logprob: -17.788042068481445
    10. 'Com' → logprob: -19.038042068481445

Token 816: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.31406891345977783
    2. ' ==' → logprob: -1.3140689134597778
    3. '[' → logprob: -7.814068794250488
    4. '=' → logprob: -7.939068794250488
    5. ' =' → logprob: -11.189068794250488
    6. '===' → logprob: -11.939068794250488
    7. '=='' → logprob: -12.064068794250488
    8. '=="' → logprob: -12.564068794250488
    9. ')' → logprob: -12.814068794250488
    10. ' ' → logprob: -12.814068794250488

Token 817: ' '' (ID: 461)
  Prédit: ''U'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''U' → logprob: -0.11969813704490662
    2. ''u' → logprob: -2.6196980476379395
    3. ''' → logprob: -4.2446980476379395
    4. '"' → logprob: -4.7446980476379395
    5. ' '' → logprob: -5.2446980476379395
    6. ''a' → logprob: -5.6196980476379395
    7. ''C' → logprob: -5.9946980476379395
    8. ''A' → logprob: -6.1196980476379395
    9. '"C' → logprob: -7.4946980476379395
    10. ' "' → logprob: -7.7446980476379395

Token 818: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3491174578666687
    2. ''' → logprob: -1.3491175174713135
    3. 'C' → logprob: -4.974117279052734
    4. 'update' → logprob: -5.474117279052734
    5. 'u' → logprob: -5.599117279052734
    6. '')' → logprob: -5.849117279052734
    7. 'c' → logprob: -5.849117279052734
    8. 'Q' → logprob: -5.974117279052734
    9. '"' → logprob: -6.224117279052734
    10. 's' → logprob: -6.599117279052734

Token 819: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.26033833622932434
    2. '':
' → logprob: -2.010338306427002
    3. ':' → logprob: -2.385338306427002
    4. ':
' → logprob: -6.010338306427002
    5. ''' → logprob: -7.760338306427002
    6. '':
' → logprob: -9.51033878326416
    7. '):' → logprob: -9.76033878326416
    8. ' '' → logprob: -9.88533878326416
    9. '   ' → logprob: -10.26033878326416
    10. ' :' → logprob: -10.38533878326416

Token 820: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6441913843154907
    2. '       ' → logprob: -0.7691913843154907
    3. ' i' → logprob: -5.394191265106201
    4. '    ' → logprob: -6.144191265106201
    5. '	   ' → logprob: -6.269191265106201
    6. 'i' → logprob: -7.144191265106201
    7. ',' → logprob: -7.769191265106201
    8. '	i' → logprob: -8.39419174194336
    9. ':' → logprob: -8.64419174194336
    10. '	' → logprob: -8.76919174194336

Token 821: ' #' (ID: 1069)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'update' → logprob: -0.2718595564365387
    2. 'i' → logprob: -1.7718595266342163
    3. 'idx' → logprob: -2.896859645843506
    4. 's' → logprob: -5.146859645843506
    5. 'index' → logprob: -5.771859645843506
    6. '   ' → logprob: -6.146859645843506
    7. 'pos' → logprob: -7.146859645843506
    8. ' update' → logprob: -8.021859169006348
    9. 'x' → logprob: -8.271859169006348
    10. '       ' → logprob: -8.771859169006348

Token 822: ' Modification' (ID: 156523)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'update' → logprob: -0.0290895476937294
    2. 'i' → logprob: -4.154089450836182
    3. 'idx' → logprob: -4.779089450836182
    4. 'index' → logprob: -5.904089450836182
    5. ' update' → logprob: -6.779089450836182
    6. '   ' → logprob: -7.779089450836182
    7. 'indice' → logprob: -9.65408992767334
    8. 'pos' → logprob: -9.77908992767334
    9. '#' → logprob: -10.02908992767334
    10. '       ' → logprob: -10.15408992767334

Token 823: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.047236744314432144
    2. '       ' → logprob: -3.547236680984497
    3. ' i' → logprob: -4.422236919403076
    4. 'i' → logprob: -5.672236919403076
    5. '  ' → logprob: -8.047236442565918
    6. '    ' → logprob: -8.047236442565918
    7. ':' → logprob: -8.547236442565918
    8. ',' → logprob: -8.547236442565918
    9. ' update' → logprob: -8.672236442565918
    10. ' ' → logprob: -9.672236442565918

Token 824: ''un' (ID: 9788)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.037641577422618866
    2. 'i' → logprob: -4.287641525268555
    3. 'e' → logprob: -4.412641525268555
    4. '(int' → logprob: -5.287641525268555
    5. '=int' → logprob: -6.662641525268555
    6. ' int' → logprob: -6.787641525268555
    7. 'update' → logprob: -7.287641525268555
    8. 'u' → logprob: -7.662641525268555
    9. '[int' → logprob: -7.662641525268555
    10. 'ex' → logprob: -8.162641525268555

Token 825: ' caractère' (ID: 80509)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.03562445566058159
    2. ' int' → logprob: -3.7856245040893555
    3. '=int' → logprob: -5.4106245040893555
    4. 'indice' → logprob: -6.4106245040893555
    5. 'index' → logprob: -6.5356245040893555
    6. 'i' → logprob: -7.1606245040893555
    7. 's' → logprob: -7.2856245040893555
    8. '[int' → logprob: -7.5356245040893555
    9. ' ' → logprob: -7.7856245040893555
    10. 't' → logprob: -8.160624504089355

Token 826: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 827: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4278371334075928
    2. '   ' → logprob: -1.1778371334075928
    3. ' i' → logprob: -4.302837371826172
    4. 'i' → logprob: -4.802837371826172
    5. '	i' → logprob: -5.302837371826172
    6. '    ' → logprob: -5.427837371826172
    7. ':' → logprob: -6.177837371826172
    8. '[i' → logprob: -6.302837371826172
    9. '  ' → logprob: -7.552837371826172
    10. '(i' → logprob: -7.677837371826172

Token 828: ' update' (ID: 4027)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6851537227630615
    2. 'update' (adapté à ' update') → logprob: -1.3101537227630615
    3. 'idx' → logprob: -2.1851537227630615
    4. 's' → logprob: -2.5601537227630615
    5. 'index' → logprob: -3.4351537227630615
    6. 'pos' → logprob: -5.810153961181641
    7. 'x' → logprob: -7.935153961181641
    8. '   ' → logprob: -8.68515396118164
    9. 'ind' → logprob: -8.93515396118164
    10. ' update' → logprob: -9.06015396118164

Token 829: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -4.320199877838604e-07
    2. 'int' → logprob: -15.25
    3. '(' → logprob: -16.375
    4. '[int' → logprob: -18.0
    5. '(
' → logprob: -19.125
    6. '((' → logprob: -19.5
    7. '(i' → logprob: -19.5
    8. '	int' → logprob: -19.875
    9. '(ord' → logprob: -19.875
    10. ' int' → logprob: -20.125

Token 830: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -3.440506407059729e-05
    2. '(' → logprob: -10.75003433227539
    3. 's' → logprob: -11.37503433227539
    4. '(
' → logprob: -14.37503433227539
    5. '(t' → logprob: -14.50003433227539
    6. '((' → logprob: -15.62503433227539
    7. '(int' → logprob: -15.75003433227539
    8. ')' → logprob: -17.50003433227539
    9. ' (' → logprob: -17.87503433227539
    10. '(i' → logprob: -18.50003433227539

Token 831: ')' (ID: 8)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5390219688415527
    2. ' -' → logprob: -0.9140219688415527
    3. ',' → logprob: -4.164021968841553
    4. ' ,' → logprob: -8.789022445678711
    5. ')' → logprob: -10.289022445678711
    6. ')-' → logprob: -11.414022445678711
    7. '-,' → logprob: -11.539022445678711
    8. ' ' → logprob: -11.789022445678711
    9. ' ' → logprob: -12.914022445678711
    10. '),' → logprob: -13.039022445678711

Token 832: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3588723838329315
    2. '-' → logprob: -1.233872413635254
    3. ',' → logprob: -4.608872413635254
    4. ' ,' → logprob: -7.983872413635254
    5. ' ' → logprob: -10.733872413635254
    6. '()-' → logprob: -11.733872413635254
    7. ')' → logprob: -12.108872413635254
    8. '-,' → logprob: -12.358872413635254
    9. ' -,' → logprob: -12.546372413635254
    10. '()' → logprob: -12.546372413635254

Token 833: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.676292231422849e-05
    2. ' ' → logprob: -11.000017166137695
    3. '<|end|>' → logprob: -18.000017166137695
    4. '```' → logprob: -18.875017166137695
    5. ')' → logprob: -20.625017166137695
    6. '   ' → logprob: -20.875017166137695
    7. '0' → logprob: -21.500017166137695
    8. '۱' → logprob: -22.625017166137695
    9. '  ' → logprob: -22.750017166137695
    10. '১' → logprob: -22.875017166137695

Token 834: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.676292231422849e-05
    2. ' ' → logprob: -11.000017166137695
    3. '```' → logprob: -18.500017166137695
    4. '<|end|>' → logprob: -19.875017166137695
    5. '   ' → logprob: -20.000017166137695
    6. '0' → logprob: -20.875017166137695
    7. ')' → logprob: -21.625017166137695
    8. '  ' → logprob: -22.250017166137695
    9. '۱' → logprob: -22.375017166137695
    10. '১' → logprob: -22.812517166137695

Token 835: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002969703928101808
    2. ',t' → logprob: -8.250296592712402
    3. ' ,' → logprob: -10.250296592712402
    4. ',s' → logprob: -15.875296592712402
    5. ',
' → logprob: -16.00029754638672
    6. ',str' → logprob: -18.25029754638672
    7. '   ' → logprob: -18.50029754638672
    8. ',c' → logprob: -18.50029754638672
    9. 't' → logprob: -19.25029754638672
    10. '       ' → logprob: -19.37529754638672

Token 836: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -5.5577775128767826e-06
    2. ' t' → logprob: -12.125005722045898
    3. '	t' → logprob: -18.3750057220459
    4. '`t' → logprob: -19.5000057220459
    5. '   ' → logprob: -20.8750057220459
    6. '$t' → logprob: -21.7500057220459
    7. ')t' → logprob: -22.7500057220459
    8. '    ' → logprob: -22.7500057220459
    9. 'str' → logprob: -22.8750057220459
    10. ' ' → logprob: -23.1250057220459

Token 837: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00044902291847392917
    2. ')
' → logprob: -7.750449180603027
    3. '   ' → logprob: -11.000449180603027
    4. ' )' → logprob: -14.375449180603027
    5. ')
' → logprob: -14.500449180603027
    6. '       ' → logprob: -15.125449180603027
    7. '))' → logprob: -16.50044822692871
    8. ')

' → logprob: -16.50044822692871
    9. '')' → logprob: -16.87544822692871
    10. '")' → logprob: -18.00044822692871

Token 838: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005112322513014078
    2. 'else' → logprob: -5.755112171173096
    3. 'elif' → logprob: -6.255112171173096
    4. '```' → logprob: -12.005112648010254
    5. ' else' → logprob: -12.755112648010254
    6. ' elif' → logprob: -13.255112648010254
    7. '    
' → logprob: -14.755112648010254
    8. '	elif' → logprob: -14.755112648010254
    9. '<|end|>' → logprob: -15.630112648010254
    10. 'if' → logprob: -15.880112648010254

Token 839: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.10783897340297699
    2. 'elif' → logprob: -2.8578388690948486
    3. '   ' → logprob: -3.1078388690948486
    4. ' else' → logprob: -8.98283863067627
    5. ' elif' → logprob: -11.48283863067627
    6. '	elif' → logprob: -14.23283863067627
    7. '	else' → logprob: -14.48283863067627
    8. '```' → logprob: -15.60783863067627
    9. 'if' → logprob: -15.73283863067627
    10. '    
' → logprob: -15.98283863067627

Token 840: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03380533307790756
    2. ':
' → logprob: -3.4088053703308105
    3. '   ' → logprob: -9.533804893493652
    4. ' :' → logprob: -9.908804893493652
    5. ':
' → logprob: -10.908804893493652
    6. '{' → logprob: -12.533804893493652
    7. ' :
' → logprob: -12.533804893493652
    8. ':

' → logprob: -12.783804893493652
    9. '=' → logprob: -13.033804893493652
    10. ',' → logprob: -13.533804893493652

Token 841: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.056443050503730774
    2. '       ' → logprob: -2.931442975997925
    3. '```' → logprob: -7.431443214416504
    4. 'a' → logprob: -7.806443214416504
    5. ' s' → logprob: -9.181443214416504
    6. '    ' → logprob: -9.556443214416504
    7. 'int' → logprob: -9.681443214416504
    8. '    
' → logprob: -9.931443214416504
    9. '<|end|>' → logprob: -10.181443214416504
    10. ' ' → logprob: -10.431443214416504

Token 842: ' #' (ID: 1069)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1599575281143188
    2. ' s' → logprob: -1.2849575281143188
    3. ' res' → logprob: -1.9099575281143188
    4. 'res' → logprob: -2.0349574089050293
    5. 'result' → logprob: -3.2849574089050293
    6. 'a' → logprob: -3.4099574089050293
    7. 'print' → logprob: -4.159957408905029
    8. ' result' → logprob: -4.409957408905029
    9. 'r' → logprob: -4.909957408905029
    10. ' a' → logprob: -5.034957408905029

Token 843: ' Dem' (ID: 9458)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.0653316974639893
    2. 's' → logprob: -1.1903316974639893
    3. 'result' → logprob: -2.1903316974639893
    4. ' res' → logprob: -2.4403316974639893
    5. 'a' → logprob: -2.6903316974639893
    6. ' s' → logprob: -3.5653316974639893
    7. 'count' → logprob: -4.06533145904541
    8. 'ans' → logprob: -5.06533145904541
    9. 'l' → logprob: -5.19033145904541
    10. ' result' → logprob: -5.19033145904541

Token 844: 'ande' (ID: 4102)
  Prédit: 'ande'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ande' → logprob: -0.00022034443099983037
    2. 'and' → logprob: -9.50022029876709
    3. 'arrage' → logprob: -9.75022029876709
    4. 'ander' → logprob: -10.00022029876709
    5. 'ar' → logprob: -11.87522029876709
    6. 'arque' → logprob: -12.12522029876709
    7. 'andez' → logprob: -12.25022029876709
    8. 'e' → logprob: -12.37522029876709
    9. '   ' → logprob: -12.50022029876709
    10. 'a' → logprob: -12.75022029876709

Token 845: ' du' (ID: 1462)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6680009961128235
    2. 'int' → logprob: -1.6680009365081787
    3. 'print' → logprob: -2.0430009365081787
    4. 'de' → logprob: -3.0430009365081787
    5. '   ' → logprob: -3.1680009365081787
    6. 'result' → logprob: -3.5430009365081787
    7. 'd' → logprob: -4.668001174926758
    8. '=int' → logprob: -4.793001174926758
    9. 'of' → logprob: -5.168001174926758
    10. ' de' → logprob: -5.293001174926758

Token 846: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.2913404107093811
    2. 'print' → logprob: -1.4163403511047363
    3. 'result' → logprob: -4.791340351104736
    4. ' nombre' → logprob: -7.041340351104736
    5. 'number' → logprob: -7.791340351104736
    6. 'len' → logprob: -8.791340827941895
    7. 'count' → logprob: -8.916340827941895
    8. 'res' → logprob: -9.416340827941895
    9. 'rés' → logprob: -9.541340827941895
    10. 'int' → logprob: -10.791340827941895

Token 847: ' de' (ID: 334)
  Prédit: 'distinct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distinct' → logprob: -0.7475857138633728
    2. ' of' → logprob: -1.8725857734680176
    3. 'de' → logprob: -2.3725857734680176
    4. 'of' → logprob: -2.3725857734680176
    5. ' de' → logprob: -2.9975857734680176
    6. '   ' → logprob: -3.3725857734680176
    7. ' =' → logprob: -3.6225857734680176
    8. 'def' → logprob: -3.6225857734680176
    9. '=' → logprob: -4.497585773468018
    10. ' distinct' → logprob: -5.372585773468018

Token 848: ' lettres' (ID: 101234)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.4786909818649292
    2. 'bin' → logprob: -0.9786909818649292
    3. 'bit' → logprob: -6.603691101074219
    4. 'set' → logprob: -6.853691101074219
    5. 'distinct' → logprob: -7.228691101074219
    6. ' bin' → logprob: -8.103691101074219
    7. 'print' → logprob: -8.353691101074219
    8. 'bins' → logprob: -8.478691101074219
    9. 'car' → logprob: -8.978691101074219
    10. 'letters' → logprob: -9.478691101074219

Token 849: ' distinct' (ID: 16913)
  Prédit: 'distinct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distinct' → logprob: -0.018870921805500984
    2. 'diff' → logprob: -4.643870830535889
    3. ' distinct' → logprob: -5.018870830535889
    4. ' =' → logprob: -7.018870830535889
    5. 'unique' → logprob: -8.018871307373047
    6. 'print' → logprob: -8.393871307373047
    7. '   ' → logprob: -8.768871307373047
    8. 'prés' → logprob: -9.018871307373047
    9. '=' → logprob: -9.143871307373047
    10. 'different' → logprob: -9.268871307373047

Token 850: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.05570321902632713
    2. 's' → logprob: -2.9307031631469727
    3. 'ues' → logprob: -7.930703163146973
    4. 'antes' → logprob: -8.805703163146973
    5. '   ' → logprob: -9.555703163146973
    6. 'e' → logprob: -9.680703163146973
    7. 'entes' → logprob: -9.805703163146973
    8. 'ans' → logprob: -10.680703163146973
    9. '```' → logprob: -10.930703163146973
    10. 'def' → logprob: -11.180703163146973

Token 851: ' dans' (ID: 2671)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020548192784190178
    2. 'result' → logprob: -4.770548343658447
    3. 'mask' → logprob: -5.895548343658447
    4. 'count' → logprob: -6.395548343658447
    5. 'bit' → logprob: -6.520548343658447
    6. 'bits' → logprob: -7.270548343658447
    7. ':' → logprob: -7.520548343658447
    8. '=' → logprob: -7.645548343658447
    9. 'int' → logprob: -7.770548343658447
    10. '           ' → logprob: -8.020547866821289

Token 852: ' l' (ID: 305)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0024575800634920597
    2. '(int' → logprob: -6.502457618713379
    3. 'range' → logprob: -7.752457618713379
    4. '[int' → logprob: -8.377457618713379
    5. ' int' → logprob: -8.502457618713379
    6. '   ' → logprob: -9.627457618713379
    7. 'the' → logprob: -12.002457618713379
    8. '
' → logprob: -12.002457618713379
    9. 'l' → logprob: -12.752457618713379
    10. ' range' → logprob: -12.752457618713379

Token 853: ''' (ID: 6)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.11348744481801987
    2. 'int' → logprob: -2.363487482070923
    3. 'ange' → logprob: -5.363487243652344
    4. 'interval' → logprob: -6.113487243652344
    5. '[int' → logprob: -6.238487243652344
    6. ' range' → logprob: -6.238487243652344
    7. 'e' → logprob: -6.613487243652344
    8. 'ent' → logprob: -7.863487243652344
    9. '(int' → logprob: -8.238487243652344
    10. 'et' → logprob: -9.613487243652344

Token 854: 'interval' (ID: 37558)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.21578539907932281
    2. 'int' → logprob: -1.9657853841781616
    3. 'interval' → logprob: -2.965785503387451
    4. 'ange' → logprob: -6.965785503387451
    5. ' range' → logprob: -7.340785503387451
    6. '[int' → logprob: -7.590785503387451
    7. '   ' → logprob: -8.590785026550293
    8. 'rang' → logprob: -10.215785026550293
    9. 'ent' → logprob: -10.465785026550293
    10. 't' → logprob: -10.840785026550293

Token 855: 'le' (ID: 282)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.25091660022735596
    2. 'le' → logprob: -2.5009164810180664
    3. 'e' → logprob: -2.7509164810180664
    4. 'v' → logprob: -2.7509164810180664
    5. 'vl' → logprob: -5.500916481018066
    6. 'vale' → logprob: -6.125916481018066
    7. 've' → logprob: -6.250916481018066
    8. 'vel' → logprob: -6.375916481018066
    9. 'al' → logprob: -7.375916481018066
    10. '[' → logprob: -7.375916481018066

Token 856: ' [' (ID: 723)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6025893092155457
    2. '       ' → logprob: -1.7275893688201904
    3. 'print' → logprob: -1.9775893688201904
    4. '(int' → logprob: -2.9775893688201904
    5. 'count' → logprob: -3.8525893688201904
    6. ' =' → logprob: -3.9775893688201904
    7. ' int' → logprob: -4.727589130401611
    8. '   ' → logprob: -4.977589130401611
    9. ' print' → logprob: -5.102589130401611
    10. '=int' → logprob: -5.477589130401611

Token 857: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -3.547789674485102e-05
    2. '(int' → logprob: -10.250035285949707
    3. ' int' → logprob: -17.000036239624023
    4. '[int' → logprob: -19.000036239624023
    5. '(' → logprob: -19.625036239624023
    6. '<int' → logprob: -21.375036239624023
    7. ',int' → logprob: -22.000036239624023
    8. '
' → logprob: -22.500036239624023
    9. '	int' → logprob: -23.625036239624023
    10. '=int' → logprob: -23.625036239624023

Token 858: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0017083751736208797
    2. 's' → logprob: -6.376708507537842
    3. 't' → logprob: -13.126708030700684
    4. '(t' → logprob: -14.251708030700684
    5. '   ' → logprob: -14.501708030700684
    6. 'e' → logprob: -14.626708030700684
    7. ']' → logprob: -14.876708030700684
    8. '(' → logprob: -15.126708030700684
    9. 'int' → logprob: -15.251708030700684
    10. '1' → logprob: -15.376708030700684

Token 859: ')-' (ID: 14080)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14487600326538086
    2. ')-' → logprob: -2.894876003265381
    3. '),' → logprob: -2.894876003265381
    4. ',' → logprob: -4.144876003265381
    5. ' -' → logprob: -5.894876003265381
    6. '-' → logprob: -6.019876003265381
    7. ' ,' → logprob: -6.644876003265381
    8. '(),' → logprob: -7.644876003265381
    9. '()-' → logprob: -7.644876003265381
    10. '()' → logprob: -7.769876003265381

Token 860: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0161630529910326
    2. ',' → logprob: -4.141162872314453
    3. ' ' → logprob: -9.391162872314453
    4. ' ,' → logprob: -10.141162872314453
    5. '0' → logprob: -13.266162872314453
    6. '-' → logprob: -13.391162872314453
    7. ',int' → logprob: -13.516162872314453
    8. 'int' → logprob: -14.641162872314453
    9. '```' → logprob: -15.391162872314453
    10. '   ' → logprob: -15.766162872314453

Token 861: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007631232030689716
    2. ' ,' → logprob: -5.132631301879883
    3. ',int' → logprob: -6.382631301879883
    4. ',
' → logprob: -12.257631301879883
    5. 'int' → logprob: -12.632631301879883
    6. ':int' → logprob: -15.257631301879883
    7. '```' → logprob: -15.382631301879883
    8. ' ,
' → logprob: -15.507631301879883
    9. '<int' → logprob: -15.882631301879883
    10. '(int' → logprob: -15.882631301879883

Token 862: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.006715370807796717
    2. ' int' → logprob: -5.006715297698975
    3. ',int' → logprob: -19.631715774536133
    4. '(int' → logprob: -20.006715774536133
    5. ':int' → logprob: -20.131715774536133
    6. '=int' → logprob: -20.506715774536133
    7. '   ' → logprob: -20.881715774536133
    8. '	int' → logprob: -21.631715774536133
    9. '
' → logprob: -21.881715774536133
    10. ']int' → logprob: -23.131715774536133

Token 863: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.008623793721199036
    2. 't' → logprob: -4.7586236000061035
    3. 'int' → logprob: -12.383624076843262
    4. '(int' → logprob: -13.008624076843262
    5. '(' → logprob: -13.383624076843262
    6. ' (' → logprob: -14.633624076843262
    7. ' t' → logprob: -15.508624076843262
    8. '	t' → logprob: -15.508624076843262
    9. '(
' → logprob: -16.133623123168945
    10. ')' → logprob: -16.258623123168945

Token 864: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0030345916748047
    2. ']' → logprob: -1.5030345916748047
    3. ']+' → logprob: -1.8780345916748047
    4. ')+' → logprob: -2.0030345916748047
    5. ')]' → logprob: -2.3780345916748047
    6. '+' → logprob: -4.253034591674805
    7. '])' → logprob: -4.753034591674805
    8. '()]' → logprob: -5.753034591674805
    9. ',' → logprob: -7.128034591674805
    10. ')])' → logprob: -7.628034591674805

Token 865: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0816183090209961
    2. ':' → logprob: -2.706618309020996
    3. '   ' → logprob: -4.956618309020996
    4. ':
' → logprob: -6.456618309020996
    5. '```' → logprob: -6.831618309020996
    6. '        
' → logprob: -8.331618309020996
    7. ',' → logprob: -8.706618309020996
    8. 'count' → logprob: -8.706618309020996
    9. 'result' → logprob: -8.831618309020996
    10. '           ' → logprob: -8.956618309020996

Token 866: ' cnt' (ID: 27340)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.10311465710401535
    2. 'bit' → logprob: -3.603114604949951
    3. 'bits' → logprob: -3.728114604949951
    4. 'mask' → logprob: -4.228114604949951
    5. 'result' → logprob: -4.603114604949951
    6. 'val' → logprob: -4.603114604949951
    7. 'x' → logprob: -5.853114604949951
    8. 'ans' → logprob: -6.228114604949951
    9. 'r' → logprob: -6.353114604949951
    10. 'a' → logprob: -6.478114604949951

Token 867: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06998534500598907
    2. '=' → logprob: -2.6949853897094727
    3. '_bits' → logprob: -11.069985389709473
    4. ' ' → logprob: -11.569985389709473
    5. 'bits' → logprob: -11.944985389709473
    6. '_' → logprob: -12.069985389709473
    7. '_bit' → logprob: -12.944985389709473
    8. '   ' → logprob: -13.319985389709473
    9. 'bit' → logprob: -13.819985389709473
    10. ',' → logprob: -13.819985389709473

Token 868: ' ' (ID: 220)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.02134576253592968
    2. 'find' → logprob: -4.021345615386963
    3. '0' → logprob: -5.771345615386963
    4. ' bin' → logprob: -9.896346092224121
    5. '(bin' → logprob: -11.021346092224121
    6. '(find' → logprob: -12.771346092224121
    7. ' find' → logprob: -13.896346092224121
    8. '/bin' → logprob: -14.021346092224121
    9. '   ' → logprob: -14.146346092224121
    10. 'pop' → logprob: -14.396346092224121

Token 869: '0' (ID: 15)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.6931880116462708
    2. 'bin' → logprob: -0.6931880116462708
    3. '(find' → logprob: -11.318187713623047
    4. '0' → logprob: -11.818187713623047
    5. ' bin' → logprob: -11.818187713623047
    6. '(bin' → logprob: -12.193187713623047
    7. ' find' → logprob: -12.318187713623047
    8. 'bit' → logprob: -13.818187713623047
    9. 'pop' → logprob: -14.068187713623047
    10. '/bin' → logprob: -14.693187713623047

Token 870: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1622716188430786
    2. 'mask' → logprob: -1.2872716188430786
    3. 'bits' → logprob: -1.2872716188430786
    4. '       ' → logprob: -3.287271499633789
    5. '
' → logprob: -3.412271499633789
    6. 'val' → logprob: -4.162271499633789
    7. 'bit' → logprob: -4.287271499633789
    8. '    
' → logprob: -4.912271499633789
    9. 'b' → logprob: -5.787271499633789
    10. ' bits' → logprob: -5.912271499633789

Token 871: '       ' (ID: 309)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.6515544056892395
    2. 'mask' → logprob: -1.1515543460845947
    3. '   ' → logprob: -3.6515543460845947
    4. 'val' → logprob: -3.7765543460845947
    5. 'bit' → logprob: -3.9015543460845947
    6. ' bits' → logprob: -4.026554584503174
    7. 'res' → logprob: -4.401554584503174
    8. ' mask' → logprob: -4.651554584503174
    9. 'b' → logprob: -5.276554584503174
    10. 'result' → logprob: -5.276554584503174

Token 872: ' bit' (ID: 3546)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.7958986163139343
    2. 'val' → logprob: -1.670898675918579
    3. 'bits' → logprob: -1.920898675918579
    4. 'mask' → logprob: -2.045898675918579
    5. 'bit' (adapté à ' bit') → logprob: -3.045898675918579
    6. 'x' → logprob: -3.920898675918579
    7. 'v' → logprob: -5.2958984375
    8. 'tmp' → logprob: -5.6708984375
    9. 'r' → logprob: -6.5458984375
    10. 'value' → logprob: -6.6708984375

Token 873: ' =' (ID: 314)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.047569625079631805
    2. 's' → logprob: -3.297569513320923
    3. 'set' → logprob: -4.922569751739502
    4. ' =' → logprob: -6.547569751739502
    5. '_mask' → logprob: -7.672569751739502
    6. '=' → logprob: -8.797569274902344
    7. 'm' → logprob: -9.297569274902344
    8. 'field' → logprob: -10.672569274902344
    9. 'map' → logprob: -11.172569274902344
    10. 'mas' → logprob: -12.172569274902344

Token 874: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.0025379674043506384
    2. ' find' → logprob: -6.002538204193115
    3. '1' → logprob: -10.127537727355957
    4. '(find' → logprob: -11.002537727355957
    5. '   ' → logprob: -13.252537727355957
    6. '0' → logprob: -13.752537727355957
    7. 'int' → logprob: -14.127537727355957
    8. ' ' → logprob: -14.377537727355957
    9. '	find' → logprob: -14.377537727355957
    10. '=find' → logprob: -15.377537727355957

Token 875: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -3.4121114822482923e-06
    2. 'int' → logprob: -13.250003814697266
    3. '(' → logprob: -13.500003814697266
    4. ' (' → logprob: -16.500003814697266
    5. '((' → logprob: -17.000003814697266
    6. '[int' → logprob: -17.750003814697266
    7. '(i' → logprob: -18.000003814697266
    8. '   ' → logprob: -18.375003814697266
    9. '(
' → logprob: -18.375003814697266
    10. '<int' → logprob: -18.875003814697266

Token 876: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.00026872646412812173
    2. '(int' → logprob: -8.625268936157227
    3. 's' → logprob: -9.750268936157227
    4. '(' → logprob: -10.750268936157227
    5. 'int' → logprob: -12.000268936157227
    6. '(t' → logprob: -13.875268936157227
    7. ' (' → logprob: -13.875268936157227
    8. '((' → logprob: -14.750268936157227
    9. '(
' → logprob: -15.000268936157227
    10. 't' → logprob: -15.625268936157227

Token 877: ')' (ID: 8)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3917217254638672
    2. ')' → logprob: -1.5167217254638672
    3. '()-' → logprob: -2.516721725463867
    4. ')-' → logprob: -4.016721725463867
    5. ' -' → logprob: -6.016721725463867
    6. '-' → logprob: -6.266721725463867
    7. '[' → logprob: -8.016721725463867
    8. '())' → logprob: -8.016721725463867
    9. '   ' → logprob: -8.391721725463867
    10. '1' → logprob: -8.766721725463867

Token 878: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4941294491291046
    2. '()-' → logprob: -1.3691294193267822
    3. ' -' → logprob: -2.2441294193267822
    4. '()' → logprob: -3.9941294193267822
    5. ')-' → logprob: -4.744129657745361
    6. ')' → logprob: -6.119129657745361
    7. '(' → logprob: -9.869129180908203
    8. '1' → logprob: -9.994129180908203
    9. ' ' → logprob: -10.744129180908203
    10. ''-' → logprob: -10.744129180908203

Token 879: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.625003814697266
    3. ',' → logprob: -15.625003814697266
    4. '```' → logprob: -16.375003814697266
    5. '   ' → logprob: -17.375003814697266
    6. '2' → logprob: -18.125003814697266
    7. '0' → logprob: -18.312503814697266
    8. '
' → logprob: -19.312503814697266
    9. '       ' → logprob: -19.625003814697266
    10. '１' → logprob: -19.812503814697266

Token 880: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1888679839321412e-05
    2. ' ' → logprob: -10.875021934509277
    3. 'int' → logprob: -13.625021934509277
    4. '   ' → logprob: -14.250021934509277
    5. '2' → logprob: -15.187521934509277
    6. '0' → logprob: -15.312521934509277
    7. ',' → logprob: -16.43752098083496
    8. '```' → logprob: -16.81252098083496
    9. '  ' → logprob: -17.06252098083496
    10. '       ' → logprob: -17.68752098083496

Token 881: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00415378762409091
    2. ',int' → logprob: -5.504153728485107
    3. ' ,' → logprob: -9.629154205322266
    4. 'int' → logprob: -11.629154205322266
    5. ',
' → logprob: -14.879154205322266
    6. '(int' → logprob: -15.754154205322266
    7. ' int' → logprob: -17.004154205322266
    8. '   ' → logprob: -17.879154205322266
    9. ',t' → logprob: -18.379154205322266
    10. '<int' → logprob: -18.504154205322266

Token 882: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -6.704273118884885e-07
    2. ' int' → logprob: -14.250000953674316
    3. '   ' → logprob: -20.125
    4. '(int' → logprob: -24.125
    5. '	int' → logprob: -24.25
    6. '    ' → logprob: -24.75
    7. '       ' → logprob: -24.75
    8. '           ' → logprob: -25.875
    9. '<int' → logprob: -26.0
    10. '=int' → logprob: -27.25

Token 883: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.08919528871774673
    2. 't' → logprob: -2.5891952514648438
    3. 'int' → logprob: -5.214195251464844
    4. '(int' → logprob: -5.339195251464844
    5. '(' → logprob: -11.964195251464844
    6. ' t' → logprob: -12.714195251464844
    7. ' (' → logprob: -12.839195251464844
    8. ' int' → logprob: -13.464195251464844
    9. '(
' → logprob: -15.589195251464844
    10. ')' → logprob: -15.964195251464844

Token 884: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3029884397983551
    2. ',' → logprob: -1.6779884099960327
    3. '),' → logprob: -2.6779885292053223
    4. ')-' → logprob: -6.052988529205322
    5. '   ' → logprob: -6.802988529205322
    6. ' ,' → logprob: -6.927988529205322
    7. ' -' → logprob: -7.302988529205322
    8. '-' → logprob: -7.802988529205322
    9. '       ' → logprob: -9.302988052368164
    10. ')
' → logprob: -9.427988052368164

Token 885: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '   ' → logprob: -18.5
    4. '۰' → logprob: -20.5
    5. '０' → logprob: -21.25
    6. '  ' → logprob: -22.125
    7. '    ' → logprob: -22.5
    8. '     ' → logprob: -22.5
    9. '       ' → logprob: -22.75
    10. '```' → logprob: -23.5

Token 886: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.25
    3. '   ' → logprob: -19.5
    4. '۰' → logprob: -19.875
    5. '０' → logprob: -21.0
    6. '00' → logprob: -22.6875
    7. '  ' → logprob: -22.8125
    8. '000' → logprob: -22.9375
    9. '=' → logprob: -22.9375
    10. '     ' → logprob: -23.0

Token 887: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.370294846012257e-05
    2. '0' → logprob: -10.875043869018555
    3. ' ,' → logprob: -11.125043869018555
    4. ')' → logprob: -11.875043869018555
    5. '   ' → logprob: -13.000043869018555
    6. '       ' → logprob: -15.250043869018555
    7. ',
' → logprob: -15.500043869018555
    8. '```' → logprob: -16.625043869018555
    9. ' ' → logprob: -16.875043869018555
    10. '1' → logprob: -17.000043869018555

Token 888: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.704065213445574e-05
    2. ' ' → logprob: -10.375046730041504
    3. 'd' → logprob: -11.500046730041504
    4. '   ' → logprob: -12.250046730041504
    5. '    ' → logprob: -15.750046730041504
    6. '       ' → logprob: -15.750046730041504
    7. '     ' → logprob: -15.875046730041504
    8. '  ' → logprob: -16.12504768371582
    9. '           ' → logprob: -16.75004768371582
    10. '      ' → logprob: -17.37504768371582

Token 889: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.36574100604048e-06
    2. ' ' → logprob: -12.375004768371582
    3. '   ' → logprob: -16.500003814697266
    4. 'd' → logprob: -17.125003814697266
    5. '00' → logprob: -17.750003814697266
    6. '000' → logprob: -18.125003814697266
    7. '  ' → logprob: -19.000003814697266
    8. '     ' → logprob: -19.125003814697266
    9. '    ' → logprob: -19.250003814697266
    10. '۰' → logprob: -19.375003814697266

Token 890: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003100791363976896
    2. ',d' → logprob: -8.375309944152832
    3. 'd' → logprob: -9.625309944152832
    4. ' ,' → logprob: -11.375309944152832
    5. '   ' → logprob: -13.250309944152832
    6. ',
' → logprob: -15.875309944152832
    7. '       ' → logprob: -16.87531089782715
    8. ' d' → logprob: -17.12531089782715
    9. ')' → logprob: -17.50031089782715
    10. '_,' → logprob: -18.25031089782715

Token 891: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -3.292907877039397e-06
    2. '   ' → logprob: -13.00000286102295
    3. ' d' → logprob: -14.00000286102295
    4. '       ' → logprob: -16.750003814697266
    5. '           ' → logprob: -18.250003814697266
    6. '     ' → logprob: -18.250003814697266
    7. '  ' → logprob: -19.125003814697266
    8. '    ' → logprob: -19.625003814697266
    9. '	d' → logprob: -20.000003814697266
    10. '      ' → logprob: -20.250003814697266

Token 892: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0017080175457522273
    2. ')
' → logprob: -6.376708030700684
    3. ')
' → logprob: -13.126708030700684
    4. ' )' → logprob: -13.376708030700684
    5. '   ' → logprob: -13.626708030700684
    6. ')`' → logprob: -14.751708030700684
    7. ').' → logprob: -15.626708030700684
    8. '))' → logprob: -16.126707077026367
    9. ')

' → logprob: -16.376707077026367
    10. ')#' → logprob: -16.376707077026367

Token 893: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26437756419181824
    2. 'while' → logprob: -1.7643775939941406
    3. ' while' → logprob: -3.1393775939941406
    4. ' for' → logprob: -4.639377593994141
    5. 'for' → logprob: -5.014377593994141
    6. '   ' → logprob: -7.514377593994141
    7. '
' → logprob: -7.639377593994141
    8. 'mask' → logprob: -9.26437759399414
    9. '```' → logprob: -9.76437759399414
    10. '	while' → logprob: -10.26437759399414

Token 894: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.07094056159257889
    2. '       ' → logprob: -2.6959404945373535
    3. 'for' → logprob: -7.4459404945373535
    4. 'cnt' → logprob: -8.195940971374512
    5. ' while' → logprob: -9.195940971374512
    6. '   ' → logprob: -10.945940971374512
    7. 'count' → logprob: -11.570940971374512
    8. 'temp' → logprob: -12.195940971374512
    9. 'mask' → logprob: -12.945940971374512
    10. 'tmp' → logprob: -13.320940971374512

Token 895: ' Comp' (ID: 5211)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0068957009352743626
    2. 'for' → logprob: -5.006895542144775
    3. 'cnt' → logprob: -8.881896018981934
    4. 'temp' → logprob: -11.006896018981934
    5. 'tmp' → logprob: -11.631896018981934
    6. '       ' → logprob: -12.006896018981934
    7. ' while' → logprob: -12.506896018981934
    8. 'count' → logprob: -13.131896018981934
    9. '   ' → logprob: -13.506896018981934
    10. 'mask' → logprob: -13.881896018981934

Token 896: 'te' (ID: 411)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35020801424980164
    2. '   ' → logprob: -2.350208044052124
    3. 'teur' → logprob: -3.225208044052124
    4. 'ute' → logprob: -3.350208044052124
    5. 't' → logprob: -3.475208044052124
    6. 'te' → logprob: -3.975208044052124
    7. 'ut' → logprob: -4.225207805633545
    8. 'while' → logprob: -4.350207805633545
    9. 'for' → logprob: -4.850207805633545
    10. 'cnt' → logprob: -4.975207805633545

Token 897: ' le' (ID: 505)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.7098506689071655
    2. '=' → logprob: -0.8348506689071655
    3. ' =' → logprob: -3.459850788116455
    4. '+=' → logprob: -3.834850788116455
    5. '       ' → logprob: -5.209850788116455
    6. 'cnt' → logprob: -5.834850788116455
    7. 'bin' → logprob: -5.959850788116455
    8. 'for' → logprob: -5.959850788116455
    9. '(bin' → logprob: -6.459850788116455
    10. ' +=' → logprob: -6.709850788116455

Token 898: ' nombre' (ID: 9733)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.2493002712726593
    2. 'while' → logprob: -2.249300241470337
    3. 'cnt' → logprob: -2.624300241470337
    4. 'bin' → logprob: -4.249300479888916
    5. '=' → logprob: -4.374300479888916
    6. 'nombre' → logprob: -5.499300479888916
    7. '   ' → logprob: -6.124300479888916
    8. 'b' → logprob: -6.499300479888916
    9. '1' → logprob: -6.624300479888916
    10. ' while' → logprob: -6.749300479888916

Token 899: ' de' (ID: 334)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8927804827690125
    2. '=' → logprob: -1.1427805423736572
    3. 'de' → logprob: -2.2677805423736572
    4. '+=' → logprob: -2.2677805423736572
    5. ' de' → logprob: -3.7677805423736572
    6. ' +=' → logprob: -3.8927805423736572
    7. ' =' → logprob: -4.392780303955078
    8. 'of' → logprob: -6.267780303955078
    9. ' of' → logprob: -7.142780303955078
    10. '   ' → logprob: -7.267780303955078

Token 900: ' bits' (ID: 18189)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.1099955216050148
    2. '1' → logprob: -2.9849956035614014
    3. 'bit' → logprob: -3.2349956035614014
    4. 'bits' → logprob: -4.734995365142822
    5. ' bin' → logprob: -6.609995365142822
    6. 'set' → logprob: -7.109995365142822
    7. '   ' → logprob: -7.109995365142822
    8. '```' → logprob: -7.484995365142822
    9. '(bin' → logprob: -7.734995365142822
    10. 'cnt' → logprob: -8.10999584197998

Token 901: ' à' (ID: 1221)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.30737218260765076
    2. 'set' → logprob: -2.4323720932006836
    3. '+=' → logprob: -2.4323720932006836
    4. '_set' → logprob: -3.8073720932006836
    5. 'while' → logprob: -3.8073720932006836
    6. ' =' → logprob: -4.057372093200684
    7. '       ' → logprob: -4.932372093200684
    8. ' set' → logprob: -5.557372093200684
    9. ' +=' → logprob: -5.932372093200684
    10. '1' → logprob: -6.182372093200684

Token 902: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002428813371807337
    2. 'bit' → logprob: -7.252429008483887
    3. '
' → logprob: -7.377429008483887
    4. '```' → logprob: -8.002429008483887
    5. ' ' → logprob: -8.377429008483887
    6. 'set' → logprob: -8.627429008483887
    7. 'on' → logprob: -8.877429008483887
    8. 'bin' → logprob: -10.002429008483887
    9. '   ' → logprob: -10.252429008483887
    10. ' set' → logprob: -10.627429008483887

Token 903: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010735384421423078
    2. '
' → logprob: -7.251073360443115
    3. 'set' → logprob: -9.001073837280273
    4. '```' → logprob: -9.126073837280273
    5. 'bit' → logprob: -9.501073837280273
    6. 'one' → logprob: -11.376073837280273
    7. '`' → logprob: -11.626073837280273
    8. '   ' → logprob: -11.876073837280273
    9. ' ' → logprob: -12.251073837280273
    10. 'on' → logprob: -12.251073837280273

Token 904: ' dans' (ID: 2671)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00959009863436222
    2. '
' → logprob: -5.259590148925781
    3. 'while' → logprob: -5.884590148925781
    4. ' while' → logprob: -7.259590148925781
    5. '   ' → logprob: -8.634590148925781
    6. '        
' → logprob: -8.884590148925781
    7. ' =' → logprob: -9.384590148925781
    8. '=' → logprob: -9.384590148925781
    9. ' for' → logprob: -9.884590148925781
    10. ',' → logprob: -10.134590148925781

Token 905: ' le' (ID: 505)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.16260439157485962
    2. 'bin' → logprob: -1.9126043319702148
    3. ' bit' → logprob: -6.162604331970215
    4. ' bin' → logprob: -8.287604331970215
    5. '   ' → logprob: -12.537604331970215
    6. 'b' → logprob: -12.662604331970215
    7. 'bits' → logprob: -12.787604331970215
    8. '(bit' → logprob: -13.162604331970215
    9. 'bitr' → logprob: -13.412604331970215
    10. '
' → logprob: -13.537604331970215

Token 906: ' résultat' (ID: 62556)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.0001987722353078425
    2. 'bin' → logprob: -8.750198364257812
    3. ' bit' → logprob: -10.125198364257812
    4. 'b' → logprob: -16.375198364257812
    5. 'bits' → logprob: -17.000198364257812
    6. 'bitr' → logprob: -17.000198364257812
    7. '(bit' → logprob: -17.000198364257812
    8. '   ' → logprob: -17.250198364257812
    9. '
' → logprob: -17.750198364257812
    10. 'bi' → logprob: -18.500198364257812

Token 907: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07823485881090164
    2. '
' → logprob: -3.078234910964966
    3. 'while' → logprob: -3.953234910964966
    4. 'for' → logprob: -5.953234672546387
    5. ' while' → logprob: -6.203234672546387
    6. ' for' → logprob: -6.328234672546387
    7. 'cnt' → logprob: -6.328234672546387
    8. '   ' → logprob: -8.203234672546387
    9. '        
' → logprob: -8.578234672546387
    10. 'count' → logprob: -8.703234672546387

Token 908: 'nombre' (ID: 28576)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.36028197407722473
    2. 'bit' → logprob: -1.3602819442749023
    3. ' bin' → logprob: -3.8602819442749023
    4. 'cnt' → logprob: -4.735281944274902
    5. ')' → logprob: -5.360281944274902
    6. ' bit' → logprob: -5.360281944274902
    7. '       ' → logprob: -6.110281944274902
    8. '
' → logprob: -6.235281944274902
    9. ')
' → logprob: -6.860281944274902
    10. 'while' → logprob: -7.485281944274902

Token 909: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2241571843624115
    2. ' =' → logprob: -2.2241570949554443
    3. '       ' → logprob: -2.7241570949554443
    4. '(bin' → logprob: -4.224157333374023
    5. '   ' → logprob: -5.724157333374023
    6. 'def' → logprob: -5.974157333374023
    7. 'de' → logprob: -6.724157333374023
    8. ' de' → logprob: -6.724157333374023
    9. '(bit' → logprob: -7.349157333374023
    10. 'of' → logprob: -7.349157333374023

Token 910: ' lettres' (ID: 101234)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.04434411972761154
    2. ' bin' → logprob: -3.419344186782837
    3. 'bit' → logprob: -5.169343948364258
    4. '   ' → logprob: -6.294343948364258
    5. '1' → logprob: -7.044343948364258
    6. ')' → logprob: -7.044343948364258
    7. 'bits' → logprob: -7.919343948364258
    8. 'pop' → logprob: -8.669343948364258
    9. ' bit' → logprob: -8.794343948364258
    10. 'b' → logprob: -8.919343948364258

Token 911: ' distinct' (ID: 16913)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.1328773498535156
    2. ' set' → logprob: -1.1328773498535156
    3. '=' → logprob: -2.0078773498535156
    4. 'set' → logprob: -2.7578773498535156
    5. ')' → logprob: -3.2578773498535156
    6. '   ' → logprob: -3.6328773498535156
    7. 'distinct' → logprob: -3.8828773498535156
    8. '_set' → logprob: -4.257877349853516
    9. '```' → logprob: -4.507877349853516
    10. '=set' → logprob: -4.507877349853516

Token 912: 'es' (ID: 268)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.33260637521743774
    2. 'es' → logprob: -2.332606315612793
    3. 's' → logprob: -2.957606315612793
    4. '       ' → logprob: -3.582606315612793
    5. ' ones' → logprob: -4.082606315612793
    6. '   ' → logprob: -4.457606315612793
    7. '+' → logprob: -4.457606315612793
    8. 'e' → logprob: -4.582606315612793
    9. ' set' → logprob: -4.707606315612793
    10. '=' → logprob: -4.707606315612793

Token 913: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2225746214389801
    2. ')
' → logprob: -1.8475745916366577
    3. ')' → logprob: -3.5975747108459473
    4. '
' → logprob: -4.347574710845947
    5. '        
' → logprob: -8.097574234008789
    6. '   ' → logprob: -8.347574234008789
    7. '
' → logprob: -8.847574234008789
    8. '):
' → logprob: -8.847574234008789
    9. ')
' → logprob: -8.847574234008789
    10. 'while' → logprob: -9.472574234008789

Token 914: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0023472192697227
    2. '
' → logprob: -6.252346992492676
    3. '   ' → logprob: -9.252346992492676
    4. ' for' → logprob: -9.877346992492676
    5. 'cnt' → logprob: -10.002346992492676
    6. 'count' → logprob: -10.252346992492676
    7. '	   ' → logprob: -10.502346992492676
    8. '```' → logprob: -10.627346992492676
    9. 'for' → logprob: -10.752346992492676
    10. 'while' → logprob: -10.752346992492676

Token 915: ' while' (ID: 2049)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.07936636358499527
    2. 'while' (adapté à ' while') → logprob: -2.579366445541382
    3. 'for' → logprob: -7.954366207122803
    4. ' cnt' → logprob: -10.454366683959961
    5. '       ' → logprob: -10.579366683959961
    6. '   ' → logprob: -10.704366683959961
    7. 'count' → logprob: -10.829366683959961
    8. ' while' → logprob: -11.204366683959961
    9. '
' → logprob: -12.829366683959961
    10. '        
' → logprob: -12.954366683959961

Token 916: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.0011703446507453918
    2. ' bit' → logprob: -6.7511701583862305
    3. '(bit' → logprob: -16.501171112060547
    4. 'bits' → logprob: -19.751171112060547
    5. 'b' → logprob: -20.251171112060547
    6. '   ' → logprob: -20.501171112060547
    7. 'Bit' → logprob: -20.751171112060547
    8. 'bitr' → logprob: -21.126171112060547
    9. ' ' → logprob: -21.376171112060547
    10. '_bit' → logprob: -21.626171112060547

Token 917: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.02130584977567196
    2. ':
' → logprob: -4.521306037902832
    3. '&gt' → logprob: -5.771306037902832
    4. '&' → logprob: -5.896306037902832
    5. ':' → logprob: -6.021306037902832
    6. '!=' → logprob: -6.521306037902832
    7. '   ' → logprob: -8.021306037902832
    8. '=' → logprob: -10.021306037902832
    9. '```' → logprob: -11.146306037902832
    10. '{' → logprob: -11.146306037902832

Token 918: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '   ' → logprob: -19.1250057220459
    4. '    ' → logprob: -21.3750057220459
    5. '       ' → logprob: -21.3750057220459
    6. '>' → logprob: -21.3750057220459
    7. '۰' → logprob: -21.7500057220459
    8. '           ' → logprob: -22.0000057220459
    9. '```' → logprob: -22.5000057220459
    10. '  ' → logprob: -22.7500057220459

Token 919: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. '   ' → logprob: -21.875
    4. '۰' → logprob: -22.0
    5. '00' → logprob: -24.0
    6. '```' → logprob: -24.0
    7. '٠' → logprob: -24.25
    8. '    ' → logprob: -24.25
    9. '
' → logprob: -25.0
    10. '000' → logprob: -25.25

Token 920: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.1849609911441803
    2. ':' → logprob: -1.809960961341858
    3. '           ' → logprob: -5.684960842132568
    4. '       ' → logprob: -6.559960842132568
    5. '   ' → logprob: -9.434961318969727
    6. '):
' → logprob: -9.559961318969727
    7. ':
' → logprob: -9.684961318969727
    8. ',' → logprob: -9.809961318969727
    9. ' bit' → logprob: -10.434961318969727
    10. '```' → logprob: -10.934961318969727

Token 921: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0012030890211462975
    2. '       ' → logprob: -6.8762030601501465
    3. '   ' → logprob: -9.501203536987305
    4. ' bit' → logprob: -10.126203536987305
    5. 'bit' → logprob: -10.501203536987305
    6. '```' → logprob: -11.126203536987305
    7. '	       ' → logprob: -12.626203536987305
    8. '          ' → logprob: -13.001203536987305
    9. '               ' → logprob: -13.251203536987305
    10. '``' → logprob: -13.376203536987305

Token 922: ' if' (ID: 538)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.055061809718608856
    2. '           ' → logprob: -3.1800618171691895
    3. ' bit' → logprob: -4.8050618171691895
    4. '       ' → logprob: -5.8050618171691895
    5. 'cnt' → logprob: -7.8050618171691895
    6. '               ' → logprob: -8.305061340332031
    7. 'count' → logprob: -9.680061340332031
    8. '   ' → logprob: -10.930061340332031
    9. '```' → logprob: -11.055061340332031
    10. 'bits' → logprob: -11.305061340332031

Token 923: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.004095377866178751
    2. ' bit' → logprob: -5.504095554351807
    3. '(bit' → logprob: -11.004095077514648
    4. '   ' → logprob: -15.379095077514648
    5. 'bitr' → logprob: -17.37909507751465
    6. 'b' → logprob: -17.37909507751465
    7. 'bits' → logprob: -18.25409507751465
    8. ' бит' → logprob: -18.37909507751465
    9. 'Bit' → logprob: -18.37909507751465
    10. ' ' → logprob: -18.37909507751465

Token 924: ' &' (ID: 827)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -8.911954500945285e-05
    2. ' &' → logprob: -10.000088691711426
    3. '&
' → logprob: -10.250088691711426
    4. '&amp' → logprob: -11.750088691711426
    5. '&nbsp' → logprob: -15.875088691711426
    6. '＆' → logprob: -16.250089645385742
    7. '   ' → logprob: -16.875089645385742
    8. '&A' → logprob: -17.750089645385742
    9. '&a' → logprob: -18.000089645385742
    10. '
' → logprob: -18.750089645385742

Token 925: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.173704271830502e-06
    2. ' ' → logprob: -13.00000286102295
    3. '(' → logprob: -14.25000286102295
    4. '-' → logprob: -15.62500286102295
    5. 'bit' → logprob: -16.750003814697266
    6. '(bit' → logprob: -16.875003814697266
    7. '   ' → logprob: -18.625003814697266
    8. ' bit' → logprob: -19.875003814697266
    9. ' (' → logprob: -19.875003814697266
    10. '
' → logprob: -20.000003814697266

Token 926: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.051066520740278e-05
    2. '(bit' → logprob: -10.375060081481934
    3. '(' → logprob: -11.125060081481934
    4. 'bit' → logprob: -11.500060081481934
    5. '-' → logprob: -12.500060081481934
    6. ' ' → logprob: -15.000060081481934
    7. ' bit' → logprob: -16.50006103515625
    8. '(b' → logprob: -16.62506103515625
    9. '(-' → logprob: -17.25006103515625
    10. ' (' → logprob: -17.75006103515625

Token 927: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7060174942016602
    2. '==' → logprob: -0.8310174942016602
    3. ':' → logprob: -3.08101749420166
    4. ' ==' → logprob: -4.33101749420166
    5. '           ' → logprob: -5.20601749420166
    6. '=' → logprob: -5.45601749420166
    7. '               ' → logprob: -7.45601749420166
    8. '==
' → logprob: -7.95601749420166
    9. '>' → logprob: -8.08101749420166
    10. '1' → logprob: -8.83101749420166

Token 928: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.47669005393981934
    2. '           ' → logprob: -0.9766900539398193
    3. 'cnt' → logprob: -6.351690292358398
    4. ' cnt' → logprob: -7.726690292358398
    5. '```' → logprob: -8.976690292358398
    6. '              ' → logprob: -9.351690292358398
    7. '	       ' → logprob: -9.976690292358398
    8. '       ' → logprob: -10.476690292358398
    9. '          ' → logprob: -10.476690292358398
    10. '                   ' → logprob: -11.101690292358398

Token 929: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -0.002508478006348014
    2. ' cnt' → logprob: -6.252508640289307
    3. '           ' → logprob: -7.877508640289307
    4. '               ' → logprob: -8.627508163452148
    5. 'count' → logprob: -11.877508163452148
    6. '   ' → logprob: -12.127508163452148
    7. '	cnt' → logprob: -12.502508163452148
    8. '       ' → logprob: -13.127508163452148
    9. 'counter' → logprob: -13.877508163452148
    10. '                   ' → logprob: -14.252508163452148

Token 930: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0052362410351634026
    2. ' +=' → logprob: -5.2552361488342285
    3. ']+=' → logprob: -13.130236625671387
    4. '+' → logprob: -15.880236625671387
    5. '           ' → logprob: -16.00523567199707
    6. '   ' → logprob: -16.25523567199707
    7. '=' → logprob: -17.00523567199707
    8. '       ' → logprob: -17.50523567199707
    9. '```' → logprob: -18.25523567199707
    10. '        ' → logprob: -18.50523567199707

Token 931: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.25001335144043
    3. '   ' → logprob: -19.50001335144043
    4. '```' → logprob: -20.62501335144043
    5. '
' → logprob: -21.37501335144043
    6. '  ' → logprob: -21.75001335144043
    7. ' ' → logprob: -22.50001335144043
    8. '１' → logprob: -22.75001335144043
    9. '    ' → logprob: -22.81251335144043
    10. '۱' → logprob: -23.06251335144043

Token 932: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. '   ' → logprob: -20.25
    4. '```' → logprob: -21.5
    5. '
' → logprob: -22.25
    6. '１' → logprob: -22.625
    7. '  ' → logprob: -23.125
    8. '۱' → logprob: -23.875
    9. '2' → logprob: -24.0625
    10. '       ' → logprob: -24.3125

Token 933: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21928560733795166
    2. '           ' → logprob: -1.7192856073379517
    3. 'bit' → logprob: -4.094285488128662
    4. ' bit' → logprob: -7.219285488128662
    5. '   ' → logprob: -8.46928596496582
    6. '```' → logprob: -9.71928596496582
    7. 'bitr' → logprob: -11.96928596496582
    8. '          ' → logprob: -11.96928596496582
    9. '      ' → logprob: -12.09428596496582
    10. 'bits' → logprob: -12.46928596496582

Token 934: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.24247987568378448
    2. '       ' → logprob: -1.742479920387268
    3. 'bit' → logprob: -3.2424798011779785
    4. '   ' → logprob: -7.3674798011779785
    5. ' bit' → logprob: -7.6174798011779785
    6. '```' → logprob: -10.742480278015137
    7. 'bitr' → logprob: -11.617480278015137
    8. '          ' → logprob: -12.992480278015137
    9. '               ' → logprob: -13.117480278015137
    10. 'b' → logprob: -13.242480278015137

Token 935: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' (adapté à ' bit') → logprob: -0.005235887598246336
    2. ' bit' → logprob: -5.25523567199707
    3. 'bitr' → logprob: -14.00523567199707
    4. '       ' → logprob: -14.13023567199707
    5. 'bits' → logprob: -16.25523567199707
    6. '-bit' → logprob: -16.38023567199707
    7. '           ' → logprob: -16.75523567199707
    8. '(bit' → logprob: -16.75523567199707
    9. 'b' → logprob: -16.88023567199707
    10. '   ' → logprob: -17.13023567199707

Token 936: ' //' (ID: 602)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.04339604079723358
    2. '=' → logprob: -3.29339599609375
    3. ' >>=' → logprob: -5.29339599609375
    4. '//=' → logprob: -8.29339599609375
    5. '   ' → logprob: -10.16839599609375
    6. '>' → logprob: -11.66839599609375
    7. '>>>' → logprob: -12.29339599609375
    8. ' =' → logprob: -12.54339599609375
    9. '```' → logprob: -12.79339599609375
    10. '    ' → logprob: -13.16839599609375

Token 937: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -3.547789674485102e-05
    2. '2' → logprob: -10.250035285949707
    3. '=
' → logprob: -17.875036239624023
    4. '=.' → logprob: -19.625036239624023
    5. '/=' → logprob: -19.875036239624023
    6. '=

' → logprob: -20.250036239624023
    7. '=}' → logprob: -20.375036239624023
    8. '=(' → logprob: -20.375036239624023
    9. '1' → logprob: -20.750036239624023
    10. '==' → logprob: -20.750036239624023

Token 938: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -14.250000953674316
    3. '10' → logprob: -15.250000953674316
    4. '=' → logprob: -18.375001907348633
    5. '   ' → logprob: -19.250001907348633
    6. '```' → logprob: -19.375001907348633
    7. '>' → logprob: -19.750001907348633
    8. '２' → logprob: -20.375001907348633
    9. '  ' → logprob: -22.000001907348633
    10. '[' → logprob: -22.750001907348633

Token 939: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.128163257315464e-07
    2. '10' → logprob: -15.375
    3. ' ' → logprob: -16.75
    4. '```' → logprob: -18.875
    5. '=' → logprob: -19.375
    6. '>' → logprob: -20.125
    7. '   ' → logprob: -20.375
    8. '２' → logprob: -21.125
    9. '۲' → logprob: -22.5
    10. '[' → logprob: -22.625

Token 940: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.025401853024959564
    2. '   ' → logprob: -3.9004018306732178
    3. ' print' → logprob: -6.025402069091797
    4. '       ' → logprob: -6.025402069091797
    5. '```' → logprob: -11.900402069091797
    6. '	print' → logprob: -12.525402069091797
    7. '<|end|>' → logprob: -12.900402069091797
    8. '
' → logprob: -14.025402069091797
    9. '           ' → logprob: -15.025402069091797
    10. '#print' → logprob: -15.525402069091797

Token 941: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11672405898571014
    2. 'print' → logprob: -2.3667240142822266
    3. '   ' → logprob: -4.116724014282227
    4. ' print' → logprob: -9.491724014282227
    5. '```' → logprob: -11.741724014282227
    6. '	print' → logprob: -15.366724014282227
    7. '           ' → logprob: -16.116724014282227
    8. '<|end|>' → logprob: -16.616724014282227
    9. 'Print' → logprob: -17.366724014282227
    10. '#print' → logprob: -17.366724014282227

Token 942: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00863324198871851
    2. '   ' → logprob: -5.008633136749268
    3. '       ' → logprob: -6.258633136749268
    4. ' print' → logprob: -13.258633613586426
    5. '```' → logprob: -15.258633613586426
    6. '	print' → logprob: -15.758633613586426
    7. '
' → logprob: -16.75863265991211
    8. '#print' → logprob: -19.13363265991211
    9. '    
' → logprob: -19.88363265991211
    10. '           ' → logprob: -20.25863265991211

Token 943: '(cnt' (ID: 102125)
  Prédit: '(cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cnt' → logprob: -1.1875571544806007e-05
    2. 'cnt' → logprob: -11.375011444091797
    3. '[cnt' → logprob: -15.500011444091797
    4. '(' → logprob: -16.375011444091797
    5. '(count' → logprob: -16.625011444091797
    6. '(ct' → logprob: -17.625011444091797
    7. '(cont' → logprob: -18.625011444091797
    8. '(cmd' → logprob: -19.500011444091797
    9. '	cnt' → logprob: -19.500011444091797
    10. '(
' → logprob: -19.750011444091797

Token 944: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. ')
' → logprob: -15.000000953674316
    3. ' )' → logprob: -15.125000953674316
    4. '())' → logprob: -18.75
    5. '   ' → logprob: -19.625
    6. '))' → logprob: -19.625
    7. ')}' → logprob: -19.625
    8. '')' → logprob: -19.75
    9. '()' → logprob: -19.875
    10. ')`' → logprob: -20.125


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 942
Tokens correctement prédits (1ère position, stricte): 269
Tokens correctement prédits (1ère position, avec adaptation): 293
Tokens correctement prédits (top 10): 666
Précision stricte (1ère position): 28.56%
Précision adaptée (1ère position): 31.10%
Précision (top 10): 70.70%
================================================================================
