================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:55:16
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from sys import stdout

def main():
    import sys

    N, K = map(int, sys.stdin.readline().split())
    max_extra = (N-1)*(N-2)//2
    if K > max_extra:
        print(-1)
        return

    edges = [(1, i) for i in range(2, N+1)]
    cnt = max_extra

    def edge_pairs():
        for i in range(2, N):
            for j in range(i+1, N+1):
                yield (i, j)

    for u, v in edge_pairs():
        if cnt == K:
            break
        edges.append((u, v))
        cnt -= 1

    print(len(edges))
    stdout.writelines(f"{u} {v}\n" for u, v in edges)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' stdout' (ID: 48014)
  Prédit: 'argv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'argv' → logprob: -0.08520080149173737
    2. ' argv' → logprob: -2.710200786590576
    3. 'exit' → logprob: -4.585200786590576
    4. ' exit' → logprob: -5.835200786590576
    5. 'stdout' → logprob: -6.960200786590576
    6. 'path' → logprob: -7.710200786590576
    7. 'stdin' → logprob: -8.210201263427734
    8. 'version' → logprob: -9.085201263427734
    9. 'import' → logprob: -9.460201263427734
    10. ' path' → logprob: -10.085201263427734

Token 4: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -5.574251918005757e-05
    2. '.
' → logprob: -11.250055313110352
    3. '.write' → logprob: -11.750055313110352
    4. 'import' → logprob: -11.875055313110352
    5. '\n' → logprob: -12.125055313110352
    6. '.print' → logprob: -12.250055313110352
    7. '.stdout' → logprob: -13.000055313110352
    8. '```' → logprob: -13.000055313110352
    9. '' → logprob: -13.500055313110352
    10. '.

' → logprob: -13.500055313110352

Token 5: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00015205175441224128
    2. '.write' → logprob: -9.250151634216309
    3. '.
' → logprob: -11.250151634216309
    4. 'import' → logprob: -11.625151634216309
    5. ',' → logprob: -11.750151634216309
    6. ';' → logprob: -12.250151634216309
    7. '.print' → logprob: -12.375151634216309
    8. 'print' → logprob: -12.375151634216309
    9. '' → logprob: -13.000151634216309
    10. '```' → logprob: -13.375151634216309

Token 6: ' main' (ID: 2758)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0026490248274058104
    2. ' write' → logprob: -6.752648830413818
    3. ' process' → logprob: -7.752648830413818
    4. ' print' → logprob: -8.127649307250977
    5. ' space' → logprob: -8.377649307250977
    6. ' hello' → logprob: -9.377649307250977
    7. ' ' → logprob: -9.627649307250977
    8. ' read' → logprob: -9.752649307250977
    9. ' main' → logprob: -10.377649307250977
    10. ' my' → logprob: -10.502649307250977

Token 7: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.24558883905410767
    2. '():' → logprob: -1.620588779449463
    3. ':' → logprob: -4.245588779449463
    4. '(:' → logprob: -5.245588779449463
    5. '(":' → logprob: -9.745589256286621
    6. '(
' → logprob: -9.870589256286621
    7. ' ():' → logprob: -9.870589256286621
    8. '):' → logprob: -9.995589256286621
    9. ' (' → logprob: -10.370589256286621
    10. '()' → logprob: -10.495589256286621

Token 8: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0076580960303545
    2. 'stdout' → logprob: -5.007658004760742
    3. '    
' → logprob: -8.632658004760742
    4. ' stdout' → logprob: -8.757658004760742
    5. '(stdout' → logprob: -9.007658004760742
    6. '    ' → logprob: -9.257658004760742
    7. '   ' → logprob: -9.507658004760742
    8. '```' → logprob: -9.632658004760742
    9. ' ' → logprob: -9.757658004760742
    10. '\' → logprob: -10.132658004760742

Token 9: ' import' (ID: 1588)
  Prédit: ' stdout'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' stdout' → logprob: -0.5251814723014832
    2. 'stdout' → logprob: -1.150181531906128
    3. '   ' → logprob: -2.775181531906128
    4. 'print' → logprob: -4.150181293487549
    5. ' print' → logprob: -4.900181293487549
    6. ' ' → logprob: -5.900181293487549
    7. ' pass' → logprob: -6.775181293487549
    8. '    ' → logprob: -7.525181293487549
    9. ' for' → logprob: -7.900181293487549
    10. 'pass' → logprob: -8.025181770324707

Token 10: ' sys' (ID: 12228)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.6700999140739441
    2. ' sys' → logprob: -0.7950999140739441
    3. ' math' → logprob: -3.920099973678589
    4. ' ' → logprob: -5.04509973526001
    5. ' json' → logprob: -5.42009973526001
    6. ' logging' → logprob: -6.17009973526001
    7. ' subprocess' → logprob: -7.17009973526001
    8. ' random' → logprob: -7.42009973526001
    9. ' io' → logprob: -7.54509973526001
    10. ' numpy' → logprob: -7.92009973526001

Token 11: '

' (ID: 279)
  Prédit: '.stdout'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.stdout' → logprob: -0.2520228624343872
    2. '.' → logprob: -1.6270228624343872
    3. 'stdout' → logprob: -5.127022743225098
    4. '.stdin' → logprob: -5.752022743225098
    5. '```' → logprob: -5.752022743225098
    6. '
' → logprob: -6.252022743225098
    7. '   ' → logprob: -6.377022743225098
    8. '.readline' → logprob: -6.377022743225098
    9. '<|end|>' → logprob: -6.627022743225098
    10. '.stderr' → logprob: -6.627022743225098

Token 12: '   ' (ID: 271)
  Prédit: '.stdout'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdout' → logprob: -0.7233913540840149
    2. '.' → logprob: -0.9733913540840149
    3. '   ' → logprob: -2.59839129447937
    4. 'stdout' → logprob: -3.34839129447937
    5. '```' → logprob: -4.598391532897949
    6. '.stdin' → logprob: -6.223391532897949
    7. '    ' → logprob: -6.473391532897949
    8. ''s' → logprob: -6.598391532897949
    9. '[' → logprob: -6.723391532897949
    10. 'newline' → logprob: -6.973391532897949

Token 13: ' N' (ID: 478)
  Prédit: 'stdout'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stdout' → logprob: -0.09855574369430542
    2. ' stdout' → logprob: -2.97355580329895
    3. 'sys' → logprob: -4.223555564880371
    4. ' for' → logprob: -4.848555564880371
    5. 'for' → logprob: -5.223555564880371
    6. '   ' → logprob: -5.223555564880371
    7. 'stdin' → logprob: -5.723555564880371
    8. ' sys' → logprob: -6.223555564880371
    9. 'print' → logprob: -6.973555564880371
    10. 'argv' → logprob: -7.723555564880371

Token 14: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13354124128818512
    2. '=' → logprob: -2.5085413455963135
    3. ' ' → logprob: -3.6335413455963135
    4. '.' → logprob: -4.758541107177734
    5. ',' → logprob: -5.883541107177734
    6. '_' → logprob: -6.008541107177734
    7. '  ' → logprob: -6.633541107177734
    8. '   ' → logprob: -7.258541107177734
    9. ')' → logprob: -7.883541107177734
    10. '=int' → logprob: -8.883541107177734

Token 15: ' K' (ID: 658)
  Prédit: ' K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.5489813089370728
    2. ' M' → logprob: -1.0489813089370728
    3. ' ' → logprob: -3.423981189727783
    4. 'K' → logprob: -3.923981189727783
    5. 'M' → logprob: -4.673981189727783
    6. 'input' → logprob: -5.923981189727783
    7. ' input' → logprob: -6.048981189727783
    8. ' =' → logprob: -6.548981189727783
    9. ' T' → logprob: -8.048981666564941
    10. '  ' → logprob: -8.048981666564941

Token 16: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.428805947303772
    2. '=' → logprob: -1.053805947303772
    3. ',' → logprob: -9.42880630493164
    4. '<|end|>' → logprob: -11.42880630493164
    5. ')' → logprob: -12.17880630493164
    6. ' ' → logprob: -12.55380630493164
    7. '=int' → logprob: -14.30380630493164
    8. '=input' → logprob: -14.67880630493164
    9. '```' → logprob: -14.80380630493164
    10. ' ,' → logprob: -14.92880630493164

Token 17: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.011493625119328499
    2. 'map' → logprob: -5.011493682861328
    3. ' sys' → logprob: -5.386493682861328
    4. ' list' → logprob: -9.636493682861328
    5. ' ' → logprob: -10.261493682861328
    6. ' input' → logprob: -10.511493682861328
    7. ' [' → logprob: -10.636493682861328
    8. ' tuple' → logprob: -11.261493682861328
    9. 'sys' → logprob: -11.636493682861328
    10. ' ' → logprob: -12.886493682861328

Token 18: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3426401913166046
    2. '(int' → logprob: -1.8426401615142822
    3. '(str' → logprob: -2.3426401615142822
    4. '(lambda' → logprob: -3.4676401615142822
    5. '<|end|>' → logprob: -6.217640399932861
    6. '(
' → logprob: -7.967640399932861
    7. '()' → logprob: -8.342639923095703
    8. '('' → logprob: -8.842639923095703
    9. '(user' → logprob: -8.842639923095703
    10. ' (' → logprob: -8.967639923095703

Token 19: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010332259349524975
    2. '(' → logprob: -5.510332107543945
    3. '(sys' → logprob: -5.510332107543945
    4. ' ,' → logprob: -7.260332107543945
    5. ',input' → logprob: -7.385332107543945
    6. '(input' → logprob: -8.135332107543945
    7. ')' → logprob: -8.260332107543945
    8. '(stdin' → logprob: -8.635332107543945
    9. 'input' → logprob: -10.510332107543945
    10. '(stdout' → logprob: -11.010332107543945

Token 20: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.21457204222679138
    2. ' input' → logprob: -1.9645720720291138
    3. 'sys' → logprob: -3.339571952819824
    4. 'input' → logprob: -4.089571952819824
    5. ' stdin' → logprob: -7.964571952819824
    6. 'stdin' → logprob: -8.839571952819824
    7. ')' → logprob: -9.839571952819824
    8. ' )' → logprob: -10.339571952819824
    9. ' ' → logprob: -10.339571952819824
    10. '(sys' → logprob: -10.464571952819824

Token 21: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.049766626209020615
    2. '.argv' → logprob: -3.0497665405273438
    3. '.' → logprob: -6.924766540527344
    4. '.stdout' → logprob: -9.174766540527344
    5. '.readline' → logprob: -9.674766540527344
    6. ' .' → logprob: -10.924766540527344
    7. '.std' → logprob: -12.174766540527344
    8. '.input' → logprob: -13.174766540527344
    9. 'stdin' → logprob: -13.799766540527344
    10. '.stderr' → logprob: -13.924766540527344

Token 22: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0006576312007382512
    2. '.read' → logprob: -7.375657558441162
    3. '.' → logprob: -10.50065803527832
    4. '.readlines' → logprob: -12.87565803527832
    5. ').' → logprob: -14.87565803527832
    6. '.buffer' → logprob: -15.25065803527832
    7. ' .' → logprob: -15.87565803527832
    8. ')' → logprob: -16.37565803527832
    9. '().' → logprob: -17.12565803527832
    10. '.write' → logprob: -17.12565803527832

Token 23: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.5180720686912537
    2. '().' → logprob: -1.1430721282958984
    3. '()' → logprob: -2.5180721282958984
    4. '()[' → logprob: -6.268072128295898
    5. '()))' → logprob: -6.893072128295898
    6. '('' → logprob: -7.268072128295898
    7. '(' → logprob: -7.643072128295898
    8. ')' → logprob: -8.143072128295898
    9. ' ())' → logprob: -9.393072128295898
    10. '(),' → logprob: -9.518072128295898

Token 24: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.25262296199798584
    2. 'split' → logprob: -1.7526229619979858
    3. 'rstrip' → logprob: -3.0026230812072754
    4. 'read' → logprob: -8.252622604370117
    5. 'decode' → logprob: -13.502622604370117
    6. ' strip' → logprob: -14.252622604370117
    7. 'rs' → logprob: -14.502622604370117
    8. ' split' → logprob: -15.252622604370117
    9. ')' → logprob: -15.502622604370117
    10. 'rst' → logprob: -16.127622604370117

Token 25: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07433294504880905
    2. '))' → logprob: -2.8243329524993896
    3. '())' → logprob: -4.4493327140808105
    4. '()' → logprob: -7.9493327140808105
    5. '()))' → logprob: -8.324333190917969
    6. ')))' → logprob: -13.574333190917969
    7. '),' → logprob: -13.824333190917969
    8. '(' → logprob: -13.824333190917969
    9. ')
' → logprob: -14.199333190917969
    10. ' )' → logprob: -14.324333190917969

Token 26: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.063570261001587
    2. '<|end|>' → logprob: -1.063570261001587
    3. '
' → logprob: -1.438570261001587
    4. ')' → logprob: -3.688570261001587
    5. '    
' → logprob: -4.188570022583008
    6. ' 
' → logprob: -4.688570022583008
    7. ' ' → logprob: -4.938570022583008
    8. '\n' → logprob: -5.438570022583008
    9. '<|end|>' → logprob: -6.063570022583008
    10. 'newline' → logprob: -6.313570022583008

Token 27: ' max' (ID: 2999)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1712099313735962
    2. '\n' → logprob: -1.9212099313735962
    3. ' 
' → logprob: -1.9212099313735962
    4. ' ' → logprob: -2.2962098121643066
    5. '    
' → logprob: -2.4212098121643066
    6. '
' → logprob: -2.7962098121643066
    7. 'newline' → logprob: -3.6712098121643066
    8. '<|end|>' → logprob: -4.046209812164307
    9. ')' → logprob: -4.546209812164307
    10. '    ' → logprob: -4.671209812164307

Token 28: '_extra' (ID: 77451)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sum' → logprob: -1.1515913009643555
    2. '_' → logprob: -1.5265913009643555
    3. '_val' → logprob: -1.5265913009643555
    4. '_value' → logprob: -1.9015913009643555
    5. '_length' → logprob: -3.9015913009643555
    6. '_count' → logprob: -4.1515913009643555
    7. '_len' → logprob: -4.2765913009643555
    8. '_num' → logprob: -4.2765913009643555
    9. '_score' → logprob: -5.1515913009643555
    10. '_diff' → logprob: -5.5265913009643555

Token 29: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5226555466651917
    2. '_' → logprob: -1.3976554870605469
    3. '_points' → logprob: -3.272655487060547
    4. ' =' → logprob: -3.772655487060547
    5. '_length' → logprob: -3.897655487060547
    6. '_tokens' → logprob: -4.397655487060547
    7. '_space' → logprob: -4.772655487060547
    8. '_s' → logprob: -5.772655487060547
    9. '_c' → logprob: -5.897655487060547
    10. '_spaces' → logprob: -5.897655487060547

Token 30: ' (' (ID: 350)
  Prédit: ' K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.4696701169013977
    2. 'K' → logprob: -1.969670057296753
    3. ' N' → logprob: -2.344670057296753
    4. ' min' → logprob: -2.844670057296753
    5. 'N' → logprob: -3.469670057296753
    6. ' ' → logprob: -3.969670057296753
    7. 'min' → logprob: -4.469670295715332
    8. ' [' → logprob: -5.594670295715332
    9. ' (' → logprob: -5.719670295715332
    10. ' max' → logprob: -6.219670295715332

Token 31: 'N' (ID: 45)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.468677818775177
    2. 'N' → logprob: -1.5936777591705322
    3. ' K' → logprob: -2.0936777591705322
    4. ' N' → logprob: -3.8436777591705322
    5. '1' → logprob: -4.343677997589111
    6. '10' → logprob: -5.718677997589111
    7. ' ' → logprob: -5.843677997589111
    8. 'min' → logprob: -6.718677997589111
    9. ' (' → logprob: -6.843677997589111
    10. '100' → logprob: -7.218677997589111

Token 32: '-' (ID: 12)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.6368233561515808
    2. '-' → logprob: -0.8868233561515808
    3. '+' → logprob: -3.8868234157562256
    4. ' +' → logprob: -4.3868231773376465
    5. ' //' → logprob: -4.3868231773376465
    6. '*' → logprob: -5.1368231773376465
    7. ' *' → logprob: -5.7618231773376465
    8. '//' → logprob: -6.2618231773376465
    9. ')' → logprob: -7.0118231773376465
    10. ' )' → logprob: -7.1368231773376465

Token 33: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2266627848148346
    2. 'K' → logprob: -1.7266627550125122
    3. ' ' → logprob: -4.351662635803223
    4. ' K' → logprob: -4.476662635803223
    5. '2' → logprob: -8.164162635803223
    6. ')' → logprob: -9.539162635803223
    7. '(K' → logprob: -10.101662635803223
    8. '   ' → logprob: -10.164162635803223
    9. '3' → logprob: -10.664162635803223
    10. '-' → logprob: -10.664162635803223

Token 34: ')*(' (ID: 44406)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.015359592624008656
    2. ')*' → logprob: -4.265359401702881
    3. ')//' → logprob: -7.515359401702881
    4. ' )' → logprob: -8.390359878540039
    5. '+' → logprob: -9.390359878540039
    6. '-' → logprob: -9.390359878540039
    7. ')*(' → logprob: -10.015359878540039
    8. '*' → logprob: -10.265359878540039
    9. ')>>' → logprob: -10.265359878540039
    10. '//' → logprob: -10.640359878540039

Token 35: 'N' (ID: 45)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.05291064456105232
    2. 'N' → logprob: -3.052910566329956
    3. ' K' → logprob: -5.927910804748535
    4. '10' → logprob: -7.552910804748535
    5. ' ' → logprob: -8.552910804748535
    6. '2' → logprob: -8.677910804748535
    7. ' N' → logprob: -8.802910804748535
    8. '1' → logprob: -8.927910804748535
    9. '100' → logprob: -9.427910804748535
    10. ')' → logprob: -9.802910804748535

Token 36: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0013449963880702853
    2. ' -' → logprob: -6.626345157623291
    3. ')' → logprob: -11.126344680786133
    4. ')-' → logprob: -13.876344680786133
    5. '+' → logprob: -14.376344680786133
    6. '//' → logprob: -14.501344680786133
    7. '<|end|>' → logprob: -14.501344680786133
    8. ' ' → logprob: -14.626344680786133
    9. '-)' → logprob: -14.876344680786133
    10. '1' → logprob: -15.501344680786133

Token 37: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.029796430841088295
    2. '2' → logprob: -3.5297963619232178
    3. ' ' → logprob: -11.467296600341797
    4. '   ' → logprob: -11.779796600341797
    5. '```' → logprob: -11.779796600341797
    6. '3' → logprob: -11.967296600341797
    7. '-' → logprob: -12.529796600341797
    8. '  ' → logprob: -13.029796600341797
    9. '
' → logprob: -14.342296600341797
    10. '``' → logprob: -14.467296600341797

Token 38: ')//' (ID: 60375)
  Prédit: ')//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')//' → logprob: -0.4458550214767456
    2. ')' → logprob: -1.0708550214767456
    3. '//' → logprob: -4.320855140686035
    4. ' )' → logprob: -5.695855140686035
    5. ' //' → logprob: -8.195855140686035
    6. ')/' → logprob: -9.945855140686035
    7. ')>>' → logprob: -11.570855140686035
    8. ')#' → logprob: -11.695855140686035
    9. '   ' → logprob: -12.695855140686035
    10. '))' → logprob: -13.195855140686035

Token 39: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.7133641196996905e-05
    2. ' ' → logprob: -11.12502670288086
    3. '1' → logprob: -11.37502670288086
    4. '   ' → logprob: -15.12502670288086
    5. '```' → logprob: -15.81252670288086
    6. '3' → logprob: -16.06252670288086
    7. '  ' → logprob: -16.18752670288086
    8. '4' → logprob: -16.56252670288086
    9. '6' → logprob: -17.12502670288086
    10. '.' → logprob: -17.37502670288086

Token 40: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8866047859191895
    2. '<|end|>' → logprob: -0.8866047859191895
    3. '
' → logprob: -2.5116047859191895
    4. ')' → logprob: -3.0116047859191895
    5. '<|end|>' → logprob: -4.6366047859191895
    6. '\n' → logprob: -4.7616047859191895
    7. '    
' → logprob: -4.7616047859191895
    8. ':' → logprob: -5.2616047859191895
    9. ' ' → logprob: -6.0116047859191895
    10. ',' → logprob: -6.1366047859191895

Token 41: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17104558646678925
    2. '<|end|>' → logprob: -2.2960455417633057
    3. ')' → logprob: -4.046045780181885
    4. '
' → logprob: -4.171045780181885
    5. '    
' → logprob: -4.546045780181885
    6. ' ' → logprob: -5.671045780181885
    7. '<|end|>' → logprob: -6.046045780181885
    8. '  ' → logprob: -6.796045780181885
    9. ' 
' → logprob: -6.796045780181885
    10. ',' → logprob: -7.046045780181885

Token 42: ' if' (ID: 538)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8179581761360168
    2. '   ' → logprob: -1.317958116531372
    3. '<|end|>' → logprob: -1.442958116531372
    4. '    
' → logprob: -3.942958116531372
    5. '  
' → logprob: -5.067958354949951
    6. ')' → logprob: -5.442958354949951
    7. '\n' → logprob: -5.567958354949951
    8. ' 
' → logprob: -5.942958354949951
    9. ' if' → logprob: -5.942958354949951
    10. 'if' (adapté à ' if') → logprob: -6.067958354949951

Token 43: ' K' (ID: 658)
  Prédit: ' K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.06338080763816833
    2. 'K' → logprob: -2.813380718231201
    3. ' ' → logprob: -6.688380718231201
    4. ' max' → logprob: -9.68838119506836
    5. ' (' → logprob: -10.18838119506836
    6. 'max' → logprob: -10.56338119506836
    7. ' ' → logprob: -11.06338119506836
    8. ' not' → logprob: -12.18838119506836
    9. '<|end|>' → logprob: -12.68838119506836
    10. '	K' → logprob: -12.93838119506836

Token 44: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.3509492874145508
    2. '>' → logprob: -1.2259492874145508
    3. ' <=' → logprob: -6.475949287414551
    4. '<=' → logprob: -7.475949287414551
    5. '<' → logprob: -8.85094928741455
    6. ' <' → logprob: -9.22594928741455
    7. ' ' → logprob: -9.47594928741455
    8. '==' → logprob: -10.47594928741455
    9. ' ==' → logprob: -10.97594928741455
    10. '>=' → logprob: -12.85094928741455

Token 45: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.3893727958202362
    2. ' max' → logprob: -1.1393728256225586
    3. '(max' → logprob: -7.139372825622559
    4. 'N' → logprob: -7.389372825622559
    5. ' N' → logprob: -7.514372825622559
    6. ' (' → logprob: -8.264372825622559
    7. ' ' → logprob: -8.889372825622559
    8. '(N' → logprob: -10.139372825622559
    9. '(' → logprob: -10.764372825622559
    10. '	max' → logprob: -10.889372825622559

Token 46: '_extra' (ID: 77451)
  Prédit: '_extra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_extra' → logprob: -1.0683535037969705e-05
    2. '_' → logprob: -12.12501049041748
    3. ' _' → logprob: -13.50001049041748
    4. '_EXTRA' → logprob: -13.62501049041748
    5. '```' → logprob: -14.25001049041748
    6. 'Extra' → logprob: -14.75001049041748
    7. ')_' → logprob: -15.12501049041748
    8. '_ex' → logprob: -15.62501049041748
    9. 'extra' → logprob: -15.62501049041748
    10. '_exc' → logprob: -15.87501049041748

Token 47: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1380394846200943
    2. '+' → logprob: -2.8880395889282227
    3. ' :' → logprob: -3.3880395889282227
    4. ' +' → logprob: -3.6380395889282227
    5. '+:' → logprob: -4.513039588928223
    6. ':
' → logprob: -6.638039588928223
    7. ' or' → logprob: -8.138039588928223
    8. ':return' → logprob: -8.638039588928223
    9. ' ' → logprob: -9.013039588928223
    10. ' :
' → logprob: -9.513039588928223

Token 48: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3148657977581024
    2. '   ' → logprob: -1.6898658275604248
    3. ':' → logprob: -2.689865827560425
    4. ':
' → logprob: -4.939865589141846
    5. '\n' → logprob: -5.439865589141846
    6. 'stdout' → logprob: -6.814865589141846
    7. ' print' → logprob: -7.189865589141846
    8. ' or' → logprob: -7.564865589141846
    9. '.stdout' → logprob: -7.564865589141846
    10. '```' → logprob: -8.064866065979004

Token 49: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7115952372550964
    2. ' print' → logprob: -1.7115952968597412
    3. '       ' → logprob: -1.9615952968597412
    4. 'stdout' → logprob: -2.336595296859741
    5. 'print' (adapté à ' print') → logprob: -2.711595296859741
    6. ' stdout' → logprob: -4.086595058441162
    7. '    ' → logprob: -5.711595058441162
    8. '```' → logprob: -6.586595058441162
    9. '.stdout' → logprob: -7.211595058441162
    10. ' ' → logprob: -8.39909553527832

Token 50: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.01612481102347374
    2. '-' → logprob: -4.516124725341797
    3. '(' → logprob: -5.391124725341797
    4. '("-' → logprob: -8.391124725341797
    5. '("' → logprob: -8.516124725341797
    6. '   ' → logprob: -11.141124725341797
    7. ' -' → logprob: -11.516124725341797
    8. '(
' → logprob: -11.641124725341797
    9. '```' → logprob: -11.891124725341797
    10. ' (-' → logprob: -12.141124725341797

Token 51: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -14.250000953674316
    3. ')' → logprob: -16.000001907348633
    4. '2' → logprob: -16.250001907348633
    5. '```' → logprob: -16.750001907348633
    6. '１' → logprob: -17.500001907348633
    7. '-' → logprob: -17.625001907348633
    8. '10' → logprob: -18.125001907348633
    9. '11' → logprob: -18.187501907348633
    10. '_' → logprob: -18.312501907348633

Token 52: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2521952688694
    2. ')' → logprob: -1.5021952390670776
    3. '   ' → logprob: -8.502195358276367
    4. ')
' → logprob: -10.002195358276367
    5. ')return' → logprob: -12.127195358276367
    6. '       ' → logprob: -12.252195358276367
    7. ')

' → logprob: -12.752195358276367
    8. ' )
' → logprob: -13.752195358276367
    9. '')
' → logprob: -14.502195358276367
    10. ')')
' → logprob: -14.752195358276367

Token 53: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04346418380737305
    2. '   ' → logprob: -3.168464183807373
    3. '
' → logprob: -8.168464660644531
    4. '        
' → logprob: -10.293464660644531
    5. '    
' → logprob: -10.418464660644531
    6. ' ' → logprob: -10.668464660644531
    7. '```' → logprob: -11.293464660644531
    8. 'return' → logprob: -11.668464660644531
    9. '     ' → logprob: -11.793464660644531
    10. ' return' → logprob: -11.793464660644531

Token 54: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00534855155274272
    2. '   ' → logprob: -5.5053486824035645
    3. '
' → logprob: -7.5053486824035645
    4. 'return' (adapté à ' return') → logprob: -8.130348205566406
    5. ' return' → logprob: -8.255348205566406
    6. '	return' → logprob: -9.505348205566406
    7. '	' → logprob: -11.005348205566406
    8. ' ' → logprob: -11.130348205566406
    9. '    ' → logprob: -11.255348205566406
    10. '           ' → logprob: -11.505348205566406

Token 55: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5452379584312439
    2. '    
' → logprob: -1.6702380180358887
    3. '   ' → logprob: -2.2952380180358887
    4. '<|end|>' → logprob: -2.4202380180358887
    5. '  
' → logprob: -3.7952380180358887
    6. ' 
' → logprob: -4.920238018035889
    7. '   
' → logprob: -5.170238018035889
    8. '\n' → logprob: -5.795238018035889
    9. 'newline' → logprob: -7.045238018035889
    10. '<|end|>' → logprob: -7.545238018035889

Token 56: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.25982487201690674
    2. '    
' → logprob: -2.259824752807617
    3. '   ' → logprob: -2.384824752807617
    4. '  
' → logprob: -4.134824752807617
    5. ' 
' → logprob: -5.134824752807617
    6. '   
' → logprob: -5.509824752807617
    7. '<|end|>' → logprob: -5.884824752807617
    8. '\n' → logprob: -7.009824752807617
    9. '    
    
' → logprob: -7.884824752807617
    10. 'stdout' → logprob: -8.009824752807617

Token 57: ' edges' (ID: 22569)
  Prédit: 'stdout'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stdout' → logprob: -0.34230417013168335
    2. 'print' → logprob: -1.5923042297363281
    3. '   ' → logprob: -2.842304229736328
    4. ' stdout' → logprob: -4.717304229736328
    5. ' print' → logprob: -4.842304229736328
    6. 'edges' (adapté à ' edges') → logprob: -5.217304229736328
    7. '```' → logprob: -5.842304229736328
    8. ' edges' → logprob: -6.717304229736328
    9. '    
' → logprob: -8.467304229736328
    10. 'graph' → logprob: -8.467304229736328

Token 58: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00012511172099038959
    2. '=' → logprob: -9.00012493133545
    3. '=[]' → logprob: -14.00012493133545
    4. ' ' → logprob: -14.62512493133545
    5. ' =[' → logprob: -16.375125885009766
    6. ' =
' → logprob: -17.000125885009766
    7. ' []' → logprob: -17.125125885009766
    8. '[]' → logprob: -17.375125885009766
    9. '_' → logprob: -17.875125885009766
    10. ' =)' → logprob: -18.625125885009766

Token 59: ' [(' (ID: 43900)
  Prédit: ' [('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [(' → logprob: -0.12551307678222656
    2. ' []' → logprob: -2.8755130767822266
    3. '[(' → logprob: -3.0005130767822266
    4. ' [[' → logprob: -5.000513076782227
    5. '[]' → logprob: -6.375513076782227
    6. ' [' → logprob: -6.500513076782227
    7. ' ["' → logprob: -7.375513076782227
    8. '[[' → logprob: -8.000513076782227
    9. ' ['' → logprob: -8.250513076782227
    10. ' ' → logprob: -8.375513076782227

Token 60: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0765242874622345
    2. '1' → logprob: -3.451524257659912
    3. '(i' → logprob: -3.451524257659912
    4. 'i' → logprob: -5.451524257659912
    5. '0' → logprob: -5.701524257659912
    6. ' (' → logprob: -6.326524257659912
    7. ')' → logprob: -7.576524257659912
    8. '   ' → logprob: -8.95152473449707
    9. ' ' → logprob: -9.57652473449707
    10. '(n' → logprob: -10.32652473449707

Token 61: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005662570474669337
    2. ' ,' → logprob: -7.500566482543945
    3. ',
' → logprob: -12.375566482543945
    4. '2' → logprob: -12.500566482543945
    5. ',

' → logprob: -13.500566482543945
    6. ',)' → logprob: -14.375566482543945
    7. ',i' → logprob: -14.500566482543945
    8. '   ' → logprob: -14.500566482543945
    9. '1' → logprob: -14.750566482543945
    10. ')' → logprob: -15.000566482543945

Token 62: ' i' (ID: 575)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5788381099700928
    2. 'i' → logprob: -0.8288381099700928
    3. ' i' → logprob: -6.328838348388672
    4. ' ' → logprob: -7.453838348388672
    5. 'N' → logprob: -7.828838348388672
    6. 'n' → logprob: -10.078838348388672
    7. ')' → logprob: -10.453838348388672
    8. '   ' → logprob: -10.578838348388672
    9. ' N' → logprob: -11.953838348388672
    10. 'j' → logprob: -12.453838348388672

Token 63: ')' (ID: 8)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06387947499752045
    2. ')' → logprob: -3.0638794898986816
    3. ' +' → logprob: -4.188879489898682
    4. ' ' → logprob: -12.313879013061523
    5. ' )' → logprob: -12.563879013061523
    6. '   ' → logprob: -13.938879013061523
    7. '2' → logprob: -14.063879013061523
    8. '+)' → logprob: -14.438879013061523
    9. ')
' → logprob: -14.751379013061523
    10. '  ' → logprob: -15.188879013061523

Token 64: ' for' (ID: 395)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5872216820716858
    2. ')' → logprob: -0.8372216820716858
    3. ' +' → logprob: -4.587221622467041
    4. ' for' → logprob: -7.212221622467041
    5. ' )' → logprob: -8.7122220993042
    6. ' ' → logprob: -9.5872220993042
    7. ',' → logprob: -10.9622220993042
    8. '   ' → logprob: -11.0872220993042
    9. 'for' → logprob: -11.5872220993042
    10. '2' → logprob: -12.2122220993042

Token 65: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.14107374846935272
    2. ' i' → logprob: -2.141073703765869
    3. ' in' → logprob: -4.766073703765869
    4. 'range' → logprob: -5.266073703765869
    5. 'i' → logprob: -8.516074180603027
    6. ' ' → logprob: -9.016074180603027
    7. ' xrange' → logprob: -10.516074180603027
    8. '  ' → logprob: -11.891074180603027
    9. '(range' → logprob: -12.641074180603027
    10. '	range' → logprob: -12.766074180603027

Token 66: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.002970214933156967
    2. 'in' → logprob: -5.877970218658447
    3. ' ' → logprob: -9.252969741821289
    4. 'range' → logprob: -10.002969741821289
    5. '<|end|>' → logprob: -11.002969741821289
    6. ' range' → logprob: -12.252969741821289
    7. '2' → logprob: -14.127969741821289
    8. '  ' → logprob: -14.627969741821289
    9. 'import' → logprob: -14.877969741821289
    10. '<|end|>' → logprob: -15.002969741821289

Token 67: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.31326398253440857
    2. 'range' → logprob: -1.313264012336731
    3. '	range' → logprob: -13.688263893127441
    4. '(range' → logprob: -13.938263893127441
    5. ' xrange' → logprob: -15.438263893127441
    6. ' ' → logprob: -16.438264846801758
    7. '2' → logprob: -17.938264846801758
    8. '_range' → logprob: -19.313264846801758
    9. '.range' → logprob: -19.563264846801758
    10. '  ' → logprob: -19.688264846801758

Token 68: '(' (ID: 7)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.20951391756534576
    2. '(' → logprob: -1.7095139026641846
    3. ' ' → logprob: -5.459514141082764
    4. ',' → logprob: -6.084514141082764
    5. '   ' → logprob: -7.459514141082764
    6. ' (' → logprob: -7.584514141082764
    7. ')' → logprob: -8.084513664245605
    8. ' ,' → logprob: -9.959513664245605
    9. '    ' → logprob: -10.084513664245605
    10. '  ' → logprob: -10.459513664245605

Token 69: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.02327110432088375
    2. ' ' → logprob: -3.773271083831787
    3. ')' → logprob: -11.273271560668945
    4. '   ' → logprob: -12.773271560668945
    5. '(' → logprob: -13.148271560668945
    6. '    ' → logprob: -13.273271560668945
    7. '3' → logprob: -13.273271560668945
    8. ',' → logprob: -13.398271560668945
    9. '  ' → logprob: -13.523271560668945
    10. ' )' → logprob: -13.898271560668945

Token 70: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00021450345229823142
    2. ' ,' → logprob: -8.500214576721191
    3. ',N' → logprob: -12.000214576721191
    4. ' ' → logprob: -13.125214576721191
    5. '<|end|>' → logprob: -13.750214576721191
    6. ')' → logprob: -14.875214576721191
    7. ',n' → logprob: -15.000214576721191
    8. ',
' → logprob: -15.250214576721191
    9. '   ' → logprob: -15.500214576721191
    10. ',int' → logprob: -15.875214576721191

Token 71: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.16064001619815826
    2. ' N' → logprob: -1.910640001296997
    3. '   ' → logprob: -8.285639762878418
    4. '	N' → logprob: -9.785639762878418
    5. ' ' → logprob: -9.910639762878418
    6. '    ' → logprob: -10.410639762878418
    7. '2' → logprob: -11.660639762878418
    8. '3' → logprob: -12.035639762878418
    9. 'n' → logprob: -12.535639762878418
    10. '  ' → logprob: -12.785639762878418

Token 72: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.018303167074918747
    2. ' +' → logprob: -4.018303394317627
    3. ')' → logprob: -9.018302917480469
    4. ')]' → logprob: -10.518302917480469
    5. ' )' → logprob: -13.268302917480469
    6. '+)' → logprob: -13.768302917480469
    7. ')+' → logprob: -14.018302917480469
    8. ' ' → logprob: -15.018302917480469
    9. ')])' → logprob: -15.518302917480469
    10. '   ' → logprob: -15.893302917480469

Token 73: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011164903844473884
    2. '2' → logprob: -9.62511157989502
    3. ' ' → logprob: -10.00011157989502
    4. ')' → logprob: -16.625112533569336
    5. '   ' → logprob: -17.750112533569336
    6. '3' → logprob: -17.875112533569336
    7. '```' → logprob: -18.625112533569336
    8. '+' → logprob: -19.000112533569336
    9. '１' → logprob: -19.437612533569336
    10. '  ' → logprob: -19.687612533569336

Token 74: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0022467232774943113
    2. ')' → logprob: -6.127246856689453
    3. ' )' → logprob: -10.377246856689453
    4. ']' → logprob: -10.752246856689453
    5. ')]
' → logprob: -12.752246856689453
    6. ')])' → logprob: -13.002246856689453
    7. ')],' → logprob: -14.127246856689453
    8. '   ' → logprob: -14.252246856689453
    9. '))' → logprob: -14.377246856689453
    10. ')][' → logprob: -14.752246856689453

Token 75: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8256015777587891
    2. '   ' → logprob: -0.8256015777587891
    3. '  
' → logprob: -3.075601577758789
    4. '    
' → logprob: -3.575601577758789
    5. ' 
' → logprob: -3.700601577758789
    6. '   
' → logprob: -4.450601577758789
    7. '```' → logprob: -5.575601577758789
    8. '  ' → logprob: -6.075601577758789
    9. '<|end|>' → logprob: -6.200601577758789
    10. ' ' → logprob: -6.450601577758789

Token 76: ' cnt' (ID: 27340)
  Prédit: 'extra'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'extra' → logprob: -0.5976151823997498
    2. '   ' → logprob: -1.8476152420043945
    3. ' for' → logprob: -2.2226152420043945
    4. 'for' → logprob: -2.8476152420043945
    5. ' extra' → logprob: -3.4726152420043945
    6. 'edges' → logprob: -4.3476152420043945
    7. 'remaining' → logprob: -4.4726152420043945
    8. ' edges' → logprob: -4.5976152420043945
    9. 'extras' → logprob: -4.9726152420043945
    10. '```' → logprob: -5.2226152420043945

Token 77: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014615310356020927
    2. '_extra' → logprob: -4.764615535736084
    3. '=' → logprob: -5.139615535736084
    4. 'extra' → logprob: -9.639615058898926
    5. 'Extra' → logprob: -10.264615058898926
    6. '_' → logprob: -12.389615058898926
    7. '_edges' → logprob: -12.389615058898926
    8. '_EXTRA' → logprob: -13.264615058898926
    9. '=int' → logprob: -13.514615058898926
    10. '_remaining' → logprob: -13.514615058898926

Token 78: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.4166661500930786
    2. 'max' → logprob: -1.7916661500930786
    3. ' K' → logprob: -1.9166661500930786
    4. 'K' → logprob: -4.291666030883789
    5. ' ' → logprob: -4.916666030883789
    6. '0' → logprob: -5.166666030883789
    7. ' N' → logprob: -9.916666030883789
    8. '(max' → logprob: -10.354166030883789
    9. '	max' → logprob: -10.479166030883789
    10. '1' → logprob: -10.604166030883789

Token 79: '_extra' (ID: 77451)
  Prédit: '_extra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_extra' → logprob: -1.4974866644479334e-05
    2. '_' → logprob: -12.000015258789062
    3. 'extra' → logprob: -12.250015258789062
    4. '_ex' → logprob: -13.875015258789062
    5. '_EXTRA' → logprob: -14.000015258789062
    6. '(' → logprob: -14.375015258789062
    7. 'Extra' → logprob: -14.875015258789062
    8. '(extra' → logprob: -15.375015258789062
    9. '_edges' → logprob: -16.000015258789062
    10. ' _' → logprob: -16.375015258789062

Token 80: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 81: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7381483316421509
    2. '   ' → logprob: -1.3631483316421509
    3. '<|end|>' → logprob: -2.1131482124328613
    4. ' for' → logprob: -2.8631482124328613
    5. 'for' → logprob: -3.3631482124328613
    6. '    
' → logprob: -3.7381482124328613
    7. '<|end|>' → logprob: -4.863148212432861
    8. '\n' → logprob: -4.863148212432861
    9. ' 
' → logprob: -5.613148212432861
    10. '```' → logprob: -5.738148212432861

Token 82: ' def' (ID: 1056)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5084901452064514
    2. ' for' → logprob: -1.1334900856018066
    3. '   ' → logprob: -3.0084900856018066
    4. 'i' → logprob: -4.133490085601807
    5. ' i' → logprob: -4.508490085601807
    6. '```' → logprob: -8.508490562438965
    7. 'idx' → logprob: -10.508490562438965
    8. '  ' → logprob: -11.133490562438965
    9. '
' → logprob: -11.258490562438965
    10. '    
' → logprob: -12.508490562438965

Token 83: ' edge' (ID: 11165)
  Prédit: ' remove'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' remove' → logprob: -0.09256879985332489
    2. ' dfs' → logprob: -3.592568874359131
    3. ' reduce' → logprob: -3.967568874359131
    4. 'remove' → logprob: -4.342568874359131
    5. ' add' → logprob: -4.842568874359131
    6. ' can' → logprob: -5.967568874359131
    7. ' try' → logprob: -6.092568874359131
    8. ' solve' → logprob: -6.467568874359131
    9. ' extra' → logprob: -6.467568874359131
    10. 'dfs' → logprob: -6.717568874359131

Token 84: '_pairs' (ID: 90005)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0499429814517498
    2. '_count' → logprob: -4.549942970275879
    3. '_list' → logprob: -4.674942970275879
    4. '_remove' → logprob: -5.049942970275879
    5. '_' → logprob: -5.924942970275879
    6. '_reduce' → logprob: -5.924942970275879
    7. '_exists' → logprob: -6.174942970275879
    8. '_to' → logprob: -6.424942970275879
    9. '_s' → logprob: -6.549942970275879
    10. '_cut' → logprob: -6.674942970275879

Token 85: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.04720764607191086
    2. '(' → logprob: -3.1722075939178467
    3. '()' → logprob: -6.672207832336426
    4. '():
' → logprob: -6.797207832336426
    5. '(n' → logprob: -7.422207832336426
    6. ' ():' → logprob: -7.672207832336426
    7. '(N' → logprob: -7.922207832336426
    8. '(i' → logprob: -10.297207832336426
    9. '(:' → logprob: -10.422207832336426
    10. '(*' → logprob: -10.547207832336426

Token 86: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22590413689613342
    2. '   ' → logprob: -1.600904107093811
    3. '<|end|>' → logprob: -8.47590446472168
    4. ':' → logprob: -9.22590446472168
    5. ' for' → logprob: -10.35090446472168
    6. '    
' → logprob: -10.35090446472168
    7. '():' → logprob: -10.60090446472168
    8. '<|end|>' → logprob: -10.85090446472168
    9. ',' → logprob: -11.22590446472168
    10. '()' → logprob: -11.35090446472168

Token 87: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.24435362219810486
    2. '       ' → logprob: -2.3693535327911377
    3. 'for' (adapté à ' for') → logprob: -2.7443535327911377
    4. '   ' → logprob: -3.1193535327911377
    5. '    ' → logprob: -4.244353771209717
    6. '        ' → logprob: -8.869353294372559
    7. '	for' → logprob: -9.119353294372559
    8. ' ' → logprob: -10.119353294372559
    9. ' yield' → logprob: -10.244353294372559
    10. ' non' → logprob: -11.119353294372559

Token 88: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3045901954174042
    2. ' i' → logprob: -1.4295902252197266
    3. 'u' → logprob: -4.554590225219727
    4. ' u' → logprob: -4.804590225219727
    5. 'j' → logprob: -6.054590225219727
    6. ' j' → logprob: -6.929590225219727
    7. 'v' → logprob: -8.054590225219727
    8. '   ' → logprob: -8.679590225219727
    9. ' v' → logprob: -8.929590225219727
    10. ' ' → logprob: -9.054590225219727

Token 89: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.021639786660671234
    2. 'in' → logprob: -3.896639823913574
    3. ',' → logprob: -7.396639823913574
    4. ' ' → logprob: -8.521639823913574
    5. '  ' → logprob: -9.146639823913574
    6. '   ' → logprob: -9.271639823913574
    7. ' ,' → logprob: -10.521639823913574
    8. '    ' → logprob: -11.021639823913574
    9. '	in' → logprob: -11.896639823913574
    10. '```' → logprob: -12.271639823913574

Token 90: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3485148549079895
    2. ' range' → logprob: -1.2235147953033447
    3. ' ' → logprob: -11.098514556884766
    4. '	range' → logprob: -11.223514556884766
    5. '   ' → logprob: -11.348514556884766
    6. '(range' → logprob: -11.848514556884766
    7. '2' → logprob: -11.848514556884766
    8. '  ' → logprob: -12.098514556884766
    9. ' xrange' → logprob: -13.098514556884766
    10. ')' → logprob: -13.598514556884766

Token 91: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3508990705013275
    2. '2' → logprob: -1.22589910030365
    3. ' ' → logprob: -6.2258992195129395
    4. '   ' → logprob: -8.600898742675781
    5. ')' → logprob: -9.850898742675781
    6. ' (' → logprob: -10.100898742675781
    7. '3' → logprob: -10.100898742675781
    8. '       ' → logprob: -10.350898742675781
    9. 'from' → logprob: -10.350898742675781
    10. '  ' → logprob: -10.850898742675781

Token 92: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0025315487291663885
    2. ' ' → logprob: -6.0025315284729
    3. '3' → logprob: -10.377532005310059
    4. '   ' → logprob: -11.127532005310059
    5. ')' → logprob: -12.877532005310059
    6. '  ' → logprob: -13.002532005310059
    7. '(' → logprob: -13.127532005310059
    8. '1' → logprob: -14.065032005310059
    9. '    ' → logprob: -14.877532005310059
    10. '```' → logprob: -15.252532005310059

Token 93: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0019965621177107096
    2. ' ,' → logprob: -6.7519965171813965
    3. '+' → logprob: -7.7519965171813965
    4. ',N' → logprob: -8.251996994018555
    5. ' +' → logprob: -9.376996994018555
    6. ',n' → logprob: -10.501996994018555
    7. '   ' → logprob: -11.751996994018555
    8. '<|end|>' → logprob: -13.251996994018555
    9. ' ' → logprob: -13.376996994018555
    10. ',len' → logprob: -13.501996994018555

Token 94: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.006977268029004335
    2. ' N' → logprob: -5.506977081298828
    3. '   ' → logprob: -6.006977081298828
    4. '       ' → logprob: -8.256977081298828
    5. '	N' → logprob: -9.506977081298828
    6. 'n' → logprob: -10.631977081298828
    7. '<|end|>' → logprob: -10.881977081298828
    8. '  ' → logprob: -11.006977081298828
    9. '    ' → logprob: -11.381977081298828
    10. ' ' → logprob: -11.756977081298828

Token 95: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3969336450099945
    2. '+' → logprob: -1.646933674812317
    3. '):
' → logprob: -2.0219335556030273
    4. '-' → logprob: -6.521933555603027
    5. ' +' → logprob: -7.771933555603027
    6. '   ' → logprob: -8.021933555603027
    7. ')' → logprob: -9.646933555603027
    8. ' -' → logprob: -9.646933555603027
    9. '):
' → logprob: -10.021933555603027
    10. ' ):' → logprob: -10.146933555603027

Token 96: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.30196577310562134
    2. '           ' → logprob: -1.5519657135009766
    3. '<|end|>' → logprob: -3.5519657135009766
    4. ' for' → logprob: -5.051965713500977
    5. ':' → logprob: -5.551965713500977
    6. ':
' → logprob: -5.801965713500977
    7. '<|end|>' → logprob: -6.676965713500977
    8. '	       ' → logprob: -6.801965713500977
    9. ' ' → logprob: -6.926965713500977
    10. ',' → logprob: -6.926965713500977

Token 97: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.07428713142871857
    2. '               ' → logprob: -3.199287176132202
    3. 'for' (adapté à ' for') → logprob: -4.324286937713623
    4. '       ' → logprob: -4.449286937713623
    5. '           ' → logprob: -5.449286937713623
    6. '<|end|>' → logprob: -7.199286937713623
    7. ' ' → logprob: -8.324287414550781
    8. '	       ' → logprob: -8.574287414550781
    9. '	for' → logprob: -9.324287414550781
    10. '```' → logprob: -9.574287414550781

Token 98: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.011050650849938393
    2. ' j' → logprob: -4.511050701141357
    3. '	j' → logprob: -13.7610502243042
    4. '   ' → logprob: -14.5110502243042
    5. '           ' → logprob: -14.5110502243042
    6. '_j' → logprob: -15.7610502243042
    7. '    ' → logprob: -16.636051177978516
    8. 'k' → logprob: -16.636051177978516
    9. '       ' → logprob: -16.761051177978516
    10. ' ' → logprob: -16.886051177978516

Token 99: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0017393168527632952
    2. 'in' → logprob: -6.376739501953125
    3. '<|end|>' → logprob: -10.876739501953125
    4. ' ' → logprob: -12.001739501953125
    5. 'range' → logprob: -12.126739501953125
    6. '<|end|>' → logprob: -13.501739501953125
    7. '+' → logprob: -14.001739501953125
    8. 's' → logprob: -14.751739501953125
    9. ' =' → logprob: -15.001739501953125
    10. '=' → logprob: -15.001739501953125

Token 100: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.10029637813568115
    2. ' range' → logprob: -2.3502964973449707
    3. '(range' → logprob: -9.350296020507812
    4. '	range' → logprob: -13.475296020507812
    5. ' ' → logprob: -14.600296020507812
    6. '.range' → logprob: -15.225296020507812
    7. ' xrange' → logprob: -15.475296020507812
    8. '   ' → logprob: -15.975296020507812
    9. ')' → logprob: -16.350296020507812
    10. '<|end|>' → logprob: -16.600296020507812

Token 101: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -6.694766489090398e-05
    2. '(' → logprob: -9.750066757202148
    3. '(j' → logprob: -12.750066757202148
    4. ' (' → logprob: -13.125066757202148
    5. '   ' → logprob: -13.750066757202148
    6. '           ' → logprob: -13.875066757202148
    7. '       ' → logprob: -14.375066757202148
    8. '(ii' → logprob: -15.000066757202148
    9. ')' → logprob: -15.875066757202148
    10. '=i' → logprob: -16.00006675720215

Token 102: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00763135077431798
    2. ' +' → logprob: -4.882631301879883
    3. '1' → logprob: -10.882631301879883
    4. '+,' → logprob: -13.382631301879883
    5. '   ' → logprob: -13.632631301879883
    6. ',' → logprob: -14.132631301879883
    7. ' ' → logprob: -14.132631301879883
    8. '+
' → logprob: -14.382631301879883
    9. '()+' → logprob: -14.507631301879883
    10. '+j' → logprob: -14.882631301879883

Token 103: '1' (ID: 16)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.16941024363040924
    2. '2' → logprob: -2.169410228729248
    3. '1' → logprob: -3.419410228729248
    4. '+' → logprob: -5.919410228729248
    5. ',' → logprob: -6.294410228729248
    6. '(' → logprob: -6.794410228729248
    7. 'i' → logprob: -7.044410228729248
    8. ')' → logprob: -7.169410228729248
    9. 'j' → logprob: -7.794410228729248
    10. ' ' → logprob: -8.294410705566406

Token 104: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004475924652069807
    2. ',N' → logprob: -8.000447273254395
    3. ' ,' → logprob: -9.500447273254395
    4. '(N' → logprob: -11.125447273254395
    5. '(' → logprob: -11.875447273254395
    6. '(),' → logprob: -12.125447273254395
    7. ',n' → logprob: -13.000447273254395
    8. '2' → logprob: -13.500447273254395
    9. '+' → logprob: -13.625447273254395
    10. '   ' → logprob: -14.000447273254395

Token 105: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.1002747043967247
    2. ' N' → logprob: -2.3502748012542725
    3. '   ' → logprob: -9.725275039672852
    4. ' ' → logprob: -12.225275039672852
    5. '	N' → logprob: -13.600275039672852
    6. '    ' → logprob: -14.100275039672852
    7. '  ' → logprob: -14.225275039672852
    8. '           ' → logprob: -15.600275039672852
    9. 'n' → logprob: -15.725275039672852
    10. '       ' → logprob: -15.850275039672852

Token 106: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.005036644637584686
    2. '):' → logprob: -5.3800368309021
    3. '):
' → logprob: -8.130036354064941
    4. ' +' → logprob: -9.130036354064941
    5. ')' → logprob: -11.630036354064941
    6. '   ' → logprob: -13.130036354064941
    7. ':' → logprob: -14.630036354064941
    8. '       ' → logprob: -14.755036354064941
    9. ')+' → logprob: -14.880036354064941
    10. '):

' → logprob: -15.505036354064941

Token 107: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011054890230298042
    2. '+' → logprob: -4.511054992675781
    3. '   ' → logprob: -12.886054992675781
    4. ' ' → logprob: -13.386054992675781
    5. '2' → logprob: -13.886054992675781
    6. ')' → logprob: -14.386054992675781
    7. ' +' → logprob: -14.636054992675781
    8. '```' → logprob: -15.261054992675781
    9. ')+' → logprob: -15.386054992675781
    10. '       ' → logprob: -15.636054992675781

Token 108: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.25222739577293396
    2. '):
' → logprob: -1.5022274255752563
    3. '           ' → logprob: -9.377227783203125
    4. '):
' → logprob: -9.502227783203125
    5. '               ' → logprob: -9.752227783203125
    6. ')' → logprob: -10.502227783203125
    7. ':' → logprob: -10.502227783203125
    8. '():
' → logprob: -11.627227783203125
    9. '       ' → logprob: -11.877227783203125
    10. '):

' → logprob: -12.252227783203125

Token 109: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005309773609042168
    2. '           ' → logprob: -5.505309581756592
    3. '<|end|>' → logprob: -7.255309581756592
    4. ':' → logprob: -8.63031005859375
    5. 'yield' → logprob: -9.75531005859375
    6. '                       ' → logprob: -9.75531005859375
    7. '                   ' → logprob: -10.00531005859375
    8. '	yield' → logprob: -10.38031005859375
    9. '<|end|>' → logprob: -10.50531005859375
    10. ' yield' → logprob: -10.63031005859375

Token 110: ' yield' (ID: 14376)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.3406287133693695
    2. '           ' → logprob: -1.340628743171692
    3. ' yield' → logprob: -3.8406286239624023
    4. 'yield' (adapté à ' yield') → logprob: -6.090628623962402
    5. '               ' → logprob: -6.215628623962402
    6. '	yield' → logprob: -7.715628623962402
    7. '                       ' → logprob: -7.965628623962402
    8. ' if' → logprob: -8.965628623962402
    9. '       ' → logprob: -9.215628623962402
    10. '   ' → logprob: -9.215628623962402

Token 111: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0014486834406852722
    2. 'i' → logprob: -7.126448631286621
    3. ' (' → logprob: -7.376448631286621
    4. ' i' → logprob: -11.501448631286621
    5. '               ' → logprob: -12.501448631286621
    6. '   ' → logprob: -13.001448631286621
    7. '                   ' → logprob: -14.376448631286621
    8. '           ' → logprob: -14.376448631286621
    9. '((' → logprob: -14.751448631286621
    10. '(' → logprob: -15.751448631286621

Token 112: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -4.9186317482963204e-05
    2. ' i' → logprob: -10.125049591064453
    3. '(i' → logprob: -12.250049591064453
    4. '   ' → logprob: -12.625049591064453
    5. ')' → logprob: -14.750049591064453
    6. ')i' → logprob: -15.250049591064453
    7. '           ' → logprob: -16.125049591064453
    8. ' (' → logprob: -16.625049591064453
    9. '{i' → logprob: -17.000049591064453
    10. '	i' → logprob: -17.125049591064453

Token 113: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013679367839358747
    2. ',j' → logprob: -9.250136375427246
    3. ' ,' → logprob: -10.125136375427246
    4. ',
' → logprob: -16.000137329101562
    5. '‌,' → logprob: -16.500137329101562
    6. '<|end|>' → logprob: -16.625137329101562
    7. 'j' → logprob: -16.750137329101562
    8. '   ' → logprob: -16.875137329101562
    9. '',' → logprob: -17.125137329101562
    10. '),' → logprob: -17.875137329101562

Token 114: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0024817234370857477
    2. ' j' → logprob: -6.002481937408447
    3. '   ' → logprob: -13.002481460571289
    4. ')' → logprob: -13.252481460571289
    5. ' ' → logprob: -14.252481460571289
    6. '                   ' → logprob: -15.127481460571289
    7. '               ' → logprob: -15.252481460571289
    8. '    ' → logprob: -15.377481460571289
    9. '           ' → logprob: -16.00248146057129
    10. '  ' → logprob: -16.12748146057129

Token 115: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00019340807921253145
    2. ')
' → logprob: -8.62519359588623
    3. '               ' → logprob: -11.75019359588623
    4. ' )' → logprob: -12.62519359588623
    5. '           ' → logprob: -14.00019359588623
    6. '       ' → logprob: -14.87519359588623
    7. '                   ' → logprob: -15.00019359588623
    8. ')

' → logprob: -15.37519359588623
    9. '))' → logprob: -15.50019359588623
    10. '<|end|>' → logprob: -15.62519359588623

Token 116: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11166427284479141
    2. '
' → logprob: -2.486664295196533
    3. '    
' → logprob: -4.236664295196533
    4. '<|end|>' → logprob: -5.361664295196533
    5. '    ' → logprob: -6.611664295196533
    6. '```' → logprob: -6.986664295196533
    7. '<|end|>' → logprob: -8.236663818359375
    8. ' for' → logprob: -8.486663818359375
    9. '  
' → logprob: -9.486663818359375
    10. '

' → logprob: -9.611663818359375

Token 117: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.17319688200950623
    2. '   ' → logprob: -2.298196792602539
    3. ' for' → logprob: -2.923196792602539
    4. 'while' → logprob: -6.173196792602539
    5. '
' → logprob: -6.423196792602539
    6. '    
' → logprob: -8.048196792602539
    7. 'stdout' → logprob: -8.798196792602539
    8. 'if' → logprob: -8.923196792602539
    9. '```' → logprob: -8.923196792602539
    10. ' while' → logprob: -9.298196792602539

Token 118: ' u' (ID: 337)
  Prédit: ' edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edge' → logprob: -0.9612975120544434
    2. ' (' → logprob: -1.5862975120544434
    3. ' pair' → logprob: -2.0862975120544434
    4. ' e' → logprob: -2.2112975120544434
    5. ' u' → logprob: -2.7112975120544434
    6. ' x' → logprob: -4.461297512054443
    7. ' _' → logprob: -4.461297512054443
    8. ' i' → logprob: -4.586297512054443
    9. ' k' → logprob: -4.711297512054443
    10. '(' → logprob: -4.836297512054443

Token 119: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0036321463994681835
    2. ' in' → logprob: -6.128632068634033
    3. ' ,' → logprob: -7.253632068634033
    4. 'in' → logprob: -7.753632068634033
    5. ',v' → logprob: -8.753632545471191
    6. ',u' → logprob: -9.253632545471191
    7. ',in' → logprob: -10.253632545471191
    8. ',e' → logprob: -12.378632545471191
    9. ' ' → logprob: -12.878632545471191
    10. ',(' → logprob: -13.003632545471191

Token 120: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0024762547109276056
    2. ' v' → logprob: -6.002476215362549
    3. '(v' → logprob: -14.377476692199707
    4. '	v' → logprob: -17.37747573852539
    5. 'w' → logprob: -17.50247573852539
    6. ' ' → logprob: -18.00247573852539
    7. '   ' → logprob: -19.50247573852539
    8. '_v' → logprob: -19.62747573852539
    9. '```' → logprob: -19.62747573852539
    10. 'j' → logprob: -19.87747573852539

Token 121: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02054644376039505
    2. 'in' → logprob: -3.8955464363098145
    3. '   ' → logprob: -13.520546913146973
    4. '	in' → logprob: -13.645546913146973
    5. ' ' → logprob: -14.395546913146973
    6. 's' → logprob: -14.770546913146973
    7. '    ' → logprob: -15.270546913146973
    8. ',' → logprob: -15.395546913146973
    9. '  ' → logprob: -15.770546913146973
    10. '```' → logprob: -16.645545959472656

Token 122: ' edge' (ID: 11165)
  Prédit: ' edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edge' → logprob: -0.38688334822654724
    2. 'edge' → logprob: -1.1368833780288696
    3. '(edge' → logprob: -11.636883735656738
    4. '=edge' → logprob: -13.636883735656738
    5. 'ed' → logprob: -13.761883735656738
    6. ' ' → logprob: -14.761883735656738
    7. 'edges' → logprob: -15.261883735656738
    8. '   ' → logprob: -15.636883735656738
    9. 'e' → logprob: -16.261882781982422
    10. ' edges' → logprob: -16.636882781982422

Token 123: '_pairs' (ID: 90005)
  Prédit: '_pairs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pairs' → logprob: -0.048674117773771286
    2. 's' → logprob: -3.0486741065979004
    3. 'pairs' → logprob: -9.923674583435059
    4. 'airs' → logprob: -11.048674583435059
    5. '   ' → logprob: -12.048674583435059
    6. '_' → logprob: -12.548674583435059
    7. '       ' → logprob: -12.673674583435059
    8. 'Pairs' → logprob: -13.298674583435059
    9. ' pairs' → logprob: -13.673674583435059
    10. 'd' → logprob: -13.798674583435059

Token 124: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0003538158780429512
    2. '():
' → logprob: -8.250353813171387
    3. ':' → logprob: -9.500353813171387
    4. ' ():' → logprob: -11.250353813171387
    5. '()' → logprob: -12.500353813171387
    6. '():
' → logprob: -14.125353813171387
    7. '):' → logprob: -15.500353813171387
    8. '(' → logprob: -16.625354766845703
    9. '():

' → logprob: -18.375354766845703
    10. ' :' → logprob: -18.875354766845703

Token 125: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012170211412012577
    2. ' if' → logprob: -7.501216888427734
    3. '<|end|>' → logprob: -7.751216888427734
    4. ',' → logprob: -9.876216888427734
    5. '```' → logprob: -10.376216888427734
    6. ':' → logprob: -10.376216888427734
    7. '
' → logprob: -10.751216888427734
    8. '   ' → logprob: -10.876216888427734
    9. '<|end|>' → logprob: -11.126216888427734
    10. '        
' → logprob: -11.626216888427734

Token 126: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2600897550582886
    2. '       ' → logprob: -1.5100897550582886
    3. 'if' (adapté à ' if') → logprob: -4.885089874267578
    4. '   ' → logprob: -7.885089874267578
    5. '
' → logprob: -9.510089874267578
    6. '    ' → logprob: -10.260089874267578
    7. '        ' → logprob: -10.760089874267578
    8. '```' → logprob: -11.010089874267578
    9. ' ' → logprob: -11.510089874267578
    10. '           ' → logprob: -11.510089874267578

Token 127: ' cnt' (ID: 27340)
  Prédit: ' cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cnt' → logprob: -0.07213867455720901
    2. 'cnt' → logprob: -2.697138786315918
    3. ' K' → logprob: -6.697138786315918
    4. '   ' → logprob: -7.697138786315918
    5. 'K' → logprob: -8.697138786315918
    6. '(cnt' → logprob: -8.947138786315918
    7. ' ' → logprob: -9.072138786315918
    8. '	cnt' → logprob: -10.197138786315918
    9. '  ' → logprob: -10.447138786315918
    10. '[cnt' → logprob: -11.572138786315918

Token 128: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.9117604494094849
    2. ' ==' → logprob: -1.1617604494094849
    3. ' >' → logprob: -1.7867604494094849
    4. '>' → logprob: -2.1617603302001953
    5. ' <=' → logprob: -6.786760330200195
    6. '<=' → logprob: -7.161760330200195
    7. '   ' → logprob: -8.036760330200195
    8. '=' → logprob: -8.411760330200195
    9. ' ' → logprob: -9.786760330200195
    10. '-' → logprob: -11.036760330200195

Token 129: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.001939938636496663
    2. ' K' → logprob: -6.25193977355957
    3. '   ' → logprob: -12.12693977355957
    4. '>K' → logprob: -13.12693977355957
    5. '	K' → logprob: -13.50193977355957
    6. '=' → logprob: -14.25193977355957
    7. ' ' → logprob: -15.00193977355957
    8. '==' → logprob: -15.25193977355957
    9. '
' → logprob: -15.37693977355957
    10. '0' → logprob: -15.75193977355957

Token 130: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03430722653865814
    2. ':
' → logprob: -3.4093072414398193
    3. '           ' → logprob: -7.40930700302124
    4. '       ' → logprob: -11.034307479858398
    5. '   ' → logprob: -11.284307479858398
    6. ':return' → logprob: -12.034307479858398
    7. ':
' → logprob: -12.159307479858398
    8. ' :' → logprob: -12.534307479858398
    9. '):' → logprob: -13.159307479858398
    10. ',' → logprob: -13.659307479858398

Token 131: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00015085970517247915
    2. '
' → logprob: -9.125150680541992
    3. ' break' → logprob: -11.125150680541992
    4. 'break' → logprob: -11.625150680541992
    5. '            
' → logprob: -12.250150680541992
    6. '       ' → logprob: -12.375150680541992
    7. '               ' → logprob: -12.750150680541992
    8. '```' → logprob: -13.250150680541992
    9. ':
' → logprob: -13.875150680541992
    10. '          ' → logprob: -13.875150680541992

Token 132: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03574386239051819
    2. 'break' (adapté à ' break') → logprob: -4.035743713378906
    3. ' break' → logprob: -4.535743713378906
    4. '       ' → logprob: -5.535743713378906
    5. '	break' → logprob: -6.535743713378906
    6. '   ' → logprob: -7.785743713378906
    7. '               ' → logprob: -8.035743713378906
    8. '	       ' → logprob: -8.285743713378906
    9. '
' → logprob: -8.535743713378906
    10. '		' → logprob: -9.160743713378906

Token 133: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0065872324630618095
    2. '
' → logprob: -5.881587028503418
    3. '        
' → logprob: -6.381587028503418
    4. ' edges' → logprob: -6.381587028503418
    5. '   ' → logprob: -9.131587028503418
    6. 'edges' → logprob: -9.881587028503418
    7. '    
' → logprob: -10.131587028503418
    8. '  
' → logprob: -10.506587028503418
    9. '           ' → logprob: -10.756587028503418
    10. '```' → logprob: -10.756587028503418

Token 134: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010210209293290973
    2. ' edges' → logprob: -7.501020908355713
    3. '   ' → logprob: -8.376021385192871
    4. '        
' → logprob: -9.251021385192871
    5. 'edges' → logprob: -9.501021385192871
    6. '           ' → logprob: -11.251021385192871
    7. '```' → logprob: -11.251021385192871
    8. '
' → logprob: -11.751021385192871
    9. '<|end|>' → logprob: -12.001021385192871
    10. '    
' → logprob: -12.376021385192871

Token 135: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' (adapté à ' edges') → logprob: -0.3994855284690857
    2. '       ' → logprob: -1.2744855880737305
    3. ' edges' → logprob: -3.6494855880737305
    4. '   ' → logprob: -3.7744855880737305
    5. '
' → logprob: -7.8994855880737305
    6. '           ' → logprob: -8.14948558807373
    7. '```' → logprob: -10.77448558807373
    8. '.edges' → logprob: -11.02448558807373
    9. '     ' → logprob: -11.14948558807373
    10. '        
' → logprob: -11.27448558807373

Token 136: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.014302417635917664
    2. '.' → logprob: -4.2643022537231445
    3. '.remove' → logprob: -9.514302253723145
    4. '.pop' → logprob: -10.014302253723145
    5. '.app' → logprob: -12.014302253723145
    6. 'append' → logprob: -12.514302253723145
    7. ' .' → logprob: -12.514302253723145
    8. '.add' → logprob: -13.514302253723145
    9. '.setdefault' → logprob: -14.014302253723145
    10. '.ap' → logprob: -14.389302253723145

Token 137: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0019323242595419288
    2. '(' → logprob: -6.251932144165039
    3. ' ((' → logprob: -13.251932144165039
    4. '   ' → logprob: -13.501932144165039
    5. '(
' → logprob: -15.001932144165039
    6. '(u' → logprob: -16.12693214416504
    7. '(((' → logprob: -16.37693214416504
    8. ' ' → logprob: -16.62693214416504
    9. ' (' → logprob: -16.62693214416504
    10. '```' → logprob: -18.25193214416504

Token 138: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -2.629921436891891e-05
    2. ' u' → logprob: -10.62502670288086
    3. '   ' → logprob: -13.75002670288086
    4. '	u' → logprob: -14.75002670288086
    5. '(u' → logprob: -15.12502670288086
    6. '[u' → logprob: -17.00002670288086
    7. ')' → logprob: -17.00002670288086
    8. ',u' → logprob: -17.00002670288086
    9. '*u' → logprob: -17.75002670288086
    10. ',' → logprob: -18.00002670288086

Token 139: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016802136087790132
    2. ',v' → logprob: -8.750167846679688
    3. ' ,' → logprob: -11.625167846679688
    4. ',
' → logprob: -15.000167846679688
    5. 'v' → logprob: -15.625167846679688
    6. ',

' → logprob: -17.750167846679688
    7. '   ' → logprob: -18.375167846679688
    8. '‌,' → logprob: -18.750167846679688
    9. '),' → logprob: -18.875167846679688
    10. '_,' → logprob: -19.125167846679688

Token 140: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.00017982252757064998
    2. ' v' → logprob: -8.6251802444458
    3. ')v' → logprob: -16.625179290771484
    4. ' ' → logprob: -17.250179290771484
    5. '   ' → logprob: -17.375179290771484
    6. '	v' → logprob: -17.500179290771484
    7. 'vj' → logprob: -18.875179290771484
    8. ')' → logprob: -19.125179290771484
    9. '    ' → logprob: -19.375179290771484
    10. 'j' → logprob: -19.375179290771484

Token 141: '))
' (ID: 2210)
  Prédit: '))
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))
' → logprob: -0.008062121458351612
    2. '))' → logprob: -5.00806188583374
    3. ')
' → logprob: -6.75806188583374
    4. ')' → logprob: -9.258062362670898
    5. '       ' → logprob: -9.508062362670898
    6. '))
' → logprob: -11.383062362670898
    7. ' ))
' → logprob: -13.508062362670898
    8. '))

' → logprob: -14.383062362670898
    9. '   ' → logprob: -14.508062362670898
    10. ',))
' → logprob: -14.633062362670898

Token 142: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.676981345459353e-06
    2. '   ' → logprob: -12.250005722045898
    3. '
' → logprob: -14.625005722045898
    4. '           ' → logprob: -15.750005722045898
    5. 'cnt' → logprob: -16.1250057220459
    6. '```' → logprob: -16.7500057220459
    7. '	   ' → logprob: -17.0000057220459
    8. '        
' → logprob: -17.7500057220459
    9. ',' → logprob: -18.2500057220459
    10. '	' → logprob: -18.8750057220459

Token 143: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -0.00029148702742531896
    2. ' cnt' → logprob: -8.25029182434082
    3. '       ' → logprob: -10.50029182434082
    4. '
' → logprob: -13.62529182434082
    5. '   ' → logprob: -14.12529182434082
    6. '	cnt' → logprob: -14.12529182434082
    7. '           ' → logprob: -17.00029182434082
    8. '[cnt' → logprob: -17.75029182434082
    9. '(cnt' → logprob: -17.87529182434082
    10. 'count' → logprob: -18.50029182434082

Token 144: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.28580036759376526
    2. '-' → logprob: -1.5358003377914429
    3. ' -=' → logprob: -3.4108004570007324
    4. '=' → logprob: -8.785799980163574
    5. '+=' → logprob: -9.285799980163574
    6. ' -' → logprob: -11.410799980163574
    7. '```' → logprob: -11.660799980163574
    8. '    ' → logprob: -11.910799980163574
    9. ')' → logprob: -12.285799980163574
    10. '   ' → logprob: -12.535799980163574

Token 145: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.318681188422488e-05
    2. ' ' → logprob: -11.25001335144043
    3. '   ' → logprob: -16.37501335144043
    4. '  ' → logprob: -19.50001335144043
    5. '<|end|>' → logprob: -19.62501335144043
    6. '１' → logprob: -20.37501335144043
    7. '۱' → logprob: -20.50001335144043
    8. '       ' → logprob: -20.87501335144043
    9. '2' → logprob: -21.12501335144043
    10. '.' → logprob: -21.25001335144043

Token 146: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '<|end|>' → logprob: -19.125003814697266
    4. '   ' → logprob: -19.250003814697266
    5. '-' → logprob: -21.125003814697266
    6. '۱' → logprob: -21.750003814697266
    7. '       ' → logprob: -22.000003814697266
    8. ')' → logprob: -22.125003814697266
    9. '  ' → logprob: -22.125003814697266
    10. '```' → logprob: -22.250003814697266

Token 147: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.39875859022140503
    2. '   ' → logprob: -1.1487586498260498
    3. '    
' → logprob: -4.523758411407471
    4. '  
' → logprob: -8.023758888244629
    5. '<|end|>' → logprob: -8.273758888244629
    6. '
' → logprob: -9.523758888244629
    7. '

' → logprob: -9.773758888244629
    8. '        
' → logprob: -9.773758888244629
    9. '```' → logprob: -10.023758888244629
    10. 'print' → logprob: -10.523758888244629

Token 148: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10619878023862839
    2. '   ' → logprob: -2.481198787689209
    3. '    
' → logprob: -4.481198787689209
    4. '<|end|>' → logprob: -5.731198787689209
    5. '  
' → logprob: -7.231198787689209
    6. 'for' → logprob: -7.356198787689209
    7. 'stdout' → logprob: -8.35619831085205
    8. '```' → logprob: -8.98119831085205
    9. '	
' → logprob: -9.10619831085205
    10. '
' → logprob: -9.23119831085205

Token 149: ' print' (ID: 2123)
  Prédit: 'stdout'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stdout' → logprob: -0.32422810792922974
    2. 'for' → logprob: -1.574228048324585
    3. 'print' (adapté à ' print') → logprob: -2.699228048324585
    4. '   ' → logprob: -6.949228286743164
    5. ' for' → logprob: -6.949228286743164
    6. ' stdout' → logprob: -7.824228286743164
    7. 'sys' → logprob: -10.074228286743164
    8. ' print' → logprob: -10.699228286743164
    9. '```' → logprob: -10.824228286743164
    10. 'output' → logprob: -11.074228286743164

Token 150: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.006157847121357918
    2. '(' → logprob: -5.131157875061035
    3. 'len' → logprob: -8.506157875061035
    4. '((' → logprob: -11.381157875061035
    5. '()' → logprob: -12.256157875061035
    6. '(
' → logprob: -12.506157875061035
    7. '(*' → logprob: -12.756157875061035
    8. ' (' → logprob: -13.756157875061035
    9. '('' → logprob: -13.756157875061035
    10. '("' → logprob: -15.131157875061035

Token 151: '(edges' (ID: 185298)
  Prédit: '(edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(edges' → logprob: -9.253090865968261e-06
    2. 'edges' → logprob: -11.625009536743164
    3. '(' → logprob: -15.500009536743164
    4. ' edges' → logprob: -17.125009536743164
    5. ' (' → logprob: -17.250009536743164
    6. ')' → logprob: -17.875009536743164
    7. '(lines' → logprob: -18.625009536743164
    8. '(vertices' → logprob: -19.750009536743164
    9. '(nodes' → logprob: -20.125009536743164
    10. '(elements' → logprob: -20.250009536743164

Token 152: '))
' (ID: 2210)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.004091342911124229
    2. ')' → logprob: -5.504091262817383
    3. '))
' → logprob: -11.879091262817383
    4. ')
' → logprob: -13.004091262817383
    5. ' )
' → logprob: -13.254091262817383
    6. '())
' → logprob: -13.504091262817383
    7. ')

' → logprob: -15.504091262817383
    8. '))' → logprob: -15.879091262817383
    9. ')`
' → logprob: -16.004091262817383
    10. '   ' → logprob: -17.379091262817383

Token 153: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3876675069332123
    2. 'for' → logprob: -1.5126675367355347
    3. ' for' → logprob: -2.637667417526245
    4. '    
' → logprob: -4.137667655944824
    5. '<|end|>' → logprob: -5.387667655944824
    6. '\n' → logprob: -6.137667655944824
    7. '
' → logprob: -6.637667655944824
    8. '  
' → logprob: -6.762667655944824
    9. '\' → logprob: -6.762667655944824
    10. ')' → logprob: -6.887667655944824

Token 154: ' stdout' (ID: 48014)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0006353547796607018
    2. ' for' → logprob: -7.375635147094727
    3. '   ' → logprob: -12.125635147094727
    4. 'stdout' (adapté à ' stdout') → logprob: -12.750635147094727
    5. '    
' → logprob: -15.375635147094727
    6. '	for' → logprob: -16.375635147094727
    7. '
' → logprob: -16.500635147094727
    8. 'from' → logprob: -17.375635147094727
    9. '```' → logprob: -17.625635147094727
    10. 'print' → logprob: -17.625635147094727

Token 155: '.w' (ID: 2234)
  Prédit: '.write'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.write' → logprob: -4.11996734328568e-05
    2. '.' → logprob: -10.250041007995605
    3. '.flush' → logprob: -12.625041007995605
    4. 'write' → logprob: -13.375041007995605
    5. '.w' → logprob: -14.125041007995605
    6. ' .' → logprob: -16.000041961669922
    7. '.Write' → logprob: -17.375041961669922
    8. ').' → logprob: -18.125041961669922
    9. '.buffer' → logprob: -18.750041961669922
    10. '.put' → logprob: -18.750041961669922

Token 156: 'rit' (ID: 1166)
  Prédit: 'rite'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rite' → logprob: -0.00015419373812619597
    2. 'rit' → logprob: -9.375154495239258
    3. 'riteln' → logprob: -10.125154495239258
    4. 'ritel' → logprob: -11.375154495239258
    5. 'write' → logprob: -11.750154495239258
    6. 'riter' → logprob: -12.250154495239258
    7. 'rites' → logprob: -12.625154495239258
    8. 'ritable' → logprob: -14.000154495239258
    9. '.write' → logprob: -14.875154495239258
    10. 'r' → logprob: -15.625154495239258

Token 157: 'elines' (ID: 14368)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.4057464003562927
    2. 'le' → logprob: -1.9057464599609375
    3. 'rite' → logprob: -2.1557464599609375
    4. 'rit' → logprob: -3.4057464599609375
    5. 'el' → logprob: -4.1557464599609375
    6. 'riteln' → logprob: -5.2807464599609375
    7. 'r' → logprob: -6.0307464599609375
    8. 'elines' → logprob: -6.0307464599609375
    9. 'ritel' → logprob: -6.1557464599609375
    10. 'eline' → logprob: -6.2807464599609375

Token 158: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.03412001579999924
    2. '("{}' → logprob: -3.6591200828552246
    3. 'f' → logprob: -5.659120082855225
    4. '('{}' → logprob: -6.159120082855225
    5. '("' → logprob: -7.284120082855225
    6. '[f' → logprob: -7.784120082855225
    7. '([' → logprob: -7.909120082855225
    8. '('' → logprob: -8.409119606018066
    9. '((' → logprob: -8.909119606018066
    10. '("%' → logprob: -9.159119606018066

Token 159: '"{' (ID: 27510)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.6579731106758118
    2. '(f' → logprob: -0.7829731106758118
    3. '"{' → logprob: -3.782973051071167
    4. '("{}' → logprob: -6.657973289489746
    5. ' f' → logprob: -7.907973289489746
    6. '"' → logprob: -8.657973289489746
    7. '('{}' → logprob: -8.782973289489746
    8. ''{' → logprob: -9.657973289489746
    9. '(str' → logprob: -10.157973289489746
    10. '("%' → logprob: -10.532973289489746

Token 160: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0013883279170840979
    2. 'a' → logprob: -6.6263885498046875
    3. 'x' → logprob: -10.001388549804688
    4. 'e' → logprob: -12.001388549804688
    5. ' u' → logprob: -12.251388549804688
    6. '   ' → logprob: -13.376388549804688
    7. '(u' → logprob: -13.751388549804688
    8. 'f' → logprob: -13.876388549804688
    9. 'i' → logprob: -14.751388549804688
    10. 's' → logprob: -15.376388549804688

Token 161: '}' (ID: 92)
  Prédit: '}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.0006077215657569468
    2. ' {' → logprob: -7.500607490539551
    3. ' }' → logprob: -10.00060749053955
    4. '{' → logprob: -12.37560749053955
    5. ' v' → logprob: -12.50060749053955
    6. ' f' → logprob: -14.75060749053955
    7. '"' → logprob: -15.12560749053955
    8. ' ' → logprob: -15.75060749053955
    9. ' u' → logprob: -15.75060749053955
    10. '   ' → logprob: -16.375608444213867

Token 162: ' {' (ID: 354)
  Prédit: ' {'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {' → logprob: -0.012815933674573898
    2. ' v' → logprob: -4.387815952301025
    3. '{' → logprob: -8.137815475463867
    4. '}' → logprob: -11.512815475463867
    5. ' {(' → logprob: -14.137815475463867
    6. ' f' → logprob: -14.262815475463867
    7. '{i' → logprob: -14.262815475463867
    8. ' {}' → logprob: -14.387815475463867
    9. 'v' → logprob: -15.012815475463867
    10. '{}' → logprob: -15.012815475463867

Token 163: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -2.2200749754119897e-06
    2. ' v' → logprob: -13.250001907348633
    3. '   ' → logprob: -15.625001907348633
    4. '	v' → logprob: -16.625001907348633
    5. '
' → logprob: -16.875001907348633
    6. '{' → logprob: -16.875001907348633
    7. 'w' → logprob: -17.000001907348633
    8. 'u' → logprob: -17.125001907348633
    9. '(v' → logprob: -17.125001907348633
    10. ' ' → logprob: -17.500001907348633

Token 164: '}\' (ID: 21170)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.4740842282772064
    2. '}\' → logprob: -0.9740842580795288
    3. ')\' → logprob: -13.47408390045166
    4. '}' → logprob: -13.59908390045166
    5. '   ' → logprob: -14.09908390045166
    6. '"\' → logprob: -14.22408390045166
    7. 'n' → logprob: -14.22408390045166
    8. '
' → logprob: -14.34908390045166
    9. ' \' → logprob: -14.84908390045166
    10. '}\\' → logprob: -15.09908390045166

Token 165: 'n' (ID: 77)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -9.031157969729975e-05
    2. 'n' → logprob: -9.375090599060059
    3. '"\' → logprob: -13.375090599060059
    4. '}\' → logprob: -14.000090599060059
    5. '```' → logprob: -14.125090599060059
    6. '
' → logprob: -14.125090599060059
    7. '")' → logprob: -14.250090599060059
    8. '\' → logprob: -15.125090599060059
    9. '"' → logprob: -15.625090599060059
    10. '{' → logprob: -15.875090599060059

Token 166: '"' (ID: 1)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.11897215992212296
    2. 'for' → logprob: -2.243972063064575
    3. ')' → logprob: -5.243972301483154
    4. '"' → logprob: -7.243972301483154
    5. '   ' → logprob: -9.493971824645996
    6. '```' → logprob: -10.868971824645996
    7. '	for' → logprob: -11.243971824645996
    8. '")' → logprob: -11.243971824645996
    9. '       ' → logprob: -11.868971824645996
    10. ' ' → logprob: -13.243971824645996

Token 167: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5767433643341064
    2. ' for' → logprob: -0.8267433643341064
    3. ')' → logprob: -7.576743125915527
    4. '   ' → logprob: -8.576743125915527
    5. '       ' → logprob: -9.951743125915527
    6. '           ' → logprob: -11.076743125915527
    7. '	for' → logprob: -11.576743125915527
    8. ' ' → logprob: -11.826743125915527
    9. '         ' → logprob: -12.451743125915527
    10. '```' → logprob: -12.451743125915527

Token 168: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0001129602751461789
    2. '(u' → logprob: -9.250112533569336
    3. ' u' → logprob: -11.000112533569336
    4. '   ' → logprob: -16.375112533569336
    5. ' (' → logprob: -17.625112533569336
    6. '	u' → logprob: -18.000112533569336
    7. '_,' → logprob: -18.875112533569336
    8. '
' → logprob: -18.875112533569336
    9. '[u' → logprob: -18.875112533569336
    10. '```' → logprob: -19.000112533569336

Token 169: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6931743621826172
    2. ',v' → logprob: -0.6931743621826172
    3. ' ,' → logprob: -11.068174362182617
    4. 'v' → logprob: -11.568174362182617
    5. ',
' → logprob: -14.193174362182617
    6. '```' → logprob: -14.943174362182617
    7. 'in' → logprob: -15.443174362182617
    8. '<v' → logprob: -16.068174362182617
    9. '_,' → logprob: -16.193174362182617
    10. ' v' → logprob: -16.568174362182617

Token 170: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.1041145626222715e-05
    2. 'edges' → logprob: -12.000011444091797
    3. ' v' → logprob: -12.250011444091797
    4. ' edges' → logprob: -16.875011444091797
    5. '   ' → logprob: -18.000011444091797
    6. '```' → logprob: -18.875011444091797
    7. ')v' → logprob: -19.125011444091797
    8. '	v' → logprob: -19.250011444091797
    9. '(v' → logprob: -20.000011444091797
    10. '_v' → logprob: -20.500011444091797

Token 171: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.22542071342468262
    2. 'in' → logprob: -1.6004207134246826
    3. '<|end|>' → logprob: -12.975420951843262
    4. ')' → logprob: -13.100420951843262
    5. 'edges' → logprob: -13.225420951843262
    6. '   ' → logprob: -14.600420951843262
    7. 's' → logprob: -14.850420951843262
    8. '	in' → logprob: -15.725420951843262
    9. 'inthe' → logprob: -16.225419998168945
    10. 'In' → logprob: -16.350419998168945

Token 172: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.000553151941858232
    2. ' edges' → logprob: -7.500553131103516
    3. '.edges' → logprob: -16.250553131103516
    4. '(edges' → logprob: -16.875553131103516
    5. '   ' → logprob: -18.875553131103516
    6. ')' → logprob: -19.375553131103516
    7. '_edges' → logprob: -19.875553131103516
    8. '```' → logprob: -20.250553131103516
    9. 'Edges' → logprob: -21.125553131103516
    10. '
' → logprob: -21.250553131103516

Token 173: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.961759259458631e-06
    2. ')
' → logprob: -13.250004768371582
    3. '))' → logprob: -13.500004768371582
    4. ' )' → logprob: -13.750004768371582
    5. '   ' → logprob: -14.625004768371582
    6. '())' → logprob: -16.3750057220459
    7. ')}' → logprob: -16.5000057220459
    8. ')`' → logprob: -17.8750057220459
    9. ')**' → logprob: -18.5000057220459
    10. ')}}' → logprob: -18.5000057220459

Token 174: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 175: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.12698112428188324
    2. '__' → logprob: -2.126981019973755
    3. 'name' → logprob: -11.001980781555176
    4. '_name' → logprob: -11.126980781555176
    5. ' ' → logprob: -11.251980781555176
    6. ' ' → logprob: -12.751980781555176
    7. '_' → logprob: -13.376980781555176
    8. '  ' → logprob: -13.626980781555176
    9. 'Name' → logprob: -13.751980781555176
    10. ' name' → logprob: -14.001980781555176

Token 176: 'name' (ID: 897)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4886462390422821
    2. '__' → logprob: -1.1136462688446045
    3. '==' → logprob: -2.9886462688446045
    4. ' __' → logprob: -5.113646030426025
    5. 'name' → logprob: -6.863646030426025
    6. '=="' → logprob: -7.738646030426025
    7. '.__' → logprob: -9.363646507263184
    8. '=='' → logprob: -9.988646507263184
    9. 'if' → logprob: -10.238646507263184
    10. ' =="' → logprob: -10.363646507263184

Token 177: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -4.024604277219623e-05
    2. '==' → logprob: -10.250040054321289
    3. '=="' → logprob: -13.250040054321289
    4. '__.__' → logprob: -13.750040054321289
    5. '_' → logprob: -14.125040054321289
    6. '___' → logprob: -14.500040054321289
    7. ' ==' → logprob: -15.250040054321289
    8. '```' → logprob: -16.25004005432129
    9. '____' → logprob: -16.50004005432129
    10. '__('' → logprob: -16.75004005432129

Token 178: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6648189425468445
    2. ' ==' → logprob: -0.7898189425468445
    3. '__' → logprob: -3.6648190021514893
    4. '=="' → logprob: -5.28981876373291
    5. '=='' → logprob: -6.91481876373291
    6. '=' → logprob: -11.28981876373291
    7. '==
' → logprob: -11.66481876373291
    8. '===' → logprob: -11.66481876373291
    9. '_' → logprob: -11.78981876373291
    10. ' =="' → logprob: -12.53981876373291

Token 179: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.01816106028854847
    2. ''' → logprob: -4.018161296844482
    3. '__' → logprob: -11.893160820007324
    4. ' "__' → logprob: -12.643160820007324
    5. '"user' → logprob: -15.018160820007324
    6. '"name' → logprob: -15.518160820007324
    7. ''"' → logprob: -15.768160820007324
    8. ' '__' → logprob: -16.64316177368164
    9. '"'' → logprob: -16.76816177368164
    10. '"_' → logprob: -17.76816177368164

Token 180: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.00011117222311440855
    2. 'name' → logprob: -9.25011157989502
    3. '__' → logprob: -11.87511157989502
    4. 'py' → logprob: -12.50011157989502
    5. 'built' → logprob: -13.37511157989502
    6. 'python' → logprob: -14.75011157989502
    7. '"' → logprob: -14.75011157989502
    8. ' main' → logprob: -14.75011157989502
    9. 'g' → logprob: -15.25011157989502
    10. '_main' → logprob: -15.50011157989502

Token 181: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.004174917936325073
    2. '__' → logprob: -5.504174709320068
    3. '__':
' → logprob: -9.254175186157227
    4. '__.' → logprob: -15.379175186157227
    5. '__["' → logprob: -15.379175186157227
    6. '__.__' → logprob: -15.629175186157227
    7. '__:' → logprob: -17.254175186157227
    8. '__
' → logprob: -17.254175186157227
    9. '__()
' → logprob: -18.254175186157227
    10. '__("' → logprob: -18.379175186157227

Token 182: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07690352201461792
    2. ' main' → logprob: -2.7019035816192627
    3. '	main' → logprob: -5.451903343200684
    4. 'main' → logprob: -5.951903343200684
    5. '   ' → logprob: -10.451903343200684
    6. '_main' → logprob: -11.826903343200684
    7. '    
' → logprob: -12.451903343200684
    8. '(main' → logprob: -12.701903343200684
    9. ' ' → logprob: -13.451903343200684
    10. '<|end|>' → logprob: -13.701903343200684

Token 183: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -0.00013762809976469725
    2. ' main' → logprob: -9.375137329101562
    3. '   ' → logprob: -10.375137329101562
    4. '	main' → logprob: -10.750137329101562
    5. '_main' → logprob: -16.750137329101562
    6. '(main' → logprob: -19.125137329101562
    7. '  ' → logprob: -19.375137329101562
    8. '.main' → logprob: -19.750137329101562
    9. ' ' → logprob: -19.875137329101562
    10. 'Main' → logprob: -20.125137329101562

Token 184: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 182
Tokens correctement prédits (1ère position, stricte): 82
Tokens correctement prédits (1ère position, avec adaptation): 86
Tokens correctement prédits (top 10): 163
Précision stricte (1ère position): 45.05%
Précision adaptée (1ère position): 47.25%
Précision (top 10): 89.56%
================================================================================
