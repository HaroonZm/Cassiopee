================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:48:43
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n, k = map(int, input().split())
s = input()
m = min(s)
p = 0
while p < k:
    u = s + s[::-1]
    l = []
    cnt = 0
    idx = 0
    i = 0
    while i < n * 2:
        if u[i] == m:
            if cnt == 0:
                idx = i
            cnt += 1
        else:
            if cnt > 0:
                l.append((cnt, idx))
                cnt = 0
        i += 1
    if cnt > 0:
        l.append((cnt, idx))
    a, j = 0, 0
    for x, y in l:
        if x > a:
            a, j = x, y
    if a >= n:
        print(m * n)
        exit(0)
    t = s
    for c, i in l:
        if i <= n and c == a:
            if u[i:i + n] < t:
                t = u[i:i + n]
    s = t[::-1]
    p += 1
print(s[::-1])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' k' (ID: 372)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.031988099217414856
    2. ' =' → logprob: -3.5319881439208984
    3. ',' → logprob: -6.156988143920898
    4. ' ' → logprob: -10.656988143920898
    5. '=
' → logprob: -11.031988143920898
    6. ')' → logprob: -11.156988143920898
    7. '=

' → logprob: -11.781988143920898
    8. ';' → logprob: -11.906988143920898
    9. ''' → logprob: -12.031988143920898
    10. '```' → logprob: -12.156988143920898

Token 4: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4397924542427063
    2. ' map' → logprob: -1.4397923946380615
    3. 'map' → logprob: -2.9397923946380615
    4. '0' → logprob: -3.5647923946380615
    5. ' n' → logprob: -4.439792633056641
    6. ' input' → logprob: -4.689792633056641
    7. 'input' → logprob: -4.689792633056641
    8. '10' → logprob: -5.314792633056641
    9. ' int' → logprob: -7.189792633056641
    10. '1' → logprob: -7.814792633056641

Token 5: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7028917074203491
    2. '<|end|>' → logprob: -0.8278917074203491
    3. '```' → logprob: -3.7028918266296387
    4. '(int' → logprob: -4.452891826629639
    5. '<|end|>' → logprob: -4.702891826629639
    6. '(lambda' → logprob: -4.827891826629639
    7. ')' → logprob: -6.077891826629639
    8. '(str' → logprob: -6.702891826629639
    9. '(user' → logprob: -7.077891826629639
    10. '(input' → logprob: -7.327891826629639

Token 6: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.04133095592260361
    2. 'input' → logprob: -3.6663310527801514
    3. ')' → logprob: -4.416330814361572
    4. '(' → logprob: -6.291330814361572
    5. ' input' → logprob: -8.04133129119873
    6. '```' → logprob: -8.16633129119873
    7. ',input' → logprob: -9.66633129119873
    8. '`' → logprob: -9.66633129119873
    9. '(int' → logprob: -9.79133129119873
    10. '[input' → logprob: -10.29133129119873

Token 7: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.31332793831825256
    2. ' input' → logprob: -1.3133279085159302
    3. '(input' → logprob: -9.68832778930664
    4. ')' → logprob: -12.81332778930664
    5. ',input' → logprob: -13.81332778930664
    6. '=input' → logprob: -15.81332778930664
    7. '[input' → logprob: -16.93832778930664
    8. '<input' → logprob: -17.31332778930664
    9. '	input' → logprob: -17.31332778930664
    10. '```' → logprob: -17.56332778930664

Token 8: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.36879536509513855
    2. '()' → logprob: -1.493795394897461
    3. '(' → logprob: -3.618795394897461
    4. ')' → logprob: -3.868795394897461
    5. '().' → logprob: -4.368795394897461
    6. '`()' → logprob: -5.118795394897461
    7. '`)' → logprob: -6.118795394897461
    8. '```' → logprob: -6.118795394897461
    9. '();)' → logprob: -6.243795394897461
    10. '(""))' → logprob: -6.493795394897461

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0011930868495255709
    2. 'strip' → logprob: -6.751193046569824
    3. ' split' → logprob: -11.376193046569824
    4. 'rstrip' → logprob: -11.501193046569824
    5. ')' → logprob: -14.626193046569824
    6. '(split' → logprob: -14.876193046569824
    7. 'read' → logprob: -15.251193046569824
    8. 'spl' → logprob: -15.626193046569824
    9. 'startswith' → logprob: -17.00119400024414
    10. ' strip' → logprob: -17.50119400024414

Token 10: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07393181324005127
    2. '))' → logprob: -2.6989316940307617
    3. '())' → logprob: -5.573931694030762
    4. '()' → logprob: -9.448931694030762
    5. '()))' → logprob: -10.073931694030762
    6. '(' → logprob: -10.698931694030762
    7. '`)' → logprob: -10.948931694030762
    8. ')`' → logprob: -11.698931694030762
    9. ')))' → logprob: -11.823931694030762
    10. '),' → logprob: -13.073931694030762

Token 11: 's' (ID: 82)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.34434014558792114
    2. '
' → logprob: -2.7193400859832764
    3. 'if' → logprob: -2.9693400859832764
    4. 'for' → logprob: -3.5943400859832764
    5. 'a' → logprob: -4.0943403244018555
    6. 'i' → logprob: -4.2193403244018555
    7. '\' → logprob: -4.2193403244018555
    8. 'x' → logprob: -4.4693403244018555
    9. '`' → logprob: -4.4693403244018555
    10. '#' → logprob: -4.4693403244018555

Token 12: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.030909880995750427
    2. '.' → logprob: -3.905909776687622
    3. '[:]' → logprob: -5.905910015106201
    4. '=' → logprob: -6.155910015106201
    5. '[:' → logprob: -6.405910015106201
    6. ' =' → logprob: -6.905910015106201
    7. '[s' → logprob: -7.655910015106201
    8. '[]' → logprob: -8.405909538269043
    9. '[n' → logprob: -8.405909538269043
    10. '[i' → logprob: -8.530909538269043

Token 13: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.6327384114265442
    2. 'input' → logprob: -0.7577384114265442
    3. ' list' → logprob: -10.38273811340332
    4. '"' → logprob: -10.63273811340332
    5. 'list' → logprob: -11.00773811340332
    6. '[input' → logprob: -11.13273811340332
    7. '""' → logprob: -11.63273811340332
    8. ''' → logprob: -12.13273811340332
    9. '(input' → logprob: -12.38273811340332
    10. 's' → logprob: -12.50773811340332

Token 14: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1283094584941864
    2. '()' → logprob: -2.128309488296509
    3. '('' → logprob: -7.62830924987793
    4. ')' → logprob: -7.62830924987793
    5. ''' → logprob: -8.50330924987793
    6. '(
' → logprob: -10.50330924987793
    7. '"' → logprob: -10.75330924987793
    8. '.' → logprob: -10.87830924987793
    9. '```' → logprob: -10.87830924987793
    10. '("("' → logprob: -11.12830924987793

Token 15: 'm' (ID: 76)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.9195663928985596
    2. 'count' → logprob: -1.4195663928985596
    3. 'dp' → logprob: -1.9195663928985596
    4. 'if' → logprob: -2.1695663928985596
    5. 'd' → logprob: -3.6695663928985596
    6. 'c' → logprob: -3.9195663928985596
    7. 'for' → logprob: -4.0445661544799805
    8. '_' → logprob: -4.6695661544799805
    9. 'counts' → logprob: -4.7945661544799805
    10. 't' → logprob: -5.9195661544799805

Token 16: ' =' (ID: 314)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.12400399893522263
    2. ' =' → logprob: -2.6240038871765137
    3. 'ap' → logprob: -4.249003887176514
    4. 'o' → logprob: -4.999003887176514
    5. '[a' → logprob: -5.124003887176514
    6. '=' → logprob: -5.624003887176514
    7. 'od' → logprob: -5.874003887176514
    8. 'ax' → logprob: -5.999003887176514
    9. '[' → logprob: -5.999003887176514
    10. 'apping' → logprob: -6.624003887176514

Token 17: ' min' (ID: 1349)
  Prédit: ' {}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' {}' → logprob: -0.2452404946088791
    2. '{}' → logprob: -1.7452404499053955
    3. ' ' → logprob: -3.6202404499053955
    4. '0' → logprob: -5.370240688323975
    5. 'len' → logprob: -5.745240688323975
    6. ' len' → logprob: -5.995240688323975
    7. ' []' → logprob: -6.245240688323975
    8. ' defaultdict' → logprob: -7.245240688323975
    9. ' {' → logprob: -7.620240688323975
    10. ' k' → logprob: -7.620240688323975

Token 18: '(s' (ID: 1858)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.14770375192165375
    2. '(len' → logprob: -2.0227036476135254
    3. '(s' → logprob: -5.397703647613525
    4. '(n' → logprob: -8.897704124450684
    5. '(l' → logprob: -9.522704124450684
    6. '(
' → logprob: -9.647704124450684
    7. '(k' → logprob: -9.772704124450684
    8. '(m' → logprob: -10.647704124450684
    9. 's' → logprob: -10.772704124450684
    10. '((' → logprob: -10.772704124450684

Token 19: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.048513781279325485
    2. '(' → logprob: -4.048513889312744
    3. '))' → logprob: -4.673513889312744
    4. ',' → logprob: -5.048513889312744
    5. '(len' → logprob: -5.048513889312744
    6. '())' → logprob: -6.798513889312744
    7. '[' → logprob: -6.923513889312744
    8. 'len' → logprob: -6.923513889312744
    9. ' )' → logprob: -7.298513889312744
    10. ',)' → logprob: -7.423513889312744

Token 20: 'p' (ID: 79)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5858104228973389
    2. ' ' → logprob: -1.8358104228973389
    3. '_' → logprob: -2.460810422897339
    4. '.' → logprob: -2.585810422897339
    5. ',' → logprob: -3.960810422897339
    6. 's' → logprob: -3.960810422897339
    7. 'n' → logprob: -4.085810661315918
    8. 'm' → logprob: -4.710810661315918
    9. '(' → logprob: -4.835810661315918
    10. '=' → logprob: -5.085810661315918

Token 21: ' =' (ID: 314)
  Prédit: 'os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'os' → logprob: -0.09176485985517502
    2. 'r' → logprob: -2.7167649269104004
    3. '=' → logprob: -4.7167649269104
    4. 'osition' → logprob: -4.9667649269104
    5. ' =' → logprob: -6.3417649269104
    6. 'o' → logprob: -6.8417649269104
    7. '=os' → logprob: -7.3417649269104
    8. '=r' → logprob: -7.4667649269104
    9. '(os' → logprob: -8.591764450073242
    10. ' os' → logprob: -8.716764450073242

Token 22: ' ' (ID: 220)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5070245862007141
    2. ' s' → logprob: -1.1320245265960693
    3. ' len' → logprob: -3.7570245265960693
    4. '0' → logprob: -3.8820245265960693
    5. 'len' → logprob: -4.257024765014648
    6. ' ' → logprob: -4.757024765014648
    7. ' [' → logprob: -6.132024765014648
    8. ' n' → logprob: -7.007024765014648
    9. 'k' → logprob: -7.007024765014648
    10. ' k' → logprob: -7.132024765014648

Token 23: '0' (ID: 15)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.050436507910490036
    2. 'len' → logprob: -3.800436496734619
    3. 'k' → logprob: -4.425436496734619
    4. '0' → logprob: -5.425436496734619
    5. '[' → logprob: -5.800436496734619
    6. '[s' → logprob: -5.925436496734619
    7. 'min' → logprob: -6.925436496734619
    8. 'm' → logprob: -7.050436496734619
    9. 'n' → logprob: -7.300436496734619
    10. '[len' → logprob: -8.300436973571777

Token 24: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 25: 'while' (ID: 7032)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.27116355299949646
    2. ' for' → logprob: -1.5211635828018188
    3. 'while' → logprob: -4.646163463592529
    4. ' while' → logprob: -5.521163463592529
    5. 'i' → logprob: -6.146163463592529
    6. 'f' → logprob: -6.771163463592529
    7. ',' → logprob: -7.646163463592529
    8. 's' → logprob: -8.396163940429688
    9. 'n' → logprob: -8.646163940429688
    10. 'x' → logprob: -8.896163940429688

Token 26: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.006605476140975952
    2. 'p' → logprob: -5.131605625152588
    3. ' ' → logprob: -8.50660514831543
    4. ' s' → logprob: -8.50660514831543
    5. ' n' → logprob: -8.75660514831543
    6. ' k' → logprob: -9.88160514831543
    7. ' m' → logprob: -11.13160514831543
    8. '(p' → logprob: -11.38160514831543
    9. 's' → logprob: -11.63160514831543
    10. ' True' → logprob: -11.63160514831543

Token 27: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.008300019428133965
    2. '<' → logprob: -5.258299827575684
    3. ' ' → logprob: -6.133299827575684
    4. ' <=' → logprob: -7.133299827575684
    5. '+' → logprob: -10.008299827575684
    6. '<len' → logprob: -11.258299827575684
    7. '<=' → logprob: -11.633299827575684
    8. ' !=' → logprob: -12.008299827575684
    9. ' +' → logprob: -12.133299827575684
    10. '  ' → logprob: -12.633299827575684

Token 28: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.37073612213134766
    2. ' k' → logprob: -1.9957361221313477
    3. 'n' → logprob: -2.3707361221313477
    4. ' n' → logprob: -2.6207361221313477
    5. 'len' → logprob: -5.495736122131348
    6. ' len' → logprob: -5.745736122131348
    7. ' ' → logprob: -7.995736122131348
    8. 's' → logprob: -10.995736122131348
    9. ' s' → logprob: -11.620736122131348
    10. 'l' → logprob: -12.058236122131348

Token 29: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.06379616260528564
    2. 'and' → logprob: -3.313796043395996
    3. ':' → logprob: -3.688796043395996
    4. ' :' → logprob: -8.438796043395996
    5. ' or' → logprob: -9.063796043395996
    6. ' ' → logprob: -9.563796043395996
    7. 'or' → logprob: -11.938796043395996
    8. '+' → logprob: -12.313796043395996
    9. ':
' → logprob: -12.313796043395996
    10. '0' → logprob: -14.563796043395996

Token 30: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7938472628593445
    2. ' ' → logprob: -1.4188473224639893
    3. '<|end|>' → logprob: -2.0438473224639893
    4. ' if' → logprob: -2.4188473224639893
    5. ' p' → logprob: -3.7938473224639893
    6. ' s' → logprob: -3.7938473224639893
    7. '    ' → logprob: -4.66884708404541
    8. 's' → logprob: -5.16884708404541
    9. '+' → logprob: -5.29384708404541
    10. 'p' → logprob: -5.29384708404541

Token 31: ' u' (ID: 337)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.1093765497207642
    2. ' ' → logprob: -1.7343765497207642
    3. ' s' → logprob: -1.8593765497207642
    4. 'if' → logprob: -2.4843764305114746
    5. 's' → logprob: -2.6093764305114746
    6. ' p' → logprob: -2.8593764305114746
    7. '   ' → logprob: -3.3593764305114746
    8. 'p' → logprob: -4.109376430511475
    9. ':' → logprob: -4.484376430511475
    10. ' and' → logprob: -4.609376430511475

Token 32: ' =' (ID: 314)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.9104928374290466
    2. ' =' → logprob: -0.9104928374290466
    3. '=' → logprob: -2.0354928970336914
    4. 'se' → logprob: -3.5354928970336914
    5. '+=' → logprob: -4.660492897033691
    6. 's' → logprob: -5.410492897033691
    7. 'nit' → logprob: -5.535492897033691
    8. ' +=' → logprob: -5.660492897033691
    9. 'n' → logprob: -6.160492897033691
    10. ',' → logprob: -6.410492897033691

Token 33: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.8023142218589783
    2. ' m' → logprob: -1.427314281463623
    3. ' p' → logprob: -1.677314281463623
    4. 's' → logprob: -3.302314281463623
    5. 'm' → logprob: -3.677314281463623
    6. ' min' → logprob: -4.177314281463623
    7. 'p' → logprob: -4.302314281463623
    8. ' max' → logprob: -4.927314281463623
    9. ' n' → logprob: -4.927314281463623
    10. ' len' → logprob: -5.427314281463623

Token 34: ' +' (ID: 659)
  Prédit: '.replace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.replace' → logprob: -0.6616044640541077
    2. '.index' → logprob: -1.286604404449463
    3. '.find' → logprob: -1.661604404449463
    4. '.' → logprob: -4.786604404449463
    5. '+' → logprob: -5.411604404449463
    6. '+p' → logprob: -7.036604404449463
    7. '.count' → logprob: -7.286604404449463
    8. ' +' → logprob: -7.411604404449463
    9. '.p' → logprob: -7.411604404449463
    10. '.r' → logprob: -7.536604404449463

Token 35: ' s' (ID: 265)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.3756021559238434
    2. ' m' → logprob: -1.500602126121521
    3. 's' → logprob: -3.0006022453308105
    4. ' s' → logprob: -3.5006022453308105
    5. 'chr' → logprob: -6.0006022453308105
    6. ''' → logprob: -6.5006022453308105
    7. 'str' → logprob: -6.5006022453308105
    8. ' str' → logprob: -7.3756022453308105
    9. ' chr' → logprob: -7.3756022453308105
    10. ' '' → logprob: -7.7506022453308105

Token 36: '[::-' (ID: 159890)
  Prédit: '[p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.07322057336568832
    2. '[' → logprob: -3.1982204914093018
    3. '[:' → logprob: -3.9482204914093018
    4. '[m' → logprob: -4.948220729827881
    5. '[u' → logprob: -6.573220729827881
    6. '[:]' → logprob: -7.948220729827881
    7. '[::-' → logprob: -8.323220252990723
    8. '[:-' → logprob: -8.323220252990723
    9. '[min' → logprob: -8.448220252990723
    10. '<|end|>' → logprob: -8.823220252990723

Token 37: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08234734833240509
    2. 'rs' → logprob: -3.2073473930358887
    3. 's' → logprob: -3.5823473930358887
    4. 'r' → logprob: -5.207347393035889
    5. 'sel' → logprob: -6.707347393035889
    6. 'se' → logprob: -7.082347393035889
    7. '[' → logprob: -8.08234691619873
    8. 'ser' → logprob: -8.08234691619873
    9. 'slice' → logprob: -8.33234691619873
    10. '```' → logprob: -8.58234691619873

Token 38: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.09778125584125519
    2. '[p' → logprob: -2.472781181335449
    3. ')' → logprob: -5.472781181335449
    4. '[' → logprob: -5.972781181335449
    5. '])' → logprob: -7.097781181335449
    6. '][' → logprob: -7.972781181335449
    7. '[:' → logprob: -8.22278118133545
    8. ']
' → logprob: -8.47278118133545
    9. 'p' → logprob: -8.84778118133545
    10. '][:' → logprob: -9.84778118133545

Token 39: '   ' (ID: 271)
  Prédit: '[p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.2255280315876007
    2. '[' → logprob: -1.8505280017852783
    3. '<|end|>' → logprob: -3.9755280017852783
    4. '   ' → logprob: -5.725528240203857
    5. '[u' → logprob: -5.725528240203857
    6. 'p' → logprob: -5.725528240203857
    7. '.find' → logprob: -5.850528240203857
    8. '.index' → logprob: -6.600528240203857
    9. '.replace' → logprob: -6.600528240203857
    10. '[n' → logprob: -6.850528240203857

Token 40: ' l' (ID: 305)
  Prédit: '[p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.14121733605861664
    2. '[' → logprob: -2.5162172317504883
    3. 'p' → logprob: -3.3912172317504883
    4. '.replace' → logprob: -5.641217231750488
    5. '[u' → logprob: -6.016217231750488
    6. '.find' → logprob: -6.391217231750488
    7. '<|end|>' → logprob: -6.391217231750488
    8. '.index' → logprob: -6.516217231750488
    9. '.' → logprob: -6.891217231750488
    10. '   ' → logprob: -7.141217231750488

Token 41: ' =' (ID: 314)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.29998770356178284
    2. ' =' → logprob: -1.6749876737594604
    3. '=' → logprob: -2.92498779296875
    4. '=len' → logprob: -4.17498779296875
    5. 'e' → logprob: -7.29998779296875
    6. 'ist' → logprob: -8.04998779296875
    7. 'et' → logprob: -8.29998779296875
    8. 'ength' → logprob: -8.42498779296875
    9. 'l' → logprob: -8.67498779296875
    10. '   ' → logprob: -8.79998779296875

Token 42: ' []
' (ID: 8911)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.49307820200920105
    2. ' len' → logprob: -1.6180782318115234
    3. '0' → logprob: -2.4930782318115234
    4. 'en' → logprob: -3.2430782318115234
    5. ' ' → logprob: -3.9930782318115234
    6. 'min' → logprob: -4.243078231811523
    7. 'u' → logprob: -5.493078231811523
    8. ' p' → logprob: -5.618078231811523
    9. ' min' → logprob: -5.743078231811523
    10. ' u' → logprob: -5.743078231811523

Token 43: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6518085598945618
    2. 'for' → logprob: -0.7768085598945618
    3. 'p' → logprob: -4.526808738708496
    4. 'u' → logprob: -5.901808738708496
    5. ' p' → logprob: -6.651808738708496
    6. '<|end|>' → logprob: -7.151808738708496
    7. '   ' → logprob: -7.276808738708496
    8. 'n' → logprob: -7.651808738708496
    9. ' ' → logprob: -7.776808738708496
    10. ' u' → logprob: -8.276808738708496

Token 44: ' cnt' (ID: 27340)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.15818560123443604
    2. ' for' → logprob: -2.0331854820251465
    3. 'p' → logprob: -4.4081854820251465
    4. 'u' → logprob: -6.9081854820251465
    5. '   ' → logprob: -7.9081854820251465
    6. '[' → logprob: -8.033185958862305
    7. 'i' → logprob: -8.533185958862305
    8. ' p' → logprob: -8.533185958862305
    9. 'n' → logprob: -8.658185958862305
    10. 'l' → logprob: -8.783185958862305

Token 45: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31544920802116394
    2. '=' → logprob: -1.3154492378234863
    3. ' ' → logprob: -6.190449237823486
    4. ',' → logprob: -9.440448760986328
    5. '  ' → logprob: -11.315448760986328
    6. '[' → logprob: -11.690448760986328
    7. '<|end|>' → logprob: -11.815448760986328
    8. ')' → logprob: -11.940448760986328
    9. 's' → logprob: -12.065448760986328
    10. 'a' → logprob: -12.940448760986328

Token 46: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10110760480165482
    2. ' ' → logprob: -2.351107597351074
    3. ' p' → logprob: -8.226107597351074
    4. '1' → logprob: -8.601107597351074
    5. 'p' → logprob: -8.726107597351074
    6. '{}' → logprob: -9.726107597351074
    7. ' [' → logprob: -9.851107597351074
    8. '{' → logprob: -9.976107597351074
    9. '[' → logprob: -10.351107597351074
    10. ' {}' → logprob: -11.226107597351074

Token 47: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003857316682115197
    2. '1' → logprob: -6.753857135772705
    3. 'p' → logprob: -7.253857135772705
    4. '{}' → logprob: -7.378857135772705
    5. '{' → logprob: -7.753857135772705
    6. ' ' → logprob: -7.878857135772705
    7. 'u' → logprob: -8.628857612609863
    8. '[' → logprob: -9.253857612609863
    9. 'k' → logprob: -9.253857612609863
    10. 'm' → logprob: -10.128857612609863

Token 48: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0295439958572388
    2. '<|end|>' → logprob: -1.0295439958572388
    3. '   ' → logprob: -1.9045439958572388
    4. ' for' → logprob: -2.779543876647949
    5. 'for' → logprob: -3.654543876647949
    6. '    ' → logprob: -4.279543876647949
    7. ' 
' → logprob: -4.279543876647949
    8. '  ' → logprob: -5.029543876647949
    9. '<|end|>' → logprob: -5.654543876647949
    10. '       ' → logprob: -6.154543876647949

Token 49: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 50: ' idx' (ID: 14016)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5122233033180237
    2. ' for' → logprob: -1.012223243713379
    3. '   ' → logprob: -4.387223243713379
    4. 'n' → logprob: -5.262223243713379
    5. 'i' → logprob: -5.387223243713379
    6. 'p' → logprob: -5.512223243713379
    7. ' ' → logprob: -6.012223243713379
    8. 'if' → logprob: -6.387223243713379
    9. 'while' → logprob: -6.387223243713379
    10. ' while' → logprob: -6.762223243713379

Token 51: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16201747953891754
    2. '=' → logprob: -1.9120174646377563
    3. 's' → logprob: -6.787017345428467
    4. ' ' → logprob: -7.787017345428467
    5. 'x' → logprob: -9.662017822265625
    6. 'ex' → logprob: -10.162017822265625
    7. '<|end|>' → logprob: -10.162017822265625
    8. ',' → logprob: -11.037017822265625
    9. '_' → logprob: -11.162017822265625
    10. ')' → logprob: -11.162017822265625

Token 52: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.53017258644104
    2. ' ' → logprob: -0.90517258644104
    3. ' p' → logprob: -6.155172348022461
    4. 'p' → logprob: -6.530172348022461
    5. 's' → logprob: -7.030172348022461
    6. ' s' → logprob: -7.030172348022461
    7. ' -' → logprob: -7.030172348022461
    8. '-' → logprob: -7.655172348022461
    9. ' u' → logprob: -9.280172348022461
    10. 'u' → logprob: -9.405172348022461

Token 53: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02228761836886406
    2. '-' → logprob: -3.897287607192993
    3. 'p' → logprob: -6.647287845611572
    4. 'len' → logprob: -8.772287368774414
    5. '-p' → logprob: -9.522287368774414
    6. ' ' → logprob: -9.897287368774414
    7. 's' → logprob: -10.147287368774414
    8. 'n' → logprob: -10.647287368774414
    9. 'u' → logprob: -10.772287368774414
    10. ' -' → logprob: -10.772287368774414

Token 54: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4051142930984497
    2. '<|end|>' → logprob: -1.2801142930984497
    3. ' 
' → logprob: -3.40511417388916
    4. '   ' → logprob: -5.03011417388916
    5. '
' → logprob: -5.65511417388916
    6. '<|end|>' → logprob: -5.78011417388916
    7. '  ' → logprob: -6.28011417388916
    8. ' while' → logprob: -6.65511417388916
    9. 'while' → logprob: -7.15511417388916
    10. '  
' → logprob: -7.28011417388916

Token 55: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 56: ' i' (ID: 575)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.5242958068847656
    2. ' while' → logprob: -1.5242958068847656
    3. '<|end|>' → logprob: -2.3992958068847656
    4. 'for' → logprob: -3.0242958068847656
    5. ' ' → logprob: -4.024295806884766
    6. ' for' → logprob: -4.649295806884766
    7. 'n' → logprob: -4.899295806884766
    8. '   ' → logprob: -5.274295806884766
    9. ')' → logprob: -5.774295806884766
    10. 's' → logprob: -6.649295806884766

Token 57: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.782418429851532
    2. ' =' → logprob: -0.907418429851532
    3. 'nd' → logprob: -2.9074184894561768
    4. 'f' → logprob: -3.6574184894561768
    5. 'n' → logprob: -4.032418251037598
    6. ' +=' → logprob: -4.407418251037598
    7. '+=' → logprob: -4.657418251037598
    8. '+' → logprob: -5.282418251037598
    9. 'dx' → logprob: -5.282418251037598
    10. 'x' → logprob: -6.032418251037598

Token 58: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14101289212703705
    2. '0' → logprob: -2.1410129070281982
    3. ' p' → logprob: -4.391012668609619
    4. ' idx' → logprob: -7.516012668609619
    5. 'p' → logprob: -8.016013145446777
    6. '1' → logprob: -8.391013145446777
    7. ' n' → logprob: -8.516013145446777
    8. 'idx' → logprob: -9.516013145446777
    9. ' k' → logprob: -9.766013145446777
    10. ' len' → logprob: -10.016013145446777

Token 59: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.030515171587467194
    2. 'p' → logprob: -4.030515193939209
    3. 'idx' → logprob: -5.155515193939209
    4. '1' → logprob: -5.780515193939209
    5. ' ' → logprob: -6.030515193939209
    6. ' p' → logprob: -7.780515193939209
    7. ' idx' → logprob: -8.65551471710205
    8. 'n' → logprob: -8.78051471710205
    9. 'k' → logprob: -9.40551471710205
    10. 'len' → logprob: -9.53051471710205

Token 60: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 61: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 62: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -1.2795685529708862
    2. 'i' → logprob: -1.4045685529708862
    3. ' while' → logprob: -1.6545685529708862
    4. 'n' → logprob: -1.6545685529708862
    5. '<|end|>' → logprob: -3.779568672180176
    6. ' ' → logprob: -3.904568672180176
    7. ' i' → logprob: -4.654568672180176
    8. '<len' → logprob: -5.154568672180176
    9. '   ' → logprob: -5.404568672180176
    10. '<' → logprob: -5.654568672180176

Token 63: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.04416051134467125
    2. 'i' → logprob: -3.2941606044769287
    3. ' idx' → logprob: -5.41916036605835
    4. 'idx' → logprob: -6.91916036605835
    5. ' True' → logprob: -7.79416036605835
    6. 'True' → logprob: -8.669160842895508
    7. ' p' → logprob: -10.544160842895508
    8. ' ' → logprob: -10.919160842895508
    9. 'p' → logprob: -11.544160842895508
    10. '(i' → logprob: -11.794160842895508

Token 64: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.12151619046926498
    2. '<' → logprob: -2.246516227722168
    3. '<len' → logprob: -4.996516227722168
    4. '<n' → logprob: -6.746516227722168
    5. ' <=' → logprob: -8.246516227722168
    6. ' ' → logprob: -8.621516227722168
    7. '<p' → logprob: -8.746516227722168
    8. '<=' → logprob: -9.996516227722168
    9. '<s' → logprob: -11.246516227722168
    10. '<size' → logprob: -11.371516227722168

Token 65: ' n' (ID: 297)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3407038450241089
    2. 'len' → logprob: -1.8407038450241089
    3. ' len' → logprob: -3.0907039642333984
    4. 'n' → logprob: -3.3407039642333984
    5. ' n' → logprob: -3.5907039642333984
    6. ' ' → logprob: -3.8407039642333984
    7. '(' → logprob: -11.215703964233398
    8. '   ' → logprob: -11.590703964233398
    9. 'k' → logprob: -11.965703964233398
    10. ' (' → logprob: -12.090703964233398

Token 66: ' *' (ID: 425)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.1600637435913086
    2. ':' → logprob: -2.5350637435913086
    3. 'and' → logprob: -2.7850637435913086
    4. ':
' → logprob: -5.410063743591309
    5. '-' → logprob: -6.535063743591309
    6. ' -' → logprob: -8.035063743591309
    7. '   ' → logprob: -8.660063743591309
    8. '<|end|>' → logprob: -8.785063743591309
    9. ' ' → logprob: -9.035063743591309
    10. '+' → logprob: -10.035063743591309

Token 67: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0006994496798142791
    2. ' ' → logprob: -7.500699520111084
    3. 'k' → logprob: -9.875699043273926
    4. 'n' → logprob: -10.000699043273926
    5. '3' → logprob: -11.125699043273926
    6. '1' → logprob: -11.625699043273926
    7. '4' → logprob: -12.375699043273926
    8. '(' → logprob: -12.375699043273926
    9. '   ' → logprob: -12.750699043273926
    10. 'i' → logprob: -13.188199043273926

Token 68: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.600714161526412e-05
    2. 'k' → logprob: -10.375076293945312
    3. '1' → logprob: -11.000076293945312
    4. ' ' → logprob: -11.625076293945312
    5. '3' → logprob: -11.750076293945312
    6. 'n' → logprob: -12.250076293945312
    7. '4' → logprob: -13.375076293945312
    8. '(' → logprob: -13.375076293945312
    9. 'p' → logprob: -14.812576293945312
    10. 'i' → logprob: -14.812576293945312

Token 69: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.23863676190376282
    2. ' and' → logprob: -1.7386367321014404
    3. ':
' → logprob: -3.8636367321014404
    4. 'and' → logprob: -4.2386369705200195
    5. '-' → logprob: -7.2386369705200195
    6. ' -' → logprob: -8.61363697052002
    7. ' :' → logprob: -9.36363697052002
    8. '   ' → logprob: -10.11363697052002
    9. ' ' → logprob: -10.36363697052002
    10. ' :
' → logprob: -11.23863697052002

Token 70: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6634804010391235
    2. ':' → logprob: -2.038480281829834
    3. ' and' → logprob: -2.413480281829834
    4. ':
' → logprob: -2.413480281829834
    5. '<|end|>' → logprob: -2.413480281829834
    6. '   ' → logprob: -3.288480281829834
    7. ' if' → logprob: -3.663480281829834
    8. ',' → logprob: -5.288480281829834
    9. '<|end|>' → logprob: -5.538480281829834
    10. 'and' → logprob: -5.788480281829834

Token 71: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.18874141573905945
    2. '   ' → logprob: -2.813741445541382
    3. '       ' → logprob: -2.813741445541382
    4. 'if' (adapté à ' if') → logprob: -3.813741445541382
    5. '<|end|>' → logprob: -4.188741207122803
    6. ' ' → logprob: -5.063741207122803
    7. ' and' → logprob: -6.688741207122803
    8. 's' → logprob: -6.813741207122803
    9. '```' → logprob: -6.938741207122803
    10. '<|end|>' → logprob: -7.313741207122803

Token 72: ' u' (ID: 337)
  Prédit: ' u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.1803968846797943
    2. 'u' → logprob: -1.8053969144821167
    3. ' s' → logprob: -8.180397033691406
    4. ' ' → logprob: -9.055397033691406
    5. '   ' → logprob: -9.430397033691406
    6. 's' → logprob: -9.555397033691406
    7. ' i' → logprob: -10.680397033691406
    8. '	u' → logprob: -11.430397033691406
    9. '    ' → logprob: -11.492897033691406
    10. 'i' → logprob: -11.742897033691406

Token 73: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.277553620748222e-05
    2. '[' → logprob: -9.750062942504883
    3. '[idx' → logprob: -13.625062942504883
    4. ' [' → logprob: -14.125062942504883
    5. '[j' → logprob: -14.375062942504883
    6. '==' → logprob: -14.875062942504883
    7. '[u' → logprob: -14.875062942504883
    8. ' ==' → logprob: -15.625062942504883
    9. '[index' → logprob: -15.875062942504883
    10. '[p' → logprob: -15.875062942504883

Token 74: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6599360108375549
    2. ' ==' → logprob: -1.0349359512329102
    3. ']' → logprob: -2.28493595123291
    4. ']==' → logprob: -3.78493595123291
    5. '<' → logprob: -7.65993595123291
    6. '>' → logprob: -7.65993595123291
    7. '<=' → logprob: -7.90993595123291
    8. ' <' → logprob: -7.90993595123291
    9. ' !=' → logprob: -8.03493595123291
    10. '!=' → logprob: -8.15993595123291

Token 75: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3537289798259735
    2. '==' → logprob: -1.228729009628296
    3. ' !=' → logprob: -5.978728771209717
    4. '!=' → logprob: -7.228728771209717
    5. ' <=' → logprob: -7.603728771209717
    6. '<=' → logprob: -7.978728771209717
    7. ' <' → logprob: -8.103729248046875
    8. ' ' → logprob: -8.103729248046875
    9. ' >=' → logprob: -8.853729248046875
    10. '<' → logprob: -8.978729248046875

Token 76: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.03396942839026451
    2. ' m' → logprob: -3.4089694023132324
    3. 'u' → logprob: -8.78396987915039
    4. '	m' → logprob: -9.65896987915039
    5. 's' → logprob: -9.90896987915039
    6. ' ' → logprob: -11.15896987915039
    7. ''m' → logprob: -11.15896987915039
    8. '   ' → logprob: -12.15896987915039
    9. ' u' → logprob: -12.40896987915039
    10. ''' → logprob: -12.78396987915039

Token 77: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09216891974210739
    2. ':
' → logprob: -2.4671688079833984
    3. ' and' → logprob: -5.967168807983398
    4. ' or' → logprob: -8.217168807983398
    5. ' :' → logprob: -8.467168807983398
    6. ' :
' → logprob: -9.467168807983398
    7. 'and' → logprob: -9.967168807983398
    8. ':

' → logprob: -10.842168807983398
    9. ':
' → logprob: -11.217168807983398
    10. ' ' → logprob: -12.092168807983398

Token 78: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9406373500823975
    2. ' and' → logprob: -1.1906373500823975
    3. ':' → logprob: -2.3156373500823975
    4. '       ' → logprob: -2.9406373500823975
    5. ' cnt' → logprob: -2.9406373500823975
    6. ' ' → logprob: -3.5656373500823975
    7. ':
' → logprob: -3.6906373500823975
    8. 'cnt' → logprob: -4.315637588500977
    9. '<|end|>' → logprob: -5.190637588500977
    10. '        ' → logprob: -5.190637588500977

Token 79: ' if' (ID: 538)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.3532083034515381
    2. ' cnt' → logprob: -1.228208303451538
    3. 'l' → logprob: -5.978208541870117
    4. ' l' → logprob: -7.603208541870117
    5. 'c' → logprob: -7.978208541870117
    6. ' if' → logprob: -8.103208541870117
    7. '	cnt' → logprob: -8.353208541870117
    8. 'if' (adapté à ' if') → logprob: -8.603208541870117
    9. 'i' → logprob: -9.228208541870117
    10. 'idx' → logprob: -9.228208541870117

Token 80: ' cnt' (ID: 27340)
  Prédit: ' cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cnt' → logprob: -0.4366123676300049
    2. 'cnt' → logprob: -2.186612367630005
    3. ' i' → logprob: -2.561612367630005
    4. ' idx' → logprob: -2.686612367630005
    5. 'i' → logprob: -3.561612367630005
    6. ' l' → logprob: -3.811612367630005
    7. 'idx' → logprob: -4.186612129211426
    8. ' p' → logprob: -4.561612129211426
    9. 'l' → logprob: -5.311612129211426
    10. ' u' → logprob: -5.436612129211426

Token 81: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.14549945294857025
    2. '==' → logprob: -2.0204994678497314
    3. ' ' → logprob: -7.270499229431152
    4. ' +' → logprob: -7.520499229431152
    5. ' >' → logprob: -7.645499229431152
    6. '+' → logprob: -7.645499229431152
    7. ' <' → logprob: -8.895499229431152
    8. '=' → logprob: -9.270499229431152
    9. ' =' → logprob: -9.520499229431152
    10. '>' → logprob: -9.520499229431152

Token 82: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.020267760381102562
    2. ' ' → logprob: -4.020267963409424
    3. 'k' → logprob: -6.395267963409424
    4. 'p' → logprob: -8.020267486572266
    5. ' k' → logprob: -10.145267486572266
    6. '1' → logprob: -10.395267486572266
    7. ' p' → logprob: -10.770267486572266
    8. 'n' → logprob: -12.145267486572266
    9. 'l' → logprob: -12.520267486572266
    10. '   ' → logprob: -12.895267486572266

Token 83: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011659647338092327
    2. 'k' → logprob: -4.636659622192383
    3. 'p' → logprob: -7.011659622192383
    4. ' ' → logprob: -7.136659622192383
    5. '1' → logprob: -8.886659622192383
    6. 'n' → logprob: -11.136659622192383
    7. ' k' → logprob: -11.261659622192383
    8. 'l' → logprob: -11.761659622192383
    9. '3' → logprob: -12.011659622192383
    10. ' p' → logprob: -12.261659622192383

Token 84: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11276969313621521
    2. ' or' → logprob: -2.612769603729248
    3. ':
' → logprob: -3.487769603729248
    4. ' and' → logprob: -6.362769603729248
    5. 'or' → logprob: -8.862770080566406
    6. ' :' → logprob: -8.862770080566406
    7. '+' → logprob: -8.862770080566406
    8. ':
' → logprob: -9.487770080566406
    9. '           ' → logprob: -9.737770080566406
    10. ' ' → logprob: -9.737770080566406

Token 85: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2404106706380844
    2. 'idx' → logprob: -2.490410566329956
    3. ' idx' → logprob: -3.365410566329956
    4. ':' → logprob: -3.990410566329956
    5. '           ' → logprob: -4.115410804748535
    6. 'cnt' → logprob: -4.490410804748535
    7. 'p' → logprob: -4.490410804748535
    8. ' p' → logprob: -4.490410804748535
    9. ' cnt' → logprob: -5.365410804748535
    10. ' i' → logprob: -5.365410804748535

Token 86: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.07522527873516083
    2. ' idx' → logprob: -3.325225353240967
    3. 'p' → logprob: -3.700225353240967
    4. 'start' → logprob: -5.200225353240967
    5. ' p' → logprob: -6.575225353240967
    6. 'cnt' → logprob: -6.575225353240967
    7. '               ' → logprob: -6.700225353240967
    8. 's' → logprob: -7.700225353240967
    9. 'index' → logprob: -7.825225353240967
    10. '           ' → logprob: -8.450224876403809

Token 87: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008202602155506611
    2. '=' → logprob: -4.88320255279541
    3. ' ' → logprob: -7.50820255279541
    4. '=i' → logprob: -10.38320255279541
    5. ' ==' → logprob: -12.38320255279541
    6. '<|end|>' → logprob: -12.38320255279541
    7. '<|end|>' → logprob: -13.50820255279541
    8. ',' → logprob: -13.50820255279541
    9. ' +=' → logprob: -13.63320255279541
    10. 's' → logprob: -13.63320255279541

Token 88: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.014164566993713379
    2. ' i' → logprob: -4.264164447784424
    3. ' ' → logprob: -14.764164924621582
    4. '0' → logprob: -15.139164924621582
    5. '	i' → logprob: -15.764164924621582
    6. '   ' → logprob: -15.889164924621582
    7. 'u' → logprob: -16.764163970947266
    8. '1' → logprob: -18.139163970947266
    9. ')i' → logprob: -18.514163970947266
    10. '<|end|>' → logprob: -18.514163970947266

Token 89: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15558907389640808
    2. '
' → logprob: -2.7805891036987305
    3. '               ' → logprob: -3.0305891036987305
    4. '<|end|>' → logprob: -4.4055891036987305
    5. ' 
' → logprob: -5.2805891036987305
    6. '
' → logprob: -5.7805891036987305
    7. '            
' → logprob: -5.7805891036987305
    8. '  
' → logprob: -6.0305891036987305
    9. '<|end|>' → logprob: -6.5305891036987305
    10. '       ' → logprob: -6.9055891036987305

Token 90: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0010673471260815859
    2. '               ' → logprob: -7.626067161560059
    3. '       ' → logprob: -8.626067161560059
    4. 'cnt' → logprob: -9.001067161560059
    5. '1' → logprob: -9.626067161560059
    6. ' cnt' → logprob: -9.876067161560059
    7. '```' → logprob: -10.251067161560059
    8. '
' → logprob: -10.626067161560059
    9. '0' → logprob: -10.626067161560059
    10. '   ' → logprob: -11.376067161560059

Token 91: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -0.010491292923688889
    2. '           ' → logprob: -5.135491371154785
    3. ' cnt' → logprob: -5.510491371154785
    4. '       ' → logprob: -8.260491371154785
    5. '   ' → logprob: -9.135491371154785
    6. '	cnt' → logprob: -9.260491371154785
    7. '               ' → logprob: -10.885491371154785
    8. '
' → logprob: -11.885491371154785
    9. '[cnt' → logprob: -12.635491371154785
    10. '	   ' → logprob: -12.635491371154785

Token 92: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.05511798709630966
    2. ' +=' → logprob: -2.9301180839538574
    3. '=' → logprob: -8.8051176071167
    4. '+' → logprob: -9.5551176071167
    5. ']+=' → logprob: -11.5551176071167
    6. ' =' → logprob: -13.5551176071167
    7. '<|end|>' → logprob: -13.5551176071167
    8. '1' → logprob: -14.5551176071167
    9. ' ' → logprob: -14.5551176071167
    10. '   ' → logprob: -14.8051176071167

Token 93: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.061968132853507996
    2. ' ' → logprob: -2.8119680881500244
    3. '<|end|>' → logprob: -15.811967849731445
    4. ' ' → logprob: -15.936967849731445
    5. '+' → logprob: -16.936967849731445
    6. '   ' → logprob: -17.311967849731445
    7. '0' → logprob: -17.374467849731445
    8. '2' → logprob: -17.499467849731445
    9. 's' → logprob: -17.811967849731445
    10. '```' → logprob: -18.124467849731445

Token 94: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.157039049663581e-05
    2. ' ' → logprob: -9.875051498413086
    3. '0' → logprob: -18.500051498413086
    4. '2' → logprob: -18.625051498413086
    5. '+' → logprob: -19.000051498413086
    6. '   ' → logprob: -19.250051498413086
    7. ' ' → logprob: -19.437551498413086
    8. '```' → logprob: -19.875051498413086
    9. 's' → logprob: -20.187551498413086
    10. '-' → logprob: -20.187551498413086

Token 95: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18351420760154724
    2. 'else' → logprob: -2.43351411819458
    3. ' else' → logprob: -2.93351411819458
    4. 'elif' → logprob: -4.43351411819458
    5. '   ' → logprob: -4.80851411819458
    6. '
' → logprob: -5.43351411819458
    7. ' elif' → logprob: -6.43351411819458
    8. '```' → logprob: -8.058514595031738
    9. '<|end|>' → logprob: -9.058514595031738
    10. '	else' → logprob: -10.183514595031738

Token 96: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7457372546195984
    2. 'else' → logprob: -1.1207373142242432
    3. ' else' → logprob: -1.8707373142242432
    4. '   ' → logprob: -3.995737314224243
    5. 'elif' → logprob: -4.120737075805664
    6. '```' → logprob: -4.995737075805664
    7. ' elif' → logprob: -5.745737075805664
    8. '           ' → logprob: -8.745737075805664
    9. '}else' → logprob: -8.870737075805664
    10. '<|end|>' → logprob: -8.995737075805664

Token 97: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.45546868443489075
    2. 'else' (adapté à ' else') → logprob: -1.2054686546325684
    3. 'elif' → logprob: -3.0804686546325684
    4. ' elif' → logprob: -4.080468654632568
    5. '   ' → logprob: -5.705468654632568
    6. '       ' → logprob: -9.080469131469727
    7. '	else' → logprob: -11.580469131469727
    8. '	elif' → logprob: -12.455469131469727
    9. 'elseif' → logprob: -13.455469131469727
    10. '```' → logprob: -13.580469131469727

Token 98: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.8987676501274109
    2. ':' → logprob: -1.2737677097320557
    3. '       ' → logprob: -1.5237677097320557
    4. ' if' → logprob: -3.1487677097320557
    5. '<|end|>' → logprob: -4.023767471313477
    6. '           ' → logprob: -4.148767471313477
    7. '   ' → logprob: -4.648767471313477
    8. ' ' → logprob: -6.273767471313477
    9. ' :
' → logprob: -6.273767471313477
    10. '```' → logprob: -6.898767471313477

Token 99: '           ' (ID: 352)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5167420506477356
    2. '       ' → logprob: -1.2667419910430908
    3. 'if' → logprob: -2.141741991043091
    4. '           ' → logprob: -5.64174222946167
    5. '   ' → logprob: -7.51674222946167
    6. 'n' → logprob: -10.016741752624512
    7. ' l' → logprob: -10.016741752624512
    8. '```' → logprob: -10.016741752624512
    9. ' cnt' → logprob: -10.391741752624512
    10. 'cnt' → logprob: -10.766741752624512

Token 100: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.256762832403183
    2. 'if' (adapté à ' if') → logprob: -2.131762742996216
    3. ' l' → logprob: -3.381762742996216
    4. '           ' → logprob: -3.381762742996216
    5. '       ' → logprob: -3.506762742996216
    6. 'l' → logprob: -4.756762981414795
    7. '   ' → logprob: -7.131762981414795
    8. ' cnt' → logprob: -9.006762504577637
    9. ' ' → logprob: -9.381762504577637
    10. '```' → logprob: -10.131762504577637

Token 101: ' cnt' (ID: 27340)
  Prédit: ' cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cnt' → logprob: -0.20163464546203613
    2. 'cnt' → logprob: -1.7016346454620361
    3. ' u' → logprob: -9.326634407043457
    4. '	cnt' → logprob: -10.326634407043457
    5. '(cnt' → logprob: -10.451634407043457
    6. 'u' → logprob: -10.451634407043457
    7. 'c' → logprob: -11.326634407043457
    8. ' c' → logprob: -12.451634407043457
    9. '   ' → logprob: -12.451634407043457
    10. '```' → logprob: -12.826634407043457

Token 102: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.07891787588596344
    2. '>' → logprob: -2.578917980194092
    3. ' !=' → logprob: -11.078917503356934
    4. ' >=' → logprob: -12.078917503356934
    5. ' ==' → logprob: -12.703917503356934
    6. ' ' → logprob: -13.203917503356934
    7. ' and' → logprob: -14.953917503356934
    8. '   ' → logprob: -15.203917503356934
    9. ' ' → logprob: -15.203917503356934
    10. '==' → logprob: -15.453917503356934

Token 103: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05492990463972092
    2. ' ' → logprob: -2.9299299716949463
    3. 'k' → logprob: -10.929929733276367
    4. 'p' → logprob: -11.679929733276367
    5. ' p' → logprob: -11.929929733276367
    6. ' k' → logprob: -12.179929733276367
    7. '1' → logprob: -12.304929733276367
    8. '   ' → logprob: -13.179929733276367
    9. '  ' → logprob: -14.679929733276367
    10. 'n' → logprob: -14.992429733276367

Token 104: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007170771714299917
    2. ' ' → logprob: -7.2507171630859375
    3. '1' → logprob: -12.750717163085938
    4. 'k' → logprob: -12.875717163085938
    5. 'p' → logprob: -14.000717163085938
    6. '2' → logprob: -15.875717163085938
    7. '   ' → logprob: -16.125717163085938
    8. ' p' → logprob: -16.625717163085938
    9. '4' → logprob: -16.750717163085938
    10. '```' → logprob: -17.000717163085938

Token 105: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7761749625205994
    2. ':
' → logprob: -0.9011749625205994
    3. '           ' → logprob: -2.276175022125244
    4. '               ' → logprob: -4.151175022125244
    5. ' and' → logprob: -4.276175022125244
    6. '       ' → logprob: -7.526175022125244
    7. ',' → logprob: -8.401174545288086
    8. ':

' → logprob: -8.776174545288086
    9. 'and' → logprob: -9.401174545288086
    10. '                   ' → logprob: -9.901174545288086

Token 106: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.23060384392738342
    2. '               ' → logprob: -1.855603814125061
    3. ' l' → logprob: -3.1056039333343506
    4. ' if' → logprob: -6.1056036949157715
    5. '```' → logprob: -6.8556036949157715
    6. '       ' → logprob: -7.6056036949157715
    7. 'l' → logprob: -8.48060417175293
    8. ' ' → logprob: -8.60560417175293
    9. '<|end|>' → logprob: -9.10560417175293
    10. '   ' → logprob: -9.35560417175293

Token 107: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.029307905584573746
    2. 'l' (adapté à ' l') → logprob: -3.9043078422546387
    3. '           ' → logprob: -4.904307842254639
    4. '       ' → logprob: -7.029307842254639
    5. '   ' → logprob: -8.779308319091797
    6. '               ' → logprob: -9.154308319091797
    7. ' if' → logprob: -9.654308319091797
    8. ' for' → logprob: -10.529308319091797
    9. '```' → logprob: -10.904308319091797
    10. '	l' → logprob: -11.029308319091797

Token 108: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.011059491895139217
    2. '.' → logprob: -4.511059284210205
    3. 'append' → logprob: -11.636059761047363
    4. '.extend' → logprob: -13.886059761047363
    5. '.Append' → logprob: -14.761059761047363
    6. '.app' → logprob: -14.886059761047363
    7. ' .' → logprob: -15.011059761047363
    8. ' append' → logprob: -15.261059761047363
    9. '.ap' → logprob: -15.636059761047363
    10. '_append' → logprob: -15.886059761047363

Token 109: '((' (ID: 2054)
  Prédit: '(cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cnt' → logprob: -2.7729658540920354e-05
    2. 'cnt' → logprob: -10.750027656555176
    3. '(' → logprob: -12.875027656555176
    4. '((' → logprob: -13.250027656555176
    5. ' (' → logprob: -14.250027656555176
    6. '[cnt' → logprob: -14.250027656555176
    7. '	cnt' → logprob: -15.750027656555176
    8. '(count' → logprob: -15.875027656555176
    9. ' cnt' → logprob: -15.875027656555176
    10. '(
' → logprob: -16.375028610229492

Token 110: 'cnt' (ID: 33160)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.030303092673420906
    2. 'cnt' → logprob: -3.9053030014038086
    3. ' idx' → logprob: -4.780303001403809
    4. '(idx' → logprob: -7.280303001403809
    5. ' cnt' → logprob: -8.280303001403809
    6. '(cnt' → logprob: -8.905303001403809
    7. ' (' → logprob: -10.155303001403809
    8. '(' → logprob: -10.155303001403809
    9. '-' → logprob: -10.842803001403809
    10. 'i' → logprob: -10.967803001403809

Token 111: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010282850125804543
    2. ' ,' → logprob: -7.251028060913086
    3. ',i' → logprob: -8.876028060913086
    4. '))' → logprob: -9.001028060913086
    5. ',
' → logprob: -10.751028060913086
    6. ',p' → logprob: -11.626028060913086
    7. ')' → logprob: -11.876028060913086
    8. ',index' → logprob: -12.501028060913086
    9. ',k' → logprob: -12.751028060913086
    10. ',n' → logprob: -12.876028060913086

Token 112: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.12698155641555786
    2. ' idx' → logprob: -2.126981496810913
    3. '(idx' → logprob: -10.376981735229492
    4. 'index' → logprob: -12.126981735229492
    5. '[idx' → logprob: -12.751981735229492
    6. ' (' → logprob: -12.751981735229492
    7. '	idx' → logprob: -12.751981735229492
    8. ')' → logprob: -13.376981735229492
    9. ' ' → logprob: -13.626981735229492
    10. 'p' → logprob: -14.001981735229492

Token 113: '))
' (ID: 2210)
  Prédit: '))
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))
' → logprob: -0.03030216321349144
    2. '))' → logprob: -3.530302047729492
    3. ' ))
' → logprob: -7.780302047729492
    4. '))
' → logprob: -9.405302047729492
    5. ' ))' → logprob: -11.155302047729492
    6. ')
' → logprob: -11.530302047729492
    7. '))

' → logprob: -12.280302047729492
    8. ')' → logprob: -12.405302047729492
    9. '               ' → logprob: -12.530302047729492
    10. '           ' → logprob: -12.905302047729492

Token 114: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.22849638760089874
    2. '               ' → logprob: -2.8534963130950928
    3. ' 
' → logprob: -3.1034963130950928
    4. '
' → logprob: -3.3534963130950928
    5. '            
' → logprob: -3.9784963130950928
    6. '```' → logprob: -4.728496551513672
    7. '``' → logprob: -4.728496551513672
    8. '                
' → logprob: -4.853496551513672
    9. '       ' → logprob: -5.103496551513672
    10. '\n' → logprob: -5.353496551513672

Token 115: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -0.04889017343521118
    2. ' cnt' → logprob: -3.0488901138305664
    3. '               ' → logprob: -8.923890113830566
    4. '           ' → logprob: -9.548890113830566
    5. '	cnt' → logprob: -10.423890113830566
    6. '[cnt' → logprob: -11.048890113830566
    7. '(cnt' → logprob: -11.298890113830566
    8. '       ' → logprob: -12.048890113830566
    9. 'count' → logprob: -12.173890113830566
    10. '                
' → logprob: -12.423890113830566

Token 116: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02328147180378437
    2. '=' → logprob: -3.7732815742492676
    3. ' +=' → logprob: -10.39828109741211
    4. ' ' → logprob: -12.64828109741211
    5. ' ==' → logprob: -14.02328109741211
    6. ' -=' → logprob: -14.14828109741211
    7. ',' → logprob: -15.64828109741211
    8. ' >' → logprob: -15.89828109741211
    9. '+=' → logprob: -15.89828109741211
    10. '>' → logprob: -16.27328109741211

Token 117: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001234428636962548
    2. ' ' → logprob: -9.000123023986816
    3. '<|end|>' → logprob: -18.250123977661133
    4. '   ' → logprob: -18.625123977661133
    5. '۰' → logprob: -19.375123977661133
    6. '```' → logprob: -20.125123977661133
    7. '  ' → logprob: -20.250123977661133
    8. '=' → logprob: -20.375123977661133
    9. ' ' → logprob: -20.562623977661133
    10. '０' → logprob: -21.312623977661133

Token 118: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '   ' → logprob: -18.500009536743164
    4. '<|end|>' → logprob: -18.500009536743164
    5. '۰' → logprob: -19.250009536743164
    6. '```' → logprob: -19.750009536743164
    7. '  ' → logprob: -20.500009536743164
    8. '00' → logprob: -20.812509536743164
    9. ')' → logprob: -21.000009536743164
    10. '০' → logprob: -21.187509536743164

Token 119: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25267142057418823
    2. '<|end|>' → logprob: -1.877671480178833
    3. '\n' → logprob: -4.377671241760254
    4. ' 
' → logprob: -4.502671241760254
    5. '   ' → logprob: -4.752671241760254
    6. '```' → logprob: -4.877671241760254
    7. ' i' → logprob: -5.127671241760254
    8. ')' → logprob: -5.252671241760254
    9. ',' → logprob: -5.252671241760254
    10. '           ' → logprob: -5.877671241760254

Token 120: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10793109983205795
    2. ' i' → logprob: -2.982931137084961
    3. '   ' → logprob: -4.107931137084961
    4. '```' → logprob: -4.357931137084961
    5. '<|end|>' → logprob: -4.732931137084961
    6. 'i' → logprob: -5.357931137084961
    7. ' 
' → logprob: -5.607931137084961
    8. '           ' → logprob: -7.357931137084961
    9. ')' → logprob: -7.482931137084961
    10. '<|end|>' → logprob: -7.732931137084961

Token 121: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5718790292739868
    2. 'i' (adapté à ' i') → logprob: -1.0718790292739868
    3. '```' → logprob: -3.1968789100646973
    4. '   ' → logprob: -3.9468789100646973
    5. '       ' → logprob: -4.196878910064697
    6. ' ' → logprob: -4.821878910064697
    7. ' 
' → logprob: -5.071878910064697
    8. '	i' → logprob: -7.446878910064697
    9. '\n' → logprob: -7.571878910064697
    10. '
' → logprob: -7.696878910064697

Token 122: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.20192566514015198
    2. ' +=' → logprob: -1.7019256353378296
    3. '+' → logprob: -7.826925754547119
    4. '=' → logprob: -9.201925277709961
    5. '```' → logprob: -12.826925277709961
    6. '<|end|>' → logprob: -13.076925277709961
    7. '++' → logprob: -13.201925277709961
    8. ']+=' → logprob: -13.701925277709961
    9. ' ' → logprob: -13.701925277709961
    10. '+='' → logprob: -14.076925277709961

Token 123: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1637164789135568e-05
    2. ' ' → logprob: -11.375011444091797
    3. '   ' → logprob: -16.875011444091797
    4. '```' → logprob: -17.250011444091797
    5. '  ' → logprob: -19.625011444091797
    6. '１' → logprob: -20.250011444091797
    7. '+' → logprob: -20.937511444091797
    8. '0' → logprob: -21.000011444091797
    9. '<|end|>' → logprob: -21.187511444091797
    10. '۱' → logprob: -21.250011444091797

Token 124: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '```' → logprob: -19.625
    4. '   ' → logprob: -20.5
    5. '+' → logprob: -21.25
    6. '１' → logprob: -21.5625
    7. '۱' → logprob: -22.0
    8. '  ' → logprob: -22.5
    9. '१' → logprob: -22.5625
    10. '0' → logprob: -23.125

Token 125: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15235868096351624
    2. 'if' → logprob: -2.1523587703704834
    3. '
' → logprob: -4.277358531951904
    4. ' if' → logprob: -4.652358531951904
    5. '```' → logprob: -6.902358531951904
    6. '<|end|>' → logprob: -8.527359008789062
    7. '    
' → logprob: -9.152359008789062
    8. 'while' → logprob: -9.652359008789062
    9. '#' → logprob: -9.902359008789062
    10. '  
' → logprob: -10.527359008789062

Token 126: '   ' (ID: 271)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.2631853222846985
    2. '   ' → logprob: -1.5131852626800537
    3. ' if' → logprob: -5.263185501098633
    4. '<|end|>' → logprob: -6.263185501098633
    5. 'if' → logprob: -6.638185501098633
    6. '       ' → logprob: -7.263185501098633
    7. '
' → logprob: -7.388185501098633
    8. ' ' → logprob: -8.138185501098633
    9. ' 
' → logprob: -8.263185501098633
    10. '``' → logprob: -8.263185501098633

Token 127: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.004373393952846527
    2. ' if' → logprob: -6.379373550415039
    3. '```' → logprob: -6.504373550415039
    4. '   ' → logprob: -7.129373550415039
    5. 'while' → logprob: -8.254373550415039
    6. 'for' → logprob: -9.879373550415039
    7. '
' → logprob: -10.629373550415039
    8. '#' → logprob: -11.004373550415039
    9. ' ' → logprob: -12.254373550415039
    10. 'i' → logprob: -12.254373550415039

Token 128: ' cnt' (ID: 27340)
  Prédit: ' cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cnt' → logprob: -0.014258704148232937
    2. 'cnt' → logprob: -4.264258861541748
    3. ' p' → logprob: -9.63925838470459
    4. '(cnt' → logprob: -11.63925838470459
    5. 'p' → logprob: -12.13925838470459
    6. ' ' → logprob: -12.51425838470459
    7. '	cnt' → logprob: -13.01425838470459
    8. ' c' → logprob: -13.38925838470459
    9. ' len' → logprob: -13.63925838470459
    10. ' k' → logprob: -13.88925838470459

Token 129: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.04858805239200592
    2. '>' → logprob: -3.0485880374908447
    3. ' ' → logprob: -15.298587799072266
    4. ' ' → logprob: -15.298587799072266
    5. '```' → logprob: -17.048587799072266
    6. ' ==' → logprob: -17.298587799072266
    7. '   ' → logprob: -17.548587799072266
    8. ')' → logprob: -17.673587799072266
    9. ':' → logprob: -17.923587799072266
    10. ' !=' → logprob: -18.048587799072266

Token 130: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.31326213479042053
    2. ' ' → logprob: -1.3132621049880981
    3. '   ' → logprob: -15.313261985778809
    4. '>' → logprob: -16.813262939453125
    5. '=' → logprob: -17.063262939453125
    6. ' ' → logprob: -17.063262939453125
    7. '  ' → logprob: -17.188262939453125
    8. 'p' → logprob: -18.500762939453125
    9. 'n' → logprob: -18.875762939453125
    10. '```' → logprob: -18.938262939453125

Token 131: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00033558503491804004
    2. ' ' → logprob: -8.000335693359375
    3. '   ' → logprob: -16.500335693359375
    4. 'p' → logprob: -16.750335693359375
    5. '=' → logprob: -17.625335693359375
    6. '<|end|>' → logprob: -17.875335693359375
    7. '۰' → logprob: -18.750335693359375
    8. '  ' → logprob: -18.937835693359375
    9. '```' → logprob: -18.937835693359375
    10. '
' → logprob: -19.125335693359375

Token 132: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.26000040769577026
    2. ':' → logprob: -1.510000467300415
    3. '       ' → logprob: -4.885000228881836
    4. '   ' → logprob: -8.510000228881836
    5. ' and' → logprob: -9.510000228881836
    6. ' l' → logprob: -9.885000228881836
    7. ',' → logprob: -10.135000228881836
    8. ':l' → logprob: -10.510000228881836
    9. ' :
' → logprob: -10.635000228881836
    10. ',l' → logprob: -11.010000228881836

Token 133: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.036614906042814255
    2. ' l' → logprob: -3.4116148948669434
    3. 'l' → logprob: -5.911614894866943
    4. '   ' → logprob: -9.286615371704102
    5. ':
' → logprob: -10.036615371704102
    6. '           ' → logprob: -10.286615371704102
    7. ':' → logprob: -10.286615371704102
    8. '```' → logprob: -11.036615371704102
    9. ',l' → logprob: -11.786615371704102
    10. '	l' → logprob: -11.911615371704102

Token 134: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -0.387605220079422
    2. ' l' → logprob: -1.1376051902770996
    3. '       ' → logprob: -7.2626051902771
    4. '   ' → logprob: -10.887605667114258
    5. '           ' → logprob: -11.387605667114258
    6. '	l' → logprob: -13.137605667114258
    7. '```' → logprob: -15.762605667114258
    8. '               ' → logprob: -15.887605667114258
    9. ' ' → logprob: -16.387605667114258
    10. '    ' → logprob: -16.512605667114258

Token 135: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00043126524542458355
    2. '.' → logprob: -7.750431060791016
    3. 'append' → logprob: -15.000431060791016
    4. ' .' → logprob: -16.125431060791016
    5. '.app' → logprob: -16.125431060791016
    6. '       ' → logprob: -17.625431060791016
    7. '.extend' → logprob: -18.375431060791016
    8. '           ' → logprob: -18.875431060791016
    9. '.ap' → logprob: -19.250431060791016
    10. '   ' → logprob: -19.250431060791016

Token 136: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -7.465036105713807e-06
    2. '(' → logprob: -12.500007629394531
    3. '(cnt' → logprob: -12.500007629394531
    4. ' ((' → logprob: -18.50000762939453
    5. ' ' → logprob: -19.25000762939453
    6. '(('' → logprob: -19.62500762939453
    7. '(count' → logprob: -19.75000762939453
    8. '[(' → logprob: -19.75000762939453
    9. '```' → logprob: -20.00000762939453
    10. '(
' → logprob: -20.25000762939453

Token 137: 'cnt' (ID: 33160)
  Prédit: 'cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.029777804389595985
    2. '(cnt' → logprob: -3.529777765274048
    3. '[cnt' → logprob: -11.029777526855469
    4. ' cnt' → logprob: -11.529777526855469
    5. '	cnt' → logprob: -13.779777526855469
    6. 'count' → logprob: -16.27977752685547
    7. '_cnt' → logprob: -16.90477752685547
    8. 'cn' → logprob: -17.02977752685547
    9. '
' → logprob: -18.02977752685547
    10. 'Cnt' → logprob: -18.40477752685547

Token 138: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.4121114822482923e-06
    2. ' ,' → logprob: -12.625003814697266
    3. ',
' → logprob: -16.750003814697266
    4. ',index' → logprob: -18.250003814697266
    5. '   ' → logprob: -18.375003814697266
    6. '```' → logprob: -18.500003814697266
    7. ',p' → logprob: -19.000003814697266
    8. '),' → logprob: -19.000003814697266
    9. ')' → logprob: -19.000003814697266
    10. 'idx' → logprob: -19.375003814697266

Token 139: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.03818562626838684
    2. ' idx' → logprob: -3.2881855964660645
    3. '(idx' → logprob: -8.913186073303223
    4. '0' → logprob: -12.538186073303223
    5. '(' → logprob: -13.288186073303223
    6. ' (' → logprob: -13.788186073303223
    7. '	idx' → logprob: -14.038186073303223
    8. '       ' → logprob: -14.538186073303223
    9. 'cnt' → logprob: -14.538186073303223
    10. '[idx' → logprob: -14.663186073303223

Token 140: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006442749872803688
    2. ')
' → logprob: -5.631442546844482
    3. '))' → logprob: -5.881442546844482
    4. '))
' → logprob: -10.38144302368164
    5. '   ' → logprob: -11.50644302368164
    6. ' )' → logprob: -12.75644302368164
    7. '       ' → logprob: -13.00644302368164
    8. ')`' → logprob: -14.38144302368164
    9. ')
' → logprob: -15.13144302368164
    10. ')

' → logprob: -15.25644302368164

Token 141: '   ' (ID: 271)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.9260260462760925
    2. '   ' → logprob: -1.0510261058807373
    3. ' l' → logprob: -1.6760261058807373
    4. ' if' → logprob: -3.4260261058807373
    5. 'if' → logprob: -4.051025867462158
    6. 'max' → logprob: -5.676025867462158
    7. ' max' → logprob: -5.676025867462158
    8. '#' → logprob: -6.176025867462158
    9. ' for' → logprob: -6.676025867462158
    10. 'import' → logprob: -7.176025867462158

Token 142: ' a' (ID: 261)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.10392706096172333
    2. 'if' → logprob: -2.3539271354675293
    3. '```' → logprob: -6.103927135467529
    4. 'best' → logprob: -8.228926658630371
    5. 'x' → logprob: -8.478926658630371
    6. '
' → logprob: -8.478926658630371
    7. ' if' → logprob: -8.603926658630371
    8. 'max' → logprob: -8.978926658630371
    9. '   ' → logprob: -9.478926658630371
    10. 'for' → logprob: -9.728926658630371

Token 143: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.15928518772125244
    2. '=' → logprob: -2.159285068511963
    3. ',' → logprob: -4.409285068511963
    4. '+=' → logprob: -5.159285068511963
    5. 'max' → logprob: -5.784285068511963
    6. ' +=' → logprob: -5.909285068511963
    7. 'if' → logprob: -6.534285068511963
    8. ' ' → logprob: -7.034285068511963
    9. 'pp' → logprob: -7.284285068511963
    10. '=[]
' → logprob: -7.409285068511963

Token 144: ' j' (ID: 441)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.33684012293815613
    2. ' b' → logprob: -1.3368401527404785
    3. 'idx' → logprob: -4.9618401527404785
    4. ' idx' → logprob: -5.3368401527404785
    5. ' =' → logprob: -5.9618401527404785
    6. '_' → logprob: -5.9618401527404785
    7. 'pos' → logprob: -6.5868401527404785
    8. '=' → logprob: -6.8368401527404785
    9. '_=' → logprob: -7.0868401527404785
    10. ' _' → logprob: -7.7118401527404785

Token 145: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5241055488586426
    2. ' =' → logprob: -0.8991055488586426
    3. ',' → logprob: -7.149105548858643
    4. ')' → logprob: -9.274105072021484
    5. ' ' → logprob: -10.149105072021484
    6. '[' → logprob: -10.774105072021484
    7. 's' → logprob: -11.274105072021484
    8. '<|end|>' → logprob: -11.649105072021484
    9. ']' → logprob: -11.899105072021484
    10. '_' → logprob: -13.399105072021484

Token 146: ' ' (ID: 220)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.3724377751350403
    2. ' max' → logprob: -1.7474377155303955
    3. 'l' → logprob: -2.7474377155303955
    4. 'min' → logprob: -3.7474377155303955
    5. '0' → logprob: -3.8724377155303955
    6. ' l' → logprob: -4.122437953948975
    7. ' min' → logprob: -5.247437953948975
    8. '(' → logprob: -5.997437953948975
    9. '1' → logprob: -6.122437953948975
    10. ' ' → logprob: -6.497437953948975

Token 147: '0' (ID: 15)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.149997740983963
    2. 'l' → logprob: -2.6499977111816406
    3. 'min' → logprob: -3.1499977111816406
    4. '0' → logprob: -4.149997711181641
    5. ' max' → logprob: -4.899997711181641
    6. '1' → logprob: -7.274997711181641
    7. '(' → logprob: -7.274997711181641
    8. ' l' → logprob: -7.774997711181641
    9. ' min' → logprob: -7.774997711181641
    10. 'sorted' → logprob: -8.77499771118164

Token 148: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3252606689929962
    2. ' =' → logprob: -1.7002606391906738
    3. '<|end|>' → logprob: -3.075260639190674
    4. '=' → logprob: -3.325260639190674
    5. ',l' → logprob: -5.075260639190674
    6. '<|end|>' → logprob: -6.950260639190674
    7. '[' → logprob: -6.950260639190674
    8. ' ,' → logprob: -7.325260639190674
    9. '   ' → logprob: -7.325260639190674
    10. ',a' → logprob: -7.825260639190674

Token 149: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03425779566168785
    2. '-' → logprob: -4.284257888793945
    3. ' ' → logprob: -4.284257888793945
    4. 'l' → logprob: -5.784257888793945
    5. ' -' → logprob: -6.409257888793945
    6. 'len' → logprob: -7.284257888793945
    7. ' l' → logprob: -7.784257888793945
    8. ' len' → logprob: -9.784257888793945
    9. '-l' → logprob: -10.034257888793945
    10. '1' → logprob: -10.784257888793945

Token 150: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.015620655380189419
    2. '-' → logprob: -4.265620708465576
    3. 'len' → logprob: -7.765620708465576
    4. 'l' → logprob: -7.890620708465576
    5. ' ' → logprob: -7.890620708465576
    6. ' -' → logprob: -9.390620231628418
    7. '-l' → logprob: -9.890620231628418
    8. 'p' → logprob: -10.390620231628418
    9. '1' → logprob: -10.890620231628418
    10. 'k' → logprob: -11.140620231628418

Token 151: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 152: '   ' (ID: 271)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.7678338289260864
    2. '<|end|>' → logprob: -1.1428338289260864
    3. ' while' → logprob: -2.267833709716797
    4. '   ' → logprob: -2.517833709716797
    5. ',' → logprob: -4.392833709716797
    6. 'l' → logprob: -5.267833709716797
    7. ')' → logprob: -5.642833709716797
    8. '
' → logprob: -5.892833709716797
    9. ' l' → logprob: -6.517833709716797
    10. '```' → logprob: -6.767833709716797

Token 153: ' for' (ID: 395)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.07954110205173492
    2. 'for' (adapté à ' for') → logprob: -3.5795412063598633
    3. 'l' → logprob: -4.329541206359863
    4. ' while' → logprob: -4.579541206359863
    5. 'if' → logprob: -4.704541206359863
    6. 'a' → logprob: -5.204541206359863
    7. 'b' → logprob: -5.829541206359863
    8. 'j' → logprob: -6.079541206359863
    9. 'i' → logprob: -7.329541206359863
    10. ' ' → logprob: -7.454541206359863

Token 154: ' x' (ID: 1215)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.8767760396003723
    2. ' length' → logprob: -1.6267759799957275
    3. 'cnt' → logprob: -1.8767759799957275
    4. 'c' → logprob: -2.7517759799957275
    5. ' cnt' → logprob: -3.0017759799957275
    6. 'x' → logprob: -3.7517759799957275
    7. '(cnt' → logprob: -4.251776218414307
    8. 'i' → logprob: -4.376776218414307
    9. '(c' → logprob: -4.376776218414307
    10. ' c' → logprob: -4.501776218414307

Token 155: ',' (ID: 11)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.29366976022720337
    2. ',' → logprob: -1.4186697006225586
    3. ' in' → logprob: -4.418669700622559
    4. ',c' → logprob: -9.293669700622559
    5. ',y' → logprob: -9.418669700622559
    6. ' ,' → logprob: -9.918669700622559
    7. ',(' → logprob: -10.043669700622559
    8. 'a' → logprob: -11.043669700622559
    9. '```' → logprob: -11.043669700622559
    10. ',l' → logprob: -11.168669700622559

Token 156: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.2901294231414795
    2. '(y' → logprob: -1.9151294231414795
    3. 'pos' → logprob: -3.6651294231414795
    4. ' y' → logprob: -4.040129661560059
    5. 'idx' → logprob: -4.290129661560059
    6. '(pos' → logprob: -4.665129661560059
    7. '(j' → logprob: -4.915129661560059
    8. ' (' → logprob: -5.540129661560059
    9. 'start' → logprob: -5.665129661560059
    10. 'j' → logprob: -5.790129661560059

Token 157: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12693913280963898
    2. 'in' → logprob: -2.126939058303833
    3. 's' → logprob: -12.501938819885254
    4. ',' → logprob: -13.251938819885254
    5. ' ' → logprob: -14.126938819885254
    6. '   ' → logprob: -14.126938819885254
    7. '	in' → logprob: -14.501938819885254
    8. ')' → logprob: -14.626938819885254
    9. '
' → logprob: -14.751938819885254
    10. 'n' → logprob: -14.876938819885254

Token 158: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.14269095659255981
    2. ' l' → logprob: -2.017690896987915
    3. ' ' → logprob: -12.392690658569336
    4. 'sorted' → logprob: -12.767690658569336
    5. 'enumer' → logprob: -13.142690658569336
    6. '	l' → logprob: -13.142690658569336
    7. '[l' → logprob: -14.267690658569336
    8. '   ' → logprob: -14.392690658569336
    9. ' reversed' → logprob: -14.517690658569336
    10. '(l' → logprob: -14.767690658569336

Token 159: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04864845052361488
    2. ':
' → logprob: -3.0486483573913574
    3. '=' → logprob: -11.173648834228516
    4. '<|end|>' → logprob: -11.673648834228516
    5. ',' → logprob: -11.923648834228516
    6. ':

' → logprob: -12.173648834228516
    7. '):
' → logprob: -12.423648834228516
    8. ' :' → logprob: -12.673648834228516
    9. ' in' → logprob: -12.798648834228516
    10. '   ' → logprob: -12.923648834228516

Token 160: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4555293023586273
    2. ':' → logprob: -1.0805293321609497
    3. '<|end|>' → logprob: -4.45552921295166
    4. ':
' → logprob: -4.70552921295166
    5. '   ' → logprob: -5.83052921295166
    6. ',' → logprob: -6.95552921295166
    7. ' if' → logprob: -7.70552921295166
    8. '[' → logprob: -8.20552921295166
    9. '<|end|>' → logprob: -8.33052921295166
    10. '        
' → logprob: -9.20552921295166

Token 161: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.08787686377763748
    2. '       ' → logprob: -3.337876796722412
    3. ' a' → logprob: -3.837876796722412
    4. 'if' (adapté à ' if') → logprob: -3.962876796722412
    5. ' for' → logprob: -6.212876796722412
    6. 'a' → logprob: -6.462876796722412
    7. ' j' → logprob: -6.587876796722412
    8. '        ' → logprob: -7.712876796722412
    9. '    ' → logprob: -7.962876796722412
    10. '```' → logprob: -7.962876796722412

Token 162: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.3139382004737854
    2. 'x' → logprob: -1.3139381408691406
    3. ' a' → logprob: -9.06393814086914
    4. ' p' → logprob: -9.18893814086914
    5. 'a' → logprob: -9.18893814086914
    6. 'p' → logprob: -9.56393814086914
    7. ' u' → logprob: -9.56393814086914
    8. '(x' → logprob: -9.68893814086914
    9. 'u' → logprob: -10.43893814086914
    10. ' (' → logprob: -10.56393814086914

Token 163: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.3496505916118622
    2. '>' → logprob: -1.2246506214141846
    3. ' >=' → logprob: -7.0996503829956055
    4. '>=' → logprob: -7.9746503829956055
    5. ' ' → logprob: -11.724650382995605
    6. ' <' → logprob: -12.099650382995605
    7. ' <=' → logprob: -12.224650382995605
    8. '>x' → logprob: -12.849650382995605
    9. '   ' → logprob: -12.974650382995605
    10. '<' → logprob: -12.974650382995605

Token 164: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.004633522592484951
    2. ' a' → logprob: -5.37963342666626
    3. 'k' → logprob: -12.004633903503418
    4. 'n' → logprob: -12.754633903503418
    5. '   ' → logprob: -13.754633903503418
    6. '1' → logprob: -14.129633903503418
    7. ' ' → logprob: -14.379633903503418
    8. 'u' → logprob: -14.754633903503418
    9. '	a' → logprob: -14.754633903503418
    10. '0' → logprob: -15.629633903503418

Token 165: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5059885382652283
    2. ':' → logprob: -1.630988597869873
    3. ' and' → logprob: -1.630988597869873
    4. ' or' → logprob: -6.255988597869873
    5. '       ' → logprob: -6.755988597869873
    6. 'and' → logprob: -7.505988597869873
    7. '   ' → logprob: -7.630988597869873
    8. '           ' → logprob: -8.005988121032715
    9. 'a' → logprob: -8.255988121032715
    10. '<|end|>' → logprob: -8.380988121032715

Token 166: '           ' (ID: 352)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7424183487892151
    2. '           ' → logprob: -0.9924183487892151
    3. ' a' → logprob: -2.7424182891845703
    4. '       ' → logprob: -2.7424182891845703
    5. ':
' → logprob: -4.61741828918457
    6. ':' → logprob: -5.86741828918457
    7. ',' → logprob: -5.99241828918457
    8. '   ' → logprob: -5.99241828918457
    9. ' and' → logprob: -6.24241828918457
    10. ' =' → logprob: -7.11741828918457

Token 167: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.2520498037338257
    2. 'a' (adapté à ' a') → logprob: -1.5020498037338257
    3. '   ' → logprob: -10.502049446105957
    4. 'x' → logprob: -10.627049446105957
    5. ' x' → logprob: -10.752049446105957
    6. '           ' → logprob: -11.127049446105957
    7. '       ' → logprob: -11.627049446105957
    8. '	a' → logprob: -12.127049446105957
    9. '```' → logprob: -12.502049446105957
    10. '    ' → logprob: -12.877049446105957

Token 168: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.013421496376395226
    2. ' =' → logprob: -4.388421535491943
    3. ',' → logprob: -7.013421535491943
    4. '=x' → logprob: -11.763421058654785
    5. ',x' → logprob: -13.263421058654785
    6. '=

' → logprob: -13.513421058654785
    7. '=
' → logprob: -15.013421058654785
    8. 'x' → logprob: -15.638421058654785
    9. '＝' → logprob: -16.5134220123291
    10. ' ,' → logprob: -16.6384220123291

Token 169: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.007653592154383659
    2. ' j' → logprob: -4.882653713226318
    3. 'y' → logprob: -10.13265323638916
    4. ' y' → logprob: -12.75765323638916
    5. 'x' → logprob: -13.00765323638916
    6. 'p' → logprob: -14.25765323638916
    7. 'a' → logprob: -14.38265323638916
    8. 'b' → logprob: -14.63265323638916
    9. ' ' → logprob: -16.132654190063477
    10. '   ' → logprob: -16.132654190063477

Token 170: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01814994215965271
    2. ' =' → logprob: -4.0181498527526855
    3. '＝' → logprob: -17.518150329589844
    4. ' ' → logprob: -17.643150329589844
    5. '=x' → logprob: -17.768150329589844
    6. '=
' → logprob: -18.018150329589844
    7. 'x' → logprob: -18.143150329589844
    8. ',' → logprob: -18.393150329589844
    9. '=

' → logprob: -18.393150329589844
    10. '=(' → logprob: -19.893150329589844

Token 171: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0067154900170862675
    2. ' x' → logprob: -5.006715297698975
    3. '(x' → logprob: -15.631715774536133
    4. '	x' → logprob: -19.256715774536133
    5. ' ' → logprob: -19.631715774536133
    6. '   ' → logprob: -20.131715774536133
    7. '
' → logprob: -20.381715774536133
    8. '[x' → logprob: -21.881715774536133
    9. '{x' → logprob: -21.881715774536133
    10. ' ' → logprob: -22.006715774536133

Token 172: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008899023523554206
    2. ' ,' → logprob: -7.250889778137207
    3. ',y' → logprob: -8.625889778137207
    4. ',j' → logprob: -15.000889778137207
    5. ',
' → logprob: -16.000890731811523
    6. ' y' → logprob: -16.250890731811523
    7. '```' → logprob: -17.500890731811523
    8. 'y' → logprob: -17.750890731811523
    9. ' ' → logprob: -18.125890731811523
    10. '`,' → logprob: -18.875890731811523

Token 173: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.3868715465068817
    2. 'y' → logprob: -1.136871576309204
    3. ' ' → logprob: -15.261871337890625
    4. '	y' → logprob: -16.636871337890625
    5. '    ' → logprob: -17.011871337890625
    6. '   ' → logprob: -17.136871337890625
    7. 'x' → logprob: -17.261871337890625
    8. 'j' → logprob: -17.886871337890625
    9. '<|end|>' → logprob: -18.011871337890625
    10. '```' → logprob: -18.386871337890625

Token 174: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34812867641448975
    2. 'p' → logprob: -1.5981286764144897
    3. ' if' → logprob: -2.9731287956237793
    4. ' p' → logprob: -3.8481287956237793
    5. 'if' → logprob: -4.223128795623779
    6. 'i' → logprob: -6.348128795623779
    7. ' while' → logprob: -7.223128795623779
    8. ' i' → logprob: -7.848128795623779
    9. 's' → logprob: -7.973128795623779
    10. 'while' → logprob: -8.098128318786621

Token 175: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0627107620239258
    2. 'p' → logprob: -1.4377107620239258
    3. 'if' → logprob: -1.4377107620239258
    4. ' if' → logprob: -1.9377107620239258
    5. 'i' → logprob: -4.062710762023926
    6. ' p' → logprob: -5.437710762023926
    7. '#' → logprob: -5.687710762023926
    8. 's' → logprob: -5.937710762023926
    9. ' i' → logprob: -6.562710762023926
    10. ' for' → logprob: -6.812710762023926

Token 176: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.10471846163272858
    2. 'p' → logprob: -3.8547184467315674
    3. 'r' → logprob: -4.2297186851501465
    4. 'for' → logprob: -4.8547186851501465
    5. '#' → logprob: -4.9797186851501465
    6. ' if' → logprob: -5.1047186851501465
    7. 'diff' → logprob: -5.2297186851501465
    8. 'x' → logprob: -5.3547186851501465
    9. 'b' → logprob: -5.4797186851501465
    10. 'j' → logprob: -5.6047186851501465

Token 177: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.20238156616687775
    2. ' s' → logprob: -2.9523816108703613
    3. ' p' → logprob: -3.0773816108703613
    4. 'a' → logprob: -3.0773816108703613
    5. ' j' → logprob: -4.577381610870361
    6. ' k' → logprob: -5.077381610870361
    7. 's' → logprob: -5.202381610870361
    8. ' u' → logprob: -5.702381610870361
    9. 'p' → logprob: -5.702381610870361
    10. ' m' → logprob: -5.827381610870361

Token 178: ' >=' (ID: 5064)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.8966581225395203
    2. ' ==' → logprob: -1.646658182144165
    3. '==' → logprob: -2.271658182144165
    4. ' >=' → logprob: -2.521658182144165
    5. ' <' → logprob: -2.646658182144165
    6. '<=' → logprob: -2.771658182144165
    7. ' >' → logprob: -3.146658182144165
    8. '>=' → logprob: -3.896658182144165
    9. '>' → logprob: -4.271657943725586
    10. '<' → logprob: -5.396657943725586

Token 179: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4362340569496155
    2. 'k' → logprob: -1.0612339973449707
    3. ' n' → logprob: -5.186233997344971
    4. ' k' → logprob: -7.311233997344971
    5. '1' → logprob: -8.061234474182129
    6. '(n' → logprob: -8.061234474182129
    7. 'p' → logprob: -8.436234474182129
    8. '2' → logprob: -8.561234474182129
    9. '(k' → logprob: -10.061234474182129
    10. 'a' → logprob: -10.061234474182129

Token 180: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6368563771247864
    2. ':
' → logprob: -0.7618563771247864
    3. ' -' → logprob: -6.011856555938721
    4. ' and' → logprob: -6.886856555938721
    5. '-' → logprob: -8.136856079101562
    6. ' or' → logprob: -8.886856079101562
    7. ' :
' → logprob: -9.261856079101562
    8. '   ' → logprob: -9.511856079101562
    9. ':return' → logprob: -9.886856079101562
    10. ' :' → logprob: -10.261856079101562

Token 181: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011835080571472645
    2. ':
' → logprob: -5.761835098266602
    3. ' break' → logprob: -5.761835098266602
    4. 'break' → logprob: -5.886835098266602
    5. ':' → logprob: -6.886835098266602
    6. 'print' → logprob: -7.386835098266602
    7. ' print' → logprob: -8.261835098266602
    8. '           ' → logprob: -8.511835098266602
    9. '   ' → logprob: -9.011835098266602
    10. '```' → logprob: -9.136835098266602

Token 182: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.905177652835846
    2. 'print' (adapté à ' print') → logprob: -1.2801775932312012
    3. ' break' → logprob: -1.4051775932312012
    4. 'break' → logprob: -2.655177593231201
    5. '   ' → logprob: -6.780177593231201
    6. ' p' → logprob: -8.28017807006836
    7. '       ' → logprob: -8.65517807006836
    8. ' for' → logprob: -9.90517807006836
    9. '```' → logprob: -9.90517807006836
    10. 'p' → logprob: -10.28017807006836

Token 183: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -1.0822097063064575
    2. '(n' → logprob: -1.2072097063064575
    3. '(' → logprob: -1.5822097063064575
    4. '(s' → logprob: -2.332209587097168
    5. '(a' → logprob: -4.207209587097168
    6. '(k' → logprob: -4.582209587097168
    7. 's' → logprob: -4.832209587097168
    8. '(j' → logprob: -4.957209587097168
    9. 'm' → logprob: -5.457209587097168
    10. 'n' → logprob: -5.957209587097168

Token 184: ' *' (ID: 425)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5915330052375793
    2. ')
' → logprob: -1.3415329456329346
    3. ' *' → logprob: -2.0915329456329346
    4. '*' → logprob: -3.3415329456329346
    5. '*n' → logprob: -3.8415329456329346
    6. '*(' → logprob: -6.091533184051514
    7. ' )' → logprob: -7.341533184051514
    8. ' )
' → logprob: -7.716533184051514
    9. ',' → logprob: -8.216532707214355
    10. '*j' → logprob: -8.341532707214355

Token 185: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.018243946135044098
    2. 'k' → logprob: -4.018243789672852
    3. ' n' → logprob: -9.518243789672852
    4. '(n' → logprob: -10.893243789672852
    5. ' k' → logprob: -14.143243789672852
    6. '(k' → logprob: -14.518243789672852
    7. '(' → logprob: -14.893243789672852
    8. ' (' → logprob: -15.643243789672852
    9. 'a' → logprob: -16.26824378967285
    10. '   ' → logprob: -17.39324378967285

Token 186: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.011069637723267078
    2. ')' → logprob: -4.5110697746276855
    3. ')
' → logprob: -11.386069297790527
    4. ' )
' → logprob: -11.636069297790527
    5. ')return' → logprob: -14.761069297790527
    6. ')`
' → logprob: -15.136069297790527
    7. '')
' → logprob: -15.511069297790527
    8. '   ' → logprob: -15.761069297790527
    9. ')

' → logprob: -16.011070251464844
    10. ' )' → logprob: -16.011070251464844

Token 187: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0353485606610775
    2. '
' → logprob: -3.660348653793335
    3. '   ' → logprob: -4.785348415374756
    4. '        
' → logprob: -8.535348892211914
    5. '    
' → logprob: -8.535348892211914
    6. '           ' → logprob: -9.160348892211914
    7. '```' → logprob: -10.160348892211914
    8. 'break' → logprob: -10.535348892211914
    9. '
' → logprob: -10.785348892211914
    10. '  
' → logprob: -11.660348892211914

Token 188: ' exit' (ID: 10654)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.029875217005610466
    2. 'exit' (adapté à ' exit') → logprob: -3.7798752784729004
    3. ' break' → logprob: -5.2798752784729
    4. '       ' → logprob: -6.7798752784729
    5. '   ' → logprob: -8.029874801635742
    6. '```' → logprob: -10.904874801635742
    7. '
' → logprob: -11.029874801635742
    8. '	break' → logprob: -12.029874801635742
    9. ' exit' → logprob: -12.154874801635742
    10. 'quit' → logprob: -13.029874801635742

Token 189: '(' (ID: 7)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0002681304467841983
    2. '(' → logprob: -8.25026798248291
    3. '()
' → logprob: -13.00026798248291
    4. ' ()' → logprob: -13.62526798248291
    5. '()`' → logprob: -13.87526798248291
    6. '();' → logprob: -14.37526798248291
    7. '()\' → logprob: -15.00026798248291
    8. '()

' → logprob: -15.37526798248291
    9. '())' → logprob: -15.50026798248291
    10. '()>' → logprob: -15.62526798248291

Token 190: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00015979631280060858
    2. ')' → logprob: -8.750160217285156
    3. '()' → logprob: -14.250160217285156
    4. '(' → logprob: -14.750160217285156
    5. '())' → logprob: -15.750160217285156
    6. ')
' → logprob: -16.750160217285156
    7. ' ' → logprob: -16.875160217285156
    8. ' )' → logprob: -19.500160217285156
    9. '()
' → logprob: -20.125160217285156
    10. ' ' → logprob: -20.500160217285156

Token 191: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013827363727614284
    2. ')
' → logprob: -6.751382827758789
    3. '   ' → logprob: -8.626382827758789
    4. ' )' → logprob: -10.501382827758789
    5. ')`' → logprob: -13.126382827758789
    6. '`)' → logprob: -13.251382827758789
    7. ')
' → logprob: -14.626382827758789
    8. '')' → logprob: -15.126382827758789
    9. '))' → logprob: -15.251382827758789
    10. ' )
' → logprob: -15.501382827758789

Token 192: '   ' (ID: 271)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.40084442496299744
    2. '   ' → logprob: -1.9008444547653198
    3. 'if' → logprob: -2.5258443355560303
    4. 's' → logprob: -4.400844573974609
    5. '```' → logprob: -4.400844573974609
    6. 'r' → logprob: -4.650844573974609
    7. '#' → logprob: -4.650844573974609
    8. ' p' → logprob: -4.775844573974609
    9. ' if' → logprob: -4.900844573974609
    10. 'u' → logprob: -5.275844573974609

Token 193: ' t' (ID: 260)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8184176683425903
    2. 'p' → logprob: -1.4434176683425903
    3. 'r' → logprob: -2.693417549133301
    4. 's' → logprob: -2.693417549133301
    5. 'diff' → logprob: -3.693417549133301
    6. 'q' → logprob: -3.943417549133301
    7. 'break' → logprob: -3.943417549133301
    8. 'b' → logprob: -3.943417549133301
    9. '#' → logprob: -4.068417549133301
    10. 'for' → logprob: -4.568417549133301

Token 194: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0388784296810627
    2. '=' → logprob: -3.4138784408569336
    3. ' +=' → logprob: -6.163878440856934
    4. ',' → logprob: -7.163878440856934
    5. 'okens' → logprob: -7.413878440856934
    6. 'oken' → logprob: -8.038878440856934
    7. 'r' → logprob: -8.163878440856934
    8. '+=' → logprob: -8.288878440856934
    9. 'o' → logprob: -8.413878440856934
    10. 'ype' → logprob: -8.538878440856934

Token 195: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.30711081624031067
    2. ' s' → logprob: -2.4321107864379883
    3. 'a' → logprob: -3.0571107864379883
    4. 'k' → logprob: -3.3071107864379883
    5. 'm' → logprob: -3.9321107864379883
    6. 'min' → logprob: -4.182110786437988
    7. 'n' → logprob: -4.557110786437988
    8. 'j' → logprob: -4.557110786437988
    9. 'u' → logprob: -5.057110786437988
    10. 'l' → logprob: -5.432110786437988

Token 196: '
' (ID: 198)
  Prédit: '[:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.833084762096405
    2. '[j' → logprob: -1.2080848217010498
    3. '=' → logprob: -1.4580848217010498
    4. '[' → logprob: -3.83308482170105
    5. ' =' → logprob: -5.833084583282471
    6. '[:]' → logprob: -5.958084583282471
    7. '[::-' → logprob: -6.458084583282471
    8. '=j' → logprob: -6.708084583282471
    9. '.replace' → logprob: -6.958084583282471
    10. '[t' → logprob: -7.833084583282471

Token 197: '   ' (ID: 271)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6597000360488892
    2. ' =' → logprob: -0.7847000360488892
    3. 's' → logprob: -4.1596999168396
    4. 'if' → logprob: -6.1596999168396
    5. 't' → logprob: -6.4096999168396
    6. 'for' → logprob: -6.7846999168396
    7. '=
' → logprob: -6.9096999168396
    8. '   ' → logprob: -7.0346999168396
    9. 'y' → logprob: -7.6596999168396
    10. 'while' → logprob: -7.7846999168396

Token 198: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -1.4405978918075562
    2. 'if' → logprob: -1.6905978918075562
    3. 'r' → logprob: -1.9405978918075562
    4. 't' → logprob: -2.1905980110168457
    5. ' =' → logprob: -2.8155980110168457
    6. '=' → logprob: -3.1905980110168457
    7. 'q' → logprob: -3.4405980110168457
    8. 'i' → logprob: -3.5655980110168457
    9. 's' → logprob: -4.065598011016846
    10. 'j' → logprob: -4.315598011016846

Token 199: ' c' (ID: 274)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1392979621887207
    2. 'i' → logprob: -1.1392979621887207
    3. 'x' → logprob: -1.6392979621887207
    4. '_i' → logprob: -2.8892979621887207
    5. ' i' → logprob: -3.7642979621887207
    6. ' _' → logprob: -3.7642979621887207
    7. '_x' → logprob: -3.8892979621887207
    8. 'r' → logprob: -4.514297962188721
    9. 'q' → logprob: -4.639297962188721
    10. ' x' → logprob: -5.139297962188721

Token 200: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01828467659652233
    2. 'in' → logprob: -4.018284797668457
    3. ' ' → logprob: -9.393284797668457
    4. 's' → logprob: -11.018284797668457
    5. '  ' → logprob: -11.768284797668457
    6. ' i' → logprob: -12.143284797668457
    7. '	in' → logprob: -12.393284797668457
    8. 'i' → logprob: -12.393284797668457
    9. 'n' → logprob: -13.018284797668457
    10. ',' → logprob: -13.518284797668457

Token 201: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.1976921558380127
    2. 'x' → logprob: -2.0726921558380127
    3. 'idx' → logprob: -2.1976921558380127
    4. 'd' → logprob: -2.3226921558380127
    5. 'pos' → logprob: -2.4476921558380127
    6. 'length' → logprob: -2.8226921558380127
    7. '_' → logprob: -3.3226921558380127
    8. '_i' → logprob: -3.4476921558380127
    9. 'cnt' → logprob: -3.6976921558380127
    10. 'count' → logprob: -3.8226921558380127

Token 202: ' in' (ID: 306)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.11600398272275925
    2. ' in' → logprob: -2.24100399017334
    3. 'nd' → logprob: -6.36600399017334
    4. 'in' → logprob: -7.24100399017334
    5. 'nt' → logprob: -8.61600399017334
    6. 's' → logprob: -8.86600399017334
    7. 'm' → logprob: -9.24100399017334
    8. 'dx' → logprob: -9.61600399017334
    9. 'd' → logprob: -9.74100399017334
    10. 't' → logprob: -9.86600399017334

Token 203: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.01405385136604309
    2. 'enumer' → logprob: -4.639053821563721
    3. ' l' → logprob: -6.514053821563721
    4. ' enumerate' → logprob: -6.639053821563721
    5. 're' → logprob: -7.639053821563721
    6. '[l' → logprob: -8.139054298400879
    7. 'sorted' → logprob: -8.264054298400879
    8. '[(' → logprob: -8.514054298400879
    9. 'range' → logprob: -9.764054298400879
    10. ' reversed' → logprob: -10.264054298400879

Token 204: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03366725519299507
    2. ':
' → logprob: -3.4086673259735107
    3. '[::-' → logprob: -11.65866756439209
    4. ':

' → logprob: -12.53366756439209
    5. '[' → logprob: -12.78366756439209
    6. '       ' → logprob: -13.53366756439209
    7. '[:-' → logprob: -14.15866756439209
    8. ':
' → logprob: -14.15866756439209
    9. '):
' → logprob: -14.40866756439209
    10. '[:' → logprob: -14.40866756439209

Token 205: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04915362223982811
    2. ':' → logprob: -3.4241535663604736
    3. ':
' → logprob: -4.549153804779053
    4. ' if' → logprob: -5.674153804779053
    5. ',' → logprob: -7.549153804779053
    6. '<|end|>' → logprob: -7.674153804779053
    7. '   ' → logprob: -9.674153327941895
    8. '<|end|>' → logprob: -9.924153327941895
    9. ' s' → logprob: -10.049153327941895
    10. '):
' → logprob: -10.174153327941895

Token 206: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.16399706900119781
    2. 'if' (adapté à ' if') → logprob: -1.9139970541000366
    3. '       ' → logprob: -6.413997173309326
    4. '           ' → logprob: -7.538997173309326
    5. '   ' → logprob: -7.788997173309326
    6. ' s' → logprob: -8.038996696472168
    7. '
' → logprob: -8.413996696472168
    8. ' for' → logprob: -8.538996696472168
    9. ' ' → logprob: -9.413996696472168
    10. 't' → logprob: -9.663996696472168

Token 207: ' i' (ID: 575)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -1.0651671886444092
    2. ' i' → logprob: -1.3151671886444092
    3. 'c' → logprob: -1.4401671886444092
    4. 'i' → logprob: -1.9401671886444092
    5. 'm' → logprob: -7.065167427062988
    6. ' m' → logprob: -7.190167427062988
    7. ' s' → logprob: -7.190167427062988
    8. ' u' → logprob: -7.565167427062988
    9. ' p' → logprob: -7.690167427062988
    10. ' t' → logprob: -7.940167427062988

Token 208: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.6668702960014343
    2. ' <=' → logprob: -1.166870355606079
    3. '==' → logprob: -2.541870355606079
    4. '>=' → logprob: -3.291870355606079
    5. ' ==' → logprob: -3.666870355606079
    6. ' >=' → logprob: -4.4168701171875
    7. '+' → logprob: -4.5418701171875
    8. ' +' → logprob: -5.0418701171875
    9. ' -' → logprob: -6.7918701171875
    10. '<' → logprob: -7.1668701171875

Token 209: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.03325338661670685
    2. 'k' → logprob: -3.5332534313201904
    3. ' n' → logprob: -5.908253192901611
    4. 'a' → logprob: -7.908253192901611
    5. 'j' → logprob: -8.90825366973877
    6. 'p' → logprob: -9.15825366973877
    7. ' k' → logprob: -10.03325366973877
    8. ' ' → logprob: -10.65825366973877
    9. '0' → logprob: -11.03325366973877
    10. '
' → logprob: -11.15825366973877

Token 210: ' and' (ID: 326)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.209962397813797
    2. ' and' → logprob: -2.4599623680114746
    3. ' -' → logprob: -2.8349623680114746
    4. 'and' → logprob: -3.2099623680114746
    5. ':
' → logprob: -5.959962368011475
    6. ':' → logprob: -6.209962368011475
    7. '+' → logprob: -8.959962844848633
    8. ' ' → logprob: -10.209962844848633
    9. '   ' → logprob: -10.959962844848633
    10. ' +' → logprob: -11.084962844848633

Token 211: ' c' (ID: 274)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.7209283113479614
    2. 'i' → logprob: -1.0959283113479614
    3. ' c' → logprob: -2.970928192138672
    4. ' p' → logprob: -2.970928192138672
    5. 'p' → logprob: -3.470928192138672
    6. 'c' → logprob: -3.470928192138672
    7. 'k' → logprob: -5.720928192138672
    8. ' k' → logprob: -5.970928192138672
    9. ' n' → logprob: -6.595928192138672
    10. 'n' → logprob: -6.720928192138672

Token 212: ' ==' (ID: 951)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >=' → logprob: -1.1914018392562866
    2. ' >' → logprob: -1.3164018392562866
    3. '>=' → logprob: -1.4414018392562866
    4. '>' → logprob: -1.8164018392562866
    5. ' +' → logprob: -3.816401958465576
    6. '+' → logprob: -5.816401958465576
    7. '<=' → logprob: -6.691401958465576
    8. ' <=' → logprob: -6.691401958465576
    9. '==' → logprob: -7.816401958465576
    10. ' <' → logprob: -8.316401481628418

Token 213: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.005654421169310808
    2. ' a' → logprob: -5.255654335021973
    3. '1' → logprob: -8.755654335021973
    4. 'k' → logprob: -8.880654335021973
    5. ' ' → logprob: -9.630654335021973
    6. '   ' → logprob: -10.630654335021973
    7. 'n' → logprob: -11.630654335021973
    8. 'p' → logprob: -12.005654335021973
    9. '2' → logprob: -12.880654335021973
    10. ' k' → logprob: -13.005654335021973

Token 214: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.751824676990509
    2. ' and' → logprob: -1.0018246173858643
    3. ':' → logprob: -1.8768246173858643
    4. 'and' → logprob: -4.876824855804443
    5. ' :
' → logprob: -8.126824378967285
    6. ' :' → logprob: -9.376824378967285
    7. '+' → logprob: -9.876824378967285
    8. '       ' → logprob: -10.376824378967285
    9. ':

' → logprob: -10.626824378967285
    10. '           ' → logprob: -11.001824378967285

Token 215: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0569932647049427
    2. ':
' → logprob: -3.931993246078491
    3. ':' → logprob: -4.30699348449707
    4. ' and' → logprob: -4.55699348449707
    5. ' s' → logprob: -4.93199348449707
    6. ' =' → logprob: -6.55699348449707
    7. 's' → logprob: -7.43199348449707
    8. '       ' → logprob: -7.43199348449707
    9. ',' → logprob: -8.05699348449707
    10. ' for' → logprob: -8.80699348449707

Token 216: ' if' (ID: 538)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.9630454182624817
    2. 'if' (adapté à ' if') → logprob: -1.963045358657837
    3. 's' → logprob: -2.088045358657837
    4. 'start' → logprob: -3.213045358657837
    5. 'r' → logprob: -3.338045358657837
    6. ' s' → logprob: -3.338045358657837
    7. 'x' → logprob: -3.463045358657837
    8. ' t' → logprob: -3.463045358657837
    9. 'left' → logprob: -3.713045358657837
    10. '       ' → logprob: -3.713045358657837

Token 217: ' u' (ID: 337)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6669050455093384
    2. 'i' → logprob: -1.7919050455093384
    3. ' s' → logprob: -2.541904926300049
    4. ' p' → logprob: -2.666904926300049
    5. ' c' → logprob: -3.541904926300049
    6. 'p' → logprob: -3.791904926300049
    7. 's' → logprob: -4.041904926300049
    8. ' a' → logprob: -4.041904926300049
    9. ' k' → logprob: -4.416904926300049
    10. ' n' → logprob: -4.416904926300049

Token 218: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.018704678863286972
    2. '[n' → logprob: -4.518704891204834
    3. '[' → logprob: -5.643704891204834
    4. '[a' → logprob: -6.143704891204834
    5. 'i' → logprob: -6.893704891204834
    6. ' i' → logprob: -8.518704414367676
    7. '[j' → logprob: -8.643704414367676
    8. '[u' → logprob: -9.018704414367676
    9. '[c' → logprob: -9.143704414367676
    10. '[:' → logprob: -9.268704414367676

Token 219: ':i' (ID: 34041)
  Prédit: ':i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':i' → logprob: -1.0263569355010986
    2. '+' → logprob: -1.7763569355010986
    3. '+i' → logprob: -2.0263569355010986
    4. '-' → logprob: -2.2763569355010986
    5. ']' → logprob: -2.6513569355010986
    6. ':' → logprob: -2.7763569355010986
    7. '+n' → logprob: -3.1513569355010986
    8. ' +' → logprob: -3.7763569355010986
    9. ']==' → logprob: -5.0263566970825195
    10. '+p' → logprob: -5.0263566970825195

Token 220: ' +' (ID: 659)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.9422034621238708
    2. '+i' → logprob: -1.3172035217285156
    3. '+a' → logprob: -1.9422035217285156
    4. 'a' → logprob: -2.3172035217285156
    5. '+' → logprob: -2.5672035217285156
    6. '+c' → logprob: -4.317203521728516
    7. ' +' → logprob: -4.942203521728516
    8. '   ' → logprob: -7.192203521728516
    9. 'c' → logprob: -7.442203521728516
    10. ' i' → logprob: -7.567203521728516

Token 221: ' n' (ID: 297)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.004159245174378157
    2. 'k' → logprob: -6.004159450531006
    3. 'c' → logprob: -6.629159450531006
    4. 'n' → logprob: -8.129158973693848
    5. ' a' → logprob: -10.254158973693848
    6. '   ' → logprob: -11.879158973693848
    7. 'm' → logprob: -12.129158973693848
    8. 't' → logprob: -12.629158973693848
    9. '2' → logprob: -12.879158973693848
    10. 'x' → logprob: -13.004158973693848

Token 222: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.010190908797085285
    2. '].' → logprob: -4.885190963745117
    3. ']==' → logprob: -6.135190963745117
    4. ' ]' → logprob: -8.385190963745117
    5. '+' → logprob: -9.760190963745117
    6. '][:' → logprob: -10.135190963745117
    7. ']!=' → logprob: -10.260190963745117
    8. '-' → logprob: -10.885190963745117
    9. '*' → logprob: -12.135190963745117
    10. '   ' → logprob: -12.260190963745117

Token 223: ' <' (ID: 464)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.18262887001037598
    2. ' ==' → logprob: -1.932628870010376
    3. '!=' → logprob: -5.307628631591797
    4. ']==' → logprob: -5.557628631591797
    5. ']' → logprob: -6.057628631591797
    6. '.startswith' → logprob: -6.432628631591797
    7. '.' → logprob: -6.682628631591797
    8. ' !=' → logprob: -6.682628631591797
    9. '<' → logprob: -7.182628631591797
    10. '[:' → logprob: -7.307628631591797

Token 224: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.5325198769569397
    2. 't' → logprob: -0.9075198769569397
    3. ' s' → logprob: -5.157519817352295
    4. 's' → logprob: -5.782519817352295
    5. ' u' → logprob: -8.282520294189453
    6. 'u' → logprob: -8.657520294189453
    7. ' ' → logprob: -10.532520294189453
    8. 'm' → logprob: -11.032520294189453
    9. ' m' → logprob: -11.657520294189453
    10. 'k' → logprob: -11.907520294189453

Token 225: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6327593922615051
    2. ':' → logprob: -0.7577593922615051
    3. ' :' → logprob: -10.382759094238281
    4. ' :
' → logprob: -10.507759094238281
    5. ':
' → logprob: -10.882759094238281
    6. '):
' → logprob: -11.132759094238281
    7. 'u' → logprob: -11.257759094238281
    8. '):' → logprob: -11.507759094238281
    9. '[u' → logprob: -11.632759094238281
    10. '=' → logprob: -12.007759094238281

Token 226: '               ' (ID: 506)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.2365609109401703
    2. ' t' → logprob: -1.7365609407424927
    3. '               ' → logprob: -3.611560821533203
    4. '           ' → logprob: -5.361560821533203
    5. '       ' → logprob: -6.111560821533203
    6. '	t' → logprob: -8.236560821533203
    7. '   ' → logprob: -8.611560821533203
    8. '(t' → logprob: -10.361560821533203
    9. 's' → logprob: -10.361560821533203
    10. 'u' → logprob: -11.236560821533203

Token 227: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' (adapté à ' t') → logprob: -0.00877422746270895
    2. ' t' → logprob: -4.758774280548096
    3. '               ' → logprob: -8.883773803710938
    4. 's' → logprob: -12.508773803710938
    5. '                   ' → logprob: -12.508773803710938
    6. '           ' → logprob: -12.883773803710938
    7. '
' → logprob: -13.008773803710938
    8. '   ' → logprob: -13.133773803710938
    9. '	t' → logprob: -13.508773803710938
    10. 'print' → logprob: -13.758773803710938

Token 228: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20144745707511902
    2. ' =' → logprob: -1.7014474868774414
    3. '=u' → logprob: -10.326447486877441
    4. 'u' → logprob: -14.576447486877441
    5. '＝' → logprob: -15.076447486877441
    6. '=
' → logprob: -15.826447486877441
    7. 's' → logprob: -16.076446533203125
    8. ',' → logprob: -16.451446533203125
    9. ' u' → logprob: -16.451446533203125
    10. '=

' → logprob: -16.576446533203125

Token 229: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.012513656169176102
    2. ' u' → logprob: -4.387513637542725
    3. '   ' → logprob: -12.887514114379883
    4. '	u' → logprob: -14.762514114379883
    5. ' ' → logprob: -15.262514114379883
    6. '
' → logprob: -15.512514114379883
    7. ' ' → logprob: -16.262514114379883
    8. '(u' → logprob: -16.637514114379883
    9. '  ' → logprob: -16.762514114379883
    10. '               ' → logprob: -16.887514114379883

Token 230: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.4121114822482923e-06
    2. '[' → logprob: -12.875003814697266
    3. 'i' → logprob: -14.500003814697266
    4. '```' → logprob: -16.500003814697266
    5. '[u' → logprob: -17.000003814697266
    6. '   ' → logprob: -17.375003814697266
    7. ' [' → logprob: -17.625003814697266
    8. '[
' → logprob: -18.000003814697266
    9. '[j' → logprob: -18.125003814697266
    10. ' i' → logprob: -18.375003814697266

Token 231: ':i' (ID: 34041)
  Prédit: ':i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':i' → logprob: -0.00011868205183418468
    2. ':' → logprob: -9.625118255615234
    3. ' :' → logprob: -10.250118255615234
    4. 'i' → logprob: -11.125118255615234
    5. ' ' → logprob: -14.375118255615234
    6. ' i' → logprob: -14.625118255615234
    7. '[i' → logprob: -15.375118255615234
    8. ',i' → logprob: -15.625118255615234
    9. '```' → logprob: -15.750118255615234
    10. '   ' → logprob: -15.875118255615234

Token 232: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.7129659652709961
    2. '+n' → logprob: -0.7129659652709961
    3. '+' → logprob: -4.462965965270996
    4. 'n' → logprob: -4.837965965270996
    5. ' n' → logprob: -9.087965965270996
    6. '   ' → logprob: -10.462965965270996
    7. '+i' → logprob: -10.837965965270996
    8. '           ' → logprob: -12.462965965270996
    9. ' ' → logprob: -12.837965965270996
    10. '    ' → logprob: -13.212965965270996

Token 233: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -2.7610454708337784e-05
    2. ' n' → logprob: -10.500027656555176
    3. '   ' → logprob: -17.37502670288086
    4. '	n' → logprob: -18.25002670288086
    5. '_n' → logprob: -18.50002670288086
    6. '           ' → logprob: -18.87502670288086
    7. '       ' → logprob: -19.12502670288086
    8. '+' → logprob: -19.37502670288086
    9. '```' → logprob: -19.50002670288086
    10. ' ' → logprob: -20.25002670288086

Token 234: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04870704561471939
    2. ']
' → logprob: -3.0487070083618164
    3. ']
' → logprob: -9.548707008361816
    4. '])' → logprob: -11.298707008361816
    5. ')' → logprob: -11.423707008361816
    6. '           ' → logprob: -11.548707008361816
    7. ']

' → logprob: -11.798707008361816
    8. ' ]' → logprob: -12.923707008361816
    9. '               ' → logprob: -13.548707008361816
    10. '       ' → logprob: -13.798707008361816

Token 235: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3860110938549042
    2. '
' → logprob: -1.2610111236572266
    3. '           ' → logprob: -4.511011123657227
    4. '    
' → logprob: -4.636011123657227
    5. '\n' → logprob: -5.386011123657227
    6. '       ' → logprob: -5.511011123657227
    7. ' 
' → logprob: -6.261011123657227
    8. ' p' → logprob: -6.636011123657227
    9. '               ' → logprob: -7.011011123657227
    10. '        
' → logprob: -7.386011123657227

Token 236: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.0105357700958848
    2. '   ' → logprob: -4.760535717010498
    3. 'p' → logprob: -6.885535717010498
    4. ' s' → logprob: -7.135535717010498
    5. '
' → logprob: -10.260536193847656
    6. 'print' → logprob: -10.760536193847656
    7. 'n' → logprob: -11.135536193847656
    8. 'k' → logprob: -11.510536193847656
    9. ' p' → logprob: -11.885536193847656
    10. 'if' → logprob: -12.510536193847656

Token 237: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931476593017578
    2. ' =' → logprob: -0.6931476593017578
    3. '＝' → logprob: -15.068147659301758
    4. '=s' → logprob: -16.193147659301758
    5. ' ' → logprob: -16.568147659301758
    6. ',' → logprob: -17.068147659301758
    7. ' +=' → logprob: -18.193147659301758
    8. '=t' → logprob: -18.568147659301758
    9. '=k' → logprob: -18.693147659301758
    10. '.=' → logprob: -18.693147659301758

Token 238: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.20141489803791046
    2. ' t' → logprob: -1.701414942741394
    3. 's' → logprob: -14.451415061950684
    4. '`t' → logprob: -14.451415061950684
    5. ' ' → logprob: -15.451415061950684
    6. ' ' → logprob: -16.576414108276367
    7. '	t' → logprob: -16.701414108276367
    8. '   ' → logprob: -16.951414108276367
    9. '```' → logprob: -17.076414108276367
    10. '(t' → logprob: -17.576414108276367

Token 239: '[::-' (ID: 159890)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01540361624211073
    2. ' p' → logprob: -4.890403747558594
    3. '
' → logprob: -5.015403747558594
    4. 'p' → logprob: -7.640403747558594
    5. '    
' → logprob: -8.140403747558594
    6. ' 
' → logprob: -8.265403747558594
    7. '\n' → logprob: -10.890403747558594
    8. '<|end|>' → logprob: -11.765403747558594
    9. '  
' → logprob: -11.890403747558594
    10. 'n' → logprob: -11.890403747558594

Token 240: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -15.500000953674316
    3. ']' → logprob: -15.625000953674316
    4. '```' → logprob: -16.5
    5. 'v' → logprob: -17.125
    6. '-' → logprob: -17.75
    7. ')' → logprob: -18.0
    8. '::-' → logprob: -18.25
    9. '``' → logprob: -18.3125
    10. '１' → logprob: -18.5

Token 241: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006709783338010311
    2. ')
' → logprob: -7.625670909881592
    3. '<|end|>' → logprob: -9.25067138671875
    4. ']' → logprob: -10.12567138671875
    5. ' )' → logprob: -10.87567138671875
    6. '[::-' → logprob: -11.62567138671875
    7. '')' → logprob: -12.37567138671875
    8. '}' → logprob: -13.37567138671875
    9. '```' → logprob: -13.37567138671875
    10. '+' → logprob: -13.87567138671875

Token 242: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0133151700720191
    2. 'p' → logprob: -4.638315200805664
    3. '```' → logprob: -5.888315200805664
    4. '
' → logprob: -8.263315200805664
    5. ' p' → logprob: -8.388315200805664
    6. '    
' → logprob: -8.763315200805664
    7. '``' → logprob: -10.013315200805664
    8. '	p' → logprob: -10.513315200805664
    9. '\n' → logprob: -11.013315200805664
    10. '\' → logprob: -11.013315200805664

Token 243: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.007518961559981108
    2. '
' → logprob: -5.007518768310547
    3. ' p' → logprob: -7.632518768310547
    4. '\n' → logprob: -8.382518768310547
    5. '   ' → logprob: -9.882518768310547
    6. ' 
' → logprob: -11.007518768310547
    7. '    
' → logprob: -11.257518768310547
    8. '  
' → logprob: -12.632518768310547
    9. '```' → logprob: -13.507518768310547
    10. '\' → logprob: -14.132518768310547

Token 244: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.12866391241550446
    2. ' +=' → logprob: -2.128664016723633
    3. '+' → logprob: -6.503664016723633
    4. '=' → logprob: -8.378664016723633
    5. ' +' → logprob: -13.003664016723633
    6. ' =' → logprob: -13.628664016723633
    7. '+='' → logprob: -13.628664016723633
    8. ']+=' → logprob: -14.128664016723633
    9. '<|end|>' → logprob: -14.503664016723633
    10. '+="' → logprob: -14.753664016723633

Token 245: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '```' → logprob: -17.87500762939453
    4. '   ' → logprob: -18.25000762939453
    5. '+' → logprob: -21.50000762939453
    6. '`' → logprob: -21.62500762939453
    7. ' ' → logprob: -21.87500762939453
    8. '１' → logprob: -22.31250762939453
    9. '
' → logprob: -22.50000762939453
    10. '۱' → logprob: -22.62500762939453

Token 246: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '```' → logprob: -17.500001907348633
    4. '   ' → logprob: -17.750001907348633
    5. '2' → logprob: -18.687501907348633
    6. '0' → logprob: -19.250001907348633
    7. '`' → logprob: -20.000001907348633
    8. '-' → logprob: -20.187501907348633
    9. 's' → logprob: -20.187501907348633
    10. '１' → logprob: -20.375001907348633

Token 247: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 248: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 249: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.00010950337309623137
    2. 's' → logprob: -9.500109672546387
    3. '(t' → logprob: -10.500109672546387
    4. '(' → logprob: -12.000109672546387
    5. '('' → logprob: -15.250109672546387
    6. '((' → logprob: -15.625109672546387
    7. '()' → logprob: -15.625109672546387
    8. ' (' → logprob: -16.37510871887207
    9. '(n' → logprob: -17.00010871887207
    10. '(len' → logprob: -17.00010871887207

Token 250: '[::-' (ID: 159890)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2664456789934775e-06
    2. ' )' → logprob: -14.625000953674316
    3. '))' → logprob: -14.750000953674316
    4. '())' → logprob: -15.750000953674316
    5. ')`' → logprob: -16.375001907348633
    6. '()' → logprob: -17.250001907348633
    7. '[::-' → logprob: -17.250001907348633
    8. '`)' → logprob: -17.250001907348633
    9. '')' → logprob: -17.625001907348633
    10. ')
' → logprob: -17.625001907348633

Token 251: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.008129963040119e-06
    2. '-' → logprob: -13.750003814697266
    3. '```' → logprob: -13.875003814697266
    4. ')' → logprob: -14.250003814697266
    5. 'p' → logprob: -15.750003814697266
    6. 'r' → logprob: -15.750003814697266
    7. '])' → logprob: -15.750003814697266
    8. '(' → logprob: -16.000003814697266
    9. '``' → logprob: -16.125003814697266
    10. 's' → logprob: -16.500003814697266

Token 252: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -9.088346359931165e-07
    2. '))' → logprob: -15.000000953674316
    3. ')
' → logprob: -16.0
    4. ' )' → logprob: -16.25
    5. '`)' → logprob: -16.375
    6. '())' → logprob: -16.375
    7. ')`' → logprob: -16.375
    8. '()' → logprob: -18.375
    9. '')' → logprob: -18.5
    10. '）' → logprob: -18.625


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 250
Tokens correctement prédits (1ère position, stricte): 92
Tokens correctement prédits (1ère position, avec adaptation): 103
Tokens correctement prédits (top 10): 210
Précision stricte (1ère position): 36.80%
Précision adaptée (1ère position): 41.20%
Précision (top 10): 84.00%
================================================================================
