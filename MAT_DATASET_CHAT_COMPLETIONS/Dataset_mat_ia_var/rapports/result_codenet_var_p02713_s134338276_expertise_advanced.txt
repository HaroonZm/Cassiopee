================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:18:31
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from math import gcd
from functools import cache

k = int(input())

@cache
def triplet_gcd(a, b, c):
    return gcd(a, gcd(b, c))

@cache
def pair_gcd(a, b):
    return gcd(a, b)

# Use generator expressions and symmetry exploitation
ans = sum(
    triplet_gcd(a, b, c) * 6
    for a in range(1, k+1)
    for b in range(a+1, k+1)
    for c in range(b+1, k+1)
)

ans += sum(
    pair_gcd(a, b) * 6
    for a in range(1, k+1)
    for b in range(a+1, k+1)
)

ans += sum(range(1, k+1))

print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' gcd' (ID: 106918)
  Prédit: 'sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sqrt' → logprob: -0.22528702020645142
    2. ' sqrt' → logprob: -1.8502869606018066
    3. 'pow' → logprob: -4.100286960601807
    4. 'pi' → logprob: -4.850286960601807
    5. 'sin' → logprob: -4.850286960601807
    6. ' pi' → logprob: -5.100286960601807
    7. 'import' → logprob: -6.475286960601807
    8. 'ceil' → logprob: -7.100286960601807
    9. ' sin' → logprob: -7.225286960601807
    10. 'log' → logprob: -7.725286960601807

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0024902839213609695
    2. '\(' → logprob: -6.377490520477295
    3. '(
' → logprob: -8.002490043640137
    4. ' (' → logprob: -8.877490043640137
    5. ',' → logprob: -9.252490043640137
    6. 'a' → logprob: -9.752490043640137
    7. '\' → logprob: -9.877490043640137
    8. '\n' → logprob: -10.252490043640137
    9. '```' → logprob: -10.502490043640137
    10. '.' → logprob: -12.252490043640137

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0404830165207386
    2. '(
' → logprob: -3.290482997894287
    3. '\(' → logprob: -7.040482997894287
    4. 'def' → logprob: -7.165482997894287
    5. '\' → logprob: -9.040483474731445
    6. '(

' → logprob: -9.165483474731445
    7. ',' → logprob: -9.415483474731445
    8. '\n' → logprob: -9.415483474731445
    9. 'a' → logprob: -9.540483474731445
    10. '
' → logprob: -9.790483474731445

Token 6: ' functools' (ID: 142636)
  Prédit: 'fra'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fra' → logprob: -0.04234786331653595
    2. ' fractions' → logprob: -3.2923479080200195
    3. 'fun' → logprob: -6.4173479080200195
    4. ' functools' → logprob: -6.9173479080200195
    5. 'math' → logprob: -7.7923479080200195
    6. 'sys' → logprob: -7.9173479080200195
    7. 'collections' → logprob: -7.9173479080200195
    8. 'typing' → logprob: -8.79234790802002
    9. ' itertools' → logprob: -9.16734790802002
    10. 'sym' → logprob: -9.29234790802002

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.0034760551061481237
    2. 'import' → logprob: -5.753476142883301
    3. ' ' → logprob: -9.1284761428833
    4. '.' → logprob: -9.1284761428833
    5. '	import' → logprob: -10.3784761428833
    6. '_import' → logprob: -11.1284761428833
    7. '.import' → logprob: -11.2534761428833
    8. ' .' → logprob: -11.7534761428833
    9. '```' → logprob: -12.6284761428833
    10. '<|end|>' → logprob: -13.0034761428833

Token 8: ' cache' (ID: 11956)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.007705769035965204
    2. 'l' → logprob: -5.3827056884765625
    3. ' reduce' → logprob: -6.0077056884765625
    4. 'wrap' → logprob: -8.257705688476562
    5. ' l' → logprob: -8.757705688476562
    6. 'cache' → logprob: -9.382705688476562
    7. 'partial' → logprob: -9.757705688476562
    8. 'redu' → logprob: -10.757705688476562
    9. 'cached' → logprob: -11.382705688476562
    10. 'import' → logprob: -11.382705688476562

Token 9: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.22491703927516937
    2. '@' → logprob: -2.599916934967041
    3. '\' → logprob: -2.974916934967041
    4. '
' → logprob: -3.349916934967041
    5. '\n' → logprob: -3.974916934967041
    6. '```' → logprob: -4.099916934967041
    7. '@
' → logprob: -5.974916934967041
    8. '

' → logprob: -7.599916934967041
    9. '(' → logprob: -7.724916934967041
    10. '`' → logprob: -7.849916934967041

Token 10: 'k' (ID: 74)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6281229257583618
    2. '@' → logprob: -0.8781229257583618
    3. 'd' → logprob: -3.0031228065490723
    4. '\' → logprob: -7.253122806549072
    5. '@
' → logprob: -8.25312328338623
    6. '```' → logprob: -9.37812328338623
    7. 'de' → logprob: -9.62812328338623
    8. '`' → logprob: -10.12812328338623
    9. '@\' → logprob: -11.25312328338623
    10. '
' → logprob: -11.87812328338623

Token 11: ' =' (ID: 314)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.0521308183670044
    2. '=' → logprob: -1.1771308183670044
    3. '(' → logprob: -1.8021308183670044
    4. 'a' → logprob: -2.177130699157715
    5. ' =' → logprob: -4.427130699157715
    6. '(a' → logprob: -4.427130699157715
    7. '(e' → logprob: -4.552130699157715
    8. ')' → logprob: -4.677130699157715
    9. 'u' → logprob: -5.802130699157715
    10. ',' → logprob: -5.802130699157715

Token 12: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03854195028543472
    2. '1' → logprob: -4.163541793823242
    3. '0' → logprob: -4.663541793823242
    4. '10' → logprob: -4.788541793823242
    5. '2' → logprob: -6.288541793823242
    6. '100' → logprob: -6.913541793823242
    7. '4' → logprob: -8.413541793823242
    8. '5' → logprob: -8.413541793823242
    9. '20' → logprob: -8.538541793823242
    10. '16' → logprob: -9.038541793823242

Token 13: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0006293982733041048
    2. '('' → logprob: -8.500629425048828
    3. '(k' → logprob: -8.750629425048828
    4. '(
' → logprob: -9.750629425048828
    5. '`' → logprob: -10.375629425048828
    6. '32' → logprob: -10.375629425048828
    7. ''' → logprob: -10.625629425048828
    8. '```' → logprob: -10.625629425048828
    9. '()' → logprob: -10.750629425048828
    10. '40' → logprob: -11.250629425048828

Token 14: '())

' (ID: 27654)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10775826126337051
    2. '()' → logprob: -2.4827582836151123
    3. ')' → logprob: -4.107758045196533
    4. '())' → logprob: -6.982758045196533
    5. '(
' → logprob: -7.107758045196533
    6. '('' → logprob: -8.482758522033691
    7. '(

' → logprob: -9.732758522033691
    8. '(()' → logprob: -10.107758522033691
    9. '("("' → logprob: -10.857758522033691
    10. '(`' → logprob: -10.857758522033691

Token 15: '@' (ID: 31)
  Prédit: '@'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' → logprob: -0.05793767794966698
    2. 'def' → logprob: -4.1829376220703125
    3. 'x' → logprob: -5.1829376220703125
    4. 'dp' → logprob: -5.3079376220703125
    5. 'n' → logprob: -5.4329376220703125
    6. 'if' → logprob: -5.6829376220703125
    7. 'd' → logprob: -5.6829376220703125
    8. 'a' → logprob: -5.6829376220703125
    9. 'result' → logprob: -5.8079376220703125
    10. 'for' → logprob: -5.9329376220703125

Token 16: 'cache' (ID: 18949)
  Prédit: 'cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cache' → logprob: -2.2200749754119897e-06
    2. 'c' → logprob: -13.750001907348633
    3. 'cac' → logprob: -14.750001907348633
    4. 'ca' → logprob: -15.125001907348633
    5. ' cache' → logprob: -16.125001907348633
    6. 'cached' → logprob: -16.875001907348633
    7. '	cache' → logprob: -17.625001907348633
    8. '@' → logprob: -17.625001907348633
    9. 'cas' → logprob: -17.875001907348633
    10. 'cat' → logprob: -18.125001907348633

Token 17: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3166000247001648
    2. '
' → logprob: -1.3166000843048096
    3. '\' → logprob: -5.8165998458862305
    4. '()
' → logprob: -9.19159984588623
    5. '
' → logprob: -9.44159984588623
    6. '(' → logprob: -9.69159984588623
    7. ' def' → logprob: -10.56659984588623
    8. '\n' → logprob: -10.69159984588623
    9. '(def' → logprob: -11.19159984588623
    10. '(
' → logprob: -11.56659984588623

Token 18: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0564331205387134e-05
    2. '
' → logprob: -11.50001049041748
    3. ' def' → logprob: -15.12501049041748
    4. 'd' → logprob: -17.750011444091797
    5. 'de' → logprob: -17.875011444091797
    6. '(def' → logprob: -17.875011444091797
    7. '(' → logprob: -18.250011444091797
    8. '\' → logprob: -18.375011444091797
    9. '```' → logprob: -18.750011444091797
    10. '0' → logprob: -19.125011444091797

Token 19: ' trip' (ID: 8831)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -1.0880215167999268
    2. 'f' → logprob: -1.2130215167999268
    3. 'ways' → logprob: -2.4630215167999268
    4. 'solve' → logprob: -2.5880215167999268
    5. 'dp' → logprob: -3.2130215167999268
    6. 'count' → logprob: -3.3380215167999268
    7. 'l' → logprob: -3.5880215167999268
    8. 'fib' → logprob: -3.9630215167999268
    9. 'factor' → logprob: -4.213021278381348
    10. ' dfs' → logprob: -4.588021278381348

Token 20: 'let' (ID: 1347)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.016291245818138123
    2. 'let' → logprob: -4.14129114151001
    3. '(le' → logprob: -8.891291618347168
    4. '_le' → logprob: -10.016291618347168
    5. ' le' → logprob: -10.516291618347168
    6. '(let' → logprob: -10.891291618347168
    7. '(' → logprob: -11.516291618347168
    8. 'l' → logprob: -12.016291618347168
    9. 'lets' → logprob: -12.766291618347168
    10. '(l' → logprob: -13.016291618347168

Token 21: '_g' (ID: 5439)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.252021849155426
    2. '(a' → logprob: -1.8770217895507812
    3. '(k' → logprob: -3.0020217895507812
    4. '(n' → logprob: -4.502021789550781
    5. '(i' → logprob: -5.752021789550781
    6. '(_' → logprob: -6.002021789550781
    7. '(x' → logprob: -6.627021789550781
    8. '_sum' → logprob: -7.127021789550781
    9. '(s' → logprob: -7.877021789550781
    10. '(l' → logprob: -8.252021789550781

Token 22: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.00013464801304508
    2. 'reat' → logprob: -9.250134468078613
    3. 'enerate' → logprob: -11.250134468078613
    4. 't' → logprob: -12.500134468078613
    5. 'reate' → logprob: -12.875134468078613
    6. 'enerator' → logprob: -12.875134468078613
    7. 'c' → logprob: -13.125134468078613
    8. 'cdn' → logprob: -13.375134468078613
    9. '(g' → logprob: -13.500134468078613
    10. 'en' → logprob: -13.625134468078613

Token 23: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8549649715423584
    2. '(a' → logprob: -1.4799649715423584
    3. '(k' → logprob: -1.6049649715423584
    4. '(n' → logprob: -1.9799649715423584
    5. '(x' → logprob: -5.2299652099609375
    6. '(g' → logprob: -7.2299652099609375
    7. '(i' → logprob: -7.3549652099609375
    8. '(l' → logprob: -8.104965209960938
    9. '(_' → logprob: -8.229965209960938
    10. '(s' → logprob: -8.854965209960938

Token 24: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001458927639760077
    2. ',b' → logprob: -6.626459121704102
    3. ' ,' → logprob: -9.751459121704102
    4. ',a' → logprob: -10.126459121704102
    5. ',g' → logprob: -11.751459121704102
    6. ')' → logprob: -12.126459121704102
    7. ',n' → logprob: -12.626459121704102
    8. 'b' → logprob: -12.876459121704102
    9. 'a' → logprob: -13.001459121704102
    10. ',c' → logprob: -13.376459121704102

Token 25: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.03804677724838257
    2. ' b' → logprob: -3.2880468368530273
    3. ' ' → logprob: -13.038046836853027
    4. ',b' → logprob: -13.788046836853027
    5. 'a' → logprob: -14.413046836853027
    6. ',' → logprob: -14.538046836853027
    7. ')b' → logprob: -15.413046836853027
    8. 'k' → logprob: -15.913046836853027
    9. ')' → logprob: -15.913046836853027
    10. '```' → logprob: -16.53804588317871

Token 26: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00031091354321688414
    2. ',c' → logprob: -8.500310897827148
    3. ' ,' → logprob: -9.625310897827148
    4. '):' → logprob: -10.750310897827148
    5. ')' → logprob: -11.375310897827148
    6. 'c' → logprob: -12.375310897827148
    7. 's' → logprob: -13.625310897827148
    8. ' c' → logprob: -13.875310897827148
    9. 'a' → logprob: -15.375310897827148
    10. ',a' → logprob: -15.750310897827148

Token 27: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.20143312215805054
    2. ' c' → logprob: -1.7014331817626953
    3. ' ' → logprob: -12.076433181762695
    4. '   ' → logprob: -12.201433181762695
    5. ')c' → logprob: -13.076433181762695
    6. ')' → logprob: -13.701433181762695
    7. '	c' → logprob: -14.013933181762695
    8. '  ' → logprob: -14.326433181762695
    9. '    ' → logprob: -14.576433181762695
    10. '0' → logprob: -14.638933181762695

Token 28: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0059457444585859776
    2. ')' → logprob: -5.130945682525635
    3. '):
' → logprob: -11.880946159362793
    4. ' ):' → logprob: -12.255946159362793
    5. ':' → logprob: -13.130946159362793
    6. ',' → logprob: -13.380946159362793
    7. ''):' → logprob: -15.005946159362793
    8. '   ' → logprob: -15.380946159362793
    9. '),' → logprob: -15.505946159362793
    10. '):
' → logprob: -15.755946159362793

Token 29: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0320497564971447
    2. ':' → logprob: -4.282049655914307
    3. '):' → logprob: -5.032049655914307
    4. ' ' → logprob: -5.657049655914307
    5. ' return' → logprob: -5.657049655914307
    6. ')' → logprob: -6.657049655914307
    7. ':return' → logprob: -7.532049655914307
    8. ' :' → logprob: -7.657049655914307
    9. 'return' → logprob: -7.782049655914307
    10. '  ' → logprob: -8.157050132751465

Token 30: ' return' (ID: 622)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4619353413581848
    2. '   ' → logprob: -1.58693528175354
    3. ' return' → logprob: -2.58693528175354
    4. 'if' → logprob: -2.83693528175354
    5. 'return' (adapté à ' return') → logprob: -3.83693528175354
    6. 'g' → logprob: -5.086935520172119
    7. ' gcd' → logprob: -7.086935520172119
    8. ' ' → logprob: -7.461935520172119
    9. ' i' → logprob: -7.461935520172119
    10. '    ' → logprob: -7.836935520172119

Token 31: ' gcd' (ID: 106918)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.38801538944244385
    2. ' gcd' → logprob: -1.1380153894424438
    3. ' ' → logprob: -8.138015747070312
    4. ' g' → logprob: -8.263015747070312
    5. ' max' → logprob: -8.263015747070312
    6. '   ' → logprob: -9.013015747070312
    7. 'max' → logprob: -9.263015747070312
    8. '(g' → logprob: -10.013015747070312
    9. '	g' → logprob: -11.013015747070312
    10. '  ' → logprob: -11.388015747070312

Token 32: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08028803765773773
    2. '(a' → logprob: -2.5802879333496094
    3. '((' → logprob: -6.955287933349609
    4. '(g' → logprob: -7.830287933349609
    5. '(
' → logprob: -10.58028793334961
    6. '(k' → logprob: -12.45528793334961
    7. '(

' → logprob: -12.95528793334961
    8. '(abs' → logprob: -13.20528793334961
    9. '(max' → logprob: -13.58028793334961
    10. '(b' → logprob: -13.58028793334961

Token 33: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010955502279102802
    2. 'g' → logprob: -5.010955333709717
    3. ',g' → logprob: -5.885955333709717
    4. 'b' → logprob: -7.135955333709717
    5. ' ,' → logprob: -8.510955810546875
    6. ',b' → logprob: -8.885955810546875
    7. 'c' → logprob: -9.010955810546875
    8. ')' → logprob: -10.135955810546875
    9. ',
' → logprob: -10.385955810546875
    10. '(' → logprob: -10.385955810546875

Token 34: ' gcd' (ID: 106918)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.07829979062080383
    2. 'g' → logprob: -3.0782997608184814
    3. ' gcd' → logprob: -4.3282999992370605
    4. ' c' → logprob: -4.7032999992370605
    5. 'b' → logprob: -5.0782999992370605
    6. ' ' → logprob: -8.328299522399902
    7. ')c' → logprob: -8.953299522399902
    8. ')' → logprob: -8.953299522399902
    9. ' b' → logprob: -9.578299522399902
    10. '   ' → logprob: -9.953299522399902

Token 35: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.0007710324716754258
    2. 'b' → logprob: -7.2507710456848145
    3. '(' → logprob: -9.750770568847656
    4. ' (' → logprob: -13.625770568847656
    5. ' b' → logprob: -14.375770568847656
    6. '(c' → logprob: -14.875770568847656
    7. ')' → logprob: -15.125770568847656
    8. ')b' → logprob: -15.125770568847656
    9. '(
' → logprob: -16.500770568847656
    10. ',b' → logprob: -17.375770568847656

Token 36: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005113272462040186
    2. 'c' → logprob: -5.505113124847412
    3. ',c' → logprob: -7.005113124847412
    4. ' ,' → logprob: -9.25511360168457
    5. '(c' → logprob: -10.63011360168457
    6. '(' → logprob: -13.00511360168457
    7. ')c' → logprob: -13.25511360168457
    8. ')' → logprob: -14.00511360168457
    9. ' c' → logprob: -14.50511360168457
    10. '```' → logprob: -14.75511360168457

Token 37: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00761869503185153
    2. ' c' → logprob: -4.8826189041137695
    3. ')c' → logprob: -11.38261890411377
    4. ')' → logprob: -14.50761890411377
    5. '   ' → logprob: -15.38261890411377
    6. '%c' → logprob: -16.007617950439453
    7. '	c' → logprob: -16.257617950439453
    8. ' ' → logprob: -16.382617950439453
    9. '(c' → logprob: -16.757617950439453
    10. '  ' → logprob: -17.257617950439453

Token 38: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.005953329615294933
    2. ')' → logprob: -5.130953311920166
    3. ')))' → logprob: -11.005953788757324
    4. '))
' → logprob: -12.380953788757324
    5. ' ))' → logprob: -12.880953788757324
    6. '),' → logprob: -15.005953788757324
    7. ' ' → logprob: -15.505953788757324
    8. '()))' → logprob: -15.505953788757324
    9. ''))' → logprob: -15.880953788757324
    10. ')
' → logprob: -16.130952835083008

Token 39: '@' (ID: 31)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2628723978996277
    2. '(' → logprob: -2.1378724575042725
    3. '<|end|>' → logprob: -3.7628724575042725
    4. '*' → logprob: -3.8878724575042725
    5. '#' → logprob: -4.262872219085693
    6. 'def' → logprob: -4.387872219085693
    7. '+' → logprob: -4.512872219085693
    8. ':' → logprob: -5.387872219085693
    9. '(
' → logprob: -5.387872219085693
    10. '()' → logprob: -5.512872219085693

Token 40: 'cache' (ID: 18949)
  Prédit: 'cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cache' → logprob: -0.0003146088565699756
    2. 'trip' → logprob: -8.125314712524414
    3. 'l' → logprob: -11.750314712524414
    4. '@' → logprob: -12.375314712524414
    5. 'tuple' → logprob: -13.375314712524414
    6. 'dat' → logprob: -13.500314712524414
    7. ' cache' → logprob: -13.875314712524414
    8. 'staticmethod' → logprob: -14.250314712524414
    9. 'cached' → logprob: -15.250314712524414
    10. 'range' → logprob: -15.375314712524414

Token 41: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07033152133226395
    2. '
' → logprob: -2.695331573486328
    3. '(' → logprob: -8.320331573486328
    4. ' def' → logprob: -9.820331573486328
    5. '\' → logprob: -10.320331573486328
    6. '(
' → logprob: -10.945331573486328
    7. '(def' → logprob: -11.320331573486328
    8. '(n' → logprob: -11.695331573486328
    9. '
' → logprob: -11.820331573486328
    10. 'd' → logprob: -12.695331573486328

Token 42: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00033677343162707984
    2. '
' → logprob: -8.000336647033691
    3. ' def' → logprob: -13.875336647033691
    4. '(' → logprob: -16.125337600708008
    5. '(def' → logprob: -16.875337600708008
    6. '
' → logprob: -17.250337600708008
    7. '0' → logprob: -17.500337600708008
    8. '\' → logprob: -18.125337600708008
    9. 'div' → logprob: -18.125337600708008
    10. 'd' → logprob: -18.375337600708008

Token 43: ' pair' (ID: 10610)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.4305981993675232
    2. ' count' → logprob: -1.930598258972168
    3. 'dp' → logprob: -2.805598258972168
    4. 'dfs' → logprob: -3.680598258972168
    5. 'trip' → logprob: -4.055598258972168
    6. 'ways' → logprob: -4.055598258972168
    7. 'solve' → logprob: -4.180598258972168
    8. 'f' → logprob: -4.430598258972168
    9. 'max' → logprob: -4.555598258972168
    10. 'find' → logprob: -4.930598258972168

Token 44: '_g' (ID: 5439)
  Prédit: '_g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_g' → logprob: -0.0003685861302074045
    2. '_div' → logprob: -9.250368118286133
    3. '_sum' → logprob: -9.500368118286133
    4. '(a' → logprob: -10.125368118286133
    5. 'g' → logprob: -10.625368118286133
    6. '_count' → logprob: -10.875368118286133
    7. '(_' → logprob: -10.875368118286133
    8. 's' → logprob: -11.125368118286133
    9. 'wise' → logprob: -11.500368118286133
    10. '_s' → logprob: -11.625368118286133

Token 45: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -1.4259644558478612e-05
    2. 'cdn' → logprob: -12.250014305114746
    3. 'c' → logprob: -12.875014305114746
    4. 'g' → logprob: -13.000014305114746
    5. 'cdf' → logprob: -13.250014305114746
    6. '_cd' → logprob: -14.250014305114746
    7. ' gcd' → logprob: -14.250014305114746
    8. 'CD' → logprob: -14.625014305114746
    9. '```' → logprob: -15.375014305114746
    10. 'cm' → logprob: -15.500014305114746

Token 46: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0013321444857865572
    2. '(' → logprob: -6.6263322830200195
    3. '(x' → logprob: -13.00133228302002
    4. ' (' → logprob: -13.37633228302002
    5. '()' → logprob: -14.37633228302002
    6. '(b' → logprob: -14.37633228302002
    7. '(p' → logprob: -14.87633228302002
    8. '(i' → logprob: -15.25133228302002
    9. '(k' → logprob: -15.50133228302002
    10. '(n' → logprob: -16.376331329345703

Token 47: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011163605377078056
    2. ',b' → logprob: -4.511163711547852
    3. 'b' → logprob: -9.761163711547852
    4. ' ,' → logprob: -9.886163711547852
    5. ')' → logprob: -12.136163711547852
    6. 'a' → logprob: -14.636163711547852
    7. '   ' → logprob: -15.386163711547852
    8. ' ' → logprob: -15.636163711547852
    9. ',a' → logprob: -15.636163711547852
    10. '),' → logprob: -15.886163711547852

Token 48: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.006725317798554897
    2. ' b' → logprob: -5.006725311279297
    3. ' ' → logprob: -12.506725311279297
    4. 'a' → logprob: -12.881725311279297
    5. '<|end|>' → logprob: -13.506725311279297
    6. 'c' → logprob: -14.131725311279297
    7. ')' → logprob: -14.381725311279297
    8. ')b' → logprob: -14.506725311279297
    9. '   ' → logprob: -15.506725311279297
    10. '  ' → logprob: -16.381725311279297

Token 49: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00026217024424113333
    2. ')' → logprob: -8.500262260437012
    3. '):
' → logprob: -9.875262260437012
    4. ' ):' → logprob: -12.250262260437012
    5. ':' → logprob: -13.375262260437012
    6. '   ' → logprob: -15.125262260437012
    7. '):
' → logprob: -15.625262260437012
    8. ''):' → logprob: -16.000261306762695
    9. '():' → logprob: -16.375261306762695
    10. ')):' → logprob: -16.875261306762695

Token 50: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09097769856452942
    2. 'return' → logprob: -2.840977668762207
    3. ' return' → logprob: -3.590977668762207
    4. 'g' → logprob: -6.965977668762207
    5. ' gcd' → logprob: -9.965977668762207
    6. ' ' → logprob: -11.090977668762207
    7. '	return' → logprob: -11.965977668762207
    8. '  ' → logprob: -13.090977668762207
    9. ' g' → logprob: -13.340977668762207
    10. '    ' → logprob: -13.465977668762207

Token 51: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.10142969340085983
    2. ' return' → logprob: -2.4764297008514404
    3. 'g' → logprob: -4.976429462432861
    4. '   ' → logprob: -5.226429462432861
    5. ' gcd' → logprob: -9.22642993927002
    6. 'if' → logprob: -10.97642993927002
    7. ' ' → logprob: -11.85142993927002
    8. '```' → logprob: -12.60142993927002
    9. ' g' → logprob: -12.72642993927002
    10. ' if' → logprob: -12.97642993927002

Token 52: ' gcd' (ID: 106918)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.008620485663414001
    2. ' gcd' → logprob: -4.758620262145996
    3. ' g' → logprob: -12.883620262145996
    4. ' ' → logprob: -13.383620262145996
    5. '   ' → logprob: -14.008620262145996
    6. '	g' → logprob: -14.383620262145996
    7. '  ' → logprob: -16.008621215820312
    8. 'a' → logprob: -16.383621215820312
    9. '_g' → logprob: -16.508621215820312
    10. '(g' → logprob: -17.133621215820312

Token 53: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.5759680867195129
    2. '(' → logprob: -0.8259680867195129
    3. '(b' → logprob: -10.825967788696289
    4. '(ab' → logprob: -12.950967788696289
    5. '(
' → logprob: -13.450967788696289
    6. '((' → logprob: -13.825967788696289
    7. '(k' → logprob: -14.075967788696289
    8. ' (' → logprob: -14.325967788696289
    9. '(

' → logprob: -15.200967788696289
    10. '(abs' → logprob: -15.200967788696289

Token 54: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004001641063950956
    2. 'b' → logprob: -8.37540054321289
    3. ',b' → logprob: -9.25040054321289
    4. ' ,' → logprob: -9.87540054321289
    5. ')' → logprob: -10.87540054321289
    6. ' b' → logprob: -13.25040054321289
    7. '2' → logprob: -14.50040054321289
    8. ',
' → logprob: -14.87540054321289
    9. 'a' → logprob: -15.50040054321289
    10. '),' → logprob: -15.87540054321289

Token 55: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.04859213903546333
    2. ' b' → logprob: -3.0485920906066895
    3. ' ' → logprob: -12.548592567443848
    4. '   ' → logprob: -14.673592567443848
    5. ')b' → logprob: -14.673592567443848
    6. '	b' → logprob: -16.04859161376953
    7. ')' → logprob: -16.42359161376953
    8. '  ' → logprob: -16.67359161376953
    9. '    ' → logprob: -16.92359161376953
    10. ' ' → logprob: -17.67359161376953

Token 56: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.531315314830863e-06
    2. '))' → logprob: -12.750003814697266
    3. ')
' → logprob: -14.375003814697266
    4. ' )' → logprob: -17.750003814697266
    5. ')))' → logprob: -17.875003814697266
    6. '}' → logprob: -18.500003814697266
    7. ')}' → logprob: -18.875003814697266
    8. '<|end|>' → logprob: -19.000003814697266
    9. ')return' → logprob: -19.125003814697266
    10. '),' → logprob: -19.250003814697266

Token 57: '#' (ID: 2)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.1709107160568237
    2. 'max' → logprob: -1.6709107160568237
    3. 'count' → logprob: -2.1709108352661133
    4. 'def' → logprob: -2.4209108352661133
    5. 'for' → logprob: -2.5459108352661133
    6. 'ans' → logprob: -3.0459108352661133
    7. 'trip' → logprob: -3.0459108352661133
    8. 'answer' → logprob: -3.2959108352661133
    9. 'total' → logprob: -3.9209108352661133
    10. 'res' → logprob: -4.170910835266113

Token 58: ' Use' (ID: 7649)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.9798548817634583
    2. 'count' → logprob: -1.3548548221588135
    3. 'res' → logprob: -2.6048548221588135
    4. 'ans' → logprob: -2.6048548221588135
    5. 'total' → logprob: -2.6048548221588135
    6. 'answer' → logprob: -2.8548548221588135
    7. 'trip' → logprob: -3.3548548221588135
    8. 'max' → logprob: -3.6048548221588135
    9. 'div' → logprob: -5.229855060577393
    10. 'cnt' → logprob: -5.979855060577393

Token 59: ' generator' (ID: 23989)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5237902402877808
    2. 'for' → logprob: -1.8987902402877808
    3. '_' → logprob: -2.1487903594970703
    4. ' trip' → logprob: -3.1487903594970703
    5. 'trip' → logprob: -3.7737903594970703
    6. ' for' → logprob: -3.8987903594970703
    7. '_trip' → logprob: -4.52379035949707
    8. ' a' → logprob: -5.02379035949707
    9. ' the' → logprob: -5.27379035949707
    10. ')' → logprob: -5.39879035949707

Token 60: ' expressions' (ID: 43578)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0028023868799209595
    2. '(' → logprob: -7.37780237197876
    3. ':' → logprob: -7.50280237197876
    4. '()' → logprob: -8.002802848815918
    5. '(
' → logprob: -8.252802848815918
    6. '\' → logprob: -8.627802848815918
    7. 'for' → logprob: -8.752802848815918
    8. ' def' → logprob: -9.002802848815918
    9. 's' → logprob: -9.127802848815918
    10. '```' → logprob: -9.377802848815918

Token 61: ' and' (ID: 326)
  Prédit: 'trip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trip' → logprob: -0.5895977020263672
    2. 'result' → logprob: -2.089597702026367
    3. 'valid' → logprob: -3.214597702026367
    4. 'sum' → logprob: -3.589597702026367
    5. 'max' → logprob: -3.714597702026367
    6. 'count' → logprob: -3.714597702026367
    7. 'a' → logprob: -3.839597702026367
    8. 'total' → logprob: -3.964597702026367
    9. 'answer' → logprob: -3.964597702026367
    10. 'res' → logprob: -3.964597702026367

Token 62: ' symmetry' (ID: 90882)
  Prédit: ' sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.3614402115345001
    2. 'sum' → logprob: -1.2364401817321777
    3. ' itertools' → logprob: -6.236440181732178
    4. ' combinations' → logprob: -6.736440181732178
    5. ' list' → logprob: -6.861440181732178
    6. ')' → logprob: -6.986440181732178
    7. ' next' → logprob: -7.111440181732178
    8. ' built' → logprob: -7.236440181732178
    9. ' continue' → logprob: -7.361440181732178
    10. ' a' → logprob: -7.361440181732178

Token 63: ' exploitation' (ID: 77980)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.8835657238960266
    2. 'result' → logprob: -1.3835656642913818
    3. 'answer' → logprob: -2.383565664291382
    4. 'def' → logprob: -3.258565664291382
    5. 'ans' → logprob: -3.633565664291382
    6. 'total' → logprob: -3.633565664291382
    7. 'n' → logprob: -3.633565664291382
    8. 's' → logprob: -3.758565664291382
    9. 'max' → logprob: -4.508565902709961
    10. 'res' → logprob: -4.508565902709961

Token 64: '
' (ID: 198)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.8238884806632996
    2. 'result' → logprob: -1.1988885402679443
    3. 'total' → logprob: -2.8238885402679443
    4. 'def' → logprob: -3.1988885402679443
    5. 'max' → logprob: -3.3238885402679443
    6. 'answer' → logprob: -3.6988885402679443
    7. 'n' → logprob: -3.8238885402679443
    8. 's' → logprob: -4.073888301849365
    9. 'sum' → logprob: -4.323888301849365
    10. 'trip' → logprob: -4.823888301849365

Token 65: 'ans' (ID: 616)
  Prédit: 'trip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trip' → logprob: -1.0956683158874512
    2. 'result' → logprob: -1.2206683158874512
    3. 'def' → logprob: -2.595668315887451
    4. 'for' → logprob: -2.845668315887451
    5. 'res' → logprob: -3.095668315887451
    6. 'valid' → logprob: -3.470668315887451
    7. 'max' → logprob: -3.470668315887451
    8. 'ans' → logprob: -3.845668315887451
    9. 'answer' → logprob: -3.845668315887451
    10. 'count' → logprob: -4.220668315887451

Token 66: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.033672209829092026
    2. '=' → logprob: -3.4086720943450928
    3. '_' → logprob: -11.283672332763672
    4. ' ' → logprob: -12.658672332763672
    5. ' =
' → logprob: -12.783672332763672
    6. 's' → logprob: -12.908672332763672
    7. ')' → logprob: -13.908672332763672
    8. ' +=' → logprob: -14.533672332763672
    9. ',' → logprob: -14.658672332763672
    10. ' =
' → logprob: -14.908672332763672

Token 67: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.47715893387794495
    2. ' sum' → logprob: -1.7271589040756226
    3. 'max' → logprob: -2.102159023284912
    4. ' max' → logprob: -2.602159023284912
    5. '0' → logprob: -6.102159023284912
    6. '(sum' → logprob: -6.352159023284912
    7. '(max' → logprob: -7.227159023284912
    8. ' ' → logprob: -8.102158546447754
    9. '(' → logprob: -9.227158546447754
    10. '1' → logprob: -9.602158546447754

Token 68: '(
' (ID: 1607)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.27617019414901733
    2. '(tr' → logprob: -1.776170253753662
    3. '(pair' → logprob: -2.776170253753662
    4. '((' → logprob: -4.901170253753662
    5. '(
' → logprob: -6.276170253753662
    6. '(max' → logprob: -8.776169776916504
    7. '1' → logprob: -9.776169776916504
    8. 'trip' → logprob: -10.151169776916504
    9. '(

' → logprob: -10.651169776916504
    10. '(g' → logprob: -10.776169776916504

Token 69: '   ' (ID: 271)
  Prédit: 'trip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trip' → logprob: -0.634103536605835
    2. '1' → logprob: -1.134103536605835
    3. 'pair' → logprob: -2.009103536605835
    4. '(' → logprob: -5.134103775024414
    5. 'max' → logprob: -6.509103775024414
    6. '2' → logprob: -6.884103775024414
    7. '3' → logprob: -6.884103775024414
    8. '   ' → logprob: -7.134103775024414
    9. '(pair' → logprob: -7.134103775024414
    10. 'a' → logprob: -7.759103775024414

Token 70: ' trip' (ID: 8831)
  Prédit: 'trip'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trip' (adapté à ' trip') → logprob: -0.3263276219367981
    2. '1' → logprob: -1.5763275623321533
    3. 'pair' → logprob: -2.7013275623321533
    4. '(' → logprob: -5.951327800750732
    5. '   ' → logprob: -7.451327800750732
    6. '(pair' → logprob: -7.701327800750732
    7. 'max' → logprob: -8.826327323913574
    8. '3' → logprob: -8.826327323913574
    9. 'g' → logprob: -8.951327323913574
    10. ' trip' → logprob: -9.201327323913574

Token 71: 'let' (ID: 1347)
  Prédit: 'let'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'let' → logprob: -2.45848218582978e-06
    2. 'et' → logprob: -13.25000286102295
    3. 'le' → logprob: -14.87500286102295
    4. 'l' → logprob: -16.000001907348633
    5. 'лет' → logprob: -16.375001907348633
    6. 'plet' → logprob: -16.625001907348633
    7. 't' → logprob: -17.750001907348633
    8. '   ' → logprob: -17.875001907348633
    9. '_g' → logprob: -18.250001907348633
    10. 'Let' → logprob: -18.500001907348633

Token 72: '_g' (ID: 5439)
  Prédit: '_g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_g' → logprob: -1.1472419600977446e-06
    2. ' _' → logprob: -14.750000953674316
    3. 'g' → logprob: -15.625000953674316
    4. '_' → logprob: -16.125001907348633
    5. '```' → logprob: -16.125001907348633
    6. '"_' → logprob: -16.625001907348633
    7. '_t' → logprob: -17.125001907348633
    8. '\' → logprob: -17.125001907348633
    9. ''_' → logprob: -17.625001907348633
    10. '_gc' → logprob: -17.937501907348633

Token 73: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -9.253090865968261e-06
    2. 'c' → logprob: -12.250009536743164
    3. 'CD' → logprob: -13.625009536743164
    4. 'g' → logprob: -13.875009536743164
    5. '_cd' → logprob: -14.000009536743164
    6. 'cdn' → logprob: -14.625009536743164
    7. 'd' → logprob: -14.875009536743164
    8. 'cm' → logprob: -15.625009536743164
    9. '(a' → logprob: -16.500009536743164
    10. 'a' → logprob: -16.500009536743164

Token 74: '(a' (ID: 6271)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.5451126098632812
    2. '(a' → logprob: -0.9201126098632812
    3. '(x' → logprob: -4.045112609863281
    4. '(c' → logprob: -6.170112609863281
    5. '(k' → logprob: -6.670112609863281
    6. '(d' → logprob: -8.545112609863281
    7. '(' → logprob: -8.670112609863281
    8. '(w' → logprob: -8.670112609863281
    9. '(u' → logprob: -10.045112609863281
    10. '(n' → logprob: -10.045112609863281

Token 75: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015424765879288316
    2. ' ,' → logprob: -6.876542568206787
    3. ',b' → logprob: -8.376542091369629
    4. '   ' → logprob: -9.001542091369629
    5. 'a' → logprob: -10.251542091369629
    6. ',a' → logprob: -10.501542091369629
    7. '+' → logprob: -10.626542091369629
    8. ' ' → logprob: -10.876542091369629
    9. ' +' → logprob: -11.126542091369629
    10. '-' → logprob: -11.876542091369629

Token 76: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00018196819291915745
    2. ' b' → logprob: -9.125182151794434
    3. 'a' → logprob: -9.750182151794434
    4. 'c' → logprob: -12.500182151794434
    5. '   ' → logprob: -12.500182151794434
    6. 'k' → logprob: -13.250182151794434
    7. ' ' → logprob: -13.375182151794434
    8. '2' → logprob: -13.875182151794434
    9. ')' → logprob: -14.500182151794434
    10. '1' → logprob: -14.875182151794434

Token 77: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0021045792382210493
    2. ',c' → logprob: -6.377104759216309
    3. ' ,' → logprob: -8.502104759216309
    4. '   ' → logprob: -9.252104759216309
    5. 'c' → logprob: -9.377104759216309
    6. '```' → logprob: -12.627104759216309
    7. ')' → logprob: -12.627104759216309
    8. '  ' → logprob: -13.127104759216309
    9. 's' → logprob: -13.502104759216309
    10. 'a' → logprob: -13.502104759216309

Token 78: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.014300551265478134
    2. 'k' → logprob: -4.514300346374512
    3. 'a' → logprob: -6.639300346374512
    4. '1' → logprob: -7.264300346374512
    5. 'b' → logprob: -7.514300346374512
    6. '   ' → logprob: -8.514300346374512
    7. '100' → logprob: -9.014300346374512
    8. ' c' → logprob: -9.514300346374512
    9. ')' → logprob: -9.764300346374512
    10. 'd' → logprob: -9.889300346374512

Token 79: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006590616540051997
    2. ')
' → logprob: -7.750658988952637
    3. ' )' → logprob: -9.250658988952637
    4. 'for' → logprob: -10.000658988952637
    5. '   ' → logprob: -10.250658988952637
    6. '```' → logprob: -11.375658988952637
    7. ')
' → logprob: -11.625658988952637
    8. ' for' → logprob: -11.750658988952637
    9. ' ' → logprob: -11.875658988952637
    10. '  ' → logprob: -12.875658988952637

Token 80: ' *' (ID: 425)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.01700768619775772
    2. 'for' → logprob: -4.142007827758789
    3. '   ' → logprob: -7.267007827758789
    4. ' ' → logprob: -9.142007827758789
    5. '    ' → logprob: -9.392007827758789
    6. ' *' → logprob: -10.517007827758789
    7. '*' → logprob: -10.642007827758789
    8. '  ' → logprob: -10.892007827758789
    9. '```' → logprob: -12.142007827758789
    10. '	for' → logprob: -12.642007827758789

Token 81: ' ' (ID: 220)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.8794203996658325
    2. '(a' → logprob: -1.7544203996658325
    3. ' pair' → logprob: -2.754420280456543
    4. 'pair' → logprob: -2.754420280456543
    5. '1' → logprob: -3.004420280456543
    6. '(' → logprob: -3.504420280456543
    7. ' ' → logprob: -3.629420280456543
    8. ' c' → logprob: -3.629420280456543
    9. '(c' → logprob: -3.754420280456543
    10. 'c' → logprob: -3.879420280456543

Token 82: '6' (ID: 21)
  Prédit: 'pair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pair' → logprob: -1.2152916193008423
    2. '(' → logprob: -1.7152916193008423
    3. '1' → logprob: -1.8402916193008423
    4. '2' → logprob: -2.4652915000915527
    5. '(a' → logprob: -2.9652915000915527
    6. 'c' → logprob: -3.3402915000915527
    7. '(pair' → logprob: -3.3402915000915527
    8. '3' → logprob: -3.3402915000915527
    9. 'k' → logprob: -3.9652915000915527
    10. 'trip' → logprob: -4.090291500091553

Token 83: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.11393057554960251
    2. 'for' → logprob: -2.2389304637908936
    3. '   ' → logprob: -6.863930702209473
    4. ' ' → logprob: -10.613930702209473
    5. '    ' → logprob: -11.363930702209473
    6. ')' → logprob: -11.863930702209473
    7. '  ' → logprob: -12.113930702209473
    8. '(' → logprob: -12.488930702209473
    9. ' (' → logprob: -12.613930702209473
    10. 'a' → logprob: -13.238930702209473

Token 84: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20239323377609253
    2. ' for' → logprob: -1.7023932933807373
    3. '   ' → logprob: -6.952393054962158
    4. ' ' → logprob: -11.827393531799316
    5. '<|end|>' → logprob: -12.327393531799316
    6. '    ' → logprob: -12.577393531799316
    7. '	for' → logprob: -12.702393531799316
    8. '  ' → logprob: -12.702393531799316
    9. ')' → logprob: -13.827393531799316
    10. '```' → logprob: -14.827393531799316

Token 85: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.20161058008670807
    2. 'for' (adapté à ' for') → logprob: -1.7016105651855469
    3. '   ' → logprob: -8.701610565185547
    4. ' ' → logprob: -10.576610565185547
    5. '    ' → logprob: -12.576610565185547
    6. '  ' → logprob: -13.826610565185547
    7. ')' → logprob: -15.326610565185547
    8. '```' → logprob: -15.576610565185547
    9. '	for' → logprob: -15.576610565185547
    10. 'a' → logprob: -15.826610565185547

Token 86: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.07153070718050003
    2. 'a' → logprob: -2.821530818939209
    3. ' c' → logprob: -4.696530818939209
    4. 'c' → logprob: -8.57153034210205
    5. ' b' → logprob: -9.57153034210205
    6. ' ' → logprob: -9.69653034210205
    7. '	a' → logprob: -10.44653034210205
    8. ' ' → logprob: -11.19653034210205
    9. '_a' → logprob: -12.07153034210205
    10. '  ' → logprob: -12.32153034210205

Token 87: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.062038715928792953
    2. 'in' → logprob: -2.8120386600494385
    3. ' ' → logprob: -10.06203842163086
    4. 'a' → logprob: -11.93703842163086
    5. '  ' → logprob: -11.93703842163086
    6. '<|end|>' → logprob: -13.06203842163086
    7. 'n' → logprob: -13.18703842163086
    8. ',' → logprob: -13.31203842163086
    9. '   ' → logprob: -13.56203842163086
    10. 'range' → logprob: -13.93703842163086

Token 88: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.04858794063329697
    2. 'range' → logprob: -3.0485880374908447
    3. '	range' → logprob: -14.798587799072266
    4. ' ' → logprob: -16.798587799072266
    5. '(range' → logprob: -17.048587799072266
    6. '   ' → logprob: -17.423587799072266
    7. 'r' → logprob: -17.673587799072266
    8. '.range' → logprob: -18.298587799072266
    9. '_range' → logprob: -18.423587799072266
    10. '1' → logprob: -18.673587799072266

Token 89: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -5.319370302458992e-06
    2. '1' → logprob: -12.250005722045898
    3. ' (' → logprob: -15.625005722045898
    4. '(
' → logprob: -15.625005722045898
    5. '\(' → logprob: -17.6250057220459
    6. '(k' → logprob: -18.1250057220459
    7. ')' → logprob: -18.5000057220459
    8. '```' → logprob: -18.7500057220459
    9. 'a' → logprob: -18.8750057220459
    10. ')(' → logprob: -19.0000057220459

Token 90: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00034940900513902307
    2. ' ' → logprob: -8.125349044799805
    3. 'k' → logprob: -10.375349044799805
    4. '(' → logprob: -10.875349044799805
    5. '   ' → logprob: -13.125349044799805
    6. ' k' → logprob: -14.250349044799805
    7. '  ' → logprob: -15.875349044799805
    8. '2' → logprob: -16.375349044799805
    9. ')' → logprob: -16.750349044799805
    10. '    ' → logprob: -16.875349044799805

Token 91: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002908910100813955
    2. ',k' → logprob: -8.500290870666504
    3. ' ,' → logprob: -9.375290870666504
    4. 'k' → logprob: -13.125290870666504
    5. '(k' → logprob: -15.125290870666504
    6. ' k' → logprob: -16.75029182434082
    7. 'a' → logprob: -16.75029182434082
    8. '```' → logprob: -17.12529182434082
    9. ' ' → logprob: -17.37529182434082
    10. '(' → logprob: -18.00029182434082

Token 92: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0002614550176076591
    2. ' k' → logprob: -8.250261306762695
    3. '   ' → logprob: -16.375261306762695
    4. '{k' → logprob: -17.250261306762695
    5. '	k' → logprob: -17.750261306762695
    6. '```' → logprob: -17.875261306762695
    7. ' ' → logprob: -18.500261306762695
    8. 'kx' → logprob: -18.500261306762695
    9. '  ' → logprob: -18.875261306762695
    10. '"k' → logprob: -19.750261306762695

Token 93: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3868820369243622
    2. ' +' → logprob: -1.1368820667266846
    3. ')' → logprob: -12.386881828308105
    4. ' ' → logprob: -12.511881828308105
    5. '+)' → logprob: -13.386881828308105
    6. '```' → logprob: -14.636881828308105
    7. '＋' → logprob: -15.636881828308105
    8. ' ' → logprob: -15.761881828308105
    9. '+
' → logprob: -15.886881828308105
    10. '   ' → logprob: -15.886881828308105

Token 94: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.36574100604048e-06
    2. ' ' → logprob: -12.375004768371582
    3. '```' → logprob: -16.625003814697266
    4. '2' → logprob: -17.000003814697266
    5. '   ' → logprob: -17.125003814697266
    6. '

' → logprob: -17.937503814697266
    7. '  ' → logprob: -18.187503814697266
    8. '۱' → logprob: -18.750003814697266
    9. '11' → logprob: -19.125003814697266
    10. ')' → logprob: -19.125003814697266

Token 95: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0028502829372882843
    2. ')
' → logprob: -5.87785005569458
    3. ' )' → logprob: -11.002850532531738
    4. '   ' → logprob: -11.002850532531738
    5. ' for' → logprob: -12.127850532531738
    6. 'for' → logprob: -13.002850532531738
    7. ' ' → logprob: -13.627850532531738
    8. '):
' → logprob: -14.252850532531738
    9. ' )
' → logprob: -14.377850532531738
    10. ')
' → logprob: -14.627850532531738

Token 96: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7590500712394714
    2. ' for' → logprob: -0.8840500712394714
    3. 'for' → logprob: -2.134050130844116
    4. '    ' → logprob: -8.509050369262695
    5. '	for' → logprob: -9.509050369262695
    6. ')' → logprob: -9.759050369262695
    7. '  ' → logprob: -10.634050369262695
    8. '    
' → logprob: -10.759050369262695
    9. '```' → logprob: -11.134050369262695
    10. ' ' → logprob: -11.259050369262695

Token 97: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0049925134517252445
    2. ' for' → logprob: -5.504992485046387
    3. '   ' → logprob: -7.004992485046387
    4. ')' → logprob: -12.129992485046387
    5. '       ' → logprob: -15.254992485046387
    6. ' ' → logprob: -15.254992485046387
    7. '
' → logprob: -15.754992485046387
    8. '    ' → logprob: -16.254993438720703
    9. '	for' → logprob: -16.254993438720703
    10. '```' → logprob: -16.504993438720703

Token 98: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.2254270762205124
    2. ' b' → logprob: -1.6004270315170288
    3. ' ' → logprob: -11.85042667388916
    4. '   ' → logprob: -12.35042667388916
    5. '    ' → logprob: -13.47542667388916
    6. '	b' → logprob: -14.10042667388916
    7. '  ' → logprob: -14.85042667388916
    8. ' ' → logprob: -15.85042667388916
    9. 'c' → logprob: -16.225427627563477
    10. '>b' → logprob: -16.850427627563477

Token 99: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06206246465444565
    2. 'in' → logprob: -2.8120625019073486
    3. '   ' → logprob: -10.06206226348877
    4. ' ' → logprob: -10.81206226348877
    5. 'a' → logprob: -11.43706226348877
    6. '  ' → logprob: -12.68706226348877
    7. '```' → logprob: -13.18706226348877
    8. '1' → logprob: -13.31206226348877
    9. ')' → logprob: -13.43706226348877
    10. '=' → logprob: -13.43706226348877

Token 100: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.47408327460289
    2. ' range' → logprob: -0.9740833044052124
    3. '(range' → logprob: -12.224082946777344
    4. 'a' → logprob: -13.974082946777344
    5. '	range' → logprob: -15.349082946777344
    6. '   ' → logprob: -15.849082946777344
    7. ' ' → logprob: -16.724082946777344
    8. ' a' → logprob: -17.224082946777344
    9. '_range' → logprob: -17.349082946777344
    10. '.range' → logprob: -18.474082946777344

Token 101: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08915670216083527
    2. '(a' → logprob: -2.4641566276550293
    3. '(b' → logprob: -8.589157104492188
    4. '   ' → logprob: -11.714157104492188
    5. ' in' → logprob: -11.964157104492188
    6. 'a' → logprob: -11.964157104492188
    7. '((' → logprob: -12.964157104492188
    8. ' (' → logprob: -12.964157104492188
    9. ' ' → logprob: -13.464157104492188
    10. '1' → logprob: -13.464157104492188

Token 102: '+' (ID: 10)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010338802821934223
    2. ' ,' → logprob: -7.501033782958984
    3. ',k' → logprob: -7.751033782958984
    4. 'k' → logprob: -10.001033782958984
    5. '   ' → logprob: -12.751033782958984
    6. ' k' → logprob: -14.501033782958984
    7. ' ' → logprob: -14.751033782958984
    8. 'a' → logprob: -14.751033782958984
    9. '1' → logprob: -14.876033782958984
    10. '+' → logprob: -15.501033782958984

Token 103: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003413031517993659
    2. ' ' → logprob: -8.000341415405273
    3. '0' → logprob: -12.875341415405273
    4. 'k' → logprob: -13.000341415405273
    5. ' k' → logprob: -14.750341415405273
    6. '   ' → logprob: -15.125341415405273
    7. '
' → logprob: -16.500341415405273
    8. '```' → logprob: -16.625341415405273
    9. ',' → logprob: -16.750341415405273
    10. '  ' → logprob: -16.875341415405273

Token 104: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004890497075393796
    2. ',k' → logprob: -8.000489234924316
    3. ' ,' → logprob: -8.875489234924316
    4. 'k' → logprob: -11.625489234924316
    5. '   ' → logprob: -12.375489234924316
    6. '1' → logprob: -15.500489234924316
    7. ' k' → logprob: -15.625489234924316
    8. ' ' → logprob: -16.25048828125
    9. '```' → logprob: -16.50048828125
    10. '(),' → logprob: -17.62548828125

Token 105: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.02976749837398529
    2. ' k' → logprob: -3.5297675132751465
    3. '   ' → logprob: -11.654767036437988
    4. ' ' → logprob: -12.654767036437988
    5. '{k' → logprob: -13.029767036437988
    6. ')' → logprob: -13.529767036437988
    7. '```' → logprob: -14.279767036437988
    8. '(k' → logprob: -15.154767036437988
    9. '	k' → logprob: -15.654767036437988
    10. '  ' → logprob: -16.154767990112305

Token 106: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00018149138486478478
    2. ' +' → logprob: -8.625181198120117
    3. ')+' → logprob: -14.500181198120117
    4. '   ' → logprob: -14.750181198120117
    5. '1' → logprob: -15.125181198120117
    6. '```' → logprob: -15.125181198120117
    7. '+
' → logprob: -15.750181198120117
    8. '()+' → logprob: -15.875181198120117
    9. '2' → logprob: -16.750181198120117
    10. '+)' → logprob: -16.875181198120117

Token 107: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.371605948312208e-05
    2. '2' → logprob: -9.875053405761719
    3. ' ' → logprob: -13.625053405761719
    4. '+' → logprob: -14.000053405761719
    5. ')' → logprob: -16.81255340576172
    6. '   ' → logprob: -16.93755340576172
    7. '```' → logprob: -17.31255340576172
    8. 'a' → logprob: -17.81255340576172
    9. 'b' → logprob: -17.87505340576172
    10. '۱' → logprob: -18.50005340576172

Token 108: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.38842740654945374
    2. ')
' → logprob: -1.1384273767471313
    3. '   ' → logprob: -6.513427257537842
    4. ')
' → logprob: -10.138427734375
    5. 'for' → logprob: -11.013427734375
    6. '       ' → logprob: -11.763427734375
    7. ')

' → logprob: -13.013427734375
    8. '):
' → logprob: -13.013427734375
    9. ' for' → logprob: -13.388427734375
    10. '+' → logprob: -14.638427734375

Token 109: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2482021003961563
    2. ' for' → logprob: -2.123202085494995
    3. '   ' → logprob: -2.998202085494995
    4. '       ' → logprob: -2.998202085494995
    5. '    ' → logprob: -8.123202323913574
    6. '           ' → logprob: -10.623202323913574
    7. '        ' → logprob: -10.873202323913574
    8. '```' → logprob: -11.123202323913574
    9. '     ' → logprob: -11.248202323913574
    10. '(for' → logprob: -12.498202323913574

Token 110: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.15771521627902985
    2. ' for' → logprob: -2.157715320587158
    3. '       ' → logprob: -3.532715320587158
    4. '   ' → logprob: -6.907715320587158
    5. '```' → logprob: -9.53271484375
    6. '(for' → logprob: -12.40771484375
    7. 'from' → logprob: -12.78271484375
    8. ' ' → logprob: -13.03271484375
    9. '           ' → logprob: -13.28271484375
    10. ')' → logprob: -13.28271484375

Token 111: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.06995365768671036
    2. 'c' → logprob: -2.694953680038452
    3. '   ' → logprob: -12.194953918457031
    4. ' range' → logprob: -12.319953918457031
    5. 'range' → logprob: -12.944953918457031
    6. '	c' → logprob: -13.444953918457031
    7. ')c' → logprob: -13.569953918457031
    8. ' ' → logprob: -14.444953918457031
    9. '(c' → logprob: -14.569953918457031
    10. '  ' → logprob: -15.069953918457031

Token 112: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2019379436969757
    2. 'in' → logprob: -1.7019379138946533
    3. 'b' → logprob: -8.201937675476074
    4. '   ' → logprob: -9.076937675476074
    5. ' ' → logprob: -10.076937675476074
    6. 'range' → logprob: -10.826937675476074
    7. 'for' → logprob: -11.451937675476074
    8. 'a' → logprob: -11.451937675476074
    9. 'c' → logprob: -11.951937675476074
    10. '  ' → logprob: -11.951937675476074

Token 113: ' range' (ID: 3352)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.8527737259864807
    2. 'range' → logprob: -0.8527737259864807
    3. ' range' → logprob: -1.977773666381836
    4. '(b' → logprob: -5.227773666381836
    5. ' b' → logprob: -5.602773666381836
    6. '(range' → logprob: -9.977773666381836
    7. 'c' → logprob: -10.727773666381836
    8. '   ' → logprob: -11.227773666381836
    9. '[b' → logprob: -11.977773666381836
    10. 'Range' → logprob: -12.477773666381836

Token 114: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -3.1782583391759545e-05
    2. 'b' → logprob: -10.375031471252441
    3. '(' → logprob: -15.000031471252441
    4. '(c' → logprob: -16.000032424926758
    5. '((' → logprob: -17.625032424926758
    6. '(a' → logprob: -18.250032424926758
    7. ')b' → logprob: -18.250032424926758
    8. '   ' → logprob: -18.500032424926758
    9. '[b' → logprob: -18.500032424926758
    10. '(B' → logprob: -18.500032424926758

Token 115: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -8.895480277715251e-06
    2. ' +' → logprob: -11.875008583068848
    3. '+c' → logprob: -13.375008583068848
    4. 'c' → logprob: -15.250008583068848
    5. '()+' → logprob: -16.375009536743164
    6. '1' → logprob: -17.500009536743164
    7. ')+' → logprob: -18.250009536743164
    8. 'a' → logprob: -18.375009536743164
    9. '   ' → logprob: -18.625009536743164
    10. ',' → logprob: -19.375009536743164

Token 116: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -13.50000286102295
    3. '+' → logprob: -13.87500286102295
    4. '2' → logprob: -15.87500286102295
    5. '```' → logprob: -15.87500286102295
    6. 'c' → logprob: -16.000003814697266
    7. ',' → logprob: -17.312503814697266
    8. '   ' → logprob: -17.437503814697266
    9. '
' → logprob: -18.125003814697266
    10. ')' → logprob: -18.437503814697266

Token 117: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18667683005332947
    2. '+' → logprob: -1.8116768598556519
    3. ' +' → logprob: -5.936676979064941
    4. '1' → logprob: -6.561676979064941
    5. ' ,' → logprob: -6.686676979064941
    6. 'c' → logprob: -7.686676979064941
    7. ',c' → logprob: -8.186676979064941
    8. ',k' → logprob: -8.436676979064941
    9. '+,' → logprob: -8.436676979064941
    10. '   ' → logprob: -8.686676979064941

Token 118: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.02056548185646534
    2. ' k' → logprob: -3.8955655097961426
    3. '   ' → logprob: -11.020565032958984
    4. ' ' → logprob: -12.645565032958984
    5. '(k' → logprob: -13.645565032958984
    6. '{k' → logprob: -14.395565032958984
    7. '  ' → logprob: -14.770565032958984
    8. '	k' → logprob: -14.770565032958984
    9. ')' → logprob: -14.895565032958984
    10. 'c' → logprob: -15.395565032958984

Token 119: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.7432603272027336e-06
    2. ' +' → logprob: -13.375001907348633
    3. ')+' → logprob: -16.625001907348633
    4. 'c' → logprob: -17.125001907348633
    5. '```' → logprob: -18.000001907348633
    6. '+c' → logprob: -18.250001907348633
    7. '+
' → logprob: -18.375001907348633
    8. '()+' → logprob: -18.375001907348633
    9. '1' → logprob: -18.500001907348633
    10. '}+' → logprob: -18.750001907348633

Token 120: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.56102097814437e-05
    2. '+' → logprob: -10.000045776367188
    3. ' ' → logprob: -16.375045776367188
    4. 'k' → logprob: -17.875045776367188
    5. ')' → logprob: -18.000045776367188
    6. '```' → logprob: -18.375045776367188
    7. '2' → logprob: -18.875045776367188
    8. ' +' → logprob: -19.500045776367188
    9. '   ' → logprob: -20.375045776367188
    10. 'c' → logprob: -20.375045776367188

Token 121: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.339776832144707e-05
    2. '   ' → logprob: -10.000082969665527
    3. ')
' → logprob: -10.750082969665527
    4. '):' → logprob: -11.125082969665527
    5. '))' → logprob: -14.125082969665527
    6. ' )' → logprob: -15.125082969665527
    7. '       ' → logprob: -16.500083923339844
    8. '  ' → logprob: -16.625083923339844
    9. ' ' → logprob: -16.625083923339844
    10. ')))' → logprob: -16.750083923339844

Token 122: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004598631348926574
    2. '   ' → logprob: -8.125459671020508
    3. ')
' → logprob: -9.500459671020508
    4. '+' → logprob: -9.875459671020508
    5. ')+' → logprob: -10.750459671020508
    6. ' )' → logprob: -12.500459671020508
    7. ')*' → logprob: -13.250459671020508
    8. '  ' → logprob: -13.375459671020508
    9. ' +' → logprob: -14.000459671020508
    10. '```' → logprob: -14.125459671020508

Token 123: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.32000261545181274
    2. 'print' → logprob: -1.445002555847168
    3. 'for' → logprob: -3.945002555847168
    4. '+' → logprob: -4.195002555847168
    5. '+
' → logprob: -6.695002555847168
    6. ')' → logprob: -7.320002555847168
    7. '(ans' → logprob: -7.445002555847168
    8. '<|end|>' → logprob: -7.570002555847168
    9. '#' → logprob: -8.570002555847168
    10. '```' → logprob: -8.945002555847168

Token 124: ' +=' (ID: 2757)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 125: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.004803664982318878
    2. ' sum' → logprob: -5.754803657531738
    3. 'trip' → logprob: -6.629803657531738
    4. 'k' → logprob: -9.004803657531738
    5. 'ans' → logprob: -9.504803657531738
    6. '   ' → logprob: -10.004803657531738
    7. ' trip' → logprob: -11.129803657531738
    8. '(sum' → logprob: -11.129803657531738
    9. '#' → logprob: -12.254803657531738
    10. '
' → logprob: -12.379803657531738

Token 126: '(
' (ID: 1607)
  Prédit: '(
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(
' → logprob: -0.091103196144104
    2. '(' → logprob: -3.4661030769348145
    3. '(tr' → logprob: -3.4661030769348145
    4. '(pair' → logprob: -3.7161030769348145
    5. '(

' → logprob: -8.841103553771973
    6. 'trip' → logprob: -9.841103553771973
    7. '((' → logprob: -10.716103553771973
    8. '(
' → logprob: -10.966103553771973
    9. 'pair' → logprob: -11.216103553771973
    10. '(k' → logprob: -12.216103553771973

Token 127: '   ' (ID: 271)
  Prédit: 'pair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pair' → logprob: -0.07546551525592804
    2. 'trip' → logprob: -2.700465440750122
    3. '(pair' → logprob: -6.200465679168701
    4. '(
' → logprob: -6.200465679168701
    5. '   ' → logprob: -6.700465679168701
    6. ' pair' → logprob: -9.075465202331543
    7. 'tr' → logprob: -10.075465202331543
    8. ' trip' → logprob: -10.950465202331543
    9. '(' → logprob: -11.200465202331543
    10. 'a' → logprob: -12.200465202331543

Token 128: ' pair' (ID: 10610)
  Prédit: 'pair'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pair' (adapté à ' pair') → logprob: -0.5769124627113342
    2. 'trip' → logprob: -0.8269124627113342
    3. '(pair' → logprob: -7.4519124031066895
    4. '(
' → logprob: -8.951912879943848
    5. '   ' → logprob: -9.201912879943848
    6. ' trip' → logprob: -9.576912879943848
    7. ' pair' → logprob: -9.826912879943848
    8. 'tr' → logprob: -10.826912879943848
    9. '(' → logprob: -12.201912879943848
    10. 'a' → logprob: -12.826912879943848

Token 129: '_g' (ID: 5439)
  Prédit: '_g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_g' → logprob: -1.2233183042553719e-05
    2. 'g' → logprob: -13.250012397766113
    3. ')_' → logprob: -13.375012397766113
    4. ' _' → logprob: -13.625012397766113
    5. '_s' → logprob: -13.625012397766113
    6. ''_' → logprob: -14.000012397766113
    7. '\' → logprob: -14.625012397766113
    8. '"_' → logprob: -14.750012397766113
    9. '_' → logprob: -14.875012397766113
    10. '```' → logprob: -14.875012397766113

Token 130: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.00010926496179308742
    2. 'c' → logprob: -10.000109672546387
    3. 'g' → logprob: -10.000109672546387
    4. 'd' → logprob: -11.625109672546387
    5. '   ' → logprob: -13.500109672546387
    6. 'CD' → logprob: -13.625109672546387
    7. '(g' → logprob: -13.750109672546387
    8. ' gcd' → logprob: -13.750109672546387
    9. '```' → logprob: -14.250109672546387
    10. 'dc' → logprob: -14.625109672546387

Token 131: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -2.2246291337069124e-05
    2. '(' → logprob: -10.875021934509277
    3. '(i' → logprob: -12.750021934509277
    4. '(
' → logprob: -16.125022888183594
    5. '(b' → logprob: -16.250022888183594
    6. 'a' → logprob: -16.500022888183594
    7. '(k' → logprob: -17.125022888183594
    8. '(pair' → logprob: -17.250022888183594
    9. ' (' → logprob: -17.750022888183594
    10. '(x' → logprob: -17.875022888183594

Token 132: ',' (ID: 11)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.03915943205356598
    2. ',' → logprob: -3.2891595363616943
    3. '(' → logprob: -7.789159297943115
    4. ',a' → logprob: -7.789159297943115
    5. 'a' → logprob: -8.289159774780273
    6. ',(' → logprob: -11.414159774780273
    7. ')' → logprob: -11.789159774780273
    8. ' ,' → logprob: -11.914159774780273
    9. ')(' → logprob: -12.914159774780273
    10. ' (' → logprob: -13.039159774780273

Token 133: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.026578128337860107
    2. 'a' → logprob: -3.651578187942505
    3. ' b' → logprob: -8.401577949523926
    4. 'c' → logprob: -10.651577949523926
    5. 'k' → logprob: -10.901577949523926
    6. ' a' → logprob: -12.151577949523926
    7. '1' → logprob: -13.526577949523926
    8. '   ' → logprob: -14.151577949523926
    9. '(a' → logprob: -14.151577949523926
    10. '```' → logprob: -14.151577949523926

Token 134: ')' (ID: 8)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.00011927806917810813
    2. '(' → logprob: -9.75011920928955
    3. ')' → logprob: -9.87511920928955
    4. ',' → logprob: -12.12511920928955
    5. ' (' → logprob: -13.50011920928955
    6. '   ' → logprob: -14.25011920928955
    7. 'a' → logprob: -14.50011920928955
    8. '```' → logprob: -14.50011920928955
    9. 'for' → logprob: -15.00011920928955
    10. ')(' → logprob: -15.37511920928955

Token 135: ' *' (ID: 425)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.00044377794256433845
    2. '(' → logprob: -7.750443935394287
    3. '(b' → logprob: -12.500443458557129
    4. ' (' → logprob: -13.000443458557129
    5. '(
' → logprob: -13.250443458557129
    6. '```' → logprob: -13.500443458557129
    7. 'for' → logprob: -13.875443458557129
    8. ')' → logprob: -14.000443458557129
    9. '   ' → logprob: -14.250443458557129
    10. '*' → logprob: -14.750443458557129

Token 136: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.08355021476745605
    2. '6' → logprob: -2.583550214767456
    3. '(' → logprob: -5.458550453186035
    4. ' ' → logprob: -8.458550453186035
    5. '2' → logprob: -9.833550453186035
    6. '   ' → logprob: -10.083550453186035
    7. ' (' → logprob: -10.708550453186035
    8. '9' → logprob: -10.958550453186035
    9. '12' → logprob: -11.708550453186035
    10. '(
' → logprob: -11.833550453186035

Token 137: '6' (ID: 21)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.10346576571464539
    2. '6' → logprob: -2.3534657955169678
    3. '12' → logprob: -6.228465557098389
    4. '2' → logprob: -7.103465557098389
    5. ' ' → logprob: -8.978466033935547
    6. '(' → logprob: -9.103466033935547
    7. '   ' → logprob: -9.353466033935547
    8. '9' → logprob: -9.853466033935547
    9. '4' → logprob: -10.103466033935547
    10. '18' → logprob: -11.853466033935547

Token 138: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.27518558502197266
    2. '   ' → logprob: -1.5251855850219727
    3. ' for' → logprob: -3.7751855850219727
    4. '
' → logprob: -10.650185585021973
    5. '(
' → logprob: -11.775185585021973
    6. '	for' → logprob: -12.025185585021973
    7. '  ' → logprob: -12.150185585021973
    8. '    
' → logprob: -12.150185585021973
    9. '```' → logprob: -12.900185585021973
    10. ' ' → logprob: -13.400185585021973

Token 139: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7178655862808228
    2. 'for' → logprob: -0.7178655862808228
    3. ' for' → logprob: -3.717865467071533
    4. '(
' → logprob: -9.467865943908691
    5. '	for' → logprob: -10.717865943908691
    6. '(' → logprob: -11.717865943908691
    7. '
' → logprob: -11.842865943908691
    8. '  ' → logprob: -12.342865943908691
    9. '    
' → logprob: -12.467865943908691
    10. '    ' → logprob: -13.092865943908691

Token 140: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.001228561857715249
    2. ' for' → logprob: -6.751228332519531
    3. '   ' → logprob: -9.751228332519531
    4. '	for' → logprob: -15.626228332519531
    5. '  ' → logprob: -17.12622833251953
    6. '    
' → logprob: -17.75122833251953
    7. ' ' → logprob: -18.00122833251953
    8. '(
' → logprob: -18.62622833251953
    9. '```' → logprob: -18.87622833251953
    10. '
' → logprob: -19.00122833251953

Token 141: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.033659301698207855
    2. ' a' → logprob: -3.4086592197418213
    3. 'b' → logprob: -11.408658981323242
    4. ' b' → logprob: -13.283658981323242
    5. '	a' → logprob: -15.408658981323242
    6. '   ' → logprob: -16.033658981323242
    7. '(a' → logprob: -16.033658981323242
    8. ' ' → logprob: -16.283658981323242
    9. '_a' → logprob: -16.283658981323242
    10. ')a' → logprob: -16.658658981323242

Token 142: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2254272848367691
    2. 'in' → logprob: -1.600427269935608
    3. ' ' → logprob: -12.100427627563477
    4. 'a' → logprob: -12.600427627563477
    5. 'n' → logprob: -12.975427627563477
    6. '   ' → logprob: -13.725427627563477
    7. '1' → logprob: -14.725427627563477
    8. '  ' → logprob: -14.725427627563477
    9. ')' → logprob: -14.975427627563477
    10. 'for' → logprob: -15.225427627563477

Token 143: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011048528365790844
    2. ' range' → logprob: -4.511048316955566
    3. '1' → logprob: -14.761048316955566
    4. '(range' → logprob: -15.636048316955566
    5. '(' → logprob: -15.886048316955566
    6. '[' → logprob: -18.011049270629883
    7. ' ' → logprob: -19.136049270629883
    8. '	range' → logprob: -19.386049270629883
    9. '   ' → logprob: -20.261049270629883
    10. '0' → logprob: -20.261049270629883

Token 144: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.7697225252486533e-06
    2. '1' → logprob: -12.500003814697266
    3. ' (' → logprob: -18.500003814697266
    4. '(
' → logprob: -18.875003814697266
    5. '(k' → logprob: -20.625003814697266
    6. '   ' → logprob: -20.875003814697266
    7. 'def' → logprob: -21.625003814697266
    8. 'a' → logprob: -22.000003814697266
    9. '[' → logprob: -22.250003814697266
    10. '(-' → logprob: -22.375003814697266

Token 145: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.632542913896032e-05
    2. '(' → logprob: -10.000046730041504
    3. ' ' → logprob: -14.375046730041504
    4. '   ' → logprob: -16.000045776367188
    5. 'k' → logprob: -16.125045776367188
    6. ',' → logprob: -17.500045776367188
    7. 'a' → logprob: -17.875045776367188
    8. '```' → logprob: -18.000045776367188
    9. 'from' → logprob: -18.125045776367188
    10. '[' → logprob: -18.500045776367188

Token 146: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008785889949649572
    2. '(' → logprob: -7.500878810882568
    3. '(k' → logprob: -8.50087833404541
    4. ',k' → logprob: -9.50087833404541
    5. 'a' → logprob: -10.75087833404541
    6. ' ,' → logprob: -11.25087833404541
    7. '(a' → logprob: -12.12587833404541
    8. ',a' → logprob: -12.37587833404541
    9. 'k' → logprob: -13.37587833404541
    10. '   ' → logprob: -14.12587833404541

Token 147: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.1637164789135568e-05
    2. ' k' → logprob: -11.375011444091797
    3. '   ' → logprob: -16.500011444091797
    4. '(k' → logprob: -17.375011444091797
    5. '{k' → logprob: -19.250011444091797
    6. '	k' → logprob: -19.375011444091797
    7. ' ' → logprob: -19.875011444091797
    8. '1' → logprob: -19.875011444091797
    9. '    ' → logprob: -20.750011444091797
    10. '```' → logprob: -21.125011444091797

Token 148: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0001514557225164026
    2. ' +' → logprob: -9.250151634216309
    3. ')' → logprob: -10.125151634216309
    4. '+k' → logprob: -11.500151634216309
    5. '   ' → logprob: -13.750151634216309
    6. 'a' → logprob: -14.375151634216309
    7. ')+' → logprob: -14.500151634216309
    8. 'for' → logprob: -14.750151634216309
    9. 'k' → logprob: -14.750151634216309
    10. '```' → logprob: -15.250151634216309

Token 149: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4211686849594116
    2. 'k' → logprob: -1.1711686849594116
    3. '+' → logprob: -3.921168804168701
    4. 'a' → logprob: -4.421168804168701
    5. '2' → logprob: -7.296168804168701
    6. ')' → logprob: -7.671168804168701
    7. '(k' → logprob: -8.171168327331543
    8. '(a' → logprob: -9.046168327331543
    9. '0' → logprob: -9.171168327331543
    10. ' ' → logprob: -9.921168327331543

Token 150: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9605666995048523
    2. ')
' → logprob: -1.085566759109497
    3. '   ' → logprob: -1.835566759109497
    4. 'for' → logprob: -2.210566759109497
    5. ' for' → logprob: -4.585566520690918
    6. '	for' → logprob: -9.710566520690918
    7. '):
' → logprob: -9.835566520690918
    8. '+' → logprob: -10.210566520690918
    9. '  ' → logprob: -10.710566520690918
    10. 'a' → logprob: -10.835566520690918

Token 151: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20848989486694336
    2. 'for' → logprob: -1.7084898948669434
    3. ' for' → logprob: -4.958489894866943
    4. '	for' → logprob: -10.583490371704102
    5. '       ' → logprob: -13.958490371704102
    6. '  ' → logprob: -14.458490371704102
    7. ' ' → logprob: -15.083490371704102
    8. 'from' → logprob: -15.333490371704102
    9. '
' → logprob: -15.583490371704102
    10. ')' → logprob: -15.708490371704102

Token 152: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0003921847674064338
    2. ' for' → logprob: -8.375391960144043
    3. '   ' → logprob: -8.750391960144043
    4. 'range' → logprob: -13.000391960144043
    5. ')' → logprob: -15.000391960144043
    6. '
' → logprob: -15.500391960144043
    7. '       ' → logprob: -15.750391960144043
    8. 'from' → logprob: -16.37539291381836
    9. '  ' → logprob: -16.87539291381836
    10. '    ' → logprob: -17.12539291381836

Token 153: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.005237548612058163
    2. ' b' → logprob: -5.255237579345703
    3. 'a' → logprob: -12.505237579345703
    4. '(b' → logprob: -17.005237579345703
    5. 'c' → logprob: -17.255237579345703
    6. ' a' → logprob: -17.880237579345703
    7. ' ' → logprob: -18.505237579345703
    8. '   ' → logprob: -18.630237579345703
    9. '	b' → logprob: -18.755237579345703
    10. '```' → logprob: -19.880237579345703

Token 154: ' in' (ID: 306)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5847446322441101
    2. '(a' → logprob: -1.5847446918487549
    3. 'in' → logprob: -1.7097446918487549
    4. ' in' → logprob: -3.084744691848755
    5. '(in' → logprob: -4.584744453430176
    6. 'a' → logprob: -7.584744453430176
    7. ' (' → logprob: -9.084744453430176
    8. '(k' → logprob: -10.209744453430176
    9. '(
' → logprob: -10.334744453430176
    10. '(i' → logprob: -10.459744453430176

Token 155: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.022163573652505875
    2. ' range' → logprob: -4.022163391113281
    3. '(' → logprob: -6.022163391113281
    4. 'a' → logprob: -7.397163391113281
    5. '(range' → logprob: -7.522163391113281
    6. '(a' → logprob: -7.772163391113281
    7. ' a' → logprob: -12.522163391113281
    8. '1' → logprob: -13.897163391113281
    9. ' (' → logprob: -14.772163391113281
    10. '_range' → logprob: -15.397163391113281

Token 156: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5764816403388977
    2. '(a' → logprob: -0.8264816403388977
    3. 'a' → logprob: -7.576481819152832
    4. '1' → logprob: -10.451481819152832
    5. ' (' → logprob: -14.951481819152832
    6. '(
' → logprob: -15.451481819152832
    7. '```' → logprob: -16.701480865478516
    8. '(k' → logprob: -16.826480865478516
    9. '   ' → logprob: -17.326480865478516
    10. ' a' → logprob: -17.576480865478516

Token 157: '+' (ID: 10)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00475383410230279
    2. '+' → logprob: -5.379754066467285
    3. ',k' → logprob: -9.879754066467285
    4. 'a' → logprob: -10.129754066467285
    5. ' ,' → logprob: -10.879754066467285
    6. 'k' → logprob: -12.379754066467285
    7. ',a' → logprob: -12.754754066467285
    8. ' +' → logprob: -12.754754066467285
    9. '1' → logprob: -12.879754066467285
    10. '```' → logprob: -12.879754066467285

Token 158: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0012442785082384944
    2. '0' → logprob: -7.001244068145752
    3. 'k' → logprob: -8.12624454498291
    4. '+' → logprob: -10.87624454498291
    5. ')' → logprob: -11.50124454498291
    6. ' ' → logprob: -12.37624454498291
    7. '```' → logprob: -13.12624454498291
    8. ' k' → logprob: -14.87624454498291
    9. 'a' → logprob: -15.37624454498291
    10. '(' → logprob: -15.50124454498291

Token 159: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003922976087778807
    2. ',k' → logprob: -6.378922939300537
    3. '(k' → logprob: -6.503922939300537
    4. '(' → logprob: -7.753922939300537
    5. ' ,' → logprob: -9.003923416137695
    6. 'k' → logprob: -9.003923416137695
    7. 'a' → logprob: -11.378923416137695
    8. '(),' → logprob: -11.753923416137695
    9. '1' → logprob: -12.128923416137695
    10. ' k' → logprob: -12.378923416137695

Token 160: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.012513656169176102
    2. ' k' → logprob: -4.387513637542725
    3. '   ' → logprob: -13.387514114379883
    4. '(k' → logprob: -13.637514114379883
    5. '```' → logprob: -14.137514114379883
    6. '{k' → logprob: -15.262514114379883
    7. '	k' → logprob: -15.762514114379883
    8. ' ' → logprob: -16.387514114379883
    9. ')' → logprob: -16.887514114379883
    10. ' к' → logprob: -17.262514114379883

Token 161: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.006735265254974365
    2. '1' → logprob: -5.006735324859619
    3. ' +' → logprob: -12.131734848022461
    4. 'b' → logprob: -12.756734848022461
    5. '```' → logprob: -12.756734848022461
    6. ')' → logprob: -13.131734848022461
    7. ')+' → logprob: -13.256734848022461
    8. '+
' → logprob: -13.756734848022461
    9. 'k' → logprob: -14.131734848022461
    10. '   ' → logprob: -14.506734848022461

Token 162: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.438573680294212e-06
    2. '+' → logprob: -12.625005722045898
    3. 'k' → logprob: -13.625005722045898
    4. ' ' → logprob: -14.750005722045898
    5. ')' → logprob: -15.000005722045898
    6. '```' → logprob: -16.1250057220459
    7. '   ' → logprob: -19.0000057220459
    8. ' k' → logprob: -19.0000057220459
    9. '{' → logprob: -21.3750057220459
    10. '`' → logprob: -21.5000057220459

Token 163: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00023512568441219628
    2. ')
' → logprob: -8.375235557556152
    3. '   ' → logprob: -12.875235557556152
    4. ')**' → logprob: -14.750235557556152
    5. '):' → logprob: -14.750235557556152
    6. ' )' → logprob: -14.875235557556152
    7. '))' → logprob: -15.875235557556152
    8. ')

' → logprob: -15.875235557556152
    9. '):
' → logprob: -16.125234603881836
    10. ')}' → logprob: -16.625234603881836

Token 164: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00013488641707226634
    2. ')
' → logprob: -9.125134468078613
    3. ')

' → logprob: -11.375134468078613
    4. '   ' → logprob: -11.875134468078613
    5. ')*' → logprob: -12.250134468078613
    6. '```' → logprob: -13.375134468078613
    7. ')**' → logprob: -14.750134468078613
    8. ')+' → logprob: -15.750134468078613
    9. ' )' → logprob: -15.875134468078613
    10. '**' → logprob: -16.25013542175293

Token 165: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.5788248181343079
    2. '+' → logprob: -0.8288248181343079
    3. '+
' → logprob: -6.578824996948242
    4. ' +' → logprob: -7.203824996948242
    5. 'for' → logprob: -7.703824996948242
    6. '+=' → logprob: -9.203824996948242
    7. ' ans' → logprob: -9.953824996948242
    8. '```' → logprob: -10.328824996948242
    9. 'answer' → logprob: -10.578824996948242
    10. '
' → logprob: -10.578824996948242

Token 166: ' +=' (ID: 2757)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.008154117502272129
    2. ' +' → logprob: -5.633153915405273
    3. '<|end|>' → logprob: -5.633153915405273
    4. '+
' → logprob: -7.008153915405273
    5. '*' → logprob: -11.133153915405273
    6. '```' → logprob: -11.383153915405273
    7. ' +
' → logprob: -11.508153915405273
    8. '
' → logprob: -12.133153915405273
    9. '#' → logprob: -12.508153915405273
    10. '+

' → logprob: -12.883153915405273

Token 167: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.11230270564556122
    2. 'k' → logprob: -2.487302780151367
    3. 'trip' → logprob: -3.862302780151367
    4. ' sum' → logprob: -6.612302780151367
    5. '(k' → logprob: -8.487302780151367
    6. ' k' → logprob: -8.737302780151367
    7. '(sum' → logprob: -9.237302780151367
    8. ' trip' → logprob: -9.862302780151367
    9. 'ans' → logprob: -9.987302780151367
    10. 'cache' → logprob: -9.987302780151367

Token 168: '(range' (ID: 50017)
  Prédit: '(
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(
' → logprob: -0.6365390419960022
    2. '(tr' → logprob: -0.8865390419960022
    3. '(pair' → logprob: -4.136538982391357
    4. '(k' → logprob: -4.386538982391357
    5. '(i' → logprob: -4.636538982391357
    6. '(range' → logprob: -5.011538982391357
    7. '(g' → logprob: -5.136538982391357
    8. '(' → logprob: -5.386538982391357
    9. '(a' → logprob: -6.636538982391357
    10. '((' → logprob: -7.011538982391357

Token 169: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11283284425735474
    2. '1' → logprob: -2.23783278465271
    3. ' (' → logprob: -13.112833023071289
    4. 'k' → logprob: -13.362833023071289
    5. '   ' → logprob: -13.487833023071289
    6. '(k' → logprob: -13.487833023071289
    7. '(
' → logprob: -13.987833023071289
    8. '```' → logprob: -14.112833023071289
    9. 'from' → logprob: -14.487833023071289
    10. ')' → logprob: -14.612833023071289

Token 170: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.980854959692806e-05
    2. 'k' → logprob: -10.250069618225098
    3. '(' → logprob: -10.375069618225098
    4. '(k' → logprob: -13.125069618225098
    5. ' ' → logprob: -14.000069618225098
    6. '0' → logprob: -15.875069618225098
    7. '   ' → logprob: -16.750070571899414
    8. '
' → logprob: -17.125070571899414
    9. '```' → logprob: -17.500070571899414
    10. '2' → logprob: -17.500070571899414

Token 171: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07072333246469498
    2. '(' → logprob: -2.820723295211792
    3. '1' → logprob: -4.820723533630371
    4. '(k' → logprob: -7.695723533630371
    5. ',k' → logprob: -9.195723533630371
    6. ' ,' → logprob: -10.320723533630371
    7. ',(' → logprob: -10.570723533630371
    8. 'k' → logprob: -10.695723533630371
    9. ',
' → logprob: -11.695723533630371
    10. '   ' → logprob: -13.445723533630371

Token 172: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -5.438573680294212e-06
    2. ' k' → logprob: -12.250005722045898
    3. '(k' → logprob: -14.375005722045898
    4. '{k' → logprob: -17.1250057220459
    5. '   ' → logprob: -18.2500057220459
    6. '1' → logprob: -19.5000057220459
    7. '	k' → logprob: -20.0000057220459
    8. '```' → logprob: -21.2500057220459
    9. '(' → logprob: -22.0000057220459
    10. ',k' → logprob: -22.1250057220459

Token 173: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -5.347765181795694e-05
    2. ' +' → logprob: -9.875053405761719
    3. '()+' → logprob: -14.500053405761719
    4. '+k' → logprob: -14.750053405761719
    5. '(' → logprob: -15.125053405761719
    6. '+
' → logprob: -15.375053405761719
    7. '```' → logprob: -15.500053405761719
    8. ',' → logprob: -16.00005340576172
    9. '1' → logprob: -16.25005340576172
    10. '   ' → logprob: -17.00005340576172

Token 174: '1' (ID: 16)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.31987714767456055
    2. 'k' → logprob: -1.8198771476745605
    3. '1' → logprob: -2.1948771476745605
    4. '+k' → logprob: -8.319877624511719
    5. '{k' → logprob: -10.569877624511719
    6. '(k' → logprob: -10.944877624511719
    7. ' k' → logprob: -11.069877624511719
    8. '```' → logprob: -11.194877624511719
    9. ' +' → logprob: -11.819877624511719
    10. '{' → logprob: -12.194877624511719

Token 175: '))

' (ID: 9746)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.9174097180366516
    2. '(' → logprob: -1.1674096584320068
    3. '()' → logprob: -2.042409658432007
    4. ')' → logprob: -2.042409658432007
    5. '(k' → logprob: -3.667409658432007
    6. '))' → logprob: -7.292409896850586
    7. ')**' → logprob: -7.292409896850586
    8. '(n' → logprob: -7.667409896850586
    9. ')*' → logprob: -7.667409896850586
    10. '()*' → logprob: -7.792409896850586

Token 176: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.128163257315464e-07
    2. ' print' → logprob: -15.5
    3. '
' → logprob: -17.125
    4. '```' → logprob: -17.25
    5. '(print' → logprob: -20.125
    6. '``' → logprob: -20.75
    7. '#print' → logprob: -20.875
    8. '    
' → logprob: -21.875
    9. '.print' → logprob: -22.25
    10. '  
' → logprob: -22.5

Token 177: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.02978207916021347
    2. '(' → logprob: -3.5297820568084717
    3. '()' → logprob: -10.90478229522705
    4. 'ans' → logprob: -11.77978229522705
    5. '("("' → logprob: -13.65478229522705
    6. '(answer' → logprob: -13.77978229522705
    7. '(
' → logprob: -13.77978229522705
    8. '(`' → logprob: -14.52978229522705
    9. '(f' → logprob: -14.77978229522705
    10. '('' → logprob: -14.90478229522705

Token 178: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.8961017202818766e-05
    2. '())' → logprob: -10.375059127807617
    3. '()' → logprob: -11.000059127807617
    4. '))' → logprob: -12.250059127807617
    5. '(' → logprob: -13.250059127807617
    6. '`)' → logprob: -13.375059127807617
    7. ')`' → logprob: -13.625059127807617
    8. ')
' → logprob: -14.625059127807617
    9. '+' → logprob: -14.625059127807617
    10. ' )' → logprob: -14.750059127807617


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 176
Tokens correctement prédits (1ère position, stricte): 75
Tokens correctement prédits (1ère position, avec adaptation): 82
Tokens correctement prédits (top 10): 147
Précision stricte (1ère position): 42.61%
Précision adaptée (1ère position): 46.59%
Précision (top 10): 83.52%
================================================================================
