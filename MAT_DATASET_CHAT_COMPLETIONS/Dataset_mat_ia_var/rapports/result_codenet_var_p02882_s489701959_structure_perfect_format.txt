================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:41:15
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import math

a, b, x = map(int, input().split())

if x / (a * a * b) <= 0.5:
    h = x / (a * b) * 2
    hy2 = h * h + b * b
    cosa = (hy2 + b * b - h * h) / (2 * (hy2 ** 0.5) * b)
    d = 180 - math.degrees(math.acos(cosa)) - 90
else:
    rest = (a * a * b - x) / a
    tan = rest * 2 / (a * a)
    d = math.degrees(math.atan(tan))

print(d)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'a' (ID: 64)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -6.289473822107539e-05
    2. 'import' → logprob: -11.625062942504883
    3. '```' → logprob: -11.625062942504883
    4. '\' → logprob: -11.875062942504883
    5. '<|end|>' → logprob: -12.375062942504883
    6. '.\' → logprob: -12.500062942504883
    7. '.pi' → logprob: -12.625062942504883
    8. '.e' → logprob: -12.625062942504883
    9. '\n' → logprob: -12.875062942504883
    10. 'def' → logprob: -13.250062942504883

Token 4: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.040046416223049164
    2. '=' → logprob: -4.165046215057373
    3. '+' → logprob: -4.790046215057373
    4. '[' → logprob: -5.165046215057373
    5. ' ' → logprob: -6.165046215057373
    6. ')' → logprob: -6.415046215057373
    7. 'd' → logprob: -6.540046215057373
    8. '*' → logprob: -6.540046215057373
    9. ',' → logprob: -7.290046215057373
    10. ' =' → logprob: -7.665046215057373

Token 5: ' b' (ID: 287)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9053022861480713
    2. ' b' → logprob: -0.9053022861480713
    3. 'b' → logprob: -1.6553022861480713
    4. 'space' → logprob: -10.405302047729492
    5. '_' → logprob: -10.780302047729492
    6. ' ,' → logprob: -10.905302047729492
    7. ' =' → logprob: -11.530302047729492
    8. ' space' → logprob: -11.655302047729492
    9. '<|end|>' → logprob: -12.155302047729492
    10. '  ' → logprob: -12.280302047729492

Token 6: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12259747833013535
    2. '=' → logprob: -2.2475974559783936
    3. ',' → logprob: -4.872597694396973
    4. ' ' → logprob: -6.872597694396973
    5. ' ,' → logprob: -7.247597694396973
    6. ')' → logprob: -8.872597694396973
    7. '<|end|>' → logprob: -9.122597694396973
    8. '  ' → logprob: -10.872597694396973
    9. ' =
' → logprob: -11.247597694396973
    10. '[' → logprob: -11.872597694396973

Token 7: ' x' (ID: 1215)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.1761295646429062
    2. 'c' → logprob: -1.9261295795440674
    3. ' =' → logprob: -4.551129341125488
    4. '=' → logprob: -5.551129341125488
    5. ' ' → logprob: -6.676129341125488
    6. '_c' → logprob: -10.676129341125488
    7. 's' → logprob: -11.051129341125488
    8. '=c' → logprob: -11.676129341125488
    9. ' s' → logprob: -11.801129341125488
    10. ' ' → logprob: -12.426129341125488

Token 8: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4741438627243042
    2. '=' → logprob: -0.9741438627243042
    3. ',' → logprob: -9.849143981933594
    4. ' ' → logprob: -11.974143981933594
    5. ')' → logprob: -12.224143981933594
    6. 'space' → logprob: -14.349143981933594
    7. '<|end|>' → logprob: -15.224143981933594
    8. ' =
' → logprob: -15.474143981933594
    9. 's' → logprob: -15.599143981933594
    10. '_' → logprob: -15.974143981933594

Token 9: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.2700476050376892
    2. 'map' → logprob: -1.895047664642334
    3. ' ' → logprob: -2.520047664642334
    4. '5' → logprob: -6.270047664642334
    5. '10' → logprob: -6.395047664642334
    6. '0' → logprob: -6.895047664642334
    7. '1' → logprob: -7.145047664642334
    8. '3' → logprob: -8.645047187805176
    9. '2' → logprob: -9.645047187805176
    10. '42' → logprob: -9.895047187805176

Token 10: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04836500436067581
    2. '<|end|>' → logprob: -3.6733651161193848
    3. '(lambda' → logprob: -4.548365116119385
    4. '(int' → logprob: -5.423365116119385
    5. '```' → logprob: -6.048365116119385
    6. '(str' → logprob: -6.923365116119385
    7. '<|end|>' → logprob: -6.923365116119385
    8. '()' → logprob: -8.423364639282227
    9. '(token' → logprob: -8.423364639282227
    10. 'user' → logprob: -8.673364639282227

Token 11: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.33765336871147156
    2. ')' → logprob: -1.837653398513794
    3. '(' → logprob: -2.087653398513794
    4. '(int' → logprob: -8.087653160095215
    5. '```' → logprob: -8.087653160095215
    6. ')(' → logprob: -8.212653160095215
    7. '(math' → logprob: -8.337653160095215
    8. '`)' → logprob: -8.587653160095215
    9. '(token' → logprob: -8.837653160095215
    10. '(range' → logprob: -8.837653160095215

Token 12: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.252267062664032
    2. ' input' → logprob: -1.5022671222686768
    3. ')' → logprob: -8.377266883850098
    4. '(input' → logprob: -9.252266883850098
    5. ',input' → logprob: -12.627266883850098
    6. ' )' → logprob: -12.752266883850098
    7. '```' → logprob: -13.127266883850098
    8. '=input' → logprob: -13.627266883850098
    9. 'math' → logprob: -14.752266883850098
    10. ' ' → logprob: -15.252266883850098

Token 13: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.4461217522621155
    2. '()' → logprob: -1.3211216926574707
    3. '().' → logprob: -3.3211216926574707
    4. ')' → logprob: -3.5711216926574707
    5. '(' → logprob: -3.9461216926574707
    6. '());' → logprob: -5.946121692657471
    7. '(()' → logprob: -6.821121692657471
    8. '('' → logprob: -6.821121692657471
    9. '();)' → logprob: -7.196121692657471
    10. '(""))' → logprob: -7.321121692657471

Token 14: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0012167827226221561
    2. 'strip' → logprob: -6.751216888427734
    3. 'rstrip' → logprob: -10.001216888427734
    4. ' split' → logprob: -13.876216888427734
    5. '(split' → logprob: -16.126216888427734
    6. 'read' → logprob: -16.376216888427734
    7. ')' → logprob: -16.876216888427734
    8. 'spl' → logprob: -17.751216888427734
    9. 's' → logprob: -18.126216888427734
    10. ' readline' → logprob: -18.251216888427734

Token 15: '())

' (ID: 27654)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002032611286267638
    2. '))' → logprob: -6.25203275680542
    3. '())' → logprob: -9.877032279968262
    4. '`)' → logprob: -10.877032279968262
    5. '(' → logprob: -12.377032279968262
    6. ')))' → logprob: -12.377032279968262
    7. ')`' → logprob: -12.502032279968262
    8. '()' → logprob: -12.752032279968262
    9. '),' → logprob: -12.752032279968262
    10. ')**' → logprob: -13.377032279968262

Token 16: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.051104240119457245
    2. 'area' → logprob: -3.5511043071746826
    3. ':' → logprob: -5.9261040687561035
    4. 's' → logprob: -6.0511040687561035
    5. 'h' → logprob: -6.1761040687561035
    6. ')' → logprob: -6.3011040687561035
    7. 'r' → logprob: -6.5511040687561035
    8. 'math' → logprob: -6.5511040687561035
    9. 'c' → logprob: -6.9261040687561035
    10. 'height' → logprob: -6.9261040687561035

Token 17: ' x' (ID: 1215)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.29020166397094727
    2. ' x' → logprob: -1.9152016639709473
    3. 'a' → logprob: -2.4152016639709473
    4. 'x' → logprob: -4.290201663970947
    5. ' b' → logprob: -7.290201663970947
    6. ' ' → logprob: -7.415201663970947
    7. ' (' → logprob: -9.165201187133789
    8. 'b' → logprob: -10.290201187133789
    9. ' math' → logprob: -10.790201187133789
    10. '(a' → logprob: -11.040201187133789

Token 18: ' /' (ID: 820)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.47854840755462646
    2. ' <=' → logprob: -1.2285484075546265
    3. ' ==' → logprob: -3.228548526763916
    4. ' ' → logprob: -4.228548526763916
    5. ' >=' → logprob: -4.478548526763916
    6. ' >' → logprob: -4.603548526763916
    7. '<' → logprob: -5.353548526763916
    8. ' %' → logprob: -5.728548526763916
    9. ')' → logprob: -6.978548526763916
    10. '<=' → logprob: -7.228548526763916

Token 19: ' (' (ID: 350)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.07720272243022919
    2. '(a' → logprob: -3.327202796936035
    3. '2' → logprob: -3.827202796936035
    4. ' (' → logprob: -5.202202796936035
    5. ' a' → logprob: -5.327202796936035
    6. 'b' → logprob: -5.702202796936035
    7. '(' → logprob: -6.827202796936035
    8. ' ' → logprob: -7.577202796936035
    9. '(x' → logprob: -7.827202796936035
    10. '(b' → logprob: -8.202202796936035

Token 20: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.08549787104129791
    2. '(a' → logprob: -2.8354978561401367
    3. '2' → logprob: -4.460497856140137
    4. ' a' → logprob: -5.835497856140137
    5. ' (' → logprob: -6.085497856140137
    6. '((' → logprob: -6.085497856140137
    7. 'b' → logprob: -6.210497856140137
    8. '(' → logprob: -7.335497856140137
    9. ' ' → logprob: -7.960497856140137
    10. 'math' → logprob: -8.085497856140137

Token 21: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6399961709976196
    2. ' *' → logprob: -0.7649961709976196
    3. '*b' → logprob: -5.01499605178833
    4. ')' → logprob: -8.139996528625488
    5. '**' → logprob: -8.639996528625488
    6. '*a' → logprob: -9.014996528625488
    7. ' ' → logprob: -9.764996528625488
    8. '/' → logprob: -10.639996528625488
    9. ' )' → logprob: -11.639996528625488
    10. '*t' → logprob: -11.639996528625488

Token 22: ' a' (ID: 261)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.013595313765108585
    2. 'a' → logprob: -4.513595104217529
    3. ' b' → logprob: -6.013595104217529
    4. ' a' → logprob: -9.888595581054688
    5. 'x' → logprob: -10.513595581054688
    6. '2' → logprob: -11.888595581054688
    7. ' ' → logprob: -12.388595581054688
    8. 'math' → logprob: -13.701095581054688
    9. '	b' → logprob: -13.826095581054688
    10. '*b' → logprob: -14.201095581054688

Token 23: ' *' (ID: 425)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009061814285814762
    2. '/' → logprob: -5.009061813354492
    3. ' /' → logprob: -7.509061813354492
    4. ' )' → logprob: -8.009061813354492
    5. ')>=' → logprob: -8.134061813354492
    6. ' <=' → logprob: -8.259061813354492
    7. ')<=' → logprob: -8.634061813354492
    8. '*' → logprob: -8.634061813354492
    9. ' >=' → logprob: -9.134061813354492
    10. '<=' → logprob: -9.259061813354492

Token 24: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.04837080091238022
    2. ' b' → logprob: -3.423370838165283
    3. ')' → logprob: -4.423370838165283
    4. '3' → logprob: -7.673370838165283
    5. 'math' → logprob: -7.923370838165283
    6. '/' → logprob: -7.923370838165283
    7. ')b' → logprob: -7.923370838165283
    8. 'a' → logprob: -8.048370361328125
    9. '2' → logprob: -8.423370361328125
    10. ' math' → logprob: -8.798370361328125

Token 25: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0028861870523542166
    2. ' )' → logprob: -6.0028862953186035
    3. ' <=' → logprob: -8.752885818481445
    4. '/' → logprob: -10.127885818481445
    5. ' >=' → logprob: -10.127885818481445
    6. ' <' → logprob: -10.252885818481445
    7. ')>=' → logprob: -10.502885818481445
    8. ')<=' → logprob: -10.877885818481445
    9. '<=' → logprob: -11.127885818481445
    10. ' /' → logprob: -11.127885818481445

Token 26: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.6779076457023621
    2. ' <' → logprob: -1.0529077053070068
    3. '<=' → logprob: -2.552907705307007
    4. '<' → logprob: -2.802907705307007
    5. ' >=' → logprob: -5.802907466888428
    6. '>=' → logprob: -7.427907466888428
    7. ' ==' → logprob: -7.552907466888428
    8. '==' → logprob: -8.302907943725586
    9. ' >' → logprob: -8.552907943725586
    10. '>' → logprob: -8.927907943725586

Token 27: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01345267053693533
    2. '1' → logprob: -5.013452529907227
    3. ' ' → logprob: -5.013452529907227
    4. '3' → logprob: -10.888452529907227
    5. 'math' → logprob: -10.888452529907227
    6. '2' → logprob: -11.763452529907227
    7. '(' → logprob: -11.888452529907227
    8. '4' → logprob: -12.013452529907227
    9. ' math' → logprob: -13.263452529907227
    10. ' ' → logprob: -13.638452529907227

Token 28: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.021613894030451775
    2. '1' → logprob: -3.896613836288452
    3. ' ' → logprob: -7.021614074707031
    4. 'a' → logprob: -9.271614074707031
    5. '(' → logprob: -9.521614074707031
    6. '(a' → logprob: -13.396614074707031
    7. '  ' → logprob: -13.521614074707031
    8. '   ' → logprob: -13.646614074707031
    9. 'b' → logprob: -13.896614074707031
    10. 'math' → logprob: -13.896614074707031

Token 29: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -8.578184497309849e-05
    2. ' .' → logprob: -10.000085830688477
    3. ':' → logprob: -10.625085830688477
    4. '.:' → logprob: -11.875085830688477
    5. ' ' → logprob: -13.000085830688477
    6. '1' → logprob: -13.375085830688477
    7. '0' → logprob: -14.000085830688477
    8. '.

' → logprob: -14.125085830688477
    9. '6' → logprob: -14.750085830688477
    10. '9' → logprob: -14.875085830688477

Token 30: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0007629302563145757
    2. '333' → logprob: -8.125762939453125
    3. '3' → logprob: -8.500762939453125
    4. '05' → logprob: -9.000762939453125
    5. '52' → logprob: -10.625762939453125
    6. '33' → logprob: -10.750762939453125
    7. '50' → logprob: -11.125762939453125
    8. '0' → logprob: -11.250762939453125
    9. '25' → logprob: -11.375762939453125
    10. '4' → logprob: -12.188262939453125

Token 31: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004541486850939691
    2. ' :' → logprob: -7.750453948974609
    3. ':
' → logprob: -10.75045394897461
    4. '):' → logprob: -14.37545394897461
    5. ':return' → logprob: -15.00045394897461
    6. ':

' → logprob: -15.12545394897461
    7. '>:' → logprob: -15.87545394897461
    8. '：' → logprob: -15.87545394897461
    9. ':**' → logprob: -16.00045394897461
    10. ',:' → logprob: -16.25045394897461

Token 32: '   ' (ID: 271)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5301780700683594
    2. ' \' → logprob: -1.6551780700683594
    3. 'print' → logprob: -2.7801780700683594
    4. '    ' → logprob: -2.9051780700683594
    5. '   ' → logprob: -3.6551780700683594
    6. ' ' → logprob: -4.155178070068359
    7. '\' → logprob: -4.405178070068359
    8. ' 
' → logprob: -5.030178070068359
    9. '     
' → logprob: -5.155178070068359
    10. ' print' → logprob: -5.405178070068359

Token 33: ' h' (ID: 312)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.43124890327453613
    2. 'print' → logprob: -1.0562489032745361
    3. '   ' → logprob: -7.181248664855957
    4. '    ' → logprob: -7.556248664855957
    5. ' y' → logprob: -7.931248664855957
    6. ' h' → logprob: -8.681248664855957
    7. '```' → logprob: -8.806248664855957
    8. 'import' → logprob: -9.431248664855957
    9. ' ' → logprob: -9.681248664855957
    10. '
' → logprob: -9.931248664855957

Token 34: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0059584262780845165
    2. '=' → logprob: -5.130958557128906
    3. ' ' → logprob: -11.505958557128906
    4. '   ' → logprob: -12.130958557128906
    5. '*' → logprob: -12.630958557128906
    6. ' *=' → logprob: -13.255958557128906
    7. 't' → logprob: -13.380958557128906
    8. '    ' → logprob: -13.380958557128906
    9. '  ' → logprob: -14.005958557128906
    10. '_' → logprob: -14.005958557128906

Token 35: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.12693724036216736
    2. '(' → logprob: -2.8769371509552
    3. '2' → logprob: -3.7519371509552
    4. '(x' → logprob: -4.001937389373779
    5. 'math' → logprob: -4.251937389373779
    6. '(math' → logprob: -5.626937389373779
    7. '3' → logprob: -6.376937389373779
    8. ' math' → logprob: -7.126937389373779
    9. ' (' → logprob: -7.626937389373779
    10. ' x' → logprob: -8.626936912536621

Token 36: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.1441687047481537
    2. ' /' → logprob: -2.0191686153411865
    3. '/(' → logprob: -6.769168853759766
    4. '*' → logprob: -9.644168853759766
    5. '/a' → logprob: -9.769168853759766
    6. '   ' → logprob: -10.019168853759766
    7. '    ' → logprob: -10.519168853759766
    8. '```' → logprob: -10.769168853759766
    9. '  ' → logprob: -11.144168853759766
    10. ' ' → logprob: -11.144168853759766

Token 37: ' (' (ID: 350)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0006439301068894565
    2. '(b' → logprob: -8.250643730163574
    3. '(' → logprob: -8.750643730163574
    4. ' (' → logprob: -9.000643730163574
    5. 'a' → logprob: -9.500643730163574
    6. '(ab' → logprob: -10.875643730163574
    7. '((' → logprob: -13.375643730163574
    8. '(abs' → logprob: -13.500643730163574
    9. 'b' → logprob: -13.500643730163574
    10. '(x' → logprob: -14.000643730163574

Token 38: 'a' (ID: 64)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.05526384711265564
    2. 'a' → logprob: -2.9302637577056885
    3. '(' → logprob: -8.80526351928711
    4. ' (' → logprob: -8.93026351928711
    5. '(b' → logprob: -9.80526351928711
    6. 'b' → logprob: -10.30526351928711
    7. ' a' → logprob: -11.93026351928711
    8. '(ab' → logprob: -13.55526351928711
    9. 'ab' → logprob: -15.18026351928711
    10. '(abs' → logprob: -15.43026351928711

Token 39: ' *' (ID: 425)
  Prédit: '*b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*b' → logprob: -0.4973841905593872
    2. '/b' → logprob: -2.1223840713500977
    3. ' *' → logprob: -2.3723840713500977
    4. '*' → logprob: -2.4973840713500977
    5. '/' → logprob: -2.8723840713500977
    6. ' /' → logprob: -3.8723840713500977
    7. 'b' → logprob: -4.247384071350098
    8. ')' → logprob: -6.122384071350098
    9. ' ' → logprob: -6.997384071350098
    10. ' b' → logprob: -7.122384071350098

Token 40: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00017314712749794126
    2. ' b' → logprob: -8.875173568725586
    3. 'a' → logprob: -10.500173568725586
    4. '*b' → logprob: -12.625173568725586
    5. '(b' → logprob: -14.500173568725586
    6. 'x' → logprob: -15.250173568725586
    7. '_b' → logprob: -15.500173568725586
    8. 'h' → logprob: -15.625173568725586
    9. '	b' → logprob: -15.625173568725586
    10. ')' → logprob: -15.750173568725586

Token 41: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008753073401749134
    2. ')
' → logprob: -4.758753299713135
    3. ')

' → logprob: -9.258752822875977
    4. ')
' → logprob: -10.258752822875977
    5. '*' → logprob: -13.133752822875977
    6. ' )' → logprob: -13.758752822875977
    7. ')a' → logprob: -13.758752822875977
    8. '2' → logprob: -14.133752822875977
    9. '<|end|>' → logprob: -14.383752822875977
    10. '   ' → logprob: -14.883752822875977

Token 42: ' *' (ID: 425)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.07181799411773682
    2. ' else' → logprob: -2.6968178749084473
    3. '<|end|>' → logprob: -6.696817874908447
    4. '
' → logprob: -7.821817874908447
    5. 'elif' → logprob: -9.821818351745605
    6. 'print' → logprob: -10.071818351745605
    7. '' → logprob: -11.196818351745605
    8. '
' → logprob: -11.196818351745605
    9. '<|end|>' → logprob: -11.321818351745605
    10. '*' → logprob: -11.446818351745605

Token 43: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.01822509989142418
    2. ' ' → logprob: -4.018225193023682
    3. '1' → logprob: -10.268224716186523
    4. ' /' → logprob: -11.518224716186523
    5. '*' → logprob: -12.143224716186523
    6. '4' → logprob: -12.143224716186523
    7. '/' → logprob: -12.143224716186523
    8. '(' → logprob: -12.393224716186523
    9. '3' → logprob: -12.893224716186523
    10. '0' → logprob: -13.393224716186523

Token 44: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0006392885115928948
    2. ' ' → logprob: -7.62563943862915
    3. '1' → logprob: -9.000638961791992
    4. '(' → logprob: -11.125638961791992
    5. '*' → logprob: -12.125638961791992
    6. '0' → logprob: -12.750638961791992
    7. '6' → logprob: -14.125638961791992
    8. ' /' → logprob: -14.250638961791992
    9. '/' → logprob: -14.375638961791992
    10. '4' → logprob: -14.750638961791992

Token 45: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.17527653276920319
    2. '
' → logprob: -2.550276517868042
    3. ' else' → logprob: -2.675276517868042
    4. '<|end|>' → logprob: -5.300276756286621
    5. '\n' → logprob: -5.800276756286621
    6. 'elif' → logprob: -6.675276756286621
    7. '
' → logprob: -6.800276756286621
    8. '  
' → logprob: -7.175276756286621
    9. '' → logprob: -8.175276756286621
    10. ' ' → logprob: -8.175276756286621

Token 46: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.15675413608551025
    2. ' else' → logprob: -2.5317540168762207
    3. '\n' → logprob: -3.1567540168762207
    4. '
' → logprob: -4.281754016876221
    5. 'print' → logprob: -5.531754016876221
    6. ':' → logprob: -6.781754016876221
    7. '    
' → logprob: -7.156754016876221
    8. '   ' → logprob: -7.406754016876221
    9. ' 
' → logprob: -7.531754016876221
    10. '\' → logprob: -7.656754016876221

Token 47: ' hy' (ID: 7537)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.24344392120838165
    2. 'else' → logprob: -2.2434439659118652
    3. '\n' → logprob: -2.3684439659118652
    4. ' print' → logprob: -4.868443965911865
    5. '   ' → logprob: -5.368443965911865
    6. ' else' → logprob: -6.118443965911865
    7. 'h' → logprob: -7.368443965911865
    8. '\' → logprob: -7.993443965911865
    9. ':' → logprob: -8.493443489074707
    10. '
' → logprob: -8.743443489074707

Token 48: '2' (ID: 17)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11723944544792175
    2. '=' → logprob: -2.242239475250244
    3. 'ght' → logprob: -6.492239475250244
    4. 'a' → logprob: -6.867239475250244
    5. 'e' → logprob: -8.242238998413086
    6. 'p' → logprob: -8.492238998413086
    7. 'f' → logprob: -8.492238998413086
    8. 'ight' → logprob: -8.617238998413086
    9. '   ' → logprob: -9.117238998413086
    10. ' ' → logprob: -9.117238998413086

Token 49: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3141603469848633
    2. '=' → logprob: -1.3141603469848633
    3. 'ght' → logprob: -8.314160346984863
    4. 't' → logprob: -9.189160346984863
    5. ' ' → logprob: -9.439160346984863
    6. 'p' → logprob: -9.564160346984863
    7. 'f' → logprob: -9.689160346984863
    8. 'x' → logprob: -10.439160346984863
    9. '-' → logprob: -10.564160346984863
    10. 'a' → logprob: -10.689160346984863

Token 50: ' h' (ID: 312)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8128658533096313
    2. ' a' → logprob: -1.3128658533096313
    3. 'h' → logprob: -1.9378658533096313
    4. ' h' → logprob: -2.187865734100342
    5. ' b' → logprob: -4.437865734100342
    6. 'b' → logprob: -4.687865734100342
    7. ' (' → logprob: -5.562865734100342
    8. ' ' → logprob: -6.312865734100342
    9. ' math' → logprob: -6.562865734100342
    10. '(' → logprob: -6.687865734100342

Token 51: ' *' (ID: 425)
  Prédit: ' /'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.9097719788551331
    2. '/' → logprob: -1.7847719192504883
    3. '<|end|>' → logprob: -1.7847719192504883
    4. 'else' → logprob: -2.2847719192504883
    5. ' else' → logprob: -2.7847719192504883
    6. '*' → logprob: -3.4097719192504883
    7. ' *' → logprob: -3.5347719192504883
    8. '**' → logprob: -4.409771919250488
    9. '2' → logprob: -5.159771919250488
    10. ' ' → logprob: -5.659771919250488

Token 52: ' h' (ID: 312)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.21634159982204437
    2. 'h' → logprob: -1.7163416147232056
    3. 'b' → logprob: -5.091341495513916
    4. ' a' → logprob: -5.341341495513916
    5. 'hy' → logprob: -6.591341495513916
    6. ' h' → logprob: -7.466341495513916
    7. 'y' → logprob: -7.591341495513916
    8. '2' → logprob: -7.966341495513916
    9. '(a' → logprob: -7.966341495513916
    10. '/' → logprob: -9.278841972351074

Token 53: ' +' (ID: 659)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 54: ' b' (ID: 287)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.33484429121017456
    2. 'b' → logprob: -1.3348443508148193
    3. ' a' → logprob: -4.33484411239624
    4. ' b' → logprob: -5.45984411239624
    5. ' (' → logprob: -6.58484411239624
    6. '(a' → logprob: -6.58484411239624
    7. '   ' → logprob: -8.209844589233398
    8. '(b' → logprob: -8.334844589233398
    9. '(' → logprob: -8.709844589233398
    10. ' ' → logprob: -8.959844589233398

Token 55: ' *' (ID: 425)
  Prédit: '*b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*b' → logprob: -0.5509034991264343
    2. '*' → logprob: -0.9259034991264343
    3. ' *' → logprob: -3.675903558731079
    4. '**' → logprob: -6.9259033203125
    5. '*a' → logprob: -6.9259033203125
    6. 'b' → logprob: -9.9259033203125
    7. '*h' → logprob: -10.0509033203125
    8. '*u' → logprob: -12.4259033203125
    9. '```' → logprob: -13.0509033203125
    10. ' ' → logprob: -13.5509033203125

Token 56: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5771774053573608
    2. '*' → logprob: -1.5771774053573608
    3. '*b' → logprob: -1.5771774053573608
    4. '2' → logprob: -4.07717752456665
    5. ' *' → logprob: -5.57717752456665
    6. ' b' → logprob: -6.32717752456665
    7. '*a' → logprob: -6.70217752456665
    8. 'a' → logprob: -7.45217752456665
    9. '**' → logprob: -7.82717752456665
    10. ' ' → logprob: -8.577177047729492

Token 57: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.33042120933532715
    2. '   ' → logprob: -1.5804212093353271
    3. '
' → logprob: -3.080421209335327
    4. ')' → logprob: -4.330421447753906
    5. ' else' → logprob: -4.705421447753906
    6. '    
' → logprob: -5.830421447753906
    7. '
' → logprob: -6.830421447753906
    8. '*' → logprob: -7.455421447753906
    9. ')
' → logprob: -7.580421447753906
    10. 'h' → logprob: -7.830421447753906

Token 58: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42070409655570984
    2. ')' → logprob: -2.4207041263580322
    3. '**' → logprob: -2.5457041263580322
    4. '
' → logprob: -3.4207041263580322
    5. '[' → logprob: -3.7957041263580322
    6. '*' → logprob: -3.9207041263580322
    7. 'h' → logprob: -4.545703887939453
    8. ' ' → logprob: -4.670703887939453
    9. ' *' → logprob: -4.795703887939453
    10. '    
' → logprob: -4.920703887939453

Token 59: ' cosa' (ID: 28958)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.49714770913124084
    2. 'import' → logprob: -2.122147798538208
    3. 'h' → logprob: -2.497147798538208
    4. ')' → logprob: -3.372147798538208
    5. ' /' → logprob: -3.497147798538208
    6. '**' → logprob: -3.872147798538208
    7. '*' → logprob: -4.497147560119629
    8. ' ' → logprob: -4.747147560119629
    9. ' *' → logprob: -4.997147560119629
    10. ' math' → logprob: -5.122147560119629

Token 60: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6933465003967285
    2. ' =' → logprob: -0.6933465003967285
    3. 'h' → logprob: -8.81834602355957
    4. '＝' → logprob: -11.31834602355957
    5. '=h' → logprob: -12.19334602355957
    6. ' ' → logprob: -12.19334602355957
    7. 's' → logprob: -12.56834602355957
    8. 'a' → logprob: -12.56834602355957
    9. '2' → logprob: -12.94334602355957
    10. 't' → logprob: -13.06834602355957

Token 61: ' (' (ID: 350)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.21970714628696442
    2. 'h' → logprob: -2.4697072505950928
    3. ' b' → logprob: -2.4697072505950928
    4. ' h' → logprob: -4.094707012176514
    5. 'a' → logprob: -4.844707012176514
    6. ' a' → logprob: -6.719707012176514
    7. ' math' → logprob: -7.469707012176514
    8. ' (' → logprob: -7.969707012176514
    9. '(h' → logprob: -7.969707012176514
    10. '   ' → logprob: -8.094707489013672

Token 62: 'hy' (ID: 18318)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.03735842928290367
    2. 'h' → logprob: -3.912358522415161
    3. 'a' → logprob: -4.412358283996582
    4. 'hy' → logprob: -6.037358283996582
    5. ' b' → logprob: -6.287358283996582
    6. ' h' → logprob: -8.912358283996582
    7. ' a' → logprob: -9.912358283996582
    8. '(h' → logprob: -10.787358283996582
    9. ' ' → logprob: -11.037358283996582
    10. '-' → logprob: -11.412358283996582

Token 63: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.981667537620524e-06
    2. '```' → logprob: -14.500001907348633
    3. ' ' → logprob: -15.500001907348633
    4. '²' → logprob: -15.812501907348633
    5. '۲' → logprob: -16.062501907348633
    6. '２' → logprob: -16.250001907348633
    7. '1' → logprob: -16.375001907348633
    8. '[' → logprob: -16.750001907348633
    9. '٢' → logprob: -16.937501907348633
    10. '**' → logprob: -17.000001907348633

Token 64: ' +' (ID: 659)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.38748130202293396
    2. '-' → logprob: -1.2624813318252563
    3. '**' → logprob: -4.512481212615967
    4. ' +' → logprob: -4.637481212615967
    5. ')' → logprob: -4.887481212615967
    6. '+' → logprob: -5.012481212615967
    7. ' ' → logprob: -6.387481212615967
    8. '/' → logprob: -8.012481689453125
    9. ' **' → logprob: -8.137481689453125
    10. ' /' → logprob: -8.137481689453125

Token 65: ' b' (ID: 287)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.19565095007419586
    2. ' a' → logprob: -2.445651054382324
    3. '(a' → logprob: -2.945651054382324
    4. ' (' → logprob: -3.445651054382324
    5. 'b' → logprob: -6.195651054382324
    6. '(' → logprob: -6.695651054382324
    7. ' b' → logprob: -6.945651054382324
    8. ' ' → logprob: -7.695651054382324
    9. '	a' → logprob: -7.945651054382324
    10. 'h' → logprob: -8.195651054382324

Token 66: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.07381810992956161
    2. '**' → logprob: -3.1988182067871094
    3. ' *' → logprob: -3.5738182067871094
    4. '*b' → logprob: -6.448818206787109
    5. '2' → logprob: -8.07381820678711
    6. '*h' → logprob: -9.07381820678711
    7. '*a' → logprob: -9.19881820678711
    8. '<|end|>' → logprob: -9.69881820678711
    9. ' **' → logprob: -9.82381820678711
    10. 'b' → logprob: -11.44881820678711

Token 67: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.2336760312318802
    2. '*' → logprob: -2.108675956726074
    3. '*b' → logprob: -2.608675956726074
    4. '**' → logprob: -4.983675956726074
    5. '2' → logprob: -6.108675956726074
    6. ' *' → logprob: -6.233675956726074
    7. ' b' → logprob: -6.733675956726074
    8. '*h' → logprob: -7.483675956726074
    9. 'hy' → logprob: -8.108675956726074
    10. ' ' → logprob: -10.483675956726074

Token 68: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6932218074798584
    2. ' -' → logprob: -0.6932218074798584
    3. ' ' → logprob: -10.318222045898438
    4. ')' → logprob: -10.693222045898438
    5. '```' → logprob: -11.943222045898438
    6. '+' → logprob: -13.568222045898438
    7. '   ' → logprob: -14.068222045898438
    8. '  ' → logprob: -14.068222045898438
    9. '-)' → logprob: -14.068222045898438
    10. '-(' → logprob: -14.443222045898438

Token 69: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.02469346858561039
    2. ' h' → logprob: -3.774693489074707
    3. 'a' → logprob: -7.149693489074707
    4. '(h' → logprob: -7.899693489074707
    5. ' a' → logprob: -9.649693489074707
    6. ' (' → logprob: -9.774693489074707
    7. '2' → logprob: -10.024693489074707
    8. '	h' → logprob: -10.274693489074707
    9. ' ' → logprob: -10.399693489074707
    10. '(' → logprob: -10.524693489074707

Token 70: ' *' (ID: 425)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19156016409397125
    2. '2' → logprob: -1.81656014919281
    3. ' )' → logprob: -4.8165602684021
    4. '*' → logprob: -6.3165602684021
    5. '**' → logprob: -7.5665602684021
    6. ' *' → logprob: -7.8165602684021
    7. ' ' → logprob: -8.316559791564941
    8. '²' → logprob: -8.316559791564941
    9. ')/(' → logprob: -8.816559791564941
    10. '*)' → logprob: -8.941559791564941

Token 71: ' h' (ID: 312)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.057425566017627716
    2. 'hy' → logprob: -2.9324254989624023
    3. 'b' → logprob: -6.432425498962402
    4. 'h' → logprob: -7.432425498962402
    5. '2' → logprob: -8.182425498962402
    6. ' hy' → logprob: -11.057425498962402
    7. 'a' → logprob: -11.182425498962402
    8. ' y' → logprob: -11.807425498962402
    9. 'yb' → logprob: -11.932425498962402
    10. '**' → logprob: -11.932425498962402

Token 72: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002163348253816366
    2. ')/(' → logprob: -6.377163410186768
    3. ' )' → logprob: -7.752163410186768
    4. ')/' → logprob: -11.50216293334961
    5. '-' → logprob: -12.50216293334961
    6. '**' → logprob: -12.75216293334961
    7. ')
' → logprob: -12.75216293334961
    8. ')**' → logprob: -13.50216293334961
    9. '）' → logprob: -13.62716293334961
    10. '<|end|>' → logprob: -13.75216293334961

Token 73: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.2672255039215088
    2. '/' → logprob: -2.267225503921509
    3. ')' → logprob: -2.392225503921509
    4. '**' → logprob: -4.14222526550293
    5. ')/(' → logprob: -5.14222526550293
    6. '/(' → logprob: -5.39222526550293
    7. ' **' → logprob: -5.76722526550293
    8. '<|end|>' → logprob: -6.14222526550293
    9. ' ' → logprob: -6.39222526550293
    10. '-' → logprob: -6.64222526550293

Token 74: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02105935662984848
    2. '2' → logprob: -3.896059274673462
    3. ' (' → logprob: -7.646059513092041
    4. ' ' → logprob: -10.396059036254883
    5. '(
' → logprob: -13.396059036254883
    6. '   ' → logprob: -13.521059036254883
    7. '.' → logprob: -13.521059036254883
    8. '```' → logprob: -14.396059036254883
    9. ',' → logprob: -14.646059036254883
    10. ')' → logprob: -14.771059036254883

Token 75: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0011387886479496956
    2. ' ' → logprob: -7.376138687133789
    3. '(' → logprob: -7.626138687133789
    4. '   ' → logprob: -12.251138687133789
    5. ')' → logprob: -12.376138687133789
    6. '-' → logprob: -13.001138687133789
    7. ' ' → logprob: -13.126138687133789
    8. '  ' → logprob: -13.188638687133789
    9. ' (' → logprob: -13.751138687133789
    10. '```' → logprob: -14.063638687133789

Token 76: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.07017005980014801
    2. '*' → logprob: -2.8201701641082764
    3. '*b' → logprob: -4.820169925689697
    4. '<|end|>' → logprob: -9.945170402526855
    5. ' ' → logprob: -10.445170402526855
    6. 'b' → logprob: -11.695170402526855
    7. '*a' → logprob: -12.320170402526855
    8. ' b' → logprob: -12.445170402526855
    9. ' ' → logprob: -13.195170402526855
    10. '    ' → logprob: -13.195170402526855

Token 77: ' (' (ID: 350)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.008417297154664993
    2. 'hy' → logprob: -4.883417129516602
    3. ' b' → logprob: -7.383417129516602
    4. 'a' → logprob: -9.258417129516602
    5. 'h' → logprob: -10.383417129516602
    6. '<|end|>' → logprob: -10.633417129516602
    7. ' hy' → logprob: -10.883417129516602
    8. '*b' → logprob: -12.008417129516602
    9. ' ' → logprob: -12.883417129516602
    10. 'bh' → logprob: -13.258417129516602

Token 78: 'hy' (ID: 18318)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0014007141580805182
    2. 'hy' → logprob: -6.751400947570801
    3. 'a' → logprob: -8.7514009475708
    4. ' b' → logprob: -9.7514009475708
    5. ')b' → logprob: -12.7514009475708
    6. 'h' → logprob: -12.8764009475708
    7. ' hy' → logprob: -12.8764009475708
    8. '```' → logprob: -13.7514009475708
    9. ')' → logprob: -13.8764009475708
    10. '<|end|>' → logprob: -14.3764009475708

Token 79: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.054500666621607e-06
    2. ' ' → logprob: -13.75000286102295
    3. '<|end|>' → logprob: -14.50000286102295
    4. '   ' → logprob: -14.87500286102295
    5. '*' → logprob: -15.12500286102295
    6. '  ' → logprob: -15.75000286102295
    7. '₂' → logprob: -16.125003814697266
    8. ' *' → logprob: -16.687503814697266
    9. '1' → logprob: -16.687503814697266
    10. 'b' → logprob: -16.750003814697266

Token 80: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.13959109783172607
    2. ' **' → logprob: -2.7645912170410156
    3. ')**' → logprob: -3.3895912170410156
    4. ')' → logprob: -3.5145912170410156
    5. ' ' → logprob: -6.264591217041016
    6. ' )' → logprob: -6.889591217041016
    7. ' ' → logprob: -8.264591217041016
    8. ' *' → logprob: -8.389591217041016
    9. '.sqrt' → logprob: -9.389591217041016
    10. '*' → logprob: -9.639591217041016

Token 81: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0012936893617734313
    2. 'b' → logprob: -7.001293659210205
    3. '.' → logprob: -8.376294136047363
    4. ' ' → logprob: -10.001294136047363
    5. '1' → logprob: -10.126294136047363
    6. ')' → logprob: -11.126294136047363
    7. ')b' → logprob: -11.501294136047363
    8. ' b' → logprob: -11.626294136047363
    9. '(' → logprob: -11.751294136047363
    10. '**' → logprob: -12.251294136047363

Token 82: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.289473822107539e-05
    2. '(' → logprob: -10.125062942504883
    3. '.' → logprob: -11.375062942504883
    4. ' ' → logprob: -11.625062942504883
    5. 'b' → logprob: -14.375062942504883
    6. '-' → logprob: -14.375062942504883
    7. '   ' → logprob: -14.750062942504883
    8. '**' → logprob: -15.250062942504883
    9. '(b' → logprob: -15.750062942504883
    10. '2' → logprob: -17.000062942504883

Token 83: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -4.842555426876061e-06
    2. '0' → logprob: -12.375004768371582
    3. '5' → logprob: -15.375004768371582
    4. '1' → logprob: -16.3750057220459
    5. ' ' → logprob: -17.3750057220459
    6. '```' → logprob: -17.3750057220459
    7. '2' → logprob: -17.7500057220459
    8. '**' → logprob: -18.1250057220459
    9. '.

' → logprob: -18.3750057220459
    10. '6' → logprob: -18.5000057220459

Token 84: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -5.073596548754722e-05
    2. '```' → logprob: -10.62505054473877
    3. '.' → logprob: -10.87505054473877
    4. '   ' → logprob: -13.50005054473877
    5. '``' → logprob: -13.87505054473877
    6. '0' → logprob: -14.43755054473877
    7. '**' → logprob: -14.75005054473877
    8. '4' → logprob: -15.50005054473877
    9. '25' → logprob: -15.56255054473877
    10. '3' → logprob: -15.68755054473877

Token 85: ')' (ID: 8)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5067022442817688
    2. ' *' → logprob: -1.506702184677124
    3. ')' → logprob: -1.756702184677124
    4. '*b' → logprob: -6.256702423095703
    5. '))' → logprob: -7.256702423095703
    6. ' )' → logprob: -8.131702423095703
    7. 'b' → logprob: -8.881702423095703
    8. ' ' → logprob: -9.381702423095703
    9. '   ' → logprob: -10.256702423095703
    10. ',' → logprob: -10.631702423095703

Token 86: ' *' (ID: 425)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003519086167216301
    2. ' )' → logprob: -8.500351905822754
    3. '*' → logprob: -9.250351905822754
    4. ')
' → logprob: -10.875351905822754
    5. 'a' → logprob: -11.000351905822754
    6. '*a' → logprob: -13.000351905822754
    7. ' ' → logprob: -13.250351905822754
    8. '+' → logprob: -13.375351905822754
    9. ')b' → logprob: -13.625351905822754
    10. ')*' → logprob: -13.750351905822754

Token 87: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.001504982472397387
    2. ' b' → logprob: -6.501504898071289
    3. 'a' → logprob: -13.376504898071289
    4. '(b' → logprob: -14.876504898071289
    5. '(' → logprob: -15.251504898071289
    6. '2' → logprob: -15.501504898071289
    7. ' ' → logprob: -16.00150489807129
    8. '	b' → logprob: -16.75150489807129
    9. '   ' → logprob: -17.00150489807129
    10. ' (' → logprob: -17.62650489807129

Token 88: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00026991849881596863
    2. ' )' → logprob: -8.250269889831543
    3. ')
' → logprob: -12.125269889831543
    4. ' ' → logprob: -14.500269889831543
    5. 'a' → logprob: -14.625269889831543
    6. '*' → logprob: -15.000269889831543
    7. '))' → logprob: -15.125269889831543
    8. '**' → logprob: -15.250269889831543
    9. ')b' → logprob: -15.625269889831543
    10. '）' → logprob: -15.750269889831543

Token 89: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.061570294201374054
    2. ':' → logprob: -4.436570167541504
    3. 'b' → logprob: -4.561570167541504
    4. '0' → logprob: -4.811570167541504
    5. ' ' → logprob: -5.061570167541504
    6. 'a' → logprob: -5.186570167541504
    7. '-' → logprob: -6.061570167541504
    8. '(' → logprob: -6.186570167541504
    9. 'c' → logprob: -6.311570167541504
    10. '*' → logprob: -6.561570167541504

Token 90: ' d' (ID: 272)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00959092564880848
    2. 'a' → logprob: -6.009591102600098
    3. '0' → logprob: -6.634591102600098
    4. 'b' → logprob: -6.759591102600098
    5. 'c' → logprob: -7.259591102600098
    6. '-' → logprob: -7.634591102600098
    7. ':' → logprob: -7.759591102600098
    8. 'h' → logprob: -7.884591102600098
    9. '(' → logprob: -8.009591102600098
    10. ' ' → logprob: -8.134591102600098

Token 91: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.574557363986969
    2. '=' → logprob: -1.4495573043823242
    3. 'e' → logprob: -1.9495573043823242
    4. 'ef' → logprob: -4.449557304382324
    5. ' ' → logprob: -4.699557304382324
    6. 'x' → logprob: -4.824557304382324
    7. 'o' → logprob: -4.949557304382324
    8. 'f' → logprob: -5.199557304382324
    9. 'a' → logprob: -5.699557304382324
    10. 'i' → logprob: -5.949557304382324

Token 92: ' ' (ID: 220)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.7893526554107666
    2. 'a' → logprob: -1.1643526554107666
    3. ' (' → logprob: -2.4143526554107666
    4. ' math' → logprob: -2.5393526554107666
    5. 'b' → logprob: -4.1643524169921875
    6. ' b' → logprob: -4.4143524169921875
    7. '(a' → logprob: -4.5393524169921875
    8. 'math' → logprob: -5.2893524169921875
    9. '(math' → logprob: -5.5393524169921875
    10. 'hy' → logprob: -5.7893524169921875

Token 93: '180' (ID: 7521)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.09563208371400833
    2. 'math' → logprob: -2.9706320762634277
    3. 'b' → logprob: -3.7206320762634277
    4. 'x' → logprob: -5.595632076263428
    5. ' math' → logprob: -5.720632076263428
    6. '(a' → logprob: -6.095632076263428
    7. ' a' → logprob: -6.595632076263428
    8. 'h' → logprob: -6.595632076263428
    9. '(math' → logprob: -6.845632076263428
    10. 'hy' → logprob: -7.345632076263428

Token 94: ' -' (ID: 533)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.08180232346057892
    2. '-' → logprob: -3.0818023681640625
    3. ' *' → logprob: -4.5818023681640625
    4. ' -' → logprob: -4.5818023681640625
    5. '/' → logprob: -5.5818023681640625
    6. ' /' → logprob: -6.0818023681640625
    7. 'import' → logprob: -6.5818023681640625
    8. ' ' → logprob: -6.5818023681640625
    9. '0' → logprob: -7.0818023681640625
    10. ')' → logprob: -7.0818023681640625

Token 95: ' math' (ID: 13324)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.07274307310581207
    2. ' math' → logprob: -2.6977431774139404
    3. '(math' → logprob: -5.947742938995361
    4. '180' → logprob: -9.19774341583252
    5. '(' → logprob: -10.57274341583252
    6. '90' → logprob: -10.94774341583252
    7. ' (' → logprob: -11.32274341583252
    8. 'c' → logprob: -12.32274341583252
    9. '/math' → logprob: -12.44774341583252
    10. '1' → logprob: -12.69774341583252

Token 96: '.de' (ID: 3906)
  Prédit: '.ac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ac' → logprob: -0.2554352581501007
    2. '.de' → logprob: -1.5054352283477783
    3. '.' → logprob: -5.755435466766357
    4. '.cos' → logprob: -8.7554349899292
    5. '.atan' → logprob: -8.8804349899292
    6. ' .' → logprob: -11.5054349899292
    7. '.as' → logprob: -11.5054349899292
    8. '.ceil' → logprob: -12.1304349899292
    9. '.c' → logprob: -12.6304349899292
    10. '.pi' → logprob: -12.7554349899292

Token 97: 'grees' (ID: 86997)
  Prédit: 'grees'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grees' → logprob: -0.6483546495437622
    2. 'g' → logprob: -1.2733546495437622
    3. 'gree' → logprob: -1.6483546495437622
    4. 'gr' → logprob: -6.898354530334473
    5. 'f' → logprob: -7.148354530334473
    6. 'r' → logprob: -7.273354530334473
    7. 'gress' → logprob: -8.023354530334473
    8. 'rg' → logprob: -8.273354530334473
    9. 'ng' → logprob: -8.398354530334473
    10. '```' → logprob: -8.523354530334473

Token 98: '(math' (ID: 86464)
  Prédit: '(math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(math' → logprob: -0.43051454424858093
    2. '(' → logprob: -1.1805145740509033
    3. '(c' → logprob: -3.1805145740509033
    4. '(Math' → logprob: -7.055514335632324
    5. '(os' → logprob: -9.555514335632324
    6. '(ar' → logprob: -9.555514335632324
    7. '(theta' → logprob: -10.805514335632324
    8. '("("' → logprob: -11.055514335632324
    9. '((' → logprob: -11.180514335632324
    10. '(angle' → logprob: -11.430514335632324

Token 99: '.ac' (ID: 25905)
  Prédit: '.ac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ac' → logprob: -0.00019221604452468455
    2. '.' → logprob: -9.250192642211914
    3. '.atan' → logprob: -9.750192642211914
    4. '.as' → logprob: -10.625192642211914
    5. '.cos' → logprob: -11.875192642211914
    6. '.c' → logprob: -12.750192642211914
    7. ').' → logprob: -13.000192642211914
    8. '.de' → logprob: -14.625192642211914
    9. ' .' → logprob: -16.000192642211914
    10. '.f' → logprob: -16.125192642211914

Token 100: 'os' (ID: 365)
  Prédit: 'os'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'os' → logprob: -0.48794883489608765
    2. 's' → logprob: -0.9879488348960876
    3. 'ss' → logprob: -4.987948894500732
    4. 'ls' → logprob: -6.112948894500732
    5. 'sc' → logprob: -6.987948894500732
    6. 'il' → logprob: -7.862948894500732
    7. '```' → logprob: -7.987948894500732
    8. 'es' → logprob: -8.112948417663574
    9. 'rs' → logprob: -8.612948417663574
    10. 'ns' → logprob: -8.862948417663574

Token 101: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.0010412635747343302
    2. '(' → logprob: -6.876041412353516
    3. ' (' → logprob: -12.751041412353516
    4. 'c' → logprob: -12.876041412353516
    5. '()' → logprob: -13.376041412353516
    6. ')c' → logprob: -15.001041412353516
    7. '(
' → logprob: -15.501041412353516
    8. ')' → logprob: -15.876041412353516
    9. '((' → logprob: -16.126041412353516
    10. '(C' → logprob: -16.376041412353516

Token 102: 'osa' (ID: 6935)
  Prédit: 'osa'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'osa' → logprob: -4.56102097814437e-05
    2. 'os' → logprob: -10.125045776367188
    3. 'o' → logprob: -13.500045776367188
    4. 'a' → logprob: -13.875045776367188
    5. 'оса' → logprob: -14.250045776367188
    6. 'onsa' → logprob: -14.375045776367188
    7. ')' → logprob: -14.875045776367188
    8. 'ossa' → logprob: -15.375045776367188
    9. 'sa' → logprob: -15.500045776367188
    10. '))' → logprob: -15.625045776367188

Token 103: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2014375925064087
    2. '))' → logprob: -1.7014375925064087
    3. ')))' → logprob: -10.701437950134277
    4. ' )' → logprob: -14.326437950134277
    5. ')
' → logprob: -15.326437950134277
    6. ' ' → logprob: -15.451437950134277
    7. '))
' → logprob: -15.701437950134277
    8. ' ))' → logprob: -16.07643699645996
    9. '),' → logprob: -16.57643699645996
    10. '))))' → logprob: -17.32643699645996

Token 104: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09628483653068542
    2. ' ' → logprob: -2.971284866333008
    3. ':' → logprob: -4.096284866333008
    4. '<|end|>' → logprob: -4.971284866333008
    5. '(' → logprob: -5.346284866333008
    6. '   ' → logprob: -6.471284866333008
    7. '=' → logprob: -6.721284866333008
    8. '+' → logprob: -6.971284866333008
    9. 'a' → logprob: -7.221284866333008
    10. ' 
' → logprob: -7.221284866333008

Token 105: ' ' (ID: 220)
  Prédit: '90'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '90' → logprob: -0.04153270646929741
    2. ' ' → logprob: -3.5415327548980713
    3. '45' → logprob: -5.166532516479492
    4. 'math' → logprob: -5.666532516479492
    5. ' math' → logprob: -6.291532516479492
    6. '180' → logprob: -7.791532516479492
    7. '0' → logprob: -9.166532516479492
    8. '135' → logprob: -10.041532516479492
    9. '1' → logprob: -10.416532516479492
    10. '   ' → logprob: -10.666532516479492

Token 106: '90' (ID: 2744)
  Prédit: '90'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '90' → logprob: -0.00459282286465168
    2. 'math' → logprob: -5.5045928955078125
    3. ' ' → logprob: -8.129592895507812
    4. '45' → logprob: -9.504592895507812
    5. ' math' → logprob: -9.754592895507812
    6. '180' → logprob: -10.004592895507812
    7. 'b' → logprob: -11.379592895507812
    8. '0' → logprob: -12.004592895507812
    9. '(math' → logprob: -12.254592895507812
    10. '   ' → logprob: -12.629592895507812

Token 107: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0109596261754632
    2. ' ' → logprob: -5.510959625244141
    3. ':' → logprob: -5.635959625244141
    4. ' )' → logprob: -7.510959625244141
    5. 'a' → logprob: -7.635959625244141
    6. '   ' → logprob: -7.635959625244141
    7. '(' → logprob: -8.01095962524414
    8. 'b' → logprob: -8.13595962524414
    9. '<|end|>' → logprob: -8.38595962524414
    10. '*' → logprob: -8.88595962524414

Token 108: 'else' (ID: 2807)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002626192755997181
    2. ' ' → logprob: -6.752626419067383
    3. '   ' → logprob: -8.377626419067383
    4. '<|end|>' → logprob: -8.502626419067383
    5. ' )' → logprob: -8.752626419067383
    6. 'a' → logprob: -8.877626419067383
    7. '(' → logprob: -9.377626419067383
    8. ':' → logprob: -9.377626419067383
    9. 'n' → logprob: -9.752626419067383
    10. 'else' → logprob: -10.002626419067383

Token 109: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03386329114437103
    2. ':
' → logprob: -3.4088633060455322
    3. '   ' → logprob: -8.658863067626953
    4. ' :' → logprob: -11.158863067626953
    5. ':
' → logprob: -11.408863067626953
    6. ' :
' → logprob: -11.908863067626953
    7. ':

' → logprob: -12.158863067626953
    8. '```' → logprob: -13.658863067626953
    9. '    ' → logprob: -14.158863067626953
    10. '):
' → logprob: -14.283863067626953

Token 110: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.49664783477783203
    2. ' h' → logprob: -1.121647834777832
    3. ' d' → logprob: -3.871647834777832
    4. '```' → logprob: -4.121647834777832
    5. ' b' → logprob: -4.746647834777832
    6. 'h' → logprob: -4.871647834777832
    7. ' a' → logprob: -5.371647834777832
    8. ' c' → logprob: -6.746647834777832
    9. ' s' → logprob: -7.121647834777832
    10. '    ' → logprob: -7.246647834777832

Token 111: ' rest' (ID: 2867)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5158525705337524
    2. ' d' → logprob: -2.140852451324463
    3. 'angle' → logprob: -3.015852451324463
    4. 'c' → logprob: -3.015852451324463
    5. 'h' → logprob: -3.265852451324463
    6. 'b' → logprob: -3.515852451324463
    7. 'import' → logprob: -3.890852451324463
    8. '   ' → logprob: -3.890852451324463
    9. 'theta' → logprob: -4.140852451324463
    10. 'a' → logprob: -4.390852451324463

Token 112: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.41442108154296875
    2. ' =' → logprob: -1.1644210815429688
    3. '_volume' → logprob: -3.7894210815429688
    4. '_area' → logprob: -7.164421081542969
    5. 'volume' → logprob: -7.414421081542969
    6. '   ' → logprob: -7.539421081542969
    7. 'a' → logprob: -7.664421081542969
    8. '_x' → logprob: -7.914421081542969
    9. 'h' → logprob: -8.414421081542969
    10. 'Volume' → logprob: -8.539421081542969

Token 113: ' (' (ID: 350)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3545668125152588
    2. '(a' → logprob: -1.3545668125152588
    3. ' (' → logprob: -4.22956657409668
    4. ' a' → logprob: -4.35456657409668
    5. 'x' → logprob: -5.22956657409668
    6. '(' → logprob: -6.22956657409668
    7. '((' → logprob: -6.72956657409668
    8. '(b' → logprob: -7.10456657409668
    9. '(x' → logprob: -7.10456657409668
    10. ' ' → logprob: -7.35456657409668

Token 114: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.008642347529530525
    2. '2' → logprob: -5.508642196655273
    3. '(a' → logprob: -6.133642196655273
    4. 'x' → logprob: -6.258642196655273
    5. 'b' → logprob: -8.758642196655273
    6. '(' → logprob: -9.258642196655273
    7. ' a' → logprob: -9.383642196655273
    8. '   ' → logprob: -10.383642196655273
    9. '3' → logprob: -10.758642196655273
    10. '1' → logprob: -10.883642196655273

Token 115: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.058622997254133224
    2. ' *' → logprob: -3.1836230754852295
    3. '**' → logprob: -4.30862283706665
    4. '*b' → logprob: -6.68362283706665
    5. '3' → logprob: -8.433623313903809
    6. '*a' → logprob: -8.683623313903809
    7. ' **' → logprob: -8.933623313903809
    8. ' ' → logprob: -9.308623313903809
    9. ')' → logprob: -9.808623313903809
    10. 'b' → logprob: -10.683623313903809

Token 116: ' a' (ID: 261)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.4741176962852478
    2. 'a' → logprob: -0.9741176962852478
    3. ' b' → logprob: -10.849117279052734
    4. ' a' → logprob: -11.599117279052734
    5. '(a' → logprob: -12.599117279052734
    6. '(' → logprob: -12.849117279052734
    7. '(b' → logprob: -13.349117279052734
    8. '   ' → logprob: -14.099117279052734
    9. '	a' → logprob: -14.224117279052734
    10. '	b' → logprob: -14.349117279052734

Token 117: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0600120835006237
    2. ' *' → logprob: -2.935012102127075
    3. ')' → logprob: -6.435011863708496
    4. '*b' → logprob: -6.685011863708496
    5. ' -' → logprob: -6.810011863708496
    6. '-' → logprob: -7.060011863708496
    7. 'b' → logprob: -8.810011863708496
    8. ' ' → logprob: -8.935011863708496
    9. '/' → logprob: -12.060011863708496
    10. ' b' → logprob: -12.685011863708496

Token 118: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00045926711754873395
    2. ' b' → logprob: -8.750459671020508
    3. 'x' → logprob: -9.375459671020508
    4. '(b' → logprob: -9.500459671020508
    5. 'a' → logprob: -9.750459671020508
    6. '(' → logprob: -10.000459671020508
    7. '(a' → logprob: -10.625459671020508
    8. ')' → logprob: -11.875459671020508
    9. ' (' → logprob: -13.625459671020508
    10. '3' → logprob: -13.750459671020508

Token 119: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5876563191413879
    2. ' -' → logprob: -0.8376563191413879
    3. ')' → logprob: -4.462656497955322
    4. '*' → logprob: -9.712656021118164
    5. ' ' → logprob: -10.587656021118164
    6. '   ' → logprob: -11.587656021118164
    7. ')-' → logprob: -12.337656021118164
    8. ' )' → logprob: -12.837656021118164
    9. ')/' → logprob: -13.212656021118164
    10. '+' → logprob: -13.212656021118164

Token 120: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0008046258008107543
    2. ' x' → logprob: -7.125804424285889
    3. '(x' → logprob: -17.375804901123047
    4. '   ' → logprob: -17.750804901123047
    5. '	x' → logprob: -17.750804901123047
    6. '(' → logprob: -18.375804901123047
    7. ')x' → logprob: -18.500804901123047
    8. ' ' → logprob: -18.500804901123047
    9. ' (' → logprob: -18.500804901123047
    10. ')' → logprob: -19.125804901123047

Token 121: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003476209531072527
    2. ' )' → logprob: -8.125348091125488
    3. ')/' → logprob: -10.125348091125488
    4. ')
' → logprob: -12.625348091125488
    5. ' ' → logprob: -12.625348091125488
    6. '   ' → logprob: -13.125348091125488
    7. ')/(' → logprob: -13.875348091125488
    8. '）' → logprob: -14.625348091125488
    9. ')

' → logprob: -14.875348091125488
    10. '))' → logprob: -15.875348091125488

Token 122: ' /' (ID: 820)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1298365592956543
    2. '/' → logprob: -1.3798365592956543
    3. ' /' → logprob: -1.3798365592956543
    4. '=' → logprob: -2.3798365592956543
    5. '
' → logprob: -3.0048365592956543
    6. ')' → logprob: -5.004836559295654
    7. 'd' → logprob: -5.379836559295654
    8. 'h' → logprob: -5.754836559295654
    9. ',' → logprob: -5.754836559295654
    10. '/
' → logprob: -6.254836559295654

Token 123: ' a' (ID: 261)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.011200725100934505
    2. 'a' → logprob: -5.511200904846191
    3. ' (' → logprob: -5.636200904846191
    4. '(' → logprob: -5.761200904846191
    5. '(b' → logprob: -8.136200904846191
    6. '(float' → logprob: -10.511200904846191
    7. '((' → logprob: -11.011200904846191
    8. 'b' → logprob: -11.636200904846191
    9. ' a' → logprob: -12.261200904846191
    10. '(math' → logprob: -12.261200904846191

Token 124: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5718390345573425
    2. ' /' → logprob: -1.3218390941619873
    3. '
' → logprob: -3.0718390941619873
    4. 'b' → logprob: -3.1968390941619873
    5. '/' → logprob: -3.6968390941619873
    6. '*' → logprob: -3.6968390941619873
    7. ' *' → logprob: -4.696838855743408
    8. ' ' → logprob: -5.446838855743408
    9. 'd' → logprob: -5.696838855743408
    10. '/b' → logprob: -5.946838855743408

Token 125: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010873900726437569
    2. '
' → logprob: -4.760873794555664
    3. 'import' → logprob: -6.760873794555664
    4. 'd' → logprob: -7.635873794555664
    5. '    
' → logprob: -8.010873794555664
    6. 'c' → logprob: -9.510873794555664
    7. '```' → logprob: -10.010873794555664
    8. 'a' → logprob: -10.885873794555664
    9. '       ' → logprob: -11.010873794555664
    10. 'angle' → logprob: -11.260873794555664

Token 126: ' tan' (ID: 8323)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.027487222105264664
    2. 'import' → logprob: -4.527487277984619
    3. 'angle' → logprob: -5.277487277984619
    4. '   ' → logprob: -5.402487277984619
    5. 'c' → logprob: -6.027487277984619
    6. 'b' → logprob: -6.652487277984619
    7. ' d' → logprob: -6.902487277984619
    8. 'ang' → logprob: -7.277487277984619
    9. 'math' → logprob: -7.652487277984619
    10. 'a' → logprob: -8.152486801147461

Token 127: ' =' (ID: 314)
  Prédit: 'theta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'theta' → logprob: -1.2321443557739258
    2. '_theta' → logprob: -1.2321443557739258
    3. 'gle' → logprob: -1.8571443557739258
    4. '=' → logprob: -2.732144355773926
    5. ' =' → logprob: -3.232144355773926
    6. 'g' → logprob: -3.232144355773926
    7. 'heta' → logprob: -3.357144355773926
    8. '_angle' → logprob: -3.982144355773926
    9. 'angle' → logprob: -4.107144355773926
    10. 'math' → logprob: -4.482144355773926

Token 128: ' rest' (ID: 2867)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.8103950619697571
    2. 'rest' → logprob: -1.4353950023651123
    3. '(' → logprob: -1.9353950023651123
    4. '2' → logprob: -2.5603950023651123
    5. '(b' → logprob: -3.0603950023651123
    6. '(rest' → logprob: -3.0603950023651123
    7. '((' → logprob: -6.560395240783691
    8. '(a' → logprob: -8.685395240783691
    9. 'math' → logprob: -9.435395240783691
    10. ' rest' → logprob: -9.435395240783691

Token 129: ' *' (ID: 425)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '/' → logprob: -0.30125942826271057
    2. ' /' → logprob: -1.4262593984603882
    3. '/b' → logprob: -3.9262595176696777
    4. 'b' → logprob: -10.05125904083252
    5. '/a' → logprob: -10.05125904083252
    6. '(' → logprob: -10.80125904083252
    7. '/
' → logprob: -11.17625904083252
    8. ' /
' → logprob: -11.17625904083252
    9. ')' → logprob: -11.42625904083252
    10. ' ' → logprob: -11.55125904083252

Token 130: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3178473711013794
    2. '1' → logprob: -1.8178473711013794
    3. '/' → logprob: -2.81784725189209
    4. ' ' → logprob: -3.81784725189209
    5. ' /' → logprob: -4.44284725189209
    6. '/b' → logprob: -5.31784725189209
    7. '/a' → logprob: -5.56784725189209
    8. '(' → logprob: -6.06784725189209
    9. 'b' → logprob: -6.44284725189209
    10. '.' → logprob: -6.81784725189209

Token 131: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.07823397219181061
    2. '1' → logprob: -2.8282339572906494
    3. ' ' → logprob: -4.4532341957092285
    4. '(' → logprob: -6.7032341957092285
    5. '*' → logprob: -6.7032341957092285
    6. '/' → logprob: -7.7032341957092285
    7. 'b' → logprob: -7.8282341957092285
    8. '.' → logprob: -8.20323371887207
    9. '180' → logprob: -8.70323371887207
    10. '-' → logprob: -8.82823371887207

Token 132: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.48057612776756287
    2. ' /' → logprob: -0.9805761575698853
    3. '/b' → logprob: -5.105576038360596
    4. '/a' → logprob: -8.355576515197754
    5. 'b' → logprob: -9.605576515197754
    6. '/
' → logprob: -10.230576515197754
    7. 'a' → logprob: -10.730576515197754
    8. '
' → logprob: -11.230576515197754
    9. '/(' → logprob: -11.730576515197754
    10. ' /
' → logprob: -11.980576515197754

Token 133: ' (' (ID: 350)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0015395039226859808
    2. 'a' → logprob: -6.751539707183838
    3. ' b' → logprob: -8.37653923034668
    4. '(b' → logprob: -9.12653923034668
    5. '(a' → logprob: -10.50153923034668
    6. ' (' → logprob: -14.00153923034668
    7. '(' → logprob: -14.00153923034668
    8. ' a' → logprob: -14.25153923034668
    9. '	b' → logprob: -15.25153923034668
    10. '_b' → logprob: -15.87653923034668

Token 134: 'a' (ID: 64)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.001202254556119442
    2. ' b' → logprob: -7.37620210647583
    3. 'a' → logprob: -7.50120210647583
    4. '(b' → logprob: -10.876202583312988
    5. '(a' → logprob: -13.376202583312988
    6. '	b' → logprob: -13.876202583312988
    7. ' a' → logprob: -14.376202583312988
    8. ')b' → logprob: -14.376202583312988
    9. ' (' → logprob: -15.626202583312988
    10. '(' → logprob: -15.751202583312988

Token 135: ' *' (ID: 425)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03466608375310898
    2. '**' → logprob: -3.909666061401367
    3. '/b' → logprob: -4.784666061401367
    4. '/' → logprob: -6.409666061401367
    5. '*b' → logprob: -7.159666061401367
    6. ')b' → logprob: -7.159666061401367
    7. ')**' → logprob: -7.534666061401367
    8. '<|end|>' → logprob: -7.659666061401367
    9. 'b' → logprob: -7.784666061401367
    10. ' )' → logprob: -8.034666061401367

Token 136: ' a' (ID: 261)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.000990176573395729
    2. ' b' → logprob: -7.625990390777588
    3. 'a' → logprob: -7.750990390777588
    4. ')' → logprob: -10.37598991394043
    5. '**' → logprob: -11.00098991394043
    6. '*b' → logprob: -11.12598991394043
    7. '2' → logprob: -12.00098991394043
    8. '*' → logprob: -14.12598991394043
    9. ' ' → logprob: -14.25098991394043
    10. ' a' → logprob: -14.62598991394043

Token 137: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14433762431144714
    2. ')
' → logprob: -2.0193376541137695
    3. '   ' → logprob: -6.7693376541137695
    4. '
' → logprob: -8.64433765411377
    5. ')

' → logprob: -8.64433765411377
    6. ')
' → logprob: -9.26933765411377
    7. ' ' → logprob: -11.51933765411377
    8. '*' → logprob: -11.51933765411377
    9. ' )' → logprob: -11.76933765411377
    10. ')**' → logprob: -11.89433765411377

Token 138: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06197340786457062
    2. '\n' → logprob: -3.3119733333587646
    3. '   ' → logprob: -4.186973571777344
    4. ')' → logprob: -6.061973571777344
    5. 'd' → logprob: -6.186973571777344
    6. 'import' → logprob: -6.436973571777344
    7. ')
' → logprob: -7.311973571777344
    8. '
' → logprob: -8.061973571777344
    9. '    
' → logprob: -8.311973571777344
    10. 'print' → logprob: -8.561973571777344

Token 139: ' d' (ID: 272)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.11279365420341492
    2. 'angle' → logprob: -2.8627936840057373
    3. '   ' → logprob: -4.112793445587158
    4. 'd' (adapté à ' d') → logprob: -4.237793445587158
    5. 'math' → logprob: -4.737793445587158
    6. ' import' → logprob: -5.987793445587158
    7. 'from' → logprob: -6.237793445587158
    8. ' angle' → logprob: -6.487793445587158
    9. ' math' → logprob: -6.987793445587158
    10. 'print' → logprob: -7.487793445587158

Token 140: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020720958709717
    2. '=' → logprob: -2.3502073287963867
    3. ' ' → logprob: -15.725207328796387
    4. '＝' → logprob: -16.22520637512207
    5. ' =
' → logprob: -16.47520637512207
    6. ',' → logprob: -17.22520637512207
    7. '.' → logprob: -17.22520637512207
    8. ' =)' → logprob: -17.60020637512207
    9. '=

' → logprob: -17.85020637512207
    10. ' ' → logprob: -17.97520637512207

Token 141: ' math' (ID: 13324)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.020719269290566444
    2. ' math' → logprob: -3.895719289779663
    3. '180' → logprob: -9.145719528198242
    4. '   ' → logprob: -10.270719528198242
    5. '90' → logprob: -11.145719528198242
    6. '(math' → logprob: -11.270719528198242
    7. ' ' → logprob: -12.145719528198242
    8. '  ' → logprob: -13.895719528198242
    9. 'mat' → logprob: -14.645719528198242
    10. '    ' → logprob: -14.645719528198242

Token 142: '.de' (ID: 3906)
  Prédit: '.de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.de' → logprob: -0.018167270347476006
    2. '.atan' → logprob: -4.018167495727539
    3. '.' → logprob: -11.018167495727539
    4. ' degrees' → logprob: -14.893167495727539
    5. 'degrees' → logprob: -15.393167495727539
    6. ' .' → logprob: -15.393167495727539
    7. '	de' → logprob: -16.39316749572754
    8. 'Degrees' → logprob: -16.76816749572754
    9. '_de' → logprob: -16.89316749572754
    10. '.at' → logprob: -17.51816749572754

Token 143: 'grees' (ID: 86997)
  Prédit: 'grees'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grees' → logprob: -3.292907877039397e-06
    2. 'g' → logprob: -13.00000286102295
    3. 'rees' → logprob: -14.62500286102295
    4. 'gres' → logprob: -15.25000286102295
    5. 'gress' → logprob: -15.87500286102295
    6. 'gr' → logprob: -16.250003814697266
    7. 'gre' → logprob: -17.250003814697266
    8. 'degrees' → logprob: -17.750003814697266
    9. 'gree' → logprob: -19.125003814697266
    10. 'd' → logprob: -19.250003814697266

Token 144: '(math' (ID: 86464)
  Prédit: '(math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(math' → logprob: -4.024604277219623e-05
    2. 'math' → logprob: -10.250040054321289
    3. '(' → logprob: -12.500040054321289
    4. ' math' → logprob: -14.250040054321289
    5. ' (' → logprob: -15.000040054321289
    6. '```' → logprob: -17.12504005432129
    7. '(m' → logprob: -17.62504005432129
    8. '(Math' → logprob: -18.12504005432129
    9. '(mat' → logprob: -18.25004005432129
    10. '2' → logprob: -18.62504005432129

Token 145: '.atan' (ID: 157113)
  Prédit: '.atan'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.atan' → logprob: -2.6895233531831764e-05
    2. '.' → logprob: -10.62502670288086
    3. ').' → logprob: -14.25002670288086
    4. '.ac' → logprob: -14.37502670288086
    5. '.de' → logprob: -14.75002670288086
    6. ' .' → logprob: -15.25002670288086
    7. '.t' → logprob: -15.37502670288086
    8. 'atan' → logprob: -15.87502670288086
    9. '.as' → logprob: -15.87502670288086
    10. '.f' → logprob: -16.50002670288086

Token 146: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.018894074484705925
    2. ' (' → logprob: -4.018894195556641
    3. '(' → logprob: -7.268894195556641
    4. ')(' → logprob: -10.64389419555664
    5. ')' → logprob: -11.76889419555664
    6. '(s' → logprob: -11.89389419555664
    7. '((' → logprob: -12.39389419555664
    8. '(d' → logprob: -14.14389419555664
    9. ' `(' → logprob: -14.26889419555664
    10. ' tan' → logprob: -15.01889419555664

Token 147: 'an' (ID: 270)
  Prédit: 'an'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'an' → logprob: -0.018847880885004997
    2. 'a' → logprob: -4.018847942352295
    3. 'ans' → logprob: -8.143847465515137
    4. 'd' → logprob: -9.143847465515137
    5. 'ab' → logprob: -9.518847465515137
    6. 'tan' → logprob: -9.768847465515137
    7. '2' → logprob: -10.768847465515137
    8. ')' → logprob: -11.018847465515137
    9. 'ang' → logprob: -11.143847465515137
    10. 'r' → logprob: -11.143847465515137

Token 148: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5759931206703186
    2. '))' → logprob: -0.8259931206703186
    3. ')))' → logprob: -10.450993537902832
    4. '())' → logprob: -11.200993537902832
    5. '()))' → logprob: -12.825993537902832
    6. '()' → logprob: -13.200993537902832
    7. '))
' → logprob: -13.325993537902832
    8. ' )' → logprob: -13.450993537902832
    9. ')
' → logprob: -13.700993537902832
    10. '(' → logprob: -14.325993537902832

Token 149: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4762255549430847
    2. ')' → logprob: -0.9762255549430847
    3. '(' → logprob: -6.60122537612915
    4. '(print' → logprob: -8.101225852966309
    5. ' print' → logprob: -8.226225852966309
    6. '()' → logprob: -9.976225852966309
    7. 'd' → logprob: -10.226225852966309
    8. ')
' → logprob: -10.726225852966309
    9. '#' → logprob: -10.726225852966309
    10. ',' → logprob: -11.101225852966309

Token 150: '(d' (ID: 2572)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7823277115821838
    2. '(d' → logprob: -1.032327651977539
    3. '(round' → logprob: -1.782327651977539
    4. '(f' → logprob: -4.157327651977539
    5. '(math' → logprob: -6.157327651977539
    6. '(int' → logprob: -7.782327651977539
    7. '(angle' → logprob: -11.282327651977539
    8. '(
' → logprob: -11.532327651977539
    9. ' (' → logprob: -12.157327651977539
    10. '((' → logprob: -12.282327651977539

Token 151: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. '))' → logprob: -14.875000953674316
    3. ' )' → logprob: -15.250000953674316
    4. ')`' → logprob: -16.625
    5. '())' → logprob: -17.0
    6. '()' → logprob: -17.5
    7. ')
' → logprob: -18.25
    8. ')#' → logprob: -18.875
    9. ')")' → logprob: -18.875
    10. '(' → logprob: -19.125


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 149
Tokens correctement prédits (1ère position, stricte): 46
Tokens correctement prédits (1ère position, avec adaptation): 46
Tokens correctement prédits (top 10): 124
Précision stricte (1ère position): 30.87%
Précision adaptée (1ère position): 30.87%
Précision (top 10): 83.22%
================================================================================
