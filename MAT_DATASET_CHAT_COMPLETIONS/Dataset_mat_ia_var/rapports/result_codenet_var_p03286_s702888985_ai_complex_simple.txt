================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:11:46
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce
from itertools import count, takewhile

def solve(n):
    f = lambda acc, t: (
        acc[0] + (
            '1' if ((acc[1] & 1) ^ acc[2]) else '0'
        ),
        (
            acc[2] ^ 1 if ((acc[1] & 1) ^ acc[2]) and ((acc[3] ^ acc[2])) else acc[2]
        ),
        acc[1] >> 1,
        acc[3] ^ 1
    )
    if n == 0:
        return '0'
    bits = takewhile(lambda x: x[1] + x[2], zip(count(), [n]*200, [0]*200, [0]*200))
    out = reduce(
        f,
        bits,
        ('', n, 0, 0)
    )[0]
    return out[::-1][:len(bin(n))-2] if n else '0'

n = int(input())
print(solve(n))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'partial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'partial' → logprob: -0.6123510599136353
    2. 'wrap' → logprob: -0.8623510599136353
    3. 'reduce' → logprob: -3.4873509407043457
    4. 'l' → logprob: -6.112350940704346
    5. ' wraps' → logprob: -6.362350940704346
    6. 'cached' → logprob: -7.612350940704346
    7. 'cache' → logprob: -7.987350940704346
    8. 'cmp' → logprob: -9.112351417541504
    9. '```' → logprob: -9.237351417541504
    10. ' partial' → logprob: -9.487351417541504

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010288605466485023
    2. '(lambda' → logprob: -4.760288715362549
    3. ' (' → logprob: -7.385288715362549
    4. ',' → logprob: -7.885288715362549
    5. 'def' → logprob: -8.13528823852539
    6. '.' → logprob: -8.76028823852539
    7. '```' → logprob: -10.13528823852539
    8. '(
' → logprob: -10.51028823852539
    9. 'lambda' → logprob: -10.63528823852539
    10. 'a' → logprob: -10.76028823852539

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014403714798390865
    2. '(
' → logprob: -5.139403820037842
    3. '(lambda' → logprob: -5.389403820037842
    4. 'def' → logprob: -6.639403820037842
    5. ',' → logprob: -7.139403820037842
    6. '\' → logprob: -8.139403343200684
    7. ' ' → logprob: -8.264403343200684
    8. ' (' → logprob: -8.389403343200684
    9. '
' → logprob: -9.139403343200684
    10. '' → logprob: -9.139403343200684

Token 6: ' itertools' (ID: 103178)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.40235817432403564
    2. ' operator' → logprob: -2.027358055114746
    3. ' itertools' → logprob: -2.277358055114746
    4. ' collections' → logprob: -2.527358055114746
    5. ' os' → logprob: -4.152358055114746
    6. 'operator' → logprob: -7.277358055114746
    7. 'math' → logprob: -8.027358055114746
    8. ' sys' → logprob: -8.902358055114746
    9. 'collections' → logprob: -9.027358055114746
    10. ' ' → logprob: -9.527358055114746

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.6086577773094177
    2. 'import' → logprob: -0.8586577773094177
    3. '.' → logprob: -3.4836578369140625
    4. '.import' → logprob: -6.7336578369140625
    5. ' .' → logprob: -9.358657836914062
    6. '	import' → logprob: -9.733657836914062
    7. '.im' → logprob: -10.108657836914062
    8. '_import' → logprob: -10.483657836914062
    9. ' ' → logprob: -10.483657836914062
    10. '<|end|>' → logprob: -11.358657836914062

Token 8: ' count' (ID: 3605)
  Prédit: ' group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' group' → logprob: -0.6939145922660828
    2. 'group' → logprob: -1.8189146518707275
    3. 'acc' → logprob: -2.5689146518707275
    4. 'count' → logprob: -2.6939146518707275
    5. ' cycle' → logprob: -2.8189146518707275
    6. ' accumulate' → logprob: -3.3189146518707275
    7. 'cycle' → logprob: -3.4439146518707275
    8. ' chain' → logprob: -3.5689146518707275
    9. 'chain' → logprob: -4.068914413452148
    10. ' count' → logprob: -5.068914413452148

Token 9: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.016301799565553665
    2. '\n' → logprob: -5.01630163192749
    3. '\' → logprob: -5.51630163192749
    4. '(
' → logprob: -5.76630163192749
    5. ',' → logprob: -7.39130163192749
    6. 'for' → logprob: -7.89130163192749
    7. 'def' → logprob: -8.391302108764648
    8. '.' → logprob: -8.641302108764648
    9. '```' → logprob: -9.016302108764648
    10. ':' → logprob: -9.141302108764648

Token 10: ' take' (ID: 2304)
  Prédit: ' cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cycle' → logprob: -0.3355502486228943
    2. 'cycle' → logprob: -1.460550308227539
    3. 'take' → logprob: -4.585550308227539
    4. ' take' → logprob: -4.710550308227539
    5. ' accumulate' → logprob: -5.085550308227539
    6. 'acc' → logprob: -5.210550308227539
    7. ' chain' → logprob: -5.210550308227539
    8. ' is' → logprob: -5.335550308227539
    9. 'chain' → logprob: -5.585550308227539
    10. ' drop' → logprob: -6.460550308227539

Token 11: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0007435183506458998
    2. '_' → logprob: -7.625743389129639
    3. 'While' → logprob: -9.500743865966797
    4. 'n' → logprob: -10.000743865966797
    5. 'w' → logprob: -10.500743865966797
    6. 'wh' → logprob: -11.000743865966797
    7. 'import' → logprob: -11.000743865966797
    8. 'hile' → logprob: -11.125743865966797
    9. 'exact' → logprob: -11.250743865966797
    10. '```' → logprob: -11.500743865966797

Token 12: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004461450967937708
    2. '(
' → logprob: -5.754461288452148
    3. ',' → logprob: -7.504461288452148
    4. '\' → logprob: -8.004461288452148
    5. '.' → logprob: -9.004461288452148
    6. 'def' → logprob: -9.754461288452148
    7. '\(' → logprob: -9.879461288452148
    8. '\n' → logprob: -10.379461288452148
    9. '(lambda' → logprob: -10.504461288452148
    10. '#' → logprob: -11.004461288452148

Token 13: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.020791197195649147
    2. '(
' → logprob: -4.520791053771973
    3. 'def' → logprob: -5.145791053771973
    4. '\' → logprob: -7.520791053771973
    5. 'd' → logprob: -7.645791053771973
    6. '\n' → logprob: -7.770791053771973
    7. '.' → logprob: -7.895791053771973
    8. ',' → logprob: -8.020791053771973
    9. '(lambda' → logprob: -8.145791053771973
    10. '`' → logprob: -8.270791053771973

Token 14: ' solve' (ID: 17722)
  Prédit: ' factorial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' factorial' → logprob: -0.6074441075325012
    2. ' accumulate' → logprob: -1.1074440479278564
    3. ' reduce' → logprob: -3.2324440479278564
    4. ' fibonacci' → logprob: -3.6074440479278564
    5. ' cumulative' → logprob: -4.9824442863464355
    6. ' is' → logprob: -5.3574442863464355
    7. ' factor' → logprob: -5.4824442863464355
    8. ' map' → logprob: -5.6074442863464355
    9. ' ' → logprob: -5.6074442863464355
    10. ' accum' → logprob: -5.6074442863464355

Token 15: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010700895451009274
    2. '_' → logprob: -4.760700702667236
    3. '():' → logprob: -7.385700702667236
    4. '(:' → logprob: -7.635700702667236
    5. ':' → logprob: -7.760700702667236
    6. '```' → logprob: -8.635701179504395
    7. '):' → logprob: -10.010701179504395
    8. ' (' → logprob: -10.135701179504395
    9. '(line' → logprob: -10.260701179504395
    10. '_:' → logprob: -10.385701179504395

Token 16: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.019122745841741562
    2. ',' → logprob: -4.14412260055542
    3. ')' → logprob: -6.01912260055542
    4. ':' → logprob: -7.76912260055542
    5. ' ):' → logprob: -8.769123077392578
    6. '=' → logprob: -10.144123077392578
    7. '):
' → logprob: -11.519123077392578
    8. ' ,' → logprob: -12.769123077392578
    9. ' :' → logprob: -12.894123077392578
    10. '(n' → logprob: -13.019123077392578

Token 17: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06923556327819824
    2. ' return' → logprob: -3.9442355632781982
    3. '    ' → logprob: -4.069235801696777
    4. ' ' → logprob: -4.819235801696777
    5. ':' → logprob: -4.944235801696777
    6. '    
' → logprob: -5.569235801696777
    7. 'return' → logprob: -5.819235801696777
    8. '(' → logprob: -6.069235801696777
    9. '```' → logprob: -6.444235801696777
    10. '\' → logprob: -7.069235801696777

Token 18: ' f' (ID: 285)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.16570089757442474
    2. 'return' → logprob: -2.415700912475586
    3. '   ' → logprob: -3.415700912475586
    4. ' result' → logprob: -3.915700912475586
    5. 'result' → logprob: -5.040700912475586
    6. ' sum' → logprob: -7.165700912475586
    7. ' for' → logprob: -7.540700912475586
    8. ' reduce' → logprob: -7.665700912475586
    9. ' ' → logprob: -8.040700912475586
    10. '    ' → logprob: -8.415700912475586

Token 19: ' =' (ID: 314)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.6003944277763367
    2. 'or' → logprob: -1.1003944873809814
    3. ' =' → logprob: -2.8503944873809814
    4. '=' → logprob: -3.7253944873809814
    5. 'i' → logprob: -4.225394248962402
    6. '   ' → logprob: -4.975394248962402
    7. ' ' → logprob: -5.975394248962402
    8. '  ' → logprob: -6.225394248962402
    9. ' or' → logprob: -6.350394248962402
    10. 'actor' → logprob: -6.475394248962402

Token 20: ' lambda' (ID: 27871)
  Prédit: ' lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.7094765901565552
    2. 'lambda' → logprob: -0.8344765901565552
    3. '(lambda' → logprob: -3.0844764709472656
    4. 'reduce' → logprob: -3.8344764709472656
    5. ' reduce' → logprob: -5.584476470947266
    6. 'count' → logprob: -6.459476470947266
    7. ' count' → logprob: -7.334476470947266
    8. '   ' → logprob: -8.209476470947266
    9. 'ilter' → logprob: -9.584476470947266
    10. ' ' → logprob: -9.584476470947266

Token 21: ' acc' (ID: 1259)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.09860695153474808
    2. 'x' → logprob: -2.598607063293457
    3. ' lambda' → logprob: -4.348607063293457
    4. ' i' → logprob: -5.473607063293457
    5. 'lambda' → logprob: -6.598607063293457
    6. ' a' → logprob: -7.973607063293457
    7. 'a' → logprob: -8.473607063293457
    8. ' ' → logprob: -8.723607063293457
    9. 'i' → logprob: -8.723607063293457
    10. ' n' → logprob: -9.598607063293457

Token 22: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00017386233957950026
    2. ',x' → logprob: -9.375173568725586
    3. ',n' → logprob: -9.750173568725586
    4. ' ,' → logprob: -12.500173568725586
    5. ',a' → logprob: -12.500173568725586
    6. 'a' → logprob: -12.750173568725586
    7. 's' → logprob: -13.000173568725586
    8. ',f' → logprob: -13.000173568725586
    9. '_,' → logprob: -13.375173568725586
    10. ',index' → logprob: -13.625173568725586

Token 23: ' t' (ID: 260)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3488752841949463
    2. ' x' → logprob: -1.2238752841949463
    3. ' i' → logprob: -8.973875045776367
    4. ' _:' → logprob: -9.223875045776367
    5. 'i' → logprob: -9.473875045776367
    6. ' ' → logprob: -9.973875045776367
    7. 'a' → logprob: -11.098875045776367
    8. '   ' → logprob: -11.723875045776367
    9. 'k' → logprob: -11.848875045776367
    10. 'n' → logprob: -12.098875045776367

Token 24: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0023798076435923576
    2. ',' → logprob: -6.252379894256592
    3. ' :' → logprob: -8.752379417419434
    4. ',:' → logprob: -9.127379417419434
    5. 'ok' → logprob: -10.502379417419434
    6. 'uple' → logprob: -11.127379417419434
    7. ':`' → logprob: -11.252379417419434
    8. 'e' → logprob: -11.377379417419434
    9. ':,' → logprob: -11.502379417419434
    10. 'oken' → logprob: -11.627379417419434

Token 25: ' (
' (ID: 4112)
  Prédit: ' acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' acc' → logprob: -0.09687589108943939
    2. 'acc' → logprob: -2.9718759059906006
    3. '(acc' → logprob: -3.7218759059906006
    4. ' (' → logprob: -4.2218756675720215
    5. '(' → logprob: -7.0968756675720215
    6. '   ' → logprob: -7.5968756675720215
    7. ' ' → logprob: -7.8468756675720215
    8. ' None' → logprob: -10.09687614440918
    9. '  ' → logprob: -10.15937614440918
    10. ' t' → logprob: -10.34687614440918

Token 26: '       ' (ID: 309)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.29583823680877686
    2. '(acc' → logprob: -1.4208382368087769
    3. ' acc' → logprob: -5.170838356018066
    4. '(' → logprob: -5.795838356018066
    5. '0' → logprob: -6.545838356018066
    6. '(t' → logprob: -7.045838356018066
    7. '   ' → logprob: -7.420838356018066
    8. ' (' → logprob: -7.545838356018066
    9. '(n' → logprob: -7.670838356018066
    10. 't' → logprob: -8.045838356018066

Token 27: ' acc' (ID: 1259)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' (adapté à ' acc') → logprob: -0.35718294978141785
    2. '(acc' → logprob: -1.2321829795837402
    3. '   ' → logprob: -5.60718297958374
    4. ' acc' → logprob: -6.60718297958374
    5. '(' → logprob: -7.10718297958374
    6. '(t' → logprob: -7.60718297958374
    7. '0' → logprob: -7.60718297958374
    8. 't' → logprob: -8.357182502746582
    9. ' ' → logprob: -8.357182502746582
    10. '((' → logprob: -8.732182502746582

Token 28: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4616861939430237
    2. '+' → logprob: -1.586686134338379
    3. ' +' → logprob: -2.336686134338379
    4. '*' → logprob: -2.836686134338379
    5. ' *' → logprob: -5.211686134338379
    6. ',' → logprob: -6.336686134338379
    7. ' if' → logprob: -6.711686134338379
    8. ' and' → logprob: -8.336686134338379
    9. '+[' → logprob: -8.336686134338379
    10. ' ' → logprob: -8.961686134338379

Token 29: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009945905767381191
    2. '1' → logprob: -4.634945869445801
    3. 't' → logprob: -8.8849458694458
    4. '2' → logprob: -11.7599458694458
    5. '(' → logprob: -11.7599458694458
    6. '+' → logprob: -12.0099458694458
    7. ' ' → logprob: -12.1349458694458
    8. '-' → logprob: -12.1349458694458
    9. 'n' → logprob: -12.8849458694458
    10. '   ' → logprob: -13.0724458694458

Token 30: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06467608362436295
    2. '*' → logprob: -3.81467604637146
    3. ']+' → logprob: -3.93967604637146
    4. ']' → logprob: -4.314676284790039
    5. ',' → logprob: -6.189676284790039
    6. ' +' → logprob: -6.564676284790039
    7. ')' → logprob: -6.564676284790039
    8. ')+' → logprob: -7.189676284790039
    9. ']*' → logprob: -7.689676284790039
    10. '|' → logprob: -8.064676284790039

Token 31: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.24104832112789154
    2. '*' → logprob: -1.6160483360290527
    3. ' +' → logprob: -4.366048336029053
    4. ' *' → logprob: -6.741048336029053
    5. ',' → logprob: -7.366048336029053
    6. '|' → logprob: -8.241047859191895
    7. '*t' → logprob: -8.991047859191895
    8. '-' → logprob: -9.491047859191895
    9. '+,' → logprob: -9.616047859191895
    10. '+t' → logprob: -9.741047859191895

Token 32: ' (
' (ID: 4112)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.31010425090789795
    2. ' t' → logprob: -1.810104250907898
    3. '1' → logprob: -2.6851043701171875
    4. ' ' → logprob: -4.3101043701171875
    5. ' (' → logprob: -5.5601043701171875
    6. ' acc' → logprob: -5.5601043701171875
    7. 'acc' → logprob: -5.6851043701171875
    8. '(' → logprob: -5.8101043701171875
    9. '(t' → logprob: -5.9351043701171875
    10. '(acc' → logprob: -6.4351043701171875

Token 33: '           ' (ID: 352)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.3723345696926117
    2. '1' → logprob: -1.372334599494934
    3. '0' → logprob: -4.4973344802856445
    4. 'n' → logprob: -4.6223344802856445
    5. '(' → logprob: -4.9973344802856445
    6. 'acc' → logprob: -4.9973344802856445
    7. '(t' → logprob: -5.1223344802856445
    8. '2' → logprob: -5.1223344802856445
    9. '(acc' → logprob: -5.8723344802856445
    10. '(n' → logprob: -6.2473344802856445

Token 34: ' '' (ID: 461)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.7443016171455383
    2. '1' → logprob: -0.8693016171455383
    3. '2' → logprob: -3.4943015575408936
    4. 'n' → logprob: -3.9943015575408936
    5. '(' → logprob: -4.119301795959473
    6. '0' → logprob: -4.619301795959473
    7. '(t' → logprob: -4.994301795959473
    8. 'acc' → logprob: -5.244301795959473
    9. '-' → logprob: -5.494301795959473
    10. '(n' → logprob: -5.869301795959473

Token 35: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7267541885375977
    2. ''' → logprob: -1.6017541885375977
    3. 't' → logprob: -2.4767541885375977
    4. '('' → logprob: -3.3517541885375977
    5. '*' → logprob: -3.4767541885375977
    6. '0' → logprob: -3.7267541885375977
    7. ''*' → logprob: -3.8517541885375977
    8. '2' → logprob: -4.601754188537598
    9. ' '' → logprob: -5.101754188537598
    10. 'f' → logprob: -5.101754188537598

Token 36: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.09323319792747498
    2. '0' → logprob: -3.218233108520508
    3. ' '' → logprob: -4.968233108520508
    4. '1' → logprob: -5.093233108520508
    5. '<<' → logprob: -5.468233108520508
    6. ' if' → logprob: -5.593233108520508
    7. '*' → logprob: -5.843233108520508
    8. '+' → logprob: -5.968233108520508
    9. '2' → logprob: -5.968233108520508
    10. '000' → logprob: -6.093233108520508

Token 37: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.06940807402133942
    2. 'if' → logprob: -2.9444081783294678
    3. '*' → logprob: -5.194407939910889
    4. ' in' → logprob: -5.194407939910889
    5. '<<' → logprob: -7.319407939910889
    6. ' ' → logprob: -7.694407939910889
    7. '+' → logprob: -7.694407939910889
    8. ' *' → logprob: -7.819407939910889
    9. '0' → logprob: -7.819407939910889
    10. 'in' → logprob: -8.944408416748047

Token 38: ' ((' (ID: 3536)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.6938847899436951
    2. 't' → logprob: -0.8188847899436951
    3. ' n' → logprob: -3.56888484954834
    4. 'n' → logprob: -4.06888484954834
    5. ' str' → logprob: -5.56888484954834
    6. ' (' → logprob: -5.69388484954834
    7. 'str' → logprob: -5.94388484954834
    8. '(t' → logprob: -7.06888484954834
    9. ' ' → logprob: -7.44388484954834
    10. ' acc' → logprob: -7.81888484954834

Token 39: 'acc' (ID: 3717)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.05995235964655876
    2. 'n' → logprob: -3.6849522590637207
    3. ' t' → logprob: -3.8099522590637207
    4. 'acc' → logprob: -5.184952259063721
    5. ' n' → logprob: -6.684952259063721
    6. ' acc' → logprob: -6.809952259063721
    7. '(t' → logprob: -7.309952259063721
    8. '(acc' → logprob: -7.559952259063721
    9. ' (' → logprob: -7.684952259063721
    10. 'int' → logprob: -7.934952259063721

Token 40: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00014358828775584698
    2. '1' → logprob: -10.000144004821777
    3. '0' → logprob: -10.750144004821777
    4. '[-' → logprob: -11.000144004821777
    5. 'and' → logprob: -11.375144004821777
    6. ')[' → logprob: -11.375144004821777
    7. '2' → logprob: -11.750144004821777
    8. '][' → logprob: -12.750144004821777
    9. '(' → logprob: -12.875144004821777
    10. ')' → logprob: -12.875144004821777

Token 41: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011982563883066177
    2. '0' → logprob: -4.886982440948486
    3. '2' → logprob: -5.761982440948486
    4. '3' → logprob: -6.761982440948486
    5. '-' → logprob: -10.011982917785645
    6. '4' → logprob: -12.324482917785645
    7. '5' → logprob: -13.136982917785645
    8. '```' → logprob: -13.136982917785645
    9. 'len' → logprob: -13.324482917785645
    10. '
' → logprob: -13.324482917785645

Token 42: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3103819489479065
    2. ' +' → logprob: -2.5603818893432617
    3. '>>' → logprob: -2.6853818893432617
    4. '<<' → logprob: -2.9353818893432617
    5. '*' → logprob: -3.8103818893432617
    6. '[' → logprob: -4.435381889343262
    7. '-' → logprob: -5.310381889343262
    8. ']' → logprob: -5.685381889343262
    9. ' <<' → logprob: -5.685381889343262
    10. '|' → logprob: -5.935381889343262

Token 43: ' &' (ID: 827)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2909328043460846
    2. ' +' → logprob: -1.7909327745437622
    3. '*' → logprob: -3.5409328937530518
    4. '>>' → logprob: -3.6659328937530518
    5. '<<' → logprob: -5.040932655334473
    6. '%' → logprob: -5.540932655334473
    7. ' *' → logprob: -5.540932655334473
    8. '|' → logprob: -5.790932655334473
    9. ' %' → logprob: -6.040932655334473
    10. '&' → logprob: -6.040932655334473

Token 44: ' ' (ID: 220)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.20820756256580353
    2. ' t' → logprob: -1.708207607269287
    3. '1' → logprob: -5.583207607269287
    4. '(' → logprob: -6.208207607269287
    5. ' (' → logprob: -7.458207607269287
    6. ')' → logprob: -8.958207130432129
    7. ' ' → logprob: -9.958207130432129
    8. '(t' → logprob: -9.958207130432129
    9. '7' → logprob: -10.208207130432129
    10. 'n' → logprob: -10.583207130432129

Token 45: '1' (ID: 16)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.010350318625569344
    2. '(' → logprob: -5.385350227355957
    3. '1' → logprob: -5.760350227355957
    4. ' t' → logprob: -6.135350227355957
    5. '(t' → logprob: -8.510350227355957
    6. ' (' → logprob: -9.635350227355957
    7. '7' → logprob: -10.635350227355957
    8. '2' → logprob: -11.135350227355957
    9. '3' → logprob: -11.385350227355957
    10. ' ' → logprob: -11.510350227355957

Token 46: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018265239894390106
    2. ')==' → logprob: -5.018265247344971
    3. ' )' → logprob: -5.268265247344971
    4. '0' → logprob: -5.768265247344971
    5. '<<' → logprob: -6.643265247344971
    6. '==' → logprob: -7.268265247344971
    7. '))' → logprob: -7.518265247344971
    8. ' ==' → logprob: -8.768264770507812
    9. '1' → logprob: -9.268264770507812
    10. '>>' → logprob: -9.518264770507812

Token 47: ' ^' (ID: 7602)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5343550443649292
    2. '==' → logprob: -1.5343550443649292
    3. ' ==' → logprob: -2.7843551635742188
    4. '<<' → logprob: -3.4093551635742188
    5. ')==' → logprob: -3.6593551635742188
    6. ' )' → logprob: -3.7843551635742188
    7. ' and' → logprob: -3.9093551635742188
    8. '>>' → logprob: -4.409355163574219
    9. '0' → logprob: -5.159355163574219
    10. ' <<' → logprob: -6.034355163574219

Token 48: ' acc' (ID: 1259)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.3364071249961853
    2. 't' → logprob: -1.46140718460083
    3. ' (' → logprob: -3.33640718460083
    4. '(t' → logprob: -5.33640718460083
    5. '1' → logprob: -5.46140718460083
    6. '(' → logprob: -5.71140718460083
    7. ' ' → logprob: -6.58640718460083
    8. ' ((' → logprob: -6.58640718460083
    9. '((' → logprob: -6.96140718460083
    10. ')' → logprob: -7.33640718460083

Token 49: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.32523515378125e-05
    2. '1' → logprob: -10.625062942504883
    3. '2' → logprob: -11.875062942504883
    4. 't' → logprob: -11.875062942504883
    5. '[
' → logprob: -12.125062942504883
    6. ')' → logprob: -12.937562942504883
    7. ' [' → logprob: -13.187562942504883
    8. '][' → logprob: -13.312562942504883
    9. ')[' → logprob: -13.812562942504883
    10. '0' → logprob: -13.937562942504883

Token 50: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.1305353045463562
    2. '0' → logprob: -2.130535364151001
    3. '1' → logprob: -5.755535125732422
    4. '3' → logprob: -8.630535125732422
    5. '[' → logprob: -9.255535125732422
    6. ' ' → logprob: -9.380535125732422
    7. '   ' → logprob: -10.318035125732422
    8. '-' → logprob: -12.380535125732422
    9. '    ' → logprob: -12.568035125732422
    10. '4' → logprob: -12.568035125732422

Token 51: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.27354371547698975
    2. ')' → logprob: -2.2735438346862793
    3. ']' → logprob: -2.7735438346862793
    4. '[' → logprob: -3.3985438346862793
    5. ']))' → logprob: -4.023543834686279
    6. '))' → logprob: -4.148543834686279
    7. '1' → logprob: -6.773543834686279
    8. ')]' → logprob: -6.898543834686279
    9. ' )' → logprob: -7.148543834686279
    10. ' ])' → logprob: -7.148543834686279

Token 52: ' else' (ID: 1203)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4128592610359192
    2. ' else' → logprob: -2.1628592014312744
    3. '==' → logprob: -2.2878592014312744
    4. ' )' → logprob: -2.6628592014312744
    5. ' ==' → logprob: -3.6628592014312744
    6. ')==' → logprob: -3.7878592014312744
    7. ' ' → logprob: -6.7878594398498535
    8. 'else' → logprob: -7.2878594398498535
    9. ' and' → logprob: -7.6628594398498535
    10. '0' → logprob: -8.162858963012695

Token 53: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5776587724685669
    2. ' '' → logprob: -0.8276587724685669
    3. '''' → logprob: -7.702658653259277
    4. ' ''' → logprob: -8.077658653259277
    5. ' '')' → logprob: -8.202658653259277
    6. ' ' → logprob: -8.577658653259277
    7. '           ' → logprob: -9.077658653259277
    8. '"' → logprob: -9.702658653259277
    9. '   ' → logprob: -9.952658653259277
    10. '  ' → logprob: -10.577658653259277

Token 54: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.038673266768455505
    2. '1' → logprob: -3.288673162460327
    3. ''' → logprob: -7.913673400878906
    4. ' ' → logprob: -8.913673400878906
    5. '')' → logprob: -9.288673400878906
    6. '"' → logprob: -11.913673400878906
    7. '''' → logprob: -12.226173400878906
    8. ' '' → logprob: -12.413673400878906
    9. ')' → logprob: -12.788673400878906
    10. '('' → logprob: -12.913673400878906

Token 55: ''
' (ID: 2207)
  Prédit: ''),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''),' → logprob: -1.1150249242782593
    2. '),' → logprob: -1.2400249242782593
    3. ''),
' → logprob: -1.9900249242782593
    4. '),
' → logprob: -1.9900249242782593
    5. ')' → logprob: -3.115025043487549
    6. '       ' → logprob: -3.240025043487549
    7. ''' → logprob: -5.115025043487549
    8. '')' → logprob: -5.615025043487549
    9. '',' → logprob: -5.990025043487549
    10. '   ' → logprob: -6.240025043487549

Token 56: '       ' (ID: 309)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.41580161452293396
    2. '),
' → logprob: -1.4158016443252563
    3. '       ' → logprob: -2.915801525115967
    4. ',' → logprob: -3.790801525115967
    5. ',
' → logprob: -4.915801525115967
    6. ')' → logprob: -5.915801525115967
    7. '   ' → logprob: -5.915801525115967
    8. ' ),' → logprob: -6.415801525115967
    9. '),

' → logprob: -6.415801525115967
    10. ' ),
' → logprob: -6.790801525115967

Token 57: ' ),
' (ID: 4954)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.34911325573921204
    2. '),
' (adapté à ' ),
') → logprob: -1.5991132259368896
    3. ',' → logprob: -2.9741132259368896
    4. '       ' → logprob: -4.849113464355469
    5. ' ),' → logprob: -4.849113464355469
    6. '   ' → logprob: -4.974113464355469
    7. ' ),
' → logprob: -5.349113464355469
    8. ')' → logprob: -5.474113464355469
    9. ',
' → logprob: -5.724113464355469
    10. ' ' → logprob: -7.099113464355469

Token 58: '       ' (ID: 309)
  Prédit: ' acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' acc' → logprob: -0.7349157929420471
    2. 'acc' → logprob: -1.3599157333374023
    3. '(acc' → logprob: -1.7349157333374023
    4. 't' → logprob: -3.7349157333374023
    5. '   ' → logprob: -3.7349157333374023
    6. ' (' → logprob: -4.109915733337402
    7. ' t' → logprob: -4.609915733337402
    8. '(' → logprob: -5.609915733337402
    9. '(t' → logprob: -5.734915733337402
    10. '1' → logprob: -6.484915733337402

Token 59: ' (
' (ID: 4112)
  Prédit: '(acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(acc' → logprob: -0.3419021666049957
    2. 'acc' → logprob: -1.3419021368026733
    3. '(t' → logprob: -4.591902256011963
    4. 't' → logprob: -4.716902256011963
    5. ' acc' → logprob: -5.841902256011963
    6. '((' → logprob: -6.091902256011963
    7. ' (' → logprob: -6.591902256011963
    8. '(' → logprob: -6.716902256011963
    9. '   ' → logprob: -7.966902256011963
    10. '(count' → logprob: -8.591901779174805

Token 60: '           ' (ID: 352)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.05400046706199646
    2. '(acc' → logprob: -3.1790003776550293
    3. ' acc' → logprob: -5.054000377655029
    4. '   ' → logprob: -5.929000377655029
    5. ' (' → logprob: -7.429000377655029
    6. '2' → logprob: -8.804000854492188
    7. '       ' → logprob: -8.804000854492188
    8. '           ' → logprob: -8.929000854492188
    9. '((' → logprob: -8.929000854492188
    10. ' ' → logprob: -9.054000854492188

Token 61: ' acc' (ID: 1259)
  Prédit: '(acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(acc' → logprob: -0.2897438704967499
    2. 'acc' (adapté à ' acc') → logprob: -1.4147439002990723
    3. '(' → logprob: -5.914743900299072
    4. '2' → logprob: -6.039743900299072
    5. '((' → logprob: -6.164743900299072
    6. ' acc' → logprob: -8.289743423461914
    7. '3' → logprob: -8.414743423461914
    8. 't' → logprob: -8.414743423461914
    9. '(t' → logprob: -9.039743423461914
    10. ' (' → logprob: -9.289743423461914

Token 62: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06236166134476662
    2. '1' → logprob: -2.812361717224121
    3. '0' → logprob: -8.312361717224121
    4. ')' → logprob: -10.187361717224121
    5. ')[' → logprob: -10.187361717224121
    6. '(' → logprob: -10.562361717224121
    7. '#' → logprob: -11.937361717224121
    8. '```' → logprob: -12.374861717224121
    9. '   ' → logprob: -12.749861717224121
    10. '
' → logprob: -12.749861717224121

Token 63: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010089923162013292
    2. '0' → logprob: -7.001008987426758
    3. '2' → logprob: -9.251008987426758
    4. '3' → logprob: -15.188508987426758
    5. '[' → logprob: -15.501008987426758
    6. '
' → logprob: -15.501008987426758
    7. '(' → logprob: -15.938508987426758
    8. '   ' → logprob: -16.188508987426758
    9. ' ' → logprob: -16.313508987426758
    10. '१' → logprob: -16.688508987426758

Token 64: ']' (ID: 60)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.26274487376213074
    2. ' <<' → logprob: -2.762744903564453
    3. ')' → logprob: -2.887744903564453
    4. '+' → logprob: -3.637744903564453
    5. '>>' → logprob: -4.137744903564453
    6. ' ' → logprob: -4.387744903564453
    7. '           ' → logprob: -4.387744903564453
    8. '       ' → logprob: -4.887744903564453
    9. ' +' → logprob: -5.012744903564453
    10. '   ' → logprob: -5.262744903564453

Token 65: ' ^' (ID: 7602)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4231213927268982
    2. '<<' → logprob: -1.548121452331543
    3. ' +' → logprob: -2.798121452331543
    4. '^' → logprob: -3.298121452331543
    5. ' ^' → logprob: -3.923121452331543
    6. '*' → logprob: -5.548121452331543
    7. ')' → logprob: -6.173121452331543
    8. ' ' → logprob: -6.548121452331543
    9. ' <<' → logprob: -6.548121452331543
    10. ',' → logprob: -6.798121452331543

Token 66: ' ' (ID: 220)
  Prédit: ' acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' acc' → logprob: -0.6194576025009155
    2. ' (' → logprob: -1.4944576025009155
    3. 'acc' → logprob: -1.9944576025009155
    4. '(acc' → logprob: -2.494457721710205
    5. ' ((' → logprob: -5.369457721710205
    6. '(' → logprob: -5.369457721710205
    7. '((' → logprob: -5.744457721710205
    8. 't' → logprob: -6.244457721710205
    9. ' t' → logprob: -6.369457721710205
    10. '(t' → logprob: -8.056957244873047

Token 67: '1' (ID: 16)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.14271526038646698
    2. '(acc' → logprob: -2.5177152156829834
    3. ' acc' → logprob: -3.7677152156829834
    4. 't' → logprob: -4.6427154541015625
    5. '((' → logprob: -4.6427154541015625
    6. '(' → logprob: -5.6427154541015625
    7. ' (' → logprob: -5.8927154541015625
    8. '(t' → logprob: -6.6427154541015625
    9. ' t' → logprob: -7.7677154541015625
    10. '(
' → logprob: -8.017715454101562

Token 68: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.058652233332395554
    2. '),' → logprob: -3.68365216255188
    3. ',' → logprob: -4.933652400970459
    4. ')<<' → logprob: -5.308652400970459
    5. '<<' → logprob: -5.558652400970459
    6. '       ' → logprob: -5.933652400970459
    7. '))' → logprob: -6.058652400970459
    8. ')>>' → logprob: -6.433652400970459
    9. ' )' → logprob: -6.558652400970459
    10. ')&' → logprob: -6.683652400970459

Token 69: ' ((' (ID: 3536)
  Prédit: ' acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' acc' → logprob: -0.7026466727256775
    2. ' (' → logprob: -1.8276467323303223
    3. 'acc' → logprob: -1.9526467323303223
    4. ' t' → logprob: -2.5776467323303223
    5. '(acc' → logprob: -2.7026467323303223
    6. 't' → logprob: -3.0776467323303223
    7. '(t' → logprob: -5.202646732330322
    8. ' ((' → logprob: -6.702646732330322
    9. ' not' → logprob: -6.952646732330322
    10. '((' → logprob: -6.952646732330322

Token 70: 'acc' (ID: 3717)
  Prédit: 'acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.016649585217237473
    2. '(acc' → logprob: -4.5166497230529785
    3. ' acc' → logprob: -5.7666497230529785
    4. 't' → logprob: -6.1416497230529785
    5. ''acc' → logprob: -9.64164924621582
    6. '	acc' → logprob: -10.26664924621582
    7. ' (' → logprob: -10.51664924621582
    8. '(' → logprob: -10.76664924621582
    9. 'ac' → logprob: -10.89164924621582
    10. '   ' → logprob: -11.01664924621582

Token 71: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.2166411478538066e-05
    2. '1' → logprob: -10.000052452087402
    3. '   ' → logprob: -14.000052452087402
    4. ')' → logprob: -14.125052452087402
    5. '<|end|>' → logprob: -14.250052452087402
    6. '[
' → logprob: -14.500052452087402
    7. '```' → logprob: -14.625052452087402
    8. ' [' → logprob: -14.812552452087402
    9. '#' → logprob: -15.000052452087402
    10. ')[' → logprob: -15.062552452087402

Token 72: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006964695639908314
    2. '[' → logprob: -7.750696659088135
    3. '0' → logprob: -8.625696182250977
    4. '2' → logprob: -9.750696182250977
    5. ' ' → logprob: -11.125696182250977
    6. '3' → logprob: -12.125696182250977
    7. '(' → logprob: -12.750696182250977
    8. ')' → logprob: -13.813196182250977
    9. ']' → logprob: -14.313196182250977
    10. '   ' → logprob: -14.500696182250977

Token 73: ']' (ID: 60)
  Prédit: ' &'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.12049566209316254
    2. '&' → logprob: -2.495495557785034
    3. ')' → logprob: -4.245495796203613
    4. '>>' → logprob: -4.370495796203613
    5. '+' → logprob: -6.370495796203613
    6. ' >>' → logprob: -6.870495796203613
    7. ' +' → logprob: -8.120495796203613
    8. ' ' → logprob: -8.245495796203613
    9. ' )' → logprob: -8.620495796203613
    10. ')&' → logprob: -8.745495796203613

Token 74: ' &' (ID: 827)
  Prédit: ' &'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.11582032591104507
    2. '&' → logprob: -2.6158204078674316
    3. '>>' → logprob: -3.8658204078674316
    4. ' >>' → logprob: -5.115820407867432
    5. ')' → logprob: -5.740820407867432
    6. '+' → logprob: -6.365820407867432
    7. ' ' → logprob: -6.365820407867432
    8. ' +' → logprob: -6.615820407867432
    9. ' )' → logprob: -8.365819931030273
    10. ')&' → logprob: -8.615819931030273

Token 75: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4650236666202545
    2. 't' → logprob: -1.8400236368179321
    3. ' ' → logprob: -2.2150237560272217
    4. ' t' → logprob: -2.3400237560272217
    5. '3' → logprob: -6.090023517608643
    6. '2' → logprob: -6.090023517608643
    7. '7' → logprob: -6.965023517608643
    8. '8' → logprob: -7.715023517608643
    9. ' (' → logprob: -8.4650239944458
    10. '4' → logprob: -8.4650239944458

Token 76: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10667741298675537
    2. ' ' → logprob: -3.231677532196045
    3. '4' → logprob: -3.856677532196045
    4. 't' → logprob: -4.106677532196045
    5. '8' → logprob: -4.731677532196045
    6. '2' → logprob: -4.856677532196045
    7. '3' → logprob: -6.231677532196045
    8. ' t' → logprob: -6.731677532196045
    9. '7' → logprob: -6.981677532196045
    10. 'acc' → logprob: -7.106677532196045

Token 77: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0027621989138424397
    2. ' )' → logprob: -6.877762317657471
    3. ')==' → logprob: -7.502762317657471
    4. ')>>' → logprob: -7.627762317657471
    5. '))' → logprob: -8.002761840820312
    6. '==' → logprob: -9.752761840820312
    7. ')
' → logprob: -10.377761840820312
    8. ')<<' → logprob: -10.377761840820312
    9. ')))' → logprob: -10.502761840820312
    10. ')&' → logprob: -10.627761840820312

Token 78: ' ^' (ID: 7602)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0881616622209549
    2. '==' → logprob: -3.7131617069244385
    3. '>>' → logprob: -3.8381617069244385
    4. ' )' → logprob: -4.338161468505859
    5. ' ==' → logprob: -5.338161468505859
    6. ')>>' → logprob: -5.463161468505859
    7. ')==' → logprob: -5.838161468505859
    8. ' and' → logprob: -6.213161468505859
    9. ' else' → logprob: -6.588161468505859
    10. ' >>' → logprob: -6.713161468505859

Token 79: ' acc' (ID: 1259)
  Prédit: ' acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' acc' → logprob: -0.47721123695373535
    2. 'acc' → logprob: -1.2272112369537354
    3. 't' → logprob: -2.8522112369537354
    4. ' t' → logprob: -3.8522112369537354
    5. '(acc' → logprob: -5.977210998535156
    6. '1' → logprob: -6.602210998535156
    7. ' (' → logprob: -7.102210998535156
    8. '0' → logprob: -7.477210998535156
    9. 'count' → logprob: -7.602210998535156
    10. '   ' → logprob: -7.977210998535156

Token 80: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.014479262754321098
    2. '2' → logprob: -4.264479160308838
    3. '   ' → logprob: -8.639479637145996
    4. '(' → logprob: -9.639479637145996
    5. '1' → logprob: -10.264479637145996
    6. ')' → logprob: -11.389479637145996
    7. ' ' → logprob: -11.514479637145996
    8. '       ' → logprob: -12.389479637145996
    9. '0' → logprob: -12.889479637145996
    10. '           ' → logprob: -13.514479637145996

Token 81: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.008998962119221687
    2. '1' → logprob: -4.883998870849609
    3. '0' → logprob: -7.133998870849609
    4. 't' → logprob: -8.38399887084961
    5. ')' → logprob: -9.00899887084961
    6. '3' → logprob: -9.25899887084961
    7. ' ' → logprob: -9.75899887084961
    8. 'acc' → logprob: -10.25899887084961
    9. '[' → logprob: -11.25899887084961
    10. '   ' → logprob: -11.75899887084961

Token 82: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001600347168277949
    2. '))' → logprob: -8.875160217285156
    3. ' )' → logprob: -12.250160217285156
    4. ')==' → logprob: -12.250160217285156
    5. ')
' → logprob: -13.000160217285156
    6. '       ' → logprob: -13.125160217285156
    7. '   ' → logprob: -13.625160217285156
    8. ')))' → logprob: -14.000160217285156
    9. '')' → logprob: -14.125160217285156
    10. 'else' → logprob: -14.875160217285156

Token 83: ' and' (ID: 326)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.1347038894891739
    2. ')' → logprob: -2.3847038745880127
    3. 'else' → logprob: -3.5097038745880127
    4. '        ' → logprob: -6.884704113006592
    5. ' )' → logprob: -7.009704113006592
    6. '       ' → logprob: -7.509704113006592
    7. ' ' → logprob: -7.884704113006592
    8. '==' → logprob: -8.134703636169434
    9. '0' → logprob: -9.134703636169434
    10. '),' → logprob: -9.134703636169434

Token 84: ' ((' (ID: 3536)
  Prédit: ' acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' acc' → logprob: -0.4427202641963959
    2. '(acc' → logprob: -1.6927202939987183
    3. 'acc' → logprob: -2.3177201747894287
    4. ' (' → logprob: -3.0677201747894287
    5. ' not' → logprob: -4.067720413208008
    6. 'not' → logprob: -6.192720413208008
    7. ' t' → logprob: -6.442720413208008
    8. 't' → logprob: -6.692720413208008
    9. '(' → logprob: -6.817720413208008
    10. 'count' → logprob: -6.942720413208008

Token 85: 'acc' (ID: 3717)
  Prédit: 'acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.12958188354969025
    2. ' acc' → logprob: -2.254581928253174
    3. 't' → logprob: -5.004581928253174
    4. '(acc' → logprob: -5.004581928253174
    5. '   ' → logprob: -7.254581928253174
    6. 'ac' → logprob: -7.629581928253174
    7. ' t' → logprob: -7.879581928253174
    8. ' (' → logprob: -8.004581451416016
    9. 'n' → logprob: -8.379581451416016
    10. '           ' → logprob: -8.504581451416016

Token 86: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0004642736748792231
    2. '1' → logprob: -7.75046443939209
    3. ')' → logprob: -11.75046443939209
    4. '[
' → logprob: -12.12546443939209
    5. '   ' → logprob: -13.06296443939209
    6. ' [' → logprob: -13.31296443939209
    7. '(' → logprob: -13.43796443939209
    8. '<|end|>' → logprob: -13.56296443939209
    9. '<|end|>' → logprob: -13.81296443939209
    10. '#' → logprob: -14.00046443939209

Token 87: '3' (ID: 18)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014565256424248219
    2. '0' → logprob: -4.264565467834473
    3. '2' → logprob: -8.264565467834473
    4. '3' → logprob: -9.514565467834473
    5. ' ' → logprob: -10.264565467834473
    6. '(' → logprob: -11.139565467834473
    7. ']' → logprob: -12.389565467834473
    8. '[' → logprob: -12.639565467834473
    9. '   ' → logprob: -13.139565467834473
    10. '
' → logprob: -13.327065467834473

Token 88: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.12324592471122742
    2. ' &' → logprob: -2.49824595451355
    3. '&' → logprob: -4.373245716094971
    4. ']&' → logprob: -4.998245716094971
    5. '[' → logprob: -5.248245716094971
    6. '>>' → logprob: -5.623245716094971
    7. ')' → logprob: -5.873245716094971
    8. '+' → logprob: -6.998245716094971
    9. ')&' → logprob: -7.748245716094971
    10. '1' → logprob: -7.998245716094971

Token 89: ' ^' (ID: 7602)
  Prédit: ' &'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.02122195065021515
    2. '&' → logprob: -4.271222114562988
    3. ')' → logprob: -5.646222114562988
    4. '>>' → logprob: -6.896222114562988
    5. '+' → logprob: -7.521222114562988
    6. ' >>' → logprob: -7.771222114562988
    7. ' )' → logprob: -8.146222114562988
    8. '[' → logprob: -8.521222114562988
    9. ' ' → logprob: -8.521222114562988
    10. ' +' → logprob: -8.646222114562988

Token 90: ' acc' (ID: 1259)
  Prédit: ' acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' acc' → logprob: -0.6358060240745544
    2. '1' → logprob: -1.6358060836791992
    3. 'acc' → logprob: -1.7608060836791992
    4. ' ' → logprob: -2.635806083679199
    5. ' (' → logprob: -4.635806083679199
    6. '(acc' → logprob: -5.635806083679199
    7. 't' → logprob: -5.760806083679199
    8. '2' → logprob: -5.760806083679199
    9. 'count' → logprob: -6.010806083679199
    10. ' t' → logprob: -6.135806083679199

Token 91: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.09210597723722458
    2. '1' → logprob: -2.4671058654785156
    3. '0' → logprob: -6.717105865478516
    4. ' ' → logprob: -7.467105865478516
    5. '2' → logprob: -7.717105865478516
    6. '&' → logprob: -8.342105865478516
    7. '(' → logprob: -8.717105865478516
    8. ')' → logprob: -9.217105865478516
    9. '3' → logprob: -9.467105865478516
    10. '   ' → logprob: -9.842105865478516

Token 92: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3841504752635956
    2. '2' → logprob: -1.634150505065918
    3. '0' → logprob: -2.259150505065918
    4. '3' → logprob: -4.884150505065918
    5. '4' → logprob: -5.634150505065918
    6. ' ' → logprob: -6.384150505065918
    7. 't' → logprob: -6.509150505065918
    8. 'acc' → logprob: -6.759150505065918
    9. '(' → logprob: -7.009150505065918
    10. '5' → logprob: -7.009150505065918

Token 93: ']))' (ID: 20259)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0021343177650123835
    2. '))' → logprob: -6.752134323120117
    3. ')&' → logprob: -7.377134323120117
    4. ' )' → logprob: -8.502134323120117
    5. ')))' → logprob: -10.502134323120117
    6. '&' → logprob: -10.502134323120117
    7. ')>>' → logprob: -10.877134323120117
    8. '1' → logprob: -11.502134323120117
    9. ')`' → logprob: -11.752134323120117
    10. ')
' → logprob: -12.252134323120117

Token 94: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.645239531993866
    2. ')' → logprob: -0.895239531993866
    3. 'else' → logprob: -3.8952395915985107
    4. ' )' → logprob: -4.145239353179932
    5. '       ' → logprob: -4.770239353179932
    6. '[' → logprob: -4.895239353179932
    7. '        ' → logprob: -5.770239353179932
    8. ' ' → logprob: -5.895239353179932
    9. '   ' → logprob: -6.520239353179932
    10. '    ' → logprob: -6.645239353179932

Token 95: ' acc' (ID: 1259)
  Prédit: ' acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' acc' → logprob: -0.2586310803890228
    2. 'acc' → logprob: -2.2586309909820557
    3. ' (' → logprob: -3.0086309909820557
    4. ' not' → logprob: -3.7586309909820557
    5. '(acc' → logprob: -3.7586309909820557
    6. '0' → logprob: -4.383631229400635
    7. 'not' → logprob: -5.383631229400635
    8. ' ' → logprob: -6.008631229400635
    9. '(' → logprob: -6.133631229400635
    10. '1' → logprob: -6.508631229400635

Token 96: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00013953536108601838
    2. ')' → logprob: -9.500139236450195
    3. '1' → logprob: -10.125139236450195
    4. '0' → logprob: -11.625139236450195
    5. '2' → logprob: -12.375139236450195
    6. '(' → logprob: -12.625139236450195
    7. '3' → logprob: -12.750139236450195
    8. '[
' → logprob: -12.875139236450195
    9. ')[' → logprob: -14.125139236450195
    10. '<|end|>' → logprob: -14.750139236450195

Token 97: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2682870626449585
    2. '3' → logprob: -1.6432870626449585
    3. '0' → logprob: -3.768287181854248
    4. '2' → logprob: -4.018287181854248
    5. ' ' → logprob: -7.268287181854248
    6. '   ' → logprob: -8.89328670501709
    7. '(' → logprob: -10.76828670501709
    8. '[' → logprob: -11.70578670501709
    9. '-' → logprob: -12.08078670501709
    10. '  ' → logprob: -12.20578670501709

Token 98: ']
' (ID: 1592)
  Prédit: '),
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),
' → logprob: -0.14121775329113007
    2. '),' → logprob: -2.3912177085876465
    3. ')' → logprob: -3.6412177085876465
    4. '       ' → logprob: -4.8912177085876465
    5. '   ' → logprob: -6.1412177085876465
    6. ')
' → logprob: -6.2662177085876465
    7. ',' → logprob: -6.5162177085876465
    8. ',
' → logprob: -7.5162177085876465
    9. '),

' → logprob: -9.016218185424805
    10. ')),' → logprob: -9.891218185424805

Token 99: '       ' (ID: 309)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -1.0595072507858276
    2. ',' → logprob: -1.1845072507858276
    3. '[' → logprob: -2.309507369995117
    4. '   ' → logprob: -2.309507369995117
    5. ',
' → logprob: -2.809507369995117
    6. '       ' → logprob: -3.309507369995117
    7. '),
' → logprob: -3.434507369995117
    8. ')' → logprob: -4.059507369995117
    9. '0' → logprob: -6.809507369995117
    10. ')
' → logprob: -8.559507369995117

Token 100: ' ),
' (ID: 4954)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8036758303642273
    2. ')' → logprob: -1.428675889968872
    3. '[' → logprob: -1.553675889968872
    4. '),' → logprob: -3.053675889968872
    5. ',
' → logprob: -3.303675889968872
    6. '   ' → logprob: -4.678675651550293
    7. '0' → logprob: -6.178675651550293
    8. '),
' (adapté à ' ),
') → logprob: -6.303675651550293
    9. '1' → logprob: -6.803675651550293
    10. '))' → logprob: -7.553675651550293

Token 101: '       ' (ID: 309)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.562856137752533
    2. ' acc' → logprob: -1.0628561973571777
    3. '(acc' → logprob: -2.5628561973571777
    4. ' (' → logprob: -5.562856197357178
    5. '   ' → logprob: -5.937856197357178
    6. '(
' → logprob: -7.062856197357178
    7. ' (
' → logprob: -8.68785572052002
    8. '(' → logprob: -9.56285572052002
    9. '((' → logprob: -10.06285572052002
    10. ' ' → logprob: -10.18785572052002

Token 102: ' acc' (ID: 1259)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' (adapté à ' acc') → logprob: -0.20656763017177582
    2. ' acc' → logprob: -2.0815675258636475
    3. '(acc' → logprob: -2.8315675258636475
    4. ' (' → logprob: -6.581567764282227
    5. '   ' → logprob: -7.456567764282227
    6. '(' → logprob: -8.331567764282227
    7. '       ' → logprob: -8.956567764282227
    8. 'not' → logprob: -9.081567764282227
    9. 't' → logprob: -9.456567764282227
    10. '           ' → logprob: -9.831567764282227

Token 103: '[' (ID: 58)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3147386610507965
    2. '[' → logprob: -1.4397386312484741
    3. '3' → logprob: -3.4397387504577637
    4. '(' → logprob: -7.939738750457764
    5. '   ' → logprob: -8.189738273620605
    6. '0' → logprob: -8.689738273620605
    7. '```' → logprob: -10.314738273620605
    8. '2' → logprob: -10.689738273620605
    9. ' ' → logprob: -11.189738273620605
    10. '#' → logprob: -11.189738273620605

Token 104: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0023611404467374086
    2. '3' → logprob: -6.252361297607422
    3. '0' → logprob: -8.002361297607422
    4. '2' → logprob: -9.252361297607422
    5. '   ' → logprob: -14.627361297607422
    6. '
' → logprob: -14.689861297607422
    7. '```' → logprob: -15.564861297607422
    8. '[' → logprob: -15.877361297607422
    9. ' ' → logprob: -16.127361297607422
    10. '-' → logprob: -16.377361297607422

Token 105: ']' (ID: 60)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.08761086314916611
    2. ' &' → logprob: -3.212610960006714
    3. '&' → logprob: -3.587610960006714
    4. ' >>' → logprob: -4.837610721588135
    5. '[' → logprob: -5.587610721588135
    6. ')' → logprob: -6.337610721588135
    7. ')>>' → logprob: -6.712610721588135
    8. '>>>' → logprob: -7.212610721588135
    9. '1' → logprob: -9.212611198425293
    10. '<<' → logprob: -9.337611198425293

Token 106: ' >>' (ID: 6832)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.048908911645412445
    2. ' >>' → logprob: -3.2989089488983154
    3. '+' → logprob: -4.923908710479736
    4. '<<' → logprob: -6.923908710479736
    5. ',' → logprob: -7.048908710479736
    6. ')' → logprob: -7.298908710479736
    7. ' +' → logprob: -7.923908710479736
    8. ' &' → logprob: -9.048909187316895
    9. '>>>' → logprob: -9.298909187316895
    10. ')>>' → logprob: -9.423909187316895

Token 107: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003752615302801132
    2. ' ' → logprob: -8.125374794006348
    3. '2' → logprob: -9.625374794006348
    4. '3' → logprob: -11.500374794006348
    5. '4' → logprob: -13.625374794006348
    6. '```' → logprob: -14.625374794006348
    7. '>' → logprob: -14.750374794006348
    8. '5' → logprob: -14.875374794006348
    9. '7' → logprob: -15.750374794006348
    10. '6' → logprob: -16.000375747680664

Token 108: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.113290095934644e-05
    2. '2' → logprob: -10.000081062316895
    3. ' ' → logprob: -10.750081062316895
    4. '3' → logprob: -12.625081062316895
    5. '11' → logprob: -12.625081062316895
    6. '```' → logprob: -13.562581062316895
    7. '4' → logprob: -14.250081062316895
    8. '111' → logprob: -14.687581062316895
    9. '116' → logprob: -15.000081062316895
    10. '   ' → logprob: -15.187581062316895

Token 109: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02562985010445118
    2. ',
' → logprob: -3.775629758834839
    3. ' ,' → logprob: -6.525629997253418
    4. ')' → logprob: -7.525629997253418
    5. '   ' → logprob: -8.650629997253418
    6. '       ' → logprob: -10.275629997253418
    7. ',
' → logprob: -10.400629997253418
    8. '),' → logprob: -11.025629997253418
    9. ',

' → logprob: -11.025629997253418
    10. '[' → logprob: -11.400629997253418

Token 110: '       ' (ID: 309)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.14649157226085663
    2. '(acc' → logprob: -2.146491527557373
    3. ' acc' → logprob: -4.271491527557373
    4. '   ' → logprob: -6.021491527557373
    5. '(' → logprob: -6.646491527557373
    6. '((' → logprob: -7.646491527557373
    7. 'count' → logprob: -8.146492004394531
    8. ' (' → logprob: -8.396492004394531
    9. 't' → logprob: -8.646492004394531
    10. 'n' → logprob: -9.146492004394531

Token 111: ' acc' (ID: 1259)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.12432628870010376
    2. 'acc' (adapté à ' acc') → logprob: -2.249326229095459
    3. 'n' → logprob: -5.749326229095459
    4. ' t' → logprob: -6.124326229095459
    5. '(acc' → logprob: -6.499326229095459
    6. ' acc' → logprob: -6.624326229095459
    7. '(t' → logprob: -6.874326229095459
    8. '   ' → logprob: -7.249326229095459
    9. 'count' → logprob: -7.624326229095459
    10. '(' → logprob: -7.749326229095459

Token 112: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2543261647224426
    2. '3' → logprob: -1.5043261051177979
    3. '1' → logprob: -7.379326343536377
    4. '(' → logprob: -7.504326343536377
    5. '4' → logprob: -8.004325866699219
    6. ')' → logprob: -8.004325866699219
    7. ']' → logprob: -8.629325866699219
    8. '][' → logprob: -9.129325866699219
    9. '0' → logprob: -9.379325866699219
    10. '```' → logprob: -10.379325866699219

Token 113: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.8249731063842773
    2. '0' → logprob: -1.5749731063842773
    3. '2' → logprob: -1.8249731063842773
    4. '1' → logprob: -1.8249731063842773
    5. '4' → logprob: -3.4499731063842773
    6. '-' → logprob: -7.824973106384277
    7. '```' → logprob: -10.699973106384277
    8. '(' → logprob: -10.824973106384277
    9. '   ' → logprob: -11.262473106384277
    10. '[' → logprob: -11.449973106384277

Token 114: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04635956510901451
    2. ')>>' → logprob: -4.796359539031982
    3. '>>' → logprob: -5.046359539031982
    4. ' )' → logprob: -5.296359539031982
    5. '   ' → logprob: -5.546359539031982
    6. ',' → logprob: -5.671359539031982
    7. '))' → logprob: -6.046359539031982
    8. ')))' → logprob: -6.171359539031982
    9. '<<' → logprob: -6.171359539031982
    10. '+' → logprob: -6.421359539031982

Token 115: ' ^' (ID: 7602)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.648720920085907
    2. ')' → logprob: -0.773720920085907
    3. ' +' → logprob: -5.023720741271973
    4. ' )' → logprob: -5.773720741271973
    5. '),' → logprob: -7.023720741271973
    6. ')>>' → logprob: -7.148720741271973
    7. ',' → logprob: -7.273720741271973
    8. '>>' → logprob: -7.398720741271973
    9. ')+' → logprob: -7.523720741271973
    10. '-' → logprob: -7.898720741271973

Token 116: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.9734193682670593
    2. ' acc' → logprob: -1.223419427871704
    3. ' ' → logprob: -1.473419427871704
    4. 'acc' → logprob: -3.223419427871704
    5. ' (' → logprob: -3.473419427871704
    6. '(acc' → logprob: -4.223419189453125
    7. '(' → logprob: -4.723419189453125
    8. ' ((' → logprob: -6.723419189453125
    9. '2' → logprob: -6.973419189453125
    10. '((' → logprob: -6.973419189453125

Token 117: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1479252427816391
    2. 'acc' → logprob: -2.5229251384735107
    3. ' acc' → logprob: -3.2729251384735107
    4. '(acc' → logprob: -4.64792537689209
    5. ' ' → logprob: -5.14792537689209
    6. '(' → logprob: -5.89792537689209
    7. '((' → logprob: -7.52292537689209
    8. ' (' → logprob: -8.02292537689209
    9. '0' → logprob: -8.89792537689209
    10. '2' → logprob: -9.96042537689209

Token 118: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012531552463769913
    2. '   ' → logprob: -4.387531757354736
    3. ')
' → logprob: -11.637531280517578
    4. '),' → logprob: -11.762531280517578
    5. ' )' → logprob: -13.262531280517578
    6. '       ' → logprob: -14.012531280517578
    7. '<|end|>' → logprob: -14.137531280517578
    8. ',' → logprob: -14.887531280517578
    9. '}' → logprob: -15.137531280517578
    10. ')`' → logprob: -16.012531280517578

Token 119: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00016480287013109773
    2. '   ' → logprob: -8.750164985656738
    3. ')
' → logprob: -12.500164985656738
    4. '),' → logprob: -13.875164985656738
    5. ' )' → logprob: -15.000164985656738
    6. '}' → logprob: -15.125164985656738
    7. ')...' → logprob: -15.500164985656738
    8. ',' → logprob: -15.625164985656738
    9. '<|end|>' → logprob: -16.625164031982422
    10. ')`' → logprob: -16.750164031982422

Token 120: ' )
' (ID: 3270)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2113979209971149e-05
    2. ')
' (adapté à ' )
') → logprob: -11.625012397766113
    3. ' )' → logprob: -13.125012397766113
    4. ':' → logprob: -15.125012397766113
    5. '   ' → logprob: -15.125012397766113
    6. '):' → logprob: -15.500012397766113
    7. ' ' → logprob: -16.500011444091797
    8. ')

' → logprob: -16.625011444091797
    9. ')return' → logprob: -16.750011444091797
    10. '),' → logprob: -16.875011444091797

Token 121: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.520416259765625
    2. '   ' → logprob: -1.270416259765625
    3. ',' → logprob: -2.645416259765625
    4. 'n' → logprob: -4.520416259765625
    5. ' ' → logprob: -5.020416259765625
    6. ')
' → logprob: -5.145416259765625
    7. ',
' → logprob: -5.395416259765625
    8. '
' → logprob: -5.520416259765625
    9. 'def' → logprob: -5.895416259765625
    10. '    
' → logprob: -5.895416259765625

Token 122: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7078001499176025
    2. 'return' → logprob: -1.4578001499176025
    3. 'n' → logprob: -2.8328001499176025
    4. 'reduce' → logprob: -2.9578001499176025
    5. 'result' → logprob: -3.2078001499176025
    6. 'for' → logprob: -3.4578001499176025
    7. 'def' → logprob: -3.7078001499176025
    8. 'acc' → logprob: -3.9578001499176025
    9. '   ' → logprob: -4.707799911499023
    10. 's' → logprob: -4.957799911499023

Token 123: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.36417827010154724
    2. 'n' → logprob: -1.3641782999038696
    3. ' acc' → logprob: -3.73917818069458
    4. ' t' → logprob: -5.11417818069458
    5. ' (' → logprob: -5.48917818069458
    6. ' not' → logprob: -5.86417818069458
    7. 'acc' → logprob: -5.98917818069458
    8. 't' → logprob: -5.98917818069458
    9. ' len' → logprob: -6.23917818069458
    10. '(n' → logprob: -6.48917818069458

Token 124: ' ==' (ID: 951)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.5396169424057007
    2. ' >' → logprob: -0.9146169424057007
    3. ':' → logprob: -5.66461706161499
    4. '==' → logprob: -5.78961706161499
    5. ' ' → logprob: -6.28961706161499
    6. '[' → logprob: -6.28961706161499
    7. ' ==' → logprob: -6.53961706161499
    8. '-' → logprob: -6.78961706161499
    9. ' else' → logprob: -7.28961706161499
    10. ')' → logprob: -7.53961706161499

Token 125: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0032301140017807484
    2. ' ' → logprob: -6.128230094909668
    3. '1' → logprob: -6.878230094909668
    4. '-' → logprob: -12.940730094909668
    5. '2' → logprob: -13.065730094909668
    6. '  ' → logprob: -13.315730094909668
    7. '   ' → logprob: -13.753230094909668
    8. '(' → logprob: -14.378230094909668
    9. '    ' → logprob: -14.565730094909668
    10. '100' → logprob: -14.690730094909668

Token 126: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005810309085063636
    2. '1' → logprob: -8.000580787658691
    3. ' ' → logprob: -8.375580787658691
    4. '-' → logprob: -12.125580787658691
    5. '2' → logprob: -13.188080787658691
    6. '  ' → logprob: -14.438080787658691
    7. '(' → logprob: -14.563080787658691
    8. '4' → logprob: -14.875580787658691
    9. '100' → logprob: -14.875580787658691
    10. '   ' → logprob: -14.938080787658691

Token 127: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004394509829580784
    2. ':
' → logprob: -5.75439453125
    3. ':return' → logprob: -6.87939453125
    4. ' else' → logprob: -9.25439453125
    5. ' :' → logprob: -10.12939453125
    6. '   ' → logprob: -11.12939453125
    7. 'else' → logprob: -11.12939453125
    8. ',' → logprob: -12.00439453125
    9. 'return' → logprob: -12.50439453125
    10. ' return' → logprob: -12.62939453125

Token 128: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7150201201438904
    2. ':' → logprob: -0.8400201201438904
    3. ''' → logprob: -3.090020179748535
    4. '   ' → logprob: -4.715020179748535
    5. ' '' → logprob: -5.340020179748535
    6. '''' → logprob: -5.465020179748535
    7. ':
' → logprob: -5.965020179748535
    8. ':return' → logprob: -6.090020179748535
    9. '':' → logprob: -6.590020179748535
    10. ',' → logprob: -6.590020179748535

Token 129: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.807314932346344
    2. '''' → logprob: -1.1823148727416992
    3. ' return' → logprob: -1.5573148727416992
    4. ' ''' → logprob: -4.307314872741699
    5. '''
' → logprob: -4.432314872741699
    6. ''' → logprob: -4.932314872741699
    7. '""' → logprob: -6.557314872741699
    8. ' ''
' → logprob: -7.307314872741699
    9. 'print' → logprob: -7.932314872741699
    10. '   ' → logprob: -7.932314872741699

Token 130: ' '' (ID: 461)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''' → logprob: -0.0022708738688379526
    2. '""' → logprob: -6.127270698547363
    3. '"' → logprob: -10.377270698547363
    4. ' ''' → logprob: -10.502270698547363
    5. '''
' → logprob: -11.002270698547363
    6. ''' → logprob: -11.752270698547363
    7. ''',' → logprob: -13.502270698547363
    8. '''''' → logprob: -14.752270698547363
    9. ' ""' → logprob: -15.252270698547363
    10. ''\' → logprob: -16.00227165222168

Token 131: '0' (ID: 15)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.03186351805925369
    2. '\n' → logprob: -3.6568634510040283
    3. '1' → logprob: -6.156863689422607
    4. '0' → logprob: -6.281863689422607
    5. '''' → logprob: -7.406863689422607
    6. '""' → logprob: -7.781863689422607
    7. ''
' → logprob: -8.65686321258545
    8. '"' → logprob: -8.65686321258545
    9. '')' → logprob: -9.90686321258545
    10. ''\' → logprob: -10.53186321258545

Token 132: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.06349705159664154
    2. '\n' → logprob: -3.4384970664978027
    3. ''
' → logprob: -3.5634970664978027
    4. ')' → logprob: -7.688497066497803
    5. '')' → logprob: -8.438496589660645
    6. ')'' → logprob: -8.938496589660645
    7. '
' → logprob: -10.313496589660645
    8. ' '
' → logprob: -10.563496589660645
    9. ' '' → logprob: -10.688496589660645
    10. 'n' → logprob: -10.688496589660645

Token 133: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6890197396278381
    2. '\n' → logprob: -1.3140196800231934
    3. ' ' → logprob: -2.5640196800231934
    4. ')' → logprob: -3.0640196800231934
    5. ' 
' → logprob: -3.6890196800231934
    6. ' )' → logprob: -3.8140196800231934
    7. '    
' → logprob: -4.189019680023193
    8. 'n' → logprob: -4.689019680023193
    9. '\' → logprob: -5.314019680023193
    10. ' \' → logprob: -5.439019680023193

Token 134: ' bits' (ID: 18189)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.8645034432411194
    2. 'result' → logprob: -1.1145033836364746
    3. 'acc' → logprob: -1.9895033836364746
    4. '   ' → logprob: -3.1145033836364746
    5. ')' → logprob: -3.9895033836364746
    6. 'res' → logprob: -4.114503383636475
    7. ' acc' → logprob: -4.239503383636475
    8. 'for' → logprob: -5.489503383636475
    9. ' return' → logprob: -5.614503383636475
    10. '    
' → logprob: -6.614503383636475

Token 135: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.313970148563385
    2. '=' → logprob: -1.3139700889587402
    3. ',' → logprob: -7.43897008895874
    4. ' ' → logprob: -9.313970565795898
    5. '=[]' → logprob: -11.438970565795898
    6. ')' → logprob: -11.938970565795898
    7. '   ' → logprob: -12.813970565795898
    8. '  ' → logprob: -13.563970565795898
    9. '_' → logprob: -13.938970565795898
    10. '[' → logprob: -14.188970565795898

Token 136: ' take' (ID: 2304)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.09202519804239273
    2. ' reduce' → logprob: -2.4670252799987793
    3. 'list' → logprob: -6.592025279998779
    4. 'take' → logprob: -7.342025279998779
    5. ' list' → logprob: -7.842025279998779
    6. '   ' → logprob: -8.592024803161621
    7. 'next' → logprob: -9.217024803161621
    8. ' take' → logprob: -9.342024803161621
    9. '''.' → logprob: -9.467024803161621
    10. ' ''.' → logprob: -9.717024803161621

Token 137: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -6.704273118884885e-07
    2. '_' → logprob: -15.625000953674316
    3. 'While' → logprob: -15.750000953674316
    4. ' while' → logprob: -16.125
    5. 'wise' → logprob: -16.25
    6. 'wh' → logprob: -16.75
    7. 'where' → logprob: -17.25
    8. 'wile' → logprob: -18.375
    9. '(' → logprob: -18.75
    10. '```' → logprob: -18.875

Token 138: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.0020536701194941998
    2. '(' → logprob: -6.252053737640381
    3. '(
' → logprob: -9.627053260803223
    4. '(True' → logprob: -10.252053260803223
    5. '(None' → logprob: -11.252053260803223
    6. 'lambda' → logprob: -11.752053260803223
    7. '(False' → logprob: -13.752053260803223
    8. '(len' → logprob: -14.252053260803223
    9. '(bool' → logprob: -14.752053260803223
    10. '=lambda' → logprob: -15.627053260803223

Token 139: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6788424849510193
    2. 'lambda' → logprob: -0.8038424849510193
    3. ' x' → logprob: -3.553842544555664
    4. ' lambda' → logprob: -4.178842544555664
    5. '(lambda' → logprob: -8.053842544555664
    6. 'i' → logprob: -8.178842544555664
    7. 't' → logprob: -8.803842544555664
    8. '=lambda' → logprob: -8.803842544555664
    9. 'None' → logprob: -9.428842544555664
    10. 'idx' → logprob: -10.178842544555664

Token 140: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16245907545089722
    2. 'lambda' → logprob: -2.162459135055542
    3. 'x' → logprob: -3.787459135055542
    4. '=lambda' → logprob: -5.787458896636963
    5. ' x' → logprob: -5.912458896636963
    6. ' lambda' → logprob: -5.912458896636963
    7. '(lambda' → logprob: -5.912458896636963
    8. ' :' → logprob: -7.162458896636963
    9. ':x' → logprob: -9.287459373474121
    10. 'ambda' → logprob: -9.412459373474121

Token 141: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0038398560136556625
    2. 'lambda' → logprob: -5.62883996963501
    3. ' x' → logprob: -8.378839492797852
    4. 'len' → logprob: -12.128839492797852
    5. ' lambda' → logprob: -12.878839492797852
    6. '(lambda' → logprob: -13.378839492797852
    7. '   ' → logprob: -15.878839492797852
    8. 'int' → logprob: -16.12883949279785
    9. 'operator' → logprob: -16.37883949279785
    10. '(x' → logprob: -16.62883949279785

Token 142: '[' (ID: 58)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -1.027368426322937
    2. ' <=' → logprob: -1.277368426322937
    3. '<' → logprob: -1.902368426322937
    4. ' <' → logprob: -2.2773685455322266
    5. ' x' → logprob: -3.2773685455322266
    6. '[' → logprob: -3.9023685455322266
    7. 'x' → logprob: -4.152368545532227
    8. ':' → logprob: -4.777368545532227
    9. '=' → logprob: -5.027368545532227
    10. ',' → logprob: -6.027368545532227

Token 143: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00558827631175518
    2. '1' → logprob: -5.380588054656982
    3. '<' → logprob: -7.380588054656982
    4. ' ' → logprob: -9.38058853149414
    5. '<=' → logprob: -9.88058853149414
    6. '>' → logprob: -10.13058853149414
    7. '4' → logprob: -10.75558853149414
    8. '3' → logprob: -10.75558853149414
    9. '==' → logprob: -10.88058853149414
    10. '2' → logprob: -11.13058853149414

Token 144: ']' (ID: 60)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4210447072982788
    2. '<=' → logprob: -2.4210448265075684
    3. ' <=' → logprob: -2.6710448265075684
    4. '<' → logprob: -3.1710448265075684
    5. ' <' → logprob: -3.7960448265075684
    6. '==' → logprob: -4.046044826507568
    7. '[' → logprob: -4.171044826507568
    8. ' !=' → logprob: -4.171044826507568
    9. '!=' → logprob: -4.296044826507568
    10. '>' → logprob: -4.796044826507568

Token 145: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.684324324131012
    2. ' x' → logprob: -2.559324264526367
    3. 'x' → logprob: -2.809324264526367
    4. ')' → logprob: -3.309324264526367
    5. ' <=' → logprob: -3.309324264526367
    6. '<=' → logprob: -3.309324264526367
    7. ' ,' → logprob: -3.434324264526367
    8. '<' → logprob: -3.684324264526367
    9. '!=' → logprob: -3.809324264526367
    10. '==' → logprob: -3.809324264526367

Token 146: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.022620875388383865
    2. '1' → logprob: -4.272620677947998
    3. ' x' → logprob: -4.897620677947998
    4. ' ' → logprob: -8.272621154785156
    5. '0' → logprob: -8.397621154785156
    6. 'n' → logprob: -9.022621154785156
    7. '2' → logprob: -9.522621154785156
    8. 'bits' → logprob: -9.647621154785156
    9. '[' → logprob: -9.897621154785156
    10. 'len' → logprob: -10.022621154785156

Token 147: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.013870105147361755
    2. ' ' → logprob: -5.1388702392578125
    3. '0' → logprob: -5.2638702392578125
    4. '1' → logprob: -6.7638702392578125
    5. '   ' → logprob: -8.263870239257812
    6. '<|end|>' → logprob: -8.513870239257812
    7. ')' → logprob: -9.013870239257812
    8. '(' → logprob: -9.263870239257812
    9. '...' → logprob: -9.388870239257812
    10. '2' → logprob: -9.388870239257812

Token 148: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2440541535615921
    2. '0' → logprob: -2.369054079055786
    3. '3' → logprob: -2.494054079055786
    4. '1' → logprob: -3.244054079055786
    5. '[' → logprob: -7.369054317474365
    6. ' ' → logprob: -8.619053840637207
    7. 'x' → logprob: -8.744053840637207
    8. '4' → logprob: -9.244053840637207
    9. '-' → logprob: -9.244053840637207
    10. '   ' → logprob: -9.494053840637207

Token 149: '],' (ID: 2155)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.6538602709770203
    2. '<' → logprob: -1.903860330581665
    3. ' >' → logprob: -1.903860330581665
    4. '>' → logprob: -2.653860330581665
    5. ' <=' → logprob: -2.903860330581665
    6. ',' → logprob: -3.153860330581665
    7. '<=' → logprob: -4.778860092163086
    8. ' ,' → logprob: -6.278860092163086
    9. ',
' → logprob: -7.403860092163086
    10. ' ' → logprob: -7.528860092163086

Token 150: ' zip' (ID: 16216)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.580403745174408
    2. 'count' → logprob: -0.830403745174408
    3. 'lambda' → logprob: -6.455403804779053
    4. ' lambda' → logprob: -6.580403804779053
    5. '   ' → logprob: -7.580403804779053
    6. ' enumerate' → logprob: -8.080403327941895
    7. 'enumer' → logprob: -8.830403327941895
    8. 'take' → logprob: -9.080403327941895
    9. '(count' → logprob: -9.705403327941895
    10. 'zip' → logprob: -9.830403327941895

Token 151: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.04316201061010361
    2. '(' → logprob: -3.9181621074676514
    3. '(range' → logprob: -3.9181621074676514
    4. '(
' → logprob: -6.168161869049072
    5. 'count' → logprob: -8.16816234588623
    6. '(t' → logprob: -10.29316234588623
    7. '(re' → logprob: -10.79316234588623
    8. 'range' → logprob: -11.41816234588623
    9. '(*' → logprob: -11.66816234588623
    10. '(c' → logprob: -12.16816234588623

Token 152: '(),' (ID: 2547)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00537237199023366
    2. '(),' → logprob: -5.755372524261475
    3. '(start' → logprob: -7.130372524261475
    4. '(count' → logprob: -7.880372524261475
    5. '()' → logprob: -8.005372047424316
    6. 'from' → logprob: -8.755372047424316
    7. '(
' → logprob: -8.755372047424316
    8. '(from' → logprob: -9.130372047424316
    9. '((' → logprob: -9.755372047424316
    10. '()),' → logprob: -10.505372047424316

Token 153: ' [' (ID: 723)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -1.1561497449874878
    2. 'range' → logprob: -1.2811497449874878
    3. 'repeat' → logprob: -2.7811498641967773
    4. ''' → logprob: -2.9061498641967773
    5. 'bits' → logprob: -3.1561498641967773
    6. 'acc' → logprob: -3.1561498641967773
    7. '[' → logprob: -3.5311498641967773
    8. 'count' → logprob: -3.7811498641967773
    9. '('' → logprob: -3.7811498641967773
    10. 'take' → logprob: -4.031149864196777

Token 154: 'n' (ID: 77)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2839343845844269
    2. '0' → logprob: -2.0339343547821045
    3. 'n' → logprob: -2.6589343547821045
    4. '(' → logprob: -4.158934593200684
    5. 'int' → logprob: -4.658934593200684
    6. '3' → logprob: -4.658934593200684
    7. 'f' → logprob: -5.908934593200684
    8. '2' → logprob: -6.408934593200684
    9. '(n' → logprob: -6.533934593200684
    10. 'False' → logprob: -6.908934593200684

Token 155: ']*' (ID: 18579)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.7864147424697876
    2. '.bit' → logprob: -1.5364147424697876
    3. ',' → logprob: -2.161414623260498
    4. '-' → logprob: -2.286414623260498
    5. ']' → logprob: -2.911414623260498
    6. ' -' → logprob: -4.036414623260498
    7. ' >>' → logprob: -4.286414623260498
    8. '>' → logprob: -5.036414623260498
    9. 'bit' → logprob: -5.536414623260498
    10. '-bit' → logprob: -6.161414623260498

Token 156: '200' (ID: 1179)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8162998557090759
    2. '(n' → logprob: -1.0662999153137207
    3. '4' → logprob: -2.6912999153137207
    4. 'len' → logprob: -2.8162999153137207
    5. '(len' → logprob: -3.6912999153137207
    6. '(' → logprob: -3.8162999153137207
    7. '3' → logprob: -4.816299915313721
    8. '1' → logprob: -5.066299915313721
    9. '2' → logprob: -5.441299915313721
    10. '5' → logprob: -5.566299915313721

Token 157: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10694706439971924
    2. '))' → logprob: -2.4819469451904297
    3. ')' → logprob: -4.60694694519043
    4. ' ,' → logprob: -5.85694694519043
    5. ')))' → logprob: -6.85694694519043
    6. '0' → logprob: -7.10694694519043
    7. '),' → logprob: -7.10694694519043
    8. '))
' → logprob: -7.98194694519043
    9. ' ))' → logprob: -7.98194694519043
    10. ',n' → logprob: -7.98194694519043

Token 158: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5672343373298645
    2. 'range' → logprob: -1.5672342777252197
    3. 'count' → logprob: -2.1922342777252197
    4. '[n' → logprob: -3.6922342777252197
    5. ''' → logprob: -4.317234516143799
    6. '['' → logprob: -4.442234516143799
    7. 'take' → logprob: -4.817234516143799
    8. 'map' → logprob: -5.192234516143799
    9. '[count' → logprob: -5.192234516143799
    10. 'repeat' → logprob: -5.192234516143799

Token 159: '0' (ID: 15)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4238480031490326
    2. '0' → logprob: -1.673848032951355
    3. '1' → logprob: -2.7988479137420654
    4. '(n' → logprob: -3.0488479137420654
    5. '(' → logprob: -4.2988481521606445
    6. '200' → logprob: -5.0488481521606445
    7. 'reduce' → logprob: -5.0488481521606445
    8. '2' → logprob: -5.2988481521606445
    9. 'int' → logprob: -5.5488481521606445
    10. '3' → logprob: -6.2988481521606445

Token 160: ']*' (ID: 18579)
  Prédit: ']))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.3307453989982605
    2. ',' → logprob: -1.4557454586029053
    3. ']' → logprob: -3.7057454586029053
    4. '],' → logprob: -4.455745220184326
    5. '])))' → logprob: -5.455745220184326
    6. '])' → logprob: -5.830745220184326
    7. ']),' → logprob: -7.080745220184326
    8. ' ]' → logprob: -7.205745220184326
    9. '])):
' → logprob: -7.205745220184326
    10. ']*' → logprob: -7.830745220184326

Token 161: '200' (ID: 1179)
  Prédit: '200'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '200' → logprob: -0.000452241423772648
    2. ' ' → logprob: -8.375452041625977
    3. '199' → logprob: -9.625452041625977
    4. '2' → logprob: -10.375452041625977
    5. '1' → logprob: -10.750452041625977
    6. '   ' → logprob: -10.750452041625977
    7. '20' → logprob: -11.250452041625977
    8. '100' → logprob: -11.375452041625977
    9. '201' → logprob: -11.500452041625977
    10. '198' → logprob: -11.750452041625977

Token 162: ',' (ID: 11)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.18770377337932587
    2. ',' → logprob: -1.8127037286758423
    3. ' ))' → logprob: -6.062703609466553
    4. ')))' → logprob: -6.187703609466553
    5. ')' → logprob: -6.312703609466553
    6. '))
' → logprob: -7.062703609466553
    7. '   ' → logprob: -8.312704086303711
    8. ' ,' → logprob: -8.812704086303711
    9. ' ' → logprob: -8.937704086303711
    10. '),' → logprob: -9.312704086303711

Token 163: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6373066306114197
    2. ' [' → logprob: -0.7623066306114197
    3. '[count' → logprob: -6.3873066902160645
    4. '[n' → logprob: -7.3873066902160645
    5. ' range' → logprob: -7.5123066902160645
    6. 'range' → logprob: -7.7623066902160645
    7. 'count' → logprob: -7.7623066902160645
    8. ' count' → logprob: -8.137306213378906
    9. '   ' → logprob: -8.887306213378906
    10. ' ' → logprob: -9.262306213378906

Token 164: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8228698968887329
    2. '1' → logprob: -1.072869896888733
    3. '200' → logprob: -1.572869896888733
    4. 'n' → logprob: -5.197869777679443
    5. '2' → logprob: -5.947869777679443
    6. '199' → logprob: -7.197869777679443
    7. '100' → logprob: -7.572869777679443
    8. '201' → logprob: -7.947869777679443
    9. '(' → logprob: -8.197870254516602
    10. '4' → logprob: -8.322870254516602

Token 165: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.029851499944925308
    2. ']' → logprob: -3.7798514366149902
    3. ',' → logprob: -5.40485143661499
    4. ']))' → logprob: -6.65485143661499
    5. '])' → logprob: -8.404851913452148
    6. ']))
' → logprob: -8.654851913452148
    7. ' ]' → logprob: -9.404851913452148
    8. '   ' → logprob: -9.779851913452148
    9. '*' → logprob: -9.904851913452148
    10. ']+' → logprob: -10.404851913452148

Token 166: '200' (ID: 1179)
  Prédit: '200'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '200' → logprob: -0.006117913872003555
    2. '1' → logprob: -5.256117820739746
    3. '2' → logprob: -8.506117820739746
    4. '20' → logprob: -8.756117820739746
    5. '100' → logprob: -9.131117820739746
    6. '201' → logprob: -9.381117820739746
    7. 'n' → logprob: -9.506117820739746
    8. ' ' → logprob: -9.506117820739746
    9. '4' → logprob: -9.756117820739746
    10. '0' → logprob: -10.381117820739746

Token 167: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.01058872789144516
    2. ')' → logprob: -4.635588645935059
    3. ')))' → logprob: -7.635588645935059
    4. '),' → logprob: -8.760588645935059
    5. '))
' → logprob: -9.135588645935059
    6. ',' → logprob: -10.510588645935059
    7. ' ))' → logprob: -10.760588645935059
    8. '   ' → logprob: -10.885588645935059
    9. ' ' → logprob: -12.510588645935059
    10. ')
' → logprob: -12.635588645935059

Token 168: '   ' (ID: 271)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4420439302921295
    2. ')' → logprob: -1.1920439004898071
    3. '   ' → logprob: -3.5670440196990967
    4. '(' → logprob: -5.067043781280518
    5. ',
' → logprob: -5.442043781280518
    6. '[' → logprob: -5.692043781280518
    7. ' ' → logprob: -6.192043781280518
    8. ' ,' → logprob: -6.192043781280518
    9. ':' → logprob: -6.942043781280518
    10. '    ' → logprob: -7.317043781280518

Token 169: ' out' (ID: 842)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.39682716131210327
    2. 'reduce' → logprob: -1.521827220916748
    3. '   ' → logprob: -3.771827220916748
    4. 'bits' → logprob: -4.271827220916748
    5. ',' → logprob: -4.396827220916748
    6. ' reduce' → logprob: -5.146827220916748
    7. 'acc' → logprob: -5.146827220916748
    8. 'return' → logprob: -5.146827220916748
    9. 'for' → logprob: -5.396827220916748
    10. ' for' → logprob: -5.396827220916748

Token 170: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04797818511724472
    2. ' =' → logprob: -3.172978162765503
    3. ',' → logprob: -5.422978401184082
    4. 'put' → logprob: -8.047978401184082
    5. ')' → logprob: -9.547978401184082
    6. 'puts' → logprob: -9.797978401184082
    7. '.' → logprob: -10.797978401184082
    8. '_' → logprob: -11.172978401184082
    9. '=[]' → logprob: -11.297978401184082
    10. 'pute' → logprob: -11.672978401184082

Token 171: ' reduce' (ID: 10389)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.001935661886818707
    2. ' reduce' → logprob: -6.2519354820251465
    3. '   ' → logprob: -12.376935958862305
    4. 'list' → logprob: -13.501935958862305
    5. ' ' → logprob: -14.876935958862305
    6. '    ' → logprob: -15.126935958862305
    7. 'f' → logprob: -15.501935958862305
    8. '  ' → logprob: -16.251935958862305
    9. '''.' → logprob: -16.376935958862305
    10. 'str' → logprob: -16.751935958862305

Token 172: '(
' (ID: 1607)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.006930504459887743
    2. '(' → logprob: -5.006930351257324
    3. '(
' → logprob: -8.881930351257324
    4. ' f' → logprob: -10.506930351257324
    5. ' (' → logprob: -11.006930351257324
    6. '(lambda' → logprob: -11.256930351257324
    7. '   ' → logprob: -11.756930351257324
    8. '	f' → logprob: -11.756930351257324
    9. 'f' → logprob: -12.631930351257324
    10. '(
' → logprob: -15.631930351257324

Token 173: '       ' (ID: 309)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.08701452612876892
    2. '   ' → logprob: -2.5870144367218018
    3. ' f' → logprob: -4.837014675140381
    4. '       ' → logprob: -8.962014198303223
    5. '	f' → logprob: -10.962014198303223
    6. ' ' → logprob: -11.962014198303223
    7. ')' → logprob: -13.462014198303223
    8. '           ' → logprob: -13.462014198303223
    9. '(f' → logprob: -13.462014198303223
    10. '  ' → logprob: -13.587014198303223

Token 174: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' (adapté à ' f') → logprob: -0.0009469495271332562
    2. ' f' → logprob: -7.625946998596191
    3. '   ' → logprob: -7.750946998596191
    4. 'lambda' → logprob: -11.125946998596191
    5. '	f' → logprob: -12.250946998596191
    6. '       ' → logprob: -12.375946998596191
    7. ' lambda' → logprob: -13.375946998596191
    8. '           ' → logprob: -13.875946998596191
    9. ' ' → logprob: -14.125946998596191
    10. '    ' → logprob: -14.875946998596191

Token 175: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.160971628967673e-05
    2. ' ,' → logprob: -10.125082015991211
    3. ',
' → logprob: -11.125082015991211
    4. '   ' → logprob: -11.625082015991211
    5. 'lambda' → logprob: -12.250082015991211
    6. '=lambda' → logprob: -12.625082015991211
    7. ')' → logprob: -12.875082015991211
    8. '(lambda' → logprob: -13.125082015991211
    9. ',b' → logprob: -13.625082015991211
    10. ',f' → logprob: -14.125082015991211

Token 176: '       ' (ID: 309)
  Prédit: '('','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('',' → logprob: -0.9021193981170654
    2. '('' → logprob: -1.4021193981170654
    3. 'bits' → logprob: -2.1521193981170654
    4. ' ('' → logprob: -2.4021193981170654
    5. '(' → logprob: -3.1521193981170654
    6. '       ' → logprob: -3.9021193981170654
    7. ' bits' → logprob: -4.0271196365356445
    8. '   ' → logprob: -4.1521196365356445
    9. '['' → logprob: -4.6521196365356445
    10. ' (' → logprob: -4.7771196365356445

Token 177: ' bits' (ID: 18189)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' (adapté à ' bits') → logprob: -0.001695057493634522
    2. ' bits' → logprob: -6.501695156097412
    3. '   ' → logprob: -8.876694679260254
    4. '       ' → logprob: -10.751694679260254
    5. '           ' → logprob: -10.876694679260254
    6. 'bit' → logprob: -13.126694679260254
    7. '    ' → logprob: -13.251694679260254
    8. ' ' → logprob: -13.626694679260254
    9. '(bits' → logprob: -13.876694679260254
    10. 'take' → logprob: -14.126694679260254

Token 178: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006881289882585406
    2. ',
' → logprob: -7.750688076019287
    3. ' ,' → logprob: -8.875688552856445
    4. '   ' → logprob: -9.750688552856445
    5. ','' → logprob: -10.375688552856445
    6. ')' → logprob: -11.250688552856445
    7. '[' → logprob: -11.875688552856445
    8. ',"' → logprob: -14.125688552856445
    9. '=('' → logprob: -14.125688552856445
    10. '0' → logprob: -14.375688552856445

Token 179: '       ' (ID: 309)
  Prédit: '('','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('',' → logprob: -0.10303916037082672
    2. '('' → logprob: -2.603039264678955
    3. ' ('' → logprob: -3.978039264678955
    4. '("",' → logprob: -6.603039264678955
    5. ''' → logprob: -6.853039264678955
    6. '   ' → logprob: -7.353039264678955
    7. '(' → logprob: -7.478039264678955
    8. '''' → logprob: -7.478039264678955
    9. '       ' → logprob: -7.978039264678955
    10. ''',' → logprob: -9.478038787841797

Token 180: ' ('' (ID: 9906)
  Prédit: '('','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('',' → logprob: -0.06135416403412819
    2. '('' (adapté à ' ('') → logprob: -3.061354160308838
    3. '("",' → logprob: -4.561354160308838
    4. ' ('' → logprob: -6.186354160308838
    5. '(
' → logprob: -9.686354637145996
    6. '("' → logprob: -9.936354637145996
    7. ' ("' → logprob: -10.686354637145996
    8. '(' → logprob: -10.936354637145996
    9. '   ' → logprob: -11.561354637145996
    10. '(""' → logprob: -12.186354637145996

Token 181: '',' (ID: 787)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3404195010662079
    2. '',' → logprob: -1.3404195308685303
    3. '','' → logprob: -4.590419292449951
    4. '1' → logprob: -4.840419292449951
    5. ''' → logprob: -4.840419292449951
    6. '',['' → logprob: -8.59041976928711
    7. '',
' → logprob: -8.71541976928711
    8. '',"' → logprob: -9.46541976928711
    9. ''',' → logprob: -9.59041976928711
    10. '',[' → logprob: -9.71541976928711

Token 182: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.045783910900354385
    2. '1' → logprob: -3.7957839965820312
    3. '(n' → logprob: -4.670783996582031
    4. '3' → logprob: -6.045783996582031
    5. '(' → logprob: -6.170783996582031
    6. '0' → logprob: -6.295783996582031
    7. ' n' → logprob: -6.545783996582031
    8. '2' → logprob: -6.795783996582031
    9. '15' → logprob: -7.295783996582031
    10. '7' → logprob: -7.545783996582031

Token 183: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0034979116171598434
    2. ' ,' → logprob: -5.878498077392578
    3. '0' → logprob: -8.003498077392578
    4. '1' → logprob: -8.878498077392578
    5. '   ' → logprob: -10.003498077392578
    6. '2' → logprob: -10.253498077392578
    7. '-' → logprob: -10.253498077392578
    8. ' ' → logprob: -10.503498077392578
    9. '3' → logprob: -11.378498077392578
    10. '4' → logprob: -11.503498077392578

Token 184: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07072066515684128
    2. '1' → logprob: -2.695720672607422
    3. 'n' → logprob: -8.070720672607422
    4. ' ' → logprob: -8.570720672607422
    5. '(' → logprob: -9.320720672607422
    6. '(n' → logprob: -9.445720672607422
    7. 'False' → logprob: -9.945720672607422
    8. '2' → logprob: -11.070720672607422
    9. '((' → logprob: -11.195720672607422
    10. 'True' → logprob: -11.820720672607422

Token 185: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6385608315467834
    2. '1' → logprob: -0.7635608315467834
    3. '3' → logprob: -5.638560771942139
    4. 'n' → logprob: -6.638560771942139
    5. ' ' → logprob: -8.138561248779297
    6. '2' → logprob: -8.513561248779297
    7. '(' → logprob: -8.638561248779297
    8. 'True' → logprob: -9.263561248779297
    9. '(n' → logprob: -9.263561248779297
    10. 'int' → logprob: -9.888561248779297

Token 186: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.624555291840807e-05
    2. ' ,' → logprob: -10.000076293945312
    3. ')' → logprob: -10.750076293945312
    4. '0' → logprob: -13.000076293945312
    5. '   ' → logprob: -13.000076293945312
    6. ',
' → logprob: -13.125076293945312
    7. ',)' → logprob: -14.750076293945312
    8. ' ' → logprob: -15.125076293945312
    9. ',n' → logprob: -15.125076293945312
    10. '  ' → logprob: -15.250076293945312

Token 187: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01971680298447609
    2. '1' → logprob: -4.144716739654541
    3. ' ' → logprob: -5.644716739654541
    4. 'n' → logprob: -9.2697172164917
    5. '   ' → logprob: -10.6447172164917
    6. ' n' → logprob: -11.5197172164917
    7. '  ' → logprob: -13.2697172164917
    8. ')' → logprob: -14.0197172164917
    9. '    ' → logprob: -14.0822172164917
    10. '2' → logprob: -14.2697172164917

Token 188: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03505842760205269
    2. '1' → logprob: -3.4100584983825684
    3. ' ' → logprob: -6.660058498382568
    4. 'n' → logprob: -9.16005802154541
    5. '   ' → logprob: -11.53505802154541
    6. ' n' → logprob: -12.47255802154541
    7. '  ' → logprob: -13.47255802154541
    8. '2' → logprob: -13.72255802154541
    9. ')' → logprob: -14.03505802154541
    10. '(' → logprob: -14.22255802154541

Token 189: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.741137283621356e-05
    2. ')
' → logprob: -10.250057220458984
    3. '))' → logprob: -11.375057220458984
    4. '   ' → logprob: -11.750057220458984
    5. ' )' → logprob: -13.375057220458984
    6. ')))' → logprob: -14.250057220458984
    7. '),' → logprob: -15.875057220458984
    8. ')}' → logprob: -16.250057220458984
    9. '))))' → logprob: -17.125057220458984
    10. ')`' → logprob: -17.125057220458984

Token 190: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001966343028470874
    2. '   ' → logprob: -6.25196647644043
    3. ')
' → logprob: -10.37696647644043
    4. ')`' → logprob: -13.37696647644043
    5. '),' → logprob: -13.87696647644043
    6. '))' → logprob: -14.00196647644043
    7. ' )' → logprob: -14.25196647644043
    8. ')))' → logprob: -14.75196647644043
    9. '`)' → logprob: -15.00196647644043
    10. ')...' → logprob: -15.00196647644043

Token 191: ' )[' (ID: 192008)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0035347328521311283
    2. '   ' → logprob: -5.75353479385376
    3. ')
' → logprob: -8.003534317016602
    4. ')[' (adapté à ' )[') → logprob: -11.128534317016602
    5. ' ' → logprob: -12.628534317016602
    6. ' )' → logprob: -13.253534317016602
    7. ')`' → logprob: -13.378534317016602
    8. '  ' → logprob: -15.628534317016602
    9. ').' → logprob: -15.628534317016602
    10. '))' → logprob: -15.753534317016602

Token 192: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -15.500000953674316
    3. '1' → logprob: -16.375
    4. '```' → logprob: -16.875
    5. '   ' → logprob: -17.1875
    6. '000' → logprob: -17.375
    7. '۰' → logprob: -17.6875
    8. '-' → logprob: -17.75
    9. '[' → logprob: -18.125
    10. '
' → logprob: -18.3125

Token 193: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010020548506872728
    2. ']' → logprob: -9.375100135803223
    3. ' )' → logprob: -11.625100135803223
    4. '<|end|>' → logprob: -13.125100135803223
    5. '}' → logprob: -13.375100135803223
    6. ')]' → logprob: -14.500100135803223
    7. '')' → logprob: -14.750100135803223
    8. ')return' → logprob: -15.000100135803223
    9. ')
' → logprob: -15.125100135803223
    10. ')}' → logprob: -15.250100135803223

Token 194: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0016263832803815603
    2. '
' → logprob: -6.751626491546631
    3. ' return' → logprob: -8.501626014709473
    4. 'return' → logprob: -8.501626014709473
    5. '	return' → logprob: -10.876626014709473
    6. '    
' → logprob: -11.126626014709473
    7. '<|end|>' → logprob: -11.751626014709473
    8. ')' → logprob: -13.001626014709473
    9. '       ' → logprob: -14.001626014709473
    10. '    ' → logprob: -14.251626014709473

Token 195: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.47981518507003784
    2. '   ' → logprob: -1.2298152446746826
    3. '
' → logprob: -2.6048152446746826
    4. ' return' → logprob: -4.4798150062561035
    5. '	return' → logprob: -6.8548150062561035
    6. '<|end|>' → logprob: -7.4798150062561035
    7. ' ' → logprob: -7.7298150062561035
    8. '\n' → logprob: -8.229815483093262
    9. ':return' → logprob: -8.354815483093262
    10. '    
' → logprob: -8.354815483093262

Token 196: ' out' (ID: 842)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.20141363143920898
    2. ' out' → logprob: -1.701413631439209
    3. '(out' → logprob: -15.826414108276367
    4. '	out' → logprob: -16.076414108276367
    5. '[out' → logprob: -16.576414108276367
    6. '   ' → logprob: -16.951414108276367
    7. ' ' → logprob: -17.201414108276367
    8. ' ' → logprob: -18.076414108276367
    9. '```' → logprob: -18.076414108276367
    10. '$out' → logprob: -18.201414108276367

Token 197: '[::-' (ID: 159890)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05866190046072006
    2. '[' → logprob: -3.808661937713623
    3. '<|end|>' → logprob: -3.808661937713623
    4. '(' → logprob: -5.308661937713623
    5. ' ' → logprob: -6.433661937713623
    6. ']' → logprob: -6.808661937713623
    7. '\n' → logprob: -7.308661937713623
    8. '
' → logprob: -7.308661937713623
    9. '```' → logprob: -7.308661937713623
    10. '+' → logprob: -7.558661937713623

Token 198: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007767542265355587
    2. 'se' → logprob: -7.500776767730713
    3. 's' → logprob: -9.375776290893555
    4. 'e' → logprob: -9.625776290893555
    5. 'v' → logprob: -11.000776290893555
    6. 'verse' → logprob: -11.875776290893555
    7. 'string' → logprob: -12.125776290893555
    8. '-' → logprob: -12.125776290893555
    9. 'er' → logprob: -12.125776290893555
    10. 'erse' → logprob: -12.250776290893555

Token 199: '][:' (ID: 63357)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.1008713702030946e-06
    2. ' )' → logprob: -13.625001907348633
    3. ')
' → logprob: -14.750001907348633
    4. '')' → logprob: -16.125001907348633
    5. ']' → logprob: -16.375001907348633
    6. ')`' → logprob: -16.375001907348633
    7. '<|end|>' → logprob: -18.250001907348633
    8. '))' → logprob: -18.250001907348633
    9. '),' → logprob: -18.375001907348633
    10. '`)' → logprob: -18.500001907348633

Token 200: 'len' (ID: 3303)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0009044341859407723
    2. ' n' → logprob: -7.125904560089111
    3. 'len' → logprob: -10.750904083251953
    4. '64' → logprob: -10.875904083251953
    5. '32' → logprob: -11.375904083251953
    6. '10' → logprob: -12.125904083251953
    7. '1' → logprob: -12.500904083251953
    8. '100' → logprob: -12.500904083251953
    9. '20' → logprob: -12.875904083251953
    10. ' -' → logprob: -12.875904083251953

Token 201: '(bin' (ID: 117327)
  Prédit: '(str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.18224377930164337
    2. '(bin' → logprob: -2.182243824005127
    3. '(out' → logprob: -2.932243824005127
    4. '(' → logprob: -8.307243347167969
    5. '(bits' → logprob: -8.432243347167969
    6. '(n' → logprob: -10.682243347167969
    7. '(bit' → logprob: -11.682243347167969
    8. 'bin' → logprob: -11.682243347167969
    9. '(binary' → logprob: -11.807243347167969
    10. '(s' → logprob: -12.057243347167969

Token 202: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00015097891446202993
    2. '(' → logprob: -8.875150680541992
    3. 'n' → logprob: -12.375150680541992
    4. ' (' → logprob: -12.625150680541992
    5. ')n' → logprob: -13.375150680541992
    6. ')' → logprob: -13.875150680541992
    7. '((' → logprob: -15.000150680541992
    8. '(
' → logprob: -15.250150680541992
    9. ')(' → logprob: -16.000150680541992
    10. '```' → logprob: -16.375150680541992

Token 203: '))-' (ID: 172027)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0044785430654883385
    2. '(' → logprob: -5.629478454589844
    3. ')[' → logprob: -7.879478454589844
    4. ')' → logprob: -8.879478454589844
    5. '))-' → logprob: -9.004478454589844
    6. '))' → logprob: -9.254478454589844
    7. '())' → logprob: -10.379478454589844
    8. ')-' → logprob: -10.379478454589844
    9. ')n' → logprob: -11.004478454589844
    10. ' (' → logprob: -11.004478454589844

Token 204: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0006735934875905514
    2. '3' → logprob: -7.375673770904541
    3. '1' → logprob: -11.000673294067383
    4. '
' → logprob: -11.000673294067383
    5. '```' → logprob: -12.750673294067383
    6. '-' → logprob: -12.875673294067383
    7. ' ' → logprob: -13.625673294067383
    8. '

' → logprob: -14.000673294067383
    9. '(' → logprob: -14.063173294067383
    10. ']' → logprob: -14.188173294067383

Token 205: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.277553620748222e-05
    2. ']' → logprob: -10.000062942504883
    3. '])' → logprob: -12.125062942504883
    4. ')]' → logprob: -12.125062942504883
    5. ' )' → logprob: -12.750062942504883
    6. ')
' → logprob: -14.125062942504883
    7. '   ' → logprob: -14.500062942504883
    8. '))' → logprob: -14.500062942504883
    9. '')' → logprob: -14.625062942504883
    10. ')`' → logprob: -15.000062942504883

Token 206: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023934410884976387
    2. '<|end|>' → logprob: -4.273934364318848
    3. '#' → logprob: -6.023934364318848
    4. '[' → logprob: -6.273934364318848
    5. ']' → logprob: -6.273934364318848
    6. '
' → logprob: -7.523934364318848
    7. ' ' → logprob: -7.648934364318848
    8. ':' → logprob: -7.773934364318848
    9. '(' → logprob: -7.898934364318848
    10. ',' → logprob: -8.148934364318848

Token 207: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10273845493793488
    2. ' n' → logprob: -2.352738380432129
    3. 'len' → logprob: -6.102738380432129
    4. ' len' → logprob: -8.727738380432129
    5. 'out' → logprob: -10.352738380432129
    6. 'not' → logprob: -10.977738380432129
    7. ' isinstance' → logprob: -10.977738380432129
    8. '(n' → logprob: -11.227738380432129
    9. '   ' → logprob: -11.477738380432129
    10. ' not' → logprob: -11.727738380432129

Token 208: ' else' (ID: 1203)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.6353093385696411
    2. ' >' → logprob: -0.7603093385696411
    3. ' !=' → logprob: -7.010309219360352
    4. ' else' → logprob: -7.635309219360352
    5. '!=' → logprob: -7.635309219360352
    6. 'else' → logprob: -7.760309219360352
    7. ' >=' → logprob: -8.885309219360352
    8. '>=' → logprob: -9.135309219360352
    9. '<|end|>' → logprob: -9.885309219360352
    10. '==' → logprob: -11.010309219360352

Token 209: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0922795906662941
    2. '''' → logprob: -2.4672796726226807
    3. ' '' → logprob: -5.967279434204102
    4. ' ''' → logprob: -7.467279434204102
    5. '"' → logprob: -8.842279434204102
    6. '""' → logprob: -10.592279434204102
    7. '''
' → logprob: -11.217279434204102
    8. ''n' → logprob: -12.967279434204102
    9. '0' → logprob: -13.092279434204102
    10. '   ' → logprob: -13.217279434204102

Token 210: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.722539834911004e-05
    2. ''' → logprob: -9.250097274780273
    3. '''' → logprob: -14.875097274780273
    4. ''''' → logprob: -15.250097274780273
    5. '1' → logprob: -15.375097274780273
    6. '"' → logprob: -16.125097274780273
    7. '\n' → logprob: -16.625097274780273
    8. ')'' → logprob: -16.750097274780273
    9. '""' → logprob: -17.500097274780273
    10. ')' → logprob: -17.625097274780273

Token 211: ''

' (ID: 7497)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5319077968597412
    2. '<|end|>' → logprob: -0.9069077968597412
    3. '```' → logprob: -6.15690803527832
    4. ']' → logprob: -6.15690803527832
    5. '
' → logprob: -6.40690803527832
    6. '}' → logprob: -7.03190803527832
    7. ''' → logprob: -7.03190803527832
    8. '<|end|>' → logprob: -7.78190803527832
    9. '')' → logprob: -8.15690803527832
    10. '']' → logprob: -9.40690803527832

Token 212: 'n' (ID: 77)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17728470265865326
    2. '<|end|>' → logprob: -2.8022847175598145
    3. '(' → logprob: -3.0522847175598145
    4. '
' → logprob: -3.8022847175598145
    5. '#' → logprob: -4.5522847175598145
    6. '```' → logprob: -4.6772847175598145
    7. '[' → logprob: -5.5522847175598145
    8. ' ' → logprob: -6.4272847175598145
    9. '\n' → logprob: -6.6772847175598145
    10. 'newline' → logprob: -6.9272847175598145

Token 213: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 214: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6856770515441895
    2. '10' → logprob: -1.6856770515441895
    3. ' int' → logprob: -1.9356770515441895
    4. '0' → logprob: -2.9356770515441895
    5. ' ' → logprob: -2.9356770515441895
    6. '5' → logprob: -4.0606770515441895
    7. '1' → logprob: -4.4356770515441895
    8. '42' → logprob: -4.4356770515441895
    9. '100' → logprob: -5.4356770515441895
    10. '20' → logprob: -5.9356770515441895

Token 215: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.01994411088526249
    2. '(' → logprob: -4.019944190979004
    3. 'input' → logprob: -6.394944190979004
    4. '()' → logprob: -9.144944190979004
    5. '('' → logprob: -11.644944190979004
    6. ' (' → logprob: -12.769944190979004
    7. ' ' → logprob: -13.894944190979004
    8. '(
' → logprob: -13.894944190979004
    9. ' input' → logprob: -13.894944190979004
    10. '=input' → logprob: -14.769944190979004

Token 216: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.014288791455328465
    2. '()' → logprob: -4.264288902282715
    3. ')' → logprob: -9.139288902282715
    4. '(' → logprob: -11.514288902282715
    5. '())
' → logprob: -12.264288902282715
    6. '()
' → logprob: -14.264288902282715
    7. '('' → logprob: -14.514288902282715
    8. '().' → logprob: -14.889288902282715
    9. '();)' → logprob: -14.889288902282715
    10. '(),' → logprob: -15.389288902282715

Token 217: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.9361264946837764e-07
    2. ' print' → logprob: -17.0
    3. 'result' → logprob: -17.25
    4. '```' → logprob: -17.5
    5. '<|end|>' → logprob: -20.625
    6. '
' → logprob: -20.875
    7. '#print' → logprob: -21.125
    8. 'for' → logprob: -21.75
    9. 's' → logprob: -22.0
    10. 'answer' → logprob: -22.375

Token 218: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.002029634779319167
    2. '(' → logprob: -6.2520294189453125
    3. 'solve' → logprob: -9.752029418945312
    4. '('' → logprob: -10.502029418945312
    5. '(
' → logprob: -12.002029418945312
    6. '(f' → logprob: -13.127029418945312
    7. '(solution' → logprob: -13.252029418945312
    8. '()' → logprob: -13.252029418945312
    9. '(print' → logprob: -13.752029418945312
    10. '(sol' → logprob: -13.752029418945312

Token 219: 'olve' (ID: 11460)
  Prédit: 'olve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olve' → logprob: -2.1054253011243418e-05
    2. 'ove' → logprob: -11.125020980834961
    3. 'n' → logprob: -13.250020980834961
    4. 'solve' → logprob: -13.375020980834961
    5. '(n' → logprob: -14.125020980834961
    6. 'ol' → logprob: -14.750020980834961
    7. 'o' → logprob: -14.750020980834961
    8. 'erve' → logprob: -15.125020980834961
    9. '(' → logprob: -15.250020980834961
    10. 'olv' → logprob: -15.750020980834961

Token 220: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.008618712425231934
    2. '(' → logprob: -4.7586188316345215
    3. '(
' → logprob: -13.133618354797363
    4. ')' → logprob: -13.758618354797363
    5. ' (' → logprob: -14.133618354797363
    6. ')(' → logprob: -14.883618354797363
    7. ')n' → logprob: -17.00861930847168
    8. '(

' → logprob: -18.00861930847168
    9. 'n' → logprob: -18.13361930847168
    10. '((' → logprob: -18.50861930847168

Token 221: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.004088609013706446
    2. ')' → logprob: -5.504088401794434
    3. '))
' → logprob: -12.379088401794434
    4. ')))' → logprob: -12.504088401794434
    5. '(n' → logprob: -13.879088401794434
    6. '()))' → logprob: -14.629088401794434
    7. ')
' → logprob: -15.379088401794434
    8. '(' → logprob: -15.504088401794434
    9. ')n' → logprob: -16.12908935546875
    10. '+' → logprob: -16.50408935546875


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 219
Tokens correctement prédits (1ère position, stricte): 73
Tokens correctement prédits (1ère position, avec adaptation): 79
Tokens correctement prédits (top 10): 161
Précision stricte (1ère position): 33.33%
Précision adaptée (1ère position): 36.07%
Précision (top 10): 73.52%
================================================================================
