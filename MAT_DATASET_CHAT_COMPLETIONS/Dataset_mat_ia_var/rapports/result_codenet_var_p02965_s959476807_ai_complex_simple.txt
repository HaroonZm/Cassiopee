================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:50:54
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from itertools import accumulate, chain, repeat
from operator import mul
from functools import reduce, lru_cache

n, m = map(int, input().split())
mod = 998244353

# Redéfinition de la borne
lim = n + 2 * m + 100

# Génération oblique des préfactorielles/modinverses
def modinv(x):
    return pow(x, mod - 2, mod)

@lru_cache(maxsize=None)
def _fact(x):
    return 1 if x <= 1 else (x * _fact(x - 1)) % mod

fact_list = list(accumulate(chain([1], range(1, lim)), lambda a, b: (a * b) % mod))
finv_list = list(map(modinv, fact_list))

# Génère une table d'inverses de 1 à lim-1 par compréhension
inv_list = [0, 1] + [pow(i, mod - 2, mod) for i in range(2, lim)]

# Binomial coefficient function with baroque structure and caching
@lru_cache(maxsize=None)
def com(u, v):
    if u < v or u < 0 or v < 0:
        return 0
    try:
        return fact_list[u] * finv_list[v] % mod * finv_list[u - v] % mod
    except IndexError:
        # Pour les cas un peu hors-limite
        return (_fact(u) * modinv(_fact(v)) % mod) * modinv(_fact(u - v)) % mod

# Calcul de a avec réductions sophistiquées et une boucle sur un générateur filtré
def madd(x, y): return (x + y) % mod

def makeseq():
    for x in filter(lambda q: (3 * m - q) % 2 == 0, range(min(m, n) + 1)):
        y = (3 * m - x) // 2
        yield (com(n, x) *
               fact_list[y + n - 1] % mod *
               finv_list[y] % mod *
               finv_list[n - 1] % mod)

a = reduce(madd, makeseq(), 0)

# Calcul baroque de b : un produit réduit sur une compréhension paresseuse
b_elems = (fact_list[n - 1 + m - 1],
           finv_list[n - 1],
           finv_list[m - 1],
           n)
b = reduce(lambda p, q: (p * q) % mod, b_elems, 1)

# Solution finale par une combinaison de lambda et d'opérateurs
ans = (a - b) % mod

print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' itertools' (ID: 103178)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' accumulate' (ID: 74226)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.2794735431671143
    2. 'product' → logprob: -1.5294735431671143
    3. 'per' → logprob: -1.6544735431671143
    4. 'com' → logprob: -1.9044735431671143
    5. ' permutations' → logprob: -2.7794735431671143
    6. ' product' → logprob: -3.5294735431671143
    7. 'cycle' → logprob: -3.6544735431671143
    8. 'chain' → logprob: -4.654473304748535
    9. 'group' → logprob: -4.654473304748535
    10. ' cycle' → logprob: -4.904473304748535

Token 4: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003987336531281471
    2. '.' → logprob: -8.250398635864258
    3. '(
' → logprob: -9.250398635864258
    4. ',' → logprob: -11.000398635864258
    5. '\(' → logprob: -12.375398635864258
    6. '```' → logprob: -12.750398635864258
    7. ' (' → logprob: -12.875398635864258
    8. '(

' → logprob: -13.125398635864258
    9. '`' → logprob: -13.250398635864258
    10. ''' → logprob: -13.625398635864258

Token 5: ' chain' (ID: 13464)
  Prédit: 'chain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chain' → logprob: -0.7163315415382385
    2. ' chain' → logprob: -0.9663315415382385
    3. 'group' → logprob: -2.7163314819335938
    4. ' group' → logprob: -3.4663314819335938
    5. 'com' → logprob: -3.7163314819335938
    6. 'compress' → logprob: -5.841331481933594
    7. 'product' → logprob: -6.216331481933594
    8. ' product' → logprob: -7.341331481933594
    9. 'cycle' → logprob: -7.591331481933594
    10. 'filter' → logprob: -7.591331481933594

Token 6: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1196502149105072
    2. '.' → logprob: -2.24465012550354
    3. '(
' → logprob: -5.494650363922119
    4. ',' → logprob: -6.119650363922119
    5. '\' → logprob: -8.994649887084961
    6. '\(' → logprob: -9.369649887084961
    7. 'import' → logprob: -9.619649887084961
    8. '\n' → logprob: -9.994649887084961
    9. '```' → logprob: -10.369649887084961
    10. '(

' → logprob: -10.369649887084961

Token 7: ' repeat' (ID: 22962)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.38328078389167786
    2. ' compress' → logprob: -1.7582807540893555
    3. 'compress' → logprob: -2.3832807540893555
    4. ' combinations' → logprob: -3.6332807540893555
    5. ' cycle' → logprob: -4.0082807540893555
    6. 'cycle' → logprob: -5.7582807540893555
    7. '```' → logprob: -6.6332807540893555
    8. ' product' → logprob: -6.7582807540893555
    9. ' group' → logprob: -7.1332807540893555
    10. '_com' → logprob: -7.3832807540893555

Token 8: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.018775692209601402
    2. '.' → logprob: -4.143775463104248
    3. ',' → logprob: -6.643775463104248
    4. '(
' → logprob: -6.768775463104248
    5. '\(' → logprob: -9.643775939941406
    6. '#' → logprob: -10.768775939941406
    7. '`' → logprob: -10.893775939941406
    8. ''' → logprob: -11.018775939941406
    9. ' (' → logprob: -11.018775939941406
    10. 'def' → logprob: -11.143775939941406

Token 9: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03305698558688164
    2. ',' → logprob: -4.15805721282959
    3. '(
' → logprob: -4.90805721282959
    4. '.' → logprob: -5.15805721282959
    5. '[' → logprob: -7.40805721282959
    6. '\' → logprob: -7.53305721282959
    7. 'def' → logprob: -7.78305721282959
    8. '\n' → logprob: -7.90805721282959
    9. ' (' → logprob: -8.28305721282959
    10. 'import' → logprob: -8.53305721282959

Token 10: ' operator' (ID: 11019)
  Prédit: ' operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.29396432638168335
    2. ' functools' → logprob: -2.168964385986328
    3. ' math' → logprob: -2.668964385986328
    4. ' collections' → logprob: -3.668964385986328
    5. 'operator' → logprob: -4.168964385986328
    6. 'fun' → logprob: -4.293964385986328
    7. 'collections' → logprob: -5.293964385986328
    8. ' sys' → logprob: -5.793964385986328
    9. 'math' → logprob: -5.793964385986328
    10. ' typing' → logprob: -6.668964385986328

Token 11: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.02712693251669407
    2. 'import' → logprob: -3.6521270275115967
    3. '.' → logprob: -7.652126789093018
    4. ' ' → logprob: -8.277127265930176
    5. '.import' → logprob: -11.027127265930176
    6. '	import' → logprob: -11.027127265930176
    7. ',' → logprob: -11.152127265930176
    8. '_import' → logprob: -11.277127265930176
    9. ' .' → logprob: -11.777127265930176
    10. ' ,' → logprob: -11.777127265930176

Token 12: ' mul' (ID: 9975)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.4450577199459076
    2. ' add' → logprob: -1.07005774974823
    3. 'mul' → logprob: -4.9450578689575195
    4. ' mul' → logprob: -6.0700578689575195
    5. ' ' → logprob: -6.5700578689575195
    6. 'import' → logprob: -6.6950578689575195
    7. ' import' → logprob: -6.9450578689575195
    8. 'item' → logprob: -7.0700578689575195
    9. '.add' → logprob: -7.3200578689575195
    10. '_add' → logprob: -7.9450578689575195

Token 13: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7091161608695984
    2. '(
' → logprob: -1.3341162204742432
    3. ',' → logprob: -2.209116220474243
    4. '*' → logprob: -3.584116220474243
    5. '\n' → logprob: -3.584116220474243
    6. '\' → logprob: -3.709116220474243
    7. ',
' → logprob: -3.959116220474243
    8. '(

' → logprob: -4.959115982055664
    9. '`' → logprob: -5.084115982055664
    10. '```' → logprob: -5.584115982055664

Token 14: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8308845162391663
    2. ',' → logprob: -1.2058844566345215
    3. '(
' → logprob: -1.8308844566345215
    4. ',
' → logprob: -3.7058844566345215
    5. 'def' → logprob: -3.8308844566345215
    6. '\n' → logprob: -4.3308844566345215
    7. '\' → logprob: -4.4558844566345215
    8. '(

' → logprob: -4.9558844566345215
    9. '`' → logprob: -5.4558844566345215
    10. ',

' → logprob: -5.7058844566345215

Token 15: ' functools' (ID: 142636)
  Prédit: 'fun'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fun' → logprob: -0.4266262948513031
    2. ' functools' → logprob: -1.1766263246536255
    3. 'math' → logprob: -3.301626205444336
    4. ' math' → logprob: -6.551626205444336
    5. 'operator' → logprob: -7.426626205444336
    6. ' itertools' → logprob: -10.301626205444336
    7. '_fun' → logprob: -10.426626205444336
    8. ' fun' → logprob: -11.176626205444336
    9. ' operator' → logprob: -11.176626205444336
    10. 'collections' → logprob: -11.801626205444336

Token 16: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.012642434798181057
    2. 'import' → logprob: -4.3876423835754395
    3. '_import' → logprob: -9.637642860412598
    4. '.' → logprob: -10.887642860412598
    5. '	import' → logprob: -10.887642860412598
    6. '_' → logprob: -11.262642860412598
    7. ' ' → logprob: -12.262642860412598
    8. ' _' → logprob: -12.387642860412598
    9. ' .' → logprob: -12.637642860412598
    10. '.import' → logprob: -13.637642860412598

Token 17: ' reduce' (ID: 10389)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.08259718865156174
    2. ' reduce' → logprob: -2.582597255706787
    3. 'partial' → logprob: -5.707597255706787
    4. ' partial' → logprob: -8.082596778869629
    5. 'l' → logprob: -10.207596778869629
    6. 'redu' → logprob: -11.457596778869629
    7. '_reduce' → logprob: -12.207596778869629
    8. 'import' → logprob: -12.332596778869629
    9. '.reduce' → logprob: -12.457596778869629
    10. ' l' → logprob: -12.957596778869629

Token 18: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4522351324558258
    2. 'def' → logprob: -2.202235221862793
    3. '\' → logprob: -2.327235221862793
    4. ',' → logprob: -2.577235221862793
    5. '(
' → logprob: -2.827235221862793
    6. '\n' → logprob: -5.827235221862793
    7. '#' → logprob: -6.202235221862793
    8. ')' → logprob: -6.327235221862793
    9. '*' → logprob: -6.452235221862793
    10. '\(' → logprob: -6.702235221862793

Token 19: ' l' (ID: 305)
  Prédit: 'partial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'partial' → logprob: -0.059437479823827744
    2. ' partial' → logprob: -2.9344375133514404
    3. 'wrap' → logprob: -6.059437274932861
    4. 'l' → logprob: -7.059437274932861
    5. ' wraps' → logprob: -7.684437274932861
    6. 'cache' → logprob: -7.934437274932861
    7. 'cmp' → logprob: -8.80943775177002
    8. ' l' → logprob: -8.93443775177002
    9. 'cached' → logprob: -10.05943775177002
    10. 'reduce' → logprob: -10.05943775177002

Token 20: 'ru' (ID: 1942)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.13005289435386658
    2. 'ru' → logprob: -2.5050528049468994
    3. 'ambda' → logprob: -3.6300528049468994
    4. 'amb' → logprob: -5.1300530433654785
    5. 'e' → logprob: -6.0050530433654785
    6. 'ist' → logprob: -6.6300530433654785
    7. 'a' → logprob: -7.0050530433654785
    8. 'z' → logprob: -7.1300530433654785
    9. 'l' → logprob: -7.3800530433654785
    10. '```' → logprob: -7.7550530433654785

Token 21: '_cache' (ID: 27045)
  Prédit: 'cache'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cache' → logprob: -0.0038083845283836126
    2. '_cache' → logprob: -5.628808498382568
    3. 'cached' → logprob: -8.87880802154541
    4. 'c' → logprob: -10.50380802154541
    5. 'ca' → logprob: -11.12880802154541
    6. 'Cache' → logprob: -11.87880802154541
    7. 'cac' → logprob: -12.37880802154541
    8. ' cache' → logprob: -12.50380802154541
    9. 'cash' → logprob: -12.87880802154541
    10. '```' → logprob: -13.00380802154541

Token 22: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5530237555503845
    2. 'def' → logprob: -1.3030238151550293
    3. '\' → logprob: -2.6780238151550293
    4. '(
' → logprob: -3.4280238151550293
    5. '#' → logprob: -4.178023815155029
    6. '\n' → logprob: -4.678023815155029
    7. ',' → logprob: -5.053023815155029
    8. 'd' → logprob: -5.803023815155029
    9. '```' → logprob: -5.803023815155029
    10. '
' → logprob: -6.053023815155029

Token 23: 'n' (ID: 77)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.9623511433601379
    2. '(' → logprob: -1.8373510837554932
    3. 'def' → logprob: -1.9623510837554932
    4. 'd' → logprob: -2.212351083755493
    5. '\' → logprob: -2.712351083755493
    6. '#' → logprob: -2.962351083755493
    7. '*' → logprob: -4.087351322174072
    8. ',' → logprob: -4.212351322174072
    9. '(
' → logprob: -4.337351322174072
    10. '```' → logprob: -4.587351322174072

Token 24: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.620980441570282
    2. '=' → logprob: -1.6209805011749268
    3. ' ' → logprob: -2.1209805011749268
    4. '_' → logprob: -2.7459805011749268
    5. 'u' → logprob: -3.1209805011749268
    6. ',' → logprob: -4.245980262756348
    7. '.' → logprob: -5.120980262756348
    8. ')' → logprob: -5.745980262756348
    9. '  ' → logprob: -6.120980262756348
    10. 'o' → logprob: -6.120980262756348

Token 25: ' m' (ID: 284)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.4920288026332855
    2. 'k' → logprob: -1.242028832435608
    3. ' m' → logprob: -2.8670287132263184
    4. 'm' → logprob: -3.2420287132263184
    5. ' ' → logprob: -6.617028713226318
    6. '=' → logprob: -7.617028713226318
    7. 'a' → logprob: -7.617028713226318
    8. ' =' → logprob: -8.117029190063477
    9. ' a' → logprob: -8.242029190063477
    10. ' r' → logprob: -8.867029190063477

Token 26: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006751731503754854
    2. '=' → logprob: -5.006751537322998
    3. ',' → logprob: -10.631752014160156
    4. ' ' → logprob: -12.256752014160156
    5. ' =
' → logprob: -12.506752014160156
    6. ' ,' → logprob: -13.006752014160156
    7. ')' → logprob: -14.881752014160156
    8. ' =",' → logprob: -15.006752014160156
    9. '  ' → logprob: -15.881752014160156
    10. ' ='' → logprob: -16.006752014160156

Token 27: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.3878887891769409
    2. 'map' → logprob: -1.512888789176941
    3. ' ' → logprob: -2.3878889083862305
    4. '10' → logprob: -5.3878889083862305
    5. '5' → logprob: -5.8878889083862305
    6. '0' → logprob: -7.6378889083862305
    7. 'input' → logprob: -8.01288890838623
    8. 'int' → logprob: -8.26288890838623
    9. ' input' → logprob: -8.76288890838623
    10. '1' → logprob: -8.76288890838623

Token 28: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.08698131144046783
    2. '(' → logprob: -2.5869812965393066
    3. '(str' → logprob: -5.461981296539307
    4. '(lambda' → logprob: -6.461981296539307
    5. 'int' → logprob: -6.586981296539307
    6. '<|end|>' → logprob: -7.711981296539307
    7. '(input' → logprob: -8.711981773376465
    8. '[int' → logprob: -9.961981773376465
    9. '<int' → logprob: -9.961981773376465
    10. 'input' → logprob: -10.211981773376465

Token 29: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2681841552257538
    2. ',input' → logprob: -1.7681841850280762
    3. '(input' → logprob: -3.018184185028076
    4. 'input' → logprob: -4.518184185028076
    5. '(' → logprob: -5.518184185028076
    6. ')' → logprob: -7.643184185028076
    7. ' input' → logprob: -9.143183708190918
    8. '=input' → logprob: -9.768183708190918
    9. ' ,' → logprob: -10.393183708190918
    10. '(),' → logprob: -11.268183708190918

Token 30: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.25198060274124146
    2. ' input' → logprob: -1.5019805431365967
    3. ')' → logprob: -10.626980781555176
    4. '(input' → logprob: -11.001980781555176
    5. ',input' → logprob: -12.376980781555176
    6. '=input' → logprob: -13.376980781555176
    7. ' ' → logprob: -13.376980781555176
    8. ' )' → logprob: -13.626980781555176
    9. 'open' → logprob: -14.376980781555176
    10. '```' → logprob: -14.626980781555176

Token 31: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.28296929597854614
    2. '()' → logprob: -1.9079692363739014
    3. '(' → logprob: -3.5329692363739014
    4. ')' → logprob: -3.7829692363739014
    5. '().' → logprob: -3.7829692363739014
    6. '());' → logprob: -4.7829694747924805
    7. '(()' → logprob: -5.1579694747924805
    8. '('' → logprob: -6.0329694747924805
    9. '(),' → logprob: -6.4079694747924805
    10. '()))' → logprob: -7.0329694747924805

Token 32: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0005566088366322219
    2. 'strip' → logprob: -7.500556468963623
    3. ' split' → logprob: -13.250556945800781
    4. 'rstrip' → logprob: -13.875556945800781
    5. ')' → logprob: -14.625556945800781
    6. '(split' → logprob: -15.250556945800781
    7. 'read' → logprob: -15.875556945800781
    8. '```' → logprob: -17.37555694580078
    9. 'spl' → logprob: -17.75055694580078
    10. 's' → logprob: -18.50055694580078

Token 33: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008013047277927399
    2. '))' → logprob: -4.8830132484436035
    3. '())' → logprob: -8.008012771606445
    4. '()' → logprob: -10.008012771606445
    5. '),' → logprob: -10.883012771606445
    6. '(' → logprob: -13.383012771606445
    7. ')))' → logprob: -13.508012771606445
    8. ')`' → logprob: -13.508012771606445
    9. '`)' → logprob: -13.633012771606445
    10. '()))' → logprob: -13.883012771606445

Token 34: 'mod' (ID: 4847)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4726921021938324
    2. ')' → logprob: -2.7226920127868652
    3. 'arr' → logprob: -2.9726920127868652
    4. 'data' → logprob: -3.4726920127868652
    5. 'fact' → logprob: -3.7226920127868652
    6. '
' → logprob: -3.8476920127868652
    7. 'numbers' → logprob: -3.9726920127868652
    8. 's' → logprob: -3.9726920127868652
    9. 'dp' → logprob: -4.472692012786865
    10. 'x' → logprob: -4.597692012786865

Token 35: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14270243048667908
    2. '=' → logprob: -2.017702341079712
    3. ' ' → logprob: -11.392702102661133
    4. ' =
' → logprob: -12.392702102661133
    5. '_' → logprob: -12.517702102661133
    6. ',' → logprob: -13.267702102661133
    7. ' =)' → logprob: -13.517702102661133
    8. ')' → logprob: -13.892702102661133
    9. '.' → logprob: -13.892702102661133
    10. '=

' → logprob: -14.392702102661133

Token 36: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6932074427604675
    2. '10' → logprob: -0.6932074427604675
    3. '100' → logprob: -9.943207740783691
    4. '1' → logprob: -11.568207740783691
    5. '998' → logprob: -14.068207740783691
    6. ' ' → logprob: -14.193207740783691
    7. 'int' → logprob: -14.693207740783691
    8. '0' → logprob: -15.443207740783691
    9. '109' → logprob: -15.943207740783691
    10. '101' → logprob: -16.818206787109375

Token 37: '998' (ID: 34589)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0012358223320916295
    2. '100' → logprob: -6.7512359619140625
    3. '1' → logprob: -10.126235961914062
    4. '998' → logprob: -10.751235961914062
    5. ' ' → logprob: -12.626235961914062
    6. '(' → logprob: -14.626235961914062
    7. 'int' → logprob: -15.001235961914062
    8. 'pow' → logprob: -17.501235961914062
    9. '`' → logprob: -17.626235961914062
    10. '```' → logprob: -17.751235961914062

Token 38: '244' (ID: 25291)
  Prédit: '244'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '244' → logprob: -2.7610454708337784e-05
    2. '247' → logprob: -11.375027656555176
    3. '457' → logprob: -12.125027656555176
    4. '24' → logprob: -13.000027656555176
    5. '```' → logprob: -13.500027656555176
    6. '243' → logprob: -13.750027656555176
    7. '573' → logprob: -14.250027656555176
    8. '447' → logprob: -14.250027656555176
    9. '254' → logprob: -15.000027656555176
    10. '544' → logprob: -15.000027656555176

Token 39: '353' (ID: 32996)
  Prédit: '353'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '353' → logprob: -0.03017967753112316
    2. '257' → logprob: -4.030179500579834
    3. '853' → logprob: -4.530179500579834
    4. '857' → logprob: -7.030179500579834
    5. '253' → logprob: -8.780179977416992
    6. '357' → logprob: -9.280179977416992
    7. '457' → logprob: -10.905179977416992
    8. '273' → logprob: -11.655179977416992
    9. '```' → logprob: -12.155179977416992
    10. '53' → logprob: -13.030179977416992

Token 40: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.22662848234176636
    2. 'n' → logprob: -2.601628541946411
    3. ' 
' → logprob: -3.726628541946411
    4. '
' → logprob: -4.101628303527832
    5. 'a' → logprob: -4.226628303527832
    6. '*' → logprob: -4.351628303527832
    7. '' → logprob: -4.601628303527832
    8. '\n' → logprob: -4.601628303527832
    9. '<|end|>' → logprob: -4.851628303527832
    10. '

' → logprob: -4.976628303527832

Token 41: '#' (ID: 2)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.24730214476585388
    2. 'dp' → logprob: -2.3723020553588867
    3. 'factor' → logprob: -3.1223020553588867
    4. 'a' → logprob: -3.2473020553588867
    5. 'f' → logprob: -4.247302055358887
    6. 'fac' → logprob: -4.997302055358887
    7. 'facts' → logprob: -5.122302055358887
    8. 'arr' → logprob: -5.997302055358887
    9. 'A' → logprob: -6.372302055358887
    10. 'def' → logprob: -6.497302055358887

Token 42: ' Red' (ID: 5952)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9644555449485779
    2. 'dp' → logprob: -1.4644556045532227
    3. 'fact' → logprob: -1.7144556045532227
    4. '#' → logprob: -2.4644556045532227
    5. ' fact' → logprob: -3.7144556045532227
    6. 'factor' → logprob: -3.8394556045532227
    7. ' dp' → logprob: -3.9644556045532227
    8. 'fac' → logprob: -4.714455604553223
    9. 'f' → logprob: -5.339455604553223
    10. 'comb' → logprob: -5.464455604553223

Token 43: 'é' (ID: 377)
  Prédit: 'uce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'uce' → logprob: -0.6153316497802734
    2. 'uced' → logprob: -1.1153316497802734
    3. 'u' → logprob: -2.9903316497802734
    4. 'uction' → logprob: -3.2403316497802734
    5. 'uc' → logprob: -4.365331649780273
    6. 'ef' → logprob: -4.615331649780273
    7. 'efined' → logprob: -5.240331649780273
    8. 'ux' → logprob: -5.490331649780273
    9. 'is' → logprob: -5.615331649780273
    10. '#' → logprob: -6.115331649780273

Token 44: 'fin' (ID: 6994)
  Prédit: 'fin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fin' → logprob: -0.2943536639213562
    2. 'f' → logprob: -1.794353723526001
    3. 'fi' → logprob: -3.294353723526001
    4. 'm' → logprob: -3.419353723526001
    5. 'mar' → logprob: -5.669353485107422
    6. 'part' → logprob: -5.794353485107422
    7. '```' → logprob: -6.044353485107422
    8. 'é' → logprob: -6.419353485107422
    9. 'ém' → logprob: -6.544353485107422
    10. 'mé' → logprob: -7.294353485107422

Token 45: 'ition' (ID: 868)
  Prédit: 'inition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inition' → logprob: -0.836001992225647
    2. 'ition' → logprob: -1.711001992225647
    3. 'ir' → logprob: -1.961001992225647
    4. 'inir' → logprob: -1.961001992225647
    5. 'fin' → logprob: -2.5860018730163574
    6. 'nir' → logprob: -4.461001873016357
    7. 'n' → logprob: -5.461001873016357
    8. 'ni' → logprob: -5.461001873016357
    9. 'in' → logprob: -6.336001873016357
    10. 'f' → logprob: -6.711001873016357

Token 46: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.27031126618385315
    2. 'de' → logprob: -2.0203113555908203
    3. 'def' → logprob: -2.6453113555908203
    4. '_de' → logprob: -4.89531135559082
    5. 's' → logprob: -5.02031135559082
    6. '_' → logprob: -5.77031135559082
    7. ' ' → logprob: -5.89531135559082
    8. ' des' → logprob: -6.02031135559082
    9. ' ' → logprob: -6.02031135559082
    10. ' def' → logprob: -6.14531135559082

Token 47: ' la' (ID: 557)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.20547601580619812
    2. 'range' → logprob: -2.5804760456085205
    3. 'mul' → logprob: -3.0804760456085205
    4. ' la' → logprob: -3.5804760456085205
    5. ' pow' → logprob: -4.455475807189941
    6. 'reduce' → logprob: -5.080475807189941
    7. ' range' → logprob: -5.955475807189941
    8. 'l' → logprob: -5.955475807189941
    9. 'acc' → logprob: -6.080475807189941
    10. '```' → logprob: -6.205475807189941

Token 48: ' borne' (ID: 111819)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8679996728897095
    2. 'factor' → logprob: -1.3679996728897095
    3. 'fact' → logprob: -2.24299955368042
    4. 'f' → logprob: -2.24299955368042
    5. 'pow' → logprob: -2.74299955368042
    6. 'fonction' → logprob: -4.99299955368042
    7. 'mod' → logprob: -4.99299955368042
    8. '@' → logprob: -5.24299955368042
    9. 'comb' → logprob: -5.36799955368042
    10. 'fac' → logprob: -5.36799955368042

Token 49: '
' (ID: 198)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10397057235240936
    2. '=' → logprob: -3.603970527648926
    3. ' =' → logprob: -3.978970527648926
    4. 's' → logprob: -4.603970527648926
    5. '_max' → logprob: -5.228970527648926
    6. ' ' → logprob: -5.228970527648926
    7. '_upper' → logprob: -5.228970527648926
    8. 'max' → logprob: -5.353970527648926
    9. 'n' → logprob: -5.603970527648926
    10. ',' → logprob: -5.853970527648926

Token 50: 'lim' (ID: 5406)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.1795363426208496
    2. '_' → logprob: -1.3045363426208496
    3. '_inf' → logprob: -2.9295363426208496
    4. '_upper' → logprob: -3.0545363426208496
    5. '_max' → logprob: -3.3045363426208496
    6. 'b' → logprob: -3.3045363426208496
    7. 'inf' → logprob: -3.4295363426208496
    8. '_b' → logprob: -3.5545363426208496
    9. 'def' → logprob: -3.5545363426208496
    10. 'upper' → logprob: -3.9295363426208496

Token 51: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9120176434516907
    2. '=' → logprob: -1.162017583847046
    3. 'it' → logprob: -1.287017583847046
    4. 'its' → logprob: -5.037017822265625
    5. '```' → logprob: -6.912017822265625
    6. 'i' → logprob: -7.787017822265625
    7. 'ite' → logprob: -8.287017822265625
    8. '=int' → logprob: -8.912017822265625
    9. ',' → logprob: -9.037017822265625
    10. 'iter' → logprob: -9.287017822265625

Token 52: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -1.1174324750900269
    2. ' min' → logprob: -1.2424324750900269
    3. ' m' → logprob: -2.1174325942993164
    4. ' ' → logprob: -2.3674325942993164
    5. ' max' → logprob: -2.4924325942993164
    6. 'min' → logprob: -3.7424325942993164
    7. 'n' → logprob: -3.9924325942993164
    8. 'm' → logprob: -4.617432594299316
    9. ' (' → logprob: -4.617432594299316
    10. 'max' → logprob: -4.867432594299316

Token 53: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.12437641620635986
    2. ' +' → logprob: -2.6243762969970703
    3. '-' → logprob: -3.6243762969970703
    4. ' ' → logprob: -6.12437629699707
    5. '-n' → logprob: -6.12437629699707
    6. '<|end|>' → logprob: -6.37437629699707
    7. '*' → logprob: -6.49937629699707
    8. '//' → logprob: -6.49937629699707
    9. ' -' → logprob: -6.62437629699707
    10. '**' → logprob: -6.62437629699707

Token 54: ' ' (ID: 220)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.07087882608175278
    2. ' m' → logprob: -3.070878744125366
    3. '1' → logprob: -3.945878744125366
    4. '2' → logprob: -6.320878982543945
    5. ' ' → logprob: -7.945878982543945
    6. '3' → logprob: -9.195878982543945
    7. 'n' → logprob: -9.820878982543945
    8. '(' → logprob: -9.820878982543945
    9. '4' → logprob: -9.945878982543945
    10. ' (' → logprob: -9.945878982543945

Token 55: '2' (ID: 17)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.02284718118607998
    2. '1' → logprob: -4.2728471755981445
    3. '2' → logprob: -5.2728471755981445
    4. '10' → logprob: -7.5228471755981445
    5. '3' → logprob: -7.6478471755981445
    6. 'n' → logprob: -7.6478471755981445
    7. '5' → logprob: -7.7728471755981445
    8. '4' → logprob: -8.272847175598145
    9. '100' → logprob: -8.397847175598145
    10. ' m' → logprob: -8.772847175598145

Token 56: ' *' (ID: 425)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04399214684963226
    2. '**' → logprob: -3.793992042541504
    3. '
' → logprob: -5.168992042541504
    4. ' 
' → logprob: -5.293992042541504
    5. '\n' → logprob: -6.168992042541504
    6. '*' → logprob: -6.168992042541504
    7. '  
' → logprob: -6.418992042541504
    8. '0' → logprob: -6.668992042541504
    9. ' ' → logprob: -7.543992042541504
    10. '

' → logprob: -7.793992042541504

Token 57: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0005032312474213541
    2. ' m' → logprob: -7.625503063201904
    3. '(m' → logprob: -12.125503540039062
    4. 'n' → logprob: -12.125503540039062
    5. '*m' → logprob: -12.875503540039062
    6. '(' → logprob: -15.250503540039062
    7. '	m' → logprob: -15.250503540039062
    8. 'k' → logprob: -15.375503540039062
    9. ' ' → logprob: -15.750503540039062
    10. '*' → logprob: -15.875503540039062

Token 58: ' +' (ID: 659)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.641476571559906
    2. '+' → logprob: -1.5164766311645508
    3. '\n' → logprob: -2.141476631164551
    4. ' 
' → logprob: -3.391476631164551
    5. '**' → logprob: -3.641476631164551
    6. '#' → logprob: -4.141476631164551
    7. '*' → logprob: -4.391476631164551
    8. '\' → logprob: -4.516476631164551
    9. '<|end|>' → logprob: -4.891476631164551
    10. ' ' → logprob: -5.141476631164551

Token 59: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10871200263500214
    2. ' ' → logprob: -2.9837119579315186
    3. '10' → logprob: -3.9837119579315186
    4. '2' → logprob: -4.108712196350098
    5. '5' → logprob: -5.108712196350098
    6. '3' → logprob: -5.233712196350098
    7. '100' → logprob: -6.483712196350098
    8. '4' → logprob: -6.858712196350098
    9. '50' → logprob: -6.858712196350098
    10. '7' → logprob: -7.358712196350098

Token 60: '100' (ID: 1353)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.09410562366247177
    2. '10' → logprob: -3.2191057205200195
    3. '5' → logprob: -3.9691057205200195
    4. '2' → logprob: -4.3441057205200195
    5. '3' → logprob: -5.0941057205200195
    6. '100' → logprob: -5.7191057205200195
    7. '50' → logprob: -6.2191057205200195
    8. ' ' → logprob: -6.3441057205200195
    9. '7' → logprob: -6.7191057205200195
    10. '4' → logprob: -6.7191057205200195

Token 61: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08173554390668869
    2. '\n' → logprob: -3.456735610961914
    3. '
' → logprob: -3.831735610961914
    4. ' 
' → logprob: -4.956735610961914
    5. '<|end|>' → logprob: -5.206735610961914
    6. 'n' → logprob: -5.331735610961914
    7. '

' → logprob: -6.206735610961914
    8. 'newline' → logprob: -6.706735610961914
    9. '#' → logprob: -6.831735610961914
    10. '' → logprob: -7.456735610961914

Token 62: '#' (ID: 2)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.06710100919008255
    2. 'factor' → logprob: -3.692101001739502
    3. 'f' → logprob: -4.692101001739502
    4. 'fac' → logprob: -4.817101001739502
    5. '_fact' → logprob: -4.817101001739502
    6. '\n' → logprob: -5.067101001739502
    7. '_factor' → logprob: -6.442101001739502
    8. 'facts' → logprob: -6.567101001739502
    9. '\' → logprob: -7.192101001739502
    10. '#' → logprob: -7.192101001739502

Token 63: ' Gén' (ID: 71828)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.1195308119058609
    2. 'fac' → logprob: -2.6195309162139893
    3. 'factor' → logprob: -3.8695309162139893
    4. 'f' → logprob: -4.74453067779541
    5. 'dp' → logprob: -5.24453067779541
    6. 'facts' → logprob: -6.86953067779541
    7. 'def' → logprob: -7.11953067779541
    8. 'pr' → logprob: -7.49453067779541
    9. 'max' → logprob: -7.61953067779541
    10. '#' → logprob: -7.86953067779541

Token 64: 'ération' (ID: 24977)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.7318685054779053
    2. 'érateur' → logprob: -1.6068685054779053
    3. 'érer' → logprob: -2.1068685054779053
    4. 'r' → logprob: -2.1068685054779053
    5. 'ération' → logprob: -4.231868743896484
    6. 'éral' → logprob: -4.356868743896484
    7. 'ér' → logprob: -4.481868743896484
    8. 'érations' → logprob: -4.981868743896484
    9. 'n' → logprob: -5.356868743896484
    10. 'def' → logprob: -5.731868743896484

Token 65: ' ob' (ID: 1067)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.7392148375511169
    2. 'fact' → logprob: -1.2392148971557617
    3. 'fac' → logprob: -3.3642148971557617
    4. 'f' → logprob: -3.4892148971557617
    5. 'dp' → logprob: -3.4892148971557617
    6. '=' → logprob: -3.6142148971557617
    7. ' =' → logprob: -3.9892148971557617
    8. 'range' → logprob: -4.239214897155762
    9. 'def' → logprob: -4.364214897155762
    10. 's' → logprob: -4.489214897155762

Token 66: 'lique' (ID: 26715)
  Prédit: 'jet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'jet' → logprob: -0.9520649313926697
    2. 'jets' → logprob: -1.9520649909973145
    3. 'servable' → logprob: -1.9520649909973145
    4. 'ject' → logprob: -2.0770649909973145
    5. 'serv' → logprob: -2.3270649909973145
    6. 'chain' → logprob: -3.7020649909973145
    7. 's' → logprob: -3.9520649909973145
    8. 'de' → logprob: -4.2020649909973145
    9. 'serve' → logprob: -4.5770649909973145
    10. 'fuscated' → logprob: -4.7020649909973145

Token 67: ' des' (ID: 731)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.132581114768982
    2. 'x' → logprob: -1.507581114768982
    3. '_' → logprob: -2.8825812339782715
    4. 'dp' → logprob: -3.1325812339782715
    5. 'range' → logprob: -3.3825812339782715
    6. ' =' → logprob: -3.3825812339782715
    7. '=' → logprob: -3.5075812339782715
    8. ':' → logprob: -4.2575812339782715
    9. 'a' → logprob: -4.3825812339782715
    10. 'lines' → logprob: -4.3825812339782715

Token 68: ' pré' (ID: 9424)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -1.1490323543548584
    2. ' fact' → logprob: -1.7740323543548584
    3. 'factor' → logprob: -1.8990323543548584
    4. 'coeff' → logprob: -2.0240323543548584
    5. 'comb' → logprob: -3.7740323543548584
    6. 'val' → logprob: -3.7740323543548584
    7. 'bin' → logprob: -3.8990323543548584
    8. ' puiss' → logprob: -4.0240325927734375
    9. ' comb' → logprob: -4.5240325927734375
    10. 'com' → logprob: -4.6490325927734375

Token 69: 'fact' (ID: 53534)
  Prédit: 'fix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fix' → logprob: -0.0018749780720099807
    2. 'f' → logprob: -7.001874923706055
    3. 'sum' → logprob: -7.626874923706055
    4. 'c' → logprob: -9.126874923706055
    5. 's' → logprob: -9.376874923706055
    6. 'fixed' → logprob: -10.001874923706055
    7. 'fact' → logprob: -10.126874923706055
    8. 'calcul' → logprob: -10.251874923706055
    9. 'com' → logprob: -11.126874923706055
    10. '```' → logprob: -11.251874923706055

Token 70: 'ori' (ID: 6510)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.39042341709136963
    2. 'actor' → logprob: -1.8904234170913696
    3. 'act' → logprob: -2.39042329788208
    4. 'ori' → logprob: -4.14042329788208
    5. 'eurs' → logprob: -4.26542329788208
    6. 'ur' → logprob: -4.51542329788208
    7. 'ic' → logprob: -5.01542329788208
    8. '```' → logprob: -5.01542329788208
    9. 'icients' → logprob: -5.01542329788208
    10. 'aux' → logprob: -5.76542329788208

Token 71: 'elles' (ID: 8500)
  Prédit: 'els'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'els' → logprob: -0.024378113448619843
    2. 'ls' → logprob: -4.149378299713135
    3. 'aux' → logprob: -5.399378299713135
    4. 'als' → logprob: -5.899378299713135
    5. '```' → logprob: -8.024377822875977
    6. 's' → logprob: -8.274377822875977
    7. 'nels' → logprob: -9.399377822875977
    8. '`' → logprob: -9.649377822875977
    9. 'les' → logprob: -9.649377822875977
    10. 'elles' → logprob: -9.899377822875977

Token 72: '/mod' (ID: 104852)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.43174317479133606
    2. ',' → logprob: -2.3067431449890137
    3. 'fact' → logprob: -2.3067431449890137
    4. 'f' → logprob: -2.9317431449890137
    5. 'factor' → logprob: -3.8067431449890137
    6. ' :' → logprob: -3.9317431449890137
    7. 's' → logprob: -4.306743144989014
    8. ' ' → logprob: -4.681743144989014
    9. '_fact' → logprob: -5.431743144989014
    10. '
' → logprob: -5.431743144989014

Token 73: 'in' (ID: 258)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6433535814285278
    2. '!' → logprob: -1.5183535814285278
    3. ',' → logprob: -2.8933534622192383
    4. '_' → logprob: -3.2683534622192383
    5. '_fact' → logprob: -3.6433534622192383
    6. 'fact' → logprob: -3.8933534622192383
    7. '[' → logprob: -4.268353462219238
    8. ' ' → logprob: -4.268353462219238
    9. 'or' → logprob: -4.393353462219238
    10. '_factor' → logprob: -4.393353462219238

Token 74: 'vers' (ID: 3674)
  Prédit: 'ales'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ales' → logprob: -1.2104393243789673
    2. '```' → logprob: -1.3354393243789673
    3. 'es' → logprob: -2.5854392051696777
    4. 'aux' → logprob: -2.8354392051696777
    5. 'als' → logprob: -3.3354392051696777
    6. 'els' → logprob: -3.4604392051696777
    7. 'um' → logprob: -3.4604392051696777
    8. 'ées' → logprob: -3.5854392051696777
    9. 'aires' → logprob: -3.9604392051696777
    10. 'elles' → logprob: -4.085439205169678

Token 75: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.1751669943332672
    2. 'aux' → logprob: -2.4251670837402344
    3. 'e' → logprob: -3.4251670837402344
    4. 'ales' → logprob: -4.300167083740234
    5. 't' → logprob: -4.550167083740234
    6. '```' → logprob: -5.050167083740234
    7. 'ées' → logprob: -6.175167083740234
    8. 'a' → logprob: -6.425167083740234
    9. 'els' → logprob: -7.300167083740234
    10. 'és' → logprob: -7.425167083740234

Token 76: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.115409016609192
    2. 'f' → logprob: -1.490409016609192
    3. ':' → logprob: -1.740409016609192
    4. 'fact' → logprob: -2.6154088973999023
    5. '_' → logprob: -2.7404088973999023
    6. '```' → logprob: -3.7404088973999023
    7. 'factor' → logprob: -4.115408897399902
    8. '
' → logprob: -4.365408897399902
    9. '_fact' → logprob: -4.365408897399902
    10. '_factor' → logprob: -4.615408897399902

Token 77: 'def' (ID: 1314)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.9529387354850769
    2. ':' → logprob: -1.4529387950897217
    3. '```' → logprob: -2.2029387950897217
    4. '
' → logprob: -2.7029387950897217
    5. ',' → logprob: -2.8279387950897217
    6. 'factor' → logprob: -3.2029387950897217
    7. '_fact' → logprob: -3.8279387950897217
    8. 'f' → logprob: -4.327938556671143
    9. 's' → logprob: -4.327938556671143
    10. '_factor' → logprob: -4.577938556671143

Token 78: ' mod' (ID: 1812)
  Prédit: ' pre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pre' → logprob: -0.2277035266160965
    2. ' factorial' → logprob: -2.47770357131958
    3. ' prep' → logprob: -3.47770357131958
    4. ' fact' → logprob: -3.60270357131958
    5. 'pre' → logprob: -4.10270357131958
    6. ' fac' → logprob: -4.22770357131958
    7. ' prec' → logprob: -4.60270357131958
    8. ' mod' → logprob: -5.35270357131958
    9. ' prepare' → logprob: -5.60270357131958
    10. ' pref' → logprob: -5.85270357131958

Token 79: 'inv' (ID: 31086)
  Prédit: '_factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.3165830671787262
    2. '_fact' → logprob: -1.4415830373764038
    3. 'fact' → logprob: -4.191583156585693
    4. 'inv' → logprob: -4.316583156585693
    5. '_inv' → logprob: -5.941583156585693
    6. '_fac' → logprob: -6.566583156585693
    7. 'factor' → logprob: -7.316583156585693
    8. 'ular' → logprob: -7.566583156585693
    9. '_pow' → logprob: -8.066582679748535
    10. 'pow' → logprob: -8.316582679748535

Token 80: '(x' (ID: 4061)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.04290418326854706
    2. '(x' → logprob: -3.2929041385650635
    3. '(' → logprob: -5.417904376983643
    4. 'a' → logprob: -8.542903900146484
    5. '(n' → logprob: -8.792903900146484
    6. '(k' → logprob: -10.042903900146484
    7. '(i' → logprob: -11.917903900146484
    8. '(p' → logprob: -12.667903900146484
    9. ' (' → logprob: -12.917903900146484
    10. '(
' → logprob: -13.167903900146484

Token 81: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.013495123945176601
    2. ',' → logprob: -4.388494968414307
    3. ':' → logprob: -7.638494968414307
    4. ' ):' → logprob: -8.388495445251465
    5. ')' → logprob: -8.638495445251465
    6. '):
' → logprob: -9.388495445251465
    7. '=' → logprob: -12.388495445251465
    8. '}:' → logprob: -13.513495445251465
    9. '   ' → logprob: -13.638495445251465
    10. '):
' → logprob: -13.638495445251465

Token 82: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.013734190724790096
    2. '):' → logprob: -4.638734340667725
    3. '(x' → logprob: -6.138734340667725
    4. ' :' → logprob: -6.888734340667725
    5. '   ' → logprob: -8.763733863830566
    6. '(' → logprob: -9.138733863830566
    7. ',' → logprob: -9.263733863830566
    8. ':**' → logprob: -9.263733863830566
    9. ':return' → logprob: -9.763733863830566
    10. ' x' → logprob: -10.013733863830566

Token 83: ' return' (ID: 622)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.02821599692106247
    2. 'return' (adapté à ' return') → logprob: -4.0282158851623535
    3. ' pow' → logprob: -5.2782158851623535
    4. '   ' → logprob: -5.4032158851623535
    5. ' return' → logprob: -8.028216361999512
    6. 'def' → logprob: -10.278216361999512
    7. '(pow' → logprob: -11.028216361999512
    8. 'x' → logprob: -11.528216361999512
    9. '	return' → logprob: -11.903216361999512
    10. '_pow' → logprob: -12.528216361999512

Token 84: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.0004311460361350328
    2. ' pow' → logprob: -7.750431060791016
    3. '   ' → logprob: -15.750431060791016
    4. '(pow' → logprob: -15.750431060791016
    5. 'power' → logprob: -16.500431060791016
    6. 'mod' → logprob: -17.250431060791016
    7. 'lambda' → logprob: -17.875431060791016
    8. '_pow' → logprob: -18.375431060791016
    9. 'p' → logprob: -18.750431060791016
    10. '```' → logprob: -18.750431060791016

Token 85: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6326648592948914
    2. '(x' → logprob: -0.7576648592948914
    3. '(
' → logprob: -10.257664680480957
    4. '<|end|>' → logprob: -11.007664680480957
    5. 'x' → logprob: -12.507664680480957
    6. ' (' → logprob: -13.132664680480957
    7. ' ' → logprob: -13.257664680480957
    8. ')' → logprob: -13.382664680480957
    9. '(pow' → logprob: -13.632664680480957
    10. '<|end|>' → logprob: -13.882664680480957

Token 86: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4378848391061183e-05
    2. ' ,' → logprob: -11.250014305114746
    3. 'mod' → logprob: -14.500014305114746
    4. ',
' → logprob: -14.875014305114746
    5. ' ' → logprob: -15.500014305114746
    6. ',n' → logprob: -15.875014305114746
    7. '   ' → logprob: -16.625015258789062
    8. ')' → logprob: -17.375015258789062
    9. '，' → logprob: -17.500015258789062
    10. ',x' → logprob: -17.750015258789062

Token 87: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.008681820705533028
    2. ' mod' → logprob: -4.758681774139404
    3. '-' → logprob: -10.133682250976562
    4. '(mod' → logprob: -11.508682250976562
    5. '	mod' → logprob: -12.133682250976562
    6. ' ' → logprob: -12.258682250976562
    7. '   ' → logprob: -13.383682250976562
    8. ' -' → logprob: -13.508682250976562
    9. '-mod' → logprob: -13.758682250976562
    10. '
' → logprob: -14.883682250976562

Token 88: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.011049113236367702
    2. ' -' → logprob: -4.511049270629883
    3. ' ' → logprob: -13.886049270629883
    4. '   ' → logprob: -15.261049270629883
    5. '  ' → logprob: -16.386049270629883
    6. '–' → logprob: -17.011049270629883
    7. '−' → logprob: -17.136049270629883
    8. ' ' → logprob: -17.261049270629883
    9. ',' → logprob: -17.761049270629883
    10. '```' → logprob: -19.011049270629883

Token 89: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.500004768371582
    3. '۲' → logprob: -15.312504768371582
    4. '```' → logprob: -16.1875057220459
    5. '٢' → logprob: -16.3125057220459
    6. '22' → logprob: -16.5625057220459
    7. '' → logprob: -17.0625057220459
    8. '

' → logprob: -17.1875057220459
    9. '२' → logprob: -17.2500057220459
    10. '２' → logprob: -17.3125057220459

Token 90: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0280383548888494e-06
    2. '۲' → logprob: -15.375000953674316
    3. ' ' → logprob: -15.625000953674316
    4. '22' → logprob: -16.500001907348633
    5. '```' → logprob: -16.687501907348633
    6. '٢' → logprob: -16.750001907348633
    7. '

' → logprob: -16.812501907348633
    8. '२' → logprob: -16.937501907348633
    9. '3' → logprob: -17.062501907348633
    10. '
' → logprob: -17.250001907348633

Token 91: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0032360595650970936
    2. ',' → logprob: -5.753236293792725
    3. ' )' → logprob: -10.128235816955566
    4. '}' → logprob: -12.003235816955566
    5. ' ' → logprob: -12.378235816955566
    6. '),' → logprob: -13.253235816955566
    7. ')
' → logprob: -13.378235816955566
    8. ')}' → logprob: -14.253235816955566
    9. ')x' → logprob: -14.253235816955566
    10. ' ,' → logprob: -14.378235816955566

Token 92: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.12713997066020966
    2. ' mod' → logprob: -2.1271400451660156
    3. ')' → logprob: -8.502140045166016
    4. '	mod' → logprob: -12.502140045166016
    5. ' )' → logprob: -13.252140045166016
    6. 'x' → logprob: -14.002140045166016
    7. '(mod' → logprob: -14.127140045166016
    8. ' ' → logprob: -14.127140045166016
    9. ' x' → logprob: -14.627140045166016
    10. '   ' → logprob: -15.752140045166016

Token 93: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1472419600977446e-06
    2. ')
' → logprob: -14.500000953674316
    3. ' )' → logprob: -15.000000953674316
    4. ')return' → logprob: -16.625001907348633
    5. ')

' → logprob: -17.625001907348633
    6. ')}' → logprob: -18.000001907348633
    7. ')x' → logprob: -18.125001907348633
    8. ')#' → logprob: -18.125001907348633
    9. '))' → logprob: -18.250001907348633
    10. '),' → logprob: -18.250001907348633

Token 94: '@' (ID: 31)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08514923602342606
    2. '<|end|>' → logprob: -3.5851492881774902
    3. '

' → logprob: -4.21014928817749
    4. '
' → logprob: -4.71014928817749
    5. 'x' → logprob: -5.46014928817749
    6. 'n' → logprob: -5.58514928817749
    7. '#' → logprob: -5.58514928817749
    8. '*' → logprob: -5.83514928817749
    9. '' → logprob: -6.08514928817749
    10. 'def' → logprob: -6.08514928817749

Token 95: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.9361264946837764e-07
    2. ' l' → logprob: -16.25
    3. '```' → logprob: -17.375
    4. 'staticmethod' → logprob: -18.75
    5. '
' → logprob: -19.625
    6. '	l' → logprob: -19.75
    7. 'cache' → logprob: -20.375
    8. '@' → logprob: -21.0
    9. 'classmethod' → logprob: -21.875
    10. ' ' → logprob: -21.875

Token 96: 'ru' (ID: 1942)
  Prédit: 'ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -0.31333351135253906
    2. 'r' → logprob: -1.313333511352539
    3. 'rl' → logprob: -10.188333511352539
    4. '```' → logprob: -11.813333511352539
    5. '@' → logprob: -11.938333511352539
    6. '1' → logprob: -12.438333511352539
    7. 'u' → logprob: -13.438333511352539
    8. 'ру' → logprob: -13.563333511352539
    9. '	r' → logprob: -13.688333511352539
    10. '_ru' → logprob: -14.063333511352539

Token 97: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -0.004150937777012587
    2. '_' → logprob: -5.754150867462158
    3. '_cached' → logprob: -7.004150867462158
    4. '_c' → logprob: -11.004151344299316
    5. '_CACHE' → logprob: -11.129151344299316
    6. ' _' → logprob: -11.504151344299316
    7. 'cache' → logprob: -12.004151344299316
    8. 'Cache' → logprob: -12.629151344299316
    9. ')_' → logprob: -13.254151344299316
    10. '```' → logprob: -13.379151344299316

Token 98: '(max' (ID: 17178)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9193952679634094
    2. '()' → logprob: -1.1693952083587646
    3. '(None' → logprob: -1.4193952083587646
    4. '()
' → logprob: -3.6693952083587646
    5. '(max' → logprob: -4.044395446777344
    6. '
' → logprob: -6.169395446777344
    7. '(def' → logprob: -7.044395446777344
    8. '(' → logprob: -7.294395446777344
    9. 'None' → logprob: -7.669395446777344
    10. '(int' → logprob: -7.669395446777344

Token 99: 'size' (ID: 4461)
  Prédit: 'size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.3174785375595093
    2. '=None' → logprob: -1.6924785375595093
    3. '=' → logprob: -2.942478656768799
    4. '_size' → logprob: -4.442478656768799
    5. ')' → logprob: -4.817478656768799
    6. '<|end|>' → logprob: -4.942478656768799
    7. '_cache' → logprob: -5.317478656768799
    8. '(None' → logprob: -7.442478656768799
    9. '=size' → logprob: -8.19247817993164
    10. 'None' → logprob: -8.19247817993164

Token 100: '=None' (ID: 12783)
  Prédit: '=None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=None' → logprob: -0.12693357467651367
    2. '=' → logprob: -2.1269335746765137
    3. 'None' → logprob: -12.376934051513672
    4. '=
' → logprob: -14.501934051513672
    5. '=

' → logprob: -15.126934051513672
    6. '=N' → logprob: -15.376934051513672
    7. '='' → logprob: -16.376934051513672
    8. '(None' → logprob: -16.376934051513672
    9. ' None' → logprob: -17.001934051513672
    10. '=True' → logprob: -17.126934051513672

Token 101: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.3133884072303772
    2. ')' → logprob: -1.3133883476257324
    3. ')
' → logprob: -9.06338882446289
    4. 'def' → logprob: -12.18838882446289
    5. ' )
' → logprob: -13.31338882446289
    6. ')`
' → logprob: -13.68838882446289
    7. ')`' → logprob: -14.18838882446289
    8. ')return' → logprob: -14.56338882446289
    9. ')

' → logprob: -14.81338882446289
    10. ' )' → logprob: -15.43838882446289

Token 102: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0548897311091423
    2. '
' → logprob: -2.929889678955078
    3. 'de' → logprob: -13.429889678955078
    4. ' def' → logprob: -13.429889678955078
    5. '  
' → logprob: -13.554889678955078
    6. '(def' → logprob: -14.429889678955078
    7. '
' → logprob: -14.554889678955078
    8. '\' → logprob: -14.679889678955078
    9. 'd' → logprob: -15.179889678955078
    10. '    
' → logprob: -15.304889678955078

Token 103: ' _' (ID: 1175)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.6838080883026123
    2. ' fact' → logprob: -0.8088080883026123
    3. 'factor' → logprob: -3.6838080883026123
    4. ' factorial' → logprob: -4.433808326721191
    5. 'fac' → logprob: -5.183808326721191
    6. ' fac' → logprob: -5.933808326721191
    7. 'mod' → logprob: -6.183808326721191
    8. ' mod' → logprob: -6.683808326721191
    9. 'f' → logprob: -8.183808326721191
    10. 'comb' → logprob: -8.308808326721191

Token 104: 'fact' (ID: 53534)
  Prédit: 'fact'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.18519675731658936
    2. 'factor' → logprob: -2.310196876525879
    3. 'comb' → logprob: -3.185196876525879
    4. 'fac' → logprob: -4.060196876525879
    5. 'mod' → logprob: -5.060196876525879
    6. 'f' → logprob: -6.060196876525879
    7. 'pow' → logprob: -7.310196876525879
    8. 'c' → logprob: -7.935196876525879
    9. 'inv' → logprob: -8.185196876525879
    10. 'fc' → logprob: -8.810196876525879

Token 105: '(x' (ID: 4061)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.4198019206523895
    2. '(x' → logprob: -1.919801950454712
    3. '(' → logprob: -2.044801950454712
    4. '(i' → logprob: -3.794801950454712
    5. 'or' → logprob: -4.419801712036133
    6. '(k' → logprob: -4.419801712036133
    7. 'orial' → logprob: -5.294801712036133
    8. 'ory' → logprob: -5.919801712036133
    9. 's' → logprob: -6.419801712036133
    10. ' (' → logprob: -6.794801712036133

Token 106: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006058671046048403
    2. '):
' → logprob: -5.506058692932129
    3. ')' → logprob: -6.256058692932129
    4. ':' → logprob: -10.256058692932129
    5. ' ):' → logprob: -11.131058692932129
    6. '):
' → logprob: -11.756058692932129
    7. '   ' → logprob: -15.131058692932129
    8. '):

' → logprob: -15.506058692932129
    9. '**' → logprob: -15.756058692932129
    10. ',' → logprob: -15.881058692932129

Token 107: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.30832305550575256
    2. '   ' → logprob: -1.4333230257034302
    3. 'if' → logprob: -4.433322906494141
    4. ':' → logprob: -4.808322906494141
    5. ':return' → logprob: -5.808322906494141
    6. ' ' → logprob: -6.308322906494141
    7. ' return' → logprob: -7.183322906494141
    8. ' :' → logprob: -7.558322906494141
    9. '	if' → logprob: -8.30832290649414
    10. ':
' → logprob: -8.93332290649414

Token 108: ' return' (ID: 622)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7146525382995605
    2. ' if' → logprob: -1.2146525382995605
    3. '1' → logprob: -2.3396525382995605
    4. 'return' (adapté à ' return') → logprob: -2.3396525382995605
    5. ' return' → logprob: -3.9646525382995605
    6. '0' → logprob: -6.8396525382995605
    7. ' ' → logprob: -7.5896525382995605
    8. '   ' → logprob: -7.5896525382995605
    9. '
' → logprob: -11.214653015136719
    10. '	if' → logprob: -11.839653015136719

Token 109: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.14675019681453705
    2. ' ' → logprob: -2.3967502117156982
    3. ' x' → logprob: -3.8967502117156982
    4. 'x' → logprob: -4.021749973297119
    5. '(' → logprob: -6.021749973297119
    6. ' (' → logprob: -6.146749973297119
    7. '   ' → logprob: -7.021749973297119
    8. 'fact' → logprob: -7.271749973297119
    9. '(x' → logprob: -8.146750450134277
    10. ' fact' → logprob: -8.271750450134277

Token 110: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00753079354763031
    2. 'x' → logprob: -5.132530689239502
    3. ' ' → logprob: -7.132530689239502
    4. '(' → logprob: -8.25753116607666
    5. '0' → logprob: -8.50753116607666
    6. 'fact' → logprob: -8.50753116607666
    7. ' x' → logprob: -10.00753116607666
    8. '   ' → logprob: -10.25753116607666
    9. '_fact' → logprob: -10.38253116607666
    10. '(x' → logprob: -11.63253116607666

Token 111: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3868781626224518
    2. 'if' → logprob: -1.1368781328201294
    3. '*' → logprob: -12.13687801361084
    4. 'll' → logprob: -15.51187801361084
    5. 'If' → logprob: -15.63687801361084
    6. 'x' → logprob: -15.76187801361084
    7. '0' → logprob: -15.88687801361084
    8. '

' → logprob: -16.011878967285156
    9. ' *' → logprob: -16.011878967285156
    10. '
' → logprob: -16.011878967285156

Token 112: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.048587486147880554
    2. ' x' → logprob: -3.0485875606536865
    3. '0' → logprob: -15.798587799072266
    4. ' ' → logprob: -16.798587799072266
    5. '	x' → logprob: -17.298587799072266
    6. ' not' → logprob: -18.173587799072266
    7. '   ' → logprob: -18.548587799072266
    8. '(x' → logprob: -18.673587799072266
    9. '  ' → logprob: -19.923587799072266
    10. 'not' → logprob: -20.173587799072266

Token 113: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.24180035293102264
    2. ' <=' → logprob: -1.741800308227539
    3. '==' → logprob: -3.616800308227539
    4. ' ==' → logprob: -4.366800308227539
    5. '<' → logprob: -10.991800308227539
    6. ' <' → logprob: -13.491800308227539
    7. ' ' → logprob: -13.616800308227539
    8. '0' → logprob: -14.491800308227539
    9. 'le' → logprob: -14.491800308227539
    10. '≤' → logprob: -15.241800308227539

Token 114: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004994167247787118
    2. ' ' → logprob: -8.125499725341797
    3. '0' → logprob: -8.500499725341797
    4. '   ' → logprob: -18.000499725341797
    5. '```' → logprob: -18.500499725341797
    6. '  ' → logprob: -18.875499725341797
    7. ' ' → logprob: -20.125499725341797
    8. '' → logprob: -20.250499725341797
    9. '
' → logprob: -20.625499725341797
    10. '	' → logprob: -21.500499725341797

Token 115: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00038813185528852046
    2. '0' → logprob: -7.875388145446777
    3. ' ' → logprob: -11.750388145446777
    4. '```' → logprob: -17.12538719177246
    5. '   ' → logprob: -17.87538719177246
    6. '``' → logprob: -19.37538719177246
    7. '  ' → logprob: -19.50038719177246
    8. '' → logprob: -19.62538719177246
    9. '
' → logprob: -19.87538719177246
    10. '	' → logprob: -20.12538719177246

Token 116: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.47425174713134766
    2. ' else' → logprob: -0.9742517471313477
    3. '   ' → logprob: -9.099251747131348
    4. '	else' → logprob: -10.099251747131348
    5. '    ' → logprob: -11.099251747131348
    6. ' ' → logprob: -13.224251747131348
    7. '*' → logprob: -13.599251747131348
    8. '1' → logprob: -13.724251747131348
    9. '  ' → logprob: -14.599251747131348
    10. '0' → logprob: -14.974251747131348

Token 117: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.18167942762374878
    2. 'x' → logprob: -2.6816794872283936
    3. ' (' → logprob: -2.8066794872283936
    4. ' x' → logprob: -3.3066794872283936
    5. '(' → logprob: -8.056679725646973
    6. '(_' → logprob: -9.181679725646973
    7. '   ' → logprob: -9.681679725646973
    8. '_x' → logprob: -9.931679725646973
    9. ' ' → logprob: -10.306679725646973
    10. '_fact' → logprob: -10.431679725646973

Token 118: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.010257100686430931
    2. ' x' → logprob: -4.635257244110107
    3. '_fact' → logprob: -8.13525676727295
    4. '(x' → logprob: -8.63525676727295
    5. 'fact' → logprob: -10.63525676727295
    6. ' (' → logprob: -13.13525676727295
    7. '_x' → logprob: -13.26025676727295
    8. '	x' → logprob: -14.51025676727295
    9. ' fact' → logprob: -14.63525676727295
    10. 'Fact' → logprob: -15.13525676727295

Token 119: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.12693126499652863
    2. '*' → logprob: -2.1269311904907227
    3. '**' → logprob: -13.876931190490723
    4. ' ' → logprob: -14.126931190490723
    5. ' *
' → logprob: -15.126931190490723
    6. ' **' → logprob: -15.376931190490723
    7. ' ' → logprob: -15.501931190490723
    8. '*
' → logprob: -16.00193214416504
    9. '
' → logprob: -16.12693214416504
    10. '	' → logprob: -16.12693214416504

Token 120: ' _' (ID: 1175)
  Prédit: '_fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fact' → logprob: -4.008129963040119e-06
    2. '_factor' → logprob: -13.750003814697266
    3. ' _' → logprob: -13.875003814697266
    4. 'fact' → logprob: -14.125003814697266
    5. '_fac' → logprob: -14.500003814697266
    6. '_FACT' → logprob: -14.875003814697266
    7. 'Fact' → logprob: -15.750003814697266
    8. '_f' → logprob: -15.750003814697266
    9. '_' → logprob: -17.500003814697266
    10. ' fact' → logprob: -17.750003814697266

Token 121: 'fact' (ID: 53534)
  Prédit: 'fact'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.0024763736873865128
    2. '_fact' → logprob: -6.002476215362549
    3. ' fact' → logprob: -14.877476692199707
    4. 'fac' → logprob: -16.00247573852539
    5. 'Fact' → logprob: -16.50247573852539
    6. 'f' → logprob: -17.00247573852539
    7. 'fait' → logprob: -17.37747573852539
    8. '.fact' → logprob: -17.37747573852539
    9. 'facts' → logprob: -17.87747573852539
    10. '_' → logprob: -18.25247573852539

Token 122: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0008086714660748839
    2. '(' → logprob: -7.1258087158203125
    3. '(
' → logprob: -12.750808715820312
    4. ' (' → logprob: -13.875808715820312
    5. 'x' → logprob: -14.875808715820312
    6. '((' → logprob: -17.125808715820312
    7. ')' → logprob: -18.500808715820312
    8. '(

' → logprob: -18.625808715820312
    9. ')(' → logprob: -19.375808715820312
    10. ' ' → logprob: -19.750808715820312

Token 123: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.09122670441865921
    2. ' -' → logprob: -2.466226816177368
    3. '(x' → logprob: -6.091226577758789
    4. '(' → logprob: -11.216226577758789
    5. ')' → logprob: -12.341226577758789
    6. ' (' → logprob: -13.341226577758789
    7. 'x' → logprob: -14.466226577758789
    8. '-x' → logprob: -14.591226577758789
    9. '(
' → logprob: -15.341226577758789
    10. ' ' → logprob: -15.466226577758789

Token 124: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1637164789135568e-05
    2. ' ' → logprob: -11.375011444091797
    3. '   ' → logprob: -16.375011444091797
    4. ')' → logprob: -18.375011444091797
    5. '```' → logprob: -19.500011444091797
    6. '
' → logprob: -19.750011444091797
    7. '  ' → logprob: -20.125011444091797
    8. '    ' → logprob: -21.125011444091797
    9. '<|end|>' → logprob: -21.625011444091797
    10. '' → logprob: -22.437511444091797

Token 125: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.816093228830141e-06
    2. ' ' → logprob: -12.87500286102295
    3. ')' → logprob: -15.62500286102295
    4. '```' → logprob: -17.625001907348633
    5. '   ' → logprob: -18.250001907348633
    6. '  ' → logprob: -18.625001907348633
    7. '<|end|>' → logprob: -19.250001907348633
    8. '১' → logprob: -19.937501907348633
    9. '
' → logprob: -20.000001907348633
    10. '۱' → logprob: -20.250001907348633

Token 126: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.137130498653278e-05
    2. ')%' → logprob: -9.500081062316895
    3. ' )' → logprob: -12.250081062316895
    4. '))' → logprob: -14.000081062316895
    5. '%' → logprob: -14.625081062316895
    6. ')
' → logprob: -15.125081062316895
    7. '),' → logprob: -17.62508201599121
    8. '%)' → logprob: -18.12508201599121
    9. '')' → logprob: -18.37508201599121
    10. ')

' → logprob: -18.50008201599121

Token 127: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.1602376252412796
    2. ' %' → logprob: -1.9102376699447632
    3. ')' → logprob: -11.410237312316895
    4. '%x' → logprob: -14.035237312316895
    5. '%n' → logprob: -14.160237312316895
    6. ')%' → logprob: -14.660237312316895
    7. '%m' → logprob: -15.910237312316895
    8. '%c' → logprob: -16.53523826599121
    9. ' ' → logprob: -16.66023826599121
    10. '%s' → logprob: -17.66023826599121

Token 128: ' mod' (ID: 1812)
  Prédit: ' mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.5759792327880859
    2. 'mod' → logprob: -0.8259792327880859
    3. '(mod' → logprob: -10.200979232788086
    4. ' ' → logprob: -13.450979232788086
    5. '	mod' → logprob: -14.700979232788086
    6. ' ' → logprob: -14.700979232788086
    7. ' modul' → logprob: -16.575979232788086
    8. ' 
' → logprob: -16.700979232788086
    9. ' мод' → logprob: -16.700979232788086
    10. '_mod' → logprob: -16.825979232788086

Token 129: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7645844221115112
    2. ')' → logprob: -0.8895844221115112
    3. '
' → logprob: -3.139584541320801
    4. '<|end|>' → logprob: -3.389584541320801
    5. '@' → logprob: -4.264584541320801
    6. '@n' → logprob: -4.639584541320801
    7. '#' → logprob: -5.639584541320801
    8. '*' → logprob: -6.139584541320801
    9. 'n' → logprob: -6.264584541320801
    10. ')
' → logprob: -6.639584541320801

Token 130: 'fact' (ID: 53534)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2033325880765915
    2. '@' → logprob: -1.703332543373108
    3. '
' → logprob: -6.578332424163818
    4. '<|end|>' → logprob: -8.453332901000977
    5. '@n' → logprob: -9.953332901000977
    6. '  
' → logprob: -10.078332901000977
    7. '#' → logprob: -10.328332901000977
    8. ')' → logprob: -10.453332901000977
    9. '```' → logprob: -10.578332901000977
    10. '

' → logprob: -10.953332901000977

Token 131: '_list' (ID: 4162)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.016733407974243164
    2. '(n' → logprob: -4.266733169555664
    3. '(x' → logprob: -6.641733169555664
    4. 's' → logprob: -6.891733169555664
    5. '<|end|>' → logprob: -10.141733169555664
    6. '(s' → logprob: -10.266733169555664
    7. '(`' → logprob: -10.266733169555664
    8. ')' → logprob: -10.391733169555664
    9. '("("' → logprob: -10.891733169555664
    10. '=' → logprob: -11.766733169555664

Token 132: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12716516852378845
    2. '=' → logprob: -2.1271650791168213
    3. '(' → logprob: -9.627164840698242
    4. 's' → logprob: -9.752164840698242
    5. '=[' → logprob: -10.627164840698242
    6. ',' → logprob: -10.752164840698242
    7. ' =[' → logprob: -10.752164840698242
    8. '=[]' → logprob: -11.127164840698242
    9. '[:]' → logprob: -11.877164840698242
    10. '[' → logprob: -11.877164840698242

Token 133: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.8897798657417297
    2. '[' → logprob: -1.389779806137085
    3. '[list' → logprob: -1.389779806137085
    4. '[_' → logprob: -2.639779806137085
    5. ' [' → logprob: -4.514780044555664
    6. ' list' → logprob: -5.639780044555664
    7. 'tuple' → logprob: -6.639780044555664
    8. '[l' → logprob: -6.889780044555664
    9. ' [_' → logprob: -7.139780044555664
    10. '[x' → logprob: -7.764780044555664

Token 134: '(acc' (ID: 82668)
  Prédit: '(acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(acc' → logprob: -0.09506227821111679
    2. '(map' → logprob: -2.595062255859375
    3. '(range' → logprob: -5.220062255859375
    4. '(chain' → logprob: -5.345062255859375
    5. '(t' → logprob: -5.845062255859375
    6. '(ac' → logprob: -6.220062255859375
    7. '(_' → logprob: -7.095062255859375
    8. '(' → logprob: -9.095062255859375
    9. 'acc' → logprob: -11.595062255859375
    10. '(it' → logprob: -11.595062255859375

Token 135: 'umulate' (ID: 134636)
  Prédit: 'umulate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umulate' → logprob: -7.24310302757658e-05
    2. 'om' → logprob: -10.375072479248047
    3. 'umul' → logprob: -10.750072479248047
    4. 'um' → logprob: -11.375072479248047
    5. 'ulate' → logprob: -12.500072479248047
    6. '(acc' → logprob: -14.000072479248047
    7. 'cum' → logprob: -14.250072479248047
    8. '=' → logprob: -15.000072479248047
    9. '(' → logprob: -15.250072479248047
    10. 'umm' → logprob: -15.375072479248047

Token 136: '(chain' (ID: 124348)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.00810457393527031
    2. '(re' → logprob: -5.2581048011779785
    3. '(chain' → logprob: -5.8831048011779785
    4. '(' → logprob: -10.50810432434082
    5. 'range' → logprob: -10.50810432434082
    6. '(map' → logprob: -11.25810432434082
    7. '(iter' → logprob: -12.13310432434082
    8. '(count' → logprob: -12.50810432434082
    9. 'repeat' → logprob: -13.00810432434082
    10. '((' → logprob: -15.13310432434082

Token 137: '([' (ID: 5194)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.5244917273521423
    2. '(re' → logprob: -1.274491786956787
    3. '([' → logprob: -2.149491786956787
    4. '((' → logprob: -5.024491786956787
    5. '(' → logprob: -5.399491786956787
    6. '(map' → logprob: -7.774491786956787
    7. '(
' → logprob: -8.649491310119629
    8. 'from' → logprob: -8.899491310119629
    9. '(iter' → logprob: -9.274491310119629
    10. 'repeat' → logprob: -10.149491310119629

Token 138: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007207724265754223
    2. '[' → logprob: -7.250720977783203
    3. '(' → logprob: -12.875720977783203
    4. ' ' → logprob: -13.000720977783203
    5. ' [' → logprob: -13.250720977783203
    6. '
' → logprob: -13.750720977783203
    7. 'fact' → logprob: -13.750720977783203
    8. '   ' → logprob: -14.125720977783203
    9. 'repeat' → logprob: -15.750720977783203
    10. 'range' → logprob: -15.750720977783203

Token 139: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.000680861237924546
    2. '()],' → logprob: -7.750680923461914
    3. ',' → logprob: -8.875680923461914
    4. '(' → logprob: -10.375680923461914
    5. '],
' → logprob: -10.500680923461914
    6. '],[' → logprob: -11.125680923461914
    7. '(range' → logprob: -11.750680923461914
    8. ']' → logprob: -11.750680923461914
    9. '(n' → logprob: -12.250680923461914
    10. ':],' → logprob: -12.625680923461914

Token 140: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2555641829967499
    2. '(range' → logprob: -1.7555642127990723
    3. 'repeat' → logprob: -3.2555642127990723
    4. 'map' → logprob: -4.380564212799072
    5. '(re' → logprob: -7.255564212799072
    6. ' range' → logprob: -8.005563735961914
    7. '(map' → logprob: -8.630563735961914
    8. 'chain' → logprob: -9.755563735961914
    9. 'count' → logprob: -10.130563735961914
    10. 'iter' → logprob: -10.130563735961914

Token 141: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.650518920039758e-06
    2. '1' → logprob: -12.625003814697266
    3. ' ' → logprob: -15.875003814697266
    4. ' (' → logprob: -15.875003814697266
    5. '2' → logprob: -17.375003814697266
    6. ',' → logprob: -18.750003814697266
    7. '(
' → logprob: -18.875003814697266
    8. '
' → logprob: -19.750003814697266
    9. '(l' → logprob: -19.750003814697266
    10. '   ' → logprob: -20.000003814697266

Token 142: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1875571544806007e-05
    2. ' ' → logprob: -11.750011444091797
    3. '2' → logprob: -13.500011444091797
    4. 'lim' → logprob: -13.750011444091797
    5. '(' → logprob: -14.000011444091797
    6. '   ' → logprob: -15.250011444091797
    7. '
' → logprob: -15.500011444091797
    8. '```' → logprob: -17.250011444091797
    9. '    ' → logprob: -17.500011444091797
    10. '  ' → logprob: -17.562511444091797

Token 143: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020056030189152807
    2. ',n' → logprob: -8.625200271606445
    3. ' ,' → logprob: -11.125200271606445
    4. ',l' → logprob: -12.500200271606445
    5. ',
' → logprob: -13.750200271606445
    6. '1' → logprob: -14.625200271606445
    7. ',int' → logprob: -15.125200271606445
    8. 'lim' → logprob: -16.250200271606445
    9. ',ll' → logprob: -16.250200271606445
    10. 'n' → logprob: -16.375200271606445

Token 144: ' lim' (ID: 3147)
  Prédit: 'lim'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lim' → logprob: -0.0068177892826497555
    2. ' lim' → logprob: -5.006817817687988
    3. 'limit' → logprob: -9.756817817687988
    4. '   ' → logprob: -10.631817817687988
    5. ' ' → logprob: -12.256817817687988
    6. '    ' → logprob: -13.006817817687988
    7. 'lims' → logprob: -13.631817817687988
    8. '  ' → logprob: -13.756817817687988
    9. '
' → logprob: -13.756817817687988
    10. 'limited' → logprob: -13.881817817687988

Token 145: ')),' (ID: 12098)
  Prédit: ')),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')),' → logprob: -0.36736851930618286
    2. '),' → logprob: -1.242368459701538
    3. '))))' → logprob: -5.242368698120117
    4. ' ),' → logprob: -5.367368698120117
    5. ')))' → logprob: -6.117368698120117
    6. ' ' → logprob: -6.242368698120117
    7. '))' → logprob: -6.242368698120117
    8. '+' → logprob: -6.992368698120117
    9. '))),' → logprob: -6.992368698120117
    10. ')' → logprob: -7.742368698120117

Token 146: ' lambda' (ID: 27871)
  Prédit: 'mul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mul' → logprob: -0.34679388999938965
    2. 'lambda' → logprob: -1.5967938899993896
    3. '(lambda' → logprob: -2.9717938899993896
    4. ' lambda' → logprob: -3.8467938899993896
    5. ' mul' → logprob: -4.096794128417969
    6. ' ' → logprob: -7.846794128417969
    7. '   ' → logprob: -7.971794128417969
    8. ' (' → logprob: -8.221794128417969
    9. '  ' → logprob: -9.221794128417969
    10. '=lambda' → logprob: -9.721794128417969

Token 147: ' a' (ID: 261)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.0727216824889183
    2. ' a' → logprob: -2.9477217197418213
    3. ' acc' → logprob: -4.447721481323242
    4. 'x' → logprob: -5.322721481323242
    5. 'a' → logprob: -7.072721481323242
    6. 'acc' → logprob: -8.947721481323242
    7. ' ' → logprob: -9.572721481323242
    8. ' i' → logprob: -11.572721481323242
    9. ' f' → logprob: -12.197721481323242
    10. ' prev' → logprob: -12.447721481323242

Token 148: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005928283790126443
    2. ',x' → logprob: -7.8755927085876465
    3. ',b' → logprob: -9.000593185424805
    4. ' ,' → logprob: -10.000593185424805
    5. ',m' → logprob: -11.125593185424805
    6. ',n' → logprob: -11.750593185424805
    7. 'x' → logprob: -12.250593185424805
    8. ',a' → logprob: -12.500593185424805
    9. ',
' → logprob: -12.750593185424805
    10. ',val' → logprob: -12.875593185424805

Token 149: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.1008107140660286
    2. ' b' → logprob: -2.3508107662200928
    3. 'x' → logprob: -7.475810527801514
    4. ' x' → logprob: -10.350811004638672
    5. ' ' → logprob: -12.350811004638672
    6. '	b' → logprob: -15.225811004638672
    7. 'i' → logprob: -15.350811004638672
    8. '   ' → logprob: -15.350811004638672
    9. 'y' → logprob: -16.350811004638672
    10. 'k' → logprob: -16.850811004638672

Token 150: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001709924777969718
    2. ' :' → logprob: -6.376709938049316
    3. ':a' → logprob: -12.626709938049316
    4. ':(' → logprob: -13.376709938049316
    5. ',' → logprob: -13.626709938049316
    6. 'a' → logprob: -14.251709938049316
    7. ':
' → logprob: -14.751709938049316
    8. '=' → logprob: -14.751709938049316
    9. ',:' → logprob: -16.126708984375
    10. '   ' → logprob: -17.001708984375

Token 151: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.3445581793785095
    2. '(a' → logprob: -1.3445582389831543
    3. 'a' → logprob: -3.7195582389831543
    4. ' a' → logprob: -5.219558238983154
    5. '(' → logprob: -6.844558238983154
    6. ' ' → logprob: -9.594557762145996
    7. '   ' → logprob: -11.469557762145996
    8. '	a' → logprob: -12.219557762145996
    9. '  ' → logprob: -12.344557762145996
    10. ' ' → logprob: -13.219557762145996

Token 152: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.013388562947511673
    2. ' a' → logprob: -4.638388633728027
    3. '(a' → logprob: -5.638388633728027
    4. ' (' → logprob: -9.763388633728027
    5. '	a' → logprob: -12.513388633728027
    6. ' ' → logprob: -12.888388633728027
    7. '(' → logprob: -13.513388633728027
    8. '   ' → logprob: -13.638388633728027
    9. '  ' → logprob: -14.763388633728027
    10. ' ' → logprob: -15.013388633728027

Token 153: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.5766855478286743
    2. '*' → logprob: -0.8266855478286743
    3. '*b' → logprob: -7.201685428619385
    4. ' ' → logprob: -15.201685905456543
    5. ' ' → logprob: -16.201684951782227
    6. '*
' → logprob: -16.826684951782227
    7. '**' → logprob: -17.451684951782227
    8. '*(' → logprob: -17.451684951782227
    9. '*a' → logprob: -17.576684951782227
    10. ' *
' → logprob: -18.701684951782227

Token 154: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00861456897109747
    2. ' b' → logprob: -4.758614540100098
    3. ' ' → logprob: -17.258615493774414
    4. 'fact' → logprob: -17.508615493774414
    5. '(b' → logprob: -17.633615493774414
    6. '	b' → logprob: -17.758615493774414
    7. '   ' → logprob: -18.758615493774414
    8. ' fact' → logprob: -18.883615493774414
    9. ')b' → logprob: -19.258615493774414
    10. '_b' → logprob: -19.383615493774414

Token 155: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00023512568441219628
    2. ')%' → logprob: -9.000235557556152
    3. ' )' → logprob: -9.750235557556152
    4. ' %' → logprob: -10.375235557556152
    5. '%' → logprob: -10.750235557556152
    6. ')
' → logprob: -14.875235557556152
    7. '))' → logprob: -16.125234603881836
    8. ' ' → logprob: -16.625234603881836
    9. '),' → logprob: -17.000234603881836
    10. '```' → logprob: -17.625234603881836

Token 156: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.3139108419418335
    2. '%' → logprob: -1.3139108419418335
    3. '))' → logprob: -7.438910961151123
    4. ')%' → logprob: -11.188910484313965
    5. ' ' → logprob: -11.313910484313965
    6. ')' → logprob: -11.438910484313965
    7. ',' → logprob: -11.688910484313965
    8. ' ))' → logprob: -11.938910484313965
    9. '%
' → logprob: -13.063910484313965
    10. '%n' → logprob: -13.563910484313965

Token 157: ' mod' (ID: 1812)
  Prédit: ' mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.4740857779979706
    2. 'mod' → logprob: -0.974085807800293
    3. '(mod' → logprob: -12.224085807800293
    4. ' ' → logprob: -13.224085807800293
    5. ' 
' → logprob: -14.474085807800293
    6. '	mod' → logprob: -14.599085807800293
    7. ' ' → logprob: -14.974085807800293
    8. ' modul' → logprob: -15.974085807800293
    9. ' мод' → logprob: -16.099084854125977
    10. '_mod' → logprob: -16.224084854125977

Token 158: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -2.868328920158092e-05
    2. ')' → logprob: -10.750028610229492
    3. ' ))' → logprob: -12.250028610229492
    4. '))
' → logprob: -13.625028610229492
    5. ')))' → logprob: -14.625028610229492
    6. ',' → logprob: -15.375028610229492
    7. ')),' → logprob: -15.625028610229492
    8. '),' → logprob: -16.125028610229492
    9. '));' → logprob: -16.375028610229492
    10. ' ' → logprob: -16.500028610229492

Token 159: 'fin' (ID: 6994)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.9676893353462219
    2. 'inv' → logprob: -1.0926892757415771
    3. '<|end|>' → logprob: -2.342689275741577
    4. ')' → logprob: -2.842689275741577
    5. 'factor' → logprob: -3.217689275741577
    6. 'inverse' → logprob: -3.342689275741577
    7. 'ifact' → logprob: -3.967689275741577
    8. '#' → logprob: -4.592689514160156
    9. 'def' → logprob: -5.092689514160156
    10. 'mod' → logprob: -5.717689514160156

Token 160: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0012936893617734313
    2. 'verse' → logprob: -8.501294136047363
    3. '_list' → logprob: -8.626294136047363
    4. 'ct' → logprob: -9.376294136047363
    5. '_inv' → logprob: -9.376294136047363
    6. 'vt' → logprob: -9.626294136047363
    7. '_fact' → logprob: -9.751294136047363
    8. 'vs' → logprob: -10.001294136047363
    9. ' =' → logprob: -10.001294136047363
    10. 'c' → logprob: -10.126294136047363

Token 161: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.00015383612480945885
    2. ' =' → logprob: -10.125153541564941
    3. '_' → logprob: -10.375153541564941
    4. '_lst' → logprob: -10.625153541564941
    5. '_fact' → logprob: -10.875153541564941
    6. 'list' → logprob: -11.000153541564941
    7. '=' → logprob: -11.625153541564941
    8. 'fact' → logprob: -12.500153541564941
    9. 'ist' → logprob: -12.625153541564941
    10. 's' → logprob: -13.625153541564941

Token 162: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519293427467346
    2. '=' → logprob: -1.5019292831420898
    3. '＝' → logprob: -16.001930236816406
    4. '_' → logprob: -16.751930236816406
    5. '=[]' → logprob: -16.876930236816406
    6. 's' → logprob: -17.376930236816406
    7. '_=' → logprob: -17.876930236816406
    8. ' ' → logprob: -18.251930236816406
    9. ' ' → logprob: -18.376930236816406
    10. ' =[' → logprob: -19.001930236816406

Token 163: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.22079424560070038
    2. '[' → logprob: -1.7207942008972168
    3. '[list' → logprob: -4.220794200897217
    4. ' list' → logprob: -5.845794200897217
    5. ' [' → logprob: -6.595794200897217
    6. '[f' → logprob: -9.095794677734375
    7. '[]' → logprob: -10.720794677734375
    8. '[(' → logprob: -10.720794677734375
    9. '[n' → logprob: -10.845794677734375
    10. 'fact' → logprob: -11.095794677734375

Token 164: '(map' (ID: 16946)
  Prédit: '(acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(acc' → logprob: -2.451116051815916e-05
    2. '(ac' → logprob: -11.625024795532227
    3. '(' → logprob: -11.750024795532227
    4. '(chain' → logprob: -12.000024795532227
    5. '(re' → logprob: -13.875024795532227
    6. '(map' → logprob: -14.875024795532227
    7. 'acc' → logprob: -15.625024795532227
    8. ' (' → logprob: -17.125024795532227
    9. '	acc' → logprob: -17.750024795532227
    10. ' accumulate' → logprob: -18.000024795532227

Token 165: '(mod' (ID: 45051)
  Prédit: '(mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mod' → logprob: -0.06298072636127472
    2. 'mod' → logprob: -2.9379806518554688
    3. '(lambda' → logprob: -5.062980651855469
    4. '(' → logprob: -7.062980651855469
    5. ' (' → logprob: -7.687980651855469
    6. ' mod' → logprob: -8.437980651855469
    7. '   ' → logprob: -8.687980651855469
    8. 'lambda' → logprob: -10.687980651855469
    9. '	mod' → logprob: -11.562980651855469
    10. ')' → logprob: -13.062980651855469

Token 166: 'inv' (ID: 31086)
  Prédit: 'inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -1.8624639324116288e-06
    2. ' inv' → logprob: -13.250001907348633
    3. 'inf' → logprob: -17.375001907348633
    4. '(inv' → logprob: -18.250001907348633
    5. 'int' → logprob: -18.500001907348633
    6. 'lambda' → logprob: -18.875001907348633
    7. 'invert' → logprob: -19.375001907348633
    8. 'pow' → logprob: -19.500001907348633
    9. 'inverse' → logprob: -19.500001907348633
    10. 'mod' → logprob: -19.625001907348633

Token 167: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008932363707572222
    2. ' ,' → logprob: -7.2508931159973145
    3. ',f' → logprob: -8.625893592834473
    4. ',_' → logprob: -13.125893592834473
    5. ',
' → logprob: -14.250893592834473
    6. ',(' → logprob: -14.375893592834473
    7. '   ' → logprob: -15.750893592834473
    8. ' ' → logprob: -16.125892639160156
    9. 'fact' → logprob: -16.250892639160156
    10. '(f' → logprob: -16.625892639160156

Token 168: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.0005759088089689612
    2. '(f' → logprob: -7.500576019287109
    3. '_fact' → logprob: -11.62557601928711
    4. ' fact' → logprob: -11.75057601928711
    5. 're' → logprob: -12.37557601928711
    6. 'f' → logprob: -13.75057601928711
    7. '(re' → logprob: -14.25057601928711
    8. 'rev' → logprob: -16.75057601928711
    9. '.fact' → logprob: -17.87557601928711
    10. 'factor' → logprob: -18.12557601928711

Token 169: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -2.141186450899113e-05
    2. 'fact' → logprob: -10.875020980834961
    3. 'list' → logprob: -13.000020980834961
    4. '_fact' → logprob: -16.00002098083496
    5. 'List' → logprob: -17.37502098083496
    6. '_' → logprob: -18.00002098083496
    7. 'l' → logprob: -18.50002098083496
    8. ' _' → logprob: -18.62502098083496
    9. 'f' → logprob: -18.87502098083496
    10. 'ist' → logprob: -18.87502098083496

Token 170: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0030019469559192657
    2. ')' → logprob: -5.878002166748047
    3. ' ))' → logprob: -8.628002166748047
    4. ')))' → logprob: -11.753002166748047
    5. '))
' → logprob: -12.128002166748047
    6. ' )' → logprob: -13.003002166748047
    7. '[' → logprob: -14.378002166748047
    8. '()))' → logprob: -14.628002166748047
    9. ')}' → logprob: -15.128002166748047
    10. '));' → logprob: -15.253002166748047

Token 171: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1454954445362091
    2. ')' → logprob: -2.5204954147338867
    3. '#' → logprob: -3.8954954147338867
    4. '<|end|>' → logprob: -4.145495414733887
    5. 'fin' → logprob: -4.895495414733887
    6. ']' → logprob: -5.270495414733887
    7. '*' → logprob: -6.395495414733887
    8. 'fact' → logprob: -6.645495414733887
    9. 'factor' → logprob: -7.020495414733887
    10. 'f' → logprob: -7.770495414733887

Token 172: ' Gén' (ID: 71828)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.016911586746573448
    2. 'inv' → logprob: -4.266911506652832
    3. 'comb' → logprob: -6.641911506652832
    4. 'fact' → logprob: -7.641911506652832
    5. '#' → logprob: -7.766911506652832
    6. 'fac' → logprob: -9.391911506652832
    7. 'inverse' → logprob: -9.766911506652832
    8. 'pow' → logprob: -10.016911506652832
    9. 'in' → logprob: -10.266911506652832
    10. 'Comb' → logprob: -10.266911506652832

Token 173: 'ère' (ID: 4346)
  Prédit: 'ration'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ration' → logprob: -0.951024055480957
    2. 'er' → logprob: -1.576024055480957
    3. 'r' → logprob: -1.826024055480957
    4. 'def' → logprob: -2.201024055480957
    5. 'rat' → logprob: -2.951024055480957
    6. 'ération' → logprob: -3.451024055480957
    7. 'ral' → logprob: -4.326024055480957
    8. 'f' → logprob: -4.951024055480957
    9. 'eral' → logprob: -5.701024055480957
    10. 'rate' → logprob: -5.826024055480957

Token 174: ' une' (ID: 2463)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.018260452896356583
    2. ' def' → logprob: -4.268260478973389
    3. 'r' → logprob: -6.518260478973389
    4. 's' → logprob: -7.518260478973389
    5. ' un' → logprob: -7.893260478973389
    6. 'er' → logprob: -8.14326000213623
    7. 'tion' → logprob: -8.64326000213623
    8. 'un' → logprob: -8.89326000213623
    9. ' une' → logprob: -9.01826000213623
    10. '#' → logprob: -9.14326000213623

Token 175: ' table' (ID: 3293)
  Prédit: 'fonction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fonction' → logprob: -0.04986723139882088
    2. 'def' → logprob: -4.049867153167725
    3. ' fonction' → logprob: -4.799867153167725
    4. 'comb' → logprob: -4.924867153167725
    5. 'liste' → logprob: -5.799867153167725
    6. 'factor' → logprob: -5.924867153167725
    7. 'fact' → logprob: -6.299867153167725
    8. 'range' → logprob: -6.424867153167725
    9. ' combinaison' → logprob: -6.924867153167725
    10. 'suite' → logprob: -7.049867153167725

Token 176: ' d' (ID: 272)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0011697487207129598
    2. 'de' → logprob: -7.751169681549072
    3. '#' → logprob: -8.12617015838623
    4. ' def' → logprob: -9.37617015838623
    5. 'des' → logprob: -9.62617015838623
    6. 'factor' → logprob: -9.75117015838623
    7. 'n' → logprob: -10.25117015838623
    8. 'fact' → logprob: -11.00117015838623
    9. ' de' → logprob: -11.12617015838623
    10. '```' → logprob: -11.25117015838623

Token 177: ''in' (ID: 17942)
  Prédit: ''in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''in' → logprob: -0.7951055765151978
    2. 'inverse' → logprob: -1.2951055765151978
    3. 'in' → logprob: -3.420105457305908
    4. 'fac' → logprob: -4.045105457305908
    5. 'e' → logprob: -4.045105457305908
    6. 'f' → logprob: -4.545105457305908
    7. ' inverse' → logprob: -4.670105457305908
    8. 'iv' → logprob: -4.670105457305908
    9. 'x' → logprob: -4.795105457305908
    10. 'verse' → logprob: -4.920105457305908

Token 178: 'vers' (ID: 3674)
  Prédit: 'verse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'verse' → logprob: -0.49531829357147217
    2. 'vers' → logprob: -0.9953182935714722
    3. 'v' → logprob: -4.620318412780762
    4. 'version' → logprob: -4.995318412780762
    5. 'versions' → logprob: -6.620318412780762
    6. '```' → logprob: -7.245318412780762
    7. 'dex' → logprob: -7.870318412780762
    8. 'ver' → logprob: -8.120318412780762
    9. 'vr' → logprob: -8.370318412780762
    10. '[' → logprob: -8.495318412780762

Token 179: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.0058720288798213005
    2. 'ces' → logprob: -5.6308722496032715
    3. 'és' → logprob: -7.1308722496032715
    4. 'ices' → logprob: -7.3808722496032715
    5. 'eses' → logprob: -8.505871772766113
    6. '```' → logprob: -8.630871772766113
    7. 'èses' → logprob: -9.005871772766113
    8. 'ès' → logprob: -10.380871772766113
    9. 'ses' → logprob: -10.630871772766113
    10. 'e' → logprob: -10.755871772766113

Token 180: ' de' (ID: 334)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.35341623425483704
    2. 'def' → logprob: -1.7284162044525146
    3. '_inv' → logprob: -3.1034162044525146
    4. 'in' → logprob: -3.4784162044525146
    5. 'inverse' → logprob: -3.6034162044525146
    6. '_inverse' → logprob: -5.103416442871094
    7. 'fin' → logprob: -5.478416442871094
    8. ',' → logprob: -5.853416442871094
    9. 'for' → logprob: -6.353416442871094
    10. ' inv' → logprob: -7.478416442871094

Token 181: ' ' (ID: 220)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.668006181716919
    2. 'range' → logprob: -1.043006181716919
    3. 'factor' → logprob: -2.793006181716919
    4. 'fac' → logprob: -3.793006181716919
    5. 'f' → logprob: -4.16800594329834
    6. 'fin' → logprob: -4.54300594329834
    7. 'multip' → logprob: -4.91800594329834
    8. '[' → logprob: -5.79300594329834
    9. 'la' → logprob: -5.91800594329834
    10. '```' → logprob: -5.91800594329834

Token 182: '1' (ID: 16)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.15225856006145477
    2. 'range' → logprob: -2.6522586345672607
    3. 'ent' → logprob: -3.6522586345672607
    4. 'fac' → logprob: -4.027258396148682
    5. 'factor' → logprob: -4.402258396148682
    6. 'fin' → logprob: -4.902258396148682
    7. '```' → logprob: -6.402258396148682
    8. 'fa' → logprob: -7.152258396148682
    9. 'i' → logprob: -7.402258396148682
    10. 'élé' → logprob: -7.527258396148682

Token 183: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.033947426825761795
    2. ',
' → logprob: -5.033947467803955
    3. ' ,' → logprob: -5.283947467803955
    4. '/' → logprob: -5.908947467803955
    5. 's' → logprob: -6.033947467803955
    6. 'range' → logprob: -6.158947467803955
    7. ' à' → logprob: -6.658947467803955
    8. 'de' → logprob: -6.783947467803955
    9. ' jusqu' → logprob: -6.908947467803955
    10. ',...' → logprob: -6.908947467803955

Token 184: ' lim' (ID: 3147)
  Prédit: 'lim'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lim' → logprob: -0.0003099599271081388
    2. ' lim' → logprob: -8.125309944152832
    3. 'n' → logprob: -11.500309944152832
    4. 'limit' → logprob: -13.875309944152832
    5. 'l' → logprob: -14.375309944152832
    6. '_lim' → logprob: -14.500309944152832
    7. 'lims' → logprob: -14.500309944152832
    8. ' n' → logprob: -15.250309944152832
    9. 'ilim' → logprob: -15.500309944152832
    10. '```' → logprob: -15.750309944152832

Token 185: '-' (ID: 12)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.023660730570554733
    2. 'in' → logprob: -4.023660659790039
    3. 'inverse' → logprob: -5.398660659790039
    4. ' inv' → logprob: -7.398660659790039
    5. ',' → logprob: -8.523660659790039
    6. 'def' → logprob: -9.523660659790039
    7. '_inv' → logprob: -10.273660659790039
    8. 'fin' → logprob: -11.273660659790039
    9. '_inverse' → logprob: -11.773660659790039
    10. ',
' → logprob: -12.023660659790039

Token 186: '1' (ID: 16)
  Prédit: 'lim'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lim' → logprob: -0.6451578736305237
    2. '1' → logprob: -0.8951578736305237
    3. '-' → logprob: -3.895157814025879
    4. '`' → logprob: -4.020157814025879
    5. '
' → logprob: -5.270157814025879
    6. ' ' → logprob: -5.520157814025879
    7. '```' → logprob: -5.520157814025879
    8. '(' → logprob: -5.645157814025879
    9. 'moins' → logprob: -6.520157814025879
    10. 'range' → logprob: -6.645157814025879

Token 187: ' par' (ID: 686)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.019736554473638535
    2. 'in' → logprob: -4.2697367668151855
    3. 'inverse' → logprob: -5.3947367668151855
    4. ' inv' → logprob: -7.5197367668151855
    5. 'def' → logprob: -8.144736289978027
    6. ',' → logprob: -9.394736289978027
    7. '_inv' → logprob: -10.269736289978027
    8. ',
' → logprob: -10.894736289978027
    9. '
' → logprob: -11.019736289978027
    10. '(inv' → logprob: -12.144736289978027

Token 188: ' compréhension' (ID: 142333)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.7779715061187744
    2. 'i' → logprob: -2.2779715061187744
    3. ' range' → logprob: -2.6529715061187744
    4. ' une' → logprob: -3.1529715061187744
    5. 'div' → logprob: -3.4029715061187744
    6. 'n' → logprob: -3.4029715061187744
    7. '
' → logprob: -3.4029715061187744
    8. 'acc' → logprob: -3.5279715061187744
    9. 'une' → logprob: -3.9029715061187744
    10. 'def' → logprob: -4.027971267700195

Token 189: '
' (ID: 198)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.011510953307151794
    2. 'in' → logprob: -4.511510848999023
    3. 'inverse' → logprob: -8.011510848999023
    4. 'fin' → logprob: -9.386510848999023
    5. ' inv' → logprob: -11.261510848999023
    6. 'rev' → logprob: -11.386510848999023
    7. '(inv' → logprob: -11.636510848999023
    8. '[' → logprob: -12.761510848999023
    9. 'rin' → logprob: -13.136510848999023
    10. '[in' → logprob: -13.511510848999023

Token 190: 'inv' (ID: 31086)
  Prédit: 'inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.007115652319043875
    2. 'in' → logprob: -5.007115840911865
    3. 'inverse' → logprob: -8.132115364074707
    4. ' inv' → logprob: -10.007115364074707
    5. 'fin' → logprob: -10.007115364074707
    6. 'rev' → logprob: -11.757115364074707
    7. 'fact' → logprob: -13.132115364074707
    8. '[in' → logprob: -13.757115364074707
    9. 'invert' → logprob: -13.757115364074707
    10. '(inv' → logprob: -14.007115364074707

Token 191: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.8507921099662781
    2. '=' → logprob: -1.3507921695709229
    3. ' =' → logprob: -1.6007921695709229
    4. '_' → logprob: -2.225792169570923
    5. 's' → logprob: -5.600791931152344
    6. '_lst' → logprob: -8.850791931152344
    7. '_=' → logprob: -9.350791931152344
    8. '=_' → logprob: -9.350791931152344
    9. ' _' → logprob: -10.725791931152344
    10. '=[' → logprob: -10.975791931152344

Token 192: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014191895723343
    2. '=' → logprob: -1.7014192342758179
    3. '=[' → logprob: -12.95141887664795
    4. '=list' → logprob: -13.32641887664795
    5. ' =[' → logprob: -14.20141887664795
    6. ' ' → logprob: -14.45141887664795
    7. '＝' → logprob: -15.32641887664795
    8. '=[]' → logprob: -16.076419830322266
    9. ' ' → logprob: -16.201419830322266
    10. '[' → logprob: -16.201419830322266

Token 193: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04923113435506821
    2. ' [' → logprob: -3.2992310523986816
    3. '[(' → logprob: -4.549231052398682
    4. '[list' → logprob: -8.29923152923584
    5. ' [(' → logprob: -8.92423152923584
    6. '[f' → logprob: -9.92423152923584
    7. '[n' → logprob: -10.54923152923584
    8. '[in' → logprob: -11.17423152923584
    9. 'list' → logprob: -11.17423152923584
    10. '[len' → logprob: -11.67423152923584

Token 194: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.35879021883010864
    2. '0' → logprob: -1.7337901592254639
    3. 'mod' → logprob: -2.358790159225464
    4. 'pow' → logprob: -3.858790159225464
    5. '(mod' → logprob: -5.608790397644043
    6. 'fin' → logprob: -6.108790397644043
    7. '(' → logprob: -6.233790397644043
    8. 'None' → logprob: -7.608790397644043
    9. '(pow' → logprob: -8.858790397644043
    10. ' mod' → logprob: -9.233790397644043

Token 195: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.166812464594841
    2. ']' → logprob: -1.9168124198913574
    3. ']+' → logprob: -5.041812419891357
    4. ' ,' → logprob: -10.416812896728516
    5. '1' → logprob: -10.791812896728516
    6. ']*(' → logprob: -10.916812896728516
    7. ',
' → logprob: -11.416812896728516
    8. '0' → logprob: -11.791812896728516
    9. ',None' → logprob: -12.541812896728516
    10. ']*' → logprob: -12.791812896728516

Token 196: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00015955790877342224
    2. ' ' → logprob: -8.75015926361084
    3. ']' → logprob: -14.37515926361084
    4. '*' → logprob: -15.37515926361084
    5. '
' → logprob: -16.625160217285156
    6. '0' → logprob: -17.375160217285156
    7. '   ' → logprob: -17.375160217285156
    8. '  ' → logprob: -17.750160217285156
    9. '    ' → logprob: -18.625160217285156
    10. '

' → logprob: -18.750160217285156

Token 197: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.107425062713446e-06
    2. ' ' → logprob: -11.875006675720215
    3. ']' → logprob: -17.87500762939453
    4. '
' → logprob: -18.12500762939453
    5. 'pow' → logprob: -19.37500762939453
    6. '*' → logprob: -20.00000762939453
    7. '   ' → logprob: -20.25000762939453
    8. '0' → logprob: -20.50000762939453
    9. 'mod' → logprob: -20.62500762939453
    10. '  ' → logprob: -20.75000762939453

Token 198: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004358198493719101
    2. ']
' → logprob: -5.504358291625977
    3. ']+' → logprob: -8.379358291625977
    4. ']

' → logprob: -10.004358291625977
    5. ']
' → logprob: -12.754358291625977
    6. ' ]' → logprob: -13.629358291625977
    7. ']*(' → logprob: -15.129358291625977
    8. '
' → logprob: -15.379358291625977
    9. ']

' → logprob: -16.379358291625977
    10. '```' → logprob: -16.629358291625977

Token 199: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6382699012756348
    2. ']+' → logprob: -1.5132699012756348
    3. ']' → logprob: -1.7632699012756348
    4. '
' → logprob: -3.6382699012756348
    5. ' +' → logprob: -3.8882699012756348
    6. ',' → logprob: -4.513269901275635
    7. '+[' → logprob: -5.013269901275635
    8. '+
' → logprob: -5.263269901275635
    9. 'for' → logprob: -5.513269901275635
    10. '+(' → logprob: -6.763269901275635

Token 200: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.16611483693122864
    2. '[(' → logprob: -2.4161148071289062
    3. '[n' → logprob: -2.9161148071289062
    4. '[list' → logprob: -5.541114807128906
    5. '[m' → logprob: -6.291114807128906
    6. ' [' → logprob: -6.916114807128906
    7. '[
' → logprob: -7.416114807128906
    8. '[len' → logprob: -7.666114807128906
    9. '[num' → logprob: -8.166114807128906
    10. '[((' → logprob: -8.166114807128906

Token 201: 'pow' (ID: 30304)
  Prédit: '(mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(mod' → logprob: -0.035311274230480194
    2. 'mod' → logprob: -3.660311222076416
    3. '((' → logprob: -5.785311222076416
    4. ' (' → logprob: -5.910311222076416
    5. '(' → logprob: -6.035311222076416
    6. '(m' → logprob: -7.660311222076416
    7. '(n' → logprob: -9.535311698913574
    8. ' mod' → logprob: -9.785311698913574
    9. '(pow' → logprob: -9.785311698913574
    10. '   ' → logprob: -10.660311698913574

Token 202: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0032927326392382383
    2. '(x' → logprob: -5.753292560577393
    3. '(k' → logprob: -9.50329303741455
    4. 'i' → logprob: -10.37829303741455
    5. '(' → logprob: -12.50329303741455
    6. 'x' → logprob: -13.25329303741455
    7. '(n' → logprob: -13.50329303741455
    8. '(j' → logprob: -13.75329303741455
    9. '(a' → logprob: -14.87829303741455
    10. ' i' → logprob: -16.003292083740234

Token 203: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13752368092536926
    2. 'mod' → logprob: -2.137523651123047
    3. '(mod' → logprob: -4.637523651123047
    4. ' mod' → logprob: -7.762523651123047
    5. ',-' → logprob: -8.137523651123047
    6. '-' → logprob: -10.512523651123047
    7. '
' → logprob: -10.887523651123047
    8. ' ,' → logprob: -10.887523651123047
    9. '	mod' → logprob: -11.012523651123047
    10. '(-' → logprob: -11.262523651123047

Token 204: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.008647425100207329
    2. ' mod' → logprob: -4.758647441864014
    3. '	mod' → logprob: -11.258646965026855
    4. '998' → logprob: -11.633646965026855
    5. '(mod' → logprob: -12.008646965026855
    6. ' ' → logprob: -12.508646965026855
    7. '-' → logprob: -13.883646965026855
    8. '.mod' → logprob: -15.758646965026855
    9. 'moder' → logprob: -16.633647918701172
    10. 'modal' → logprob: -16.758647918701172

Token 205: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0067156096920371056
    2. ' -' → logprob: -5.006715774536133
    3. '−' → logprob: -16.256715774536133
    4. ' ' → logprob: -16.256715774536133
    5. ' ' → logprob: -17.756715774536133
    6. '–' → logprob: -18.006715774536133
    7. '  ' → logprob: -18.131715774536133
    8. '```' → logprob: -18.381715774536133
    9. '
' → logprob: -18.881715774536133
    10. '   ' → logprob: -19.256715774536133

Token 206: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.392202976712724e-06
    2. '-' → logprob: -12.625006675720215
    3. ' ' → logprob: -13.125006675720215
    4. ' -' → logprob: -14.750006675720215
    5. '
' → logprob: -15.125006675720215
    6. '```' → logprob: -16.0625057220459
    7. '۲' → logprob: -16.4375057220459
    8. '' → logprob: -16.6875057220459
    9. '

' → logprob: -16.8750057220459
    10. '  ' → logprob: -17.6250057220459

Token 207: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.7697225252486533e-06
    2. '-' → logprob: -13.750003814697266
    3. '```' → logprob: -13.875003814697266
    4. '
' → logprob: -14.375003814697266
    5. ' ' → logprob: -14.625003814697266
    6. ' -' → logprob: -15.812503814697266
    7. '

' → logprob: -15.875003814697266
    8. '' → logprob: -15.875003814697266
    9. '
' → logprob: -16.625003814697266
    10. '3' → logprob: -17.000003814697266

Token 208: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003820524725597352
    2. ' ,' → logprob: -7.875381946563721
    3. ')' → logprob: -14.125382423400879
    4. 'mod' → logprob: -14.625382423400879
    5. ',
' → logprob: -15.625382423400879
    6. ',module' → logprob: -15.875382423400879
    7. ' ' → logprob: -16.000381469726562
    8. '   ' → logprob: -16.125381469726562
    9. '  ' → logprob: -16.625381469726562
    10. '	' → logprob: -17.000381469726562

Token 209: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.004078878089785576
    2. ' mod' → logprob: -5.5040788650512695
    3. '	mod' → logprob: -15.12907886505127
    4. ')' → logprob: -16.879079818725586
    5. '(mod' → logprob: -17.129079818725586
    6. '   ' → logprob: -17.504079818725586
    7. '
' → logprob: -18.129079818725586
    8. ' ' → logprob: -18.629079818725586
    9. '  ' → logprob: -19.504079818725586
    10. '```' → logprob: -19.754079818725586

Token 210: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00017410075815860182
    2. ',' → logprob: -9.375174522399902
    3. ' )' → logprob: -9.375174522399902
    4. ' if' → logprob: -12.875174522399902
    5. 'if' → logprob: -14.000174522399902
    6. '```' → logprob: -15.375174522399902
    7. ' ,' → logprob: -15.625174522399902
    8. ' ' → logprob: -16.000173568725586
    9. ')
' → logprob: -16.125173568725586
    10. '}' → logprob: -16.250173568725586

Token 211: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3869172930717468
    2. ' for' → logprob: -1.1369173526763916
    3. '	for' → logprob: -10.636917114257812
    4. 'if' → logprob: -10.886917114257812
    5. ' if' → logprob: -13.261917114257812
    6. '   ' → logprob: -13.886917114257812
    7. ' ' → logprob: -14.386917114257812
    8. '%' → logprob: -16.636917114257812
    9. ' ' → logprob: -16.636917114257812
    10. '```' → logprob: -16.761917114257812

Token 212: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.00688338465988636
    2. 'i' → logprob: -5.13188362121582
    3. ' range' → logprob: -7.13188362121582
    4. '	i' → logprob: -9.75688362121582
    5. 'range' → logprob: -10.00688362121582
    6. ' ' → logprob: -10.25688362121582
    7. ' ' → logprob: -11.38188362121582
    8. '  ' → logprob: -12.50688362121582
    9. '   ' → logprob: -14.50688362121582
    10. ' in' → logprob: -15.00688362121582

Token 213: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.47416362166404724
    2. 'in' → logprob: -0.9741636514663696
    3. 'range' → logprob: -9.474164009094238
    4. ' ' → logprob: -12.349164009094238
    5. ' range' → logprob: -12.974164009094238
    6. '	in' → logprob: -14.099164009094238
    7. ' ' → logprob: -14.474164009094238
    8. 'i' → logprob: -14.974164009094238
    9. '  ' → logprob: -15.349164009094238
    10. ' i' → logprob: -15.349164009094238

Token 214: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.01416350994259119
    2. ' range' → logprob: -4.264163494110107
    3. '	range' → logprob: -16.889163970947266
    4. '(range' → logprob: -18.139163970947266
    5. '   ' → logprob: -19.889163970947266
    6. ' ' → logprob: -19.889163970947266
    7. '
' → logprob: -20.139163970947266
    8. 'Range' → logprob: -20.764163970947266
    9. '  ' → logprob: -20.764163970947266
    10. '```' → logprob: -21.264163970947266

Token 215: '(' (ID: 7)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3868895173072815
    2. '(' → logprob: -1.1368894577026367
    3. ' (' → logprob: -11.886889457702637
    4. ' ' → logprob: -12.011889457702637
    5. '
' → logprob: -12.511889457702637
    6. '```' → logprob: -14.511889457702637
    7. '  ' → logprob: -15.011889457702637
    8. '(
' → logprob: -15.511889457702637
    9. '	' → logprob: -15.511889457702637
    10. '

' → logprob: -16.011890411376953

Token 216: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.961759259458631e-06
    2. ' ' → logprob: -12.250004768371582
    3. '۲' → logprob: -17.5000057220459
    4. '  ' → logprob: -17.7500057220459
    5. '```' → logprob: -17.7500057220459
    6. '	' → logprob: -17.9375057220459
    7. '   ' → logprob: -18.0625057220459
    8. '２' → logprob: -18.3750057220459
    9. '
' → logprob: -18.4375057220459
    10. '(' → logprob: -18.5625057220459

Token 217: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003914695407729596
    2. ' ,' → logprob: -7.875391483306885
    3. ',len' → logprob: -12.125391006469727
    4. ',n' → logprob: -12.875391006469727
    5. ',l' → logprob: -13.250391006469727
    6. '1' → logprob: -14.125391006469727
    7. ',int' → logprob: -15.375391006469727
    8. ',m' → logprob: -15.500391006469727
    9. ',
' → logprob: -15.750391006469727
    10. 'lim' → logprob: -16.625391006469727

Token 218: ' lim' (ID: 3147)
  Prédit: 'lim'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lim' → logprob: -8.661626634420827e-05
    2. ' lim' → logprob: -9.375086784362793
    3. '   ' → logprob: -14.250086784362793
    4. 'limit' → logprob: -14.500086784362793
    5. 'lin' → logprob: -15.625086784362793
    6. 'lims' → logprob: -16.125085830688477
    7. 'len' → logprob: -16.375085830688477
    8. '    ' → logprob: -16.875085830688477
    9. ' ' → logprob: -17.125085830688477
    10. '
' → logprob: -17.500085830688477

Token 219: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00013727048644796014
    2. ' )' → logprob: -9.875137329101562
    3. ')])' → logprob: -10.000137329101562
    4. ')' → logprob: -10.625137329101562
    5. ')],' → logprob: -12.000137329101562
    6. ']' → logprob: -12.875137329101562
    7. '])]' → logprob: -13.375137329101562
    8. ',' → logprob: -13.875137329101562
    9. '')]' → logprob: -14.125137329101562
    10. '])' → logprob: -14.375137329101562

Token 220: '#' (ID: 2)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02863115817308426
    2. ']' → logprob: -4.153631210327148
    3. 'def' → logprob: -5.528631210327148
    4. '#' → logprob: -5.653631210327148
    5. '
' → logprob: -6.028631210327148
    6. '<|end|>' → logprob: -7.028631210327148
    7. '[' → logprob: -7.653631210327148
    8. ')]' → logprob: -8.028631210327148
    9. '```' → logprob: -8.403631210327148
    10. ' ' → logprob: -9.403631210327148

Token 221: ' Bin' (ID: 30917)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01816890574991703
    2. '#' → logprob: -4.268168926239014
    3. 'comb' → logprob: -6.518168926239014
    4. 'fact' → logprob: -7.393168926239014
    5. 'factor' → logprob: -7.893168926239014
    6. 'pow' → logprob: -8.018168449401855
    7. 'class' → logprob: -8.643168449401855
    8. '```' → logprob: -8.643168449401855
    9. 'c' → logprob: -8.893168449401855
    10. 'for' → logprob: -9.018168449401855

Token 222: 'omial' (ID: 42600)
  Prédit: 'omial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'omial' → logprob: -0.05008983239531517
    2. 'om' → logprob: -3.0500898361206055
    3. 'def' → logprob: -6.9250898361206055
    4. 'ôm' → logprob: -9.425089836120605
    5. 'ôme' → logprob: -9.425089836120605
    6. 'coeff' → logprob: -9.550089836120605
    7. 'o' → logprob: -9.675089836120605
    8. 'coef' → logprob: -9.925089836120605
    9. 'omia' → logprob: -10.175089836120605
    10. '_coeff' → logprob: -10.300089836120605

Token 223: ' coefficient' (ID: 64656)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.006247768644243479
    2. '(' → logprob: -5.5062479972839355
    3. '(n' → logprob: -7.1312479972839355
    4. 'coeff' → logprob: -7.1312479972839355
    5. '_coeff' → logprob: -8.881247520446777
    6. '(
' → logprob: -9.006247520446777
    7. 'coef' → logprob: -9.631247520446777
    8. ')' → logprob: -10.256247520446777
    9. ' def' → logprob: -10.381247520446777
    10. '_coef' → logprob: -10.631247520446777

Token 224: ' function' (ID: 1114)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00086012709653005
    2. ')' → logprob: -8.250860214233398
    3. '(' → logprob: -8.625860214233398
    4. ' def' → logprob: -9.000860214233398
    5. '_' → logprob: -9.500860214233398
    6. '_def' → logprob: -9.875860214233398
    7. ',' → logprob: -10.125860214233398
    8. ']' → logprob: -10.250860214233398
    9. '(n' → logprob: -10.625860214233398
    10. '(
' → logprob: -11.375860214233398

Token 225: ' with' (ID: 483)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00013250234769657254
    2. '(' → logprob: -10.00013256072998
    3. ')' → logprob: -10.37513256072998
    4. ' def' → logprob: -10.62513256072998
    5. '```' → logprob: -11.00013256072998
    6. '(
' → logprob: -12.62513256072998
    7. '(n' → logprob: -12.75013256072998
    8. '(def' → logprob: -13.12513256072998
    9. ':def' → logprob: -13.12513256072998
    10. '
' → logprob: -13.62513256072998

Token 226: ' bar' (ID: 3608)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.15843550860881805
    2. '@' → logprob: -2.033435583114624
    3. 'l' → logprob: -4.658435344696045
    4. 'cache' → logprob: -5.408435344696045
    5. 'n' → logprob: -7.408435344696045
    6. ' def' → logprob: -8.158435821533203
    7. '(n' → logprob: -8.783435821533203
    8. '_cache' → logprob: -9.158435821533203
    9. 'memo' → logprob: -9.283435821533203
    10. 'cached' → logprob: -9.533435821533203

Token 227: 'oque' (ID: 52013)
  Prédit: 'code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'code' → logprob: -1.8293460607528687
    2. 's' → logprob: -1.9543460607528687
    3. 'c' → logprob: -2.079346179962158
    4. '```' → logprob: -2.329346179962158
    5. '{' → logprob: -2.454346179962158
    6. '_' → logprob: -3.204346179962158
    7. 'def' → logprob: -3.329346179962158
    8. '()' → logprob: -3.454346179962158
    9. '_code' → logprob: -3.704346179962158
    10. ')' → logprob: -3.954346179962158

Token 228: ' structure' (ID: 8866)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0780184343457222
    2. 'coeff' → logprob: -4.078018665313721
    3. '(' → logprob: -4.203018665313721
    4. ' def' → logprob: -4.453018665313721
    5. '(n' → logprob: -4.453018665313721
    6. 'notation' → logprob: -5.203018665313721
    7. '(
' → logprob: -5.328018665313721
    8. ')' → logprob: -6.578018665313721
    9. 'coef' → logprob: -6.703018665313721
    10. '_coeff' → logprob: -7.453018665313721

Token 229: ' and' (ID: 326)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.002310242271050811
    2. '
' → logprob: -6.877310276031494
    3. '(
' → logprob: -7.502310276031494
    4. '(' → logprob: -8.252309799194336
    5. ':' → logprob: -9.002309799194336
    6. ' def' → logprob: -9.627309799194336
    7. '\' → logprob: -9.752309799194336
    8. ':def' → logprob: -9.752309799194336
    9. '```' → logprob: -10.127309799194336
    10. '(def' → logprob: -10.252309799194336

Token 230: ' caching' (ID: 104247)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' → logprob: -0.18014401197433472
    2. 'cache' → logprob: -2.1801440715789795
    3. 'def' → logprob: -4.1801438331604
    4. 'l' → logprob: -4.4301438331604
    5. 'memo' → logprob: -4.4301438331604
    6. '_cache' → logprob: -5.4301438331604
    7. 'c' → logprob: -5.6801438331604
    8. ' caching' → logprob: -6.6801438331604
    9. 'cached' → logprob: -7.4301438331604
    10. ' @' → logprob: -8.055144309997559

Token 231: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5800266265869141
    2. '@' → logprob: -0.8300266265869141
    3. '(' → logprob: -6.080026626586914
    4. ')' → logprob: -7.705026626586914
    5. '```' → logprob: -7.705026626586914
    6. '
' → logprob: -7.955026626586914
    7. '@
' → logprob: -9.080026626586914
    8. '@n' → logprob: -9.080026626586914
    9. '(
' → logprob: -9.205026626586914
    10. '\' → logprob: -10.580026626586914

Token 232: '@' (ID: 31)
  Prédit: '@'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' → logprob: -9.758300438988954e-05
    2. 'def' → logprob: -9.250097274780273
    3. '@n' → logprob: -13.750097274780273
    4. '```' → logprob: -15.750097274780273
    5. '@get' → logprob: -17.500097274780273
    6. '@login' → logprob: -17.500097274780273
    7. ' @' → logprob: -17.750097274780273
    8. '@click' → logprob: -17.750097274780273
    9. '@m' → logprob: -18.000097274780273
    10. '@s' → logprob: -18.125097274780273

Token 233: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: 0.0
    2. ' l' → logprob: -17.0
    3. 'cache' → logprob: -20.0
    4. 'staticmethod' → logprob: -20.375
    5. '	l' → logprob: -20.375
    6. '```' → logprob: -20.375
    7. '
' → logprob: -20.875
    8. '_l' → logprob: -22.375
    9. 'lr' → logprob: -23.0
    10. '`' → logprob: -23.25

Token 234: 'ru' (ID: 1942)
  Prédit: 'ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -0.20190149545669556
    2. 'r' → logprob: -1.7019014358520508
    3. 'l' → logprob: -7.701901435852051
    4. 'rl' → logprob: -10.95190143585205
    5. 'cache' → logprob: -12.32690143585205
    6. '```' → logprob: -12.95190143585205
    7. '@' → logprob: -13.20190143585205
    8. 'u' → logprob: -13.82690143585205
    9. 'rw' → logprob: -13.82690143585205
    10. 'RU' → logprob: -14.07690143585205

Token 235: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -0.00020771251001860946
    2. '_cached' → logprob: -9.000207901000977
    3. 'def' → logprob: -9.500207901000977
    4. 'cache' → logprob: -11.875207901000977
    5. '@' → logprob: -14.750207901000977
    6. '_CACHE' → logprob: -14.875207901000977
    7. '_' → logprob: -15.000207901000977
    8. 'cached' → logprob: -15.125207901000977
    9. '_c' → logprob: -15.750207901000977
    10. 'Cache' → logprob: -16.000207901000977

Token 236: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.035807009786367416
    2. '(None' → logprob: -3.785806894302368
    3. 'def' → logprob: -4.410807132720947
    4. 'max' → logprob: -9.160806655883789
    5. '
' → logprob: -9.410806655883789
    6. 'None' → logprob: -9.535806655883789
    7. '()' → logprob: -9.785806655883789
    8. '()
' → logprob: -11.535806655883789
    9. '[max' → logprob: -12.660806655883789
    10. '(def' → logprob: -13.285806655883789

Token 237: 'size' (ID: 4461)
  Prédit: 'size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -1.8074162653647363e-05
    2. '_size' → logprob: -11.250018119812012
    3. 's' → logprob: -14.125018119812012
    4. 'def' → logprob: -14.125018119812012
    5. '(size' → logprob: -14.125018119812012
    6. '<size' → logprob: -14.375018119812012
    7. 'cache' → logprob: -14.375018119812012
    8. ' size' → logprob: -14.750018119812012
    9. '
' → logprob: -15.000018119812012
    10. '_cache' → logprob: -15.375018119812012

Token 238: '=None' (ID: 12783)
  Prédit: '=None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=None' → logprob: -0.0006654949975199997
    2. '=' → logprob: -7.875665664672852
    3. 'None' → logprob: -8.250665664672852
    4. '(None' → logprob: -10.750665664672852
    5. 'def' → logprob: -13.875665664672852
    6. '```' → logprob: -14.500665664672852
    7. '=max' → logprob: -15.375665664672852
    8. '
' → logprob: -15.750665664672852
    9. '=True' → logprob: -15.750665664672852
    10. 'max' → logprob: -15.875665664672852

Token 239: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.06268586218357086
    2. ')' → logprob: -2.812685966491699
    3. 'def' → logprob: -7.312685966491699
    4. '())
' → logprob: -10.6876859664917
    5. ')
' → logprob: -10.6876859664917
    6. ')

' → logprob: -13.4376859664917
    7. ')`
' → logprob: -13.8126859664917
    8. '
' → logprob: -14.5626859664917
    9. ' )
' → logprob: -14.6876859664917
    10. '(def' → logprob: -14.9376859664917

Token 240: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -9.491498531133402e-06
    2. '
' → logprob: -11.625009536743164
    3. ' def' → logprob: -15.250009536743164
    4. '(def' → logprob: -16.125009536743164
    5. 'de' → logprob: -16.250009536743164
    6. '(' → logprob: -18.875009536743164
    7. 'd' → logprob: -19.125009536743164
    8. ':def' → logprob: -19.625009536743164
    9. '('' → logprob: -19.750009536743164
    10. '-def' → logprob: -19.750009536743164

Token 241: ' com' (ID: 452)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.9860183000564575
    2. 'C' → logprob: -1.1110183000564575
    3. 'bin' → logprob: -1.6110183000564575
    4. 'choose' → logprob: -2.986018180847168
    5. 'n' → logprob: -3.861018180847168
    6. 'cmb' → logprob: -4.486018180847168
    7. 'cn' → logprob: -4.861018180847168
    8. 'c' → logprob: -5.861018180847168
    9. 'cb' → logprob: -7.236018180847168
    10. 'com' → logprob: -7.236018180847168

Token 242: '(u' (ID: 17057)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.0087516784551553e-05
    2. 'bi' → logprob: -12.62501049041748
    3. 'bination' → logprob: -12.75001049041748
    4. '(b' → logprob: -13.12501049041748
    5. '(' → logprob: -15.25001049041748
    6. 'bin' → logprob: -15.37501049041748
    7. 'bj' → logprob: -15.37501049041748
    8. 'binations' → logprob: -15.50001049041748
    9. 'p' → logprob: -15.62501049041748
    10. 'bine' → logprob: -15.62501049041748

Token 243: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001126763760112226
    2. ',v' → logprob: -7.251126766204834
    3. ' ,' → logprob: -8.251126289367676
    4. ',b' → logprob: -9.751126289367676
    5. ',n' → logprob: -10.376126289367676
    6. ',u' → logprob: -10.626126289367676
    7. ',r' → logprob: -11.501126289367676
    8. ',k' → logprob: -12.376126289367676
    9. ',d' → logprob: -12.626126289367676
    10. ',p' → logprob: -12.876126289367676

Token 244: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0003024537581950426
    2. ' v' → logprob: -8.2503023147583
    3. 'k' → logprob: -10.1253023147583
    4. 'r' → logprob: -14.0003023147583
    5. '	v' → logprob: -16.000303268432617
    6. 'u' → logprob: -17.250303268432617
    7. 'w' → logprob: -18.000303268432617
    8. 'd' → logprob: -18.000303268432617
    9. 'b' → logprob: -18.375303268432617
    10. 'q' → logprob: -18.750303268432617

Token 245: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002230309881269932
    2. '):
' → logprob: -6.127230167388916
    3. ')' → logprob: -10.127230644226074
    4. '):
' → logprob: -12.502230644226074
    5. ' ):' → logprob: -14.002230644226074
    6. ':' → logprob: -14.502230644226074
    7. '):

' → logprob: -17.002229690551758
    8. ')：' → logprob: -17.127229690551758
    9. '=' → logprob: -17.377229690551758
    10. '   ' → logprob: -18.127229690551758

Token 246: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.64750736951828
    2. ' if' → logprob: -0.77250736951828
    3. ' return' → logprob: -5.397507190704346
    4. '	if' → logprob: -5.522507190704346
    5. 'if' → logprob: -6.397507190704346
    6. ')' → logprob: -6.647507190704346
    7. ' ' → logprob: -7.147507190704346
    8. ':' → logprob: -7.147507190704346
    9. '	return' → logprob: -7.647507190704346
    10. '<|end|>' → logprob: -8.522507667541504

Token 247: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.05397335812449455
    2. ' if' → logprob: -3.053973436355591
    3. '   ' → logprob: -5.553973197937012
    4. 'return' → logprob: -6.553973197937012
    5. ' return' → logprob: -9.553973197937012
    6. '	if' → logprob: -12.678973197937012
    7. '```' → logprob: -15.178973197937012
    8. '    
' → logprob: -15.428973197937012
    9. ' ' → logprob: -15.678973197937012
    10. ' 
' → logprob: -16.303974151611328

Token 248: ' u' (ID: 337)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.03412969410419464
    2. ' v' → logprob: -3.4091296195983887
    3. 'u' → logprob: -7.784129619598389
    4. ' u' → logprob: -9.659130096435547
    5. ' not' → logprob: -13.784130096435547
    6. '   ' → logprob: -13.909130096435547
    7. '	v' → logprob: -14.284130096435547
    8. '(v' → logprob: -14.659130096435547
    9. 'not' → logprob: -15.909130096435547
    10. '0' → logprob: -16.034130096435547

Token 249: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.35194942355155945
    2. ' <' → logprob: -1.2269494533538818
    3. '<v' → logprob: -5.726949214935303
    4. '<u' → logprob: -8.976949691772461
    5. '<m' → logprob: -10.226949691772461
    6. '<n' → logprob: -10.851949691772461
    7. 'v' → logprob: -11.726949691772461
    8. '<len' → logprob: -11.976949691772461
    9. '<|end|>' → logprob: -12.226949691772461
    10. ' ' → logprob: -12.226949691772461

Token 250: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0699644461274147
    2. '0' → logprob: -2.6949644088745117
    3. ' v' → logprob: -10.694964408874512
    4. ' ' → logprob: -12.444964408874512
    5. '1' → logprob: -14.444964408874512
    6. '=' → logprob: -15.194964408874512
    7. 'u' → logprob: -15.319964408874512
    8. '=v' → logprob: -16.069965362548828
    9. '	v' → logprob: -16.069965362548828
    10. '<v' → logprob: -16.069965362548828

Token 251: ' or' (ID: 503)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3099597096443176
    2. ' or' → logprob: -1.6849596500396729
    3. ':return' → logprob: -2.809959650039673
    4. ':
' → logprob: -4.059959888458252
    5. '   ' → logprob: -6.059959888458252
    6. 'or' → logprob: -7.434959888458252
    7. '       ' → logprob: -8.559959411621094
    8. ' return' → logprob: -8.809959411621094
    9. ')' → logprob: -9.059959411621094
    10. 'return' → logprob: -10.059959411621094

Token 252: ' u' (ID: 337)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.002090899972245097
    2. ' v' → logprob: -6.377090930938721
    3. 'u' → logprob: -7.877090930938721
    4. ' u' → logprob: -11.877090454101562
    5. '   ' → logprob: -13.627090454101562
    6. '0' → logprob: -14.002090454101562
    7. '	v' → logprob: -15.627090454101562
    8. '```' → logprob: -16.877090454101562
    9. '
' → logprob: -17.252090454101562
    10. ' ' → logprob: -17.752090454101562

Token 253: ' <' (ID: 464)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5021200776100159
    2. ' ==' → logprob: -1.127120018005371
    3. '=' → logprob: -3.502120018005371
    4. ' ' → logprob: -4.002120018005371
    5. ' <' → logprob: -5.377120018005371
    6. '0' → logprob: -5.502120018005371
    7. '<|end|>' → logprob: -5.502120018005371
    8. '<' → logprob: -5.877120018005371
    9. '[' → logprob: -6.627120018005371
    10. ':' → logprob: -6.752120018005371

Token 254: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.420598219847307e-05
    2. 'v' → logprob: -10.2500638961792
    3. ' ' → logprob: -10.5000638961792
    4. '1' → logprob: -14.3750638961792
    5. ' v' → logprob: -15.2500638961792
    6. '۰' → logprob: -15.6250638961792
    7. ' or' → logprob: -17.187564849853516
    8. 'or' → logprob: -17.562564849853516
    9. ' ' → logprob: -18.187564849853516
    10. '   ' → logprob: -18.437564849853516

Token 255: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.6776029699249193e-05
    2. ' ' → logprob: -11.25002670288086
    3. 'v' → logprob: -11.25002670288086
    4. '1' → logprob: -15.00002670288086
    5. '۰' → logprob: -15.75002670288086
    6. 'or' → logprob: -16.50002670288086
    7. ' or' → logprob: -16.75002670288086
    8. ' v' → logprob: -17.43752670288086
    9. 'zero' → logprob: -18.43752670288086
    10. '   ' → logprob: -18.62502670288086

Token 256: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.10562359541654587
    2. ':' → logprob: -2.355623483657837
    3. '   ' → logprob: -6.105623722076416
    4. ':return' → logprob: -6.605623722076416
    5. 'or' → logprob: -6.980623722076416
    6. ':
' → logprob: -7.230623722076416
    7. '	or' → logprob: -9.230623245239258
    8. '       ' → logprob: -10.605623245239258
    9. ' ' → logprob: -11.230623245239258
    10. ' :' → logprob: -12.230623245239258

Token 257: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.00760698551312089
    2. ' v' → logprob: -4.8826069831848145
    3. 'u' → logprob: -14.382607460021973
    4. '0' → logprob: -15.757607460021973
    5. '	v' → logprob: -16.507606506347656
    6. '   ' → logprob: -17.382606506347656
    7. '```' → logprob: -17.507606506347656
    8. ' ' → logprob: -17.507606506347656
    9. ' u' → logprob: -18.632606506347656
    10. '
' → logprob: -18.882606506347656

Token 258: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -1.0465655326843262
    2. ' <' → logprob: -1.1715655326843262
    3. '<|end|>' → logprob: -1.7965655326843262
    4. ')' → logprob: -2.796565532684326
    5. '>' → logprob: -3.546565532684326
    6. ' ' → logprob: -3.796565532684326
    7. ' >' → logprob: -4.046565532684326
    8. '):' → logprob: -4.546565532684326
    9. ':' → logprob: -4.796565532684326
    10. '[' → logprob: -5.046565532684326

Token 259: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. '<|end|>' → logprob: -18.000019073486328
    4. '۰' → logprob: -18.125019073486328
    5. '1' → logprob: -18.875019073486328
    6. 'v' → logprob: -20.437519073486328
    7. '
' → logprob: -20.625019073486328
    8. ',' → logprob: -21.125019073486328
    9. ')' → logprob: -21.187519073486328
    10. '```' → logprob: -21.437519073486328

Token 260: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.13388703338569e-06
    2. ' ' → logprob: -11.625009536743164
    3. '۰' → logprob: -16.500009536743164
    4. '1' → logprob: -18.125009536743164
    5. '
' → logprob: -18.625009536743164
    6. '<|end|>' → logprob: -18.937509536743164
    7. '=' → logprob: -19.250009536743164
    8. '```' → logprob: -19.562509536743164
    9. '০' → logprob: -19.750009536743164
    10. 'u' → logprob: -19.937509536743164

Token 261: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011739770881831646
    2. ':
' → logprob: -4.636739730834961
    3. '   ' → logprob: -6.511739730834961
    4. ':return' → logprob: -7.886739730834961
    5. '):' → logprob: -10.011739730834961
    6. '       ' → logprob: -10.136739730834961
    7. ' or' → logprob: -11.511739730834961
    8. '):
' → logprob: -11.511739730834961
    9. ' :' → logprob: -11.636739730834961
    10. ',' → logprob: -13.136739730834961

Token 262: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08337551355361938
    2. '   ' → logprob: -2.5833754539489746
    3. ' return' → logprob: -6.208375453948975
    4. 'return' → logprob: -6.958375453948975
    5. ')' → logprob: -7.708375453948975
    6. ':return' → logprob: -7.708375453948975
    7. '	return' → logprob: -9.333375930786133
    8. '0' → logprob: -9.458375930786133
    9. '	' → logprob: -9.458375930786133
    10. ':' → logprob: -9.458375930786133

Token 263: ' return' (ID: 622)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2027435004711151
    2. 'return' (adapté à ' return') → logprob: -1.7027435302734375
    3. ' return' → logprob: -6.9527435302734375
    4. '   ' → logprob: -8.077743530273438
    5. '       ' → logprob: -10.327743530273438
    6. ' ' → logprob: -11.952743530273438
    7. '	return' → logprob: -11.952743530273438
    8. '
' → logprob: -12.452743530273438
    9. '1' → logprob: -12.827743530273438
    10. 'yield' → logprob: -12.827743530273438

Token 264: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.130576806142926e-05
    2. ' ' → logprob: -10.375031471252441
    3. '   ' → logprob: -19.875030517578125
    4. '۰' → logprob: -19.875030517578125
    5. ' ' → logprob: -20.750030517578125
    6. '
' → logprob: -20.750030517578125
    7. '```' → logprob: -20.750030517578125
    8. '  ' → logprob: -21.500030517578125
    9. '00' → logprob: -21.812530517578125
    10. '000' → logprob: -22.500030517578125

Token 265: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '۰' → logprob: -19.250001907348633
    4. '
' → logprob: -19.875001907348633
    5. '   ' → logprob: -20.500001907348633
    6. '00' → logprob: -20.625001907348633
    7. '```' → logprob: -20.875001907348633
    8. '000' → logprob: -21.375001907348633
    9. ' ' → logprob: -21.875001907348633
    10. '  
' → logprob: -21.937501907348633

Token 266: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05072186887264252
    2. '
' → logprob: -3.6757218837738037
    3. '<|end|>' → logprob: -4.050721645355225
    4. ')' → logprob: -6.175721645355225
    5. ' return' → logprob: -7.300721645355225
    6. ',' → logprob: -7.675721645355225
    7. ':return' → logprob: -7.800721645355225
    8. 'n' → logprob: -7.800721645355225
    9. '<|end|>' → logprob: -7.800721645355225
    10. '	return' → logprob: -8.050722122192383

Token 267: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -6.504040356958285e-05
    2. 'return' → logprob: -11.000064849853516
    3. '    
' → logprob: -11.250064849853516
    4. '	return' → logprob: -11.375064849853516
    5. 'u' → logprob: -12.625064849853516
    6. ')' → logprob: -12.750064849853516
    7. ' return' → logprob: -12.750064849853516
    8. '
' → logprob: -13.125064849853516
    9. 'n' → logprob: -13.250064849853516
    10. '```' → logprob: -13.250064849853516

Token 268: ' try' (ID: 2075)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6486583948135376
    2. '   ' → logprob: -0.7736583948135376
    3. ' return' → logprob: -4.648658275604248
    4. 'if' → logprob: -5.273658275604248
    5. 'res' → logprob: -7.523658275604248
    6. ' if' → logprob: -8.273658752441406
    7. 'r' → logprob: -8.773658752441406
    8. 'ret' → logprob: -9.148658752441406
    9. '	return' → logprob: -10.398658752441406
    10. ' res' → logprob: -10.898658752441406

Token 269: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010698891244828701
    2. ':
' → logprob: -4.6356987953186035
    3. ':return' → logprob: -7.7606987953186035
    4. ' :' → logprob: -8.260699272155762
    5. '       ' → logprob: -8.885699272155762
    6. '):' → logprob: -10.010699272155762
    7. '   ' → logprob: -10.135699272155762
    8. '[' → logprob: -11.385699272155762
    9. ' :
' → logprob: -11.885699272155762
    10. '):
' → logprob: -12.010699272155762

Token 270: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8026183843612671
    2. '       ' → logprob: -1.177618384361267
    3. ' return' → logprob: -1.802618384361267
    4. 'return' → logprob: -2.5526185035705566
    5. ':return' → logprob: -8.177618026733398
    6. '	return' → logprob: -8.302618026733398
    7. '
' → logprob: -8.427618026733398
    8. '   ' → logprob: -9.677618026733398
    9. '{return' → logprob: -9.677618026733398
    10. ':' → logprob: -10.177618026733398

Token 271: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09368476271629333
    2. 'return' (adapté à ' return') → logprob: -2.468684673309326
    3. ' return' → logprob: -5.593684673309326
    4. '   ' → logprob: -7.093684673309326
    5. '	return' → logprob: -9.468685150146484
    6. 'result' → logprob: -10.843685150146484
    7. '           ' → logprob: -10.843685150146484
    8. '{return' → logprob: -11.093685150146484
    9. '	   ' → logprob: -11.218685150146484
    10. '      ' → logprob: -12.218685150146484

Token 272: ' fact' (ID: 2840)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.6217904686927795
    2. ' (' → logprob: -1.2467904090881348
    3. 'fact' → logprob: -1.9967904090881348
    4. ' fact' → logprob: -3.3717904090881348
    5. '(fin' → logprob: -5.996790409088135
    6. 'fin' → logprob: -7.121790409088135
    7. ' fin' → logprob: -7.371790409088135
    8. '   ' → logprob: -7.871790409088135
    9. 'factor' → logprob: -8.934290885925293
    10. ' ' → logprob: -8.996790885925293

Token 273: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.8312570318812504e-05
    2. 'list' → logprob: -12.250018119812012
    3. '_' → logprob: -13.000018119812012
    4. 's' → logprob: -13.125018119812012
    5. '[u' → logprob: -13.125018119812012
    6. '(u' → logprob: -13.375018119812012
    7. '[_' → logprob: -13.500018119812012
    8. 'u' → logprob: -13.750018119812012
    9. '[' → logprob: -14.000018119812012
    10. '(_' → logprob: -14.750018119812012

Token 274: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -1.9361264946837764e-07
    2. 'u' → logprob: -16.0
    3. '[' → logprob: -17.75
    4. '[n' → logprob: -19.75
    5. ' [' → logprob: -20.25
    6. '[v' → logprob: -20.5
    7. '
' → logprob: -20.625
    8. '

' → logprob: -21.125
    9. '[int' → logprob: -21.125
    10. '[
' → logprob: -21.25

Token 275: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.700132997939363e-05
    2. ']*' → logprob: -11.125017166137695
    3. ' ]' → logprob: -13.375017166137695
    4. ']
' → logprob: -14.625017166137695
    5. '   ' → logprob: -16.500017166137695
    6. '*' → logprob: -18.000017166137695
    7. ' ' → logprob: -18.375017166137695
    8. '"]' → logprob: -18.875017166137695
    9. '
' → logprob: -19.000017166137695
    10. '']' → logprob: -19.250017166137695

Token 276: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.20143136382102966
    2. '*' → logprob: -1.701431393623352
    3. ' ' → logprob: -11.826431274414062
    4. ' ' → logprob: -12.201431274414062
    5. '   ' → logprob: -12.451431274414062
    6. '**' → logprob: -13.951431274414062
    7. '*object' → logprob: -15.826431274414062
    8. '  ' → logprob: -15.951431274414062
    9. '	' → logprob: -15.951431274414062
    10. '
' → logprob: -16.076431274414062

Token 277: ' fin' (ID: 2131)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fin' → logprob: -0.06213069707155228
    2. ' fin' → logprob: -2.8121306896209717
    3. '(fin' → logprob: -8.93713092803955
    4. 'fact' → logprob: -11.18713092803955
    5. '(' → logprob: -12.43713092803955
    6. '   ' → logprob: -12.81213092803955
    7. 'inv' → logprob: -12.81213092803955
    8. ' (' → logprob: -13.18713092803955
    9. 'f' → logprob: -13.93713092803955
    10. 'fim' → logprob: -14.43713092803955

Token 278: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -9.088346359931165e-07
    2. 'inv' → logprob: -14.250000953674316
    3. '
' → logprob: -16.875
    4. '_inv' → logprob: -17.125
    5. '_v' → logprob: -17.25
    6. 'в' → logprob: -17.5
    7. '```' → logprob: -17.875
    8. 'iv' → logprob: -18.125
    9. 'ev' → logprob: -18.5
    10. '(inv' → logprob: -18.5

Token 279: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -2.0100624169572257e-05
    2. '[_' → logprob: -11.125020027160645
    3. '[' → logprob: -12.875020027160645
    4. '[u' → logprob: -13.250020027160645
    5. 'list' → logprob: -15.375020027160645
    6. 'List' → logprob: -15.500020027160645
    7. '```' → logprob: -16.12502098083496
    8. '[f' → logprob: -16.62502098083496
    9. '_LIST' → logprob: -16.75002098083496
    10. 's' → logprob: -17.00002098083496

Token 280: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -3.650518920039758e-06
    2. '[' → logprob: -13.250003814697266
    3. 'v' → logprob: -13.750003814697266
    4. ' [' → logprob: -15.000003814697266
    5. '[u' → logprob: -15.375003814697266
    6. '(v' → logprob: -17.750003814697266
    7. '[[' → logprob: -17.875003814697266
    8. '[
' → logprob: -17.875003814697266
    9. '[val' → logprob: -18.000003814697266
    10. '[m' → logprob: -18.250003814697266

Token 281: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.14293155074119568
    2. ']%' → logprob: -2.0179314613342285
    3. '%' → logprob: -8.642931938171387
    4. '[u' → logprob: -10.142931938171387
    5. '][' → logprob: -11.517931938171387
    6. '[' → logprob: -11.642931938171387
    7. ' ]' → logprob: -12.142931938171387
    8. ']*' → logprob: -12.267931938171387
    9. '])' → logprob: -13.142931938171387
    10. ']
' → logprob: -14.142931938171387

Token 282: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.02978694438934326
    2. ' %' → logprob: -3.529787063598633
    3. '*' → logprob: -10.529787063598633
    4. ' *' → logprob: -12.154787063598633
    5. ')' → logprob: -13.779787063598633
    6. '   ' → logprob: -14.279787063598633
    7. '%x' → logprob: -14.404787063598633
    8. ')%' → logprob: -14.779787063598633
    9. '%n' → logprob: -14.904787063598633
    10. '%e' → logprob: -15.279787063598633

Token 283: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0005573204252868891
    2. ' mod' → logprob: -7.5005574226379395
    3. '998' → logprob: -12.375556945800781
    4. '(mod' → logprob: -16.75055694580078
    5. '	mod' → logprob: -17.37555694580078
    6. '999' → logprob: -17.75055694580078
    7. ' ' → logprob: -17.87555694580078
    8. '
' → logprob: -18.87555694580078
    9. '```' → logprob: -19.62555694580078
    10. '`' → logprob: -20.50055694580078

Token 284: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.05129462853074074
    2. '*' → logprob: -3.4262945652008057
    3. '   ' → logprob: -4.301294803619385
    4. '<|end|>' → logprob: -6.176294803619385
    5. ' ' → logprob: -7.551294803619385
    6. ')' → logprob: -7.551294803619385
    7. '       ' → logprob: -7.801294803619385
    8. '  ' → logprob: -9.176294326782227
    9. '<|end|>' → logprob: -9.176294326782227
    10. ' ' → logprob: -10.051294326782227

Token 285: ' fin' (ID: 2131)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fin' → logprob: -0.06320076435804367
    2. ' fin' → logprob: -2.8132007122039795
    3. 'fact' → logprob: -6.813200950622559
    4. ' fact' → logprob: -9.438200950622559
    5. '(fin' → logprob: -11.063200950622559
    6. 'f' → logprob: -11.688200950622559
    7. 'fim' → logprob: -11.813200950622559
    8. 'finite' → logprob: -13.250700950622559
    9. ' ' → logprob: -13.313200950622559
    10. ' fint' → logprob: -13.563200950622559

Token 286: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.5048530030981055e-06
    2. 'inv' → logprob: -14.250001907348633
    3. '```' → logprob: -15.500001907348633
    4. 'c' → logprob: -16.750001907348633
    5. 'в' → logprob: -16.750001907348633
    6. '_v' → logprob: -16.750001907348633
    7. '
' → logprob: -16.750001907348633
    8. 'ev' → logprob: -17.000001907348633
    9. 'iv' → logprob: -17.250001907348633
    10. 'vw' → logprob: -17.250001907348633

Token 287: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -5.080963092041202e-06
    2. 'list' → logprob: -13.625004768371582
    3. '[' → logprob: -13.875004768371582
    4. '[u' → logprob: -14.250004768371582
    5. '[_' → logprob: -14.250004768371582
    6. 'List' → logprob: -14.375004768371582
    7. '_LIST' → logprob: -14.750004768371582
    8. '```' → logprob: -16.1250057220459
    9. '[v' → logprob: -16.3750057220459
    10. '_lists' → logprob: -16.6250057220459

Token 288: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -1.1472419600977446e-06
    2. 'u' → logprob: -14.500000953674316
    3. '[' → logprob: -14.625000953674316
    4. '```' → logprob: -16.250001907348633
    5. '[n' → logprob: -17.000001907348633
    6. '(u' → logprob: -17.500001907348633
    7. '[
' → logprob: -18.000001907348633
    8. '[[' → logprob: -18.000001907348633
    9. ' [' → logprob: -18.375001907348633
    10. '   ' → logprob: -18.500001907348633

Token 289: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.8271294832229614
    2. '-v' → logprob: -0.8271294832229614
    3. ' -' → logprob: -2.077129364013672
    4. '-u' → logprob: -9.202129364013672
    5. '[v' → logprob: -13.577129364013672
    6. 'v' → logprob: -13.702129364013672
    7. '   ' → logprob: -14.577129364013672
    8. '-
' → logprob: -14.952129364013672
    9. '[-' → logprob: -15.702129364013672
    10. '-m' → logprob: -15.827129364013672

Token 290: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -3.7697225252486533e-06
    2. ' v' → logprob: -12.500003814697266
    3. '	v' → logprob: -18.500003814697266
    4. ')v' → logprob: -21.375003814697266
    5. 'в' → logprob: -22.250003814697266
    6. '   ' → logprob: -22.250003814697266
    7. '$v' → logprob: -23.000003814697266
    8. '[v' → logprob: -23.125003814697266
    9. '<|end|>' → logprob: -23.250003814697266
    10. 'vj' → logprob: -23.375003814697266

Token 291: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.001967412419617176
    2. ']%' → logprob: -6.251967430114746
    3. ' ]' → logprob: -10.501967430114746
    4. '%' → logprob: -12.001967430114746
    5. '])' → logprob: -13.376967430114746
    6. ')' → logprob: -13.376967430114746
    7. ']
' → logprob: -13.626967430114746
    8. '<|end|>' → logprob: -15.501967430114746
    9. '}' → logprob: -15.876967430114746
    10. '']' → logprob: -16.12696647644043

Token 292: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.30290964245796204
    2. ' %' → logprob: -2.0529096126556396
    3. ')' → logprob: -2.1779096126556396
    4. ')%' → logprob: -4.052909851074219
    5. ']' → logprob: -6.552909851074219
    6. ']%' → logprob: -7.302909851074219
    7. '<|end|>' → logprob: -9.302909851074219
    8. '%)' → logprob: -10.177909851074219
    9. ' )' → logprob: -11.052909851074219
    10. ' %)' → logprob: -11.552909851074219

Token 293: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0010330495424568653
    2. ' mod' → logprob: -6.876032829284668
    3. ' ' → logprob: -16.126033782958984
    4. '	mod' → logprob: -16.376033782958984
    5. '(mod' → logprob: -17.376033782958984
    6. ' ' → logprob: -17.626033782958984
    7. '```' → logprob: -18.251033782958984
    8. ' мод' → logprob: -18.751033782958984
    9. '
' → logprob: -18.876033782958984
    10. 'modal' → logprob: -19.001033782958984

Token 294: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 295: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5214424729347229
    2. '   ' → logprob: -1.1464424133300781
    3. '<|end|>' → logprob: -3.396442413330078
    4. 'except' → logprob: -4.021442413330078
    5. ' except' → logprob: -4.271442413330078
    6. '\n' → logprob: -5.396442413330078
    7. ':' → logprob: -5.521442413330078
    8. ':return' → logprob: -5.646442413330078
    9. ' ' → logprob: -6.021442413330078
    10. '
' → logprob: -6.271442413330078

Token 296: ' except' (ID: 6384)
  Prédit: 'except'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'except' (adapté à ' except') → logprob: -0.16119232773780823
    2. ' except' → logprob: -1.9111922979354858
    3. '   ' → logprob: -7.411192417144775
    4. '	except' → logprob: -8.161191940307617
    5. ')' → logprob: -10.161191940307617
    6. 'return' → logprob: -11.286191940307617
    7. ' ' → logprob: -11.536191940307617
    8. '<|end|>' → logprob: -12.536191940307617
    9. ' return' → logprob: -12.661191940307617
    10. '       ' → logprob: -13.286191940307617

Token 297: ' Index' (ID: 14580)
  Prédit: 'Index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Index' → logprob: -0.18026019632816315
    2. '(Index' → logprob: -1.930260181427002
    3. ' Index' → logprob: -3.930260181427002
    4. 'Zero' → logprob: -9.80526065826416
    5. '(' → logprob: -10.18026065826416
    6. 'Type' → logprob: -10.30526065826416
    7. 'Exception' → logprob: -10.68026065826416
    8. '(Type' → logprob: -11.18026065826416
    9. '(Exception' → logprob: -11.43026065826416
    10. 'Name' → logprob: -12.05526065826416

Token 298: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -1.9361264946837764e-07
    2. 'rror' → logprob: -16.5
    3. 'error' → logprob: -17.5
    4. 'Erro' → logprob: -18.75
    5. 'Er' → logprob: -20.25
    6. 'Index' → logprob: -20.625
    7. 'Erreur' → logprob: -20.625
    8. '
' → logprob: -21.0
    9. '	Error' → logprob: -21.125
    10. ' Error' → logprob: -21.125

Token 299: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.018753578886389732
    2. ':
' → logprob: -4.018753528594971
    3. '():' → logprob: -8.143754005432129
    4. ':return' → logprob: -9.018754005432129
    5. '   ' → logprob: -9.518754005432129
    6. ' :' → logprob: -9.893754005432129
    7. '):' → logprob: -11.018754005432129
    8. '():
' → logprob: -11.143754005432129
    9. '       ' → logprob: -11.393754005432129
    10. '[' → logprob: -12.143754005432129

Token 300: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04246966540813446
    2. 'return' → logprob: -3.6674697399139404
    3. '0' → logprob: -4.667469501495361
    4. ' return' → logprob: -5.667469501495361
    5. '   ' → logprob: -5.792469501495361
    6. '
' → logprob: -9.66746997833252
    7. '        
' → logprob: -10.04246997833252
    8. '    
' → logprob: -12.04246997833252
    9. '```' → logprob: -12.16746997833252
    10. ' ' → logprob: -12.41746997833252

Token 301: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0038786965887993574
    2. ' return' → logprob: -5.628878593444824
    3. '   ' → logprob: -8.378878593444824
    4. '0' → logprob: -10.003878593444824
    5. '
' → logprob: -13.878878593444824
    6. '#' (adapté à ' #') → logprob: -14.378878593444824
    7. 'raise' → logprob: -14.753878593444824
    8. '       ' → logprob: -14.878878593444824
    9. '	return' → logprob: -15.003878593444824
    10. 'print' → logprob: -15.253878593444824

Token 302: ' Pour' (ID: 13931)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.002226860262453556
    2. ' return' → logprob: -6.377226829528809
    3. '   ' → logprob: -8.252226829528809
    4. '#' → logprob: -8.627226829528809
    5. 'raise' → logprob: -9.752226829528809
    6. 'print' → logprob: -12.002226829528809
    7. 'pass' → logprob: -12.377226829528809
    8. '       ' → logprob: -12.377226829528809
    9. 'fact' → logprob: -12.627226829528809
    10. '0' → logprob: -13.127226829528809

Token 303: ' les' (ID: 1341)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.19136358797550201
    2. 'u' → logprob: -2.691363573074341
    3. '0' → logprob: -3.066363573074341
    4. ' return' → logprob: -3.566363573074341
    5. 'com' → logprob: -4.06636381149292
    6. 'n' → logprob: -5.94136381149292
    7. '#' → logprob: -6.06636381149292
    8. '1' → logprob: -6.44136381149292
    9. ' u' → logprob: -6.69136381149292
    10. '(u' → logprob: -6.81636381149292

Token 304: ' cas' (ID: 2108)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -1.054518461227417
    2. 'return' → logprob: -1.054518461227417
    3. '0' → logprob: -1.679518461227417
    4. 'n' → logprob: -3.804518461227417
    5. ' u' → logprob: -4.179518699645996
    6. 'com' → logprob: -4.304518699645996
    7. 'v' → logprob: -4.554518699645996
    8. 'val' → logprob: -4.554518699645996
    9. '(u' → logprob: -5.304518699645996
    10. ' return' → logprob: -5.304518699645996

Token 305: ' un' (ID: 537)
  Prédit: 'où'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'où' → logprob: -0.4634800851345062
    2. ' où' → logprob: -1.5884801149368286
    3. 'u' → logprob: -2.588479995727539
    4. ' where' → logprob: -2.963479995727539
    5. 'where' → logprob: -3.713479995727539
    6. 'n' → logprob: -5.463479995727539
    7. ' u' → logprob: -6.213479995727539
    8. 'd' → logprob: -6.338479995727539
    9. 'o' → logprob: -7.213479995727539
    10. '   ' → logprob: -7.463479995727539

Token 306: ' peu' (ID: 9235)
  Prédit: 'bounded'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bounded' → logprob: -1.939877986907959
    2. 'pe' → logprob: -2.439877986907959
    3. 'caught' → logprob: -2.439877986907959
    4. 'e' → logprob: -2.564877986907959
    5. 'def' → logprob: -2.814877986907959
    6. 'handled' → logprob: -2.939877986907959
    7. 'bound' → logprob: -2.939877986907959
    8. 'u' → logprob: -2.939877986907959
    9. 'reachable' → logprob: -2.939877986907959
    10. ' peu' → logprob: -3.064877986907959

Token 307: ' hors' (ID: 26087)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.3800259232521057
    2. 'part' → logprob: -2.630025863647461
    3. 'sp' → logprob: -3.130025863647461
    4. 'exception' → logprob: -3.130025863647461
    5. 'hors' → logprob: -3.630025863647461
    6. 'b' → logprob: -3.880025863647461
    7. 'border' → logprob: -4.130025863647461
    8. 't' → logprob: -4.380025863647461
    9. 'special' → logprob: -4.630025863647461
    10. 'margin' → logprob: -4.630025863647461

Token 308: '-l' (ID: 2887)
  Prédit: 'lim'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lim' → logprob: -0.058262523263692856
    2. 'borne' → logprob: -3.433262586593628
    3. 'born' → logprob: -5.308262348175049
    4. 'limits' → logprob: -5.308262348175049
    5. 'limit' → logprob: -6.308262348175049
    6. 'index' → logprob: -6.558262348175049
    7. 'norm' → logprob: -6.558262348175049
    8. ' limites' → logprob: -6.808262348175049
    9. 'bounds' → logprob: -6.933262348175049
    10. 'scope' → logprob: -7.183262348175049

Token 309: 'im' (ID: 321)
  Prédit: 'im'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'im' → logprob: -0.003366992808878422
    2. 'imité' → logprob: -7.128366947174072
    3. 'imit' → logprob: -7.753366947174072
    4. 'imits' → logprob: -7.753366947174072
    5. '#' → logprob: -8.37836742401123
    6. '```' → logprob: -8.62836742401123
    7. 'ims' → logprob: -9.12836742401123
    8. '
' → logprob: -9.19086742401123
    9. 'ím' → logprob: -9.56586742401123
    10. 'imt' → logprob: -9.62836742401123

Token 310: 'ite' (ID: 651)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -1.2096669673919678
    2. '       ' → logprob: -1.3346669673919678
    3. '   ' → logprob: -1.7096669673919678
    4. ':' → logprob: -1.8346669673919678
    5. '           ' → logprob: -3.2096669673919678
    6. ',' → logprob: -3.5846669673919678
    7. ' return' → logprob: -5.084667205810547
    8. '):
' → logprob: -5.334667205810547
    9. 'return' → logprob: -5.459667205810547
    10. ' :
' → logprob: -6.084667205810547

Token 311: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02666959911584854
    2. '   ' → logprob: -4.401669502258301
    3. ':' → logprob: -5.151669502258301
    4. ',' → logprob: -6.276669502258301
    5. ' return' → logprob: -6.276669502258301
    6. ':
' → logprob: -6.526669502258301
    7. '
' → logprob: -7.026669502258301
    8. 'return' → logprob: -7.151669502258301
    9. ':return' → logprob: -7.776669502258301
    10. '           ' → logprob: -7.901669502258301

Token 312: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05331612750887871
    2. ' return' → logprob: -3.303316116333008
    3. 'return' → logprob: -4.553316116333008
    4. '   ' → logprob: -5.428316116333008
    5. '
' → logprob: -9.803316116333008
    6. '        
' → logprob: -9.803316116333008
    7. '           ' → logprob: -10.053316116333008
    8. ',' → logprob: -10.678316116333008
    9. '    
' → logprob: -11.553316116333008
    10. ' if' → logprob: -12.553316116333008

Token 313: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0004622472042683512
    2. ' return' → logprob: -7.750462055206299
    3. '   ' → logprob: -11.000462532043457
    4. 'res' → logprob: -12.250462532043457
    5. 'ret' → logprob: -13.250462532043457
    6. 'temp' → logprob: -13.375462532043457
    7. 'result' → logprob: -13.625462532043457
    8. 'if' → logprob: -14.125462532043457
    9. '	return' → logprob: -14.125462532043457
    10. 'u' → logprob: -14.250462532043457

Token 314: ' (_' (ID: 11350)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.5327449440956116
    2. '(re' → logprob: -1.5327448844909668
    3. '(com' → logprob: -2.532744884490967
    4. '0' → logprob: -2.782744884490967
    5. '(f' → logprob: -4.157744884490967
    6. ' reduce' → logprob: -4.157744884490967
    7. '(' → logprob: -4.782744884490967
    8. '(_' → logprob: -5.657744884490967
    9. ' (' → logprob: -5.782744884490967
    10. '1' → logprob: -6.032744884490967

Token 315: 'fact' (ID: 53534)
  Prédit: 'fact'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.00041982904076576233
    2. 'com' → logprob: -9.125419616699219
    3. '_fact' → logprob: -9.625419616699219
    4. 'reduce' → logprob: -10.250419616699219
    5. 'factor' → logprob: -10.500419616699219
    6. ')' → logprob: -10.500419616699219
    7. 'f' → logprob: -11.000419616699219
    8. '(' → logprob: -11.125419616699219
    9. 'prod' → logprob: -11.250419616699219
    10. 'facts' → logprob: -11.375419616699219

Token 316: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.0006305903079919517
    2. 'u' → logprob: -7.3756303787231445
    3. '(' → logprob: -12.750630378723145
    4. ' (' → logprob: -15.250630378723145
    5. '(n' → logprob: -15.375630378723145
    6. '(
' → logprob: -15.875630378723145
    7. '
' → logprob: -16.00063133239746
    8. ')' → logprob: -16.37563133239746
    9. ' u' → logprob: -16.50063133239746
    10. ')(' → logprob: -17.00063133239746

Token 317: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012399908155202866
    2. ')*' → logprob: -6.751239776611328
    3. '   ' → logprob: -11.001239776611328
    4. ')
' → logprob: -11.001239776611328
    5. ' )' → logprob: -11.001239776611328
    6. '*' → logprob: -12.001239776611328
    7. '))' → logprob: -12.376239776611328
    8. '*)' → logprob: -13.001239776611328
    9. '()' → logprob: -13.501239776611328
    10. '```' → logprob: -13.751239776611328

Token 318: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.4745982885360718
    2. '*' → logprob: -0.9745982885360718
    3. '   ' → logprob: -8.224597930908203
    4. '*
' → logprob: -9.224597930908203
    5. ' *
' → logprob: -9.599597930908203
    6. ')' → logprob: -9.974597930908203
    7. '    ' → logprob: -11.474597930908203
    8. ' ' → logprob: -12.099597930908203
    9. '*)' → logprob: -12.224597930908203
    10. '
' → logprob: -12.599597930908203

Token 319: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.3441515564918518
    2. 'pow' → logprob: -1.344151496887207
    3. '_mod' → logprob: -4.219151496887207
    4. '(mod' → logprob: -5.094151496887207
    5. '(_' → logprob: -5.844151496887207
    6. '(pow' → logprob: -5.969151496887207
    7. '_pow' → logprob: -6.219151496887207
    8. ' mod' → logprob: -6.844151496887207
    9. ' pow' → logprob: -7.344151496887207
    10. 'inv' → logprob: -9.594151496887207

Token 320: 'inv' (ID: 31086)
  Prédit: 'inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -1.700132997939363e-05
    2. 'pow' → logprob: -11.250017166137695
    3. '(inv' → logprob: -12.875017166137695
    4. ' inv' → logprob: -14.250017166137695
    5. 'mul' → logprob: -14.625017166137695
    6. '(' → logprob: -16.125017166137695
    7. 'mod' → logprob: -16.125017166137695
    8. '
' → logprob: -18.250017166137695
    9. ')' → logprob: -18.500017166137695
    10. '   ' → logprob: -19.000017166137695

Token 321: '(_' (ID: 4963)
  Prédit: '(_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(_' → logprob: -0.4394184648990631
    2. '(f' → logprob: -1.1894184350967407
    3. '((_' → logprob: -3.0644185543060303
    4. '((' → logprob: -5.939418315887451
    5. '_fact' → logprob: -7.439418315887451
    6. 'fact' → logprob: -7.564418315887451
    7. '(' → logprob: -8.06441879272461
    8. '(re' → logprob: -9.18941879272461
    9. '(fin' → logprob: -9.68941879272461
    10. '_factor' → logprob: -9.93941879272461

Token 322: 'fact' (ID: 53534)
  Prédit: 'fact'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.3583891689777374
    2. '_fact' → logprob: -1.358389139175415
    3. '(f' → logprob: -3.483389139175415
    4. '(_' → logprob: -4.608389377593994
    5. 'com' → logprob: -6.483389377593994
    6. '(com' → logprob: -7.733389377593994
    7. '_f' → logprob: -8.233388900756836
    8. '(v' → logprob: -8.233388900756836
    9. '((' → logprob: -8.858388900756836
    10. ' fact' → logprob: -8.983388900756836

Token 323: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.00019734179659280926
    2. 'v' → logprob: -8.750197410583496
    3. '(' → logprob: -10.500197410583496
    4. '(u' → logprob: -12.625197410583496
    5. ')(' → logprob: -12.750197410583496
    6. ' (' → logprob: -13.000197410583496
    7. ')v' → logprob: -13.875197410583496
    8. '((' → logprob: -14.250197410583496
    9. '(
' → logprob: -14.500197410583496
    10. ')' → logprob: -14.750197410583496

Token 324: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.026000676676630974
    2. '))' → logprob: -3.901000738143921
    3. '())' → logprob: -5.276000499725342
    4. ')))' → logprob: -9.0260009765625
    5. '()))' → logprob: -9.4010009765625
    6. '()' → logprob: -9.9010009765625
    7. '(' → logprob: -10.1510009765625
    8. ' )' → logprob: -11.5260009765625
    9. ')
' → logprob: -11.9010009765625
    10. '   ' → logprob: -12.4010009765625

Token 325: ' %' (ID: 1851)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -1.038149118423462
    2. ')' → logprob: -1.288149118423462
    3. ' %' → logprob: -1.413149118423462
    4. '%' → logprob: -2.163149118423462
    5. '*' → logprob: -4.788148880004883
    6. '   ' → logprob: -6.538148880004883
    7. ')%' → logprob: -6.663148880004883
    8. ' )' → logprob: -8.163148880004883
    9. ' ' → logprob: -8.538148880004883
    10. '    ' → logprob: -10.038148880004883

Token 326: ' mod' (ID: 1812)
  Prédit: '_fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fact' → logprob: -0.5543327331542969
    2. 'mod' → logprob: -1.4293327331542969
    3. '(_' → logprob: -2.304332733154297
    4. '_mod' → logprob: -2.804332733154297
    5. 'fact' → logprob: -4.929332733154297
    6. '(mod' → logprob: -5.554332733154297
    7. ' mod' → logprob: -5.679332733154297
    8. '_f' → logprob: -5.929332733154297
    9. '_fac' → logprob: -5.929332733154297
    10. '_' → logprob: -6.304332733154297

Token 327: ')' (ID: 8)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.485403835773468
    2. '*' → logprob: -0.985403835773468
    3. ')' → logprob: -4.610404014587402
    4. '   ' → logprob: -6.985404014587402
    5. ')*' → logprob: -8.235404014587402
    6. '       ' → logprob: -10.235404014587402
    7. ' ' → logprob: -10.485404014587402
    8. '    ' → logprob: -11.235404014587402
    9. '        ' → logprob: -11.360404014587402
    10. '  ' → logprob: -11.485404014587402

Token 328: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.03425515443086624
    2. '*' → logprob: -3.409255266189575
    3. '   ' → logprob: -7.784255027770996
    4. ' ' → logprob: -9.659255027770996
    5. '	' → logprob: -10.409255027770996
    6. '%' → logprob: -10.534255027770996
    7. ' ' → logprob: -10.909255027770996
    8. '    ' → logprob: -11.284255027770996
    9. ' %' → logprob: -11.659255027770996
    10. '       ' → logprob: -11.909255027770996

Token 329: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.00081963452976197
    2. ' mod' → logprob: -7.250819683074951
    3. '(mod' → logprob: -9.125819206237793
    4. 'pow' → logprob: -14.500819206237793
    5. '	mod' → logprob: -15.500819206237793
    6. '_mod' → logprob: -16.87582015991211
    7. '(' → logprob: -17.00082015991211
    8. ' (' → logprob: -17.87582015991211
    9. '
' → logprob: -18.00082015991211
    10. ' ' → logprob: -18.50082015991211

Token 330: 'inv' (ID: 31086)
  Prédit: 'inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -7.183501293184236e-05
    2. 'pow' → logprob: -10.00007152557373
    3. 'mul' → logprob: -11.00007152557373
    4. ' inv' → logprob: -12.37507152557373
    5. 'in' → logprob: -13.50007152557373
    6. '_inv' → logprob: -13.62507152557373
    7. '(inv' → logprob: -14.00007152557373
    8. ')' → logprob: -14.75007152557373
    9. '*' → logprob: -15.00007152557373
    10. '%' → logprob: -15.12507152557373

Token 331: '(_' (ID: 4963)
  Prédit: '(_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(_' → logprob: -0.00016098834748845547
    2. '(' → logprob: -9.125161170959473
    3. '_fact' → logprob: -10.500161170959473
    4. '((_' → logprob: -11.125161170959473
    5. '_' → logprob: -12.500161170959473
    6. '_f' → logprob: -13.625161170959473
    7. '(_)' → logprob: -13.875161170959473
    8. '(
' → logprob: -14.000161170959473
    9. '_factor' → logprob: -14.250161170959473
    10. ')(_' → logprob: -14.375161170959473

Token 332: 'fact' (ID: 53534)
  Prédit: 'fact'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.00523612555116415
    2. '_fact' → logprob: -5.2552361488342285
    3. ' fact' → logprob: -13.13023567199707
    4. 'Fact' → logprob: -16.13023567199707
    5. 'f' → logprob: -16.25523567199707
    6. 'fac' → logprob: -17.38023567199707
    7. 'fait' → logprob: -17.50523567199707
    8. '.fact' → logprob: -17.75523567199707
    9. '(f' → logprob: -18.13023567199707
    10. '_f' → logprob: -18.13023567199707

Token 333: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.00031019834568724036
    2. 'u' → logprob: -8.125309944152832
    3. '(' → logprob: -11.250309944152832
    4. ')' → logprob: -15.250309944152832
    5. '[u' → logprob: -15.500309944152832
    6. ' (' → logprob: -15.875309944152832
    7. '(
' → logprob: -16.00031089782715
    8. ' u' → logprob: -16.12531089782715
    9. ')(' → logprob: -16.12531089782715
    10. '
' → logprob: -16.25031089782715

Token 334: ' -' (ID: 533)
  Prédit: '-v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-v' → logprob: -0.5281912088394165
    2. '-' → logprob: -1.2781912088394165
    3. ' -' → logprob: -2.028191089630127
    4. 'v' → logprob: -8.528191566467285
    5. '(v' → logprob: -11.403191566467285
    6. '−' → logprob: -12.653191566467285
    7. ' v' → logprob: -14.153191566467285
    8. '-
' → logprob: -14.278191566467285
    9. '–' → logprob: -14.778191566467285
    10. '   ' → logprob: -15.278191566467285

Token 335: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -7.226628895296017e-06
    2. ' v' → logprob: -11.875007629394531
    3. '(v' → logprob: -15.250007629394531
    4. ')v' → logprob: -17.50000762939453
    5. '	v' → logprob: -18.50000762939453
    6. ')' → logprob: -19.12500762939453
    7. '
' → logprob: -19.25000762939453
    8. '-v' → logprob: -19.62500762939453
    9. '[v' → logprob: -20.50000762939453
    10. '   ' → logprob: -21.25000762939453

Token 336: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.009532596915960312
    2. '(v' → logprob: -5.134532451629639
    3. 'v' → logprob: -6.259532451629639
    4. ')' → logprob: -6.634532451629639
    5. '))
' → logprob: -8.759532928466797
    6. ')))' → logprob: -9.384532928466797
    7. '(u' → logprob: -9.884532928466797
    8. '(' → logprob: -10.259532928466797
    9. ' ))' → logprob: -11.509532928466797
    10. ')v' → logprob: -11.759532928466797

Token 337: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.46601927280426025
    2. ' %' → logprob: -1.4660192728042603
    3. ')' → logprob: -1.9660192728042603
    4. ')%' → logprob: -6.966019153594971
    5. '()' → logprob: -7.466019153594971
    6. '()%' → logprob: -10.091019630432129
    7. '   ' → logprob: -10.216019630432129
    8. '%)' → logprob: -11.341019630432129
    9. ' )' → logprob: -11.591019630432129
    10. '	' → logprob: -11.966019630432129

Token 338: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.012516834773123264
    2. ' mod' → logprob: -4.387516975402832
    3. '(mod' → logprob: -12.637516975402832
    4. '
' → logprob: -13.137516975402832
    5. '	mod' → logprob: -14.387516975402832
    6. ' ' → logprob: -14.762516975402832
    7. ' ' → logprob: -15.012516975402832
    8. '```' → logprob: -15.512516975402832
    9. 'm' → logprob: -16.512516021728516
    10. 'modal' → logprob: -16.575016021728516

Token 339: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 340: '#' (ID: 2)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.32182714343070984
    2. ':' → logprob: -1.6968271732330322
    3. '(' → logprob: -3.0718271732330322
    4. '(
' → logprob: -4.446826934814453
    5. 'def' → logprob: -4.946826934814453
    6. '\n' → logprob: -5.571826934814453
    7. 'n' → logprob: -5.696826934814453
    8. '
' → logprob: -5.821826934814453
    9. '(n' → logprob: -5.821826934814453
    10. '):' → logprob: -6.196826934814453

Token 341: ' Calcul' (ID: 57243)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.0366014242172241
    2. 'res' → logprob: -1.1616014242172241
    3. 'result' → logprob: -2.1616015434265137
    4. 'def' → logprob: -2.4116015434265137
    5. 'for' → logprob: -2.6616015434265137
    6. 'ans' → logprob: -3.0366015434265137
    7. 'answer' → logprob: -5.286601543426514
    8. 'total' → logprob: -6.661601543426514
    9. '#' → logprob: -7.661601543426514
    10. 'results' → logprob: -7.786601543426514

Token 342: ' de' (ID: 334)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.2147662192583084
    2. 'res' → logprob: -2.839766263961792
    3. 'total' → logprob: -3.589766263961792
    4. 'for' → logprob: -3.714766263961792
    5. 'dp' → logprob: -3.964766263961792
    6. 'sum' → logprob: -4.214766025543213
    7. 's' → logprob: -4.214766025543213
    8. 'ans' → logprob: -4.714766025543213
    9. 'def' → logprob: -5.589766025543213
    10. ' result' → logprob: -5.839766025543213

Token 343: ' a' (ID: 261)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.6493779420852661
    2. 'res' → logprob: -1.2743779420852661
    3. 'ans' → logprob: -2.3993778228759766
    4. 'pow' → logprob: -3.3993778228759766
    5. 'total' → logprob: -3.7743778228759766
    6. 'answer' → logprob: -4.149377822875977
    7. 'dp' → logprob: -4.899377822875977
    8. 'comb' → logprob: -4.899377822875977
    9. 'ways' → logprob: -5.774377822875977
    10. '(ans' → logprob: -6.149377822875977

Token 344: ' avec' (ID: 3937)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09027750790119171
    2. ',' → logprob: -2.8402774333953857
    3. '=' → logprob: -3.8402774333953857
    4. '_' → logprob: -6.215277671813965
    5. 's' → logprob: -7.090277671813965
    6. 'n' → logprob: -7.840277671813965
    7. '_n' → logprob: -8.215277671813965
    8. '_i' → logprob: -8.465277671813965
    9. ' ' → logprob: -8.590277671813965
    10. '[' → logprob: -8.590277671813965

Token 345: ' rédu' (ID: 42105)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.4081274271011353
    2. 'com' → logprob: -1.6581274271011353
    3. 'chain' → logprob: -1.9081274271011353
    4. 'n' → logprob: -2.6581273078918457
    5. '0' → logprob: -2.7831273078918457
    6. 'sum' → logprob: -2.7831273078918457
    7. '_' → logprob: -3.0331273078918457
    8. 'pow' → logprob: -3.2831273078918457
    9. 'm' → logprob: -3.5331273078918457
    10. 'def' → logprob: -4.408127307891846

Token 346: 'ctions' (ID: 2620)
  Prédit: 'ce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ce' → logprob: -0.003894257126376033
    2. 'duce' → logprob: -6.253894329071045
    3. 'uce' → logprob: -6.503894329071045
    4. 'reduce' → logprob: -8.628893852233887
    5. 'c' → logprob: -9.503893852233887
    6. 'e' → logprob: -9.878893852233887
    7. 'ced' → logprob: -10.378893852233887
    8. 'ces' → logprob: -10.503893852233887
    9. 'ct' → logprob: -10.878893852233887
    10. 'ceed' → logprob: -11.128893852233887

Token 347: ' sophist' (ID: 96686)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.10460778325796127
    2. '=' → logprob: -3.7296078205108643
    3. ' =' → logprob: -3.7296078205108643
    4. '(' → logprob: -3.8546078205108643
    5. '_' → logprob: -4.729607582092285
    6. ' a' → logprob: -4.854607582092285
    7. '_a' → logprob: -5.604607582092285
    8. '(
' → logprob: -6.229607582092285
    9. 's' → logprob: -6.229607582092285
    10. '(a' → logprob: -6.854607582092285

Token 348: 'iqu' (ID: 8966)
  Prédit: 'ce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ce' → logprob: -0.39077600836753845
    2. 'ced' → logprob: -2.3907759189605713
    3. 'duce' → logprob: -2.3907759189605713
    4. 'ct' → logprob: -2.5157759189605713
    5. ' =' → logprob: -4.51577615737915
    6. 'lt' → logprob: -4.64077615737915
    7. 'ction' → logprob: -4.76577615737915
    8. 'de' → logprob: -5.64077615737915
    9. 'uce' → logprob: -5.64077615737915
    10. 'ctions' → logprob: -5.76577615737915

Token 349: 'ées' (ID: 5161)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.13813138008117676
    2. 'e' → logprob: -3.0131313800811768
    3. 'tion' → logprob: -3.5131313800811768
    4. 'te' → logprob: -3.7631313800811768
    5. 'on' → logprob: -5.388131141662598
    6. 'ted' → logprob: -5.888131141662598
    7. ')' → logprob: -6.013131141662598
    8. 'ce' → logprob: -6.013131141662598
    9. 're' → logprob: -6.138131141662598
    10. 'ent' → logprob: -6.263131141662598

Token 350: ' et' (ID: 859)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00510556111112237
    2. '=' → logprob: -5.755105495452881
    3. ' =' → logprob: -7.005105495452881
    4. '(
' → logprob: -8.255105972290039
    5. '(' → logprob: -8.880105972290039
    6. 'ans' → logprob: -9.130105972290039
    7. 'result' → logprob: -9.130105972290039
    8. 'def' → logprob: -9.255105972290039
    9. ')' → logprob: -9.630105972290039
    10. ' a' → logprob: -9.755105972290039

Token 351: ' une' (ID: 2463)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.038537248969078064
    2. 'chain' → logprob: -4.28853702545166
    3. 'lambda' → logprob: -4.66353702545166
    4. 'mul' → logprob: -5.41353702545166
    5. 'acc' → logprob: -5.53853702545166
    6. 'com' → logprob: -5.66353702545166
    7. 'pow' → logprob: -7.03853702545166
    8. 'combine' → logprob: -7.78853702545166
    9. ' reduce' → logprob: -8.66353702545166
    10. 'range' → logprob: -8.91353702545166

Token 352: ' boucle' (ID: 174211)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.31992068886756897
    2. 'def' → logprob: -2.444920778274536
    3. 'chain' → logprob: -2.944920778274536
    4. 'for' → logprob: -3.819920778274536
    5. 'lambda' → logprob: -3.944920778274536
    6. 'range' → logprob: -4.069920539855957
    7. 'comb' → logprob: -4.319920539855957
    8. '=' → logprob: -4.444920539855957
    9. '
' → logprob: -4.694920539855957
    10. ')' → logprob: -4.694920539855957

Token 353: ' sur' (ID: 1512)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.01291655469685793
    2. ' a' → logprob: -4.637916564941406
    3. '
' → logprob: -6.262916564941406
    4. '=' → logprob: -7.887916564941406
    5. ' =' → logprob: -7.887916564941406
    6. 's' → logprob: -8.387916564941406
    7. ' 
' → logprob: -9.887916564941406
    8. 'for' → logprob: -10.012916564941406
    9. '```' → logprob: -10.137916564941406
    10. ' for' → logprob: -11.012916564941406

Token 354: ' un' (ID: 537)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4106871783733368
    2. 'range' → logprob: -1.1606872081756592
    3. 'm' → logprob: -5.03568696975708
    4. '_' → logprob: -5.03568696975708
    5. 'k' → logprob: -5.66068696975708
    6. 'j' → logprob: -6.53568696975708
    7. 'r' → logprob: -6.53568696975708
    8. '_i' → logprob: -6.78568696975708
    9. '_range' → logprob: -7.28568696975708
    10. 'chain' → logprob: -7.53568696975708

Token 355: ' génér' (ID: 18939)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1483300924301147
    2. 'i' → logprob: -1.3983300924301147
    3. '_' → logprob: -1.5233300924301147
    4. 'range' → logprob: -2.0233302116394043
    5. ' for' → logprob: -4.148330211639404
    6. ' range' → logprob: -4.398330211639404
    7. '_=' → logprob: -4.648330211639404
    8. 'r' → logprob: -4.773330211639404
    9. ' _' → logprob: -4.898330211639404
    10. ' i' → logprob: -5.148330211639404

Token 356: 'ateur' (ID: 12477)
  Prédit: 'ator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ator' → logprob: -0.6823270320892334
    2. 'range' → logprob: -1.8073270320892334
    3. 'r' → logprob: -1.9323270320892334
    4. 'ate' → logprob: -2.6823270320892334
    5. 'ateur' → logprob: -3.4323270320892334
    6. 'for' → logprob: -3.8073270320892334
    7. 'def' → logprob: -4.1823272705078125
    8. 'rate' → logprob: -4.1823272705078125
    9. 'tor' → logprob: -4.3073272705078125
    10. 'e' → logprob: -5.9323272705078125

Token 357: ' filtr' (ID: 71370)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.001604248071089387
    2. '
' → logprob: -7.501604080200195
    3. ' =' → logprob: -8.626604080200195
    4. '(
' → logprob: -8.626604080200195
    5. '=' → logprob: -8.751604080200195
    6. ' a' → logprob: -9.251604080200195
    7. '```' → logprob: -9.251604080200195
    8. 'result' → logprob: -9.751604080200195
    9. '(' → logprob: -10.001604080200195
    10. 'def' → logprob: -10.626604080200195

Token 358: 'é' (ID: 377)
  Prédit: 'ator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ator' → logprob: -0.5396650433540344
    2. 'a' → logprob: -1.7896649837493896
    3. 'ate' → logprob: -2.2896649837493896
    4. 'for' → logprob: -3.2896649837493896
    5. 'tor' → logprob: -3.7896649837493896
    6. 'def' → logprob: -3.7896649837493896
    7. 'er' → logprob: -4.289665222167969
    8. 'e' → logprob: -4.789665222167969
    9. 'ated' → logprob: -4.914665222167969
    10. 'r' → logprob: -4.914665222167969

Token 359: '
' (ID: 198)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0020445059053599834
    2. '
' → logprob: -6.627044677734375
    3. ' a' → logprob: -8.252044677734375
    4. 'for' → logprob: -10.002044677734375
    5. '  
' → logprob: -10.002044677734375
    6. ' =' → logprob: -10.127044677734375
    7. '=' → logprob: -10.127044677734375
    8. '(
' → logprob: -10.252044677734375
    9. 'result' → logprob: -10.252044677734375
    10. 's' → logprob: -10.752044677734375

Token 360: 'def' (ID: 1314)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0011099707335233688
    2. ' a' → logprob: -7.001110076904297
    3. 'result' → logprob: -9.126110076904297
    4. '
' → logprob: -10.876110076904297
    5. ' 
' → logprob: -11.126110076904297
    6. 'res' → logprob: -11.251110076904297
    7. 'ans' → logprob: -11.501110076904297
    8. 'def' → logprob: -11.751110076904297
    9. 's' → logprob: -12.001110076904297
    10. 'total' → logprob: -12.626110076904297

Token 361: ' madd' (ID: 84576)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'solve' → logprob: -1.033506155014038
    2. 'a' → logprob: -1.408506155014038
    3. 'calc' → logprob: -2.158506155014038
    4. 'calculate' → logprob: -2.533506155014038
    5. 'compute' → logprob: -2.783506155014038
    6. 'main' → logprob: -3.283506155014038
    7. ' solve' → logprob: -3.533506155014038
    8. ' calc' → logprob: -3.908506155014038
    9. ' main' → logprob: -4.283506393432617
    10. ' calculate' → logprob: -5.033506393432617

Token 362: '(x' (ID: 4061)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0008515591034665704
    2. '(' → logprob: -7.125851631164551
    3. '(x' → logprob: -10.50085163116455
    4. ' (' → logprob: -11.25085163116455
    5. '(*' → logprob: -12.87585163116455
    6. '(
' → logprob: -13.62585163116455
    7. '(s' → logprob: -14.12585163116455
    8. 'a' → logprob: -14.62585163116455
    9. '(i' → logprob: -14.75085163116455
    10. '(u' → logprob: -15.75085163116455

Token 363: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001801801408873871
    2. ',y' → logprob: -9.5001802444458
    3. ',x' → logprob: -9.7501802444458
    4. ',a' → logprob: -10.7501802444458
    5. ' ,' → logprob: -10.8751802444458
    6. ',k' → logprob: -13.3751802444458
    7. ',b' → logprob: -13.6251802444458
    8. ',
' → logprob: -13.7501802444458
    9. '   ' → logprob: -14.6251802444458
    10. ',n' → logprob: -15.2501802444458

Token 364: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.08906280249357224
    2. ' y' → logprob: -2.4640626907348633
    3. 'a' → logprob: -9.589062690734863
    4. 'v' → logprob: -11.839062690734863
    5. '   ' → logprob: -11.839062690734863
    6. ' ' → logprob: -12.089062690734863
    7. '
' → logprob: -12.089062690734863
    8. 'val' → logprob: -12.214062690734863
    9. 'acc' → logprob: -12.214062690734863
    10. '    ' → logprob: -12.839062690734863

Token 365: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02331303060054779
    2. '):
' → logprob: -3.773313045501709
    3. '):
' → logprob: -10.64831256866455
    4. ' ):' → logprob: -10.77331256866455
    5. ')' → logprob: -11.52331256866455
    6. ',' → logprob: -11.89831256866455
    7. ':' → logprob: -12.89831256866455
    8. '   ' → logprob: -13.39831256866455
    9. '=' → logprob: -13.89831256866455
    10. '):

' → logprob: -14.64831256866455

Token 366: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.03841496258974075
    2. '   ' → logprob: -3.41341495513916
    3. 'return' → logprob: -6.16341495513916
    4. ':return' → logprob: -7.03841495513916
    5. '<|end|>' → logprob: -7.41341495513916
    6. '	return' → logprob: -7.91341495513916
    7. ' 
' → logprob: -8.41341495513916
    8. ' x' → logprob: -8.53841495513916
    9. ':
' → logprob: -8.91341495513916
    10. ' ' → logprob: -9.28841495513916

Token 367: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.01416750717908144
    2. ' (' → logprob: -4.264167308807373
    3. '   ' → logprob: -12.639167785644531
    4. '(y' → logprob: -15.514167785644531
    5. ' ' → logprob: -15.639167785644531
    6. '(' → logprob: -16.01416778564453
    7. '
' → logprob: -16.13916778564453
    8. '(a' → logprob: -16.63916778564453
    9. '((' → logprob: -17.38916778564453
    10. '  ' → logprob: -17.63916778564453

Token 368: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.004143457394093275
    2. '(x' → logprob: -5.504143238067627
    3. ' x' → logprob: -9.754143714904785
    4. ' (' → logprob: -12.254143714904785
    5. '(' → logprob: -14.254143714904785
    6. '
' → logprob: -14.879143714904785
    7. '	x' → logprob: -15.129143714904785
    8. '   ' → logprob: -15.254143714904785
    9. '{x' → logprob: -15.879143714904785
    10. '[x' → logprob: -16.25414276123047

Token 369: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1644299179315567
    2. ' +' → logprob: -1.9144299030303955
    3. '+y' → logprob: -5.539430141448975
    4. '+x' → logprob: -8.289429664611816
    5. '+
' → logprob: -12.039429664611816
    6. '+m' → logprob: -12.789429664611816
    7. 'y' → logprob: -13.539429664611816
    8. ' y' → logprob: -13.789429664611816
    9. ' +
' → logprob: -14.414429664611816
    10. ' ' → logprob: -14.539429664611816

Token 370: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.04858759790658951
    2. ' y' → logprob: -3.0485875606536865
    3. '	y' → logprob: -16.548587799072266
    4. ' ' → logprob: -16.673587799072266
    5. '   ' → logprob: -17.548587799072266
    6. '(y' → logprob: -18.798587799072266
    7. '
' → logprob: -19.548587799072266
    8. '    ' → logprob: -19.673587799072266
    9. '  ' → logprob: -19.673587799072266
    10. 'x' → logprob: -19.923587799072266

Token 371: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5213274309644476e-05
    2. ')%' → logprob: -11.625015258789062
    3. ' )' → logprob: -12.000015258789062
    4. '%' → logprob: -17.625015258789062
    5. ')
' → logprob: -17.875015258789062
    6. '）' → logprob: -19.000015258789062
    7. '}' → logprob: -19.750015258789062
    8. '   ' → logprob: -20.000015258789062
    9. ')

' → logprob: -20.625015258789062
    10. '),' → logprob: -21.250015258789062

Token 372: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.5759474635124207
    2. '%' → logprob: -0.8259474635124207
    3. ')' → logprob: -11.950947761535645
    4. '
' → logprob: -14.825947761535645
    5. ')%' → logprob: -14.825947761535645
    6. '%x' → logprob: -15.575947761535645
    7. '%n' → logprob: -15.825947761535645
    8. ' ' → logprob: -15.825947761535645
    9. '%c' → logprob: -16.200946807861328
    10. '%m' → logprob: -16.825946807861328

Token 373: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -2.4987974029500037e-05
    2. ' mod' → logprob: -10.625024795532227
    3. '998' → logprob: -14.500024795532227
    4. '(mod' → logprob: -16.875024795532227
    5. '999' → logprob: -19.125024795532227
    6. '	mod' → logprob: -19.125024795532227
    7. ' ' → logprob: -20.750024795532227
    8. 'moder' → logprob: -21.500024795532227
    9. ' мод' → logprob: -21.625024795532227
    10. 'MOD' → logprob: -21.625024795532227

Token 374: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 375: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2115868330001831
    2. 'res' → logprob: -2.7115869522094727
    3. 'result' → logprob: -2.9615869522094727
    4. ')' → logprob: -3.8365869522094727
    5. 'a' → logprob: -3.8365869522094727
    6. 'x' → logprob: -5.461586952209473
    7. 'ans' → logprob: -5.836586952209473
    8. 'dp' → logprob: -6.086586952209473
    9. 'i' → logprob: -6.211586952209473
    10. 'f' → logprob: -6.211586952209473

Token 376: ' mak' (ID: 1902)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.24730055034160614
    2. 'main' → logprob: -2.622300624847412
    3. 'mul' → logprob: -2.872300624847412
    4. 'solve' → logprob: -3.122300624847412
    5. 'mp' → logprob: -4.122300624847412
    6. 'mm' → logprob: -4.247300624847412
    7. 'prod' → logprob: -5.622300624847412
    8. 'mod' → logprob: -6.247300624847412
    9. 'add' → logprob: -6.372300624847412
    10. 'mult' → logprob: -6.622300624847412

Token 377: 'ese' (ID: 1220)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0002712297427933663
    2. 'es' → logprob: -9.25027084350586
    3. 'a' → logprob: -10.37527084350586
    4. 'er' → logprob: -10.62527084350586
    5. 's' → logprob: -10.87527084350586
    6. 'o' → logprob: -11.00027084350586
    7. 'u' → logprob: -11.75027084350586
    8. 'em' → logprob: -11.87527084350586
    9. 'е' → logprob: -12.00027084350586
    10. 'ed' → logprob: -12.00027084350586

Token 378: 'q' (ID: 80)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.6461714506149292
    2. 'q' → logprob: -0.7711714506149292
    3. 'quence' → logprob: -5.146171569824219
    4. 'lf' → logprob: -5.521171569824219
    5. 'l' → logprob: -6.646171569824219
    6. 'r' → logprob: -7.271171569824219
    7. 'ts' → logprob: -7.271171569824219
    8. 'qu' → logprob: -8.271171569824219
    9. 'g' → logprob: -9.021171569824219
    10. 'c' → logprob: -9.021171569824219

Token 379: '():
' (ID: 8595)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.12204178422689438
    2. '():' → logprob: -2.622041702270508
    3. '(' → logprob: -3.747041702270508
    4. '(k' → logprob: -4.872041702270508
    5. '(x' → logprob: -5.622041702270508
    6. '(l' → logprob: -6.497041702270508
    7. '(i' → logprob: -6.872041702270508
    8. '(size' → logprob: -7.372041702270508
    9. '(s' → logprob: -7.497041702270508
    10. '(start' → logprob: -7.622041702270508

Token 380: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01270117238163948
    2. ' for' → logprob: -4.387701034545898
    3. ' i' → logprob: -9.137701034545898
    4. 'for' → logprob: -9.637701034545898
    5. ' yield' → logprob: -11.887701034545898
    6. 'i' → logprob: -13.012701034545898
    7. '    
' → logprob: -13.137701034545898
    8. ' n' → logprob: -13.512701034545898
    9. '   ' → logprob: -13.637701034545898
    10. 'n' → logprob: -13.762701034545898

Token 381: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.12971706688404083
    2. 'i' → logprob: -2.5047171115875244
    3. 'yield' → logprob: -3.7547171115875244
    4. '   ' → logprob: -4.629716873168945
    5. ' for' → logprob: -5.629716873168945
    6. 'return' → logprob: -6.629716873168945
    7. 'x' → logprob: -7.379716873168945
    8. ' yield' → logprob: -8.129716873168945
    9. ' i' → logprob: -8.379716873168945
    10. 'a' → logprob: -8.754716873168945

Token 382: ' x' (ID: 1215)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.20203202962875366
    2. 'k' → logprob: -2.3270320892333984
    3. 'j' → logprob: -3.2020320892333984
    4. 'x' → logprob: -4.077032089233398
    5. 'r' → logprob: -5.202032089233398
    6. 'd' → logprob: -5.452032089233398
    7. 's' → logprob: -6.202032089233398
    8. 'b' → logprob: -6.327032089233398
    9. 'z' → logprob: -6.327032089233398
    10. 'a' → logprob: -6.452032089233398

Token 383: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2018665373325348
    2. 'in' → logprob: -1.7018665075302124
    3. 'n' → logprob: -8.451866149902344
    4. '   ' → logprob: -10.326866149902344
    5. 'range' → logprob: -10.451866149902344
    6. 'In' → logprob: -10.576866149902344
    7. ',' → logprob: -10.701866149902344
    8. '  ' → logprob: -10.951866149902344
    9. ' ' → logprob: -11.076866149902344
    10. '	in' → logprob: -11.576866149902344

Token 384: ' filter' (ID: 6690)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.014688141644001007
    2. ' range' → logprob: -4.514688014984131
    3. 'chain' → logprob: -5.639688014984131
    4. ' chain' → logprob: -10.764688491821289
    5. 'repeat' → logprob: -11.139688491821289
    6. 'filter' → logprob: -11.514688491821289
    7. 're' → logprob: -11.889688491821289
    8. '(range' → logprob: -11.889688491821289
    9. 'm' → logprob: -12.514688491821289
    10. 'count' → logprob: -12.639688491821289

Token 385: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.002605387009680271
    2. '(None' → logprob: -6.377605438232422
    3. 'lambda' → logprob: -7.127605438232422
    4. '(' → logprob: -9.627605438232422
    5. 'None' → logprob: -10.752605438232422
    6. '(bool' → logprob: -12.252605438232422
    7. '(range' → logprob: -13.377605438232422
    8. '(
' → logprob: -13.502605438232422
    9. 'bool' → logprob: -13.502605438232422
    10. '(False' → logprob: -14.377605438232422

Token 386: ' q' (ID: 2335)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.7455971240997314
    2. 'x' → logprob: -1.6205971240997314
    3. 'lambda' → logprob: -1.6205971240997314
    4. ' None' → logprob: -3.2455971240997314
    5. ' x' → logprob: -3.3705971240997314
    6. '_:' → logprob: -4.495596885681152
    7. '(lambda' → logprob: -4.620596885681152
    8. ' lambda' → logprob: -4.995596885681152
    9. 'i' → logprob: -5.120596885681152
    10. 'y' → logprob: -5.870596885681152

Token 387: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004544400610029697
    2. ' :' → logprob: -6.004544258117676
    3. ':q' → logprob: -6.254544258117676
    4. ':
' → logprob: -9.754544258117676
    5. 'q' → logprob: -10.004544258117676
    6. ' q' → logprob: -11.004544258117676
    7. '=' → logprob: -11.754544258117676
    8. '=q' → logprob: -12.379544258117676
    9. ':x' → logprob: -12.879544258117676
    10. '(q' → logprob: -13.254544258117676

Token 388: ' (' (ID: 350)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.06362681835889816
    2. ' q' → logprob: -2.813626766204834
    3. '0' → logprob: -6.938626766204834
    4. '(q' → logprob: -8.313627243041992
    5. 'x' → logprob: -8.813627243041992
    6. ' ' → logprob: -9.688627243041992
    7. 'm' → logprob: -9.938627243041992
    8. '(' → logprob: -10.063627243041992
    9. 'n' → logprob: -10.313627243041992
    10. ' (' → logprob: -10.813627243041992

Token 389: '3' (ID: 18)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0025961112696677446
    2. ' q' → logprob: -7.252595901489258
    3. '(q' → logprob: -7.377595901489258
    4. 'm' → logprob: -7.877595901489258
    5. 'x' → logprob: -8.252595901489258
    6. '0' → logprob: -8.627595901489258
    7. 'n' → logprob: -8.627595901489258
    8. 'not' → logprob: -9.502595901489258
    9. 'True' → logprob: -10.627595901489258
    10. '(m' → logprob: -10.752595901489258

Token 390: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.6351059079170227
    2. '*q' → logprob: -0.8851059079170227
    3. 'q' → logprob: -4.010106086730957
    4. '*' → logprob: -4.260106086730957
    5. ')' → logprob: -5.010106086730957
    6. '*x' → logprob: -5.385106086730957
    7. ' <=' → logprob: -5.510106086730957
    8. ' q' → logprob: -5.760106086730957
    9. 'x' → logprob: -6.510106086730957
    10. '<=' → logprob: -7.260106086730957

Token 391: ' m' (ID: 284)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0004752367385663092
    2. ' q' → logprob: -8.00047492980957
    3. 'm' → logprob: -10.00047492980957
    4. 'x' → logprob: -10.25047492980957
    5. 'n' → logprob: -10.37547492980957
    6. '(q' → logprob: -10.75047492980957
    7. ')' → logprob: -14.00047492980957
    8. '
' → logprob: -14.12547492980957
    9. '*q' → logprob: -14.25047492980957
    10. '	q' → logprob: -14.50047492980957

Token 392: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1989518404006958
    2. ' -' → logprob: -1.4489518404006958
    3. '-' → logprob: -1.8239518404006958
    4. '+' → logprob: -2.0739517211914062
    5. 'q' → logprob: -3.1989517211914062
    6. '<=' → logprob: -3.3239517211914062
    7. ' <=' → logprob: -3.3239517211914062
    8. ' +' → logprob: -3.8239517211914062
    9. '>=' → logprob: -4.573951721191406
    10. ' q' → logprob: -5.073951721191406

Token 393: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.13015535473823547
    2. ' q' → logprob: -2.130155324935913
    3. 'x' → logprob: -6.130155563354492
    4. '2' → logprob: -8.130155563354492
    5. ' x' → logprob: -8.505155563354492
    6. '(' → logprob: -8.880155563354492
    7. ' ' → logprob: -9.630155563354492
    8. 'n' → logprob: -9.755155563354492
    9. ' (' → logprob: -9.880155563354492
    10. '1' → logprob: -10.005155563354492

Token 394: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012375781312584877
    2. '+' → logprob: -5.512375831604004
    3. '<=' → logprob: -6.262375831604004
    4. '>=' → logprob: -6.637375831604004
    5. ')>=' → logprob: -6.887375831604004
    6. ' )' → logprob: -7.137375831604004
    7. ')<=' → logprob: -7.262375831604004
    8. '-' → logprob: -7.262375831604004
    9. ' <=' → logprob: -7.887375831604004
    10. ')%' → logprob: -8.012375831604004

Token 395: ' %' (ID: 1851)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>=' → logprob: -1.4419002532958984
    2. ' <=' → logprob: -1.5669002532958984
    3. '<=' → logprob: -1.5669002532958984
    4. ')' → logprob: -1.8169002532958984
    5. ' >=' → logprob: -1.8169002532958984
    6. '+' → logprob: -4.566900253295898
    7. ')>=' → logprob: -5.441900253295898
    8. ')<=' → logprob: -6.691900253295898
    9. '==' → logprob: -7.191900253295898
    10. ' +' → logprob: -7.316900253295898

Token 396: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.8341958522796631
    2. '4' → logprob: -1.084195852279663
    3. '3' → logprob: -1.584195852279663
    4. '7' → logprob: -4.459196090698242
    5. '9' → logprob: -5.709196090698242
    6. '5' → logprob: -5.959196090698242
    7. '1' → logprob: -6.584196090698242
    8. '6' → logprob: -6.584196090698242
    9. '10' → logprob: -6.959196090698242
    10. '8' → logprob: -7.459196090698242

Token 397: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.8977019190788269
    2. '4' → logprob: -1.0227019786834717
    3. '3' → logprob: -1.5227019786834717
    4. '7' → logprob: -5.397701740264893
    5. '5' → logprob: -5.772701740264893
    6. '6' → logprob: -6.272701740264893
    7. '9' → logprob: -6.522701740264893
    8. '1' → logprob: -6.647701740264893
    9. '10' → logprob: -6.647701740264893
    10. '8' → logprob: -7.397701740264893

Token 398: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6992747187614441
    2. ' ==' → logprob: -0.6992747187614441
    3. ',' → logprob: -5.57427453994751
    4. ')' → logprob: -6.82427453994751
    5. ')==' → logprob: -7.44927453994751
    6. ' ,' → logprob: -8.699275016784668
    7. ' !=' → logprob: -8.949275016784668
    8. '),' → logprob: -9.074275016784668
    9. '!=' → logprob: -9.449275016784668
    10. '==
' → logprob: -10.449275016784668

Token 399: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000528606993611902
    2. ' ' → logprob: -7.625528812408447
    3. '1' → logprob: -10.125528335571289
    4. 'q' → logprob: -15.750528335571289
    5. '   ' → logprob: -16.12552833557129
    6. '```' → logprob: -16.93802833557129
    7. '
' → logprob: -17.00052833557129
    8. 'x' → logprob: -17.18802833557129
    9. '  ' → logprob: -17.50052833557129
    10. '=' → logprob: -17.75052833557129

Token 400: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005287261446937919
    2. '1' → logprob: -7.750528812408447
    3. ' ' → logprob: -9.250528335571289
    4. 'q' → logprob: -13.500528335571289
    5. 'x' → logprob: -15.625528335571289
    6. '
' → logprob: -16.12552833557129
    7. ' q' → logprob: -17.06302833557129
    8. '3' → logprob: -17.12552833557129
    9. '   ' → logprob: -17.12552833557129
    10. 'm' → logprob: -17.12552833557129

Token 401: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004753595683723688
    2. ' ,' → logprob: -5.629753589630127
    3. '   ' → logprob: -7.504753589630127
    4. ':' → logprob: -8.254754066467285
    5. '):' → logprob: -9.504754066467285
    6. ',q' → logprob: -9.879754066467285
    7. ',
' → logprob: -10.254754066467285
    8. '       ' → logprob: -10.379754066467285
    9. ',x' → logprob: -10.754754066467285
    10. '):
' → logprob: -10.754754066467285

Token 402: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.6327529549598694
    2. ' range' → logprob: -0.7577529549598694
    3. '   ' → logprob: -9.757753372192383
    4. ' ' → logprob: -10.257753372192383
    5. '	range' → logprob: -10.757753372192383
    6. '(range' → logprob: -11.007753372192383
    7. 'chain' → logprob: -11.257753372192383
    8. ' chain' → logprob: -12.882753372192383
    9. ')' → logprob: -12.882753372192383
    10. '  ' → logprob: -13.507753372192383

Token 403: '(min' (ID: 26035)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.6489323377609253
    2. '(' → logprob: -0.7739323377609253
    3. '(m' → logprob: -4.273932456970215
    4. '(max' → logprob: -7.273932456970215
    5. '((' → logprob: -7.398932456970215
    6. '(-' → logprob: -8.273932456970215
    7. '(abs' → logprob: -8.648932456970215
    8. '(
' → logprob: -8.773932456970215
    9. '(q' → logprob: -9.398932456970215
    10. '3' → logprob: -9.648932456970215

Token 404: '(m' (ID: 2145)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.21350984275341034
    2. '(' → logprob: -1.7135097980499268
    3. '(m' → logprob: -4.588510036468506
    4. '(x' → logprob: -7.963510036468506
    5. '((' → logprob: -7.963510036468506
    6. '(q' → logprob: -8.213509559631348
    7. '3' → logprob: -8.338509559631348
    8. 'n' → logprob: -8.463509559631348
    9. '(
' → logprob: -8.713509559631348
    10. ')' → logprob: -9.713509559631348

Token 405: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6279563903808594
    2. ' +' → logprob: -1.2529563903808594
    3. '+' → logprob: -2.5029563903808594
    4. ' *' → logprob: -2.7529563903808594
    5. '*' → logprob: -3.6279563903808594
    6. ' ,' → logprob: -5.377956390380859
    7. ' -' → logprob: -6.377956390380859
    8. ',n' → logprob: -8.00295639038086
    9. '(n' → logprob: -8.12795639038086
    10. 'n' → logprob: -8.37795639038086

Token 406: ' n' (ID: 297)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.22093702852725983
    2. 'n' → logprob: -1.7209370136260986
    3. ' n' → logprob: -4.595937252044678
    4. ' ' → logprob: -5.845937252044678
    5. '2' → logprob: -6.220937252044678
    6. 'm' → logprob: -6.220937252044678
    7. '(' → logprob: -7.345937252044678
    8. '(n' → logprob: -7.720937252044678
    9. 'lim' → logprob: -7.845937252044678
    10. '6' → logprob: -8.09593677520752

Token 407: ')' (ID: 8)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5335540175437927
    2. ' +' → logprob: -1.2835540771484375
    3. ')' → logprob: -2.7835540771484375
    4. '),' → logprob: -3.2835540771484375
    5. ')+' → logprob: -3.6585540771484375
    6. ',' → logprob: -5.4085540771484375
    7. ' -' → logprob: -5.7835540771484375
    8. '-' → logprob: -7.4085540771484375
    9. ' ),' → logprob: -7.5335540771484375
    10. '   ' → logprob: -8.033554077148438

Token 408: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6126374006271362
    2. ' +' → logprob: -0.8626374006271362
    3. ',' → logprob: -3.362637519836426
    4. ' ,' → logprob: -7.987637519836426
    5. '   ' → logprob: -8.237637519836426
    6. ')' → logprob: -8.612637519836426
    7. '),' → logprob: -9.237637519836426
    8. ')):' → logprob: -9.612637519836426
    9. '):' → logprob: -9.737637519836426
    10. ',
' → logprob: -9.862637519836426

Token 409: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00764449080452323
    2. ' ' → logprob: -4.8826446533203125
    3. '(' → logprob: -10.757644653320312
    4. ',' → logprob: -12.882644653320312
    5. '
' → logprob: -12.882644653320312
    6. ' m' → logprob: -13.382644653320312
    7. ' (' → logprob: -13.507644653320312
    8. '   ' → logprob: -13.507644653320312
    9. 'm' → logprob: -13.757644653320312
    10. '```' → logprob: -14.132644653320312

Token 410: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0018454594537615776
    2. '(' → logprob: -6.751845359802246
    3. 'm' → logprob: -8.001845359802246
    4. ' ' → logprob: -8.626845359802246
    5. '(m' → logprob: -9.876845359802246
    6. '(n' → logprob: -10.751845359802246
    7. 'n' → logprob: -10.876845359802246
    8. '3' → logprob: -10.876845359802246
    9. '0' → logprob: -10.876845359802246
    10. ' m' → logprob: -11.876845359802246

Token 411: ')):
' (ID: 22530)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.28900259733200073
    2. ')):' → logprob: -1.4140026569366455
    3. '):
' → logprob: -5.789002418518066
    4. ')):
' → logprob: -6.289002418518066
    5. ',' → logprob: -6.414002418518066
    6. '))' → logprob: -7.039002418518066
    7. ':' → logprob: -8.914002418518066
    8. ')' → logprob: -9.289002418518066
    9. ' ):' → logprob: -9.914002418518066
    10. '   ' → logprob: -10.289002418518066

Token 412: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04366230219602585
    2. ' yield' → logprob: -3.7936623096466064
    3. ':' → logprob: -4.543662071228027
    4. 'yield' → logprob: -5.418662071228027
    5. '	yield' → logprob: -5.668662071228027
    6. '	' → logprob: -7.418662071228027
    7. ' yields' → logprob: -8.293662071228027
    8. '   ' → logprob: -8.793662071228027
    9. ',' → logprob: -9.043662071228027
    10. '        
' → logprob: -9.168662071228027

Token 413: ' y' (ID: 342)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6986847519874573
    2. ' yield' → logprob: -1.3236846923828125
    3. 'yield' → logprob: -1.4486846923828125
    4. '	yield' → logprob: -6.8236846923828125
    5. '   ' → logprob: -7.5736846923828125
    6. 'y' (adapté à ' y') → logprob: -10.323684692382812
    7. '        
' → logprob: -10.948684692382812
    8. ' y' → logprob: -10.948684692382812
    9. '           ' → logprob: -11.323684692382812
    10. '
' → logprob: -12.073684692382812

Token 414: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1929132491350174
    2. ' =' → logprob: -2.317913293838501
    3. ',' → logprob: -2.567913293838501
    4. ' ,' → logprob: -8.817913055419922
    5. ',y' → logprob: -10.067913055419922
    6. '=
' → logprob: -11.067913055419922
    7. '    ' → logprob: -11.442913055419922
    8. ')' → logprob: -11.817913055419922
    9. '   ' → logprob: -11.942913055419922
    10. ' ' → logprob: -11.942913055419922

Token 415: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3024618625640869
    2. ' (' → logprob: -2.302461862564087
    3. '(n' → logprob: -2.427461862564087
    4. '(m' → logprob: -3.052461862564087
    5. '3' → logprob: -4.302461624145508
    6. '(com' → logprob: -6.052461624145508
    7. '(q' → logprob: -6.302461624145508
    8. 'm' → logprob: -6.427461624145508
    9. 'n' → logprob: -6.677461624145508
    10. '(x' → logprob: -6.927461624145508

Token 416: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0003782416461035609
    2. ' ' → logprob: -8.000378608703613
    3. '(' → logprob: -10.625378608703613
    4. '   ' → logprob: -12.250378608703613
    5. '
' → logprob: -13.000378608703613
    6. '  ' → logprob: -13.562878608703613
    7. 'n' → logprob: -13.562878608703613
    8. '2' → logprob: -13.687878608703613
    9. '    ' → logprob: -14.000378608703613
    10. 'x' → logprob: -14.312878608703613

Token 417: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.4395431578159332
    2. '*m' → logprob: -1.0645431280136108
    3. '*' → logprob: -4.5645432472229
    4. 'm' → logprob: -8.064542770385742
    5. ' m' → logprob: -10.314542770385742
    6. '*x' → logprob: -11.939542770385742
    7. ' ' → logprob: -12.439542770385742
    8. ' ' → logprob: -12.939542770385742
    9. '*n' → logprob: -13.439542770385742
    10. '*q' → logprob: -13.439542770385742

Token 418: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.014165983535349369
    2. ' m' → logprob: -4.264165878295898
    3. 'x' → logprob: -14.139165878295898
    4. ' x' → logprob: -14.889165878295898
    5. ' ' → logprob: -15.014165878295898
    6. '
' → logprob: -15.264165878295898
    7. '<|end|>' → logprob: -15.514165878295898
    8. '	m' → logprob: -16.0141658782959
    9. '*m' → logprob: -16.1391658782959
    10. 'user' → logprob: -16.3891658782959

Token 419: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.026407936587929726
    2. '-' → logprob: -3.6514079570770264
    3. ' ' → logprob: -9.651408195495605
    4. ')' → logprob: -11.276408195495605
    5. '<|end|>' → logprob: -11.651408195495605
    6. '+' → logprob: -12.151408195495605
    7. ' +' → logprob: -12.901408195495605
    8. 'x' → logprob: -13.026408195495605
    9. ' ' → logprob: -13.026408195495605
    10. ',' → logprob: -13.026408195495605

Token 420: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.059480275958776474
    2. ' x' → logprob: -3.0594801902770996
    3. 'q' → logprob: -4.5594801902771
    4. ' q' → logprob: -7.9344801902771
    5. ')x' → logprob: -12.809480667114258
    6. '3' → logprob: -13.559480667114258
    7. ')' → logprob: -13.934480667114258
    8. ' ' → logprob: -14.309480667114258
    9. '2' → logprob: -14.684480667114258
    10. '```' → logprob: -15.059480667114258

Token 421: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018097029998898506
    2. ' -' → logprob: -4.768096923828125
    3. ' )' → logprob: -5.143096923828125
    4. '-' → logprob: -5.768096923828125
    5. '   ' → logprob: -8.518096923828125
    6. '       ' → logprob: -9.518096923828125
    7. ' ' → logprob: -10.143096923828125
    8. ')
' → logprob: -10.268096923828125
    9. ')//' → logprob: -10.643096923828125
    10. '    ' → logprob: -10.893096923828125

Token 422: ' //' (ID: 602)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23973582684993744
    2. '       ' → logprob: -1.9897358417510986
    3. ' -' → logprob: -3.7397358417510986
    4. '-' → logprob: -4.2397356033325195
    5. '   ' → logprob: -4.7397356033325195
    6. '>>' → logprob: -4.9897356033325195
    7. ' ' → logprob: -5.2397356033325195
    8. ' //' → logprob: -5.4897356033325195
    9. ' >>' → logprob: -5.4897356033325195
    10. '#' → logprob: -6.1147356033325195

Token 423: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.707997428951785e-05
    2. ' ' → logprob: -9.500077247619629
    3. '
' → logprob: -13.750077247619629
    4. '3' → logprob: -14.125077247619629
    5. '```' → logprob: -15.875077247619629
    6. '   ' → logprob: -16.250076293945312
    7. '  ' → logprob: -16.375076293945312
    8. '    ' → logprob: -17.500076293945312
    9. '
' → logprob: -17.625076293945312
    10. '1' → logprob: -17.937576293945312

Token 424: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9385402993066236e-05
    2. ' ' → logprob: -10.875019073486328
    3. '3' → logprob: -15.750019073486328
    4. '
' → logprob: -16.625019073486328
    5. '<|end|>' → logprob: -17.250019073486328
    6. '```' → logprob: -17.625019073486328
    7. '  ' → logprob: -17.875019073486328
    8. '1' → logprob: -18.000019073486328
    9. '   ' → logprob: -18.250019073486328
    10. '۲' → logprob: -18.750019073486328

Token 425: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013871431583538651
    2. 'yield' → logprob: -7.251387119293213
    3. ' yield' → logprob: -7.376387119293213
    4. '	yield' → logprob: -10.501387596130371
    5. '<|end|>' → logprob: -11.376387596130371
    6. ',' → logprob: -12.376387596130371
    7. 'Yield' → logprob: -12.876387596130371
    8. '        
' → logprob: -13.501387596130371
    9. '```' → logprob: -13.751387596130371
    10. '   ' → logprob: -14.001387596130371

Token 426: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005628037615679204
    2. 'yield' → logprob: -7.75056266784668
    3. ' yield' → logprob: -9.50056266784668
    4. '	yield' → logprob: -10.62556266784668
    5. '<|end|>' → logprob: -11.87556266784668
    6. ',' → logprob: -12.00056266784668
    7. '        
' → logprob: -12.00056266784668
    8. '	' → logprob: -12.62556266784668
    9. '```' → logprob: -12.62556266784668
    10. '   ' → logprob: -13.12556266784668

Token 427: ' yield' (ID: 14376)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7269713282585144
    2. '       ' → logprob: -1.2269713878631592
    3. 'yield' (adapté à ' yield') → logprob: -1.6019713878631592
    4. 'z' → logprob: -4.60197114944458
    5. ' if' → logprob: -4.85197114944458
    6. ' yield' → logprob: -5.97697114944458
    7. '   ' → logprob: -7.10197114944458
    8. 'x' → logprob: -9.101971626281738
    9. '        ' → logprob: -9.101971626281738
    10. '        
' → logprob: -9.101971626281738

Token 428: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.5706624388694763
    2. 'x' → logprob: -1.695662498474121
    3. ' (' → logprob: -2.195662498474121
    4. '(com' → logprob: -2.445662498474121
    5. ' x' → logprob: -3.570662498474121
    6. 'com' → logprob: -4.070662498474121
    7. '(n' → logprob: -5.945662498474121
    8. '(m' → logprob: -6.570662498474121
    9. '((' → logprob: -7.070662498474121
    10. ' com' → logprob: -7.070662498474121

Token 429: 'com' (ID: 639)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.11936589330434799
    2. 'com' → logprob: -2.244365930557251
    3. '(com' → logprob: -5.994365692138672
    4. '(x' → logprob: -6.619365692138672
    5. ' x' → logprob: -7.119365692138672
    6. 'n' → logprob: -7.744365692138672
    7. 'pow' → logprob: -7.869365692138672
    8. '(' → logprob: -8.369365692138672
    9. 'y' → logprob: -8.619365692138672
    10. 'm' → logprob: -8.869365692138672

Token 430: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.007660943083465099
    2. '(' → logprob: -5.882660865783691
    3. '(m' → logprob: -5.882660865783691
    4. '(x' → logprob: -6.757660865783691
    5. '(y' → logprob: -7.507660865783691
    6. ')(' → logprob: -8.882660865783691
    7. 'n' → logprob: -9.132660865783691
    8. ')' → logprob: -10.507660865783691
    9. '((' → logprob: -10.632660865783691
    10. '(
' → logprob: -11.382660865783691

Token 431: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09429016709327698
    2. ',x' → logprob: -3.344290256500244
    3. 'x' → logprob: -3.469290256500244
    4. ' ,' → logprob: -4.969290256500244
    5. ' x' → logprob: -5.094290256500244
    6. '+x' → logprob: -5.844290256500244
    7. ' +' → logprob: -6.344290256500244
    8. ' -' → logprob: -6.469290256500244
    9. '+' → logprob: -6.969290256500244
    10. ' ' → logprob: -7.094290256500244

Token 432: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.003262199694290757
    2. ' x' → logprob: -5.878262042999268
    3. 'y' → logprob: -7.753262042999268
    4. ' y' → logprob: -11.128262519836426
    5. 'm' → logprob: -11.753262519836426
    6. 'n' → logprob: -13.253262519836426
    7. '3' → logprob: -14.253262519836426
    8. '2' → logprob: -14.628262519836426
    9. '	x' → logprob: -14.878262519836426
    10. ' ' → logprob: -15.003262519836426

Token 433: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03029477410018444
    2. '),' → logprob: -3.53029465675354
    3. ')*' → logprob: -8.280294418334961
    4. ' )' → logprob: -8.905294418334961
    5. '))' → logprob: -9.780294418334961
    6. '   ' → logprob: -10.280294418334961
    7. ' ),' → logprob: -11.030294418334961
    8. ',' → logprob: -11.155294418334961
    9. ')
' → logprob: -11.530294418334961
    10. 'def' → logprob: -12.155294418334961

Token 434: ' *
' (ID: 2099)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011433986015617847
    2. ' *' → logprob: -5.136434078216553
    3. ' ,' → logprob: -5.386434078216553
    4. '*' → logprob: -7.511434078216553
    5. ')' → logprob: -8.386433601379395
    6. ',
' → logprob: -10.136433601379395
    7. '+' → logprob: -11.136433601379395
    8. '   ' → logprob: -11.386433601379395
    9. '),' → logprob: -11.761433601379395
    10. ' +' → logprob: -11.886433601379395

Token 435: '              ' (ID: 4442)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.11099983751773834
    2. 'pow' → logprob: -2.735999822616577
    3. ' com' → logprob: -3.485999822616577
    4. '(com' → logprob: -5.486000061035156
    5. ' pow' → logprob: -6.361000061035156
    6. 'fact' → logprob: -7.111000061035156
    7. '   ' → logprob: -7.861000061035156
    8. '(' → logprob: -7.861000061035156
    9. 'mul' → logprob: -8.111000061035156
    10. 'mod' → logprob: -8.361000061035156

Token 436: ' fact' (ID: 2840)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.07636050134897232
    2. 'pow' → logprob: -2.7013604640960693
    3. '(com' → logprob: -5.951360702514648
    4. ' com' → logprob: -6.201360702514648
    5. 'fact' (adapté à ' fact') → logprob: -8.076360702514648
    6. ' pow' → logprob: -8.201360702514648
    7. '(' → logprob: -8.326360702514648
    8. 'mul' → logprob: -9.076360702514648
    9. 'mod' → logprob: -9.201360702514648
    10. '(pow' → logprob: -9.451360702514648

Token 437: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.00019543453527148813
    2. '(y' → logprob: -9.875195503234863
    3. '(' → logprob: -10.750195503234863
    4. '(n' → logprob: -10.750195503234863
    5. '(m' → logprob: -11.000195503234863
    6. '[n' → logprob: -11.125195503234863
    7. '[m' → logprob: -11.250195503234863
    8. '(x' → logprob: -11.375195503234863
    9. '[y' → logprob: -11.625195503234863
    10. '[(' → logprob: -11.875195503234863

Token 438: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.28624582290649414
    2. '[m' → logprob: -2.036245822906494
    3. '[n' → logprob: -2.786245822906494
    4. '[' → logprob: -3.411245822906494
    5. '[x' → logprob: -3.786245822906494
    6. '[q' → logprob: -7.911245822906494
    7. '[min' → logprob: -8.661245346069336
    8. '[-' → logprob: -8.786245346069336
    9. 'y' → logprob: -9.536245346069336
    10. '[
' → logprob: -9.786245346069336

Token 439: ' +' (ID: 659)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08173257112503052
    2. '])' → logprob: -2.5817325115203857
    3. ']%' → logprob: -6.456732749938965
    4. '-' → logprob: -7.831732749938965
    5. ')' → logprob: -8.206732749938965
    6. '[' → logprob: -8.581732749938965
    7. '   ' → logprob: -9.456732749938965
    8. '[x' → logprob: -9.956732749938965
    9. ']))' → logprob: -9.956732749938965
    10. '[y' → logprob: -10.456732749938965

Token 440: ' n' (ID: 297)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.008535381406545639
    2. 'n' → logprob: -5.258535385131836
    3. 'y' → logprob: -6.633535385131836
    4. 'm' → logprob: -6.883535385131836
    5. ' x' → logprob: -7.758535385131836
    6. 'q' → logprob: -8.383535385131836
    7. '3' → logprob: -9.758535385131836
    8. '2' → logprob: -10.133535385131836
    9. '1' → logprob: -10.133535385131836
    10. '   ' → logprob: -10.508535385131836

Token 441: ' -' (ID: 533)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.14734961092472076
    2. '])' → logprob: -2.0223495960235596
    3. '-' → logprob: -6.147349834442139
    4. ' -' → logprob: -6.897349834442139
    5. '+' → logprob: -7.897349834442139
    6. ']))' → logprob: -7.897349834442139
    7. ']%' → logprob: -8.27234935760498
    8. '   ' → logprob: -8.77234935760498
    9. ')' → logprob: -9.02234935760498
    10. ']
' → logprob: -9.27234935760498

Token 442: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004284245893359184
    2. 'x' → logprob: -5.504284381866455
    3. ' ' → logprob: -8.629283905029297
    4. ' x' → logprob: -11.004283905029297
    5. 'm' → logprob: -12.504283905029297
    6. '2' → logprob: -12.629283905029297
    7. '3' → logprob: -15.004283905029297
    8. '   ' → logprob: -15.254283905029297
    9. '0' → logprob: -15.504283905029297
    10. 'n' → logprob: -15.504283905029297

Token 443: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007654188666492701
    2. 'x' → logprob: -4.882654190063477
    3. 'm' → logprob: -10.132654190063477
    4. ' ' → logprob: -12.757654190063477
    5. 'n' → logprob: -13.632654190063477
    6. '2' → logprob: -13.632654190063477
    7. 'y' → logprob: -13.757654190063477
    8. ' x' → logprob: -14.382654190063477
    9. '(' → logprob: -15.382654190063477
    10. '(x' → logprob: -15.757654190063477

Token 444: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07938211411237717
    2. '])' → logprob: -2.5793821811676025
    3. ']%' → logprob: -8.079381942749023
    4. ')' → logprob: -9.329381942749023
    5. '   ' → logprob: -10.454381942749023
    6. '-' → logprob: -11.579381942749023
    7. ']
' → logprob: -11.704381942749023
    8. ' ]' → logprob: -11.704381942749023
    9. '],' → logprob: -11.954381942749023
    10. '%' → logprob: -12.204381942749023

Token 445: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1705189049243927
    2. '              ' → logprob: -2.5455188751220703
    3. '%' → logprob: -3.0455188751220703
    4. ' %' → logprob: -3.9205188751220703
    5. ')%' → logprob: -5.29551887512207
    6. ' *' → logprob: -6.04551887512207
    7. '          ' → logprob: -7.42051887512207
    8. '      ' → logprob: -7.54551887512207
    9. '   ' → logprob: -7.67051887512207
    10. '               ' → logprob: -7.79551887512207

Token 446: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.011048054322600365
    2. ' mod' → logprob: -4.511047840118408
    3. '	mod' → logprob: -16.63604736328125
    4. '(mod' → logprob: -16.88604736328125
    5. '              ' → logprob: -17.01104736328125
    6. '               ' → logprob: -17.38604736328125
    7. '           ' → logprob: -17.63604736328125
    8. '```' → logprob: -18.51104736328125
    9. '  ' → logprob: -18.63604736328125
    10. '          ' → logprob: -19.01104736328125

Token 447: ' *
' (ID: 2099)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4116242229938507
    2. '              ' → logprob: -1.1616241931915283
    3. ' *' → logprob: -5.036624431610107
    4. '               ' → logprob: -5.411624431610107
    5. '<|end|>' → logprob: -5.786624431610107
    6. '          ' → logprob: -6.036624431610107
    7. '             ' → logprob: -6.411624431610107
    8. ',' → logprob: -6.786624431610107
    9. '*' → logprob: -6.786624431610107
    10. '...' → logprob: -7.411624431610107

Token 448: '              ' (ID: 4442)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fin' → logprob: -0.12958021461963654
    2. 'inv' → logprob: -2.25458025932312
    3. 'fact' → logprob: -4.379580020904541
    4. ' fin' → logprob: -6.629580020904541
    5. 'com' → logprob: -6.879580020904541
    6. ' inv' → logprob: -7.254580020904541
    7. 'pow' → logprob: -8.7545804977417
    8. '(inv' → logprob: -8.7545804977417
    9. '  ' → logprob: -9.0045804977417
    10. 'mod' → logprob: -9.2545804977417

Token 449: ' fin' (ID: 2131)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fin' (adapté à ' fin') → logprob: -0.16574744880199432
    2. 'inv' → logprob: -1.9157474040985107
    3. 'fact' → logprob: -5.66574764251709
    4. 'com' → logprob: -6.79074764251709
    5. 'pow' → logprob: -8.29074764251709
    6. '
' → logprob: -8.79074764251709
    7. '(inv' → logprob: -9.04074764251709
    8. 'mod' → logprob: -9.54074764251709
    9. '(fin' → logprob: -9.66574764251709
    10. ' fin' → logprob: -9.79074764251709

Token 450: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0002319071936653927
    2. 'inv' → logprob: -8.375231742858887
    3. '_inv' → logprob: -15.000231742858887
    4. 'in' → logprob: -15.250231742858887
    5. 'iv' → logprob: -15.750231742858887
    6. 'ev' → logprob: -16.750232696533203
    7. '_v' → logprob: -16.750232696533203
    8. 'nv' → logprob: -17.000232696533203
    9. 'в' → logprob: -17.375232696533203
    10. ' inv' → logprob: -17.500232696533203

Token 451: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -2.6776029699249193e-05
    2. '[_' → logprob: -11.12502670288086
    3. 'list' → logprob: -12.37502670288086
    4. '[' → logprob: -12.87502670288086
    5. '[y' → logprob: -13.25002670288086
    6. 'List' → logprob: -14.12502670288086
    7. '```' → logprob: -14.62502670288086
    8. 'fin' → logprob: -14.87502670288086
    9. '_LIST' → logprob: -15.12502670288086
    10. '[
' → logprob: -15.75002670288086

Token 452: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.002088400535285473
    2. '[n' → logprob: -6.25208854675293
    3. '[' → logprob: -9.00208854675293
    4. '[m' → logprob: -11.12708854675293
    5. '[x' → logprob: -11.25208854675293
    6. 'y' → logprob: -12.37708854675293
    7. '[f' → logprob: -13.75208854675293
    8. '[(' → logprob: -14.37708854675293
    9. '(y' → logprob: -14.37708854675293
    10. '           ' → logprob: -14.75208854675293

Token 453: ']' (ID: 60)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.5919291377067566
    2. '+n' → logprob: -1.3419291973114014
    3. '+' → logprob: -2.3419291973114014
    4. ']' → logprob: -3.5919291973114014
    5. ' +' → logprob: -4.091928958892822
    6. '-' → logprob: -4.216928958892822
    7. '[' → logprob: -4.716928958892822
    8. 'n' → logprob: -4.966928958892822
    9. '[y' → logprob: -5.341928958892822
    10. '[m' → logprob: -5.591928958892822

Token 454: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.13663572072982788
    2. '              ' → logprob: -2.5116357803344727
    3. ' %' → logprob: -3.5116357803344727
    4. ')' → logprob: -4.386635780334473
    5. '          ' → logprob: -6.011635780334473
    6. '   ' → logprob: -7.511635780334473
    7. '      ' → logprob: -7.886635780334473
    8. ')%' → logprob: -8.011635780334473
    9. '  ' → logprob: -9.011635780334473
    10. '               ' → logprob: -9.386635780334473

Token 455: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.000919200771022588
    2. ' mod' → logprob: -7.000919342041016
    3. '              ' → logprob: -12.000919342041016
    4. 'fact' → logprob: -14.625919342041016
    5. '               ' → logprob: -15.125919342041016
    6. '  ' → logprob: -15.625919342041016
    7. '(mod' → logprob: -15.625919342041016
    8. '          ' → logprob: -16.125919342041016
    9. '             ' → logprob: -16.500919342041016
    10. '```' → logprob: -16.625919342041016

Token 456: ' *
' (ID: 2099)
  Prédit: '              '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '              ' → logprob: -0.3341520130634308
    2. ')' → logprob: -1.3341519832611084
    3. ' *' → logprob: -5.0841522216796875
    4. '               ' → logprob: -5.4591522216796875
    5. '             ' → logprob: -5.4591522216796875
    6. '          ' → logprob: -6.0841522216796875
    7. '*' → logprob: -6.8341522216796875
    8. '<|end|>' → logprob: -7.2091522216796875
    9. ')*' → logprob: -7.9591522216796875
    10. '           ' → logprob: -8.584152221679688

Token 457: '              ' (ID: 4442)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fin' → logprob: -0.030574943870306015
    2. '              ' → logprob: -3.9055750370025635
    3. 'fact' → logprob: -5.280574798583984
    4. ' fin' → logprob: -5.405574798583984
    5. 'inv' → logprob: -8.405574798583984
    6. '(fin' → logprob: -10.155574798583984
    7. ' fact' → logprob: -10.280574798583984
    8. '          ' → logprob: -10.780574798583984
    9. '  ' → logprob: -11.280574798583984
    10. 'f' → logprob: -11.280574798583984

Token 458: ' fin' (ID: 2131)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fin' (adapté à ' fin') → logprob: -0.061808787286281586
    2. 'fact' → logprob: -3.0618088245391846
    3. 'inv' → logprob: -4.4368085861206055
    4. 'com' → logprob: -7.8118085861206055
    5. ' fin' → logprob: -8.186808586120605
    6. '  ' → logprob: -8.561808586120605
    7. '   ' → logprob: -9.436808586120605
    8. '
' → logprob: -9.686808586120605
    9. 'f' → logprob: -10.186808586120605
    10. ' fact' → logprob: -10.436808586120605

Token 459: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -2.5941604690160602e-05
    2. '_list' → logprob: -10.625025749206543
    3. 'inv' → logprob: -14.125025749206543
    4. 'iv' → logprob: -14.875025749206543
    5. 'ev' → logprob: -15.125025749206543
    6. '
' → logprob: -16.12502670288086
    7. 'x' → logprob: -16.62502670288086
    8. 'ov' → logprob: -17.25002670288086
    9. 'vy' → logprob: -18.25002670288086
    10. 'sv' → logprob: -18.25002670288086

Token 460: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.1472419600977446e-06
    2. '[y' → logprob: -14.625000953674316
    3. 'List' → logprob: -14.750000953674316
    4. '[' → logprob: -15.875000953674316
    5. '_LIST' → logprob: -16.875001907348633
    6. 'list' → logprob: -17.000001907348633
    7. '[List' → logprob: -18.125001907348633
    8. '[n' → logprob: -18.875001907348633
    9. '[(' → logprob: -19.125001907348633
    10. '   ' → logprob: -19.125001907348633

Token 461: '[n' (ID: 15433)
  Prédit: '[y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.3508247137069702
    2. '[n' → logprob: -1.2258247137069702
    3. '[' → logprob: -6.10082483291626
    4. '[x' → logprob: -9.725824356079102
    5. ' [' → logprob: -11.475824356079102
    6. 'y' → logprob: -11.475824356079102
    7. '[
' → logprob: -11.725824356079102
    8. 'n' → logprob: -11.850824356079102
    9. '   ' → logprob: -12.475824356079102
    10. '[(' → logprob: -12.600824356079102

Token 462: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.016055013984441757
    2. ' -' → logprob: -4.141055107116699
    3. ']' → logprob: -11.3910551071167
    4. '[' → logprob: -13.1410551071167
    5. '])' → logprob: -13.8910551071167
    6. '_minus' → logprob: -13.8910551071167
    7. '  ' → logprob: -14.3910551071167
    8. 'y' → logprob: -14.3910551071167
    9. ')' → logprob: -14.3910551071167
    10. '[y' → logprob: -14.5160551071167

Token 463: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.537868779967539e-06
    2. 'y' → logprob: -12.375008583068848
    3. 'x' → logprob: -12.750008583068848
    4. ' ' → logprob: -13.750008583068848
    5. 'n' → logprob: -16.12500762939453
    6. '(' → logprob: -16.87500762939453
    7. '   ' → logprob: -17.12500762939453
    8. ' y' → logprob: -17.37500762939453
    9. 'm' → logprob: -17.75000762939453
    10. '
' → logprob: -17.87500762939453

Token 464: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. 'x' → logprob: -17.25
    4. '   ' → logprob: -19.0
    5. 'y' → logprob: -19.25
    6. '(' → logprob: -19.625
    7. 'fact' → logprob: -20.0
    8. '2' → logprob: -20.375
    9. ')' → logprob: -20.375
    10. '```' → logprob: -20.5

Token 465: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.28148549795150757
    2. '])' → logprob: -1.4064855575561523
    3. ')' → logprob: -9.781485557556152
    4. '])
' → logprob: -10.031485557556152
    5. ']
' → logprob: -10.281485557556152
    6. '              ' → logprob: -10.281485557556152
    7. '          ' → logprob: -11.031485557556152
    8. ']%' → logprob: -11.031485557556152
    9. '[y' → logprob: -11.031485557556152
    10. ' ]' → logprob: -11.156485557556152

Token 466: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0403614304959774
    2. '              ' → logprob: -3.5403614044189453
    3. ')%' → logprob: -4.790361404418945
    4. '%' → logprob: -7.040361404418945
    5. '          ' → logprob: -7.790361404418945
    6. '       ' → logprob: -8.415361404418945
    7. '             ' → logprob: -8.665361404418945
    8. '               ' → logprob: -8.915361404418945
    9. '   ' → logprob: -9.040361404418945
    10. '           ' → logprob: -9.540361404418945

Token 467: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.11289012432098389
    2. ' mod' → logprob: -2.2378902435302734
    3. '(mod' → logprob: -10.362890243530273
    4. ')' → logprob: -11.237890243530273
    5. '	mod' → logprob: -11.612890243530273
    6. 'm' → logprob: -11.987890243530273
    7. ' ' → logprob: -13.237890243530273
    8. ' ' → logprob: -13.987890243530273
    9. '```' → logprob: -14.112890243530273
    10. ' (' → logprob: -14.362890243530273

Token 468: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.052519023418426514
    2. '              ' → logprob: -3.1775190830230713
    3. '          ' → logprob: -5.052518844604492
    4. '             ' → logprob: -7.052518844604492
    5. '       ' → logprob: -7.302518844604492
    6. ')
' → logprob: -8.052518844604492
    7. '         ' → logprob: -8.302518844604492
    8. ' )' → logprob: -8.552518844604492
    9. '      ' → logprob: -8.802518844604492
    10. '   ' → logprob: -8.802518844604492

Token 469: 'a' (ID: 64)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19862575829029083
    2. ':' → logprob: -2.3236258029937744
    3. '<|end|>' → logprob: -3.1986258029937744
    4. '+' → logprob: -4.823625564575195
    5. 'for' → logprob: -4.823625564575195
    6. 'def' → logprob: -5.698625564575195
    7. '.' → logprob: -6.073625564575195
    8. ']' → logprob: -6.198625564575195
    9. '#' → logprob: -6.323625564575195
    10. '   ' → logprob: -6.448625564575195

Token 470: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2860619127750397
    2. ' =' → logprob: -1.4110618829727173
    3. '_' → logprob: -6.036061763763428
    4. '+=' → logprob: -7.036061763763428
    5. ' +=' → logprob: -7.536061763763428
    6. ',' → logprob: -8.036062240600586
    7. '[' → logprob: -8.161062240600586
    8. '=[' → logprob: -8.786062240600586
    9. ' ' → logprob: -9.411062240600586
    10. '[:]' → logprob: -9.536062240600586

Token 471: ' reduce' (ID: 10389)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6480278968811035
    2. 'sum' → logprob: -0.8980278968811035
    3. 'reduce' → logprob: -3.2730278968811035
    4. 'list' → logprob: -3.6480278968811035
    5. 'next' → logprob: -6.1480278968811035
    6. '[' → logprob: -6.5230278968811035
    7. 'mak' → logprob: -7.6480278968811035
    8. ' sum' → logprob: -7.8980278968811035
    9. 'm' → logprob: -8.398027420043945
    10. '[m' → logprob: -8.523027420043945

Token 472: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.0010968804126605392
    2. '(' → logprob: -7.251096725463867
    3. '(lambda' → logprob: -8.001096725463867
    4. 'm' → logprob: -10.126096725463867
    5. '(
' → logprob: -12.876096725463867
    6. ' (' → logprob: -13.501096725463867
    7. '((' → logprob: -13.626096725463867
    8. ')m' → logprob: -13.876096725463867
    9. '(+' → logprob: -14.001096725463867
    10. '+m' → logprob: -14.001096725463867

Token 473: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -9.65101717156358e-05
    2. 'a' → logprob: -9.375096321105957
    3. 'ad' → logprob: -12.875096321105957
    4. 'adda' → logprob: -12.875096321105957
    5. 'adde' → logprob: -13.375096321105957
    6. 'm' → logprob: -13.750096321105957
    7. '(add' → logprob: -14.375096321105957
    8. ')' → logprob: -14.625096321105957
    9. 'adds' → logprob: -14.750096321105957
    10. ')add' → logprob: -14.750096321105957

Token 474: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002186307217925787
    2. ' ,' → logprob: -6.252186298370361
    3. ',m' → logprob: -8.37718677520752
    4. '(),' → logprob: -11.25218677520752
    5. ',
' → logprob: -13.12718677520752
    6. 'mak' → logprob: -13.12718677520752
    7. '_,' → logprob: -13.37718677520752
    8. '(' → logprob: -13.37718677520752
    9. '   ' → logprob: -13.62718677520752
    10. ' mak' → logprob: -13.62718677520752

Token 475: ' mak' (ID: 1902)
  Prédit: 'mak'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mak' → logprob: -0.00043233807082287967
    2. ' mak' → logprob: -7.75043249130249
    3. 'list' → logprob: -13.875432014465332
    4. ' ' → logprob: -15.500432014465332
    5. 'make' → logprob: -15.875432014465332
    6. 'ma' → logprob: -16.75043296813965
    7. 'mac' → logprob: -16.87543296813965
    8. 'mk' → logprob: -16.87543296813965
    9. ' ' → logprob: -17.00043296813965
    10. 'maker' → logprob: -17.12543296813965

Token 476: 'ese' (ID: 1220)
  Prédit: 'ese'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ese' → logprob: -0.018311362713575363
    2. 'seq' → logprob: -4.018311500549316
    3. 'se' → logprob: -9.268311500549316
    4. 'eq' → logprob: -10.143311500549316
    5. 'e' → logprob: -11.518311500549316
    6. 'es' → logprob: -12.393311500549316
    7. 'ose' → logprob: -12.518311500549316
    8. '(seq' → logprob: -13.018311500549316
    9. '_seq' → logprob: -13.518311500549316
    10. 'esse' → logprob: -13.768311500549316

Token 477: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -2.451116051815916e-05
    2. 'seq' → logprob: -11.250024795532227
    3. 'quence' → logprob: -12.250024795532227
    4. 'eq' → logprob: -12.500024795532227
    5. 'c' → logprob: -13.500024795532227
    6. 'p' → logprob: -14.625024795532227
    7. ' q' → logprob: -15.500024795532227
    8. 'Q' → logprob: -15.500024795532227
    9. '(seq' → logprob: -16.125024795532227
    10. 'qu' → logprob: -16.375024795532227

Token 478: '(),' (ID: 2547)
  Prédit: '(),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(),' → logprob: -0.06299696117639542
    2. '())' → logprob: -2.8129968643188477
    3. '()' → logprob: -6.937996864318848
    4. '()),' → logprob: -10.187996864318848
    5. ')' → logprob: -11.937996864318848
    6. ' (),' → logprob: -13.062996864318848
    7. '())
' → logprob: -13.312996864318848
    8. ',' → logprob: -13.312996864318848
    9. '(),"' → logprob: -13.437996864318848
    10. 'a' → logprob: -14.062996864318848

Token 479: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.061054359131958e-06
    2. ' ' → logprob: -11.750007629394531
    3. '   ' → logprob: -16.25000762939453
    4. '1' → logprob: -18.37500762939453
    5. ')' → logprob: -18.81250762939453
    6. '[' → logprob: -18.87500762939453
    7. '```' → logprob: -18.87500762939453
    8. '  ' → logprob: -19.25000762939453
    9. '۰' → logprob: -19.31250762939453
    10. '(' → logprob: -20.18750762939453

Token 480: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.127333340875339e-06
    2. ' ' → logprob: -12.500003814697266
    3. '   ' → logprob: -15.750003814697266
    4. '1' → logprob: -17.812503814697266
    5. '۰' → logprob: -18.000003814697266
    6. 'a' → logprob: -18.250003814697266
    7. '```' → logprob: -18.312503814697266
    8. 'def' → logprob: -18.687503814697266
    9. ')' → logprob: -18.812503814697266
    10. '  ' → logprob: -18.937503814697266

Token 481: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18108539283275604
    2. '
' → logprob: -2.1810853481292725
    3. 'print' → logprob: -3.6810853481292725
    4. '<|end|>' → logprob: -3.6810853481292725
    5. ')
' → logprob: -6.806085586547852
    6. '%' → logprob: -7.306085586547852
    7. '#' → logprob: -8.431085586547852
    8. '```' → logprob: -9.556085586547852
    9. 'a' → logprob: -9.681085586547852
    10. ')a' → logprob: -9.931085586547852

Token 482: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00037311585037969053
    2. 'a' → logprob: -8.625372886657715
    3. '<|end|>' → logprob: -8.875372886657715
    4. ' print' → logprob: -10.750372886657715
    5. '
' → logprob: -11.250372886657715
    6. '#' → logprob: -11.375372886657715
    7. ')' → logprob: -12.625372886657715
    8. '```' → logprob: -12.875372886657715
    9. '#print' → logprob: -14.000372886657715
    10. '\n' → logprob: -15.000372886657715

Token 483: ' Calcul' (ID: 57243)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.981667537620524e-06
    2. ' print' → logprob: -13.500001907348633
    3. 'a' → logprob: -14.750001907348633
    4. '```' → logprob: -16.375001907348633
    5. 'for' → logprob: -16.875001907348633
    6. '#print' → logprob: -18.000001907348633
    7. '#' → logprob: -18.375001907348633
    8. '
' → logprob: -18.875001907348633
    9. 'b' → logprob: -20.125001907348633
    10. 'result' → logprob: -20.125001907348633

Token 484: ' bar' (ID: 3608)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.6651443243026733
    2. 'a' → logprob: -1.6651443243026733
    3. 'print' → logprob: -1.7901443243026733
    4. 'result' → logprob: -2.790144443511963
    5. ' =' → logprob: -4.040144443511963
    6. '#' → logprob: -4.165144443511963
    7. '=' → logprob: -4.665144443511963
    8. 's' → logprob: -5.290144443511963
    9. 'for' → logprob: -5.540144443511963
    10. 'ans' → logprob: -5.915144443511963

Token 485: 'oque' (ID: 52013)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.04232146590948105
    2. 'e' → logprob: -4.042321681976318
    3. 's' → logprob: -4.667321681976318
    4. ')' → logprob: -5.542321681976318
    5. ' a' → logprob: -6.042321681976318
    6. 'i' → logprob: -6.042321681976318
    7. 'ière' → logprob: -7.167321681976318
    8. 'code' → logprob: -7.292321681976318
    9. 'rière' → logprob: -7.417321681976318
    10. 'x' → logprob: -7.667321681976318

Token 486: ' de' (ID: 334)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6364875435829163
    2. 'b' → logprob: -1.7614874839782715
    3. 'result' → logprob: -1.7614874839782715
    4. 'a' → logprob: -3.6364874839782715
    5. 'ans' → logprob: -3.7614874839782715
    6. 'for' → logprob: -4.2614874839782715
    7. ' =' → logprob: -4.5114874839782715
    8. 'res' → logprob: -4.6364874839782715
    9. 's' → logprob: -5.1364874839782715
    10. 'f' → logprob: -5.2614874839782715

Token 487: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.49834421277046204
    2. 'a' → logprob: -0.9983441829681396
    3. 'ans' → logprob: -4.748344421386719
    4. 'pow' → logprob: -4.873344421386719
    5. 'print' → logprob: -5.373344421386719
    6. 'm' → logprob: -7.248344421386719
    7. 'result' → logprob: -7.623344421386719
    8. '(a' → logprob: -8.373344421386719
    9. 'answer' → logprob: -8.623344421386719
    10. '(pow' → logprob: -8.873344421386719

Token 488: ' ' (ID: 5310)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.01959243044257164
    2. 'def' → logprob: -4.01959228515625
    3. '=' → logprob: -7.51959228515625
    4. ' =' → logprob: -7.64459228515625
    5. 'a' → logprob: -8.76959228515625
    6. '#' → logprob: -9.89459228515625
    7. '```' → logprob: -9.89459228515625
    8. ')' → logprob: -10.89459228515625
    9. 's' → logprob: -11.14459228515625
    10. '
' → logprob: -11.14459228515625

Token 489: ':' (ID: 25)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.016710897907614708
    2. 'def' → logprob: -4.1417107582092285
    3. 'a' → logprob: -8.391711235046387
    4. '=' → logprob: -8.891711235046387
    5. ' =' → logprob: -8.891711235046387
    6. '```' → logprob: -10.016711235046387
    7. '#' → logprob: -10.516711235046387
    8. ')' → logprob: -11.266711235046387
    9. 'k' → logprob: -11.266711235046387
    10. '
' → logprob: -11.266711235046387

Token 490: ' un' (ID: 537)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.01609431579709053
    2. 'def' → logprob: -4.266094207763672
    3. '```' → logprob: -7.391094207763672
    4. 's' → logprob: -7.891094207763672
    5. 'a' → logprob: -8.391094207763672
    6. ' b' → logprob: -9.016094207763672
    7. '
' → logprob: -9.141094207763672
    8. 'c' → logprob: -10.016094207763672
    9. 'pow' → logprob: -10.016094207763672
    10. '``' → logprob: -10.141094207763672

Token 491: ' produit' (ID: 29429)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0309756994247437
    2. 'b' → logprob: -1.4059756994247437
    3. ' =' → logprob: -1.4059756994247437
    4. 'def' → logprob: -2.155975818634033
    5. 'a' → logprob: -4.530975818634033
    6. 'for' → logprob: -4.905975818634033
    7. '_=' → logprob: -6.030975818634033
    8. ',' → logprob: -6.280975818634033
    9. '#' → logprob: -6.280975818634033
    10. '_' → logprob: -6.405975818634033

Token 492: ' réduit' (ID: 120775)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.1146593987941742
    2. '=' → logprob: -2.364659309387207
    3. ' =' → logprob: -4.364659309387207
    4. 'def' → logprob: -6.864659309387207
    5. '=
' → logprob: -8.114659309387207
    6. ',' → logprob: -9.364659309387207
    7. ' b' → logprob: -10.364659309387207
    8. '```' → logprob: -10.364659309387207
    9. '(
' → logprob: -11.114659309387207
    10. '
' → logprob: -11.114659309387207

Token 493: ' sur' (ID: 1512)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.004216112662106752
    2. 'def' → logprob: -5.504216194152832
    3. 'from' → logprob: -10.004216194152832
    4. '=' → logprob: -10.754216194152832
    5. '```' → logprob: -11.129216194152832
    6. ')' → logprob: -11.629216194152832
    7. 'prod' → logprob: -11.879216194152832
    8. 'import' → logprob: -12.379216194152832
    9. 'product' → logprob: -12.379216194152832
    10. ' b' → logprob: -12.379216194152832

Token 494: ' une' (ID: 2463)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005049333442002535
    2. 'chain' → logprob: -6.505049228668213
    3. 'filter' → logprob: -7.005049228668213
    4. 'reduce' → logprob: -7.005049228668213
    5. 'i' → logprob: -7.380049228668213
    6. 'com' → logprob: -7.630049228668213
    7. 'pow' → logprob: -8.505049705505371
    8. ' range' → logprob: -9.130049705505371
    9. 'map' → logprob: -10.005049705505371
    10. '(range' → logprob: -10.130049705505371

Token 495: ' compréhension' (ID: 142333)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.12038776278495789
    2. 'chain' → logprob: -2.4953877925872803
    3. 'filter' → logprob: -3.6203877925872803
    4. 'filtered' → logprob: -7.120387554168701
    5. 'def' → logprob: -7.245387554168701
    6. 'reduce' → logprob: -7.870387554168701
    7. 'repeat' → logprob: -7.995387554168701
    8. 'sequence' → logprob: -8.12038803100586
    9. '```' → logprob: -8.37038803100586
    10. 'chaine' → logprob: -8.87038803100586

Token 496: ' pa' (ID: 2428)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.002962607890367508
    2. 'def' → logprob: -5.877962589263916
    3. 'from' → logprob: -9.877963066101074
    4. '```' → logprob: -10.252963066101074
    5. '=' → logprob: -11.627963066101074
    6. '#' → logprob: -12.002963066101074
    7. 'pow' → logprob: -12.252963066101074
    8. 'range' → logprob: -12.252963066101074
    9. 'factor' → logprob: -12.252963066101074
    10. ')' → logprob: -12.377963066101074

Token 497: 'resse' (ID: 15994)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.0408111810684204
    2. 'rod' → logprob: -1.0408111810684204
    3. 'ss' → logprob: -1.6658111810684204
    4. 'range' → logprob: -2.790811061859131
    5. '[' → logprob: -4.665811061859131
    6. 'n' → logprob: -5.165811061859131
    7. 'rodu' → logprob: -5.665811061859131
    8. 'ass' → logprob: -5.665811061859131
    9. 'd' → logprob: -6.415811061859131
    10. 's' → logprob: -6.665811061859131

Token 498: 'use' (ID: 1821)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0010567454155534506
    2. 'def' → logprob: -7.376056671142578
    3. ' b' → logprob: -9.001056671142578
    4. '[' → logprob: -9.626056671142578
    5. 'a' → logprob: -10.001056671142578
    6. '(b' → logprob: -10.251056671142578
    7. '[b' → logprob: -10.501056671142578
    8. '#' → logprob: -11.001056671142578
    9. '(' → logprob: -11.126056671142578
    10. 'range' → logprob: -11.251056671142578

Token 499: '
' (ID: 198)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.008619066327810287
    2. 'def' → logprob: -4.8836188316345215
    3. 'from' → logprob: -7.0086188316345215
    4. '```' → logprob: -9.88361930847168
    5. 'import' → logprob: -10.88361930847168
    6. ' b' → logprob: -12.13361930847168
    7. '=' → logprob: -12.25861930847168
    8. 'pow' → logprob: -12.38361930847168
    9. ')' → logprob: -13.00861930847168
    10. '
' → logprob: -13.13361930847168

Token 500: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00483748409897089
    2. 'def' → logprob: -5.629837512969971
    3. 'inv' → logprob: -7.629837512969971
    4. 'pow' → logprob: -8.379837036132812
    5. 'prod' → logprob: -9.004837036132812
    6. 'from' → logprob: -9.129837036132812
    7. '```' → logprob: -9.129837036132812
    8. 'factor' → logprob: -10.504837036132812
    9. 'p' → logprob: -11.004837036132812
    10. ' b' → logprob: -11.129837036132812

Token 501: '_e' (ID: 4618)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759463906288147
    2. ' =' → logprob: -0.8259463906288147
    3. ',' → logprob: -12.325946807861328
    4. '=b' → logprob: -14.950946807861328
    5. 'b' → logprob: -15.200946807861328
    6. '=

' → logprob: -15.450946807861328
    7. '=int' → logprob: -15.575946807861328
    8. '=
' → logprob: -15.575946807861328
    9. ' ' → logprob: -15.950946807861328
    10. ')' → logprob: -15.950946807861328

Token 502: 'lems' (ID: 80287)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.0060118436813354
    2. 'xp' → logprob: -1.0060118436813354
    3. 'lem' → logprob: -2.631011962890625
    4. '=' → logprob: -2.756011962890625
    5. 'lems' → logprob: -2.756011962890625
    6. 'x' → logprob: -3.756011962890625
    7. 'val' → logprob: -4.131011962890625
    8. ' =' → logprob: -4.131011962890625
    9. 'lements' → logprob: -5.006011962890625
    10. 'lse' → logprob: -6.506011962890625

Token 503: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10021594911813736
    2. ' =' → logprob: -2.3502159118652344
    3. '=[' → logprob: -12.350215911865234
    4. 'b' → logprob: -13.725215911865234
    5. '=[
' → logprob: -13.975215911865234
    6. '=
' → logprob: -14.350215911865234
    7. '=list' → logprob: -14.600215911865234
    8. '=[]' → logprob: -14.600215911865234
    9. '=b' → logprob: -14.725215911865234
    10. ' =[' → logprob: -15.100215911865234

Token 504: ' (' (ID: 350)
  Prédit: '(com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(com' → logprob: -0.7226508855819702
    2. '(re' → logprob: -1.4726508855819702
    3. '[(' → logprob: -2.8476510047912598
    4. '(chain' → logprob: -3.0976510047912598
    5. '(m' → logprob: -3.5976510047912598
    6. '[' → logprob: -3.8476510047912598
    7. '(i' → logprob: -3.9726510047912598
    8. '(map' → logprob: -3.9726510047912598
    9. '((' → logprob: -4.09765100479126
    10. '(filter' → logprob: -4.34765100479126

Token 505: 'fact' (ID: 53534)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.5390834808349609
    2. '(com' → logprob: -1.539083480834961
    3. 'pow' → logprob: -2.164083480834961
    4. 'fact' → logprob: -3.164083480834961
    5. 'fin' → logprob: -4.164083480834961
    6. '(pow' → logprob: -4.664083480834961
    7. '(m' → logprob: -5.414083480834961
    8. 'inv' → logprob: -5.914083480834961
    9. '((' → logprob: -6.289083480834961
    10. '(f' → logprob: -6.289083480834961

Token 506: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0009387354948557913
    2. '[n' → logprob: -7.250938892364502
    3. '(n' → logprob: -8.500938415527344
    4. '[' → logprob: -12.500938415527344
    5. '[(' → logprob: -13.125938415527344
    6. '[u' → logprob: -13.125938415527344
    7. '[i' → logprob: -13.375938415527344
    8. 'List' → logprob: -13.500938415527344
    9. '(' → logprob: -13.500938415527344
    10. '[m' → logprob: -13.625938415527344

Token 507: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.1947566419839859
    2. '[y' → logprob: -2.3197567462921143
    3. '[i' → logprob: -3.1947567462921143
    4. '[x' → logprob: -4.069756507873535
    5. '[m' → logprob: -4.444756507873535
    6. '[' → logprob: -5.194756507873535
    7. '[v' → logprob: -7.694756507873535
    8. '[k' → logprob: -7.819756507873535
    9. '[q' → logprob: -7.819756507873535
    10. 'y' → logprob: -7.944756507873535

Token 508: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.346003532409668
    2. '+' → logprob: -1.596003532409668
    3. '[n' → logprob: -1.596003532409668
    4. '[i' → logprob: -2.471003532409668
    5. ' +' → logprob: -2.846003532409668
    6. '[' → logprob: -3.221003532409668
    7. ']' → logprob: -3.346003532409668
    8. '[x' → logprob: -3.596003532409668
    9. ' -' → logprob: -3.971003532409668
    10. '[y' → logprob: -4.471003532409668

Token 509: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011833232128992677
    2. 'm' → logprob: -7.37618350982666
    3. 'i' → logprob: -8.75118350982666
    4. 'x' → logprob: -9.25118350982666
    5. '(' → logprob: -9.37618350982666
    6. ' ' → logprob: -9.50118350982666
    7. '2' → logprob: -10.12618350982666
    8. 'a' → logprob: -11.00118350982666
    9. '   ' → logprob: -11.12618350982666
    10. 'b' → logprob: -11.12618350982666

Token 510: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00021605310030281544
    2. 'm' → logprob: -9.000216484069824
    3. '2' → logprob: -10.625216484069824
    4. 'i' → logprob: -11.125216484069824
    5. ']' → logprob: -11.625216484069824
    6. ' ' → logprob: -11.750216484069824
    7. '
' → logprob: -11.875216484069824
    8. '(' → logprob: -11.875216484069824
    9. '```' → logprob: -12.375216484069824
    10. 'a' → logprob: -13.062716484069824

Token 511: ' +' (ID: 659)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0004564135451801121
    2. '   ' → logprob: -8.875456809997559
    3. ']*' → logprob: -9.625456809997559
    4. ']
' → logprob: -9.875456809997559
    5. '-' → logprob: -10.125456809997559
    6. ' ' → logprob: -10.375456809997559
    7. ' ]' → logprob: -10.375456809997559
    8. ' -' → logprob: -10.875456809997559
    9. '*' → logprob: -11.000456809997559
    10. '+' → logprob: -11.750456809997559

Token 512: ' m' (ID: 284)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8096351623535156
    2. 'm' → logprob: -1.3096351623535156
    3. 'x' → logprob: -2.0596351623535156
    4. '(' → logprob: -3.1846351623535156
    5. '3' → logprob: -3.3096351623535156
    6. '2' → logprob: -3.6846351623535156
    7. 'k' → logprob: -4.059635162353516
    8. '(i' → logprob: -4.434635162353516
    9. '(m' → logprob: -4.434635162353516
    10. 'n' → logprob: -5.809635162353516

Token 513: ' -' (ID: 533)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006938787177205086
    2. ' -' → logprob: -5.381938934326172
    3. '-' → logprob: -6.381938934326172
    4. '+' → logprob: -8.756938934326172
    5. '-i' → logprob: -9.131938934326172
    6. '   ' → logprob: -9.381938934326172
    7. '-k' → logprob: -9.756938934326172
    8. ']
' → logprob: -10.131938934326172
    9. ' +' → logprob: -10.256938934326172
    10. ' ]' → logprob: -10.381938934326172

Token 514: ' ' (ID: 220)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4263897240161896
    2. 'x' → logprob: -1.1763896942138672
    3. 'k' → logprob: -3.301389694213867
    4. 'j' → logprob: -7.176389694213867
    5. 'q' → logprob: -7.301389694213867
    6. 'y' → logprob: -9.301389694213867
    7. '   ' → logprob: -10.176389694213867
    8. ']' → logprob: -10.301389694213867
    9. ' i' → logprob: -10.551389694213867
    10. 'c' → logprob: -10.551389694213867

Token 515: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3008907437324524
    2. 'x' → logprob: -1.5508906841278076
    3. 'k' → logprob: -3.1758906841278076
    4. 'j' → logprob: -5.800890922546387
    5. 'q' → logprob: -6.175890922546387
    6. 'y' → logprob: -8.425890922546387
    7. '2' → logprob: -8.925890922546387
    8. '1' → logprob: -9.300890922546387
    9. 'c' → logprob: -9.800890922546387
    10. 't' → logprob: -10.050890922546387

Token 516: '],
' (ID: 2274)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0003712085890583694
    2. ' -' → logprob: -8.750370979309082
    3. '-' → logprob: -9.500370979309082
    4. '   ' → logprob: -10.125370979309082
    5. ']
' → logprob: -10.375370979309082
    6. ' ]' → logprob: -11.125370979309082
    7. '+' → logprob: -11.500370979309082
    8. ']*' → logprob: -11.500370979309082
    9. '],' → logprob: -11.750370979309082
    10. ' ' → logprob: -12.500370979309082

Token 517: '          ' (ID: 3550)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fin' → logprob: -0.5005214214324951
    2. ' fin' → logprob: -1.2505214214324951
    3. ' fact' → logprob: -2.750521421432495
    4. 'fact' → logprob: -3.375521421432495
    5. ' inv' → logprob: -5.375521659851074
    6. 'inv' → logprob: -6.125521659851074
    7. 'pow' → logprob: -6.625521659851074
    8. ' pow' → logprob: -7.500521659851074
    9. ' ' → logprob: -8.750521659851074
    10. ' mod' → logprob: -8.875521659851074

Token 518: ' fin' (ID: 2131)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fin' (adapté à ' fin') → logprob: -0.32244759798049927
    2. 'fact' → logprob: -1.5724475383758545
    3. ' fact' → logprob: -3.4474475383758545
    4. ' fin' → logprob: -3.6974475383758545
    5. 'inv' → logprob: -5.197447776794434
    6. 'pow' → logprob: -5.697447776794434
    7. ' inv' → logprob: -6.697447776794434
    8. ' ' → logprob: -8.572447776794434
    9. 'com' → logprob: -8.572447776794434
    10. 'mod' → logprob: -8.947447776794434

Token 519: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -5.9153885558771435e-06
    2. 'inv' → logprob: -13.750005722045898
    3. 'x' → logprob: -14.250005722045898
    4. '
' → logprob: -14.375005722045898
    5. '_v' → logprob: -14.750005722045898
    6. 'ev' → logprob: -15.125005722045898
    7. '_list' → logprob: -15.375005722045898
    8. '

' → logprob: -15.375005722045898
    9. '```' → logprob: -15.437505722045898
    10. 'f' → logprob: -15.687505722045898

Token 520: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -8.895480277715251e-06
    2. '[_' → logprob: -13.250008583068848
    3. '[' → logprob: -13.375008583068848
    4. '[n' → logprob: -13.500008583068848
    5. '[m' → logprob: -14.125008583068848
    6. 'e' → logprob: -14.250008583068848
    7. '_' → logprob: -14.625008583068848
    8. 'list' → logprob: -14.875008583068848
    9. ' _' → logprob: -15.000008583068848
    10. '_e' → logprob: -15.500008583068848

Token 521: '[n' (ID: 15433)
  Prédit: '[m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[m' → logprob: -0.013201413676142693
    2. '[n' → logprob: -4.3882012367248535
    3. '[b' → logprob: -7.6382012367248535
    4. '[' → logprob: -9.138201713562012
    5. 'm' → logprob: -10.513201713562012
    6. ' [' → logprob: -10.888201713562012
    7. '[
' → logprob: -11.513201713562012
    8. '           ' → logprob: -12.013201713562012
    9. '       ' → logprob: -12.263201713562012
    10. '   ' → logprob: -12.638201713562012

Token 522: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.12988750636577606
    2. ' -' → logprob: -2.129887580871582
    3. 'e' → logprob: -7.754887580871582
    4. 'm' → logprob: -7.754887580871582
    5. '   ' → logprob: -7.879887580871582
    6. '+' → logprob: -7.879887580871582
    7. '           ' → logprob: -8.379887580871582
    8. '[' → logprob: -8.754887580871582
    9. '       ' → logprob: -8.879887580871582
    10. '],' → logprob: -9.129887580871582

Token 523: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003335585934109986
    2. 'm' → logprob: -8.625333786010742
    3. '2' → logprob: -8.875333786010742
    4. ' ' → logprob: -12.125333786010742
    5. '   ' → logprob: -12.875333786010742
    6. '
' → logprob: -13.187833786010742
    7. '           ' → logprob: -14.625333786010742
    8. '       ' → logprob: -15.062833786010742
    9. ' m' → logprob: -15.125333786010742
    10. '```' → logprob: -15.125333786010742

Token 524: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001205893131555058
    2. 'm' → logprob: -9.625120162963867
    3. '2' → logprob: -10.125120162963867
    4. ' ' → logprob: -12.000120162963867
    5. '
' → logprob: -12.750120162963867
    6. '   ' → logprob: -13.000120162963867
    7. '           ' → logprob: -14.750120162963867
    8. '```' → logprob: -14.812620162963867
    9. '       ' → logprob: -14.937620162963867
    10. '(m' → logprob: -15.500120162963867

Token 525: '],
' (ID: 2274)
  Prédit: '],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.31524986028671265
    2. '],
' → logprob: -1.5652499198913574
    3. '+' → logprob: -3.0652499198913574
    4. ']' → logprob: -5.190249919891357
    5. '])' → logprob: -5.690249919891357
    6. '+m' → logprob: -6.190249919891357
    7. ' +' → logprob: -7.065249919891357
    8. '],

' → logprob: -7.190249919891357
    9. '+b' → logprob: -7.440249919891357
    10. '-' → logprob: -7.940249919891357

Token 526: '          ' (ID: 3550)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fin' → logprob: -0.31864482164382935
    2. ' fin' → logprob: -1.4436447620391846
    3. '          ' → logprob: -3.3186447620391846
    4. 'inv' → logprob: -8.693644523620605
    5. 'b' → logprob: -9.443644523620605
    6. ' inv' → logprob: -9.568644523620605
    7. '           ' → logprob: -9.818644523620605
    8. '      ' → logprob: -10.568644523620605
    9. 'fact' → logprob: -10.568644523620605
    10. '         ' → logprob: -10.818644523620605

Token 527: ' fin' (ID: 2131)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fin' (adapté à ' fin') → logprob: -0.004955866374075413
    2. 'fact' → logprob: -6.004955768585205
    3. ' fin' → logprob: -6.254955768585205
    4. 'inv' → logprob: -7.879955768585205
    5. '   ' → logprob: -10.129956245422363
    6. '  ' → logprob: -10.379956245422363
    7. ' ' → logprob: -11.004956245422363
    8. 'mod' → logprob: -11.129956245422363
    9. 'f' → logprob: -11.504956245422363
    10. ' fact' → logprob: -11.754956245422363

Token 528: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -4.320199877838604e-07
    2. '_list' → logprob: -15.625
    3. '_v' → logprob: -16.625
    4. '```' → logprob: -16.75
    5. 'inv' → logprob: -16.875
    6. '   ' → logprob: -17.75
    7. '_' → logprob: -18.25
    8. 'vs' → logprob: -18.25
    9. 'ev' → logprob: -18.75
    10. 'в' → logprob: -18.875

Token 529: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -7.226628895296017e-06
    2. 'list' → logprob: -12.125007629394531
    3. 'List' → logprob: -14.000007629394531
    4. 'ist' → logprob: -14.500007629394531
    5. 'v' → logprob: -15.750007629394531
    6. 'b' → logprob: -16.37500762939453
    7. 'e' → logprob: -16.87500762939453
    8. 'f' → logprob: -17.12500762939453
    9. '_LIST' → logprob: -17.62500762939453
    10. 'm' → logprob: -18.37500762939453

Token 530: '[m' (ID: 29271)
  Prédit: '[m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[m' → logprob: -9.031157969729975e-05
    2. 'm' → logprob: -9.875090599060059
    3. '[' → logprob: -10.750090599060059
    4. '[b' → logprob: -11.625090599060059
    5. '[n' → logprob: -12.750090599060059
    6. '   ' → logprob: -13.875090599060059
    7. '[
' → logprob: -14.000090599060059
    8. ' [' → logprob: -14.375090599060059
    9. '           ' → logprob: -14.375090599060059
    10. '       ' → logprob: -14.750090599060059

Token 531: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.18017925322055817
    2. ' -' → logprob: -1.805179238319397
    3. '])' → logprob: -8.555179595947266
    4. '1' → logprob: -9.055179595947266
    5. ' ' → logprob: -10.180179595947266
    6. ']),' → logprob: -10.555179595947266
    7. ']' → logprob: -11.305179595947266
    8. '   ' → logprob: -11.305179595947266
    9. '[' → logprob: -12.180179595947266
    10. '],' → logprob: -12.555179595947266

Token 532: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.080963092041202e-06
    2. ' ' → logprob: -12.375004768371582
    3. '2' → logprob: -14.250004768371582
    4. ']' → logprob: -16.5000057220459
    5. '   ' → logprob: -16.9375057220459
    6. '```' → logprob: -17.3750057220459
    7. '(' → logprob: -17.6875057220459
    8. '۱' → logprob: -17.9375057220459
    9. ')' → logprob: -18.3750057220459
    10. '１' → logprob: -18.3750057220459

Token 533: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -13.500001907348633
    3. '2' → logprob: -15.000001907348633
    4. '   ' → logprob: -17.500001907348633
    5. '11' → logprob: -18.375001907348633
    6. '
' → logprob: -18.437501907348633
    7. '```' → logprob: -18.562501907348633
    8. '-' → logprob: -19.062501907348633
    9. '۱' → logprob: -19.125001907348633
    10. '(' → logprob: -19.312501907348633

Token 534: '],
' (ID: 2274)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.16250640153884888
    2. ')' → logprob: -1.912506341934204
    3. ']' → logprob: -6.662506580352783
    4. ',' → logprob: -7.912506580352783
    5. ')])' → logprob: -8.662506103515625
    6. ',
' → logprob: -8.787506103515625
    7. '          ' → logprob: -9.162506103515625
    8. '])
' → logprob: -10.162506103515625
    9. ' ])' → logprob: -10.412506103515625
    10. ')
' → logprob: -10.662506103515625

Token 535: '          ' (ID: 3550)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06595496088266373
    2. '          ' → logprob: -3.4409549236297607
    3. 'mod' → logprob: -4.56595516204834
    4. 'fact' → logprob: -4.69095516204834
    5. 'pow' → logprob: -5.94095516204834
    6. '1' → logprob: -6.06595516204834
    7. 'mul' → logprob: -6.56595516204834
    8. 'm' → logprob: -6.81595516204834
    9. 'n' → logprob: -7.31595516204834
    10. ')
' → logprob: -7.69095516204834

Token 536: ' n' (ID: 297)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.9924324154853821
    2. 'fact' → logprob: -1.2424323558807373
    3. 'mod' → logprob: -2.1174323558807373
    4. 'inv' → logprob: -2.4924323558807373
    5. ')' → logprob: -2.7424323558807373
    6. 'com' → logprob: -4.117432594299316
    7. 'fin' → logprob: -4.367432594299316
    8. 'm' → logprob: -4.492432594299316
    9. 'mul' → logprob: -5.242432594299316
    10. 'n' (adapté à ' n') → logprob: -5.367432594299316

Token 537: ')
' (ID: 446)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2401236891746521
    2. '*' → logprob: -2.615123748779297
    3. ' -' → logprob: -2.990123748779297
    4. '+' → logprob: -3.240123748779297
    5. ')' → logprob: -3.740123748779297
    6. ' *' → logprob: -4.365123748779297
    7. ' +' → logprob: -5.115123748779297
    8. ',' → logprob: -5.865123748779297
    9. '])' → logprob: -6.990123748779297
    10. '   ' → logprob: -7.115123748779297

Token 538: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.22550377249717712
    2. '*' → logprob: -2.35050368309021
    3. ')' → logprob: -3.22550368309021
    4. '*
' → logprob: -4.225503921508789
    5. 'result' → logprob: -4.225503921508789
    6. '#' → logprob: -4.725503921508789
    7. 'prod' → logprob: -5.350503921508789
    8. 'for' → logprob: -5.600503921508789
    9. '```' → logprob: -5.850503921508789
    10. 'from' → logprob: -5.975503921508789

Token 539: ' =' (ID: 314)
  Prédit: '_val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.4135248363018036
    2. ' =' → logprob: -1.663524866104126
    3. '_prod' → logprob: -2.288524866104126
    4. '_vals' → logprob: -4.288524627685547
    5. '_product' → logprob: -5.038524627685547
    6. '_a' → logprob: -5.288524627685547
    7. '=' → logprob: -5.538524627685547
    8. '_mul' → logprob: -5.913524627685547
    9. 'prod' → logprob: -6.038524627685547
    10. '_res' → logprob: -6.163524627685547

Token 540: ' reduce' (ID: 10389)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.01997029222548008
    2. ' reduce' → logprob: -5.269970417022705
    3. '(re' → logprob: -5.394970417022705
    4. 'fact' → logprob: -5.519970417022705
    5. '(b' → logprob: -6.269970417022705
    6. '1' → logprob: -6.769970417022705
    7. '(' → logprob: -6.894970417022705
    8. 'b' → logprob: -7.144970417022705
    9. '(f' → logprob: -7.644970417022705
    10. '((' → logprob: -8.894969940185547

Token 541: '(lambda' (ID: 43341)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.0032305908389389515
    2. '(lambda' → logprob: -5.753230571746826
    3. '(operator' → logprob: -10.128231048583984
    4. 'mul' → logprob: -12.128231048583984
    5. '(' → logprob: -12.503231048583984
    6. '((' → logprob: -13.628231048583984
    7. 'm' → logprob: -14.128231048583984
    8. '```' → logprob: -14.878231048583984
    9. 'operator' → logprob: -15.003231048583984
    10. 'lambda' → logprob: -15.378231048583984

Token 542: ' p' (ID: 275)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.056400902569293976
    2. 'a' → logprob: -3.681401014328003
    3. 'lambda' → logprob: -4.181400775909424
    4. ' x' → logprob: -4.931400775909424
    5. 'mul' → logprob: -5.056400775909424
    6. ' a' → logprob: -7.931400775909424
    7. ' lambda' → logprob: -8.181401252746582
    8. '(lambda' → logprob: -9.681401252746582
    9. ' mul' → logprob: -11.181401252746582
    10. 'acc' → logprob: -11.306401252746582

Token 543: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00029840084607712924
    2. ',x' → logprob: -8.750298500061035
    3. 'x' → logprob: -10.000298500061035
    4. ' ,' → logprob: -10.250298500061035
    5. ',p' → logprob: -10.375298500061035
    6. ',m' → logprob: -11.875298500061035
    7. 'a' → logprob: -12.250298500061035
    8. 'p' → logprob: -12.250298500061035
    9. ',b' → logprob: -13.125298500061035
    10. ',a' → logprob: -13.250298500061035

Token 544: ' q' (ID: 2335)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.14985746145248413
    2. 'mul' → logprob: -2.274857521057129
    3. '(lambda' → logprob: -3.774857521057129
    4. ' lambda' → logprob: -4.399857521057129
    5. 'm' → logprob: -7.024857521057129
    6. '(m' → logprob: -9.024857521057129
    7. 'q' → logprob: -9.649857521057129
    8. ' mul' → logprob: -10.524857521057129
    9. '   ' → logprob: -11.399857521057129
    10. 'mu' → logprob: -12.274857521057129

Token 545: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0076483916491270065
    2. ':' → logprob: -5.507648468017578
    3. ',p' → logprob: -5.757648468017578
    4. ' ,' → logprob: -8.007648468017578
    5. 'p' → logprob: -10.132648468017578
    6. ' :' → logprob: -11.257648468017578
    7. ':p' → logprob: -12.007648468017578
    8. ',(' → logprob: -12.507648468017578
    9. '   ' → logprob: -13.132648468017578
    10. ' p' → logprob: -13.507648468017578

Token 546: ' (' (ID: 350)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.061673182994127274
    2. ' (' → logprob: -2.936673164367676
    3. 'p' → logprob: -5.061673164367676
    4. ' p' → logprob: -8.561673164367676
    5. '(lambda' → logprob: -8.686673164367676
    6. '(' → logprob: -9.811673164367676
    7. 'lambda' → logprob: -12.311673164367676
    8. '   ' → logprob: -12.436673164367676
    9. '  ' → logprob: -12.811673164367676
    10. ' ' → logprob: -12.936673164367676

Token 547: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00038598617538809776
    2. '(p' → logprob: -8.250386238098145
    3. ' p' → logprob: -9.000386238098145
    4. ' (' → logprob: -13.625386238098145
    5. '	p' → logprob: -16.875385284423828
    6. '   ' → logprob: -17.000385284423828
    7. '  ' → logprob: -17.750385284423828
    8. ' ' → logprob: -17.750385284423828
    9. '```' → logprob: -18.125385284423828
    10. ' ' → logprob: -18.250385284423828

Token 548: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.16024748980998993
    2. '*' → logprob: -1.9102474451065063
    3. '*p' → logprob: -11.285247802734375
    4. '*q' → logprob: -11.785247802734375
    5. ' ' → logprob: -13.160247802734375
    6. '*b' → logprob: -14.535247802734375
    7. ' ' → logprob: -14.910247802734375
    8. '```' → logprob: -16.035247802734375
    9. '**' → logprob: -16.910247802734375
    10. '%' → logprob: -17.535247802734375

Token 549: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.023252932354807854
    2. ' q' → logprob: -3.7732529640197754
    3. ' ' → logprob: -12.398252487182617
    4. '(q' → logprob: -13.398252487182617
    5. '	q' → logprob: -14.398252487182617
    6. '   ' → logprob: -15.023252487182617
    7. '  ' → logprob: -15.398252487182617
    8. ')' → logprob: -15.898252487182617
    9. '```' → logprob: -15.898252487182617
    10. ' (' → logprob: -16.023252487182617

Token 550: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001249925117008388
    2. ' )' → logprob: -9.87512493133545
    3. ')%' → logprob: -9.87512493133545
    4. '%' → logprob: -11.12512493133545
    5. ' %' → logprob: -12.00012493133545
    6. '   ' → logprob: -15.12512493133545
    7. ')
' → logprob: -15.12512493133545
    8. '```' → logprob: -15.62512493133545
    9. ' ' → logprob: -16.375125885009766
    10. '[' → logprob: -16.875125885009766

Token 551: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.3132660686969757
    2. '%' → logprob: -1.3132660388946533
    3. ')' → logprob: -13.063265800476074
    4. ' ' → logprob: -14.313265800476074
    5. ')%' → logprob: -14.688265800476074
    6. '%b' → logprob: -15.063265800476074
    7. '%m' → logprob: -15.188265800476074
    8. '%n' → logprob: -15.938265800476074
    9. '   ' → logprob: -16.43826675415039
    10. '```' → logprob: -16.43826675415039

Token 552: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.00033558503491804004
    2. ' mod' → logprob: -8.000335693359375
    3. '998' → logprob: -16.375335693359375
    4. '(mod' → logprob: -18.500335693359375
    5. ' ' → logprob: -18.625335693359375
    6. '	mod' → logprob: -19.750335693359375
    7. '```' → logprob: -20.375335693359375
    8. '999' → logprob: -21.500335693359375
    9. 'moder' → logprob: -21.750335693359375
    10. '
' → logprob: -21.875335693359375

Token 553: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018384292721748352
    2. 'b' → logprob: -4.2683844566345215
    3. ' ,' → logprob: -6.1433844566345215
    4. ' b' → logprob: -6.3933844566345215
    5. ',b' → logprob: -8.018383979797363
    6. ')' → logprob: -11.018383979797363
    7. '_,' → logprob: -11.143383979797363
    8. ',
' → logprob: -11.893383979797363
    9. '  ' → logprob: -12.893383979797363
    10. ' ' → logprob: -13.143383979797363

Token 554: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0024839844554662704
    2. ' b' → logprob: -6.00248384475708
    3. '   ' → logprob: -12.502484321594238
    4. 'chain' → logprob: -12.877484321594238
    5. ' chain' → logprob: -14.502484321594238
    6. '	b' → logprob: -14.627484321594238
    7. ' ' → logprob: -14.752484321594238
    8. '    ' → logprob: -15.252484321594238
    9. '  ' → logprob: -15.502484321594238
    10. '           ' → logprob: -16.377483367919922

Token 555: '_e' (ID: 4618)
  Prédit: '_e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_e' → logprob: -0.02113324962556362
    2. '_b' → logprob: -4.6461334228515625
    3. 'b' → logprob: -4.8961334228515625
    4. 'e' → logprob: -5.7711334228515625
    5. 'ele' → logprob: -7.7711334228515625
    6. 's' → logprob: -9.146133422851562
    7. '_elements' → logprob: -9.146133422851562
    8. ')' → logprob: -11.646133422851562
    9. '```' → logprob: -11.646133422851562
    10. '_items' → logprob: -11.771133422851562

Token 556: 'lems' (ID: 80287)
  Prédit: 'lems'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lems' → logprob: -0.0006838412955403328
    2. 'le' → logprob: -7.375683784484863
    3. 'l' → logprob: -9.875683784484863
    4. 'lem' → logprob: -13.375683784484863
    5. 'lev' → logprob: -13.625683784484863
    6. 'ls' → logprob: -13.750683784484863
    7. 'lements' → logprob: -15.000683784484863
    8. 'nums' → logprob: -15.500683784484863
    9. '[' → logprob: -15.625683784484863
    10. 'ms' → logprob: -15.750683784484863

Token 557: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008548821206204593
    2. ',' → logprob: -7.125854969024658
    3. ' )' → logprob: -10.0008544921875
    4. ')%' → logprob: -13.3758544921875
    5. ')
' → logprob: -13.5008544921875
    6. ')b' → logprob: -14.2508544921875
    7. '))' → logprob: -15.1258544921875
    8. ' ,' → logprob: -15.5008544921875
    9. ')#' → logprob: -15.6258544921875
    10. ',)' → logprob: -15.6258544921875

Token 558: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.6934557505883276e-05
    2. ' ' → logprob: -9.875057220458984
    3. 'n' → logprob: -13.125057220458984
    4. '   ' → logprob: -13.750057220458984
    5. 'fact' → logprob: -14.000057220458984
    6. 'b' → logprob: -14.375057220458984
    7. 'a' → logprob: -15.125057220458984
    8. '  ' → logprob: -16.125057220458984
    9. '2' → logprob: -16.250057220458984
    10. 'mod' → logprob: -16.375057220458984

Token 559: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0087516784551553e-05
    2. ' ' → logprob: -11.62501049041748
    3. '   ' → logprob: -14.50001049041748
    4. 'n' → logprob: -15.37501049041748
    5. 'b' → logprob: -16.750009536743164
    6. '  ' → logprob: -16.750009536743164
    7. 'a' → logprob: -17.187509536743164
    8. 'fact' → logprob: -17.500009536743164
    9. '```' → logprob: -17.562509536743164
    10. 'int' → logprob: -17.687509536743164

Token 560: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.8889261304575484e-06
    2. ')
' → logprob: -13.125003814697266
    3. ')#' → logprob: -15.000003814697266
    4. ' )' → logprob: -15.125003814697266
    5. ')b' → logprob: -15.250003814697266
    6. ')*' → logprob: -15.625003814697266
    7. ')`' → logprob: -16.000003814697266
    8. '*' → logprob: -16.125003814697266
    9. '+' → logprob: -16.125003814697266
    10. ')**' → logprob: -16.125003814697266

Token 561: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0020391526632010937
    2. 'c' → logprob: -7.627038955688477
    3. 'result' → logprob: -7.752038955688477
    4. 'a' → logprob: -7.752038955688477
    5. '#' → logprob: -8.127038955688477
    6. 'b' → logprob: -8.377038955688477
    7. 'n' → logprob: -9.752038955688477
    8. 'for' → logprob: -10.252038955688477
    9. ')' → logprob: -10.877038955688477
    10. 'answer' → logprob: -11.502038955688477

Token 562: ' Solution' (ID: 20858)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.003646399360150099
    2. 'result' → logprob: -5.753646373748779
    3. 'a' → logprob: -8.753646850585938
    4. 'c' → logprob: -9.503646850585938
    5. 'ans' → logprob: -9.628646850585938
    6. 'res' → logprob: -9.628646850585938
    7. 'answer' → logprob: -10.253646850585938
    8. 'b' → logprob: -10.628646850585938
    9. 'for' → logprob: -10.628646850585938
    10. 'if' → logprob: -11.628646850585938

Token 563: ' finale' (ID: 37759)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.003912645857781172
    2. 'result' → logprob: -6.128912448883057
    3. 'ans' → logprob: -7.128912448883057
    4. 'answer' → logprob: -7.628912448883057
    5. 'a' → logprob: -8.253912925720215
    6. 'res' → logprob: -9.628912925720215
    7. 'c' → logprob: -9.878912925720215
    8. 's' → logprob: -11.003912925720215
    9. 'solution' → logprob: -11.003912925720215
    10. '```' → logprob: -11.628912925720215

Token 564: ' par' (ID: 686)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.668304245569743e-05
    2. 'result' → logprob: -10.750046730041504
    3. '
' → logprob: -11.125046730041504
    4. '```' → logprob: -12.625046730041504
    5. 'a' → logprob: -13.000046730041504
    6. 'ans' → logprob: -13.375046730041504
    7. ' print' → logprob: -13.625046730041504
    8. 'answer' → logprob: -14.500046730041504
    9. 'c' → logprob: -14.750046730041504
    10. ')
' → logprob: -15.500046730041504

Token 565: ' une' (ID: 2463)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0005779353086836636
    2. '(a' → logprob: -8.500577926635742
    3. 'a' → logprob: -8.875577926635742
    4. '(print' → logprob: -9.000577926635742
    5. ' print' → logprob: -9.500577926635742
    6. '(n' → logprob: -11.750577926635742
    7. '(' → logprob: -12.250577926635742
    8. '(m' → logprob: -12.250577926635742
    9. ' (' → logprob: -12.500577926635742
    10. 'b' → logprob: -12.750577926635742

Token 566: ' combinaison' (ID: 165933)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.35733580589294434
    2. 'lambda' → logprob: -2.6073358058929443
    3. '(m' → logprob: -2.7323358058929443
    4. 'def' → logprob: -3.2323358058929443
    5. '(a' → logprob: -3.3573358058929443
    6. '(' → logprob: -4.107336044311523
    7. 'print' → logprob: -4.482336044311523
    8. 'a' → logprob: -4.607336044311523
    9. '(n' → logprob: -4.607336044311523
    10. 'mul' → logprob: -4.982336044311523

Token 567: ' de' (ID: 334)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.014169389382004738
    2. 'result' → logprob: -4.389169216156006
    3. '
' → logprob: -7.389169216156006
    4. 'ans' → logprob: -7.889169216156006
    5. 'answer' → logprob: -8.639169692993164
    6. '```' → logprob: -8.639169692993164
    7. 'res' → logprob: -9.764169692993164
    8. 'final' → logprob: -9.764169692993164
    9. ' print' → logprob: -9.889169692993164
    10. 'c' → logprob: -10.264169692993164

Token 568: ' lambda' (ID: 27871)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.011098519898951054
    2. '(m' → logprob: -5.511098384857178
    3. '((' → logprob: -6.136098384857178
    4. ' (' → logprob: -6.261098384857178
    5. 'a' → logprob: -6.386098384857178
    6. '(com' → logprob: -7.761098384857178
    7. '(' → logprob: -8.886098861694336
    8. '(lambda' → logprob: -8.886098861694336
    9. '(n' → logprob: -9.011098861694336
    10. '(add' → logprob: -9.386098861694336

Token 569: ' et' (ID: 859)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.5347376465797424
    2. 'final' → logprob: -1.7847375869750977
    3. 'result' → logprob: -2.5347375869750977
    4. 'solve' → logprob: -3.1597375869750977
    5. 'combine' → logprob: -3.1597375869750977
    6. 'res' → logprob: -4.284737586975098
    7. 'ans' → logprob: -4.284737586975098
    8. 'print' → logprob: -4.534737586975098
    9. 'calc' → logprob: -4.534737586975098
    10. 'solution' → logprob: -4.909737586975098

Token 570: ' d' (ID: 272)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.11463239043951035
    2. ' reduce' → logprob: -3.3646323680877686
    3. 'com' → logprob: -3.7396323680877686
    4. 'map' → logprob: -3.9896323680877686
    5. 'mak' → logprob: -4.864632606506348
    6. 'def' → logprob: -5.239632606506348
    7. 'sum' → logprob: -6.239632606506348
    8. 'print' → logprob: -6.489632606506348
    9. 'f' → logprob: -6.489632606506348
    10. 'a' → logprob: -6.739632606506348

Token 571: ''op' (ID: 70747)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.05373455956578255
    2. ' reduce' → logprob: -4.80373477935791
    3. 'a' → logprob: -5.05373477935791
    4. 'com' → logprob: -5.05373477935791
    5. 'acc' → logprob: -5.17873477935791
    6. 'map' → logprob: -5.30373477935791
    7. 'filter' → logprob: -6.17873477935791
    8. 'print' → logprob: -6.30373477935791
    9. ''acc' → logprob: -6.42873477935791
    10. 'f' → logprob: -6.67873477935791

Token 572: 'ér' (ID: 2156)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.44048523902893066
    2. 't' → logprob: -1.5654852390289307
    3. 'com' → logprob: -2.3154852390289307
    4. '(com' → logprob: -3.8154852390289307
    5. 'def' → logprob: -5.565485000610352
    6. '(lambda' → logprob: -6.565485000610352
    7. 'a' → logprob: -6.690485000610352
    8. 'en' → logprob: -6.815485000610352
    9. '=' → logprob: -6.940485000610352
    10. 'r' → logprob: -6.940485000610352

Token 573: 'ateurs' (ID: 19727)
  Prédit: 'ateur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ateur' → logprob: -0.5846363306045532
    2. 'ateurs' → logprob: -1.2096363306045532
    3. 'ator' → logprob: -2.7096362113952637
    4. 'ations' → logprob: -2.9596362113952637
    5. 'ate' → logprob: -3.9596362113952637
    6. 'ators' → logprob: -5.959636211395264
    7. '```' → logprob: -6.584636211395264
    8. 'érateur' → logprob: -6.834636211395264
    9. 'er' → logprob: -7.584636211395264
    10. 'ater' → logprob: -8.834636688232422

Token 574: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.8484804630279541
    2. 'result' → logprob: -1.348480463027954
    3. 'ans' → logprob: -1.473480463027954
    4. 'res' → logprob: -2.973480463027954
    5. 'answer' → logprob: -4.098480224609375
    6. 'final' → logprob: -4.598480224609375
    7. 'c' → logprob: -5.973480224609375
    8. ' ans' → logprob: -7.098480224609375
    9. 'f' → logprob: -7.473480224609375
    10. 'solution' → logprob: -7.973480224609375

Token 575: 'ans' (ID: 616)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.043049197643995285
    2. 'result' → logprob: -3.6680490970611572
    3. 'ans' → logprob: -4.293049335479736
    4. 'answer' → logprob: -6.543049335479736
    5. 'res' → logprob: -6.793049335479736
    6. 'solve' → logprob: -8.918048858642578
    7. 'c' → logprob: -9.543048858642578
    8. 'final' → logprob: -9.668048858642578
    9. 'solution' → logprob: -9.793048858642578
    10. 's' → logprob: -11.043048858642578

Token 576: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132668435573578
    2. '=' → logprob: -1.3132668733596802
    3. ' =
' → logprob: -13.31326675415039
    4. ',' → logprob: -14.43826675415039
    5. '=
' → logprob: -14.56326675415039
    6. ')' → logprob: -14.68826675415039
    7. '```' → logprob: -14.93826675415039
    8. ' ' → logprob: -15.06326675415039
    9. ' ' → logprob: -15.31326675415039
    10. '_' → logprob: -15.56326675415039

Token 577: ' (' (ID: 350)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.007519550155848265
    2. '(lambda' → logprob: -5.757519721984863
    3. '((' → logprob: -6.007519721984863
    4. ' (' → logprob: -6.757519721984863
    5. '(com' → logprob: -8.507519721984863
    6. '(' → logprob: -9.007519721984863
    7. '(b' → logprob: -9.257519721984863
    8. 'a' → logprob: -9.257519721984863
    9. '(m' → logprob: -9.507519721984863
    10. '(re' → logprob: -10.882519721984863

Token 578: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.03370068594813347
    2. '(a' → logprob: -3.408700704574585
    3. '((' → logprob: -11.533700942993164
    4. ' a' → logprob: -11.533700942993164
    5. 'b' → logprob: -11.658700942993164
    6. '(' → logprob: -11.908700942993164
    7. '(com' → logprob: -12.533700942993164
    8. '(b' → logprob: -12.533700942993164
    9. '(lambda' → logprob: -13.033700942993164
    10. 'pow' → logprob: -13.158700942993164

Token 579: ' -' (ID: 533)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.7988596558570862
    2. '*' → logprob: -0.9238596558570862
    3. '+' → logprob: -2.5488595962524414
    4. ' +' → logprob: -2.9238595962524414
    5. ' -' → logprob: -4.298859596252441
    6. '-' → logprob: -4.923859596252441
    7. '*b' → logprob: -8.048859596252441
    8. ' ' → logprob: -10.423859596252441
    9. '+b' → logprob: -10.548859596252441
    10. '%' → logprob: -11.923859596252441

Token 580: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00037955286097712815
    2. ' b' → logprob: -8.00037956237793
    3. '1' → logprob: -10.87537956237793
    4. '(b' → logprob: -11.25037956237793
    5. '(' → logprob: -12.00037956237793
    6. ' (' → logprob: -13.12537956237793
    7. '(n' → logprob: -13.62537956237793
    8. '(m' → logprob: -14.62537956237793
    9. '((' → logprob: -14.62537956237793
    10. '(com' → logprob: -15.00037956237793

Token 581: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004746129736304283
    2. '+' → logprob: -5.504745960235596
    3. ' +' → logprob: -8.004746437072754
    4. '*' → logprob: -8.254746437072754
    5. ')*' → logprob: -10.629746437072754
    6. ' )' → logprob: -10.629746437072754
    7. ')%' → logprob: -11.629746437072754
    8. '*)' → logprob: -12.254746437072754
    9. '   ' → logprob: -12.754746437072754
    10. '%' → logprob: -13.129746437072754

Token 582: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.3868900537490845
    2. ' %' → logprob: -1.1368900537490845
    3. ')' → logprob: -11.136890411376953
    4. '%n' → logprob: -14.011890411376953
    5. '*' → logprob: -14.136890411376953
    6. '
' → logprob: -14.386890411376953
    7. ')%' → logprob: -14.386890411376953
    8. '%b' → logprob: -15.261890411376953
    9. ' *' → logprob: -15.511890411376953
    10. ' ' → logprob: -15.511890411376953

Token 583: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -4.246537173457909e-06
    2. ' mod' → logprob: -12.500003814697266
    3. '998' → logprob: -14.750003814697266
    4. '(mod' → logprob: -17.125003814697266
    5. '	mod' → logprob: -19.250003814697266
    6. '```' → logprob: -21.375003814697266
    7. ' мод' → logprob: -22.250003814697266
    8. '999' → logprob: -22.500003814697266
    9. 'moder' → logprob: -22.875003814697266
    10. '_mod' → logprob: -23.000003814697266

Token 584: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.9361264946837764e-07
    2. '```' → logprob: -15.875
    3. ' print' → logprob: -17.75
    4. 'ans' → logprob: -17.875
    5. '<|end|>' → logprob: -19.375
    6. '#' → logprob: -19.5
    7. '``' → logprob: -20.125
    8. '#print' → logprob: -20.375
    9. '
' → logprob: -21.0
    10. 'return' → logprob: -21.5

Token 585: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -18.125
    3. '```' → logprob: -20.25
    4. 'prin' → logprob: -20.75
    5. 'pr' → logprob: -20.875
    6. 'ans' → logprob: -22.25
    7. '#print' → logprob: -22.875
    8. 'pri' → logprob: -24.0
    9. '#' → logprob: -24.25
    10. 'pring' → logprob: -24.375

Token 586: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.00034118397161364555
    2. 'ans' → logprob: -8.000341415405273
    3. '(' → logprob: -12.125341415405273
    4. ' (' → logprob: -15.250341415405273
    5. '(
' → logprob: -17.500341415405273
    6. ' ans' → logprob: -18.375341415405273
    7. '	ans' → logprob: -18.375341415405273
    8. '(answer' → logprob: -18.625341415405273
    9. '_ans' → logprob: -19.750341415405273
    10. '((' → logprob: -20.125341415405273

Token 587: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.856408536899835e-05
    2. '()' → logprob: -11.125028610229492
    3. '())' → logprob: -11.500028610229492
    4. ' )' → logprob: -13.250028610229492
    5. ')`' → logprob: -14.250028610229492
    6. ')
' → logprob: -14.625028610229492
    7. '))' → logprob: -15.000028610229492
    8. '`)' → logprob: -15.625028610229492
    9. '(' → logprob: -15.750028610229492
    10. '')' → logprob: -16.375028610229492


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 585
Tokens correctement prédits (1ère position, stricte): 199
Tokens correctement prédits (1ère position, avec adaptation): 207
Tokens correctement prédits (top 10): 432
Précision stricte (1ère position): 34.02%
Précision adaptée (1ère position): 35.38%
Précision (top 10): 73.85%
================================================================================
