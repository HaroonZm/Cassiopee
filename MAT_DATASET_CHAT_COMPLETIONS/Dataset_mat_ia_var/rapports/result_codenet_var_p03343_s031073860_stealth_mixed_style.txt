================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:18:20
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
exit = sys.exit
setrecursionlimit = sys.setrecursionlimit
stderr = sys.stderr

from functools import reduce as red
import itertools as it
from bisect import bisect_left as bl, bisect_right as br
from collections import deque, defaultdict as dd

def r():
    return int(input())

def rs():
    return list(map(int, input().split()))

INF = float('inf')
N, K, Q = rs()
A = rs()
A += [-10**18]

def lub(y):
    rez = []
    left = 0
    i = 0
    while i < N+1:
        if A[i] < y:
            chunk = A[left:i]
            chunk = sorted(chunk)
            if len(chunk) >= K-1:
                for e in it.islice(chunk, len(chunk)-K+1):
                    rez.append(e)
            left = i+1
        i += 1
    rez.sort()
    if len(rez) >= Q:
        return rez[Q-1]
    return INF

res = INF
for ival in filter(lambda z: True, A[:-1]):
    candidate = lub(ival)
    if candidate - ival < res:
        res = candidate - ival
print(res)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'exit' (ID: 30264)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.43662330508232117
    2. '.' → logprob: -1.1866233348846436
    3. 'import' → logprob: -4.0616230964660645
    4. '\' → logprob: -4.4366230964660645
    5. 'newline' → logprob: -5.1866230964660645
    6. '<|end|>' → logprob: -5.4366230964660645
    7. '
' → logprob: -5.9366230964660645
    8. '```' → logprob: -6.4366230964660645
    9. '' → logprob: -7.0616230964660645
    10. '<|end|>' → logprob: -7.1866230964660645

Token 4: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0013816634891554713
    2. '()' → logprob: -6.751381874084473
    3. ' (' → logprob: -9.376381874084473
    4. '(
' → logprob: -9.626381874084473
    5. '(

' → logprob: -10.501381874084473
    6. '('' → logprob: -11.751381874084473
    7. ')' → logprob: -12.751381874084473
    8. '("("' → logprob: -12.751381874084473
    9. '.' → logprob: -13.001381874084473
    10. '((' → logprob: -13.126381874084473

Token 5: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.10090836137533188
    2. 'sys' → logprob: -2.3509082794189453
    3. ' ' → logprob: -7.725908279418945
    4. ' system' → logprob: -9.600908279418945
    5. 'System' → logprob: -10.100908279418945
    6. 'system' → logprob: -10.350908279418945
    7. '  ' → logprob: -10.600908279418945
    8. '(sys' → logprob: -10.725908279418945
    9. 'exit' → logprob: -11.350908279418945
    10. '	sys' → logprob: -11.725908279418945

Token 6: '.exit' (ID: 27076)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.25262686610221863
    2. '.exit' → logprob: -1.502626895904541
    3. ' .' → logprob: -8.627626419067383
    4. '.EXIT' → logprob: -8.752626419067383
    5. 'exit' → logprob: -9.127626419067383
    6. '.argv' → logprob: -10.252626419067383
    7. '.Exit' → logprob: -10.377626419067383
    8. ' exit' → logprob: -10.627626419067383
    9. '[' → logprob: -11.002626419067383
    10. '.stdout' → logprob: -11.127626419067383

Token 7: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003915495239198208
    2. '()' → logprob: -5.878915309906006
    3. '(
' → logprob: -6.878915309906006
    4. '(

' → logprob: -10.128915786743164
    5. ' (' → logprob: -11.503915786743164
    6. '\(' → logprob: -12.378915786743164
    7. '()
' → logprob: -12.503915786743164
    8. ')' → logprob: -12.753915786743164
    9. '```' → logprob: -12.878915786743164
    10. ' ' → logprob: -12.878915786743164

Token 8: 'set' (ID: 977)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1033167764544487
    2. '()' → logprob: -2.3533167839050293
    3. '(
' → logprob: -5.853316783905029
    4. '(

' → logprob: -8.853316307067871
    5. '()
' → logprob: -9.853316307067871
    6. ' (' → logprob: -11.728316307067871
    7. '('' → logprob: -12.228316307067871
    8. '()

' → logprob: -12.353316307067871
    9. '(
' → logprob: -12.978316307067871
    10. ' ' → logprob: -13.228316307067871

Token 9: 'rec' (ID: 9285)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9877239465713501
    2. 'attr' → logprob: -0.9877239465713501
    3. 'uptools' → logprob: -1.61272394657135
    4. 'up' → logprob: -3.2377238273620605
    5. '_exit' → logprob: -5.2377238273620605
    6. 'exit' → logprob: -5.9877238273620605
    7. 'upt' → logprob: -6.8627238273620605
    8. '()' → logprob: -6.9877238273620605
    9. 'default' → logprob: -6.9877238273620605
    10. '_up' → logprob: -7.1127238273620605

Token 10: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.003320545656606555
    2. '_' → logprob: -6.003320693969727
    3. 'urs' → logprob: -8.128320693969727
    4. 'ursive' → logprob: -8.378320693969727
    5. 'ursor' → logprob: -9.253320693969727
    6. 'ur' → logprob: -10.628320693969727
    7. 'urse' → logprob: -10.878320693969727
    8. 'attr' → logprob: -11.003320693969727
    9. 'urses' → logprob: -11.003320693969727
    10. 'info' → logprob: -11.378320693969727

Token 11: 'limit' (ID: 19698)
  Prédit: '_limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.47797951102256775
    2. 'limit' → logprob: -0.9779795408248901
    3. 'it' → logprob: -6.35297966003418
    4. '_depth' → logprob: -7.10297966003418
    5. '_' → logprob: -8.22797966003418
    6. 'depth' → logprob: -8.60297966003418
    7. 'imit' → logprob: -8.60297966003418
    8. ' limit' → logprob: -8.72797966003418
    9. 'al' → logprob: -9.22797966003418
    10. '-limit' → logprob: -9.85297966003418

Token 12: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0006525091012008488
    2. ' (' → logprob: -7.625652313232422
    3. '()' → logprob: -10.625652313232422
    4. '```' → logprob: -10.625652313232422
    5. '(
' → logprob: -10.875652313232422
    6. ')' → logprob: -11.250652313232422
    7. '('' → logprob: -11.500652313232422
    8. 'import' → logprob: -11.750652313232422
    9. '<|end|>' → logprob: -11.875652313232422
    10. '(import' → logprob: -12.000652313232422

Token 13: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.3936462700366974
    2. 'sys' → logprob: -1.143646240234375
    3. 'set' → logprob: -5.393646240234375
    4. 'import' → logprob: -7.143646240234375
    5. ' set' → logprob: -7.643646240234375
    6. '<|end|>' → logprob: -7.893646240234375
    7. '(sys' → logprob: -8.393646240234375
    8. ' ' → logprob: -9.143646240234375
    9. '=sys' → logprob: -9.518646240234375
    10. '	sys' → logprob: -10.768646240234375

Token 14: '.set' (ID: 1230)
  Prédit: '.set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.set' → logprob: -0.008263496682047844
    2. ' .' → logprob: -5.13326358795166
    3. '.' → logprob: -6.75826358795166
    4. '.setdefault' → logprob: -6.88326358795166
    5. '.exit' → logprob: -9.25826358795166
    6. 'set' → logprob: -10.88326358795166
    7. '```' → logprob: -11.88326358795166
    8. ':set' → logprob: -12.00826358795166
    9. 'import' → logprob: -12.38326358795166
    10. '.get' → logprob: -13.00826358795166

Token 15: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -4.4656579120783135e-05
    2. '_rec' → logprob: -10.500044822692871
    3. 're' → logprob: -11.250044822692871
    4. 'set' → logprob: -13.125044822692871
    5. 'ref' → logprob: -14.750044822692871
    6. 'r' → logprob: -15.000044822692871
    7. 'reg' → logprob: -16.000043869018555
    8. 'reci' → logprob: -16.000043869018555
    9. ' recursion' → logprob: -16.250043869018555
    10. 'rc' → logprob: -16.375043869018555

Token 16: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0011405730620026588
    2. 'urs' → logprob: -6.876140594482422
    3. 'ur' → logprob: -9.626140594482422
    4. 'u' → logprob: -11.376140594482422
    5. 'ursive' → logprob: -11.376140594482422
    6. 'ursor' → logprob: -11.751140594482422
    7. '_' → logprob: -12.376140594482422
    8. 'urse' → logprob: -13.501140594482422
    9. 'limit' → logprob: -13.501140594482422
    10. 'usion' → logprob: -13.876140594482422

Token 17: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.00012368128227535635
    2. ' limit' → logprob: -10.000123977661133
    3. '_limit' → logprob: -10.250123977661133
    4. 'lim' → logprob: -11.000123977661133
    5. 'imit' → logprob: -11.000123977661133
    6. 'mit' → logprob: -12.000123977661133
    7. 'Limit' → logprob: -13.375123977661133
    8. 'l' → logprob: -14.875123977661133
    9. 'ort' → logprob: -15.375123977661133
    10. 'init' → logprob: -15.500123977661133

Token 18: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003270641202107072
    2. '(
' → logprob: -5.878270626068115
    3. '\(' → logprob: -9.003271102905273
    4. '\' → logprob: -9.128271102905273
    5. '\n' → logprob: -9.753271102905273
    6. '(

' → logprob: -9.753271102905273
    7. ')' → logprob: -10.628271102905273
    8. '
' → logprob: -10.753271102905273
    9. '()' → logprob: -11.128271102905273
    10. ' (' → logprob: -11.753271102905273

Token 19: 'stderr' (ID: 96670)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0031230561435222626
    2. '(
' → logprob: -5.8781232833862305
    3. '()' → logprob: -9.62812328338623
    4. '\' → logprob: -9.75312328338623
    5. '\n' → logprob: -10.00312328338623
    6. '\(' → logprob: -10.12812328338623
    7. '(

' → logprob: -10.37812328338623
    8. '_' → logprob: -11.00312328338623
    9. '
' → logprob: -11.25312328338623
    10. ')' → logprob: -11.62812328338623

Token 20: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0029577314853668213
    2. ' .' → logprob: -6.252957820892334
    3. '.stderr' → logprob: -7.252957820892334
    4. '.write' → logprob: -8.752957344055176
    5. '<|end|>' → logprob: -10.252957344055176
    6. '.readline' → logprob: -10.502957344055176
    7. 'stderr' → logprob: -11.627957344055176
    8. '.setdefault' → logprob: -11.752957344055176
    9. ')' → logprob: -11.877957344055176
    10. '.append' → logprob: -12.002957344055176

Token 21: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.0059801083989441395
    2. 'sys' → logprob: -5.130980014801025
    3. ' ' → logprob: -10.630980491638184
    4. '=sys' → logprob: -11.130980491638184
    5. '	sys' → logprob: -12.130980491638184
    6. '(sys' → logprob: -12.505980491638184
    7. ' stderr' → logprob: -14.130980491638184
    8. ' system' → logprob: -14.380980491638184
    9. 'stderr' → logprob: -14.380980491638184
    10. '.sys' → logprob: -15.005980491638184

Token 22: '.stderr' (ID: 87058)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.20330274105072021
    2. '.stderr' → logprob: -1.7033027410507202
    3. ' .' → logprob: -6.57830286026001
    4. '.stdout' → logprob: -8.203302383422852
    5. '.
' → logprob: -10.328302383422852
    6. '.stdin' → logprob: -10.828302383422852
    7. '.exit' → logprob: -10.828302383422852
    8. 'stderr' → logprob: -10.953302383422852
    9. '.st' → logprob: -11.453302383422852
    10. '.

' → logprob: -11.453302383422852

Token 23: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5490638017654419
    2. '
' → logprob: -1.174063801765442
    3. '<|end|>' → logprob: -2.4240636825561523
    4. '```' → logprob: -5.299063682556152
    5. 'import' → logprob: -5.424063682556152
    6. '' → logprob: -5.799063682556152
    7. '\n' → logprob: -6.549063682556152
    8. '<|end|>' → logprob: -6.549063682556152
    9. 'newline' → logprob: -6.674063682556152
    10. ')' → logprob: -6.924063682556152

Token 24: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.46320173144340515
    2. '(' → logprob: -1.2132017612457275
    3. '

' → logprob: -3.4632017612457275
    4. '(
' → logprob: -4.713201522827148
    5. '<|end|>' → logprob: -5.213201522827148
    6. '.' → logprob: -5.463201522827148
    7. '#' → logprob: -5.588201522827148
    8. ' ' → logprob: -5.713201522827148
    9. ')' → logprob: -5.963201522827148
    10. '_' → logprob: -6.088201522827148

Token 25: ' functools' (ID: 142636)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -1.2146492004394531
    2. ' io' → logprob: -1.5896492004394531
    3. ' os' → logprob: -1.8396492004394531
    4. ' threading' → logprob: -2.214649200439453
    5. ' math' → logprob: -2.339649200439453
    6. ' typing' → logprob: -3.214649200439453
    7. ' sys' → logprob: -3.464649200439453
    8. ' functools' → logprob: -3.839649200439453
    9. ' itertools' → logprob: -4.464649200439453
    10. ' ' → logprob: -4.714649200439453

Token 26: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.010451416485011578
    2. 'import' → logprob: -4.635451316833496
    3. '.' → logprob: -7.760451316833496
    4. ' ' → logprob: -8.385451316833496
    5. '<|end|>' → logprob: -11.135451316833496
    6. '	import' → logprob: -11.760451316833496
    7. ' .' → logprob: -12.260451316833496
    8. '.import' → logprob: -12.385451316833496
    9. '<|end|>' → logprob: -13.260451316833496
    10. '_import' → logprob: -13.260451316833496

Token 27: ' reduce' (ID: 10389)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.5221754908561707
    2. ' wraps' → logprob: -1.2721755504608154
    3. ' partial' → logprob: -2.8971755504608154
    4. 'l' → logprob: -3.6471755504608154
    5. ' reduce' → logprob: -4.022175312042236
    6. 'wrap' → logprob: -4.147175312042236
    7. 'reduce' → logprob: -5.147175312042236
    8. 'partial' → logprob: -5.272175312042236
    9. ' ' → logprob: -8.522175788879395
    10. ' cmp' → logprob: -9.147175788879395

Token 28: ' as' (ID: 472)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 29: ' red' (ID: 3592)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.23650003969669342
    2. ' reduce' → logprob: -1.7365000247955322
    3. 'red' → logprob: -4.111500263214111
    4. 'r' → logprob: -5.486500263214111
    5. ' red' → logprob: -5.986500263214111
    6. ' functools' → logprob: -5.986500263214111
    7. 're' → logprob: -6.236500263214111
    8. ' ' → logprob: -6.486500263214111
    9. 'redu' → logprob: -6.611500263214111
    10. ' r' → logprob: -6.736500263214111

Token 30: '
' (ID: 198)
  Prédit: 'uce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'uce' → logprob: -0.0004676113894674927
    2. 'uct' → logprob: -7.750467777252197
    3. 'uc' → logprob: -10.500467300415039
    4. 'u' → logprob: -12.125467300415039
    5. 'uced' → logprob: -13.625467300415039
    6. '```' → logprob: -13.750467300415039
    7. 'uction' → logprob: -14.750467300415039
    8. 'duce' → logprob: -15.500467300415039
    9. 'uctor' → logprob: -15.750467300415039
    10. 'ux' → logprob: -15.750467300415039

Token 31: 'import' (ID: 561)
  Prédit: 'ef'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ef' → logprob: -0.03582000732421875
    2. 'uce' → logprob: -4.285820007324219
    3. 'uct' → logprob: -4.910820007324219
    4. 'uction' → logprob: -5.660820007324219
    5. 'efined' → logprob: -5.910820007324219
    6. 'def' → logprob: -6.285820007324219
    7. 'uc' → logprob: -6.660820007324219
    8. 'is' → logprob: -6.785820007324219
    9. 'u' → logprob: -7.410820007324219
    10. 'ec' → logprob: -7.535820007324219

Token 32: ' itertools' (ID: 103178)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.6399667263031006
    2. ' itertools' → logprob: -1.6399667263031006
    3. ' os' → logprob: -1.7649667263031006
    4. ' collections' → logprob: -2.8899667263031006
    5. ' sys' → logprob: -3.5149667263031006
    6. ' functools' → logprob: -4.76496696472168
    7. ' re' → logprob: -4.88996696472168
    8. ' ' → logprob: -5.88996696472168
    9. ' threading' → logprob: -6.88996696472168
    10. ' numpy' → logprob: -7.13996696472168

Token 33: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.37991252541542053
    2. '<|end|>' → logprob: -2.0049126148223877
    3. '.' → logprob: -2.5049126148223877
    4. ' ' → logprob: -3.3799126148223877
    5. 'as' → logprob: -3.5049126148223877
    6. 'import' → logprob: -4.004912376403809
    7. ',' → logprob: -5.004912376403809
    8. '<|end|>' → logprob: -5.754912376403809
    9. 'from' → logprob: -6.129912376403809
    10. ' itertools' → logprob: -6.379912376403809

Token 34: ' it' (ID: 480)
  Prédit: ' it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' it' → logprob: -0.03655985742807388
    2. 'it' → logprob: -3.661559820175171
    3. ' ' → logprob: -4.78656005859375
    4. '	it' → logprob: -7.91156005859375
    5. ' its' → logprob: -8.16156005859375
    6. 'It' → logprob: -8.16156005859375
    7. '    ' → logprob: -8.16156005859375
    8. ' itt' → logprob: -8.28656005859375
    9. '   ' → logprob: -9.91156005859375
    10. '  ' → logprob: -9.91156005859375

Token 35: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 36: 'from' (ID: 2845)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 37: ' bis' (ID: 7204)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.06045563891530037
    2. ' collections' → logprob: -3.185455560684204
    3. ' operator' → logprob: -4.310455799102783
    4. ' ' → logprob: -6.185455799102783
    5. ' functools' → logprob: -7.435455799102783
    6. ' typing' → logprob: -7.685455799102783
    7. ' os' → logprob: -7.810455799102783
    8. ' sys' → logprob: -9.060455322265625
    9. ' copy' → logprob: -9.685455322265625
    10. 'collections' → logprob: -10.560455322265625

Token 38: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -1.8624639324116288e-06
    2. 'ected' → logprob: -14.500001907348633
    3. 'ector' → logprob: -14.750001907348633
    4. 'ects' → logprob: -14.875001907348633
    5. 'ec' → logprob: -15.625001907348633
    6. 'ectl' → logprob: -16.125001907348633
    7. 'e' → logprob: -16.125001907348633
    8. 'ections' → logprob: -16.125001907348633
    9. 'ection' → logprob: -16.875001907348633
    10. 'ectors' → logprob: -17.000001907348633

Token 39: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.021203739568591118
    2. 'import' → logprob: -3.8962037563323975
    3. '<|end|>' → logprob: -8.021203994750977
    4. '	import' → logprob: -8.146203994750977
    5. '_import' → logprob: -10.646203994750977
    6. ' importar' → logprob: -12.146203994750977
    7. ' ' → logprob: -12.271203994750977
    8. '<|end|>' → logprob: -12.521203994750977
    9. ' ' → logprob: -14.458703994750977
    10. 'ort' → logprob: -14.583703994750977

Token 40: ' bis' (ID: 7204)
  Prédit: ' bis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bis' → logprob: -0.01090940274298191
    2. 'bis' → logprob: -5.135909557342529
    3. ' ins' → logprob: -5.510909557342529
    4. 'ins' → logprob: -7.135909557342529
    5. '_ins' → logprob: -9.510909080505371
    6. ' ' → logprob: -10.385909080505371
    7. '_' → logprob: -12.135909080505371
    8. '_left' → logprob: -12.385909080505371
    9. ' b' → logprob: -12.885909080505371
    10. '_b' → logprob: -12.885909080505371

Token 41: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -1.6240566083070007e-06
    2. 'e' → logprob: -13.500001907348633
    3. 'ec' → logprob: -16.375001907348633
    4. 'sect' → logprob: -17.250001907348633
    5. 'ectl' → logprob: -17.500001907348633
    6. 'ected' → logprob: -17.625001907348633
    7. '```' → logprob: -17.750001907348633
    8. 'ext' → logprob: -18.750001907348633
    9. 'ects' → logprob: -19.000001907348633
    10. 'ex' → logprob: -19.375001907348633

Token 42: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -1.0960948467254639
    2. '<|end|>' → logprob: -1.2210948467254639
    3. '_' → logprob: -1.4710948467254639
    4. '_right' → logprob: -1.9710948467254639
    5. ',' → logprob: -7.346095085144043
    6. ' ' → logprob: -7.596095085144043
    7. '<|end|>' → logprob: -9.221095085144043
    8. '
' → logprob: -9.596095085144043
    9. 'right' → logprob: -9.596095085144043
    10. '_RIGHT' → logprob: -9.721095085144043

Token 43: ' as' (ID: 472)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 44: ' bl' (ID: 1162)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.23515678942203522
    2. 'bl' → logprob: -1.860156774520874
    3. ' bis' → logprob: -2.985156774520874
    4. 'b' → logprob: -6.235157012939453
    5. 'bs' → logprob: -7.360157012939453
    6. ' bl' → logprob: -7.985157012939453
    7. 'bi' → logprob: -9.235157012939453
    8. '_bl' → logprob: -9.360157012939453
    9. 'bli' → logprob: -9.860157012939453
    10. '	b' → logprob: -10.360157012939453

Token 45: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 46: ' bis' (ID: 7204)
  Prédit: ' bis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bis' → logprob: -0.47622808814048767
    2. 'bis' → logprob: -0.9762281179428101
    3. 'b' → logprob: -6.6012282371521
    4. 'ins' → logprob: -8.101227760314941
    5. 'bl' → logprob: -8.726227760314941
    6. 'bs' → logprob: -9.726227760314941
    7. ' bl' → logprob: -9.851227760314941
    8. ' ins' → logprob: -9.851227760314941
    9. '	b' → logprob: -10.351227760314941
    10. 'bi' → logprob: -10.601227760314941

Token 47: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -5.796184723294573e-06
    2. 'ec' → logprob: -12.250005722045898
    3. 'e' → logprob: -14.625005722045898
    4. 'sect' → logprob: -15.750005722045898
    5. '```' → logprob: -16.0000057220459
    6. 'ected' → logprob: -16.8750057220459
    7. 'ectl' → logprob: -17.2500057220459
    8. 'ext' → logprob: -17.3750057220459
    9. 'ects' → logprob: -17.5000057220459
    10. 'ection' → logprob: -17.8750057220459

Token 48: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.0020625919569283724
    2. '<|end|>' → logprob: -6.877062797546387
    3. '_' → logprob: -7.127062797546387
    4. '_left' → logprob: -8.877062797546387
    5. 'right' → logprob: -9.627062797546387
    6. ' _' → logprob: -12.627062797546387
    7. '__' → logprob: -12.627062797546387
    8. '_Right' → logprob: -12.877062797546387
    9. '_RIGHT' → logprob: -13.002062797546387
    10. '_r' → logprob: -13.127062797546387

Token 49: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.6399533748626709
    2. '<|end|>' → logprob: -1.139953374862671
    3. 'as' → logprob: -1.889953374862671
    4. ' ' → logprob: -7.76495361328125
    5. ' (' → logprob: -7.76495361328125
    6. '(' → logprob: -8.01495361328125
    7. '(as' → logprob: -8.38995361328125
    8. '<|end|>' → logprob: -8.51495361328125
    9. '_as' → logprob: -10.51495361328125
    10. '	as' → logprob: -10.76495361328125

Token 50: ' br' (ID: 1294)
  Prédit: 'br'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'br' → logprob: -0.03826628252863884
    2. ' br' → logprob: -3.288266181945801
    3. '	br' → logprob: -8.4132661819458
    4. ' ' → logprob: -14.0382661819458
    5. '```' → logprob: -14.5382661819458
    6. '   ' → logprob: -14.6632661819458
    7. '(br' → logprob: -14.9132661819458
    8. ';br' → logprob: -15.6632661819458
    9. '_br' → logprob: -15.7882661819458
    10. '  ' → logprob: -16.163267135620117

Token 51: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 52: 'from' (ID: 2845)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 53: ' collections' (ID: 22690)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.11736060678958893
    2. ' collections' → logprob: -2.2423605918884277
    3. 'math' → logprob: -6.367360591888428
    4. ' operator' → logprob: -6.742360591888428
    5. 'collections' → logprob: -6.867360591888428
    6. ' heap' → logprob: -7.742360591888428
    7. '_math' → logprob: -9.742361068725586
    8. ' os' → logprob: -10.367361068725586
    9. ' ' → logprob: -10.617361068725586
    10. 'heap' → logprob: -11.742361068725586

Token 54: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.03390651196241379
    2. ' import' → logprob: -3.5339064598083496
    3. '.' → logprob: -6.28390645980835
    4. 'abc' → logprob: -6.28390645980835
    5. '	import' → logprob: -9.283906936645508
    6. '<|end|>' → logprob: -9.283906936645508
    7. '```' → logprob: -9.908906936645508
    8. ' abc' → logprob: -10.408906936645508
    9. ' defaultdict' → logprob: -10.533906936645508
    10. '.Counter' → logprob: -11.283906936645508

Token 55: ' deque' (ID: 90347)
  Prédit: ' defaultdict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.06236457824707031
    2. ' deque' → logprob: -2.8123645782470703
    3. 'deque' → logprob: -7.93736457824707
    4. ' Counter' → logprob: -11.31236457824707
    5. ' abc' → logprob: -11.43736457824707
    6. 'default' → logprob: -11.81236457824707
    7. ' named' → logprob: -12.43736457824707
    8. ' ' → logprob: -13.06236457824707
    9. '```' → logprob: -14.18736457824707
    10. 'de' → logprob: -14.43736457824707

Token 56: ',' (ID: 11)
  Prédit: ' as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.17268496751785278
    2. ',' → logprob: -2.422684907913208
    3. ' ' → logprob: -3.422684907913208
    4. '<|end|>' → logprob: -3.547684907913208
    5. 'as' → logprob: -5.422685146331787
    6. 'import' → logprob: -6.672685146331787
    7. ' ,' → logprob: -6.922685146331787
    8. 'from' → logprob: -7.172685146331787
    9. ' 
' → logprob: -8.047684669494629
    10. '<|end|>' → logprob: -8.172684669494629

Token 57: ' defaultdict' (ID: 107098)
  Prédit: ' defaultdict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.3014688789844513
    2. 'default' → logprob: -1.426468849182129
    3. 'Counter' → logprob: -4.426468849182129
    4. 'named' → logprob: -5.426468849182129
    5. ' Counter' → logprob: -6.176468849182129
    6. ' named' → logprob: -6.801468849182129
    7. 'Ordered' → logprob: -7.801468849182129
    8. 'abc' → logprob: -10.301468849182129
    9. 'Chain' → logprob: -10.551468849182129
    10. ' Ordered' → logprob: -10.676468849182129

Token 58: ' as' (ID: 472)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 59: ' dd' (ID: 18636)
  Prédit: 'dd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dd' → logprob: -0.082365021109581
    2. ' dd' → logprob: -2.582365036010742
    3. '_dd' → logprob: -5.707365036010742
    4. 'dict' → logprob: -9.457365036010742
    5. 'default' → logprob: -10.957365036010742
    6. 'df' → logprob: -11.207365036010742
    7. 'd' → logprob: -11.582365036010742
    8. '-dd' → logprob: -12.332365036010742
    9. 'def' → logprob: -12.832365036010742
    10. '	d' → logprob: -12.957365036010742

Token 60: '

' (ID: 279)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.35216301679611206
    2. 'from' → logprob: -2.227163076400757
    3. 'import' → logprob: -2.477163076400757
    4. ' ' → logprob: -3.727163076400757
    5. 'f' → logprob: -4.352162837982178
    6. '<|end|>' → logprob: -4.352162837982178
    7. 'def' → logprob: -4.727162837982178
    8. '_' → logprob: -5.602162837982178
    9. ' defaultdict' → logprob: -5.602162837982178
    10. 'ictionary' → logprob: -5.977162837982178

Token 61: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 62: ' r' (ID: 428)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.803359866142273
    2. ' solve' → logprob: -1.428359866142273
    3. ' main' → logprob: -2.0533599853515625
    4. ' dfs' → logprob: -2.1783599853515625
    5. ' space' → logprob: -4.3033599853515625
    6. ' factorial' → logprob: -4.9283599853515625
    7. '_' → logprob: -5.1783599853515625
    8. ' factor' → logprob: -5.6783599853515625
    9. ' read' → logprob: -5.9283599853515625
    10. ' test' → logprob: -6.1783599853515625

Token 63: '():
' (ID: 8595)
  Prédit: 'ead'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ead' → logprob: -0.03236383944749832
    2. 'ef' → logprob: -4.1573638916015625
    3. 'def' → logprob: -5.1573638916015625
    4. 'e' → logprob: -5.2823638916015625
    5. 'ange' → logprob: -6.1573638916015625
    6. 'and' → logprob: -6.9073638916015625
    7. 'aw' → logprob: -7.1573638916015625
    8. 'ec' → logprob: -7.1573638916015625
    9. 'edef' → logprob: -8.157363891601562
    10. 'int' → logprob: -9.657363891601562

Token 64: '   ' (ID: 271)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.7012448906898499
    2. 'eturn' → logprob: -1.326244831085205
    3. 'return' → logprob: -1.451244831085205
    4. ' input' → logprob: -6.826244831085205
    5. '   ' → logprob: -7.076244831085205
    6. ' ' → logprob: -7.201244831085205
    7. 'int' → logprob: -7.826244831085205
    8. 'input' → logprob: -7.951244831085205
    9. '    ' → logprob: -9.326245307922363
    10. 'ret' → logprob: -9.326245307922363

Token 65: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.11446815729141235
    2. ' return' → logprob: -2.2394680976867676
    3. 'int' → logprob: -6.739468097686768
    4. 'input' → logprob: -8.989468574523926
    5. 'import' → logprob: -9.489468574523926
    6. '   ' → logprob: -9.739468574523926
    7. 'ret' → logprob: -9.989468574523926
    8. ' int' → logprob: -10.239468574523926
    9. ' input' → logprob: -10.489468574523926
    10. ' ' → logprob: -10.739468574523926

Token 66: ' int' (ID: 677)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5443180799484253
    2. ' int' → logprob: -1.2943180799484253
    3. 'int' → logprob: -2.544318199157715
    4. 'input' → logprob: -3.794318199157715
    5. ' sys' → logprob: -4.169318199157715
    6. ' map' → logprob: -4.294318199157715
    7. ' list' → logprob: -4.919318199157715
    8. ' ' → logprob: -5.044318199157715
    9. ' tuple' → logprob: -7.794318199157715
    10. 'list' → logprob: -7.919318199157715

Token 67: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6936906576156616
    2. '(input' → logprob: -0.6936906576156616
    3. '(sys' → logprob: -7.693690776824951
    4. 'input' → logprob: -9.693690299987793
    5. '(
' → logprob: -11.568690299987793
    6. '(stdin' → logprob: -11.818690299987793
    7. '(open' → logprob: -13.193690299987793
    8. ' input' → logprob: -14.068690299987793
    9. ' (' → logprob: -14.068690299987793
    10. '((' → logprob: -14.193690299987793

Token 68: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0007762773893773556
    2. '()' → logprob: -7.375776290893555
    3. '().' → logprob: -8.875776290893555
    4. ' ())' → logprob: -12.625776290893555
    5. '();)' → logprob: -13.375776290893555
    6. '(' → logprob: -13.375776290893555
    7. '()))' → logprob: -13.875776290893555
    8. '());' → logprob: -14.500776290893555
    9. ')' → logprob: -14.625776290893555
    10. '()]' → logprob: -14.625776290893555

Token 69: 'def' (ID: 1314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2669523358345032
    2. 'def' → logprob: -2.0169522762298584
    3. '(' → logprob: -2.5169522762298584
    4. '\n' → logprob: -5.0169525146484375
    5. '()
' → logprob: -5.2669525146484375
    6. '()\' → logprob: -6.0169525146484375
    7. '
' → logprob: -6.1419525146484375
    8. '(
' → logprob: -7.0169525146484375
    9. ' def' → logprob: -7.6419525146484375
    10. '()

' → logprob: -7.7669525146484375

Token 70: ' rs' (ID: 15181)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1365036964416504
    2. ' s' → logprob: -1.2615036964416504
    3. ' i' → logprob: -2.1365036964416504
    4. ' r' → logprob: -2.7615036964416504
    5. ' l' → logprob: -3.1365036964416504
    6. 'i' → logprob: -3.1365036964416504
    7. 'r' → logprob: -3.7615036964416504
    8. 'input' → logprob: -3.7615036964416504
    9. ' input' → logprob: -3.7615036964416504
    10. ' ' → logprob: -4.26150369644165

Token 71: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.3485940098762512
    2. '()' → logprob: -1.3485939502716064
    3. '():
' → logprob: -3.4735939502716064
    4. '().' → logprob: -5.8485941886901855
    5. '():

' → logprob: -8.723593711853027
    6. 'tring' → logprob: -9.098593711853027
    7. '()):
' → logprob: -9.348593711853027
    8. 'plit' → logprob: -9.723593711853027
    9. 'input' → logprob: -9.848593711853027
    10. '(' → logprob: -9.973593711853027

Token 72: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.868439793586731
    2. 'input' → logprob: -0.993439793586731
    3. '().' → logprob: -1.618439793586731
    4. '.strip' → logprob: -5.993439674377441
    5. ' input' → logprob: -5.993439674377441
    6. 'return' → logprob: -6.118439674377441
    7. '.split' → logprob: -6.493439674377441
    8. 'strip' → logprob: -7.118439674377441
    9. 'split' → logprob: -7.118439674377441
    10. '.input' → logprob: -8.118439674377441

Token 73: ' return' (ID: 622)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0030725449323654175
    2. ' input' → logprob: -6.378072738647461
    3. 'list' → logprob: -7.003072738647461
    4. 'return' (adapté à ' return') → logprob: -8.503072738647461
    5. 'str' → logprob: -9.253072738647461
    6. '(input' → logprob: -9.503072738647461
    7. 'strip' → logprob: -10.753072738647461
    8. 'map' → logprob: -11.003072738647461
    9. '[input' → logprob: -11.378072738647461
    10. '=input' → logprob: -11.753072738647461

Token 74: ' list' (ID: 1562)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.31422537565231323
    2. 'input' → logprob: -1.314225435256958
    3. ' list' → logprob: -7.564225196838379
    4. 'list' → logprob: -7.939225196838379
    5. ' ' → logprob: -10.314225196838379
    6. '(input' → logprob: -10.814225196838379
    7. '[input' → logprob: -11.314225196838379
    8. '=input' → logprob: -12.439225196838379
    9. ' str' → logprob: -12.689225196838379
    10. 'str' → logprob: -12.689225196838379

Token 75: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.014900860376656055
    2. '(input' → logprob: -4.2649006843566895
    3. '(' → logprob: -7.2649006843566895
    4. ' map' → logprob: -11.264901161193848
    5. '(str' → logprob: -11.639901161193848
    6. 'map' → logprob: -11.639901161193848
    7. '(filter' → logprob: -12.889901161193848
    8. '(int' → logprob: -13.889901161193848
    9. '(eval' → logprob: -14.139901161193848
    10. '	map' → logprob: -14.514901161193848

Token 76: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0005377820343710482
    2. '(str' → logprob: -7.625537872314453
    3. 'int' → logprob: -10.500537872314453
    4. '(' → logprob: -11.000537872314453
    5. ',int' → logprob: -13.625537872314453
    6. 'str' → logprob: -13.625537872314453
    7. '=int' → logprob: -14.125537872314453
    8. '<int' → logprob: -14.125537872314453
    9. '[int' → logprob: -14.250537872314453
    10. '(input' → logprob: -14.875537872314453

Token 77: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.3606667220592499
    2. ',' → logprob: -1.2356667518615723
    3. '(input' → logprob: -4.610666751861572
    4. 'input' → logprob: -6.235666751861572
    5. ' ,' → logprob: -9.110666275024414
    6. '(' → logprob: -9.735666275024414
    7. ' input' → logprob: -10.235666275024414
    8. ',(' → logprob: -11.485666275024414
    9. ' (' → logprob: -11.735666275024414
    10. ',int' → logprob: -12.360666275024414

Token 78: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.008665625005960464
    2. ' input' → logprob: -4.758665561676025
    3. ',input' → logprob: -10.133666038513184
    4. '(input' → logprob: -12.258666038513184
    5. '=input' → logprob: -13.383666038513184
    6. '	input' → logprob: -13.383666038513184
    7. ' ' → logprob: -13.633666038513184
    8. '<input' → logprob: -14.133666038513184
    9. '   ' → logprob: -14.633666038513184
    10. ')' → logprob: -14.883666038513184

Token 79: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00011355629976605996
    2. '.' → logprob: -9.875113487243652
    3. '()' → logprob: -10.000113487243652
    4. ' ().' → logprob: -11.625113487243652
    5. ' .' → logprob: -12.750113487243652
    6. ')' → logprob: -13.625113487243652
    7. '(' → logprob: -13.750113487243652
    8. '.split' → logprob: -14.000113487243652
    9. ').' → logprob: -14.625113487243652
    10. 'split' → logprob: -14.750113487243652

Token 80: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.023292062804102898
    2. 'strip' → logprob: -3.773292064666748
    3. 'rstrip' → logprob: -10.02329158782959
    4. ')' → logprob: -13.64829158782959
    5. ' split' → logprob: -14.39829158782959
    6. '(split' → logprob: -15.14829158782959
    7. 'spl' → logprob: -16.273292541503906
    8. ' strip' → logprob: -17.023292541503906
    9. '))' → logprob: -17.648292541503906
    10. 'read' → logprob: -17.648292541503906

Token 81: '()))

' (ID: 125972)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.47681400179862976
    2. '()))' → logprob: -0.9768140316009521
    3. '()' → logprob: -5.976813793182373
    4. '())' → logprob: -9.101814270019531
    5. ')' → logprob: -10.351814270019531
    6. '()))
' → logprob: -10.851814270019531
    7. '(' → logprob: -10.976814270019531
    8. ')))' → logprob: -11.976814270019531
    9. '()));' → logprob: -12.726814270019531
    10. ' ))' → logprob: -13.226814270019531

Token 82: 'INF' (ID: 64358)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.13229748606681824
    2. '
' → logprob: -2.6322975158691406
    3. 'd' → logprob: -3.3822975158691406
    4. '\' → logprob: -5.007297515869141
    5. 'n' → logprob: -5.257297515869141
    6. '\n' → logprob: -5.757297515869141
    7. '

' → logprob: -6.507297515869141
    8. '' → logprob: -8.13229751586914
    9. '#' → logprob: -8.13229751586914
    10. 'ndef' → logprob: -8.75729751586914

Token 83: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.030069103464484215
    2. ' =' → logprob: -3.53006911277771
    3. ')' → logprob: -9.030069351196289
    4. ',' → logprob: -9.530069351196289
    5. '_' → logprob: -9.905069351196289
    6. '<|end|>' → logprob: -10.530069351196289
    7. '=int' → logprob: -11.030069351196289
    8. '=

' → logprob: -11.530069351196289
    9. '>' → logprob: -12.655069351196289
    10. '=
' → logprob: -12.780069351196289

Token 84: ' float' (ID: 4428)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5529223680496216
    2. '10' → logprob: -0.9279223680496216
    3. ' float' → logprob: -3.677922248840332
    4. 'float' → logprob: -5.552922248840332
    5. '1' → logprob: -9.427922248840332
    6. ' int' → logprob: -9.552922248840332
    7. 'int' → logprob: -10.552922248840332
    8. '100' → logprob: -10.677922248840332
    9. '9' → logprob: -13.427922248840332
    10. '(float' → logprob: -13.802922248840332

Token 85: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.00024192029377445579
    2. '(' → logprob: -8.625242233276367
    3. ''' → logprob: -10.125242233276367
    4. '("' → logprob: -12.375242233276367
    5. '('+' → logprob: -12.375242233276367
    6. '('.')' → logprob: -12.750242233276367
    7. '32' → logprob: -13.000242233276367
    8. '('-' → logprob: -13.500242233276367
    9. ' ('' → logprob: -14.000242233276367
    10. '>('' → logprob: -14.250242233276367

Token 86: 'inf' (ID: 22226)
  Prédit: ''in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''in' → logprob: -0.4627460837364197
    2. 'inf' → logprob: -1.0877461433410645
    3. ''' → logprob: -3.4627461433410645
    4. '"' → logprob: -6.9627461433410645
    5. ''ins' → logprob: -8.462745666503906
    6. ''ex' → logprob: -8.587745666503906
    7. 'info' → logprob: -9.087745666503906
    8. ''inc' → logprob: -9.337745666503906
    9. 'in' → logprob: -9.462745666503906
    10. ''i' → logprob: -9.712745666503906

Token 87: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.5941604690160602e-05
    2. '')' → logprob: -10.625025749206543
    3. ' )' → logprob: -13.625025749206543
    4. ')
' → logprob: -15.375025749206543
    5. '))' → logprob: -16.50002670288086
    6. ')

' → logprob: -17.00002670288086
    7. '}' → logprob: -17.50002670288086
    8. '()' → logprob: -17.62502670288086
    9. '),' → logprob: -18.12502670288086
    10. '")' → logprob: -18.50002670288086

Token 88: 'N' (ID: 45)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0048712813295423985
    2. '\' → logprob: -6.004871368408203
    3. '\n' → logprob: -6.629871368408203
    4. '
' → logprob: -8.379871368408203
    5. 'class' → logprob: -8.379871368408203
    6. '#' → logprob: -9.129871368408203
    7. '```' → logprob: -9.129871368408203
    8. 'n' → logprob: -10.129871368408203
    9. '<|end|>' → logprob: -10.254871368408203
    10. 'ndef' → logprob: -10.379871368408203

Token 89: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08928185701370239
    2. ' =' → logprob: -2.4642817974090576
    3. '_' → logprob: -8.464282035827637
    4. '=int' → logprob: -10.214282035827637
    5. ',' → logprob: -10.339282035827637
    6. ')' → logprob: -11.089282035827637
    7. ' ' → logprob: -11.214282035827637
    8. '   ' → logprob: -11.839282035827637
    9. '_=' → logprob: -12.714282035827637
    10. '    ' → logprob: -12.714282035827637

Token 90: ' K' (ID: 658)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.4912359416484833
    2. 'K' → logprob: -1.2412359714508057
    3. ' =' → logprob: -3.6162359714508057
    4. '=' → logprob: -3.9912359714508057
    5. ' M' → logprob: -4.241235733032227
    6. ' ' → logprob: -4.866235733032227
    7. 'Q' → logprob: -4.991235733032227
    8. ' K' → logprob: -5.116235733032227
    9. '<|end|>' → logprob: -5.116235733032227
    10. 'r' → logprob: -5.866235733032227

Token 91: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18015994131565094
    2. '=' → logprob: -1.8051599264144897
    3. ',' → logprob: -7.805160045623779
    4. ' ' → logprob: -12.305159568786621
    5. '=input' → logprob: -14.180159568786621
    6. '<|end|>' → logprob: -14.805159568786621
    7. '=int' → logprob: -14.930159568786621
    8. ' ,' → logprob: -14.930159568786621
    9. ' =
' → logprob: -16.180160522460938
    10. ')' → logprob: -16.617660522460938

Token 92: ' Q' (ID: 1486)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6427105069160461
    2. ' =' → logprob: -1.2677104473114014
    3. '<|end|>' → logprob: -2.8927104473114014
    4. 'rs' → logprob: -3.1427104473114014
    5. '=' → logprob: -3.6427104473114014
    6. ' r' → logprob: -3.8927104473114014
    7. 'r' → logprob: -4.1427106857299805
    8. ' rs' → logprob: -4.5177106857299805
    9. 's' → logprob: -4.7677106857299805
    10. 'Q' → logprob: -6.0177106857299805

Token 93: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06997011601924896
    2. ' =' → logprob: -2.69497013092041
    3. ',' → logprob: -10.31997013092041
    4. '=input' → logprob: -15.81997013092041
    5. ' ' → logprob: -15.94497013092041
    6. ')' → logprob: -16.069969177246094
    7. '=int' → logprob: -16.319969177246094
    8. '<|end|>' → logprob: -16.444969177246094
    9. '=

' → logprob: -16.819969177246094
    10. '=
' → logprob: -16.944969177246094

Token 94: ' rs' (ID: 15181)
  Prédit: ' rs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rs' → logprob: -0.12805379927158356
    2. ' map' → logprob: -2.378053903579712
    3. 'rs' → logprob: -3.753053903579712
    4. 'map' → logprob: -5.878053665161133
    5. ' r' → logprob: -7.003053665161133
    6. 'r' → logprob: -8.753053665161133
    7. ' ' → logprob: -9.128053665161133
    8. '	rs' → logprob: -11.628053665161133
    9. ' list' → logprob: -12.628053665161133
    10. '  ' → logprob: -13.065553665161133

Token 95: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.1160349458805285e-05
    2. ' ()' → logprob: -12.625011444091797
    3. '(' → logprob: -12.875011444091797
    4. '()
' → logprob: -13.000011444091797
    5. '();' → logprob: -13.375011444091797
    6. '()]' → logprob: -14.625011444091797
    7. '())' → logprob: -15.125011444091797
    8. ')' → logprob: -15.875011444091797
    9. '(),' → logprob: -16.375011444091797
    10. '()>' → logprob: -16.875011444091797

Token 96: 'A' (ID: 32)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 97: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06997311115264893
    2. '=' → logprob: -2.6949729919433594
    3. ',' → logprob: -11.19497299194336
    4. '[' → logprob: -11.56997299194336
    5. ' ' → logprob: -12.06997299194336
    6. '=[]' → logprob: -13.06997299194336
    7. '_' → logprob: -13.69497299194336
    8. ' =[' → logprob: -13.81997299194336
    9. '.' → logprob: -14.44497299194336
    10. '=[' → logprob: -14.69497299194336

Token 98: ' rs' (ID: 15181)
  Prédit: 'rs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rs' → logprob: -0.12324076145887375
    2. ' rs' → logprob: -2.3732407093048096
    3. '[]' → logprob: -4.123240947723389
    4. '[' → logprob: -5.873240947723389
    5. ' [' → logprob: -6.373240947723389
    6. 'list' → logprob: -7.123240947723389
    7. ' []' → logprob: -7.248240947723389
    8. ' list' → logprob: -7.998240947723389
    9. '[r' → logprob: -10.87324047088623
    10. '	rs' → logprob: -10.87324047088623

Token 99: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -2.165027217415627e-05
    2. '()
' → logprob: -11.500021934509277
    3. ' ()' → logprob: -12.000021934509277
    4. '(' → logprob: -12.625021934509277
    5. '()]' → logprob: -14.375021934509277
    6. '()[' → logprob: -14.625021934509277
    7. '()

' → logprob: -15.250021934509277
    8. '()<' → logprob: -15.625021934509277
    9. '()\' → logprob: -15.875021934509277
    10. '().' → logprob: -16.50002098083496

Token 100: 'A' (ID: 32)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1956774890422821
    2. '<|end|>' → logprob: -1.8206775188446045
    3. '#' → logprob: -5.820677280426025
    4. '[' → logprob: -5.945677280426025
    5. ' 
' → logprob: -5.945677280426025
    6. 'for' → logprob: -6.070677280426025
    7. '\n' → logprob: -6.945677280426025
    8. 'def' → logprob: -7.695677280426025
    9. '.' → logprob: -7.695677280426025
    10. ' ' → logprob: -7.820677280426025

Token 101: ' +=' (ID: 2757)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 102: ' [-' (ID: 20191)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.44702211022377014
    2. 'A' → logprob: -1.3220220804214478
    3. ' [' → logprob: -3.4470221996307373
    4. 'rs' → logprob: -3.8220221996307373
    5. '[A' → logprob: -3.9470221996307373
    6. ' A' → logprob: -4.322021961212158
    7. '[-' → logprob: -6.072021961212158
    8. 'list' → logprob: -6.572021961212158
    9. '[a' → logprob: -6.822021961212158
    10. ' rs' → logprob: -7.947021961212158

Token 103: '10' (ID: 702)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.450285941362381
    2. '1' → logprob: -1.0752859115600586
    3. 'inf' → logprob: -4.700285911560059
    4. '(' → logprob: -5.450285911560059
    5. '10' → logprob: -5.825285911560059
    6. 'K' → logprob: -6.325285911560059
    7. 'A' → logprob: -6.950285911560059
    8. '100' → logprob: -7.200285911560059
    9. 'float' → logprob: -8.325285911560059
    10. 'i' → logprob: -8.450285911560059

Token 104: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5677642226219177
    2. ']' → logprob: -1.9427642822265625
    3. '**' → logprob: -2.1927642822265625
    4. '9' → logprob: -2.6927642822265625
    5. '10' → logprob: -3.8177642822265625
    6. '00' → logprob: -3.9427642822265625
    7. '18' → logprob: -4.0677642822265625
    8. '000' → logprob: -4.3177642822265625
    9. '15' → logprob: -4.9427642822265625
    10. '7' → logprob: -4.9427642822265625

Token 105: '18' (ID: 1157)
  Prédit: '15'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '15' → logprob: -0.6177756190299988
    2. '10' → logprob: -1.6177756786346436
    3. '9' → logprob: -1.8677756786346436
    4. '18' → logprob: -2.9927756786346436
    5. '20' → logprob: -3.7427756786346436
    6. '12' → logprob: -3.7427756786346436
    7. '11' → logprob: -5.4927754402160645
    8. '16' → logprob: -5.9927754402160645
    9. '14' → logprob: -6.9927754402160645
    10. '19' → logprob: -7.1177754402160645

Token 106: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007615390233695507
    2. ' ]' → logprob: -5.757615566253662
    3. ']*' → logprob: -6.007615566253662
    4. ',' → logprob: -6.382615566253662
    5. ']*(' → logprob: -8.382615089416504
    6. ' for' → logprob: -10.757615089416504
    7. ' ,' → logprob: -11.382615089416504
    8. ']+' → logprob: -12.257615089416504
    9. '-' → logprob: -13.507615089416504
    10. ']<<' → logprob: -13.632615089416504

Token 107: 'def' (ID: 1314)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.193398118019104
    2. '
' → logprob: -2.0683979988098145
    3. 'def' → logprob: -4.3183979988098145
    4. 'for' → logprob: -4.8183979988098145
    5. 'd' → logprob: -6.1933979988098145
    6. 'dist' → logprob: -6.1933979988098145
    7. 'ans' → logprob: -6.3183979988098145
    8. 'stack' → logprob: -6.3183979988098145
    9. 'sorted' → logprob: -6.4433979988098145
    10. 'idx' → logprob: -6.4433979988098145

Token 108: ' lub' (ID: 14267)
  Prédit: ' solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' solve' → logprob: -0.4036528766155243
    2. ' dfs' → logprob: -1.6536529064178467
    3. ' main' → logprob: -2.7786529064178467
    4. ' dp' → logprob: -4.028652667999268
    5. ' ' → logprob: -4.653652667999268
    6. ' calc' → logprob: -4.903652667999268
    7. ' binary' → logprob: -4.903652667999268
    8. ' is' → logprob: -5.278652667999268
    9. ' check' → logprob: -5.403652667999268
    10. ' max' → logprob: -5.653652667999268

Token 109: '(y' (ID: 14684)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.0107024908065796
    2. '(x' → logprob: -1.0107024908065796
    3. '(a' → logprob: -1.8857024908065796
    4. '(l' → logprob: -3.260702610015869
    5. '(k' → logprob: -4.135702610015869
    6. '(p' → logprob: -4.385702610015869
    7. '(b' → logprob: -4.760702610015869
    8. '(' → logprob: -5.385702610015869
    9. '(n' → logprob: -5.385702610015869
    10. '(left' → logprob: -5.385702610015869

Token 110: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08886376768350601
    2. '):' → logprob: -2.5888638496398926
    3. ',x' → logprob: -5.588863849639893
    4. '):
' → logprob: -5.963863849639893
    5. 'x' → logprob: -6.838863849639893
    6. ' ,' → logprob: -7.088863849639893
    7. ',y' → logprob: -7.713863849639893
    8. '):
' → logprob: -8.463863372802734
    9. '   ' → logprob: -9.088863372802734
    10. ',n' → logprob: -9.213863372802734

Token 111: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00038300611777231097
    2. ' for' → logprob: -8.875383377075195
    3. ' x' → logprob: -9.375383377075195
    4. ' ' → logprob: -10.500383377075195
    5. ',' → logprob: -11.125383377075195
    6. 'x' → logprob: -11.250383377075195
    7. ' l' → logprob: -11.250383377075195
    8. 'l' → logprob: -11.500383377075195
    9. ' i' → logprob: -11.750383377075195
    10. ' if' → logprob: -11.875383377075195

Token 112: ' rez' (ID: 22303)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.7995287775993347
    2. '   ' → logprob: -1.7995288372039795
    3. ' lo' → logprob: -2.1745288372039795
    4. ' l' → logprob: -2.7995288372039795
    5. 'i' → logprob: -2.7995288372039795
    6. 'lo' → logprob: -3.4245288372039795
    7. ' i' → logprob: -3.6745288372039795
    8. 'x' → logprob: -3.9245288372039795
    9. ' low' → logprob: -4.6745285987854
    10. 'for' → logprob: -4.9245285987854

Token 113: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18044355511665344
    2. '=' → logprob: -1.805443525314331
    3. ' ' → logprob: -8.68044376373291
    4. '   ' → logprob: -8.80544376373291
    5. ',' → logprob: -9.30544376373291
    6. '=[]' → logprob: -9.55544376373291
    7. '=[]
' → logprob: -9.93044376373291
    8. 's' → logprob: -9.93044376373291
    9. 'x' → logprob: -10.05544376373291
    10. 't' → logprob: -10.30544376373291

Token 114: ' []
' (ID: 8911)
  Prédit: '-INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-INF' → logprob: -0.43154722452163696
    2. '-' → logprob: -2.556547164916992
    3. '-inf' → logprob: -2.556547164916992
    4. '0' → logprob: -2.806547164916992
    5. 'INF' → logprob: -2.806547164916992
    6. ' -' → logprob: -3.056547164916992
    7. '[]' → logprob: -5.181547164916992
    8. ' ' → logprob: -5.681547164916992
    9. ' INF' → logprob: -5.806547164916992
    10. 'y' → logprob: -5.806547164916992

Token 115: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0037549480330199003
    2. ' for' → logprob: -6.37875509262085
    3. 'for' → logprob: -7.25375509262085
    4. 's' → logprob: -8.628754615783691
    5. ' stack' → logprob: -8.753754615783691
    6. 'stack' → logprob: -8.878754615783691
    7. ' s' → logprob: -9.378754615783691
    8. ',' → logprob: -9.503754615783691
    9. 'd' → logprob: -9.628754615783691
    10. 'x' → logprob: -9.753754615783691

Token 116: ' left' (ID: 3561)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7384257912635803
    2. '   ' → logprob: -2.3634257316589355
    3. 'l' → logprob: -2.8634257316589355
    4. 'last' → logprob: -3.2384257316589355
    5. 's' → logprob: -3.3634257316589355
    6. 'x' → logprob: -3.6134257316589355
    7. 'cur' → logprob: -3.7384257316589355
    8. 'j' → logprob: -3.8634257316589355
    9. ' for' → logprob: -3.8634257316589355
    10. 'p' → logprob: -3.9884257316589355

Token 117: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7248218059539795
    2. ' =' → logprob: -0.7248218059539795
    3. ',' → logprob: -3.4748218059539795
    4. ' ,' → logprob: -9.974822044372559
    5. 'y' → logprob: -10.599822044372559
    6. '   ' → logprob: -10.599822044372559
    7. 'x' → logprob: -10.974822044372559
    8. 'stack' → logprob: -11.474822044372559
    9. 'max' → logprob: -11.599822044372559
    10. ' ' → logprob: -11.849822044372559

Token 118: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.18961578607559204
    2. '-' → logprob: -1.9396157264709473
    3. ' ' → logprob: -4.689615726470947
    4. '[]' → logprob: -5.064615726470947
    5. '-inf' → logprob: -5.814615726470947
    6. ' -' → logprob: -6.189615726470947
    7. '-bl' → logprob: -6.814615726470947
    8. '[' → logprob: -7.064615726470947
    9. '-INF' → logprob: -7.314615726470947
    10. '-b' → logprob: -7.314615726470947

Token 119: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6566993594169617
    2. '-' → logprob: -1.6566994190216064
    3. '[]' → logprob: -2.1566994190216064
    4. '-inf' → logprob: -2.4066994190216064
    5. '-INF' → logprob: -2.9066994190216064
    6. '-N' → logprob: -5.156699180603027
    7. '-bl' → logprob: -5.656699180603027
    8. '-b' → logprob: -6.156699180603027
    9. '-Q' → logprob: -6.656699180603027
    10. 'deque' → logprob: -6.656699180603027

Token 120: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 121: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2583138644695282
    2. 'for' → logprob: -1.8833138942718506
    3. ' for' → logprob: -2.6333138942718506
    4. '<|end|>' → logprob: -5.7583136558532715
    5. ' ' → logprob: -9.13331413269043
    6. ',' → logprob: -9.13331413269043
    7. '
' → logprob: -9.25831413269043
    8. 'right' → logprob: -9.63331413269043
    9. '  ' → logprob: -10.13331413269043
    10. '	for' → logprob: -10.25831413269043

Token 122: ' i' (ID: 575)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0928429439663887
    2. '   ' → logprob: -2.8428430557250977
    3. 'right' → logprob: -3.5928430557250977
    4. ' for' → logprob: -6.467843055725098
    5. 'stack' → logprob: -7.217843055725098
    6. 'max' → logprob: -8.592843055725098
    7. 'def' → logprob: -9.092843055725098
    8. ' right' → logprob: -10.092843055725098
    9. '
' → logprob: -10.842843055725098
    10. 'n' → logprob: -10.967843055725098

Token 123: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1437242031097412
    2. ' =' → logprob: -2.268724203109741
    3. 'n' → logprob: -3.518724203109741
    4. 'nd' → logprob: -8.39372444152832
    5. ',' → logprob: -8.64372444152832
    6. 'nt' → logprob: -9.39372444152832
    7. ' ' → logprob: -9.51872444152832
    8. '+=' → logprob: -9.64372444152832
    9. 's' → logprob: -10.01872444152832
    10. 'for' → logprob: -10.14372444152832

Token 124: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0568356066942215
    2. ' ' → logprob: -3.056835651397705
    3. '1' → logprob: -4.806835651397705
    4. '-' → logprob: -11.056835174560547
    5. ' -' → logprob: -12.306835174560547
    6. '   ' → logprob: -12.744335174560547
    7. '  ' → logprob: -12.806835174560547
    8. 'len' → logprob: -12.869335174560547
    9. '<|end|>' → logprob: -12.931835174560547
    10. '2' → logprob: -13.431835174560547

Token 125: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.034683696925640106
    2. '1' → logprob: -3.4096837043762207
    3. ' ' → logprob: -8.034683227539062
    4. '-' → logprob: -8.159683227539062
    5. 'N' → logprob: -8.534683227539062
    6. 'len' → logprob: -8.784683227539062
    7. 'y' → logprob: -10.409683227539062
    8. 'left' → logprob: -10.909683227539062
    9. 'K' → logprob: -11.159683227539062
    10. 'i' → logprob: -12.909683227539062

Token 126: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7965493202209473
    2. '   ' → logprob: -1.5465493202209473
    3. '<|end|>' → logprob: -1.7965493202209473
    4. ' ' → logprob: -2.7965493202209473
    5. ' 
' → logprob: -3.2965493202209473
    6. ' while' → logprob: -3.4215493202209473
    7. '    ' → logprob: -4.171549320220947
    8. 'while' → logprob: -5.046549320220947
    9. '    
' → logprob: -5.171549320220947
    10. ',' → logprob: -5.921549320220947

Token 127: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3213537037372589
    2. '<|end|>' → logprob: -1.4463536739349365
    3. ' while' → logprob: -3.6963536739349365
    4. 'while' → logprob: -4.571353912353516
    5. '
' → logprob: -6.446353912353516
    6. ' ' → logprob: -6.946353912353516
    7. '  ' → logprob: -8.321353912353516
    8. '    
' → logprob: -8.446353912353516
    9. '<|end|>' → logprob: -8.446353912353516
    10. '    ' → logprob: -8.821353912353516

Token 128: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.1837562769651413
    2. ' while' → logprob: -2.3087563514709473
    3. '   ' → logprob: -3.3087563514709473
    4. 'n' → logprob: -3.8087563514709473
    5. 'for' → logprob: -4.808756351470947
    6. ' for' → logprob: -7.558756351470947
    7. 'N' → logprob: -7.808756351470947
    8. ' n' → logprob: -8.058755874633789
    9. 'len' → logprob: -8.933755874633789
    10. ' N' → logprob: -9.933755874633789

Token 129: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.022034598514437675
    2. ' i' → logprob: -3.8970346450805664
    3. 'left' → logprob: -6.647034645080566
    4. ' left' → logprob: -9.022034645080566
    5. 'N' → logprob: -10.647034645080566
    6. 'len' → logprob: -11.022034645080566
    7. 'True' → logprob: -11.647034645080566
    8. ' ' → logprob: -11.772034645080566
    9. '   ' → logprob: -12.522034645080566
    10. 'y' → logprob: -13.022034645080566

Token 130: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.8288775682449341
    2. '<len' → logprob: -0.9538775682449341
    3. '<' → logprob: -2.0788774490356445
    4. '<N' → logprob: -3.0788774490356445
    5. '<=' → logprob: -5.4538774490356445
    6. '<n' → logprob: -6.2038774490356445
    7. ' <=' → logprob: -7.4538774490356445
    8. 'in' → logprob: -9.203877449035645
    9. 'len' → logprob: -9.953877449035645
    10. ' in' → logprob: -10.828877449035645

Token 131: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.10035417973995209
    2. 'len' → logprob: -2.3503541946411133
    3. 'y' → logprob: -9.725354194641113
    4. 'K' → logprob: -9.850354194641113
    5. ' N' → logprob: -11.225354194641113
    6. ' len' → logprob: -11.475354194641113
    7. 'n' → logprob: -12.600354194641113
    8. '   ' → logprob: -13.475354194641113
    9. ' ' → logprob: -13.600354194641113
    10. '10' → logprob: -13.600354194641113

Token 132: '+' (ID: 10)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7844904065132141
    2. ' and' → logprob: -1.1594903469085693
    3. ':
' → logprob: -1.7844903469085693
    4. 'and' → logprob: -2.7844903469085693
    5. '   ' → logprob: -9.034490585327148
    6. ' ' → logprob: -9.784490585327148
    7. ':

' → logprob: -10.159490585327148
    8. '):
' → logprob: -10.784490585327148
    9. ',' → logprob: -10.909490585327148
    10. '<|end|>' → logprob: -10.909490585327148

Token 133: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010986098641296849
    2. ' ' → logprob: -9.250109672546387
    3. 'K' → logprob: -11.625109672546387
    4. '2' → logprob: -13.000109672546387
    5. '+' → logprob: -14.000109672546387
    6. '   ' → logprob: -14.625109672546387
    7. ' K' → logprob: -14.750109672546387
    8. '
' → logprob: -15.625109672546387
    9. '-' → logprob: -15.750109672546387
    10. '0' → logprob: -16.125110626220703

Token 134: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5170142650604248
    2. ':' → logprob: -1.6420142650604248
    3. ' and' → logprob: -1.6420142650604248
    4. 'and' → logprob: -4.142014503479004
    5. '   ' → logprob: -8.392014503479004
    6. ' :
' → logprob: -8.517014503479004
    7. ' ' → logprob: -9.642014503479004
    8. ':

' → logprob: -9.892014503479004
    9. ' :' → logprob: -10.392014503479004
    10. ':
' → logprob: -10.892014503479004

Token 135: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013915021903812885
    2. ' if' → logprob: -5.138915061950684
    3. 'if' → logprob: -5.388915061950684
    4. '   ' → logprob: -5.763915061950684
    5. ',' → logprob: -9.888915061950684
    6. ' ' → logprob: -10.138915061950684
    7. '
' → logprob: -10.513915061950684
    8. '    ' → logprob: -11.263915061950684
    9. 's' → logprob: -11.263915061950684
    10. '<|end|>' → logprob: -11.513915061950684

Token 136: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6288843154907227
    2. '       ' → logprob: -1.2538843154907227
    3. ' if' → logprob: -1.7538843154907227
    4. '   ' → logprob: -5.378884315490723
    5. 'while' → logprob: -6.628884315490723
    6. ' ' → logprob: -7.503884315490723
    7. ' while' → logprob: -8.003884315490723
    8. '           ' → logprob: -8.378884315490723
    9. 'x' → logprob: -8.753884315490723
    10. '
' → logprob: -8.878884315490723

Token 137: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.5339080691337585
    2. ' A' → logprob: -0.9089080691337585
    3. 'y' → logprob: -5.158907890319824
    4. ' y' → logprob: -5.783907890319824
    5. 'i' → logprob: -7.408907890319824
    6. '(A' → logprob: -8.033907890319824
    7. ' i' → logprob: -8.408907890319824
    8. ' ' → logprob: -8.908907890319824
    9. 'lub' → logprob: -9.596407890319824
    10. '   ' → logprob: -9.658907890319824

Token 138: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.002218295820057392
    2. '[' → logprob: -6.127218246459961
    3. ' [' → logprob: -11.877218246459961
    4. 'i' → logprob: -12.127218246459961
    5. '[left' → logprob: -12.127218246459961
    6. '[
' → logprob: -12.377218246459961
    7. '[j' → logprob: -12.877218246459961
    8. '
' → logprob: -13.002218246459961
    9. ' ' → logprob: -14.002218246459961
    10. ' i' → logprob: -14.502218246459961

Token 139: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10625923424959183
    2. ']>=' → logprob: -2.731259346008301
    3. '>=' → logprob: -4.231259346008301
    4. '>' → logprob: -4.481259346008301
    5. ']>' → logprob: -5.856259346008301
    6. '<' → logprob: -5.981259346008301
    7. ']<' → logprob: -6.356259346008301
    8. ']<=' → logprob: -7.106259346008301
    9. '<=' → logprob: -7.231259346008301
    10. '-' → logprob: -8.1062593460083

Token 140: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -1.0212188959121704
    2. '>=' → logprob: -1.0212188959121704
    3. '>' → logprob: -1.8962188959121704
    4. '<=' → logprob: -2.771218776702881
    5. ' <' → logprob: -3.521218776702881
    6. ' >=' → logprob: -3.771218776702881
    7. ' <=' → logprob: -5.021218776702881
    8. ' >' → logprob: -5.271218776702881
    9. ' ' → logprob: -6.396218776702881
    10. '==' → logprob: -7.771218776702881

Token 141: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.03937159851193428
    2. ' y' → logprob: -3.2893714904785156
    3. '=' → logprob: -6.914371490478516
    4. 'A' → logprob: -8.414371490478516
    5. '=A' → logprob: -10.414371490478516
    6. '=y' → logprob: -10.539371490478516
    7. ' A' → logprob: -10.789371490478516
    8. ' ' → logprob: -11.039371490478516
    9. '	y' → logprob: -12.664371490478516
    10. ' =' → logprob: -12.851871490478516

Token 142: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1804119050502777
    2. ':
' → logprob: -1.8054119348526
    3. ' and' → logprob: -7.6804118156433105
    4. 'and' → logprob: -9.555412292480469
    5. '       ' → logprob: -10.430412292480469
    6. ' or' → logprob: -10.555412292480469
    7. ' :' → logprob: -10.805412292480469
    8. ':

' → logprob: -11.305412292480469
    9. '   ' → logprob: -11.680412292480469
    10. '):' → logprob: -11.680412292480469

Token 143: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08719874918460846
    2. ':
' → logprob: -3.2121987342834473
    3. ' and' → logprob: -3.9621987342834473
    4. ':' → logprob: -4.587198734283447
    5. '           ' → logprob: -4.962198734283447
    6. 'i' → logprob: -6.837198734283447
    7. ' or' → logprob: -6.962198734283447
    8. '   ' → logprob: -6.962198734283447
    9. 'left' → logprob: -7.087198734283447
    10. ' left' → logprob: -7.212198734283447

Token 144: ' chunk' (ID: 23958)
  Prédit: 'rez'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rez' → logprob: -0.5283141136169434
    2. '       ' → logprob: -1.9033141136169434
    3. 'left' → logprob: -2.0283141136169434
    4. 'if' → logprob: -2.5283141136169434
    5. 'i' → logprob: -4.403314113616943
    6. '           ' → logprob: -4.528314113616943
    7. '   ' → logprob: -4.653314113616943
    8. ' if' → logprob: -5.403314113616943
    9. ' left' → logprob: -5.778314113616943
    10. 'while' → logprob: -6.028314113616943

Token 145: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5069841146469116
    2. '=' → logprob: -1.8819841146469116
    3. '.append' → logprob: -2.131984233856201
    4. 'len' → logprob: -3.506984233856201
    5. '_length' → logprob: -4.256984233856201
    6. '_len' → logprob: -4.381984233856201
    7. '   ' → logprob: -4.631984233856201
    8. 's' → logprob: -4.631984233856201
    9. 'start' → logprob: -4.631984233856201
    10. '_start' → logprob: -4.756984233856201

Token 146: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.031676795333623886
    2. ' A' → logprob: -3.656676769256592
    3. '[i' → logprob: -6.281676769256592
    4. '[A' → logprob: -7.031676769256592
    5. 'i' → logprob: -7.406676769256592
    6. 'bl' → logprob: -8.40667724609375
    7. 'sorted' → logprob: -8.40667724609375
    8. ' ' → logprob: -8.53167724609375
    9. '[]' → logprob: -8.65667724609375
    10. '[' → logprob: -8.65667724609375

Token 147: '[left' (ID: 98859)
  Prédit: '[left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[left' → logprob: -0.016206568107008934
    2. '[i' → logprob: -4.141206741333008
    3. 'left' → logprob: -8.766206741333008
    4. '
' → logprob: -12.516206741333008
    5. '[' → logprob: -12.766206741333008
    6. 'i' → logprob: -13.141206741333008
    7. '[right' → logprob: -13.141206741333008
    8. ',left' → logprob: -13.391206741333008
    9. ' left' → logprob: -13.641206741333008
    10. '   ' → logprob: -14.266206741333008

Token 148: ':i' (ID: 34041)
  Prédit: ':i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':i' → logprob: -0.009937996976077557
    2. ':' → logprob: -4.759937763214111
    3. ' :' → logprob: -7.134937763214111
    4. ']' → logprob: -8.63493824005127
    5. '
' → logprob: -8.75993824005127
    6. 'i' → logprob: -9.38493824005127
    7. '   ' → logprob: -10.25993824005127
    8. ',i' → logprob: -10.75993824005127
    9. ' ' → logprob: -11.50993824005127
    10. '

' → logprob: -12.50993824005127

Token 149: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.0554516427218914
    2. ']' → logprob: -2.9304516315460205
    3. '][' → logprob: -8.305451393127441
    4. ']
' → logprob: -8.805451393127441
    5. '+' → logprob: -9.555451393127441
    6. ' ]
' → logprob: -9.805451393127441
    7. ']

' → logprob: -11.055451393127441
    8. '-' → logprob: -11.930451393127441
    9. '[::-' → logprob: -12.180451393127441
    10. '].' → logprob: -12.805451393127441

Token 150: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02040676213800907
    2. 'if' → logprob: -4.770406723022461
    3. ' if' → logprob: -5.520406723022461
    4. '
' → logprob: -5.645406723022461
    5. 'rez' → logprob: -5.645406723022461
    6. '            
' → logprob: -8.770406723022461
    7. '       ' → logprob: -9.020406723022461
    8. ',' → logprob: -9.270406723022461
    9. '[::-' → logprob: -9.395406723022461
    10. 're' → logprob: -10.895406723022461

Token 151: ' chunk' (ID: 23958)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.669029176235199
    2. '           ' → logprob: -1.7940292358398438
    3. 'rez' → logprob: -1.7940292358398438
    4. 'chunk' (adapté à ' chunk') → logprob: -2.4190292358398438
    5. 'left' → logprob: -3.4190292358398438
    6. 'for' → logprob: -4.419029235839844
    7. 'while' → logprob: -4.919029235839844
    8. 'l' → logprob: -5.544029235839844
    9. '       ' → logprob: -6.044029235839844
    10. 'j' → logprob: -7.169029235839844

Token 152: ' =' (ID: 314)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.07994276285171509
    2. '.reverse' → logprob: -2.9549427032470703
    3. '.append' → logprob: -4.32994270324707
    4. '=' → logprob: -5.07994270324707
    5. ' =' → logprob: -5.70494270324707
    6. '.extend' → logprob: -6.82994270324707
    7. '[::-' → logprob: -8.45494270324707
    8. '.' → logprob: -9.07994270324707
    9. 'sort' → logprob: -9.32994270324707
    10. ' .' → logprob: -9.45494270324707

Token 153: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.08521820604801178
    2. 'list' → logprob: -3.2102181911468506
    3. '[' → logprob: -3.3352181911468506
    4. ' sorted' → logprob: -6.46021842956543
    5. '[list' → logprob: -6.58521842956543
    6. 'chunk' → logprob: -7.33521842956543
    7. '(sorted' → logprob: -8.21021842956543
    8. ' [' → logprob: -8.21021842956543
    9. '[s' → logprob: -8.33521842956543
    10. '[]' → logprob: -8.33521842956543

Token 154: '(chunk' (ID: 92058)
  Prédit: '(chunk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(chunk' → logprob: -0.12353053689002991
    2. '(set' → logprob: -2.248530626296997
    3. 'chunk' → logprob: -4.873530387878418
    4. '(list' → logprob: -6.248530387878418
    5. '([' → logprob: -7.373530387878418
    6. 'set' → logprob: -9.123530387878418
    7. '({' → logprob: -9.248530387878418
    8. '(' → logprob: -9.248530387878418
    9. '(re' → logprob: -10.123530387878418
    10. 'list' → logprob: -10.123530387878418

Token 155: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8977669477462769
    2. ')
' → logprob: -1.0227669477462769
    3. '+' → logprob: -1.7727669477462769
    4. ',' → logprob: -3.5227670669555664
    5. ' +' → logprob: -4.772767066955566
    6. '[::-' → logprob: -4.772767066955566
    7. '(reverse' → logprob: -5.397767066955566
    8. '[' → logprob: -5.397767066955566
    9. 'reverse' → logprob: -6.022767066955566
    10. ')[' → logprob: -7.022767066955566

Token 156: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04823164641857147
    2. '
' → logprob: -3.798231601715088
    3. '       ' → logprob: -4.548231601715088
    4. ',' → logprob: -4.923231601715088
    5. 'rez' → logprob: -5.923231601715088
    6. '            
' → logprob: -7.298231601715088
    7. '<|end|>' → logprob: -7.673231601715088
    8. '[::-' → logprob: -7.923231601715088
    9. '.' → logprob: -8.423232078552246
    10. ',re' → logprob: -8.423232078552246

Token 157: ' if' (ID: 538)
  Prédit: 'rez'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rez' → logprob: -0.6198031902313232
    2. '   ' → logprob: -1.6198031902313232
    3. 'for' → logprob: -2.3698031902313232
    4. 'if' (adapté à ' if') → logprob: -3.1198031902313232
    5. ' for' → logprob: -3.4948031902313232
    6. '       ' → logprob: -3.6198031902313232
    7. ' if' → logprob: -3.9948031902313232
    8. '           ' → logprob: -4.119803428649902
    9. ' rez' → logprob: -4.369803428649902
    10. 're' → logprob: -4.869803428649902

Token 158: ' len' (ID: 4631)
  Prédit: 'chunk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chunk' → logprob: -0.25681403279304504
    2. 'len' → logprob: -2.0068140029907227
    3. ' chunk' → logprob: -2.7568140029907227
    4. ' len' → logprob: -4.131814002990723
    5. 'not' → logprob: -5.631814002990723
    6. ' not' → logprob: -6.131814002990723
    7. 'rez' → logprob: -6.256814002990723
    8. 'y' → logprob: -7.006814002990723
    9. '   ' → logprob: -7.444314002990723
    10. 'left' → logprob: -7.569314002990723

Token 159: '(chunk' (ID: 92058)
  Prédit: '(chunk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(chunk' → logprob: -0.00013250234769657254
    2. '(' → logprob: -9.12513256072998
    3. ' (' → logprob: -11.50013256072998
    4. 'chunk' → logprob: -11.62513256072998
    5. '(re' → logprob: -12.62513256072998
    6. '(
' → logprob: -15.00013256072998
    7. ' chunk' → logprob: -15.75013256072998
    8. '(fragment' → logprob: -16.000131607055664
    9. '(cluster' → logprob: -16.250131607055664
    10. 'A' → logprob: -17.000131607055664

Token 160: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.659585177898407
    2. '>' → logprob: -1.4095852375030518
    3. ' >' → logprob: -1.9095852375030518
    4. ')>' → logprob: -3.1595852375030518
    5. ' >=' → logprob: -4.534584999084473
    6. '>=' → logprob: -4.534584999084473
    7. '==' → logprob: -4.909584999084473
    8. '<|end|>' → logprob: -5.159584999084473
    9. ' ==' → logprob: -5.659584999084473
    10. ' and' → logprob: -5.784584999084473

Token 161: ' >=' (ID: 5064)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.4822371006011963
    2. ' >' → logprob: -1.3572371006011963
    3. '>=' → logprob: -3.3572371006011963
    4. ' >=' → logprob: -3.4822371006011963
    5. '==' → logprob: -3.6072371006011963
    6. ':' → logprob: -4.357236862182617
    7. ' ==' → logprob: -4.357236862182617
    8. ' <' → logprob: -5.982236862182617
    9. '<' → logprob: -7.107236862182617
    10. ' <=' → logprob: -7.232236862182617

Token 162: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.02841970883309841
    2. '1' → logprob: -4.153419494628906
    3. ' K' → logprob: -5.278419494628906
    4. 'Q' → logprob: -5.528419494628906
    5. '2' → logprob: -6.028419494628906
    6. ' ' → logprob: -7.778419494628906
    7. '3' → logprob: -9.278419494628906
    8. 'N' → logprob: -9.528419494628906
    9. '
' → logprob: -10.153419494628906
    10. '   ' → logprob: -10.528419494628906

Token 163: '-' (ID: 12)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.15305042266845703
    2. ' and' → logprob: -2.653050422668457
    3. ':
' → logprob: -2.653050422668457
    4. '           ' → logprob: -7.778050422668457
    5. 'and' → logprob: -7.778050422668457
    6. '               ' → logprob: -9.528050422668457
    7. ' :' → logprob: -10.153050422668457
    8. '       ' → logprob: -11.153050422668457
    9. ':

' → logprob: -11.153050422668457
    10. ',' → logprob: -11.153050422668457

Token 164: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.980854959692806e-05
    2. ' ' → logprob: -10.250069618225098
    3. '0' → logprob: -10.500069618225098
    4. '   ' → logprob: -13.000069618225098
    5. '+' → logprob: -13.500069618225098
    6. '2' → logprob: -14.000069618225098
    7. '
' → logprob: -14.125069618225098
    8. '```' → logprob: -14.750069618225098
    9. ')' → logprob: -15.375069618225098
    10. ':' → logprob: -15.625069618225098

Token 165: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20857632160186768
    2. ':
' → logprob: -1.8335763216018677
    3. ' and' → logprob: -3.583576202392578
    4. 'and' → logprob: -8.583576202392578
    5. '           ' → logprob: -8.708576202392578
    6. ',' → logprob: -9.208576202392578
    7. '               ' → logprob: -9.833576202392578
    8. ':

' → logprob: -10.083576202392578
    9. ' :' → logprob: -10.083576202392578
    10. ' :
' → logprob: -11.208576202392578

Token 166: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.019210107624530792
    2. '           ' → logprob: -4.519210338592529
    3. ' for' → logprob: -4.894210338592529
    4. 'for' → logprob: -8.394209861755371
    5. ',' → logprob: -9.394209861755371
    6. 'res' → logprob: -9.644209861755371
    7. 'rez' → logprob: -10.144209861755371
    8. ' if' → logprob: -10.769209861755371
    9. ' rez' → logprob: -10.769209861755371
    10. ' res' → logprob: -11.144209861755371

Token 167: ' for' (ID: 395)
  Prédit: ' rez'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rez' → logprob: -0.8002558350563049
    2. ' for' → logprob: -1.4252557754516602
    3. '           ' → logprob: -2.17525577545166
    4. 'rez' → logprob: -2.30025577545166
    5. '               ' → logprob: -2.92525577545166
    6. '                   ' → logprob: -3.80025577545166
    7. 'for' (adapté à ' for') → logprob: -4.30025577545166
    8. '
' → logprob: -6.92525577545166
    9. ' if' → logprob: -7.05025577545166
    10. 'res' → logprob: -7.05025577545166

Token 168: ' e' (ID: 319)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.6010538339614868
    2. 'j' → logprob: -1.4760538339614868
    3. ' x' → logprob: -2.2260537147521973
    4. 'x' → logprob: -2.7260537147521973
    5. ' c' → logprob: -5.101053714752197
    6. ' val' → logprob: -5.351053714752197
    7. ' idx' → logprob: -5.476053714752197
    8. ' v' → logprob: -5.851053714752197
    9. 'val' → logprob: -5.851053714752197
    10. 'v' → logprob: -5.851053714752197

Token 169: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00267387623898685
    2. 'in' → logprob: -6.002674102783203
    3. 's' → logprob: -8.877674102783203
    4. ' ' → logprob: -10.877674102783203
    5. 'n' → logprob: -11.752674102783203
    6. '        ' → logprob: -12.377674102783203
    7. '    ' → logprob: -12.377674102783203
    8. ',' → logprob: -12.815174102783203
    9. '   ' → logprob: -12.940174102783203
    10. '  ' → logprob: -13.127674102783203

Token 170: ' it' (ID: 480)
  Prédit: 'chunk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chunk' → logprob: -0.12301658093929291
    2. ' chunk' → logprob: -2.248016595840454
    3. 'range' → logprob: -4.998016357421875
    4. ' range' → logprob: -6.623016357421875
    5. 'it' → logprob: -6.998016357421875
    6. '(chunk' → logprob: -7.248016357421875
    7. 're' → logprob: -8.873016357421875
    8. '   ' → logprob: -9.373016357421875
    9. ' ' → logprob: -9.748016357421875
    10. '  ' → logprob: -10.623016357421875

Token 171: '.is' (ID: 3109)
  Prédit: '.com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.com' → logprob: -0.016264386475086212
    2. '.chain' → logprob: -4.64126443862915
    3. '.per' → logprob: -6.01626443862915
    4. '   ' → logprob: -6.64126443862915
    5. '       ' → logprob: -7.64126443862915
    6. '.' → logprob: -7.76626443862915
    7. '.c' → logprob: -7.76626443862915
    8. 'com' → logprob: -8.141263961791992
    9. '           ' → logprob: -8.766263961791992
    10. '.groupby' → logprob: -8.891263961791992

Token 172: 'lice' (ID: 7321)
  Prédit: 'lice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lice' → logprob: -0.00013882013445254415
    2. 'ub' → logprob: -10.250139236450195
    3. '   ' → logprob: -10.625139236450195
    4. '
' → logprob: -11.250139236450195
    5. 'n' → logprob: -11.625139236450195
    6. 's' → logprob: -11.625139236450195
    7. 'com' → logprob: -12.000139236450195
    8. 'l' → logprob: -12.375139236450195
    9. 'sible' → logprob: -12.500139236450195
    10. 'lic' → logprob: -12.500139236450195

Token 173: '(chunk' (ID: 92058)
  Prédit: '(chunk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(chunk' → logprob: -3.786196975852363e-05
    2. '(' → logprob: -10.375038146972656
    3. '(re' → logprob: -13.125038146972656
    4. 'chunk' → logprob: -13.250038146972656
    5. '(sorted' → logprob: -13.500038146972656
    6. '(
' → logprob: -14.500038146972656
    7. '(iter' → logprob: -16.000038146972656
    8. ' (' → logprob: -16.250038146972656
    9. '(ch' → logprob: -16.250038146972656
    10. '   ' → logprob: -16.250038146972656

Token 174: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6405603289604187
    2. ',' → logprob: -1.0155603885650635
    3. '(chunk' → logprob: -2.8905603885650635
    4. '(len' → logprob: -4.015560150146484
    5. ',K' → logprob: -4.390560150146484
    6. ' ,' → logprob: -5.390560150146484
    7. '(K' → logprob: -5.390560150146484
    8. ',k' → logprob: -5.765560150146484
    9. '(i' → logprob: -5.765560150146484
    10. '(-' → logprob: -6.140560150146484

Token 175: ' len' (ID: 4631)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.32704704999923706
    2. ' K' → logprob: -1.4520471096038818
    3. 'len' → logprob: -3.952047109603882
    4. '0' → logprob: -4.077046871185303
    5. ' len' → logprob: -4.952046871185303
    6. ' ' → logprob: -7.827046871185303
    7. '(len' → logprob: -7.952046871185303
    8. ' (' → logprob: -8.702047348022461
    9. '1' → logprob: -8.952047348022461
    10. '   ' → logprob: -9.202047348022461

Token 176: '(chunk' (ID: 92058)
  Prédit: '(chunk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(chunk' → logprob: -0.00010306637705070898
    2. 'chunk' → logprob: -9.875102996826172
    3. '(' → logprob: -10.000102996826172
    4. ' (' → logprob: -13.250102996826172
    5. '(
' → logprob: -13.375102996826172
    6. '-' → logprob: -13.875102996826172
    7. ' -' → logprob: -14.750102996826172
    8. 'e' → logprob: -15.250102996826172
    9. 'of' → logprob: -15.375102996826172
    10. '   ' → logprob: -15.625102996826172

Token 177: ')-' (ID: 14080)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6873446702957153
    2. ' -' → logprob: -1.3123446702957153
    3. '-K' → logprob: -1.8123446702957153
    4. '-(' → logprob: -3.562344551086426
    5. '   ' → logprob: -4.187344551086426
    6. '-k' → logprob: -4.562344551086426
    7. '()-' → logprob: -5.937344551086426
    8. '()' → logprob: -6.062344551086426
    9. ')' → logprob: -6.937344551086426
    10. ',' → logprob: -7.187344551086426

Token 178: 'K' (ID: 42)
  Prédit: '(K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(K' → logprob: -0.0705711618065834
    2. 'K' → logprob: -2.695571184158325
    3. ' (' → logprob: -7.695570945739746
    4. '(' → logprob: -9.445570945739746
    5. ' K' → logprob: -9.695570945739746
    6. ',K' → logprob: -11.945570945739746
    7. '   ' → logprob: -12.070570945739746
    8. '1' → logprob: -12.195570945739746
    9. '
' → logprob: -12.320570945739746
    10. ' ' → logprob: -12.695570945739746

Token 179: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.010733924806118011
    2. ' +' → logprob: -5.2607340812683105
    3. '1' → logprob: -5.6357340812683105
    4. '   ' → logprob: -6.8857340812683105
    5. '-' → logprob: -8.510733604431152
    6. ',' → logprob: -9.010733604431152
    7. '    ' → logprob: -9.635733604431152
    8. ' ' → logprob: -9.760733604431152
    9. '2' → logprob: -9.885733604431152
    10. '  ' → logprob: -10.010733604431152

Token 180: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003609680861700326
    2. '0' → logprob: -8.375361442565918
    3. '2' → logprob: -9.250361442565918
    4. ' ' → logprob: -11.125361442565918
    5. '-' → logprob: -11.500361442565918
    6. '
' → logprob: -12.500361442565918
    7. '+' → logprob: -13.875361442565918
    8. '4' → logprob: -13.937861442565918
    9. '```' → logprob: -14.187861442565918
    10. '   ' → logprob: -14.250361442565918

Token 181: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.028310095891356468
    2. ' ,' → logprob: -3.7783100605010986
    3. ',None' → logprob: -5.653310298919678
    4. '):' → logprob: -7.028310298919678
    5. ',len' → logprob: -7.778310298919678
    6. 'None' → logprob: -10.15330982208252
    7. '):
' → logprob: -10.27830982208252
    8. ',n' → logprob: -10.40330982208252
    9. '   ' → logprob: -10.52830982208252
    10. ' ):' → logprob: -10.90330982208252

Token 182: '                   ' (ID: 699)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.806175172328949
    2. ',' → logprob: -0.931175172328949
    3. ':' → logprob: -2.1811752319335938
    4. ':
' → logprob: -3.6811752319335938
    5. '               ' → logprob: -5.306175231933594
    6. ' :' → logprob: -5.306175231933594
    7. ' :
' → logprob: -6.056175231933594
    8. ' ,' → logprob: -6.556175231933594
    9. ',
' → logprob: -6.681175231933594
    10. '       ' → logprob: -6.806175231933594

Token 183: ' rez' (ID: 22303)
  Prédit: ' rez'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rez' → logprob: -0.19133739173412323
    2. '                       ' → logprob: -1.9413373470306396
    3. 'rez' (adapté à ' rez') → logprob: -3.6913373470306396
    4. '                   ' → logprob: -6.316337585449219
    5. ' if' → logprob: -6.566337585449219
    6. '                    ' → logprob: -7.691337585449219
    7. ' print' → logprob: -7.816337585449219
    8. 'res' → logprob: -8.816337585449219
    9. ',' → logprob: -8.941337585449219
    10. '+' → logprob: -9.066337585449219

Token 184: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.026370901614427567
    2. '.' → logprob: -3.6513710021972656
    3. ' .' → logprob: -9.651371002197266
    4. '       ' → logprob: -13.776371002197266
    5. '.extend' → logprob: -13.901371002197266
    6. '.push' → logprob: -14.401371002197266
    7. '<|end|>' → logprob: -14.526371002197266
    8. '.setdefault' → logprob: -14.526371002197266
    9. 'append' → logprob: -14.651371002197266
    10. '.insert' → logprob: -14.651371002197266

Token 185: '(e' (ID: 3454)
  Prédit: '(e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -0.0005271765403449535
    2. '(' → logprob: -7.750527381896973
    3. 'e' → logprob: -9.625527381896973
    4. ' (' → logprob: -10.875527381896973
    5. ' e' → logprob: -12.250527381896973
    6. '(
' → logprob: -12.625527381896973
    7. '((' → logprob: -13.125527381896973
    8. '(int' → logprob: -15.375527381896973
    9. '(-' → logprob: -15.875527381896973
    10. '(abs' → logprob: -16.000526428222656

Token 186: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008594007231295109
    2. ' )' → logprob: -5.508594036102295
    3. '+' → logprob: -6.008594036102295
    4. ')
' → logprob: -6.383594036102295
    5. ' +' → logprob: -9.008593559265137
    6. ',' → logprob: -9.258593559265137
    7. ' )
' → logprob: -10.008593559265137
    8. '                   ' → logprob: -10.258593559265137
    9. '               ' → logprob: -11.383593559265137
    10. '           ' → logprob: -11.633593559265137

Token 187: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020209230482578278
    2. '           ' → logprob: -4.145209312438965
    3. '               ' → logprob: -5.770209312438965
    4. '        
' → logprob: -7.645209312438965
    5. '\n' → logprob: -9.020209312438965
    6. '            
' → logprob: -9.395209312438965
    7. '   ' → logprob: -9.395209312438965
    8. '
' → logprob: -10.270209312438965
    9. '                
' → logprob: -10.270209312438965
    10. ',' → logprob: -10.520209312438965

Token 188: ' left' (ID: 3561)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10859052836894989
    2. '       ' → logprob: -2.858590602874756
    3. 'left' (adapté à ' left') → logprob: -3.358590602874756
    4. 'i' → logprob: -4.733590602874756
    5. ' left' → logprob: -7.483590602874756
    6. '               ' → logprob: -7.733590602874756
    7. '   ' → logprob: -7.733590602874756
    8. 'else' → logprob: -7.858590602874756
    9. ' i' → logprob: -9.733590126037598
    10. '
' → logprob: -10.233590126037598

Token 189: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1003928855061531
    2. ' =' → logprob: -2.3503928184509277
    3. '+=' → logprob: -8.850393295288086
    4. ' +=' → logprob: -10.225393295288086
    5. '=i' → logprob: -12.100393295288086
    6. '   ' → logprob: -13.975393295288086
    7. ',' → logprob: -16.100393295288086
    8. ' ' → logprob: -17.350393295288086
    9. '=
' → logprob: -17.600393295288086
    10. ')' → logprob: -18.100393295288086

Token 190: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00012535012501757592
    2. ' i' → logprob: -9.00012493133545
    3. '   ' → logprob: -13.25012493133545
    4. '           ' → logprob: -16.250125885009766
    5. '	i' → logprob: -17.625125885009766
    6. '       ' → logprob: -18.500125885009766
    7. '(i' → logprob: -18.625125885009766
    8. '=i' → logprob: -19.125125885009766
    9. ' ' → logprob: -19.250125885009766
    10. '    ' → logprob: -19.250125885009766

Token 191: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.004087066277861595
    2. ' +' → logprob: -5.504086971282959
    3. '
' → logprob: -12.254087448120117
    4. '+i' → logprob: -13.254087448120117
    5. '+
' → logprob: -13.504087448120117
    6. '1' → logprob: -14.879087448120117
    7. '   ' → logprob: -16.004087448120117
    8. '           ' → logprob: -17.129087448120117
    9. '0' → logprob: -17.254087448120117
    10. '```' → logprob: -17.254087448120117

Token 192: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.173704271830502e-06
    2. ' ' → logprob: -12.75000286102295
    3. '
' → logprob: -16.500003814697266
    4. '```' → logprob: -17.000003814697266
    5. '   ' → logprob: -18.125003814697266
    6. '+' → logprob: -18.750003814697266
    7. '``' → logprob: -19.500003814697266
    8. '           ' → logprob: -19.500003814697266
    9. '0' → logprob: -20.000003814697266
    10. '-' → logprob: -20.187503814697266

Token 193: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020772289484739304
    2. '
' → logprob: -3.8957722187042236
    3. '   ' → logprob: -8.770771980285645
    4. '        
' → logprob: -10.395771980285645
    5. '           ' → logprob: -11.270771980285645
    6. '    
' → logprob: -11.645771980285645
    7. 'i' → logprob: -11.895771980285645
    8. '<|end|>' → logprob: -12.770771980285645
    9. ',' → logprob: -12.895771980285645
    10. '\n' → logprob: -13.395771980285645

Token 194: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013944036327302456
    2. '
' → logprob: -7.501394271850586
    3. 'i' → logprob: -7.626394271850586
    4. '   ' → logprob: -8.001394271850586
    5. '           ' → logprob: -11.876394271850586
    6. '```' → logprob: -12.501394271850586
    7. '	' → logprob: -13.751394271850586
    8. ' i' → logprob: -14.001394271850586
    9. '	i' → logprob: -14.001394271850586
    10. ',i' → logprob: -14.251394271850586

Token 195: ' i' (ID: 575)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006456370465457439
    2. '   ' → logprob: -5.63145637512207
    3. 'i' (adapté à ' i') → logprob: -6.50645637512207
    4. '
' → logprob: -6.63145637512207
    5. ' i' → logprob: -10.38145637512207
    6. '    
' → logprob: -13.25645637512207
    7. '        
' → logprob: -13.50645637512207
    8. '           ' → logprob: -13.75645637512207
    9. '```' → logprob: -14.00645637512207
    10. '	i' → logprob: -14.13145637512207

Token 196: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0025127585977315903
    2. ' +=' → logprob: -6.0025129318237305
    3. '=' → logprob: -10.25251293182373
    4. '+' → logprob: -13.62751293182373
    5. '   ' → logprob: -15.00251293182373
    6. ']+=' → logprob: -15.75251293182373
    7. '1' → logprob: -17.002511978149414
    8. '```' → logprob: -17.752511978149414
    9. '    ' → logprob: -18.502511978149414
    10. '0' → logprob: -19.127511978149414

Token 197: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.1689596148207784e-05
    2. ' ' → logprob: -9.875051498413086
    3. '   ' → logprob: -16.125051498413086
    4. '```' → logprob: -16.750051498413086
    5. '  ' → logprob: -18.250051498413086
    6. '
' → logprob: -19.375051498413086
    7. '<|end|>' → logprob: -20.375051498413086
    8. ' ' → logprob: -20.562551498413086
    9. '۱' → logprob: -20.625051498413086
    10. '       ' → logprob: -20.750051498413086

Token 198: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '   ' → logprob: -18.875001907348633
    4. '```' → logprob: -19.000001907348633
    5. '  ' → logprob: -20.687501907348633
    6. '۱' → logprob: -20.812501907348633
    7. '１' → logprob: -20.875001907348633
    8. '
' → logprob: -21.562501907348633
    9. '+' → logprob: -21.750001907348633
    10. '2' → logprob: -22.062501907348633

Token 199: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0018865150632336736
    2. '
' → logprob: -6.501886367797852
    3. 'return' → logprob: -8.376886367797852
    4. ' return' → logprob: -9.626886367797852
    5. '    
' → logprob: -10.126886367797852
    6. ',' → logprob: -11.251886367797852
    7. '<|end|>' → logprob: -11.376886367797852
    8. ',
' → logprob: -12.126886367797852
    9. '       ' → logprob: -12.376886367797852
    10. '	return' → logprob: -13.251886367797852

Token 200: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0033656926825642586
    2. 'return' → logprob: -5.878365516662598
    3. ' return' → logprob: -7.503365516662598
    4. ' ' → logprob: -13.128365516662598
    5. '       ' → logprob: -13.128365516662598
    6. 'while' → logprob: -13.503365516662598
    7. '```' → logprob: -13.753365516662598
    8. '	return' → logprob: -14.003365516662598
    9. '
' → logprob: -14.128365516662598
    10. ' while' → logprob: -14.753365516662598

Token 201: ' rez' (ID: 22303)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4440597593784332
    2. 'return' → logprob: -1.0690597295761108
    3. ' return' → logprob: -4.1940598487854
    4. ' ' → logprob: -9.819059371948242
    5. 'rez' (adapté à ' rez') → logprob: -10.444059371948242
    6. '```' → logprob: -10.944059371948242
    7. '	return' → logprob: -11.194059371948242
    8. '
' → logprob: -11.444059371948242
    9. '       ' → logprob: -12.319059371948242
    10. 'while' → logprob: -12.444059371948242

Token 202: '.sort' (ID: 19551)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.7147449254989624
    2. '.sort' → logprob: -0.7147449254989624
    3. '.extend' → logprob: -4.089745044708252
    4. '.' → logprob: -5.714745044708252
    5. '.reverse' → logprob: -8.089744567871094
    6. 'return' → logprob: -8.339744567871094
    7. '<|end|>' → logprob: -8.714744567871094
    8. ',' → logprob: -9.089744567871094
    9. '=' → logprob: -9.214744567871094
    10. ' =' → logprob: -9.714744567871094

Token 203: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.20156274735927582
    2. '()' → logprob: -1.701562762260437
    3. '()
' → logprob: -9.326562881469727
    4. 'return' → logprob: -9.951562881469727
    5. 'def' → logprob: -12.826562881469727
    6. '(' → logprob: -13.076562881469727
    7. '()\' → logprob: -13.076562881469727
    8. '()

' → logprob: -13.451562881469727
    9. ' ()
' → logprob: -13.576562881469727
    10. ' return' → logprob: -14.701562881469727

Token 204: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005846308544278145
    2. 'return' → logprob: -5.2558465003967285
    3. '<|end|>' → logprob: -8.13084602355957
    4. '
' → logprob: -9.13084602355957
    5. '    
' → logprob: -9.50584602355957
    6. ' return' → logprob: -9.88084602355957
    7. 'def' → logprob: -10.75584602355957
    8. '	return' → logprob: -11.50584602355957
    9. 'if' → logprob: -11.50584602355957
    10. '```' → logprob: -11.63084602355957

Token 205: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.1674860119819641
    2. '   ' → logprob: -1.9174859523773193
    3. 'if' (adapté à ' if') → logprob: -5.792486190795898
    4. 'def' → logprob: -6.292486190795898
    5. 'for' → logprob: -6.417486190795898
    6. ' return' → logprob: -7.542486190795898
    7. '
' → logprob: -9.792486190795898
    8. 'i' → logprob: -11.417486190795898
    9. 'l' → logprob: -11.667486190795898
    10. 'pos' → logprob: -11.667486190795898

Token 206: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.39540642499923706
    2. ' not' → logprob: -1.8954064846038818
    3. 'not' → logprob: -2.395406484603882
    4. ' len' → logprob: -2.895406484603882
    5. 'rez' → logprob: -3.895406484603882
    6. ' rez' → logprob: -4.770406246185303
    7. ' ' → logprob: -8.020406723022461
    8. 'K' → logprob: -8.395406723022461
    9. 'left' → logprob: -8.895406723022461
    10. ' K' → logprob: -9.645406723022461

Token 207: '(re' (ID: 8178)
  Prédit: '(re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(re' → logprob: -3.6312321753939614e-05
    2. '(' → logprob: -10.750036239624023
    3. '(res' → logprob: -12.375036239624023
    4. '(
' → logprob: -13.125036239624023
    5. 'rez' → logprob: -14.000036239624023
    6. 're' → logprob: -14.000036239624023
    7. ')' → logprob: -14.125036239624023
    8. 'A' → logprob: -14.375036239624023
    9. ' (' → logprob: -14.375036239624023
    10. '
' → logprob: -14.500036239624023

Token 208: 'z' (ID: 89)
  Prédit: 'z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.0007823493797332048
    2. 'rez' → logprob: -8.000782012939453
    3. '(re' → logprob: -8.250782012939453
    4. '(' → logprob: -9.750782012939453
    5. '(z' → logprob: -10.250782012939453
    6. '<' → logprob: -11.000782012939453
    7. '>' → logprob: -11.375782012939453
    8. '
' → logprob: -11.625782012939453
    9. '[' → logprob: -11.875782012939453
    10. 'ez' → logprob: -11.875782012939453

Token 209: ')' (ID: 8)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.9324562549591064
    2. ')' → logprob: -1.5574562549591064
    3. '==' → logprob: -1.8074562549591064
    4. '<' → logprob: -1.9324562549591064
    5. ' ==' → logprob: -3.0574562549591064
    6. '<K' → logprob: -3.6824562549591064
    7. '>' → logprob: -5.557456016540527
    8. '>=' → logprob: -5.682456016540527
    9. ' >=' → logprob: -6.307456016540527
    10. '<Q' → logprob: -6.682456016540527

Token 210: ' >=' (ID: 5064)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.2787659466266632
    2. ' <' → logprob: -1.5287659168243408
    3. '<K' → logprob: -4.52876615524292
    4. '>=' → logprob: -5.15376615524292
    5. '==' → logprob: -5.27876615524292
    6. ' >=' → logprob: -6.77876615524292
    7. '>' → logprob: -6.77876615524292
    8. ' ==' → logprob: -7.02876615524292
    9. '<Q' → logprob: -7.65376615524292
    10. ')' → logprob: -8.278765678405762

Token 211: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.023623596876859665
    2. 'K' → logprob: -4.023623466491699
    3. '1' → logprob: -5.273623466491699
    4. 'N' → logprob: -9.0236234664917
    5. ' Q' → logprob: -9.1486234664917
    6. 'len' → logprob: -10.2736234664917
    7. '(Q' → logprob: -10.8986234664917
    8. '(' → logprob: -11.0236234664917
    9. '2' → logprob: -11.3986234664917
    10. 'q' → logprob: -11.8986234664917

Token 212: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6367673873901367
    2. ':
' → logprob: -0.8867673873901367
    3. ' and' → logprob: -3.0117673873901367
    4. ' else' → logprob: -5.511767387390137
    5. 'and' → logprob: -5.886767387390137
    6. 'else' → logprob: -6.761767387390137
    7. ':return' → logprob: -6.761767387390137
    8. '   ' → logprob: -8.636767387390137
    9. '[' → logprob: -8.761767387390137
    10. '-' → logprob: -9.261767387390137

Token 213: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02386702224612236
    2. ':' → logprob: -4.023867130279541
    3. ':
' → logprob: -5.898867130279541
    4. '
' → logprob: -6.773867130279541
    5. ':return' → logprob: -7.523867130279541
    6. ' return' → logprob: -7.648867130279541
    7. '   ' → logprob: -7.648867130279541
    8. 'return' → logprob: -8.898866653442383
    9. '):
' → logprob: -10.648866653442383
    10. '	' → logprob: -10.898866653442383

Token 214: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.11400770395994186
    2. '       ' → logprob: -2.7390077114105225
    3. 'print' → logprob: -3.9890077114105225
    4. ' return' → logprob: -4.239007472991943
    5. '   ' → logprob: -4.614007472991943
    6. '
' → logprob: -9.239007949829102
    7. ' print' → logprob: -9.364007949829102
    8. '           ' → logprob: -10.489007949829102
    9. '	return' → logprob: -10.739007949829102
    10. ':return' → logprob: -11.864007949829102

Token 215: ' rez' (ID: 22303)
  Prédit: 'rez'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rez' → logprob: -0.000912774819880724
    2. ' rez' → logprob: -7.000912666320801
    3. 'res' → logprob: -15.0009126663208
    4. 'rev' → logprob: -15.3759126663208
    5. '   ' → logprob: -15.5009126663208
    6. 'repr' → logprob: -16.875913619995117
    7. 'riz' → logprob: -16.875913619995117
    8. 'rech' → logprob: -16.875913619995117
    9. 'Rez' → logprob: -17.000913619995117
    10. 'rek' → logprob: -17.000913619995117

Token 216: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.000714935187716037
    2. '[-' → logprob: -7.2507147789001465
    3. '[len' → logprob: -13.000715255737305
    4. 'Q' → logprob: -14.125715255737305
    5. '[K' → logprob: -14.500715255737305
    6. '[q' → logprob: -14.500715255737305
    7. ' [' → logprob: -15.375715255737305
    8. '   ' → logprob: -15.500715255737305
    9. '[
' → logprob: -16.125715255737305
    10. '[[' → logprob: -16.250715255737305

Token 217: 'Q' (ID: 48)
  Prédit: '-Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-Q' → logprob: -0.3335610628128052
    2. 'Q' → logprob: -1.3335610628128052
    3. '-' → logprob: -4.083560943603516
    4. 'len' → logprob: -6.208560943603516
    5. ' Q' → logprob: -7.708560943603516
    6. ' -' → logprob: -8.208560943603516
    7. '-q' → logprob: -8.333560943603516
    8. '-(' → logprob: -8.708560943603516
    9. '
' → logprob: -10.583560943603516
    10. ' len' → logprob: -10.958560943603516

Token 218: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -2.1888679839321412e-05
    2. ' -' → logprob: -10.750021934509277
    3. ']-' → logprob: -15.000021934509277
    4. 'Q' → logprob: -17.00002098083496
    5. '```' → logprob: -17.25002098083496
    6. '()-' → logprob: -17.75002098083496
    7. '[' → logprob: -17.87502098083496
    8. '[-' → logprob: -18.00002098083496
    9. '−' → logprob: -18.12502098083496
    10. ']' → logprob: -18.12502098083496

Token 219: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. 'Q' → logprob: -19.0
    4. ']' → logprob: -19.125
    5. '```' → logprob: -19.375
    6. '   ' → logprob: -19.875
    7. 'q' → logprob: -20.125
    8. '2' → logprob: -20.75
    9. '
' → logprob: -21.0
    10. '0' → logprob: -21.25

Token 220: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2531915307044983
    2. ']
' → logprob: -1.6281914710998535
    3. '<|end|>' → logprob: -4.1281914710998535
    4. 'else' → logprob: -5.1281914710998535
    5. '
' → logprob: -5.8781914710998535
    6. ' ]' → logprob: -7.2531914710998535
    7. '   ' → logprob: -7.3781914710998535
    8. ' else' → logprob: -7.3781914710998535
    9. ')' → logprob: -8.878191947937012
    10. ' ]
' → logprob: -9.253191947937012

Token 221: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05929042398929596
    2. 'else' → logprob: -3.1842904090881348
    3. ' else' → logprob: -4.434290409088135
    4. '<|end|>' → logprob: -5.934290409088135
    5. 'return' → logprob: -7.434290409088135
    6. '	else' → logprob: -8.184290885925293
    7. ')' → logprob: -8.184290885925293
    8. '[]' → logprob: -9.184290885925293
    9. ' return' → logprob: -9.559290885925293
    10. ']' → logprob: -9.684290885925293

Token 222: ' return' (ID: 622)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.09697283804416656
    2. '   ' → logprob: -3.096972942352295
    3. ' else' → logprob: -3.596972942352295
    4. 'return' (adapté à ' return') → logprob: -3.971972942352295
    5. ' return' → logprob: -7.221972942352295
    6. 'None' → logprob: -9.471972465515137
    7. '	else' → logprob: -9.596972465515137
    8. '[]' → logprob: -10.971972465515137
    9. '	return' → logprob: -11.221972465515137
    10. ' ' → logprob: -11.471972465515137

Token 223: ' INF' (ID: 69196)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.2587933540344238
    2. '-INF' → logprob: -1.2587933540344238
    3. 'None' → logprob: -1.3837933540344238
    4. 'INF' → logprob: -2.008793354034424
    5. '-inf' → logprob: -3.758793354034424
    6. ' None' → logprob: -4.633793354034424
    7. ' -' → logprob: -5.008793354034424
    8. ' INF' → logprob: -6.508793354034424
    9. 'rez' → logprob: -6.633793354034424
    10. '0' → logprob: -6.758793354034424

Token 224: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 225: 'res' (ID: 430)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.0756951570510864
    2. 'low' → logprob: -1.2006951570510864
    3. 'lo' → logprob: -1.7006951570510864
    4. 'for' → logprob: -2.575695037841797
    5. 'print' → logprob: -2.575695037841797
    6. 'left' → logprob: -4.825695037841797
    7. 'r' → logprob: -5.575695037841797
    8. 'def' → logprob: -5.700695037841797
    9. ' lo' → logprob: -6.075695037841797
    10. 'res' → logprob: -6.825695037841797

Token 226: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3490256667137146
    2. '=' → logprob: -1.2240257263183594
    3. '=[]' → logprob: -8.47402572631836
    4. 'ult' → logprob: -8.84902572631836
    5. 's' → logprob: -9.47402572631836
    6. 'ults' → logprob: -9.72402572631836
    7. ',' → logprob: -10.22402572631836
    8. '_' → logprob: -11.47402572631836
    9. ' ' → logprob: -11.84902572631836
    10. '[]' → logprob: -11.97402572631836

Token 227: ' INF' (ID: 69196)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.7233161330223083
    2. 'lub' → logprob: -0.9733161330223083
    3. 'INF' → logprob: -2.348316192626953
    4. '-' → logprob: -3.848316192626953
    5. '0' → logprob: -4.723316192626953
    6. '-INF' → logprob: -5.973316192626953
    7. '[' → logprob: -6.598316192626953
    8. '[-' → logprob: -6.848316192626953
    9. 'inf' → logprob: -6.973316192626953
    10. '[]
' → logprob: -7.473316192626953

Token 228: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04957140237092972
    2. 'for' → logprob: -3.4245715141296387
    3. '<|end|>' → logprob: -4.924571514129639
    4. ' 
' → logprob: -5.924571514129639
    5. ' for' → logprob: -6.424571514129639
    6. '\n' → logprob: -6.549571514129639
    7. '  
' → logprob: -7.424571514129639
    8. ' ' → logprob: -8.17457103729248
    9. '' → logprob: -8.29957103729248
    10. 'while' → logprob: -8.29957103729248

Token 229: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01025108341127634
    2. 'left' → logprob: -5.635251045227051
    3. 'l' → logprob: -5.885251045227051
    4. 'low' → logprob: -5.885251045227051
    5. 'lo' → logprob: -7.010251045227051
    6. ' for' → logprob: -10.01025104522705
    7. 'while' → logprob: -10.38525104522705
    8. 'r' → logprob: -11.13525104522705
    9. 'L' → logprob: -11.26025104522705
    10. '```' → logprob: -11.76025104522705

Token 230: ' ' (ID: 220)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7513662576675415
    2. 'y' → logprob: -1.2513662576675415
    3. ' x' → logprob: -2.626366138458252
    4. ' y' → logprob: -2.626366138458252
    5. 'i' → logprob: -2.876366138458252
    6. '_' → logprob: -4.376366138458252
    7. ' i' → logprob: -4.876366138458252
    8. 'v' → logprob: -5.626366138458252
    9. ' _' → logprob: -5.876366138458252
    10. 'e' → logprob: -6.126366138458252

Token 231: 'ival' (ID: 4552)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.40241602063179016
    2. 'y' → logprob: -1.5274159908294678
    3. 'i' → logprob: -2.5274159908294678
    4. 'a' → logprob: -4.527416229248047
    5. '_' → logprob: -5.027416229248047
    6. 'e' → logprob: -5.527416229248047
    7. 'val' → logprob: -5.777416229248047
    8. 'v' → logprob: -6.152416229248047
    9. '_x' → logprob: -6.277416229248047
    10. '_i' → logprob: -6.527416229248047

Token 232: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023793093860149384
    2. 'in' → logprob: -3.7737929821014404
    3. ',' → logprob: -8.89879322052002
    4. 'range' → logprob: -9.02379322052002
    5. 's' → logprob: -9.14879322052002
    6. ' ' → logprob: -9.77379322052002
    7. '1' → logprob: -10.89879322052002
    8. '_' → logprob: -10.89879322052002
    9. '   ' → logprob: -11.39879322052002
    10. 'n' → logprob: -11.64879322052002

Token 233: ' filter' (ID: 6690)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.6764461994171143
    2. ' range' → logprob: -1.5514461994171143
    3. 'range' → logprob: -1.8014461994171143
    4. ' A' → logprob: -2.1764461994171143
    5. ' set' → logprob: -8.051445960998535
    6. 'set' → logprob: -8.176445960998535
    7. ' ' → logprob: -9.051445960998535
    8. 'it' → logprob: -9.051445960998535
    9. 'sorted' → logprob: -9.551445960998535
    10. '(range' → logprob: -10.176445960998535

Token 234: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.04403560981154442
    2. '(None' → logprob: -3.7940356731414795
    3. '(' → logprob: -4.4190354347229
    4. '(l' → logprob: -4.7940354347229
    5. '(range' → logprob: -8.794035911560059
    6. '(
' → logprob: -9.919035911560059
    7. '((' → logprob: -11.294035911560059
    8. '(bool' → logprob: -11.669035911560059
    9. '(str' → logprob: -12.044035911560059
    10. '(A' → logprob: -12.669035911560059

Token 235: ' z' (ID: 579)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.9920969605445862
    2. ' lambda' → logprob: -0.9920969605445862
    3. 'lambda' → logprob: -1.9920969009399414
    4. ' None' → logprob: -3.1170969009399414
    5. '(lambda' → logprob: -3.6170969009399414
    6. 'None' → logprob: -3.7420969009399414
    7. 'x' → logprob: -4.117096900939941
    8. ' y' → logprob: -6.117096900939941
    9. ' A' → logprob: -6.242096900939941
    10. ':' → logprob: -6.492096900939941

Token 236: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1622786968946457
    2. ' :' → logprob: -1.912278652191162
    3. ':z' → logprob: -6.537278652191162
    4. ' z' → logprob: -7.912278652191162
    5. 'z' → logprob: -8.91227912902832
    6. ':A' → logprob: -10.41227912902832
    7. ':l' → logprob: -11.78727912902832
    8. ':int' → logprob: -11.78727912902832
    9. ':y' → logprob: -11.91227912902832
    10. ':not' → logprob: -12.03727912902832

Token 237: ' True' (ID: 6432)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.15200760960578918
    2. ' z' → logprob: -2.902007579803467
    3. 'lub' → logprob: -3.152007579803467
    4. 'A' → logprob: -3.527007579803467
    5. ' A' → logprob: -5.027007579803467
    6. ' lub' → logprob: -5.527007579803467
    7. 'K' → logprob: -6.527007579803467
    8. '0' → logprob: -8.152008056640625
    9. ' ' → logprob: -8.277008056640625
    10. 'l' → logprob: -8.652008056640625

Token 238: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013057519681751728
    2. ' ,' → logprob: -4.638057708740234
    3. ',A' → logprob: -7.388057708740234
    4. ',z' → logprob: -7.763057708740234
    5. 'range' → logprob: -8.263057708740234
    6. 'not' → logprob: -8.388057708740234
    7. 'z' → logprob: -8.513057708740234
    8. 'A' → logprob: -8.513057708740234
    9. '   ' → logprob: -8.763057708740234
    10. ':' → logprob: -8.763057708740234

Token 239: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.1642771065235138
    2. ' A' → logprob: -2.4142770767211914
    3. 'range' → logprob: -3.1642770767211914
    4. ' range' → logprob: -4.664277076721191
    5. 'set' → logprob: -4.914277076721191
    6. ' set' → logprob: -6.414277076721191
    7. 'lub' → logprob: -7.789277076721191
    8. ' ' → logprob: -8.789277076721191
    9. ' lub' → logprob: -8.914277076721191
    10. '   ' → logprob: -8.914277076721191

Token 240: '[:-' (ID: 63556)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0016141273081302643
    2. '):
' → logprob: -6.751614093780518
    3. ' ):' → logprob: -8.376614570617676
    4. ':' → logprob: -8.501614570617676
    5. '[' → logprob: -12.751614570617676
    6. '[:' → logprob: -13.251614570617676
    7. '[:-' → logprob: -13.501614570617676
    8. ')' → logprob: -14.126614570617676
    9. ' :' → logprob: -14.501614570617676
    10. ',' → logprob: -14.751614570617676

Token 241: '1' (ID: 16)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.8748201131820679
    2. '])' → logprob: -1.2498201131820679
    3. ']):' → logprob: -1.7498201131820679
    4. '1' → logprob: -3.1248202323913574
    5. '-' → logprob: -4.249820232391357
    6. '-N' → logprob: -4.374820232391357
    7. ']' → logprob: -4.624820232391357
    8. ']:' → logprob: -5.249820232391357
    9. ' ' → logprob: -5.374820232391357
    10. 'K' → logprob: -5.374820232391357

Token 242: ']):
' (ID: 51989)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03388300538063049
    2. '):
' → logprob: -3.4088830947875977
    3. ' ):' → logprob: -8.533883094787598
    4. ':' → logprob: -11.158883094787598
    5. '):
' → logprob: -12.158883094787598
    6. ')' → logprob: -12.283883094787598
    7. ',' → logprob: -12.408883094787598
    8. ' ):
' → logprob: -12.658883094787598
    9. '   ' → logprob: -13.033883094787598
    10. '+' → logprob: -13.158883094787598

Token 243: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2669973373413086
    2. ' res' → logprob: -1.7669973373413086
    3. ':
' → logprob: -3.0169973373413086
    4. ':' → logprob: -4.516997337341309
    5. '):
' → logprob: -6.641997337341309
    6. 'res' → logprob: -7.266997337341309
    7. '    
' → logprob: -7.766997337341309
    8. ' :
' → logprob: -7.891997337341309
    9. ' if' → logprob: -8.516997337341309
    10. '
' → logprob: -9.141997337341309

Token 244: ' candidate' (ID: 17098)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0438251495361328
    2. ' val' → logprob: -1.1688251495361328
    3. ' res' → logprob: -1.5438251495361328
    4. 'res' → logprob: -3.168825149536133
    5. 'v' → logprob: -3.918825149536133
    6. 'val' → logprob: -4.293825149536133
    7. ' v' → logprob: -4.293825149536133
    8. ' r' → logprob: -4.793825149536133
    9. ' t' → logprob: -5.043825149536133
    10. ' tmp' → logprob: -5.668825149536133

Token 245: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931591629981995
    2. ' =' → logprob: -0.6931591629981995
    3. ' ' → logprob: -11.568159103393555
    4. '   ' → logprob: -14.318159103393555
    5. '  ' → logprob: -14.693159103393555
    6. ' ' → logprob: -14.943159103393555
    7. '=l' → logprob: -14.943159103393555
    8. '_' → logprob: -15.443159103393555
    9. ' =
' → logprob: -16.193159103393555
    10. '	' → logprob: -17.193159103393555

Token 246: ' lub' (ID: 14267)
  Prédit: 'lub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lub' → logprob: -0.029772823676466942
    2. ' lub' → logprob: -3.5297727584838867
    3. '   ' → logprob: -11.529772758483887
    4. ' ' → logprob: -12.779772758483887
    5. 'l' → logprob: -12.779772758483887
    6. ' ' → logprob: -13.529772758483887
    7. '
' → logprob: -13.779772758483887
    8. 'lib' → logprob: -14.029772758483887
    9. '  ' → logprob: -14.654772758483887
    10. 'ub' → logprob: -14.654772758483887

Token 247: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.117345684382599e-05
    2. '(candidate' → logprob: -11.250020980834961
    3. '(c' → logprob: -12.250020980834961
    4. ' (' → logprob: -13.375020980834961
    5. '((' → logprob: -14.625020980834961
    6. '(iv' → logprob: -14.750020980834961
    7. '(i' → logprob: -14.875020980834961
    8. '(`' → logprob: -15.750020980834961
    9. '(val' → logprob: -16.00002098083496
    10. '(
' → logprob: -16.37502098083496

Token 248: 'ival' (ID: 4552)
  Prédit: 'ival'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ival' → logprob: -0.00015264409012161195
    2. 'val' → logprob: -9.125152587890625
    3. ' ' → logprob: -10.750152587890625
    4. 'ivals' → logprob: -11.625152587890625
    5. 'ivalent' → logprob: -12.250152587890625
    6. ')' → logprob: -12.500152587890625
    7. 'iv' → logprob: -13.250152587890625
    8. '(' → logprob: -14.250152587890625
    9. 'ial' → logprob: -14.750152587890625
    10. 'ical' → logprob: -15.250152587890625

Token 249: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.030749740079045296
    2. ')' → logprob: -3.530749797821045
    3. '+' → logprob: -7.530749797821045
    4. ' )
' → logprob: -7.780749797821045
    5. ')
' → logprob: -10.530749320983887
    6. ' )' → logprob: -12.030749320983887
    7. '-' → logprob: -12.280749320983887
    8. ' +' → logprob: -12.780749320983887
    9. ')+' → logprob: -13.155749320983887
    10. ')

' → logprob: -13.905749320983887

Token 250: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010919779539108276
    2. 'if' → logprob: -5.010919570922852
    3. ' if' → logprob: -5.510919570922852
    4. '
' → logprob: -9.260919570922852
    5. 'res' → logprob: -10.260919570922852
    6. ' res' → logprob: -11.510919570922852
    7. '  ' → logprob: -12.510919570922852
    8. ' ' → logprob: -12.635919570922852
    9. '    
' → logprob: -13.135919570922852
    10. '       ' → logprob: -13.760919570922852

Token 251: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.25753456354141235
    2. '   ' → logprob: -1.5075345039367676
    3. 'res' → logprob: -5.882534503936768
    4. ' if' → logprob: -5.882534503936768
    5. ' res' → logprob: -11.632534980773926
    6. '
' → logprob: -13.132534980773926
    7. '	if' → logprob: -13.507534980773926
    8. ' ' → logprob: -14.132534980773926
    9. '  ' → logprob: -14.257534980773926
    10. '       ' → logprob: -15.632534980773926

Token 252: ' candidate' (ID: 17098)
  Prédit: 'candidate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'candidate' → logprob: -0.57594895362854
    2. ' candidate' → logprob: -0.82594895362854
    3. '(candidate' → logprob: -12.075948715209961
    4. ' candidat' → logprob: -13.575948715209961
    5. '_candidate' → logprob: -14.075948715209961
    6. ' ' → logprob: -14.075948715209961
    7. 'andidate' → logprob: -15.075948715209961
    8. 'Candidate' → logprob: -15.450948715209961
    9. 'res' → logprob: -15.950948715209961
    10. ' ' → logprob: -16.07594871520996

Token 253: ' -' (ID: 533)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.05656472221016884
    2. ' <' → logprob: -2.9315648078918457
    3. '!=' → logprob: -6.931564807891846
    4. ' !=' → logprob: -7.556564807891846
    5. ' is' → logprob: -9.056564331054688
    6. '<=' → logprob: -11.306564331054688
    7. '<int' → logprob: -11.806564331054688
    8. ' ' → logprob: -12.181564331054688
    9. ' <=' → logprob: -12.431564331054688
    10. '<data' → logprob: -12.556564331054688

Token 254: ' ' (ID: 220)
  Prédit: 'ival'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ival' → logprob: -0.10358409583568573
    2. 'res' → logprob: -3.228584051132202
    3. '0' → logprob: -3.728584051132202
    4. '1' → logprob: -4.353584289550781
    5. ' res' → logprob: -5.603584289550781
    6. 'val' → logprob: -5.853584289550781
    7. '>' → logprob: -5.853584289550781
    8. ' ' → logprob: -5.978584289550781
    9. '-' → logprob: -6.478584289550781
    10. '<' → logprob: -6.728584289550781

Token 255: 'ival' (ID: 4552)
  Prédit: 'ival'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ival' → logprob: -0.00317581370472908
    2. 'res' → logprob: -6.503175735473633
    3. '1' → logprob: -7.003175735473633
    4. 'val' → logprob: -8.003175735473633
    5. ' ' → logprob: -9.128175735473633
    6. '0' → logprob: -9.253175735473633
    7. 'iv' → logprob: -10.253175735473633
    8. ' res' → logprob: -10.503175735473633
    9. 'ivals' → logprob: -10.503175735473633
    10. 'IVAL' → logprob: -11.128175735473633

Token 256: ' <' (ID: 464)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.964666485786438
    2. ' >=' → logprob: -1.589666485786438
    3. ' >' → logprob: -1.714666485786438
    4. '>=' → logprob: -1.714666485786438
    5. ' <' → logprob: -3.4646663665771484
    6. '<' → logprob: -3.9646663665771484
    7. ' <=' → logprob: -6.089666366577148
    8. '<=' → logprob: -6.214666366577148
    9. ' ' → logprob: -8.589666366577148
    10. ')' → logprob: -10.714666366577148

Token 257: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.0005849646404385567
    2. ' res' → logprob: -7.500585079193115
    3. '0' → logprob: -10.375584602355957
    4. 'K' → logprob: -14.875584602355957
    5. '
' → logprob: -15.625584602355957
    6. ' ' → logprob: -15.625584602355957
    7. '(res' → logprob: -16.375585556030273
    8. '   ' → logprob: -17.125585556030273
    9. '	res' → logprob: -17.375585556030273
    10. '$res' → logprob: -17.750585556030273

Token 258: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3139418363571167
    2. ':
' → logprob: -1.3139418363571167
    3. ' and' → logprob: -8.063941955566406
    4. ' :' → logprob: -9.313941955566406
    5. ' :
' → logprob: -9.313941955566406
    6. 'and' → logprob: -9.438941955566406
    7. '   ' → logprob: -9.688941955566406
    8. '       ' → logprob: -11.313941955566406
    9. ' or' → logprob: -12.188941955566406
    10. '):
' → logprob: -12.188941955566406

Token 259: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4788171052932739
    2. 'res' → logprob: -0.9788171052932739
    3. '   ' → logprob: -5.728816986083984
    4. ' res' → logprob: -6.853816986083984
    5. ':' → logprob: -7.978816986083984
    6. ':
' → logprob: -10.603816986083984
    7. '=' → logprob: -10.603816986083984
    8. '
' → logprob: -11.728816986083984
    9. '	res' → logprob: -11.728816986083984
    10. '=res' → logprob: -12.603816986083984

Token 260: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.22097067534923553
    2. ' res' → logprob: -1.720970630645752
    3. '       ' → logprob: -3.970970630645752
    4. '           ' → logprob: -7.595970630645752
    5. '   ' → logprob: -12.09597110748291
    6. '	res' → logprob: -13.34597110748291
    7. '
' → logprob: -13.97097110748291
    8. '               ' → logprob: -14.47097110748291
    9. ' ' → logprob: -15.09597110748291
    10. '        ' → logprob: -15.09597110748291

Token 261: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020667314529419
    2. '=' → logprob: -2.3502066135406494
    3. ' ' → logprob: -17.47520637512207
    4. '    ' → logprob: -17.47520637512207
    5. '   ' → logprob: -17.47520637512207
    6. ',' → logprob: -17.97520637512207
    7. '＝' → logprob: -18.35020637512207
    8. ' =
' → logprob: -18.97520637512207
    9. '<|end|>' → logprob: -19.47520637512207
    10. ' =)' → logprob: -19.60020637512207

Token 262: ' candidate' (ID: 17098)
  Prédit: 'candidate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'candidate' → logprob: -0.023250719532370567
    2. ' candidate' → logprob: -3.7732508182525635
    3. '(candidate' → logprob: -12.398250579833984
    4. 'c' → logprob: -14.648250579833984
    5. ' candidat' → logprob: -15.273250579833984
    6. '   ' → logprob: -15.898250579833984
    7. '_candidate' → logprob: -16.023250579833984
    8. 'andidate' → logprob: -17.023250579833984
    9. 'cand' → logprob: -18.398250579833984
    10. ' ' → logprob: -18.773250579833984

Token 263: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.018220998346805573
    2. '-print' → logprob: -4.643220901489258
    3. ' -' → logprob: -5.143220901489258
    4. 'print' → logprob: -6.143220901489258
    5. '
' → logprob: -9.018220901489258
    6. '-
' → logprob: -9.143220901489258
    7. '-final' → logprob: -10.393220901489258
    8. '-return' → logprob: -10.643220901489258
    9. '-if' → logprob: -10.768220901489258
    10. '-ex' → logprob: -11.018220901489258

Token 264: ' ' (ID: 220)
  Prédit: 'ival'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ival' → logprob: -0.0005358747439458966
    2. ' ' → logprob: -7.62553596496582
    3. 'ivalent' → logprob: -10.62553596496582
    4. 'ivals' → logprob: -11.50053596496582
    5. 'val' → logprob: -11.87553596496582
    6. 'IVAL' → logprob: -13.62553596496582
    7. 'ivial' → logprob: -13.87553596496582
    8. 'ivat' → logprob: -14.00053596496582
    9. 'ivil' → logprob: -14.25053596496582
    10. 'valu' → logprob: -14.87553596496582

Token 265: 'ival' (ID: 4552)
  Prédit: 'ival'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ival' → logprob: -3.1186566047836095e-05
    2. ' ' → logprob: -10.625031471252441
    3. 'val' → logprob: -12.625031471252441
    4. 'ivalent' → logprob: -12.875031471252441
    5. 'ivals' → logprob: -14.875031471252441
    6. 'IVAL' → logprob: -15.875031471252441
    7. 'valu' → logprob: -16.625030517578125
    8. 'ivil' → logprob: -16.750030517578125
    9. 'ivial' → logprob: -17.000030517578125
    10. 'intval' → logprob: -17.250030517578125

Token 266: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0007778270519338548
    2. '
' → logprob: -7.250777721405029
    3. 'if' → logprob: -9.625778198242188
    4. ' print' → logprob: -13.750778198242188
    5. '```' → logprob: -14.875778198242188
    6. '
' → logprob: -15.875778198242188
    7. '

' → logprob: -16.875778198242188
    8. '#print' → logprob: -16.875778198242188
    9. '    
' → logprob: -17.500778198242188
    10. ' 
' → logprob: -17.625778198242188

Token 267: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.1994775377388578e-05
    2. 'if' → logprob: -12.125012397766113
    3. ' print' → logprob: -12.875012397766113
    4. '<|end|>' → logprob: -13.500012397766113
    5. '
' → logprob: -13.625012397766113
    6. 'return' → logprob: -14.500012397766113
    7. '```' → logprob: -15.125012397766113
    8. 'res' → logprob: -15.250012397766113
    9. '#print' → logprob: -16.500011444091797
    10. ')' → logprob: -16.500011444091797

Token 268: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.00317783304490149
    2. 'res' → logprob: -5.753177642822266
    3. ' res' → logprob: -16.628177642822266
    4. '(' → logprob: -16.753177642822266
    5. '$res' → logprob: -19.628177642822266
    6. '(
' → logprob: -20.253177642822266
    7. '	res' → logprob: -20.378177642822266
    8. ',res' → logprob: -20.503177642822266
    9. '=res' → logprob: -20.628177642822266
    10. ' (' → logprob: -21.003177642822266

Token 269: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.36574100604048e-06
    2. ' )' → logprob: -12.500004768371582
    3. ')
' → logprob: -15.500004768371582
    4. '+' → logprob: -16.250003814697266
    5. '))' → logprob: -16.750003814697266
    6. ')#' → logprob: -16.875003814697266
    7. ')`' → logprob: -17.875003814697266
    8. ' if' → logprob: -18.000003814697266
    9. '())' → logprob: -18.000003814697266
    10. '')' → logprob: -18.375003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 267
Tokens correctement prédits (1ère position, stricte): 95
Tokens correctement prédits (1ère position, avec adaptation): 101
Tokens correctement prédits (top 10): 204
Précision stricte (1ère position): 35.58%
Précision adaptée (1ère position): 37.83%
Précision (top 10): 76.40%
================================================================================
