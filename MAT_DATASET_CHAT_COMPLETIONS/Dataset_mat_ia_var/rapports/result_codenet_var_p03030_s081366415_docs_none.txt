================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:59:23
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N = int(input())
a = (input().split() + [i] for i in range(N))
spi = sorted(((s, -int(p), i) for s, p, i in a))
for _, _, i in spi:
    print(i + 1)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0001967457792488858
    2. '```' → logprob: -9.50019645690918
    3. '(N' → logprob: -10.37519645690918
    4. '`' → logprob: -10.87519645690918
    5. '(
' → logprob: -11.00019645690918
    6. ')' → logprob: -11.62519645690918
    7. '("("' → logprob: -11.62519645690918
    8. ''' → logprob: -11.62519645690918
    9. '()' → logprob: -11.87519645690918
    10. '('' → logprob: -12.25019645690918

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5405747294425964
    2. ')' → logprob: -0.9155747294425964
    3. '()' → logprob: -4.290574550628662
    4. '())' → logprob: -5.915574550628662
    5. '(
' → logprob: -8.41557502746582
    6. '```' → logprob: -9.16557502746582
    7. '))' → logprob: -9.29057502746582
    8. '")' → logprob: -9.54057502746582
    9. '`)' → logprob: -9.79057502746582
    10. '(

' → logprob: -9.79057502746582

Token 5: 'a' (ID: 64)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.31470787525177
    2. 'if' → logprob: -2.1897077560424805
    3. 'i' → logprob: -3.3147077560424805
    4. 'a' → logprob: -3.6897077560424805
    5. 's' → logprob: -3.9397077560424805
    6. 'x' → logprob: -4.3147077560424805
    7. '*' → logprob: -4.8147077560424805
    8. 'f' → logprob: -4.9397077560424805
    9. '`' → logprob: -4.9397077560424805
    10. ')' → logprob: -4.9397077560424805

Token 6: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0054806252010166645
    2. '[a' → logprob: -6.380480766296387
    3. 'a' → logprob: -7.255480766296387
    4. ' =' → logprob: -7.505480766296387
    5. '[i' → logprob: -7.505480766296387
    6. '.' → logprob: -8.005480766296387
    7. '=' → logprob: -8.005480766296387
    8. '.append' → logprob: -8.380480766296387
    9. '+' → logprob: -8.630480766296387
    10. '[]' → logprob: -8.630480766296387

Token 7: ' (' (ID: 350)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.7704619765281677
    2. ' []' → logprob: -1.5204620361328125
    3. 'list' → logprob: -2.2704620361328125
    4. ' [' → logprob: -2.5204620361328125
    5. ' list' → logprob: -2.7704620361328125
    6. '[int' → logprob: -3.3954620361328125
    7. '[' → logprob: -3.8954620361328125
    8. '[input' → logprob: -4.7704620361328125
    9. '0' → logprob: -5.7704620361328125
    10. 'input' → logprob: -6.1454620361328125

Token 8: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.1956137865781784
    2. 'N' → logprob: -1.8206137418746948
    3. ')' → logprob: -5.195613861083984
    4. '[input' → logprob: -5.695613861083984
    5. 'int' → logprob: -6.320613861083984
    6. ' input' → logprob: -6.445613861083984
    7. 'range' → logprob: -6.945613861083984
    8. 'list' → logprob: -7.070613861083984
    9. '[int' → logprob: -7.945613861083984
    10. ' N' → logprob: -8.820613861083984

Token 9: '().' (ID: 1454)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01667889952659607
    2. '())' → logprob: -4.266678810119629
    3. '()' → logprob: -6.016678810119629
    4. '')' → logprob: -10.766678810119629
    5. '")' → logprob: -11.266678810119629
    6. '(' → logprob: -11.391678810119629
    7. ' )' → logprob: -11.641678810119629
    8. '`)' → logprob: -11.891678810119629
    9. '))' → logprob: -12.641678810119629
    10. ').' → logprob: -13.141678810119629

Token 10: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.006766410544514656
    2. 'strip' → logprob: -5.006766319274902
    3. ' split' → logprob: -10.631766319274902
    4. 'rstrip' → logprob: -10.631766319274902
    5. 'replace' → logprob: -13.756766319274902
    6. ')' → logprob: -14.256766319274902
    7. 'spl' → logprob: -15.131766319274902
    8. ' strip' → logprob: -15.506766319274902
    9. 'read' → logprob: -16.38176727294922
    10. 'startswith' → logprob: -16.63176727294922

Token 11: '()' (ID: 416)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.5332436561584473
    2. '('' → logprob: -1.5332436561584473
    3. '()' → logprob: -2.2832436561584473
    4. ')' → logprob: -2.6582436561584473
    5. '(' → logprob: -3.7832436561584473
    6. '')' → logprob: -6.533243656158447
    7. '(','' → logprob: -7.283243656158447
    8. '("' → logprob: -8.783243179321289
    9. '()))' → logprob: -8.908243179321289
    10. '))' → logprob: -10.033243179321289

Token 12: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0017318216850981116
    2. '))' → logprob: -6.376731872558594
    3. '`)' → logprob: -12.001731872558594
    4. ' )' → logprob: -12.126731872558594
    5. ')))' → logprob: -12.251731872558594
    6. '[' → logprob: -12.376731872558594
    7. '')' → logprob: -12.376731872558594
    8. ')`' → logprob: -14.126731872558594
    9. ')a' → logprob: -14.126731872558594
    10. '")' → logprob: -14.501731872558594

Token 13: ' [' (ID: 723)
  Prédit: ' [''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ['' → logprob: -0.9362667202949524
    2. '['' → logprob: -1.1862666606903076
    3. '[' → logprob: -2.3112666606903076
    4. ' [' → logprob: -2.3112666606903076
    5. 'input' → logprob: -3.3112666606903076
    6. '[input' → logprob: -3.4362666606903076
    7. ' input' → logprob: -3.6862666606903076
    8. '["' → logprob: -5.311266899108887
    9. ' ["' → logprob: -6.311266899108887
    10. '[]' → logprob: -7.061266899108887

Token 14: 'i' (ID: 72)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.01233175303786993
    2. '0' → logprob: -5.137331962585449
    3. '"' → logprob: -6.387331962585449
    4. '''' → logprob: -6.637331962585449
    5. ''a' → logprob: -7.012331962585449
    6. ' '' → logprob: -7.262331962585449
    7. ''-' → logprob: -7.262331962585449
    8. ''N' → logprob: -8.01233196258545
    9. ''int' → logprob: -8.88733196258545
    10. '])' → logprob: -10.01233196258545

Token 15: ']' (ID: 60)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.38117241859436035
    2. ''' → logprob: -2.1311724185943604
    3. 'nt' → logprob: -3.0061724185943604
    4. '])' → logprob: -3.6311724185943604
    5. ')' → logprob: -3.7561724185943604
    6. '')' → logprob: -3.8811724185943604
    7. '(str' → logprob: -4.006172180175781
    8. ''])' → logprob: -4.381172180175781
    9. ' for' → logprob: -4.506172180175781
    10. 'x' → logprob: -5.006172180175781

Token 16: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.038441915065050125
    2. 'for' → logprob: -4.663442134857178
    3. '])' → logprob: -4.913442134857178
    4. ' for' → logprob: -5.913442134857178
    5. '[i' → logprob: -6.163442134857178
    6. '(i' → logprob: -6.538442134857178
    7. 'N' → logprob: -6.538442134857178
    8. '(' → logprob: -6.538442134857178
    9. '')' → logprob: -6.538442134857178
    10. '0' → logprob: -6.788442134857178

Token 17: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.17298944294452667
    2. ' i' → logprob: -2.1729893684387207
    3. 'range' → logprob: -3.4229893684387207
    4. 'i' → logprob: -4.422989368438721
    5. ' ' → logprob: -9.547989845275879
    6. ' a' → logprob: -9.797989845275879
    7. ' xrange' → logprob: -9.922989845275879
    8. ' lambda' → logprob: -10.422989845275879
    9. ' in' → logprob: -11.047989845275879
    10. 'int' → logprob: -11.047989845275879

Token 18: ' in' (ID: 306)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.34897249937057495
    2. 'range' → logprob: -1.2239725589752197
    3. '(range' → logprob: -7.973972320556641
    4. '	range' → logprob: -9.47397232055664
    5. ')' → logprob: -10.34897232055664
    6. ' ' → logprob: -10.59897232055664
    7. '<|end|>' → logprob: -11.09897232055664
    8. ' in' → logprob: -11.22397232055664
    9. ' xrange' → logprob: -11.72397232055664
    10. '  ' → logprob: -12.84897232055664

Token 19: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3484900891780853
    2. ' range' → logprob: -1.2234901189804077
    3. '[' → logprob: -10.348489761352539
    4. '(range' → logprob: -12.598489761352539
    5. ')' → logprob: -12.723489761352539
    6. '	range' → logprob: -12.723489761352539
    7. ' ' → logprob: -13.598489761352539
    8. '  ' → logprob: -14.723489761352539
    9. '.range' → logprob: -15.098489761352539
    10. 'a' → logprob: -15.098489761352539

Token 20: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.026390166953206062
    2. '(' → logprob: -3.6513900756835938
    3. '(n' → logprob: -10.151390075683594
    4. '(len' → logprob: -10.401390075683594
    5. '(
' → logprob: -11.651390075683594
    6. ')' → logprob: -12.026390075683594
    7. 'N' → logprob: -12.526390075683594
    8. '(A' → logprob: -14.776390075683594
    9. '())' → logprob: -14.776390075683594
    10. ' (' → logprob: -15.651390075683594

Token 21: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.22734269499778748
    2. ')' → logprob: -1.6023427248001099
    3. '(' → logprob: -7.72734260559082
    4. '])' → logprob: -7.72734260559082
    5. '(N' → logprob: -8.47734260559082
    6. '()))' → logprob: -8.47734260559082
    7. '0' → logprob: -9.35234260559082
    8. ')))' → logprob: -9.35234260559082
    9. '())' → logprob: -9.60234260559082
    10. ' ' → logprob: -10.10234260559082

Token 22: 'spi' (ID: 86870)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5807725787162781
    2. '(' → logprob: -1.3307726383209229
    3. '[' → logprob: -1.9557726383209229
    4. '())' → logprob: -4.205772399902344
    5. '()' → logprob: -4.330772399902344
    6. ']' → logprob: -6.955772399902344
    7. '(N' → logprob: -7.205772399902344
    8. ' ' → logprob: -7.330772399902344
    9. '(
' → logprob: -7.455772399902344
    10. '0' → logprob: -7.830772399902344

Token 23: ' =' (ID: 314)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.23021699488162994
    2. 't' → logprob: -1.7302169799804688
    3. 'l' → logprob: -4.855216979980469
    4. 'ral' → logprob: -5.230216979980469
    5. 'n' → logprob: -5.355216979980469
    6. 'rit' → logprob: -5.480216979980469
    7. 'd' → logprob: -6.480216979980469
    8. 'rt' → logprob: -7.605216979980469
    9. 'rs' → logprob: -7.605216979980469
    10. '=' → logprob: -7.730216979980469

Token 24: ' sorted' (ID: 20099)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.6163033843040466
    2. ' sum' → logprob: -1.3663034439086914
    3. ' ' → logprob: -3.2413034439086914
    4. ' [' → logprob: -3.7413034439086914
    5. '0' → logprob: -4.116303443908691
    6. ' []' → logprob: -4.116303443908691
    7. '1' → logprob: -4.116303443908691
    8. 'a' → logprob: -4.241303443908691
    9. ' iter' → logprob: -4.616303443908691
    10. '[i' → logprob: -4.866303443908691

Token 25: '(((' (ID: 13163)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.25330010056495667
    2. '(a' → logprob: -1.6283000707626343
    3. '(lambda' → logprob: -3.878300189971924
    4. '(sp' → logprob: -5.628300189971924
    5. '<|end|>' → logprob: -7.003300189971924
    6. 'a' → logprob: -7.253300189971924
    7. '((' → logprob: -7.753300189971924
    8. '(s' → logprob: -8.253299713134766
    9. '(
' → logprob: -8.503299713134766
    10. '```' → logprob: -9.753299713134766

Token 26: 's' (ID: 82)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.816195547580719
    2. 'a' → logprob: -1.1911954879760742
    3. 'i' → logprob: -2.941195487976074
    4. 'len' → logprob: -3.316195487976074
    5. '(i' → logprob: -3.441195487976074
    6. 'enumer' → logprob: -3.566195487976074
    7. '(a' → logprob: -3.816195487976074
    8. '(sum' → logprob: -4.066195487976074
    9. 'min' → logprob: -4.191195487976074
    10. 'x' → logprob: -4.441195487976074

Token 27: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4019922614097595
    2. 'um' → logprob: -1.4019923210144043
    3. ',i' → logprob: -3.2769923210144043
    4. '[i' → logprob: -4.151992321014404
    5. ',len' → logprob: -4.651992321014404
    6. 'm' → logprob: -5.901992321014404
    7. ',a' → logprob: -6.151992321014404
    8. 'len' → logprob: -6.151992321014404
    9. 'i' → logprob: -6.401992321014404
    10. 'a' → logprob: -6.526992321014404

Token 28: ' -' (ID: 533)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.186977505683899
    2. 'len' → logprob: -1.186977505683899
    3. ' len' → logprob: -2.4369773864746094
    4. ' i' → logprob: -2.4369773864746094
    5. 'a' → logprob: -2.8119773864746094
    6. 'int' → logprob: -3.3119773864746094
    7. 's' → logprob: -4.186977386474609
    8. ' a' → logprob: -4.186977386474609
    9. ' s' → logprob: -4.311977386474609
    10. 'sum' → logprob: -4.686977386474609

Token 29: 'int' (ID: 491)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.12396334856748581
    2. 'len' → logprob: -2.6239633560180664
    3. 'a' → logprob: -4.373963356018066
    4. 'x' → logprob: -4.998963356018066
    5. 's' → logprob: -5.123963356018066
    6. 'j' → logprob: -5.498963356018066
    7. 'v' → logprob: -5.498963356018066
    8. 'int' → logprob: -5.623963356018066
    9. 'idx' → logprob: -6.248963356018066
    10. 'b' → logprob: -6.623963356018066

Token 30: '(p' (ID: 2407)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.4290992319583893
    2. '(b' → logprob: -2.0540993213653564
    3. '(s' → logprob: -2.5540993213653564
    4. '(a' → logprob: -2.5540993213653564
    5. '(i' → logprob: -3.5540993213653564
    6. '(v' → logprob: -4.804099082946777
    7. '(y' → logprob: -5.179099082946777
    8. '(k' → logprob: -5.429099082946777
    9. '(c' → logprob: -5.554099082946777
    10. '(j' → logprob: -5.929099082946777

Token 31: '),' (ID: 936)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.016900217160582542
    2. '),' → logprob: -4.516900062561035
    3. ')' → logprob: -5.391900062561035
    4. '[' → logprob: -7.266900062561035
    5. '[i' → logprob: -7.641900062561035
    6. ',' → logprob: -10.516900062561035
    7. '[-' → logprob: -10.891900062561035
    8. ')))' → logprob: -11.641900062561035
    9. ')),' → logprob: -12.391900062561035
    10. '))
' → logprob: -12.391900062561035

Token 32: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3731085956096649
    2. ' i' → logprob: -1.2481086254119873
    3. '-' → logprob: -5.873108386993408
    4. 'x' → logprob: -6.248108386993408
    5. 'idx' → logprob: -6.248108386993408
    6. ' idx' → logprob: -6.373108386993408
    7. ' -' → logprob: -6.498108386993408
    8. '-i' → logprob: -6.498108386993408
    9. 's' → logprob: -6.623108386993408
    10. ' s' → logprob: -6.623108386993408

Token 33: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.607391408877447e-05
    2. '))' → logprob: -11.125036239624023
    3. ' )' → logprob: -11.750036239624023
    4. '[' → logprob: -12.375036239624023
    5. ')
' → logprob: -12.625036239624023
    6. ',' → logprob: -13.625036239624023
    7. ',)' → logprob: -14.250036239624023
    8. 's' → logprob: -14.625036239624023
    9. 'a' → logprob: -14.750036239624023
    10. ' ' → logprob: -15.125036239624023

Token 34: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06243995204567909
    2. ' for' → logprob: -3.1874399185180664
    3. 'for' → logprob: -4.187439918518066
    4. ',' → logprob: -6.562439918518066
    5. ' in' → logprob: -6.812439918518066
    6. 'in' → logprob: -7.687439918518066
    7. '[' → logprob: -8.062439918518066
    8. 'a' → logprob: -8.187439918518066
    9. ' )' → logprob: -9.062439918518066
    10. 's' → logprob: -9.437439918518066

Token 35: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0396132469177246
    2. 'p' → logprob: -1.4146132469177246
    3. 'i' → logprob: -1.5396132469177246
    4. ' s' → logprob: -2.4146132469177246
    5. ' p' → logprob: -2.9146132469177246
    6. ' i' → logprob: -3.1646132469177246
    7. 'a' → logprob: -6.414613246917725
    8. ' a' → logprob: -8.414613723754883
    9. ' spi' → logprob: -8.789613723754883
    10. '_,' → logprob: -9.039613723754883

Token 36: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14925460517406464
    2. ' in' → logprob: -2.024254560470581
    3. ',p' → logprob: -5.27425479888916
    4. ',i' → logprob: -7.52425479888916
    5. 'i' → logprob: -8.52425479888916
    6. 'p' → logprob: -8.89925479888916
    7. 'in' → logprob: -8.89925479888916
    8. ' ,' → logprob: -9.14925479888916
    9. '<|end|>' → logprob: -9.77425479888916
    10. ',a' → logprob: -10.14925479888916

Token 37: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.01461765356361866
    2. ' p' → logprob: -4.264617443084717
    3. 'i' → logprob: -8.139617919921875
    4. '*p' → logprob: -9.889617919921875
    5. '_p' → logprob: -10.264617919921875
    6. 'a' → logprob: -11.014617919921875
    7. 's' → logprob: -11.514617919921875
    8. ' ' → logprob: -11.514617919921875
    9. '	p' → logprob: -12.014617919921875
    10. ' i' → logprob: -12.389617919921875

Token 38: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05275246128439903
    2. 'in' → logprob: -3.0527524948120117
    3. ',' → logprob: -5.552752494812012
    4. ')' → logprob: -9.177752494812012
    5. '<|end|>' → logprob: -10.052752494812012
    6. ' ' → logprob: -10.302752494812012
    7. 's' → logprob: -10.677752494812012
    8. 'a' → logprob: -10.677752494812012
    9. ' ,' → logprob: -12.302752494812012
    10. '<|end|>' → logprob: -12.365252494812012

Token 39: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.005094410851597786
    2. ' i' → logprob: -5.505094528198242
    3. 'range' → logprob: -7.880094528198242
    4. 'a' → logprob: -8.755094528198242
    5. ' in' → logprob: -9.130094528198242
    6. 'r' → logprob: -9.505094528198242
    7. ' range' → logprob: -9.755094528198242
    8. 's' → logprob: -9.880094528198242
    9. 'p' → logprob: -10.005094528198242
    10. ' ' → logprob: -10.130094528198242

Token 40: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.035004790872335434
    2. 'in' → logprob: -3.5350048542022705
    3. ')' → logprob: -5.285004615783691
    4. '<|end|>' → logprob: -9.785004615783691
    5. ' )' → logprob: -10.035004615783691
    6. '),' → logprob: -10.285004615783691
    7. ' ' → logprob: -11.160004615783691
    8. ',' → logprob: -11.910004615783691
    9. '```' → logprob: -12.972504615783691
    10. 's' → logprob: -13.222504615783691

Token 41: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.4949128329753876
    2. ' enumerate' → logprob: -0.99491286277771
    3. ' zip' → logprob: -3.99491286277771
    4. 'a' → logprob: -6.619912624359131
    5. 'enumer' → logprob: -7.619912624359131
    6. '(a' → logprob: -9.494913101196289
    7. ' ' → logprob: -10.432413101196289
    8. ' enumer' → logprob: -10.494913101196289
    9. ' range' → logprob: -10.557413101196289
    10. '[a' → logprob: -10.744913101196289

Token 42: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.05084243044257164
    2. ')' → logprob: -3.300842523574829
    3. '),' → logprob: -4.42584228515625
    4. ')),' → logprob: -7.92584228515625
    5. ')))' → logprob: -8.80084228515625
    6. ' ))' → logprob: -9.17584228515625
    7. '))
' → logprob: -10.42584228515625
    8. '));' → logprob: -10.67584228515625
    9. ' ' → logprob: -11.30084228515625
    10. '))

' → logprob: -11.67584228515625

Token 43: 'for' (ID: 1938)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04368193447589874
    2. ']' → logprob: -3.5436818599700928
    3. '(' → logprob: -5.168682098388672
    4. '[' → logprob: -6.043682098388672
    5. ' ' → logprob: -6.418682098388672
    6. '()' → logprob: -6.418682098388672
    7. '])' → logprob: -7.543682098388672
    8. ' )' → logprob: -7.918682098388672
    9. '())' → logprob: -8.418682098388672
    10. '(
' → logprob: -8.793682098388672

Token 44: ' _,' (ID: 18042)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.156061589717865
    2. 's' → logprob: -2.2810616493225098
    3. '_' → logprob: -4.15606164932251
    4. ' _' → logprob: -4.15606164932251
    5. ' i' → logprob: -5.03106164932251
    6. 'i' → logprob: -6.15606164932251
    7. '_,' → logprob: -6.90606164932251
    8. '_s' → logprob: -7.78106164932251
    9. ' ' → logprob: -8.031061172485352
    10. ' _,' → logprob: -8.156061172485352

Token 45: ' _,' (ID: 18042)
  Prédit: '__,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__,' → logprob: -0.289684534072876
    2. '__' → logprob: -1.789684534072876
    3. '_,' → logprob: -2.664684534072876
    4. ' __' → logprob: -4.664684295654297
    5. ' _,' → logprob: -5.664684295654297
    6. 'p' → logprob: -7.414684295654297
    7. '___' → logprob: -8.414684295654297
    8. '-' → logprob: -8.539684295654297
    9. ',' → logprob: -8.539684295654297
    10. '_' → logprob: -8.914684295654297

Token 46: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.01651616021990776
    2. ' i' → logprob: -4.141516208648682
    3. 'j' → logprob: -8.766515731811523
    4. 'k' → logprob: -9.141515731811523
    5. 'idx' → logprob: -9.766515731811523
    6. 'index' → logprob: -10.266515731811523
    7. 'x' → logprob: -10.391515731811523
    8. ' ' → logprob: -10.766515731811523
    9. 'a' → logprob: -11.516515731811523
    10. 's' → logprob: -11.641515731811523

Token 47: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.035131748765707016
    2. 'in' → logprob: -3.4101316928863525
    3. 'n' → logprob: -6.660131931304932
    4. ',' → logprob: -9.410131454467773
    5. ' ' → logprob: -11.160131454467773
    6. 'print' → logprob: -11.285131454467773
    7. 's' → logprob: -11.410131454467773
    8. 'a' → logprob: -11.410131454467773
    9. ')' → logprob: -11.597631454467773
    10. 'd' → logprob: -11.910131454467773

Token 48: ' spi' (ID: 70297)
  Prédit: 'spi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spi' → logprob: -0.47110626101493835
    2. 'sorted' → logprob: -1.4711062908172607
    3. ' spi' → logprob: -2.7211062908172607
    4. 'range' → logprob: -3.0961062908172607
    5. ' range' → logprob: -3.5961062908172607
    6. ' sorted' → logprob: -5.346106052398682
    7. 'sp' → logprob: -7.596106052398682
    8. '[' → logprob: -7.721106052398682
    9. ' ' → logprob: -7.721106052398682
    10. 'a' → logprob: -8.09610652923584

Token 49: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.32966071367263794
    2. 'print' → logprob: -1.5796606540679932
    3. ':
' → logprob: -2.704660654067993
    4. ' print' → logprob: -5.704660892486572
    5. '.print' → logprob: -6.204660892486572
    6. ')' → logprob: -7.079660892486572
    7. ',' → logprob: -8.079660415649414
    8. '):
' → logprob: -8.579660415649414
    9. '	print' → logprob: -8.829660415649414
    10. '<|end|>' → logprob: -8.829660415649414

Token 50: '   ' (ID: 271)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.038423679769039154
    2. 'print' → logprob: -3.288423776626587
    3. '   ' → logprob: -8.788423538208008
    4. '<|end|>' → logprob: -9.163423538208008
    5. '```' → logprob: -9.788423538208008
    6. '	print' → logprob: -10.163423538208008
    7. ' ' → logprob: -10.913423538208008
    8. '``' → logprob: -13.038423538208008
    9. ' ' → logprob: -13.163423538208008
    10. '.print' → logprob: -13.288423538208008

Token 51: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.08908210694789886
    2. 'print' (adapté à ' print') → logprob: -2.4640820026397705
    3. '   ' → logprob: -9.339081764221191
    4. '	print' → logprob: -10.714081764221191
    5. '```' → logprob: -10.964081764221191
    6. '.print' → logprob: -12.589081764221191
    7. ' prin' → logprob: -12.964081764221191
    8. ' i' → logprob: -13.089081764221191
    9. ' ' → logprob: -13.214081764221191
    10. ' ' → logprob: -13.464081764221191

Token 52: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0013784486800432205
    2. 'i' → logprob: -6.876378536224365
    3. '(' → logprob: -8.626378059387207
    4. ' i' → logprob: -8.751378059387207
    5. 'a' → logprob: -12.751378059387207
    6. '(a' → logprob: -13.501378059387207
    7. '('' → logprob: -14.376378059387207
    8. ' (' → logprob: -14.501378059387207
    9. '(N' → logprob: -15.126378059387207
    10. 'int' → logprob: -15.126378059387207

Token 53: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -9.209963900502771e-05
    2. '+' → logprob: -9.750092506408691
    3. ')
' → logprob: -11.125092506408691
    4. '))' → logprob: -12.000092506408691
    5. ')`' → logprob: -12.750092506408691
    6. ' )' → logprob: -13.250092506408691
    7. ',' → logprob: -13.500092506408691
    8. '```' → logprob: -14.125092506408691
    9. '<|end|>' → logprob: -14.125092506408691
    10. ')i' → logprob: -14.250092506408691

Token 54: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005541055579669774
    2. ' ' → logprob: -7.500554084777832
    3. '<|end|>' → logprob: -14.750554084777832
    4. '   ' → logprob: -15.125554084777832
    5. ')' → logprob: -16.12555503845215
    6. '2' → logprob: -16.25055503845215
    7. '+' → logprob: -17.12555503845215
    8. '0' → logprob: -18.00055503845215
    9. '  ' → logprob: -18.00055503845215
    10. '...' → logprob: -18.12555503845215

Token 55: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.6087021473795176e-05
    2. ' ' → logprob: -10.000045776367188
    3. '<|end|>' → logprob: -15.250045776367188
    4. '2' → logprob: -15.625045776367188
    5. '   ' → logprob: -15.875045776367188
    6. ')' → logprob: -17.000045776367188
    7. '0' → logprob: -17.750045776367188
    8. '  ' → logprob: -17.750045776367188
    9. '+' → logprob: -17.875045776367188
    10. '10' → logprob: -18.250045776367188

Token 56: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7835754988482222e-05
    2. '))' → logprob: -12.000018119812012
    3. ' )' → logprob: -12.250018119812012
    4. ')
' → logprob: -12.875018119812012
    5. '`)' → logprob: -13.500018119812012
    6. ')`' → logprob: -13.875018119812012
    7. '```' → logprob: -14.375018119812012
    8. '0' → logprob: -15.750018119812012
    9. ')))' → logprob: -15.750018119812012
    10. '')' → logprob: -16.000017166137695


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 54
Tokens correctement prédits (1ère position, stricte): 13
Tokens correctement prédits (1ère position, avec adaptation): 13
Tokens correctement prédits (top 10): 37
Précision stricte (1ère position): 24.07%
Précision adaptée (1ère position): 24.07%
Précision (top 10): 68.52%
================================================================================
