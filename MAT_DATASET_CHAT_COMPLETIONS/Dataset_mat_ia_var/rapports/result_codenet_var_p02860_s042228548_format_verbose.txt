================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:38:19
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
nombre_de_caracteres = int(input())

chaine_a_verifier = input()

if nombre_de_caracteres % 2 != 0:
    print("No")
    exit()

indice_milieu = int(len(chaine_a_verifier) / 2)

premiere_moitie = chaine_a_verifier[0:indice_milieu]

seconde_moitie = chaine_a_verifier[indice_milieu:len(chaine_a_verifier)]

if premiere_moitie == seconde_moitie:
    print("Yes")
else:
    print("No")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'nombre' (ID: 28576)
  → Token d'amorce (pas de prédiction)

Token 1: '_de' (ID: 5047)
  → Token d'amorce (pas de prédiction)

Token 2: '_car' (ID: 62991)
  → Token d'amorce (pas de prédiction)

Token 3: 'acter' (ID: 3344)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.19400304555892944
    2. '_' → logprob: -2.819003105163574
    3. 'a' → logprob: -2.819003105163574
    4. 'r' → logprob: -3.444003105163574
    5. '_a' → logprob: -5.069003105163574
    6. 'acter' → logprob: -5.194003105163574
    7. '_s' → logprob: -6.069003105163574
    8. ''s' → logprob: -6.069003105163574
    9. '`' → logprob: -6.944003105163574
    10. '```' → logprob: -7.069003105163574

Token 4: 'es' (ID: 268)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5081515312194824
    2. 'es' → logprob: -1.2581515312194824
    3. '_es' → logprob: -3.1331515312194824
    4. '_s' → logprob: -3.6331515312194824
    5. '_e' → logprob: -3.7581515312194824
    6. 'e' → logprob: -4.383151531219482
    7. '[' → logprob: -5.633151531219482
    8. 's' → logprob: -5.758151531219482
    9. '```' → logprob: -7.758151531219482
    10. '(' → logprob: -8.00815200805664

Token 5: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11956391483545303
    2. '_' → logprob: -2.3695638179779053
    3. '=' → logprob: -4.119564056396484
    4. ' =' → logprob: -7.119564056396484
    5. 'es' → logprob: -7.619564056396484
    6. '[' → logprob: -7.994564056396484
    7. 's' → logprob: -8.494564056396484
    8. ')' → logprob: -8.744564056396484
    9. '('' → logprob: -8.869564056396484
    10. ':' → logprob: -9.494564056396484

Token 6: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10521400719881058
    2. '32' → logprob: -3.7302141189575195
    3. ' len' → logprob: -3.7302141189575195
    4. '20' → logprob: -4.4802141189575195
    5. '10' → logprob: -4.7302141189575195
    6. '"' → logprob: -4.8552141189575195
    7. 'len' → logprob: -4.9802141189575195
    8. ' "' → logprob: -5.1052141189575195
    9. '0' → logprob: -5.6052141189575195
    10. ''' → logprob: -6.2302141189575195

Token 7: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0017760884948074818
    2. '32' → logprob: -8.001775741577148
    3. '```' → logprob: -8.001775741577148
    4. ''' → logprob: -8.126775741577148
    5. '_' → logprob: -8.626775741577148
    6. '('' → logprob: -8.626775741577148
    7. '<|end|>' → logprob: -9.626775741577148
    8. ')' → logprob: -10.126775741577148
    9. ' (' → logprob: -10.126775741577148
    10. '()' → logprob: -10.251775741577148

Token 8: '())

' (ID: 27654)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006920796353369951
    2. ')' → logprob: -5.13192081451416
    3. '()' → logprob: -8.13192081451416
    4. '("("' → logprob: -8.38192081451416
    5. '('' → logprob: -8.50692081451416
    6. '(
' → logprob: -9.63192081451416
    7. '<|end|>' → logprob: -10.50692081451416
    8. ''' → logprob: -10.88192081451416
    9. ' (' → logprob: -10.88192081451416
    10. '[' → logprob: -11.13192081451416

Token 9: 'chaine' (ID: 68916)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3522665500640869
    2. ')' → logprob: -2.352266550064087
    3. '#' → logprob: -3.352266550064087
    4. '*' → logprob: -3.852266550064087
    5. ' ' → logprob: -3.852266550064087
    6. 'print' → logprob: -3.977266550064087
    7. 'if' → logprob: -4.352266311645508
    8. '_' → logprob: -4.477266311645508
    9. '\' → logprob: -4.477266311645508
    10. ''' → logprob: -4.602266311645508

Token 10: '_a' (ID: 10852)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.16800715029239655
    2. '[:]' → logprob: -2.1680071353912354
    3. '_' → logprob: -4.6680073738098145
    4. '.' → logprob: -4.7930073738098145
    5. '[]' → logprob: -5.1680073738098145
    6. '[:' → logprob: -5.4180073738098145
    7. '[...]' → logprob: -6.0430073738098145
    8. '[len' → logprob: -6.4180073738098145
    9. '_length' → logprob: -6.6680073738098145
    10. 's' → logprob: -6.6680073738098145

Token 11: '_ver' (ID: 61040)
  Prédit: '_tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tr' → logprob: -0.5227917432785034
    2. '_trait' → logprob: -1.3977917432785034
    3. '_' → logprob: -3.022791862487793
    4. '_an' → logprob: -3.147791862487793
    5. '_comp' → logprob: -3.897791862487793
    6. '_l' → logprob: -4.397791862487793
    7. '_c' → logprob: -4.647791862487793
    8. '_con' → logprob: -5.397791862487793
    9. '_concat' → logprob: -5.522791862487793
    10. '_ver' → logprob: -5.772791862487793

Token 12: 'ifier' (ID: 4550)
  Prédit: 'ifier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifier' → logprob: -0.03995295614004135
    2. 'if' → logprob: -3.5399529933929443
    3. 'ifer' → logprob: -4.914952754974365
    4. 'ifie' → logprob: -6.789952754974365
    5. '```' → logprob: -7.914952754974365
    6. 'i' → logprob: -8.414953231811523
    7. '   ' → logprob: -8.539953231811523
    8. 'f' → logprob: -9.164953231811523
    9. '\' → logprob: -9.539953231811523
    10. '#' → logprob: -9.539953231811523

Token 13: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7713356018066406
    2. '.startswith' → logprob: -1.1463356018066406
    3. '.count' → logprob: -2.0213356018066406
    4. '[' → logprob: -3.3963356018066406
    5. '.strip' → logprob: -3.8963356018066406
    6. '[:]' → logprob: -4.146335601806641
    7. '.endswith' → logprob: -5.021335601806641
    8. '[:' → logprob: -6.021335601806641
    9. '.replace' → logprob: -6.521335601806641
    10. '.length' → logprob: -7.021335601806641

Token 14: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.22559718787670135
    2. 'input' → logprob: -1.6005971431732178
    3. ' "' → logprob: -9.850597381591797
    4. ' ' → logprob: -9.975597381591797
    5. ' ' → logprob: -10.975597381591797
    6. '""' → logprob: -11.225597381591797
    7. 'str' → logprob: -11.475597381591797
    8. '"' → logprob: -11.475597381591797
    9. ' str' → logprob: -11.725597381591797
    10. ' ""' → logprob: -11.975597381591797

Token 15: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007483575958758593
    2. '()' → logprob: -5.00748348236084
    3. ')' → logprob: -8.13248348236084
    4. '('' → logprob: -8.63248348236084
    5. '("("' → logprob: -9.50748348236084
    6. ' (' → logprob: -9.75748348236084
    7. '```' → logprob: -9.88248348236084
    8. ''' → logprob: -10.50748348236084
    9. '(
' → logprob: -11.25748348236084
    10. ' ' → logprob: -11.25748348236084

Token 16: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7083362340927124
    2. 'for' → logprob: -1.0833362340927124
    3. '\n' → logprob: -2.958336353302002
    4. '
' → logprob: -3.458336353302002
    5. '```' → logprob: -3.708336353302002
    6. '\' → logprob: -3.833336353302002
    7. 'i' → logprob: -4.458336353302002
    8. ' for' → logprob: -5.208336353302002
    9. ' if' → logprob: -5.333336353302002
    10. 'n' → logprob: -5.958336353302002

Token 17: ' nombre' (ID: 9733)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.21069790422916412
    2. ' len' → logprob: -2.335697889328003
    3. ' nombre' → logprob: -2.835697889328003
    4. ' ' → logprob: -3.710697889328003
    5. ' chaine' → logprob: -5.460698127746582
    6. 'nombre' → logprob: -6.210698127746582
    7. '  ' → logprob: -6.835698127746582
    8. 'chaine' → logprob: -7.585698127746582
    9. 'len' → logprob: -7.835698127746582
    10. ' '' → logprob: -7.835698127746582

Token 18: '_de' (ID: 5047)
  Prédit: '_de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -0.04862279072403908
    2. '_' → logprob: -3.0486228466033936
    3. '>' → logprob: -11.798623085021973
    4. ' >' → logprob: -12.173623085021973
    5. ' _' → logprob: -12.298623085021973
    6. '_des' → logprob: -12.423623085021973
    7. '__' → logprob: -12.673623085021973
    8. 'de' → logprob: -12.673623085021973
    9. ' de' → logprob: -12.923623085021973
    10. '_<' → logprob: -13.923623085021973

Token 19: '_car' (ID: 62991)
  Prédit: '_car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_car' → logprob: -0.00027420982951298356
    2. '_' → logprob: -8.500274658203125
    3. '_c' → logprob: -10.125274658203125
    4. 'car' → logprob: -11.000274658203125
    5. '_char' → logprob: -11.750274658203125
    6. '_ca' → logprob: -13.625274658203125
    7. '_character' → logprob: -14.000274658203125
    8. ' _' → logprob: -14.000274658203125
    9. '_cod' → logprob: -14.375274658203125
    10. ' caract' → logprob: -15.125274658203125

Token 20: 'acter' (ID: 3344)
  Prédit: 'acter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acter' → logprob: -0.07599752396345139
    2. 'acters' → logprob: -3.4509975910186768
    3. 'act' → logprob: -3.5759975910186768
    4. 'ct' → logprob: -4.450997352600098
    5. 'cter' → logprob: -7.325997352600098
    6. 'teres' → logprob: -7.825997352600098
    7. '_' → logprob: -8.075997352600098
    8. '_act' → logprob: -8.575997352600098
    9. '_ct' → logprob: -9.700997352600098
    10. 'es' → logprob: -9.700997352600098

Token 21: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -3.531315314830863e-06
    2. '_es' → logprob: -12.875003814697266
    3. 'e' → logprob: -14.375003814697266
    4. '_' → logprob: -15.250003814697266
    5. '```' → logprob: -17.375003814697266
    6. 's' → logprob: -17.750003814697266
    7. 'esp' → logprob: -18.500003814697266
    8. '_t' → logprob: -18.750003814697266
    9. 'est' → logprob: -18.875003814697266
    10. 'tes' → logprob: -18.875003814697266

Token 22: ' %' (ID: 1851)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.19870491325855255
    2. ' <=' → logprob: -2.573704957962036
    3. '>' → logprob: -3.448704957962036
    4. ' ==' → logprob: -3.448704957962036
    5. ' >=' → logprob: -3.573704957962036
    6. ' <' → logprob: -5.198704719543457
    7. ' ' → logprob: -5.698704719543457
    8. '==' → logprob: -6.323704719543457
    9. '<=' → logprob: -7.448704719543457
    10. '>=' → logprob: -7.448704719543457

Token 23: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.34950384497642517
    2. '2' → logprob: -1.2245038747787476
    3. '==' → logprob: -7.349503993988037
    4. '=' → logprob: -8.099503517150879
    5. ' ==' → logprob: -9.849503517150879
    6. '3' → logprob: -10.724503517150879
    7. '4' → logprob: -11.224503517150879
    8. ' ' → logprob: -11.599503517150879
    9. '>' → logprob: -12.849503517150879
    10. '1' → logprob: -12.974503517150879

Token 24: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0005181243759579957
    2. '3' → logprob: -8.375517845153809
    3. ' ' → logprob: -9.125517845153809
    4. '==' → logprob: -9.125517845153809
    5. '4' → logprob: -10.625517845153809
    6. '1' → logprob: -11.125517845153809
    7. '5' → logprob: -11.750517845153809
    8. '=' → logprob: -12.000517845153809
    9. '10' → logprob: -12.375517845153809
    10. '7' → logprob: -12.875517845153809

Token 25: ' !=' (ID: 1666)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.010076679289340973
    2. '==' → logprob: -5.135076522827148
    3. ' !=' → logprob: -5.635076522827148
    4. ' ' → logprob: -7.510076522827148
    5. ' =' → logprob: -11.885076522827148
    6. '!=' → logprob: -11.885076522827148
    7. '=' → logprob: -12.760076522827148
    8. ':' → logprob: -13.635076522827148
    9. ')' → logprob: -13.760076522827148
    10. '0' → logprob: -14.510076522827148

Token 26: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.005973000079393387
    2. '0' → logprob: -5.130972862243652
    3. '=' → logprob: -10.255972862243652
    4. ' ' → logprob: -11.755972862243652
    5. ')' → logprob: -14.880972862243652
    6. ' =' → logprob: -15.255972862243652
    7. ':' → logprob: -15.755972862243652
    8. '```' → logprob: -16.25597381591797
    9. ''' → logprob: -16.75597381591797
    10. '  ' → logprob: -17.00597381591797

Token 27: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04859009385108948
    2. ' ' → logprob: -3.0485901832580566
    3. '=' → logprob: -13.548589706420898
    4. '2' → logprob: -14.923589706420898
    5. ':' → logprob: -15.048589706420898
    6. '1' → logprob: -15.673589706420898
    7. ')' → logprob: -15.798589706420898
    8. '```' → logprob: -16.2985897064209
    9. '<|end|>' → logprob: -16.5485897064209
    10. ' ' → logprob: -16.7985897064209

Token 28: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004621780011802912
    2. ' :' → logprob: -5.379621982574463
    3. ':**' → logprob: -14.504621505737305
    4. '):' → logprob: -14.754621505737305
    5. '>:' → logprob: -15.754621505737305
    6. ':
' → logprob: -16.254621505737305
    7. ':return' → logprob: -16.629621505737305
    8. '：' → logprob: -16.754621505737305
    9. ' and' → logprob: -17.129621505737305
    10. ',:' → logprob: -17.379621505737305

Token 29: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5182684063911438
    2. '   ' → logprob: -1.268268346786499
    3. ' :' → logprob: -2.768268346786499
    4. ' print' → logprob: -3.518268346786499
    5. 'print' → logprob: -4.393268585205078
    6. ' ' → logprob: -4.893268585205078
    7. ' ' → logprob: -6.393268585205078
    8. '    ' → logprob: -6.518268585205078
    9. '    
' → logprob: -6.768268585205078
    10. ' 
' → logprob: -7.143268585205078

Token 30: ' print' (ID: 2123)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5260054469108582
    2. ' print' → logprob: -1.401005506515503
    3. '    ' → logprob: -2.526005506515503
    4. 'print' (adapté à ' print') → logprob: -3.276005506515503
    5. ' 
' → logprob: -4.401005268096924
    6. ' \' → logprob: -5.151005268096924
    7. '     
' → logprob: -5.401005268096924
    8. ' pass' → logprob: -5.651005268096924
    9. ' ' → logprob: -5.901005268096924
    10. ' ```' → logprob: -6.026005268096924

Token 31: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11845310032367706
    2. '("' → logprob: -2.243453025817871
    3. '('' → logprob: -5.868453025817871
    4. '("("' → logprob: -6.243453025817871
    5. '("")' → logprob: -7.243453025817871
    6. '()' → logprob: -9.868453025817871
    7. '(True' → logprob: -11.118453025817871
    8. '(""' → logprob: -11.118453025817871
    9. '("(' → logprob: -11.368453025817871
    10. '(False' → logprob: -11.743453025817871

Token 32: 'No' (ID: 3160)
  Prédit: 'im'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'im' → logprob: -0.7401821613311768
    2. 'IMP' → logprob: -2.1151821613311768
    3. 'Impossible' → logprob: -2.1151821613311768
    4. 'Erreur' → logprob: -2.9901821613311768
    5. 'Nombre' → logprob: -3.6151821613311768
    6. 'Im' → logprob: -3.6151821613311768
    7. 'NON' → logprob: -4.115181922912598
    8. 'Non' → logprob: -4.240181922912598
    9. 'La' → logprob: -4.240181922912598
    10. 'chaine' → logprob: -4.490181922912598

Token 33: '")
' (ID: 1896)
  Prédit: ' pair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pair' → logprob: -1.009482741355896
    2. 'pe' → logprob: -2.3844828605651855
    3. ' valid' → logprob: -2.3844828605651855
    4. ' paire' → logprob: -2.5094828605651855
    5. ' possible' → logprob: -2.6344828605651855
    6. ' palindrome' → logprob: -2.7594828605651855
    7. 'e' → logprob: -2.8844828605651855
    8. ' pal' → logprob: -3.3844828605651855
    9. 't' → logprob: -3.7594828605651855
    10. ' es' → logprob: -4.2594828605651855

Token 34: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.31555449962615967
    2. 'elif' → logprob: -1.6905544996261597
    3. ' else' → logprob: -3.065554618835449
    4. '   ' → logprob: -3.440554618835449
    5. ' elif' → logprob: -5.440554618835449
    6. ')' → logprob: -6.940554618835449
    7. '<|end|>' → logprob: -7.065554618835449
    8. ' ' → logprob: -7.815554618835449
    9. '    
' → logprob: -8.94055461883545
    10. 'continue' → logprob: -9.69055461883545

Token 35: ' exit' (ID: 10654)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.005451466888189316
    2. 'elif' → logprob: -5.255451679229736
    3. ' else' → logprob: -8.505451202392578
    4. 'exit' (adapté à ' exit') → logprob: -12.005451202392578
    5. '   ' → logprob: -12.505451202392578
    6. '    
' → logprob: -13.630451202392578
    7. '```' → logprob: -13.755451202392578
    8. '
' → logprob: -14.505451202392578
    9. '_else' → logprob: -14.755451202392578
    10. ')' → logprob: -15.005451202392578

Token 36: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0006569160032086074
    2. '(' → logprob: -7.375657081604004
    3. '()
' → logprob: -10.500657081604004
    4. '()`' → logprob: -13.875657081604004
    5. '()

' → logprob: -14.125657081604004
    6. '(
' → logprob: -14.750657081604004
    7. '())' → logprob: -15.625657081604004
    8. ' ()' → logprob: -15.875657081604004
    9. '();' → logprob: -16.125656127929688
    10. '()\' → logprob: -16.875656127929688

Token 37: 'indice' (ID: 176697)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2892380356788635
    2. 'elif' → logprob: -2.4142379760742188
    3. 'else' → logprob: -2.4142379760742188
    4. 'for' → logprob: -3.9142379760742188
    5. 's' → logprob: -4.289237976074219
    6. '```' → logprob: -4.539237976074219
    7. ')' → logprob: -4.789237976074219
    8. ' ' → logprob: -5.914237976074219
    9. '#' → logprob: -6.039237976074219
    10. ' if' → logprob: -6.039237976074219

Token 38: '_m' (ID: 1285)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.38197410106658936
    2. ' =' → logprob: -1.6319741010665894
    3. 's' → logprob: -2.881974220275879
    4. '_de' → logprob: -3.256974220275879
    5. '_s' → logprob: -4.381974220275879
    6. '_mid' → logprob: -5.256974220275879
    7. '_final' → logprob: -6.256974220275879
    8. '_m' → logprob: -6.381974220275879
    9. '_middle' → logprob: -6.631974220275879
    10. '_=' → logprob: -6.756974220275879

Token 39: 'il' (ID: 311)
  Prédit: 'il'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'il' → logprob: -0.005314277950674295
    2. 'id' → logprob: -6.630314350128174
    3. 'ill' → logprob: -6.880314350128174
    4. 'i' → logprob: -7.130314350128174
    5. 'ile' → logprob: -7.630314350128174
    6. '=' → logprob: -8.130313873291016
    7. ' =' → logprob: -8.255313873291016
    8. '_' → logprob: -8.630313873291016
    9. 'o' → logprob: -9.505313873291016
    10. '   ' → logprob: -9.505313873291016

Token 40: 'ieu' (ID: 15541)
  Prédit: 'ieu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ieu' → logprob: -0.03516489267349243
    2. 'e' → logprob: -3.5351648330688477
    3. 'eu' → logprob: -5.410164833068848
    4. 'ieux' → logprob: -8.035164833068848
    5. 'eux' → logprob: -8.035164833068848
    6. 'eur' → logprob: -9.410164833068848
    7. '```' → logprob: -9.785164833068848
    8. 'ei' → logprob: -9.910164833068848
    9. 'ie' → logprob: -10.410164833068848
    10. 'ieur' → logprob: -11.660164833068848

Token 41: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07208465784788132
    2. '=' → logprob: -2.697084665298462
    3. '_' → logprob: -6.197084426879883
    4. 's' → logprob: -9.572084426879883
    5. ' ' → logprob: -11.447084426879883
    6. '1' → logprob: -11.822084426879883
    7. '=int' → logprob: -12.197084426879883
    8. '  ' → logprob: -12.572084426879883
    9. '_=' → logprob: -13.072084426879883
    10. '   ' → logprob: -13.197084426879883

Token 42: ' int' (ID: 677)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.2520695626735687
    2. ' nombre' → logprob: -1.5020695924758911
    3. 'int' → logprob: -9.877069473266602
    4. 'nom' → logprob: -10.752069473266602
    5. ' len' → logprob: -10.752069473266602
    6. 'len' → logprob: -10.877069473266602
    7. ' int' → logprob: -11.502069473266602
    8. ' ' → logprob: -12.002069473266602
    9. '(nombre' → logprob: -12.252069473266602
    10. ' nom' → logprob: -13.002069473266602

Token 43: '(len' (ID: 14990)
  Prédit: '(nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nombre' → logprob: -0.0019706233870238066
    2. '(' → logprob: -6.5019707679748535
    3. '(len' → logprob: -7.8769707679748535
    4. 'nombre' → logprob: -9.626970291137695
    5. ' (' → logprob: -11.251970291137695
    6. '(n' → logprob: -12.376970291137695
    7. '(numero' → logprob: -12.876970291137695
    8. '(nome' → logprob: -13.001970291137695
    9. 'len' → logprob: -15.501970291137695
    10. '(nb' → logprob: -15.876970291137695

Token 44: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.961759259458631e-06
    2. '(nombre' → logprob: -13.000004768371582
    3. ' (' → logprob: -13.750004768371582
    4. '(n' → logprob: -14.250004768371582
    5. ')' → logprob: -15.250004768371582
    6. 'chaine' → logprob: -15.375004768371582
    7. '```' → logprob: -16.1250057220459
    8. '()' → logprob: -16.5000057220459
    9. ' ' → logprob: -17.0000057220459
    10. '(
' → logprob: -17.1250057220459

Token 45: 'chaine' (ID: 68916)
  Prédit: 'chaine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.0007205340662039816
    2. ' chaine' → logprob: -7.250720500946045
    3. 'cha' → logprob: -12.125720977783203
    4. 'chain' → logprob: -13.750720977783203
    5. '   ' → logprob: -13.875720977783203
    6. '```' → logprob: -14.000720977783203
    7. ' ' → logprob: -14.625720977783203
    8. '(' → logprob: -15.000720977783203
    9. 'chai' → logprob: -15.000720977783203
    10. ')' → logprob: -15.125720977783203

Token 46: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -1.1994775377388578e-05
    2. 'a' → logprob: -11.875012397766113
    3. '_' → logprob: -12.875012397766113
    4. ')' → logprob: -13.500012397766113
    5. ' _' → logprob: -15.875012397766113
    6. '))' → logprob: -16.250011444091797
    7. '_)' → logprob: -16.562511444091797
    8. '_o' → logprob: -17.062511444091797
    9. '_de' → logprob: -17.125011444091797
    10. '```' → logprob: -17.250011444091797

Token 47: '_ver' (ID: 61040)
  Prédit: '_ver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ver' → logprob: -0.026724383234977722
    2. 'ver' → logprob: -3.651724338531494
    3. '_' → logprob: -8.276724815368652
    4. ' verifier' → logprob: -9.776724815368652
    5. 'a' → logprob: -10.151724815368652
    6. 'Verifier' → logprob: -10.901724815368652
    7. '_v' → logprob: -11.026724815368652
    8. ' _' → logprob: -11.776724815368652
    9. 'v' → logprob: -12.401724815368652
    10. '_a' → logprob: -12.776724815368652

Token 48: 'ifier' (ID: 4550)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -1.0729529857635498
    2. 'ifier' → logprob: -1.0729529857635498
    3. 'r' → logprob: -1.1979529857635498
    4. 'rier' → logprob: -4.947953224182129
    5. 'ir' → logprob: -5.822953224182129
    6. '   ' → logprob: -6.947953224182129
    7. 'ifer' → logprob: -7.447953224182129
    8. 'f' → logprob: -7.572953224182129
    9. 'irer' → logprob: -7.697953224182129
    10. 'rer' → logprob: -8.322953224182129

Token 49: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0038813117425888777
    2. '/' → logprob: -6.003881454467773
    3. ' )' → logprob: -7.503881454467773
    4. ' /' → logprob: -8.128881454467773
    5. '//' → logprob: -8.503881454467773
    6. ' //' → logprob: -9.003881454467773
    7. ')//' → logprob: -9.128881454467773
    8. ')/' → logprob: -9.253881454467773
    9. ' ' → logprob: -11.753881454467773
    10. '`' → logprob: -12.128881454467773

Token 50: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.10540498048067093
    2. ' /' → logprob: -2.98040509223938
    3. ')' → logprob: -3.10540509223938
    4. ' //' → logprob: -6.230404853820801
    5. '//' → logprob: -6.480404853820801
    6. ' )' → logprob: -7.105404853820801
    7. ' ' → logprob: -10.1054048538208
    8. ' ' → logprob: -10.2304048538208
    9. '/)' → logprob: -10.7304048538208
    10. ')/' → logprob: -10.9804048538208

Token 51: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.06993787735700607
    2. ' ' → logprob: -2.6949379444122314
    3. ')' → logprob: -14.194937705993652
    4. '  ' → logprob: -15.194937705993652
    5. '۲' → logprob: -15.444937705993652
    6. '   ' → logprob: -16.31993865966797
    7. '```' → logprob: -16.31993865966797
    8. ' ' → logprob: -16.56993865966797
    9. '<|end|>' → logprob: -16.81993865966797
    10. '２' → logprob: -17.13243865966797

Token 52: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0017027945723384619
    2. ' ' → logprob: -6.376702785491943
    3. '  ' → logprob: -15.626703262329102
    4. '   ' → logprob: -15.876703262329102
    5. ')' → logprob: -16.1267032623291
    6. '۲' → logprob: -16.7517032623291
    7. '```' → logprob: -16.8767032623291
    8. 'de' → logprob: -18.0017032623291
    9. '２' → logprob: -18.1267032623291
    10. '<|end|>' → logprob: -18.5017032623291

Token 53: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.800739018013701e-05
    2. ' )' → logprob: -10.0000581741333
    3. '))' → logprob: -11.5000581741333
    4. ')
' → logprob: -13.8750581741333
    5. ')`' → logprob: -15.3750581741333
    6. '')' → logprob: -15.6250581741333
    7. '*' → logprob: -15.7500581741333
    8. '**' → logprob: -15.8750581741333
    9. ')))' → logprob: -15.8750581741333
    10. '`)' → logprob: -16.125057220458984

Token 54: 'prem' (ID: 76294)
  Prédit: 'prem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prem' → logprob: -0.18950068950653076
    2. 'if' → logprob: -1.8145006895065308
    3. 'first' → logprob: -5.18950080871582
    4. 'for' → logprob: -5.93950080871582
    5. 'part' → logprob: -8.18950080871582
    6. 'print' → logprob: -8.31450080871582
    7. '```' → logprob: -8.43950080871582
    8. '#' → logprob: -8.93950080871582
    9. 'chaine' → logprob: -9.06450080871582
    10. 'a' → logprob: -9.56450080871582

Token 55: 'iere' (ID: 19068)
  Prédit: 'ier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ier' → logprob: -0.1389477699995041
    2. 'iere' → logprob: -2.1389477252960205
    3. 'ière' → logprob: -4.7639479637146
    4. 'i' → logprob: -5.7639479637146
    5. 'ie' → logprob: -9.138947486877441
    6. 'iers' → logprob: -10.013947486877441
    7. 'ire' → logprob: -11.263947486877441
    8. 'iert' → logprob: -11.513947486877441
    9. '   ' → logprob: -11.638947486877441
    10. 'ierre' → logprob: -11.763947486877441

Token 56: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.30726513266563416
    2. '_part' → logprob: -1.9322651624679565
    3. '_' → logprob: -2.307265043258667
    4. '_par' → logprob: -3.932265043258667
    5. 'mo' → logprob: -8.557265281677246
    6. '_met' → logprob: -9.057265281677246
    7. 'part' → logprob: -9.682265281677246
    8. 'chaine' → logprob: -10.432265281677246
    9. '_half' → logprob: -10.682265281677246
    10. ' mo' → logprob: -10.682265281677246

Token 57: 'oit' (ID: 18790)
  Prédit: 'oit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oit' → logprob: -0.10354219377040863
    2. 'o' → logprob: -2.3535420894622803
    3. 'oise' → logprob: -7.353542327880859
    4. 'oi' → logprob: -7.728542327880859
    5. 'it' → logprob: -7.728542327880859
    6. 'ois' → logprob: -7.853542327880859
    7. 'i' → logprob: -7.978542327880859
    8. 'oire' → logprob: -8.35354232788086
    9. 'oine' → logprob: -8.47854232788086
    10. 'a' → logprob: -8.97854232788086

Token 58: 'ie' (ID: 396)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.003100119298323989
    2. 'é' → logprob: -6.3780999183654785
    3. 'ie' → logprob: -6.6280999183654785
    4. 'ié' → logprob: -10.378100395202637
    5. 'ier' → logprob: -11.878100395202637
    6. 'a' → logprob: -12.128100395202637
    7. 'iere' → logprob: -12.253100395202637
    8. 'er' → logprob: -12.378100395202637
    9. 'ei' → logprob: -12.503100395202637
    10. 'ee' → logprob: -13.253100395202637

Token 59: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.36946800351142883
    2. '=' → logprob: -1.8694679737091064
    3. '_' → logprob: -1.8694679737091064
    4. ' ==' → logprob: -8.869467735290527
    5. '[:]' → logprob: -9.494467735290527
    6. 's' → logprob: -9.744467735290527
    7. '_=' → logprob: -10.494467735290527
    8. '[' → logprob: -10.994467735290527
    9. '=[]' → logprob: -10.994467735290527
    10. '==' → logprob: -11.244467735290527

Token 60: ' chaine' (ID: 192094)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.06207804009318352
    2. ' chaine' → logprob: -2.8120779991149902
    3. ' chaîne' → logprob: -9.437078475952148
    4. ' ' → logprob: -11.937078475952148
    5. 'chain' → logprob: -12.062078475952148
    6. 'cha' → logprob: -12.062078475952148
    7. '   ' → logprob: -12.437078475952148
    8. ' ' → logprob: -13.312078475952148
    9. 'chine' → logprob: -13.562078475952148
    10. '```' → logprob: -14.312078475952148

Token 61: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -2.45848218582978e-06
    2. '_' → logprob: -13.37500286102295
    3. 'a' → logprob: -14.00000286102295
    4. '[:' → logprob: -18.000001907348633
    5. '[:]' → logprob: -19.125001907348633
    6. 'à' → logprob: -19.375001907348633
    7. ' _' → logprob: -19.375001907348633
    8. '[' → logprob: -19.500001907348633
    9. '_to' → logprob: -19.625001907348633
    10. 'а' → logprob: -20.125001907348633

Token 62: '_ver' (ID: 61040)
  Prédit: '_ver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ver' → logprob: -0.001987044233828783
    2. 'a' → logprob: -7.001986980438232
    3. 'ver' → logprob: -7.001986980438232
    4. '_a' → logprob: -9.12698745727539
    5. '_v' → logprob: -10.75198745727539
    6. '_' → logprob: -11.25198745727539
    7. 'Verifier' → logprob: -11.75198745727539
    8. '_VER' → logprob: -12.25198745727539
    9. 'e' → logprob: -13.37698745727539
    10. '[' → logprob: -13.87698745727539

Token 63: 'ifier' (ID: 4550)
  Prédit: 'ifier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifier' → logprob: -0.0004938178462907672
    2. 'if' → logprob: -8.250494003295898
    3. 'ifer' → logprob: -8.875494003295898
    4. 'f' → logprob: -9.875494003295898
    5. 'ifie' → logprob: -11.500494003295898
    6. 'ifi' → logprob: -11.750494003295898
    7. 'r' → logprob: -12.500494003295898
    8. 'iquer' → logprob: -12.875494003295898
    9. 'ific' → logprob: -13.000494003295898
    10. 'IFIER' → logprob: -13.125494003295898

Token 64: '[' (ID: 58)
  Prédit: '[:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.02985253743827343
    2. '[' → logprob: -3.5298526287078857
    3. '[:]' → logprob: -9.529852867126465
    4. ':' → logprob: -10.654852867126465
    5. '[
' → logprob: -12.904852867126465
    6. ' [:' → logprob: -13.404852867126465
    7. '[:-' → logprob: -14.029852867126465
    8. '[ind' → logprob: -15.029852867126465
    9. '[...]' → logprob: -15.154852867126465
    10. '[]' → logprob: -16.02985191345215

Token 65: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4848199188709259
    2. ':' → logprob: -0.9848198890686035
    3. ':index' → logprob: -4.6098198890686035
    4. ' :' → logprob: -7.4848198890686035
    5. 'indice' → logprob: -9.609820365905762
    6. ':i' → logprob: -10.734820365905762
    7. ' ' → logprob: -10.859820365905762
    8. ':end' → logprob: -11.109820365905762
    9. ':int' → logprob: -11.609820365905762
    10. ':n' → logprob: -11.609820365905762

Token 66: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014210758730769157
    2. ' :' → logprob: -4.2642107009887695
    3. 'indice' → logprob: -10.26421070098877
    4. ':index' → logprob: -11.76421070098877
    5. ':int' → logprob: -13.26421070098877
    6. ':i' → logprob: -14.76421070098877
    7. ' ' → logprob: -15.13921070098877
    8. '   ' → logprob: -15.26421070098877
    9. '[ind' → logprob: -15.38921070098877
    10. ':
' → logprob: -15.38921070098877

Token 67: 'indice' (ID: 176697)
  Prédit: 'indice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indice' → logprob: -0.00011474833445390686
    2. ' indice' → logprob: -9.125114440917969
    3. 'ind' → logprob: -13.125114440917969
    4. 'indent' → logprob: -14.250114440917969
    5. '   ' → logprob: -14.375114440917969
    6. 'indices' → logprob: -14.500114440917969
    7. 'indx' → logprob: -14.875114440917969
    8. 'indi' → logprob: -15.125114440917969
    9. '  ' → logprob: -15.125114440917969
    10. ' ' → logprob: -15.250114440917969

Token 68: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -3.7697225252486533e-06
    2. '_' → logprob: -12.750003814697266
    3. ' _' → logprob: -15.500003814697266
    4. '_s' → logprob: -15.750003814697266
    5. 'mil' → logprob: -15.875003814697266
    6. '   ' → logprob: -16.375003814697266
    7. 'indice' → logprob: -17.125003814697266
    8. ' ' → logprob: -17.250003814697266
    9. '_b' → logprob: -17.375003814697266
    10. '_n' → logprob: -17.500003814697266

Token 69: 'il' (ID: 311)
  Prédit: 'ieu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ieu' → logprob: -0.4096483588218689
    2. 'il' → logprob: -1.1596484184265137
    3. 'lie' → logprob: -4.284648418426514
    4. 'ilie' → logprob: -5.534648418426514
    5. 'ie' → logprob: -6.159648418426514
    6. 'ieux' → logprob: -7.034648418426514
    7. 'ile' → logprob: -7.159648418426514
    8. 'i' → logprob: -8.659647941589355
    9. 'eil' → logprob: -8.659647941589355
    10. 'ol' → logprob: -9.534647941589355

Token 70: 'ieu' (ID: 15541)
  Prédit: 'ieu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ieu' → logprob: -0.060656800866127014
    2. 'eu' → logprob: -3.185656785964966
    3. 'e' → logprob: -4.060657024383545
    4. 'eux' → logprob: -8.685656547546387
    5. 'ie' → logprob: -9.560656547546387
    6. 'eur' → logprob: -12.060656547546387
    7. 'ieux' → logprob: -12.310656547546387
    8. 'ceau' → logprob: -13.310656547546387
    9. ' ieu' → logprob: -13.685656547546387
    10. 'o' → logprob: -13.685656547546387

Token 71: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0013978567440062761
    2. ' ]' → logprob: -6.751398086547852
    3. ']
' → logprob: -8.626398086547852
    4. ']

' → logprob: -10.001398086547852
    5. ']
' → logprob: -13.251398086547852
    6. ' ]
' → logprob: -14.876398086547852
    7. ':]' → logprob: -15.376398086547852
    8. ']==' → logprob: -15.751398086547852
    9. ']

' → logprob: -15.751398086547852
    10. '][' → logprob: -16.62639808654785

Token 72: 'se' (ID: 344)
  Prédit: 'se'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.03818390145897865
    2. 'de' → logprob: -3.2881839275360107
    3. ' seconde' → logprob: -9.78818416595459
    4. 'second' → logprob: -10.16318416595459
    5. 's' → logprob: -11.53818416595459
    6. 'su' → logprob: -11.53818416595459
    7. 'prem' → logprob: -11.78818416595459
    8. 'suite' → logprob: -12.41318416595459
    9. 'print' → logprob: -12.78818416595459
    10. '```' → logprob: -13.03818416595459

Token 73: 'conde' (ID: 50435)
  Prédit: 'conde'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'conde' → logprob: -0.0002867225557565689
    2. 'cond' → logprob: -8.625287055969238
    3. 'con' → logprob: -9.500287055969238
    4. 'onde' → logprob: -12.125287055969238
    5. 'pt' → logprob: -13.000287055969238
    6. 'nde' → logprob: -13.500287055969238
    7. '%' → logprob: -13.500287055969238
    8. '>' → logprob: -13.750287055969238
    9. 'c' → logprob: -13.750287055969238
    10. '   ' → logprob: -13.750287055969238

Token 74: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.0011773703154176474
    2. '_' → logprob: -6.7511773109436035
    3. ' _' → logprob: -13.501177787780762
    4. '_part' → logprob: -13.626177787780762
    5. '_=' → logprob: -13.876177787780762
    6. '=_' → logprob: -14.251177787780762
    7. '_a' → logprob: -14.501177787780762
    8. '=' → logprob: -15.001177787780762
    9. '_par' → logprob: -15.126177787780762
    10. 'mo' → logprob: -15.626177787780762

Token 75: 'oit' (ID: 18790)
  Prédit: 'oit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oit' → logprob: -0.0077361734583973885
    2. 'o' → logprob: -5.0077362060546875
    3. 'oi' → logprob: -7.3827362060546875
    4. 'oise' → logprob: -9.007736206054688
    5. 'ot' → logprob: -9.882736206054688
    6. 'mo' → logprob: -10.132736206054688
    7. '_m' → logprob: -10.632736206054688
    8. 'it' → logprob: -10.632736206054688
    9. 'ois' → logprob: -11.007736206054688
    10. 'oire' → logprob: -11.007736206054688

Token 76: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.0010260201524943113
    2. 'e' → logprob: -7.001026153564453
    3. 'ié' → logprob: -10.251026153564453
    4. 'aie' → logprob: -10.626026153564453
    5. 'ite' → logprob: -11.001026153564453
    6. 'ile' → logprob: -11.001026153564453
    7. ' ie' → logprob: -12.501026153564453
    8. '_ie' → logprob: -13.001026153564453
    9. 'tie' → logprob: -13.126026153564453
    10. 'é' → logprob: -13.126026153564453

Token 77: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132679760456085
    2. ' =' → logprob: -1.3132679462432861
    3. '_' → logprob: -12.688267707824707
    4. '[' → logprob: -13.688267707824707
    5. ' =[' → logprob: -15.438267707824707
    6. '=[' → logprob: -15.563267707824707
    7. '_=' → logprob: -15.688267707824707
    8. '=len' → logprob: -15.688267707824707
    9. '＝' → logprob: -15.813267707824707
    10. '[:]' → logprob: -15.813267707824707

Token 78: ' chaine' (ID: 192094)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.693635880947113
    2. ' chaine' → logprob: -0.693635880947113
    3. ' chaîne' → logprob: -7.818635940551758
    4. ' ' → logprob: -10.443635940551758
    5. 'chain' → logprob: -11.068635940551758
    6. 'cha' → logprob: -11.568635940551758
    7. ' chain' → logprob: -11.818635940551758
    8. 'chine' → logprob: -12.318635940551758
    9. ' ' → logprob: -12.443635940551758
    10. ' cha' → logprob: -13.193635940551758

Token 79: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.00016480287013109773
    2. 'a' → logprob: -8.750164985656738
    3. '_' → logprob: -12.250164985656738
    4. '[' → logprob: -14.375164985656738
    5. '_de' → logprob: -15.875164985656738
    6. '[a' → logprob: -16.000164031982422
    7. '[_' → logprob: -16.000164031982422
    8. 's' → logprob: -16.375164031982422
    9. 'à' → logprob: -16.625164031982422
    10. '```' → logprob: -16.625164031982422

Token 80: '_ver' (ID: 61040)
  Prédit: '_ver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ver' → logprob: -0.0037532902788370848
    2. '_a' → logprob: -6.628753185272217
    3. 'a' → logprob: -6.753753185272217
    4. 'ver' → logprob: -6.753753185272217
    5. 'er' → logprob: -10.378753662109375
    6. '_' → logprob: -10.878753662109375
    7. '_v' → logprob: -10.878753662109375
    8. '[' → logprob: -11.503753662109375
    9. '_VER' → logprob: -12.753753662109375
    10. 'Verifier' → logprob: -13.128753662109375

Token 81: 'ifier' (ID: 4550)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.03446605056524277
    2. 'r' → logprob: -3.409466028213501
    3. 'ifier' → logprob: -7.15946626663208
    4. 'e' → logprob: -11.159465789794922
    5. 'a' → logprob: -12.034465789794922
    6. 'i' → logprob: -12.659465789794922
    7. 't' → logprob: -13.034465789794922
    8. 're' → logprob: -13.159465789794922
    9. '_er' → logprob: -13.284465789794922
    10. '_' → logprob: -13.409465789794922

Token 82: '[ind' (ID: 68064)
  Prédit: '[ind'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[ind' → logprob: -0.0006283254479058087
    2. '[' → logprob: -7.375628471374512
    3. '[
' → logprob: -14.125628471374512
    4. '[:' → logprob: -14.750628471374512
    5. 'indice' → logprob: -15.625628471374512
    6. '[i' → logprob: -16.125627517700195
    7. '[idx' → logprob: -16.375627517700195
    8. '[in' → logprob: -16.500627517700195
    9. '[mid' → logprob: -16.750627517700195
    10. ' [' → logprob: -17.250627517700195

Token 83: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -0.0003087678924202919
    2. 'indice' → logprob: -8.750308990478516
    3. 'ic' → logprob: -9.875308990478516
    4. 'dice' → logprob: -10.500308990478516
    5. '[' → logprob: -10.750308990478516
    6. '_' → logprob: -11.125308990478516
    7. 'i' → logprob: -11.250308990478516
    8. 'ex' → logprob: -11.750308990478516
    9. 'lice' → logprob: -12.875308990478516
    10. '```' → logprob: -13.500308990478516

Token 84: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -3.6789137084269896e-05
    2. '_' → logprob: -10.25003719329834
    3. 'e' → logprob: -15.50003719329834
    4. '[' → logprob: -15.75003719329834
    5. ' _' → logprob: -15.87503719329834
    6. '_ml' → logprob: -16.125036239624023
    7. '_s' → logprob: -16.375036239624023
    8. 'a' → logprob: -16.500036239624023
    9. '```' → logprob: -16.625036239624023
    10. '[m' → logprob: -16.750036239624023

Token 85: 'il' (ID: 311)
  Prédit: 'il'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'il' → logprob: -0.0006302326801232994
    2. 'mil' → logprob: -8.125630378723145
    3. 'ilie' → logprob: -8.250630378723145
    4. 'ieu' → logprob: -11.000630378723145
    5. '_il' → logprob: -11.625630378723145
    6. 'ile' → logprob: -11.625630378723145
    7. 'ilo' → logprob: -12.125630378723145
    8. 'ilu' → logprob: -12.750630378723145
    9. 'iloc' → logprob: -12.750630378723145
    10. 'id' → logprob: -13.000630378723145

Token 86: 'ieu' (ID: 15541)
  Prédit: 'ieu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ieu' → logprob: -0.00010628487507347018
    2. 'e' → logprob: -10.375105857849121
    3. 'ieux' → logprob: -10.750105857849121
    4. 'ie' → logprob: -11.375105857849121
    5. 'au' → logprob: -11.750105857849121
    6. 'o' → logprob: -11.750105857849121
    7. 'eu' → logprob: -12.000105857849121
    8. 'ceau' → logprob: -12.000105857849121
    9. 'eux' → logprob: -12.250105857849121
    10. 'neau' → logprob: -13.500105857849121

Token 87: ':' (ID: 25)
  Prédit: ':]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':]' → logprob: -0.019480085000395775
    2. ':' → logprob: -4.019480228424072
    3. ' :]' → logprob: -6.644480228424072
    4. ']' → logprob: -11.394479751586914
    5. ' :' → logprob: -11.394479751586914
    6. ']:' → logprob: -13.394479751586914
    7. ':].' → logprob: -13.519479751586914
    8. ':end' → logprob: -14.269479751586914
    9. '：' → logprob: -14.394479751586914
    10. ' ' → logprob: -14.894479751586914

Token 88: 'len' (ID: 3303)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007462277542799711
    2. 'len' → logprob: -5.132462501525879
    3. ' ]' → logprob: -6.507462501525879
    4. ' len' → logprob: -11.007462501525879
    5. ':]' → logprob: -11.632462501525879
    6. 'None' → logprob: -12.507462501525879
    7. '])' → logprob: -12.757462501525879
    8. ']

' → logprob: -13.632462501525879
    9. ']
' → logprob: -13.882462501525879
    10. ' :]' → logprob: -13.882462501525879

Token 89: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -9.491498531133402e-06
    2. '_' → logprob: -11.750009536743164
    3. '(
' → logprob: -15.125009536743164
    4. ' (' → logprob: -15.250009536743164
    5. '(

' → logprob: -15.500009536743164
    6. '_a' → logprob: -16.000009536743164
    7. '(_' → logprob: -16.250009536743164
    8. '_(' → logprob: -16.375009536743164
    9. '(a' → logprob: -16.625009536743164
    10. 'a' → logprob: -16.625009536743164

Token 90: 'chaine' (ID: 68916)
  Prédit: 'chaine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.002217465080320835
    2. ' chaine' → logprob: -6.1272172927856445
    3. ')' → logprob: -11.752217292785645
    4. 'cha' → logprob: -12.252217292785645
    5. '(' → logprob: -12.252217292785645
    6. ' ' → logprob: -12.502217292785645
    7. 'chain' → logprob: -13.377217292785645
    8. ' chaîne' → logprob: -13.502217292785645
    9. '   ' → logprob: -13.752217292785645
    10. 'chai' → logprob: -13.877217292785645

Token 91: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.00012011249782517552
    2. 'a' → logprob: -9.250120162963867
    3. '_' → logprob: -11.250120162963867
    4. ')' → logprob: -12.250120162963867
    5. '_de' → logprob: -13.000120162963867
    6. 'de' → logprob: -13.750120162963867
    7. 'à' → logprob: -14.750120162963867
    8. '))' → logprob: -15.250120162963867
    9. '_)' → logprob: -15.375120162963867
    10. ' a' → logprob: -16.000120162963867

Token 92: '_ver' (ID: 61040)
  Prédit: '_ver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ver' → logprob: -0.007270578760653734
    2. '_a' → logprob: -5.757270812988281
    3. 'a' → logprob: -6.007270812988281
    4. 'ver' → logprob: -6.757270812988281
    5. '_v' → logprob: -8.007270812988281
    6. '_' → logprob: -9.257270812988281
    7. 'Verifier' → logprob: -11.632270812988281
    8. '_car' → logprob: -12.507270812988281
    9. '_verified' → logprob: -12.507270812988281
    10. '_VER' → logprob: -12.757270812988281

Token 93: 'ifier' (ID: 4550)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.30974671244621277
    2. 'r' → logprob: -1.6847467422485352
    3. 'ifier' → logprob: -3.184746742248535
    4. 'rier' → logprob: -3.309746742248535
    5. 'iquer' → logprob: -7.059746742248535
    6. 'ifer' → logprob: -7.684746742248535
    7. 're' → logprob: -8.184746742248535
    8. 'f' → logprob: -8.309746742248535
    9. 'rer' → logprob: -8.559746742248535
    10. 'rif' → logprob: -8.809746742248535

Token 94: ')]

' (ID: 56882)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006102981511503458
    2. '])' → logprob: -5.381103038787842
    3. ')]' → logprob: -6.631103038787842
    4. ' ]' → logprob: -9.506102561950684
    5. ')' → logprob: -9.506102561950684
    6. '])]' → logprob: -12.506102561950684
    7. ')])' → logprob: -13.006102561950684
    8. ']))' → logprob: -13.256102561950684
    9. ']
' → logprob: -13.756102561950684
    10. ']==' → logprob: -13.881102561950684

Token 95: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.18268635869026184
    2. ' if' → logprob: -2.4326863288879395
    3. ' ' → logprob: -3.6826863288879395
    4. ':' → logprob: -4.6826863288879395
    5. ' 
' → logprob: -4.9326863288879395
    6. '<|end|>' → logprob: -5.0576863288879395
    7. '   ' → logprob: -5.1826863288879395
    8. '
' → logprob: -5.1826863288879395
    9. '#' → logprob: -5.4326863288879395
    10. '[' → logprob: -6.0576863288879395

Token 96: ' premiere' (ID: 52343)
  Prédit: ' premiere'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' premiere' → logprob: -0.2111598402261734
    2. 'prem' → logprob: -1.8361598253250122
    3. ' première' → logprob: -4.461159706115723
    4. ' premi' → logprob: -4.711159706115723
    5. ' ' → logprob: -5.086159706115723
    6. ' premie' → logprob: -5.711159706115723
    7. ' premier' → logprob: -7.711159706115723
    8. ' ' → logprob: -9.336159706115723
    9. ' seconde' → logprob: -9.461159706115723
    10. 'Prem' → logprob: -9.461159706115723

Token 97: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.048603273928165436
    2. '_' → logprob: -3.0486032962799072
    3. '_=' → logprob: -12.298603057861328
    4. '==' → logprob: -12.673603057861328
    5. '_a' → logprob: -13.298603057861328
    6. '_p' → logprob: -13.923603057861328
    7. ' _' → logprob: -14.423603057861328
    8. ' ==' → logprob: -14.548603057861328
    9. '_ma' → logprob: -14.548603057861328
    10. '__' → logprob: -14.548603057861328

Token 98: 'oit' (ID: 18790)
  Prédit: 'oit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oit' → logprob: -0.0002593130338937044
    2. 'o' → logprob: -9.125259399414062
    3. 'oi' → logprob: -9.250259399414062
    4. 'ot' → logprob: -11.125259399414062
    5. 'mo' → logprob: -11.625259399414062
    6. '```' → logprob: -11.625259399414062
    7. 'ois' → logprob: -12.625259399414062
    8. 'oire' → logprob: -12.750259399414062
    9. 'oise' → logprob: -12.750259399414062
    10. 'iot' → logprob: -13.375259399414062

Token 99: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.03847575932741165
    2. 'e' → logprob: -3.288475751876831
    3. 'tie' → logprob: -8.53847599029541
    4. 'lie' → logprob: -9.28847599029541
    5. 'he' → logprob: -10.16347599029541
    6. 'te' → logprob: -11.03847599029541
    7. 'ite' → logprob: -11.03847599029541
    8. 'alie' → logprob: -11.16347599029541
    9. 'ile' → logprob: -11.28847599029541
    10. 'aie' → logprob: -11.91347599029541

Token 100: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.31654155254364014
    2. '==' → logprob: -1.3165415525436401
    3. '[::-' → logprob: -5.81654167175293
    4. '=' → logprob: -8.81654167175293
    5. '.reverse' → logprob: -9.94154167175293
    6. '[' → logprob: -10.06654167175293
    7. ' =' → logprob: -10.94154167175293
    8. ' !=' → logprob: -11.69154167175293
    9. '[:]' → logprob: -11.94154167175293
    10. 'reverse' → logprob: -12.06654167175293

Token 101: ' seconde' (ID: 66204)
  Prédit: ' seconde'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' seconde' → logprob: -0.04869115352630615
    2. 'se' → logprob: -3.0486912727355957
    3. 'second' → logprob: -9.798690795898438
    4. ' ' → logprob: -11.298690795898438
    5. ' se' → logprob: -11.673690795898438
    6. 's' → logprob: -12.298690795898438
    7. ' secondes' → logprob: -12.423690795898438
    8. ' second' → logprob: -12.548690795898438
    9. ' reversed' → logprob: -12.548690795898438
    10. 'reverse' → logprob: -12.798690795898438

Token 102: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.00045200303429737687
    2. 'mo' → logprob: -7.875452041625977
    3. '_' → logprob: -10.375452041625977
    4. '_p' → logprob: -11.000452041625977
    5. 'e' → logprob: -11.625452041625977
    6. 'a' → logprob: -13.000452041625977
    7. '_a' → logprob: -13.250452041625977
    8. 'm' → logprob: -14.250452041625977
    9. '_b' → logprob: -14.375452041625977
    10. 'se' → logprob: -14.500452041625977

Token 103: 'oit' (ID: 18790)
  Prédit: 'oit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oit' → logprob: -0.2265722155570984
    2. 'o' → logprob: -1.6015722751617432
    3. 'oise' → logprob: -7.726572036743164
    4. 'oire' → logprob: -7.976572036743164
    5. 'oine' → logprob: -9.226572036743164
    6. 'oi' → logprob: -9.601572036743164
    7. 'ot' → logprob: -9.601572036743164
    8. 'ois' → logprob: -10.351572036743164
    9. 'mo' → logprob: -10.476572036743164
    10. 'oin' → logprob: -11.226572036743164

Token 104: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.006322878412902355
    2. 'e' → logprob: -5.131322860717773
    3. 'ile' → logprob: -8.881322860717773
    4. 'lie' → logprob: -8.881322860717773
    5. 'se' → logprob: -11.256322860717773
    6. 'alie' → logprob: -11.381322860717773
    7. '_ie' → logprob: -11.756322860717773
    8. 'he' → logprob: -11.881322860717773
    9. 'le' → logprob: -11.881322860717773
    10. ' ie' → logprob: -12.506322860717773

Token 105: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -2.8444881536415778e-05
    2. ':
' → logprob: -10.750028610229492
    3. ' :' → logprob: -12.125028610229492
    4. ':**' → logprob: -14.000028610229492
    5. '.' → logprob: -15.250028610229492
    6. '[' → logprob: -16.250028610229492
    7. '():' → logprob: -16.500028610229492
    8. '[:]' → logprob: -17.125028610229492
    9. ':return' → logprob: -17.625028610229492
    10. '):' → logprob: -17.750028610229492

Token 106: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002807623823173344
    2. 'print' → logprob: -8.875280380249023
    3. '    
' → logprob: -9.375280380249023
    4. '	print' → logprob: -10.500280380249023
    5. ' print' → logprob: -11.125280380249023
    6. '   ' → logprob: -11.875280380249023
    7. '       ' → logprob: -13.375280380249023
    8. '
' → logprob: -13.375280380249023
    9. '<|end|>' → logprob: -14.000280380249023
    10. '\n' → logprob: -14.500280380249023

Token 107: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018421847373247147
    2. 'print' (adapté à ' print') → logprob: -4.018421649932861
    3. ' print' → logprob: -8.26842212677002
    4. '       ' → logprob: -11.89342212677002
    5. '	print' → logprob: -12.64342212677002
    6. '   ' → logprob: -12.76842212677002
    7. '    
' → logprob: -13.64342212677002
    8. ' ' → logprob: -14.64342212677002
    9. '    ' → logprob: -15.26842212677002
    10. '  ' → logprob: -15.39342212677002

Token 108: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13155773282051086
    2. '("' → logprob: -2.1315577030181885
    3. '("("' → logprob: -5.381557941436768
    4. '('' → logprob: -11.88155746459961
    5. '("")' → logprob: -12.38155746459961
    6. '("(' → logprob: -13.50655746459961
    7. '("="' → logprob: -13.75655746459961
    8. '(""' → logprob: -14.13155746459961
    9. '("""' → logprob: -14.13155746459961
    10. '()' → logprob: -14.25655746459961

Token 109: 'Yes' (ID: 13022)
  Prédit: 'Oui'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Oui' → logprob: -0.20287245512008667
    2. 'Yes' → logprob: -1.7028725147247314
    3. 'O' → logprob: -6.577872276306152
    4. ' Oui' → logprob: -10.452872276306152
    5. '"' → logprob: -10.952872276306152
    6. 'Si' → logprob: -12.077872276306152
    7. 'oui' → logprob: -12.452872276306152
    8. 'Ok' → logprob: -12.577872276306152
    9. 'YES' → logprob: -12.577872276306152
    10. '"O' → logprob: -14.327872276306152

Token 110: '")
' (ID: 1896)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.654342532157898
    2. '")' → logprob: -0.779342532157898
    3. 'else' → logprob: -4.1543426513671875
    4. ')
' → logprob: -5.6543426513671875
    5. '")
' → logprob: -6.2793426513671875
    6. '')' → logprob: -8.029342651367188
    7. '```' → logprob: -10.404342651367188
    8. '')
' → logprob: -11.404342651367188
    9. ' ")' → logprob: -11.404342651367188
    10. ' else' → logprob: -12.029342651367188

Token 111: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.00024144348572008312
    2. 'e' → logprob: -8.87524127960205
    3. ' else' → logprob: -9.62524127960205
    4. 'el' → logprob: -10.75024127960205
    5. '```' → logprob: -12.12524127960205
    6. 'els' → logprob: -12.62524127960205
    7. 'es' → logprob: -13.12524127960205
    8. 'elser' → logprob: -13.12524127960205
    9. 'elses' → logprob: -15.12524127960205
    10. '}else' → logprob: -15.25024127960205

Token 112: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002457238151691854
    2. ' :' → logprob: -8.875246047973633
    3. ':
' → logprob: -9.375246047973633
    4. '   ' → logprob: -11.000246047973633
    5. ' :
' → logprob: -13.125246047973633
    6. '):' → logprob: -13.500246047973633
    7. '():' → logprob: -14.750246047973633
    8. '(":' → logprob: -15.750246047973633
    9. ')' → logprob: -16.375246047973633
    10. '<|end|>' → logprob: -16.875246047973633

Token 113: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -6.718606891809031e-05
    2. ' print' → logprob: -10.500066757202148
    3. '    ' → logprob: -10.875066757202148
    4. 'print' → logprob: -12.000066757202148
    5. ' No' → logprob: -12.500066757202148
    6. '  ' → logprob: -12.875066757202148
    7. '    
' → logprob: -13.000066757202148
    8. '   ' → logprob: -13.500066757202148
    9. 'No' → logprob: -13.750066757202148
    10. '       ' → logprob: -14.000066757202148

Token 114: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.35942909121513367
    2. ' print' → logprob: -1.359429121017456
    3. '   ' → logprob: -3.109429121017456
    4. 'No' → logprob: -8.359429359436035
    5. ' No' → logprob: -8.859429359436035
    6. '	print' → logprob: -10.359429359436035
    7. '```' → logprob: -10.859429359436035
    8. ' ' → logprob: -11.359429359436035
    9. '    
' → logprob: -11.609429359436035
    10. '.print' → logprob: -11.734429359436035

Token 115: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.02975395694375038
    2. '(' → logprob: -3.5297539234161377
    3. '("")' → logprob: -13.654753684997559
    4. '("("' → logprob: -14.029753684997559
    5. '('' → logprob: -14.404753684997559
    6. '(
' → logprob: -14.904753684997559
    7. '()' → logprob: -15.029753684997559
    8. '("""' → logprob: -16.279754638671875
    9. '(False' → logprob: -17.029754638671875
    10. '(

' → logprob: -17.779754638671875

Token 116: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -2.45848218582978e-06
    2. '"No' → logprob: -13.00000286102295
    3. ' No' → logprob: -16.000001907348633
    4. '"' → logprob: -20.625001907348633
    5. '")' → logprob: -20.750001907348633
    6. 'N' → logprob: -20.750001907348633
    7. '_No' → logprob: -21.125001907348633
    8. 'Non' → logprob: -22.375001907348633
    9. 'NO' → logprob: -23.000001907348633
    10. '>No' → logprob: -23.125001907348633

Token 117: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0005563704180531204
    2. ')' → logprob: -7.500556468963623
    3. '")
' → logprob: -13.500555992126465
    4. ')")' → logprob: -13.500555992126465
    5. '')' → logprob: -14.500555992126465
    6. '"' → logprob: -16.25055694580078
    7. '}")' → logprob: -16.87555694580078
    8. ' ")' → logprob: -17.87555694580078
    9. '```' → logprob: -18.50055694580078
    10. '")

' → logprob: -18.50055694580078


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 115
Tokens correctement prédits (1ère position, stricte): 64
Tokens correctement prédits (1ère position, avec adaptation): 65
Tokens correctement prédits (top 10): 102
Précision stricte (1ère position): 55.65%
Précision adaptée (1ère position): 56.52%
Précision (top 10): 88.70%
================================================================================
