================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:19:46
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
s = input()
if s[2] == s[3]:
    if s[4] == s[5]:
        print('Yes')
    else:
        print('No')
else:
    print('No')
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 's' (ID: 82)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' input' (ID: 3422)
  → Token d'amorce (pas de prédiction)

Token 3: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0036979394499212503
    2. ''' → logprob: -6.003697872161865
    3. '()' → logprob: -8.128698348999023
    4. '('' → logprob: -8.128698348999023
    5. '"' → logprob: -8.503698348999023
    6. '`' → logprob: -8.878698348999023
    7. '(
' → logprob: -9.128698348999023
    8. '```' → logprob: -9.753698348999023
    9. ' (' → logprob: -10.628698348999023
    10. '("("' → logprob: -11.128698348999023

Token 4: 'if' (ID: 366)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.14068587124347687
    2. 'if' → logprob: -2.640685796737671
    3. '+' → logprob: -4.01568603515625
    4. '[' → logprob: -4.14068603515625
    5. 'print' → logprob: -5.39068603515625
    6. ''' → logprob: -5.89068603515625
    7. '[::-' → logprob: -5.89068603515625
    8. '.strip' → logprob: -6.01568603515625
    9. '=' → logprob: -6.14068603515625
    10. '```' → logprob: -6.26568603515625

Token 5: ' s' (ID: 265)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1856175661087036
    2. ' s' → logprob: -1.8106175661087036
    3. 's' → logprob: -5.185617446899414
    4. '  ' → logprob: -8.810617446899414
    5. ''' → logprob: -9.935617446899414
    6. ' not' → logprob: -10.060617446899414
    7. '"' → logprob: -12.185617446899414
    8. ' '' → logprob: -12.185617446899414
    9. ' ' → logprob: -13.060617446899414
    10. ' "' → logprob: -13.560617446899414

Token 6: '[' (ID: 58)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.25484412908554077
    2. ' ==' → logprob: -1.6298441886901855
    3. ' .' → logprob: -5.0048441886901855
    4. '.startswith' → logprob: -5.2548441886901855
    5. '[' → logprob: -5.3798441886901855
    6. '==' → logprob: -5.3798441886901855
    7. '.strip' → logprob: -5.5048441886901855
    8. ':' → logprob: -6.6298441886901855
    9. ' ' → logprob: -7.2548441886901855
    10. '[:]' → logprob: -7.2548441886901855

Token 7: '2' (ID: 17)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.146429223008454e-05
    2. ' ' → logprob: -10.00006103515625
    3. '1' → logprob: -11.62506103515625
    4. '-' → logprob: -12.62506103515625
    5. ':' → logprob: -13.25006103515625
    6. '2' → logprob: -14.62506103515625
    7. ']' → logprob: -14.75006103515625
    8. ')' → logprob: -15.12506103515625
    9. ' :' → logprob: -15.75006103515625
    10. '```' → logprob: -15.75006103515625

Token 8: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005722574423998594
    2. ':' → logprob: -6.130722522735596
    3. ' ]' → logprob: -6.130722522735596
    4. ']==' → logprob: -7.380722522735596
    5. ':]' → logprob: -7.630722522735596
    6. '=' → logprob: -9.630722999572754
    7. '==' → logprob: -9.880722999572754
    8. ']=' → logprob: -10.255722999572754
    9. ' :]' → logprob: -10.380722999572754
    10. '[' → logprob: -11.630722999572754

Token 9: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.7659743428230286
    2. '==' → logprob: -1.0159742832183838
    3. ':' → logprob: -2.640974283218384
    4. '=' → logprob: -3.515974283218384
    5. '>' → logprob: -3.890974283218384
    6. '!=' → logprob: -4.015974521636963
    7. '.' → logprob: -4.640974521636963
    8. ' !=' → logprob: -4.765974521636963
    9. '[' → logprob: -6.390974521636963
    10. '!' → logprob: -6.390974521636963

Token 10: ' s' (ID: 265)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.026928521692752838
    2. '"' → logprob: -4.276928424835205
    3. ''a' → logprob: -4.776928424835205
    4. ' '' → logprob: -7.026928424835205
    5. ''s' → logprob: -7.151928424835205
    6. ''e' → logprob: -7.401928424835205
    7. ''o' → logprob: -8.026928901672363
    8. ''y' → logprob: -8.651928901672363
    9. ''d' → logprob: -8.776928901672363
    10. ''x' → logprob: -8.776928901672363

Token 11: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.955703818472102e-05
    2. ''[' → logprob: -10.125059127807617
    3. ''' → logprob: -12.375059127807617
    4. ']' → logprob: -12.500059127807617
    5. '[]' → logprob: -12.875059127807617
    6. '[
' → logprob: -13.250059127807617
    7. ' '['' → logprob: -14.125059127807617
    8. '1' → logprob: -14.125059127807617
    9. ' [' → logprob: -14.250059127807617
    10. '][' → logprob: -14.250059127807617

Token 12: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.1814587116241455
    2. '1' → logprob: -2.3064587116241455
    3. '0' → logprob: -2.9314587116241455
    4. '3' → logprob: -4.431458473205566
    5. '4' → logprob: -7.431458473205566
    6. ' ' → logprob: -8.431458473205566
    7. '5' → logprob: -9.431458473205566
    8. ':' → logprob: -9.556458473205566
    9. ']' → logprob: -9.556458473205566
    10. ''' → logprob: -10.431458473205566

Token 13: ']:
' (ID: 22152)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5276361703872681
    2. ']:' → logprob: -0.9026361703872681
    3. '']' → logprob: -5.5276360511779785
    4. '']:' → logprob: -8.027636528015137
    5. ' ]' → logprob: -9.027636528015137
    6. ':' → logprob: -10.652636528015137
    7. '"]:' → logprob: -11.277636528015137
    8. ']==' → logprob: -11.527636528015137
    9. ']>' → logprob: -11.902636528015137
    10. '"]' → logprob: -12.402636528015137

Token 14: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.024956272915005684
    2. ' :' → logprob: -4.399956226348877
    3. ' ' → logprob: -5.274956226348877
    4. '   ' → logprob: -5.399956226348877
    5. ' and' → logprob: -6.899956226348877
    6. '=' → logprob: -8.149956703186035
    7. '[' → logprob: -8.274956703186035
    8. '    ' → logprob: -8.774956703186035
    9. ' print' → logprob: -8.774956703186035
    10. ':
' → logprob: -9.024956703186035

Token 15: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0267360210418701
    2. 'print' → logprob: -1.0267360210418701
    3. ' print' → logprob: -1.2767360210418701
    4. 's' → logprob: -6.276736259460449
    5. ' s' → logprob: -6.526736259460449
    6. '    ' → logprob: -7.401736259460449
    7. ' ' → logprob: -7.526736259460449
    8. ':' → logprob: -9.65173625946045
    9. '  ' → logprob: -10.02673625946045
    10. '       ' → logprob: -10.77673625946045

Token 16: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.18123985826969147
    2. 's' → logprob: -1.8062398433685303
    3. ' ' → logprob: -6.681240081787109
    4. ''' → logprob: -9.55624008178711
    5. ' '' → logprob: -9.80624008178711
    6. ''s' → logprob: -10.68124008178711
    7. ' len' → logprob: -11.18124008178711
    8. '_' → logprob: -11.80624008178711
    9. ' ' → logprob: -11.93124008178711
    10. '(s' → logprob: -12.05624008178711

Token 17: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.584239938296378e-06
    2. ' [' → logprob: -12.875007629394531
    3. ']' → logprob: -14.000007629394531
    4. '[]' → logprob: -14.125007629394531
    5. '[
' → logprob: -14.125007629394531
    6. ''' → logprob: -15.125007629394531
    7. '1' → logprob: -15.250007629394531
    8. '```' → logprob: -15.500007629394531
    9. '2' → logprob: -15.625007629394531
    10. ''[' → logprob: -15.625007629394531

Token 18: '4' (ID: 19)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.30719193816185
    2. '4' → logprob: -1.4321919679641724
    3. '0' → logprob: -4.182191848754883
    4. '1' → logprob: -4.807191848754883
    5. '3' → logprob: -6.182191848754883
    6. ' ' → logprob: -9.182191848754883
    7. '5' → logprob: -10.182191848754883
    8. ']' → logprob: -10.932191848754883
    9. ''' → logprob: -11.244691848754883
    10. ':' → logprob: -11.619691848754883

Token 19: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0017217113636434078
    2. ']==' → logprob: -6.5017218589782715
    3. ' ]' → logprob: -8.501721382141113
    4. '[' → logprob: -12.501721382141113
    5. ']=' → logprob: -12.876721382141113
    6. '']' → logprob: -13.126721382141113
    7. ':' → logprob: -13.876721382141113
    8. ']!=' → logprob: -13.876721382141113
    9. ':]' → logprob: -14.126721382141113
    10. '==' → logprob: -14.251721382141113

Token 20: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.7690000534057617
    2. ' ==' → logprob: -0.7690000534057617
    3. '=' → logprob: -2.7690000534057617
    4. '>' → logprob: -5.644000053405762
    5. ' ' → logprob: -5.894000053405762
    6. '!=' → logprob: -7.019000053405762
    7. ' !=' → logprob: -7.144000053405762
    8. ')' → logprob: -7.894000053405762
    9. ' >' → logprob: -8.019000053405762
    10. ' =' → logprob: -8.269000053405762

Token 21: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0026724457275122404
    2. ' s' → logprob: -6.0026726722717285
    3. ''' → logprob: -9.25267219543457
    4. ''s' → logprob: -9.37767219543457
    5. ' '' → logprob: -12.50267219543457
    6. ' ' → logprob: -12.50267219543457
    7. '"' → logprob: -12.50267219543457
    8. '"s' → logprob: -14.00267219543457
    9. 'a' → logprob: -14.62767219543457
    10. '   ' → logprob: -14.81517219543457

Token 22: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.107425062713446e-06
    2. ''' → logprob: -13.000006675720215
    3. ''[' → logprob: -13.000006675720215
    4. ']' → logprob: -14.875006675720215
    5. '[
' → logprob: -14.875006675720215
    6. ' [' → logprob: -15.250006675720215
    7. '5' → logprob: -15.375006675720215
    8. '4' → logprob: -15.625006675720215
    9. 's' → logprob: -16.00000762939453
    10. '```' → logprob: -16.12500762939453

Token 23: '5' (ID: 20)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.5071708559989929
    2. '3' → logprob: -1.6321709156036377
    3. '5' → logprob: -2.0071709156036377
    4. '2' → logprob: -2.7571709156036377
    5. '0' → logprob: -6.132170677185059
    6. '1' → logprob: -6.757170677185059
    7. 's' → logprob: -8.132170677185059
    8. '']' → logprob: -8.257170677185059
    9. ' ' → logprob: -8.632170677185059
    10. ']' → logprob: -8.757170677185059

Token 24: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.1475435048341751
    2. '):' → logprob: -2.647543430328369
    3. ':' → logprob: -2.772543430328369
    4. ']' → logprob: -5.647543430328369
    5. ')' → logprob: -9.772543907165527
    6. ']):' → logprob: -9.772543907165527
    7. '']:' → logprob: -9.897543907165527
    8. '>:' → logprob: -10.772543907165527
    9. '':' → logprob: -10.772543907165527
    10. ' ):' → logprob: -11.147543907165527

Token 25: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02387296035885811
    2. ':' → logprob: -4.0238728523254395
    3. '   ' → logprob: -5.7738728523254395
    4. 'print' → logprob: -6.6488728523254395
    5. ' and' → logprob: -7.7738728523254395
    6. ':
' → logprob: -8.773873329162598
    7. ' print' → logprob: -8.773873329162598
    8. '           ' → logprob: -9.148873329162598
    9. ' or' → logprob: -9.523873329162598
    10. '    ' → logprob: -9.648873329162598

Token 26: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.04879174754023552
    2. '   ' → logprob: -3.9237916469573975
    3. ' print' → logprob: -4.423791885375977
    4. '       ' → logprob: -4.548791885375977
    5. '           ' → logprob: -5.798791885375977
    6. ':' → logprob: -6.173791885375977
    7. '    ' → logprob: -9.798791885375977
    8. ' ' → logprob: -10.048791885375977
    9. '\n' → logprob: -11.548791885375977
    10. '  ' → logprob: -11.673791885375977

Token 27: '('' (ID: 706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04053648188710213
    2. '("' → logprob: -4.040536403656006
    3. '('' → logprob: -4.415536403656006
    4. '(s' → logprob: -5.165536403656006
    5. '("("' → logprob: -5.665536403656006
    6. '()' → logprob: -7.540536403656006
    7. '(True' → logprob: -9.040536880493164
    8. 's' → logprob: -9.040536880493164
    9. '((' → logprob: -10.665536880493164
    10. '("")' → logprob: -11.040536880493164

Token 28: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.10896187275648117
    2. ':' → logprob: -3.733961820602417
    3. 'y' → logprob: -4.483962059020996
    4. 'Y' → logprob: -4.858962059020996
    5. 'Weak' → logprob: -4.858962059020996
    6. 'YES' → logprob: -4.983962059020996
    7. 'YY' → logprob: -4.983962059020996
    8. 'AA' → logprob: -5.358962059020996
    9. 'A' → logprob: -5.733962059020996
    10. '-' → logprob: -5.983962059020996

Token 29: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.023368118330836296
    2. ')' → logprob: -3.7733681201934814
    3. '')
' → logprob: -9.273367881774902
    4. '!' → logprob: -11.148367881774902
    5. ''' → logprob: -11.898367881774902
    6. '")' → logprob: -12.273367881774902
    7. '')
' → logprob: -14.148367881774902
    8. ')
' → logprob: -14.898367881774902
    9. '}')' → logprob: -15.273367881774902
    10. '）' → logprob: -15.398367881774902

Token 30: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.04148467630147934
    2. ' else' → logprob: -3.5414845943450928
    3. '   ' → logprob: -4.791484832763672
    4. '<|end|>' → logprob: -6.791484832763672
    5. 'elif' → logprob: -7.041484832763672
    6. ')' → logprob: -7.541484832763672
    7. '```' → logprob: -7.916484832763672
    8. '	else' → logprob: -8.791484832763672
    9. '       ' → logprob: -9.541484832763672
    10. '
' → logprob: -9.791484832763672

Token 31: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.0033410945907235146
    2. ' else' → logprob: -5.753341197967529
    3. 'elif' → logprob: -9.253340721130371
    4. ')' → logprob: -10.128340721130371
    5. '   ' → logprob: -10.878340721130371
    6. '<|end|>' → logprob: -13.003340721130371
    7. '	else' → logprob: -13.253340721130371
    8. '```' → logprob: -13.628340721130371
    9. ' ' → logprob: -14.003340721130371
    10. '#else' → logprob: -14.128340721130371

Token 32: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -7.266944157890975e-05
    2. ':
' → logprob: -10.125072479248047
    3. ' :' → logprob: -10.625072479248047
    4. '   ' → logprob: -12.000072479248047
    5. '       ' → logprob: -14.125072479248047
    6. 'print' → logprob: -14.750072479248047
    7. ' print' → logprob: -15.125072479248047
    8. '):' → logprob: -15.500072479248047
    9. '：' → logprob: -16.250072479248047
    10. ':return' → logprob: -16.625072479248047

Token 33: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0893256887793541
    2. ' print' → logprob: -2.9643256664276123
    3. 'print' → logprob: -3.4643256664276123
    4. '   ' → logprob: -6.089325904846191
    5. '    ' → logprob: -8.839325904846191
    6. '```' → logprob: -9.339325904846191
    7. '     ' → logprob: -11.089325904846191
    8. 'n' → logprob: -11.714325904846191
    9. '	print' → logprob: -11.839325904846191
    10. '           ' → logprob: -11.839325904846191

Token 34: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.03805435076355934
    2. ' print' → logprob: -3.2880544662475586
    3. '   ' → logprob: -11.413054466247559
    4. '       ' → logprob: -14.038054466247559
    5. '	print' → logprob: -14.913054466247559
    6. ' ' → logprob: -15.288054466247559
    7. '```' → logprob: -15.288054466247559
    8. '    ' → logprob: -16.163053512573242
    9. 'Print' → logprob: -17.663053512573242
    10. '.print' → logprob: -18.038053512573242

Token 35: '('' (ID: 706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.38691964745521545
    2. '('' → logprob: -1.136919617652893
    3. '()' → logprob: -10.011919975280762
    4. '("' → logprob: -13.511919975280762
    5. '(False' → logprob: -13.886919975280762
    6. '(None' → logprob: -15.011919975280762
    7. '(\'' → logprob: -15.386919975280762
    8. '('(' → logprob: -15.386919975280762
    9. '(True' → logprob: -15.886919975280762
    10. ' (' → logprob: -16.011919021606445

Token 36: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -1.9361264946837764e-07
    2. ''' → logprob: -15.625
    3. ' No' → logprob: -16.75
    4. '"No' → logprob: -18.125
    5. 'Yes' → logprob: -18.75
    6. '_No' → logprob: -19.5
    7. 'NO' → logprob: -20.0
    8. '.No' → logprob: -20.5
    9. '(No' → logprob: -21.125
    10. '>No' → logprob: -21.25

Token 37: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.0005575587856583297
    2. ')' → logprob: -7.5005574226379395
    3. '')
' → logprob: -12.875557899475098
    4. ''' → logprob: -13.375557899475098
    5. '")' → logprob: -15.000557899475098
    6. '```' → logprob: -16.62555694580078
    7. '')
' → logprob: -17.00055694580078
    8. '}')' → logprob: -17.25055694580078
    9. '')

' → logprob: -17.37555694580078
    10. '   ' → logprob: -17.75055694580078

Token 38: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.04162796214222908
    2. 'elif' → logprob: -3.916627883911133
    3. ' else' → logprob: -4.291627883911133
    4. '<|end|>' → logprob: -5.416627883911133
    5. '```' → logprob: -6.416627883911133
    6. ')' → logprob: -7.916627883911133
    7. '#' → logprob: -8.166627883911133
    8. '#else' → logprob: -9.041627883911133
    9. '<|end|>' → logprob: -9.291627883911133
    10. ' elif' → logprob: -9.666627883911133

Token 39: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.5332478142227046e-05
    2. ':
' → logprob: -11.375015258789062
    3. ' :' → logprob: -12.875015258789062
    4. '   ' → logprob: -14.000015258789062
    5. ':**' → logprob: -15.500015258789062
    6. ':
' → logprob: -17.125015258789062
    7. '：' → logprob: -17.375015258789062
    8. '):' → logprob: -17.500015258789062
    9. '```' → logprob: -17.750015258789062
    10. ':`' → logprob: -17.750015258789062

Token 40: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00019579214858822525
    2. '       ' → logprob: -9.000195503234863
    3. 'print' → logprob: -10.250195503234863
    4. ' print' → logprob: -10.500195503234863
    5. ''' → logprob: -12.375195503234863
    6. '```' → logprob: -13.375195503234863
    7. '    ' → logprob: -13.625195503234863
    8. ' ' → logprob: -14.375195503234863
    9. '"' → logprob: -14.625195503234863
    10. '    
' → logprob: -14.875195503234863

Token 41: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.4133552312850952
    2. ' print' → logprob: -1.2883552312850952
    3. '   ' → logprob: -2.7883553504943848
    4. '```' → logprob: -7.288355350494385
    5. '    ' → logprob: -8.163354873657227
    6. ' ' → logprob: -9.038354873657227
    7. '``' → logprob: -9.788354873657227
    8. ' if' → logprob: -10.288354873657227
    9. 'if' → logprob: -10.288354873657227
    10. '       ' → logprob: -10.663354873657227

Token 42: '('' (ID: 706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07892944663763046
    2. '('' → logprob: -2.5789294242858887
    3. '()' → logprob: -10.328929901123047
    4. '("' → logprob: -13.078929901123047
    5. '(False' → logprob: -13.453929901123047
    6. '('(' → logprob: -14.078929901123047
    7. '("("' → logprob: -14.953929901123047
    8. '(None' → logprob: -14.953929901123047
    9. '(\'' → logprob: -14.953929901123047
    10. '(s' → logprob: -15.328929901123047

Token 43: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -1.3856492842023727e-06
    2. ''' → logprob: -13.750000953674316
    3. ' No' → logprob: -15.125000953674316
    4. '"No' → logprob: -17.625001907348633
    5. 'Yes' → logprob: -18.500001907348633
    6. '')' → logprob: -19.375001907348633
    7. 'N' → logprob: -19.625001907348633
    8. 'NO' → logprob: -19.750001907348633
    9. '_No' → logprob: -19.875001907348633
    10. '.No' → logprob: -21.125001907348633

Token 44: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.008629691787064075
    2. ')' → logprob: -4.75862979888916
    3. ''' → logprob: -11.25862979888916
    4. '")' → logprob: -13.50862979888916
    5. '')
' → logprob: -15.25862979888916
    6. '```' → logprob: -15.25862979888916
    7. '`)' → logprob: -15.25862979888916
    8. '}')' → logprob: -16.633628845214844
    9. '']' → logprob: -17.508628845214844
    10. '#' → logprob: -17.508628845214844


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 42
Tokens correctement prédits (1ère position, stricte): 15
Tokens correctement prédits (1ère position, avec adaptation): 19
Tokens correctement prédits (top 10): 37
Précision stricte (1ère position): 35.71%
Précision adaptée (1ère position): 45.24%
Précision (top 10): 88.10%
================================================================================
