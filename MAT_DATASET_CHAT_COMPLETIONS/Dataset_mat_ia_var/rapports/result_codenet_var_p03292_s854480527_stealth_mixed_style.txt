================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:12:37
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
A = [int(x) for x in input().split()]
from functools import reduce

def in_place_sort(L):
    L.sort()
    return L

def diff_sum(lst):
    res = 0
    idx = 1
    while idx < len(lst):
        res += lst[idx] - lst[idx-1]
        idx += 1
    return res

B = in_place_sort(A)
answer = reduce(lambda acc, i: acc + (B[i] - B[i-1]), range(1, len(B)), 0)
# Petite alternance : recalcul avec une autre méthode
if answer != diff_sum(B):
    print("Erreur de calcul")
else:
    print(answer)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'A' (ID: 32)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' [' (ID: 723)
  → Token d'amorce (pas de prédiction)

Token 3: 'int' (ID: 491)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.013938767835497856
    2. '0' → logprob: -5.013938903808594
    3. ']' → logprob: -5.513938903808594
    4. '[' → logprob: -5.888938903808594
    5. '[]' → logprob: -9.263938903808594
    6. '5' → logprob: -9.888938903808594
    7. ' ' → logprob: -9.888938903808594
    8. '(' → logprob: -10.013938903808594
    9. '3' → logprob: -10.263938903808594
    10. '10' → logprob: -10.763938903808594

Token 4: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001546883606351912
    2. ']' → logprob: -7.376546859741211
    3. '[' → logprob: -8.251546859741211
    4. '('' → logprob: -8.501546859741211
    5. ' (' → logprob: -8.626546859741211
    6. ' ' → logprob: -9.876546859741211
    7. 's' → logprob: -10.126546859741211
    8. '(x' → logprob: -10.501546859741211
    9. ' ]' → logprob: -10.751546859741211
    10. '("' → logprob: -11.126546859741211

Token 5: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.020937370136380196
    2. ')]' → logprob: -3.895937442779541
    3. '(' → logprob: -8.770936965942383
    4. ')])' → logprob: -9.520936965942383
    5. '(x' → logprob: -10.395936965942383
    6. ']' → logprob: -10.520936965942383
    7. 'for' → logprob: -10.895936965942383
    8. '),' → logprob: -11.270936965942383
    9. '')' → logprob: -11.395936965942383
    10. ' )' → logprob: -11.520936965942383

Token 6: ' for' (ID: 395)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7741674184799194
    2. ')' → logprob: -1.6491674184799194
    3. '(x' → logprob: -2.274167537689209
    4. ')]' → logprob: -2.274167537689209
    5. 'for' → logprob: -2.649167537689209
    6. ']' → logprob: -3.024167537689209
    7. ' for' → logprob: -4.149167537689209
    8. '(a' → logprob: -6.149167537689209
    9. '(token' → logprob: -7.649167537689209
    10. ',' → logprob: -7.899167537689209

Token 7: ' x' (ID: 1215)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.9682433605194092
    2. ' x' → logprob: -1.5932433605194092
    3. ' ' → logprob: -2.093243360519409
    4. ' input' → logprob: -2.218243360519409
    5. 'range' → logprob: -2.468243360519409
    6. '<|end|>' → logprob: -3.093243360519409
    7. ' A' → logprob: -4.218243598937988
    8. 'x' → logprob: -4.593243598937988
    9. 'input' → logprob: -5.093243598937988
    10. ' a' → logprob: -5.343243598937988

Token 8: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.35919955372810364
    2. '(' → logprob: -1.2341995239257812
    3. 'in' → logprob: -6.109199523925781
    4. '[' → logprob: -6.359199523925781
    5. '(x' → logprob: -7.109199523925781
    6. '(input' → logprob: -7.109199523925781
    7. ' (' → logprob: -7.234199523925781
    8. ')' → logprob: -7.359199523925781
    9. '```' → logprob: -7.359199523925781
    10. ']' → logprob: -7.609199523925781

Token 9: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.1309881955385208
    2. 'input' → logprob: -2.130988121032715
    3. ' range' → logprob: -5.880988121032715
    4. 'range' → logprob: -6.755988121032715
    5. ' raw' → logprob: -10.380988121032715
    6. '"' → logprob: -11.255988121032715
    7. '(input' → logprob: -11.380988121032715
    8. 'raw' → logprob: -11.755988121032715
    9. ' user' → logprob: -12.005988121032715
    10. 'user' → logprob: -12.755988121032715

Token 10: '().' (ID: 1454)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.055619336664676666
    2. '()' → logprob: -3.055619239807129
    3. '())' → logprob: -5.555619239807129
    4. '(' → logprob: -6.055619239807129
    5. '()][' → logprob: -8.555619239807129
    6. ']' → logprob: -8.680619239807129
    7. ')]' → logprob: -8.930619239807129
    8. ']()' → logprob: -9.805619239807129
    9. '()],' → logprob: -9.805619239807129
    10. '().' → logprob: -10.680619239807129

Token 11: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00026848804554902017
    2. 'strip' → logprob: -8.250268936157227
    3. 'rstrip' → logprob: -12.125268936157227
    4. ' split' → logprob: -13.375268936157227
    5. 'spl' → logprob: -16.000268936157227
    6. '(split' → logprob: -16.625268936157227
    7. ')' → logprob: -17.500268936157227
    8. 'replace' → logprob: -17.625268936157227
    9. 's' → logprob: -19.250268936157227
    10. 'startswith' → logprob: -20.000268936157227

Token 12: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.001671730075031519
    2. '(' → logprob: -7.62667179107666
    3. ']' → logprob: -7.87667179107666
    4. '()' → logprob: -7.87667179107666
    5. '())' → logprob: -8.25167179107666
    6. ')]' → logprob: -9.00167179107666
    7. '`]' → logprob: -10.87667179107666
    8. '()][' → logprob: -11.87667179107666
    9. '()],' → logprob: -12.50167179107666
    10. '('' → logprob: -13.00167179107666

Token 13: 'from' (ID: 2845)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5893537998199463
    2. 'if' → logprob: -1.0893537998199463
    3. '[' → logprob: -3.2143537998199463
    4. '+' → logprob: -3.8393537998199463
    5. '#' → logprob: -4.464353561401367
    6. ' if' → logprob: -4.714353561401367
    7. 'print' → logprob: -4.839353561401367
    8. '.sort' → logprob: -5.339353561401367
    9. '```' → logprob: -5.714353561401367
    10. 'A' → logprob: -6.464353561401367

Token 14: ' functools' (ID: 142636)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.321059912443161
    2. 'collections' → logprob: -2.0710599422454834
    3. ' math' → logprob: -2.4460599422454834
    4. ' itertools' → logprob: -3.1960599422454834
    5. ' sys' → logprob: -4.071059703826904
    6. 'math' → logprob: -6.446059703826904
    7. '_' → logprob: -6.946059703826904
    8. 'sys' → logprob: -7.196059703826904
    9. ' functools' → logprob: -8.821060180664062
    10. ' typing' → logprob: -9.071060180664062

Token 15: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.0263813529163599
    2. 'import' → logprob: -3.651381254196167
    3. '.' → logprob: -10.151381492614746
    4. ' ' → logprob: -10.901381492614746
    5. '.import' → logprob: -11.651381492614746
    6. '	import' → logprob: -12.026381492614746
    7. '_import' → logprob: -12.276381492614746
    8. ' .' → logprob: -13.526381492614746
    9. ' ' → logprob: -14.651381492614746
    10. ' im' → logprob: -14.651381492614746

Token 16: ' reduce' (ID: 10389)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.011326612904667854
    2. ' reduce' → logprob: -4.511326789855957
    3. 'partial' → logprob: -8.636326789855957
    4. 'redu' → logprob: -10.261326789855957
    5. 'cmp' → logprob: -10.636326789855957
    6. 'wrap' → logprob: -10.636326789855957
    7. 'import' → logprob: -12.011326789855957
    8. ' partial' → logprob: -12.636326789855957
    9. '_reduce' → logprob: -12.636326789855957
    10. 'l' → logprob: -12.886326789855957

Token 17: '

' (ID: 279)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.8637956976890564
    2. 'reduce' → logprob: -1.7387957572937012
    3. 'sum' → logprob: -2.363795757293701
    4. 'a' → logprob: -2.613795757293701
    5. 'r' → logprob: -3.363795757293701
    6. '*' → logprob: -3.738795757293701
    7. ']' → logprob: -3.738795757293701
    8. '(' → logprob: -3.738795757293701
    9. ',' → logprob: -4.113795757293701
    10. 'res' → logprob: -4.113795757293701

Token 18: 'def' (ID: 1314)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.5389999747276306
    2. 'g' → logprob: -1.7890000343322754
    3. 'A' → logprob: -3.0390000343322754
    4. 'product' → logprob: -3.5390000343322754
    5. 'print' → logprob: -3.5390000343322754
    6. 'sum' → logprob: -3.5390000343322754
    7. 'total' → logprob: -3.7890000343322754
    8. 'res' → logprob: -4.039000034332275
    9. 'def' → logprob: -4.289000034332275
    10. 's' → logprob: -4.539000034332275

Token 19: ' in' (ID: 306)
  Prédit: ' factorial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' factorial' → logprob: -0.22553934156894684
    2. ' multiply' → logprob: -2.225539445877075
    3. ' add' → logprob: -3.850539445877075
    4. ' product' → logprob: -3.975539445877075
    5. ' sum' → logprob: -4.100539207458496
    6. ' reduce' → logprob: -4.475539207458496
    7. ' gcd' → logprob: -4.725539207458496
    8. ' ' → logprob: -4.975539207458496
    9. ' prod' → logprob: -5.975539207458496
    10. ' factor' → logprob: -6.725539207458496

Token 20: '_place' (ID: 81501)
  Prédit: 'put'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'put' → logprob: -0.45531171560287476
    2. '_' → logprob: -1.8303117752075195
    3. 't' → logprob: -2.3303117752075195
    4. 'it' → logprob: -3.0803117752075195
    5. 'itialize' → logprob: -4.5803117752075195
    6. 'clude' → logprob: -4.7053117752075195
    7. '_range' → logprob: -5.2053117752075195
    8. '_operator' → logprob: -5.2053117752075195
    9. 'def' → logprob: -5.3303117752075195
    10. '__' → logprob: -5.7053117752075195

Token 21: '_sort' (ID: 43815)
  Prédit: '_add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_add' → logprob: -0.3035465180873871
    2. '_update' → logprob: -2.17854642868042
    3. '_m' → logprob: -3.05354642868042
    4. '_sort' → logprob: -4.05354642868042
    5. '_reverse' → logprob: -4.30354642868042
    6. '_swap' → logprob: -4.42854642868042
    7. '_replace' → logprob: -4.80354642868042
    8. '_increment' → logprob: -5.05354642868042
    9. '_modify' → logprob: -5.05354642868042
    10. '_append' → logprob: -5.17854642868042

Token 22: '(L' (ID: 11075)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.15494033694267273
    2. '(' → logprob: -2.154940366744995
    3. '(arr' → logprob: -4.404940128326416
    4. '(a' → logprob: -5.029940128326416
    5. '(lst' → logprob: -5.404940128326416
    6. '_list' → logprob: -7.029940128326416
    7. '_(' → logprob: -7.404940128326416
    8. '(array' → logprob: -7.404940128326416
    9. '_' → logprob: -7.404940128326416
    10. '_by' → logprob: -8.029940605163574

Token 23: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06440886110067368
    2. ',' → logprob: -2.814408779144287
    3. ')' → logprob: -6.189408779144287
    4. ':' → logprob: -8.564409255981445
    5. '[' → logprob: -10.064409255981445
    6. '[]):' → logprob: -10.314409255981445
    7. ' ):' → logprob: -10.439409255981445
    8. '):
' → logprob: -10.689409255981445
    9. '[:]' → logprob: -10.814409255981445
    10. ':list' → logprob: -12.439409255981445

Token 24: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2667314112186432
    2. '   ' → logprob: -2.0167315006256104
    3. '<|end|>' → logprob: -3.3917315006256104
    4. '	for' → logprob: -3.8917315006256104
    5. '
' → logprob: -4.641731262207031
    6. ' for' → logprob: -4.641731262207031
    7. '	L' → logprob: -5.016731262207031
    8. '	return' → logprob: -5.766731262207031
    9. '<|end|>' → logprob: -5.891731262207031
    10. '[:]' → logprob: -6.141731262207031

Token 25: ' L' (ID: 451)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3848222494125366
    2. ' n' → logprob: -1.3848222494125366
    3. 'n' → logprob: -3.509822368621826
    4. ' L' → logprob: -4.009822368621826
    5. 'for' → logprob: -4.509822368621826
    6. 'L' (adapté à ' L') → logprob: -5.259822368621826
    7. '   ' → logprob: -5.884822368621826
    8. ' i' → logprob: -6.759822368621826
    9. ' return' → logprob: -7.759822368621826
    10. 'i' → logprob: -9.009821891784668

Token 26: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.006932043470442295
    2. '.' → logprob: -5.006932258605957
    3. '[:]' → logprob: -8.506932258605957
    4. '.clear' → logprob: -12.256932258605957
    5. '.reverse' → logprob: -13.006932258605957
    6. '.extend' → logprob: -13.131932258605957
    7. 'sort' → logprob: -13.256932258605957
    8. '.append' → logprob: -13.756932258605957
    9. ' .' → logprob: -13.881932258605957
    10. ' sort' → logprob: -14.131932258605957

Token 27: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.28149160742759705
    2. '(' → logprob: -1.4064916372299194
    3. '()
' → logprob: -8.40649127960205
    4. '(
' → logprob: -10.15649127960205
    5. ')' → logprob: -11.15649127960205
    6. '```' → logprob: -11.15649127960205
    7. '()

' → logprob: -11.40649127960205
    8. '#' → logprob: -11.40649127960205
    9. '<|end|>' → logprob: -12.40649127960205
    10. '(True' → logprob: -12.78149127960205

Token 28: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12813885509967804
    2. '(' → logprob: -3.003138780593872
    3. '<|end|>' → logprob: -3.503138780593872
    4. '\n' → logprob: -3.753138780593872
    5. '\' → logprob: -5.628139019012451
    6. '()' → logprob: -5.753139019012451
    7. '(
' → logprob: -6.128139019012451
    8. '' → logprob: -6.628139019012451
    9. 'newline' → logprob: -6.878139019012451
    10. '```' → logprob: -7.003139019012451

Token 29: ' return' (ID: 622)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8192471861839294
    2. '<|end|>' → logprob: -0.9442471861839294
    3. '\n' → logprob: -1.8192472457885742
    4. '<|end|>' → logprob: -5.444247245788574
    5. '\' → logprob: -6.694247245788574
    6. '```' → logprob: -7.944247245788574
    7. '    
' → logprob: -8.069247245788574
    8. 'return' (adapté à ' return') → logprob: -8.194247245788574
    9. ' 
' → logprob: -8.569247245788574
    10. '

' → logprob: -8.694247245788574

Token 30: ' L' (ID: 451)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 31: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7412567734718323
    2. '<|end|>' → logprob: -1.1162567138671875
    3. '.' → logprob: -2.2412567138671875
    4. '[' → logprob: -3.6162567138671875
    5. '<|end|>' → logprob: -3.9912567138671875
    6. 'def' → logprob: -4.1162567138671875
    7. '

' → logprob: -4.8662567138671875
    8. '```' → logprob: -5.8662567138671875
    9. '[
' → logprob: -6.2412567138671875
    10. '[:]' → logprob: -6.2412567138671875

Token 32: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1262186765670776
    2. 'print' → logprob: -1.7512186765670776
    3. 'result' → logprob: -2.001218795776367
    4. 'def' → logprob: -2.501218795776367
    5. '[' → logprob: -2.876218795776367
    6. 'A' → logprob: -2.876218795776367
    7. '#' → logprob: -3.501218795776367
    8. 'reduce' → logprob: -3.876218795776367
    9. '\n' → logprob: -4.251218795776367
    10. '\' → logprob: -4.876218795776367

Token 33: ' diff' (ID: 8868)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -1.4231430292129517
    2. ' factorial' → logprob: -1.6731430292129517
    3. ' sum' → logprob: -1.9231430292129517
    4. ' reduce' → logprob: -2.298142910003662
    5. ' apply' → logprob: -2.923142910003662
    6. ' reverse' → logprob: -3.173142910003662
    7. ' merge' → logprob: -3.298142910003662
    8. ' find' → logprob: -3.548142910003662
    9. ' multiply' → logprob: -3.548142910003662
    10. ' product' → logprob: -3.923142910003662

Token 34: '_sum' (ID: 29859)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.4474475085735321
    2. '(' → logprob: -1.3224475383758545
    3. '(A' → logprob: -2.9474475383758545
    4. '(L' → logprob: -3.5724475383758545
    5. '_' → logprob: -5.072447299957275
    6. '_between' → logprob: -6.447447299957275
    7. 's' → logprob: -6.822447299957275
    8. 'eren' → logprob: -7.697447299957275
    9. '_list' → logprob: -7.822447299957275
    10. '(a' → logprob: -8.197447776794434

Token 35: '(lst' (ID: 95688)
  Prédit: '(L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.017154179513454437
    2. '(' → logprob: -4.392154216766357
    3. '(A' → logprob: -5.392154216766357
    4. '(a' → logprob: -10.8921537399292
    5. 's' → logprob: -11.0171537399292
    6. '(s' → logprob: -11.3921537399292
    7. '(lst' → logprob: -11.7671537399292
    8. '(l' → logprob: -12.3921537399292
    9. '((' → logprob: -12.3921537399292
    10. ' (' → logprob: -12.6421537399292

Token 36: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002776466542854905
    2. ')' → logprob: -6.127776622772217
    3. '):
' → logprob: -8.252776145935059
    4. ' ):' → logprob: -8.752776145935059
    5. '(lst' → logprob: -10.127776145935059
    6. '[]):' → logprob: -10.252776145935059
    7. ',' → logprob: -10.377776145935059
    8. '   ' → logprob: -10.752776145935059
    9. ')):' → logprob: -11.377776145935059
    10. '(' → logprob: -12.502776145935059

Token 37: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08797916024923325
    2. ' return' → logprob: -2.9629790782928467
    3. ' sum' → logprob: -4.587979316711426
    4. 'sum' → logprob: -5.337979316711426
    5. '(sum' → logprob: -5.712979316711426
    6. '=' → logprob: -5.962979316711426
    7. ' ' → logprob: -5.962979316711426
    8. ')' → logprob: -6.462979316711426
    9. ' =' → logprob: -6.587979316711426
    10. 'return' → logprob: -6.837979316711426

Token 38: ' res' (ID: 694)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.42808130383491516
    2. 'return' → logprob: -1.1780812740325928
    3. '   ' → logprob: -4.428081512451172
    4. 'sum' → logprob: -4.428081512451172
    5. ' sum' → logprob: -4.553081512451172
    6. 'reduce' → logprob: -5.803081512451172
    7. ' reduce' → logprob: -6.178081512451172
    8. 'abs' → logprob: -7.803081512451172
    9. ' abs' → logprob: -8.053081512451172
    10. ' ' → logprob: -10.178081512451172

Token 39: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1278693974018097
    2. '=' → logprob: -2.1278693675994873
    3. ' ' → logprob: -7.252869606018066
    4. 'ult' → logprob: -8.627869606018066
    5. '   ' → logprob: -11.377869606018066
    6. 'ul' → logprob: -11.877869606018066
    7. '  ' → logprob: -11.877869606018066
    8. ' +=' → logprob: -12.127869606018066
    9. ' ' → logprob: -12.627869606018066
    10. 'ault' → logprob: -13.002869606018066

Token 40: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03681255877017975
    2. 'sum' → logprob: -4.036812782287598
    3. 'reduce' → logprob: -4.661812782287598
    4. ' ' → logprob: -5.161812782287598
    5. ' sum' → logprob: -6.161812782287598
    6. 'abs' → logprob: -7.536812782287598
    7. ' reduce' → logprob: -7.911812782287598
    8. '   ' → logprob: -9.411812782287598
    9. 'max' → logprob: -9.536812782287598
    10. '[]' → logprob: -9.911812782287598

Token 41: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1465083509683609
    2. 'reduce' → logprob: -2.6465084552764893
    3. 'sum' → logprob: -2.7715084552764893
    4. 'abs' → logprob: -6.02150821685791
    5. '[' → logprob: -8.89650821685791
    6. 'max' → logprob: -9.02150821685791
    7. ' ' → logprob: -10.02150821685791
    8. '[]' → logprob: -10.64650821685791
    9. ' sum' → logprob: -11.39650821685791
    10. ' reduce' → logprob: -11.39650821685791

Token 42: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 43: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2229086309671402
    2. ' for' → logprob: -2.0979087352752686
    3. 'for' → logprob: -2.9729087352752686
    4. '
' → logprob: -3.8479087352752686
    5. '	for' → logprob: -7.0979084968566895
    6. '    
' → logprob: -7.3479084968566895
    7. ' ' → logprob: -7.4729084968566895
    8. '  ' → logprob: -7.7229084968566895
    9. ',' → logprob: -7.8479084968566895
    10. '<|end|>' → logprob: -7.8479084968566895

Token 44: ' idx' (ID: 14016)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.048636190593242645
    2. ' for' → logprob: -3.0486361980438232
    3. '   ' → logprob: -10.298636436462402
    4. ' ' → logprob: -11.423636436462402
    5. 'n' → logprob: -13.048636436462402
    6. '  ' → logprob: -14.173636436462402
    7. 'f' → logprob: -14.548636436462402
    8. '	for' → logprob: -15.798636436462402
    9. '```' → logprob: -16.173635482788086
    10. 'i' → logprob: -16.548635482788086

Token 45: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3178669810295105
    2. '=' → logprob: -1.3178670406341553
    3. 'for' → logprob: -6.192866802215576
    4. ' in' → logprob: -6.817866802215576
    5. ' for' → logprob: -7.192866802215576
    6. ' ' → logprob: -8.317867279052734
    7. ',' → logprob: -8.317867279052734
    8. 'in' → logprob: -9.317867279052734
    9. 's' → logprob: -10.067867279052734
    10. 'x' → logprob: -10.692867279052734

Token 46: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.14566898345947266
    2. ' ' → logprob: -2.0206689834594727
    3. '1' → logprob: -5.895668983459473
    4. 'len' → logprob: -9.145668983459473
    5. ' len' → logprob: -9.270668983459473
    6. ' -' → logprob: -10.895668983459473
    7. '-' → logprob: -12.270668983459473
    8. '2' → logprob: -12.520668983459473
    9. '(len' → logprob: -13.770668983459473
    10. '+' → logprob: -13.958168983459473

Token 47: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02365991286933422
    2. '1' → logprob: -3.7736599445343018
    3. 'len' → logprob: -8.273659706115723
    4. '-' → logprob: -9.398659706115723
    5. ' ' → logprob: -9.648659706115723
    6. '2' → logprob: -12.523659706115723
    7. 'range' → logprob: -13.148659706115723
    8. '[' → logprob: -13.773659706115723
    9. ' len' → logprob: -13.961159706115723
    10. ' -' → logprob: -14.086159706115723

Token 48: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 49: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.128000408411026
    2. 'while' → logprob: -2.753000497817993
    3. '<|end|>' → logprob: -3.128000497817993
    4. ' while' → logprob: -5.003000259399414
    5. '   ' → logprob: -6.378000259399414
    6. '<|end|>' → logprob: -6.503000259399414
    7. 'for' → logprob: -7.003000259399414
    8. '+' → logprob: -8.503000259399414
    9. '0' → logprob: -8.628000259399414
    10. '    
' → logprob: -8.753000259399414

Token 50: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.14428479969501495
    2. ' while' → logprob: -2.019284725189209
    3. 'for' → logprob: -7.394284725189209
    4. '   ' → logprob: -8.519285202026367
    5. '	while' → logprob: -8.644285202026367
    6. '
' → logprob: -8.644285202026367
    7. '<|end|>' → logprob: -9.019285202026367
    8. '+' → logprob: -9.144285202026367
    9. ' for' → logprob: -10.394285202026367
    10. 'n' → logprob: -10.394285202026367

Token 51: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.20142103731632233
    2. 'idx' → logprob: -1.7014210224151611
    3. '	idx' → logprob: -12.326420783996582
    4. '(idx' → logprob: -12.826420783996582
    5. '   ' → logprob: -15.701420783996582
    6. ' len' → logprob: -16.0764217376709
    7. ' ' → logprob: -16.2014217376709
    8. '    ' → logprob: -16.3264217376709
    9. '[idx' → logprob: -16.4514217376709
    10. 'len' → logprob: -16.7014217376709

Token 52: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.5975127816200256
    2. '<' → logprob: -0.8475127816200256
    3. '<len' → logprob: -3.847512722015381
    4. '<n' → logprob: -12.597513198852539
    5. '<size' → logprob: -13.097513198852539
    6. ' ' → logprob: -13.097513198852539
    7. 'len' → logprob: -14.597513198852539
    8. '<num' → logprob: -14.972513198852539
    9. ' in' → logprob: -15.847513198852539
    10. '<int' → logprob: -16.09751319885254

Token 53: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.018151700496673584
    2. ' len' → logprob: -4.018151760101318
    3. '   ' → logprob: -14.39315128326416
    4. '(len' → logprob: -14.39315128326416
    5. '[len' → logprob: -15.26815128326416
    6. '=len' → logprob: -15.26815128326416
    7. '	len' → logprob: -16.518152236938477
    8. '<len' → logprob: -16.643152236938477
    9. ',len' → logprob: -16.768152236938477
    10. ' ' → logprob: -18.768152236938477

Token 54: '(lst' (ID: 95688)
  Prédit: '(lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lst' → logprob: -0.0009174126898869872
    2. '(' → logprob: -7.000917434692383
    3. '(L' → logprob: -12.250917434692383
    4. 'lst' → logprob: -15.375917434692383
    5. '(ls' → logprob: -15.500917434692383
    6. '(l' → logprob: -16.125917434692383
    7. ' lst' → logprob: -16.125917434692383
    8. '(lista' → logprob: -16.500917434692383
    9. '(s' → logprob: -16.500917434692383
    10. '(lhs' → logprob: -16.750917434692383

Token 55: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1593816578388214
    2. '):
' → logprob: -2.159381628036499
    3. ')' → logprob: -3.534381628036499
    4. ' ):' → logprob: -6.159381866455078
    5. ' ):
' → logprob: -8.409381866455078
    6. '   ' → logprob: -8.659381866455078
    7. ' )' → logprob: -9.034381866455078
    8. ')-' → logprob: -10.659381866455078
    9. ':' → logprob: -10.784381866455078
    10. '):

' → logprob: -10.909381866455078

Token 56: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09839608520269394
    2. ':' → logprob: -2.473396062850952
    3. ':
' → logprob: -5.473396301269531
    4. '   ' → logprob: -5.973396301269531
    5. ' and' → logprob: -7.723396301269531
    6. '):' → logprob: -8.223396301269531
    7. ' :' → logprob: -8.223396301269531
    8. '<|end|>' → logprob: -8.348396301269531
    9. ',' → logprob: -8.473396301269531
    10. '        
' → logprob: -8.598396301269531

Token 57: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.21264776587486267
    2. ' res' → logprob: -2.0876476764678955
    3. '       ' → logprob: -2.7126476764678955
    4. '
' → logprob: -7.587647914886475
    5. '   ' → logprob: -8.087647438049316
    6. '        
' → logprob: -9.587647438049316
    7. ' 
' → logprob: -9.837647438049316
    8. ' ' → logprob: -9.837647438049316
    9. '           ' → logprob: -9.962647438049316
    10. '        ' → logprob: -10.462647438049316

Token 58: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.023592274636030197
    2. '+=' → logprob: -3.773592233657837
    3. ' -=' → logprob: -8.148591995239258
    4. '    ' → logprob: -11.398591995239258
    5. '+=(' → logprob: -11.398591995239258
    6. ' =' → logprob: -11.523591995239258
    7. '+' → logprob: -11.773591995239258
    8. '   ' → logprob: -12.148591995239258
    9. '=' → logprob: -12.398591995239258
    10. ' +' → logprob: -12.773591995239258

Token 59: ' lst' (ID: 33384)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.37641414999961853
    2. ' lst' → logprob: -1.251414179801941
    3. 'abs' → logprob: -3.7514140605926514
    4. ' abs' → logprob: -5.7514142990112305
    5. '(lst' → logprob: -7.2514142990112305
    6. '   ' → logprob: -9.12641429901123
    7. ' (' → logprob: -10.62641429901123
    8. '(abs' → logprob: -10.75141429901123
    9. ' ' → logprob: -11.75141429901123
    10. '_lst' → logprob: -12.00141429901123

Token 60: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -7.636475493200123e-05
    2. '[' → logprob: -9.750076293945312
    3. 'idx' → logprob: -11.375076293945312
    4. '[i' → logprob: -13.250076293945312
    5. '```' → logprob: -13.500076293945312
    6. '[id' → logprob: -14.625076293945312
    7. ' idx' → logprob: -14.625076293945312
    8. '[-' → logprob: -14.750076293945312
    9. ' [' → logprob: -14.875076293945312
    10. '	idx' → logprob: -15.000076293945312

Token 61: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00921136885881424
    2. '-' → logprob: -5.009211540222168
    3. ' ]' → logprob: -7.009211540222168
    4. ']-' → logprob: -7.134211540222168
    5. ' -' → logprob: -7.259211540222168
    6. '   ' → logprob: -10.384211540222168
    7. '[' → logprob: -10.884211540222168
    8. '`]' → logprob: -11.759211540222168
    9. '']' → logprob: -11.884211540222168
    10. ' ' → logprob: -12.134211540222168

Token 62: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5232203006744385
    2. '-' → logprob: -0.8982203006744385
    3. ' ' → logprob: -9.77322006225586
    4. '   ' → logprob: -11.52322006225586
    5. '-l' → logprob: -11.77322006225586
    6. '    ' → logprob: -12.14822006225586
    7. ' ' → logprob: -12.27322006225586
    8. '  ' → logprob: -13.02322006225586
    9. '        ' → logprob: -13.52322006225586
    10. '```' → logprob: -13.52322006225586

Token 63: ' lst' (ID: 33384)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.061974965035915375
    2. ' lst' → logprob: -2.8119750022888184
    3. '(lst' → logprob: -12.93697452545166
    4. '_lst' → logprob: -13.43697452545166
    5. '   ' → logprob: -13.81197452545166
    6. '       ' → logprob: -14.06197452545166
    7. '    ' → logprob: -14.68697452545166
    8. '.lst' → logprob: -14.81197452545166
    9. 'l' → logprob: -15.31197452545166
    10. 'Lst' → logprob: -15.31197452545166

Token 64: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.0022237682715058327
    2. 'idx' → logprob: -6.127223968505859
    3. '[' → logprob: -10.50222396850586
    4. 's' → logprob: -13.25222396850586
    5. '```' → logprob: -13.62722396850586
    6. '[index' → logprob: -13.75222396850586
    7. '	idx' → logprob: -13.75222396850586
    8. 'token' → logprob: -14.12722396850586
    9. ' idx' → logprob: -14.25222396850586
    10. '[ix' → logprob: -14.50222396850586

Token 65: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.010175686329603195
    2. '1' → logprob: -4.635175704956055
    3. ' -' → logprob: -8.885175704956055
    4. '[' → logprob: -9.010175704956055
    5. ']' → logprob: -10.260175704956055
    6. '```' → logprob: -10.510175704956055
    7. 'tokens' → logprob: -11.260175704956055
    8. ' ' → logprob: -11.510175704956055
    9. '<|end|>' → logprob: -11.510175704956055
    10. '[-' → logprob: -11.635175704956055

Token 66: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.630610641877865e-06
    2. ' ' → logprob: -12.500006675720215
    3. '```' → logprob: -13.500006675720215
    4. '   ' → logprob: -14.812506675720215
    5. 'def' → logprob: -15.625006675720215
    6. ']' → logprob: -16.3125057220459
    7. '0' → logprob: -16.5000057220459
    8. '`' → logprob: -16.6875057220459
    9. ')' → logprob: -16.6875057220459
    10. 'idx' → logprob: -16.9375057220459

Token 67: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000847267743665725
    2. ')
' → logprob: -7.875847339630127
    3. '<|end|>' → logprob: -8.000846862792969
    4. ']' → logprob: -9.375846862792969
    5. '```' → logprob: -11.000846862792969
    6. '<|end|>' → logprob: -11.500846862792969
    7. '   ' → logprob: -11.875846862792969
    8. '}' → logprob: -12.375846862792969
    9. ' )' → logprob: -13.125846862792969
    10. '       ' → logprob: -13.625846862792969

Token 68: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.00873216800391674
    2. '       ' → logprob: -5.133732318878174
    3. '\n' → logprob: -7.258732318878174
    4. '        
' → logprob: -7.508732318878174
    5. '
' → logprob: -7.633732318878174
    6. '  
' → logprob: -8.133731842041016
    7. '    
' → logprob: -8.133731842041016
    8. ' 
' → logprob: -8.508731842041016
    9. '\' → logprob: -9.133731842041016
    10. '   ' → logprob: -9.633731842041016

Token 69: ' idx' (ID: 14016)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.43269187211990356
    2. ' idx' → logprob: -2.182691812515259
    3. '       ' → logprob: -2.432691812515259
    4. 'idx' (adapté à ' idx') → logprob: -3.057691812515259
    5. '\n' → logprob: -3.182691812515259
    6. ' 
' → logprob: -3.807691812515259
    7. '   ' → logprob: -4.682692050933838
    8. '```' → logprob: -4.682692050933838
    9. '    
' → logprob: -5.682692050933838
    10. '\' → logprob: -5.682692050933838

Token 70: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.5131950974464417
    2. ' +=' → logprob: -1.0131950378417969
    3. '+' → logprob: -3.263195037841797
    4. '++' → logprob: -9.888195037841797
    5. ' +' → logprob: -10.763195037841797
    6. '=' → logprob: -10.763195037841797
    7. '1' → logprob: -13.763195037841797
    8. '+++' → logprob: -13.888195037841797
    9. '```' → logprob: -14.763195037841797
    10. '<|end|>' → logprob: -15.263195037841797

Token 71: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.008129963040119e-06
    2. ' ' → logprob: -12.500003814697266
    3. '2' → logprob: -16.500003814697266
    4. '   ' → logprob: -17.000003814697266
    5. '```' → logprob: -17.375003814697266
    6. '  ' → logprob: -19.875003814697266
    7. '１' → logprob: -21.250003814697266
    8. '
' → logprob: -21.375003814697266
    9. '<|end|>' → logprob: -21.500003814697266
    10. '    ' → logprob: -21.687503814697266

Token 72: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '2' → logprob: -17.375
    4. '```' → logprob: -18.125
    5. '   ' → logprob: -20.125
    6. '１' → logprob: -21.125
    7. 'def' → logprob: -21.4375
    8. '۱' → logprob: -21.875
    9. '+' → logprob: -22.3125
    10. '१' → logprob: -22.3125

Token 73: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.043272294104099274
    2. '
' → logprob: -3.2932722568511963
    3. ' return' → logprob: -5.793272495269775
    4. 'return' → logprob: -6.293272495269775
    5. '	return' → logprob: -8.918272018432617
    6. '    
' → logprob: -9.543272018432617
    7. ' ' → logprob: -10.418272018432617
    8. '<|end|>' → logprob: -10.418272018432617
    9. '```' → logprob: -11.043272018432617
    10. ' 
' → logprob: -12.043272018432617

Token 74: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01922752894461155
    2. 'return' → logprob: -4.019227504730225
    3. ' return' → logprob: -6.894227504730225
    4. '
' → logprob: -10.644227981567383
    5. '	return' → logprob: -10.769227981567383
    6. '```' → logprob: -12.269227981567383
    7. ':return' → logprob: -12.394227981567383
    8. ' ' → logprob: -12.769227981567383
    9. '<|end|>' → logprob: -13.019227981567383
    10. '    
' → logprob: -14.019227981567383

Token 75: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0449916273355484
    2. 'return' (adapté à ' return') → logprob: -3.4199917316436768
    3. ' return' → logprob: -4.919991493225098
    4. '
' → logprob: -5.794991493225098
    5. '	return' → logprob: -7.669991493225098
    6. ' ' → logprob: -8.419991493225098
    7. '<|end|>' → logprob: -9.419991493225098
    8. '    
' → logprob: -10.169991493225098
    9. ':return' → logprob: -10.169991493225098
    10. ')' → logprob: -10.419991493225098

Token 76: ' res' (ID: 694)
  Prédit: ' res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.02975199744105339
    2. 'res' → logprob: -3.529752016067505
    3. ' ' → logprob: -14.154751777648926
    4. '(res' → logprob: -14.404751777648926
    5. '	res' → logprob: -16.154752731323242
    6. ' ' → logprob: -16.279752731323242
    7. '  ' → logprob: -19.029752731323242
    8. '   ' → logprob: -19.529752731323242
    9. 'r' → logprob: -19.654752731323242
    10. 're' → logprob: -19.779752731323242

Token 77: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 78: 'B' (ID: 33)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06213831529021263
    2. 'diff' → logprob: -3.437138319015503
    3. 'result' → logprob: -4.687138080596924
    4. 'res' → logprob: -5.187138080596924
    5. 'A' → logprob: -5.437138080596924
    6. 'if' → logprob: -6.437138080596924
    7. 'n' → logprob: -6.562138080596924
    8. 'def' → logprob: -6.562138080596924
    9. 'ans' → logprob: -7.687138080596924
    10. '#' → logprob: -7.687138080596924

Token 79: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03375162556767464
    2. '=' → logprob: -3.4087517261505127
    3. ',' → logprob: -9.908751487731934
    4. ' ' → logprob: -10.658751487731934
    5. '[' → logprob: -11.533751487731934
    6. ')' → logprob: -12.033751487731934
    7. '_' → logprob: -12.533751487731934
    8. '=[]' → logprob: -12.533751487731934
    9. '.' → logprob: -13.283751487731934
    10. 'A' → logprob: -13.908751487731934

Token 80: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.15538673102855682
    2. ' in' → logprob: -2.0303866863250732
    3. 'sorted' → logprob: -5.655386924743652
    4. 'A' → logprob: -5.780386924743652
    5. ' sorted' → logprob: -5.905386924743652
    6. ' A' → logprob: -6.905386924743652
    7. ' list' → logprob: -7.280386924743652
    8. 'reduce' → logprob: -7.530386924743652
    9. 'list' → logprob: -7.655386924743652
    10. '[' → logprob: -8.655386924743652

Token 81: '_place' (ID: 81501)
  Prédit: '_place'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_place' → logprob: -6.869017852295656e-06
    2. '_' → logprob: -12.750006675720215
    3. 'place' → logprob: -13.625006675720215
    4. '_places' → logprob: -14.125006675720215
    5. '-place' → logprob: -14.375006675720215
    6. 'Place' → logprob: -14.750006675720215
    7. '_put' → logprob: -14.875006675720215
    8. '_PLACE' → logprob: -15.750006675720215
    9. ' _' → logprob: -16.00000762939453
    10. '```' → logprob: -16.12500762939453

Token 82: '_sort' (ID: 43815)
  Prédit: '_sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sort' → logprob: -3.173704271830502e-06
    2. 'sort' → logprob: -13.12500286102295
    3. '_place' → logprob: -14.62500286102295
    4. '_sorted' → logprob: -15.50000286102295
    5. '_s' → logprob: -16.625003814697266
    6. '_' → logprob: -17.000003814697266
    7. '```' → logprob: -17.125003814697266
    8. '(_' → logprob: -17.125003814697266
    9. 't' → logprob: -17.500003814697266
    10. ' _' → logprob: -17.750003814697266

Token 83: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.00014597235713154078
    2. '(' → logprob: -9.00014591217041
    3. '(B' → logprob: -10.75014591217041
    4. '((' → logprob: -14.87514591217041
    5. ' (' → logprob: -15.25014591217041
    6. '(
' → logprob: -16.000146865844727
    7. '(a' → logprob: -16.125146865844727
    8. 'A' → logprob: -16.250146865844727
    9. '(L' → logprob: -16.375146865844727
    10. '```' → logprob: -17.625146865844727

Token 84: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. ' )' → logprob: -14.500000953674316
    3. ')
' → logprob: -15.875000953674316
    4. '))' → logprob: -16.375
    5. ')

' → logprob: -18.5
    6. ')`' → logprob: -18.625
    7. '),' → logprob: -19.0
    8. '[' → logprob: -19.0
    9. '())' → logprob: -19.125
    10. ')#' → logprob: -19.375

Token 85: 'answer' (ID: 17021)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0003321281401440501
    2. '<|end|>' → logprob: -8.62533187866211
    3. 'result' → logprob: -10.00033187866211
    4. 'sum' → logprob: -10.75033187866211
    5. 'C' → logprob: -10.87533187866211
    6. '
' → logprob: -11.00033187866211
    7. '+' → logprob: -11.25033187866211
    8. 'for' → logprob: -11.62533187866211
    9. 'diff' → logprob: -12.50033187866211
    10. '```' → logprob: -12.62533187866211

Token 86: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0654776394367218
    2. '=' → logprob: -2.9404776096343994
    3. '_' → logprob: -4.5654778480529785
    4. 's' → logprob: -10.31547737121582
    5. ' ' → logprob: -10.31547737121582
    6. ')' → logprob: -10.94047737121582
    7. '(' → logprob: -11.19047737121582
    8. '[' → logprob: -12.56547737121582
    9. '1' → logprob: -12.56547737121582
    10. '_=' → logprob: -12.56547737121582

Token 87: ' reduce' (ID: 10389)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.4300171732902527
    2. ' diff' → logprob: -1.0550172328948975
    3. 'sum' → logprob: -7.555016994476318
    4. ' sum' → logprob: -7.680016994476318
    5. '(diff' → logprob: -9.055017471313477
    6. 'reduce' → logprob: -9.680017471313477
    7. 'B' → logprob: -9.930017471313477
    8. ' B' → logprob: -10.055017471313477
    9. ' reduce' → logprob: -11.430017471313477
    10. '0' → logprob: -11.555017471313477

Token 88: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.004260988440364599
    2. '(' → logprob: -5.504261016845703
    3. '(diff' → logprob: -9.004261016845703
    4. '(int' → logprob: -10.254261016845703
    5. '((' → logprob: -11.629261016845703
    6. '(operator' → logprob: -12.004261016845703
    7. '(abs' → logprob: -12.629261016845703
    8. '(max' → logprob: -12.879261016845703
    9. '```' → logprob: -14.129261016845703
    10. 'lambda' → logprob: -14.504261016845703

Token 89: ' acc' (ID: 1259)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.057337552309036255
    2. 'x' → logprob: -3.182337522506714
    3. ' acc' → logprob: -5.307337760925293
    4. ' a' → logprob: -5.307337760925293
    5. ' lambda' → logprob: -6.182337760925293
    6. 'a' → logprob: -6.432337760925293
    7. 'acc' → logprob: -7.807337760925293
    8. 'lambda' → logprob: -8.807337760925293
    9. ' ' → logprob: -10.432337760925293
    10. ' c' → logprob: -11.682337760925293

Token 90: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004894073354080319
    2. ',x' → logprob: -7.750489234924316
    3. ' ,' → logprob: -10.625489234924316
    4. ',b' → logprob: -11.500489234924316
    5. ',a' → logprob: -11.625489234924316
    6. ',int' → logprob: -13.625489234924316
    7. ',i' → logprob: -13.875489234924316
    8. ',value' → logprob: -13.875489234924316
    9. ',val' → logprob: -13.875489234924316
    10. ',res' → logprob: -14.000489234924316

Token 91: ' i' (ID: 575)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.3874970078468323
    2. 'x' → logprob: -1.1374969482421875
    3. ' y' → logprob: -8.637496948242188
    4. ' acc' → logprob: -9.512496948242188
    5. ' b' → logprob: -9.637496948242188
    6. 'b' → logprob: -9.887496948242188
    7. 'y' → logprob: -10.012496948242188
    8. '   ' → logprob: -10.012496948242188
    9. ' ' → logprob: -10.137496948242188
    10. 'acc' → logprob: -10.262496948242188

Token 92: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006613265140913427
    2. ' :' → logprob: -8.00066089630127
    3. ',' → logprob: -8.12566089630127
    4. ',:' → logprob: -10.75066089630127
    5. ':i' → logprob: -13.12566089630127
    6. '_:' → logprob: -14.25066089630127
    7. ',i' → logprob: -14.50066089630127
    8. ':index' → logprob: -14.62566089630127
    9. ':B' → logprob: -14.75066089630127
    10. '+:' → logprob: -14.87566089630127

Token 93: ' acc' (ID: 1259)
  Prédit: ' acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' acc' → logprob: -0.475070059299469
    2. 'acc' → logprob: -0.975070059299469
    3. '(acc' → logprob: -7.975069999694824
    4. ' (' → logprob: -8.600069999694824
    5. ' ' → logprob: -9.225069999694824
    6. '	acc' → logprob: -9.475069999694824
    7. 'answer' → logprob: -10.225069999694824
    8. '   ' → logprob: -10.350069999694824
    9. ' ac' → logprob: -10.475069999694824
    10. '  ' → logprob: -10.600069999694824

Token 94: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.14335161447525024
    2. ' +' → logprob: -2.0183515548706055
    3. '+i' → logprob: -7.5183515548706055
    4. '-' → logprob: -10.518351554870605
    5. ',' → logprob: -11.268351554870605
    6. '*' → logprob: -11.393351554870605
    7. '+B' → logprob: -11.393351554870605
    8. '^' → logprob: -11.768351554870605
    9. '+b' → logprob: -11.893351554870605
    10. '+x' → logprob: -12.018351554870605

Token 95: ' (' (ID: 350)
  Prédit: ' B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.6673153042793274
    2. 'B' → logprob: -1.0423152446746826
    3. ' i' → logprob: -3.4173152446746826
    4. 'i' → logprob: -3.5423152446746826
    5. ' abs' → logprob: -3.7923152446746826
    6. 'abs' → logprob: -4.167315483093262
    7. ' (' → logprob: -4.167315483093262
    8. '(B' → logprob: -4.667315483093262
    9. '(i' → logprob: -5.917315483093262
    10. '(' → logprob: -5.917315483093262

Token 96: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.04045187681913376
    2. ' B' → logprob: -4.040452003479004
    3. 'i' → logprob: -4.790452003479004
    4. '(B' → logprob: -5.415452003479004
    5. 'abs' → logprob: -5.415452003479004
    6. '(i' → logprob: -6.915452003479004
    7. '1' → logprob: -7.165452003479004
    8. 'A' → logprob: -7.415452003479004
    9. '(' → logprob: -7.915452003479004
    10. ' (' → logprob: -8.040452003479004

Token 97: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00020652047533076257
    2. '[' → logprob: -9.00020694732666
    3. '[-' → logprob: -10.25020694732666
    4. 'i' → logprob: -11.50020694732666
    5. '[len' → logprob: -12.12520694732666
    6. '[idx' → logprob: -12.25020694732666
    7. ')' → logprob: -12.25020694732666
    8. ' [' → logprob: -12.75020694732666
    9. '[
' → logprob: -12.87520694732666
    10. '[B' → logprob: -12.87520694732666

Token 98: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2401333600282669
    2. '+' → logprob: -1.9901334047317505
    3. '-' → logprob: -3.240133285522461
    4. ' -' → logprob: -3.740133285522461
    5. ']-' → logprob: -4.740133285522461
    6. ' ]' → logprob: -6.365133285522461
    7. ' ' → logprob: -7.240133285522461
    8. ')' → logprob: -7.365133285522461
    9. ' +' → logprob: -8.240133285522461
    10. '   ' → logprob: -8.240133285522461

Token 99: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.25551164150238037
    2. '-' → logprob: -1.5055116415023804
    3. ' ' → logprob: -6.13051176071167
    4. '+' → logprob: -7.13051176071167
    5. '*' → logprob: -9.130511283874512
    6. ' *' → logprob: -9.630511283874512
    7. ' +' → logprob: -9.630511283874512
    8. ')' → logprob: -9.755511283874512
    9. '>' → logprob: -9.755511283874512
    10. '-B' → logprob: -9.755511283874512

Token 100: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.005245379637926817
    2. ' B' → logprob: -5.255245208740234
    3. ' ' → logprob: -12.255245208740234
    4. '   ' → logprob: -13.005245208740234
    5. ')' → logprob: -13.255245208740234
    6. '	B' → logprob: -14.005245208740234
    7. 'i' → logprob: -14.380245208740234
    8. 'A' → logprob: -14.505245208740234
    9. '  ' → logprob: -15.380245208740234
    10. '>B' → logprob: -16.255245208740234

Token 101: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.001442376640625298
    2. 'i' → logprob: -6.6264424324035645
    3. '[' → logprob: -9.376441955566406
    4. '{i' → logprob: -11.626441955566406
    5. '0' → logprob: -11.876441955566406
    6. ' [' → logprob: -12.376441955566406
    7. '(i' → logprob: -13.001441955566406
    8. '   ' → logprob: -13.251441955566406
    9. '1' → logprob: -13.501441955566406
    10. ' ' → logprob: -13.626441955566406

Token 102: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0016780333826318383
    2. ' -' → logprob: -6.501677989959717
    3. '1' → logprob: -8.751678466796875
    4. '])' → logprob: -11.876678466796875
    5. ' ' → logprob: -12.251678466796875
    6. 'i' → logprob: -13.626678466796875
    7. '   ' → logprob: -13.876678466796875
    8. ']' → logprob: -14.126678466796875
    9. '[i' → logprob: -14.501678466796875
    10. '  ' → logprob: -14.626678466796875

Token 103: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.596781946020201e-05
    2. ' ' → logprob: -10.375045776367188
    3. '2' → logprob: -12.125045776367188
    4. '   ' → logprob: -12.687545776367188
    5. '-' → logprob: -13.750045776367188
    6. '])' → logprob: -14.125045776367188
    7. '```' → logprob: -14.375045776367188
    8. '  ' → logprob: -14.437545776367188
    9. '       ' → logprob: -14.750045776367188
    10. ')' → logprob: -14.937545776367188

Token 104: ']),' (ID: 19560)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0009430267964489758
    2. ')' → logprob: -7.125943183898926
    3. ' ),' → logprob: -9.125943183898926
    4. ')),' → logprob: -12.000943183898926
    5. ')*' → logprob: -12.250943183898926
    6. '1' → logprob: -12.500943183898926
    7. ''),' → logprob: -13.000943183898926
    8. '```' → logprob: -13.250943183898926
    9. ',' → logprob: -13.500943183898926
    10. ' ' → logprob: -13.625943183898926

Token 105: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2519380748271942
    2. ' range' → logprob: -1.5019381046295166
    3. '(range' → logprob: -12.501937866210938
    4. 'B' → logprob: -12.751937866210938
    5. ' B' → logprob: -14.001937866210938
    6. 'list' → logprob: -14.501937866210938
    7. '	range' → logprob: -14.751937866210938
    8. '   ' → logprob: -15.251937866210938
    9. ' ' → logprob: -16.001937866210938
    10. ' list' → logprob: -16.501937866210938

Token 106: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00012487331696320325
    2. '1' → logprob: -9.00012493133545
    3. ' (' → logprob: -13.50012493133545
    4. ' ' → logprob: -18.625123977661133
    5. '   ' → logprob: -18.750123977661133
    6. '[' → logprob: -18.750123977661133
    7. '`' → logprob: -19.000123977661133
    8. '```' → logprob: -19.000123977661133
    9. '(len' → logprob: -19.625123977661133
    10. ')' → logprob: -20.125123977661133

Token 107: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014084660506341606
    2. ' ' → logprob: -8.875141143798828
    3. '   ' → logprob: -15.000141143798828
    4. '(' → logprob: -15.625141143798828
    5. '```' → logprob: -15.625141143798828
    6. 'len' → logprob: -16.750141143798828
    7. '    ' → logprob: -17.500141143798828
    8. '۱' → logprob: -17.625141143798828
    9. '  ' → logprob: -17.937641143798828
    10. ')' → logprob: -18.000141143798828

Token 108: ',' (ID: 11)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -1.7954958821064793e-05
    2. ',len' → logprob: -11.875018119812012
    3. 'len' → logprob: -12.000018119812012
    4. '(' → logprob: -12.375018119812012
    5. ' len' → logprob: -15.000018119812012
    6. ' (' → logprob: -16.000017166137695
    7. ',' → logprob: -16.375017166137695
    8. ')' → logprob: -16.875017166137695
    9. '<len' → logprob: -17.000017166137695
    10. '(length' → logprob: -17.375017166137695

Token 109: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0019331586081534624
    2. ' len' → logprob: -6.2519330978393555
    3. '(len' → logprob: -12.376933097839355
    4. ')' → logprob: -16.001934051513672
    5. ',len' → logprob: -16.376934051513672
    6. '   ' → logprob: -17.251934051513672
    7. '[len' → logprob: -17.251934051513672
    8. '	len' → logprob: -17.501934051513672
    9. '<len' → logprob: -17.751934051513672
    10. '=len' → logprob: -18.001934051513672

Token 110: '(B' (ID: 8409)
  Prédit: '(B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -1.3425219549390022e-05
    2. '(A' → logprob: -11.75001335144043
    3. 'B' → logprob: -12.75001335144043
    4. '(' → logprob: -13.00001335144043
    5. ')' → logprob: -16.37501335144043
    6. ' (' → logprob: -16.50001335144043
    7. '(b' → logprob: -17.00001335144043
    8. '```' → logprob: -17.12501335144043
    9. '(answer' → logprob: -17.37501335144043
    10. '(C' → logprob: -17.62501335144043

Token 111: ')),' (ID: 12098)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.2064167559146881
    2. '),' → logprob: -1.7064167261123657
    3. ')))' → logprob: -5.956416606903076
    4. ')' → logprob: -6.456416606903076
    5. ')),' → logprob: -7.331416606903076
    6. ' ))' → logprob: -9.581417083740234
    7. ' ),' → logprob: -9.956417083740234
    8. '))
' → logprob: -11.081417083740234
    9. '));' → logprob: -11.831417083740234
    10. ' ' → logprob: -12.456417083740234

Token 112: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000553151941858232
    2. ' ' → logprob: -7.500553131103516
    3. '   ' → logprob: -16.875553131103516
    4. 'answer' → logprob: -17.125553131103516
    5. ')' → logprob: -17.750553131103516
    6. '  ' → logprob: -18.625553131103516
    7. '۰' → logprob: -19.250553131103516
    8. '`' → logprob: -19.563053131103516
    9. '           ' → logprob: -19.563053131103516
    10. ' ' → logprob: -19.750553131103516

Token 113: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.584861744660884e-05
    2. ' ' → logprob: -10.000045776367188
    3. '   ' → logprob: -15.375045776367188
    4. ')' → logprob: -17.125045776367188
    5. 'answer' → logprob: -17.375045776367188
    6. '۰' → logprob: -17.500045776367188
    7. '  ' → logprob: -18.062545776367188
    8. '```' → logprob: -18.687545776367188
    9. '`' → logprob: -18.875045776367188
    10. '           ' → logprob: -18.937545776367188

Token 114: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.2994620242971e-06
    2. ')
' → logprob: -11.750008583068848
    3. ' )' → logprob: -15.875008583068848
    4. '))' → logprob: -16.00000762939453
    5. ')

' → logprob: -16.50000762939453
    6. ')#' → logprob: -18.00000762939453
    7. ')`' → logprob: -18.12500762939453
    8. ')
' → logprob: -19.00000762939453
    9. ')b' → logprob: -19.50000762939453
    10. '),' → logprob: -19.50000762939453

Token 115: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00639133807271719
    2. '<|end|>' → logprob: -5.506391525268555
    3. 'answer' → logprob: -6.256391525268555
    4. '
' → logprob: -8.881391525268555
    5. '+' → logprob: -9.881391525268555
    6. ')' → logprob: -10.381391525268555
    7. 'assert' → logprob: -10.381391525268555
    8. '#print' → logprob: -10.506391525268555
    9. '#' → logprob: -10.631391525268555
    10. '\n' → logprob: -11.131391525268555

Token 116: ' Petite' (ID: 129719)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -9.372294698550832e-06
    2. 'assert' → logprob: -12.250009536743164
    3. 'if' → logprob: -12.625009536743164
    4. ' print' → logprob: -13.750009536743164
    5. 'answer' → logprob: -15.625009536743164
    6. '#print' → logprob: -16.750009536743164
    7. '#' → logprob: -18.500009536743164
    8. 'for' → logprob: -19.000009536743164
    9. '```' → logprob: -19.375009536743164
    10. 'Answer' → logprob: -20.000009536743164

Token 117: ' altern' (ID: 7310)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.460760235786438
    2. '<|end|>' → logprob: -1.710760235786438
    3. 'if' → logprob: -3.3357601165771484
    4. 's' → logprob: -3.3357601165771484
    5. 'assert' → logprob: -3.4607601165771484
    6. '#' → logprob: -3.5857601165771484
    7. ' if' → logprob: -3.9607601165771484
    8. ' print' → logprob: -4.460760116577148
    9. ' ' → logprob: -5.085760116577148
    10. '<|end|>' → logprob: -5.835760116577148

Token 118: 'ance' (ID: 766)
  Prédit: 'ative'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ative' → logprob: -0.05321374535560608
    2. 'ate' → logprob: -3.4282138347625732
    3. 'atives' → logprob: -5.178213596343994
    4. 'e' → logprob: -5.428213596343994
    5. 'atively' → logprob: -5.553213596343994
    6. 'ation' → logprob: -6.678213596343994
    7. 'a' → logprob: -6.803213596343994
    8. 't' → logprob: -7.928213596343994
    9. 'te' → logprob: -7.928213596343994
    10. 'atif' → logprob: -7.928213596343994

Token 119: ' :' (ID: 712)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 120: ' recal' (ID: 147248)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4756240248680115
    2. 'answer' → logprob: -2.3506240844726562
    3. 'for' → logprob: -2.4756240844726562
    4. '#' → logprob: -3.1006240844726562
    5. 'if' → logprob: -3.2256240844726562
    6. ' for' → logprob: -3.6006240844726562
    7. ' answer' → logprob: -3.8506240844726562
    8. ' if' → logprob: -3.9756240844726562
    9. ' print' → logprob: -3.9756240844726562
    10. 'C' → logprob: -4.850624084472656

Token 121: 'cul' (ID: 2885)
  Prédit: 'cul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cul' → logprob: -0.08149965107440948
    2. 'cule' → logprob: -3.5814995765686035
    3. 'ibr' → logprob: -4.0814995765686035
    4. 'culation' → logprob: -4.3314995765686035
    5. 'c' → logprob: -4.9564995765686035
    6. 'culate' → logprob: -5.8314995765686035
    7. 'ibration' → logprob: -6.5814995765686035
    8. 'ler' → logprob: -7.0814995765686035
    9. 'r' → logprob: -7.3314995765686035
    10. 'l' → logprob: -7.4564995765686035

Token 122: ' avec' (ID: 3937)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'answer' → logprob: -0.9425021409988403
    2. 'print' → logprob: -1.0675021409988403
    3. '<|end|>' → logprob: -2.192502021789551
    4. '#' → logprob: -2.942502021789551
    5. ' =' → logprob: -4.067502021789551
    6. '
' → logprob: -4.192502021789551
    7. ' answer' → logprob: -4.692502021789551
    8. 'B' → logprob: -5.067502021789551
    9. 's' → logprob: -5.317502021789551
    10. '<|end|>' → logprob: -5.317502021789551

Token 123: ' une' (ID: 2463)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.4047386646270752
    2. 'print' → logprob: -1.6547386646270752
    3. '#' → logprob: -2.904738664627075
    4. 'B' → logprob: -3.029738664627075
    5. 'answer' → logprob: -3.529738664627075
    6. 'sum' → logprob: -5.154738426208496
    7. 'difference' → logprob: -7.154738426208496
    8. '#print' → logprob: -7.529738426208496
    9. ' diff' → logprob: -7.904738426208496
    10. 'A' → logprob: -7.904738426208496

Token 124: ' autre' (ID: 20278)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7353742122650146
    2. 'diff' → logprob: -0.8603742122650146
    3. 'answer' → logprob: -3.4853742122650146
    4. 'sum' → logprob: -4.110374450683594
    5. 'B' → logprob: -4.735374450683594
    6. 'def' → logprob: -4.860374450683594
    7. 'assert' → logprob: -4.985374450683594
    8. '#' → logprob: -5.235374450683594
    9. 'difference' → logprob: -5.235374450683594
    10. 'pass' → logprob: -5.735374450683594

Token 125: ' méthode' (ID: 71490)
  Prédit: 'mé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mé' → logprob: -0.20462901890277863
    2. 'm' → logprob: -3.0796289443969727
    3. 'def' → logprob: -3.2046289443969727
    4. 'appro' → logprob: -3.4546289443969727
    5. 'method' → logprob: -3.8296289443969727
    6. 'fonction' → logprob: -3.9546289443969727
    7. ' méthode' → logprob: -4.454628944396973
    8. 'form' → logprob: -6.079628944396973
    9. '#' → logprob: -6.204628944396973
    10. ' methode' → logprob: -6.579628944396973

Token 126: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.01673739217221737
    2. 'answer' → logprob: -4.641737461090088
    3. 'assert' → logprob: -5.641737461090088
    4. '
' → logprob: -6.266737461090088
    5. 'result' → logprob: -7.141737461090088
    6. '#print' → logprob: -8.89173698425293
    7. '#' → logprob: -9.14173698425293
    8. ' print' → logprob: -9.39173698425293
    9. 'diff' → logprob: -9.64173698425293
    10. ')' → logprob: -9.64173698425293

Token 127: 'if' (ID: 366)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.47501277923583984
    2. 'answer' → logprob: -1.1000127792358398
    3. 'assert' → logprob: -3.47501277923584
    4. 'diff' → logprob: -5.10001277923584
    5. 'result' → logprob: -5.72501277923584
    6. 'sum' → logprob: -6.47501277923584
    7. 're' → logprob: -7.22501277923584
    8. 'res' → logprob: -7.35001277923584
    9. 'total' → logprob: -7.60001277923584
    10. 'alternative' → logprob: -7.85001277923584

Token 128: ' answer' (ID: 6052)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.9196835160255432
    2. ' B' → logprob: -1.4196834564208984
    3. ' answer' → logprob: -1.4196834564208984
    4. ' diff' → logprob: -2.9196834564208984
    5. 'B' → logprob: -4.169683456420898
    6. 'len' → logprob: -4.294683456420898
    7. ' __' → logprob: -4.419683456420898
    8. 'answer' → logprob: -4.794683456420898
    9. ' sum' → logprob: -5.044683456420898
    10. 'diff' → logprob: -6.169683456420898

Token 129: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.2419508695602417
    2. ' ==' → logprob: -1.7419508695602417
    3. '!=' → logprob: -3.6169509887695312
    4. '==' → logprob: -4.366950988769531
    5. ' ' → logprob: -9.491950988769531
    6. ' <' → logprob: -10.116950988769531
    7. ' >' → logprob: -10.866950988769531
    8. '>' → logprob: -11.241950988769531
    9. ' >=' → logprob: -11.991950988769531
    10. '<' → logprob: -12.241950988769531

Token 130: ' diff' (ID: 8868)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.22554172575473785
    2. ' diff' → logprob: -1.6005417108535767
    3. '0' → logprob: -9.975542068481445
    4. '(diff' → logprob: -10.725542068481445
    5. '	diff' → logprob: -10.725542068481445
    6. 'answer' → logprob: -11.225542068481445
    7. ' ' → logprob: -12.475542068481445
    8. 'res' → logprob: -12.600542068481445
    9. 'difference' → logprob: -12.600542068481445
    10. 'sum' → logprob: -13.038042068481445

Token 131: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -1.9361264946837764e-07
    2. 'sum' → logprob: -15.75
    3. '_' → logprob: -18.0
    4. '_SUM' → logprob: -19.75
    5. '_diff' → logprob: -20.125
    6. 'Sum' → logprob: -20.625
    7. ' sum' → logprob: -21.375
    8. '_s' → logprob: -21.375
    9. ' _' → logprob: -21.5
    10. 's' → logprob: -21.5

Token 132: '(B' (ID: 8409)
  Prédit: '(B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.0001612267515156418
    2. '(A' → logprob: -8.750161170959473
    3. '(' → logprob: -13.375161170959473
    4. ' (' → logprob: -14.375161170959473
    5. '((' → logprob: -15.000161170959473
    6. '(answer' → logprob: -16.62516212463379
    7. 'B' → logprob: -16.75016212463379
    8. '(b' → logprob: -17.25016212463379
    9. '```' → logprob: -18.00016212463379
    10. 'A' → logprob: -18.62516212463379

Token 133: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00019102399528492242
    2. ')' → logprob: -9.125190734863281
    3. '):
' → logprob: -9.875190734863281
    4. ' ):' → logprob: -10.500190734863281
    5. ':' → logprob: -12.875190734863281
    6. '):
' → logprob: -15.500190734863281
    7. ']:' → logprob: -16.12519073486328
    8. '):

' → logprob: -16.62519073486328
    9. '   ' → logprob: -16.87519073486328
    10. '[]):' → logprob: -17.25019073486328

Token 134: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20740725100040436
    2. 'print' → logprob: -1.9574072360992432
    3. ' print' → logprob: -3.082407236099243
    4. ':' → logprob: -8.957406997680664
    5. 'raise' → logprob: -10.207406997680664
    6. ' raise' → logprob: -10.457406997680664
    7. ':
' → logprob: -11.207406997680664
    8. '	print' → logprob: -11.457406997680664
    9. 'answer' → logprob: -11.832406997680664
    10. ' answer' → logprob: -12.207406997680664

Token 135: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.24896882474422455
    2. ' print' → logprob: -2.2489688396453857
    3. 'raise' → logprob: -2.4989688396453857
    4. ' raise' → logprob: -3.4989688396453857
    5. '   ' → logprob: -5.998968601226807
    6. 'assert' → logprob: -12.373969078063965
    7. '	raise' → logprob: -14.123969078063965
    8. 'pass' → logprob: -14.123969078063965
    9. '    ' → logprob: -14.748969078063965
    10. ' ' → logprob: -14.873969078063965

Token 136: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.07929302006959915
    2. '(' → logprob: -2.5792930126190186
    3. '('' → logprob: -7.829293251037598
    4. '()' → logprob: -13.454293251037598
    5. '("")' → logprob: -13.454293251037598
    6. '(True' → logprob: -14.704293251037598
    7. '("("' → logprob: -14.704293251037598
    8. '(False' → logprob: -14.954293251037598
    9. '"' → logprob: -15.704293251037598
    10. '(None' → logprob: -15.829293251037598

Token 137: 'Erreur' (ID: 155968)
  Prédit: 'Erreur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Erreur' → logprob: -0.25981900095939636
    2. 'Error' → logprob: -2.0098190307617188
    3. 'Mismatch' → logprob: -3.8848190307617188
    4. 'In' → logprob: -4.009819030761719
    5. 'Bug' → logprob: -4.009819030761719
    6. ' Er' → logprob: -4.134819030761719
    7. '"' → logprob: -5.634819030761719
    8. 'Une' → logprob: -6.134819030761719
    9. 'Assertion' → logprob: -6.259819030761719
    10. 'Er' → logprob: -6.384819030761719

Token 138: ' de' (ID: 334)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.18356886506080627
    2. ' !' → logprob: -2.6835689544677734
    3. ':' → logprob: -3.3085689544677734
    4. ' :' → logprob: -3.6835689544677734
    5. ' ' → logprob: -4.058568954467773
    6. '!")' → logprob: -4.058568954467773
    7. ')")' → logprob: -7.183568954467773
    8. ')' → logprob: -7.308568954467773
    9. ' détect' → logprob: -7.683568954467773
    10. '!' → logprob: -8.558568954467773

Token 139: ' calcul' (ID: 7559)
  Prédit: ' calcul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calcul' → logprob: -0.06876714527606964
    2. 'calcul' → logprob: -2.9437670707702637
    3. 'cal' → logprob: -4.943767070770264
    4. ' logique' → logprob: -5.443767070770264
    5. 's' → logprob: -6.943767070770264
    6. ' calc' → logprob: -8.068767547607422
    7. ' calculation' → logprob: -8.193767547607422
    8. ' code' → logprob: -8.818767547607422
    9. ' ' → logprob: -9.443767547607422
    10. ' computation' → logprob: -9.568767547607422

Token 140: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.014482546597719193
    2. ')")' → logprob: -4.639482498168945
    3. '!")' → logprob: -5.764482498168945
    4. ' !' → logprob: -7.014482498168945
    5. ')' → logprob: -7.889482498168945
    6. '")
' → logprob: -9.014482498168945
    7. ')")
' → logprob: -9.639482498168945
    8. ' ' → logprob: -10.264482498168945
    9. '}")' → logprob: -11.014482498168945
    10. '.")' → logprob: -11.389482498168945

Token 141: 'else' (ID: 2807)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 142: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.023577604442834854
    2. ':
' → logprob: -3.7735776901245117
    3. '   ' → logprob: -8.023577690124512
    4. ' :' → logprob: -13.398577690124512
    5. ' :
' → logprob: -13.773577690124512
    6. ':

' → logprob: -14.148577690124512
    7. '):
' → logprob: -15.273577690124512
    8. ':
' → logprob: -15.398577690124512
    9. '):' → logprob: -15.773577690124512
    10. ' print' → logprob: -15.773577690124512

Token 143: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00143083231523633
    2. ' print' → logprob: -7.126430988311768
    3. 'print' → logprob: -7.376430988311768
    4. '	print' → logprob: -15.50143051147461
    5. '```' → logprob: -16.00143051147461
    6. '    
' → logprob: -17.25143051147461
    7. '   ' → logprob: -17.25143051147461
    8. '       ' → logprob: -17.37643051147461
    9. '<|end|>' → logprob: -17.50143051147461
    10. '(print' → logprob: -19.25143051147461

Token 144: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00023333763238042593
    2. ' print' → logprob: -8.75023365020752
    3. '   ' → logprob: -9.50023365020752
    4. '	print' → logprob: -17.250232696533203
    5. '  ' → logprob: -18.750232696533203
    6. ' ' → logprob: -20.125232696533203
    7. '.print' → logprob: -20.375232696533203
    8. 'for' → logprob: -20.875232696533203
    9. '```' → logprob: -21.000232696533203
    10. 'printf' → logprob: -21.750232696533203

Token 145: '(answer' (ID: 78433)
  Prédit: '(answer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(answer' → logprob: -0.5072129964828491
    2. '(' → logprob: -1.6322129964828491
    3. '(sum' → logprob: -2.0072131156921387
    4. '("' → logprob: -2.7572131156921387
    5. '(len' → logprob: -6.257213115692139
    6. '(max' → logprob: -7.257213115692139
    7. '("("' → logprob: -7.507213115692139
    8. '(diff' → logprob: -8.00721263885498
    9. '((' → logprob: -8.25721263885498
    10. '(ans' → logprob: -8.75721263885498

Token 146: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2664456789934775e-06
    2. '))' → logprob: -14.625000953674316
    3. ')
' → logprob: -15.000000953674316
    4. ' )' → logprob: -15.125000953674316
    5. ')`' → logprob: -16.250001907348633
    6. '())' → logprob: -17.250001907348633
    7. '`)' → logprob: -17.875001907348633
    8. ')}' → logprob: -18.125001907348633
    9. '),' → logprob: -18.500001907348633
    10. '')' → logprob: -18.875001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 144
Tokens correctement prédits (1ère position, stricte): 56
Tokens correctement prédits (1ère position, avec adaptation): 60
Tokens correctement prédits (top 10): 112
Précision stricte (1ère position): 38.89%
Précision adaptée (1ère position): 41.67%
Précision (top 10): 77.78%
================================================================================
