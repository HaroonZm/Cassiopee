================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:38:39
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce
from itertools import combinations,repeat
from operator import add
from math import hypot

n = int(input())
xy = [list(map(int, input().split())) for _ in repeat(None, n)]

pairs = list(combinations(xy, 2))
dists = list(map(lambda p: hypot(*(map(lambda ab: ab[0] - ab[1], zip(*p)))), pairs))
total = reduce(add, dists, 0)

print(total / (reduce(lambda a, b: a * b, (n, n - 1)) // 2) * (n - 1))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -0.3026095926761627
    2. 'partial' → logprob: -1.8026095628738403
    3. 'reduce' → logprob: -2.55260968208313
    4. 'l' → logprob: -4.677609443664551
    5. ' wraps' → logprob: -4.802609443664551
    6. 'cached' → logprob: -8.05260944366455
    7. 'cache' → logprob: -8.55260944366455
    8. 'cmp' → logprob: -9.05260944366455
    9. ' partial' → logprob: -9.42760944366455
    10. ' l' → logprob: -9.80260944366455

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.019195254892110825
    2. '(lambda' → logprob: -4.394195079803467
    3. '.' → logprob: -5.144195079803467
    4. ',' → logprob: -8.019195556640625
    5. ' (' → logprob: -8.519195556640625
    6. '```' → logprob: -9.519195556640625
    7. '(
' → logprob: -10.144195556640625
    8. '\(' → logprob: -10.269195556640625
    9. '\' → logprob: -10.394195556640625
    10. 'lambda' → logprob: -11.019195556640625

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.028644466772675514
    2. '\' → logprob: -4.153644561767578
    3. 'def' → logprob: -5.028644561767578
    4. '(
' → logprob: -6.028644561767578
    5. '(lambda' → logprob: -6.653644561767578
    6. ',' → logprob: -7.653644561767578
    7. '\n' → logprob: -7.778644561767578
    8. '```' → logprob: -7.903644561767578
    9. '\(' → logprob: -8.403644561767578
    10. '`' → logprob: -9.278644561767578

Token 6: ' itertools' (ID: 103178)
  Prédit: ' operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.2411840558052063
    2. ' itertools' → logprob: -2.1161839962005615
    3. ' math' → logprob: -2.7411839962005615
    4. ' collections' → logprob: -3.8661839962005615
    5. 'operator' → logprob: -4.991184234619141
    6. ' os' → logprob: -7.116184234619141
    7. 'math' → logprob: -7.991184234619141
    8. ' typing' → logprob: -8.49118423461914
    9. 'collections' → logprob: -8.99118423461914
    10. ' ' → logprob: -10.49118423461914

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.034414686262607574
    2. 'import' → logprob: -3.409414768218994
    3. '.' → logprob: -7.659414768218994
    4. ' .' → logprob: -9.034414291381836
    5. '.import' → logprob: -9.034414291381836
    6. ' ' → logprob: -10.784414291381836
    7. '	import' → logprob: -10.909414291381836
    8. ' itertools' → logprob: -12.659414291381836
    9. '_import' → logprob: -12.659414291381836
    10. '.im' → logprob: -13.159414291381836

Token 8: ' combinations' (ID: 43835)
  Prédit: ' group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' group' → logprob: -0.4097050726413727
    2. 'group' → logprob: -2.15970516204834
    3. ' accumulate' → logprob: -2.90970516204834
    4. 'acc' → logprob: -3.40970516204834
    5. 'count' → logprob: -3.40970516204834
    6. ' cycle' → logprob: -3.53470516204834
    7. ' chain' → logprob: -3.53470516204834
    8. 'cycle' → logprob: -4.28470516204834
    9. 'chain' → logprob: -4.40970516204834
    10. ' count' → logprob: -5.03470516204834

Token 9: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16122692823410034
    2. '(
' → logprob: -2.536226987838745
    3. '\n' → logprob: -3.661226987838745
    4. '\' → logprob: -3.661226987838745
    5. 'def' → logprob: -4.786226749420166
    6. '```' → logprob: -5.286226749420166
    7. '(n' → logprob: -7.036226749420166
    8. 'import' → logprob: -7.411226749420166
    9. '
' → logprob: -7.536226749420166
    10. '`' → logprob: -8.036227226257324

Token 10: 'repeat' (ID: 63242)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.6330538392066956
    2. 'product' → logprob: -1.3830537796020508
    3. 'group' → logprob: -2.758053779602051
    4. ' permutations' → logprob: -2.883053779602051
    5. 'chain' → logprob: -3.383053779602051
    6. ' product' → logprob: -3.758053779602051
    7. ' group' → logprob: -4.258053779602051
    8. 'com' → logprob: -4.883053779602051
    9. ' chain' → logprob: -5.133053779602051
    10. 'acc' → logprob: -5.133053779602051

Token 11: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.019627150148153305
    2. '(
' → logprob: -4.144627094268799
    3. 'def' → logprob: -6.144627094268799
    4. '\' → logprob: -7.769627094268799
    5. '(

' → logprob: -8.144627571105957
    6. ',' → logprob: -8.519627571105957
    7. '\n' → logprob: -9.519627571105957
    8. '`' → logprob: -9.894627571105957
    9. '\(' → logprob: -10.144627571105957
    10. ')' → logprob: -10.144627571105957

Token 12: 'from' (ID: 2845)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7498593926429749
    2. '(' → logprob: -1.62485933303833
    3. '(
' → logprob: -2.12485933303833
    4. '\' → logprob: -2.87485933303833
    5. '\n' → logprob: -3.24985933303833
    6. ',' → logprob: -3.62485933303833
    7. '
' → logprob: -3.74985933303833
    8. ',
' → logprob: -4.74985933303833
    9. 'd' → logprob: -4.87485933303833
    10. '`' → logprob: -4.87485933303833

Token 13: ' operator' (ID: 11019)
  Prédit: ' operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.2809121906757355
    2. ' math' → logprob: -1.780912160873413
    3. 'operator' → logprob: -2.905912160873413
    4. 'math' → logprob: -4.030912399291992
    5. ' collections' → logprob: -5.905912399291992
    6. 'collections' → logprob: -7.030912399291992
    7. ' typing' → logprob: -9.405912399291992
    8. ' random' → logprob: -9.655912399291992
    9. ' ' → logprob: -10.030912399291992
    10. ' functools' → logprob: -10.780912399291992

Token 14: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.06274586915969849
    2. 'import' → logprob: -2.8127458095550537
    3. '.' → logprob: -7.312746047973633
    4. ' ' → logprob: -9.562746047973633
    5. '<|end|>' → logprob: -11.187746047973633
    6. '	import' → logprob: -11.812746047973633
    7. ' .' → logprob: -12.062746047973633
    8. ',' → logprob: -12.562746047973633
    9. '_import' → logprob: -13.062746047973633
    10. ' ,' → logprob: -13.562746047973633

Token 15: ' add' (ID: 1147)
  Prédit: ' mul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mul' → logprob: -0.14188042283058167
    2. 'mul' → logprob: -2.391880512237549
    3. ' add' → logprob: -3.391880512237549
    4. 'add' → logprob: -5.516880512237549
    5. ' import' → logprob: -6.891880512237549
    6. ' item' → logprob: -7.266880512237549
    7. '.mul' → logprob: -8.39188003540039
    8. ' icon' → logprob: -8.51688003540039
    9. 'item' → logprob: -8.76688003540039
    10. ' ' → logprob: -8.76688003540039

Token 16: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02786152996122837
    2. '\' → logprob: -4.527861595153809
    3. '(
' → logprob: -5.277861595153809
    4. ',' → logprob: -5.402861595153809
    5. '\n' → logprob: -6.277861595153809
    6. '\(' → logprob: -7.152861595153809
    7. '#' → logprob: -7.277861595153809
    8. ')' → logprob: -7.402861595153809
    9. 'def' → logprob: -7.402861595153809
    10. '.' → logprob: -7.527861595153809

Token 17: 'from' (ID: 2845)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.5323569774627686
    2. '(' → logprob: -1.7823569774627686
    3. '\n' → logprob: -2.0323569774627686
    4. '
' → logprob: -2.4073569774627686
    5. '

' → logprob: -2.5323569774627686
    6. ',' → logprob: -2.5323569774627686
    7. 'import' → logprob: -2.9073569774627686
    8. '(
' → logprob: -3.2823569774627686
    9. '\' → logprob: -3.4073569774627686
    10. 'from' → logprob: -4.532357215881348

Token 18: ' math' (ID: 13324)
  Prédit: ' functools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' functools' → logprob: -1.1353007555007935
    2. ' math' → logprob: -1.2603007555007935
    3. 'math' → logprob: -1.8853007555007935
    4. 'collections' → logprob: -2.260300636291504
    5. ' collections' → logprob: -3.260300636291504
    6. ' itertools' → logprob: -3.885300636291504
    7. 'random' → logprob: -4.260300636291504
    8. 'operator' → logprob: -4.260300636291504
    9. ' random' → logprob: -4.385300636291504
    10. 'fun' → logprob: -5.010300636291504

Token 19: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.5507387518882751
    2. ' import' → logprob: -1.17573881149292
    3. '.' → logprob: -2.17573881149292
    4. ' ' → logprob: -7.05073881149292
    5. '<|end|>' → logprob: -8.800738334655762
    6. '.import' → logprob: -9.175738334655762
    7. '_import' → logprob: -10.175738334655762
    8. '	import' → logprob: -10.300738334655762
    9. '.sqrt' → logprob: -10.425738334655762
    10. ' .' → logprob: -10.550738334655762

Token 20: ' hypot' (ID: 85756)
  Prédit: ' factorial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' factorial' → logprob: -0.7926121950149536
    2. ' comb' → logprob: -1.5426121950149536
    3. 'factor' → logprob: -2.417612075805664
    4. 'comb' → logprob: -2.667612075805664
    5. 'prod' → logprob: -3.042612075805664
    6. ' prod' → logprob: -3.667612075805664
    7. 'sqrt' → logprob: -3.667612075805664
    8. 'ceil' → logprob: -3.917612075805664
    9. ' ceil' → logprob: -4.042612075805664
    10. ' gcd' → logprob: -4.917612075805664

Token 21: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.3279824256896973
    2. '\' → logprob: -1.4529824256896973
    3. '(' → logprob: -1.8279824256896973
    4. '\n' → logprob: -1.9529824256896973
    5. '#' → logprob: -2.8279824256896973
    6. ',' → logprob: -3.0779824256896973
    7. '
' → logprob: -3.8279824256896973
    8. '(
' → logprob: -4.327982425689697
    9. 'import' → logprob: -4.827982425689697
    10. '.' → logprob: -4.952982425689697

Token 22: 'n' (ID: 77)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.43906310200691223
    2. 'd' → logprob: -1.4390630722045898
    3. '(' → logprob: -3.56406307220459
    4. '#' → logprob: -3.68906307220459
    5. '\' → logprob: -4.06406307220459
    6. 'import' → logprob: -5.06406307220459
    7. ',' → logprob: -5.06406307220459
    8. 'a' → logprob: -5.06406307220459
    9. 'n' → logprob: -6.06406307220459
    10. '*' → logprob: -6.06406307220459

Token 23: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13286980986595154
    2. '=' → logprob: -2.3828697204589844
    3. ' ' → logprob: -3.6328697204589844
    4. 'u' → logprob: -6.132869720458984
    5. ',' → logprob: -6.257869720458984
    6. '  ' → logprob: -7.382869720458984
    7. ' ,' → logprob: -8.132869720458984
    8. '_' → logprob: -8.757869720458984
    9. '.' → logprob: -9.507869720458984
    10. '   ' → logprob: -9.757869720458984

Token 24: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3951478600502014
    2. ' int' → logprob: -1.7701478004455566
    3. 'int' → logprob: -2.6451478004455566
    4. '5' → logprob: -3.6451478004455566
    5. '0' → logprob: -4.020147800445557
    6. '10' → logprob: -4.145147800445557
    7. '3' → logprob: -4.770147800445557
    8. '4' → logprob: -5.395147800445557
    9. '1' → logprob: -5.645147800445557
    10. '6' → logprob: -6.645147800445557

Token 25: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0014634536346420646
    2. '(n' → logprob: -7.501463413238525
    3. '(input' → logprob: -7.626463413238525
    4. '<|end|>' → logprob: -8.626463890075684
    5. '('' → logprob: -9.501463890075684
    6. ' (' → logprob: -10.001463890075684
    7. '()' → logprob: -10.126463890075684
    8. '(
' → logprob: -11.126463890075684
    9. '(`' → logprob: -11.251463890075684
    10. '(space' → logprob: -11.501463890075684

Token 26: '())
' (ID: 4574)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.47203528881073
    2. '(' → logprob: -1.22203528881073
    3. '())' → logprob: -2.7220354080200195
    4. ')' → logprob: -4.2220354080200195
    5. '(()' → logprob: -7.4720354080200195
    6. '('' → logprob: -8.09703540802002
    7. '(
' → logprob: -9.59703540802002
    8. '(

' → logprob: -9.97203540802002
    9. '(`' → logprob: -10.47203540802002
    10. '))' → logprob: -10.84703540802002

Token 27: 'xy' (ID: 6077)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6674691438674927
    2. ')' → logprob: -1.5424691438674927
    3. 'data' → logprob: -3.042469024658203
    4. ' 
' → logprob: -3.167469024658203
    5. '[' → logprob: -3.417469024658203
    6. 'a' → logprob: -3.917469024658203
    7. 'for' → logprob: -3.917469024658203
    8. 'r' → logprob: -4.167469024658203
    9. 'c' → logprob: -4.167469024658203
    10. ',' → logprob: -4.792469024658203

Token 28: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.06546825170516968
    2. ' =' → logprob: -2.8154683113098145
    3. '=' → logprob: -5.6904683113098145
    4. '_pairs' → logprob: -9.940467834472656
    5. 'pairs' → logprob: -10.940467834472656
    6. '_list' → logprob: -11.065467834472656
    7. '=[]' → logprob: -11.815467834472656
    8. '_' → logprob: -12.440467834472656
    9. ')' → logprob: -12.690467834472656
    10. '_values' → logprob: -13.065467834472656

Token 29: ' [' (ID: 723)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.391509085893631
    2. '[' → logprob: -1.1415090560913086
    3. ' [' → logprob: -5.891509056091309
    4. '[int' → logprob: -7.266509056091309
    5. '[List' → logprob: -7.391509056091309
    6. '[input' → logprob: -8.391509056091309
    7. '[n' → logprob: -9.391509056091309
    8. 'list' → logprob: -10.141509056091309
    9. '[array' → logprob: -10.266509056091309
    10. '[str' → logprob: -10.391509056091309

Token 30: 'list' (ID: 2641)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.042488060891628265
    2. 'list' → logprob: -3.2924880981445312
    3. ' tuple' → logprob: -6.042488098144531
    4. '(tuple' → logprob: -6.667488098144531
    5. 'map' → logprob: -7.417488098144531
    6. ' list' → logprob: -9.667488098144531
    7. '(list' → logprob: -9.917488098144531
    8. '[' → logprob: -10.042488098144531
    9. '(map' → logprob: -11.167488098144531
    10. '[list' → logprob: -12.417488098144531

Token 31: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -2.999452772201039e-05
    2. '(' → logprob: -11.000029563903809
    3. 'map' → logprob: -11.375029563903809
    4. '()' → logprob: -13.875029563903809
    5. '	map' → logprob: -16.000030517578125
    6. '```' → logprob: -16.125030517578125
    7. '(zip' → logprob: -16.375030517578125
    8. '(tuple' → logprob: -16.375030517578125
    9. ',map' → logprob: -16.500030517578125
    10. ']' → logprob: -16.500030517578125

Token 32: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00018732868193183094
    2. 'int' → logprob: -9.500186920166016
    3. '<int' → logprob: -10.750186920166016
    4. ',int' → logprob: -10.750186920166016
    5. '(str' → logprob: -11.125186920166016
    6. '(' → logprob: -11.250186920166016
    7. ']int' → logprob: -11.750186920166016
    8. '(float' → logprob: -12.000186920166016
    9. '<|end|>' → logprob: -12.125186920166016
    10. '```' → logprob: -12.250186920166016

Token 33: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.5680923461914062
    2. '(input' → logprob: -0.9430923461914062
    3. ',' → logprob: -3.3180923461914062
    4. 'input' → logprob: -4.943092346191406
    5. '(' → logprob: -7.818092346191406
    6. ' input' → logprob: -9.318092346191406
    7. ' ,' → logprob: -10.068092346191406
    8. '=input' → logprob: -10.318092346191406
    9. ')' → logprob: -11.443092346191406
    10. '```' → logprob: -11.693092346191406

Token 34: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.005253918468952179
    2. ' input' → logprob: -5.255253791809082
    3. ',input' → logprob: -11.130253791809082
    4. '(input' → logprob: -12.255253791809082
    5. '=input' → logprob: -14.880253791809082
    6. ' ' → logprob: -15.880253791809082
    7. '	input' → logprob: -16.6302547454834
    8. '<input' → logprob: -16.7552547454834
    9. ',' → logprob: -17.2552547454834
    10. ')' → logprob: -17.6302547454834

Token 35: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.1756367712223437e-05
    2. '.split' → logprob: -12.125011444091797
    3. '()' → logprob: -13.375011444091797
    4. 'split' → logprob: -13.750011444091797
    5. ' ().' → logprob: -13.750011444091797
    6. ' .' → logprob: -14.500011444091797
    7. '()))' → logprob: -14.625011444091797
    8. '))' → logprob: -15.000011444091797
    9. 'input' → logprob: -15.125011444091797
    10. ')' → logprob: -15.625011444091797

Token 36: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.619311974034645e-05
    2. 'strip' → logprob: -10.500036239624023
    3. ' split' → logprob: -12.250036239624023
    4. 'rstrip' → logprob: -13.125036239624023
    5. '(split' → logprob: -13.500036239624023
    6. '().' → logprob: -15.250036239624023
    7. 'spl' → logprob: -16.375036239624023
    8. '.split' → logprob: -16.750036239624023
    9. 's' → logprob: -17.750036239624023
    10. ')' → logprob: -18.250036239624023

Token 37: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.07989256829023361
    2. '))' → logprob: -2.579892635345459
    3. '()' → logprob: -7.829892635345459
    4. '())' → logprob: -8.2048921585083
    5. '()))
' → logprob: -8.5798921585083
    6. '())))' → logprob: -9.9548921585083
    7. '(' → logprob: -10.4548921585083
    8. ')))' → logprob: -10.7048921585083
    9. ')' → logprob: -11.2048921585083
    10. ' ))' → logprob: -12.2048921585083

Token 38: ' for' (ID: 395)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.2666778266429901
    2. ')' → logprob: -1.5166778564453125
    3. '()' → logprob: -5.0166778564453125
    4. ')]' → logprob: -5.1416778564453125
    5. '()]' → logprob: -6.5166778564453125
    6. '(' → logprob: -7.5166778564453125
    7. '()))' → logprob: -10.641677856445312
    8. '))' → logprob: -10.891677856445312
    9. '()),' → logprob: -11.016677856445312
    10. 'for' → logprob: -11.141677856445312

Token 39: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.05973700433969498
    2. ' range' → logprob: -2.934736967086792
    3. ' _' → logprob: -5.684737205505371
    4. 'range' → logprob: -6.809737205505371
    5. '_range' → logprob: -8.184737205505371
    6. '(range' → logprob: -10.184737205505371
    7. ' i' → logprob: -11.184737205505371
    8. ' ' → logprob: -12.309737205505371
    9. ' in' → logprob: -12.684737205505371
    10. 'i' → logprob: -13.059737205505371

Token 40: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.05457112193107605
    2. 'in' → logprob: -3.4295711517333984
    3. '(range' → logprob: -4.679571151733398
    4. ' range' → logprob: -4.804571151733398
    5. ' in' → logprob: -6.554571151733398
    6. '_' → logprob: -6.554571151733398
    7. '_range' → logprob: -8.804571151733398
    8. 'n' → logprob: -9.304571151733398
    9. '(n' → logprob: -9.929571151733398
    10. '	range' → logprob: -9.929571151733398

Token 41: ' repeat' (ID: 22962)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00018065694894175977
    2. ' range' → logprob: -8.6251802444458
    3. '(range' → logprob: -14.1251802444458
    4. '[' → logprob: -16.000181198120117
    5. 'r' → logprob: -16.375181198120117
    6. ' ' → logprob: -16.625181198120117
    7. 'rang' → logprob: -17.375181198120117
    8. '	range' → logprob: -17.625181198120117
    9. 'ran' → logprob: -18.000181198120117
    10. 'n' → logprob: -18.000181198120117

Token 42: '(None' (ID: 65126)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.23690561950206757
    2. '(n' → logprob: -1.861905574798584
    3. '(' → logprob: -2.986905574798584
    4. '(None' → logprob: -5.611905574798584
    5. '(lambda' → logprob: -7.361905574798584
    6. '(int' → logprob: -7.861905574798584
    7. 'range' → logprob: -8.236906051635742
    8. '(_,' → logprob: -9.986906051635742
    9. '(i' → logprob: -11.361906051635742
    10. ' range' → logprob: -11.361906051635742

Token 43: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20161886513233185
    2. ',n' → logprob: -1.7016189098358154
    3. ' ,' → logprob: -9.326619148254395
    4. '(n' → logprob: -9.701619148254395
    5. 'n' → logprob: -10.076619148254395
    6. '(),' → logprob: -12.201619148254395
    7. ' n' → logprob: -13.576619148254395
    8. ',int' → logprob: -13.701619148254395
    9. ',num' → logprob: -14.076619148254395
    10. '`,' → logprob: -14.201619148254395

Token 44: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.005234594456851482
    2. ' n' → logprob: -5.255234718322754
    3. '(n' → logprob: -14.630234718322754
    4. '	n' → logprob: -15.005234718322754
    5. ')n' → logprob: -17.255233764648438
    6. ' ' → logprob: -17.880233764648438
    7. '_n' → logprob: -18.255233764648438
    8. ' ' → logprob: -19.505233764648438
    9. '<n' → logprob: -19.630233764648438
    10. '  ' → logprob: -20.005233764648438

Token 45: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0002378673671046272
    2. ')' → logprob: -8.625237464904785
    3. '))' → logprob: -10.125237464904785
    4. ')])' → logprob: -11.125237464904785
    5. ')],' → logprob: -13.875237464904785
    6. ' )' → logprob: -14.625237464904785
    7. '])]' → logprob: -14.625237464904785
    8. ')]
' → logprob: -14.750237464904785
    9. ']' → logprob: -15.000237464904785
    10. ')}' → logprob: -15.625237464904785

Token 46: 'pairs' (ID: 175838)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.26463890075683594
    2. 'total' → logprob: -2.639638900756836
    3. 'res' → logprob: -3.639638900756836
    4. 'd' → logprob: -4.139638900756836
    5. 'pairs' → logprob: -4.139638900756836
    6. 'def' → logprob: -4.264638900756836
    7. 'ans' → logprob: -4.389638900756836
    8. 'result' → logprob: -4.389638900756836
    9. 's' → logprob: -4.389638900756836
    10. 'answer' → logprob: -4.514638900756836

Token 47: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.035599153488874435
    2. '=' → logprob: -3.7855992317199707
    3. '(' → logprob: -4.410599231719971
    4. 's' → logprob: -10.035598754882812
    5. '_' → logprob: -10.535598754882812
    6. '_pairs' → logprob: -10.785598754882812
    7. ' ' → logprob: -11.410598754882812
    8. ' =(' → logprob: -13.035598754882812
    9. ')' → logprob: -13.160598754882812
    10. '(com' → logprob: -13.160598754882812

Token 48: ' list' (ID: 1562)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.1677277833223343
    2. ' combinations' → logprob: -2.4177277088165283
    3. 'list' → logprob: -3.0427277088165283
    4. ' list' → logprob: -4.167727947235107
    5. '(com' → logprob: -6.417727947235107
    6. '[' → logprob: -8.29272747039795
    7. '[(' → logprob: -9.66772747039795
    8. '[list' → logprob: -10.41772747039795
    9. '[]' → logprob: -10.54272747039795
    10. ' com' → logprob: -11.16772747039795

Token 49: '(com' (ID: 27868)
  Prédit: '(com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(com' → logprob: -8.876193169271573e-05
    2. '(' → logprob: -9.375088691711426
    3. 'com' → logprob: -13.125088691711426
    4. '=com' → logprob: -14.250088691711426
    5. '<com' → logprob: -14.375088691711426
    6. '(per' → logprob: -16.125089645385742
    7. '()' → logprob: -16.250089645385742
    8. '```' → logprob: -16.250089645385742
    9. '(con' → logprob: -16.625089645385742
    10. ' (' → logprob: -16.875089645385742

Token 50: 'binations' (ID: 113572)
  Prédit: 'binations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'binations' → logprob: -5.2524021157296374e-05
    2. 'b' → logprob: -10.875052452087402
    3. 'inations' → logprob: -11.000052452087402
    4. 'bin' → logprob: -11.125052452087402
    5. '(b' → logprob: -14.375052452087402
    6. '(' → logprob: -14.625052452087402
    7. '(bin' → logprob: -15.625052452087402
    8. 'positions' → logprob: -15.625052452087402
    9. '```' → logprob: -15.750052452087402
    10. 'ib' → logprob: -16.00005340576172

Token 51: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0006282062386162579
    2. '(range' → logprob: -7.3756279945373535
    3. '(' → logprob: -14.125628471374512
    4. ')' → logprob: -14.375628471374512
    5. 'xy' → logprob: -15.750628471374512
    6. '((' → logprob: -16.375627517700195
    7. ')(' → logprob: -17.625627517700195
    8. ' (' → logprob: -17.875627517700195
    9. '(
' → logprob: -18.000627517700195
    10. 'range' → logprob: -18.000627517700195

Token 52: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -6.0391463193809614e-05
    2. ',y' → logprob: -10.625060081481934
    3. 'Y' → logprob: -10.875060081481934
    4. '_y' → logprob: -11.875060081481934
    5. ' y' → logprob: -12.250060081481934
    6. ',' → logprob: -14.250060081481934
    7. ')' → logprob: -14.500060081481934
    8. '	y' → logprob: -14.750060081481934
    9. 'yp' → logprob: -15.000060081481934
    10. 'yl' → logprob: -15.125060081481934

Token 53: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.7385154428193346e-05
    2. '2' → logprob: -10.75003719329834
    3. ' ,' → logprob: -11.25003719329834
    4. '(),' → logprob: -13.00003719329834
    5. '，' → logprob: -15.12503719329834
    6. '),' → logprob: -16.125038146972656
    7. '`,' → logprob: -16.250038146972656
    8. '(' → logprob: -17.125038146972656
    9. '```' → logprob: -17.125038146972656
    10. 's' → logprob: -17.375038146972656

Token 54: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.002476724097505212
    2. ' ' → logprob: -6.002476692199707
    3. '   ' → logprob: -15.002476692199707
    4. '２' → logprob: -15.002476692199707
    5. '۲' → logprob: -15.627476692199707
    6. ')' → logprob: -16.127477645874023
    7. '  ' → logprob: -16.627477645874023
    8. ' ' → logprob: -17.002477645874023
    9. ' two' → logprob: -17.377477645874023
    10. '٢' → logprob: -17.502477645874023

Token 55: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.060365608893335e-05
    2. ' ' → logprob: -10.125041007995605
    3. '   ' → logprob: -15.750041007995605
    4. '۲' → logprob: -15.750041007995605
    5. '２' → logprob: -16.12504005432129
    6. ')' → logprob: -17.37504005432129
    7. '٢' → logprob: -17.75004005432129
    8. '  ' → logprob: -18.50004005432129
    9. '```' → logprob: -18.50004005432129
    10. ' ' → logprob: -18.62504005432129

Token 56: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.023250484839081764
    2. ')' → logprob: -3.7732505798339844
    3. '))
' → logprob: -12.898250579833984
    4. ')))' → logprob: -13.648250579833984
    5. '),' → logprob: -14.148250579833984
    6. ' ))' → logprob: -15.398250579833984
    7. '))

' → logprob: -15.648250579833984
    8. ')
' → logprob: -15.898250579833984
    9. ')),' → logprob: -17.023250579833984
    10. ')}' → logprob: -17.648250579833984

Token 57: 'd' (ID: 67)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2967393696308136
    2. 'dist' → logprob: -1.9217393398284912
    3. 'def' → logprob: -3.046739339828491
    4. 'd' → logprob: -3.796739339828491
    5. 'distance' → logprob: -3.796739339828491
    6. 'map' → logprob: -5.79673957824707
    7. 'result' → logprob: -5.79673957824707
    8. ')
' → logprob: -5.92173957824707
    9. ' distances' → logprob: -5.92173957824707
    10. 'pairs' → logprob: -7.04673957824707

Token 58: 'ists' (ID: 2549)
  Prédit: 'ists'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ists' → logprob: -0.29421526193618774
    2. 'ist' → logprob: -1.419215202331543
    3. '=' → logprob: -4.794215202331543
    4. ' =' → logprob: -5.794215202331543
    5. 'istance' → logprob: -6.919215202331543
    6. 'is' → logprob: -8.669215202331543
    7. '_' → logprob: -9.044215202331543
    8. '```' → logprob: -10.169215202331543
    9. 'sts' → logprob: -10.294215202331543
    10. 'i' → logprob: -10.294215202331543

Token 59: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01604187674820423
    2. '=' → logprob: -4.1410417556762695
    3. ' =[' → logprob: -13.26604175567627
    4. ' ' → logprob: -13.76604175567627
    5. '[' → logprob: -13.89104175567627
    6. '=[]' → logprob: -14.26604175567627
    7. '[:]' → logprob: -14.39104175567627
    8. 's' → logprob: -14.51604175567627
    9. ' =
' → logprob: -14.64104175567627
    10. ')' → logprob: -14.89104175567627

Token 60: ' list' (ID: 1562)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.16476765275001526
    2. '[list' → logprob: -1.9147676229476929
    3. 'list' → logprob: -6.539767742156982
    4. 'map' → logprob: -6.664767742156982
    5. '[h' → logprob: -7.039767742156982
    6. ' [' → logprob: -7.664767742156982
    7. ' list' → logprob: -9.414767265319824
    8. '[
' → logprob: -9.539767265319824
    9. '(map' → logprob: -9.539767265319824
    10. '(list' → logprob: -10.164767265319824

Token 61: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0018518929136916995
    2. '(' → logprob: -6.876852035522461
    3. '(h' → logprob: -7.126852035522461
    4. 'map' → logprob: -11.876852035522461
    5. '(re' → logprob: -12.251852035522461
    6. '(
' → logprob: -13.501852035522461
    7. ')' → logprob: -14.626852035522461
    8. '(com' → logprob: -15.126852035522461
    9. '()' → logprob: -15.251852035522461
    10. '(st' → logprob: -15.376852035522461

Token 62: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.5770763158798218
    2. '(h' → logprob: -0.8270763158798218
    3. '(' → logprob: -6.827076435089111
    4. '(
' → logprob: -11.327075958251953
    5. 'lambda' → logprob: -11.327075958251953
    6. ')' → logprob: -11.702075958251953
    7. ')(' → logprob: -12.577075958251953
    8. '(l' → logprob: -12.827075958251953
    9. '(s' → logprob: -12.952075958251953
    10. '(H' → logprob: -13.077075958251953

Token 63: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.2941030263900757
    2. 'lambda' → logprob: -1.5441030263900757
    3. 'pair' → logprob: -1.5441030263900757
    4. ' lambda' → logprob: -2.5441031455993652
    5. 'xy' → logprob: -2.5441031455993652
    6. ' p' → logprob: -2.7941031455993652
    7. ' pair' → logprob: -3.2941031455993652
    8. '(lambda' → logprob: -4.419103145599365
    9. ' xy' → logprob: -4.669103145599365
    10. 'x' → logprob: -4.919103145599365

Token 64: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004669476300477982
    2. ' :' → logprob: -5.379669666290283
    3. ' p' → logprob: -11.504669189453125
    4. ',' → logprob: -11.629669189453125
    5. ':p' → logprob: -11.629669189453125
    6. 'p' → logprob: -12.004669189453125
    7. ':
' → logprob: -13.129669189453125
    8. ':[' → logprob: -13.129669189453125
    9. '[' → logprob: -13.629669189453125
    10. ':h' → logprob: -13.879669189453125

Token 65: ' hypot' (ID: 85756)
  Prédit: 'hyp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hyp' → logprob: -0.019216543063521385
    2. 'lambda' → logprob: -4.144216537475586
    3. ' hypot' → logprob: -5.894216537475586
    4. '(lambda' → logprob: -8.894216537475586
    5. 'h' → logprob: -9.269216537475586
    6. ' lambda' → logprob: -9.644216537475586
    7. '[h' → logprob: -9.894216537475586
    8. '(h' → logprob: -10.019216537475586
    9. '[' → logprob: -11.144216537475586
    10. '   ' → logprob: -12.894216537475586

Token 66: '(*(' (ID: 103513)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.007968693971633911
    2. '(' → logprob: -4.882968902587891
    3. '(*' → logprob: -8.50796890258789
    4. '(*(' → logprob: -9.50796890258789
    5. 'p' → logprob: -10.38296890258789
    6. '((' → logprob: -10.75796890258789
    7. '(
' → logprob: -11.13296890258789
    8. '(abs' → logprob: -11.25796890258789
    9. ' (' → logprob: -12.63296890258789
    10. ' p' → logprob: -13.38296890258789

Token 67: 'map' (ID: 3726)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.5863732099533081
    2. 'a' → logprob: -1.211373209953308
    3. 'x' → logprob: -2.8363733291625977
    4. 'map' → logprob: -3.3363733291625977
    5. '[i' → logprob: -4.336373329162598
    6. 'i' → logprob: -4.461373329162598
    7. 'b' → logprob: -4.711373329162598
    8. '[p' → logprob: -5.961373329162598
    9. 'abs' → logprob: -6.211373329162598
    10. '[x' → logprob: -6.336373329162598

Token 68: '(lambda' (ID: 43341)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.1299482136964798
    2. '(sub' → logprob: -3.004948139190674
    3. 'add' → logprob: -3.129948139190674
    4. '(add' → logprob: -4.004948139190674
    5. '(lambda' → logprob: -5.379948139190674
    6. 'lambda' → logprob: -5.754948139190674
    7. 'subtract' → logprob: -6.629948139190674
    8. ' sub' → logprob: -7.879948139190674
    9. '(operator' → logprob: -7.879948139190674
    10. 'operator' → logprob: -8.504948616027832

Token 69: ' ab' (ID: 692)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.22125104069709778
    2. ' sub' → logprob: -2.0962510108947754
    3. 'add' → logprob: -2.8462510108947754
    4. 'abs' → logprob: -4.721251010894775
    5. 'lambda' → logprob: -6.096251010894775
    6. 'operator' → logprob: -6.471251010894775
    7. 'subtract' → logprob: -6.471251010894775
    8. ' add' → logprob: -6.471251010894775
    9. ' lambda' → logprob: -7.596251010894775
    10. ' abs' → logprob: -8.346251487731934

Token 70: ':' (ID: 25)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.09134563058614731
    2. 'subtract' → logprob: -2.9663455486297607
    3. 'lambda' → logprob: -4.34134578704834
    4. ':' → logprob: -4.71634578704834
    5. 'add' → logprob: -5.71634578704834
    6. 'abs' → logprob: -6.21634578704834
    7. ',' → logprob: -6.46634578704834
    8. ' subtract' → logprob: -6.59134578704834
    9. ' sub' → logprob: -7.09134578704834
    10. 'a' → logprob: -7.21634578704834

Token 71: ' ab' (ID: 692)
  Prédit: 'ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ab' → logprob: -0.015750205144286156
    2. 'b' → logprob: -4.890750408172607
    3. ' ab' → logprob: -5.140750408172607
    4. 'abs' → logprob: -6.390750408172607
    5. 'p' → logprob: -8.01574993133545
    6. ' abs' → logprob: -10.14074993133545
    7. 'lambda' → logprob: -10.51574993133545
    8. '-ab' → logprob: -10.51574993133545
    9. ' p' → logprob: -10.76574993133545
    10. ' b' → logprob: -10.89074993133545

Token 72: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6864070892333984
    2. '-' → logprob: -2.4364070892333984
    3. ':' → logprob: -2.5614070892333984
    4. '1' → logprob: -2.8114070892333984
    5. 'p' → logprob: -3.0614070892333984
    6. 'sub' → logprob: -3.3114070892333984
    7. '2' → logprob: -3.3114070892333984
    8. ' -' → logprob: -3.6864070892333984
    9. 'diff' → logprob: -3.6864070892333984
    10. '(' → logprob: -4.186407089233398

Token 73: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.36601418256759644
    2. '0' → logprob: -1.2410142421722412
    3. 'lambda' → logprob: -4.366014003753662
    4. 'diff' → logprob: -6.366014003753662
    5. ' lambda' → logprob: -6.741014003753662
    6. ' ' → logprob: -7.741014003753662
    7. 'abs' → logprob: -8.49101448059082
    8. 'p' → logprob: -8.99101448059082
    9. '(lambda' → logprob: -8.99101448059082
    10. '[' → logprob: -9.24101448059082

Token 74: ']' (ID: 60)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4843074083328247
    2. ' -' → logprob: -0.9843074083328247
    3. '[' → logprob: -5.359307289123535
    4. ')' → logprob: -6.359307289123535
    5. '[-' → logprob: -7.234307289123535
    6. '-p' → logprob: -7.859307289123535
    7. ' ' → logprob: -7.859307289123535
    8. ')-' → logprob: -7.984307289123535
    9. ']-' → logprob: -7.984307289123535
    10. ']' → logprob: -8.109307289123535

Token 75: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.25423479080200195
    2. ' -' → logprob: -1.504234790802002
    3. '-
' → logprob: -6.379234790802002
    4. '-p' → logprob: -9.129234313964844
    5. ' -
' → logprob: -9.379234313964844
    6. '-ab' → logprob: -9.379234313964844
    7. 'p' → logprob: -9.629234313964844
    8. '[' → logprob: -9.754234313964844
    9. '
' → logprob: -10.004234313964844
    10. ' ' → logprob: -10.379234313964844

Token 76: ' ab' (ID: 692)
  Prédit: 'ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ab' → logprob: -0.029766106978058815
    2. ' ab' → logprob: -3.529766082763672
    3. 'p' → logprob: -11.779766082763672
    4. ' p' → logprob: -12.904766082763672
    5. ' ' → logprob: -13.779766082763672
    6. 'abbr' → logprob: -14.029766082763672
    7. ''ab' → logprob: -14.279766082763672
    8. '_ab' → logprob: -14.779766082763672
    9. '  ' → logprob: -15.029766082763672
    10. ' аб' → logprob: -15.154766082763672

Token 77: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.004163283389061689
    2. '1' → logprob: -5.5041632652282715
    3. '(' → logprob: -9.75416374206543
    4. '0' → logprob: -11.87916374206543
    5. ')' → logprob: -12.62916374206543
    6. ',' → logprob: -13.12916374206543
    7. 'p' → logprob: -13.12916374206543
    8. '()[' → logprob: -13.12916374206543
    9. ' ' → logprob: -13.37916374206543
    10. 's' → logprob: -13.50416374206543

Token 78: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00046630011638626456
    2. '[' → logprob: -7.750466346740723
    3. '0' → logprob: -11.125466346740723
    4. '2' → logprob: -12.250466346740723
    5. 'p' → logprob: -13.062966346740723
    6. '11' → logprob: -13.312966346740723
    7. ' ' → logprob: -13.562966346740723
    8. ')' → logprob: -13.750466346740723
    9. '```' → logprob: -13.937966346740723
    10. '<|end|>' → logprob: -14.000466346740723

Token 79: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08199092000722885
    2. ',p' → logprob: -2.706990957260132
    3. 'p' → logprob: -5.706990718841553
    4. '(p' → logprob: -5.831990718841553
    5. '),' → logprob: -6.081990718841553
    6. ' ,' → logprob: -6.456990718841553
    7. ')),' → logprob: -8.081991195678711
    8. '   ' → logprob: -8.206991195678711
    9. ')' → logprob: -8.581991195678711
    10. '  ' → logprob: -9.206991195678711

Token 80: ' zip' (ID: 16216)
  Prédit: 'zip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zip' → logprob: -0.00970356073230505
    2. ' zip' → logprob: -4.884703636169434
    3. 'p' → logprob: -6.384703636169434
    4. '(zip' → logprob: -8.259703636169434
    5. 'pair' → logprob: -8.884703636169434
    6. 'pairs' → logprob: -12.509703636169434
    7. 'list' → logprob: -13.134703636169434
    8. 'tuple' → logprob: -13.634703636169434
    9. ' p' → logprob: -13.759703636169434
    10. '(p' → logprob: -13.884703636169434

Token 81: '(*' (ID: 9000)
  Prédit: '(*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.44254007935523987
    2. '(p' → logprob: -1.0675400495529175
    3. 'p' → logprob: -4.317540168762207
    4. '(' → logprob: -8.317540168762207
    5. '*p' → logprob: -10.192540168762207
    6. '(*(' → logprob: -10.192540168762207
    7. '(
' → logprob: -10.442540168762207
    8. '*' → logprob: -10.567540168762207
    9. '(pair' → logprob: -11.317540168762207
    10. '((*' → logprob: -11.567540168762207

Token 82: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.0921942703134846e-05
    2. ' p' → logprob: -12.37501049041748
    3. 'pair' → logprob: -12.87501049041748
    4. 'pairs' → logprob: -13.12501049041748
    5. '(p' → logprob: -13.75001049041748
    6. '[' → logprob: -15.37501049041748
    7. '(' → logprob: -15.62501049041748
    8. '))' → logprob: -16.500011444091797
    9. '   ' → logprob: -16.625011444091797
    10. '[p' → logprob: -16.750011444091797

Token 83: ')))),' (ID: 35247)
  Prédit: ')))),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))),' → logprob: -0.07917596399784088
    2. '))),' → logprob: -2.9541759490966797
    3. '))))' → logprob: -4.32917594909668
    4. '))' → logprob: -4.95417594909668
    5. ')))' → logprob: -5.82917594909668
    6. ')))))
' → logprob: -7.57917594909668
    7. ')' → logprob: -8.45417594909668
    8. ')),' → logprob: -10.20417594909668
    9. ' ))' → logprob: -10.95417594909668
    10. '))))
' → logprob: -11.32917594909668

Token 84: ' pairs' (ID: 24702)
  Prédit: 'pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pairs' → logprob: -0.02975558675825596
    2. ' pairs' → logprob: -3.5297555923461914
    3. 'p' → logprob: -13.779755592346191
    4. '   ' → logprob: -14.029755592346191
    5. ')' → logprob: -14.029755592346191
    6. 'Pairs' → logprob: -14.154755592346191
    7. ' ' → logprob: -14.279755592346191
    8. '_pairs' → logprob: -14.404755592346191
    9. 'pair' → logprob: -15.029755592346191
    10. '  ' → logprob: -16.154754638671875

Token 85: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.018160942941904068
    2. ')' → logprob: -4.018160820007324
    3. ')))' → logprob: -11.893160820007324
    4. '))
' → logprob: -13.268160820007324
    5. '),' → logprob: -13.393160820007324
    6. ' ))' → logprob: -14.518160820007324
    7. '))

' → logprob: -16.51816177368164
    8. ')
' → logprob: -16.76816177368164
    9. ' )' → logprob: -16.89316177368164
    10. ')),' → logprob: -17.14316177368164

Token 86: 'total' (ID: 9577)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4149482548236847
    2. 'sum' → logprob: -1.4149482250213623
    3. 'reduce' → logprob: -2.4149482250213623
    4. 'result' → logprob: -5.414948463439941
    5. 'sorted' → logprob: -7.789948463439941
    6. '/' → logprob: -8.289948463439941
    7. 'd' → logprob: -8.289948463439941
    8. 'total' → logprob: -8.414948463439941
    9. 'average' → logprob: -8.539948463439941
    10. ' sum' → logprob: -8.664948463439941

Token 87: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1619526892900467
    2. '=' → logprob: -2.0369527339935303
    3. '_' → logprob: -4.036952495574951
    4. 's' → logprob: -7.286952495574951
    5. '_dist' → logprob: -8.03695297241211
    6. '_distance' → logprob: -9.03695297241211
    7. 'dist' → logprob: -9.66195297241211
    8. '=sum' → logprob: -10.16195297241211
    9. '_sum' → logprob: -10.41195297241211
    10. 'sum' → logprob: -10.41195297241211

Token 88: ' reduce' (ID: 10389)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.13350078463554382
    2. 'sum' → logprob: -2.258500814437866
    3. ' reduce' → logprob: -4.258500576019287
    4. ' sum' → logprob: -5.508500576019287
    5. '0' → logprob: -6.633500576019287
    6. 're' → logprob: -7.383500576019287
    7. 'list' → logprob: -8.633501052856445
    8. ' ' → logprob: -10.008501052856445
    9. 'redu' → logprob: -10.383501052856445
    10. ' list' → logprob: -11.133501052856445

Token 89: '(add' (ID: 40159)
  Prédit: '(add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(add' → logprob: -0.005480506457388401
    2. '(' → logprob: -5.2554802894592285
    3. '(lambda' → logprob: -9.255480766296387
    4. '(operator' → logprob: -9.380480766296387
    5. 'add' → logprob: -9.755480766296387
    6. '(+' → logprob: -12.255480766296387
    7. ' (' → logprob: -13.755480766296387
    8. ')add' → logprob: -14.130480766296387
    9. ' add' → logprob: -14.505480766296387
    10. '(
' → logprob: -14.505480766296387

Token 90: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02985404059290886
    2. ',d' → logprob: -3.5298540592193604
    3. ' ,' → logprob: -9.404853820800781
    4. 'd' → logprob: -11.029853820800781
    5. '(d' → logprob: -12.654853820800781
    6. ' d' → logprob: -14.404853820800781
    7. ',p' → logprob: -15.279853820800781
    8. ',
' → logprob: -15.404853820800781
    9. '),' → logprob: -16.02985382080078
    10. '(' → logprob: -16.27985382080078

Token 91: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.4287155866622925
    2. ' d' → logprob: -1.0537155866622925
    3. ')d' → logprob: -11.928715705871582
    4. '(d' → logprob: -13.178715705871582
    5. '[d' → logprob: -13.303715705871582
    6. ' ' → logprob: -13.428715705871582
    7. '[' → logprob: -14.053715705871582
    8. ')' → logprob: -14.053715705871582
    9. '	d' → logprob: -14.553715705871582
    10. '_d' → logprob: -15.053715705871582

Token 92: 'ists' (ID: 2549)
  Prédit: 'ists'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ists' → logprob: -0.00030721822986379266
    2. 'ist' → logprob: -8.125307083129883
    3. 'sts' → logprob: -12.250307083129883
    4. ' is' → logprob: -13.625307083129883
    5. 'e' → logprob: -13.750307083129883
    6. 'i' → logprob: -14.000307083129883
    7. '[' → logprob: -14.000307083129883
    8. '   ' → logprob: -15.125307083129883
    9. '`' → logprob: -15.250307083129883
    10. 's' → logprob: -15.375307083129883

Token 93: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009155054576694965
    2. ',' → logprob: -7.75091552734375
    3. ')/' → logprob: -8.00091552734375
    4. ' )' → logprob: -9.37591552734375
    5. '))' → logprob: -10.50091552734375
    6. ')
' → logprob: -11.25091552734375
    7. ')*' → logprob: -12.12591552734375
    8. '/' → logprob: -12.50091552734375
    9. ')`' → logprob: -12.75091552734375
    10. ')

' → logprob: -12.87591552734375

Token 94: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03804333135485649
    2. ' ' → logprob: -3.288043260574341
    3. ')' → logprob: -13.788043022155762
    4. ' ' → logprob: -14.538043022155762
    5. '  ' → logprob: -16.413043975830078
    6. '   ' → logprob: -16.663043975830078
    7. ' )' → logprob: -17.288043975830078
    8. '1' → logprob: -17.913043975830078
    9. '2' → logprob: -18.038043975830078
    10. '۰' → logprob: -18.350543975830078

Token 95: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00020568605395965278
    2. ' ' → logprob: -8.500205993652344
    3. ')' → logprob: -14.000205993652344
    4. '  ' → logprob: -14.500205993652344
    5. '   ' → logprob: -14.875205993652344
    6. '    ' → logprob: -16.625205993652344
    7. '1' → logprob: -17.312705993652344
    8. '00' → logprob: -17.375205993652344
    9. '.' → logprob: -17.562705993652344
    10. '2' → logprob: -17.875205993652344

Token 96: ')

' (ID: 1029)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06447604298591614
    2. '
' → logprob: -2.9394760131835938
    3. ')' → logprob: -5.064476013183594
    4. '/' → logprob: -6.689476013183594
    5. ' print' → logprob: -7.189476013183594
    6. ')
' → logprob: -7.689476013183594
    7. '/
' → logprob: -8.064476013183594
    8. '  
' → logprob: -9.814476013183594
    9. 'result' → logprob: -9.939476013183594
    10. '*' → logprob: -10.189476013183594

Token 97: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.166338137816638e-05
    2. 'n' → logprob: -11.250031471252441
    3. ' print' → logprob: -12.625031471252441
    4. '/' → logprob: -12.750031471252441
    5. 'import' → logprob: -12.750031471252441
    6. 'from' → logprob: -13.375031471252441
    7. 'total' → logprob: -13.500031471252441
    8. 'result' → logprob: -13.500031471252441
    9. '*' → logprob: -13.750031471252441
    10. 'for' → logprob: -13.875031471252441

Token 98: '(total' (ID: 39744)
  Prédit: '(total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(total' → logprob: -0.20454947650432587
    2. '(' → logprob: -1.7045494318008423
    3. '(round' → logprob: -5.829549312591553
    4. '(f' → logprob: -9.579549789428711
    5. '((' → logprob: -9.704549789428711
    6. 'total' → logprob: -11.329549789428711
    7. ' (' → logprob: -11.454549789428711
    8. '('' → logprob: -11.454549789428711
    9. '(sum' → logprob: -11.954549789428711
    10. '("("' → logprob: -12.079549789428711

Token 99: ' /' (ID: 820)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -9.372294698550832e-06
    2. '))' → logprob: -12.250009536743164
    3. ' )' → logprob: -12.375009536743164
    4. ')`' → logprob: -15.625009536743164
    5. ')
' → logprob: -16.375009536743164
    6. ')}' → logprob: -17.500009536743164
    7. ')))' → logprob: -18.875009536743164
    8. '),' → logprob: -19.000009536743164
    9. '`)' → logprob: -19.500009536743164
    10. '+' → logprob: -19.500009536743164

Token 100: ' (' (ID: 350)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.11342551559209824
    2. 'len' → logprob: -2.4884254932403564
    3. ' n' → logprob: -4.7384257316589355
    4. '(len' → logprob: -4.9884257316589355
    5. ' len' → logprob: -5.7384257316589355
    6. '(n' → logprob: -5.9884257316589355
    7. '(' → logprob: -5.9884257316589355
    8. ' (' → logprob: -7.9884257316589355
    9. ' ' → logprob: -11.363425254821777
    10. 'factor' → logprob: -11.488425254821777

Token 101: 'reduce' (ID: 49119)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.45490315556526184
    2. 'len' → logprob: -1.0799031257629395
    3. '(n' → logprob: -4.0799031257629395
    4. '(len' → logprob: -5.8299031257629395
    5. 'hyp' → logprob: -5.8299031257629395
    6. ' n' → logprob: -6.8299031257629395
    7. ' len' → logprob: -7.3299031257629395
    8. '(' → logprob: -7.7049031257629395
    9. 'factor' → logprob: -8.329903602600098
    10. '2' → logprob: -8.579903602600098

Token 102: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.8874580264091492
    2. '(add' → logprob: -1.137458086013794
    3. '(len' → logprob: -1.387458086013794
    4. '(' → logprob: -5.262457847595215
    5. '(f' → logprob: -5.387457847595215
    6. '(re' → logprob: -5.762457847595215
    7. '(operator' → logprob: -6.762457847595215
    8. '(n' → logprob: -7.137457847595215
    9. 'add' → logprob: -7.262457847595215
    10. '(int' → logprob: -7.512457847595215

Token 103: ' a' (ID: 261)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.8606529831886292
    2. ' lambda' → logprob: -1.3606529235839844
    3. 'lambda' → logprob: -1.7356529235839844
    4. 'n' → logprob: -2.8606529235839844
    5. ' n' → logprob: -3.8606529235839844
    6. 'factor' → logprob: -3.9856529235839844
    7. '=lambda' → logprob: -4.360652923583984
    8. ' (' → logprob: -5.235652923583984
    9. 'multiply' → logprob: -5.235652923583984
    10. '(n' → logprob: -5.485652923583984

Token 104: ',' (ID: 11)
  Prédit: ' lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.39932018518447876
    2. 'lambda' → logprob: -1.399320125579834
    3. ' n' → logprob: -4.274320125579834
    4. 'n' → logprob: -4.399320125579834
    5. 'multiply' → logprob: -4.399320125579834
    6. ' multiply' → logprob: -4.524320125579834
    7. '(lambda' → logprob: -4.524320125579834
    8. 'mul' → logprob: -4.899320125579834
    9. 'factor' → logprob: -5.274320125579834
    10. ' factorial' → logprob: -6.024320125579834

Token 105: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.15201498568058014
    2. ' b' → logprob: -2.027014970779419
    3. ' lambda' → logprob: -5.777015209197998
    4. 'n' → logprob: -6.277015209197998
    5. ' n' → logprob: -6.527015209197998
    6. 'lambda' → logprob: -6.652015209197998
    7. 'add' → logprob: -7.152015209197998
    8. ' add' → logprob: -7.402015209197998
    9. 'a' → logprob: -9.90201473236084
    10. ' ' → logprob: -10.40201473236084

Token 106: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.37418311834335327
    2. ':' → logprob: -1.249183177947998
    3. ' :' → logprob: -5.249183177947998
    4. ' ,' → logprob: -5.249183177947998
    5. 'mul' → logprob: -5.374183177947998
    6. 'lambda' → logprob: -5.749183177947998
    7. ' lambda' → logprob: -6.374183177947998
    8. ' ' → logprob: -7.124183177947998
    9. 'a' → logprob: -7.499183177947998
    10. '   ' → logprob: -7.624183177947998

Token 107: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.023454520851373672
    2. ' a' → logprob: -3.773454427719116
    3. 'n' → logprob: -10.023454666137695
    4. ' ' → logprob: -10.148454666137695
    5. 'add' → logprob: -10.148454666137695
    6. '   ' → logprob: -10.898454666137695
    7. '  ' → logprob: -11.023454666137695
    8. ' add' → logprob: -11.148454666137695
    9. ' n' → logprob: -11.273454666137695
    10. 'factor' → logprob: -11.648454666137695

Token 108: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.03717535361647606
    2. '*b' → logprob: -3.662175416946411
    3. ' *' → logprob: -4.537175178527832
    4. ' ' → logprob: -9.787175178527832
    5. '+' → logprob: -11.787175178527832
    6. 'mul' → logprob: -11.912175178527832
    7. '+b' → logprob: -12.037175178527832
    8. 'b' → logprob: -12.162175178527832
    9. '*a' → logprob: -12.287175178527832
    10. '*n' → logprob: -12.662175178527832

Token 109: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.01484284270554781
    2. 'n' → logprob: -4.264842987060547
    3. '(' → logprob: -8.264842987060547
    4. '(n' → logprob: -8.389842987060547
    5. ' b' → logprob: -8.889842987060547
    6. ' n' → logprob: -10.639842987060547
    7. ' (' → logprob: -11.014842987060547
    8. '(b' → logprob: -11.389842987060547
    9. '(len' → logprob: -13.514842987060547
    10. 'len' → logprob: -13.889842987060547

Token 110: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.017535757273435593
    2. '(range' → logprob: -4.39253568649292
    3. ',n' → logprob: -6.01753568649292
    4. ',(' → logprob: -7.26753568649292
    5. ',len' → logprob: -7.26753568649292
    6. ' ,' → logprob: -8.142536163330078
    7. '(n' → logprob: -8.267536163330078
    8. 'range' → logprob: -8.392536163330078
    9. ',[' → logprob: -8.642536163330078
    10. '),' → logprob: -9.642536163330078

Token 111: ' (' (ID: 350)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.17934973537921906
    2. 'range' → logprob: -2.054349660873413
    3. ' range' → logprob: -3.804349660873413
    4. '[' → logprob: -4.804349899291992
    5. '[n' → logprob: -5.679349899291992
    6. '(n' → logprob: -6.679349899291992
    7. 'n' → logprob: -8.054349899291992
    8. ' [' → logprob: -8.679349899291992
    9. 'list' → logprob: -8.679349899291992
    10. '(' → logprob: -9.429349899291992

Token 112: 'n' (ID: 77)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2924537658691406
    2. 'n' → logprob: -1.4174537658691406
    3. 'len' → logprob: -5.167453765869141
    4. '[n' → logprob: -6.292453765869141
    5. ' range' → logprob: -6.667453765869141
    6. 'list' → logprob: -6.792453765869141
    7. '(range' → logprob: -7.167453765869141
    8. '[' → logprob: -9.04245376586914
    9. 'i' → logprob: -9.29245376586914
    10. ' n' → logprob: -9.41745376586914

Token 113: ',' (ID: 11)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.032685548067092896
    2. ' -' → logprob: -4.03268575668335
    3. ',' → logprob: -4.40768575668335
    4. '(n' → logprob: -6.40768575668335
    5. ',n' → logprob: -8.782685279846191
    6. ' n' → logprob: -9.032685279846191
    7. ' ,' → logprob: -9.282685279846191
    8. ' ' → logprob: -9.782685279846191
    9. '  ' → logprob: -10.282685279846191
    10. 'n' → logprob: -10.532685279846191

Token 114: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.018405692651867867
    2. ' n' → logprob: -4.018405914306641
    3. '(n' → logprob: -9.14340591430664
    4. '	n' → logprob: -9.26840591430664
    5. ' ' → logprob: -10.39340591430664
    6. '  ' → logprob: -12.14340591430664
    7. '   ' → logprob: -12.26840591430664
    8. '
' → logprob: -12.64340591430664
    9. ' (' → logprob: -12.64340591430664
    10. ')n' → logprob: -13.14340591430664

Token 115: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.029854271560907364
    2. ' -' → logprob: -3.5298542976379395
    3. ')' → logprob: -9.404853820800781
    4. '))' → logprob: -11.529853820800781
    5. ' ' → logprob: -12.279853820800781
    6. ')))' → logprob: -13.154853820800781
    7. '1' → logprob: -13.279853820800781
    8. ',' → logprob: -13.404853820800781
    9. '),' → logprob: -14.029853820800781
    10. '  ' → logprob: -15.154853820800781

Token 116: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.047134305234067e-05
    2. ' ' → logprob: -11.125030517578125
    3. '2' → logprob: -11.375030517578125
    4. ')' → logprob: -13.250030517578125
    5. '   ' → logprob: -13.750030517578125
    6. '  ' → logprob: -15.125030517578125
    7. '<|end|>' → logprob: -15.250030517578125
    8. '<|end|>' → logprob: -15.250030517578125
    9. '
' → logprob: -15.625030517578125
    10. '3' → logprob: -16.875030517578125

Token 117: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.318681188422488e-05
    2. ' ' → logprob: -11.62501335144043
    3. '2' → logprob: -12.62501335144043
    4. ')' → logprob: -15.93751335144043
    5. '<|end|>' → logprob: -16.43751335144043
    6. '   ' → logprob: -16.56251335144043
    7. '۱' → logprob: -16.62501335144043
    8. '１' → logprob: -16.68751335144043
    9. '  ' → logprob: -17.06251335144043
    10. '```' → logprob: -17.18751335144043

Token 118: '))' (ID: 915)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.01586659997701645
    2. ')' → logprob: -4.765866756439209
    3. '))' → logprob: -5.390866756439209
    4. ',' → logprob: -6.640866756439209
    5. '))))' → logprob: -7.390866756439209
    6. ')))
' → logprob: -7.765866756439209
    7. ' ' → logprob: -9.01586627960205
    8. '),' → logprob: -9.14086627960205
    9. ')/' → logprob: -10.64086627960205
    10. ')));' → logprob: -11.64086627960205

Token 119: ' //' (ID: 602)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.4751496911048889
    2. ')' → logprob: -0.9751496911048889
    3. '/' → logprob: -7.475149631500244
    4. '//' → logprob: -8.725150108337402
    5. ')))' → logprob: -8.725150108337402
    6. ' ))' → logprob: -9.475150108337402
    7. ' )' → logprob: -10.225150108337402
    8. '))
' → logprob: -10.725150108337402
    9. ' /' → logprob: -11.225150108337402
    10. '*' → logprob: -11.350150108337402

Token 120: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0059310514479875565
    2. ' ' → logprob: -5.1309309005737305
    3. ')' → logprob: -13.63093090057373
    4. '1' → logprob: -14.75593090057373
    5. '4' → logprob: -15.25593090057373
    6. '  ' → logprob: -15.63093090057373
    7. '   ' → logprob: -15.75593090057373
    8. '(' → logprob: -17.005931854248047
    9. '<|end|>' → logprob: -17.005931854248047
    10. '202' → logprob: -17.255931854248047

Token 121: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.908022285439074e-05
    2. ' ' → logprob: -9.750059127807617
    3. '1' → logprob: -14.125059127807617
    4. ')' → logprob: -16.750059127807617
    5. '   ' → logprob: -18.375059127807617
    6. '  ' → logprob: -18.875059127807617
    7. '4' → logprob: -19.000059127807617
    8. '
' → logprob: -19.250059127807617
    9. '```' → logprob: -19.375059127807617
    10. '200' → logprob: -19.500059127807617

Token 122: ')' (ID: 8)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.47419750690460205
    2. ')' → logprob: -0.974197506904602
    3. ')))' → logprob: -9.099197387695312
    4. '))
' → logprob: -12.599197387695312
    5. ')
' → logprob: -13.474197387695312
    6. ' )' → logprob: -13.849197387695312
    7. ' ))' → logprob: -14.474197387695312
    8. '),' → logprob: -14.599197387695312
    9. '1' → logprob: -14.974197387695312
    10. ')`' → logprob: -15.474197387695312

Token 123: ' *' (ID: 425)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001718019717372954
    2. '))' → logprob: -6.376718044281006
    3. ' )' → logprob: -12.376717567443848
    4. ')))' → logprob: -12.376717567443848
    5. ')
' → logprob: -12.626717567443848
    6. '`)' → logprob: -13.501717567443848
    7. ')`' → logprob: -13.626717567443848
    8. '**' → logprob: -15.251717567443848
    9. '*' → logprob: -16.001718521118164
    10. '')' → logprob: -16.251718521118164

Token 124: ' (' (ID: 350)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.20396779477596283
    2. ' ' → logprob: -1.703967809677124
    3. '3' → logprob: -6.953967571258545
    4. ' n' → logprob: -7.578967571258545
    5. '1' → logprob: -8.078968048095703
    6. '(n' → logprob: -8.078968048095703
    7. 'n' → logprob: -9.078968048095703
    8. ')' → logprob: -9.578968048095703
    9. '(' → logprob: -9.703968048095703
    10. '6' → logprob: -9.703968048095703

Token 125: 'n' (ID: 77)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.08200091123580933
    2. ' ' → logprob: -3.582000970840454
    3. 'n' → logprob: -3.707000970840454
    4. '(n' → logprob: -4.707000732421875
    5. ' n' → logprob: -4.957000732421875
    6. '3' → logprob: -5.082000732421875
    7. '(' → logprob: -6.957000732421875
    8. '1' → logprob: -7.332000732421875
    9. '4' → logprob: -7.457000732421875
    10. ' (' → logprob: -7.582000732421875

Token 126: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.019666658714413643
    2. ' -' → logprob: -4.01966667175293
    3. ')' → logprob: -6.89466667175293
    4. '(n' → logprob: -8.14466667175293
    5. '*' → logprob: -8.89466667175293
    6. ' ' → logprob: -11.39466667175293
    7. '2' → logprob: -11.64466667175293
    8. '1' → logprob: -11.64466667175293
    9. ' *' → logprob: -11.64466667175293
    10. '*(' → logprob: -11.89466667175293

Token 127: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000156577822053805
    2. '2' → logprob: -9.37515640258789
    3. ' ' → logprob: -9.62515640258789
    4. '
' → logprob: -13.56265640258789
    5. '```' → logprob: -14.25015640258789
    6. '3' → logprob: -14.31265640258789
    7. ' ' → logprob: -14.56265640258789
    8. '...' → logprob: -14.81265640258789
    9. '   ' → logprob: -14.93765640258789
    10. ')' → logprob: -15.18765640258789

Token 128: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005954044871032238
    2. '2' → logprob: -5.130954265594482
    3. ' ' → logprob: -11.005953788757324
    4. '3' → logprob: -12.568453788757324
    5. '```' → logprob: -14.130953788757324
    6. '
' → logprob: -14.505953788757324
    7. 'n' → logprob: -15.005953788757324
    8. '!' → logprob: -15.068453788757324
    9. '１' → logprob: -15.130953788757324
    10. '...' → logprob: -15.380953788757324

Token 129: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1143050566315651
    2. '))' → logprob: -2.239305019378662
    3. ')))' → logprob: -6.739305019378662
    4. ' )' → logprob: -8.36430549621582
    5. '/' → logprob: -11.23930549621582
    6. ' ))' → logprob: -11.36430549621582
    7. '`)' → logprob: -12.23930549621582
    8. ')`' → logprob: -12.48930549621582
    9. ' /' → logprob: -12.61430549621582
    10. ')
' → logprob: -12.61430549621582


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 127
Tokens correctement prédits (1ère position, stricte): 40
Tokens correctement prédits (1ère position, avec adaptation): 40
Tokens correctement prédits (top 10): 100
Précision stricte (1ère position): 31.50%
Précision adaptée (1ère position): 31.50%
Précision (top 10): 78.74%
================================================================================
