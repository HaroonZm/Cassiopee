================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:18:07
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def count_subarrays_with_unique_sum_xor(N, A):
    """
    Compte le nombre de sous-tableaux dans un tableau A de longueur N tels que,
    pour tout i <= l <= r < N, la somme des éléments de A[l:r+1] est égale à 
    leur opération XOR bit-à-bit.

    C'est équivalent à compter le nombre de sous-plages où aucun bit ne se répète.
    
    Args:
        N (int): La longueur du tableau.
        A (list of int): La liste des entiers à traiter.

    Returns:
        int: Le nombre de sous-tableaux respectant la propriété.
    """
    # ex : garde en mémoire la somme ET le xor actuel de la plage [i, j)
    ex = 0  # Somme / Xor actuel de la plage courante
    ans = 0  # Compteur de sous-tableaux valides
    j = 0    # Pointeur de fin de plage (exclusif)
    ex = 0   # Réinitialisé à 0 pour chaque nouveau début de sous-tableau

    for i in range(N):
        # Étend j aussi loin que l'invariant ex + A[j] == ex ^ A[j] est vérifié.
        # Cela signifie qu'aucun bit ne se "collisionne" quand on ajoute A[j].
        while j <= N-1 and ex + A[j] == ex ^ A[j]:
            ex += A[j]   # Met à jour la "somme xor" de la fenêtre
            j += 1       # Avance le pointeur de droite de la fenêtre
        
        # Pour la position i, le nombre de sous-tableaux valides est (j - i)
        ans += j - i

        # Avant de passer à i+1, on retire A[i] de la somme/xor courante.
        ex -= A[i]
    
    return ans


if __name__ == "__main__":
    # Lecture de l'entrée
    N = int(input())
    A = list(map(int, input().split()))

    # Appel de la fonction principale
    result = count_subarrays_with_unique_sum_xor(N, A)

    # Affichage du résultat
    print(result)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' count' (ID: 3605)
  → Token d'amorce (pas de prédiction)

Token 2: '_sub' (ID: 11572)
  → Token d'amorce (pas de prédiction)

Token 3: 'arrays' (ID: 158630)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.31512513756752014
    2. '_' → logprob: -1.5651251077651978
    3. 's' → logprob: -3.3151252269744873
    4. 'strings' → logprob: -4.190124988555908
    5. 'string' → logprob: -5.065124988555908
    6. '_strings' → logprob: -6.690124988555908
    7. '_string' → logprob: -7.190124988555908
    8. '_str' → logprob: -7.440124988555908
    9. '_sequences' → logprob: -7.815124988555908
    10. 'str' → logprob: -8.440125465393066

Token 4: '_with' (ID: 14161)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.031211266294121742
    2. '_' → logprob: -3.5312113761901855
    3. '```' → logprob: -7.2812113761901855
    4. '(_:' → logprob: -8.531210899353027
    5. '(_' → logprob: -8.656210899353027
    6. '_:' → logprob: -9.906210899353027
    7. '(:' → logprob: -10.031210899353027
    8. '(**' → logprob: -10.281210899353027
    9. '**' → logprob: -10.531210899353027
    10. '_(' → logprob: -10.781210899353027

Token 5: '_unique' (ID: 51840)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.261383593082428
    2. '_sum' → logprob: -1.6363835334777832
    3. '_at' → logprob: -4.511383533477783
    4. '_k' → logprob: -5.136383533477783
    5. '_max' → logprob: -5.136383533477783
    6. '_g' → logprob: -5.761383533477783
    7. '_a' → logprob: -7.011383533477783
    8. ' ' → logprob: -7.011383533477783
    9. '_unique' → logprob: -7.136383533477783
    10. '_given' → logprob: -7.136383533477783

Token 6: '_sum' (ID: 29859)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.032535210251808167
    2. '_elements' → logprob: -3.6575353145599365
    3. '(' → logprob: -5.907535076141357
    4. '_unique' → logprob: -6.282535076141357
    5. 's' → logprob: -7.657535076141357
    6. '_chars' → logprob: -8.907535552978516
    7. '```' → logprob: -9.282535552978516
    8. '_numbers' → logprob: -9.282535552978516
    9. '_element' → logprob: -9.407535552978516
    10. '_(' → logprob: -9.407535552978516

Token 7: '_x' (ID: 7054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004464773926883936
    2. '_' → logprob: -5.504464626312256
    3. '(:' → logprob: -9.129465103149414
    4. '(_:' → logprob: -9.254465103149414
    5. '(_' → logprob: -10.379465103149414
    6. '```' → logprob: -10.629465103149414
    7. '_:' → logprob: -10.879465103149414
    8. ':' → logprob: -11.129465103149414
    9. '():' → logprob: -11.379465103149414
    10. '('' → logprob: -11.379465103149414

Token 8: 'or' (ID: 267)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.016605151817202568
    2. '(:' → logprob: -5.016605377197266
    3. '(_:' → logprob: -5.766605377197266
    4. '_' → logprob: -6.141605377197266
    5. '```' → logprob: -6.641605377197266
    6. '():' → logprob: -6.891605377197266
    7. '(_' → logprob: -7.141605377197266
    8. '_:' → logprob: -7.766605377197266
    9. '(":' → logprob: -8.391605377197266
    10. ':' → logprob: -8.516605377197266

Token 9: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004640642087906599
    2. '(:' → logprob: -5.754640579223633
    3. '():' → logprob: -7.004640579223633
    4. '(_:' → logprob: -8.879640579223633
    5. '_' → logprob: -9.004640579223633
    6. ':' → logprob: -9.379640579223633
    7. '```' → logprob: -10.004640579223633
    8. '_:' → logprob: -10.504640579223633
    9. '(":' → logprob: -11.004640579223633
    10. '(_' → logprob: -11.004640579223633

Token 10: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10754738003015518
    2. '):' → logprob: -2.4825472831726074
    3. ')' → logprob: -4.232547283172607
    4. '_,' → logprob: -6.232547283172607
    5. '_' → logprob: -6.857547283172607
    6. '```' → logprob: -7.607547283172607
    7. '(' → logprob: -9.482547760009766
    8. ',_' → logprob: -10.232547760009766
    9. 's' → logprob: -10.482547760009766
    10. 'def' → logprob: -10.482547760009766

Token 11: ' A' (ID: 355)
  Prédit: ' arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arr' → logprob: -0.7176993489265442
    2. 'arr' → logprob: -1.5926992893218994
    3. ' A' → logprob: -1.7176992893218994
    4. 'A' → logprob: -2.7176992893218994
    5. ' array' → logprob: -3.4676992893218994
    6. 'array' → logprob: -4.7176995277404785
    7. ' K' → logprob: -4.8426995277404785
    8. 'a' → logprob: -5.7176995277404785
    9. ')' → logprob: -5.9676995277404785
    10. ' a' → logprob: -6.4676995277404785

Token 12: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.012609012424945831
    2. ',' → logprob: -5.262609004974365
    3. ':' → logprob: -5.387609004974365
    4. ')' → logprob: -6.012609004974365
    5. '```' → logprob: -8.387609481811523
    6. '):
' → logprob: -9.762609481811523
    7. '`:' → logprob: -11.137609481811523
    8. ''):' → logprob: -12.387609481811523
    9. '`' → logprob: -12.887609481811523
    10. '**' → logprob: -13.137609481811523

Token 13: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012614787556231022
    2. '```' → logprob: -4.887614727020264
    3. '(:' → logprob: -7.137614727020264
    4. ':
' → logprob: -7.137614727020264
    5. '`:' → logprob: -7.262614727020264
    6. '   ' → logprob: -7.512614727020264
    7. '(' → logprob: -7.512614727020264
    8. '():' → logprob: -7.637614727020264
    9. '':' → logprob: -8.137615203857422
    10. '``' → logprob: -8.887615203857422

Token 14: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3231772780418396
    2. '```' → logprob: -1.4481773376464844
    3. ':' → logprob: -3.8231773376464844
    4. '``' → logprob: -5.198177337646484
    5. '`' → logprob: -5.573177337646484
    6. '_' → logprob: -5.823177337646484
    7. '       ' → logprob: -6.698177337646484
    8. 'counter' → logprob: -6.823177337646484
    9. ':
' → logprob: -7.323177337646484
    10. ' ' → logprob: -7.448177337646484

Token 15: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17267945408821106
    2. 'c' → logprob: -3.0476794242858887
    3. 'n' → logprob: -3.0476794242858887
    4. '```' → logprob: -4.297679424285889
    5. 'count' → logprob: -4.422679424285889
    6. 'i' → logprob: -5.297679424285889
    7. '#' → logprob: -5.297679424285889
    8. 'result' → logprob: -5.547679424285889
    9. 'total' → logprob: -5.922679424285889
    10. ' ' → logprob: -5.922679424285889

Token 16: ' Comp' (ID: 5211)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -1.0974704027175903
    2. 'Count' → logprob: -1.5974704027175903
    3. 'C' → logprob: -1.8474704027175903
    4. 'Returns' → logprob: -2.347470283508301
    5. 'Find' → logprob: -2.972470283508301
    6. 'Calculate' → logprob: -3.347470283508301
    7. 'Counts' → logprob: -3.597470283508301
    8. 'Calcul' → logprob: -4.222470283508301
    9. '   ' → logprob: -4.472470283508301
    10. 'Return' → logprob: -4.847470283508301

Token 17: 'te' (ID: 411)
  Prédit: 'ute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ute' → logprob: -0.2030046284198761
    2. 'utes' → logprob: -2.5780045986175537
    3. 'lete' → logprob: -3.0780045986175537
    4. 'ut' → logprob: -3.2030045986175537
    5. '```' → logprob: -4.828004837036133
    6. 'let' → logprob: -5.203004837036133
    7. 'l' → logprob: -6.203004837036133
    8. 'u' → logprob: -6.203004837036133
    9. 'letes' → logprob: -6.953004837036133
    10. 'le' → logprob: -7.703004837036133

Token 18: ' le' (ID: 505)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.23741917312145233
    2. ' ' → logprob: -1.7374191284179688
    3. 's' → logprob: -4.362419128417969
    4. ' de' → logprob: -4.737419128417969
    5. ' des' → logprob: -5.112419128417969
    6. '_' → logprob: -5.612419128417969
    7. '  ' → logprob: -7.362419128417969
    8. ' d' → logprob: -7.362419128417969
    9. ' r' → logprob: -7.612419128417969
    10. '   ' → logprob: -7.862419128417969

Token 19: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.022766781970858574
    2. ' ' → logprob: -4.022766590118408
    3. 'nombre' → logprob: -6.522766590118408
    4. 's' → logprob: -6.522766590118408
    5. 'r' → logprob: -7.397766590118408
    6. ' nombres' → logprob: -7.522766590118408
    7. ' number' → logprob: -8.897767066955566
    8. '   ' → logprob: -9.397767066955566
    9. '  ' → logprob: -9.897767066955566
    10. ' r' → logprob: -10.022767066955566

Token 20: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1995372772216797
    2. '_' → logprob: -2.1995372772216797
    3. ' de' → logprob: -2.9495372772216797
    4. '_de' → logprob: -4.82453727722168
    5. '  ' → logprob: -5.44953727722168
    6. ' d' → logprob: -5.94953727722168
    7. ' des' → logprob: -7.82453727722168
    8. '_d' → logprob: -8.07453727722168
    9. ' _' → logprob: -8.57453727722168
    10. '_des' → logprob: -8.57453727722168

Token 21: ' sous' (ID: 14487)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6251274347305298
    2. ' sous' → logprob: -1.2501274347305298
    3. ' ' → logprob: -1.8751274347305298
    4. ' sub' → logprob: -4.12512731552124
    5. 'sub' → logprob: -6.50012731552124
    6. '_' → logprob: -6.50012731552124
    7. ' s' → logprob: -6.62512731552124
    8. '   ' → logprob: -7.00012731552124
    9. ' espaces' → logprob: -7.12512731552124
    10. '  ' → logprob: -7.68762731552124

Token 22: '-table' (ID: 35909)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0041512916795909405
    2. '-table' → logprob: -5.754151344299316
    3. '_' → logprob: -8.254151344299316
    4. '\' → logprob: -8.754151344299316
    5. '-s' → logprob: -9.004151344299316
    6. '-cha' → logprob: -9.379151344299316
    7. '   ' → logprob: -9.629151344299316
    8. '-tab' → logprob: -10.379151344299316
    9. '\-' → logprob: -10.379151344299316
    10. '-list' → logprob: -10.629151344299316

Token 23: 'aux' (ID: 5454)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6124480962753296
    2. 's' → logprob: -1.4874480962753296
    3. 'nt' → logprob: -1.8624480962753296
    4. 'aux' → logprob: -4.112448215484619
    5. '-' → logprob: -4.237448215484619
    6. 'au' → logprob: -4.862448215484619
    7. 'a' → logprob: -5.112448215484619
    8. '\' → logprob: -5.237448215484619
    9. '_n' → logprob: -5.737448215484619
    10. '_' → logprob: -5.737448215484619

Token 24: ' dans' (ID: 2671)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06615046411752701
    2. ' dont' → logprob: -3.191150426864624
    3. ' whose' → logprob: -5.441150665283203
    4. ' ayant' → logprob: -5.816150665283203
    5. 'dont' → logprob: -5.941150665283203
    6. 's' → logprob: -6.316150665283203
    7. '   ' → logprob: -6.566150665283203
    8. '```' → logprob: -7.191150665283203
    9. ' à' → logprob: -7.316150665283203
    10. '  ' → logprob: -7.316150665283203

Token 25: ' un' (ID: 537)
  Prédit: ' lesquels'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lesquels' → logprob: -0.6683610081672668
    2. ' A' → logprob: -1.043360948562622
    3. 'A' → logprob: -2.918360948562622
    4. ' which' → logprob: -4.043361186981201
    5. ' ' → logprob: -4.043361186981201
    6. '```' → logprob: -4.543361186981201
    7. ' lequel' → logprob: -4.668361186981201
    8. ' N' → logprob: -4.918361186981201
    9. ' la' → logprob: -5.543361186981201
    10. '   ' → logprob: -6.043361186981201

Token 26: ' tableau' (ID: 67053)
  Prédit: ' tableau'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tableau' → logprob: -0.3735000789165497
    2. ' array' → logprob: -1.748500108718872
    3. 'array' → logprob: -3.248500108718872
    4. '   ' → logprob: -3.373500108718872
    5. 'table' → logprob: -4.123499870300293
    6. ' ' → logprob: -4.373499870300293
    7. 'e' → logprob: -5.248499870300293
    8. '```' → logprob: -5.248499870300293
    9. ' table' → logprob: -5.748499870300293
    10. 'A' → logprob: -5.935999870300293

Token 27: ' A' (ID: 355)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5093173384666443
    2. ' dont' → logprob: -1.509317398071289
    3. ',' → logprob: -3.509317398071289
    4. ' donné' → logprob: -3.634317398071289
    5. 'dont' → logprob: -4.009317398071289
    6. ' où' → logprob: -4.259317398071289
    7. ' tel' → logprob: -4.259317398071289
    8. '   ' → logprob: -4.634317398071289
    9. ' ayant' → logprob: -4.634317398071289
    10. ' de' → logprob: -4.759317398071289

Token 28: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9358616471290588
    2. ' dont' → logprob: -1.185861587524414
    3. ' tels' → logprob: -2.560861587524414
    4. ',' → logprob: -3.185861587524414
    5. 'dont' → logprob: -3.310861587524414
    6. ' qui' → logprob: -3.685861587524414
    7. ' tel' → logprob: -3.810861587524414
    8. '   ' → logprob: -4.185861587524414
    9. ' ayant' → logprob: -4.310861587524414
    10. ' où' → logprob: -4.685861587524414

Token 29: ' longueur' (ID: 104613)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.6454381942749023
    2. 'long' → logprob: -2.3954381942749023
    3. ' longueur' → logprob: -2.3954381942749023
    4. ' taille' → logprob: -2.6454381942749023
    5. 'int' → logprob: -2.8954381942749023
    6. ' N' → logprob: -3.3954381942749023
    7. ' ent' → logprob: -3.3954381942749023
    8. 'N' → logprob: -3.8954381942749023
    9. 't' → logprob: -4.145438194274902
    10. '```' → logprob: -4.270438194274902

Token 30: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.5199819803237915
    2. ' ' → logprob: -1.7699819803237915
    3. ' donné' → logprob: -1.8949819803237915
    4. ' donnée' → logprob: -2.894981861114502
    5. '```' → logprob: -4.519981861114502
    6. 'N' → logprob: -5.144981861114502
    7. ' données' → logprob: -5.519981861114502
    8. ' given' → logprob: -6.019981861114502
    9. '   ' → logprob: -6.769981861114502
    10. ' `' → logprob: -7.019981861114502

Token 31: ' tels' (ID: 62007)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3112362325191498
    2. '   ' → logprob: -2.6862361431121826
    3. ' dont' → logprob: -2.8112361431121826
    4. ',' → logprob: -2.9362361431121826
    5. ' tels' → logprob: -3.6862361431121826
    6. 'dont' → logprob: -4.686236381530762
    7. '```' → logprob: -4.811236381530762
    8. ' qui' → logprob: -4.811236381530762
    9. ' tel' → logprob: -5.311236381530762
    10. ' pour' → logprob: -5.686236381530762

Token 32: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.49693188071250916
    2. 'que' → logprob: -0.9969319105148315
    3. ' ' → logprob: -4.996932029724121
    4. '```' → logprob: -5.121932029724121
    5. '   ' → logprob: -5.246932029724121
    6. 'u' → logprob: -5.996932029724121
    7. 'à' → logprob: -7.496932029724121
    8. ''à' → logprob: -8.371932029724121
    9. '       ' → logprob: -8.621932029724121
    10. '    ' → logprob: -8.621932029724121

Token 33: ',
' (ID: 412)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.3191573917865753
    2. 'la' → logprob: -1.444157361984253
    3. 'leur' → logprob: -4.194157600402832
    4. ' chaque' → logprob: -4.819157600402832
    5. 'le' → logprob: -5.069157600402832
    6. ' leur' → logprob: -6.069157600402832
    7. ' le' → logprob: -6.694157600402832
    8. ' ' → logprob: -7.319157600402832
    9. '   ' → logprob: -7.569157600402832
    10. ' ' → logprob: -7.694157600402832

Token 34: '   ' (ID: 271)
  Prédit: ' leur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' leur' → logprob: -1.3305027484893799
    2. ' la' → logprob: -1.4555027484893799
    3. '   ' → logprob: -2.33050274848938
    4. ' chaque' → logprob: -2.33050274848938
    5. ' ' → logprob: -2.70550274848938
    6. ' le' → logprob: -2.83050274848938
    7. '```' → logprob: -3.33050274848938
    8. '    ' → logprob: -3.58050274848938
    9. 'leur' → logprob: -3.58050274848938
    10. ' l' → logprob: -4.080502510070801

Token 35: ' pour' (ID: 1930)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.9095102548599243
    2. ' leur' → logprob: -1.6595102548599243
    3. ' chaque' → logprob: -2.7845101356506348
    4. ' ' → logprob: -2.9095101356506348
    5. ' le' → logprob: -2.9095101356506348
    6. ' whose' → logprob: -3.0345101356506348
    7. ' l' → logprob: -3.0345101356506348
    8. 's' → logprob: -3.7845101356506348
    9. ' dont' → logprob: -3.9095101356506348
    10. ' leurs' → logprob: -4.159510135650635

Token 36: ' tout' (ID: 5501)
  Prédit: ' chaque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.23191770911216736
    2. 'tout' → logprob: -2.1069176197052
    3. ' tout' → logprob: -3.1069176197052
    4. ' toute' → logprob: -4.731917858123779
    5. ' ' → logprob: -4.856917858123779
    6. 't' → logprob: -4.981917858123779
    7. ' tous' → logprob: -5.356917858123779
    8. ' every' → logprob: -6.356917858123779
    9. ' le' → logprob: -6.606917858123779
    10. ' la' → logprob: -7.231917858123779

Token 37: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.11525192856788635
    2. 'i' → logprob: -3.1152520179748535
    3. 's' → logprob: -3.8652520179748535
    4. ' sous' → logprob: -4.2402520179748535
    5. ' élément' → logprob: -4.9902520179748535
    6. 'élé' → logprob: -5.7402520179748535
    7. ' le' → logprob: -5.9902520179748535
    8. '```' → logprob: -5.9902520179748535
    9. ' element' → logprob: -6.3652520179748535
    10. ' la' → logprob: -6.3652520179748535

Token 38: ' <=' (ID: 5017)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.15584005415439606
    2. ' ,' → logprob: -2.7808401584625244
    3. '<|end|>' → logprob: -4.405839920043945
    4. 's' → logprob: -4.655839920043945
    5. ' <' → logprob: -4.780839920043945
    6. ' in' → logprob: -4.905839920043945
    7. '=' → logprob: -5.030839920043945
    8. ' =' → logprob: -5.155839920043945
    9. ' >=' → logprob: -5.530839920043945
    10. ' ' → logprob: -5.530839920043945

Token 39: ' l' (ID: 305)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.14675173163414001
    2. 'j' → logprob: -2.271751642227173
    3. ' k' → logprob: -4.271751880645752
    4. ' ' → logprob: -4.521751880645752
    5. 'k' → logprob: -5.271751880645752
    6. ' i' → logprob: -6.646751880645752
    7. 'i' → logprob: -8.021751403808594
    8. ' n' → logprob: -8.271751403808594
    9. ' x' → logprob: -8.771751403808594
    10. '  ' → logprob: -8.834251403808594

Token 40: ' <=' (ID: 5017)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.44120991230010986
    2. ':' → logprob: -1.9412099123001099
    3. ' <' → logprob: -3.5662097930908203
    4. '<=' → logprob: -3.5662097930908203
    5. '<' → logprob: -3.6912097930908203
    6. ' <=' → logprob: -3.9412097930908203
    7. '```' → logprob: -3.9412097930908203
    8. '<|end|>' → logprob: -4.06620979309082
    9. '-' → logprob: -4.69120979309082
    10. 's' → logprob: -4.94120979309082

Token 41: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.18105168640613556
    2. ' r' → logprob: -1.8060517311096191
    3. 'j' → logprob: -7.181051731109619
    4. ' ' → logprob: -8.431051254272461
    5. ' j' → logprob: -9.181051254272461
    6. 'u' → logprob: -9.431051254272461
    7. '   ' → logprob: -9.806051254272461
    8. 'i' → logprob: -10.306051254272461
    9. ' i' → logprob: -11.431051254272461
    10. ' u' → logprob: -11.556051254272461

Token 42: ' <' (ID: 464)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.022805938497185707
    2. ' ,' → logprob: -3.89780592918396
    3. ':' → logprob: -6.772806167602539
    4. '   ' → logprob: -7.522806167602539
    5. ' :' → logprob: -8.272806167602539
    6. ' et' → logprob: -9.397806167602539
    7. '```' → logprob: -9.522806167602539
    8. 's' → logprob: -10.147806167602539
    9. ' ' → logprob: -10.272806167602539
    10. ',
' → logprob: -11.897806167602539

Token 43: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.04968802258372307
    2. ' N' → logprob: -3.0496881008148193
    3. '=' → logprob: -7.92468786239624
    4. ' ' → logprob: -8.049688339233398
    5. '=N' → logprob: -9.049688339233398
    6. 'n' → logprob: -9.424688339233398
    7. ' ' → logprob: -9.924688339233398
    8. 'len' → logprob: -10.799688339233398
    9. '  ' → logprob: -10.799688339233398
    10. '   ' → logprob: -10.924688339233398

Token 44: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009372105821967125
    2. ' ,' → logprob: -5.259372234344482
    3. '   ' → logprob: -5.634372234344482
    4. '```' → logprob: -8.634371757507324
    5. ' ' → logprob: -9.009371757507324
    6. ':' → logprob: -9.634371757507324
    7. ',
' → logprob: -9.884371757507324
    8. ' et' → logprob: -10.759371757507324
    9. ' :' → logprob: -11.384371757507324
    10. 's' → logprob: -11.509371757507324

Token 45: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.8699400424957275
    2. '   ' → logprob: -1.2449400424957275
    3. ' l' → logprob: -2.4949400424957275
    4. ',' → logprob: -2.6199400424957275
    5. ' le' → logprob: -2.9949400424957275
    6. 'le' → logprob: -4.119939804077148
    7. ' ' → logprob: -4.369939804077148
    8. 'l' → logprob: -4.494939804077148
    9. 's' → logprob: -4.994939804077148
    10. '    ' → logprob: -5.244939804077148

Token 46: ' somme' (ID: 64484)
  Prédit: ' somme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' somme' → logprob: -0.13156160712242126
    2. 's' → logprob: -2.256561517715454
    3. ' sum' → logprob: -5.006561756134033
    4. ' ' → logprob: -5.381561756134033
    5. ' valeur' → logprob: -6.131561756134033
    6. ' som' → logprob: -6.631561756134033
    7. ' somm' → logprob: -7.381561756134033
    8. 'sum' → logprob: -7.381561756134033
    9. '   ' → logprob: -7.506561756134033
    10. ' fonction' → logprob: -8.006561279296875

Token 47: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -1.1170947551727295
    2. '_' → logprob: -1.2420947551727295
    3. ' _' → logprob: -2.7420947551727295
    4. '    ' → logprob: -3.1170947551727295
    5. ' ' → logprob: -3.2420947551727295
    6. ' de' → logprob: -3.6170947551727295
    7. ' et' → logprob: -3.7420947551727295
    8. '<|end|>' → logprob: -3.7420947551727295
    9. ' xor' → logprob: -3.8670947551727295
    10. '   ' → logprob: -3.9920947551727295

Token 48: ' éléments' (ID: 57375)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.32923153042793274
    2. 'A' → logprob: -2.4542315006256104
    3. 'élé' → logprob: -2.4542315006256104
    4. 's' → logprob: -2.7042315006256104
    5. ' sous' → logprob: -4.2042317390441895
    6. ' éléments' → logprob: -4.5792317390441895
    7. ' elements' → logprob: -4.7042317390441895
    8. ' ' → logprob: -6.9542317390441895
    9. 'elements' → logprob: -6.9542317390441895
    10. ' s' → logprob: -7.0792317390441895

Token 49: ' de' (ID: 334)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -1.2374037504196167
    2. ' de' → logprob: -1.8624037504196167
    3. '   ' → logprob: -2.4874038696289062
    4. ' est' → logprob: -2.6124038696289062
    5. ' XOR' → logprob: -3.2374038696289062
    6. 's' → logprob: -3.3624038696289062
    7. ' entre' → logprob: -3.3624038696289062
    8. ' dans' → logprob: -3.4874038696289062
    9. '```' → logprob: -3.6124038696289062
    10. ' xor' → logprob: -3.6124038696289062

Token 50: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.09526161104440689
    2. 'A' → logprob: -2.595261573791504
    3. ' la' → logprob: -5.470261573791504
    4. 's' → logprob: -5.845261573791504
    5. ' ' → logprob: -5.845261573791504
    6. ' l' → logprob: -5.845261573791504
    7. 'l' → logprob: -6.595261573791504
    8. ' ce' → logprob: -8.095261573791504
    9. ' sous' → logprob: -8.595261573791504
    10. '```' → logprob: -8.595261573791504

Token 51: '[l' (ID: 38286)
  Prédit: '[l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -0.4342833161354065
    2. '[' → logprob: -1.0592832565307617
    3. '[r' → logprob: -6.059283256530762
    4. ' [' → logprob: -7.059283256530762
    5. '   ' → logprob: -7.559283256530762
    6. '```' → logprob: -7.809283256530762
    7. '\[' → logprob: -8.309283256530762
    8. 'l' → logprob: -8.559283256530762
    9. ' l' → logprob: -8.559283256530762
    10. ' ' → logprob: -8.934283256530762

Token 52: ':r' (ID: 118417)
  Prédit: ':r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':r' → logprob: -0.22383655607700348
    2. ':' → logprob: -1.7238365411758423
    3. ']' → logprob: -4.973836421966553
    4. ' :' → logprob: -5.223836421966553
    5. '...' → logprob: -5.723836421966553
    6. 'r' → logprob: -5.848836421966553
    7. ' à' → logprob: -6.348836421966553
    8. ' ' → logprob: -7.848836421966553
    9. 'à' → logprob: -8.098836898803711
    10. '..' → logprob: -8.348836898803711

Token 53: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0023298633750528097
    2. ' +' → logprob: -6.3773298263549805
    3. ']' → logprob: -7.6273298263549805
    4. ']+' → logprob: -10.25232982635498
    5. 'e' → logprob: -10.37732982635498
    6. 's' → logprob: -10.87732982635498
    7. '+]' → logprob: -11.37732982635498
    8. ' ' → logprob: -11.75232982635498
    9. 'a' → logprob: -11.75232982635498
    10. ':' → logprob: -12.62732982635498

Token 54: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008222569595091045
    2. ']' → logprob: -7.375822067260742
    3. ' ' → logprob: -9.125822067260742
    4. '+' → logprob: -9.500822067260742
    5. ']+' → logprob: -13.000822067260742
    6. '```' → logprob: -13.000822067260742
    7. '   ' → logprob: -13.375822067260742
    8. '  ' → logprob: -14.500822067260742
    9. 'i' → logprob: -14.500822067260742
    10. 's' → logprob: -14.500822067260742

Token 55: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004592588171362877
    2. ' ]' → logprob: -5.504592418670654
    3. ' est' → logprob: -9.004592895507812
    4. '```' → logprob: -9.754592895507812
    5. '],' → logprob: -9.879592895507812
    6. 'est' → logprob: -10.504592895507812
    7. ')' → logprob: -10.629592895507812
    8. '']' → logprob: -10.942092895507812
    9. '   ' → logprob: -10.942092895507812
    10. 's' → logprob: -11.192092895507812

Token 56: ' est' (ID: 893)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3173160552978516
    2. ' )' → logprob: -1.8173160552978516
    3. ' est' → logprob: -1.8173160552978516
    4. ' ' → logprob: -1.9423160552978516
    5. '   ' → logprob: -2.6923160552978516
    6. ' ^' → logprob: -3.0673160552978516
    7. ' soit' → logprob: -4.192316055297852
    8. '```' → logprob: -4.192316055297852
    9. ',' → logprob: -4.442316055297852
    10. 's' → logprob: -4.567316055297852

Token 57: ' ég' (ID: 33150)
  Prédit: ' ég'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ég' → logprob: -0.0448211245238781
    2. ' unique' → logprob: -3.66982102394104
    3. ' ' → logprob: -4.919821262359619
    4. 'égal' → logprob: -5.794821262359619
    5. '0' → logprob: -6.419821262359619
    6. ' égal' → logprob: -6.669821262359619
    7. 'unique' → logprob: -7.419821262359619
    8. 'ég' → logprob: -7.544821262359619
    9. ' eg' → logprob: -7.794821262359619
    10. ' n' → logprob: -7.919821262359619

Token 58: 'ale' (ID: 1167)
  Prédit: 'ale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ale' → logprob: -0.006177864037454128
    2. '```' → logprob: -6.25617790222168
    3. 'a' → logprob: -6.50617790222168
    4. 'al' → logprob: -7.38117790222168
    5. 'gal' → logprob: -8.50617790222168
    6. '`' → logprob: -8.50617790222168
    7. 'u' → logprob: -8.63117790222168
    8. 'e' → logprob: -8.75617790222168
    9. 'uale' → logprob: -8.75617790222168
    10. '}' → logprob: -8.88117790222168

Token 59: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.17272299528121948
    2. ' ' → logprob: -2.4227230548858643
    3. '  ' → logprob: -3.4227230548858643
    4. '<|end|>' → logprob: -4.047722816467285
    5. ' au' → logprob: -5.047722816467285
    6. '   ' → logprob: -6.047722816467285
    7. '```' → logprob: -6.172722816467285
    8. ' a' → logprob: -6.297722816467285
    9. 'à' → logprob: -6.422722816467285
    10. ''à' → logprob: -6.797722816467285

Token 60: ' 
' (ID: 793)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.6831496357917786
    2. ' ' → logprob: -1.6831495761871338
    3. ' leur' → logprob: -1.9331495761871338
    4. ' A' → logprob: -3.183149576187134
    5. ' l' → logprob: -3.683149576187134
    6. 'A' → logprob: -4.183149814605713
    7. 'leur' → logprob: -4.308149814605713
    8. '0' → logprob: -4.433149814605713
    9. ' xor' → logprob: -4.683149814605713
    10. 'l' → logprob: -5.058149814605713

Token 61: '   ' (ID: 271)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.7832140326499939
    2. ' A' → logprob: -2.0332140922546387
    3. 'A' → logprob: -2.1582140922546387
    4. ' ' → logprob: -2.6582140922546387
    5. ' leur' → logprob: -2.7832140922546387
    6. '   ' → logprob: -3.7832140922546387
    7. 'l' → logprob: -4.033214092254639
    8. ' l' → logprob: -4.033214092254639
    9. ' xor' → logprob: -4.158214092254639
    10. 'a' → logprob: -4.283214092254639

Token 62: ' leur' (ID: 9853)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.8954567313194275
    2. 'A' → logprob: -1.2704567909240723
    3. 'la' → logprob: -1.7704567909240723
    4. ' A' → logprob: -2.6454567909240723
    5. 'l' → logprob: -4.270456790924072
    6. ' ' → logprob: -4.645456790924072
    7. 's' → logprob: -5.145456790924072
    8. '0' → logprob: -5.270456790924072
    9. ' leur' → logprob: -5.395456790924072
    10. 'a' → logprob: -5.645456790924072

Token 63: ' opération' (ID: 86023)
  Prédit: ' xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' xor' → logprob: -0.43585118651390076
    2. 'xor' → logprob: -1.9358512163162231
    3. 's' → logprob: -2.5608510971069336
    4. ' ' → logprob: -3.0608510971069336
    5. ' XOR' → logprob: -3.0608510971069336
    6. ' somme' → logprob: -4.310851097106934
    7. '_' → logprob: -5.310851097106934
    8. '_x' → logprob: -6.060851097106934
    9. '```' → logprob: -6.185851097106934
    10. '^' → logprob: -6.248351097106934

Token 64: ' XOR' (ID: 147209)
  Prédit: ' xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' xor' → logprob: -0.8179791569709778
    2. ' ^' → logprob: -1.442979097366333
    3. '^' → logprob: -1.942979097366333
    4. ' de' → logprob: -2.317979097366333
    5. ' XOR' → logprob: -3.192979097366333
    6. ' ' → logprob: -4.192979335784912
    7. 's' → logprob: -4.817979335784912
    8. 'xor' → logprob: -5.192979335784912
    9. '_' → logprob: -6.067979335784912
    10. '"' → logprob: -6.817979335784912

Token 65: ' bit' (ID: 3546)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.2037562131881714
    2. '   ' → logprob: -1.2037562131881714
    3. '\n' → logprob: -2.078756332397461
    4. ' ' → logprob: -2.828756332397461
    5. '```' → logprob: -3.328756332397461
    6. '"""
' → logprob: -3.453756332397461
    7. '"' → logprob: -3.703756332397461
    8. '"""' → logprob: -3.953756332397461
    9. '\' → logprob: -4.328756332397461
    10. ':
' → logprob: -4.328756332397461

Token 66: '-à' (ID: 56297)
  Prédit: '-à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-à' → logprob: -0.6638975739479065
    2. 'wise' → logprob: -1.4138975143432617
    3. '-' → logprob: -2.1638975143432617
    4. ' à' → logprob: -2.7888975143432617
    5. 'à' → logprob: -3.7888975143432617
    6. '^' → logprob: -3.7888975143432617
    7. '   ' → logprob: -4.663897514343262
    8. '```' → logprob: -5.413897514343262
    9. '-wise' → logprob: -6.538897514343262
    10. ' ' → logprob: -6.788897514343262

Token 67: '-bit' (ID: 33736)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.014391837641596794
    2. ' bit' → logprob: -5.014391899108887
    3. '1' → logprob: -5.639391899108887
    4. 'n' → logprob: -6.639391899108887
    5. 'b' → logprob: -7.514391899108887
    6. ' ' → logprob: -7.764391899108887
    7. '_bit' → logprob: -7.764391899108887
    8. '```' → logprob: -8.014391899108887
    9. '-bit' → logprob: -8.264391899108887
    10. 'bits' → logprob: -8.514391899108887

Token 68: '.

' (ID: 364)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3509323000907898
    2. '   ' → logprob: -2.1009323596954346
    3. ' ' → logprob: -3.2259323596954346
    4. ' :' → logprob: -3.3509323596954346
    5. '\n' → logprob: -3.6009323596954346
    6. '.' → logprob: -4.3509321212768555
    7. '\' → logprob: -4.6009321212768555
    8. ':
' → logprob: -4.7259321212768555
    9. '```' → logprob: -4.9759321212768555
    10. ',' → logprob: -5.1009321212768555

Token 69: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.085614800453186
    2. '"""
' → logprob: -1.335614800453186
    3. '"""' → logprob: -1.710614800453186
    4. '"' → logprob: -2.0856146812438965
    5. '\n' → logprob: -3.2106146812438965
    6. '```' → logprob: -4.3356146812438965
    7. ''' → logprob: -4.4606146812438965
    8. ' ' → logprob: -5.0856146812438965
    9. '""' → logprob: -5.5856146812438965
    10. ' """
' → logprob: -5.9606146812438965

Token 70: ' C' (ID: 363)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.488911509513855
    2. '"""' → logprob: -2.1139116287231445
    3. ':' → logprob: -2.2389116287231445
    4. '```' → logprob: -2.9889116287231445
    5. '"' → logprob: -3.2389116287231445
    6. '"""
' → logprob: -3.6139116287231445
    7. '\n' → logprob: -4.2389116287231445
    8. '
' → logprob: -4.9889116287231445
    9. ':
' → logprob: -5.7389116287231445
    10. '""' → logprob: -5.8639116287231445

Token 71: ''est' (ID: 6616)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.27044248580932617
    2. 'o' → logprob: -1.5204424858093262
    3. ''''' → logprob: -5.145442485809326
    4. 'a' → logprob: -5.270442485809326
    5. ''' → logprob: -6.145442485809326
    6. '"""' → logprob: -6.770442485809326
    7. 'r' → logprob: -7.270442485809326
    8. ':' → logprob: -7.395442485809326
    9. '_' → logprob: -7.770442485809326
    10. 'u' → logprob: -8.145442962646484

Token 72: ' équ' (ID: 18899)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8946517109870911
    2. ' un' → logprob: -2.1446516513824463
    3. ' à' → logprob: -2.3946516513824463
    4. ' ' → logprob: -2.6446516513824463
    5. '_' → logprob: -3.0196516513824463
    6. ' ' → logprob: -3.0196516513824463
    7. ' une' → logprob: -3.7696516513824463
    8. 'a' → logprob: -3.7696516513824463
    9. ' a' → logprob: -4.019651889801025
    10. '-à' → logprob: -4.144651889801025

Token 73: 'ivalent' (ID: 19253)
  Prédit: 'ivalent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ivalent' → logprob: -0.06817959249019623
    2. 'ival' → logprob: -2.8181796073913574
    3. 'iv' → logprob: -5.443179607391357
    4. 'i' → logprob: -6.443179607391357
    5. 'ivo' → logprob: -9.5681791305542
    6. '}' → logprob: -10.0681791305542
    7. 'a' → logprob: -10.1931791305542
    8. 'ivalence' → logprob: -10.8181791305542
    9. 'ilibre' → logprob: -11.1931791305542
    10. 'ilibr' → logprob: -11.6931791305542

Token 74: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.0637274906039238
    2. 'à' → logprob: -3.688727378845215
    3. ' au' → logprob: -4.188727378845215
    4. ' de' → logprob: -4.438727378845215
    5. 'au' → logprob: -5.563727378845215
    6. ' d' → logprob: -6.438727378845215
    7. ''à' → logprob: -6.688727378845215
    8. 'de' → logprob: -7.313727378845215
    9. '```' → logprob: -7.438727378845215
    10. '  ' → logprob: -7.563727378845215

Token 75: ' compter' (ID: 81694)
  Prédit: ' dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dire' → logprob: -0.5364435911178589
    2. 'dire' → logprob: -1.2864435911178589
    3. 's' → logprob: -2.2864437103271484
    4. 'chercher' → logprob: -4.661443710327148
    5. 'tr' → logprob: -5.036443710327148
    6. ' ce' → logprob: -5.536443710327148
    7. 'l' → logprob: -5.661443710327148
    8. ':' → logprob: -6.036443710327148
    9. 'la' → logprob: -6.536443710327148
    10. '"' → logprob: -6.661443710327148

Token 76: ' le' (ID: 505)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.35291028022766113
    2. ' le' → logprob: -1.8529102802276611
    3. ' des' → logprob: -2.727910280227661
    4. 'les' → logprob: -4.227910041809082
    5. ' la' → logprob: -4.477910041809082
    6. ' l' → logprob: -4.602910041809082
    7. '_le' → logprob: -4.977910041809082
    8. 'le' → logprob: -5.227910041809082
    9. '(' → logprob: -5.352910041809082
    10. '<|end|>' → logprob: -5.727910041809082

Token 77: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.000983862322755158
    2. 'nombre' → logprob: -8.500984191894531
    3. 's' → logprob: -9.250984191894531
    4. ' même' → logprob: -9.375984191894531
    5. ' nombres' → logprob: -9.375984191894531
    6. '   ' → logprob: -9.625984191894531
    7. '  ' → logprob: -9.625984191894531
    8. '_' → logprob: -9.625984191894531
    9. ' number' → logprob: -9.625984191894531
    10. ' maximum' → logprob: -10.250984191894531

Token 78: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.09902401268482208
    2. ' d' → logprob: -2.4740240573883057
    3. ' ' → logprob: -6.349023818969727
    4. ' des' → logprob: -6.349023818969727
    5. 'de' → logprob: -6.349023818969727
    6. 's' → logprob: -6.474023818969727
    7. ' total' → logprob: -6.849023818969727
    8. 'd' → logprob: -8.099023818969727
    9. '  ' → logprob: -8.349023818969727
    10. ' ' → logprob: -8.599023818969727

Token 79: ' sous' (ID: 14487)
  Prédit: ' sous'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sous' → logprob: -0.4818955361843109
    2. 's' → logprob: -0.9818955659866333
    3. ' ' → logprob: -6.981895446777344
    4. ' sub' → logprob: -7.106895446777344
    5. ' i' → logprob: -7.231895446777344
    6. ' l' → logprob: -7.231895446777344
    7. ' indices' → logprob: -7.356895446777344
    8. '   ' → logprob: -7.919395446777344
    9. ' segments' → logprob: -7.919395446777344
    10. 'sub' → logprob: -7.981895446777344

Token 80: '-pl' (ID: 51475)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.22892524302005768
    2. '_' → logprob: -1.6039252281188965
    3. '_t' → logprob: -6.8539252281188965
    4. '_-' → logprob: -7.3539252281188965
    5. '-_' → logprob: -7.3539252281188965
    6. '_table' → logprob: -7.8539252281188965
    7. '\' → logprob: -8.728925704956055
    8. '-table' → logprob: -9.103925704956055
    9. '_tab' → logprob: -9.228925704956055
    10. '-t' → logprob: -9.728925704956055

Token 81: 'ages' (ID: 1461)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.05416106805205345
    2. 'i' → logprob: -3.5541610717773438
    3. 'ay' → logprob: -5.054161071777344
    4. 'u' → logprob: -5.179161071777344
    5. 'ai' → logprob: -5.554161071777344
    6. 'age' → logprob: -6.429161071777344
    7. 'ic' → logprob: -7.054161071777344
    8. 'ages' → logprob: -7.179161071777344
    9. 'aus' → logprob: -7.929161071777344
    10. 'us' → logprob: -8.054161071777344

Token 82: ' où' (ID: 15113)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 83: ' aucun' (ID: 41678)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.2092309147119522
    2. ' A' → logprob: -2.584230899810791
    3. 'la' → logprob: -3.334230899810791
    4. ' l' → logprob: -3.459230899810791
    5. 'A' → logprob: -4.334230899810791
    6. ' le' → logprob: -4.959230899810791
    7. 'l' → logprob: -5.334230899810791
    8. ' a' → logprob: -5.584230899810791
    9. ' the' → logprob: -6.084230899810791
    10. 'a' → logprob: -6.084230899810791

Token 84: ' bit' (ID: 3546)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.13279478251934052
    2. ' élément' → logprob: -2.1327948570251465
    3. 'element' → logprob: -6.5077948570251465
    4. 'A' → logprob: -7.0077948570251465
    5. ' éléments' → logprob: -7.6327948570251465
    6. 'é' → logprob: -8.007794380187988
    7. 'dou' → logprob: -8.257794380187988
    8. '```' → logprob: -8.257794380187988
    9. ' ' → logprob: -8.382794380187988
    10. ' doubl' → logprob: -8.632794380187988

Token 85: ' ne' (ID: 453)
  Prédit: ' set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' set' → logprob: -0.15325263142585754
    2. ' n' → logprob: -2.778252601623535
    3. '1' → logprob: -3.403252601623535
    4. '   ' → logprob: -4.528252601623535
    5. 'n' → logprob: -4.528252601623535
    6. '```' → logprob: -5.153252601623535
    7. 'set' → logprob: -5.403252601623535
    8. ' de' → logprob: -5.778252601623535
    9. '_set' → logprob: -6.153252601623535
    10. 's' → logprob: -6.278252601623535

Token 86: ' se' (ID: 458)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5094966292381287
    2. 'n' → logprob: -2.2594966888427734
    3. 'est' → logprob: -2.3844966888427734
    4. ' est' → logprob: -3.1344966888427734
    5. 's' → logprob: -3.2594966888427734
    6. '```' → logprob: -3.3844966888427734
    7. ' se' → logprob: -3.7594966888427734
    8. ' ' → logprob: -4.384496688842773
    9. '1' → logprob: -5.009496688842773
    10. 'a' → logprob: -5.259496688842773

Token 87: ' rép' (ID: 64372)
  Prédit: ' set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' set' → logprob: -1.051085114479065
    2. 'set' → logprob: -1.301085114479065
    3. '1' → logprob: -2.6760849952697754
    4. ' rép' → logprob: -2.8010849952697754
    5. 'ré' → logprob: -3.4260849952697754
    6. 's' → logprob: -3.8010849952697754
    7. 'u' → logprob: -3.8010849952697754
    8. 'et' → logprob: -4.301084995269775
    9. ' ' → logprob: -4.301084995269775
    10. ''s' → logprob: -4.676084995269775

Token 88: 'ète' (ID: 28789)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.2938494384288788
    2. 'été' → logprob: -1.6688494682312012
    3. 'ét' → logprob: -3.918849468231201
    4. 'et' → logprob: -4.793849468231201
    5. 'ète' → logprob: -5.168849468231201
    6. 'té' → logprob: -5.293849468231201
    7. 'éter' → logprob: -5.418849468231201
    8. 'eté' → logprob: -5.418849468231201
    9. 'andu' → logprob: -5.793849468231201
    10. 'tet' → logprob: -6.043849468231201

Token 89: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10485018789768219
    2. ':' → logprob: -2.8548502922058105
    3. ' :' → logprob: -4.4798502922058105
    4. '.' → logprob: -5.3548502922058105
    5. ' ' → logprob: -5.4798502922058105
    6. '    
' → logprob: -5.6048502922058105
    7. ',' → logprob: -5.7298502922058105
    8. ')' → logprob: -6.1048502922058105
    9. '```' → logprob: -6.2298502922058105
    10. '    ' → logprob: -6.6048502922058105

Token 90: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.039454687386751175
    2. ')' → logprob: -4.039454460144043
    3. ' ' → logprob: -5.414454460144043
    4. '    
' → logprob: -6.039454460144043
    5. '"' → logprob: -6.164454460144043
    6. '```' → logprob: -6.289454460144043
    7. 'n' → logprob: -6.664454460144043
    8. '\n' → logprob: -6.664454460144043
    9. '    ' → logprob: -6.664454460144043
    10. ' 
' → logprob: -6.664454460144043

Token 91: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0020096488296985626
    2. '```' → logprob: -7.252009868621826
    3. '    
' → logprob: -7.877009868621826
    4. '    ' → logprob: -8.127009391784668
    5. '"""' → logprob: -8.627009391784668
    6. ' """' → logprob: -9.502009391784668
    7. '
' → logprob: -9.752009391784668
    8. ' indentation' → logprob: -10.127009391784668
    9. '     
' → logprob: -10.502009391784668
    10. 'n' → logprob: -10.502009391784668

Token 92: ' Args' (ID: 39185)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005994916893541813
    2. '```' → logprob: -6.00599479675293
    3. '    ' → logprob: -7.13099479675293
    4. 'n' → logprob: -7.25599479675293
    5. '    
' → logprob: -7.88099479675293
    6. ' """
' → logprob: -8.38099479675293
    7. '
' → logprob: -8.38099479675293
    8. ' indentation' → logprob: -8.75599479675293
    9. '"""
' → logprob: -9.13099479675293
    10. '     
' → logprob: -9.50599479675293

Token 93: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.26523104310035706
    2. ' :' → logprob: -1.5152310132980347
    3. '   ' → logprob: -5.515231132507324
    4. ',' → logprob: -5.515231132507324
    5. '[' → logprob: -6.390231132507324
    6. '```' → logprob: -6.765231132507324
    7. ''' → logprob: -7.015231132507324
    8. '):' → logprob: -8.390231132507324
    9. '  ' → logprob: -8.515231132507324
    10. ' ' → logprob: -9.015231132507324

Token 94: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0243697389960289
    2. '   ' → logprob: -4.399369716644287
    3. ' )' → logprob: -5.024369716644287
    4. ')' → logprob: -5.774369716644287
    5. '    ' → logprob: -7.399369716644287
    6. '  ' → logprob: -8.149370193481445
    7. ' 
' → logprob: -8.399370193481445
    8. ''' → logprob: -8.524370193481445
    9. '(' → logprob: -9.024370193481445
    10. 'n' → logprob: -9.149370193481445

Token 95: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -0.19168899953365326
    2. '   ' → logprob: -2.0666890144348145
    3. ' N' → logprob: -3.3166890144348145
    4. 'self' → logprob: -5.3166890144348145
    5. 'A' → logprob: -5.4416890144348145
    6. 'param' → logprob: -7.0666890144348145
    7. 'n' → logprob: -7.6916890144348145
    8. ' A' → logprob: -8.066688537597656
    9. ' self' → logprob: -8.316688537597656
    10. '       ' → logprob: -8.941688537597656

Token 96: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.17445263266563416
    2. ',' → logprob: -2.549452543258667
    3. ':int' → logprob: -3.299452543258667
    4. ' :' → logprob: -4.049452781677246
    5. '):' → logprob: -4.799452781677246
    6. '(int' → logprob: -4.924452781677246
    7. '   ' → logprob: -5.049452781677246
    8. ' (' → logprob: -6.049452781677246
    9. '[int' → logprob: -6.924452781677246
    10. 'int' → logprob: -7.549452781677246

Token 97: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.01849464327096939
    2. ' int' → logprob: -4.018494606018066
    3. ',' → logprob: -9.143494606018066
    4. '   ' → logprob: -9.268494606018066
    5. ')' → logprob: -9.518494606018066
    6. ',int' → logprob: -10.518494606018066
    7. '):' → logprob: -11.518494606018066
    8. '[int' → logprob: -11.643494606018066
    9. ' )' → logprob: -11.768494606018066
    10. ':int' → logprob: -11.893494606018066

Token 98: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004004434682428837
    2. ')' → logprob: -6.00400447845459
    3. ',' → logprob: -6.62900447845459
    4. '):
' → logprob: -9.00400447845459
    5. '   ' → logprob: -10.87900447845459
    6. '<|end|>' → logprob: -10.87900447845459
    7. ' ):' → logprob: -11.00400447845459
    8. '),' → logprob: -11.50400447845459
    9. ':' → logprob: -11.75400447845459
    10. ' ' → logprob: -12.87900447845459

Token 99: ' La' (ID: 3038)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0692510604858398
    2. ' Nombre' → logprob: -1.9442510604858398
    3. ' nombre' → logprob: -2.19425106048584
    4. ' ' → logprob: -2.19425106048584
    5. ' N' → logprob: -2.56925106048584
    6. 'Nombre' → logprob: -3.19425106048584
    7. '    ' → logprob: -3.56925106048584
    8. ' int' → logprob: -3.69425106048584
    9. ' la' → logprob: -3.94425106048584
    10. ')' → logprob: -4.06925106048584

Token 100: ' longueur' (ID: 104613)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.26717185974121094
    2. ' longueur' → logprob: -2.142171859741211
    3. ' taille' → logprob: -2.767171859741211
    4. ' n' → logprob: -4.892171859741211
    5. ' nombre' → logprob: -5.017171859741211
    6. ' length' → logprob: -5.142171859741211
    7. 'n' → logprob: -5.517171859741211
    8. ' array' → logprob: -5.517171859741211
    9. ' t' → logprob: -5.642171859741211
    10. ' quantité' → logprob: -5.892171859741211

Token 101: ' du' (ID: 1462)
  Prédit: ' du'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' du' → logprob: -0.26570045948028564
    2. ' de' → logprob: -1.8907004594802856
    3. '   ' → logprob: -2.890700340270996
    4. ' des' → logprob: -4.390700340270996
    5. ' ' → logprob: -5.515700340270996
    6. ')' → logprob: -6.015700340270996
    7. ' )' → logprob: -6.015700340270996
    8. ' d' → logprob: -6.390700340270996
    9. ',' → logprob: -6.890700340270996
    10. 'du' → logprob: -7.640700340270996

Token 102: ' tableau' (ID: 67053)
  Prédit: 'table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'table' → logprob: -0.2962833344936371
    2. ' tableau' → logprob: -1.4212833642959595
    3. ' table' → logprob: -4.29628324508667
    4. 'A' → logprob: -7.29628324508667
    5. ' A' → logprob: -8.296283721923828
    6. ' ' → logprob: -9.046283721923828
    7. 'a' → logprob: -9.421283721923828
    8. '_' → logprob: -9.671283721923828
    9. 'tabl' → logprob: -10.171283721923828
    10. ' tableaux' → logprob: -10.671283721923828

Token 103: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7909688949584961
    2. '   ' → logprob: -1.415968894958496
    3. '```' → logprob: -1.665968894958496
    4. ',' → logprob: -2.665968894958496
    5. '
' → logprob: -3.915968894958496
    6. '<|end|>' → logprob: -5.290968894958496
    7. '\n' → logprob: -5.540968894958496
    8. '    
' → logprob: -5.790968894958496
    9. '\' → logprob: -5.915968894958496
    10. ')
' → logprob: -6.040968894958496

Token 104: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04320996627211571
    2. '       ' → logprob: -4.543210029602051
    3. '    
' → logprob: -4.793210029602051
    4. '```' → logprob: -4.793210029602051
    5. '
' → logprob: -5.793210029602051
    6. '\n' → logprob: -5.918210029602051
    7. '"""
' → logprob: -6.168210029602051
    8. ')' → logprob: -6.418210029602051
    9. '"""' → logprob: -6.418210029602051
    10. ' 
' → logprob: -6.793210029602051

Token 105: ' A' (ID: 355)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013686689548194408
    2. 'A' (adapté à ' A') → logprob: -5.013686656951904
    3. '"""
' → logprob: -6.138686656951904
    4. '```' → logprob: -6.513686656951904
    5. '       ' → logprob: -6.763686656951904
    6. '
' → logprob: -7.263686656951904
    7. '"""' → logprob: -7.388686656951904
    8. ' A' → logprob: -7.638686656951904
    9. '    ' → logprob: -9.013687133789062
    10. ' """
' → logprob: -9.888687133789062

Token 106: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6000052094459534
    2. ' (' → logprob: -1.1000051498413086
    3. '):' → logprob: -2.6000051498413086
    4. ' :' → logprob: -4.100005149841309
    5. ')' → logprob: -4.350005149841309
    6. '   ' → logprob: -4.725005149841309
    7. ' ' → logprob: -5.725005149841309
    8. '[' → logprob: -7.225005149841309
    9. ' ):' → logprob: -7.725005149841309
    10. '):
' → logprob: -8.225005149841309

Token 107: 'list' (ID: 2641)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.04184314236044884
    2. ')' → logprob: -3.4168431758880615
    3. 'list' → logprob: -5.416842937469482
    4. ' List' → logprob: -6.166842937469482
    5. '[List' → logprob: -6.916842937469482
    6. '):' → logprob: -8.04184341430664
    7. '   ' → logprob: -9.16684341430664
    8. '[int' → logprob: -9.54184341430664
    9. '[' → logprob: -10.29184341430664
    10. ':' → logprob: -10.29184341430664

Token 108: ' of' (ID: 328)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.0013682155404239893
    2. '):' → logprob: -6.876368045806885
    3. '<int' → logprob: -8.626368522644043
    4. ')' → logprob: -9.376368522644043
    5. ' of' → logprob: -10.751368522644043
    6. '[' → logprob: -10.751368522644043
    7. '```' → logprob: -11.376368522644043
    8. '):
' → logprob: -11.501368522644043
    9. '(int' → logprob: -12.751368522644043
    10. ':' → logprob: -13.876368522644043

Token 109: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.011048882268369198
    2. ' int' → logprob: -4.511048793792725
    3. 'ints' → logprob: -14.261049270629883
    4. '[int' → logprob: -15.636049270629883
    5. ')' → logprob: -16.261049270629883
    6. ' ints' → logprob: -16.511049270629883
    7. ']int' → logprob: -16.886049270629883
    8. ' integers' → logprob: -17.136049270629883
    9. '<int' → logprob: -17.636049270629883
    10. '(int' → logprob: -17.886049270629883

Token 110: '):' (ID: 3127)
  Prédit: ']):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):' → logprob: -0.42734062671661377
    2. '):' → logprob: -1.1773406267166138
    3. ')' → logprob: -3.427340507507324
    4. '])' → logprob: -5.927340507507324
    5. '>):' → logprob: -6.302340507507324
    6. ']' → logprob: -6.802340507507324
    7. '[int' → logprob: -6.927340507507324
    8. '[' → logprob: -8.802340507507324
    9. ']:' → logprob: -9.677340507507324
    10. ')):' → logprob: -9.927340507507324

Token 111: ' La' (ID: 3038)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3199868202209473
    2. '   ' → logprob: -1.5699868202209473
    3. '<|end|>' → logprob: -2.0699868202209473
    4. ' La' → logprob: -2.1949868202209473
    5. 'La' → logprob: -2.3199868202209473
    6. 'def' → logprob: -3.4449868202209473
    7. 'The' → logprob: -3.6949868202209473
    8. ' ' → logprob: -3.8199868202209473
    9. ' la' → logprob: -4.069986820220947
    10. '[' → logprob: -4.194986820220947

Token 112: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.38347673416137695
    2. '   ' → logprob: -1.883476734161377
    3. 'rray' → logprob: -2.508476734161377
    4. 'liste' → logprob: -3.758476734161377
    5. 's' → logprob: -4.133476734161377
    6. ' list' → logprob: -4.258476734161377
    7. 'n' → logprob: -4.758476734161377
    8. ' ' → logprob: -5.383476734161377
    9. ')' → logprob: -6.258476734161377
    10. '    ' → logprob: -6.383476734161377

Token 113: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.278387188911438
    2. '[int' → logprob: -1.528387188911438
    3. '[' → logprob: -4.403387069702148
    4. ' de' → logprob: -5.528387069702148
    5. '   ' → logprob: -6.403387069702148
    6. ' d' → logprob: -6.403387069702148
    7. 'des' → logprob: -6.653387069702148
    8. ' complète' → logprob: -6.653387069702148
    9. '[ind' → logprob: -6.903387069702148
    10. ')' → logprob: -7.528387069702148

Token 114: ' ent' (ID: 1121)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.1280248612165451
    2. ' éléments' → logprob: -2.3780248165130615
    3. ' ent' → logprob: -4.003025054931641
    4. 'ent' → logprob: -5.003025054931641
    5. ' valeurs' → logprob: -7.128025054931641
    6. ' elements' → logprob: -7.628025054931641
    7. ' nombres' → logprob: -7.628025054931641
    8. 'val' → logprob: -8.62802505493164
    9. 'é' → logprob: -8.75302505493164
    10. 'elements' → logprob: -9.00302505493164

Token 115: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.0030853748321533203
    2. 'ières' → logprob: -6.128085136413574
    3. 'i' → logprob: -7.628085136413574
    4. 'r' → logprob: -9.378085136413574
    5. 'ier' → logprob: -9.753085136413574
    6. 'ités' → logprob: -10.128085136413574
    7. 'rés' → logprob: -10.128085136413574
    8. 's' → logprob: -10.253085136413574
    9. 'és' → logprob: -10.753085136413574
    10. 'ries' → logprob: -10.878085136413574

Token 116: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7503515481948853
    2. ')' → logprob: -1.0003515481948853
    3. '```' → logprob: -3.0003514289855957
    4. ' )' → logprob: -3.2503514289855957
    5. '):
' → logprob: -3.8753514289855957
    6. ',' → logprob: -3.8753514289855957
    7. '    
' → logprob: -5.000351428985596
    8. ' ,' → logprob: -5.375351428985596
    9. ' représentant' → logprob: -6.625351428985596
    10. ' à' → logprob: -6.625351428985596

Token 117: ' traiter' (ID: 105852)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.9900051355361938
    2. ' analyser' → logprob: -1.9900051355361938
    3. 'an' → logprob: -2.3650050163269043
    4. ' considérer' → logprob: -2.3650050163269043
    5. ' traiter' → logprob: -2.6150050163269043
    6. '   ' → logprob: -2.6150050163269043
    7. ' compter' → logprob: -2.9900050163269043
    8. 'trait' → logprob: -3.2400050163269043
    9. 'consider' → logprob: -3.4900050163269043
    10. '```' → logprob: -4.740005016326904

Token 118: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3590955138206482
    2. '):' → logprob: -1.484095573425293
    3. ')' → logprob: -2.859095573425293
    4. '):
' → logprob: -4.109095573425293
    5. '```' → logprob: -7.609095573425293
    6. ',' → logprob: -8.484095573425293
    7. '
' → logprob: -8.609095573425293
    8. ')
' → logprob: -9.859095573425293
    9. ' ):' → logprob: -9.984095573425293
    10. '       ' → logprob: -10.234095573425293

Token 119: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01664888486266136
    2. '
' → logprob: -4.891648769378662
    3. '    
' → logprob: -5.891648769378662
    4. '"""' → logprob: -5.891648769378662
    5. '"""
' → logprob: -6.766648769378662
    6. ')' → logprob: -7.016648769378662
    7. '```' → logprob: -7.391648769378662
    8. ')
' → logprob: -8.01664924621582
    9. '    ' → logprob: -8.76664924621582
    10. ' """
' → logprob: -9.01664924621582

Token 120: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2762286961078644
    2. '"""
' → logprob: -1.901228666305542
    3. '```' → logprob: -2.901228666305542
    4. '
' → logprob: -4.151228904724121
    5. '"""' → logprob: -4.401228904724121
    6. '``' → logprob: -6.026228904724121
    7. ')
' → logprob: -6.776228904724121
    8. ' """
' → logprob: -6.776228904724121
    9. ')' → logprob: -6.776228904724121
    10. '    
' → logprob: -6.901228904724121

Token 121: ':
' (ID: 734)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.11226113885641098
    2. ':' → logprob: -2.3622610569000244
    3. '   ' → logprob: -5.6122612953186035
    4. ' int' → logprob: -6.3622612953186035
    5. '```' → logprob: -6.3622612953186035
    6. ':int' → logprob: -6.4872612953186035
    7. 'int' → logprob: -6.8622612953186035
    8. '(int' → logprob: -7.8622612953186035
    9. '[int' → logprob: -7.8622612953186035
    10. '  ' → logprob: -7.9872612953186035

Token 122: '       ' (ID: 309)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.15443472564220428
    2. '   ' → logprob: -2.1544346809387207
    3. 'int' → logprob: -3.6544346809387207
    4. '       ' → logprob: -7.154434680938721
    5. '    ' → logprob: -8.404435157775879
    6. '```' → logprob: -9.404435157775879
    7. '0' → logprob: -10.029435157775879
    8. ' count' → logprob: -10.529435157775879
    9. '(int' → logprob: -11.029435157775879
    10. '  ' → logprob: -11.529435157775879

Token 123: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' (adapté à ' int') → logprob: -0.003887838451191783
    2. ' int' → logprob: -5.75388765335083
    3. '   ' → logprob: -7.25388765335083
    4. '
' → logprob: -13.878888130187988
    5. '       ' → logprob: -14.003888130187988
    6. '```' → logprob: -15.128888130187988
    7. '(int' → logprob: -15.253888130187988
    8. ' ' → logprob: -16.253887176513672
    9. '  ' → logprob: -16.628887176513672
    10. 'count' → logprob: -17.253887176513672

Token 124: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -6.492120155598968e-05
    2. ' :' → logprob: -11.000064849853516
    3. ':return' → logprob: -11.125064849853516
    4. ':
' → logprob: -11.750064849853516
    5. '<|end|>' → logprob: -12.000064849853516
    6. '```' → logprob: -12.250064849853516
    7. '):' → logprob: -12.250064849853516
    8. 'The' → logprob: -13.625064849853516
    9. '[int' → logprob: -13.875064849853516
    10. 'Le' → logprob: -14.375064849853516

Token 125: ' Le' (ID: 2018)
  Prédit: ' Le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Le' → logprob: -0.20844557881355286
    2. ' le' → logprob: -1.8334455490112305
    3. 'Le' → logprob: -3.9584455490112305
    4. '   ' → logprob: -4.9584455490112305
    5. ' nombre' → logprob: -7.2084455490112305
    6. ' La' → logprob: -7.2084455490112305
    7. ' la' → logprob: -8.70844554901123
    8. ' Nombre' → logprob: -8.70844554901123
    9. 'le' → logprob: -10.08344554901123
    10. ' int' → logprob: -10.08344554901123

Token 126: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.25195837020874023
    2. 'nombre' → logprob: -1.5019583702087402
    3. ' nombres' → logprob: -11.376958847045898
    4. ' number' → logprob: -12.251958847045898
    5. ' total' → logprob: -12.626958847045898
    6. '   ' → logprob: -12.876958847045898
    7. '_nombre' → logprob: -13.251958847045898
    8. ' ' → logprob: -14.126958847045898
    9. 'Nombre' → logprob: -14.501958847045898
    10. 'n' → logprob: -14.626958847045898

Token 127: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.47162044048309326
    2. ' des' → logprob: -2.221620559692383
    3. ' d' → logprob: -2.346620559692383
    4. '_des' → logprob: -2.596620559692383
    5. '_' → logprob: -3.471620559692383
    6. '_total' → logprob: -3.721620559692383
    7. '_de' → logprob: -3.971620559692383
    8. ' ' → logprob: -5.221620559692383
    9. ' total' → logprob: -5.471620559692383
    10. '_d' → logprob: -5.846620559692383

Token 128: ' sous' (ID: 14487)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.012598184868693352
    2. ' sous' → logprob: -4.387598037719727
    3. 'sub' → logprob: -9.762598037719727
    4. '```' → logprob: -11.887598037719727
    5. 'ss' → logprob: -12.012598037719727
    6. 'sou' → logprob: -12.262598037719727
    7. '	s' → logprob: -12.762598037719727
    8. '_s' → logprob: -13.262598037719727
    9. '   ' → logprob: -13.387598037719727
    10. ' ' → logprob: -13.637598037719727

Token 129: '-table' (ID: 35909)
  Prédit: '_table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_table' → logprob: -0.4291614592075348
    2. '-table' → logprob: -2.054161548614502
    3. '-' → logprob: -2.679161548614502
    4. '_' → logprob: -2.804161548614502
    5. '-pl' → logprob: -3.429161548614502
    6. '_pl' → logprob: -3.804161548614502
    7. 'table' → logprob: -4.429161548614502
    8. '_array' → logprob: -5.304161548614502
    9. '   ' → logprob: -5.679161548614502
    10. '_tables' → logprob: -5.804161548614502

Token 130: 'aux' (ID: 5454)
  Prédit: 'aux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aux' → logprob: -0.0016845858190208673
    2. 'au' → logprob: -6.626684665679932
    3. '-' → logprob: -9.126684188842773
    4. 'arrays' → logprob: -9.376684188842773
    5. 'ay' → logprob: -10.376684188842773
    6. '   ' → logprob: -10.376684188842773
    7. 'array' → logprob: -10.751684188842773
    8. 'a' → logprob: -10.751684188842773
    9. ' tableaux' → logprob: -12.001684188842773
    10. 's' → logprob: -12.126684188842773

Token 131: ' respect' (ID: 5618)
  Prédit: '_unique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_unique' → logprob: -0.28324779868125916
    2. '_' → logprob: -2.408247709274292
    3. ' _' → logprob: -2.783247709274292
    4. '_valid' → logprob: -3.658247709274292
    5. '   ' → logprob: -4.158247947692871
    6. '_possible' → logprob: -4.408247947692871
    7. ' unique' → logprob: -4.908247947692871
    8. '_val' → logprob: -5.283247947692871
    9. ' ' → logprob: -5.283247947692871
    10. ' )' → logprob: -5.533247947692871

Token 132: 'ant' (ID: 493)
  Prédit: 'és'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.2832086682319641
    2. 'é' → logprob: -2.0332086086273193
    3. 'ant' → logprob: -2.1582086086273193
    4. 'e' → logprob: -9.283208847045898
    5. 'es' → logprob: -10.658208847045898
    6. 's' → logprob: -11.658208847045898
    7. 'ées' → logprob: -11.783208847045898
    8. '   ' → logprob: -11.783208847045898
    9. 'ent' → logprob: -11.908208847045898
    10. 'ants' → logprob: -12.033208847045898

Token 133: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.6757366061210632
    2. '   ' → logprob: -0.8007366061210632
    3. '    ' → logprob: -3.675736665725708
    4. '```' → logprob: -5.800736427307129
    5. ' l' → logprob: -5.925736427307129
    6. '       ' → logprob: -6.300736427307129
    7. ' cette' → logprob: -6.425736427307129
    8. ' le' → logprob: -6.425736427307129
    9. '  ' → logprob: -6.675736427307129
    10. ' ' → logprob: -6.675736427307129

Token 134: ' propriété' (ID: 87730)
  Prédit: 'condition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'condition' → logprob: -0.2879447638988495
    2. 'pro' → logprob: -1.9129447937011719
    3. 'crit' → logprob: -3.037944793701172
    4. ' condition' → logprob: -4.037944793701172
    5. '```' → logprob: -4.787944793701172
    6. ' crit' → logprob: -4.912944793701172
    7. '   ' → logprob: -5.287944793701172
    8. '
' → logprob: -5.662944793701172
    9. ' propriété' → logprob: -5.787944793701172
    10. 'property' → logprob: -6.162944793701172

Token 135: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5056713819503784
    2. '.' → logprob: -2.005671501159668
    3. '    
' → logprob: -2.005671501159668
    4. '
' → logprob: -2.505671501159668
    5. '  
' → logprob: -4.880671501159668
    6. ' 
' → logprob: -5.130671501159668
    7. '   
' → logprob: -5.130671501159668
    8. '```' → logprob: -5.380671501159668
    9. 'def' → logprob: -5.505671501159668
    10. '

' → logprob: -5.755671501159668

Token 136: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19384966790676117
    2. '
' → logprob: -2.068849563598633
    3. '    
' → logprob: -3.193849563598633
    4. '    ' → logprob: -5.818849563598633
    5. '     
' → logprob: -6.193849563598633
    6. '```' → logprob: -6.318849563598633
    7. ' 
' → logprob: -7.693849563598633
    8. '   
' → logprob: -7.818849563598633
    9. '"""' → logprob: -7.818849563598633
    10. '"""
' → logprob: -8.068849563598633

Token 137: ' """
' (ID: 7037)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11540583521127701
    2. '   ' → logprob: -2.490405797958374
    3. '    
' → logprob: -3.990405797958374
    4. '\n' → logprob: -5.740406036376953
    5. '```' → logprob: -6.240406036376953
    6. '   
' → logprob: -7.115406036376953
    7. '     
' → logprob: -7.490406036376953
    8. ' 
' → logprob: -7.740406036376953
    9. '  
' → logprob: -8.740406036376953
    10. '    ' → logprob: -8.990406036376953

Token 138: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0018634299049153924
    2. '```' → logprob: -7.876863479614258
    3. ' left' → logprob: -8.126863479614258
    4. '
' → logprob: -8.501863479614258
    5. 'n' → logprob: -8.751863479614258
    6. ' result' → logprob: -9.001863479614258
    7. ' res' → logprob: -9.126863479614258
    8. 'def' → logprob: -9.501863479614258
    9. ' indentation' → logprob: -9.751863479614258
    10. ' def' → logprob: -9.751863479614258

Token 139: ' #' (ID: 1069)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.49606919288635254
    2. 'left' → logprob: -1.4960691928863525
    3. 'prefix' → logprob: -2.6210691928863525
    4. ' left' → logprob: -3.2460691928863525
    5. ' count' → logprob: -3.6210691928863525
    6. '   ' → logprob: -4.246068954467773
    7. 'res' → logprob: -5.371068954467773
    8. ' prefix' → logprob: -5.996068954467773
    9. ' res' → logprob: -6.121068954467773
    10. 'result' → logprob: -6.371068954467773

Token 140: ' ex' (ID: 513)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6305279731750488
    2. ' left' → logprob: -1.2555279731750488
    3. 'i' → logprob: -3.255527973175049
    4. ' n' → logprob: -3.630527973175049
    5. ' count' → logprob: -3.630527973175049
    6. 'left' → logprob: -3.630527973175049
    7. ' res' → logprob: -4.380527973175049
    8. ' result' → logprob: -4.505527973175049
    9. 'count' → logprob: -4.630527973175049
    10. '   ' → logprob: -5.130527973175049

Token 141: ' :' (ID: 712)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.5989506840705872
    2. 'count' → logprob: -1.4739506244659424
    3. 't' → logprob: -3.0989506244659424
    4. 'pl' → logprob: -3.3489506244659424
    5. 'i' → logprob: -3.4739506244659424
    6. 'unique' → logprob: -3.4739506244659424
    7. 'port' → logprob: -4.0989508628845215
    8. 'ists' → logprob: -4.0989508628845215
    9. 'isting' → logprob: -4.5989508628845215
    10. 'ist' → logprob: -5.3489508628845215

Token 142: ' garde' (ID: 65309)
  Prédit: ' left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.43683022260665894
    2. ' i' → logprob: -1.8118302822113037
    3. '   ' → logprob: -2.9368302822113037
    4. ' res' → logprob: -3.6868302822113037
    5. 'left' → logprob: -3.9368302822113037
    6. ' count' → logprob: -4.061830043792725
    7. ' result' → logprob: -4.186830043792725
    8. ' n' → logprob: -4.311830043792725
    9. ' prefix' → logprob: -4.311830043792725
    10. 'i' → logprob: -4.936830043792725

Token 143: ' en' (ID: 469)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20411837100982666
    2. ' i' → logprob: -3.329118251800537
    3. ' =' → logprob: -3.454118251800537
    4. 'left' → logprob: -3.954118251800537
    5. 'i' → logprob: -4.204118251800537
    6. 'seen' → logprob: -4.454118251800537
    7. ' seen' → logprob: -5.079118251800537
    8. 'l' → logprob: -5.079118251800537
    9. ' left' → logprob: -5.204118251800537
    10. ' ' → logprob: -5.329118251800537

Token 144: ' mémoire' (ID: 79071)
  Prédit: 'cours'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cours' → logprob: -0.20018066465854645
    2. 'vue' → logprob: -3.075180768966675
    3. 'place' → logprob: -3.325180768966675
    4. 'fen' → logprob: -3.950180768966675
    5. 'window' → logprob: -4.825180530548096
    6. 'de' → logprob: -4.825180530548096
    7. 'position' → logprob: -5.200180530548096
    8. 'course' → logprob: -5.450180530548096
    9. 'balance' → logprob: -5.450180530548096
    10. 'mé' → logprob: -5.575180530548096

Token 145: ' la' (ID: 557)
  Prédit: ' seen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' seen' → logprob: -1.3687498569488525
    2. 'seen' → logprob: -1.3687498569488525
    3. 'freq' → logprob: -2.4937498569488525
    4. 'left' → logprob: -2.6187498569488525
    5. ' freq' → logprob: -2.7437498569488525
    6. ' left' → logprob: -2.8687498569488525
    7. '   ' → logprob: -2.9937498569488525
    8. ' i' → logprob: -3.2437498569488525
    9. ' ' → logprob: -4.243749618530273
    10. 'count' → logprob: -4.618749618530273

Token 146: ' somme' (ID: 64484)
  Prédit: 'freq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'freq' → logprob: -1.0873736143112183
    2. 'seen' → logprob: -1.4623736143112183
    3. 'count' → logprob: -2.462373733520508
    4. 'bit' → logprob: -2.462373733520508
    5. 'fen' → logprob: -2.962373733520508
    6. 'comp' → logprob: -3.212373733520508
    7. 'window' → logprob: -3.837373733520508
    8. 'left' → logprob: -4.087373733520508
    9. 'd' → logprob: -4.462373733520508
    10. 'pos' → logprob: -4.462373733520508

Token 147: ' ET' (ID: 23345)
  Prédit: '_prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_prefix' → logprob: -0.6118570566177368
    2. '_' → logprob: -0.8618570566177368
    3. '_s' → logprob: -4.861856937408447
    4. ' =' → logprob: -4.986856937408447
    5. '_sum' → logprob: -5.486856937408447
    6. 's' → logprob: -5.611856937408447
    7. ',' → logprob: -5.861856937408447
    8. '_=' → logprob: -6.236856937408447
    9. 'prefix' → logprob: -6.486856937408447
    10. '_c' → logprob: -7.111856937408447

Token 148: ' le' (ID: 505)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.09823747724294662
    2. ' xor' → logprob: -2.9732375144958496
    3. ' XOR' → logprob: -4.09823751449585
    4. 'X' → logprob: -4.72323751449585
    5. '_x' → logprob: -5.84823751449585
    6. 'x' → logprob: -5.97323751449585
    7. ' et' → logprob: -6.47323751449585
    8. ' bit' → logprob: -6.47323751449585
    9. 'et' → logprob: -6.59823751449585
    10. '   ' → logprob: -7.09823751449585

Token 149: ' xor' (ID: 106402)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.1170910969376564
    2. ' xor' → logprob: -2.242091178894043
    3. ' XOR' → logprob: -6.367091178894043
    4. 'X' → logprob: -6.617091178894043
    5. '   ' → logprob: -7.742091178894043
    6. '^' → logprob: -8.117091178894043
    7. ' ' → logprob: -8.742091178894043
    8. 'x' → logprob: -9.742091178894043
    9. '_x' → logprob: -10.117091178894043
    10. ' ^' → logprob: -10.492091178894043

Token 150: ' actuel' (ID: 113646)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.077359914779663
    2. ' prefix' → logprob: -1.702359914779663
    3. ' =' → logprob: -2.202359914779663
    4. ',' → logprob: -2.577359914779663
    5. ' sum' → logprob: -2.577359914779663
    6. '_sum' → logprob: -3.077359914779663
    7. '   ' → logprob: -3.827359914779663
    8. ' current' → logprob: -3.952359914779663
    9. '_prefix' → logprob: -3.952359914779663
    10. 's' → logprob: -4.202360153198242

Token 151: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5870198011398315
    2. ',' → logprob: -2.462019920349121
    3. ' sum' → logprob: -2.462019920349121
    4. ' current' → logprob: -2.837019920349121
    5. ' prefix' → logprob: -3.337019920349121
    6. 's' → logprob: -3.462019920349121
    7. 'sum' → logprob: -3.587019920349121
    8. ' =' → logprob: -3.587019920349121
    9. '_' → logprob: -3.962019920349121
    10. ' s' → logprob: -4.337019920349121

Token 152: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.09266171604394913
    2. 'A' → logprob: -3.0926616191864014
    3. ' la' → logprob: -3.8426616191864014
    4. 'l' → logprob: -4.5926618576049805
    5. 's' → logprob: -5.0926618576049805
    6. '0' → logprob: -6.8426618576049805
    7. 'de' → logprob: -7.2176618576049805
    8. ' A' → logprob: -7.4676618576049805
    9. 'le' → logprob: -7.8426618576049805
    10. 'fen' → logprob: -7.9676618576049805

Token 153: ' plage' (ID: 78241)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7357025742530823
    2. 'fen' → logprob: -0.7357025742530823
    3. 'pl' → logprob: -4.1107025146484375
    4. ' sous' → logprob: -4.8607025146484375
    5. 'window' → logprob: -5.4857025146484375
    6. 'sub' → logprob: -6.2357025146484375
    7. 'interval' → logprob: -6.3607025146484375
    8. ' fen' → logprob: -6.3607025146484375
    9. '   ' → logprob: -6.6107025146484375
    10. ' fenêtre' → logprob: -6.6107025146484375

Token 154: ' [' (ID: 723)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0326838493347168
    2. ',' → logprob: -1.6576838493347168
    3. ' current' → logprob: -2.282683849334717
    4. ' s' → logprob: -2.907683849334717
    5. ' =' → logprob: -2.907683849334717
    6. '_' → logprob: -3.282683849334717
    7. 's' → logprob: -3.407683849334717
    8. ' ' → logprob: -3.532683849334717
    9. ' ,' → logprob: -3.532683849334717
    10. ' sum' → logprob: -3.657683849334717

Token 155: 'i' (ID: 72)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.2865692675113678
    2. ' l' → logprob: -2.286569356918335
    3. 'i' → logprob: -2.661569356918335
    4. ' i' → logprob: -3.411569356918335
    5. 'left' → logprob: -4.036569118499756
    6. ' gauche' → logprob: -4.661569118499756
    7. ' left' → logprob: -5.536569118499756
    8. 'g' → logprob: -5.911569118499756
    9. '   ' → logprob: -6.161569118499756
    10. ' ' → logprob: -6.411569118499756

Token 156: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.027009276673197746
    2. ' ,' → logprob: -4.0270094871521
    3. ',j' → logprob: -5.2770094871521
    4. ']' → logprob: -7.0270094871521
    5. ' ' → logprob: -8.152009010314941
    6. ':]' → logprob: -8.152009010314941
    7. ',
' → logprob: -8.402009010314941
    8. ':' → logprob: -8.402009010314941
    9. 's' → logprob: -8.527009010314941
    10. '...' → logprob: -8.652009010314941

Token 157: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0554908886551857
    2. ' j' → logprob: -3.0554909706115723
    3. 'i' → logprob: -5.930490970611572
    4. '   ' → logprob: -6.180490970611572
    5. 'r' → logprob: -7.805490970611572
    6. 'l' → logprob: -8.180490493774414
    7. ' i' → logprob: -8.305490493774414
    8. '0' → logprob: -8.430490493774414
    9. ',' → logprob: -8.555490493774414
    10. 'start' → logprob: -8.930490493774414

Token 158: ')
' (ID: 446)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.029352011159062386
    2. ' ]' → logprob: -3.9043519496917725
    3. '_]' → logprob: -5.529352188110352
    4. '_' → logprob: -6.154352188110352
    5. 's' → logprob: -7.654352188110352
    6. '   ' → logprob: -7.779352188110352
    7. ')' → logprob: -8.029352188110352
    8. ',' → logprob: -8.404352188110352
    9. ' ' → logprob: -8.654352188110352
    10. 'i' → logprob: -8.779352188110352

Token 159: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008975337259471416
    2. '    
' → logprob: -5.758975505828857
    3. '
' → logprob: -5.883975505828857
    4. ' i' → logprob: -6.758975505828857
    5. ' 
' → logprob: -7.633975505828857
    6. 'i' → logprob: -7.883975505828857
    7. ',' → logprob: -8.7589750289917
    8. '    ' → logprob: -8.8839750289917
    9. '   
' → logprob: -8.8839750289917
    10. '  
' → logprob: -9.6339750289917

Token 160: ' ex' (ID: 513)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11875421553850174
    2. '
' → logprob: -3.8687541484832764
    3. ' i' → logprob: -3.8687541484832764
    4. ' 
' → logprob: -4.1187543869018555
    5. '    
' → logprob: -4.4937543869018555
    6. 'i' → logprob: -4.4937543869018555
    7. 'j' → logprob: -4.6187543869018555
    8. '    ' → logprob: -4.9937543869018555
    9. 'n' → logprob: -5.3687543869018555
    10. '\' → logprob: -5.7437543869018555

Token 161: ' =' (ID: 314)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.6375362873077393
    2. 'pl' → logprob: -1.6375362873077393
    3. 'ists' → logprob: -2.2625362873077393
    4. 'isting' → logprob: -2.8875362873077393
    5. 't' → logprob: -3.8875362873077393
    6. 'am' → logprob: -4.51253604888916
    7. 'pr' → logprob: -4.63753604888916
    8. 'tra' → logprob: -4.76253604888916
    9. 'sum' → logprob: -4.76253604888916
    10. 'ample' → logprob: -4.76253604888916

Token 162: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4386863112449646
    2. ' ' → logprob: -1.1886863708496094
    3. '[' → logprob: -4.438686370849609
    4. ' [' → logprob: -4.563686370849609
    5. '{}' → logprob: -4.688686370849609
    6. ' defaultdict' → logprob: -4.938686370849609
    7. '{' → logprob: -5.563686370849609
    8. ' {}' → logprob: -5.688686370849609
    9. 'set' → logprob: -6.938686370849609
    10. ' set' → logprob: -7.063686370849609

Token 163: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07634372264146805
    2. '{}' → logprob: -3.4513437747955322
    3. '[' → logprob: -4.076343536376953
    4. '{' → logprob: -4.326343536376953
    5. 'set' → logprob: -4.951343536376953
    6. '[]' → logprob: -6.826343536376953
    7. '(' → logprob: -6.951343536376953
    8. 'default' → logprob: -7.076343536376953
    9. ' ' → logprob: -7.701343536376953
    10. 'dict' → logprob: -7.951343536376953

Token 164: ' ' (ID: 220)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.932866096496582
    2. '   ' → logprob: -1.057866096496582
    3. 'xor' → logprob: -2.932866096496582
    4. 'x' → logprob: -3.557866096496582
    5. '
' → logprob: -3.557866096496582
    6. ' ' → logprob: -3.807866096496582
    7. ' xor' → logprob: -4.057866096496582
    8. 'j' → logprob: -4.557866096496582
    9. ' =' → logprob: -4.682866096496582
    10. '_' → logprob: -5.057866096496582

Token 165: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.617673933506012
    2. 'xor' → logprob: -0.992673933506012
    3. ',' → logprob: -3.617673873901367
    4. 'j' → logprob: -4.242673873901367
    5. 'x' → logprob: -4.367673873901367
    6. 'current' → logprob: -4.867673873901367
    7. ' xor' → logprob: -5.367673873901367
    8. 'sum' → logprob: -5.742673873901367
    9. 'for' → logprob: -5.867673873901367
    10. ' ' → logprob: -5.992673873901367

Token 166: ' Som' (ID: 12116)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.5908060073852539
    2. 'sum' → logprob: -0.9658060073852539
    3. ' xor' → logprob: -3.340806007385254
    4. 's' → logprob: -4.965806007385254
    5. ' sum' → logprob: -5.340806007385254
    6. 'or' → logprob: -5.465806007385254
    7. 'prefix' → logprob: -5.840806007385254
    8. 'psum' → logprob: -5.965806007385254
    9. 'j' → logprob: -6.715806007385254
    10. 'current' → logprob: -6.840806007385254

Token 167: 'me' (ID: 1047)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -1.4951218366622925
    2. 'ma' → logprob: -1.4951218366622925
    3. 'e' → logprob: -1.6201218366622925
    4. 'sum' → logprob: -1.9951218366622925
    5. '=' → logprob: -2.995121955871582
    6. 'a' → logprob: -3.120121955871582
    7. 't' → logprob: -3.745121955871582
    8. 'ple' → logprob: -3.870121955871582
    9. 'p' → logprob: -4.495121955871582
    10. '   ' → logprob: -4.995121955871582

Token 168: ' /' (ID: 820)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xor' → logprob: -1.326228380203247
    2. ',' → logprob: -1.826228380203247
    3. ' =' → logprob: -1.826228380203247
    4. '<|end|>' → logprob: -2.076228380203247
    5. '_' → logprob: -2.326228380203247
    6. '   ' → logprob: -2.826228380203247
    7. 'x' → logprob: -3.701228380203247
    8. ' ^=' → logprob: -4.076228141784668
    9. '_x' → logprob: -4.326228141784668
    10. '  ' → logprob: -4.451228141784668

Token 169: ' X' (ID: 2127)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.3344680964946747
    2. ' xor' → logprob: -1.334468126296997
    3. ' XOR' → logprob: -5.459467887878418
    4. 'x' → logprob: -5.834467887878418
    5. ' x' → logprob: -5.834467887878418
    6. '   ' → logprob: -5.959467887878418
    7. ' ' → logprob: -6.459467887878418
    8. 'X' → logprob: -6.584467887878418
    9. ' j' → logprob: -7.334467887878418
    10. 'j' → logprob: -7.334467887878418

Token 170: 'or' (ID: 267)
  Prédit: 'or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.0349356010556221
    2. 'xor' → logprob: -4.034935474395752
    3. 'OR' → logprob: -5.659935474395752
    4. 'cl' → logprob: -6.159935474395752
    5. 'ex' → logprob: -6.284935474395752
    6. '0' → logprob: -6.534935474395752
    7. 'ors' → logprob: -6.534935474395752
    8. ' xor' → logprob: -7.409935474395752
    9. '_x' → logprob: -7.534935474395752
    10. 'clusive' → logprob: -7.784935474395752

Token 171: ' actuel' (ID: 113646)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' current' → logprob: -1.1535917520523071
    2. 'current' → logprob: -1.9035917520523071
    3. ' xor' → logprob: -2.2785916328430176
    4. ',' → logprob: -2.4035916328430176
    5. ' =' → logprob: -3.0285916328430176
    6. 'j' → logprob: -3.0285916328430176
    7. ' j' → logprob: -3.5285916328430176
    8. ' ex' → logprob: -3.5285916328430176
    9. '   ' → logprob: -3.6535916328430176
    10. ' cur' → logprob: -3.9035916328430176

Token 172: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1717739999294281
    2. 'current' → logprob: -3.046773910522461
    3. ',' → logprob: -4.171773910522461
    4. 'j' → logprob: -4.296773910522461
    5. ' current' → logprob: -4.296773910522461
    6. ' xor' → logprob: -4.421773910522461
    7. 'xor' → logprob: -4.546773910522461
    8. 'sum' → logprob: -5.296773910522461
    9. 's' → logprob: -5.546773910522461
    10. '  ' → logprob: -5.796773910522461

Token 173: ' la' (ID: 557)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8278045058250427
    2. 'A' → logprob: -0.9528045058250427
    3. ' la' → logprob: -2.8278045654296875
    4. 'la' → logprob: -3.0778045654296875
    5. 'l' → logprob: -3.5778045654296875
    6. ' A' → logprob: -4.0778045654296875
    7. ' ' → logprob: -4.3278045654296875
    8. '[]' → logprob: -5.9528045654296875
    9. 's' → logprob: -6.4528045654296875
    10. ')' → logprob: -6.4528045654296875

Token 174: ' plage' (ID: 78241)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.9117836356163025
    2. 'pl' → logprob: -1.0367836952209473
    3. 's' → logprob: -2.0367836952209473
    4. 'interval' → logprob: -3.5367836952209473
    5. 'j' → logprob: -4.161783695220947
    6. 'window' → logprob: -4.411783695220947
    7. ' A' → logprob: -4.536783695220947
    8. 'segment' → logprob: -5.036783695220947
    9. 'range' → logprob: -5.536783695220947
    10. 'i' → logprob: -5.536783695220947

Token 175: ' cour' (ID: 2871)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.033704712986946106
    2. ',' → logprob: -4.15870475769043
    3. '<|end|>' → logprob: -5.15870475769043
    4. 'j' → logprob: -5.78370475769043
    5. ' i' → logprob: -6.53370475769043
    6. 'i' → logprob: -6.65870475769043
    7. '  ' → logprob: -6.78370475769043
    8. 'current' → logprob: -7.40870475769043
    9. ' =' → logprob: -7.78370475769043
    10. ')' → logprob: -7.78370475769043

Token 176: 'ante' (ID: 2116)
  Prédit: 'ante'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ante' → logprob: -0.005863851401954889
    2. 'r' → logprob: -5.505863666534424
    3. 'ant' → logprob: -7.130863666534424
    4. 'amment' → logprob: -8.130864143371582
    5. '[' → logprob: -8.755864143371582
    6. 's' → logprob: -9.005864143371582
    7. 'b' → logprob: -9.755864143371582
    8. 'u' → logprob: -10.130864143371582
    9. 'ue' → logprob: -10.130864143371582
    10. '```' → logprob: -10.130864143371582

Token 177: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.579524040222168
    2. ',' → logprob: -1.704524040222168
    3. 'j' → logprob: -2.329524040222168
    4. 'i' → logprob: -3.329524040222168
    5. '
' → logprob: -3.329524040222168
    6. ' j' → logprob: -3.579524040222168
    7. ' i' → logprob: -3.704524040222168
    8. 'result' → logprob: -5.329524040222168
    9. '<|end|>' → logprob: -5.329524040222168
    10. '```' → logprob: -5.454524040222168

Token 178: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005549508612602949
    2. ' i' → logprob: -6.755549430847168
    3. ' result' → logprob: -7.005549430847168
    4. ' ans' → logprob: -7.755549430847168
    5. ' res' → logprob: -7.880549430847168
    6. ' xor' → logprob: -8.005549430847168
    7. 'result' → logprob: -8.130549430847168
    8. 'j' → logprob: -8.130549430847168
    9. 'i' → logprob: -8.380549430847168
    10. ' sum' → logprob: -8.505549430847168

Token 179: ' ans' (ID: 3345)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.2366840839385986
    2. 'count' → logprob: -1.7366840839385986
    3. 'result' → logprob: -1.7366840839385986
    4. 'j' → logprob: -2.4866840839385986
    5. '   ' → logprob: -2.6116840839385986
    6. 'ans' (adapté à ' ans') → logprob: -2.6116840839385986
    7. ' res' → logprob: -3.6116840839385986
    8. ' ans' → logprob: -3.8616840839385986
    9. ' result' → logprob: -4.2366838455200195
    10. ' count' → logprob: -4.3616838455200195

Token 180: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.001929228543303907
    2. '=' → logprob: -6.25192928314209
    3. ',' → logprob: -14.75192928314209
    4. ' +=' → logprob: -16.126928329467773
    5. ' ' → logprob: -17.626928329467773
    6. 's' → logprob: -17.751928329467773
    7. ' ,' → logprob: -18.126928329467773
    8. '  ' → logprob: -18.501928329467773
    9. ' =
' → logprob: -18.501928329467773
    10. '   ' → logprob: -18.626928329467773

Token 181: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0031786637846380472
    2. ' ' → logprob: -5.753178596496582
    3. '   ' → logprob: -14.003178596496582
    4. '  ' → logprob: -17.0031795501709
    5. '۰' → logprob: -17.8781795501709
    6. '=' → logprob: -18.1906795501709
    7. ' ' → logprob: -18.5656795501709
    8. '    ' → logprob: -18.8781795501709
    9. '1' → logprob: -19.1906795501709
    10. '```' → logprob: -19.6281795501709

Token 182: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.5577775128767826e-06
    2. ' ' → logprob: -12.125005722045898
    3. '۰' → logprob: -18.7500057220459
    4. '   ' → logprob: -19.6250057220459
    5. '```' → logprob: -20.2500057220459
    6. '1' → logprob: -20.3750057220459
    7. '０' → logprob: -20.8750057220459
    8. '00' → logprob: -20.8750057220459
    9. '000' → logprob: -20.9375057220459
    10. 'int' → logprob: -21.0625057220459

Token 183: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01379404030740261
    2. '
' → logprob: -5.8887939453125
    3. ' i' → logprob: -5.8887939453125
    4. ',' → logprob: -6.1387939453125
    5. 'j' → logprob: -6.1387939453125
    6. '    
' → logprob: -6.5137939453125
    7. 'i' → logprob: -6.6387939453125
    8. ' j' → logprob: -7.5137939453125
    9. '```' → logprob: -8.7637939453125
    10. '  ' → logprob: -9.5137939453125

Token 184: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.058497074991464615
    2. '
' → logprob: -3.183497190475464
    3. 'j' → logprob: -4.433496952056885
    4. 'i' → logprob: -6.058496952056885
    5. ',' → logprob: -7.558496952056885
    6. '    
' → logprob: -8.433497428894043
    7. ' i' → logprob: -9.058497428894043
    8. ' j' → logprob: -9.058497428894043
    9. 'right' → logprob: -10.183497428894043
    10. ',j' → logprob: -10.433497428894043

Token 185: ' Comp' (ID: 5211)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.6407226920127869
    2. 'j' → logprob: -0.7657226920127869
    3. ' i' → logprob: -5.890722751617432
    4. 'i' → logprob: -6.140722751617432
    5. 'right' → logprob: -6.890722751617432
    6. ' right' → logprob: -7.015722751617432
    7. '   ' → logprob: -7.640722751617432
    8. ' left' → logprob: -8.265722274780273
    9. 'left' → logprob: -9.015722274780273
    10. ' ' → logprob: -9.265722274780273

Token 186: 'teur' (ID: 45262)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.056945741176605225
    2. 'teur' → logprob: -3.68194580078125
    3. 'te' → logprob: -3.80694580078125
    4. 'té' → logprob: -5.30694580078125
    5. '   ' → logprob: -7.30694580078125
    6. 'l' → logprob: -7.30694580078125
    7. 'j' → logprob: -7.43194580078125
    8. 'ter' → logprob: -7.55694580078125
    9. 'i' → logprob: -8.80694580078125
    10. 'r' → logprob: -9.30694580078125

Token 187: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05994943156838417
    2. ' i' → logprob: -3.3099493980407715
    3. 'i' → logprob: -4.3099493980407715
    4. 'j' → logprob: -5.5599493980407715
    5. ' j' → logprob: -5.5599493980407715
    6. ',' → logprob: -9.05994987487793
    7. '```' → logprob: -9.30994987487793
    8. ' left' → logprob: -9.43494987487793
    9. 'left' → logprob: -9.68494987487793
    10. '
' → logprob: -10.18494987487793

Token 188: ' sous' (ID: 14487)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5403562188148499
    2. 'sub' → logprob: -1.415356159210205
    3. ' sous' → logprob: -2.165356159210205
    4. 'j' → logprob: -4.040356159210205
    5. 'la' → logprob: -4.290356159210205
    6. ' sub' → logprob: -5.040356159210205
    7. 'l' → logprob: -5.665356159210205
    8. 'pl' → logprob: -5.665356159210205
    9. ' la' → logprob: -5.665356159210205
    10. '0' → logprob: -5.915356159210205

Token 189: '-table' (ID: 35909)
  Prédit: 'array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'array' → logprob: -0.8547893166542053
    2. 'arrays' → logprob: -0.9797893166542053
    3. '   ' → logprob: -2.1047892570495605
    4. 'arr' → logprob: -3.6047892570495605
    5. '_arrays' → logprob: -3.8547892570495605
    6. 'pl' → logprob: -4.9797892570495605
    7. '_' → logprob: -5.3547892570495605
    8. '_array' → logprob: -5.4797892570495605
    9. '_pl' → logprob: -5.4797892570495605
    10. '_arr' → logprob: -5.9797892570495605

Token 190: 'aux' (ID: 5454)
  Prédit: 'aux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aux' → logprob: -8.876193169271573e-05
    2. 'au' → logprob: -11.000088691711426
    3. 'aus' → logprob: -11.500088691711426
    4. 'a' → logprob: -11.500088691711426
    5. 'ay' → logprob: -12.125088691711426
    6. '   ' → logprob: -12.125088691711426
    7. 'eux' → logprob: -12.500088691711426
    8. 'ux' → logprob: -12.625088691711426
    9. 'x' → logprob: -12.875088691711426
    10. 'arrays' → logprob: -13.000088691711426

Token 191: ' val' (ID: 1459)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.040499962866306305
    2. ' i' → logprob: -3.9154999256134033
    3. 'j' → logprob: -4.915500164031982
    4. 'i' → logprob: -4.915500164031982
    5. ' j' → logprob: -5.540500164031982
    6. ',' → logprob: -7.665500164031982
    7. '```' → logprob: -8.165499687194824
    8. 'right' → logprob: -9.165499687194824
    9. 'l' → logprob: -9.665499687194824
    10. ' right' → logprob: -9.915499687194824

Token 192: 'ides' (ID: 4105)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.1590723991394043
    2. 'ide' → logprob: -2.2840723991394043
    3. 'idé' → logprob: -4.409072399139404
    4. 'ids' → logprob: -4.784072399139404
    5. 'ides' → logprob: -5.284072399139404
    6. 'ues' → logprob: -5.409072399139404
    7. 'u' → logprob: -5.659072399139404
    8. 'ue' → logprob: -6.409072399139404
    9. 'i' → logprob: -6.534072399139404
    10. 'idus' → logprob: -6.784072399139404

Token 193: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11969475448131561
    2. ' i' → logprob: -3.119694709777832
    3. 'i' → logprob: -3.494694709777832
    4. 'j' → logprob: -3.744694709777832
    5. ' j' → logprob: -4.494694709777832
    6. '```' → logprob: -6.994694709777832
    7. 'right' → logprob: -7.369694709777832
    8. ',' → logprob: -7.494694709777832
    9. 'left' → logprob: -8.119694709777832
    10. ' right' → logprob: -8.244694709777832

Token 194: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04887495934963226
    2. ' i' → logprob: -4.173874855041504
    3. 'i' → logprob: -4.298874855041504
    4. 'j' → logprob: -4.423874855041504
    5. ' j' → logprob: -5.298874855041504
    6. 'right' → logprob: -7.548874855041504
    7. ' right' → logprob: -8.048874855041504
    8. '```' → logprob: -8.298874855041504
    9. ' left' → logprob: -8.673874855041504
    10. 'left' → logprob: -8.923874855041504

Token 195: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' (adapté à ' j') → logprob: -0.08116522431373596
    2. 'i' → logprob: -3.206165313720703
    3. 'right' → logprob: -3.956165313720703
    4. '   ' → logprob: -5.081165313720703
    5. 'left' → logprob: -5.081165313720703
    6. ' j' → logprob: -5.706165313720703
    7. 'xor' → logprob: -7.081165313720703
    8. 'r' → logprob: -7.456165313720703
    9. 'start' → logprob: -8.081165313720703
    10. ' i' → logprob: -8.456165313720703

Token 196: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005935790482908487
    2. '=' → logprob: -5.1309356689453125
    3. ',' → logprob: -12.755935668945312
    4. '  ' → logprob: -13.630935668945312
    5. '=int' → logprob: -14.255935668945312
    6. ' ' → logprob: -14.505935668945312
    7. '   ' → logprob: -15.130935668945312
    8. '<|end|>' → logprob: -15.380935668945312
    9. ')' → logprob: -15.880935668945312
    10. '=j' → logprob: -15.943435668945312

Token 197: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.0722858102526516e-05
    2. ' ' → logprob: -10.125041007995605
    3. '1' → logprob: -14.875041007995605
    4. '-' → logprob: -16.50004005432129
    5. '```' → logprob: -17.50004005432129
    6. '=' → logprob: -17.68754005432129
    7. '   ' → logprob: -18.00004005432129
    8. '۰' → logprob: -18.12504005432129
    9. 'def' → logprob: -18.25004005432129
    10. 'j' → logprob: -18.68754005432129

Token 198: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.173704271830502e-06
    2. ' ' → logprob: -13.25000286102295
    3. '1' → logprob: -13.62500286102295
    4. '-' → logprob: -16.750003814697266
    5. '```' → logprob: -18.125003814697266
    6. '۰' → logprob: -18.250003814697266
    7. 'def' → logprob: -18.750003814697266
    8. 'j' → logprob: -18.812503814697266
    9. '[' → logprob: -18.937503814697266
    10. '   ' → logprob: -19.125003814697266

Token 199: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04681912064552307
    2. '   ' → logprob: -3.5468192100524902
    3. '    
' → logprob: -5.29681921005249
    4. 'for' → logprob: -5.54681921005249
    5. ' for' → logprob: -5.67181921005249
    6. ' 
' → logprob: -6.17181921005249
    7. '  
' → logprob: -6.42181921005249
    8. '   
' → logprob: -7.29681921005249
    9. ' ' → logprob: -10.046818733215332
    10. '
' → logprob: -10.296818733215332

Token 200: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6921578049659729
    2. '
' → logprob: -0.8171578049659729
    3. '   ' → logprob: -3.317157745361328
    4. ' for' → logprob: -4.067157745361328
    5. '    
' → logprob: -6.067157745361328
    6. '   
' → logprob: -7.192157745361328
    7. ' ' → logprob: -7.942157745361328
    8. '  
' → logprob: -8.317157745361328
    9. '  ' → logprob: -8.692157745361328
    10. '<|end|>' → logprob: -8.817157745361328

Token 201: ' P' (ID: 398)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1620025634765625
    2. ' for' → logprob: -1.9120025634765625
    3. '<|end|>' → logprob: -7.7870025634765625
    4. 'bits' → logprob: -8.162002563476562
    5. 'from' → logprob: -8.662002563476562
    6. '0' → logprob: -8.662002563476562
    7. 'mask' → logprob: -9.037002563476562
    8. 'bit' → logprob: -9.662002563476562
    9. ' ' → logprob: -9.787002563476562
    10. 'xor' → logprob: -10.037002563476562

Token 202: 'oin' (ID: 1979)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.010194102302193642
    2. ' i' → logprob: -5.635194301605225
    3. 'ointer' → logprob: -5.760194301605225
    4. '   ' → logprob: -6.510194301605225
    5. 'oint' → logprob: -7.760194301605225
    6. 'ivot' → logprob: -7.760194301605225
    7. 'r' → logprob: -8.135193824768066
    8. 'j' → logprob: -8.760193824768066
    9. 'for' → logprob: -9.260193824768066
    10. ' for' → logprob: -9.510193824768066

Token 203: 'teur' (ID: 45262)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5042023062705994
    2. 'teur' → logprob: -1.1292023658752441
    3. 'nte' → logprob: -3.129202365875244
    4. 'r' → logprob: -4.629202365875244
    5. 'nt' → logprob: -5.004202365875244
    6. 'ct' → logprob: -5.254202365875244
    7. 'ter' → logprob: -5.754202365875244
    8. 'cter' → logprob: -7.129202365875244
    9. 'inter' → logprob: -7.254202365875244
    10. 't' → logprob: -7.379202365875244

Token 204: ' de' (ID: 334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5944052934646606
    2. ' for' → logprob: -0.9694052934646606
    3. '<|end|>' → logprob: -2.844405174255371
    4. '   ' → logprob: -4.969405174255371
    5. '<|end|>' → logprob: -7.219405174255371
    6. 'd' → logprob: -7.719405174255371
    7. '  ' → logprob: -8.094405174255371
    8. 'de' → logprob: -8.344405174255371
    9. ' de' → logprob: -8.469405174255371
    10. 'pour' → logprob: -8.469405174255371

Token 205: ' fin' (ID: 2131)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.5980008840560913
    2. 'l' → logprob: -2.223001003265381
    3. 'fin' → logprob: -2.223001003265381
    4. 'dé' → logprob: -2.473001003265381
    5. ' la' → logprob: -2.598001003265381
    6. 'fen' → logprob: -4.223001003265381
    7. ' ' → logprob: -4.348001003265381
    8. 's' → logprob: -4.473001003265381
    9. ' l' → logprob: -4.848001003265381
    10. ' droite' → logprob: -5.098001003265381

Token 206: ' de' (ID: 334)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9545596837997437
    2. '
' → logprob: -1.3295596837997437
    3. '   ' → logprob: -1.4545596837997437
    4. 'for' → logprob: -3.079559803009033
    5. '<|end|>' → logprob: -3.079559803009033
    6. '    
' → logprob: -4.579559803009033
    7. ' 
' → logprob: -5.079559803009033
    8. '  
' → logprob: -5.704559803009033
    9. '<|end|>' → logprob: -6.454559803009033
    10. '   
' → logprob: -6.829559803009033

Token 207: ' plage' (ID: 78241)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.16629715263843536
    2. 'pl' → logprob: -2.166297197341919
    3. ' plage' → logprob: -4.41629695892334
    4. ' la' → logprob: -4.54129695892334
    5. 'fen' → logprob: -5.41629695892334
    6. 'l' → logprob: -5.54129695892334
    7. 's' → logprob: -6.16629695892334
    8. 'interval' → logprob: -6.29129695892334
    9. 'range' → logprob: -6.41629695892334
    10. 'window' → logprob: -7.54129695892334

Token 208: ' (' (ID: 350)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6511850357055664
    2. '
' → logprob: -1.6511850357055664
    3. '   ' → logprob: -1.9011850357055664
    4. 'for' → logprob: -2.0261850357055664
    5. '    
' → logprob: -6.026185035705566
    6. ' 
' → logprob: -6.651185035705566
    7. '  
' → logprob: -7.651185035705566
    8. '<|end|>' → logprob: -7.776185035705566
    9. '' → logprob: -8.401185035705566
    10. '	for' → logprob: -8.651185035705566

Token 209: 'ex' (ID: 490)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004816953558474779
    2. 'for' → logprob: -5.754817008972168
    3. ' )' → logprob: -7.004817008972168
    4. '   ' → logprob: -8.004817008972168
    5. '#' → logprob: -9.254817008972168
    6. ' for' → logprob: -9.754817008972168
    7. 'pour' → logprob: -10.254817008972168
    8. ')n' → logprob: -10.504817008972168
    9. '0' → logprob: -10.629817008972168
    10. ')#' → logprob: -10.629817008972168

Token 210: 'clus' (ID: 4085)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.26040521264076233
    2. '   ' → logprob: -2.1354053020477295
    3. '+' → logprob: -3.3854053020477295
    4. ' =' → logprob: -3.8854053020477295
    5. '=' → logprob: -4.13540506362915
    6. ':' → logprob: -5.01040506362915
    7. ')
' → logprob: -5.13540506362915
    8. 'def' → logprob: -5.26040506362915
    9. ' +' → logprob: -5.38540506362915
    10. ',' → logprob: -5.63540506362915

Token 211: 'if' (ID: 366)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011063982965424657
    2. 'if' → logprob: -7.376106262207031
    3. ')
' → logprob: -8.501106262207031
    4. 'e' → logprob: -8.876106262207031
    5. '   ' → logprob: -9.876106262207031
    6. 'u' → logprob: -10.501106262207031
    7. 'ive' → logprob: -11.126106262207031
    8. 'ion' → logprob: -11.376106262207031
    9. 't' → logprob: -12.126106262207031
    10. ')`' → logprob: -12.751106262207031

Token 212: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00024192029377445579
    2. '   ' → logprob: -8.750242233276367
    3. ')
' → logprob: -9.500242233276367
    4. ' )' → logprob: -11.875242233276367
    5. ')
' → logprob: -14.250242233276367
    6. ')

' → logprob: -15.375242233276367
    7. 'def' → logprob: -15.750242233276367
    8. ' ' → logprob: -15.875242233276367
    9. 'j' → logprob: -16.750242233276367
    10. '}' → logprob: -17.125242233276367

Token 213: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19724775850772858
    2. 'for' → logprob: -2.0722477436065674
    3. ' for' → logprob: -2.9472477436065674
    4. '
' → logprob: -8.322247505187988
    5. '    
' → logprob: -9.072247505187988
    6. 'bits' → logprob: -9.697247505187988
    7. '```' → logprob: -10.447247505187988
    8. ' bits' → logprob: -10.572247505187988
    9. 'mask' → logprob: -10.697247505187988
    10. 'i' → logprob: -11.197247505187988

Token 214: ' ex' (ID: 513)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5240790247917175
    2. '   ' → logprob: -1.5240790843963623
    3. 'bits' → logprob: -2.7740790843963623
    4. 'current' → logprob: -3.1490790843963623
    5. 'bit' → logprob: -3.1490790843963623
    6. ' for' → logprob: -4.024078845977783
    7. 'or' → logprob: -5.524078845977783
    8. 'curr' → logprob: -5.899078845977783
    9. 'sum' → logprob: -6.024078845977783
    10. 'seen' → logprob: -6.149078845977783

Token 215: ' =' (ID: 314)
  Prédit: '_bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bits' → logprob: -0.5696777701377869
    2. '_set' → logprob: -1.6946778297424316
    3. '_or' → logprob: -2.0696778297424316
    4. 'or' → logprob: -3.6946778297424316
    5. 'OR' → logprob: -3.8196778297424316
    6. '_sum' → logprob: -3.9446778297424316
    7. ' =' → logprob: -4.694677829742432
    8. '_' → logprob: -4.694677829742432
    9. '_val' → logprob: -5.069677829742432
    10. '_mask' → logprob: -5.444677829742432

Token 216: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010068230039905757
    2. ' ' → logprob: -9.500101089477539
    3. 'A' → logprob: -11.000101089477539
    4. '[]' → logprob: -12.500101089477539
    5. '{}' → logprob: -13.125101089477539
    6. 'set' → logprob: -13.625101089477539
    7. '   ' → logprob: -14.500101089477539
    8. '[' → logprob: -15.125101089477539
    9. ' A' → logprob: -15.375101089477539
    10. '00' → logprob: -16.00010108947754

Token 217: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0029123348649591208
    2. 'set' → logprob: -6.377912521362305
    3. '{}' → logprob: -7.502912521362305
    4. 'A' → logprob: -8.127912521362305
    5. '[]' → logprob: -8.127912521362305
    6. ' ' → logprob: -10.502912521362305
    7. '{' → logprob: -11.127912521362305
    8. '[' → logprob: -11.752912521362305
    9. 'default' → logprob: -12.752912521362305
    10. 'dict' → logprob: -13.127912521362305

Token 218: '  ' (ID: 256)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6847411394119263
    2. '
' → logprob: -1.9347411394119263
    3. 'xor' → logprob: -2.4347410202026367
    4. 'for' → logprob: -2.9347410202026367
    5. ' ^' → logprob: -3.1847410202026367
    6. ' ' → logprob: -3.4347410202026367
    7. ' xor' → logprob: -3.9347410202026367
    8. ' for' → logprob: -3.9347410202026367
    9. ' 
' → logprob: -3.9347410202026367
    10. ',' → logprob: -4.184741020202637

Token 219: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7188134789466858
    2. '   ' → logprob: -1.718813419342041
    3. 'xor' → logprob: -2.093813419342041
    4. 'for' → logprob: -2.843813419342041
    5. '<|end|>' → logprob: -3.343813419342041
    6. '^' → logprob: -3.593813419342041
    7. ' ^' → logprob: -3.843813419342041
    8. 'or' → logprob: -4.718813419342041
    9. ' ' → logprob: -4.843813419342041
    10. '|' → logprob: -5.093813419342041

Token 220: ' Ré' (ID: 27181)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09251239150762558
    2. 'xor' → logprob: -3.467512369155884
    3. 'sum' → logprob: -3.592512369155884
    4. 'current' → logprob: -4.592512607574463
    5. 'for' → logprob: -5.717512607574463
    6. 'mask' → logprob: -6.092512607574463
    7. 'set' → logprob: -6.217512607574463
    8. '<|end|>' → logprob: -6.467512607574463
    9. ' ' → logprob: -6.592512607574463
    10. 'x' → logprob: -6.967512607574463

Token 221: 'initial' (ID: 17493)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.05606846883893013
    2. 's' → logprob: -3.1810684204101562
    3. 'xor' → logprob: -5.931068420410156
    4. 'set' → logprob: -6.306068420410156
    5. 'serv' → logprob: -7.181068420410156
    6. 'ex' → logprob: -7.181068420410156
    7. 'summ' → logprob: -7.181068420410156
    8. 'p' → logprob: -7.431068420410156
    9. '   ' → logprob: -7.681068420410156
    10. 'ponse' → logprob: -7.806068420410156

Token 222: 'isé' (ID: 30065)
  Prédit: 'iser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.022133486345410347
    2. 'isé' → logprob: -4.1471333503723145
    3. 'ex' → logprob: -6.6471333503723145
    4. '   ' → logprob: -7.6471333503723145
    5. 'def' → logprob: -7.6471333503723145
    6. 'is' → logprob: -7.7721333503723145
    7. 'isert' → logprob: -7.7721333503723145
    8. 'ise' → logprob: -7.8971333503723145
    9. 'isée' → logprob: -7.8971333503723145
    10. 'er' → logprob: -8.022133827209473

Token 223: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45462581515312195
    2. '<|end|>' → logprob: -1.8296258449554443
    3. 'for' → logprob: -2.2046258449554443
    4. ' for' → logprob: -2.9546258449554443
    5. 'xor' → logprob: -3.8296258449554443
    6. 'bits' → logprob: -5.454625606536865
    7. 'sum' → logprob: -5.579625606536865
    8. ' xor' → logprob: -6.329625606536865
    9. '  ' → logprob: -6.579625606536865
    10. '
' → logprob: -6.579625606536865

Token 224: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005220544408075511
    2. ' ' → logprob: -7.625522136688232
    3. 'ex' → logprob: -11.375521659851074
    4. '   ' → logprob: -11.500521659851074
    5. 'zero' → logprob: -13.250521659851074
    6. '  ' → logprob: -13.625521659851074
    7. ')' → logprob: -13.875521659851074
    8. 'j' → logprob: -14.563021659851074
    9. '```' → logprob: -14.563021659851074
    10. 'int' → logprob: -14.625521659851074

Token 225: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.040457421680912e-05
    2. 'ex' → logprob: -10.375070571899414
    3. ' ' → logprob: -10.875070571899414
    4. ')' → logprob: -13.000070571899414
    5. 'j' → logprob: -13.125070571899414
    6. 'zero' → logprob: -13.125070571899414
    7. '   ' → logprob: -13.250070571899414
    8. '{}' → logprob: -13.375070571899414
    9. '[]' → logprob: -13.500070571899414
    10. '-' → logprob: -13.875070571899414

Token 226: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8976082801818848
    2. 'for' → logprob: -0.8976082801818848
    3. ' for' → logprob: -1.7726082801818848
    4. 'or' → logprob: -5.522608280181885
    5. 'bits' → logprob: -6.022608280181885
    6. 'xor' → logprob: -6.022608280181885
    7. ' or' → logprob: -7.022608280181885
    8. 'bit' → logprob: -7.397608280181885
    9. 'current' → logprob: -7.397608280181885
    10. ' xor' → logprob: -7.522608280181885

Token 227: ' chaque' (ID: 21194)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11646424978971481
    2. 'i' → logprob: -3.116464138031006
    3. ' ' → logprob: -4.116464138031006
    4. ' chaque' → logprob: -4.741464138031006
    5. 'clar' → logprob: -4.741464138031006
    6. 'l' → logprob: -4.991464138031006
    7. '_' → logprob: -6.116464138031006
    8. ')' → logprob: -6.116464138031006
    9. '<|end|>' → logprob: -6.241464138031006
    10. 'ex' → logprob: -6.491464138031006

Token 228: ' nouveau' (ID: 23184)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.09619647264480591
    2. ' i' → logprob: -3.846196413040161
    3. 'for' → logprob: -4.59619665145874
    4. 'dé' → logprob: -4.84619665145874
    5. 'l' → logprob: -5.09619665145874
    6. 'tour' → logprob: -5.22119665145874
    7. 'it' → logprob: -5.34619665145874
    8. 'iteration' → logprob: -5.34619665145874
    9. 'élé' → logprob: -5.34619665145874
    10. 's' → logprob: -5.47119665145874

Token 229: ' début' (ID: 29589)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.01459815539419651
    2. ' i' → logprob: -5.014598369598389
    3. 's' → logprob: -6.389598369598389
    4. 'for' → logprob: -6.639598369598389
    5. 'dé' → logprob: -6.764598369598389
    6. 'segment' → logprob: -7.639598369598389
    7. 'start' → logprob: -8.01459789276123
    8. 'l' → logprob: -8.01459789276123
    9. '<|end|>' → logprob: -8.01459789276123
    10. '```' → logprob: -8.51459789276123

Token 230: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8021764755249023
    2. 'for' → logprob: -1.0521764755249023
    3. ' for' → logprob: -1.6771764755249023
    4. '<|end|>' → logprob: -4.302176475524902
    5. '
' → logprob: -6.677176475524902
    6. 'def' → logprob: -8.677176475524902
    7. '  ' → logprob: -9.052176475524902
    8. '    
' → logprob: -9.177176475524902
    9. '<|end|>' → logprob: -9.177176475524902
    10. ',' → logprob: -9.802176475524902

Token 231: ' sous' (ID: 14487)
  Prédit: 'pl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pl' → logprob: -0.36334383487701416
    2. 's' → logprob: -1.6133438348770142
    3. 'fen' → logprob: -3.2383437156677246
    4. 'i' → logprob: -3.6133437156677246
    5. 'for' → logprob: -4.613343715667725
    6. 'bou' → logprob: -4.738343715667725
    7. 'interval' → logprob: -4.988343715667725
    8. 'window' → logprob: -5.363343715667725
    9. 'j' → logprob: -6.363343715667725
    10. 'la' → logprob: -6.613343715667725

Token 232: '-table' (ID: 35909)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5374488830566406
    2. 'for' → logprob: -1.7874488830566406
    3. '   ' → logprob: -1.9124488830566406
    4. '_i' → logprob: -3.1624488830566406
    5. 'array' → logprob: -3.4124488830566406
    6. '_' → logprob: -5.537448883056641
    7. 'def' → logprob: -6.162448883056641
    8. 'tab' → logprob: -6.662448883056641
    9. '_array' → logprob: -6.662448883056641
    10. 'j' → logprob: -6.787448883056641

Token 233: 'au' (ID: 753)
  Prédit: 'array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'array' → logprob: -1.3212424516677856
    2. 'rray' → logprob: -1.5712424516677856
    3. '   ' → logprob: -2.071242332458496
    4. 'r' → logprob: -2.571242332458496
    5. 'for' → logprob: -2.696242332458496
    6. 'i' → logprob: -2.821242332458496
    7. 'ur' → logprob: -3.071242332458496
    8. 'ray' → logprob: -3.446242332458496
    9. 'x' → logprob: -4.696242332458496
    10. 'au' → logprob: -4.696242332458496

Token 234: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22490228712558746
    2. ' for' → logprob: -1.9749022722244263
    3. 'for' → logprob: -2.849902391433716
    4. '<|end|>' → logprob: -6.099902153015137
    5. '
' → logprob: -6.599902153015137
    6. '  ' → logprob: -7.974902153015137
    7. ',' → logprob: -8.349902153015137
    8. '    
' → logprob: -8.599902153015137
    9. ' 
' → logprob: -9.599902153015137
    10. '  
' → logprob: -9.724902153015137

Token 235: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.681978166103363
    2. ' for' → logprob: -1.3069782257080078
    3. 'for' → logprob: -1.5569782257080078
    4. '
' → logprob: -5.056978225708008
    5. '<|end|>' → logprob: -5.181978225708008
    6. ',' → logprob: -8.931978225708008
    7. '    
' → logprob: -9.056978225708008
    8. ' 
' → logprob: -9.681978225708008
    9. '  ' → logprob: -9.681978225708008
    10. 'def' → logprob: -10.056978225708008

Token 236: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.22017507255077362
    2. '   ' → logprob: -2.34517502784729
    3. ' for' → logprob: -2.47017502784729
    4. 'bits' → logprob: -5.095175266265869
    5. 'xor' → logprob: -5.970175266265869
    6. 'i' → logprob: -6.345175266265869
    7. 'or' → logprob: -6.345175266265869
    8. 'bit' → logprob: -6.970175266265869
    9. 'current' → logprob: -7.095175266265869
    10. 'mask' → logprob: -7.720175266265869

Token 237: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.1269463747739792
    2. 'i' → logprob: -2.126946449279785
    3. '	i' → logprob: -11.751946449279785
    4. '   ' → logprob: -12.001946449279785
    5. '_i' → logprob: -13.501946449279785
    6. ' ' → logprob: -13.501946449279785
    7. '```' → logprob: -14.876946449279785
    8. '    ' → logprob: -15.689446449279785
    9. '  ' → logprob: -15.751946449279785
    10. 'I' → logprob: -16.18944549560547

Token 238: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023262368515133858
    2. 'in' → logprob: -3.7732622623443604
    3. ' ' → logprob: -11.273262023925781
    4. '	in' → logprob: -14.523262023925781
    5. 'import' → logprob: -14.898262023925781
    6. '   ' → logprob: -15.023262023925781
    7. ' i' → logprob: -15.148262023925781
    8. ')' → logprob: -15.148262023925781
    9. 'range' → logprob: -15.148262023925781
    10. '_in' → logprob: -15.148262023925781

Token 239: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5759443044662476
    2. 'range' → logprob: -0.8259443044662476
    3. '0' → logprob: -13.450943946838379
    4. '(range' → logprob: -13.575943946838379
    5. '   ' → logprob: -14.075943946838379
    6. ' ' → logprob: -14.700943946838379
    7. 'in' → logprob: -15.325943946838379
    8. ')' → logprob: -15.450943946838379
    9. '	range' → logprob: -15.450943946838379
    10. ' in' → logprob: -16.075944900512695

Token 240: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0005711443373002112
    2. '(' → logprob: -7.500571250915527
    3. 'N' → logprob: -11.375571250915527
    4. ' (' → logprob: -12.625571250915527
    5. '(n' → logprob: -13.125571250915527
    6. '(len' → logprob: -14.375571250915527
    7. '   ' → logprob: -15.500571250915527
    8. ' N' → logprob: -15.750571250915527
    9. '(
' → logprob: -16.12557029724121
    10. '(i' → logprob: -16.62557029724121

Token 241: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00045069176121614873
    2. '):
' → logprob: -8.62545108795166
    3. ' ):' → logprob: -8.62545108795166
    4. ':' → logprob: -9.87545108795166
    5. '   ' → logprob: -10.75045108795166
    6. ')' → logprob: -11.00045108795166
    7. ',' → logprob: -15.12545108795166
    8. ' :' → logprob: -15.12545108795166
    9. '+' → logprob: -15.50045108795166
    10. '):
' → logprob: -15.62545108795166

Token 242: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.035134971141815186
    2. ' while' → logprob: -3.66013503074646
    3. 'while' → logprob: -5.660134792327881
    4. '<|end|>' → logprob: -6.285134792327881
    5. '   ' → logprob: -6.535134792327881
    6. '    ' → logprob: -6.910134792327881
    7. ' if' → logprob: -7.785134792327881
    8. ' ex' → logprob: -8.910135269165039
    9. 'ex' → logprob: -8.910135269165039
    10. '        
' → logprob: -9.285135269165039

Token 243: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4654863476753235
    2. ' while' → logprob: -1.4654862880706787
    3. 'while' → logprob: -1.9654862880706787
    4. '   ' → logprob: -7.090486526489258
    5. '	while' → logprob: -8.840486526489258
    6. '    ' → logprob: -10.090486526489258
    7. 'ex' → logprob: -10.590486526489258
    8. '
' → logprob: -11.590486526489258
    9. 'While' → logprob: -11.590486526489258
    10. '        
' → logprob: -11.715486526489258

Token 244: ' Ét' (ID: 54156)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.005399646237492561
    2. ' while' → logprob: -5.255399703979492
    3. '       ' → logprob: -9.005399703979492
    4. 'While' → logprob: -10.380399703979492
    5. '   ' → logprob: -11.880399703979492
    6. '	while' → logprob: -13.255399703979492
    7. 'if' → logprob: -14.130399703979492
    8. 'ex' → logprob: -14.505399703979492
    9. '#' → logprob: -14.505399703979492
    10. ' While' → logprob: -15.005399703979492

Token 245: 'end' (ID: 419)
  Prédit: 'endre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'endre' → logprob: -0.1950034648180008
    2. '   ' → logprob: -2.3200035095214844
    3. 'ape' → logprob: -3.4450035095214844
    4. '       ' → logprob: -3.8200035095214844
    5. '=' → logprob: -5.445003509521484
    6. 'ant' → logprob: -5.445003509521484
    7. '#' → logprob: -5.945003509521484
    8. '}' → logprob: -6.570003509521484
    9. 'udier' → logprob: -6.570003509521484
    10. '    ' → logprob: -6.695003509521484

Token 246: ' j' (ID: 441)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.9342254996299744
    2. ' while' → logprob: -1.1842255592346191
    3. '       ' → logprob: -2.059225559234619
    4. '   ' → logprob: -2.309225559234619
    5. '    ' → logprob: -3.309225559234619
    6. 'ex' → logprob: -4.809225559234619
    7. ' j' → logprob: -5.309225559234619
    8. 'j' → logprob: -5.434225559234619
    9. 'if' → logprob: -5.684225559234619
    10. ' la' → logprob: -5.809225559234619

Token 247: ' aussi' (ID: 9894)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.06410089135169983
    2. ' while' → logprob: -3.064100980758667
    3. '       ' → logprob: -4.314100742340088
    4. '	while' → logprob: -6.314100742340088
    5. '   ' → logprob: -8.814101219177246
    6. '    ' → logprob: -11.564101219177246
    7. '        
' → logprob: -11.814101219177246
    8. '      ' → logprob: -11.939101219177246
    9. '           ' → logprob: -11.939101219177246
    10. '<|end|>' → logprob: -12.314101219177246

Token 248: ' loin' (ID: 40875)
  Prédit: 'long'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'long' → logprob: -0.13894030451774597
    2. ' longtemps' → logprob: -2.1389403343200684
    3. 'while' → logprob: -4.888940334320068
    4. ' long' → logprob: -6.513940334320068
    5. 'loin' → logprob: -6.513940334320068
    6. '   ' → logprob: -7.763940334320068
    7. 'l' → logprob: -8.01393985748291
    8. ' ' → logprob: -8.13893985748291
    9. 'lo' → logprob: -8.38893985748291
    10. '  ' → logprob: -10.01393985748291

Token 249: ' que' (ID: 661)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4151913821697235
    2. 'while' → logprob: -1.790191411972046
    3. 'que' → logprob: -2.540191411972046
    4. 'as' → logprob: -2.665191411972046
    5. ' que' → logprob: -4.540191173553467
    6. '   ' → logprob: -4.790191173553467
    7. '           ' → logprob: -6.165191173553467
    8. '        
' → logprob: -7.290191173553467
    9. 'qu' → logprob: -7.415191173553467
    10. ' as' → logprob: -7.790191173553467

Token 250: ' l' (ID: 305)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.03328382223844528
    2. 'i' → logprob: -4.533283710479736
    3. '(j' → logprob: -4.783283710479736
    4. ' j' → logprob: -5.158283710479736
    5. '(A' → logprob: -6.158283710479736
    6. '(i' → logprob: -6.408283710479736
    7. 'possible' → logprob: -7.033283710479736
    8. 'ex' → logprob: -7.033283710479736
    9. ' (' → logprob: -7.533283710479736
    10. 'A' → logprob: -7.658283710479736

Token 251: ''in' (ID: 17942)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.7128683924674988
    2. ' ex' → logprob: -1.2128684520721436
    3. 'ex' → logprob: -1.9628684520721436
    4. 'j' → logprob: -3.7128684520721436
    5. ''ex' → logprob: -3.9628684520721436
    6. ' i' → logprob: -4.3378682136535645
    7. '   ' → logprob: -5.7128682136535645
    8. 'i' → logprob: -5.8378682136535645
    9. 'e' → logprob: -6.3378682136535645
    10. ' (' → logprob: -6.8378682136535645

Token 252: 'variant' (ID: 27649)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.18311943113803864
    2. 'j' → logprob: -2.933119535446167
    3. ' range' → logprob: -3.183119535446167
    4. ' j' → logprob: -4.183119297027588
    5. 't' → logprob: -5.058119297027588
    6. '(j' → logprob: -5.058119297027588
    7. '_range' → logprob: -5.183119297027588
    8. 'possible' → logprob: -5.183119297027588
    9. '(i' → logprob: -5.558119297027588
    10. 'i' → logprob: -5.683119297027588

Token 253: ' ex' (ID: 513)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6901400685310364
    2. 'and' → logprob: -1.5651400089263916
    3. ' et' → logprob: -2.3151400089263916
    4. 'et' → logprob: -2.9401400089263916
    5. '       ' → logprob: -3.4401400089263916
    6. '   ' → logprob: -3.5651400089263916
    7. ' possible' → logprob: -4.315140247344971
    8. '<' → logprob: -4.440140247344971
    9. 'possible' → logprob: -4.940140247344971
    10. ' is' → logprob: -5.315140247344971

Token 254: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3040655255317688
    2. '+' → logprob: -1.429065465927124
    3. '==' → logprob: -4.804065704345703
    4. ' ==' → logprob: -5.179065704345703
    5. '+x' → logprob: -6.429065704345703
    6. ' &' → logprob: -6.429065704345703
    7. '+A' → logprob: -6.929065704345703
    8. '+a' → logprob: -7.179065704345703
    9. ' ^' → logprob: -7.429065704345703
    10. '|' → logprob: -7.429065704345703

Token 255: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.10175611078739166
    2. ' A' → logprob: -2.3517560958862305
    3. '+A' → logprob: -7.9767560958862305
    4. '+' → logprob: -8.10175609588623
    5. ' +' → logprob: -8.47675609588623
    6. ' ' → logprob: -9.47675609588623
    7. '(A' → logprob: -9.47675609588623
    8. '=' → logprob: -9.60175609588623
    9. '=A' → logprob: -9.85175609588623
    10. '0' → logprob: -10.10175609588623

Token 256: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -6.749814019713085e-06
    2. 'j' → logprob: -12.625006675720215
    3. '[i' → logprob: -13.375006675720215
    4. '[' → logprob: -13.500006675720215
    5. '   ' → logprob: -15.500006675720215
    6. ' &' → logprob: -15.750006675720215
    7. ',j' → logprob: -17.12500762939453
    8. '	j' → logprob: -17.25000762939453
    9. '_j' → logprob: -17.50000762939453
    10. ')' → logprob: -17.75000762939453

Token 257: ']' (ID: 60)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.09282197058200836
    2. '[i' → logprob: -3.7178220748901367
    3. ')' → logprob: -3.9678220748901367
    4. ' &' → logprob: -4.217822074890137
    5. ']' → logprob: -4.467822074890137
    6. '&' → logprob: -4.592822074890137
    7. '[' → logprob: -5.092822074890137
    8. ' ' → logprob: -8.092822074890137
    9. ' ==' → logprob: -8.342822074890137
    10. '   ' → logprob: -8.467822074890137

Token 258: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -1.0888415575027466
    2. '==' → logprob: -1.5888415575027466
    3. '+' → logprob: -1.8388415575027466
    4. ' &' → logprob: -2.088841438293457
    5. '&' → logprob: -2.588841438293457
    6. ' +' → logprob: -3.463841438293457
    7. ' ^' → logprob: -4.338841438293457
    8. ' <=' → logprob: -4.463841438293457
    9. '^' → logprob: -4.588841438293457
    10. '<=' → logprob: -4.713841438293457

Token 259: ' ex' (ID: 513)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.7071753740310669
    2. '(ex' → logprob: -1.457175374031067
    3. ' ex' → logprob: -1.582175374031067
    4. ' (' → logprob: -2.7071752548217773
    5. '(' → logprob: -6.832175254821777
    6. '(j' → logprob: -8.957175254821777
    7. 'j' → logprob: -9.207175254821777
    8. '0' → logprob: -9.457175254821777
    9. '	ex' → logprob: -9.519675254821777
    10. '(A' → logprob: -9.769675254821777

Token 260: ' ^' (ID: 7602)
  Prédit: ' ^'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ^' → logprob: -0.7417563199996948
    2. ' +' → logprob: -1.2417563199996948
    3. '+' → logprob: -1.7417563199996948
    4. '^' → logprob: -2.8667564392089844
    5. '   ' → logprob: -7.491756439208984
    6. '+x' → logprob: -7.616756439208984
    7. ' ' → logprob: -7.991756439208984
    8. '|' → logprob: -8.116756439208984
    9. ' xor' → logprob: -8.366756439208984
    10. ' |' → logprob: -8.366756439208984

Token 261: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.17979909479618073
    2. ' A' → logprob: -1.8047990798950195
    3. ' ' → logprob: -10.05479907989502
    4. '   ' → logprob: -12.17979907989502
    5. '<|end|>' → logprob: -13.42979907989502
    6. ' ' → logprob: -13.67979907989502
    7. '	A' → logprob: -13.92979907989502
    8. '  ' → logprob: -14.17979907989502
    9. '    ' → logprob: -15.05479907989502
    10. '```' → logprob: -15.17979907989502

Token 262: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -2.3915141355246305e-05
    2. '[' → logprob: -11.37502384185791
    3. 'j' → logprob: -11.37502384185791
    4. '[
' → logprob: -15.12502384185791
    5. '[i' → logprob: -15.62502384185791
    6. '```' → logprob: -15.75002384185791
    7. '\[' → logprob: -16.875024795532227
    8. 'a' → logprob: -17.000024795532227
    9. '[js' → logprob: -17.375024795532227
    10. '(j' → logprob: -17.375024795532227

Token 263: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.0018070936203003
    2. '[j' → logprob: -1.0018070936203003
    3. ']:' → logprob: -2.12680721282959
    4. '):' → logprob: -2.37680721282959
    5. ')' → logprob: -4.25180721282959
    6. ':' → logprob: -4.50180721282959
    7. 'j' → logprob: -5.25180721282959
    8. '[' → logprob: -5.75180721282959
    9. '   ' → logprob: -5.75180721282959
    10. ']):' → logprob: -6.00180721282959

Token 264: ' est' (ID: 893)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.08931031823158264
    2. '       ' → logprob: -2.96431040763855
    3. 'and' → logprob: -3.58931040763855
    4. ',' → logprob: -6.089310169219971
    5. ':' → logprob: -6.839310169219971
    6. '        ' → logprob: -7.339310169219971
    7. '<|end|>' → logprob: -7.464310169219971
    8. ' if' → logprob: -7.714310169219971
    9. ' while' → logprob: -7.714310169219971
    10. ' ' → logprob: -9.089310646057129

Token 265: ' vér' (ID: 42524)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.20345933735370636
    2. 'True' → logprob: -2.3284592628479004
    3. 'true' → logprob: -3.5784592628479004
    4. '   ' → logprob: -3.8284592628479004
    5. 's' → logprob: -4.0784592628479
    6. 'possible' → logprob: -4.9534592628479
    7. 'valid' → logprob: -5.2034592628479
    8. 'respect' → logprob: -5.9534592628479
    9. ' True' → logprob: -6.2034592628479
    10. 'maint' → logprob: -6.4534592628479

Token 266: 'ifié' (ID: 49927)
  Prédit: 'ifié'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifié' → logprob: -0.010059208609163761
    2. 'ifi' → logprob: -5.010059356689453
    3. 'ifiée' → logprob: -6.135059356689453
    4. 'if' → logprob: -7.510059356689453
    5. 'ifie' → logprob: -8.135059356689453
    6. 'ifiable' → logprob: -9.135059356689453
    7. 'i' → logprob: -9.260059356689453
    8. 'ifiés' → logprob: -9.885059356689453
    9. 'ified' → logprob: -10.760059356689453
    10. 'fi' → logprob: -11.010059356689453

Token 267: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06902763992547989
    2. '
' → logprob: -3.8190276622772217
    3. '<|end|>' → logprob: -3.9440276622772217
    4. ' while' → logprob: -4.069027423858643
    5. '        
' → logprob: -5.444027423858643
    6. 'while' → logprob: -6.694027423858643
    7. '<|end|>' → logprob: -7.569027423858643
    8. ':' → logprob: -7.694027423858643
    9. '  
' → logprob: -8.0690279006958
    10. ',' → logprob: -8.1940279006958

Token 268: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06840929388999939
    2. '<|end|>' → logprob: -3.6934092044830322
    3. '   ' → logprob: -3.9434092044830322
    4. ' while' → logprob: -5.193409442901611
    5. ' ' → logprob: -5.693409442901611
    6. '    ' → logprob: -5.818409442901611
    7. ' 
' → logprob: -5.943409442901611
    8. '        
' → logprob: -6.443409442901611
    9. '        ' → logprob: -6.818409442901611
    10. 'while' → logprob: -7.068409442901611

Token 269: ' #' (ID: 1069)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.5649275183677673
    2. '       ' → logprob: -1.189927577972412
    3. 'while' → logprob: -2.064927577972412
    4. '<|end|>' → logprob: -8.564927101135254
    5. '	while' → logprob: -8.814927101135254
    6. '   ' → logprob: -9.564927101135254
    7. '    ' → logprob: -10.189927101135254
    8. 'While' → logprob: -10.564927101135254
    9. '        ' → logprob: -11.064927101135254
    10. '        
' → logprob: -11.064927101135254

Token 270: ' Cela' (ID: 44403)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.6942744851112366
    2. 'while' → logprob: -0.9442744851112366
    3. '       ' → logprob: -2.194274425506592
    4. '   ' → logprob: -9.44427490234375
    5. '	while' → logprob: -10.44427490234375
    6. '    ' → logprob: -10.56927490234375
    7. 'While' → logprob: -11.06927490234375
    8. '        ' → logprob: -12.19427490234375
    9. ' ' → logprob: -13.19427490234375
    10. '
' → logprob: -13.56927490234375

Token 271: ' signifie' (ID: 81149)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.215317040681839
    2. '       ' → logprob: -1.9653170108795166
    3. ' while' → logprob: -2.9653170108795166
    4. '   ' → logprob: -7.090317249298096
    5. 'if' → logprob: -7.590317249298096
    6. '	while' → logprob: -8.715316772460938
    7. '    ' → logprob: -9.340316772460938
    8. ':' → logprob: -9.465316772460938
    9. ' if' → logprob: -9.715316772460938
    10. '           ' → logprob: -10.090316772460938

Token 272: ' qu' (ID: 474)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.4311855435371399
    2. 'j' → logprob: -1.1811854839324951
    3. ' que' → logprob: -4.306185722351074
    4. ' (' → logprob: -4.431185722351074
    5. '   ' → logprob: -5.681185722351074
    6. ' not' → logprob: -6.056185722351074
    7. ' ' → logprob: -6.306185722351074
    8. 'ex' → logprob: -6.306185722351074
    9. 'A' → logprob: -6.306185722351074
    10. '(j' → logprob: -6.431185722351074

Token 273: ''' (ID: 6)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.1591445803642273
    2. '(j' → logprob: -3.409144639968872
    3. '(A' → logprob: -3.659144639968872
    4. '       ' → logprob: -4.034144401550293
    5. ' j' → logprob: -4.034144401550293
    6. 'j' → logprob: -4.409144401550293
    7. '(' → logprob: -4.659144401550293
    8. '((' → logprob: -4.784144401550293
    9. '(ex' → logprob: -5.034144401550293
    10. '           ' → logprob: -5.784144401550293

Token 274: 'auc' (ID: 11816)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.0900804996490479
    2. ' j' → logprob: -1.3400804996490479
    3. '(j' → logprob: -1.4650804996490479
    4. 'j' → logprob: -2.590080499649048
    5. '(ex' → logprob: -3.340080499649048
    6. '(A' → logprob: -3.840080499649048
    7. '(' → logprob: -4.590080261230469
    8. '((' → logprob: -4.965080261230469
    9. ' ex' → logprob: -5.090080261230469
    10. 'ex' → logprob: -5.465080261230469

Token 275: 'un' (ID: 373)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.43397948145866394
    2. 'un' → logprob: -1.6839795112609863
    3. 'que' → logprob: -2.8089795112609863
    4. '   ' → logprob: -2.8089795112609863
    5. 'une' → logprob: -4.308979511260986
    6. '    ' → logprob: -4.933979511260986
    7. ''un' → logprob: -4.933979511260986
    8. '        ' → logprob: -5.433979511260986
    9. '      ' → logprob: -5.933979511260986
    10. 'qu' → logprob: -5.933979511260986

Token 276: ' bit' (ID: 3546)
  Prédit: ' bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bit' → logprob: -1.5059854984283447
    2. 'bit' → logprob: -1.8809854984283447
    3. '&' → logprob: -2.3809854984283447
    4. '(A' → logprob: -2.3809854984283447
    5. ' set' → logprob: -2.6309854984283447
    6. ' ' → logprob: -2.7559854984283447
    7. ' &' → logprob: -3.1309854984283447
    8. 'set' → logprob: -3.2559854984283447
    9. '1' → logprob: -3.5059854984283447
    10. 'ex' → logprob: -3.6309854984283447

Token 277: ' ne' (ID: 453)
  Prédit: ' set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' set' → logprob: -1.7441060543060303
    2. 'set' → logprob: -1.7441060543060303
    3. ' de' → logprob: -1.9941060543060303
    4. '_set' → logprob: -2.1191060543060303
    5. '   ' → logprob: -2.6191060543060303
    6. 'n' → logprob: -2.9941060543060303
    7. ' ne' → logprob: -3.2441060543060303
    8. ' n' → logprob: -3.3691060543060303
    9. ')' → logprob: -3.3691060543060303
    10. 'de' → logprob: -3.7441060543060303

Token 278: ' se' (ID: 458)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.4725934565067291
    2. ' se' → logprob: -1.9725934267044067
    3. 'se' → logprob: -2.0975935459136963
    4. ' &' → logprob: -2.5975935459136963
    5. 'set' → logprob: -5.222593307495117
    6. '   ' → logprob: -5.472593307495117
    7. 'ex' → logprob: -5.597593307495117
    8. ' set' → logprob: -5.972593307495117
    9. ' n' → logprob: -5.972593307495117
    10. 'n' → logprob: -6.222593307495117

Token 279: ' "' (ID: 392)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.049400556832551956
    2. ' set' → logprob: -3.924400568008423
    3. '1' → logprob: -4.924400329589844
    4. 'ré' → logprob: -5.424400329589844
    5. 'part' → logprob: -6.174400329589844
    6. 'repr' → logprob: -6.299400329589844
    7. ' ' → logprob: -6.424400329589844
    8. '```' → logprob: -6.424400329589844
    9. 'super' → logprob: -7.049400329589844
    10. 're' → logprob: -7.424400329589844

Token 280: 'collision' (ID: 121566)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'set' → logprob: -1.3336315155029297
    2. 'over' → logprob: -1.8336315155029297
    3. 'super' → logprob: -2.5836315155029297
    4. 'che' → logprob: -2.9586315155029297
    5. 'conf' → logprob: -3.0836315155029297
    6. 'c' → logprob: -3.0836315155029297
    7. '&' → logprob: -3.2086315155029297
    8. 'inter' → logprob: -3.2086315155029297
    9. '1' → logprob: -3.4586315155029297
    10. 're' → logprob: -3.7086315155029297

Token 281: 'ne' (ID: 611)
  Prédit: 'ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ne' → logprob: -0.07229427248239517
    2. 'e' → logprob: -2.697294235229492
    3. 'ue' → logprob: -7.572294235229492
    4. 'nne' → logprob: -7.822294235229492
    5. 'nent' → logprob: -7.947294235229492
    6. 't' → logprob: -9.072294235229492
    7. 'n' → logprob: -9.197294235229492
    8. 'ent' → logprob: -9.322294235229492
    9. 'né' → logprob: -9.447294235229492
    10. 'te' → logprob: -9.447294235229492

Token 282: '"' (ID: 1)
  Prédit: ' avec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' avec' → logprob: -1.3675670623779297
    2. ' pas' → logprob: -1.7425670623779297
    3. ' entre' → logprob: -1.8675670623779297
    4. ' ' → logprob: -2.4925670623779297
    5. ',' → logprob: -2.9925670623779297
    6. ' dans' → logprob: -3.1175670623779297
    7. ')' → logprob: -3.1175670623779297
    8. ' with' → logprob: -3.6175670623779297
    9. '   ' → logprob: -3.6175670623779297
    10. 's' → logprob: -4.36756706237793

Token 283: ' quand' (ID: 18026)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.4730280935764313
    2. '       ' → logprob: -1.5980280637741089
    3. ' or' → logprob: -3.0980281829833984
    4. ',' → logprob: -3.3480281829833984
    5. 'and' → logprob: -3.8480281829833984
    6. '<|end|>' → logprob: -4.098028182983398
    7. '    ' → logprob: -4.473028182983398
    8. ' ' → logprob: -4.598028182983398
    9. '   ' → logprob: -4.723028182983398
    10. ' et' → logprob: -4.848028182983398

Token 284: ' on' (ID: 402)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -1.071567177772522
    2. 'ex' → logprob: -1.696567177772522
    3. 'A' → logprob: -1.821567177772522
    4. 'j' → logprob: -2.1965670585632324
    5. '   ' → logprob: -2.5715670585632324
    6. ' on' → logprob: -2.9465670585632324
    7. '^' → logprob: -4.321567058563232
    8. '       ' → logprob: -4.446567058563232
    9. ' j' → logprob: -4.821567058563232
    10. '(ex' → logprob: -4.821567058563232

Token 285: ' ajoute' (ID: 91611)
  Prédit: ' ajoute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ajoute' → logprob: -0.05089126527309418
    2. ' fait' → logprob: -4.550891399383545
    3. 'aj' → logprob: -4.925891399383545
    4. '&' → logprob: -6.050891399383545
    5. '|' → logprob: -6.050891399383545
    6. '+' → logprob: -6.300891399383545
    7. ' utilise' → logprob: -6.300891399383545
    8. 'fait' → logprob: -6.425891399383545
    9. ' combine' → logprob: -6.675891399383545
    10. 'j' → logprob: -6.800891399383545

Token 286: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.35873764753341675
    2. 'A' → logprob: -1.2337377071380615
    3. ' (' → logprob: -5.858737468719482
    4. '   ' → logprob: -5.858737468719482
    5. '(A' → logprob: -5.858737468719482
    6. '       ' → logprob: -7.733737468719482
    7. ' ' → logprob: -7.858737468719482
    8. '(' → logprob: -8.98373794555664
    9. ')' → logprob: -8.98373794555664
    10. '    ' → logprob: -9.60873794555664

Token 287: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -8.518582762917504e-05
    2. '[' → logprob: -9.62508487701416
    3. '   ' → logprob: -11.87508487701416
    4. '       ' → logprob: -12.12508487701416
    5. 'j' → logprob: -12.37508487701416
    6. '[
' → logprob: -14.12508487701416
    7. '[i' → logprob: -15.00008487701416
    8. ' [' → logprob: -15.37508487701416
    9. '```' → logprob: -15.87508487701416
    10. ')' → logprob: -16.000085830688477

Token 288: '].
' (ID: 49887)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3711390793323517
    2. '[j' → logprob: -1.7461390495300293
    3. ')' → logprob: -2.4961390495300293
    4. '])' → logprob: -3.6211390495300293
    5. ']):' → logprob: -4.496139049530029
    6. '):' → logprob: -5.246139049530029
    7. '[i' → logprob: -6.246139049530029
    8. '   ' → logprob: -6.621139049530029
    9. '[' → logprob: -6.746139049530029
    10. ']:' → logprob: -7.121139049530029

Token 289: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024971039965748787
    2. ' while' → logprob: -4.149971008300781
    3. 'while' → logprob: -4.774971008300781
    4. '<|end|>' → logprob: -8.524971008300781
    5. '   ' → logprob: -8.899971008300781
    6. '	while' → logprob: -9.149971008300781
    7. '	' → logprob: -12.774971008300781
    8. '	   ' → logprob: -13.024971008300781
    9. '<|end|>' → logprob: -13.149971008300781
    10. '           ' → logprob: -13.274971008300781

Token 290: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.8402291536331177
    2. ' while' → logprob: -1.0902291536331177
    3. '       ' → logprob: -1.4652291536331177
    4. '<|end|>' → logprob: -7.715229034423828
    5. '   ' → logprob: -8.590229034423828
    6. '	while' → logprob: -8.840229034423828
    7. '    ' → logprob: -9.090229034423828
    8. 'While' → logprob: -9.340229034423828
    9. '        ' → logprob: -9.465229034423828
    10. ' if' → logprob: -10.090229034423828

Token 291: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.4742172658443451
    2. ' j' → logprob: -0.9742172956466675
    3. '(j' → logprob: -9.724217414855957
    4. '   ' → logprob: -10.224217414855957
    5. '	j' → logprob: -10.474217414855957
    6. ' ' → logprob: -12.474217414855957
    7. '[j' → logprob: -13.099217414855957
    8. '_j' → logprob: -13.474217414855957
    9. ' ' → logprob: -13.724217414855957
    10. '$j' → logprob: -13.724217414855957

Token 292: ' <=' (ID: 5017)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.03727711737155914
    2. '<N' → logprob: -3.6622772216796875
    3. '<' → logprob: -4.5372772216796875
    4. '<n' → logprob: -8.662277221679688
    5. '<len' → logprob: -10.412277221679688
    6. '<size' → logprob: -12.912277221679688
    7. ' <=' → logprob: -13.412277221679688
    8. '<num' → logprob: -13.787277221679688
    9. '<=' → logprob: -14.287277221679688
    10. '<Q' → logprob: -14.412277221679688

Token 293: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.001392496284097433
    2. ' N' → logprob: -6.626392364501953
    3. '   ' → logprob: -10.251392364501953
    4. 'n' → logprob: -12.251392364501953
    5. ' ' → logprob: -12.251392364501953
    6. '
' → logprob: -12.251392364501953
    7. '  ' → logprob: -12.376392364501953
    8. 'j' → logprob: -12.626392364501953
    9. '<N' → logprob: -12.626392364501953
    10. '	N' → logprob: -13.376392364501953

Token 294: '-' (ID: 12)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.15426166355609894
    2. 'and' → logprob: -2.154261589050293
    3. '-' → logprob: -3.904261589050293
    4. ' -' → logprob: -5.029261589050293
    5. '   ' → logprob: -8.654261589050293
    6. ' ' → logprob: -9.779261589050293
    7. '       ' → logprob: -11.779261589050293
    8. '1' → logprob: -12.029261589050293
    9. ' и' → logprob: -12.279261589050293
    10. '    ' → logprob: -13.029261589050293

Token 295: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2246291337069124e-05
    2. ' ' → logprob: -10.750021934509277
    3. '   ' → logprob: -14.125021934509277
    4. '  ' → logprob: -18.000022888183594
    5. '
' → logprob: -18.750022888183594
    6. '       ' → logprob: -18.750022888183594
    7. '2' → logprob: -18.875022888183594
    8. '-' → logprob: -18.875022888183594
    9. '```' → logprob: -19.250022888183594
    10. ')' → logprob: -20.062522888183594

Token 296: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0380566380918026
    2. 'and' → logprob: -3.2880566120147705
    3. ' ' → logprob: -12.163056373596191
    4. '    ' → logprob: -12.163056373596191
    5. '   ' → logprob: -13.163056373596191
    6. '        ' → logprob: -13.788056373596191
    7. '       ' → logprob: -14.288056373596191
    8. '           ' → logprob: -15.413056373596191
    9. ' и' → logprob: -15.663056373596191
    10. '  ' → logprob: -15.788056373596191

Token 297: ' ex' (ID: 513)
  Prédit: '(ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ex' → logprob: -0.012723661959171295
    2. ' (' → logprob: -5.387723445892334
    3. '((' → logprob: -5.387723445892334
    4. '(A' → logprob: -6.137723445892334
    5. 'ex' → logprob: -6.762723445892334
    6. '(' → logprob: -9.512723922729492
    7. '(a' → logprob: -10.637723922729492
    8. ' ex' → logprob: -11.012723922729492
    9. ' ((' → logprob: -11.137723922729492
    10. '(x' → logprob: -11.762723922729492

Token 298: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3877909183502197
    2. '+' → logprob: -1.1377909183502197
    3. '|' → logprob: -8.26279067993164
    4. ' ^' → logprob: -8.51279067993164
    5. ' &' → logprob: -8.51279067993164
    6. ' |' → logprob: -8.63779067993164
    7. '&' → logprob: -10.88779067993164
    8. ' ' → logprob: -11.13779067993164
    9. '+x' → logprob: -11.26279067993164
    10. '+A' → logprob: -11.26279067993164

Token 299: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.47409600019454956
    2. ' A' → logprob: -0.9740960001945496
    3. '(A' → logprob: -11.974096298217773
    4. ' ' → logprob: -12.349096298217773
    5. ' (' → logprob: -12.974096298217773
    6. '	A' → logprob: -13.099096298217773
    7. '   ' → logprob: -13.099096298217773
    8. '(' → logprob: -14.474096298217773
    9. '    ' → logprob: -14.974096298217773
    10. '  ' → logprob: -15.099096298217773

Token 300: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -3.607391408877447e-05
    2. '[' → logprob: -10.250036239624023
    3. 'j' → logprob: -14.375036239624023
    4. '[
' → logprob: -15.625036239624023
    5. ' [' → logprob: -16.875036239624023
    6. '[i' → logprob: -18.375036239624023
    7. '```' → logprob: -19.125036239624023
    8. '
' → logprob: -19.500036239624023
    9. '[J' → logprob: -20.000036239624023
    10. '[js' → logprob: -20.000036239624023

Token 301: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6414914727210999
    2. ' ==' → logprob: -1.391491413116455
    3. ')' → logprob: -2.266491413116455
    4. ']' → logprob: -2.266491413116455
    5. ']==' → logprob: -4.391491413116455
    6. ')==' → logprob: -6.141491413116455
    7. '=' → logprob: -7.141491413116455
    8. ' ' → logprob: -7.266491413116455
    9. '}' → logprob: -7.516491413116455
    10. ' ]' → logprob: -8.266491889953613

Token 302: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.12730960547924042
    2. ' ==' → logprob: -2.127309560775757
    3. '=' → logprob: -8.002309799194336
    4. '==
' → logprob: -10.377309799194336
    5. ' ' → logprob: -11.877309799194336
    6. ' =' → logprob: -12.627309799194336
    7. ' ==
' → logprob: -13.502309799194336
    8. ')==' → logprob: -13.877309799194336
    9. '===' → logprob: -14.127309799194336
    10. ')' → logprob: -14.252309799194336

Token 303: ' ex' (ID: 513)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.048703983426094055
    2. ' ex' → logprob: -3.048703908920288
    3. '(ex' → logprob: -9.173704147338867
    4. '   ' → logprob: -12.298704147338867
    5. '	ex' → logprob: -12.673704147338867
    6. ' ' → logprob: -13.048704147338867
    7. ' (' → logprob: -13.298704147338867
    8. '  ' → logprob: -14.173704147338867
    9. '.ex' → logprob: -15.673704147338867
    10. 'exo' → logprob: -15.673704147338867

Token 304: ' ^' (ID: 7602)
  Prédit: ' ^'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ^' → logprob: -0.005380080081522465
    2. '^' → logprob: -5.255380153656006
    3. ' ' → logprob: -8.880379676818848
    4. ' ^
' → logprob: -13.005379676818848
    5. ' ' → logprob: -13.130379676818848
    6. ' ^=' → logprob: -14.005379676818848
    7. '<|end|>' → logprob: -15.005379676818848
    8. ' xor' → logprob: -15.005379676818848
    9. ' ^{
' → logprob: -15.505379676818848
    10. ' XOR' → logprob: -15.630379676818848

Token 305: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.16022889316082
    2. ' A' → logprob: -1.9102288484573364
    3. ' ' → logprob: -12.535228729248047
    4. '   ' → logprob: -14.035228729248047
    5. '	A' → logprob: -15.535228729248047
    6. '  ' → logprob: -16.410228729248047
    7. ' ' → logprob: -16.785228729248047
    8. 'a' → logprob: -17.535228729248047
    9. '    ' → logprob: -17.660228729248047
    10. '[A' → logprob: -18.535228729248047

Token 306: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -9.253090865968261e-06
    2. 'j' → logprob: -12.125009536743164
    3. '[' → logprob: -12.500009536743164
    4. ' j' → logprob: -18.000009536743164
    5. '[i' → logprob: -18.000009536743164
    6. ',j' → logprob: -18.500009536743164
    7. '```' → logprob: -18.500009536743164
    8. '[
' → logprob: -18.625009536743164
    9. '_j' → logprob: -18.875009536743164
    10. '	j' → logprob: -19.000009536743164

Token 307: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.19372080266475677
    2. ':' → logprob: -2.318720817565918
    3. '):
' → logprob: -2.568720817565918
    4. ':
' → logprob: -7.943720817565918
    5. ' ):' → logprob: -8.568720817565918
    6. ')' → logprob: -8.818720817565918
    7. '       ' → logprob: -9.068720817565918
    8. '   ' → logprob: -9.818720817565918
    9. ']:' → logprob: -10.443720817565918
    10. ' :' → logprob: -10.568720817565918

Token 308: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04762578010559082
    2. '           ' → logprob: -3.297625780105591
    3. '        ' → logprob: -6.297625541687012
    4. ' ex' → logprob: -6.547625541687012
    5. ':' → logprob: -7.047625541687012
    6. 'ex' → logprob: -7.172625541687012
    7. '):
' → logprob: -7.297625541687012
    8. ')' → logprob: -7.422625541687012
    9. '   ' → logprob: -7.547625541687012
    10. ',' → logprob: -7.797625541687012

Token 309: ' ex' (ID: 513)
  Prédit: ' ex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ex' → logprob: -0.2705378830432892
    2. 'ex' (adapté à ' ex') → logprob: -1.5205378532409668
    3. '       ' → logprob: -4.145537853240967
    4. '           ' → logprob: -6.770537853240967
    5. '   ' → logprob: -7.520537853240967
    6. '               ' → logprob: -7.770537853240967
    7. '	ex' → logprob: -8.770538330078125
    8. ' ' → logprob: -10.145538330078125
    9. ' 
' → logprob: -10.270538330078125
    10. '_ex' → logprob: -10.395538330078125

Token 310: ' +=' (ID: 2757)
  Prédit: ' ^='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ^=' → logprob: -0.10315863788127899
    2. ' +=' → logprob: -2.728158712387085
    3. '+=' → logprob: -3.853158712387085
    4. '^' → logprob: -4.603158473968506
    5. ' |=' → logprob: -7.728158473968506
    6. '=' → logprob: -7.853158473968506
    7. ' ^' → logprob: -7.978158473968506
    8. ' =' → logprob: -8.978158950805664
    9. ' ' → logprob: -9.478158950805664
    10. ']+=' → logprob: -10.603158950805664

Token 311: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.6931484341621399
    2. ' A' → logprob: -0.6931484341621399
    3. '	A' → logprob: -14.568148612976074
    4. ' ' → logprob: -14.693148612976074
    5. '   ' → logprob: -15.318148612976074
    6. '=A' → logprob: -17.568147659301758
    7. '>A' → logprob: -17.693147659301758
    8. '(A' → logprob: -17.693147659301758
    9. '+A' → logprob: -17.693147659301758
    10. '_A' → logprob: -17.943147659301758

Token 312: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -7.896309739408025e-07
    2. 'j' → logprob: -14.500000953674316
    3. '[' → logprob: -15.625000953674316
    4. '```' → logprob: -18.375
    5. '	j' → logprob: -18.875
    6. '[i' → logprob: -19.0
    7. '[
' → logprob: -19.125
    8. '\[' → logprob: -19.25
    9. '_j' → logprob: -19.375
    10. ' [' → logprob: -19.625

Token 313: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.008934217505156994
    2. ']
' → logprob: -4.758934020996094
    3. ' ]' → logprob: -8.758934020996094
    4. ')' → logprob: -9.508934020996094
    5. '[j' → logprob: -9.883934020996094
    6. 'j' → logprob: -11.383934020996094
    7. '<|end|>' → logprob: -11.883934020996094
    8. ']

' → logprob: -12.633934020996094
    9. ' ]
' → logprob: -13.133934020996094
    10. '   ' → logprob: -13.133934020996094

Token 314: '  ' (ID: 256)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01376405730843544
    2. 'j' → logprob: -5.138763904571533
    3. '       ' → logprob: -5.263763904571533
    4. '   ' → logprob: -6.763763904571533
    5. ' j' → logprob: -6.763763904571533
    6. '
' → logprob: -9.388764381408691
    7. '	j' → logprob: -9.513764381408691
    8. '[j' → logprob: -9.763764381408691
    9. ',' → logprob: -10.513764381408691
    10. ',j' → logprob: -10.638764381408691

Token 315: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6051042079925537
    2. 'j' → logprob: -0.8551042079925537
    3. ' j' → logprob: -4.480104446411133
    4. '       ' → logprob: -4.605104446411133
    5. '   ' → logprob: -5.605104446411133
    6. '
' → logprob: -6.105104446411133
    7. '            
' → logprob: -8.230104446411133
    8. '	j' → logprob: -8.855104446411133
    9. '[j' → logprob: -8.980104446411133
    10. '               ' → logprob: -8.980104446411133

Token 316: ' Met' (ID: 7227)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.6665129661560059
    2. 'j' → logprob: -1.4165129661560059
    3. ' ex' → logprob: -1.5415129661560059
    4. ' j' → logprob: -3.666512966156006
    5. '<|end|>' → logprob: -6.166512966156006
    6. 'A' → logprob: -6.791512966156006
    7. ' A' → logprob: -7.791512966156006
    8. ' ' → logprob: -8.541513442993164
    9. ' ^=' → logprob: -9.291513442993164
    10. ' 
' → logprob: -9.291513442993164

Token 317: ' à' (ID: 1221)
  Prédit: 'tre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tre' → logprob: -0.25459447503089905
    2. ' à' → logprob: -2.004594564437866
    3. 'aj' → logprob: -3.379594564437866
    4. 'ex' → logprob: -3.504594564437866
    5. 'à' → logprob: -4.254594326019287
    6. 'j' → logprob: -5.379594326019287
    7. 'a' → logprob: -6.379594326019287
    8. '-à' → logprob: -7.629594326019287
    9. 't' → logprob: -7.754594326019287
    10. 'tle' → logprob: -8.004594802856445

Token 318: ' jour' (ID: 8379)
  Prédit: 'jour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jour' → logprob: -0.0017687088111415505
    2. 'jou' → logprob: -6.501768589019775
    3. 'jours' → logprob: -9.001769065856934
    4. ' jour' → logprob: -9.376769065856934
    5. '```' → logprob: -10.501769065856934
    6. ' ' → logprob: -12.001769065856934
    7. 'Jour' → logprob: -12.501769065856934
    8. 'day' → logprob: -12.626769065856934
    9. 'j' → logprob: -12.876769065856934
    10. '+' → logprob: -13.251769065856934

Token 319: ' la' (ID: 557)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.00988310668617487
    2. ' ex' → logprob: -5.134882926940918
    3. '<|end|>' → logprob: -5.634882926940918
    4. 'j' → logprob: -8.009882926940918
    5. ' j' → logprob: -11.009882926940918
    6. '<|end|>' → logprob: -11.884882926940918
    7. ' ' → logprob: -12.134882926940918
    8. '
' → logprob: -12.759882926940918
    9. '^' → logprob: -13.259882926940918
    10. '	ex' → logprob: -13.509882926940918

Token 320: ' "' (ID: 392)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.0011211648816242814
    2. 'j' → logprob: -7.6261210441589355
    3. 'xor' → logprob: -7.6261210441589355
    4. ' ex' → logprob: -9.001121520996094
    5. '^' → logprob: -11.626121520996094
    6. 'x' → logprob: -12.376121520996094
    7. 'X' → logprob: -13.376121520996094
    8. 'exo' → logprob: -13.501121520996094
    9. ' j' → logprob: -13.501121520996094
    10. '
' → logprob: -14.501121520996094

Token 321: 's' (ID: 82)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.003013953333720565
    2. ' ex' → logprob: -6.253014087677002
    3. 'xor' → logprob: -6.878014087677002
    4. ' xor' → logprob: -10.753013610839844
    5. 'x' → logprob: -11.753013610839844
    6. 'exo' → logprob: -11.878013610839844
    7. ' XOR' → logprob: -12.753013610839844
    8. 'X' → logprob: -13.003013610839844
    9. 'j' → logprob: -13.128013610839844
    10. '^' → logprob: -13.378013610839844

Token 322: 'omme' (ID: 30420)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.6514509916305542
    2. 'um' → logprob: -0.7764509916305542
    3. 'omme' → logprob: -5.151451110839844
    4. ' ex' → logprob: -5.276451110839844
    5. 'sum' → logprob: -5.901451110839844
    6. 'x' → logprob: -6.651451110839844
    7. 'om' → logprob: -7.026451110839844
    8. 'umme' → logprob: -7.401451110839844
    9. 'xor' → logprob: -7.401451110839844
    10. ' somme' → logprob: -7.776451110839844

Token 323: ' xor' (ID: 106402)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 324: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.6652772426605225
    2. ' ^' → logprob: -1.2902772426605225
    3. ' "' → logprob: -1.9152772426605225
    4. ' "^' → logprob: -3.6652772426605225
    5. ' ex' → logprob: -4.665277481079102
    6. ' ^=' → logprob: -4.665277481079102
    7. '^' → logprob: -4.665277481079102
    8. 'ex' → logprob: -5.040277481079102
    9. ' ' → logprob: -6.415277481079102
    10. ' xor' → logprob: -8.040277481079102

Token 325: ' de' (ID: 334)
  Prédit: '^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '^' → logprob: -0.2669217586517334
    2. ' ^' → logprob: -1.8919217586517334
    3. ' ^
' → logprob: -4.0169219970703125
    4. '<|end|>' → logprob: -4.0169219970703125
    5. '           ' → logprob: -4.2669219970703125
    6. ' ^=' → logprob: -4.5169219970703125
    7. 'j' → logprob: -4.6419219970703125
    8. ' ' → logprob: -5.6419219970703125
    9. ' j' → logprob: -6.1419219970703125
    10. '
' → logprob: -6.3919219970703125

Token 326: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -1.144309639930725
    2. 'j' → logprob: -1.519309639930725
    3. ' la' → logprob: -1.519309639930725
    4. 'l' → logprob: -2.2693095207214355
    5. 'ex' → logprob: -2.2693095207214355
    6. ' j' → logprob: -4.3943095207214355
    7. ' l' → logprob: -4.7693095207214355
    8. 'A' → logprob: -5.0193095207214355
    9. ' ex' → logprob: -6.1443095207214355
    10. 'sub' → logprob: -6.1443095207214355

Token 327: ' fenêtre' (ID: 109648)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9625024199485779
    2. 'j' → logprob: -1.0875024795532227
    3. 'pl' → logprob: -2.2125024795532227
    4. ' plage' → logprob: -2.9625024795532227
    5. ' j' → logprob: -3.5875024795532227
    6. 'sub' → logprob: -3.7125024795532227
    7. ' sous' → logprob: -3.9625024795532227
    8. 'A' → logprob: -4.087502479553223
    9. ' A' → logprob: -5.212502479553223
    10. 'window' → logprob: -5.337502479553223

Token 328: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6444248557090759
    2. '^' → logprob: -1.1444249153137207
    3. 'j' → logprob: -2.6444249153137207
    4. ' ' → logprob: -4.019424915313721
    5. '   ' → logprob: -4.144424915313721
    6. '
' → logprob: -4.519424915313721
    7. ' j' → logprob: -4.519424915313721
    8. ' ^' → logprob: -5.019424915313721
    9. ' 
' → logprob: -5.269424915313721
    10. '       ' → logprob: -5.269424915313721

Token 329: '           ' (ID: 352)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.4796406030654907
    2. '           ' → logprob: -1.6046406030654907
    3. ' j' → logprob: -2.354640483856201
    4. '       ' → logprob: -2.979640483856201
    5. '   ' → logprob: -4.354640483856201
    6. '<|end|>' → logprob: -4.979640483856201
    7. ' ' → logprob: -5.979640483856201
    8. '    ' → logprob: -6.604640483856201
    9. ' 
' → logprob: -6.729640483856201
    10. ')' → logprob: -6.979640483856201

Token 330: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' (adapté à ' j') → logprob: -0.008959861472249031
    2. ' j' → logprob: -4.758959770202637
    3. '           ' → logprob: -8.633959770202637
    4. '   ' → logprob: -9.633959770202637
    5. '	j' → logprob: -9.883959770202637
    6. '       ' → logprob: -10.258959770202637
    7. '    ' → logprob: -12.383959770202637
    8. '_j' → logprob: -12.758959770202637
    9. '          ' → logprob: -13.008959770202637
    10. '      ' → logprob: -14.133959770202637

Token 331: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0008127244072966278
    2. ' +=' → logprob: -7.125812530517578
    3. '=' → logprob: -12.375812530517578
    4. ']+=' → logprob: -13.125812530517578
    5. '+' → logprob: -13.250812530517578
    6. '++' → logprob: -16.125812530517578
    7. '+='' → logprob: -17.125812530517578
    8. '   ' → logprob: -18.000812530517578
    9. '+="' → logprob: -18.250812530517578
    10. '+=(' → logprob: -18.375812530517578

Token 332: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.494741632603109e-05
    2. ' ' → logprob: -9.37508487701416
    3. '   ' → logprob: -17.000085830688477
    4. '```' → logprob: -19.375085830688477
    5. '  ' → logprob: -20.000085830688477
    6. '+' → logprob: -20.750085830688477
    7. '۱' → logprob: -20.812585830688477
    8. ' ' → logprob: -21.062585830688477
    9. '１' → logprob: -21.187585830688477
    10. '<|end|>' → logprob: -21.312585830688477

Token 333: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.061054359131958e-06
    2. ' ' → logprob: -11.750007629394531
    3. '   ' → logprob: -16.25000762939453
    4. '```' → logprob: -17.62500762939453
    5. '  ' → logprob: -18.87500762939453
    6. '１' → logprob: -20.25000762939453
    7. '۱' → logprob: -20.31250762939453
    8. '+' → logprob: -20.62500762939453
    9. '       ' → logprob: -20.75000762939453
    10. '﻿' → logprob: -20.81250762939453

Token 334: '      ' (ID: 1699)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3587157726287842
    2. '
' → logprob: -1.2337157726287842
    3. '        
' → logprob: -5.358716011047363
    4. '<|end|>' → logprob: -5.608716011047363
    5. '    
' → logprob: -7.358716011047363
    6. '  
' → logprob: -7.483716011047363
    7. '   ' → logprob: -8.608716011047363
    8. ' 
' → logprob: -9.108716011047363
    9. '\n' → logprob: -9.358716011047363
    10. '       
' → logprob: -9.858716011047363

Token 335: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.706903338432312
    2. '       ' → logprob: -0.831903338432312
    3. '<|end|>' → logprob: -2.7069034576416016
    4. '        
' → logprob: -5.956903457641602
    5. '<|end|>' → logprob: -6.956903457641602
    6. '  
' → logprob: -8.206903457641602
    7. '    
' → logprob: -8.331903457641602
    8. '   ' → logprob: -8.581903457641602
    9. ')' → logprob: -9.081903457641602
    10. '
' → logprob: -9.206903457641602

Token 336: ' Av' (ID: 7541)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.6210446357727051
    2. 'continue' → logprob: -2.121044635772705
    3. ' continue' → logprob: -2.621044635772705
    4. '#' → logprob: -2.996044635772705
    5. '           ' → logprob: -3.121044635772705
    6. 'contin' → logprob: -3.246044635772705
    7. 'Continue' → logprob: -3.621044635772705
    8. ' ans' → logprob: -3.746044635772705
    9. '       ' → logprob: -4.496044635772705
    10. 'Contin' → logprob: -4.621044635772705

Token 337: 'ance' (ID: 766)
  Prédit: 'ance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ance' → logprob: -0.6386143565177917
    2. 'ancer' → logprob: -0.7636143565177917
    3. 'ancée' → logprob: -5.263614177703857
    4. 'ancé' → logprob: -7.763614177703857
    5. 'anç' → logprob: -8.388614654541016
    6. 'er' → logprob: -9.263614654541016
    7. 'ancement' → logprob: -10.263614654541016
    8. 'anc' → logprob: -10.888614654541016
    9. 'oir' → logprob: -12.263614654541016
    10. 'antage' → logprob: -12.888614654541016

Token 338: ' le' (ID: 505)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 339: ' poin' (ID: 37259)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.10970212519168854
    2. 'j' → logprob: -2.6097021102905273
    3. 'curse' → logprob: -3.7347021102905273
    4. 'end' → logprob: -6.734702110290527
    5. 'pointer' → logprob: -6.734702110290527
    6. 'pon' → logprob: -7.109702110290527
    7. 'fin' → logprob: -7.234702110290527
    8. 'point' → logprob: -7.234702110290527
    9. 'window' → logprob: -7.734702110290527
    10. '```' → logprob: -8.359702110290527

Token 340: 'teur' (ID: 45262)
  Prédit: 'teur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'teur' → logprob: -0.204471156001091
    2. 'ter' → logprob: -1.8294711112976074
    3. 't' → logprob: -3.8294711112976074
    4. 'inter' → logprob: -7.204471111297607
    5. 'te' → logprob: -7.454471111297607
    6. 'tre' → logprob: -7.829471111297607
    7. 'n' → logprob: -7.829471111297607
    8. '```' → logprob: -8.579471588134766
    9. 'nt' → logprob: -9.079471588134766
    10. 'nte' → logprob: -9.329471588134766

Token 341: ' de' (ID: 334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 342: ' droite' (ID: 61428)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fin' → logprob: -0.000282431225059554
    2. 'j' → logprob: -8.500282287597656
    3. ' fin' → logprob: -9.750282287597656
    4. 'fen' → logprob: -11.500282287597656
    5. '```' → logprob: -12.500282287597656
    6. ' ' → logprob: -13.250282287597656
    7. 'end' → logprob: -13.875282287597656
    8. 'la' → logprob: -14.125282287597656
    9. 'Fin' → logprob: -15.000282287597656
    10. '1' → logprob: -15.000282287597656

Token 343: ' de' (ID: 334)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008444956503808498
    2. '
' → logprob: -5.008444786071777
    3. '   ' → logprob: -6.633444786071777
    4. '        
' → logprob: -8.383444786071777
    5. '<|end|>' → logprob: -9.508444786071777
    6. 'ans' → logprob: -10.133444786071777
    7. '    
' → logprob: -11.008444786071777
    8. '
' → logprob: -11.258444786071777
    9. '```' → logprob: -11.383444786071777
    10. ',' → logprob: -12.258444786071777

Token 344: ' la' (ID: 557)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.13772282004356384
    2. ' j' → logprob: -2.8877227306365967
    3. 'la' → logprob: -3.7627227306365967
    4. '1' → logprob: -3.7627227306365967
    5. ' la' → logprob: -3.7627227306365967
    6. ' ' → logprob: -6.137722969055176
    7. 'l' → logprob: -7.387722969055176
    8. ' l' → logprob: -9.762722969055176
    9. '   ' → logprob: -9.887722969055176
    10. 'the' → logprob: -10.012722969055176

Token 345: ' fenêtre' (ID: 109648)
  Prédit: 'fen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fen' → logprob: -0.1188829317688942
    2. 'pl' → logprob: -2.368882894515991
    3. 's' → logprob: -4.11888313293457
    4. 'window' → logprob: -7.24388313293457
    5. ' fenêtre' → logprob: -7.86888313293457
    6. '```' → logprob: -8.11888313293457
    7. ' plage' → logprob: -8.24388313293457
    8. '   ' → logprob: -8.74388313293457
    9. 'sub' → logprob: -9.36888313293457
    10. 'f' → logprob: -9.99388313293457

Token 346: '
        
' (ID: 20417)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009384971344843507
    2. '
' → logprob: -8.125938415527344
    3. '   ' → logprob: -8.250938415527344
    4. '        
' → logprob: -8.375938415527344
    5. '<|end|>' → logprob: -10.125938415527344
    6. '           ' → logprob: -10.500938415527344
    7. ',' → logprob: -10.750938415527344
    8. '    
' → logprob: -11.250938415527344
    9. '  
' → logprob: -11.500938415527344
    10. '      ' → logprob: -11.875938415527344

Token 347: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007845571264624596
    2. '   ' → logprob: -4.882845401763916
    3. 'ans' → logprob: -8.382845878601074
    4. 'ex' → logprob: -12.132845878601074
    5. '           ' → logprob: -13.382845878601074
    6. '        
' → logprob: -14.632845878601074
    7. '   ' → logprob: -14.632845878601074
    8. 'answer' → logprob: -14.757845878601074
    9. '```' → logprob: -14.882845878601074
    10. '      ' → logprob: -15.257845878601074

Token 348: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.050020210444927216
    2. '       ' → logprob: -3.550020217895508
    3. '   ' → logprob: -4.300020217895508
    4. ' ans' → logprob: -5.050020217895508
    5. '	ans' → logprob: -9.925020217895508
    6. ' ' → logprob: -11.550020217895508
    7. 'answer' → logprob: -11.925020217895508
    8. '  ' → logprob: -12.300020217895508
    9. '(ans' → logprob: -12.300020217895508
    10. '
' → logprob: -12.550020217895508

Token 349: ' Pour' (ID: 13931)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0026621005963534117
    2. '   ' → logprob: -6.752662181854248
    3. '       ' → logprob: -6.752662181854248
    4. '#' → logprob: -8.50266170501709
    5. ' ans' → logprob: -9.12766170501709
    6. '	ans' → logprob: -12.50266170501709
    7. '  ' → logprob: -13.62766170501709
    8. ' ' → logprob: -13.87766170501709
    9. '           ' → logprob: -13.87766170501709
    10. '    ' → logprob: -13.87766170501709

Token 350: ' la' (ID: 557)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.644396185874939
    2. ' ans' → logprob: -0.769396185874939
    3. 'i' → logprob: -5.6443963050842285
    4. ' chaque' → logprob: -6.1443963050842285
    5. 'ex' → logprob: -6.2693963050842285
    6. ' i' → logprob: -7.2693963050842285
    7. 'j' → logprob: -7.3943963050842285
    8. ' ex' → logprob: -7.3943963050842285
    9. 'aj' → logprob: -8.01939582824707
    10. '(ans' → logprob: -8.01939582824707

Token 351: ' position' (ID: 4010)
  Prédit: 'fen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fen' → logprob: -0.9120954275131226
    2. 's' → logprob: -1.7870954275131226
    3. 'ans' → logprob: -2.037095546722412
    4. 'pl' → logprob: -2.662095546722412
    5. 'i' → logprob: -2.787095546722412
    6. 'current' → logprob: -3.287095546722412
    7. 'interval' → logprob: -3.662095546722412
    8. '#' → logprob: -4.037095546722412
    9. 'fonction' → logprob: -4.287095546722412
    10. ' plage' → logprob: -4.787095546722412

Token 352: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.20148378610610962
    2. ' i' → logprob: -1.7014837265014648
    3. '   ' → logprob: -11.076483726501465
    4. ' de' → logprob: -11.326483726501465
    5. ' ' → logprob: -11.576483726501465
    6. '[i' → logprob: -12.076483726501465
    7. ' actuelle' → logprob: -12.326483726501465
    8. '       ' → logprob: -12.451483726501465
    9. 'de' → logprob: -12.576483726501465
    10. '`' → logprob: -12.576483726501465

Token 353: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005103797884657979
    2. '       ' → logprob: -8.375510215759277
    3. '   ' → logprob: -9.000510215759277
    4. ' ,' → logprob: -9.500510215759277
    5. '
' → logprob: -10.625510215759277
    6. ',
' → logprob: -10.875510215759277
    7. 'ans' → logprob: -11.750510215759277
    8. '    ' → logprob: -12.125510215759277
    9. ':' → logprob: -12.500510215759277
    10. '  ' → logprob: -12.750510215759277

Token 354: ' le' (ID: 505)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.00028993739397265017
    2. ' ans' → logprob: -8.250289916992188
    3. '       ' → logprob: -10.750289916992188
    4. '   ' → logprob: -12.500289916992188
    5. '#' → logprob: -13.500289916992188
    6. '	ans' → logprob: -13.500289916992188
    7. '    ' → logprob: -15.750289916992188
    8. '           ' → logprob: -15.875289916992188
    9. '        
' → logprob: -16.125289916992188
    10. '
' → logprob: -16.750289916992188

Token 355: ' nombre' (ID: 9733)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.07985570281744003
    2. 'nombre' → logprob: -2.5798556804656982
    3. ' nombre' → logprob: -7.454855918884277
    4. ' ans' → logprob: -8.079855918884277
    5. '   ' → logprob: -10.704855918884277
    6. 'nb' → logprob: -10.954855918884277
    7. '	ans' → logprob: -12.079855918884277
    8. 'answer' → logprob: -12.329855918884277
    9. ' ' → logprob: -12.829855918884277
    10. '       ' → logprob: -12.829855918884277

Token 356: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.4599711298942566
    2. 'de' → logprob: -1.5849711894989014
    3. ' +=' → logprob: -3.0849711894989014
    4. '       ' → logprob: -3.2099711894989014
    5. '+=' → logprob: -3.8349711894989014
    6. '    ' → logprob: -4.209970951080322
    7. 'd' → logprob: -4.834970951080322
    8. ' d' → logprob: -5.084970951080322
    9. '   ' → logprob: -5.584970951080322
    10. 'sub' → logprob: -5.834970951080322

Token 357: ' sous' (ID: 14487)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.004965716507285833
    2. ' sous' → logprob: -5.629965782165527
    3. 'nou' → logprob: -7.254965782165527
    4. 'sub' → logprob: -8.254965782165527
    5. 'ss' → logprob: -9.379965782165527
    6. '   ' → logprob: -9.379965782165527
    7. 'j' → logprob: -9.754965782165527
    8. 'n' → logprob: -10.004965782165527
    9. ' nouveaux' → logprob: -10.629965782165527
    10. 'sou' → logprob: -10.629965782165527

Token 358: '-table' (ID: 35909)
  Prédit: 'table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'table' → logprob: -0.9741169214248657
    2. '   ' → logprob: -1.2241169214248657
    3. '-table' → logprob: -2.349116802215576
    4. '_table' → logprob: -2.849116802215576
    5. ' tableaux' → logprob: -2.849116802215576
    6. '       ' → logprob: -2.974116802215576
    7. 'arrays' → logprob: -3.849116802215576
    8. 'pl' → logprob: -4.599116802215576
    9. 'array' → logprob: -4.599116802215576
    10. '\t' → logprob: -5.099116802215576

Token 359: 'aux' (ID: 5454)
  Prédit: 'aux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aux' → logprob: -0.18965472280979156
    2. ' tableaux' → logprob: -2.31465482711792
    3. '[]' → logprob: -3.18965482711792
    4. '   ' → logprob: -5.06465482711792
    5. 'arrays' → logprob: -5.31465482711792
    6. 'table' → logprob: -5.93965482711792
    7. '[i' → logprob: -6.06465482711792
    8. 'x' → logprob: -6.18965482711792
    9. 'au' → logprob: -6.18965482711792
    10. 'pl' → logprob: -6.43965482711792

Token 360: ' val' (ID: 1459)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.5894401669502258
    2. '+=' → logprob: -1.089440107345581
    3. 'valid' → logprob: -3.339440107345581
    4. 'val' → logprob: -3.464440107345581
    5. 'con' → logprob: -4.46444034576416
    6. ' valid' → logprob: -4.96444034576416
    7. 'aj' → logprob: -5.83944034576416
    8. '+' → logprob: -6.21444034576416
    9. '_valid' → logprob: -6.58944034576416
    10. ' val' → logprob: -6.96444034576416

Token 361: 'ides' (ID: 4105)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.7011762857437134
    2. 'ides' → logprob: -0.9511762857437134
    3. 'ide' → logprob: -2.576176166534424
    4. 'idis' → logprob: -4.701176166534424
    5. 'ids' → logprob: -4.826176166534424
    6. 'alid' → logprob: -5.451176166534424
    7. 'idable' → logprob: -5.576176166534424
    8. 'idus' → logprob: -5.701176166534424
    9. 'lis' → logprob: -5.951176166534424
    10. 'idos' → logprob: -6.201176166534424

Token 362: ' est' (ID: 893)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.6364153027534485
    2. ' +=' → logprob: -0.7614153027534485
    3. '       ' → logprob: -6.386415481567383
    4. '=' → logprob: -7.386415481567383
    5. '+=(' → logprob: -7.386415481567383
    6. 'est' → logprob: -7.886415481567383
    7. ' est' → logprob: -8.511415481567383
    8. ' =' → logprob: -8.886415481567383
    9. '   ' → logprob: -9.386415481567383
    10. ']+=' → logprob: -10.761415481567383

Token 363: ' (' (ID: 350)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.001993109006434679
    2. ' j' → logprob: -6.251993179321289
    3. '   ' → logprob: -10.376993179321289
    4. '       ' → logprob: -10.501993179321289
    5. '(j' → logprob: -13.376993179321289
    6. '	j' → logprob: -13.376993179321289
    7. '+j' → logprob: -14.626993179321289
    8. '    ' → logprob: -14.876993179321289
    9. '
' → logprob: -15.001993179321289
    10. '           ' → logprob: -15.376993179321289

Token 364: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.000493937055580318
    2. ' j' → logprob: -7.625494003295898
    3. '   ' → logprob: -12.250494003295898
    4. '(j' → logprob: -14.250494003295898
    5. '	j' → logprob: -15.875494003295898
    6. '$j' → logprob: -16.1254940032959
    7. ')' → logprob: -16.3754940032959
    8. '`' → logprob: -16.5004940032959
    9. '[j' → logprob: -17.0004940032959
    10. '```' → logprob: -18.0004940032959

Token 365: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.062026843428611755
    2. '-' → logprob: -2.8120267391204834
    3. '-i' → logprob: -10.187026977539062
    4. '   ' → logprob: -11.437026977539062
    5. ' ' → logprob: -12.687026977539062
    6. ')' → logprob: -12.687026977539062
    7. '-j' → logprob: -13.437026977539062
    8. '-token' → logprob: -14.687026977539062
    9. '-u' → logprob: -14.937026977539062
    10. '-t' → logprob: -15.437026977539062

Token 366: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0001584850688232109
    2. ' i' → logprob: -8.750158309936523
    3. '	i' → logprob: -18.750158309936523
    4. '   ' → logprob: -19.250158309936523
    5. '1' → logprob: -19.875158309936523
    6. ' ' → logprob: -20.375158309936523
    7. 'j' → logprob: -21.000158309936523
    8. '_i' → logprob: -21.125158309936523
    9. '(i' → logprob: -22.250158309936523
    10. '  ' → logprob: -22.375158309936523

Token 367: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002502535644453019
    2. ')
' → logprob: -8.375249862670898
    3. ' )' → logprob: -11.500249862670898
    4. '       ' → logprob: -12.500249862670898
    5. '   ' → logprob: -13.125249862670898
    6. '<|end|>' → logprob: -13.375249862670898
    7. ')

' → logprob: -14.250249862670898
    8. '```' → logprob: -15.375249862670898
    9. '')' → logprob: -15.500249862670898
    10. '`)' → logprob: -15.625249862670898

Token 368: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023540576919913292
    2. '   ' → logprob: -3.773540496826172
    3. 'ans' → logprob: -8.273540496826172
    4. ' ans' → logprob: -11.023540496826172
    5. '
' → logprob: -12.273540496826172
    6. '           ' → logprob: -12.273540496826172
    7. '	ans' → logprob: -12.898540496826172
    8. '        
' → logprob: -13.273540496826172
    9. '    
' → logprob: -13.523540496826172
    10. '	' → logprob: -13.523540496826172

Token 369: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.22341200709342957
    2. '   ' → logprob: -1.723412036895752
    3. '       ' → logprob: -4.223412036895752
    4. ' ans' → logprob: -4.973412036895752
    5. '	ans' → logprob: -9.473411560058594
    6. '  ' → logprob: -10.223411560058594
    7. 'answer' → logprob: -10.473411560058594
    8. ' ' → logprob: -11.223411560058594
    9. '```' → logprob: -11.848411560058594
    10. '
' → logprob: -11.848411560058594

Token 370: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.31332463026046753
    2. '+=' → logprob: -1.3133246898651123
    3. '   ' → logprob: -10.313324928283691
    4. '+=(' → logprob: -11.438324928283691
    5. ']+=' → logprob: -11.938324928283691
    6. '+' → logprob: -12.188324928283691
    7. '    ' → logprob: -12.688324928283691
    8. '+="' → logprob: -13.688324928283691
    9. '```' → logprob: -13.938324928283691
    10. '+='' → logprob: -14.188324928283691

Token 371: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.02371183969080448
    2. ' j' → logprob: -3.773711919784546
    3. '(j' → logprob: -8.148712158203125
    4. ' (' → logprob: -8.648712158203125
    5. '(' → logprob: -13.523712158203125
    6. '	j' → logprob: -15.648712158203125
    7. '   ' → logprob: -15.898712158203125
    8. '$j' → logprob: -16.773712158203125
    9. '[j' → logprob: -17.148712158203125
    10. '_j' → logprob: -17.273712158203125

Token 372: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.03804447129368782
    2. '-' → logprob: -3.2880444526672363
    3. ' ' → logprob: -14.038044929504395
    4. '<|end|>' → logprob: -14.038044929504395
    5. '   ' → logprob: -14.538044929504395
    6. '-token' → logprob: -15.163044929504395
    7. ' –' → logprob: -15.288044929504395
    8. '-i' → logprob: -15.913044929504395
    9. '<|end|>' → logprob: -16.288043975830078
    10. '```' → logprob: -16.663043975830078

Token 373: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0002613358374219388
    2. ' i' → logprob: -8.250261306762695
    3. '	i' → logprob: -17.750261306762695
    4. '   ' → logprob: -18.875261306762695
    5. '```' → logprob: -19.750261306762695
    6. '<|end|>' → logprob: -20.125261306762695
    7. ' ' → logprob: -20.375261306762695
    8. '_i' → logprob: -20.625261306762695
    9. '[i' → logprob: -20.750261306762695
    10. '1' → logprob: -21.375261306762695

Token 374: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0245739221572876
    2. 'ex' → logprob: -1.1495739221572876
    3. '       ' → logprob: -1.1495739221572876
    4. '    
' → logprob: -5.899573802947998
    5. '        
' → logprob: -6.399573802947998
    6. 'if' → logprob: -6.774573802947998
    7. '
' → logprob: -7.274573802947998
    8. '  
' → logprob: -7.524573802947998
    9. ' ex' → logprob: -8.274574279785156
    10. '   
' → logprob: -8.649574279785156

Token 375: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04203313589096069
    2. 'ex' → logprob: -3.6670331954956055
    3. '       ' → logprob: -4.1670331954956055
    4. ' ex' → logprob: -9.667033195495605
    5. '    
' → logprob: -11.042033195495605
    6. 'if' → logprob: -11.042033195495605
    7. '	ex' → logprob: -12.292033195495605
    8. '        
' → logprob: -12.542033195495605
    9. '    ' → logprob: -13.042033195495605
    10. '```' → logprob: -13.792033195495605

Token 376: ' #' (ID: 1069)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.0021888066548854113
    2. 'if' → logprob: -6.752188682556152
    3. '   ' → logprob: -7.377188682556152
    4. '       ' → logprob: -7.877188682556152
    5. ' ex' → logprob: -11.377188682556152
    6. '#' (adapté à ' #') → logprob: -13.877188682556152
    7. '	ex' → logprob: -15.377188682556152
    8. '    ' → logprob: -15.877188682556152
    9. '  ' → logprob: -16.00218963623047
    10. '```' → logprob: -16.12718963623047

Token 377: ' Avant' (ID: 88245)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.0015193840954452753
    2. 'if' → logprob: -6.501519203186035
    3. '#' → logprob: -12.126519203186035
    4. '   ' → logprob: -12.126519203186035
    5. ' ex' → logprob: -12.251519203186035
    6. 'exo' → logprob: -14.376519203186035
    7. '       ' → logprob: -14.876519203186035
    8. '	ex' → logprob: -16.12652015686035
    9. '    ' → logprob: -16.37652015686035
    10. '  ' → logprob: -16.37652015686035

Token 378: ' de' (ID: 334)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.2521387338638306
    2. 'de' → logprob: -1.3771387338638306
    3. 'ex' → logprob: -1.3771387338638306
    4. '   ' → logprob: -1.7521387338638306
    5. '       ' → logprob: -3.502138614654541
    6. '#' → logprob: -6.627138614654541
    7. ' de' → logprob: -6.752138614654541
    8. ' d' → logprob: -6.877138614654541
    9. '    ' → logprob: -8.1271390914917
    10. '           ' → logprob: -8.1271390914917

Token 379: ' passer' (ID: 27727)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.03505013883113861
    2. 'remove' → logprob: -4.410049915313721
    3. 'ret' → logprob: -4.910049915313721
    4. 'qu' → logprob: -5.410049915313721
    5. 'part' → logprob: -5.910049915313721
    6. ' retirer' → logprob: -6.285049915313721
    7. ' ex' → logprob: -7.035049915313721
    8. '   ' → logprob: -7.160049915313721
    9. 'contin' → logprob: -7.535049915313721
    10. '#' → logprob: -7.660049915313721

Token 380: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.5039864778518677
    2. 'à' → logprob: -1.3789864778518677
    3. '   ' → logprob: -2.628986358642578
    4. '       ' → logprob: -2.878986358642578
    5. 'ex' → logprob: -4.753986358642578
    6. 'au' → logprob: -5.753986358642578
    7. ' la' → logprob: -7.503986358642578
    8. ' ' → logprob: -7.628986358642578
    9. ' au' → logprob: -7.628986358642578
    10. 'i' → logprob: -7.753986358642578

Token 381: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.08189206570386887
    2. ' i' → logprob: -3.0818920135498047
    3. ' la' → logprob: -3.8318920135498047
    4. 'la' → logprob: -4.581892013549805
    5. 'l' → logprob: -7.331892013549805
    6. ' ' → logprob: -9.081892013549805
    7. ' l' → logprob: -10.831892013549805
    8. ' ' → logprob: -10.831892013549805
    9. '   ' → logprob: -11.081892013549805
    10. '`' → logprob: -11.706892013549805

Token 382: '+' (ID: 10)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0235066413879395
    2. ' +=' → logprob: -1.0235066413879395
    3. '+=' → logprob: -1.5235066413879395
    4. '   ' → logprob: -3.0235066413879395
    5. '++,' → logprob: -5.3985066413879395
    6. '+' → logprob: -5.6485066413879395
    7. '=' → logprob: -5.8985066413879395
    8. '++' → logprob: -6.5235066413879395
    9. ':' → logprob: -7.7735066413879395
    10. ' ,' → logprob: -7.8985066413879395

Token 383: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.007317567011341e-05
    2. ' ' → logprob: -9.625089645385742
    3. '+' → logprob: -11.125089645385742
    4. 'i' → logprob: -12.375089645385742
    5. '   ' → logprob: -12.375089645385742
    6. ',' → logprob: -15.375089645385742
    7. '```' → logprob: -15.375089645385742
    8. ' i' → logprob: -16.125089645385742
    9. '  ' → logprob: -17.375089645385742
    10. '`' → logprob: -17.375089645385742

Token 384: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03432875871658325
    2. '       ' → logprob: -4.159328937530518
    3. '   ' → logprob: -4.284328937530518
    4. ',
' → logprob: -6.409328937530518
    5. ':' → logprob: -7.034328937530518
    6. 'ex' → logprob: -7.159328937530518
    7. ' ,' → logprob: -7.659328937530518
    8. ':
' → logprob: -8.53432846069336
    9. '    
' → logprob: -9.28432846069336
    10. '        
' → logprob: -9.53432846069336

Token 385: ' on' (ID: 402)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.1838906705379486
    2. ' ex' → logprob: -2.1838905811309814
    3. '   ' → logprob: -3.8088905811309814
    4. '       ' → logprob: -4.0588908195495605
    5. ' on' → logprob: -4.9338908195495605
    6. '#' → logprob: -5.8088908195495605
    7. 'on' → logprob: -5.8088908195495605
    8. '    ' → logprob: -7.9338908195495605
    9. ' retirer' → logprob: -8.058890342712402
    10. 'ret' → logprob: -8.183890342712402

Token 386: ' retire' (ID: 48410)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -1.0182952880859375
    2. ' -=' → logprob: -1.2682952880859375
    3. 'ex' → logprob: -1.6432952880859375
    4. ' retire' → logprob: -2.0182952880859375
    5. 'ret' → logprob: -4.7682952880859375
    6. ' ex' → logprob: -4.7682952880859375
    7. '   ' → logprob: -5.2682952880859375
    8. '-' → logprob: -5.8932952880859375
    9. '  ' → logprob: -7.1432952880859375
    10. ' enl' → logprob: -7.1432952880859375

Token 387: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.1623644381761551
    2. ' A' → logprob: -1.9123644828796387
    3. '   ' → logprob: -6.162364482879639
    4. '       ' → logprob: -11.78736400604248
    5. ' ' → logprob: -11.91236400604248
    6. '    ' → logprob: -12.66236400604248
    7. '	A' → logprob: -12.78736400604248
    8. '  ' → logprob: -12.91236400604248
    9. 'ex' → logprob: -13.16236400604248
    10. ' la' → logprob: -13.66236400604248

Token 388: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.084206375409849e-05
    2. '[' → logprob: -10.125041007995605
    3. 'i' → logprob: -14.875041007995605
    4. '[j' → logprob: -16.12504005432129
    5. '[I' → logprob: -16.25004005432129
    6. ' [' → logprob: -16.62504005432129
    7. '\[' → logprob: -17.62504005432129
    8. '[
' → logprob: -18.37504005432129
    9. '```' → logprob: -18.87504005432129
    10. '[A' → logprob: -19.12504005432129

Token 389: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007557286880910397
    2. ')' → logprob: -5.257557392120361
    3. 'from' → logprob: -6.757557392120361
    4. ' ]' → logprob: -7.257557392120361
    5. ' from' → logprob: -8.382556915283203
    6. ']
' → logprob: -9.882556915283203
    7. ')]' → logprob: -10.007556915283203
    8. '   ' → logprob: -10.007556915283203
    9. ' )' → logprob: -11.007556915283203
    10. '],' → logprob: -11.382556915283203

Token 390: ' de' (ID: 334)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22153086960315704
    2. 'from' → logprob: -2.2215309143066406
    3. ' from' → logprob: -2.4715309143066406
    4. '   ' → logprob: -5.846530914306641
    5. 'ex' → logprob: -6.721530914306641
    6. '
' → logprob: -7.346530914306641
    7. ',' → logprob: -8.09653091430664
    8. '        
' → logprob: -8.72153091430664
    9. ' ex' → logprob: -8.97153091430664
    10. '           ' → logprob: -9.34653091430664

Token 391: ' la' (ID: 557)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.00861729308962822
    2. ' ex' → logprob: -4.758617401123047
    3. 'l' → logprob: -13.758617401123047
    4. ' la' → logprob: -14.008617401123047
    5. 'la' → logprob: -15.133617401123047
    6. '	ex' → logprob: -15.258617401123047
    7. ' l' → logprob: -15.883617401123047
    8. 'exo' → logprob: -16.383617401123047
    9. ' ' → logprob: -17.133617401123047
    10. ' ' → logprob: -17.758617401123047

Token 392: ' somme' (ID: 64484)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.00026181264547631145
    2. ' ex' → logprob: -8.250262260437012
    3. '-ex' → logprob: -15.875262260437012
    4. '-' → logprob: -16.000261306762695
    5. '	ex' → logprob: -16.000261306762695
    6. 'exo' → logprob: -16.375261306762695
    7. '   ' → logprob: -16.875261306762695
    8. '_ex' → logprob: -17.625261306762695
    9. ''ex' → logprob: -17.625261306762695
    10. '.ex' → logprob: -17.750261306762695

Token 393: '/x' (ID: 22739)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.7459699511528015
    2. '^' → logprob: -1.6209700107574463
    3. '   ' → logprob: -1.7459700107574463
    4. ' ^' → logprob: -3.1209700107574463
    5. ' et' → logprob: -3.8709700107574463
    6. ' ^=' → logprob: -4.120969772338867
    7. 'et' → logprob: -4.370969772338867
    8. ' ex' → logprob: -4.620969772338867
    9. ' xor' → logprob: -4.745969772338867
    10. ' and' → logprob: -4.745969772338867

Token 394: 'or' (ID: 267)
  Prédit: 'or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.003376026637852192
    2. 'xor' → logprob: -6.378376007080078
    3. '^' → logprob: -6.628376007080078
    4. 'ex' → logprob: -9.878376007080078
    5. '_or' → logprob: -10.128376007080078
    6. '   ' → logprob: -10.378376007080078
    7. ' xor' → logprob: -10.753376007080078
    8. '_x' → logprob: -10.878376007080078
    9. 'ors' → logprob: -10.878376007080078
    10. 'ор' → logprob: -11.128376007080078

Token 395: ' cour' (ID: 2871)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2619178295135498
    2. '   ' → logprob: -1.7619178295135498
    3. 'ex' → logprob: -2.88691782951355
    4. ' ex' → logprob: -6.011918067932129
    5. ',' → logprob: -7.761918067932129
    6. '.' → logprob: -11.011918067932129
    7. ' ' → logprob: -11.136918067932129
    8. '        
' → logprob: -11.761918067932129
    9. '           ' → logprob: -11.886918067932129
    10. '  ' → logprob: -11.886918067932129

Token 396: 'ante' (ID: 2116)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.07209187746047974
    2. '   ' → logprob: -3.697091817855835
    3. ' ex' → logprob: -4.072092056274414
    4. 'ante' → logprob: -4.447092056274414
    5. ' ' → logprob: -4.822092056274414
    6. 'u' → logprob: -6.947092056274414
    7. 'e' → logprob: -7.072092056274414
    8. '	ex' → logprob: -7.072092056274414
    9. 'ant' → logprob: -7.197092056274414
    10. 'ente' → logprob: -7.197092056274414

Token 397: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7021898627281189
    2. '       ' → logprob: -0.7021898627281189
    3. 'ex' → logprob: -5.202189922332764
    4. ' ex' → logprob: -5.702189922332764
    5. ',' → logprob: -9.702189445495605
    6. '        
' → logprob: -10.952189445495605
    7. '  ' → logprob: -10.952189445495605
    8. '    ' → logprob: -11.202189445495605
    9. '
' → logprob: -11.577189445495605
    10. '           ' → logprob: -11.702189445495605

Token 398: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7597836256027222
    2. 'ex' → logprob: -0.7597836256027222
    3. ' ex' → logprob: -2.8847837448120117
    4. '   ' → logprob: -4.759783744812012
    5. '	ex' → logprob: -11.134783744812012
    6. ' ' → logprob: -12.384783744812012
    7. '  ' → logprob: -12.759783744812012
    8. '           ' → logprob: -12.759783744812012
    9. '    ' → logprob: -13.634783744812012
    10. '      ' → logprob: -13.884783744812012

Token 399: ' ex' (ID: 513)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' (adapté à ' ex') → logprob: -0.008938711136579514
    2. ' ex' → logprob: -4.758938789367676
    3. '       ' → logprob: -8.383938789367676
    4. '   ' → logprob: -9.258938789367676
    5. '	ex' → logprob: -15.633938789367676
    6. '           ' → logprob: -16.00893783569336
    7. '.ex' → logprob: -17.38393783569336
    8. ' ' → logprob: -17.75893783569336
    9. '  ' → logprob: -18.00893783569336
    10. '    ' → logprob: -18.25893783569336

Token 400: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.3156568109989166
    2. ' -=' → logprob: -1.3156567811965942
    3. '-' → logprob: -6.190656661987305
    4. '=' → logprob: -8.065656661987305
    5. ' -' → logprob: -11.190656661987305
    6. ' ^=' → logprob: -11.440656661987305
    7. '+=' → logprob: -13.315656661987305
    8. ' =' → logprob: -13.440656661987305
    9. '   ' → logprob: -13.815656661987305
    10. '^' → logprob: -15.065656661987305

Token 401: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.004078639671206474
    2. ' A' → logprob: -5.5040788650512695
    3. '	A' → logprob: -16.379077911376953
    4. '   ' → logprob: -16.379077911376953
    5. ' ' → logprob: -19.504077911376953
    6. 'a' → logprob: -19.879077911376953
    7. '=A' → logprob: -20.379077911376953
    8. '_A' → logprob: -20.504077911376953
    9. '>A' → logprob: -20.629077911376953
    10. '       ' → logprob: -21.254077911376953

Token 402: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.961759259458631e-06
    2. 'i' → logprob: -12.500004768371582
    3. '[' → logprob: -13.625004768371582
    4. ' [' → logprob: -20.0000057220459
    5. '[
' → logprob: -20.0000057220459
    6. '[I' → logprob: -20.1250057220459
    7. ' i' → logprob: -20.7500057220459
    8. '\[' → logprob: -21.0000057220459
    9. '{i' → logprob: -21.2500057220459
    10. '[j' → logprob: -21.2500057220459

Token 403: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5181878209114075
    2. '<|end|>' → logprob: -1.3931877613067627
    3. ')' → logprob: -2.1431877613067627
    4. ' ]' → logprob: -3.5181877613067627
    5. '}' → logprob: -5.268187999725342
    6. ' )' → logprob: -6.268187999725342
    7. '<|end|>' → logprob: -6.893187999725342
    8. ' ' → logprob: -8.393187522888184
    9. '']' → logprob: -8.518187522888184
    10. '```' → logprob: -8.768187522888184

Token 404: '    
' (ID: 1944)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 405: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 406: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31346336007118225
    2. 'return' (adapté à ' return') → logprob: -1.3134633302688599
    3. ' return' → logprob: -8.56346321105957
    4. '	return' → logprob: -11.93846321105957
    5. '       ' → logprob: -13.68846321105957
    6. ':return' → logprob: -13.93846321105957
    7. '```' → logprob: -14.43846321105957
    8. '<|end|>' → logprob: -14.56346321105957
    9. '  ' → logprob: -15.31346321105957
    10. ')return' → logprob: -15.81346321105957

Token 407: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.12693051993846893
    2. ' ans' → logprob: -2.1269304752349854
    3. '(ans' → logprob: -13.126930236816406
    4. '	ans' → logprob: -14.751930236816406
    5. '_ans' → logprob: -17.751930236816406
    6. '   ' → logprob: -19.251930236816406
    7. 'answer' → logprob: -19.376930236816406
    8. '0' → logprob: -20.126930236816406
    9. 'ex' → logprob: -20.376930236816406
    10. 'Ans' → logprob: -20.751930236816406

Token 408: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 409: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 410: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.12712915241718292
    2. '__' → logprob: -2.127129077911377
    3. '_name' → logprob: -9.627129554748535
    4. '_' → logprob: -9.752129554748535
    5. 'name' → logprob: -10.127129554748535
    6. ' ' → logprob: -11.252129554748535
    7. '___' → logprob: -11.252129554748535
    8. ' ' → logprob: -12.502129554748535
    9. ' _' → logprob: -13.377129554748535
    10. 'Name' → logprob: -13.502129554748535

Token 411: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.12980930507183075
    2. ' __' → logprob: -2.5048093795776367
    3. 'name' → logprob: -3.7548093795776367
    4. ' ==' → logprob: -4.379809379577637
    5. '_' → logprob: -6.629809379577637
    6. '==' → logprob: -7.129809379577637
    7. '.__' → logprob: -8.004809379577637
    8. '_name' → logprob: -8.129809379577637
    9. '.' → logprob: -8.754809379577637
    10. '__.__' → logprob: -8.754809379577637

Token 412: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.8624639324116288e-06
    2. '==' → logprob: -13.750001907348633
    3. '__.__' → logprob: -14.750001907348633
    4. ' ==' → logprob: -15.750001907348633
    5. '____' → logprob: -16.875001907348633
    6. '___' → logprob: -17.000001907348633
    7. '_' → logprob: -17.125001907348633
    8. '__
' → logprob: -17.250001907348633
    9. '__":
' → logprob: -17.875001907348633
    10. '__.' → logprob: -18.000001907348633

Token 413: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.13373157382011414
    2. ' ==' → logprob: -2.1337316036224365
    3. '==' → logprob: -5.008731365203857
    4. '=="' → logprob: -9.883731842041016
    5. ' ' → logprob: -11.258731842041016
    6. ' __' → logprob: -11.883731842041016
    7. '___' → logprob: -12.008731842041016
    8. '_' → logprob: -12.133731842041016
    9. '__.__' → logprob: -12.633731842041016
    10. ' =="' → logprob: -13.008731842041016

Token 414: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.004135868512094021
    2. ''' → logprob: -5.504136085510254
    3. ' "__' → logprob: -10.004136085510254
    4. '__' → logprob: -11.629136085510254
    5. '"user' → logprob: -13.754136085510254
    6. '"name' → logprob: -14.254136085510254
    7. ' '__' → logprob: -15.004136085510254
    8. '"_' → logprob: -15.129136085510254
    9. '"class' → logprob: -15.504136085510254
    10. '"default' → logprob: -16.004135131835938

Token 415: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.981667537620524e-06
    2. '__' → logprob: -13.500001907348633
    3. 'name' → logprob: -15.250001907348633
    4. ' main' → logprob: -15.375001907348633
    5. '"' → logprob: -17.500001907348633
    6. '_main' → logprob: -17.500001907348633
    7. 'ma' → logprob: -19.625001907348633
    8. 'built' → logprob: -20.375001907348633
    9. '(main' → logprob: -20.500001907348633
    10. '	main' → logprob: -20.500001907348633

Token 416: '__":
' (ID: 49892)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.5784781575202942
    2. '__":
' → logprob: -0.8284781575202942
    3. '__:' → logprob: -6.3284783363342285
    4. '__':
' → logprob: -7.2034783363342285
    5. '__["' → logprob: -13.07847785949707
    6. '__
' → logprob: -13.82847785949707
    7. '___' → logprob: -14.82847785949707
    8. '__);
' → logprob: -15.07847785949707
    9. '__*/' → logprob: -15.07847785949707
    10. '__
' → logprob: -15.07847785949707

Token 417: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13735826313495636
    2. ':' → logprob: -2.7623581886291504
    3. ':
' → logprob: -3.8873581886291504
    4. 'import' → logprob: -4.26235818862915
    5. '<|end|>' → logprob: -4.26235818862915
    6. '```' → logprob: -5.13735818862915
    7. '    
' → logprob: -5.63735818862915
    8. '<|end|>' → logprob: -6.38735818862915
    9. '[' → logprob: -7.51235818862915
    10. 'def' → logprob: -7.57485818862915

Token 418: ' #' (ID: 1069)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.02475905790925026
    2. ' N' → logprob: -4.524759292602539
    3. '   ' → logprob: -4.774759292602539
    4. 'n' → logprob: -6.024759292602539
    5. 'import' → logprob: -6.024759292602539
    6. ' import' → logprob: -8.149759292602539
    7. ' n' → logprob: -10.399759292602539
    8. '```' → logprob: -11.274759292602539
    9. '#' (adapté à ' #') → logprob: -12.024759292602539
    10. '	N' → logprob: -13.649759292602539

Token 419: ' Lecture' (ID: 106534)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.11931288242340088
    2. 'import' → logprob: -2.9943127632141113
    3. 'n' → logprob: -3.1193127632141113
    4. ' import' → logprob: -4.744312763214111
    5. ' N' → logprob: -4.869312763214111
    6. ' n' → logprob: -6.994312763214111
    7. '   ' → logprob: -7.619312763214111
    8. '#' → logprob: -8.49431324005127
    9. 't' → logprob: -9.49431324005127
    10. 'input' → logprob: -10.24431324005127

Token 420: ' de' (ID: 334)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.6897202730178833
    2. '()' → logprob: -1.3147202730178833
    3. 'n' → logprob: -1.9397202730178833
    4. 'def' → logprob: -3.6897201538085938
    5. '   ' → logprob: -4.189720153808594
    6. 't' → logprob: -4.314720153808594
    7. 's' → logprob: -5.064720153808594
    8. 'de' → logprob: -5.064720153808594
    9. 'N' → logprob: -5.439720153808594
    10. '```' → logprob: -5.439720153808594

Token 421: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.4998418688774109
    2. 'N' → logprob: -1.7498419284820557
    3. 'n' → logprob: -2.7498419284820557
    4. 'la' → logprob: -2.8748419284820557
    5. 'int' → logprob: -3.8748419284820557
    6. ' la' → logprob: -3.8748419284820557
    7. 'import' → logprob: -4.124841690063477
    8. ' N' → logprob: -4.124841690063477
    9. ' l' → logprob: -4.749841690063477
    10. 'le' → logprob: -4.874841690063477

Token 422: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.3614627718925476
    2. 'input' → logprob: -2.1114628314971924
    3. 'import' → logprob: -2.6114628314971924
    4. 'entrée' → logprob: -2.8614628314971924
    5. 'a' → logprob: -3.7364628314971924
    6. 'e' → logprob: -4.361462593078613
    7. ' input' → logprob: -5.111462593078613
    8. '   ' → logprob: -5.486462593078613
    9. ''import' → logprob: -6.361462593078613
    10. ''' → logprob: -7.611462593078613

Token 423: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.08876746147871017
    2. '   ' → logprob: -3.3387675285339355
    3. 'import' → logprob: -3.3387675285339355
    4. 'N' → logprob: -4.8387675285339355
    5. '(n' → logprob: -5.8387675285339355
    6. '```' → logprob: -6.4637675285339355
    7. ' n' → logprob: -7.3387675285339355
    8. '()' → logprob: -8.213767051696777
    9. 't' → logprob: -8.963767051696777
    10. '(N' → logprob: -9.338767051696777

Token 424: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5099451541900635
    2. '   ' → logprob: -1.0099451541900635
    3. 'import' → logprob: -3.5099451541900635
    4. 'N' → logprob: -6.259944915771484
    5. ' n' → logprob: -6.634944915771484
    6. '
' → logprob: -7.759944915771484
    7. 't' → logprob: -7.884944915771484
    8. '(n' → logprob: -8.384944915771484
    9. '```' → logprob: -8.384944915771484
    10. '    
' → logprob: -8.759944915771484

Token 425: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -0.13460710644721985
    2. 'n' → logprob: -2.3846070766448975
    3. ' N' → logprob: -3.7596070766448975
    4. 'import' → logprob: -4.884607315063477
    5. ' n' → logprob: -6.384607315063477
    6. ' import' → logprob: -6.759607315063477
    7. '   ' → logprob: -9.134607315063477
    8. '```' → logprob: -12.884607315063477
    9. 't' → logprob: -13.009607315063477
    10. '    
' → logprob: -15.009607315063477

Token 426: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6220952272415161
    2. ',' → logprob: -0.9970952272415161
    3. '=' → logprob: -2.3720951080322266
    4. '=int' → logprob: -7.247095108032227
    5. '=input' → logprob: -9.247095108032227
    6. ')' → logprob: -9.872095108032227
    7. '   ' → logprob: -10.997095108032227
    8. 'import' → logprob: -11.247095108032227
    9. '<|end|>' → logprob: -11.497095108032227
    10. ' ,' → logprob: -11.622095108032227

Token 427: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.02324547804892063
    2. ' int' → logprob: -3.7732455730438232
    3. ' ' → logprob: -18.648244857788086
    4. '<int' → logprob: -19.148244857788086
    5. '=int' → logprob: -19.148244857788086
    6. '[int' → logprob: -19.398244857788086
    7. '(int' → logprob: -19.898244857788086
    8. '  ' → logprob: -20.273244857788086
    9. '	int' → logprob: -20.773244857788086
    10. '   ' → logprob: -23.023244857788086

Token 428: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.00015562419139314443
    2. 'input' → logprob: -9.250155448913574
    3. '(' → logprob: -9.750155448913574
    4. '()' → logprob: -13.750155448913574
    5. ' input' → logprob: -16.00015640258789
    6. '=input' → logprob: -16.75015640258789
    7. '	input' → logprob: -18.75015640258789
    8. ',input' → logprob: -19.00015640258789
    9. '(stdin' → logprob: -19.12515640258789
    10. '(
' → logprob: -19.25015640258789

Token 429: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.004158534109592438
    2. '()' → logprob: -5.5041584968566895
    3. '().' → logprob: -9.629158973693848
    4. '(' → logprob: -11.879158973693848
    5. ' ())' → logprob: -12.629158973693848
    6. '();)' → logprob: -13.879158973693848
    7. '()))' → logprob: -14.004158973693848
    8. ')' → logprob: -14.129158973693848
    9. '()>' → logprob: -15.254158973693848
    10. '())
' → logprob: -15.379158973693848

Token 430: '   ' (ID: 271)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.3489517569541931
    2. ' A' → logprob: -1.223951816558838
    3. '   ' → logprob: -8.09895133972168
    4. '<|end|>' → logprob: -8.59895133972168
    5. '    
' → logprob: -12.09895133972168
    6. '	A' → logprob: -12.47395133972168
    7. ' ' → logprob: -13.59895133972168
    8. '    ' → logprob: -13.84895133972168
    9. ' 
' → logprob: -13.84895133972168
    10. '<|end|>' → logprob: -13.97395133972168

Token 431: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' (adapté à ' A') → logprob: -0.00028410006780177355
    2. ' A' → logprob: -8.375284194946289
    3. '<|end|>' → logprob: -9.875284194946289
    4. '	A' → logprob: -14.375284194946289
    5. '>A' → logprob: -14.875284194946289
    6. '   ' → logprob: -15.625284194946289
    7. '*A' → logprob: -15.625284194946289
    8. '```' → logprob: -15.875284194946289
    9. '<|end|>' → logprob: -16.25028419494629
    10. '_A' → logprob: -16.37528419494629

Token 432: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931517124176025
    2. ' =' → logprob: -0.6931517124176025
    3. '.' → logprob: -13.818151473999023
    4. '=[]' → logprob: -13.943151473999023
    5. '[' → logprob: -14.318151473999023
    6. '[:]' → logprob: -14.693151473999023
    7. ' =[' → logprob: -14.693151473999023
    8. '=list' → logprob: -14.943151473999023
    9. '[]' → logprob: -15.193151473999023
    10. '.=' → logprob: -15.443151473999023

Token 433: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0026068103034049273
    2. ' list' → logprob: -6.0026068687438965
    3. '[list' → logprob: -9.002606391906738
    4. '[' → logprob: -11.752606391906738
    5. '=list' → logprob: -17.127607345581055
    6. '[]' → logprob: -17.127607345581055
    7. ' [' → logprob: -17.627607345581055
    8. '	list' → logprob: -18.877607345581055
    9. '[List' → logprob: -18.877607345581055
    10. '(list' → logprob: -19.002607345581055

Token 434: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0024763736873865128
    2. '(' → logprob: -6.002476215362549
    3. 'map' → logprob: -14.627476692199707
    4. '()' → logprob: -15.627476692199707
    5. '(int' → logprob: -17.12747573852539
    6. '(
' → logprob: -17.50247573852539
    7. '(range' → logprob: -17.62747573852539
    8. '(m' → logprob: -18.25247573852539
    9. ' map' → logprob: -18.37747573852539
    10. '_map' → logprob: -19.12747573852539

Token 435: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.001277257571928203
    2. 'int' → logprob: -6.751277446746826
    3. '(' → logprob: -9.251276969909668
    4. '(
' → logprob: -12.626276969909668
    5. '<int' → logprob: -13.001276969909668
    6. ',int' → logprob: -13.626276969909668
    7. ' int' → logprob: -13.751276969909668
    8. ']int' → logprob: -14.376276969909668
    9. '(str' → logprob: -14.501276969909668
    10. '   ' → logprob: -14.751276969909668

Token 436: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.6000486612319946
    2. ',input' → logprob: -1.1000486612319946
    3. ',' → logprob: -2.225048542022705
    4. 'input' → logprob: -4.975048542022705
    5. '(' → logprob: -6.600048542022705
    6. ' input' → logprob: -7.225048542022705
    7. '   ' → logprob: -7.725048542022705
    8. ' (' → logprob: -7.850048542022705
    9. ' ,' → logprob: -8.725049018859863
    10. '=input' → logprob: -9.225049018859863

Token 437: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0005530327325686812
    2. ' input' → logprob: -7.500553131103516
    3. '(input' → logprob: -17.500553131103516
    4. '<input' → logprob: -19.375553131103516
    5. ',input' → logprob: -19.500553131103516
    6. 'int' → logprob: -19.625553131103516
    7. '_input' → logprob: -20.500553131103516
    8. '   ' → logprob: -21.000553131103516
    9. ' ' → logprob: -21.500553131103516
    10. '=input' → logprob: -21.750553131103516

Token 438: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.093505099765025e-05
    2. '()' → logprob: -10.875020980834961
    3. '(' → logprob: -13.625020980834961
    4. '.split' → logprob: -14.875020980834961
    5. ' ().' → logprob: -15.875020980834961
    6. ' .' → logprob: -16.00002098083496
    7. 'split' → logprob: -17.25002098083496
    8. '()
' → logprob: -17.37502098083496
    9. '.strip' → logprob: -17.50002098083496
    10. '   ' → logprob: -17.62502098083496

Token 439: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0001584850688232109
    2. 'strip' → logprob: -8.750158309936523
    3. ' split' → logprob: -16.875158309936523
    4. 'rstrip' → logprob: -17.250158309936523
    5. '(split' → logprob: -18.250158309936523
    6. 'spl' → logprob: -18.375158309936523
    7. '.split' → logprob: -22.250158309936523
    8. '_split' → logprob: -22.875158309936523
    9. ' strip' → logprob: -23.375158309936523
    10. 's' → logprob: -23.750158309936523

Token 440: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.006987207103520632
    2. '()' → logprob: -5.25698709487915
    3. '))' → logprob: -6.50698709487915
    4. '(' → logprob: -8.631987571716309
    5. '()))
' → logprob: -9.881987571716309
    6. '())' → logprob: -10.631987571716309
    7. '()));' → logprob: -12.631987571716309
    8. '())))' → logprob: -14.631987571716309
    9. '()))
' → logprob: -14.881987571716309
    10. '()))

' → logprob: -15.131987571716309

Token 441: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0019613439217209816
    2. '   ' → logprob: -6.2519612312316895
    3. 'result' → logprob: -11.001961708068848
    4. ' print' → logprob: -11.751961708068848
    5. '```' → logprob: -11.751961708068848
    6. '<|end|>' → logprob: -16.37696075439453
    7. '	print' → logprob: -16.62696075439453
    8. '``' → logprob: -16.75196075439453
    9. '    
' → logprob: -17.25196075439453
    10. '#print' → logprob: -17.25196075439453

Token 442: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.2200749754119897e-06
    2. 'result' → logprob: -13.750001907348633
    3. ' print' → logprob: -14.000001907348633
    4. '   ' → logprob: -15.125001907348633
    5. '```' → logprob: -19.500001907348633
    6. 'prin' → logprob: -20.500001907348633
    7. 'pr' → logprob: -21.000001907348633
    8. '#print' → logprob: -21.375001907348633
    9. '    
' → logprob: -21.500001907348633
    10. '	print' → logprob: -21.750001907348633

Token 443: ' App' (ID: 2583)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0002036595979006961
    2. 'result' → logprob: -8.500204086303711
    3. ' print' → logprob: -16.62520408630371
    4. 'res' → logprob: -18.25020408630371
    5. 'answer' → logprob: -19.87520408630371
    6. 'pr' → logprob: -20.50020408630371
    7. 'prin' → logprob: -20.62520408630371
    8. 'ans' → logprob: -20.75020408630371
    9. 'rés' → logprob: -20.75020408630371
    10. '   ' → logprob: -20.87520408630371

Token 444: 'el' (ID: 296)
  Prédit: 'eler'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eler' → logprob: -1.0314167737960815
    2. 'el' → logprob: -1.4064167737960815
    3. '   ' → logprob: -1.6564167737960815
    4. 'print' → logprob: -1.9064167737960815
    5. 'ly' → logprob: -4.031416893005371
    6. 'le' → logprob: -4.156416893005371
    7. 'er' → logprob: -4.531416893005371
    8. '.py' → logprob: -6.406416893005371
    9. 'els' → logprob: -6.406416893005371
    10. 'ro' → logprob: -6.531416893005371

Token 445: ' de' (ID: 334)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.016469137743115425
    2. 'result' → logprob: -4.1414690017700195
    3. '(' → logprob: -8.89146900177002
    4. '   ' → logprob: -9.14146900177002
    5. '(print' → logprob: -10.01646900177002
    6. 'count' → logprob: -10.51646900177002
    7. 'answer' → logprob: -10.64146900177002
    8. 'def' → logprob: -11.01646900177002
    9. '(ans' → logprob: -11.01646900177002
    10. 'ans' → logprob: -11.01646900177002

Token 446: ' la' (ID: 557)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.8624639324116288e-06
    2. 'count' → logprob: -13.250001907348633
    3. ' print' → logprob: -17.250001907348633
    4. 'pr' → logprob: -22.125001907348633
    5. 'prin' → logprob: -22.375001907348633
    6. '```' → logprob: -22.875001907348633
    7. '   ' → logprob: -23.250001907348633
    8. 'result' → logprob: -23.625001907348633
    9. 'printf' → logprob: -23.750001907348633
    10. '
' → logprob: -25.250001907348633

Token 447: ' fonction' (ID: 17610)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -8.41866585687967e-06
    2. 'result' → logprob: -11.750008583068848
    3. 'count' → logprob: -14.875008583068848
    4. '```' → logprob: -15.750008583068848
    5. 'prin' → logprob: -17.12500762939453
    6. ' print' → logprob: -17.37500762939453
    7. 'pr' → logprob: -18.12500762939453
    8. '
' → logprob: -19.37500762939453
    9. 'printf' → logprob: -19.50000762939453
    10. 'answer' → logprob: -20.75000762939453

Token 448: ' principale' (ID: 68926)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.001998704159632325
    2. 'result' → logprob: -6.2519989013671875
    3. '   ' → logprob: -9.626998901367188
    4. ' print' → logprob: -12.626998901367188
    5. '```' → logprob: -14.626998901367188
    6. 'answer' → logprob: -15.501998901367188
    7. 'count' → logprob: -16.751998901367188
    8. ' result' → logprob: -16.876998901367188
    9. 'resultado' → logprob: -17.126998901367188
    10. 'ans' → logprob: -17.251998901367188

Token 449: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0034311427734792233
    2. '   ' → logprob: -6.37843132019043
    3. 'result' → logprob: -6.37843132019043
    4. ' print' → logprob: -11.00343132019043
    5. '```' → logprob: -11.50343132019043
    6. ')' → logprob: -14.12843132019043
    7. 'ans' → logprob: -14.62843132019043
    8. 'answer' → logprob: -14.62843132019043
    9. '    
' → logprob: -15.12843132019043
    10. ' result' → logprob: -15.50343132019043

Token 450: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.004274396225810051
    2. 'result' → logprob: -5.504274368286133
    3. '   ' → logprob: -8.754274368286133
    4. ' print' → logprob: -10.254274368286133
    5. ' result' → logprob: -13.879274368286133
    6. 'answer' → logprob: -14.004274368286133
    7. '```' → logprob: -14.129274368286133
    8. 'ans' → logprob: -16.004274368286133
    9. 'resultado' → logprob: -16.254274368286133
    10. 'output' → logprob: -17.254274368286133

Token 451: ' result' (ID: 1534)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0009137284359894693
    2. 'result' (adapté à ' result') → logprob: -7.000913619995117
    3. ' print' → logprob: -13.125913619995117
    4. 'ans' → logprob: -16.375913619995117
    5. 'answer' → logprob: -16.625913619995117
    6. 'res' → logprob: -17.000913619995117
    7. ' result' → logprob: -18.375913619995117
    8. '   ' → logprob: -19.125913619995117
    9. 'resultado' → logprob: -19.250913619995117
    10. '```' → logprob: -19.750913619995117

Token 452: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25193020701408386
    2. '=' → logprob: -1.5019302368164062
    3. ')' → logprob: -14.376930236816406
    4. '_' → logprob: -15.126930236816406
    5. 's' → logprob: -16.001930236816406
    6. '  ' → logprob: -16.751930236816406
    7. '.' → logprob: -17.376930236816406
    8. '_=' → logprob: -17.501930236816406
    9. ' =)' → logprob: -17.751930236816406
    10. '   ' → logprob: -17.751930236816406

Token 453: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -3.7697225252486533e-06
    2. ' count' → logprob: -12.500003814697266
    3. '	count' → logprob: -25.375003814697266
    4. '   ' → logprob: -25.875003814697266
    5. '(count' → logprob: -26.875003814697266
    6. 'code' → logprob: -27.250003814697266
    7. 'counts' → logprob: -27.625003814697266
    8. '[count' → logprob: -28.125003814697266
    9. ' ' → logprob: -28.625003814697266
    10. '=count' → logprob: -28.875003814697266

Token 454: '_sub' (ID: 11572)
  Prédit: '_sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sub' → logprob: -4.56102097814437e-05
    2. '_' → logprob: -10.000045776367188
    3. 'sub' → logprob: -17.000045776367188
    4. '_s' → logprob: -17.625045776367188
    5. '_SUB' → logprob: -17.750045776367188
    6. '_Sub' → logprob: -17.875045776367188
    7. '_subplot' → logprob: -19.250045776367188
    8. '_)' → logprob: -19.250045776367188
    9. 'Sub' → logprob: -19.750045776367188
    10. '_
' → logprob: -19.875045776367188

Token 455: 'arrays' (ID: 158630)
  Prédit: 'arrays'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arrays' → logprob: -0.0002802855451591313
    2. 'sub' → logprob: -8.875280380249023
    3. '_sub' → logprob: -9.000280380249023
    4. 'array' → logprob: -11.625280380249023
    5. '_arrays' → logprob: -12.375280380249023
    6. 'arr' → logprob: -13.250280380249023
    7. 'ar' → logprob: -13.625280380249023
    8. 'ub' → logprob: -15.375280380249023
    9. 'areas' → logprob: -15.500280380249023
    10. ' arrays' → logprob: -15.750280380249023

Token 456: '_with' (ID: 14161)
  Prédit: '_with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_with' → logprob: -1.9361264946837764e-07
    2. '_WITH' → logprob: -16.875
    3. 'with' → logprob: -17.25
    4. '_w' → logprob: -17.375
    5. '_for' → logprob: -18.125
    6. '```' → logprob: -18.375
    7. '_to' → logprob: -18.5
    8. '_count' → logprob: -18.75
    9. '_' → logprob: -19.0
    10. ' _' → logprob: -19.125

Token 457: '_unique' (ID: 51840)
  Prédit: '_unique'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_unique' → logprob: -0.02327156811952591
    2. 'unique' → logprob: -3.7732715606689453
    3. 'uni' → logprob: -11.648271560668945
    4. 'uniq' → logprob: -11.773271560668945
    5. '```' → logprob: -13.023271560668945
    6. 'nique' → logprob: -13.523271560668945
    7. '_uni' → logprob: -13.773271560668945
    8. 'Unique' → logprob: -14.398271560668945
    9. ' unique' → logprob: -14.773271560668945
    10. '
' → logprob: -14.773271560668945

Token 458: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -1.700132997939363e-05
    2. 'sum' → logprob: -11.250017166137695
    3. '_sub' → logprob: -12.500017166137695
    4. '_x' → logprob: -16.375017166137695
    5. '_' → logprob: -16.500017166137695
    6. '_s' → logprob: -17.250017166137695
    7. ' sum' → logprob: -17.375017166137695
    8. 's' → logprob: -17.375017166137695
    9. '_bits' → logprob: -18.125017166137695
    10. '_bit' → logprob: -18.250017166137695

Token 459: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.00030161935137584805
    2. '_with' → logprob: -8.250301361083984
    3. '_' → logprob: -10.750301361083984
    4. 'xor' → logprob: -11.625301361083984
    5. '_sub' → logprob: -13.000301361083984
    6. 'x' → logprob: -13.375301361083984
    7. '_unique' → logprob: -13.500301361083984
    8. '_arrays' → logprob: -14.125301361083984
    9. '```' → logprob: -14.125301361083984
    10. '_ex' → logprob: -14.625301361083984

Token 460: 'or' (ID: 267)
  Prédit: 'or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.002600268693640828
    2. 'xor' → logprob: -6.002600193023682
    3. 'ors' → logprob: -10.00260066986084
    4. 'orr' → logprob: -11.37760066986084
    5. 'OR' → logprob: -11.37760066986084
    6. 'r' → logprob: -11.50260066986084
    7. ' or' → logprob: -11.62760066986084
    8. ' xor' → logprob: -12.37760066986084
    9. '_or' → logprob: -12.62760066986084
    10. 'ор' → logprob: -12.87760066986084

Token 461: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.4449889063835144
    2. '_x' → logprob: -1.0699889659881592
    3. 'x' → logprob: -4.19498872756958
    4. '(' → logprob: -7.19498872756958
    5. '_(' → logprob: -8.694989204406738
    6. ' (' → logprob: -9.819989204406738
    7. 'X' → logprob: -9.944989204406738
    8. '_' → logprob: -10.819989204406738
    9. '```' → logprob: -11.569989204406738
    10. '(x' → logprob: -11.944989204406738

Token 462: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.9888433093437925e-05
    2. ',A' → logprob: -10.250040054321289
    3. ' ,' → logprob: -12.625040054321289
    4. ')' → logprob: -15.000040054321289
    5. ',
' → logprob: -15.250040054321289
    6. ',N' → logprob: -15.375040054321289
    7. '```' → logprob: -15.375040054321289
    8. 'A' → logprob: -16.37504005432129
    9. '(' → logprob: -16.87504005432129
    10. '‌,' → logprob: -17.25004005432129

Token 463: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0040785204619169235
    2. ' A' → logprob: -5.504078388214111
    3. '   ' → logprob: -17.004077911376953
    4. '	A' → logprob: -19.129077911376953
    5. ')' → logprob: -19.879077911376953
    6. '[A' → logprob: -20.629077911376953
    7. '```' → logprob: -20.879077911376953
    8. '=A' → logprob: -21.004077911376953
    9. ' ' → logprob: -21.129077911376953
    10. '>A' → logprob: -21.504077911376953

Token 464: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0232679583132267
    2. ')
' → logprob: -3.773267984390259
    3. '   ' → logprob: -11.52326774597168
    4. ',' → logprob: -11.77326774597168
    5. ')
' → logprob: -12.77326774597168
    6. ')

' → logprob: -14.64826774597168
    7. '(N' → logprob: -14.77326774597168
    8. '))' → logprob: -14.77326774597168
    9. '(' → logprob: -16.02326774597168
    10. ')`
' → logprob: -16.14826774597168

Token 465: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.093505099765025e-05
    2. '   ' → logprob: -11.000020980834961
    3. ' print' → logprob: -13.125020980834961
    4. '```' → logprob: -13.125020980834961
    5. '
' → logprob: -15.875020980834961
    6. '	print' → logprob: -18.50002098083496
    7. '#print' → logprob: -18.87502098083496
    8. '``' → logprob: -19.37502098083496
    9. '    
' → logprob: -19.62502098083496
    10. '(print' → logprob: -20.00002098083496

Token 466: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -18.5
    3. '   ' → logprob: -22.625
    4. '```' → logprob: -24.0
    5. 'printf' → logprob: -24.875
    6. 'pr' → logprob: -26.5
    7. '#print' → logprob: -26.875
    8. 'prin' → logprob: -27.125
    9. '
' → logprob: -27.5
    10. 'for' → logprob: -27.75

Token 467: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -19.75
    3. 'pr' → logprob: -25.75
    4. 'Print' → logprob: -26.375
    5. '```' → logprob: -26.375
    6. '#print' → logprob: -26.75
    7. 'prin' → logprob: -27.125
    8. '   ' → logprob: -27.375
    9. 'printf' → logprob: -28.25
    10. '	print' → logprob: -28.625

Token 468: 'ichage' (ID: 118475)
  Prédit: 'iche'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iche' → logprob: -0.3317834734916687
    2. 'ich' → logprob: -1.5817835330963135
    3. 'print' → logprob: -3.0817835330963135
    4. 'icher' → logprob: -3.7067835330963135
    5. 'ichage' → logprob: -5.206783294677734
    6. 'ic' → logprob: -8.081783294677734
    7. '   ' → logprob: -8.581783294677734
    8. '_print' → logprob: -9.081783294677734
    9. ' print' → logprob: -9.331783294677734
    10. '#' → logprob: -9.456783294677734

Token 469: ' du' (ID: 1462)
  Prédit: '(result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.0003987336531281471
    2. '(' → logprob: -8.000398635864258
    3. 'result' → logprob: -9.875398635864258
    4. '(print' → logprob: -11.750398635864258
    5. 'print' → logprob: -13.875398635864258
    6. '(output' → logprob: -14.125398635864258
    7. '(f' → logprob: -14.500398635864258
    8. '(res' → logprob: -14.750398635864258
    9. '   ' → logprob: -14.875398635864258
    10. '(results' → logprob: -15.125398635864258

Token 470: ' résultat' (ID: 62556)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -3.173704271830502e-06
    2. ' result' → logprob: -12.75000286102295
    3. '(result' → logprob: -15.75000286102295
    4. 'print' → logprob: -16.750003814697266
    5. ' résultat' → logprob: -19.375003814697266
    6. 'r' → logprob: -20.000003814697266
    7. 'res' → logprob: -20.125003814697266
    8. 'resultado' → logprob: -20.125003814697266
    9. ' resultat' → logprob: -20.375003814697266
    10. 'rés' → logprob: -20.500003814697266

Token 471: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00031580092036165297
    2. '   ' → logprob: -8.37531566619873
    3. '```' → logprob: -9.87531566619873
    4. ' print' → logprob: -10.75031566619873
    5. '(print' → logprob: -11.75031566619873
    6. '
' → logprob: -12.50031566619873
    7. '``' → logprob: -15.37531566619873
    8. '    
' → logprob: -15.75031566619873
    9. '<|end|>' → logprob: -16.375316619873047
    10. '.print' → logprob: -17.125316619873047

Token 472: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -7.3458322731312364e-06
    2. '```' → logprob: -12.250007629394531
    3. ' print' → logprob: -13.000007629394531
    4. '   ' → logprob: -15.125007629394531
    5. '``' → logprob: -18.62500762939453
    6. '
' → logprob: -21.62500762939453
    7. '(print' → logprob: -21.62500762939453
    8. '.print' → logprob: -21.87500762939453
    9. '#print' → logprob: -22.12500762939453
    10. 'printf' → logprob: -22.50000762939453

Token 473: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: 0.0
    2. '```' → logprob: -20.75
    3. ' print' → logprob: -21.0
    4. 'pr' → logprob: -25.375
    5. 'printf' → logprob: -26.125
    6. 'prin' → logprob: -26.375
    7. '   ' → logprob: -27.75
    8. 'println' → logprob: -28.0
    9. '#print' → logprob: -28.125
    10. 'Print' → logprob: -28.5

Token 474: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.004078878089785576
    2. '(' → logprob: -5.5040788650512695
    3. 'result' → logprob: -15.62907886505127
    4. '(res' → logprob: -15.87907886505127
    5. '(
' → logprob: -16.629079818725586
    6. '(results' → logprob: -17.254079818725586
    7. ' (' → logprob: -17.379079818725586
    8. '(resultado' → logprob: -17.879079818725586
    9. '(f' → logprob: -18.504079818725586
    10. '=result' → logprob: -18.879079818725586

Token 475: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.981667537620524e-06
    2. '())' → logprob: -13.875001907348633
    3. '()' → logprob: -14.250001907348633
    4. ')`' → logprob: -15.875001907348633
    5. '))' → logprob: -16.500001907348633
    6. ' )' → logprob: -16.750001907348633
    7. '(' → logprob: -17.250001907348633
    8. '`)' → logprob: -18.375001907348633
    9. ')")' → logprob: -18.750001907348633
    10. ')}' → logprob: -18.750001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 473
Tokens correctement prédits (1ère position, stricte): 131
Tokens correctement prédits (1ère position, avec adaptation): 142
Tokens correctement prédits (top 10): 301
Précision stricte (1ère position): 27.70%
Précision adaptée (1ère position): 30.02%
Précision (top 10): 63.64%
================================================================================
