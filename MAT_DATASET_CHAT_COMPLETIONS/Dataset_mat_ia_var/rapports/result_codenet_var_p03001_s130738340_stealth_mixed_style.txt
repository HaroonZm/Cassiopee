================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:55:46
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from sys import stdin

def obtenir_entrees():
    return [int(i) for i in stdin.readline().split()]

def aire(w, h):
    return (w * h) / 2.0

class Compteur:
    @staticmethod
    def compter(x, y, w, h):
        return 1 if (x<<1)==w and (y*2)==h else 0

W,H,x,y = obtenir_entrees()

res = aire(W,H)
c = Compteur.compter(x,y,W,H)
print(f"{res} {c}")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' stdin' (ID: 75143)
  Prédit: 'argv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'argv' → logprob: -0.14457781612873077
    2. ' argv' → logprob: -2.269577741622925
    3. 'exit' → logprob: -4.019577980041504
    4. ' exit' → logprob: -4.644577980041504
    5. 'stdout' → logprob: -6.269577980041504
    6. 'stdin' → logprob: -7.519577980041504
    7. 'import' → logprob: -7.894577980041504
    8. 'path' → logprob: -7.894577980041504
    9. 'stderr' → logprob: -9.019577980041504
    10. ' path' → logprob: -9.394577980041504

Token 4: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.009244076907634735
    2. '.readline' → logprob: -4.759243965148926
    3. '.read' → logprob: -8.509243965148926
    4. '\n' → logprob: -9.259243965148926
    5. '
' → logprob: -9.509243965148926
    6. '.
' → logprob: -9.759243965148926
    7. ',' → logprob: -9.884243965148926
    8. 'import' → logprob: -10.134243965148926
    9. '```' → logprob: -10.384243965148926
    10. '.write' → logprob: -11.134243965148926

Token 5: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.01052892580628395
    2. '.readline' → logprob: -5.260529041290283
    3. '\n' → logprob: -5.885529041290283
    4. '\' → logprob: -7.260529041290283
    5. 'import' → logprob: -7.510529041290283
    6. 'for' → logprob: -8.010528564453125
    7. '.read' → logprob: -8.635528564453125
    8. '' → logprob: -8.760528564453125
    9. ',' → logprob: -9.010528564453125
    10. '=' → logprob: -9.260528564453125

Token 6: ' obtenir' (ID: 54423)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6166977882385254
    2. ' read' → logprob: -0.8666977882385254
    3. ' process' → logprob: -4.616697788238525
    4. ' space' → logprob: -4.866697788238525
    5. ' parse' → logprob: -5.116697788238525
    6. ' main' → logprob: -5.491697788238525
    7. ' readline' → logprob: -5.991697788238525
    8. '_read' → logprob: -6.241697788238525
    9. '_' → logprob: -6.366697788238525
    10. ' calculate' → logprob: -6.866697788238525

Token 7: '_ent' (ID: 66249)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00931506510823965
    2. '_l' → logprob: -5.384315013885498
    3. '_input' → logprob: -6.259315013885498
    4. '(' → logprob: -7.884315013885498
    5. '_e' → logprob: -8.134315490722656
    6. 'e' → logprob: -8.259315490722656
    7. '```' → logprob: -8.384315490722656
    8. '_nom' → logprob: -8.509315490722656
    9. ' _' → logprob: -8.884315490722656
    10. '_nombre' → logprob: -8.884315490722656

Token 8: 'rees' (ID: 12339)
  Prédit: 'ier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ier' → logprob: -0.003961924463510513
    2. 'iers' → logprob: -6.12896203994751
    3. 'er' → logprob: -6.50396203994751
    4. '()' → logprob: -9.628961563110352
    5. 'r' → logprob: -10.253961563110352
    6. '```' → logprob: -10.378961563110352
    7. 'e' → logprob: -10.503961563110352
    8. 'ero' → logprob: -10.878961563110352
    9. 'iere' → logprob: -11.128961563110352
    10. 'ree' → logprob: -11.628961563110352

Token 9: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07509535551071167
    2. '():' → logprob: -2.7000954151153564
    3. '_' → logprob: -6.075095176696777
    4. 's' → logprob: -7.075095176696777
    5. '):' → logprob: -7.575095176696777
    6. ':' → logprob: -8.075095176696777
    7. '(:' → logprob: -8.200095176696777
    8. '('' → logprob: -9.200095176696777
    9. '(":' → logprob: -9.200095176696777
    10. '```' → logprob: -9.450095176696777

Token 10: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07264552265405655
    2. '
' → logprob: -3.447645425796509
    3. '    
' → logprob: -3.947645425796509
    4. '```' → logprob: -5.197645664215088
    5. '\n' → logprob: -5.697645664215088
    6. 'return' → logprob: -6.072645664215088
    7. ' return' → logprob: -6.322645664215088
    8. ' 
' → logprob: -6.947645664215088
    9. '<|end|>' → logprob: -7.322645664215088
    10. '  
' → logprob: -7.447645664215088

Token 11: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5870057940483093
    2. 'l' → logprob: -1.962005853652954
    3. 'return' (adapté à ' return') → logprob: -2.087005853652954
    4. ' lines' → logprob: -2.837005853652954
    5. ' return' → logprob: -3.462005853652954
    6. 'lines' → logprob: -3.587005853652954
    7. ' lignes' → logprob: -3.962005853652954
    8. 'data' → logprob: -4.587005615234375
    9. 'entries' → logprob: -5.587005615234375
    10. 'ligne' → logprob: -5.587005615234375

Token 12: ' [' (ID: 723)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.6587867140769958
    2. ' stdin' → logprob: -0.7837867140769958
    3. 'list' → logprob: -4.283786773681641
    4. ' list' → logprob: -5.158786773681641
    5. '(stdin' → logprob: -5.658786773681641
    6. ' ' → logprob: -7.033786773681641
    7. '   ' → logprob: -7.158786773681641
    8. '[' → logprob: -7.658786773681641
    9. '.stdin' → logprob: -8.03378677368164
    10. 'map' → logprob: -9.28378677368164

Token 13: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0039454177021980286
    2. 'line' → logprob: -6.253945350646973
    3. 'map' → logprob: -6.503945350646973
    4. 'list' → logprob: -8.253945350646973
    5. 'stdin' → logprob: -9.128945350646973
    6. 'x' → logprob: -10.753945350646973
    7. ' int' → logprob: -10.878945350646973
    8. 'next' → logprob: -10.878945350646973
    9. 'ligne' → logprob: -11.003945350646973
    10. 'float' → logprob: -11.003945350646973

Token 14: '(i' (ID: 3649)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.7278953790664673
    2. '(stdin' → logprob: -1.2278953790664673
    3. '(' → logprob: -1.6028953790664673
    4. '(line' → logprob: -3.9778952598571777
    5. '(i' → logprob: -6.477895259857178
    6. '(next' → logprob: -7.227895259857178
    7. '(s' → logprob: -7.602895259857178
    8. '(token' → logprob: -8.102895736694336
    9. '(word' → logprob: -8.227895736694336
    10. '(l' → logprob: -8.227895736694336

Token 15: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4079126715660095
    2. '(x' → logprob: -1.1579127311706543
    3. '(line' → logprob: -4.157912731170654
    4. '())' → logprob: -6.407912731170654
    5. '(stdin' → logprob: -6.907912731170654
    6. '(i' → logprob: -7.532912731170654
    7. '(s' → logprob: -7.782912731170654
    8. 'for' → logprob: -8.282912254333496
    9. '(' → logprob: -8.282912254333496
    10. '(item' → logprob: -9.157912254333496

Token 16: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3175278306007385
    2. 'for' → logprob: -1.3175277709960938
    3. '(x' → logprob: -6.192527770996094
    4. ')' → logprob: -6.817527770996094
    5. '(stdin' → logprob: -7.817527770996094
    6. '(line' → logprob: -8.192527770996094
    7. '(' → logprob: -9.192527770996094
    8. ' in' → logprob: -9.192527770996094
    9. '(s' → logprob: -10.067527770996094
    10. 'in' → logprob: -10.067527770996094

Token 17: ' i' (ID: 575)
  Prédit: ' stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stdin' → logprob: -0.08944123238325119
    2. 'stdin' → logprob: -2.4644412994384766
    3. '(stdin' → logprob: -7.714441299438477
    4. '.stdin' → logprob: -10.464441299438477
    5. ' ' → logprob: -11.089441299438477
    6. ' readline' → logprob: -12.964441299438477
    7. ' line' → logprob: -13.339441299438477
    8. ' input' → logprob: -13.714441299438477
    9. ' std' → logprob: -13.964441299438477
    10. ' i' → logprob: -14.089441299438477

Token 18: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005253322422504425
    2. 'in' → logprob: -5.255253314971924
    3. ' ' → logprob: -12.630253791809082
    4. 'stdin' → logprob: -12.755253791809082
    5. 'import' → logprob: -12.880253791809082
    6. 's' → logprob: -13.630253791809082
    7. '	in' → logprob: -13.630253791809082
    8. '(stdin' → logprob: -13.880253791809082
    9. '  ' → logprob: -14.192753791809082
    10. ' ' → logprob: -14.317753791809082

Token 19: ' stdin' (ID: 75143)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.024137254804372787
    2. ' stdin' → logprob: -4.024137020111084
    3. '(stdin' → logprob: -5.149137020111084
    4. '.stdin' → logprob: -9.149137496948242
    5. 'stdout' → logprob: -10.399137496948242
    6. 'st' → logprob: -12.274137496948242
    7. 'std' → logprob: -12.836637496948242
    8. '   ' → logprob: -13.211637496948242
    9. '```' → logprob: -13.336637496948242
    10. 'stin' → logprob: -13.399137496948242

Token 20: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0004354373668320477
    2. '.readlines' → logprob: -8.375435829162598
    3. '.read' → logprob: -9.125435829162598
    4. '.' → logprob: -10.125435829162598
    5. '().' → logprob: -10.750435829162598
    6. '()]' → logprob: -11.250435829162598
    7. ']' → logprob: -11.875435829162598
    8. ')]' → logprob: -11.875435829162598
    9. ')' → logprob: -12.250435829162598
    10. 'read' → logprob: -13.750435829162598

Token 21: '().' (ID: 1454)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.6809036135673523
    2. '())' → logprob: -1.180903673171997
    3. '()' → logprob: -1.680903673171997
    4. '(' → logprob: -7.930903434753418
    5. '()`' → logprob: -9.305903434753418
    6. '()][' → logprob: -10.055903434753418
    7. ' ()' → logprob: -10.305903434753418
    8. '().' → logprob: -10.555903434753418
    9. '()].' → logprob: -11.430903434753418
    10. '()]
' → logprob: -11.555903434753418

Token 22: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.5777277946472168
    2. 'split' → logprob: -0.8277277946472168
    3. 'rstrip' → logprob: -6.327727794647217
    4. ' split' → logprob: -15.577728271484375
    5. ' strip' → logprob: -15.952728271484375
    6. 'read' → logprob: -15.952728271484375
    7. '(split' → logprob: -16.077728271484375
    8. '```' → logprob: -16.702728271484375
    9. 'spl' → logprob: -17.202728271484375
    10. 's' → logprob: -18.077728271484375

Token 23: '()' (ID: 416)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.013093180023133755
    2. '())' → logprob: -4.513092994689941
    3. '()' → logprob: -6.263092994689941
    4. '(' → logprob: -9.388092994689941
    5. ')]' → logprob: -10.138092994689941
    6. ']' → logprob: -11.888092994689941
    7. '()]
' → logprob: -13.263092994689941
    8. '()][' → logprob: -13.638092994689941
    9. ']()' → logprob: -14.138092994689941
    10. '('' → logprob: -14.263092994689941

Token 24: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.011957711540162563
    2. ')]' → logprob: -4.51195764541626
    3. '])' → logprob: -7.13695764541626
    4. '()]' → logprob: -9.511958122253418
    5. '])]' → logprob: -11.011958122253418
    6. ' ]' → logprob: -11.511958122253418
    7. ')' → logprob: -12.136958122253418
    8. '`]' → logprob: -13.261958122253418
    9. ']]' → logprob: -13.386958122253418
    10. '   ' → logprob: -13.511958122253418

Token 25: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.21465322375297546
    2. '\' → logprob: -3.089653253555298
    3. '
' → logprob: -3.214653253555298
    4. '#' → logprob: -3.339653253555298
    5. '\n' → logprob: -3.589653253555298
    6. '[' → logprob: -4.339653015136719
    7. 'n' → logprob: -4.964653015136719
    8. '<|end|>' → logprob: -5.464653015136719
    9. '```' → logprob: -5.714653015136719
    10. '<|end|>' → logprob: -5.714653015136719

Token 26: ' aire' (ID: 37016)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -1.0392496585845947
    2. ' test' → logprob: -1.6642496585845947
    3. ' ' → logprob: -2.1642496585845947
    4. '_' → logprob: -2.5392496585845947
    5. ' ' → logprob: -3.0392496585845947
    6. ' saisir' → logprob: -3.0392496585845947
    7. ' calcul' → logprob: -4.539249420166016
    8. ' solution' → logprob: -4.664249420166016
    9. ' somme' → logprob: -4.789249420166016
    10. ' ob' → logprob: -4.789249420166016

Token 27: '(w' (ID: 7420)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.41071951389312744
    2. '(' → logprob: -1.1607195138931274
    3. '_rectangle' → logprob: -4.785719394683838
    4. '_triangle' → logprob: -5.160719394683838
    5. '_area' → logprob: -5.785719394683838
    6. '_surface' → logprob: -6.410719394683838
    7. '_polygon' → logprob: -7.035719394683838
    8. '_parent' → logprob: -7.910719394683838
    9. '_circle' → logprob: -8.035719871520996
    10. '_rect' → logprob: -8.160719871520996

Token 28: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010323172435164452
    2. ')' → logprob: -5.0103230476379395
    3. ' ,' → logprob: -6.5103230476379395
    4. 'a' → logprob: -6.7603230476379395
    5. ',)' → logprob: -7.5103230476379395
    6. 'e' → logprob: -9.760323524475098
    7. 'u' → logprob: -9.885323524475098
    8. '):' → logprob: -10.010323524475098
    9. '_' → logprob: -10.260323524475098
    10. ',a' → logprob: -10.385323524475098

Token 29: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.01822509989142418
    2. ' h' → logprob: -4.018225193023682
    3. 'l' → logprob: -9.643224716186523
    4. ' l' → logprob: -12.268224716186523
    5. ' ' → logprob: -13.143224716186523
    6. 't' → logprob: -14.018224716186523
    7. 'ha' → logprob: -14.143224716186523
    8. '	h' → logprob: -14.643224716186523
    9. 'H' → logprob: -14.768224716186523
    10. '```' → logprob: -15.643224716186523

Token 30: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0067469896748661995
    2. ')' → logprob: -5.006746768951416
    3. ',' → logprob: -10.756747245788574
    4. ' ):' → logprob: -12.381747245788574
    5. ':' → logprob: -13.131747245788574
    6. '):
' → logprob: -13.256747245788574
    7. '*' → logprob: -14.506747245788574
    8. '**' → logprob: -15.131747245788574
    9. ')：' → logprob: -15.256747245788574
    10. '   ' → logprob: -15.506747245788574

Token 31: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1512635052204132
    2. '   ' → logprob: -2.026263475418091
    3. ' ' → logprob: -6.27626371383667
    4. ' :' → logprob: -6.52626371383667
    5. ':return' → logprob: -6.90126371383667
    6. ' return' → logprob: -7.02626371383667
    7. '):' → logprob: -7.02626371383667
    8. '*' → logprob: -8.026263236999512
    9. 'return' → logprob: -8.151263236999512
    10. '  ' → logprob: -8.276263236999512

Token 32: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.35283681750297546
    2. 'return' (adapté à ' return') → logprob: -1.9778368473052979
    3. 'w' → logprob: -2.102836847305298
    4. ' w' → logprob: -3.727836847305298
    5. '   ' → logprob: -4.727836608886719
    6. ' ' → logprob: -5.977836608886719
    7. '    ' → logprob: -7.852836608886719
    8. 'r' → logprob: -8.352836608886719
    9. '0' → logprob: -8.602836608886719
    10. '2' → logprob: -9.602836608886719

Token 33: ' (' (ID: 350)
  Prédit: ' w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.22543621063232422
    2. 'w' → logprob: -1.6004362106323242
    3. ' ' → logprob: -11.350436210632324
    4. '0' → logprob: -12.100436210632324
    5. ' ' → logprob: -12.725436210632324
    6. '   ' → logprob: -13.975436210632324
    7. '1' → logprob: -14.350436210632324
    8. '(w' → logprob: -14.975436210632324
    9. '2' → logprob: -15.100436210632324
    10. '	w' → logprob: -15.475436210632324

Token 34: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.004344429355114698
    2. ' w' → logprob: -5.504344463348389
    3. '2' → logprob: -8.50434398651123
    4. '1' → logprob: -10.87934398651123
    5. '0' → logprob: -11.25434398651123
    6. '   ' → logprob: -11.50434398651123
    7. ' ' → logprob: -11.62934398651123
    8. ')' → logprob: -11.87934398651123
    9. 'int' → logprob: -13.87934398651123
    10. '(w' → logprob: -14.50434398651123

Token 35: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.1278020441532135
    2. '*' → logprob: -2.1278021335601807
    3. ' ' → logprob: -7.252801895141602
    4. ')' → logprob: -9.502801895141602
    5. ' )' → logprob: -11.002801895141602
    6. '+' → logprob: -11.377801895141602
    7. ',' → logprob: -11.377801895141602
    8. '*w' → logprob: -11.377801895141602
    9. ' ' → logprob: -11.877801895141602
    10. ' **' → logprob: -12.127801895141602

Token 36: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.28116366267204285
    2. ' h' → logprob: -1.4061636924743652
    3. ' ' → logprob: -11.406163215637207
    4. '2' → logprob: -14.156163215637207
    5. ' ' → logprob: -14.281163215637207
    6. ')' → logprob: -14.781163215637207
    7. '	h' → logprob: -16.156164169311523
    8. '1' → logprob: -17.031164169311523
    9. '<|end|>' → logprob: -17.031164169311523
    10. ' (' → logprob: -17.031164169311523

Token 37: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005616117268800735
    2. ' )' → logprob: -7.875561714172363
    3. ')//' → logprob: -8.750561714172363
    4. ')/' → logprob: -11.625561714172363
    5. ')>>' → logprob: -12.000561714172363
    6. '))' → logprob: -13.625561714172363
    7. ' //' → logprob: -13.750561714172363
    8. '*' → logprob: -13.875561714172363
    9. '//' → logprob: -14.000561714172363
    10. ')**' → logprob: -14.125561714172363

Token 38: ' /' (ID: 820)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.8333696126937866
    2. ' ' → logprob: -1.3333696126937866
    3. '*' → logprob: -2.333369731903076
    4. '//' → logprob: -3.083369731903076
    5. '<|end|>' → logprob: -3.333369731903076
    6. ' //' → logprob: -3.833369731903076
    7. '
' → logprob: -3.958369731903076
    8. 'def' → logprob: -4.083369731903076
    9. ')' → logprob: -4.333369731903076
    10. '/' → logprob: -4.458369731903076

Token 39: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.03806157782673836
    2. ' ' → logprob: -3.2880616188049316
    3. '4' → logprob: -11.413061141967773
    4. '1' → logprob: -12.163061141967773
    5. '3' → logprob: -13.663061141967773
    6. ' ' → logprob: -13.663061141967773
    7. '  ' → logprob: -14.663061141967773
    8. '   ' → logprob: -15.163061141967773
    9. '```' → logprob: -15.663061141967773
    10. '(' → logprob: -15.725561141967773

Token 40: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.000555416801944375
    2. ' ' → logprob: -7.500555515289307
    3. '1' → logprob: -13.750555038452148
    4. '4' → logprob: -14.250555038452148
    5. '3' → logprob: -14.875555038452148
    6. '(' → logprob: -15.875555038452148
    7. '```' → logprob: -16.75055503845215
    8. '  ' → logprob: -17.87555503845215
    9. '   ' → logprob: -18.37555503845215
    10. '6' → logprob: -18.62555503845215

Token 41: '.' (ID: 13)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.341256320476532
    2. '\n' → logprob: -2.0912563800811768
    3. '<|end|>' → logprob: -2.5912563800811768
    4. '*' → logprob: -2.8412563800811768
    5. '\' → logprob: -4.591256141662598
    6. '**' → logprob: -5.341256141662598
    7. '```' → logprob: -5.466256141662598
    8. '#' → logprob: -6.216256141662598
    9. ' 
' → logprob: -6.466256141662598
    10. '' → logprob: -6.716256141662598

Token 42: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.167648876318708e-05
    2. '<|end|>' → logprob: -10.125041961669922
    3. '```' → logprob: -14.000041961669922
    4. '6' → logprob: -14.750041961669922
    5. '**' → logprob: -16.250041961669922
    6. ' ' → logprob: -16.500041961669922
    7. '*' → logprob: -17.000041961669922
    8. '5' → logprob: -17.500041961669922
    9. '2' → logprob: -17.500041961669922
    10. '1' → logprob: -17.625041961669922

Token 43: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05771491676568985
    2. '<|end|>' → logprob: -3.8077149391174316
    3. '\n' → logprob: -4.057714939117432
    4. '*' → logprob: -5.432714939117432
    5. '\' → logprob: -5.557714939117432
    6. 'def' → logprob: -6.432714939117432
    7. '

' → logprob: -6.432714939117432
    8. '```' → logprob: -6.807714939117432
    9. ' 
' → logprob: -7.182714939117432
    10. '' → logprob: -7.182714939117432

Token 44: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04126403480768204
    2. '
' → logprob: -3.541264057159424
    3. 'w' → logprob: -4.916264057159424
    4. 'for' → logprob: -6.666264057159424
    5. '\' → logprob: -6.791264057159424
    6. 'n' → logprob: -7.666264057159424
    7. '```' → logprob: -7.666264057159424
    8. '#' → logprob: -8.666263580322266
    9. '

' → logprob: -8.916263580322266
    10. '\n' → logprob: -9.166263580322266

Token 45: ' Comp' (ID: 5211)
  Prédit: ' Triangle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Triangle' → logprob: -0.0801563486456871
    2. ' Tri' → logprob: -2.8301563262939453
    3. 'Triangle' → logprob: -4.580156326293945
    4. ' ' → logprob: -5.205156326293945
    5. ' triangle' → logprob: -8.205156326293945
    6. 'Tri' → logprob: -8.205156326293945
    7. ' ' → logprob: -8.330156326293945
    8. ' T' → logprob: -8.330156326293945
    9. ' Trie' → logprob: -8.705156326293945
    10. ' A' → logprob: -8.955156326293945

Token 46: 'teur' (ID: 45262)
  Prédit: 'ute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ute' → logprob: -0.5250217914581299
    2. 'onent' → logprob: -1.7750217914581299
    3. 'ut' → logprob: -1.9000217914581299
    4. 'on' → logprob: -3.65002179145813
    5. 'lete' → logprob: -4.150021553039551
    6. 'te' → logprob: -4.275021553039551
    7. 'uter' → logprob: -5.025021553039551
    8. 'utation' → logprob: -5.525021553039551
    9. 'os' → logprob: -5.775021553039551
    10. 'ar' → logprob: -5.900021553039551

Token 47: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -5.633853652398102e-05
    2. ' :' → logprob: -10.125056266784668
    3. '(' → logprob: -11.750056266784668
    4. '():' → logprob: -12.125056266784668
    5. ':
' → logprob: -13.375056266784668
    6. ':**' → logprob: -14.250056266784668
    7. '(object' → logprob: -15.250056266784668
    8. ':def' → logprob: -16.250057220458984
    9. '(:' → logprob: -16.750057220458984
    10. '):' → logprob: -17.000057220458984

Token 48: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09653370082378387
    2. '    ' → logprob: -2.84653377532959
    3. ' ' → logprob: -3.72153377532959
    4. ' def' → logprob: -5.72153377532959
    5. '    
' → logprob: -5.97153377532959
    6. 'def' → logprob: -7.09653377532959
    7. '_' → logprob: -7.09653377532959
    8. '  ' → logprob: -7.47153377532959
    9. ' 
' → logprob: -7.59653377532959
    10. '(' → logprob: -8.22153377532959

Token 49: ' @' (ID: 759)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.37307897210121155
    2. '   ' → logprob: -1.4980789422988892
    3. 'def' → logprob: -2.4980790615081787
    4. '    ' → logprob: -5.3730788230896
    5. ' ' → logprob: -7.6230788230896
    6. '    
' → logprob: -8.748079299926758
    7. '  ' → logprob: -9.623079299926758
    8. ' 
' → logprob: -9.748079299926758
    9. ' de' → logprob: -9.998079299926758
    10. 'class' → logprob: -10.748079299926758

Token 50: 'staticmethod' (ID: 53164)
  Prédit: 'property'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'property' → logprob: -0.3890974223613739
    2. 'staticmethod' → logprob: -1.1390974521636963
    3. 'classmethod' → logprob: -6.514097213745117
    4. 'proper' → logprob: -7.889097213745117
    5. 'pro' → logprob: -8.139097213745117
    6. 'static' → logprob: -10.014097213745117
    7. 'dat' → logprob: -11.014097213745117
    8. 'prop' → logprob: -12.139097213745117
    9. 'st' → logprob: -13.264097213745117
    10. 'sta' → logprob: -13.514097213745117

Token 51: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02134832553565502
    2. '
' → logprob: -4.521348476409912
    3. '   ' → logprob: -4.771348476409912
    4. ' def' → logprob: -6.521348476409912
    5. '(' → logprob: -9.521347999572754
    6. '<|end|>' → logprob: -9.646347999572754
    7. '    
' → logprob: -10.146347999572754
    8. '\' → logprob: -10.896347999572754
    9. '(def' → logprob: -11.021347999572754
    10. '	def' → logprob: -11.021347999572754

Token 52: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.011312946677207947
    2. ' def' → logprob: -5.136312961578369
    3. '
' → logprob: -5.761312961578369
    4. '   ' → logprob: -6.136312961578369
    5. '	def' → logprob: -10.261312484741211
    6. '    
' → logprob: -11.511312484741211
    7. '  ' → logprob: -12.761312484741211
    8. ' ' → logprob: -13.511312484741211
    9. 'ndef' → logprob: -13.511312484741211
    10. '\' → logprob: -13.886312484741211

Token 53: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00015050210640765727
    2. ' def' → logprob: -8.875150680541992
    3. 'de' → logprob: -12.375150680541992
    4. 'increment' → logprob: -12.875150680541992
    5. 'get' → logprob: -14.000150680541992
    6. 'comp' → logprob: -14.125150680541992
    7. 'reset' → logprob: -14.750150680541992
    8. 'dé' → logprob: -15.000150680541992
    9. '__' → logprob: -15.250150680541992
    10. 'count' → logprob: -15.500150680541992

Token 54: ' compter' (ID: 81694)
  Prédit: 'increment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'increment' → logprob: -0.8099910616874695
    2. 'comp' → logprob: -2.1849911212921143
    3. 'aire' → logprob: -2.5599911212921143
    4. '__' → logprob: -2.9349911212921143
    5. ' compter' → logprob: -3.1849911212921143
    6. ' calcul' → logprob: -3.1849911212921143
    7. 'calcul' → logprob: -3.4349911212921143
    8. ' increment' → logprob: -4.184990882873535
    9. 'reset' → logprob: -4.559990882873535
    10. 'get' → logprob: -4.559990882873535

Token 55: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02126488648355007
    2. '():' → logprob: -3.8962647914886475
    3. '()' → logprob: -8.271265029907227
    4. ':' → logprob: -8.896265029907227
    5. ' (' → logprob: -9.896265029907227
    6. '('' → logprob: -10.021265029907227
    7. '(`' → logprob: -10.521265029907227
    8. '(w' → logprob: -11.021265029907227
    9. '("("' → logprob: -11.021265029907227
    10. '(s' → logprob: -11.146265029907227

Token 56: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2327924221754074
    2. ',' → logprob: -1.6077923774719238
    3. ' ):' → logprob: -5.482792377471924
    4. ' ,' → logprob: -6.732792377471924
    5. ')' → logprob: -6.732792377471924
    6. '   ' → logprob: -8.232792854309082
    7. ':' → logprob: -8.732792854309082
    8. '):
' → logprob: -9.357792854309082
    9. ',y' → logprob: -9.982792854309082
    10. ' :' → logprob: -10.107792854309082

Token 57: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.6873411536216736
    2. ' y' → logprob: -0.8123411536216736
    3. 'n' → logprob: -4.187341213226318
    4. ' n' → logprob: -4.562341213226318
    5. ' lst' → logprob: -5.562341213226318
    6. 'lst' → logprob: -5.812341213226318
    7. '   ' → logprob: -6.187341213226318
    8. 'liste' → logprob: -6.562341213226318
    9. ' ' → logprob: -6.687341213226318
    10. 'val' → logprob: -6.812341213226318

Token 58: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.018940286710858345
    2. ',' → logprob: -4.018940448760986
    3. ')' → logprob: -7.518940448760986
    4. ' ):' → logprob: -8.643939971923828
    5. ':' → logprob: -10.393939971923828
    6. ' ,' → logprob: -11.268939971923828
    7. '   ' → logprob: -11.643939971923828
    8. '):
' → logprob: -12.268939971923828
    9. ' ' → logprob: -13.018939971923828
    10. ' :' → logprob: -13.393939971923828

Token 59: ' w' (ID: 286)
  Prédit: ' z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' z' → logprob: -0.8693341016769409
    2. 'z' → logprob: -1.619334101676941
    3. ' n' → logprob: -2.3693342208862305
    4. ' w' → logprob: -2.7443342208862305
    5. 'n' → logprob: -3.2443342208862305
    6. 'w' → logprob: -3.6193342208862305
    7. ' l' → logprob: -3.9943342208862305
    8. ' t' → logprob: -4.6193342208862305
    9. ' h' → logprob: -4.9318342208862305
    10. 'l' → logprob: -5.1193342208862305

Token 60: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10801318287849426
    2. '):' → logprob: -2.858013153076172
    3. ')' → logprob: -3.108013153076172
    4. ' ,' → logprob: -8.608013153076172
    5. '),' → logprob: -10.608013153076172
    6. ' )' → logprob: -11.233013153076172
    7. ' ):' → logprob: -11.233013153076172
    8. ',y' → logprob: -11.358013153076172
    9. ',w' → logprob: -11.608013153076172
    10. '   ' → logprob: -11.733013153076172

Token 61: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.3493060767650604
    2. ' h' → logprob: -1.2243061065673828
    3. ')' → logprob: -8.349306106567383
    4. ' ' → logprob: -8.474306106567383
    5. '   ' → logprob: -9.599306106567383
    6. ' t' → logprob: -9.849306106567383
    7. 't' → logprob: -9.974306106567383
    8. 's' → logprob: -10.661806106567383
    9. ' s' → logprob: -10.911806106567383
    10. '  ' → logprob: -11.099306106567383

Token 62: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0005725711234845221
    2. ')' → logprob: -7.625572681427002
    3. ',' → logprob: -10.000572204589844
    4. ' ):' → logprob: -10.625572204589844
    5. ':' → logprob: -11.750572204589844
    6. '   ' → logprob: -12.500572204589844
    7. '):
' → logprob: -13.000572204589844
    8. ' ' → logprob: -15.750572204589844
    9. ' :' → logprob: -16.125572204589844
    10. '=' → logprob: -16.125572204589844

Token 63: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.49796077609062195
    2. ':' → logprob: -0.9979608058929443
    3. ' :' → logprob: -4.872960567474365
    4. '):' → logprob: -5.372960567474365
    5. ')' → logprob: -6.122960567474365
    6. '<|end|>' → logprob: -6.247960567474365
    7. ':return' → logprob: -6.372960567474365
    8. '   ' → logprob: -6.747960567474365
    9. 'return' → logprob: -6.997960567474365
    10. ':
' → logprob: -7.372960567474365

Token 64: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.8735538125038147
    2. 'count' → logprob: -1.87355375289917
    3. 'if' → logprob: -1.99855375289917
    4. 'result' → logprob: -2.87355375289917
    5. 'n' → logprob: -3.12355375289917
    6. '       ' → logprob: -3.62355375289917
    7. '   ' → logprob: -3.87355375289917
    8. 'res' → logprob: -3.99855375289917
    9. 'area' → logprob: -4.24855375289917
    10. ' if' → logprob: -4.37355375289917

Token 65: ' ' (ID: 220)
  Prédit: 'aire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aire' → logprob: -0.853329062461853
    2. ' aire' → logprob: -1.603329062461853
    3. 'int' → logprob: -2.7283291816711426
    4. ' int' → logprob: -2.7283291816711426
    5. 'x' → logprob: -3.4783291816711426
    6. ' max' → logprob: -3.4783291816711426
    7. ' x' → logprob: -3.6033291816711426
    8. ' (' → logprob: -3.9783291816711426
    9. 'abs' → logprob: -3.9783291816711426
    10. 'max' → logprob: -4.103329181671143

Token 66: '1' (ID: 16)
  Prédit: 'aire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aire' → logprob: -0.29555338621139526
    2. 'int' → logprob: -2.17055344581604
    3. 'max' → logprob: -3.17055344581604
    4. 'abs' → logprob: -3.42055344581604
    5. 'w' → logprob: -4.045553207397461
    6. 'x' → logprob: -4.170553207397461
    7. '(int' → logprob: -5.045553207397461
    8. ' aire' → logprob: -5.545553207397461
    9. '0' → logprob: -5.920553207397461
    10. '(' → logprob: -5.920553207397461

Token 67: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 68: ' (' (ID: 350)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.5502305030822754
    2. 'x' → logprob: -1.4252305030822754
    3. ' (' → logprob: -2.6752305030822754
    4. ' w' → logprob: -3.1752305030822754
    5. ' y' → logprob: -3.8002305030822754
    6. 'w' → logprob: -4.050230503082275
    7. '(x' → logprob: -4.300230503082275
    8. ' ' → logprob: -5.550230503082275
    9. 'y' → logprob: -5.800230503082275
    10. ' abs' → logprob: -5.800230503082275

Token 69: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5881679058074951
    2. ' x' → logprob: -1.2131679058074951
    3. 'w' → logprob: -2.838167905807495
    4. ' w' → logprob: -3.588167905807495
    5. '(x' → logprob: -4.463168144226074
    6. ' (' → logprob: -4.588168144226074
    7. '0' → logprob: -4.838168144226074
    8. ' ' → logprob: -4.963168144226074
    9. ' abs' → logprob: -5.088168144226074
    10. ' y' → logprob: -5.213168144226074

Token 70: '<<' (ID: 5354)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.9290160536766052
    2. ' <=' → logprob: -1.92901611328125
    3. '>=' → logprob: -2.30401611328125
    4. '+' → logprob: -2.42901611328125
    5. ' ==' → logprob: -2.55401611328125
    6. ' +' → logprob: -2.67901611328125
    7. '==' → logprob: -2.92901611328125
    8. '<=' → logprob: -3.30401611328125
    9. ' >' → logprob: -4.67901611328125
    10. ' <' → logprob: -5.42901611328125

Token 71: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04705559089779854
    2. '2' → logprob: -4.047055721282959
    3. ' ' → logprob: -4.797055721282959
    4. 'h' → logprob: -5.547055721282959
    5. 'w' → logprob: -5.547055721282959
    6. 'y' → logprob: -5.922055721282959
    7. '0' → logprob: -6.172055721282959
    8. '=' → logprob: -6.797055721282959
    9. ' y' → logprob: -7.047055721282959
    10. ')' → logprob: -7.047055721282959

Token 72: ')==' (ID: 35269)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016604799777269363
    2. ')>=' → logprob: -5.016604900360107
    3. ' )' → logprob: -6.141604900360107
    4. ')==' → logprob: -6.266604900360107
    5. ')<=' → logprob: -6.766604900360107
    6. ')>' → logprob: -6.891604900360107
    7. '>=' → logprob: -7.266604900360107
    8. '==' → logprob: -7.516604900360107
    9. ')<' → logprob: -7.641604900360107
    10. ' >=' → logprob: -7.891604900360107

Token 73: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.03549974784255028
    2. ' w' → logprob: -3.4104998111724854
    3. '(w' → logprob: -6.910499572753906
    4. ' (' → logprob: -8.160499572753906
    5. '(' → logprob: -8.410499572753906
    6. 'h' → logprob: -8.660499572753906
    7. ' ' → logprob: -9.660499572753906
    8. 'y' → logprob: -10.660499572753906
    9. ' h' → logprob: -11.035499572753906
    10. '   ' → logprob: -11.410499572753906

Token 74: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.09044598788022995
    2. 'and' → logprob: -2.4654459953308105
    3. ' ' → logprob: -7.2154459953308105
    4. ' or' → logprob: -7.9654459953308105
    5. ' else' → logprob: -8.090445518493652
    6. 'else' → logprob: -10.215445518493652
    7. '    ' → logprob: -10.715445518493652
    8. '   ' → logprob: -10.965445518493652
    9. '  ' → logprob: -11.965445518493652
    10. '==' → logprob: -12.340445518493652

Token 75: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.20310990512371063
    2. '(y' → logprob: -1.703109860420227
    3. ' y' → logprob: -7.5781097412109375
    4. '(' → logprob: -7.5781097412109375
    5. '(h' → logprob: -7.9531097412109375
    6. ' ' → logprob: -9.203109741210938
    7. 'y' → logprob: -9.328109741210938
    8. '(x' → logprob: -9.453109741210938
    9. '0' → logprob: -11.453109741210938
    10. ' ' → logprob: -11.578109741210938

Token 76: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.4349937438964844
    2. '(y' → logprob: -1.0599937438964844
    3. 'h' → logprob: -6.184993743896484
    4. ' y' → logprob: -6.434993743896484
    5. '(h' → logprob: -7.059993743896484
    6. '(' → logprob: -7.184993743896484
    7. ' (' → logprob: -7.684993743896484
    8. '1' → logprob: -9.309993743896484
    9. '2' → logprob: -9.559993743896484
    10. ' ' → logprob: -9.684993743896484

Token 77: '*' (ID: 9)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.0007113590254448354
    2. '*' → logprob: -8.250711441040039
    3. ')<<' → logprob: -8.625711441040039
    4. '==' → logprob: -8.625711441040039
    5. ' <<' → logprob: -10.375711441040039
    6. '>>' → logprob: -10.625711441040039
    7. '()<<' → logprob: -11.375711441040039
    8. '```' → logprob: -12.125711441040039
    9. ']<<' → logprob: -12.500711441040039
    10. ')' → logprob: -13.250711441040039

Token 78: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0061961147002875805
    2. '*' → logprob: -5.631196022033691
    3. ')<<' → logprob: -7.631196022033691
    4. '<<' → logprob: -7.881196022033691
    5. '==' → logprob: -7.881196022033691
    6. '>>' → logprob: -8.381196022033691
    7. ')==' → logprob: -8.381196022033691
    8. ' ' → logprob: -8.381196022033691
    9. '4' → logprob: -8.506196022033691
    10. ')' → logprob: -8.631196022033691

Token 79: ')==' (ID: 35269)
  Prédit: ')=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')==' → logprob: -0.07036040723323822
    2. ')' → logprob: -2.9453604221343994
    3. '==' → logprob: -4.19536018371582
    4. ')>=' → logprob: -9.32036018371582
    5. '")==' → logprob: -9.94536018371582
    6. ' ==' → logprob: -10.44536018371582
    7. ']==' → logprob: -10.44536018371582
    8. 'h' → logprob: -10.57036018371582
    9. ')<=' → logprob: -10.69536018371582
    10. ' )' → logprob: -10.82036018371582

Token 80: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -4.7755875129951164e-05
    2. ' h' → logprob: -10.00004768371582
    3. '   ' → logprob: -13.37504768371582
    4. ' ' → logprob: -15.25004768371582
    5. 'y' → logprob: -16.00004768371582
    6. '  ' → logprob: -17.00004768371582
    7. '	h' → logprob: -17.00004768371582
    8. '<h' → logprob: -17.00004768371582
    9. '2' → logprob: -17.25004768371582
    10. '    ' → logprob: -17.62504768371582

Token 81: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.0076578580774366856
    2. 'else' → logprob: -4.882658004760742
    3. ' ' → logprob: -10.257658004760742
    4. '    ' → logprob: -12.632658004760742
    5. '.' → logprob: -13.007658004760742
    6. '	else' → logprob: -13.007658004760742
    7. ' and' → logprob: -13.757658004760742
    8. '  ' → logprob: -13.882658004760742
    9. '   ' → logprob: -14.007658004760742
    10. '        ' → logprob: -14.132658004760742

Token 82: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04883648455142975
    2. ' ' → logprob: -3.0488364696502686
    3. '2' → logprob: -9.798836708068848
    4. '(' → logprob: -9.923836708068848
    5. '1' → logprob: -10.173836708068848
    6. ' (' → logprob: -10.173836708068848
    7. '       ' → logprob: -10.923836708068848
    8. '   ' → logprob: -11.423836708068848
    9. 'abs' → logprob: -11.798836708068848
    10. '           ' → logprob: -12.423836708068848

Token 83: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001622695242986083
    2. ' ' → logprob: -7.376622676849365
    3. '1' → logprob: -8.251623153686523
    4. '(' → logprob: -8.501623153686523
    5. '2' → logprob: -8.501623153686523
    6. 'abs' → logprob: -10.001623153686523
    7. '-' → logprob: -10.251623153686523
    8. '((' → logprob: -10.376623153686523
    9. 'int' → logprob: -10.501623153686523
    10. '   ' → logprob: -10.626623153686523

Token 84: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 85: 'W' (ID: 54)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 86: ',H' (ID: 94400)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007202051114290953
    2. '=' → logprob: -6.0072021484375
    3. ' =' → logprob: -6.0072021484375
    4. ' ,' → logprob: -6.1322021484375
    5. ',W' → logprob: -11.3822021484375
    6. ',h' → logprob: -11.8822021484375
    7. ',H' → logprob: -11.8822021484375
    8. '.' → logprob: -12.1322021484375
    9. ',E' → logprob: -12.3822021484375
    10. ' ' → logprob: -12.5072021484375

Token 87: ',x' (ID: 29748)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2708679735660553
    2. ' =' → logprob: -2.0208680629730225
    3. '=' → logprob: -2.2708680629730225
    4. ' ,' → logprob: -6.770867824554443
    5. ',W' → logprob: -9.145868301391602
    6. ' ' → logprob: -9.770868301391602
    7. '<|end|>' → logprob: -10.145868301391602
    8. '=input' → logprob: -10.270868301391602
    9. ',input' → logprob: -11.270868301391602
    10. ',w' → logprob: -11.270868301391602

Token 88: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0042195552960038185
    2. ',y' → logprob: -5.7542195320129395
    3. ',s' → logprob: -8.879220008850098
    4. ',i' → logprob: -9.379220008850098
    5. ',x' → logprob: -9.379220008850098
    6. ' =' → logprob: -9.504220008850098
    7. ',W' → logprob: -9.629220008850098
    8. ' ,' → logprob: -9.754220008850098
    9. ',w' → logprob: -9.754220008850098
    10. ',I' → logprob: -9.879220008850098

Token 89: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3153022229671478
    2. ' =' → logprob: -1.3153022527694702
    3. ',' → logprob: -6.31530237197876
    4. '<|end|>' → logprob: -9.190301895141602
    5. ' ' → logprob: -9.690301895141602
    6. ')' → logprob: -11.065301895141602
    7. ' ,' → logprob: -11.440301895141602
    8. ' =)' → logprob: -11.940301895141602
    9. ' =
' → logprob: -12.190301895141602
    10. '=

' → logprob: -12.565301895141602

Token 90: ' obtenir' (ID: 54423)
  Prédit: ' obtenir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' obtenir' → logprob: -0.18291215598583221
    2. 'ob' → logprob: -1.8079121112823486
    3. ' ob' → logprob: -6.807912349700928
    4. ' ' → logprob: -7.432912349700928
    5. ' map' → logprob: -7.932912349700928
    6. ' [' → logprob: -8.55791187286377
    7. ' obt' → logprob: -9.18291187286377
    8. 'map' → logprob: -9.18291187286377
    9. '[' → logprob: -9.30791187286377
    10. ' obten' → logprob: -9.30791187286377

Token 91: '_ent' (ID: 66249)
  Prédit: '_ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ent' → logprob: -0.0013515453319996595
    2. '_' → logprob: -6.626351356506348
    3. 'ent' → logprob: -10.626351356506348
    4. '	ent' → logprob: -14.501351356506348
    5. '_ENT' → logprob: -15.251351356506348
    6. '(ent' → logprob: -15.626351356506348
    7. ' _' → logprob: -15.876351356506348
    8. '_entropy' → logprob: -16.251352310180664
    9. '_e' → logprob: -16.876352310180664
    10. '```' → logprob: -17.001352310180664

Token 92: 'rees' (ID: 12339)
  Prédit: 'rees'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rees' → logprob: -0.00869860127568245
    2. 'ees' → logprob: -4.758698463439941
    3. 'r' → logprob: -9.633698463439941
    4. 'es' → logprob: -12.133698463439941
    5. 're' → logprob: -12.258698463439941
    6. '1' → logprob: -13.508698463439941
    7. 'e' → logprob: -13.758698463439941
    8. 'res' → logprob: -14.008698463439941
    9. 'ées' → logprob: -14.383698463439941
    10. '>' → logprob: -14.383698463439941

Token 93: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.8193366486229934e-05
    2. '(' → logprob: -11.500018119812012
    3. '()
' → logprob: -12.875018119812012
    4. '();' → logprob: -13.750018119812012
    5. '()

' → logprob: -14.375018119812012
    6. '().' → logprob: -14.375018119812012
    7. ' ()' → logprob: -14.625018119812012
    8. '()[' → logprob: -14.625018119812012
    9. '()]' → logprob: -14.750018119812012
    10. '()`' → logprob: -14.875018119812012

Token 94: 'res' (ID: 430)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.000227496653678827
    2. 'if' → logprob: -8.875227928161621
    3. 'result' → logprob: -10.750227928161621
    4. 'comp' → logprob: -11.125227928161621
    5. 'w' → logprob: -11.500227928161621
    6. 'r' → logprob: -11.750227928161621
    7. 'pr' → logprob: -12.125227928161621
    8. 'total' → logprob: -12.500227928161621
    9. 'for' → logprob: -12.875227928161621
    10. 'p' → logprob: -12.875227928161621

Token 95: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17402571439743042
    2. 'ult' → logprob: -2.049025774002075
    3. 'ultat' → logprob: -3.924025774002075
    4. '=' → logprob: -4.674025535583496
    5. 'ults' → logprob: -6.549025535583496
    6. 'u' → logprob: -8.924025535583496
    7. 'ULT' → logprob: -9.549025535583496
    8. 'ulta' → logprob: -10.549025535583496
    9. 'ut' → logprob: -11.049025535583496
    10. ' ' → logprob: -11.174025535583496

Token 96: ' aire' (ID: 37016)
  Prédit: 'Comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Comp' → logprob: -0.02193290926516056
    2. 'aire' → logprob: -4.646933078765869
    3. '0' → logprob: -4.771933078765869
    4. ' Comp' → logprob: -5.896933078765869
    5. 'sum' → logprob: -8.521932601928711
    6. 'air' → logprob: -8.646932601928711
    7. '(' → logprob: -8.771932601928711
    8. 'Compte' → logprob: -9.146932601928711
    9. '1' → logprob: -10.271932601928711
    10. '[]' → logprob: -10.521932601928711

Token 97: '(W' (ID: 26031)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.2085549235343933
    2. '(W' → logprob: -1.708554983139038
    3. '(' → logprob: -5.208554744720459
    4. '(w' → logprob: -6.458554744720459
    5. ' (' → logprob: -10.208555221557617
    6. '(y' → logprob: -11.208555221557617
    7. 'W' → logprob: -11.583555221557617
    8. '((' → logprob: -12.833555221557617
    9. '(wx' → logprob: -12.833555221557617
    10. '(
' → logprob: -12.958555221557617

Token 98: ',H' (ID: 94400)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007332467939704657
    2. ',y' → logprob: -5.5073323249816895
    3. ' ,' → logprob: -6.5073323249816895
    4. ',x' → logprob: -6.5073323249816895
    5. ',w' → logprob: -9.757332801818848
    6. ',H' → logprob: -9.757332801818848
    7. ',W' → logprob: -9.882332801818848
    8. '-' → logprob: -10.257332801818848
    9. ' -' → logprob: -10.882332801818848
    10. ',
' → logprob: -11.632332801818848

Token 99: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00048298496403731406
    2. ' )' → logprob: -8.000482559204102
    3. ')-' → logprob: -9.500482559204102
    4. '-' → logprob: -10.375482559204102
    5. ' -' → logprob: -11.250482559204102
    6. ',' → logprob: -11.500482559204102
    7. ')
' → logprob: -12.500482559204102
    8. ')*' → logprob: -13.000482559204102
    9. '))' → logprob: -13.125482559204102
    10. ' ' → logprob: -13.500482559204102

Token 100: 'c' (ID: 66)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.8618206977844238
    2. '
' → logprob: -1.1118206977844238
    3. 'print' → logprob: -2.236820697784424
    4. '+' → logprob: -2.486820697784424
    5. 'if' → logprob: -2.986820697784424
    6. '+
' → logprob: -5.111820697784424
    7. ' +' → logprob: -6.736820697784424
    8. '
' → logprob: -8.236820220947266
    9. '

' → logprob: -8.986820220947266
    10. ' if' → logprob: -9.486820220947266

Token 101: ' =' (ID: 314)
  Prédit: 'omp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'omp' → logprob: -0.7981171011924744
    2. 'ount' → logprob: -1.0481171607971191
    3. 'res' → logprob: -3.048117160797119
    4. 'nt' → logprob: -3.173117160797119
    5. 'pt' → logprob: -3.798117160797119
    6. 'ont' → logprob: -3.923117160797119
    7. 'out' → logprob: -4.048117160797119
    8. 'ounter' → logprob: -4.173117160797119
    9. ' =' → logprob: -4.798117160797119
    10. 'r' → logprob: -4.923117160797119

Token 102: ' Comp' (ID: 5211)
  Prédit: 'Comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Comp' → logprob: -0.00038872790173627436
    2. ' Comp' → logprob: -7.8753886222839355
    3. '0' → logprob: -12.125389099121094
    4. 'C' → logprob: -14.125389099121094
    5. 'Compte' → logprob: -14.125389099121094
    6. '.Comp' → logprob: -14.875389099121094
    7. 'Com' → logprob: -15.000389099121094
    8. ' ' → logprob: -15.250389099121094
    9. 'comp' → logprob: -15.375389099121094
    10. 'Cont' → logprob: -15.625389099121094

Token 103: 'teur' (ID: 45262)
  Prédit: 'teur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'teur' → logprob: -2.6656825866666622e-05
    2. 'uteur' → logprob: -11.37502670288086
    3. 'te' → logprob: -11.75002670288086
    4. 'ter' → logprob: -12.37502670288086
    5. 'teurs' → logprob: -13.12502670288086
    6. 't' → logprob: -14.12502670288086
    7. 'tur' → logprob: -16.25002670288086
    8. 'taire' → logprob: -16.62502670288086
    9. '**' → logprob: -17.37502670288086
    10. 'ateur' → logprob: -17.50002670288086

Token 104: '.comp' (ID: 20569)
  Prédit: '.comp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.comp' → logprob: -0.00537842558696866
    2. '.' → logprob: -6.005378246307373
    3. '.com' → logprob: -6.130378246307373
    4. '.Comp' → logprob: -7.880378246307373
    5. '.cont' → logprob: -8.380378723144531
    6. '.count' → logprob: -10.505378723144531
    7. 'comp' → logprob: -10.755378723144531
    8. ' .' → logprob: -11.255378723144531
    9. '	comp' → logprob: -11.255378723144531
    10. '.con' → logprob: -11.505378723144531

Token 105: 'ter' (ID: 399)
  Prédit: 'ter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ter' → logprob: -5.6457742175552994e-05
    2. 't' → logprob: -10.750056266784668
    3. 'te' → logprob: -11.250056266784668
    4. 'terr' → logprob: -12.125056266784668
    5. 'er' → logprob: -12.250056266784668
    6. 'тер' → logprob: -13.125056266784668
    7. 'trer' → logprob: -13.250056266784668
    8. 'teur' → logprob: -14.250056266784668
    9. '<' → logprob: -14.250056266784668
    10. '```' → logprob: -14.375056266784668

Token 106: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.00038407891406677663
    2. '(' → logprob: -7.8753838539123535
    3. '(
' → logprob: -13.000384330749512
    4. 'x' → logprob: -13.625384330749512
    5. ' (' → logprob: -15.000384330749512
    6. ')(' → logprob: -16.750383377075195
    7. '((' → logprob: -17.000383377075195
    8. '(int' → logprob: -17.875383377075195
    9. '<|end|>' → logprob: -18.000383377075195
    10. ')' → logprob: -18.250383377075195

Token 107: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.5862026810646057
    2. ',' → logprob: -0.8362026810646057
    3. ' ,' → logprob: -4.586202621459961
    4. 'y' → logprob: -11.836202621459961
    5. ' y' → logprob: -12.586202621459961
    6. ' ' → logprob: -12.711202621459961
    7. ',Y' → logprob: -12.836202621459961
    8. ',w' → logprob: -14.336202621459961
    9. ',
' → logprob: -14.711202621459961
    10. '   ' → logprob: -15.211202621459961

Token 108: ',W' (ID: 117252)
  Prédit: ',W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',W' → logprob: -0.03920230641961098
    2. ',' → logprob: -3.2892022132873535
    3. ' ,' → logprob: -7.4142022132873535
    4. ',w' → logprob: -8.039202690124512
    5. 'W' → logprob: -8.414202690124512
    6. '   ' → logprob: -11.914202690124512
    7. 'w' → logprob: -13.539202690124512
    8. ' ' → logprob: -13.914202690124512
    9. ')' → logprob: -13.914202690124512
    10. ',
' → logprob: -14.164202690124512

Token 109: ',H' (ID: 94400)
  Prédit: ',H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',H' → logprob: -0.000785091076977551
    2. ',' → logprob: -7.250784873962402
    3. 'H' → logprob: -9.875784873962402
    4. ' ,' → logprob: -10.750784873962402
    5. ' H' → logprob: -13.875784873962402
    6. ',h' → logprob: -14.375784873962402
    7. '   ' → logprob: -15.750784873962402
    8. ',
' → logprob: -16.00078582763672
    9. ' ' → logprob: -16.25078582763672
    10. ',W' → logprob: -16.75078582763672

Token 110: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.153795766294934e-06
    2. ')
' → logprob: -12.125005722045898
    3. '))' → logprob: -14.875005722045898
    4. ')

' → logprob: -16.3750057220459
    5. ' )' → logprob: -16.3750057220459
    6. ')`' → logprob: -18.2500057220459
    7. ')#' → logprob: -18.3750057220459
    8. '')' → logprob: -18.5000057220459
    9. ')return' → logprob: -18.6250057220459
    10. ')**' → logprob: -18.7500057220459

Token 111: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.05589228868484497
    2. '<|end|>' → logprob: -3.0558922290802
    3. 'res' → logprob: -5.055892467498779
    4. 'c' → logprob: -7.930892467498779
    5. '
' → logprob: -8.430891990661621
    6. '```' → logprob: -9.430891990661621
    7. 'result' → logprob: -10.180891990661621
    8. 'return' → logprob: -10.305891990661621
    9. '0' → logprob: -10.430891990661621
    10. ' print' → logprob: -10.680891990661621

Token 112: '(f' (ID: 1526)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7025243043899536
    2. '(res' → logprob: -0.7025243043899536
    3. '(int' → logprob: -5.327524185180664
    4. '(f' → logprob: -5.702524185180664
    5. '((' → logprob: -7.577524185180664
    6. '('' → logprob: -8.327524185180664
    7. '(round' → logprob: -8.452524185180664
    8. '("' → logprob: -9.952524185180664
    9. 'res' → logprob: -10.202524185180664
    10. ' (' → logprob: -10.452524185180664

Token 113: '"{' (ID: 27510)
  Prédit: '"{'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"{' → logprob: -0.15247854590415955
    2. '{' → logprob: -2.0274784564971924
    3. ''{' → logprob: -5.0274786949157715
    4. '"' → logprob: -6.1524786949157715
    5. '"A' → logprob: -7.4024786949157715
    6. '("{' → logprob: -9.152478218078613
    7. '"The' → logprob: -9.152478218078613
    8. 'res' → logprob: -9.652478218078613
    9. 'A' → logprob: -9.777478218078613
    10. '{}' → logprob: -10.527478218078613

Token 114: 'res' (ID: 430)
  Prédit: 'res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.0004676113894674927
    2. 'int' → logprob: -8.000467300415039
    3. 'W' → logprob: -9.125467300415039
    4. 'c' → logprob: -11.750467300415039
    5. 'round' → logprob: -12.625467300415039
    6. 'float' → logprob: -12.875467300415039
    7. 'x' → logprob: -13.000467300415039
    8. 'w' → logprob: -13.250467300415039
    9. 'r' → logprob: -13.750467300415039
    10. 'rés' → logprob: -13.875467300415039

Token 115: '}' (ID: 92)
  Prédit: '}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.4797033965587616
    2. ':.' → logprob: -0.979703426361084
    3. ' :.' → logprob: -6.229703426361084
    4. ' }' → logprob: -6.729703426361084
    5. ':c' → logprob: -6.854703426361084
    6. ':' → logprob: -7.479703426361084
    7. ' -' → logprob: -8.854702949523926
    8. '}{' → logprob: -9.229702949523926
    9. '}")' → logprob: -9.229702949523926
    10. ' .' → logprob: -9.854702949523926

Token 116: ' {' (ID: 354)
  Prédit: ' {'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {' → logprob: -0.0005975929088890553
    2. '{' → logprob: -7.7505974769592285
    3. '{x' → logprob: -9.375597953796387
    4. ' c' → logprob: -10.375597953796387
    5. ' ' → logprob: -10.750597953796387
    6. ' {(' → logprob: -11.500597953796387
    7. ' f' → logprob: -12.250597953796387
    8. ' ,' → logprob: -12.500597953796387
    9. ' {'' → logprob: -12.750597953796387
    10. ',' → logprob: -12.875597953796387

Token 117: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.4974866644479334e-05
    2. ' c' → logprob: -11.125015258789062
    3. '1' → logprob: -15.875015258789062
    4. ')c' → logprob: -18.375015258789062
    5. 'с' → logprob: -18.625015258789062
    6. '0' → logprob: -18.875015258789062
    7. 'print' → logprob: -18.875015258789062
    8. '   ' → logprob: -19.000015258789062
    9. '	c' → logprob: -19.000015258789062
    10. 'int' → logprob: -19.375015258789062

Token 118: '}")' (ID: 122365)
  Prédit: ')")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')")' → logprob: -0.39818501472473145
    2. '}")' → logprob: -1.1481850147247314
    3. '")' → logprob: -4.648184776306152
    4. ')' → logprob: -6.398184776306152
    5. '}' → logprob: -12.898184776306152
    6. ' )' → logprob: -14.148184776306152
    7. ')"' → logprob: -14.148184776306152
    8. ')")
' → logprob: -14.148184776306152
    9. ')}' → logprob: -14.523184776306152
    10. '})' → logprob: -14.648184776306152


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 116
Tokens correctement prédits (1ère position, stricte): 45
Tokens correctement prédits (1ère position, avec adaptation): 47
Tokens correctement prédits (top 10): 87
Précision stricte (1ère position): 38.79%
Précision adaptée (1ère position): 40.52%
Précision (top 10): 75.00%
================================================================================
