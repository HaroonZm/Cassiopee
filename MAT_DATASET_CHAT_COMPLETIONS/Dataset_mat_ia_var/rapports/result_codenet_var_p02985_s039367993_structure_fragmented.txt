================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:52:57
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def read_initial_input():
    n, k = map(int, input().split())
    return n, k

def build_adjacency_list(n):
    ki = [[] for _ in range(n)]
    for _ in range(n-1):
        a, b = map(int, input().split())
        add_edge(ki, a-1, b-1)
    return ki

def add_edge(ki, a, b):
    ki[a].append(b)
    ki[b].append(a)

def initialize_seen(n, k):
    seen = [-1] * n
    seen[0] = k
    return seen

def initialize_todo():
    from collections import deque
    return deque([0])

def process_tree(n, k, ki, seen, todo):
    while not is_todo_empty(todo):
        t = pop_todo(todo)
        s = get_initial_color_count(k, seen[t])
        for neighbor in get_neighbors(ki, t):
            if is_unvisited(seen, neighbor):
                if not can_paint(s):
                    print_zero_and_exit()
                mark_visited(seen, neighbor, s)
                s = decrement_s(s)
                append_todo(todo, neighbor)

def is_todo_empty(todo):
    return not todo

def pop_todo(todo):
    return todo.popleft()

def get_initial_color_count(k, parent_color_count):
    return max(k-2, parent_color_count-1)

def get_neighbors(ki, t):
    return ki[t]

def is_unvisited(seen, li):
    return seen[li] == -1

def can_paint(s):
    return s > 0

def print_zero_and_exit():
    print(0)
    exit()

def mark_visited(seen, li, s):
    seen[li] = s

def decrement_s(s):
    return s - 1

def append_todo(todo, neighbor):
    todo.append(neighbor)

def compute_final_answer(seen, mod):
    ans = 1
    for s in seen:
        ans = multiply_and_mod(ans, s, mod)
    return ans

def multiply_and_mod(a, b, mod):
    return (a * b) % mod

def main():
    n, k = read_initial_input()
    ki = build_adjacency_list(n)
    mod = pow(10, 9) + 7
    seen = initialize_seen(n, k)
    todo = initialize_todo()
    process_tree(n, k, ki, seen, todo)
    ans = compute_final_answer(seen, mod)
    print(ans)

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' read' (ID: 1729)
  → Token d'amorce (pas de prédiction)

Token 2: '_initial' (ID: 45740)
  → Token d'amorce (pas de prédiction)

Token 3: '_input' (ID: 12507)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0025454589631408453
    2. '(' → logprob: -6.752545356750488
    3. '```' → logprob: -7.252545356750488
    4. 's' → logprob: -8.377545356750488
    5. '_s' → logprob: -8.877545356750488
    6. '_line' → logprob: -10.002545356750488
    7. '_initial' → logprob: -10.377545356750488
    8. '_t' → logprob: -10.502545356750488
    9. '(_' → logprob: -10.502545356750488
    10. '_:' → logprob: -10.627545356750488

Token 4: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0667312815785408
    2. '():' → logprob: -2.8167312145233154
    3. '_' → logprob: -6.1917314529418945
    4. '(:' → logprob: -6.4417314529418945
    5. ':' → logprob: -7.4417314529418945
    6. '```' → logprob: -8.691731452941895
    7. '(_:' → logprob: -9.191731452941895
    8. '(_' → logprob: -9.941731452941895
    9. '()' → logprob: -9.941731452941895
    10. ' (' → logprob: -10.566731452941895

Token 5: '   ' (ID: 271)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.9259627461433411
    2. '   ' → logprob: -1.5509626865386963
    3. '\n' → logprob: -1.8009626865386963
    4. '\' → logprob: -2.4259626865386963
    5. ':' → logprob: -3.0509626865386963
    6. '    
' → logprob: -3.9259626865386963
    7. '
' → logprob: -4.300962924957275
    8. '(' → logprob: -4.425962924957275
    9. '():' → logprob: -4.675962924957275
    10. '``' → logprob: -4.675962924957275

Token 6: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2710096836090088
    2. '```' → logprob: -2.021009683609009
    3. 'input' → logprob: -2.146009683609009
    4. 'return' → logprob: -2.146009683609009
    5. 'r' → logprob: -2.271009683609009
    6. 'x' → logprob: -2.771009683609009
    7. 'n' (adapté à ' n') → logprob: -3.021009683609009
    8. 'i' → logprob: -3.271009683609009
    9. 'data' → logprob: -4.27100944519043
    10. '#' → logprob: -4.77100944519043

Token 7: ',' (ID: 11)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8406931161880493
    2. 'u' → logprob: -1.5906931161880493
    3. ' =' → logprob: -1.9656931161880493
    4. '=' → logprob: -1.9656931161880493
    5. ',' → logprob: -3.2156929969787598
    6. ')' → logprob: -4.84069299697876
    7. '.' → logprob: -5.09069299697876
    8. 'a' → logprob: -5.34069299697876
    9. '   ' → logprob: -5.46569299697876
    10. ' ' → logprob: -5.46569299697876

Token 8: ' k' (ID: 372)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.9971668124198914
    2. ' input' → logprob: -0.9971668124198914
    3. ' ' → logprob: -1.9971668720245361
    4. ' k' → logprob: -3.247166872024536
    5. 'input' → logprob: -3.622166872024536
    6. ' data' → logprob: -3.747166872024536
    7. 'm' → logprob: -4.747166633605957
    8. ' s' → logprob: -4.997166633605957
    9. ' =' → logprob: -5.372166633605957
    10. ' x' → logprob: -5.747166633605957

Token 9: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31820791959762573
    2. ' =' → logprob: -1.3182079792022705
    3. ',' → logprob: -5.318207740783691
    4. ')' → logprob: -11.318207740783691
    5. ' ,' → logprob: -11.443207740783691
    6. ' ' → logprob: -13.693207740783691
    7. '=

' → logprob: -13.818207740783691
    8. ')=' → logprob: -13.943207740783691
    9. '```' → logprob: -14.193207740783691
    10. '  ' → logprob: -14.443207740783691

Token 10: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.02341364696621895
    2. 'map' → logprob: -3.77341365814209
    3. ' input' → logprob: -8.89841365814209
    4. 'input' → logprob: -11.02341365814209
    5. ' list' → logprob: -11.64841365814209
    6. ' tuple' → logprob: -13.39841365814209
    7. ' ' → logprob: -13.77341365814209
    8. ' int' → logprob: -14.02341365814209
    9. ' [' → logprob: -14.14841365814209
    10. '(map' → logprob: -14.64841365814209

Token 11: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.553444504737854
    2. '(int' → logprob: -1.053444504737854
    3. '(str' → logprob: -2.9284443855285645
    4. '(lambda' → logprob: -3.8034443855285645
    5. '(input' → logprob: -8.303444862365723
    6. 'int' → logprob: -9.553444862365723
    7. '(list' → logprob: -10.678444862365723
    8. '(
' → logprob: -10.678444862365723
    9. '[int' → logprob: -10.803444862365723
    10. '<|end|>' → logprob: -10.803444862365723

Token 12: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.4069584310054779
    2. ')' → logprob: -1.2819584608078003
    3. '(' → logprob: -3.4069583415985107
    4. 'input' → logprob: -3.9069583415985107
    5. ',' → logprob: -6.90695858001709
    6. ' input' → logprob: -7.15695858001709
    7. ',input' → logprob: -7.53195858001709
    8. '```' → logprob: -8.78195858001709
    9. '(read' → logprob: -9.03195858001709
    10. '(str' → logprob: -9.15695858001709

Token 13: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.20159576833248138
    2. ' input' → logprob: -1.7015957832336426
    3. ')' → logprob: -8.701595306396484
    4. '(input' → logprob: -11.576595306396484
    5. ' )' → logprob: -12.576595306396484
    6. ',input' → logprob: -14.201595306396484
    7. '=input' → logprob: -14.701595306396484
    8. 'raw' → logprob: -14.701595306396484
    9. '	input' → logprob: -14.826595306396484
    10. '),' → logprob: -15.326595306396484

Token 14: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.34471213817596436
    2. '()' → logprob: -1.5947121381759644
    3. '().' → logprob: -2.969712257385254
    4. ')' → logprob: -3.719712257385254
    5. '(' → logprob: -5.344712257385254
    6. '('' → logprob: -5.719712257385254
    7. '()))' → logprob: -5.719712257385254
    8. '(""))' → logprob: -8.219712257385254
    9. '(()' → logprob: -8.219712257385254
    10. '());' → logprob: -8.594712257385254

Token 15: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00043376852408982813
    2. 'strip' → logprob: -7.750433921813965
    3. ' split' → logprob: -13.250433921813965
    4. 'rstrip' → logprob: -13.750433921813965
    5. ')' → logprob: -16.25043296813965
    6. '(split' → logprob: -16.37543296813965
    7. 'read' → logprob: -17.25043296813965
    8. 'spl' → logprob: -17.75043296813965
    9. 'startswith' → logprob: -19.50043296813965
    10. '_split' → logprob: -19.50043296813965

Token 16: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6662759780883789
    2. '())' → logprob: -0.7912759780883789
    3. '))' → logprob: -3.666275978088379
    4. '()))' → logprob: -5.791275978088379
    5. '()' → logprob: -5.916275978088379
    6. '(' → logprob: -6.541275978088379
    7. '('' → logprob: -8.416275978088379
    8. '')' → logprob: -10.791275978088379
    9. '`)' → logprob: -11.166275978088379
    10. '(','' → logprob: -11.166275978088379

Token 17: '   ' (ID: 271)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.7811298966407776
    2. ')' → logprob: -1.4061298370361328
    3. 'return' → logprob: -2.156129837036133
    4. '<|end|>' → logprob: -2.906129837036133
    5. ',' → logprob: -3.906129837036133
    6. '\' → logprob: -4.031129837036133
    7. '
' → logprob: -4.156129837036133
    8. ' return' → logprob: -4.156129837036133
    9. '```' → logprob: -4.906129837036133
    10. ' ' → logprob: -4.906129837036133

Token 18: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.7855502963066101
    2. 'r' → logprob: -1.9105503559112549
    3. '   ' → logprob: -2.410550355911255
    4. '`' → logprob: -2.910550355911255
    5. 'data' → logprob: -3.035550355911255
    6. ')' → logprob: -3.285550355911255
    7. ' ' → logprob: -3.910550355911255
    8. 'n' → logprob: -3.910550355911255
    9. 'result' → logprob: -4.160550117492676
    10. ' return' → logprob: -4.410550117492676

Token 19: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.15042632818222046
    2. 'n' → logprob: -2.0254263877868652
    3. ' (' → logprob: -5.275426387786865
    4. '(n' → logprob: -6.650426387786865
    5. ' ' → logprob: -6.900426387786865
    6. '(' → logprob: -8.275425910949707
    7. '[n' → logprob: -11.650425910949707
    8. ' ' → logprob: -12.150425910949707
    9. '   ' → logprob: -12.275425910949707
    10. ' []' → logprob: -12.275425910949707

Token 20: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004683237988501787
    2. '<|end|>' → logprob: -5.504683017730713
    3. ',
' → logprob: -8.129683494567871
    4. ',n' → logprob: -8.879683494567871
    5. ' ,' → logprob: -9.879683494567871
    6. ',k' → logprob: -10.879683494567871
    7. '<|end|>' → logprob: -11.004683494567871
    8. ')' → logprob: -11.254683494567871
    9. ' ' → logprob: -11.504683494567871
    10. '','' → logprob: -12.254683494567871

Token 21: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.47408348321914673
    2. 'k' → logprob: -0.9740834832191467
    3. ' ' → logprob: -13.59908390045166
    4. 'space' → logprob: -13.84908390045166
    5. '`' → logprob: -14.09908390045166
    6. ''' → logprob: -14.22408390045166
    7. ' ' → logprob: -14.47408390045166
    8. '```' → logprob: -14.72408390045166
    9. '	k' → logprob: -15.22408390045166
    10. ',k' → logprob: -15.34908390045166

Token 22: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2150014340877533
    2. '<|end|>' → logprob: -2.340001344680786
    3. '\n' → logprob: -3.590001344680786
    4. '```' → logprob: -4.090001583099365
    5. 'newline' → logprob: -4.090001583099365
    6. '

' → logprob: -4.215001583099365
    7. '' → logprob: -4.965001583099365
    8. 'n' → logprob: -5.090001583099365
    9. '#' → logprob: -6.840001583099365
    10. '
' → logprob: -6.965001583099365

Token 23: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.25494688749313354
    2. '```' → logprob: -2.5049469470977783
    3. '\n' → logprob: -3.1299469470977783
    4. 'd' → logprob: -4.004946708679199
    5. '' → logprob: -4.129946708679199
    6. 'def' → logprob: -4.379946708679199
    7. 'n' → logprob: -4.504946708679199
    8. '#' → logprob: -4.629946708679199
    9. '\' → logprob: -4.754946708679199
    10. '

' → logprob: -5.254946708679199

Token 24: ' build' (ID: 3024)
  Prédit: ' read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.33899015188217163
    2. ' calculate' → logprob: -1.9639902114868164
    3. ' process' → logprob: -2.3389902114868164
    4. ' main' → logprob: -4.338990211486816
    5. ' solve' → logprob: -4.338990211486816
    6. ' compute' → logprob: -4.588990211486816
    7. ' space' → logprob: -5.588990211486816
    8. ' find' → logprob: -5.588990211486816
    9. ' continue' → logprob: -6.713990211486816
    10. ' count' → logprob: -6.963990211486816

Token 25: '_ad' (ID: 23782)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.009350853972136974
    2. '_tree' → logprob: -5.134350776672363
    3. '_array' → logprob: -6.134350776672363
    4. ' _' → logprob: -8.384350776672363
    5. '_graph' → logprob: -8.384350776672363
    6. '(' → logprob: -8.759350776672363
    7. '_list' → logprob: -9.509350776672363
    8. ' ' → logprob: -9.759350776672363
    9. '_stack' → logprob: -10.509350776672363
    10. '_data' → logprob: -10.884350776672363

Token 26: 'jac' (ID: 77250)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.06213562190532684
    2. 'jac' → logprob: -2.812135696411133
    3. '_j' → logprob: -8.812135696411133
    4. '[j' → logprob: -11.937135696411133
    5. '	j' → logprob: -13.312135696411133
    6. 'ja' → logprob: -13.312135696411133
    7. '   ' → logprob: -13.562135696411133
    8. '_list' → logprob: -13.687135696411133
    9. '```' → logprob: -13.812135696411133
    10. '_' → logprob: -13.937135696411133

Token 27: 'ency' (ID: 2799)
  Prédit: 'ency'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ency' → logprob: -0.03601011261343956
    2. 'acency' → logprob: -3.4110100269317627
    3. '```' → logprob: -6.786010265350342
    4. 'ent' → logprob: -8.036009788513184
    5. 'acy' → logprob: -8.286009788513184
    6. 'e' → logprob: -8.786009788513184
    7. 'ac' → logprob: -9.286009788513184
    8. 'a' → logprob: -9.786009788513184
    9. 'en' → logprob: -10.036009788513184
    10. '   ' → logprob: -10.161009788513184

Token 28: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.10061929374933243
    2. '_' → logprob: -2.350619316101074
    3. '_matrix' → logprob: -7.850619316101074
    4. '_l' → logprob: -11.475619316101074
    5. 'list' → logprob: -12.850619316101074
    6. '(' → logprob: -13.100619316101074
    7. '_lists' → logprob: -13.100619316101074
    8. '_li' → logprob: -13.100619316101074
    9. ' _' → logprob: -14.225619316101074
    10. 'List' → logprob: -14.350619316101074

Token 29: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0042505390010774136
    2. '(n' → logprob: -5.754250526428223
    3. ' (' → logprob: -7.879250526428223
    4. '(node' → logprob: -8.004250526428223
    5. '("("' → logprob: -9.754250526428223
    6. '(num' → logprob: -10.004250526428223
    7. '(nodes' → logprob: -10.129250526428223
    8. '```' → logprob: -10.254250526428223
    9. '((' → logprob: -10.629250526428223
    10. '(tree' → logprob: -10.754250526428223

Token 30: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3884943425655365
    2. '):' → logprob: -1.1384943723678589
    3. ')' → logprob: -7.388494491577148
    4. ' ):' → logprob: -7.763494491577148
    5. ' ,' → logprob: -8.013494491577148
    6. ',n' → logprob: -8.888494491577148
    7. '):
' → logprob: -9.763494491577148
    8. '   ' → logprob: -11.888494491577148
    9. ' )' → logprob: -12.013494491577148
    10. ',size' → logprob: -12.013494491577148

Token 31: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.254434585571289
    2. ' adjacency' → logprob: -1.254434585571289
    3. '    ' → logprob: -1.754434585571289
    4. ' 
' → logprob: -3.504434585571289
    5. 'adj' → logprob: -3.504434585571289
    6. ':' → logprob: -3.629434585571289
    7. '
' → logprob: -3.754434585571289
    8. '```' → logprob: -4.004434585571289
    9. ' adj' → logprob: -4.254434585571289
    10. '[' → logprob: -4.379434585571289

Token 32: ' ki' (ID: 3314)
  Prédit: ' adjacency'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' adjacency' → logprob: -0.2561659514904022
    2. ' adj' → logprob: -2.0061659812927246
    3. 'adj' → logprob: -3.2561659812927246
    4. ' graph' → logprob: -3.6311659812927246
    5. '   ' → logprob: -4.381165981292725
    6. 'graph' → logprob: -4.881165981292725
    7. ' return' → logprob: -5.631165981292725
    8. '    ' → logprob: -6.256165981292725
    9. ' ad' → logprob: -7.881165981292725
    10. 'return' → logprob: -9.006165504455566

Token 33: ' =' (ID: 314)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.7323405742645264
    2. '_list' → logprob: -1.9823405742645264
    3. 'nds' → logprob: -1.9823405742645264
    4. ' =' → logprob: -2.6073405742645264
    5. 's' → logprob: -2.7323405742645264
    6. 'n' → logprob: -2.7323405742645264
    7. 'nd' → logprob: -2.8573405742645264
    8. 'ds' → logprob: -3.2323405742645264
    9. 'st' → logprob: -3.6073405742645264
    10. 'd' → logprob: -3.6073405742645264

Token 34: ' [[]' (ID: 182908)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.286434531211853
    2. ' []' → logprob: -2.4114346504211426
    3. '[int' → logprob: -2.6614346504211426
    4. '[]' → logprob: -3.0364346504211426
    5. '[' → logprob: -3.5364346504211426
    6. ' [[]' → logprob: -4.911434650421143
    7. 'int' → logprob: -7.036434650421143
    8. '[n' → logprob: -7.286434650421143
    9. '[input' → logprob: -7.411434650421143
    10. '[len' → logprob: -7.536434650421143

Token 35: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2817937433719635
    2. 'for' → logprob: -1.4067937135696411
    3. ')' → logprob: -8.156793594360352
    4. ']' → logprob: -8.531793594360352
    5. ' ' → logprob: -10.031793594360352
    6. ',' → logprob: -10.156793594360352
    7. '   ' → logprob: -10.656793594360352
    8. '	for' → logprob: -11.156793594360352
    9. 'f' → logprob: -11.281793594360352
    10. '    ' → logprob: -12.781793594360352

Token 36: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.020610328763723373
    2. ' _' → logprob: -3.8956103324890137
    3. 'i' → logprob: -10.895609855651855
    4. ' ' → logprob: -11.020609855651855
    5. 'range' → logprob: -11.270609855651855
    6. '_i' → logprob: -11.770609855651855
    7. '_range' → logprob: -12.520609855651855
    8. 'in' → logprob: -12.770609855651855
    9. ' in' → logprob: -12.895609855651855
    10. ' range' → logprob: -13.895609855651855

Token 37: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.45542341470718384
    2. 'range' → logprob: -1.580423355102539
    3. 'i' → logprob: -2.080423355102539
    4. ' in' → logprob: -3.830423355102539
    5. '_' → logprob: -4.580423355102539
    6. ' range' → logprob: -6.830423355102539
    7. 'n' → logprob: -6.955423355102539
    8. ' i' → logprob: -7.955423355102539
    9. ' ' → logprob: -8.580423355102539
    10. 'x' → logprob: -8.830423355102539

Token 38: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07889485359191895
    2. ' range' → logprob: -2.578894853591919
    3. ' ' → logprob: -12.82889461517334
    4. 'r' → logprob: -14.07889461517334
    5. 'rang' → logprob: -14.57889461517334
    6. '	range' → logprob: -15.32889461517334
    7. 'ran' → logprob: -15.57889461517334
    8. '   ' → logprob: -15.70389461517334
    9. '  ' → logprob: -15.82889461517334
    10. ' r' → logprob: -15.95389461517334

Token 39: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0024773201439529657
    2. '(' → logprob: -6.002477169036865
    3. ' (' → logprob: -13.877477645874023
    4. 'n' → logprob: -14.627477645874023
    5. ' n' → logprob: -15.752477645874023
    6. ')n' → logprob: -17.252477645874023
    7. ')' → logprob: -17.877477645874023
    8. '(N' → logprob: -19.127477645874023
    9. '(num' → logprob: -19.252477645874023
    10. '(
' → logprob: -19.377477645874023

Token 40: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -2.534558552724775e-05
    2. ']' → logprob: -11.000025749206543
    3. ')' → logprob: -11.875025749206543
    4. ' )' → logprob: -14.750025749206543
    5. '])]' → logprob: -15.500025749206543
    6. '])' → logprob: -15.625025749206543
    7. ')])' → logprob: -15.625025749206543
    8. ')]
' → logprob: -15.875025749206543
    9. ' ]' → logprob: -16.125024795532227
    10. ' ' → logprob: -16.125024795532227

Token 41: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1033080667257309
    2. '<|end|>' → logprob: -2.8533079624176025
    3. '
' → logprob: -3.7283079624176025
    4. '    
' → logprob: -5.353308200836182
    5. '\n' → logprob: -5.853308200836182
    6. ')' → logprob: -6.353308200836182
    7. '  
' → logprob: -6.478308200836182
    8. ' ' → logprob: -6.978308200836182
    9. '' → logprob: -7.228308200836182
    10. '\' → logprob: -7.228308200836182

Token 42: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23217907547950745
    2. 'for' (adapté à ' for') → logprob: -2.2321791648864746
    3. 'return' → logprob: -2.9821791648864746
    4. ' ' → logprob: -4.357179164886475
    5. ' for' → logprob: -4.482179164886475
    6. 'r' → logprob: -4.732179164886475
    7. ')' → logprob: -4.857179164886475
    8. ' return' → logprob: -6.107179164886475
    9. 'n' → logprob: -6.357179164886475
    10. 'def' → logprob: -6.607179164886475

Token 43: ' _' (ID: 1175)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.515903115272522
    2. ' _' → logprob: -1.390903115272522
    3. ' i' → logprob: -1.890903115272522
    4. ' ‌' → logprob: -6.015902996063232
    5. '_' → logprob: -7.765902996063232
    6. ' ' → logprob: -8.76590347290039
    7. ' ​' → logprob: -9.14090347290039
    8. ' ```' → logprob: -10.26590347290039
    9. ' range' → logprob: -10.51590347290039
    10. ' ▁' → logprob: -10.64090347290039

Token 44: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01812196895480156
    2. 'in' → logprob: -4.14312219619751
    3. ' ' → logprob: -6.64312219619751
    4. ' i' → logprob: -8.018121719360352
    5. 'n' → logprob: -8.643121719360352
    6. 'i' → logprob: -8.643121719360352
    7. '  ' → logprob: -10.643121719360352
    8. 'import' → logprob: -11.268121719360352
    9. '	in' → logprob: -11.268121719360352
    10. 'range' → logprob: -11.393121719360352

Token 45: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.04859066382050514
    2. 'range' → logprob: -3.048590660095215
    3. '	range' → logprob: -13.298590660095215
    4. ' ' → logprob: -14.298590660095215
    5. '(range' → logprob: -14.548590660095215
    6. '  ' → logprob: -16.04859161376953
    7. '_range' → logprob: -16.17359161376953
    8. '```' → logprob: -16.54859161376953
    9. ' xrange' → logprob: -16.92359161376953
    10. 'rang' → logprob: -17.42359161376953

Token 46: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.38900643587112427
    2. ' n' → logprob: -1.3890063762664795
    3. '(' → logprob: -3.3890063762664795
    4. ' (' → logprob: -3.5140063762664795
    5. 'n' → logprob: -4.889006614685059
    6. ' ' → logprob: -7.514006614685059
    7. ' range' → logprob: -7.639006614685059
    8. ')' → logprob: -7.764006614685059
    9. ' )' → logprob: -8.389006614685059
    10. '(range' → logprob: -9.514006614685059

Token 47: '-' (ID: 12)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005303720012307167
    2. ')' → logprob: -5.630303859710693
    3. ' ):' → logprob: -6.630303859710693
    4. '):
' → logprob: -8.255303382873535
    5. ' )' → logprob: -9.880303382873535
    6. ':' → logprob: -9.880303382873535
    7. '-' → logprob: -11.880303382873535
    8. ' ' → logprob: -12.505303382873535
    9. '   ' → logprob: -12.755303382873535
    10. ' ):
' → logprob: -13.880303382873535

Token 48: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004309076175559312
    2. ' ' → logprob: -7.750431060791016
    3. ')' → logprob: -16.375431060791016
    4. '<|end|>' → logprob: -17.000431060791016
    5. '2' → logprob: -17.125431060791016
    6. '   ' → logprob: -17.250431060791016
    7. '0' → logprob: -18.750431060791016
    8. '  ' → logprob: -19.250431060791016
    9. '۱' → logprob: -19.375431060791016
    10. '```' → logprob: -19.500431060791016

Token 49: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.020043091848492622
    2. ')' → logprob: -4.020042896270752
    3. ':' → logprob: -6.520042896270752
    4. ' ):' → logprob: -8.14504337310791
    5. ' )' → logprob: -9.52004337310791
    6. '):
' → logprob: -10.02004337310791
    7. ',' → logprob: -12.64504337310791
    8. '   ' → logprob: -13.02004337310791
    9. '():' → logprob: -13.89504337310791
    10. ' :' → logprob: -14.52004337310791

Token 50: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22225579619407654
    2. '   ' → logprob: -2.5972557067871094
    3. '    ' → logprob: -2.8472557067871094
    4. ' ' → logprob: -3.8472557067871094
    5. ' 
' → logprob: -3.8472557067871094
    6. ' i' → logprob: -5.472255706787109
    7. '    
' → logprob: -5.597255706787109
    8. ' input' → logprob: -6.347255706787109
    9. '<|end|>' → logprob: -6.347255706787109
    10. '  
' → logprob: -6.597255706787109

Token 51: ' a' (ID: 261)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.7625104784965515
    2. ' u' → logprob: -0.7625104784965515
    3. '   ' → logprob: -2.7625105381011963
    4. ' line' → logprob: -6.637510299682617
    5. '       ' → logprob: -6.637510299682617
    6. 'a' (adapté à ' a') → logprob: -7.512510299682617
    7. ' a' → logprob: -8.262510299682617
    8. ' node' → logprob: -9.262510299682617
    9. 'line' → logprob: -9.512510299682617
    10. ' ' → logprob: -10.012510299682617

Token 52: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.020682726055383682
    2. ' ,' → logprob: -3.8956828117370605
    3. ',b' → logprob: -9.270682334899902
    4. ' ' → logprob: -10.395682334899902
    5. ',a' → logprob: -12.395682334899902
    6. 'b' → logprob: -12.645682334899902
    7. 'a' → logprob: -13.770682334899902
    8. ' b' → logprob: -14.145682334899902
    9. '<|end|>' → logprob: -14.145682334899902
    10. 'd' → logprob: -14.270682334899902

Token 53: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.07383725792169571
    2. 'b' → logprob: -2.6988372802734375
    3. ' ' → logprob: -5.5738372802734375
    4. '<|end|>' → logprob: -9.573837280273438
    5. ' ‌' → logprob: -11.948837280273438
    6. 'space' → logprob: -11.948837280273438
    7. '_' → logprob: -12.573837280273438
    8. ' space' → logprob: -12.823837280273438
    9. ' ,' → logprob: -13.323837280273438
    10. '  ' → logprob: -13.573837280273438

Token 54: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.043055254966020584
    2. '=' → logprob: -3.168055295944214
    3. ',' → logprob: -9.918055534362793
    4. ')' → logprob: -13.043055534362793
    5. ' ' → logprob: -13.168055534362793
    6. ' ,' → logprob: -13.543055534362793
    7. ' =
' → logprob: -14.168055534362793
    8. '    ' → logprob: -15.543055534362793
    9. ' =)' → logprob: -16.418054580688477
    10. ' =
' → logprob: -16.793054580688477

Token 55: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.0010448360117152333
    2. 'map' → logprob: -6.876044750213623
    3. ' ' → logprob: -12.376045227050781
    4. ' input' → logprob: -12.876045227050781
    5. '	map' → logprob: -13.001045227050781
    6. ' list' → logprob: -13.251045227050781
    7. ' mapa' → logprob: -15.001045227050781
    8. ' [' → logprob: -15.501045227050781
    9. ' 
' → logprob: -16.00104522705078
    10. '    ' → logprob: -16.12604522705078

Token 56: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2286105901002884
    2. '(int' → logprob: -1.603610634803772
    3. '<|end|>' → logprob: -6.228610515594482
    4. '(lambda' → logprob: -7.353610515594482
    5. '(input' → logprob: -9.35361099243164
    6. '<int' → logprob: -9.35361099243164
    7. '(in' → logprob: -9.72861099243164
    8. '(str' → logprob: -9.85361099243164
    9. ' (' → logprob: -9.97861099243164
    10. '<|end|>' → logprob: -10.10361099243164

Token 57: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004466912243515253
    2. ')' → logprob: -6.004467010498047
    3. '(' → logprob: -6.504467010498047
    4. ',input' → logprob: -8.379467010498047
    5. '(),' → logprob: -9.129467010498047
    6. '<|end|>' → logprob: -9.504467010498047
    7. ' ,' → logprob: -10.629467010498047
    8. '(input' → logprob: -10.754467010498047
    9. '()' → logprob: -11.754467010498047
    10. ',
' → logprob: -12.254467010498047

Token 58: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.06995021551847458
    2. 'input' → logprob: -2.6949501037597656
    3. ')' → logprob: -11.444950103759766
    4. '(input' → logprob: -13.694950103759766
    5. '=input' → logprob: -14.694950103759766
    6. ' ' → logprob: -15.069950103759766
    7. ' )' → logprob: -15.194950103759766
    8. '_input' → logprob: -15.194950103759766
    9. '	input' → logprob: -15.194950103759766
    10. '<input' → logprob: -15.819950103759766

Token 59: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0002198676229454577
    2. '()' → logprob: -8.50022029876709
    3. '(' → logprob: -11.37522029876709
    4. ')' → logprob: -12.50022029876709
    5. '())' → logprob: -15.00022029876709
    6. ' ' → logprob: -15.25022029876709
    7. ' ().' → logprob: -15.62522029876709
    8. '   ' → logprob: -15.75022029876709
    9. '.' → logprob: -16.125219345092773
    10. '()
' → logprob: -16.625219345092773

Token 60: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.8624639324116288e-06
    2. 'spl' → logprob: -13.750001907348633
    3. ' split' → logprob: -15.000001907348633
    4. 'strip' → logprob: -16.125001907348633
    5. ')' → logprob: -16.250001907348633
    6. 's' → logprob: -16.875001907348633
    7. '(split' → logprob: -17.125001907348633
    8. 'rstrip' → logprob: -18.000001907348633
    9. ' ' → logprob: -19.000001907348633
    10. 'plit' → logprob: -19.125001907348633

Token 61: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.02221883088350296
    2. ')' → logprob: -4.022218704223633
    3. '()' → logprob: -5.522218704223633
    4. '())
' → logprob: -9.897218704223633
    5. '()))' → logprob: -12.522218704223633
    6. '(' → logprob: -12.772218704223633
    7. '))' → logprob: -13.272218704223633
    8. ' ())' → logprob: -13.272218704223633
    9. '   ' → logprob: -14.397218704223633
    10. ' )' → logprob: -14.647218704223633

Token 62: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15376795828342438
    2. ')' → logprob: -2.4037680625915527
    3. '<|end|>' → logprob: -3.9037680625915527
    4. '   ' → logprob: -4.028768062591553
    5. '        
' → logprob: -5.278768062591553
    6. '    
' → logprob: -5.278768062591553
    7. ' ' → logprob: -7.278768062591553
    8. '    ' → logprob: -7.528768062591553
    9. ' 
' → logprob: -8.153767585754395
    10. '```' → logprob: -8.278767585754395

Token 63: ' add' (ID: 1147)
  Prédit: ' ki'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ki' → logprob: -0.0464082695543766
    2. 'ki' → logprob: -4.171408176422119
    3. '   ' → logprob: -4.421408176422119
    4. ' a' → logprob: -4.921408176422119
    5. 'a' → logprob: -5.546408176422119
    6. ' 
' → logprob: -5.921408176422119
    7. '    
' → logprob: -6.671408176422119
    8. '
' → logprob: -7.296408176422119
    9. 'k' → logprob: -8.046408653259277
    10. '       ' → logprob: -8.046408653259277

Token 64: '_edge' (ID: 43226)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.35636016726493835
    2. '_edge' → logprob: -1.9813601970672607
    3. 'ing' → logprob: -2.1063601970672607
    4. '(' → logprob: -5.356359958648682
    5. '_adj' → logprob: -5.356359958648682
    6. 'a' → logprob: -5.731359958648682
    7. 'i' → logprob: -5.856359958648682
    8. '_ed' → logprob: -5.856359958648682
    9. 'd' → logprob: -6.231359958648682
    10. '_edges' → logprob: -6.606359958648682

Token 65: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0005536287208087742
    2. ' (' → logprob: -9.000554084777832
    3. '(a' → logprob: -9.000554084777832
    4. '(k' → logprob: -9.625554084777832
    5. '((' → logprob: -10.000554084777832
    6. '_' → logprob: -10.125554084777832
    7. '(ai' → logprob: -10.500554084777832
    8. ')' → logprob: -10.750554084777832
    9. 'ki' → logprob: -11.000554084777832
    10. '(_' → logprob: -11.375554084777832

Token 66: 'ki' (ID: 3129)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.035019874572753906
    2. 'ki' → logprob: -3.785019874572754
    3. ' a' → logprob: -5.035019874572754
    4. '(a' → logprob: -6.410019874572754
    5. ' ki' → logprob: -6.785019874572754
    6. ')' → logprob: -6.910019874572754
    7. '(' → logprob: -7.035019874572754
    8. 'k' → logprob: -8.910019874572754
    9. ')a' → logprob: -9.160019874572754
    10. '(k' → logprob: -9.410019874572754

Token 67: ',' (ID: 11)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.0016288828337565064
    2. '[' → logprob: -6.876628875732422
    3. ',' → logprob: -8.251628875732422
    4. '[b' → logprob: -9.126628875732422
    5. ')[' → logprob: -9.376628875732422
    6. 'a' → logprob: -10.001628875732422
    7. ',a' → logprob: -10.001628875732422
    8. ')' → logprob: -10.626628875732422
    9. ' [' → logprob: -11.626628875732422
    10. ',[' → logprob: -12.001628875732422

Token 68: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1128799095749855
    2. ' a' → logprob: -2.237879991531372
    3. ')' → logprob: -10.487879753112793
    4. ')a' → logprob: -11.612879753112793
    5. '	a' → logprob: -11.862879753112793
    6. ' ' → logprob: -12.362879753112793
    7. '(a' → logprob: -12.862879753112793
    8. '<|end|>' → logprob: -12.987879753112793
    9. '   ' → logprob: -13.987879753112793
    10. ' )' → logprob: -14.237879753112793

Token 69: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.38781818747520447
    2. ' -' → logprob: -1.1378182172775269
    3. ',' → logprob: -7.262818336486816
    4. ' ,' → logprob: -9.012818336486816
    5. ' ' → logprob: -9.637818336486816
    6. '-,' → logprob: -10.762818336486816
    7. ' -,' → logprob: -11.512818336486816
    8. '1' → logprob: -11.512818336486816
    9. '[' → logprob: -12.512818336486816
    10. ')' → logprob: -12.512818336486816

Token 70: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.13388703338569e-06
    2. ' ' → logprob: -11.625009536743164
    3. '<|end|>' → logprob: -15.750009536743164
    4. ')' → logprob: -17.750009536743164
    5. '```' → logprob: -18.250009536743164
    6. '2' → logprob: -19.125009536743164
    7. '１' → logprob: -19.250009536743164
    8. '۱' → logprob: -20.000009536743164
    9. '১' → logprob: -20.000009536743164
    10. ',' → logprob: -20.125009536743164

Token 71: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011439070804044604
    2. ' ,' → logprob: -6.876143932342529
    3. ',b' → logprob: -9.126143455505371
    4. 'b' → logprob: -13.876143455505371
    5. '-' → logprob: -14.376143455505371
    6. ',
' → logprob: -15.626143455505371
    7. ')' → logprob: -15.626143455505371
    8. ' ' → logprob: -16.126144409179688
    9. ' -' → logprob: -16.376144409179688
    10. '‌,' → logprob: -16.751144409179688

Token 72: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.18008826673030853
    2. 'b' → logprob: -1.8050882816314697
    3. ' ' → logprob: -8.05508804321289
    4. ' )' → logprob: -11.68008804321289
    5. ')' → logprob: -12.05508804321289
    6. '<|end|>' → logprob: -12.05508804321289
    7. ')b' → logprob: -12.93008804321289
    8. '	b' → logprob: -13.68008804321289
    9. ' 
' → logprob: -14.55508804321289
    10. ' ' → logprob: -15.05508804321289

Token 73: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0028099864721298218
    2. ' -' → logprob: -5.877810001373291
    3. ')' → logprob: -12.627809524536133
    4. '-)' → logprob: -14.127809524536133
    5. '1' → logprob: -14.252809524536133
    6. ')-' → logprob: -15.252809524536133
    7. ' ' → logprob: -16.252809524536133
    8. '<|end|>' → logprob: -16.877809524536133
    9. '-
' → logprob: -17.377809524536133
    10. ' )' → logprob: -17.377809524536133

Token 74: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -13.375001907348633
    3. ')' → logprob: -15.125001907348633
    4. '<|end|>' → logprob: -15.875001907348633
    5. '```' → logprob: -17.875001907348633
    6. '2' → logprob: -18.125001907348633
    7. '１' → logprob: -19.375001907348633
    8. '<|end|>' → logprob: -19.687501907348633
    9. '۱' → logprob: -19.812501907348633
    10. ',' → logprob: -20.187501907348633

Token 75: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.939851037808694e-05
    2. ')
' → logprob: -10.500029563903809
    3. ' )' → logprob: -13.625029563903809
    4. '),' → logprob: -15.875029563903809
    5. ')

' → logprob: -16.250028610229492
    6. '   ' → logprob: -16.250028610229492
    7. ')`' → logprob: -16.500028610229492
    8. '))' → logprob: -16.750028610229492
    9. ')\' → logprob: -17.000028610229492
    10. ')
' → logprob: -17.000028610229492

Token 76: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 77: ' return' (ID: 622)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18965770304203033
    2. '   ' → logprob: -2.439657688140869
    3. '<|end|>' → logprob: -2.814657688140869
    4. '
' → logprob: -4.064657688140869
    5. ' ' → logprob: -6.314657688140869
    6. '<|end|>' → logprob: -6.814657688140869
    7. '\n' → logprob: -7.064657688140869
    8. '    
' → logprob: -7.189657688140869
    9. ')
' → logprob: -7.564657688140869
    10. ' 
' → logprob: -7.564657688140869

Token 78: ' ki' (ID: 3314)
  Prédit: ' ki'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ki' → logprob: -0.003608505241572857
    2. 'ki' → logprob: -5.628608703613281
    3. ' ' → logprob: -12.628608703613281
    4. 'k' → logprob: -13.503608703613281
    5. ' ' → logprob: -14.128608703613281
    6. ' k' → logprob: -14.753608703613281
    7. 'Ki' → logprob: -14.878608703613281
    8. ' kii' → logprob: -14.878608703613281
    9. ' ko' → logprob: -15.503608703613281
    10. '```' → logprob: -15.628608703613281

Token 79: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3285036087036133
    2. 'def' → logprob: -1.3285036087036133
    3. 'd' → logprob: -5.203503608703613
    4. '```' → logprob: -6.078503608703613
    5. '<|end|>' → logprob: -6.203503608703613
    6. ' 
' → logprob: -6.953503608703613
    7. '' → logprob: -7.078503608703613
    8. '

' → logprob: -7.078503608703613
    9. '_' → logprob: -7.703503608703613
    10. '\' → logprob: -8.078503608703613

Token 80: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2562241554260254
    2. 'def' → logprob: -1.5062241554260254
    3. 'd' → logprob: -6.506224155426025
    4. '```' → logprob: -6.881224155426025
    5. '

' → logprob: -7.131224155426025
    6. '_' → logprob: -8.506223678588867
    7. '
' → logprob: -8.631223678588867
    8. ' 
' → logprob: -9.256223678588867
    9. '<|end|>' → logprob: -9.256223678588867
    10. '' → logprob: -9.381223678588867

Token 81: ' add' (ID: 1147)
  Prédit: ' add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.2545062005519867
    2. ' build' → logprob: -2.2545061111450195
    3. ' ' → logprob: -2.7545061111450195
    4. '_' → logprob: -3.7545061111450195
    5. ' read' → logprob: -4.2545061111450195
    6. ' space' → logprob: -5.0045061111450195
    7. ' _' → logprob: -6.0045061111450195
    8. ' ' → logprob: -6.1295061111450195
    9. '_add' → logprob: -6.6295061111450195
    10. ' ‌' → logprob: -7.3795061111450195

Token 82: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -0.011218054220080376
    2. '_' → logprob: -4.511218070983887
    3. '_edges' → logprob: -9.761218070983887
    4. '_e' → logprob: -10.261218070983887
    5. ' _' → logprob: -10.386218070983887
    6. '_ed' → logprob: -11.136218070983887
    7. '_line' → logprob: -12.386218070983887
    8. '_node' → logprob: -12.636218070983887
    9. '_to' → logprob: -12.886218070983887
    10. '_a' → logprob: -13.011218070983887

Token 83: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.60414821645827e-06
    2. ' (' → logprob: -12.875004768371582
    3. '(
' → logprob: -14.125004768371582
    4. '(k' → logprob: -14.375004768371582
    5. '(parent' → logprob: -16.125003814697266
    6. '(kn' → logprob: -16.125003814697266
    7. '(

' → logprob: -16.375003814697266
    8. '(ai' → logprob: -16.500003814697266
    9. '("("' → logprob: -16.750003814697266
    10. '(`' → logprob: -17.000003814697266

Token 84: 'ki' (ID: 3129)
  Prédit: 'ki'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ki' → logprob: -0.029138410463929176
    2. ')' → logprob: -4.154138565063477
    3. ' ki' → logprob: -4.779138565063477
    4. 'k' → logprob: -5.654138565063477
    5. ',' → logprob: -8.154138565063477
    6. ' )' → logprob: -8.279138565063477
    7. 'kii' → logprob: -9.404138565063477
    8. 'list' → logprob: -9.529138565063477
    9. ' ' → logprob: -10.154138565063477
    10. '   ' → logprob: -10.404138565063477

Token 85: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4259644558478612e-05
    2. ' ,' → logprob: -11.250014305114746
    3. ',n' → logprob: -15.125014305114746
    4. '[],' → logprob: -15.250014305114746
    5. '‌,' → logprob: -15.875014305114746
    6. ',k' → logprob: -16.00001335144043
    7. ',a' → logprob: -16.37501335144043
    8. ',i' → logprob: -16.50001335144043
    9. ',index' → logprob: -16.62501335144043
    10. '[' → logprob: -16.75001335144043

Token 86: ' a' (ID: 261)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.5761319398880005
    2. ' u' → logprob: -0.8261319398880005
    3. 'a' → logprob: -9.826131820678711
    4. ')' → logprob: -10.076131820678711
    5. 'i' → logprob: -10.576131820678711
    6. 'x' → logprob: -10.826131820678711
    7. ' i' → logprob: -11.326131820678711
    8. ' a' → logprob: -11.451131820678711
    9. '	u' → logprob: -11.576131820678711
    10. ' x' → logprob: -12.451131820678711

Token 87: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016909420082811266
    2. ' ,' → logprob: -8.750168800354004
    3. ')' → logprob: -11.625168800354004
    4. ',a' → logprob: -14.625168800354004
    5. ',)' → logprob: -15.250168800354004
    6. '‌,' → logprob: -15.375168800354004
    7. 'a' → logprob: -16.12516975402832
    8. ',b' → logprob: -16.37516975402832
    9. ' ' → logprob: -16.62516975402832
    10. '[' → logprob: -16.62516975402832

Token 88: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.4740801155567169
    2. ' b' → logprob: -0.9740800857543945
    3. ' ' → logprob: -13.474080085754395
    4. ')b' → logprob: -14.099080085754395
    5. '<|end|>' → logprob: -14.724080085754395
    6. ')' → logprob: -14.974080085754395
    7. ' )' → logprob: -15.974080085754395
    8. ' 
' → logprob: -16.72408103942871
    9. '	b' → logprob: -17.09908103942871
    10. ' ' → logprob: -18.22408103942871

Token 89: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0003278368094470352
    2. ')' → logprob: -8.250328063964844
    3. '):
' → logprob: -9.750328063964844
    4. ':' → logprob: -12.375328063964844
    5. ' ):' → logprob: -12.750328063964844
    6. '   ' → logprob: -15.250328063964844
    7. '):
' → logprob: -15.500328063964844
    8. ',' → logprob: -15.625328063964844
    9. ')：' → logprob: -15.750328063964844
    10. ' ' → logprob: -15.750328063964844

Token 90: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005254268646240234
    2. '    
' → logprob: -6.25525426864624
    3. '[' → logprob: -7.00525426864624
    4. '<|end|>' → logprob: -7.25525426864624
    5. ')' → logprob: -8.005254745483398
    6. ' 
' → logprob: -8.255254745483398
    7. '  
' → logprob: -8.505254745483398
    8. '```' → logprob: -8.505254745483398
    9. ' ' → logprob: -8.630254745483398
    10. '   
' → logprob: -9.005254745483398

Token 91: ' ki' (ID: 3314)
  Prédit: ' ki'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ki' → logprob: -0.40099814534187317
    2. 'ki' (adapté à ' ki') → logprob: -1.1509981155395508
    3. '   ' → logprob: -4.275998115539551
    4. '```' → logprob: -10.27599811553955
    5. ' kii' → logprob: -11.02599811553955
    6. ' ' → logprob: -11.02599811553955
    7. 'kii' → logprob: -11.15099811553955
    8. ' ' → logprob: -11.27599811553955
    9. '    
' → logprob: -11.90099811553955
    10. '[' → logprob: -12.02599811553955

Token 92: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -6.704273118884885e-07
    2. '[' → logprob: -15.125000953674316
    3. 'a' → logprob: -15.125000953674316
    4. '[b' → logprob: -17.625
    5. '```' → logprob: -18.75
    6. '[A' → logprob: -19.75
    7. ' [' → logprob: -20.5
    8. '[i' → logprob: -20.75
    9. '\[' → logprob: -21.0
    10. '[u' → logprob: -21.125

Token 93: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0032597112003713846
    2. ']' → logprob: -5.753259658813477
    3. ' ].' → logprob: -9.753259658813477
    4. '.' → logprob: -11.128259658813477
    5. '.append' → logprob: -11.753259658813477
    6. ').' → logprob: -14.253259658813477
    7. ' ]' → logprob: -15.878259658813477
    8. '],' → logprob: -16.503259658813477
    9. '.]' → logprob: -16.503259658813477
    10. '   ' → logprob: -16.628259658813477

Token 94: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.9361264946837764e-07
    2. 'appen' → logprob: -16.375
    3. ' append' → logprob: -16.625
    4. '.append' → logprob: -17.625
    5. 'appe' → logprob: -20.125
    6. 'app' → logprob: -20.875
    7. 'add' → logprob: -21.5
    8. '	append' → logprob: -21.5
    9. 'Append' → logprob: -22.0
    10. '_append' → logprob: -22.25

Token 95: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.0015228374395519495
    2. '(' → logprob: -6.501523017883301
    3. 'b' → logprob: -11.0015230178833
    4. '(
' → logprob: -12.7515230178833
    5. ' (' → logprob: -14.6265230178833
    6. ' b' → logprob: -14.7515230178833
    7. ')b' → logprob: -16.126522064208984
    8. '	b' → logprob: -18.126522064208984
    9. '(

' → logprob: -19.001522064208984
    10. '((' → logprob: -19.126522064208984

Token 96: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.652451464906335e-05
    2. ' )' → logprob: -11.375016212463379
    3. ')
' → logprob: -12.250016212463379
    4. '),' → logprob: -16.375017166137695
    5. ')#' → logprob: -17.375017166137695
    6. '   ' → logprob: -17.750017166137695
    7. '')' → logprob: -18.250017166137695
    8. ')

' → logprob: -18.250017166137695
    9. ')`' → logprob: -18.500017166137695
    10. ')b' → logprob: -18.625017166137695

Token 97: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008985500782728195
    2. '    
' → logprob: -5.63398551940918
    3. '<|end|>' → logprob: -5.88398551940918
    4. '
' → logprob: -6.13398551940918
    5. ' 
' → logprob: -9.00898551940918
    6. '  
' → logprob: -9.38398551940918
    7. ' ' → logprob: -9.63398551940918
    8. '```' → logprob: -10.00898551940918
    9. '   
' → logprob: -11.00898551940918
    10. '  ' → logprob: -11.25898551940918

Token 98: ' ki' (ID: 3314)
  Prédit: 'ki'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ki' (adapté à ' ki') → logprob: -0.35391783714294434
    2. '   ' → logprob: -1.2289178371429443
    3. ' ki' → logprob: -5.603918075561523
    4. '    
' → logprob: -6.603918075561523
    5. ' 
' → logprob: -9.228918075561523
    6. 'kii' → logprob: -9.728918075561523
    7. '
' → logprob: -10.103918075561523
    8. '```' → logprob: -10.353918075561523
    9. '  
' → logprob: -10.603918075561523
    10. 'kip' → logprob: -11.103918075561523

Token 99: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -1.5213274309644476e-05
    2. '[' → logprob: -11.125015258789062
    3. '[a' → logprob: -15.375015258789062
    4. 'b' → logprob: -16.250015258789062
    5. '[s' → logprob: -18.250015258789062
    6. '[B' → logprob: -18.500015258789062
    7. '```' → logprob: -18.750015258789062
    8. ' [' → logprob: -18.750015258789062
    9. '[
' → logprob: -19.875015258789062
    10. '[u' → logprob: -20.750015258789062

Token 100: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.21314764022827148
    2. ').' → logprob: -1.7131476402282715
    3. '.append' → logprob: -4.8381476402282715
    4. '.' → logprob: -5.8381476402282715
    5. ')' → logprob: -7.3381476402282715
    6. ']' → logprob: -9.08814811706543
    7. ' ].' → logprob: -10.96314811706543
    8. '   ' → logprob: -11.33814811706543
    9. ' .' → logprob: -11.46314811706543
    10. '}.' → logprob: -11.58814811706543

Token 101: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.9361264946837764e-07
    2. ' append' → logprob: -16.125
    3. 'appen' → logprob: -16.75
    4. '.append' → logprob: -18.0
    5. '	append' → logprob: -18.625
    6. 'add' → logprob: -20.5
    7. '_append' → logprob: -21.25
    8. 'app' → logprob: -21.25
    9. 'a' → logprob: -21.625
    10. 'Append' → logprob: -22.625

Token 102: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -5.943783253314905e-05
    2. '(' → logprob: -9.750059127807617
    3. 'a' → logprob: -13.875059127807617
    4. '(
' → logprob: -16.500059127807617
    5. ' (' → logprob: -18.750059127807617
    6. '(ai' → logprob: -19.750059127807617
    7. '((' → logprob: -20.500059127807617
    8. ')a' → logprob: -20.625059127807617
    9. ')' → logprob: -20.750059127807617
    10. '(A' → logprob: -20.875059127807617

Token 103: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.1424973713001236e-05
    2. ')
' → logprob: -10.375031471252441
    3. ' )' → logprob: -16.250030517578125
    4. ')

' → logprob: -17.500030517578125
    5. ')
' → logprob: -19.875030517578125
    6. '),' → logprob: -19.875030517578125
    7. ')return' → logprob: -20.125030517578125
    8. ')`' → logprob: -20.125030517578125
    9. '}' → logprob: -20.250030517578125
    10. '   ' → logprob: -20.625030517578125

Token 104: 'def' (ID: 1314)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0149117736145854
    2. 'def' → logprob: -4.639911651611328
    3. '
' → logprob: -6.514911651611328
    4. '\' → logprob: -6.514911651611328
    5. '' → logprob: -7.139911651611328
    6. 'n' → logprob: -7.639911651611328
    7. '\n' → logprob: -8.139911651611328
    8. '

' → logprob: -8.264911651611328
    9. '#' → logprob: -9.764911651611328
    10. '```' → logprob: -10.014911651611328

Token 105: ' initialize' (ID: 18400)
  Prédit: ' dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.2436283826828003
    2. ' main' → logprob: -2.36862850189209
    3. ' bfs' → logprob: -2.61862850189209
    4. ' solve' → logprob: -3.11862850189209
    5. ' calculate' → logprob: -6.86862850189209
    6. ' count' → logprob: -6.86862850189209
    7. ' find' → logprob: -6.99362850189209
    8. ' shortest' → logprob: -7.49362850189209
    9. ' ' → logprob: -7.86862850189209
    10. ' d' → logprob: -8.74362850189209

Token 106: '_seen' (ID: 158839)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6280432939529419
    2. '_dist' → logprob: -1.503043293952942
    3. '(' → logprob: -3.1280431747436523
    4. '_distance' → logprob: -3.2530431747436523
    5. '_dp' → logprob: -3.6280431747436523
    6. '_states' → logprob: -3.8780431747436523
    7. '_parent' → logprob: -4.503043174743652
    8. '_colors' → logprob: -4.753043174743652
    9. '_arrays' → logprob: -5.003043174743652
    10. '_counts' → logprob: -5.003043174743652

Token 107: '(n' (ID: 2406)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.019037369638681412
    2. '(' → logprob: -4.644037246704102
    3. ' ():' → logprob: -5.519037246704102
    4. '(n' → logprob: -6.019037246704102
    5. '()' → logprob: -6.394037246704102
    6. '():
' → logprob: -7.144037246704102
    7. '_' → logprob: -9.394037246704102
    8. '_list' → logprob: -9.769037246704102
    9. ' ()' → logprob: -9.894037246704102
    10. ' (' → logprob: -9.894037246704102

Token 108: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0008273754501715302
    2. ')' → logprob: -7.500827312469482
    3. '):
' → logprob: -8.87582778930664
    4. ',' → logprob: -9.50082778930664
    5. ' ):' → logprob: -9.75082778930664
    6. '):
' → logprob: -14.37582778930664
    7. '   ' → logprob: -15.62582778930664
    8. ')：' → logprob: -15.62582778930664
    9. '():' → logprob: -16.00082778930664
    10. ':' → logprob: -16.12582778930664

Token 109: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.5258042812347412
    2. 'k' → logprob: -0.9008042812347412
    3. ')' → logprob: -6.40080451965332
    4. ' )' → logprob: -7.77580451965332
    5. ' ' → logprob: -9.77580451965332
    6. 'False' → logprob: -9.77580451965332
    7. '	k' → logprob: -9.83830451965332
    8. '   ' → logprob: -9.90080451965332
    9. '):' → logprob: -10.21330451965332
    10. '0' → logprob: -10.40080451965332

Token 110: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008937290869653225
    2. ',' → logprob: -4.883937358856201
    3. ')' → logprob: -6.883937358856201
    4. '):
' → logprob: -8.508936882019043
    5. ' ):' → logprob: -9.258936882019043
    6. '=' → logprob: -13.383936882019043
    7. ':' → logprob: -13.508936882019043
    8. '):
' → logprob: -13.508936882019043
    9. ' ,' → logprob: -13.758936882019043
    10. '   ' → logprob: -13.758936882019043

Token 111: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022553635761141777
    2. ' return' → logprob: -4.022553443908691
    3. 'return' → logprob: -6.272553443908691
    4. ' seen' → logprob: -6.647553443908691
    5. '    
' → logprob: -7.897553443908691
    6. '
' → logprob: -7.897553443908691
    7. 'seen' → logprob: -8.897553443908691
    8. '  ' → logprob: -10.147553443908691
    9. '	return' → logprob: -10.272553443908691
    10. '[' → logprob: -10.272553443908691

Token 112: ' seen' (ID: 6177)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.8244901895523071
    2. 'seen' (adapté à ' seen') → logprob: -0.9494901895523071
    3. ' return' → logprob: -2.0744900703430176
    4. '   ' → logprob: -3.6994900703430176
    5. ' seen' → logprob: -3.8244900703430176
    6. 'se' → logprob: -6.949490070343018
    7. ' ' → logprob: -8.324490547180176
    8. 'from' → logprob: -8.324490547180176
    9. 'import' → logprob: -9.074490547180176
    10. 'ret' → logprob: -9.074490547180176

Token 113: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0015179537003859878
    2. '=' → logprob: -6.5015177726745605
    3. ' ' → logprob: -12.001518249511719
    4. '[' → logprob: -12.376518249511719
    5. '  ' → logprob: -13.001518249511719
    6. '   ' → logprob: -13.626518249511719
    7. ',' → logprob: -14.251518249511719
    8. ' =[' → logprob: -15.251518249511719
    9. ' =
' → logprob: -15.251518249511719
    10. ' ,' → logprob: -15.626518249511719

Token 114: ' [-' (ID: 20191)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.055494725704193115
    2. '[' → logprob: -2.930494785308838
    3. ' set' → logprob: -8.18049430847168
    4. ' ' → logprob: -9.18049430847168
    5. ' [-' → logprob: -9.68049430847168
    6. 'set' → logprob: -10.18049430847168
    7. '[n' → logprob: -10.68049430847168
    8. ' {' → logprob: -10.68049430847168
    9. '[-' → logprob: -11.18049430847168
    10. '[k' → logprob: -11.68049430847168

Token 115: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002774246677290648
    2. '(' → logprob: -9.625277519226074
    3. '2' → logprob: -9.750277519226074
    4. 'k' → logprob: -9.750277519226074
    5. 'float' → logprob: -9.750277519226074
    6. '-' → logprob: -11.125277519226074
    7. '10' → logprob: -12.125277519226074
    8. ' ' → logprob: -12.500277519226074
    9. '100' → logprob: -13.125277519226074
    10. '999' → logprob: -13.250277519226074

Token 116: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.018045049160718918
    2. ' for' → logprob: -4.268044948577881
    3. ']*' → logprob: -6.143044948577881
    4. ' ]' → logprob: -6.518044948577881
    5. 'for' → logprob: -8.393045425415039
    6. ')' → logprob: -12.143045425415039
    7. ']*(' → logprob: -12.268045425415039
    8. ' if' → logprob: -12.393045425415039
    9. ',' → logprob: -13.018045425415039
    10. ' ' → logprob: -13.268045425415039

Token 117: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.439186692237854
    2. '*' → logprob: -1.689186692237854
    3. ' for' → logprob: -1.939186692237854
    4. ' ' → logprob: -3.8141865730285645
    5. 'for' → logprob: -6.5641865730285645
    6. '   ' → logprob: -6.9391865730285645
    7. ')' → logprob: -7.3141865730285645
    8. '+' → logprob: -7.9391865730285645
    9. ',' → logprob: -7.9391865730285645
    10. '*n' → logprob: -8.814187049865723

Token 118: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3604433238506317
    2. ' n' → logprob: -1.235443353652954
    3. '(n' → logprob: -5.110443115234375
    4. ' (' → logprob: -6.110443115234375
    5. 'k' → logprob: -6.485443115234375
    6. '(' → logprob: -6.610443115234375
    7. '(k' → logprob: -7.610443115234375
    8. ' k' → logprob: -8.110443115234375
    9. ' ' → logprob: -12.610443115234375
    10. '	n' → logprob: -13.610443115234375

Token 119: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.00587534811347723
    2. '   ' → logprob: -6.380875110626221
    3. '<|end|>' → logprob: -6.380875110626221
    4. '
' → logprob: -7.380875110626221
    5. ' 
' → logprob: -7.630875110626221
    6. ' for' → logprob: -7.880875110626221
    7. '  
' → logprob: -7.880875110626221
    8. '    
' → logprob: -8.005875587463379
    9. '<|end|>' → logprob: -9.630875587463379
    10. ' return' → logprob: -10.255875587463379

Token 120: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2953200042247772
    2. '   ' → logprob: -1.5453200340270996
    3. ' for' → logprob: -3.6703200340270996
    4. '<|end|>' → logprob: -5.6703200340271
    5. ' return' → logprob: -5.9203200340271
    6. '    
' → logprob: -6.1703200340271
    7. 'for' → logprob: -6.1703200340271
    8. 'return' → logprob: -6.4203200340271
    9. ' 
' → logprob: -6.5453200340271
    10. '  
' → logprob: -7.1703200340271

Token 121: ' seen' (ID: 6177)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1117318645119667
    2. ' for' → logprob: -2.486731767654419
    3. '   ' → logprob: -3.986731767654419
    4. 'queue' → logprob: -5.986732006072998
    5. 'return' → logprob: -7.236732006072998
    6. ' queue' → logprob: -7.986732006072998
    7. 'stack' → logprob: -9.23673152923584
    8. 'from' → logprob: -9.86173152923584
    9. ' return' → logprob: -9.86173152923584
    10. 'seen' (adapté à ' seen') → logprob: -10.11173152923584

Token 122: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.08768032491207123
    2. '[:' → logprob: -2.5876803398132324
    3. '<|end|>' → logprob: -4.962680339813232
    4. ',' → logprob: -7.837680339813232
    5. '[:]' → logprob: -7.837680339813232
    6. ' ' → logprob: -8.337679862976074
    7. '[k' → logprob: -8.462679862976074
    8. '<|end|>' → logprob: -8.962679862976074
    9. '[
' → logprob: -9.087679862976074
    10. ' =' → logprob: -9.962679862976074

Token 123: '0' (ID: 15)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.030641306191682816
    2. '0' → logprob: -3.5306413173675537
    3. ':' → logprob: -8.155641555786133
    4. ' k' → logprob: -8.405641555786133
    5. 'n' → logprob: -9.280641555786133
    6. ' ' → logprob: -9.405641555786133
    7. ')' → logprob: -9.530641555786133
    8. '<|end|>' → logprob: -10.780641555786133
    9. ' :' → logprob: -10.905641555786133
    10. '
' → logprob: -10.905641555786133

Token 124: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0010249509941786528
    2. ' ]' → logprob: -7.2510247230529785
    3. ']=' → logprob: -8.126025199890137
    4. ']
' → logprob: -11.751025199890137
    5. ')' → logprob: -12.751025199890137
    6. ']==' → logprob: -13.251025199890137
    7. ' ' → logprob: -14.001025199890137
    8. ':' → logprob: -14.251025199890137
    9. '=' → logprob: -14.376025199890137
    10. '],' → logprob: -14.376025199890137

Token 125: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03385915234684944
    2. '=' → logprob: -3.4088592529296875
    3. ' ' → logprob: -8.533859252929688
    4. ',' → logprob: -11.658859252929688
    5. '[' → logprob: -12.658859252929688
    6. '    ' → logprob: -14.158859252929688
    7. ' |=' → logprob: -14.283859252929688
    8. ' ,' → logprob: -14.533859252929688
    9. '<|end|>' → logprob: -15.033859252929688
    10. ' =[' → logprob: -15.283859252929688

Token 126: ' k' (ID: 372)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.25643783807754517
    2. 'k' → logprob: -1.6314377784729004
    3. ' ' → logprob: -3.6314377784729004
    4. ' k' → logprob: -5.5064377784729
    5. '1' → logprob: -11.881438255310059
    6. '<|end|>' → logprob: -14.881438255310059
    7. '	k' → logprob: -14.943938255310059
    8. '9' → logprob: -15.068938255310059
    9. '4' → logprob: -15.068938255310059
    10. '2' → logprob: -15.318938255310059

Token 127: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02169554866850376
    2. '<|end|>' → logprob: -4.771695613861084
    3. ' 
' → logprob: -5.396695613861084
    4. '+' → logprob: -5.521695613861084
    5. ' ' → logprob: -6.396695613861084
    6. '-' → logprob: -7.271695613861084
    7. '    
' → logprob: -7.896695613861084
    8. '  
' → logprob: -7.896695613861084
    9. '0' → logprob: -8.021695137023926
    10. '
' → logprob: -8.521695137023926

Token 128: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06045709550380707
    2. '   ' → logprob: -2.9354569911956787
    3. '<|end|>' → logprob: -5.935457229614258
    4. ' return' → logprob: -7.435457229614258
    5. '    
' → logprob: -7.560457229614258
    6. 'return' → logprob: -7.810457229614258
    7. ' 
' → logprob: -8.060457229614258
    8. '	return' → logprob: -8.310457229614258
    9. '  
' → logprob: -8.560457229614258
    10. ' ' → logprob: -8.685457229614258

Token 129: ' return' (ID: 622)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1177294254302979
    2. '   ' → logprob: -1.3677294254302979
    3. 'return' (adapté à ' return') → logprob: -1.7427294254302979
    4. ' return' → logprob: -1.9927294254302979
    5. '<|end|>' → logprob: -2.617729425430298
    6. ' ' → logprob: -4.242729187011719
    7. '	return' → logprob: -4.742729187011719
    8. ' 
' → logprob: -5.492729187011719
    9. '    
' → logprob: -6.242729187011719
    10. '\n' → logprob: -6.867729187011719

Token 130: ' seen' (ID: 6177)
  Prédit: ' seen'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' seen' → logprob: -0.3132913112640381
    2. 'seen' → logprob: -1.313291311264038
    3. 'se' → logprob: -10.688291549682617
    4. ' ' → logprob: -12.813291549682617
    5. ' se' → logprob: -13.563291549682617
    6. '_seen' → logprob: -13.938291549682617
    7. 's' → logprob: -14.938291549682617
    8. '[' → logprob: -15.063291549682617
    9. ' ' → logprob: -15.188291549682617
    10. ' unseen' → logprob: -15.313291549682617

Token 131: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 132: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3180118203163147
    2. 'def' → logprob: -1.69301176071167
    3. 'd' → logprob: -2.56801176071167
    4. '

' → logprob: -5.31801176071167
    5. '\n' → logprob: -6.19301176071167
    6. '\' → logprob: -6.81801176071167
    7. '' → logprob: -6.81801176071167
    8. ' 
' → logprob: -7.44301176071167
    9. 'n' → logprob: -7.56801176071167
    10. '<|end|>' → logprob: -8.318012237548828

Token 133: ' initialize' (ID: 18400)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.853270411491394
    2. ' bfs' → logprob: -1.228270411491394
    3. ' dfs' → logprob: -1.478270411491394
    4. ' solve' → logprob: -3.7282705307006836
    5. 'dfs' → logprob: -4.103270530700684
    6. ' process' → logprob: -5.603270530700684
    7. 'main' → logprob: -6.228270530700684
    8. ' initialize' → logprob: -7.103270530700684
    9. ' propagate' → logprob: -7.228270530700684
    10. ' def' → logprob: -7.353270530700684

Token 134: '_t' (ID: 838)
  Prédit: '_queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_queue' → logprob: -0.1661442220211029
    2. '_stack' → logprob: -2.5411441326141357
    3. '_' → logprob: -3.7911441326141357
    4. '_dp' → logprob: -3.9161441326141357
    5. '_de' → logprob: -5.541144371032715
    6. '_distance' → logprob: -6.166144371032715
    7. '_dist' → logprob: -6.291144371032715
    8. '_answer' → logprob: -6.291144371032715
    9. '_seen' → logprob: -6.291144371032715
    10. '_result' → logprob: -6.541144371032715

Token 135: 'odo' (ID: 6397)
  Prédit: 'ime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ime' → logprob: -1.404680609703064
    2. 'ree' → logprob: -1.654680609703064
    3. 'arget' → logprob: -2.6546807289123535
    4. 'op' → logprob: -2.7796807289123535
    5. 'asks' → logprob: -2.9046807289123535
    6. 'odo' → logprob: -3.0296807289123535
    7. 'imer' → logprob: -3.0296807289123535
    8. 'h' → logprob: -3.1546807289123535
    9. 'r' → logprob: -3.5296807289123535
    10. 'emp' → logprob: -3.7796807289123535

Token 136: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.015631916001439095
    2. '(n' → logprob: -4.890632152557373
    3. '():
' → logprob: -5.390632152557373
    4. ' ():' → logprob: -6.140632152557373
    5. '()' → logprob: -7.390632152557373
    6. '_list' → logprob: -8.265631675720215
    7. '(' → logprob: -8.765631675720215
    8. ' ()' → logprob: -9.640631675720215
    9. '_queue' → logprob: -10.265631675720215
    10. '(queue' → logprob: -10.765631675720215

Token 137: '   ' (ID: 271)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.022294150665402412
    2. ' []' → logprob: -4.022294044494629
    3. '   ' → logprob: -5.522294044494629
    4. '[]
' → logprob: -9.272294044494629
    5. '[:]' → logprob: -11.897294044494629
    6. '[' → logprob: -12.022294044494629
    7. 'return' → logprob: -12.397294044494629
    8. '    ' → logprob: -12.522294044494629
    9. '[]=' → logprob: -12.522294044494629
    10. 'deque' → logprob: -12.772294044494629

Token 138: ' from' (ID: 591)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.007190096657723188
    2. ' []' → logprob: -5.257190227508545
    3. 'deque' → logprob: -6.257190227508545
    4. ' deque' → logprob: -11.257189750671387
    5. 'from' (adapté à ' from') → logprob: -12.007189750671387
    6. '[]
' → logprob: -12.507189750671387
    7. '[]}' → logprob: -12.632189750671387
    8. 'set' → logprob: -12.632189750671387
    9. '[' → logprob: -13.007189750671387
    10. '[:]' → logprob: -13.007189750671387

Token 139: ' collections' (ID: 22690)
  Prédit: ' collections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.4740803837776184
    2. 'collections' → logprob: -0.9740803837776184
    3. '_' → logprob: -13.224080085754395
    4. ' ' → logprob: -14.474080085754395
    5. 'queue' → logprob: -15.224080085754395
    6. ' queue' → logprob: -15.349080085754395
    7. 'collection' → logprob: -15.974080085754395
    8. '
' → logprob: -16.09908103942871
    9. '.collections' → logprob: -16.47408103942871
    10. ' collection' → logprob: -16.72408103942871

Token 140: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.015361127443611622
    2. ' import' → logprob: -4.390361309051514
    3. 'queue' → logprob: -7.140361309051514
    4. 'deque' → logprob: -7.390361309051514
    5. 'port' → logprob: -7.890361309051514
    6. 'ort' → logprob: -8.140360832214355
    7. 't' → logprob: -8.265360832214355
    8. 'ection' → logprob: -9.515360832214355
    9. 'ction' → logprob: -9.890360832214355
    10. '_queue' → logprob: -10.140360832214355

Token 141: ' deque' (ID: 90347)
  Prédit: ' deque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deque' → logprob: -7.5649528298527e-05
    2. 'deque' → logprob: -9.500075340270996
    3. ' defaultdict' → logprob: -14.500075340270996
    4. ' collections' → logprob: -16.000076293945312
    5. ' de' → logprob: -16.875076293945312
    6. ' ' → logprob: -17.625076293945312
    7. ' dequeue' → logprob: -18.500076293945312
    8. ' queue' → logprob: -19.625076293945312
    9. '	de' → logprob: -20.125076293945312
    10. ' ' → logprob: -20.375076293945312

Token 142: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.057024456560611725
    2. '<|end|>' → logprob: -4.4320244789123535
    3. '    
' → logprob: -4.6820244789123535
    4. ' 
' → logprob: -4.6820244789123535
    5. '  
' → logprob: -5.0570244789123535
    6. '   ' → logprob: -5.0570244789123535
    7. '(todo' → logprob: -6.4320244789123535
    8. '()' → logprob: -6.8070244789123535
    9. 'return' → logprob: -6.9320244789123535
    10. '(t' → logprob: -7.0570244789123535

Token 143: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3369442820549011
    2. '   ' → logprob: -2.336944341659546
    3. ' return' → logprob: -2.961944341659546
    4. '    
' → logprob: -3.461944341659546
    5. ' 
' → logprob: -3.461944341659546
    6. 'return' → logprob: -3.586944341659546
    7. '	return' → logprob: -4.586944103240967
    8. '  
' → logprob: -4.711944103240967
    9. 'deque' → logprob: -4.836944103240967
    10. '	
' → logprob: -5.711944103240967

Token 144: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.709436297416687
    2. ' return' → logprob: -1.584436297416687
    3. 'return' (adapté à ' return') → logprob: -2.2094364166259766
    4. '
' → logprob: -2.3344364166259766
    5. '    
' → logprob: -3.4594364166259766
    6. 'todo' → logprob: -3.8344364166259766
    7. ' 
' → logprob: -4.084436416625977
    8. ' todo' → logprob: -4.709436416625977
    9. '	return' → logprob: -5.209436416625977
    10. '	
' → logprob: -5.959436416625977

Token 145: ' deque' (ID: 90347)
  Prédit: ' deque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deque' → logprob: -0.04859134554862976
    2. 'deque' → logprob: -3.048591375350952
    3. ' de' → logprob: -13.048591613769531
    4. '(de' → logprob: -14.173591613769531
    5. 'de' → logprob: -14.798591613769531
    6. '	de' → logprob: -14.923591613769531
    7. 'Deque' → logprob: -15.673591613769531
    8. ' dequeue' → logprob: -15.923591613769531
    9. ' ' → logprob: -16.54859161376953
    10. ' collections' → logprob: -17.67359161376953

Token 146: '([' (ID: 5194)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.28146690130233765
    2. '(' → logprob: -1.4064669609069824
    3. '()(' → logprob: -9.156466484069824
    4. '([]' → logprob: -10.031466484069824
    5. ' ()' → logprob: -10.281466484069824
    6. '().' → logprob: -10.656466484069824
    7. '(()' → logprob: -10.781466484069824
    8. '(
' → logprob: -11.156466484069824
    9. ' (' → logprob: -11.531466484069824
    10. '([' → logprob: -11.781466484069824

Token 147: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004092292860150337
    2. '(' → logprob: -5.504092216491699
    3. ' ' → logprob: -11.7540922164917
    4. ' (' → logprob: -12.1290922164917
    5. ')' → logprob: -14.7540922164917
    6. '[' → logprob: -16.254093170166016
    7. '   ' → logprob: -16.879093170166016
    8. '((' → logprob: -17.504093170166016
    9. '])' → logprob: -17.754093170166016
    10. '    
' → logprob: -18.004093170166016

Token 148: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -1.7954958821064793e-05
    2. ' ])' → logprob: -11.375018119812012
    3. ')' → logprob: -12.625018119812012
    4. ')])' → logprob: -13.250018119812012
    5. '])
' → logprob: -14.375018119812012
    6. ',' → logprob: -15.000018119812012
    7. ']))' → logprob: -16.125017166137695
    8. '   ' → logprob: -16.250017166137695
    9. ']' → logprob: -16.625017166137695
    10. ']])' → logprob: -16.625017166137695

Token 149: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00030614540446549654
    2. ')' → logprob: -8.875306129455566
    3. ' def' → logprob: -9.875306129455566
    4. '
' → logprob: -10.125306129455566
    5. '<|end|>' → logprob: -10.875306129455566
    6. ',' → logprob: -11.250306129455566
    7. '#' → logprob: -11.375306129455566
    8. ':' → logprob: -12.125306129455566
    9. '```' → logprob: -12.125306129455566
    10. '<|end|>' → logprob: -12.750306129455566

Token 150: ' process' (ID: 2273)
  Prédit: ' solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' solve' → logprob: -0.647814929485321
    2. ' bfs' → logprob: -1.6478149890899658
    3. ' main' → logprob: -1.8978149890899658
    4. ' dfs' → logprob: -3.272814989089966
    5. ' process' → logprob: -3.397814989089966
    6. ' propagate' → logprob: -3.772814989089966
    7. ' simulate' → logprob: -4.272814750671387
    8. ' def' → logprob: -5.522814750671387
    9. 'solve' → logprob: -5.522814750671387
    10. ' run' → logprob: -5.772814750671387

Token 151: '_tree' (ID: 27118)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4687376022338867
    2. '_queue' → logprob: -1.3437376022338867
    3. '_t' → logprob: -3.2187376022338867
    4. '_node' → logprob: -3.5937376022338867
    5. '_nodes' → logprob: -4.343737602233887
    6. '_next' → logprob: -4.343737602233887
    7. '_step' → logprob: -5.343737602233887
    8. '_seen' → logprob: -6.718737602233887
    9. '_stack' → logprob: -6.968737602233887
    10. '_input' → logprob: -7.093737602233887

Token 152: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01880435086786747
    2. '(n' → logprob: -4.018804550170898
    3. '(_' → logprob: -8.518804550170898
    4. '(node' → logprob: -8.893804550170898
    5. ' (' → logprob: -9.393804550170898
    6. '_(' → logprob: -9.768804550170898
    7. '_' → logprob: -10.143804550170898
    8. '(k' → logprob: -10.518804550170898
    9. '_nodes' → logprob: -10.893804550170898
    10. '(
' → logprob: -11.143804550170898

Token 153: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.465036105713807e-06
    2. ' ,' → logprob: -12.875007629394531
    3. ',k' → logprob: -13.125007629394531
    4. ')' → logprob: -13.250007629394531
    5. ',
' → logprob: -14.375007629394531
    6. ',n' → logprob: -15.750007629394531
    7. ',)' → logprob: -15.875007629394531
    8. '‌,' → logprob: -16.50000762939453
    9. '),' → logprob: -16.87500762939453
    10. ' ' → logprob: -17.37500762939453

Token 154: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.307877779006958
    2. ' k' → logprob: -1.932877779006958
    3. 'ki' → logprob: -2.432877779006958
    4. ' ki' → logprob: -3.432877779006958
    5. '
' → logprob: -10.432877540588379
    6. ' ' → logprob: -10.495377540588379
    7. 'ko' → logprob: -11.057877540588379
    8. '```' → logprob: -11.557877540588379
    9. '	k' → logprob: -11.745377540588379
    10. 'ke' → logprob: -11.807877540588379

Token 155: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.6776029699249193e-05
    2. '):' → logprob: -11.00002670288086
    3. ' ,' → logprob: -11.62502670288086
    4. ')' → logprob: -14.37502670288086
    5. ',
' → logprob: -15.25002670288086
    6. '‌,' → logprob: -16.37502670288086
    7. ' ' → logprob: -17.50002670288086
    8. ',n' → logprob: -17.50002670288086
    9. ' ):' → logprob: -17.62502670288086
    10. '),' → logprob: -17.62502670288086

Token 156: ' ki' (ID: 3314)
  Prédit: 'ki'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ki' → logprob: -0.05499409884214401
    2. ' ki' → logprob: -2.9299941062927246
    3. 'k' → logprob: -10.554993629455566
    4. 'ko' → logprob: -10.804993629455566
    5. '   ' → logprob: -12.054993629455566
    6. 'ke' → logprob: -12.054993629455566
    7. 'kii' → logprob: -12.242493629455566
    8. ' adjacency' → logprob: -12.304993629455566
    9. 'adj' → logprob: -12.429993629455566
    10. 'Ki' → logprob: -12.492493629455566

Token 157: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00015395533409900963
    2. ' ,' → logprob: -9.125153541564941
    3. '):' → logprob: -10.250153541564941
    4. ')' → logprob: -12.000153541564941
    5. ',
' → logprob: -14.000153541564941
    6. ',s' → logprob: -14.750153541564941
    7. '),' → logprob: -14.750153541564941
    8. 's' → logprob: -15.125153541564941
    9. ' ):' → logprob: -15.125153541564941
    10. ',)' → logprob: -15.125153541564941

Token 158: ' seen' (ID: 6177)
  Prédit: 'seen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seen' → logprob: -0.062044765800237656
    2. ' seen' → logprob: -2.812044858932495
    3. 'se' → logprob: -10.937045097351074
    4. ' ' → logprob: -11.062045097351074
    5. '   ' → logprob: -11.312045097351074
    6. 'see' → logprob: -12.062045097351074
    7. 's' → logprob: -12.374545097351074
    8. '  ' → logprob: -12.562045097351074
    9. '_seen' → logprob: -12.624545097351074
    10. 'shown' → logprob: -13.624545097351074

Token 159: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005340843461453915
    2. '):' → logprob: -5.255341053009033
    3. ' ,' → logprob: -9.880340576171875
    4. ')' → logprob: -10.255340576171875
    5. ' ):' → logprob: -11.505340576171875
    6. '):
' → logprob: -12.005340576171875
    7. '   ' → logprob: -14.130340576171875
    8. ',t' → logprob: -14.880340576171875
    9. ',
' → logprob: -15.005340576171875
    10. ',d' → logprob: -15.130340576171875

Token 160: ' todo' (ID: 6520)
  Prédit: 'todo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'todo' → logprob: -0.0432097427546978
    2. ' todo' → logprob: -3.1682097911834717
    3. 'to' → logprob: -9.41821002960205
    4. 't' → logprob: -9.91821002960205
    5. 'queue' → logprob: -10.79321002960205
    6. 'tod' → logprob: -11.29321002960205
    7. ' tod' → logprob: -11.54321002960205
    8. ' to' → logprob: -11.66821002960205
    9. 'todos' → logprob: -12.41821002960205
    10. ' ' → logprob: -12.54321002960205

Token 161: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0019062625942751765
    2. '):
' → logprob: -6.626906394958496
    3. ')' → logprob: -8.251906394958496
    4. ',' → logprob: -8.251906394958496
    5. ' ):' → logprob: -10.126906394958496
    6. '):
' → logprob: -11.751906394958496
    7. ':' → logprob: -12.001906394958496
    8. '):

' → logprob: -13.876906394958496
    9. ')):' → logprob: -14.001906394958496
    10. '   ' → logprob: -14.251906394958496

Token 162: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004107727203518152
    2. ':
' → logprob: -5.75410795211792
    3. '):' → logprob: -7.37910795211792
    4. ',' → logprob: -8.754107475280762
    5. '   ' → logprob: -10.129107475280762
    6. ' :' → logprob: -10.379107475280762
    7. ')' → logprob: -10.504107475280762
    8. ':def' → logprob: -11.129107475280762
    9. '):
' → logprob: -11.379107475280762
    10. ':return' → logprob: -11.754107475280762

Token 163: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.39256489276885986
    2. 'while' (adapté à ' while') → logprob: -1.1425648927688599
    3. '   ' → logprob: -5.26756477355957
    4. ' if' → logprob: -8.14256477355957
    5. 'if' → logprob: -8.64256477355957
    6. '	while' → logprob: -10.64256477355957
    7. '    
' → logprob: -12.51756477355957
    8. '    ' → logprob: -12.51756477355957
    9. ' ' → logprob: -12.64256477355957
    10. 'import' → logprob: -12.89256477355957

Token 164: ' not' (ID: 625)
  Prédit: ' todo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' todo' → logprob: -0.048711929470300674
    2. 'todo' → logprob: -3.0487120151519775
    3. ' len' → logprob: -9.173711776733398
    4. ' tod' → logprob: -11.673711776733398
    5. '(todo' → logprob: -11.798711776733398
    6. 'len' → logprob: -12.673711776733398
    7. ' ' → logprob: -13.798711776733398
    8. ' not' → logprob: -15.923711776733398
    9. ' todos' → logprob: -16.2987117767334
    10. 'tod' → logprob: -16.2987117767334

Token 165: ' is' (ID: 382)
  Prédit: ' todo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' todo' → logprob: -0.052599549293518066
    2. 'todo' → logprob: -3.1775994300842285
    3. ' not' → logprob: -5.1775994300842285
    4. ' len' → logprob: -6.0525994300842285
    5. ' ' → logprob: -6.5525994300842285
    6. '(todo' → logprob: -9.927599906921387
    7. ' tod' → logprob: -10.927599906921387
    8. '  ' → logprob: -11.302599906921387
    9. ' seen' → logprob: -11.802599906921387
    10. 'len' → logprob: -11.802599906921387

Token 166: '_t' (ID: 838)
  Prédit: '_empty'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_empty' → logprob: -0.5910283327102661
    2. 'empty' → logprob: -1.0910283327102661
    3. 'Empty' → logprob: -2.7160282135009766
    4. ' empty' → logprob: -3.3410282135009766
    5. '-empty' → logprob: -5.841028213500977
    6. ' ' → logprob: -6.591028213500977
    7. ' not' → logprob: -7.341028213500977
    8. '_EMPTY' → logprob: -7.591028213500977
    9. ' None' → logprob: -8.341028213500977
    10. 'm' → logprob: -8.466028213500977

Token 167: 'odo' (ID: 6397)
  Prédit: 'odo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odo' → logprob: -0.005333608947694302
    2. 'do' → logprob: -5.755333423614502
    3. 'todo' → logprob: -7.255333423614502
    4. 'm' → logprob: -7.880333423614502
    5. '
' → logprob: -8.50533390045166
    6. 'd' → logprob: -8.63033390045166
    7. '```' → logprob: -9.38033390045166
    8. 'mp' → logprob: -9.63033390045166
    9. 'od' → logprob: -9.63033390045166
    10. '

' → logprob: -10.00533390045166

Token 168: '_empty' (ID: 35051)
  Prédit: '_empty'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_empty' → logprob: -0.7422157526016235
    2. 'empty' → logprob: -1.1172157526016235
    3. 'Empty' → logprob: -2.117215633392334
    4. 'm' → logprob: -3.242215633392334
    5. '.empty' → logprob: -3.742215633392334
    6. 'pty' → logprob: -4.492215633392334
    7. '-empty' → logprob: -7.367215633392334
    8. ' empty' → logprob: -7.617215633392334
    9. '.Empty' → logprob: -8.367216110229492
    10. 'd' → logprob: -8.617216110229492

Token 169: '(todo' (ID: 105468)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.47789421677589417
    2. '()' → logprob: -0.9778941869735718
    3. '(todo' → logprob: -6.227894306182861
    4. '(' → logprob: -6.727894306182861
    5. ' ()' → logprob: -8.352893829345703
    6. ' ():' → logprob: -9.102893829345703
    7. '(t' → logprob: -9.227893829345703
    8. '():
' → logprob: -9.227893829345703
    9. ':' → logprob: -10.352893829345703
    10. '()(' → logprob: -10.602893829345703

Token 170: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007481445092707872
    2. ')' → logprob: -5.007481575012207
    3. ' ):' → logprob: -7.507481575012207
    4. '):
' → logprob: -8.882481575012207
    5. '():' → logprob: -10.132481575012207
    6. '()' → logprob: -10.507481575012207
    7. ':' → logprob: -12.257481575012207
    8. ' )' → logprob: -12.757481575012207
    9. ' ' → logprob: -13.882481575012207
    10. ')):' → logprob: -14.507481575012207

Token 171: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010644171386957169
    2. '       ' → logprob: -5.76064395904541
    3. ':
' → logprob: -6.01064395904541
    4. '):' → logprob: -6.26064395904541
    5. '   ' → logprob: -6.63564395904541
    6. ',' → logprob: -6.63564395904541
    7. ' :' → logprob: -8.26064395904541
    8. ')' → logprob: -10.01064395904541
    9. '<|end|>' → logprob: -10.26064395904541
    10. '):
' → logprob: -10.76064395904541

Token 172: ' t' (ID: 260)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.4573785066604614
    2. 'current' → logprob: -1.7073785066604614
    3. ' node' → logprob: -2.707378387451172
    4. 'u' → logprob: -2.957378387451172
    5. 'v' → logprob: -3.332378387451172
    6. ' current' → logprob: -3.832378387451172
    7. '   ' → logprob: -6.082378387451172
    8. ' u' → logprob: -6.207378387451172
    9. 'cur' → logprob: -6.457378387451172
    10. ' v' → logprob: -6.832378387451172

Token 173: ' =' (ID: 314)
  Prédit: 'odo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odo' → logprob: -0.5822730660438538
    2. ' =' → logprob: -0.9572730660438538
    3. '=' → logprob: -3.332273006439209
    4. 'o' → logprob: -4.082273006439209
    5. 'ask' → logprob: -6.707273006439209
    6. ' ' → logprob: -7.707273006439209
    7. ',' → logprob: -7.957273006439209
    8. '=o' → logprob: -8.207273483276367
    9. '```' → logprob: -8.457273483276367
    10. '  ' → logprob: -8.457273483276367

Token 174: ' pop' (ID: 2735)
  Prédit: ' todo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' todo' → logprob: -0.4740983843803406
    2. 'todo' → logprob: -0.9740983843803406
    3. 'odo' → logprob: -11.599098205566406
    4. '
' → logprob: -12.349098205566406
    5. '(todo' → logprob: -12.599098205566406
    6. ' tod' → logprob: -13.724098205566406
    7. 'tod' → logprob: -13.724098205566406
    8. '.todo' → logprob: -13.974098205566406
    9. '	t' → logprob: -14.599098205566406
    10. 't' → logprob: -14.974098205566406

Token 175: '_t' (ID: 838)
  Prédit: '(todo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(todo' → logprob: -0.017369642853736877
    2. '_t' → logprob: -5.142369747161865
    3. '()' → logprob: -5.392369747161865
    4. '(t' → logprob: -5.767369747161865
    5. '(' → logprob: -6.517369747161865
    6. 'todo' → logprob: -7.017369747161865
    7. '_' → logprob: -7.892369747161865
    8. '(_' → logprob: -7.892369747161865
    9. '_from' → logprob: -8.767369270324707
    10. '_left' → logprob: -9.517369270324707

Token 176: 'odo' (ID: 6397)
  Prédit: 'odo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odo' → logprob: -0.02905469760298729
    2. '(todo' → logprob: -4.029054641723633
    3. 'o' → logprob: -4.779054641723633
    4. 'todo' → logprob: -6.779054641723633
    5. 'do' → logprob: -6.779054641723633
    6. 'od' → logprob: -10.279054641723633
    7. '
' → logprob: -10.654054641723633
    8. '()' → logprob: -11.154054641723633
    9. '(do' → logprob: -11.279054641723633
    10. '(' → logprob: -11.404054641723633

Token 177: '(todo' (ID: 105468)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.16292704641819
    2. '(todo' → logprob: -1.9129270315170288
    3. '(' → logprob: -6.412927150726318
    4. '(t' → logprob: -7.287927150726318
    5. '()
' → logprob: -8.03792667388916
    6. '()

' → logprob: -11.03792667388916
    7. '(
' → logprob: -12.03792667388916
    8. '()(' → logprob: -12.16292667388916
    9. ' ()' → logprob: -12.41292667388916
    10. '())' → logprob: -12.66292667388916

Token 178: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010509284038562328
    2. ')
' → logprob: -9.375104904174805
    3. ' )' → logprob: -10.875104904174805
    4. ')
' → logprob: -14.750104904174805
    5. ')

' → logprob: -15.375104904174805
    6. '()' → logprob: -15.625104904174805
    7. '[' → logprob: -16.125104904174805
    8. '))' → logprob: -16.125104904174805
    9. ' ' → logprob: -16.250104904174805
    10. '())' → logprob: -16.375104904174805

Token 179: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.32010552287101746
    2. '<|end|>' → logprob: -1.4451055526733398
    3. '       ' → logprob: -3.94510555267334
    4. '        
' → logprob: -5.44510555267334
    5. ' 
' → logprob: -5.57010555267334
    6. '   ' → logprob: -6.32010555267334
    7. '  
' → logprob: -6.44510555267334
    8. '    
' → logprob: -6.44510555267334
    9. ' ' → logprob: -6.57010555267334
    10. '<|end|>' → logprob: -6.82010555267334

Token 180: ' s' (ID: 265)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.000432695698691532
    2. ' for' → logprob: -7.75043249130249
    3. '#' → logprob: -14.250432968139648
    4. '
' → logprob: -14.625432968139648
    5. '   ' → logprob: -15.375432968139648
    6. 'if' → logprob: -15.500432968139648
    7. '	for' → logprob: -15.500432968139648
    8. '<|end|>' → logprob: -15.625432968139648
    9. '    
' → logprob: -16.75043296813965
    10. 'process' → logprob: -17.12543296813965

Token 181: ' =' (ID: 314)
  Prédit: 'ee'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ee' → logprob: -0.743266224861145
    2. ' =' → logprob: -1.243266224861145
    3. 'e' → logprob: -2.2432661056518555
    4. '=' → logprob: -2.9932661056518555
    5. 'for' → logprob: -3.6182661056518555
    6. 'ees' → logprob: -4.6182661056518555
    7. '   ' → logprob: -4.9932661056518555
    8. 't' → logprob: -5.3682661056518555
    9. '_seen' → logprob: -5.4932661056518555
    10. 'een' → logprob: -5.7432661056518555

Token 182: ' get' (ID: 717)
  Prédit: 'seen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'seen' → logprob: -0.013265641406178474
    2. ' seen' → logprob: -4.388265609741211
    3. '0' → logprob: -8.388265609741211
    4. 't' → logprob: -8.638265609741211
    5. 'len' → logprob: -9.638265609741211
    6. 'k' → logprob: -10.013265609741211
    7. '   ' → logprob: -10.013265609741211
    8. ' t' → logprob: -10.263265609741211
    9. ' ' → logprob: -10.263265609741211
    10. 'se' → logprob: -10.763265609741211

Token 183: '_initial' (ID: 45740)
  Prédit: '_next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_next' → logprob: -0.9065102338790894
    2. '_seen' → logprob: -1.4065102338790894
    3. '_neighbors' → logprob: -1.5315102338790894
    4. '_max' → logprob: -3.781510353088379
    5. '_children' → logprob: -3.906510353088379
    6. '_neighbor' → logprob: -4.031510353088379
    7. '_current' → logprob: -4.906510353088379
    8. '_value' → logprob: -5.031510353088379
    9. '_child' → logprob: -5.156510353088379
    10. '_best' → logprob: -5.531510353088379

Token 184: '_color' (ID: 15576)
  Prédit: '_value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.8010322451591492
    2. '_state' → logprob: -1.926032304763794
    3. '_strength' → logprob: -2.176032304763794
    4. '_seen' → logprob: -2.301032304763794
    5. '_token' → logprob: -3.676032304763794
    6. 'value' → logprob: -4.176032066345215
    7. '_power' → logprob: -4.301032066345215
    8. '_score' → logprob: -4.426032066345215
    9. 'seen' → logprob: -4.551032066345215
    10. '_energy' → logprob: -4.551032066345215

Token 185: '_count' (ID: 7536)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.0429820641875267
    2. '(' → logprob: -4.41798210144043
    3. '_seen' → logprob: -4.54298210144043
    4. 's' → logprob: -4.66798210144043
    5. '(s' → logprob: -5.41798210144043
    6. '()' → logprob: -6.29298210144043
    7. 'ing' → logprob: -6.91798210144043
    8. 'ed' → logprob: -7.16798210144043
    9. '(se' → logprob: -7.54298210144043
    10. '_count' → logprob: -8.29298210144043

Token 186: '(k' (ID: 12125)
  Prédit: '(se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(se' → logprob: -0.4839553236961365
    2. '(' → logprob: -1.4839553833007812
    3. '(s' → logprob: -2.6089553833007812
    4. '(t' → logprob: -3.2339553833007812
    5. 's' → logprob: -3.3589553833007812
    6. 'seen' → logprob: -5.358955383300781
    7. '_seen' → logprob: -6.983955383300781
    8. '()' → logprob: -7.108955383300781
    9. '(k' → logprob: -7.233955383300781
    10. 'se' → logprob: -7.358955383300781

Token 187: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18147720396518707
    2. ',' → logprob: -1.9314771890640259
    3. ' )' → logprob: -4.556477069854736
    4. ' -' → logprob: -5.181477069854736
    5. '-' → logprob: -6.431477069854736
    6. ' ,' → logprob: -6.556477069854736
    7. ')
' → logprob: -6.931477069854736
    8. 's' → logprob: -8.931477546691895
    9. ',
' → logprob: -9.431477546691895
    10. '
' → logprob: -9.556477546691895

Token 188: ' seen' (ID: 6177)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.7522820234298706
    2. 'seen' → logprob: -1.1272820234298706
    3. ' seen' → logprob: -2.37728214263916
    4. ' t' → logprob: -2.50228214263916
    5. ')' → logprob: -3.87728214263916
    6. 'n' → logprob: -6.00228214263916
    7. ')t' → logprob: -6.62728214263916
    8. '0' → logprob: -6.62728214263916
    9. ' n' → logprob: -6.75228214263916
    10. 's' → logprob: -6.87728214263916

Token 189: '[t' (ID: 32184)
  Prédit: '[t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[t' → logprob: -0.06379448622465134
    2. ',' → logprob: -2.8137943744659424
    3. '[' → logprob: -6.9387946128845215
    4. ')' → logprob: -7.9387946128845215
    5. ',t' → logprob: -7.9387946128845215
    6. ' ,' → logprob: -9.563794136047363
    7. 't' → logprob: -11.188794136047363
    8. ' t' → logprob: -11.563794136047363
    9. ' [' → logprob: -11.688794136047363
    10. ',[' → logprob: -11.688794136047363

Token 190: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.045282185077667236
    2. '])
' → logprob: -3.1702821254730225
    3. ' ])' → logprob: -7.170282363891602
    4. ']' → logprob: -7.545282363891602
    5. ' ])
' → logprob: -8.420282363891602
    6. '],' → logprob: -8.420282363891602
    7. '   ' → logprob: -8.545282363891602
    8. '       ' → logprob: -9.295282363891602
    9. ')])' → logprob: -9.670282363891602
    10. ')' → logprob: -9.670282363891602

Token 191: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 192: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.47730186581611633
    2. 'for' (adapté à ' for') → logprob: -0.977301836013794
    3. '   ' → logprob: -5.852302074432373
    4. '       ' → logprob: -8.227301597595215
    5. '	for' → logprob: -10.352301597595215
    6. '
' → logprob: -11.352301597595215
    7. ' ' → logprob: -11.852301597595215
    8. ' if' → logprob: -12.227301597595215
    9. '    
' → logprob: -12.477301597595215
    10. 'if' → logprob: -12.727301597595215

Token 193: ' neighbor' (ID: 13034)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.7214754223823547
    2. ' v' → logprob: -1.97147536277771
    3. ' neighbor' → logprob: -1.97147536277771
    4. ' c' → logprob: -3.34647536277771
    5. ' child' → logprob: -3.59647536277771
    6. ' ' → logprob: -3.59647536277771
    7. ' nbr' → logprob: -3.59647536277771
    8. ' w' → logprob: -3.72147536277771
    9. ' x' → logprob: -3.84647536277771
    10. ' nxt' → logprob: -3.97147536277771

Token 194: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005899999290704727
    2. 'in' → logprob: -5.255899906158447
    3. ' ' → logprob: -7.380899906158447
    4. '	in' → logprob: -10.380900382995605
    5. '_in' → logprob: -12.755900382995605
    6. ',' → logprob: -13.255900382995605
    7. ' ' → logprob: -13.505900382995605
    8. '_' → logprob: -13.630900382995605
    9. '  ' → logprob: -13.880900382995605
    10. '<|end|>' → logprob: -14.130900382995605

Token 195: ' get' (ID: 717)
  Prédit: ' ki'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ki' → logprob: -6.301394023466855e-05
    2. 'ki' → logprob: -9.875062942504883
    3. ' ' → logprob: -11.875062942504883
    4. ' ' → logprob: -13.250062942504883
    5. ' kii' → logprob: -14.000062942504883
    6. ' ko' → logprob: -14.625062942504883
    7. ' kiu' → logprob: -15.125062942504883
    8. ' Ki' → logprob: -15.250062942504883
    9. ' 
' → logprob: -16.125062942504883
    10. ' kih' → logprob: -16.250062942504883

Token 196: '_neighbors' (ID: 142549)
  Prédit: ' ki'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ki' → logprob: -0.12478233873844147
    2. '_' → logprob: -2.4997823238372803
    3. ' ' → logprob: -4.624782562255859
    4. '_neighbors' → logprob: -4.874782562255859
    5. ' _' → logprob: -5.124782562255859
    6. 's' → logprob: -6.624782562255859
    7. '_adj' → logprob: -6.937282562255859
    8. '(' → logprob: -7.249782562255859
    9. '  ' → logprob: -7.374782562255859
    10. '_k' → logprob: -7.374782562255859

Token 197: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00011200665176147595
    2. ' (' → logprob: -9.12511157989502
    3. '(t' → logprob: -13.75011157989502
    4. '(
' → logprob: -13.75011157989502
    5. '
' → logprob: -14.87511157989502
    6. ',' → logprob: -16.375112533569336
    7. '```' → logprob: -16.375112533569336
    8. ' ' → logprob: -16.500112533569336
    9. '(k' → logprob: -17.000112533569336
    10. 'ki' → logprob: -17.125112533569336

Token 198: 'ki' (ID: 3129)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05749040096998215
    2. 'ki' → logprob: -2.932490348815918
    3. ' ki' → logprob: -6.057490348815918
    4. ')' → logprob: -8.682490348815918
    5. 'k' → logprob: -10.807490348815918
    6. 'Ki' → logprob: -11.307490348815918
    7. '
' → logprob: -11.432490348815918
    8. ' (' → logprob: -11.557490348815918
    9. '(k' → logprob: -11.807490348815918
    10. 't' → logprob: -12.057490348815918

Token 199: ',' (ID: 11)
  Prédit: '[t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[t' → logprob: -0.040452562272548676
    2. ',' → logprob: -3.290452480316162
    3. '[' → logprob: -6.540452480316162
    4. ',t' → logprob: -7.165452480316162
    5. ')[' → logprob: -10.54045295715332
    6. '[
' → logprob: -10.66545295715332
    7. ',[' → logprob: -10.79045295715332
    8. ' ,' → logprob: -10.91545295715332
    9. ' [' → logprob: -11.04045295715332
    10. 't' → logprob: -11.16545295715332

Token 200: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.038064904510974884
    2. ' t' → logprob: -3.288064956665039
    3. '	t' → logprob: -11.538064956665039
    4. '[t' → logprob: -12.663064956665039
    5. ')t' → logprob: -12.913064956665039
    6. '
' → logprob: -13.288064956665039
    7. '   ' → logprob: -13.288064956665039
    8. '`t' → logprob: -13.413064956665039
    9. ')' → logprob: -13.788064956665039
    10. '[' → logprob: -14.663064956665039

Token 201: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00013774730905424803
    2. '):
' → logprob: -9.875137329101562
    3. ' ):' → logprob: -10.250137329101562
    4. ':' → logprob: -10.375137329101562
    5. ')' → logprob: -11.000137329101562
    6. '   ' → logprob: -13.875137329101562
    7. ']:' → logprob: -14.625137329101562
    8. '):
' → logprob: -14.750137329101562
    9. ',' → logprob: -15.625137329101562
    10. '>:' → logprob: -15.750137329101562

Token 202: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9026299715042114
    2. '       ' → logprob: -1.4026299715042114
    3. ' ' → logprob: -2.027629852294922
    4. '
' → logprob: -2.777629852294922
    5. '        ' → logprob: -3.152629852294922
    6. ' 
' → logprob: -3.777629852294922
    7. '<|end|>' → logprob: -3.902629852294922
    8. '        
' → logprob: -4.027629852294922
    9. ',' → logprob: -4.277629852294922
    10. ' if' → logprob: -4.402629852294922

Token 203: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.015218253247439861
    2. 'if' (adapté à ' if') → logprob: -4.265218257904053
    3. '   ' → logprob: -8.015217781066895
    4. '
' → logprob: -8.890217781066895
    5. '    ' → logprob: -9.140217781066895
    6. ' available' → logprob: -9.390217781066895
    7. '       ' → logprob: -9.515217781066895
    8. '           ' → logprob: -9.765217781066895
    9. ' color' → logprob: -10.015217781066895
    10. ' new' → logprob: -10.265217781066895

Token 204: ' is' (ID: 382)
  Prédit: ' seen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' seen' → logprob: -0.0019627707079052925
    2. 'seen' → logprob: -6.376962661743164
    3. '_seen' → logprob: -9.501962661743164
    4. ' not' → logprob: -10.251962661743164
    5. ' see' → logprob: -10.626962661743164
    6. '   ' → logprob: -10.626962661743164
    7. '    ' → logprob: -10.751962661743164
    8. ' unseen' → logprob: -10.876962661743164
    9. ' ' → logprob: -11.001962661743164
    10. ' ' → logprob: -12.126962661743164

Token 205: '_un' (ID: 11119)
  Prédit: '_seen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_seen' → logprob: -0.41708099842071533
    2. ' seen' → logprob: -2.042080879211426
    3. 'seen' → logprob: -2.542080879211426
    4. '_not' → logprob: -3.292080879211426
    5. ' not' → logprob: -3.417080879211426
    6. '_' → logprob: -4.167080879211426
    7. 'not' → logprob: -5.042080879211426
    8. ' ' → logprob: -5.042080879211426
    9. '_valid' → logprob: -5.354580879211426
    10. ' unseen' → logprob: -5.667080879211426

Token 206: 'visited' (ID: 52453)
  Prédit: 'seen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seen' → logprob: -0.009194830432534218
    2. 'visited' → logprob: -5.134194850921631
    3. 'se' → logprob: -6.634194850921631
    4. '_seen' → logprob: -7.759194850921631
    5. '```' → logprob: -7.884194850921631
    6. 'een' → logprob: -8.634194374084473
    7. 's' → logprob: -9.384194374084473
    8. '   ' → logprob: -9.509194374084473
    9. 'processed' → logprob: -9.634194374084473
    10. 'marked' → logprob: -9.884194374084473

Token 207: '(se' (ID: 19430)
  Prédit: '(se'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(se' → logprob: -0.002126587787643075
    2. '(' → logprob: -6.502126693725586
    3. ' (' → logprob: -8.377126693725586
    4. 'seen' → logprob: -8.502126693725586
    5. ' seen' → logprob: -9.377126693725586
    6. '_seen' → logprob: -10.002126693725586
    7. '(s' → logprob: -11.252126693725586
    8. '(ne' → logprob: -11.502126693725586
    9. 'se' → logprob: -11.627126693725586
    10. '_se' → logprob: -12.502126693725586

Token 208: 'en' (ID: 262)
  Prédit: 'en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -8.65707261255011e-06
    2. '(en' → logprob: -12.500008583068848
    3. ' en' → logprob: -13.750008583068848
    4. 'e' → logprob: -13.750008583068848
    5. '
' → logprob: -14.750008583068848
    6. '_en' → logprob: -15.500008583068848
    7. '

' → logprob: -15.500008583068848
    8. 'ен' → logprob: -15.500008583068848
    9. '	en' → logprob: -15.625008583068848
    10. 'env' → logprob: -15.625008583068848

Token 209: ',' (ID: 11)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03816221281886101
    2. ',' → logprob: -3.2881622314453125
    3. ')[' → logprob: -10.413162231445312
    4. ')' → logprob: -10.538162231445312
    5. ',[' → logprob: -10.788162231445312
    6. ' ,' → logprob: -11.788162231445312
    7. '```' → logprob: -12.288162231445312
    8. ',
' → logprob: -12.288162231445312
    9. ' [' → logprob: -12.413162231445312
    10. 'neighbor' → logprob: -12.538162231445312

Token 210: ' neighbor' (ID: 13034)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.08902834355831146
    2. ' neighbor' → logprob: -2.4640283584594727
    3. ')' → logprob: -10.464028358459473
    4. '   ' → logprob: -11.464028358459473
    5. '_neighbor' → logprob: -11.714028358459473
    6. ' ' → logprob: -12.089028358459473
    7. 'ne' → logprob: -12.089028358459473
    8. '
' → logprob: -12.464028358459473
    9. 'neighbors' → logprob: -12.651528358459473
    10. '[' → logprob: -13.151528358459473

Token 211: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02148614078760147
    2. '):
' → logprob: -4.396486282348633
    3. ' ):' → logprob: -5.021486282348633
    4. ')' → logprob: -6.146486282348633
    5. ':' → logprob: -9.271486282348633
    6. ' ):
' → logprob: -9.896486282348633
    7. ' )' → logprob: -10.396486282348633
    8. '):

' → logprob: -12.521486282348633
    9. 'and' → logprob: -12.646486282348633
    10. ' and' → logprob: -12.771486282348633

Token 212: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006263881456106901
    2. '                
' → logprob: -5.381263732910156
    3. ',' → logprob: -7.881263732910156
    4. '                ' → logprob: -8.256263732910156
    5. ' and' → logprob: -8.756263732910156
    6. ':' → logprob: -8.881263732910156
    7. ' ' → logprob: -9.006263732910156
    8. '            
' → logprob: -9.256263732910156
    9. '           ' → logprob: -9.506263732910156
    10. ' 
' → logprob: -9.881263732910156

Token 213: ' if' (ID: 538)
  Prédit: ' color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' color' → logprob: -1.5209763050079346
    2. 'color' → logprob: -1.5209763050079346
    3. ' new' → logprob: -1.8959763050079346
    4. 'available' → logprob: -2.3959763050079346
    5. 'new' → logprob: -2.8959763050079346
    6. ' available' → logprob: -3.3959763050079346
    7. 'seen' → logprob: -3.5209763050079346
    8. ' colors' → logprob: -4.0209760665893555
    9. 'colors' → logprob: -4.0209760665893555
    10. 'count' → logprob: -4.2709760665893555

Token 214: ' not' (ID: 625)
  Prédit: ' seen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' seen' → logprob: -0.5826943516731262
    2. ' s' → logprob: -1.2076942920684814
    3. ' get' → logprob: -2.4576942920684814
    4. ' k' → logprob: -4.3326945304870605
    5. ' is' → logprob: -4.5826945304870605
    6. 's' → logprob: -4.9576945304870605
    7. ' not' → logprob: -5.3326945304870605
    8. ' has' → logprob: -5.7076945304870605
    9. 'seen' → logprob: -5.7076945304870605
    10. 'k' → logprob: -6.2701945304870605

Token 215: ' can' (ID: 665)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.9848843812942505
    2. ' has' → logprob: -1.8598843812942505
    3. ' can' → logprob: -1.9848843812942505
    4. 'is' → logprob: -2.109884262084961
    5. 'can' → logprob: -2.484884262084961
    6. 'has' → logprob: -3.234884262084961
    7. ' check' → logprob: -4.234884262084961
    8. ' update' → logprob: -5.109884262084961
    9. 'check' → logprob: -5.422384262084961
    10. ' s' → logprob: -5.672384262084961

Token 216: '_p' (ID: 1359)
  Prédit: '_use'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_use' → logprob: -0.721798300743103
    2. '_visit' → logprob: -1.721798300743103
    3. '_pro' → logprob: -2.4717984199523926
    4. '_color' → logprob: -2.5967984199523926
    5. '_assign' → logprob: -2.8467984199523926
    6. '_' → logprob: -3.7217984199523926
    7. '_p' → logprob: -3.7217984199523926
    8. '_allocate' → logprob: -4.221798419952393
    9. '_place' → logprob: -4.471798419952393
    10. '_continue' → logprob: -4.596798419952393

Token 217: 'aint' (ID: 4649)
  Prédit: 'rop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rop' → logprob: -0.5061675310134888
    2. 'rocess' → logprob: -1.6311675310134888
    3. 'ro' → logprob: -2.131167411804199
    4. 'ass' → logprob: -3.756167411804199
    5. 'aint' → logprob: -3.881167411804199
    6. 'ush' → logprob: -4.381167411804199
    7. 'rov' → logprob: -4.631167411804199
    8. 'lay' → logprob: -5.756167411804199
    9. 'ut' → logprob: -5.881167411804199
    10. 'ros' → logprob: -6.756167411804199

Token 218: '(s' (ID: 1858)
  Prédit: '(se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(se' → logprob: -0.05648370832204819
    2. '(s' → logprob: -3.931483745574951
    3. '(ne' → logprob: -4.431483745574951
    4. '_neighbor' → logprob: -4.681483745574951
    5. '_node' → logprob: -5.806483745574951
    6. '(' → logprob: -5.931483745574951
    7. '(t' → logprob: -6.806483745574951
    8. '(k' → logprob: -7.056483745574951
    9. '_' → logprob: -7.306483745574951
    10. '_with' → logprob: -7.556483745574951

Token 219: '):
' (ID: 1883)
  Prédit: ' ,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ,' → logprob: -0.8605960607528687
    2. ',' → logprob: -0.9855960607528687
    3. '(se' → logprob: -2.485596179962158
    4. ' ' → logprob: -3.485596179962158
    5. ' <' → logprob: -3.610596179962158
    6. ' >' → logprob: -4.985596179962158
    7. '<' → logprob: -5.610596179962158
    8. ' )' → logprob: -5.610596179962158
    9. '(' → logprob: -5.610596179962158
    10. '):
' → logprob: -5.735596179962158

Token 220: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.08558563888072968
    2. ':' → logprob: -2.960585594177246
    3. ':
' → logprob: -4.460585594177246
    4. ' :' → logprob: -5.335585594177246
    5. ',' → logprob: -5.585585594177246
    6. '               ' → logprob: -5.960585594177246
    7. '                    ' → logprob: -6.710585594177246
    8. ' :
' → logprob: -7.335585594177246
    9. '):
' → logprob: -7.460585594177246
    10. '                    
' → logprob: -7.460585594177246

Token 221: ' print' (ID: 2123)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.964593231678009
    2. ' break' → logprob: -1.5895931720733643
    3. ' return' → logprob: -1.9645931720733643
    4. 'break' → logprob: -1.9645931720733643
    5. 'return' → logprob: -2.4645931720733643
    6. '                       ' → logprob: -3.2145931720733643
    7. '               ' → logprob: -5.964593410491943
    8. '           ' → logprob: -6.089593410491943
    9. '   ' → logprob: -6.339593410491943
    10. '       ' → logprob: -6.464593410491943

Token 222: '_zero' (ID: 53468)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.1274397373199463
    2. '(' → logprob: -2.6274397373199463
    3. '(-' → logprob: -3.1274397373199463
    4. '('' → logprob: -5.752439498901367
    5. '("-' → logprob: -8.377439498901367
    6. '(":' → logprob: -10.377439498901367
    7. '(
' → logprob: -10.502439498901367
    8. ' ("' → logprob: -11.002439498901367
    9. '()' → logprob: -11.252439498901367
    10. '(False' → logprob: -11.252439498901367

Token 223: '_and' (ID: 18645)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.22559013962745667
    2. '()
' → logprob: -1.6005901098251343
    3. '()\' → logprob: -9.475589752197266
    4. '()
' → logprob: -10.350589752197266
    5. '(' → logprob: -10.475589752197266
    6. '()

' → logprob: -10.975589752197266
    7. '()`' → logprob: -11.475589752197266
    8. ' ()' → logprob: -12.350589752197266
    9. ' ()
' → logprob: -13.975589752197266
    10. '(())
' → logprob: -14.100589752197266

Token 224: '_exit' (ID: 41242)
  Prédit: 'xit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xit' → logprob: -0.5892980098724365
    2. 'exit' → logprob: -0.8392980098724365
    3. 'x' → logprob: -5.089298248291016
    4. 'return' → logprob: -5.089298248291016
    5. 'break' → logprob: -7.589298248291016
    6. ' exit' → logprob: -8.589298248291016
    7. 'quit' → logprob: -9.214298248291016
    8. 'nd' → logprob: -10.339298248291016
    9. 'n' → logprob: -10.714298248291016
    10. 'eturn' → logprob: -10.964298248291016

Token 225: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.008693515323102474
    2. '()
' → logprob: -4.758693695068359
    3. '(' → logprob: -10.00869369506836
    4. '()

' → logprob: -10.63369369506836
    5. '()`' → logprob: -12.13369369506836
    6. '()
' → logprob: -13.75869369506836
    7. ' ()' → logprob: -13.75869369506836
    8. '(
' → logprob: -14.13369369506836
    9. '()\' → logprob: -14.38369369506836
    10. '()"' → logprob: -14.38369369506836

Token 226: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.012029088102281094
    2. '                   ' → logprob: -5.26202917098999
    3. '                
' → logprob: -5.51202917098999
    4. '                    
' → logprob: -7.26202917098999
    5. '                ' → logprob: -7.51202917098999
    6. '
' → logprob: -8.637028694152832
    7. ' ' → logprob: -9.012028694152832
    8. '           ' → logprob: -9.137028694152832
    9. '  
' → logprob: -9.262028694152832
    10. ')' → logprob: -9.262028694152832

Token 227: ' mark' (ID: 1983)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8381219506263733
    2. 'seen' → logprob: -1.5881218910217285
    3. 's' → logprob: -2.3381218910217285
    4. ' s' → logprob: -2.4631218910217285
    5. ' seen' → logprob: -2.4631218910217285
    6. ' new' → logprob: -3.3381218910217285
    7. ' color' → logprob: -4.8381218910217285
    8. '                   ' → logprob: -5.2131218910217285
    9. 'new' → logprob: -5.2131218910217285
    10. '   ' → logprob: -5.4631218910217285

Token 228: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6696246266365051
    2. '_seen' → logprob: -0.9196246266365051
    3. '_as' → logprob: -2.4196245670318604
    4. 'seen' → logprob: -8.669624328613281
    5. '(se' → logprob: -9.419624328613281
    6. 'as' → logprob: -9.419624328613281
    7. '_un' → logprob: -9.669624328613281
    8. '_se' → logprob: -10.419624328613281
    9. 'visited' → logprob: -10.669624328613281
    10. '_node' → logprob: -12.419624328613281

Token 229: 'visited' (ID: 52453)
  Prédit: 'visited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.5962931513786316
    2. 'seen' → logprob: -0.8462931513786316
    3. '_seen' → logprob: -4.471292972564697
    4. 'as' → logprob: -5.221292972564697
    5. '_' → logprob: -6.471292972564697
    6. 'neighbor' → logprob: -6.971292972564697
    7. 'node' → logprob: -8.346293449401855
    8. '_as' → logprob: -8.471293449401855
    9. 'paint' → logprob: -8.596293449401855
    10. 'todo' → logprob: -9.971293449401855

Token 230: '(se' (ID: 19430)
  Prédit: '(se'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(se' → logprob: -0.0006909898947924376
    2. ' (' → logprob: -7.375690937042236
    3. '(' → logprob: -10.250691413879395
    4. 'seen' → logprob: -11.250691413879395
    5. '```' → logprob: -11.750691413879395
    6. ' seen' → logprob: -12.750691413879395
    7. '_seen' → logprob: -13.750691413879395
    8. '(s' → logprob: -13.875691413879395
    9. '   ' → logprob: -14.375691413879395
    10. '
' → logprob: -14.875691413879395

Token 231: 'en' (ID: 262)
  Prédit: 'en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -3.173704271830502e-06
    2. 'e' → logprob: -13.87500286102295
    3. '(en' → logprob: -13.87500286102295
    4. ' en' → logprob: -14.87500286102295
    5. 'n' → logprob: -15.00000286102295
    6. '[' → logprob: -16.375003814697266
    7. 'ен' → logprob: -16.625003814697266
    8. '	en' → logprob: -16.625003814697266
    9. 'end' → logprob: -17.125003814697266
    10. 'ent' → logprob: -17.250003814697266

Token 232: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009980365866795182
    2. '[' → logprob: -7.000998020172119
    3. ' ,' → logprob: -9.625998497009277
    4. ',[' → logprob: -12.000998497009277
    5. ',
' → logprob: -12.125998497009277
    6. '```' → logprob: -13.250998497009277
    7. ')' → logprob: -13.625998497009277
    8. ',n' → logprob: -13.750998497009277
    9. ')[' → logprob: -14.000998497009277
    10. '<|end|>' → logprob: -14.375998497009277

Token 233: ' neighbor' (ID: 13034)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.25201472640037537
    2. ' neighbor' → logprob: -1.5020147562026978
    3. 'seen' → logprob: -11.002015113830566
    4. '
' → logprob: -11.002015113830566
    5. ')' → logprob: -12.127015113830566
    6. 'todo' → logprob: -12.314515113830566
    7. '```' → logprob: -12.377015113830566
    8. '   ' → logprob: -12.439515113830566
    9. ' ' → logprob: -12.877015113830566
    10. 't' → logprob: -13.064515113830566

Token 234: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012118533049942926
    2. ' ,' → logprob: -9.750121116638184
    3. ')' → logprob: -10.375121116638184
    4. '               ' → logprob: -12.000121116638184
    5. ',s' → logprob: -12.000121116638184
    6. 's' → logprob: -12.375121116638184
    7. '   ' → logprob: -12.750121116638184
    8. '                   ' → logprob: -12.875121116638184
    9. '[' → logprob: -12.875121116638184
    10. '),' → logprob: -13.250121116638184

Token 235: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.30085501074790955
    2. 'k' → logprob: -1.425855040550232
    3. 'get' → logprob: -4.8008551597595215
    4. 'seen' → logprob: -5.4258551597595215
    5. ' s' → logprob: -5.9258551597595215
    6. 'de' → logprob: -6.1758551597595215
    7. ' k' → logprob: -7.4258551597595215
    8. 'se' → logprob: -8.425854682922363
    9. 'subtract' → logprob: -8.550854682922363
    10. 'max' → logprob: -9.175854682922363

Token 236: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.20296238362789154
    2. ')' → logprob: -1.8279623985290527
    3. '-' → logprob: -4.202962398529053
    4. ' )
' → logprob: -5.327962398529053
    5. ' -' → logprob: -6.827962398529053
    6. '               ' → logprob: -7.202962398529053
    7. ' )' → logprob: -7.327962398529053
    8. '                   ' → logprob: -8.577961921691895
    9. '           ' → logprob: -9.452961921691895
    10. ')
' → logprob: -9.702961921691895

Token 237: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006780738476663828
    2. '                
' → logprob: -5.506780624389648
    3. '                ' → logprob: -6.506780624389648
    4. '                   ' → logprob: -8.006780624389648
    5. ' ' → logprob: -8.631780624389648
    6. ' s' → logprob: -9.006780624389648
    7. '              ' → logprob: -9.381780624389648
    8. ' 
' → logprob: -9.381780624389648
    9. ',' → logprob: -9.631780624389648
    10. '                 
' → logprob: -9.631780624389648

Token 238: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -1.1128250360488892
    2. 'todo' → logprob: -1.2378250360488892
    3. 'de' → logprob: -1.7378250360488892
    4. 'add' → logprob: -2.1128249168395996
    5. 'append' → logprob: -2.9878249168395996
    6. 'enqueue' → logprob: -3.7378249168395996
    7. 'push' → logprob: -5.8628249168396
    8. 'update' → logprob: -5.9878249168396
    9. 'increment' → logprob: -6.4878249168396
    10. ' decrement' → logprob: -6.8628249168396

Token 239: ' =' (ID: 314)
  Prédit: ' -='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.3842969238758087
    2. '-=' → logprob: -1.5092968940734863
    3. '=' → logprob: -3.3842968940734863
    4. '+=' → logprob: -3.5092968940734863
    5. ' +=' → logprob: -3.6342968940734863
    6. ' =' → logprob: -4.884296894073486
    7. '-' → logprob: -8.634297370910645
    8. ' ' → logprob: -11.009297370910645
    9. '    ' → logprob: -12.384297370910645
    10. '            ' → logprob: -12.509297370910645

Token 240: ' decrement' (ID: 121877)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0054038763046265
    2. 'max' → logprob: -1.0054038763046265
    3. ' max' → logprob: -2.130403995513916
    4. ' s' → logprob: -3.130403995513916
    5. 'de' → logprob: -3.380403995513916
    6. ' decrement' → logprob: -3.505403995513916
    7. 'subtract' → logprob: -4.630403995513916
    8. 'get' → logprob: -4.880403995513916
    9. ' decrease' → logprob: -5.130403995513916
    10. ' get' → logprob: -5.255403995513916

Token 241: '_s' (ID: 1278)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.00010032468708232045
    2. '_color' → logprob: -9.500100135803223
    3. '(' → logprob: -11.000100135803223
    4. 'ed' → logprob: -12.375100135803223
    5. '_count' → logprob: -13.750100135803223
    6. 'color' → logprob: -13.875100135803223
    7. '_by' → logprob: -14.125100135803223
    8. '_counter' → logprob: -14.750100135803223
    9. '_colors' → logprob: -15.000100135803223
    10. 's' → logprob: -15.375100135803223

Token 242: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.003755067242309451
    2. '(' → logprob: -5.62875509262085
    3. '(
' → logprob: -9.628754615783691
    4. 's' → logprob: -11.003754615783691
    5. '_by' → logprob: -11.128754615783691
    6. '_' → logprob: -11.878754615783691
    7. '_(' → logprob: -12.378754615783691
    8. '()' → logprob: -12.378754615783691
    9. ' (' → logprob: -12.628754615783691
    10. '```' → logprob: -12.878754615783691

Token 243: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002625715918838978
    2. ' )' → logprob: -6.502625942230225
    3. ')
' → logprob: -7.377625942230225
    4. ',' → logprob: -7.877625942230225
    5. '-' → logprob: -9.502625465393066
    6. ' -' → logprob: -11.252625465393066
    7. ' ,' → logprob: -12.502625465393066
    8. '1' → logprob: -12.502625465393066
    9. ' )
' → logprob: -12.627625465393066
    10. ')

' → logprob: -12.752625465393066

Token 244: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02479255199432373
    2. 'todo' → logprob: -3.7747926712036133
    3. '                
' → logprob: -7.024792671203613
    4. ' todo' → logprob: -8.899792671203613
    5. '			' → logprob: -9.149792671203613
    6. 'add' → logprob: -10.024792671203613
    7. 'print' → logprob: -10.149792671203613
    8. '                   ' → logprob: -10.274792671203613
    9. '                ' → logprob: -10.399792671203613
    10. '
' → logprob: -10.774792671203613

Token 245: ' append' (ID: 17147)
  Prédit: 'append'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' (adapté à ' append') → logprob: -0.7141948342323303
    2. 'add' → logprob: -0.8391948342323303
    3. '               ' → logprob: -2.8391947746276855
    4. 'enqueue' → logprob: -4.9641947746276855
    5. ' add' → logprob: -5.0891947746276855
    6. 'push' → logprob: -6.0891947746276855
    7. 'todo' → logprob: -6.2141947746276855
    8. ' append' → logprob: -6.5891947746276855
    9. '           ' → logprob: -7.4641947746276855
    10. '                   ' → logprob: -8.839195251464844

Token 246: '_t' (ID: 838)
  Prédit: '(todo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(todo' → logprob: -0.1303713619709015
    2. '_t' → logprob: -2.255371332168579
    3. '(t' → logprob: -4.130371570587158
    4. '_to' → logprob: -6.880371570587158
    5. 'todo' → logprob: -8.75537109375
    6. '(' → logprob: -9.50537109375
    7. 't' → logprob: -10.50537109375
    8. 'to' → logprob: -11.88037109375
    9. '(to' → logprob: -12.00537109375
    10. '	t' → logprob: -12.63037109375

Token 247: 'odo' (ID: 6397)
  Prédit: 'odo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odo' → logprob: -0.7603159546852112
    2. 'o' → logprob: -1.2603158950805664
    3. '(todo' → logprob: -2.0103158950805664
    4. 'todo' → logprob: -2.2603158950805664
    5. 'do' → logprob: -4.635315895080566
    6. '_t' → logprob: -8.010315895080566
    7. 'od' → logprob: -8.510315895080566
    8. 'oto' → logprob: -9.885315895080566
    9. 't' → logprob: -9.885315895080566
    10. 'to' → logprob: -10.135315895080566

Token 248: '(todo' (ID: 105468)
  Prédit: '(todo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(todo' → logprob: -1.652451464906335e-05
    2. '(' → logprob: -11.500016212463379
    3. ' (' → logprob: -12.250016212463379
    4. '(t' → logprob: -13.875016212463379
    5. '(
' → logprob: -15.250016212463379
    6. '```' → logprob: -16.500017166137695
    7. '(to' → logprob: -16.875017166137695
    8. '   ' → logprob: -16.875017166137695
    9. '(ticket' → logprob: -17.125017166137695
    10. 'todo' → logprob: -17.250017166137695

Token 249: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002973280206788331
    2. ' ,' → logprob: -8.500297546386719
    3. '(ne' → logprob: -10.250297546386719
    4. '(' → logprob: -10.625297546386719
    5. '(todo' → logprob: -11.375297546386719
    6. ')' → logprob: -11.375297546386719
    7. ',t' → logprob: -12.375297546386719
    8. 'neighbor' → logprob: -13.125297546386719
    9. ',
' → logprob: -13.250297546386719
    10. ',n' → logprob: -14.000297546386719

Token 250: ' neighbor' (ID: 13034)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.02324594371020794
    2. ' neighbor' → logprob: -3.7732460498809814
    3. 'ighbor' → logprob: -15.773245811462402
    4. '
' → logprob: -16.39824676513672
    5. 'ne' → logprob: -16.64824676513672
    6. '_neighbor' → logprob: -16.89824676513672
    7. 'n' → logprob: -17.02324676513672
    8. '```' → logprob: -17.14824676513672
    9. '   ' → logprob: -17.27324676513672
    10. 'neighbors' → logprob: -17.89824676513672

Token 251: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.045823566731997e-05
    2. ')
' → logprob: -10.875020027160645
    3. ' )' → logprob: -14.500020027160645
    4. ')return' → logprob: -14.625020027160645
    5. ')

' → logprob: -16.00002098083496
    6. '<|end|>' → logprob: -16.00002098083496
    7. '))' → logprob: -16.87502098083496
    8. ')add' → logprob: -17.25002098083496
    9. ')#' → logprob: -17.75002098083496
    10. '())' → logprob: -17.87502098083496

Token 252: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.12634225189685822
    2. ')' → logprob: -2.876342296600342
    3. '<|end|>' → logprob: -3.501342296600342
    4. '_' → logprob: -4.376342296600342
    5. '\' → logprob: -5.251342296600342
    6. 'd' → logprob: -5.876342296600342
    7. '```' → logprob: -6.501342296600342
    8. ' ' → logprob: -6.751342296600342
    9. '   ' → logprob: -6.751342296600342
    10. ',' → logprob: -6.876342296600342

Token 253: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.6880249977111816
    2. ' read' → logprob: -1.3130249977111816
    3. ' main' → logprob: -2.1880249977111816
    4. ' process' → logprob: -2.5630249977111816
    5. 'is' → logprob: -4.563024997711182
    6. 'read' → logprob: -4.938024997711182
    7. ' def' → logprob: -5.188024997711182
    8. 'process' → logprob: -5.188024997711182
    9. 'main' → logprob: -5.438024997711182
    10. 'def' → logprob: -6.438024997711182

Token 254: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -7.941850526549388e-06
    2. '_empty' → logprob: -12.625007629394531
    3. '_un' → logprob: -13.500007629394531
    4. '_' → logprob: -13.750007629394531
    5. '_s' → logprob: -14.500007629394531
    6. 'todo' → logprob: -14.875007629394531
    7. '\' → logprob: -15.375007629394531
    8. '__' → logprob: -15.625007629394531
    9. ' _' → logprob: -15.750007629394531
    10. '_b' → logprob: -15.750007629394531

Token 255: 'odo' (ID: 6397)
  Prédit: 'odo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odo' → logprob: -6.313314952421933e-05
    2. 'o' → logprob: -10.000062942504883
    3. 'ODO' → logprob: -12.250062942504883
    4. 'do' → logprob: -12.375062942504883
    5. '
' → logprob: -12.875062942504883
    6. '_' → logprob: -13.375062942504883
    7. 'r' → logprob: -13.875062942504883
    8. '_t' → logprob: -14.000062942504883
    9. '_do' → logprob: -14.500062942504883
    10. '```' → logprob: -14.875062942504883

Token 256: '_empty' (ID: 35051)
  Prédit: '_empty'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_empty' → logprob: -4.334533878136426e-05
    2. '_' → logprob: -10.125042915344238
    3. ' _' → logprob: -14.125042915344238
    4. '__' → logprob: -15.000042915344238
    5. '_emp' → logprob: -15.125042915344238
    6. '_EMPTY' → logprob: -15.375042915344238
    7. '_none' → logprob: -15.375042915344238
    8. '_not' → logprob: -15.500042915344238
    9. 'empty' → logprob: -15.625042915344238
    10. '_em' → logprob: -16.000043869018555

Token 257: '(todo' (ID: 105468)
  Prédit: '(todo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(todo' → logprob: -0.008854939602315426
    2. '(' → logprob: -4.758854866027832
    3. '(t' → logprob: -8.383854866027832
    4. ' (' → logprob: -11.633854866027832
    5. ':' → logprob: -14.383854866027832
    6. '()' → logprob: -14.758854866027832
    7. '(to' → logprob: -14.758854866027832
    8. '():' → logprob: -14.883854866027832
    9. '(ticket' → logprob: -15.383854866027832
    10. '(tok' → logprob: -16.00885581970215

Token 258: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0037402219604700804
    2. ')' → logprob: -5.878740310668945
    3. '):
' → logprob: -7.003740310668945
    4. ' ):' → logprob: -10.753740310668945
    5. '():' → logprob: -13.128740310668945
    6. '):
' → logprob: -13.753740310668945
    7. ':' → logprob: -14.378740310668945
    8. '):

' → logprob: -14.503740310668945
    9. ')：' → logprob: -15.253740310668945
    10. ' )' → logprob: -15.378740310668945

Token 259: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5768041610717773
    2. ' return' → logprob: -0.8268041610717773
    3. 'len' → logprob: -7.451804161071777
    4. ' not' → logprob: -8.826804161071777
    5. 'not' → logprob: -9.826804161071777
    6. '   ' → logprob: -9.951804161071777
    7. ' len' → logprob: -10.701804161071777
    8. '
' → logprob: -11.576804161071777
    9. ')' → logprob: -13.951804161071777
    10. '	return' → logprob: -13.951804161071777

Token 260: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.21771861612796783
    2. 'len' → logprob: -2.2177186012268066
    3. ' return' → logprob: -2.4677186012268066
    4. 'not' → logprob: -7.092718601226807
    5. ' len' → logprob: -7.217718601226807
    6. ' not' → logprob: -7.717718601226807
    7. '
' → logprob: -13.842719078063965
    8. '(len' → logprob: -14.217719078063965
    9. 'def' → logprob: -14.717719078063965
    10. '[len' → logprob: -14.717719078063965

Token 261: ' not' (ID: 625)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.4639635682106018
    2. ' len' → logprob: -1.213963508605957
    3. ' not' → logprob: -2.713963508605957
    4. 'not' → logprob: -4.838963508605957
    5. '(len' → logprob: -12.838963508605957
    6. ' ' → logprob: -13.338963508605957
    7. '	len' → logprob: -13.713963508605957
    8. '   ' → logprob: -14.338963508605957
    9. '[len' → logprob: -14.838963508605957
    10. ' ' → logprob: -15.838963508605957

Token 262: ' todo' (ID: 6520)
  Prédit: 'todo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'todo' → logprob: -0.25193899869918823
    2. ' todo' → logprob: -1.501939058303833
    3. '(todo' → logprob: -11.626938819885254
    4. ' len' → logprob: -14.626938819885254
    5. 'len' → logprob: -15.376938819885254
    6. 'bool' → logprob: -15.751938819885254
    7. 'to' → logprob: -16.12693977355957
    8. 'tod' → logprob: -17.00193977355957
    9. '.todo' → logprob: -17.00193977355957
    10. ' tod' → logprob: -17.37693977355957

Token 263: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 264: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 265: ' pop' (ID: 2735)
  Prédit: 'pop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pop' → logprob: -0.0021987867075949907
    2. ' pop' → logprob: -6.127198696136475
    3. 'p' → logprob: -12.127199172973633
    4. 'append' → logprob: -12.502199172973633
    5. 'def' → logprob: -13.127199172973633
    6. '	pop' → logprob: -14.377199172973633
    7. '.pop' → logprob: -15.002199172973633
    8. 'is' → logprob: -15.377199172973633
    9. 'get' → logprob: -15.502199172973633
    10. ' ' → logprob: -15.627199172973633

Token 266: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -0.018699290230870247
    2. '(todo' → logprob: -4.1436991691589355
    3. '(' → logprob: -6.3936991691589355
    4. '_' → logprob: -7.2686991691589355
    5. '(_' → logprob: -9.143699645996094
    6. 'todo' → logprob: -10.143699645996094
    7. '```' → logprob: -11.018699645996094
    8. '('_' → logprob: -11.143699645996094
    9. ')' → logprob: -11.268699645996094
    10. '(t' → logprob: -11.518699645996094

Token 267: 'odo' (ID: 6397)
  Prédit: 'odo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odo' → logprob: -0.07251958549022675
    2. '_t' → logprob: -3.072519540786743
    3. 'todo' → logprob: -3.822519540786743
    4. 'do' → logprob: -7.197519779205322
    5. '(todo' → logprob: -7.322519779205322
    6. 'o' → logprob: -8.822519302368164
    7. '_do' → logprob: -8.947519302368164
    8. '_' → logprob: -10.447519302368164
    9. 't' → logprob: -11.447519302368164
    10. '\' → logprob: -11.947519302368164

Token 268: '(todo' (ID: 105468)
  Prédit: '(todo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(todo' → logprob: -0.062104370445013046
    2. '(' → logprob: -2.8121044635772705
    3. '()' → logprob: -9.062104225158691
    4. '(ticket' → logprob: -11.687104225158691
    5. '(
' → logprob: -12.187104225158691
    6. ' (' → logprob: -12.437104225158691
    7. 'todo' → logprob: -14.312104225158691
    8. '(queue' → logprob: -15.062104225158691
    9. '(task' → logprob: -15.187104225158691
    10. '(

' → logprob: -15.437104225158691

Token 269: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.018697306513786316
    2. ')' → logprob: -4.018697261810303
    3. '):
' → logprob: -7.893697261810303
    4. '():' → logprob: -8.893697738647461
    5. '()' → logprob: -10.768697738647461
    6. ').' → logprob: -12.268697738647461
    7. ' ):' → logprob: -12.393697738647461
    8. '):

' → logprob: -12.643697738647461
    9. '):
' → logprob: -13.643697738647461
    10. ')p' → logprob: -14.518697738647461

Token 270: '   ' (ID: 271)
  Prédit: ' todo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' todo' → logprob: -0.048974063247442245
    2. 'todo' → logprob: -3.04897403717041
    3. ' return' → logprob: -8.04897403717041
    4. 'return' → logprob: -9.92397403717041
    5. '(todo' → logprob: -11.17397403717041
    6. ' tod' → logprob: -13.17397403717041
    7. '.todo' → logprob: -13.42397403717041
    8. '   ' → logprob: -15.79897403717041
    9. ' ' → logprob: -15.92397403717041
    10. ' todos' → logprob: -15.92397403717041

Token 271: ' return' (ID: 622)
  Prédit: 'todo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'todo' → logprob: -0.33663681149482727
    2. 'return' (adapté à ' return') → logprob: -1.5866367816925049
    3. ' return' → logprob: -3.086636781692505
    4. ' todo' → logprob: -3.336636781692505
    5. '(todo' → logprob: -12.461636543273926
    6. '.todo' → logprob: -13.586636543273926
    7. '   ' → logprob: -14.211636543273926
    8. '```' → logprob: -14.836636543273926
    9. 'tod' → logprob: -15.086636543273926
    10. '	return' → logprob: -15.336636543273926

Token 272: ' todo' (ID: 6520)
  Prédit: ' todo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' todo' → logprob: -0.029750604182481766
    2. 'todo' → logprob: -3.5297505855560303
    3. '(todo' → logprob: -16.65475082397461
    4. ' tod' → logprob: -17.40475082397461
    5. ' ' → logprob: -18.27975082397461
    6. '.todo' → logprob: -18.52975082397461
    7. '	t' → logprob: -20.27975082397461
    8. ' todos' → logprob: -20.77975082397461
    9. '`' → logprob: -21.52975082397461
    10. ' todd' → logprob: -21.65475082397461

Token 273: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.00033677343162707984
    2. '.pop' → logprob: -8.000336647033691
    3. '.' → logprob: -13.750336647033691
    4. 'pop' → logprob: -16.250337600708008
    5. 'p' → logprob: -16.375337600708008
    6. ' .' → logprob: -18.000337600708008
    7. '   ' → logprob: -19.625337600708008
    8. '```' → logprob: -19.750337600708008
    9. '.dequeue' → logprob: -19.750337600708008
    10. '.append' → logprob: -20.625337600708008

Token 274: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -0.014329914934933186
    2. 'op' → logprob: -4.26432991027832
    3. 'ople' → logprob: -8.76432991027832
    4. 'opl' → logprob: -11.88932991027832
    5. 'opt' → logprob: -13.63932991027832
    6. 'o' → logprob: -13.76432991027832
    7. 'oplevel' → logprob: -14.51432991027832
    8. 'opf' → logprob: -15.26432991027832
    9. 'opc' → logprob: -16.01432991027832
    10. 'opup' → logprob: -16.51432991027832

Token 275: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.201435849070549
    2. '(' → logprob: -1.7014358043670654
    3. '(
' → logprob: -11.076436042785645
    4. '(

' → logprob: -13.451436042785645
    5. '()
' → logprob: -13.576436042785645
    6. '()`' → logprob: -13.826436042785645
    7. '();' → logprob: -14.826436042785645
    8. '('' → logprob: -15.201436042785645
    9. '()(' → logprob: -15.201436042785645
    10. '()

' → logprob: -15.201436042785645

Token 276: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0076003652065992355
    2. ' def' → logprob: -5.2576003074646
    3. 's' → logprob: -7.0076003074646
    4. '[' → logprob: -8.007600784301758
    5. ' ' → logprob: -8.007600784301758
    6. '_' → logprob: -8.257600784301758
    7. '```' → logprob: -8.632600784301758
    8. '<|end|>' → logprob: -9.132600784301758
    9. ')' → logprob: -9.882600784301758
    10. '(' → logprob: -10.007600784301758

Token 277: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.00010402000043541193
    2. ' get' → logprob: -9.375103950500488
    3. 'append' → logprob: -11.625103950500488
    4. 'is' → logprob: -12.500103950500488
    5. 'def' → logprob: -13.000103950500488
    6. 'can' → logprob: -13.375103950500488
    7. 'print' → logprob: -14.250103950500488
    8. 'add' → logprob: -14.375103950500488
    9. 'pop' → logprob: -15.875103950500488
    10. '_get' → logprob: -16.125104904174805

Token 278: '_initial' (ID: 45740)
  Prédit: '_initial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_initial' → logprob: -0.006847861688584089
    2. '_neighbors' → logprob: -5.006847858428955
    3. '_' → logprob: -9.881848335266113
    4. '_next' → logprob: -10.631848335266113
    5. '_color' → logprob: -11.381848335266113
    6. 'initial' → logprob: -11.506848335266113
    7. '_s' → logprob: -11.881848335266113
    8. '_current' → logprob: -12.006848335266113
    9. '_init' → logprob: -12.381848335266113
    10. '_colors' → logprob: -12.881848335266113

Token 279: '_color' (ID: 15576)
  Prédit: '_color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_color' → logprob: -0.027067644521594048
    2. '_' → logprob: -3.6520676612854004
    3. ' _' → logprob: -7.9020676612854
    4. '_colors' → logprob: -9.027067184448242
    5. '_space' → logprob: -9.152067184448242
    6. '_s' → logprob: -10.152067184448242
    7. '_token' → logprob: -10.152067184448242
    8. '_p' → logprob: -10.902067184448242
    9. ')_' → logprob: -11.902067184448242
    10. '_user' → logprob: -11.902067184448242

Token 280: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.00023798657639417797
    2. '_' → logprob: -9.000238418579102
    3. '_counts' → logprob: -10.125238418579102
    4. ' _' → logprob: -10.375238418579102
    5. 's' → logprob: -10.500238418579102
    6. '_s' → logprob: -12.375238418579102
    7. '_co' → logprob: -12.750238418579102
    8. '_counter' → logprob: -13.250238418579102
    9. '_c' → logprob: -13.625238418579102
    10. 'count' → logprob: -14.125238418579102

Token 281: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.038066282868385315
    2. '(' → logprob: -3.2880663871765137
    3. '(s' → logprob: -11.288065910339355
    4. '(n' → logprob: -12.038065910339355
    5. '(
' → logprob: -12.163065910339355
    6. 's' → logprob: -15.663065910339355
    7. '(

' → logprob: -15.788065910339355
    8. '(key' → logprob: -16.288066864013672
    9. '((' → logprob: -16.538066864013672
    10. 'k' → logprob: -16.538066864013672

Token 282: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010659167310222983
    2. '):' → logprob: -7.001065731048584
    3. ' ,' → logprob: -9.376066207885742
    4. ',k' → logprob: -11.001066207885742
    5. ')' → logprob: -11.126066207885742
    6. ',
' → logprob: -11.501066207885742
    7. '):
' → logprob: -11.501066207885742
    8. 's' → logprob: -12.501066207885742
    9. ' ):' → logprob: -12.626066207885742
    10. ',s' → logprob: -13.626066207885742

Token 283: ' parent' (ID: 5980)
  Prédit: 'seen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'seen' → logprob: -0.3218567967414856
    2. ' seen' → logprob: -2.321856737136841
    3. 's' → logprob: -2.571856737136841
    4. ' s' → logprob: -3.821856737136841
    5. 'v' → logprob: -4.32185697555542
    6. 'k' → logprob: -4.32185697555542
    7. ')' → logprob: -4.94685697555542
    8. '_seen' → logprob: -4.94685697555542
    9. 'x' → logprob: -5.32185697555542
    10. 't' → logprob: -5.44685697555542

Token 284: '_color' (ID: 15576)
  Prédit: '_color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_color' → logprob: -0.9664373397827148
    2. ')' → logprob: -1.4664373397827148
    3. '_seen' → logprob: -1.4664373397827148
    4. '_s' → logprob: -2.216437339782715
    5. '_' → logprob: -3.966437339782715
    6. ')_' → logprob: -4.716437339782715
    7. '_used' → logprob: -4.841437339782715
    8. '_count' → logprob: -6.091437339782715
    9. '[' → logprob: -6.216437339782715
    10. 's' → logprob: -6.466437339782715

Token 285: '_count' (ID: 7536)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8590192198753357
    2. '_count' → logprob: -1.2340192794799805
    3. 'count' → logprob: -1.4840192794799805
    4. '):' → logprob: -3.2340192794799805
    5. ' count' → logprob: -5.1090192794799805
    6. 's' → logprob: -5.1090192794799805
    7. '):
' → logprob: -5.7340192794799805
    8. '-' → logprob: -6.4840192794799805
    9. ')-' → logprob: -7.6090192794799805
    10. '-count' → logprob: -7.9840192794799805

Token 286: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07015193998813629
    2. '):
' → logprob: -2.6951520442962646
    3. ')' → logprob: -9.445152282714844
    4. ' ):' → logprob: -9.570152282714844
    5. ',' → logprob: -10.945152282714844
    6. '):
' → logprob: -11.195152282714844
    7. '):

' → logprob: -11.945152282714844
    8. '=' → logprob: -12.195152282714844
    9. ' ):
' → logprob: -12.320152282714844
    10. '+' → logprob: -12.695152282714844

Token 287: '   ' (ID: 271)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.050284724682569504
    2. ' =' → logprob: -3.4252846240997314
    3. '   ' → logprob: -4.4252848625183105
    4. '=k' → logprob: -6.3002848625183105
    5. ':' → logprob: -6.8002848625183105
    6. ',' → logprob: -8.175284385681152
    7. '):
' → logprob: -8.300284385681152
    8. 'k' → logprob: -8.300284385681152
    9. '(k' → logprob: -8.300284385681152
    10. ' k' → logprob: -8.800284385681152

Token 288: ' return' (ID: 622)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.018290061503648758
    2. 'return' (adapté à ' return') → logprob: -4.518290042877197
    3. ' k' → logprob: -5.268290042877197
    4. ' return' → logprob: -6.393290042877197
    5. 'max' → logprob: -8.768290519714355
    6. '   ' → logprob: -9.018290519714355
    7. '`' → logprob: -10.268290519714355
    8. ' =' → logprob: -10.893290519714355
    9. '=' → logprob: -11.018290519714355
    10. '=k' → logprob: -11.518290519714355

Token 289: ' max' (ID: 2999)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0012177363969385624
    2. 'parent' → logprob: -7.251217842102051
    3. 'max' → logprob: -7.751217842102051
    4. ' k' → logprob: -9.62621784210205
    5. 'min' → logprob: -12.50121784210205
    6. '
' → logprob: -13.12621784210205
    7. ' max' → logprob: -13.50121784210205
    8. ' parent' → logprob: -13.75121784210205
    9. '   ' → logprob: -13.87621784210205
    10. '(k' → logprob: -14.12621784210205

Token 290: '(k' (ID: 12125)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.14297990500926971
    2. '(k' → logprob: -2.017979860305786
    3. '0' → logprob: -8.392979621887207
    4. '(
' → logprob: -11.267979621887207
    5. '(parent' → logprob: -11.517979621887207
    6. 'k' → logprob: -11.642979621887207
    7. '1' → logprob: -11.767979621887207
    8. ' (' → logprob: -12.017979621887207
    9. '(s' → logprob: -12.392979621887207
    10. ')' → logprob: -12.392979621887207

Token 291: '-' (ID: 12)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.018877703696489334
    2. '-' → logprob: -4.0188775062561035
    3. ',' → logprob: -7.3938775062561035
    4. '+' → logprob: -10.393877983093262
    5. ' ,' → logprob: -10.893877983093262
    6. ')' → logprob: -10.893877983093262
    7. ' ' → logprob: -11.268877983093262
    8. ' +' → logprob: -12.143877983093262
    9. '-parent' → logprob: -12.143877983093262
    10. ',parent' → logprob: -12.143877983093262

Token 292: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06915569305419922
    2. 'parent' → logprob: -2.944155693054199
    3. '2' → logprob: -4.319155693054199
    4. '(parent' → logprob: -7.819155693054199
    5. ' ' → logprob: -8.8191556930542
    6. 'len' → logprob: -9.0691556930542
    7. ' parent' → logprob: -9.0691556930542
    8. '(' → logprob: -10.8191556930542
    9. '
' → logprob: -11.1941556930542
    10. '[parent' → logprob: -11.8191556930542

Token 293: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16854342818260193
    2. '+' → logprob: -2.5435433387756348
    3. ' +' → logprob: -2.6685433387756348
    4. ' ,' → logprob: -5.293543338775635
    5. ')' → logprob: -6.668543338775635
    6. ' -' → logprob: -7.793543338775635
    7. ',
' → logprob: -8.668543815612793
    8. '+k' → logprob: -9.668543815612793
    9. '-' → logprob: -9.918543815612793
    10. ',k' → logprob: -10.168543815612793

Token 294: ' parent' (ID: 5980)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011252946220338345
    2. '1' → logprob: -4.6362528800964355
    3. ' ' → logprob: -6.5112528800964355
    4. 'parent' → logprob: -12.761253356933594
    5. ')' → logprob: -13.261253356933594
    6. '   ' → logprob: -13.386253356933594
    7. '
' → logprob: -13.386253356933594
    8. '  ' → logprob: -15.386253356933594
    9. 'k' → logprob: -15.761253356933594
    10. ' 
' → logprob: -15.823753356933594

Token 295: '_color' (ID: 15576)
  Prédit: '_color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_color' → logprob: -8.220573363360018e-05
    2. 'color' → logprob: -9.625082015991211
    3. 'Color' → logprob: -12.000082015991211
    4. ')' → logprob: -13.125082015991211
    5. ' color' → logprob: -13.125082015991211
    6. '_COLOR' → logprob: -13.625082015991211
    7. '_count' → logprob: -14.125082015991211
    8. '-color' → logprob: -14.250082015991211
    9. 's' → logprob: -14.375082015991211
    10. '0' → logprob: -14.625082015991211

Token 296: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.0019586095586419106
    2. 'count' → logprob: -6.251958847045898
    3. '_color' → logprob: -11.376958847045898
    4. 's' → logprob: -12.001958847045898
    5. '-' → logprob: -12.876958847045898
    6. ' count' → logprob: -13.251958847045898
    7. ')' → logprob: -13.501958847045898
    8. '
' → logprob: -13.876958847045898
    9. ''s' → logprob: -13.876958847045898
    10. '   ' → logprob: -14.376958847045898

Token 297: '-' (ID: 12)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.048272423446178436
    2. '+' → logprob: -3.5482723712921143
    3. ' +' → logprob: -4.298272609710693
    4. ' )' → logprob: -5.923272609710693
    5. ' -' → logprob: -6.923272609710693
    6. '-' → logprob: -7.048272609710693
    7. ')+' → logprob: -9.048272132873535
    8. ')
' → logprob: -10.673272132873535
    9. ',' → logprob: -10.923272132873535
    10. '+)' → logprob: -11.048272132873535

Token 298: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9981420336989686e-05
    2. ' ' → logprob: -10.875020027160645
    3. '
' → logprob: -15.437520027160645
    4. '0' → logprob: -15.437520027160645
    5. ')' → logprob: -15.875020027160645
    6. '<|end|>' → logprob: -16.312519073486328
    7. '2' → logprob: -16.625019073486328
    8. 'len' → logprob: -17.187519073486328
    9. '(' → logprob: -17.312519073486328
    10. '   ' → logprob: -17.375019073486328

Token 299: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.246537173457909e-06
    2. ')
' → logprob: -12.750003814697266
    3. ' )' → logprob: -13.750003814697266
    4. '   ' → logprob: -15.875003814697266
    5. '))' → logprob: -17.375003814697266
    6. '}' → logprob: -17.875003814697266
    7. ')return' → logprob: -18.625003814697266
    8. ')}' → logprob: -18.875003814697266
    9. ')+' → logprob: -19.000003814697266
    10. '())' → logprob: -19.125003814697266

Token 300: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1519780158996582
    2. '<|end|>' → logprob: -2.026978015899658
    3. ')' → logprob: -5.651978015899658
    4. '```' → logprob: -6.026978015899658
    5. '<|end|>' → logprob: -6.526978015899658
    6. ' def' → logprob: -7.151978015899658
    7. '   ' → logprob: -7.901978015899658
    8. '.' → logprob: -9.2769775390625
    9. '[' → logprob: -9.5269775390625
    10. ' ' → logprob: -9.6519775390625

Token 301: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.00786745548248291
    2. 'can' → logprob: -5.257867336273193
    3. 'def' → logprob: -6.507867336273193
    4. 'is' → logprob: -7.382867336273193
    5. 'append' → logprob: -8.132867813110352
    6. 'process' → logprob: -9.757867813110352
    7. 'de' → logprob: -10.132867813110352
    8. ' get' → logprob: -10.507867813110352
    9. 'initialize' → logprob: -10.882867813110352
    10. 'has' → logprob: -11.007867813110352

Token 302: '_neighbors' (ID: 142549)
  Prédit: '_neighbors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_neighbors' → logprob: -0.6336819529533386
    2. 'neighbors' → logprob: -0.7586819529533386
    3. 'color' → logprob: -8.133682250976562
    4. 'adj' → logprob: -8.633682250976562
    5. 'initial' → logprob: -8.758682250976562
    6. 'neighbor' → logprob: -9.008682250976562
    7. 'un' → logprob: -9.758682250976562
    8. '_initial' → logprob: -10.008682250976562
    9. '```' → logprob: -10.258682250976562
    10. '_un' → logprob: -10.758682250976562

Token 303: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00017350474081467837
    2. '<|end|>' → logprob: -8.750173568725586
    3. '(
' → logprob: -12.000173568725586
    4. ' (' → logprob: -12.500173568725586
    5. '<|end|>' → logprob: -13.875173568725586
    6. '```' → logprob: -14.250173568725586
    7. '((' → logprob: -15.250173568725586
    8. ')' → logprob: -15.250173568725586
    9. '(KERN' → logprob: -15.250173568725586
    10. ',' → logprob: -15.500173568725586

Token 304: 'ki' (ID: 3129)
  Prédit: 'ki'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ki' → logprob: -0.007627211511135101
    2. ' ki' → logprob: -4.882627010345459
    3. '(' → logprob: -11.507627487182617
    4. ')' → logprob: -12.007627487182617
    5. 'kii' → logprob: -13.382627487182617
    6. 'ko' → logprob: -13.632627487182617
    7. 'Ki' → logprob: -14.257627487182617
    8. ' Ki' → logprob: -14.757627487182617
    9. 'KI' → logprob: -15.882627487182617
    10. ',' → logprob: -16.257627487182617

Token 305: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.198043699143454e-05
    2. '[' → logprob: -9.375091552734375
    3. ' ,' → logprob: -12.750091552734375
    4. ',[' → logprob: -13.125091552734375
    5. ',
' → logprob: -13.375091552734375
    6. '   ' → logprob: -15.375091552734375
    7. ',

' → logprob: -16.000091552734375
    8. '[],' → logprob: -16.625091552734375
    9. ')' → logprob: -16.750091552734375
    10. '```' → logprob: -17.000091552734375

Token 306: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.6331125497817993
    2. ' t' → logprob: -0.7581125497817993
    3. ')' → logprob: -8.133112907409668
    4. ')t' → logprob: -10.258112907409668
    5. ' ' → logprob: -10.383112907409668
    6. '	t' → logprob: -10.633112907409668
    7. '_t' → logprob: -11.258112907409668
    8. 's' → logprob: -11.508112907409668
    9. 'get' → logprob: -11.633112907409668
    10. ' get' → logprob: -11.820612907409668

Token 307: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00634513795375824
    2. ',' → logprob: -6.006345272064209
    3. '):
' → logprob: -6.381345272064209
    4. ')' → logprob: -6.756345272064209
    5. '[t' → logprob: -7.006345272064209
    6. ')[' → logprob: -9.75634479522705
    7. '[' → logprob: -11.63134479522705
    8. '(t' → logprob: -12.00634479522705
    9. ',t' → logprob: -12.38134479522705
    10. ']:' → logprob: -12.50634479522705

Token 308: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.017396939918398857
    2. ' return' → logprob: -4.142396926879883
    3. '   ' → logprob: -6.642396926879883
    4. 'ki' → logprob: -9.892396926879883
    5. '	return' → logprob: -12.517396926879883
    6. ' ki' → logprob: -12.642396926879883
    7. '    
' → logprob: -16.267396926879883
    8. 'eturn' → logprob: -16.517396926879883
    9. ' ' → logprob: -16.642396926879883
    10. '```' → logprob: -16.892396926879883

Token 309: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00374402548186481
    2. 'ki' → logprob: -5.628744125366211
    3. ' return' → logprob: -8.878744125366211
    4. '   ' → logprob: -12.753744125366211
    5. ' ki' → logprob: -13.753744125366211
    6. '```' → logprob: -15.628744125366211
    7. '	return' → logprob: -16.37874412536621
    8. 'for' → logprob: -16.37874412536621
    9. 'KI' → logprob: -16.62874412536621
    10. 'Ki' → logprob: -17.00374412536621

Token 310: ' ki' (ID: 3314)
  Prédit: 'ki'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ki' → logprob: -0.06196858361363411
    2. ' ki' → logprob: -2.8119685649871826
    3. 'kii' → logprob: -14.686968803405762
    4. '   ' → logprob: -16.186967849731445
    5. 'ko' → logprob: -16.311967849731445
    6. 'Ki' → logprob: -16.561967849731445
    7. ' Ki' → logprob: -16.936967849731445
    8. ' ' → logprob: -17.311967849731445
    9. 'ti' → logprob: -17.436967849731445
    10. '[' → logprob: -17.811967849731445

Token 311: '[t' (ID: 32184)
  Prédit: '[t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[t' → logprob: -4.656383680412546e-05
    2. '[' → logprob: -10.000046730041504
    3. 't' → logprob: -14.375046730041504
    4. '[
' → logprob: -15.500046730041504
    5. ' [' → logprob: -15.750046730041504
    6. '[token' → logprob: -16.875045776367188
    7. '[T' → logprob: -17.500045776367188
    8. '[s' → logprob: -18.000045776367188
    9. '	t' → logprob: -18.125045776367188
    10. '
' → logprob: -18.500045776367188

Token 312: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008910943870432675
    2. ']' → logprob: -7.125891208648682
    3. '<|end|>' → logprob: -9.750890731811523
    4. ' )' → logprob: -11.125890731811523
    5. '）' → logprob: -12.250890731811523
    6. '}' → logprob: -13.250890731811523
    7. ')
' → logprob: -13.250890731811523
    8. ')]' → logprob: -13.250890731811523
    9. '])' → logprob: -13.375890731811523
    10. ' ' → logprob: -14.125890731811523

Token 313: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -8.232493564719334e-05
    2. '```' → logprob: -9.625082015991211
    3. ' def' → logprob: -11.125082015991211
    4. '-def' → logprob: -14.875082015991211
    5. 'Def' → logprob: -15.125082015991211
    6. '``' → logprob: -15.250082015991211
    7. '<|end|>' → logprob: -15.250082015991211
    8. '[' → logprob: -16.37508201599121
    9. '_def' → logprob: -16.50008201599121
    10. 'ndef' → logprob: -16.87508201599121

Token 314: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -3.173704271830502e-06
    2. ' is' → logprob: -13.12500286102295
    3. 'def' → logprob: -14.00000286102295
    4. '
' → logprob: -15.62500286102295
    5. 'can' → logprob: -17.500003814697266
    6. 'get' → logprob: -17.625003814697266
    7. '

' → logprob: -17.750003814697266
    8. '#' → logprob: -17.875003814697266
    9. '	is' → logprob: -17.875003814697266
    10. '`' → logprob: -18.000003814697266

Token 315: '_un' (ID: 11119)
  Prédit: '_un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_un' → logprob: -0.002017024904489517
    2. '_' → logprob: -6.252017021179199
    3. ' _' → logprob: -10.3770170211792
    4. '_seen' → logprob: -10.7520170211792
    5. '_se' → logprob: -12.2520170211792
    6. 'un' → logprob: -12.2520170211792
    7. '_is' → logprob: -12.5020170211792
    8. '_uns' → logprob: -12.5020170211792
    9. '_not' → logprob: -12.7520170211792
    10. '_s' → logprob: -12.7520170211792

Token 316: 'visited' (ID: 52453)
  Prédit: 'visited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.1602349877357483
    2. '_' → logprob: -1.9102349281311035
    3. 'v' → logprob: -12.535235404968262
    4. 'vis' → logprob: -13.285235404968262
    5. '_v' → logprob: -13.785235404968262
    6. 'visi' → logprob: -14.410235404968262
    7. '_vis' → logprob: -14.785235404968262
    8. '[' → logprob: -14.785235404968262
    9. '_un' → logprob: -14.910235404968262
    10. 's' → logprob: -15.035235404968262

Token 317: '(se' (ID: 19430)
  Prédit: '(se'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(se' → logprob: -6.2729995988775045e-06
    2. ' (' → logprob: -12.375006675720215
    3. '(' → logprob: -13.250006675720215
    4. '(
' → logprob: -16.3750057220459
    5. 'se' → logprob: -16.6250057220459
    6. ',se' → logprob: -17.8750057220459
    7. ',' → logprob: -18.8750057220459
    8. ' se' → logprob: -19.0000057220459
    9. '	se' → logprob: -19.0000057220459
    10. '(space' → logprob: -19.5000057220459

Token 318: 'en' (ID: 262)
  Prédit: 'en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -9.253090865968261e-06
    2. '(en' → logprob: -12.500009536743164
    3. '_en' → logprob: -13.250009536743164
    4. '_seen' → logprob: -13.625009536743164
    5. '[' → logprob: -14.375009536743164
    6. ' en' → logprob: -14.625009536743164
    7. 'ен' → logprob: -15.750009536743164
    8. '```' → logprob: -15.875009536743164
    9. 'n' → logprob: -16.125009536743164
    10. 'seen' → logprob: -16.125009536743164

Token 319: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010784220648929477
    2. ',se' → logprob: -6.8760786056518555
    3. ' ,' → logprob: -10.376078605651855
    4. '(se' → logprob: -11.626078605651855
    5. '[' → logprob: -12.751078605651855
    6. '<|end|>' → logprob: -14.001078605651855
    7. ')' → logprob: -14.626078605651855
    8. 'se' → logprob: -15.251078605651855
    9. ',s' → logprob: -16.00107765197754
    10. ',
' → logprob: -16.00107765197754

Token 320: ' li' (ID: 3476)
  Prédit: ' neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' neighbor' → logprob: -0.2541821300983429
    2. 'neighbor' → logprob: -1.5041821002960205
    3. ' node' → logprob: -6.2541823387146
    4. ')' → logprob: -8.754181861877441
    5. ' )' → logprob: -9.754181861877441
    6. 'node' → logprob: -9.879181861877441
    7. ' index' → logprob: -10.379181861877441
    8. 'index' → logprob: -12.129181861877441
    9. '_neighbor' → logprob: -12.254181861877441
    10. ' idx' → logprob: -13.129181861877441

Token 321: '):
' (ID: 1883)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.2585217356681824
    2. '[' → logprob: -2.133521795272827
    3. ',' → logprob: -2.758521795272827
    4. 'b' → logprob: -4.383521556854248
    5. 'near' → logprob: -4.758521556854248
    6. 'gh' → logprob: -5.258521556854248
    7. 'neighbor' → logprob: -5.258521556854248
    8. 'ght' → logprob: -5.258521556854248
    9. 'ne' → logprob: -6.133521556854248
    10. 'ber' → logprob: -6.758521556854248

Token 322: '   ' (ID: 271)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.0356847383081913
    2. 'return' → logprob: -3.535684823989868
    3. '   ' → logprob: -5.160684585571289
    4. '	return' → logprob: -9.160684585571289
    5. ':return' → logprob: -10.410684585571289
    6. ' seen' → logprob: -10.660684585571289
    7. '<|end|>' → logprob: -12.785684585571289
    8. 'se' → logprob: -12.910684585571289
    9. '):
' → logprob: -13.285684585571289
    10. 'eturn' → logprob: -13.285684585571289

Token 323: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6986928582191467
    2. 'return' (adapté à ' return') → logprob: -0.6986928582191467
    3. 'seen' → logprob: -5.573692798614502
    4. ' seen' → logprob: -6.448692798614502
    5. '   ' → logprob: -8.94869327545166
    6. 'se' → logprob: -11.07369327545166
    7. '_seen' → logprob: -12.82369327545166
    8. ':return' → logprob: -14.32369327545166
    9. '{return' → logprob: -14.44869327545166
    10. '(se' → logprob: -14.57369327545166

Token 324: ' seen' (ID: 6177)
  Prédit: 'seen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seen' → logprob: -0.4740789234638214
    2. ' seen' → logprob: -0.974078893661499
    3. 'se' → logprob: -13.474079132080078
    4. '_seen' → logprob: -15.599079132080078
    5. ' ' → logprob: -16.099079132080078
    6. '   ' → logprob: -16.349079132080078
    7. '(se' → logprob: -16.599079132080078
    8. 'Seen' → logprob: -17.724079132080078
    9. 'see' → logprob: -18.099079132080078
    10. ' se' → logprob: -18.474079132080078

Token 325: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.4849443838757e-06
    2. 'li' → logprob: -13.000004768371582
    3. '<li' → logprob: -13.500004768371582
    4. '[
' → logprob: -15.625004768371582
    5. '(li' → logprob: -15.750004768371582
    6. ' li' → logprob: -16.375003814697266
    7. '[int' → logprob: -16.375003814697266
    8. '_li' → logprob: -16.625003814697266
    9. '```' → logprob: -16.625003814697266
    10. '[l' → logprob: -17.000003814697266

Token 326: 'li' (ID: 1307)
  Prédit: 'li'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'li' → logprob: -0.0018774702912196517
    2. '[' → logprob: -6.376877307891846
    3. ' li' → logprob: -9.501877784729004
    4. ']' → logprob: -9.751877784729004
    5. '<li' → logprob: -10.876877784729004
    6. 'l' → logprob: -11.751877784729004
    7. '][' → logprob: -12.126877784729004
    8. '_li' → logprob: -12.626877784729004
    9. '/li' → logprob: -13.251877784729004
    10. '(li' → logprob: -13.376877784729004

Token 327: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.39657506346702576
    2. ']==' → logprob: -1.1465750932693481
    3. '==' → logprob: -5.146574974060059
    4. '[' → logprob: -5.771574974060059
    5. '==-' → logprob: -7.521574974060059
    6. ' ==' → logprob: -10.021574974060059
    7. '[
' → logprob: -10.521574974060059
    8. '[]' → logprob: -10.771574974060059
    9. '==
' → logprob: -10.896574974060059
    10. ')==' → logprob: -11.771574974060059

Token 328: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.09392821043729782
    2. ' ==' → logprob: -2.468928098678589
    3. '==-' → logprob: -5.593928337097168
    4. '<' → logprob: -6.843928337097168
    5. '==
' → logprob: -9.218928337097168
    6. '=' → logprob: -10.468928337097168
    7. ' ' → logprob: -10.718928337097168
    8. '[' → logprob: -11.218928337097168
    9. ' ' → logprob: -11.718928337097168
    10. ']==' → logprob: -11.968928337097168

Token 329: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.008614808320999146
    2. ' -' → logprob: -4.758615016937256
    3. '   ' → logprob: -16.008615493774414
    4. ' ' → logprob: -16.633615493774414
    5. '  ' → logprob: -17.383615493774414
    6. '	' → logprob: -17.758615493774414
    7. '−' → logprob: -17.883615493774414
    8. '‌' → logprob: -18.883615493774414
    9. '(-' → logprob: -19.133615493774414
    10. '1' → logprob: -20.133615493774414

Token 330: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -13.25000286102295
    3. '<|end|>' → logprob: -14.25000286102295
    4. '۱' → logprob: -17.500001907348633
    5. '```' → logprob: -17.750001907348633
    6. '   ' → logprob: -18.250001907348633
    7. '১' → logprob: -18.562501907348633
    8. '１' → logprob: -18.562501907348633
    9. '१' → logprob: -18.625001907348633
    10. '<|end|>' → logprob: -18.812501907348633

Token 331: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 332: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -5.9153885558771435e-06
    2. ' def' → logprob: -12.250005722045898
    3. '```' → logprob: -13.750005722045898
    4. '	def' → logprob: -17.6250057220459
    5. 'ndef' → logprob: -17.7500057220459
    6. 'Def' → logprob: -17.8750057220459
    7. '-def' → logprob: -19.1250057220459
    8. '``' → logprob: -19.5000057220459
    9. '   ' → logprob: -19.7500057220459
    10. ':def' → logprob: -20.2500057220459

Token 333: ' can' (ID: 665)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.011337812058627605
    2. 'can' → logprob: -4.511337757110596
    3. 'main' → logprob: -8.761338233947754
    4. ' print' → logprob: -10.011338233947754
    5. 'append' → logprob: -10.511338233947754
    6. 'paint' → logprob: -11.386338233947754
    7. 'def' → logprob: -11.511338233947754
    8. 'de' → logprob: -12.136338233947754
    9. 'initialize' → logprob: -12.261338233947754
    10. 'process' → logprob: -12.511338233947754

Token 334: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -4.596781946020201e-05
    2. '_' → logprob: -10.000045776367188
    3. ' _' → logprob: -14.750045776367188
    4. '_continue' → logprob: -15.750045776367188
    5. '_print' → logprob: -18.250045776367188
    6. 'paint' → logprob: -18.875045776367188
    7. '_append' → logprob: -19.125045776367188
    8. '_put' → logprob: -19.375045776367188
    9. '_process' → logprob: -19.375045776367188
    10. '_P' → logprob: -19.500045776367188

Token 335: 'aint' (ID: 4649)
  Prédit: 'aint'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aint' → logprob: -9.472211968386546e-05
    2. 'a' → logprob: -9.875094413757324
    3. 'ait' → logprob: -11.250094413757324
    4. 'r' → logprob: -11.750094413757324
    5. '_' → logprob: -11.875094413757324
    6. 'paint' → logprob: -12.625094413757324
    7. 'ain' → logprob: -12.750094413757324
    8. '```' → logprob: -13.375094413757324
    9. 'int' → logprob: -13.500094413757324
    10. '[' → logprob: -13.875094413757324

Token 336: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.023262133821845055
    2. '(' → logprob: -3.7732620239257812
    3. '(
' → logprob: -11.273262023925781
    4. 's' → logprob: -12.898262023925781
    5. '()' → logprob: -15.148262023925781
    6. ' (' → logprob: -15.523262023925781
    7. '(c' → logprob: -15.648262023925781
    8. '(

' → logprob: -15.648262023925781
    9. '(n' → logprob: -16.14826202392578
    10. '(count' → logprob: -16.52326202392578

Token 337: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01696385256946087
    2. ')' → logprob: -4.391963958740234
    3. '>' → logprob: -6.141963958740234
    4. '():' → logprob: -6.891963958740234
    5. ')>' → logprob: -7.766963958740234
    6. '):
' → logprob: -8.141963958740234
    7. ' >' → logprob: -8.641963958740234
    8. '()' → logprob: -9.141963958740234
    9. ' ):' → logprob: -9.141963958740234
    10. '()>' → logprob: -9.391963958740234

Token 338: '   ' (ID: 271)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.2210092842578888
    2. 'return' → logprob: -1.9710092544555664
    3. ' s' → logprob: -3.2210092544555664
    4. 's' → logprob: -3.9710092544555664
    5. '   ' → logprob: -8.721009254455566
    6. '>' → logprob: -10.471009254455566
    7. '(s' → logprob: -11.471009254455566
    8. ' ' → logprob: -13.221009254455566
    9. '0' → logprob: -15.221009254455566
    10. '_s' → logprob: -15.721009254455566

Token 339: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.13574832677841187
    2. 's' → logprob: -2.1357483863830566
    3. ' return' → logprob: -4.760748386383057
    4. '   ' → logprob: -9.010747909545898
    5. ' s' → logprob: -9.260747909545898
    6. '>' → logprob: -12.385747909545898
    7. '(s' → logprob: -15.385747909545898
    8. 'if' → logprob: -15.885747909545898
    9. '0' → logprob: -16.0107479095459
    10. ' ' → logprob: -16.1357479095459

Token 340: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.47407791018486023
    2. ' s' → logprob: -0.9740779399871826
    3. '>' → logprob: -14.974078178405762
    4. '0' → logprob: -15.474078178405762
    5. '(s' → logprob: -16.224077224731445
    6. '_s' → logprob: -16.974077224731445
    7. '   ' → logprob: -17.224077224731445
    8. '	s' → logprob: -17.599077224731445
    9. '>s' → logprob: -17.599077224731445
    10. '1' → logprob: -17.849077224731445

Token 341: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.029792502522468567
    2. ' >' → logprob: -3.529792547225952
    3. '>=' → logprob: -10.154792785644531
    4. ' >=' → logprob: -13.904792785644531
    5. '0' → logprob: -14.404792785644531
    6. ' ' → logprob: -14.654792785644531
    7. ' ' → logprob: -15.029792785644531
    8. '!=' → logprob: -15.279792785644531
    9. '()>' → logprob: -15.404792785644531
    10. '>
' → logprob: -15.654792785644531

Token 342: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001398929744027555
    2. ' ' → logprob: -8.875140190124512
    3. '-' → logprob: -18.500139236450195
    4. '۰' → logprob: -19.125139236450195
    5. '=' → logprob: -19.375139236450195
    6. '
' → logprob: -20.000139236450195
    7. '<|end|>' → logprob: -20.375139236450195
    8. '０' → logprob: -20.500139236450195
    9. 'zero' → logprob: -20.625139236450195
    10. '1' → logprob: -20.875139236450195

Token 343: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '-' → logprob: -20.250003814697266
    4. '۰' → logprob: -21.000003814697266
    5. 'zero' → logprob: -22.125003814697266
    6. '０' → logprob: -22.250003814697266
    7. '  ' → logprob: -22.875003814697266
    8. '00' → logprob: -23.125003814697266
    9. '```' → logprob: -23.250003814697266
    10. '٠' → logprob: -23.500003814697266

Token 344: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005995394196361303
    2. '<|end|>' → logprob: -5.380995273590088
    3. '```' → logprob: -7.380995273590088
    4. ' def' → logprob: -8.255995750427246
    5. 'print' → logprob: -9.005995750427246
    6. '   ' → logprob: -9.880995750427246
    7. '(defun' → logprob: -9.880995750427246
    8. '\' → logprob: -10.130995750427246
    9. '<|end|>' → logprob: -10.255995750427246
    10. '    
' → logprob: -10.880995750427246

Token 345: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -2.9875325708417222e-05
    2. ' def' → logprob: -11.000029563903809
    3. '```' → logprob: -11.875029563903809
    4. 'print' → logprob: -13.000029563903809
    5. 'ndef' → logprob: -13.875029563903809
    6. '<|end|>' → logprob: -14.125029563903809
    7. 'Def' → logprob: -14.750029563903809
    8. '0' → logprob: -14.875029563903809
    9. '(defun' → logprob: -15.125029563903809
    10. ':def' → logprob: -15.625029563903809

Token 346: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.927930654550437e-05
    2. ' print' → logprob: -10.875029563903809
    3. 'def' → logprob: -11.500029563903809
    4. 'println' → logprob: -17.000028610229492
    5. '	print' → logprob: -17.375028610229492
    6. '   ' → logprob: -17.875028610229492
    7. 'append' → logprob: -18.375028610229492
    8. '  ' → logprob: -19.125028610229492
    9. '```' → logprob: -19.250028610229492
    10. 'prints' → logprob: -19.250028610229492

Token 347: '_zero' (ID: 53468)
  Prédit: '_zero'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_zero' → logprob: -0.0007211300544440746
    2. '(' → logprob: -8.000720977783203
    3. '_' → logprob: -8.125720977783203
    4. '('_' → logprob: -10.000720977783203
    5. '_ZERO' → logprob: -10.875720977783203
    6. '("_' → logprob: -11.250720977783203
    7. '0' → logprob: -11.875720977783203
    8. '(_' → logprob: -13.250720977783203
    9. 'zero' → logprob: -13.750720977783203
    10. ' _' → logprob: -14.500720977783203

Token 348: '_and' (ID: 18645)
  Prédit: '_and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_and' → logprob: -0.0010459087789058685
    2. '()' → logprob: -6.8760457038879395
    3. '_' → logprob: -11.876046180725098
    4. 'and' → logprob: -13.126046180725098
    5. '()
' → logprob: -14.251046180725098
    6. ' and' → logprob: -14.626046180725098
    7. '_AND' → logprob: -15.001046180725098
    8. '```' → logprob: -15.001046180725098
    9. '_then' → logprob: -15.251046180725098
    10. '   ' → logprob: -15.376046180725098

Token 349: '_exit' (ID: 41242)
  Prédit: 'exit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exit' → logprob: -0.0019300628919154406
    2. '_exit' → logprob: -6.251930236816406
    3. ' exit' → logprob: -13.626930236816406
    4. 'return' → logprob: -15.751930236816406
    5. 'continue' → logprob: -16.751930236816406
    6. 'Exit' → logprob: -17.751930236816406
    7. 'quit' → logprob: -18.626930236816406
    8. '	exit' → logprob: -18.876930236816406
    9. 'flush' → logprob: -19.001930236816406
    10. '
' → logprob: -19.751930236816406

Token 350: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.001971577061340213
    2. '():
' → logprob: -6.25197172164917
    3. ' ():' → logprob: -10.376971244812012
    4. '()' → logprob: -11.626971244812012
    5. '():

' → logprob: -12.876971244812012
    6. '():
' → logprob: -14.876971244812012
    7. ' ()' → logprob: -16.876972198486328
    8. '(' → logprob: -18.126972198486328
    9. ':' → logprob: -19.126972198486328
    10. '();' → logprob: -19.501972198486328

Token 351: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0024590103421360254
    2. 'print' → logprob: -6.1274590492248535
    3. ' print' → logprob: -8.502458572387695
    4. '```' → logprob: -9.877458572387695
    5. 'import' → logprob: -10.877458572387695
    6. '``' → logprob: -14.877458572387695
    7. '	print' → logprob: -16.002458572387695
    8. '       ' → logprob: -17.002458572387695
    9. '    
' → logprob: -17.127458572387695
    10. '   ' → logprob: -17.502458572387695

Token 352: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.0280383548888494e-06
    2. 'import' → logprob: -14.375000953674316
    3. '```' → logprob: -15.625000953674316
    4. ' print' → logprob: -15.750000953674316
    5. '   ' → logprob: -16.500001907348633
    6. '
' → logprob: -19.750001907348633
    7. 'pr' → logprob: -19.875001907348633
    8. 'exit' → logprob: -20.250001907348633
    9. 'prin' → logprob: -20.250001907348633
    10. '    
' → logprob: -21.000001907348633

Token 353: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3868783116340637
    2. '0' → logprob: -1.136878252029419
    3. '(
' → logprob: -12.63687801361084
    4. '("' → logprob: -13.13687801361084
    5. '('' → logprob: -13.88687801361084
    6. '00' → logprob: -15.76187801361084
    7. ' ' → logprob: -15.88687801361084
    8. ' (' → logprob: -15.88687801361084
    9. '000' → logprob: -15.88687801361084
    10. '`' → logprob: -16.011878967285156

Token 354: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '"' → logprob: -17.5
    4. ')' → logprob: -17.5
    5. '０' → logprob: -19.0
    6. '`' → logprob: -19.125
    7. ''' → logprob: -19.5
    8. '```' → logprob: -19.625
    9. '۰' → logprob: -19.875
    10. '(' → logprob: -19.875

Token 355: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.20147112011909485
    2. ')' → logprob: -1.7014710903167725
    3. ')
' → logprob: -9.826471328735352
    4. ')

' → logprob: -13.326471328735352
    5. ')return' → logprob: -13.951471328735352
    6. ' )
' → logprob: -14.451471328735352
    7. '),' → logprob: -15.201471328735352
    8. ' )' → logprob: -15.826471328735352
    9. ');' → logprob: -15.951471328735352
    10. ');
' → logprob: -16.20147132873535

Token 356: '   ' (ID: 271)
  Prédit: 'exit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exit' → logprob: -0.14626874029636383
    2. '   ' → logprob: -2.646268844604492
    3. 'import' → logprob: -2.771268844604492
    4. ' exit' → logprob: -6.521268844604492
    5. '	exit' → logprob: -7.021268844604492
    6. '
' → logprob: -9.021268844604492
    7. '    
' → logprob: -9.896268844604492
    8. '_exit' → logprob: -11.521268844604492
    9. 'raise' → logprob: -11.896268844604492
    10. '```' → logprob: -12.146268844604492

Token 357: ' exit' (ID: 10654)
  Prédit: 'exit'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exit' (adapté à ' exit') → logprob: -0.000263481488218531
    2. 'import' → logprob: -8.250263214111328
    3. ' exit' → logprob: -13.250263214111328
    4. '   ' → logprob: -15.375263214111328
    5. 'quit' → logprob: -15.875263214111328
    6. 'return' → logprob: -16.875263214111328
    7. '	exit' → logprob: -17.750263214111328
    8. 'raise' → logprob: -18.000263214111328
    9. '```' → logprob: -19.125263214111328
    10. '
' → logprob: -19.250263214111328

Token 358: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0019862097688019276
    2. '(' → logprob: -6.251986026763916
    3. '()
' → logprob: -10.251986503601074
    4. '()`' → logprob: -11.501986503601074
    5. '`()' → logprob: -12.501986503601074
    6. '()(' → logprob: -13.376986503601074
    7. ' ()' → logprob: -13.376986503601074
    8. '()\' → logprob: -13.501986503601074
    9. '()

' → logprob: -14.376986503601074
    10. '0' → logprob: -14.501986503601074

Token 359: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.007675483822822571
    2. 'if' → logprob: -5.007675647735596
    3. 'n' → logprob: -8.257675170898438
    4. '```' → logprob: -8.382675170898438
    5. '<|end|>' → logprob: -8.632675170898438
    6. '#' → logprob: -9.132675170898438
    7. 'for' → logprob: -9.507675170898438
    8. 'print' → logprob: -10.007675170898438
    9. 'return' → logprob: -10.507675170898438
    10. 'k' → logprob: -11.382675170898438

Token 360: ' mark' (ID: 1983)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.012537789531052113
    2. ' main' → logprob: -4.387537956237793
    3. 'def' → logprob: -11.387537956237793
    4. 'solve' → logprob: -11.762537956237793
    5. 'calculate' → logprob: -12.137537956237793
    6. 'print' → logprob: -13.637537956237793
    7. 'read' → logprob: -14.137537956237793
    8. 'compute' → logprob: -14.637537956237793
    9. 'process' → logprob: -15.387537956237793
    10. 'run' → logprob: -15.637537956237793

Token 361: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -4.320199877838604e-07
    2. 'visited' → logprob: -15.125
    3. '_seen' → logprob: -16.0
    4. '_vis' → logprob: -19.25
    5. '_visible' → logprob: -19.25
    6. '_un' → logprob: -20.75
    7. 'Visited' → logprob: -21.5
    8. '```' → logprob: -22.125
    9. '_used' → logprob: -22.5
    10. '_
' → logprob: -22.75

Token 362: 'visited' (ID: 52453)
  Prédit: 'visited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -2.963691804325208e-05
    2. 'seen' → logprob: -10.500029563903809
    3. '_' → logprob: -14.250029563903809
    4. ' visited' → logprob: -14.500029563903809
    5. 'visible' → logprob: -15.125029563903809
    6. '_seen' → logprob: -15.125029563903809
    7. 'vist' → logprob: -15.875029563903809
    8. 'visi' → logprob: -16.625030517578125
    9. 'Visited' → logprob: -17.750030517578125
    10. 'vis' → logprob: -18.000030517578125

Token 363: '(se' (ID: 19430)
  Prédit: '(se'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(se' → logprob: -2.816093228830141e-06
    2. '(' → logprob: -12.87500286102295
    3. ' (' → logprob: -16.250001907348633
    4. '```' → logprob: -17.625001907348633
    5. '(
' → logprob: -17.875001907348633
    6. '(s' → logprob: -18.250001907348633
    7. '(sa' → logprob: -18.750001907348633
    8. 'seen' → logprob: -19.500001907348633
    9. '(scene' → logprob: -19.625001907348633
    10. ',se' → logprob: -19.750001907348633

Token 364: 'en' (ID: 262)
  Prédit: 'en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -4.246537173457909e-06
    2. '(en' → logprob: -12.750003814697266
    3. 'e' → logprob: -14.500003814697266
    4. '[' → logprob: -15.250003814697266
    5. '(' → logprob: -16.125003814697266
    6. ' en' → logprob: -16.375003814697266
    7. 'em' → logprob: -16.875003814697266
    8. 'een' → logprob: -17.000003814697266
    9. '{' → logprob: -17.500003814697266
    10. '_en' → logprob: -17.875003814697266

Token 365: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002759226132184267
    2. '(se' → logprob: -6.3777594566345215
    3. ',se' → logprob: -6.8777594566345215
    4. ' ,' → logprob: -11.502758979797363
    5. '[' → logprob: -11.627758979797363
    6. ',
' → logprob: -13.627758979797363
    7. '(' → logprob: -13.877758979797363
    8. '):' → logprob: -14.252758979797363
    9. ',[' → logprob: -14.252758979797363
    10. '```' → logprob: -14.377758979797363

Token 366: ' li' (ID: 3476)
  Prédit: 'li'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'li' → logprob: -0.3665779232978821
    2. ' li' → logprob: -1.2415778636932373
    3. ')' → logprob: -4.241578102111816
    4. '<|end|>' → logprob: -6.491578102111816
    5. 'neighbor' → logprob: -7.116578102111816
    6. '<li' → logprob: -7.991578102111816
    7. '_li' → logprob: -8.991578102111816
    8. ' )' → logprob: -8.991578102111816
    9. ' neighbor' → logprob: -9.241578102111816
    10. '(li' → logprob: -9.366578102111816

Token 367: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.008129963040119e-06
    2. ' ,' → logprob: -12.500003814697266
    3. '[' → logprob: -15.625003814697266
    4. ',
' → logprob: -17.125003814697266
    5. '‌,' → logprob: -17.625003814697266
    6. '[],' → logprob: -17.875003814697266
    7. '   ' → logprob: -18.250003814697266
    8. '```' → logprob: -18.750003814697266
    9. '`,' → logprob: -19.000003814697266
    10. ',s' → logprob: -19.125003814697266

Token 368: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0040785204619169235
    2. ' s' → logprob: -5.504078388214111
    3. 'value' → logprob: -17.504077911376953
    4. ')' → logprob: -17.504077911376953
    5. '_s' → logprob: -17.629077911376953
    6. '	s' → logprob: -18.504077911376953
    7. ' value' → logprob: -19.254077911376953
    8. 'c' → logprob: -20.004077911376953
    9. '0' → logprob: -20.129077911376953
    10. ')s' → logprob: -20.254077911376953

Token 369: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.018756506964564323
    2. '):
' → logprob: -4.39375638961792
    3. '[' → logprob: -5.14375638961792
    4. ')' → logprob: -8.018756866455078
    5. '):
' → logprob: -10.518756866455078
    6. ',' → logprob: -11.393756866455078
    7. '):

' → logprob: -11.518756866455078
    8. ']:' → logprob: -12.018756866455078
    9. '[]):' → logprob: -12.518756866455078
    10. '   ' → logprob: -13.768756866455078

Token 370: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4462741017341614
    2. 'seen' → logprob: -1.0712740421295166
    3. ' seen' → logprob: -4.071274280548096
    4. 'se' → logprob: -8.071273803710938
    5. '_seen' → logprob: -11.071273803710938
    6. '	se' → logprob: -12.321273803710938
    7. '```' → logprob: -12.446273803710938
    8. ' ' → logprob: -12.696273803710938
    9. 'visited' → logprob: -12.696273803710938
    10. 'shown' → logprob: -13.071273803710938

Token 371: ' seen' (ID: 6177)
  Prédit: 'seen'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seen' (adapté à ' seen') → logprob: -0.0004015945305582136
    2. ' seen' → logprob: -8.000401496887207
    3. '   ' → logprob: -9.625401496887207
    4. 'shown' → logprob: -17.125402450561523
    5. '_seen' → logprob: -17.750402450561523
    6. '```' → logprob: -19.000402450561523
    7. 'se' → logprob: -19.125402450561523
    8. 'visited' → logprob: -19.500402450561523
    9. '
' → logprob: -19.750402450561523
    10. 'Seen' → logprob: -19.875402450561523

Token 372: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.128163257315464e-07
    2. 'li' → logprob: -15.625
    3. '```' → logprob: -16.75
    4. '_li' → logprob: -17.625
    5. '=' → logprob: -17.75
    6. ' [' → logprob: -18.25
    7. '[...]' → logprob: -18.25
    8. '[
' → logprob: -18.375
    9. '[s' → logprob: -18.875
    10. '[:]' → logprob: -19.0

Token 373: 'li' (ID: 1307)
  Prédit: 'li'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'li' → logprob: -4.127333340875339e-06
    2. ' li' → logprob: -12.500003814697266
    3. 'l' → logprob: -15.375003814697266
    4. '[' → logprob: -16.625003814697266
    5. '<li' → logprob: -17.500003814697266
    6. ']' → logprob: -17.875003814697266
    7. '_li' → logprob: -18.375003814697266
    8. '(li' → logprob: -19.375003814697266
    9. 'Li' → logprob: -19.875003814697266
    10. '][' → logprob: -20.000003814697266

Token 374: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -6.64708495605737e-05
    2. ']=' → logprob: -9.625066757202148
    3. ' ]' → logprob: -15.625066757202148
    4. ')' → logprob: -16.62506675720215
    5. '=' → logprob: -17.00006675720215
    6. ']
' → logprob: -18.87506675720215
    7. '[' → logprob: -19.12506675720215
    8. ']==' → logprob: -21.87506675720215
    9. '   ' → logprob: -22.00006675720215
    10. ']

' → logprob: -22.12506675720215

Token 375: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022443771362305
    2. ' =' → logprob: -1.910224437713623
    3. '=s' → logprob: -15.160224914550781
    4. '＝' → logprob: -18.41022491455078
    5. ' ' → logprob: -19.28522491455078
    6. ')=' → logprob: -20.16022491455078
    7. ')' → logprob: -20.28522491455078
    8. '=

' → logprob: -20.28522491455078
    9. '=int' → logprob: -21.16022491455078
    10. '=
' → logprob: -21.28522491455078

Token 376: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -9.615255839889869e-05
    2. ' s' → logprob: -9.250096321105957
    3. '_s' → logprob: -19.50009536743164
    4. '<|end|>' → logprob: -19.62509536743164
    5. '{s' → logprob: -20.12509536743164
    6. '	s' → logprob: -20.62509536743164
    7. '<s' → logprob: -21.37509536743164
    8. '>s' → logprob: -22.87509536743164
    9. '
' → logprob: -23.00009536743164
    10. '(s' → logprob: -23.37509536743164

Token 377: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00032759839086793363
    2. '<|end|>' → logprob: -8.125328063964844
    3. 'from' → logprob: -10.625328063964844
    4. '<|end|>' → logprob: -12.375328063964844
    5. 'de' → logprob: -14.125328063964844
    6. '  
' → logprob: -14.500328063964844
    7. '
' → logprob: -14.875328063964844
    8. ' def' → logprob: -15.000328063964844
    9. 'return' → logprob: -15.125328063964844
    10. '    
' → logprob: -15.125328063964844

Token 378: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.9361264946837764e-07
    2. 's' → logprob: -16.75
    3. ' def' → logprob: -17.625
    4. 'from' → logprob: -18.875
    5. 'de' → logprob: -19.0
    6. '```' → logprob: -20.25
    7. 'ndef' → logprob: -21.5
    8. '	def' → logprob: -22.125
    9. '   ' → logprob: -22.25
    10. '    
' → logprob: -22.625

Token 379: ' decrement' (ID: 121877)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.07636425644159317
    2. 'append' → logprob: -2.701364278793335
    3. 'main' → logprob: -5.951364040374756
    4. 'initialize' → logprob: -6.576364040374756
    5. 'increment' → logprob: -7.451364040374756
    6. ' decrement' → logprob: -7.701364040374756
    7. 'process' → logprob: -8.201364517211914
    8. 's' → logprob: -8.326364517211914
    9. 'get' → logprob: -9.076364517211914
    10. 'mark' → logprob: -9.201364517211914

Token 380: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.002484692493453622
    2. 's' → logprob: -6.0024847984313965
    3. '(s' → logprob: -12.127484321594238
    4. '_' → logprob: -12.627484321594238
    5. '(' → logprob: -16.377485275268555
    6. '_(' → logprob: -16.627485275268555
    7. '```' → logprob: -16.752485275268555
    8. ''s' → logprob: -17.627485275268555
    9. '`s' → logprob: -18.127485275268555
    10. '(_' → logprob: -18.252485275268555

Token 381: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.38688117265701294
    2. '(' → logprob: -1.1368811130523682
    3. '(
' → logprob: -11.761880874633789
    4. ' (' → logprob: -13.136880874633789
    5. 's' → logprob: -15.386880874633789
    6. '(

' → logprob: -16.63688087463379
    7. '()' → logprob: -18.26188087463379
    8. '('' → logprob: -18.38688087463379
    9. '(
' → logprob: -18.38688087463379
    10. '((' → logprob: -19.01188087463379

Token 382: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0018502239836379886
    2. '):
' → logprob: -6.376850128173828
    3. ')' → logprob: -8.876850128173828
    4. '-' → logprob: -12.376850128173828
    5. ':' → logprob: -13.626850128173828
    6. '):
' → logprob: -13.876850128173828
    7. 's' → logprob: -14.501850128173828
    8. ' ):' → logprob: -14.501850128173828
    9. '():' → logprob: -14.876850128173828
    10. '):

' → logprob: -15.001850128173828

Token 383: '   ' (ID: 271)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00012356207298580557
    2. ' s' → logprob: -9.000123977661133
    3. '   ' → logprob: -16.375123977661133
    4. 'max' → logprob: -18.375123977661133
    5. '_s' → logprob: -18.500123977661133
    6. '	s' → logprob: -18.625123977661133
    7. 'return' → logprob: -18.875123977661133
    8. '-' → logprob: -20.250123977661133
    9. '{s' → logprob: -20.250123977661133
    10. '```' → logprob: -21.500123977661133

Token 384: ' return' (ID: 622)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00020354038861114532
    2. ' s' → logprob: -8.500203132629395
    3. 'max' → logprob: -19.87520408630371
    4. 'return' (adapté à ' return') → logprob: -20.37520408630371
    5. '   ' → logprob: -20.62520408630371
    6. '_s' → logprob: -21.00020408630371
    7. '	s' → logprob: -21.00020408630371
    8. '`s' → logprob: -21.00020408630371
    9. '```' → logprob: -21.87520408630371
    10. '{s' → logprob: -22.12520408630371

Token 385: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -2.7610454708337784e-05
    2. ' s' → logprob: -10.500027656555176
    3. '	s' → logprob: -18.75002670288086
    4. 'max' → logprob: -19.00002670288086
    5. '_s' → logprob: -20.37502670288086
    6. ' ' → logprob: -21.00002670288086
    7. '{s' → logprob: -21.87502670288086
    8. '   ' → logprob: -22.50002670288086
    9. '`s' → logprob: -23.12502670288086
    10. '(s' → logprob: -23.12502670288086

Token 386: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.07889209687709808
    2. ' -' → logprob: -2.5788919925689697
    3. ' ' → logprob: -13.57889175415039
    4. 's' → logprob: -14.70389175415039
    5. ' ' → logprob: -15.70389175415039
    6. '<|end|>' → logprob: -15.70389175415039
    7. '–' → logprob: -16.70389175415039
    8. '-
' → logprob: -18.07889175415039
    9. '−' → logprob: -18.32889175415039
    10. '-=' → logprob: -18.45389175415039

Token 387: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '   ' → logprob: -18.0000057220459
    4. '```' → logprob: -18.4375057220459
    5. '2' → logprob: -18.9375057220459
    6. '۱' → logprob: -19.0625057220459
    7. '<|end|>' → logprob: -19.3750057220459
    8. '１' → logprob: -19.5625057220459
    9. '
' → logprob: -19.6875057220459
    10. '  ' → logprob: -20.1875057220459

Token 388: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '   ' → logprob: -19.000001907348633
    4. '```' → logprob: -21.062501907348633
    5. '2' → logprob: -21.125001907348633
    6. '  ' → logprob: -21.250001907348633
    7. '１' → logprob: -21.312501907348633
    8. '۱' → logprob: -21.312501907348633
    9. '
' → logprob: -21.625001907348633
    10. '' → logprob: -21.937501907348633

Token 389: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -4.320199877838604e-07
    2. '<|end|>' → logprob: -15.75
    3. ' def' → logprob: -16.125
    4. '```' → logprob: -16.625
    5. 'ndef' → logprob: -17.5
    6. '	def' → logprob: -18.0
    7. '(defun' → logprob: -18.25
    8. 'from' → logprob: -18.75
    9. '<|end|>' → logprob: -18.875
    10. 'append' → logprob: -18.875

Token 390: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -2.641841820150148e-05
    2. 'print' → logprob: -11.00002670288086
    3. 'if' → logprob: -12.25002670288086
    4. 'n' → logprob: -12.75002670288086
    5. '```' → logprob: -13.37502670288086
    6. '#' → logprob: -15.25002670288086
    7. 'from' → logprob: -15.75002670288086
    8. ' def' → logprob: -17.00002670288086
    9. 'ndef' → logprob: -17.62502670288086
    10. 'result' → logprob: -18.37502670288086

Token 391: ' append' (ID: 17147)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.01884472370147705
    2. ' main' → logprob: -4.2688446044921875
    3. 'append' → logprob: -6.0188446044921875
    4. 'calculate' → logprob: -6.6438446044921875
    5. 'def' → logprob: -7.6438446044921875
    6. 'solve' → logprob: -8.643844604492188
    7. 'compute' → logprob: -8.893844604492188
    8. 'count' → logprob: -9.518844604492188
    9. 'read' → logprob: -11.018844604492188
    10. 'initialize' → logprob: -11.268844604492188

Token 392: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -1.0564331205387134e-05
    2. '_to' → logprob: -12.25001049041748
    3. '(todo' → logprob: -12.87501049041748
    4. 'todo' → logprob: -13.37501049041748
    5. '_' → logprob: -13.50001049041748
    6. '```' → logprob: -16.500011444091797
    7. ' _' → logprob: -17.000011444091797
    8. '_s' → logprob: -18.625011444091797
    9. 't' → logprob: -19.000011444091797
    10. '_do' → logprob: -19.000011444091797

Token 393: 'odo' (ID: 6397)
  Prédit: 'odo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odo' → logprob: -1.5048530030981055e-06
    2. 'o' → logprob: -13.500001907348633
    3. 'todo' → logprob: -17.250001907348633
    4. 'ODO' → logprob: -17.625001907348633
    5. 'do' → logprob: -18.125001907348633
    6. '(todo' → logprob: -19.875001907348633
    7. 'oto' → logprob: -21.875001907348633
    8. '_do' → logprob: -22.750001907348633
    9. '_' → logprob: -22.875001907348633
    10. '```' → logprob: -23.375001907348633

Token 394: '(todo' (ID: 105468)
  Prédit: '(todo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(todo' → logprob: -0.00023488728038500994
    2. '(' → logprob: -8.375234603881836
    3. ' (' → logprob: -13.000234603881836
    4. '(t' → logprob: -13.750234603881836
    5. '```' → logprob: -15.125234603881836
    6. '(ticket' → logprob: -15.250234603881836
    7. '(to' → logprob: -15.625234603881836
    8. '(
' → logprob: -17.250234603881836
    9. '(task' → logprob: -17.250234603881836
    10. '.todo' → logprob: -17.375234603881836

Token 395: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007656677160412073
    2. '(todo' → logprob: -4.882656574249268
    3. ',t' → logprob: -10.507657051086426
    4. ')' → logprob: -11.257657051086426
    5. '(' → logprob: -12.007657051086426
    6. ' ,' → logprob: -13.382657051086426
    7. '```' → logprob: -14.507657051086426
    8. 'todo' → logprob: -15.257657051086426
    9. '<|end|>' → logprob: -15.257657051086426
    10. ',to' → logprob: -15.382657051086426

Token 396: ' neighbor' (ID: 13034)
  Prédit: ' li'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' li' → logprob: -0.6051769852638245
    2. 'li' → logprob: -1.4801769256591797
    3. ')' → logprob: -2.3551769256591797
    4. '<|end|>' → logprob: -2.8551769256591797
    5. 'neighbor' → logprob: -3.6051769256591797
    6. 'todo' → logprob: -4.23017692565918
    7. ' )' → logprob: -4.73017692565918
    8. ' neighbor' → logprob: -4.73017692565918
    9. ' todo' → logprob: -5.23017692565918
    10. ' ' → logprob: -6.10517692565918

Token 397: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1957567185163498
    2. '(todo' → logprob: -2.070756673812866
    3. '):' → logprob: -3.820756673812866
    4. ')' → logprob: -3.820756673812866
    5. '):
' → logprob: -4.945756912231445
    6. '   ' → logprob: -8.320756912231445
    7. ')(' → logprob: -8.695756912231445
    8. ',t' → logprob: -9.195756912231445
    9. '```' → logprob: -9.695756912231445
    10. '),' → logprob: -10.195756912231445

Token 398: '   ' (ID: 271)
  Prédit: 'todo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'todo' → logprob: -0.6657049655914307
    2. '   ' → logprob: -1.4157049655914307
    3. ' todo' → logprob: -1.4157049655914307
    4. '(todo' → logprob: -8.040704727172852
    5. '	t' → logprob: -8.415704727172852
    6. '.todo' → logprob: -10.790704727172852
    7. 'tod' → logprob: -12.415704727172852
    8. ' tod' → logprob: -12.415704727172852
    9. '   ' → logprob: -13.415704727172852
    10. '  ' → logprob: -13.665704727172852

Token 399: ' todo' (ID: 6520)
  Prédit: 'todo'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'todo' (adapté à ' todo') → logprob: -0.00015872348740231246
    2. ' todo' → logprob: -8.750158309936523
    3. '   ' → logprob: -15.625158309936523
    4. '(todo' → logprob: -17.125158309936523
    5. 'tod' → logprob: -18.000158309936523
    6. 't' → logprob: -18.875158309936523
    7. '.todo' → logprob: -19.000158309936523
    8. '	t' → logprob: -20.375158309936523
    9. ' ' → logprob: -20.875158309936523
    10. 'todos' → logprob: -21.125158309936523

Token 400: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.3663626305060461e-05
    2. '.' → logprob: -11.25001335144043
    3. '.extend' → logprob: -15.12501335144043
    4. '.app' → logprob: -15.25001335144043
    5. '.ap' → logprob: -18.00001335144043
    6. 'append' → logprob: -18.00001335144043
    7. '.enqueue' → logprob: -18.00001335144043
    8. '.Append' → logprob: -18.50001335144043
    9. '.p' → logprob: -19.00001335144043
    10. '_append' → logprob: -20.62501335144043

Token 401: '(ne' (ID: 79401)
  Prédit: '(ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ne' → logprob: -0.0024768433067947626
    2. '(' → logprob: -6.002476692199707
    3. 'neighbor' → logprob: -14.002476692199707
    4. '(
' → logprob: -15.752476692199707
    5. '(n' → logprob: -17.627477645874023
    6. '((' → logprob: -17.627477645874023
    7. '(friend' → logprob: -17.877477645874023
    8. ' (' → logprob: -18.377477645874023
    9. '(enemy' → logprob: -18.377477645874023
    10. '()' → logprob: -18.627477645874023

Token 402: 'ighbor' (ID: 28225)
  Prédit: 'ighbor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ighbor' → logprob: -7.064297824399546e-05
    2. 'gh' → logprob: -9.750070571899414
    3. 'igh' → logprob: -11.750070571899414
    4. 'ighborhood' → logprob: -13.625070571899414
    5. 'ight' → logprob: -13.750070571899414
    6. 'ighbors' → logprob: -13.875070571899414
    7. 'w' → logprob: -14.625070571899414
    8. 'g' → logprob: -15.375070571899414
    9. 'ig' → logprob: -15.625070571899414
    10. '[' → logprob: -16.750070571899414

Token 403: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.7697225252486533e-06
    2. ')
' → logprob: -12.500003814697266
    3. ')

' → logprob: -17.000003814697266
    4. ' )' → logprob: -17.875003814697266
    5. '),' → logprob: -19.875003814697266
    6. ')`' → logprob: -19.875003814697266
    7. ')}' → logprob: -20.500003814697266
    8. ')return' → logprob: -20.500003814697266
    9. ')#' → logprob: -20.625003814697266
    10. '}' → logprob: -20.625003814697266

Token 404: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0001334559783572331
    2. 'n' → logprob: -9.250133514404297
    3. 'if' → logprob: -10.625133514404297
    4. '#' → logprob: -11.750133514404297
    5. 'print' → logprob: -12.750133514404297
    6. '```' → logprob: -14.375133514404297
    7. 'ndef' → logprob: -14.500133514404297
    8. ' def' → logprob: -14.750133514404297
    9. 'from' → logprob: -15.625133514404297
    10. 'a' → logprob: -15.750133514404297

Token 405: ' compute' (ID: 23864)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.04331327974796295
    2. ' main' → logprob: -3.1683132648468018
    3. 'calculate' → logprob: -8.793313026428223
    4. 'solve' → logprob: -9.043313026428223
    5. 'compute' → logprob: -10.668313026428223
    6. 'def' → logprob: -11.918313026428223
    7. ' solve' → logprob: -12.043313026428223
    8. ' calculate' → logprob: -12.543313026428223
    9. 'count' → logprob: -12.918313026428223
    10. ' compute' → logprob: -13.793313026428223

Token 406: '_final' (ID: 46468)
  Prédit: '_result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -0.9338748455047607
    2. 'result' → logprob: -1.0588748455047607
    3. 'answer' → logprob: -2.3088748455047607
    4. '_answer' → logprob: -2.5588748455047607
    5. '_color' → logprob: -3.8088748455047607
    6. 'color' → logprob: -4.05887508392334
    7. '_final' → logprob: -4.30887508392334
    8. 'final' → logprob: -4.43387508392334
    9. 'ways' → logprob: -5.80887508392334
    10. 'product' → logprob: -5.93387508392334

Token 407: '_answer' (ID: 65702)
  Prédit: '_result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -0.7197930812835693
    2. '_answer' → logprob: -0.7197930812835693
    3. '_color' → logprob: -4.219793319702148
    4. '_count' → logprob: -5.094793319702148
    5. '_value' → logprob: -6.594793319702148
    6. '_product' → logprob: -6.719793319702148
    7. 'result' → logprob: -6.844793319702148
    8. 'answer' → logprob: -7.344793319702148
    9. '_score' → logprob: -7.594793319702148
    10. '_output' → logprob: -8.344793319702148

Token 408: '(se' (ID: 19430)
  Prédit: '(se'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(se' → logprob: -0.008258054032921791
    2. ' (' → logprob: -5.008257865905762
    3. '(' → logprob: -7.133257865905762
    4. '():' → logprob: -7.633257865905762
    5. '(s' → logprob: -8.883257865905762
    6. '(n' → logprob: -9.383257865905762
    7. ' ():' → logprob: -11.133257865905762
    8. '():
' → logprob: -12.133257865905762
    9. '(size' → logprob: -12.758257865905762
    10. '(def' → logprob: -13.883257865905762

Token 409: 'en' (ID: 262)
  Prédit: 'en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -1.1279553291387856e-05
    2. 'e' → logprob: -12.125011444091797
    3. 'een' → logprob: -13.750011444091797
    4. '(en' → logprob: -14.500011444091797
    5. 'ened' → logprob: -14.750011444091797
    6. 'em' → logprob: -14.875011444091797
    7. 'end' → logprob: -14.875011444091797
    8. 'seen' → logprob: -15.250011444091797
    9. ' en' → logprob: -15.375011444091797
    10. '``' → logprob: -15.375011444091797

Token 410: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.25196364521980286
    2. '):
' → logprob: -1.5019636154174805
    3. '):
' → logprob: -11.25196361541748
    4. '():
' → logprob: -12.12696361541748
    5. ',' → logprob: -12.25196361541748
    6. '():' → logprob: -12.62696361541748
    7. ')' → logprob: -12.87696361541748
    8. ' ):' → logprob: -13.00196361541748
    9. '):

' → logprob: -13.25196361541748
    10. '   ' → logprob: -14.12696361541748

Token 411: ' mod' (ID: 1812)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.7253812551498413
    2. 'n' → logprob: -1.9753812551498413
    3. ' k' → logprob: -1.9753812551498413
    4. ' n' → logprob: -2.225381374359131
    5. 'len' → logprob: -3.600381374359131
    6. '0' → logprob: -3.600381374359131
    7. ' len' → logprob: -3.600381374359131
    8. ')' → logprob: -3.725381374359131
    9. ' )' → logprob: -5.350381374359131
    10. ' ' → logprob: -5.725381374359131

Token 412: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.009587974287569523
    2. '):
' → logprob: -5.13458776473999
    3. '=' → logprob: -5.63458776473999
    4. ')' → logprob: -9.634588241577148
    5. '):
' → logprob: -11.384588241577148
    6. ' ):' → logprob: -13.259588241577148
    7. ':' → logprob: -14.509588241577148
    8. ')=' → logprob: -14.884588241577148
    9. '):

' → logprob: -15.009588241577148
    10. 'ulus' → logprob: -15.384588241577148

Token 413: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014137059450149536
    2. ':' → logprob: -4.764137268066406
    3. ':
' → logprob: -6.139137268066406
    4. 'def' → logprob: -6.889137268066406
    5. '):
' → logprob: -7.389137268066406
    6. 'answer' → logprob: -8.514137268066406
    7. '```' → logprob: -8.639137268066406
    8. '<|end|>' → logprob: -9.014137268066406
    9. 'total' → logprob: -9.139137268066406
    10. '{' → logprob: -9.139137268066406

Token 414: ' ans' (ID: 3345)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'answer' → logprob: -0.41524845361709595
    2. 'ans' (adapté à ' ans') → logprob: -1.6652483940124512
    3. '   ' → logprob: -2.290248394012451
    4. 'result' → logprob: -3.165248394012451
    5. 'res' → logprob: -5.040248394012451
    6. 'from' → logprob: -7.415248394012451
    7. ' answer' → logprob: -9.79024887084961
    8. ' ans' → logprob: -10.41524887084961
    9. '```' → logprob: -11.41524887084961
    10. '    
' → logprob: -11.54024887084961

Token 415: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02630738541483879
    2. '=' → logprob: -3.6513073444366455
    3. ',' → logprob: -12.276307106018066
    4. '   ' → logprob: -13.901307106018066
    5. ' ' → logprob: -14.776307106018066
    6. '_' → logprob: -14.901307106018066
    7. '  ' → logprob: -15.151307106018066
    8. 's' → logprob: -15.776307106018066
    9. ' ' → logprob: -16.151308059692383
    10. '	' → logprob: -16.776308059692383

Token 416: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003267639840487391
    2. ' ' → logprob: -8.125327110290527
    3. 'seen' → logprob: -10.500327110290527
    4. '   ' → logprob: -13.375327110290527
    5. 'se' → logprob: -14.625327110290527
    6. ' seen' → logprob: -15.500327110290527
    7. '0' → logprob: -15.750327110290527
    8. '```' → logprob: -16.18782615661621
    9. '(' → logprob: -16.25032615661621
    10. '
' → logprob: -16.75032615661621

Token 417: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3782830137643032e-05
    2. 'seen' → logprob: -11.37501335144043
    3. ' ' → logprob: -13.37501335144043
    4. '
' → logprob: -15.37501335144043
    5. '   ' → logprob: -15.62501335144043
    6. 'se' → logprob: -16.37501335144043
    7. '```' → logprob: -16.62501335144043
    8. '(' → logprob: -17.31251335144043
    9. '0' → logprob: -17.93751335144043
    10. 'k' → logprob: -18.06251335144043

Token 418: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4051080048084259
    2. '   ' → logprob: -1.5301079750061035
    3. ' for' → logprob: -3.5301079750061035
    4. '    
' → logprob: -3.5301079750061035
    5. ' 
' → logprob: -3.6551079750061035
    6. '  
' → logprob: -4.5301079750061035
    7. '<|end|>' → logprob: -4.7801079750061035
    8. '	
' → logprob: -5.7801079750061035
    9. ' ' → logprob: -6.2801079750061035
    10. '   
' → logprob: -6.4051079750061035

Token 419: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0001093841710826382
    2. ' for' → logprob: -9.500109672546387
    3. 'for' → logprob: -10.625109672546387
    4. '	for' → logprob: -12.125109672546387
    5. '
' → logprob: -13.000109672546387
    6. '    
' → logprob: -13.625109672546387
    7. 'def' → logprob: -14.625109672546387
    8. ',' → logprob: -15.125109672546387
    9. '<|end|>' → logprob: -15.500109672546387
    10. ' ' → logprob: -16.87510871887207

Token 420: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0038592200726270676
    2. '   ' → logprob: -5.628859043121338
    3. 'mod' → logprob: -8.378859519958496
    4. ' for' → logprob: -10.503859519958496
    5. 'from' → logprob: -14.253859519958496
    6. 'k' → logprob: -14.378859519958496
    7. '```' → logprob: -15.628859519958496
    8. 'n' → logprob: -15.753859519958496
    9. '	for' → logprob: -16.00385856628418
    10. 'def' → logprob: -16.12885856628418

Token 421: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.3058457374572754
    2. 'x' → logprob: -1.6808457374572754
    3. 'color' → logprob: -1.8058457374572754
    4. 'v' → logprob: -2.3058457374572754
    5. 'value' → logprob: -2.5558457374572754
    6. ' s' → logprob: -3.0558457374572754
    7. ' color' → logprob: -3.5558457374572754
    8. 'val' → logprob: -3.6808457374572754
    9. ' val' → logprob: -3.8058457374572754
    10. 'i' → logprob: -4.055845737457275

Token 422: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01825588569045067
    2. 'in' → logprob: -4.018255710601807
    3. ' ' → logprob: -9.643256187438965
    4. 's' → logprob: -10.768256187438965
    5. '_' → logprob: -11.768256187438965
    6. 'i' → logprob: -12.518256187438965
    7. 'n' → logprob: -12.768256187438965
    8. '_in' → logprob: -12.893256187438965
    9. ' i' → logprob: -14.143256187438965
    10. '	in' → logprob: -14.518256187438965

Token 423: ' seen' (ID: 6177)
  Prédit: 'seen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seen' → logprob: -0.0015028368216007948
    2. ' seen' → logprob: -6.501502990722656
    3. '_seen' → logprob: -15.376502990722656
    4. '[' → logprob: -16.501502990722656
    5. 'se' → logprob: -16.501502990722656
    6. 'shown' → logprob: -17.251502990722656
    7. '   ' → logprob: -17.376502990722656
    8. 's' → logprob: -17.501502990722656
    9. 'see' → logprob: -17.626502990722656
    10. ' ' → logprob: -18.251502990722656

Token 424: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001931970240548253
    2. ':
' → logprob: -6.251932144165039
    3. ' :' → logprob: -13.001932144165039
    4. ':

' → logprob: -15.376932144165039
    5. ':
' → logprob: -15.626932144165039
    6. 's' → logprob: -15.626932144165039
    7. '):' → logprob: -16.12693214416504
    8. ':s' → logprob: -16.87693214416504
    9. ')' → logprob: -17.25193214416504
    10. '>' → logprob: -17.37693214416504

Token 425: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2295510321855545
    2. '   ' → logprob: -2.104551076889038
    3. ':' → logprob: -2.604551076889038
    4. ' ans' → logprob: -5.729550838470459
    5. ':
' → logprob: -6.479550838470459
    6. '    ' → logprob: -6.854550838470459
    7. '	ans' → logprob: -7.479550838470459
    8. '<|end|>' → logprob: -7.729550838470459
    9. '        
' → logprob: -8.229551315307617
    10. '    
' → logprob: -8.354551315307617

Token 426: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.26685208082199097
    2. '   ' → logprob: -1.6418521404266357
    3. ' ans' → logprob: -3.2668521404266357
    4. '	ans' → logprob: -6.266851902008057
    5. '(ans' → logprob: -7.641851902008057
    6. '_ans' → logprob: -9.891852378845215
    7. 'answer' → logprob: -11.516852378845215
    8. '    ' → logprob: -11.766852378845215
    9. '       ' → logprob: -12.016852378845215
    10. '```' → logprob: -12.891852378845215

Token 427: ' =' (ID: 314)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.347867488861084
    2. ' *=' → logprob: -1.347867488861084
    3. '=' → logprob: -3.472867488861084
    4. ' =' → logprob: -5.972867488861084
    5. '*' → logprob: -7.847867488861084
    6. '	' → logprob: -10.347867965698242
    7. '%=' → logprob: -12.222867965698242
    8. '   ' → logprob: -12.847867965698242
    9. ' ' → logprob: -13.097867965698242
    10. ' ' → logprob: -13.097867965698242

Token 428: ' multiply' (ID: 57388)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.00016265720478259027
    2. ' (' → logprob: -8.750163078308105
    3. '(' → logprob: -13.125163078308105
    4. 'ans' → logprob: -13.500163078308105
    5. '(answer' → logprob: -15.000163078308105
    6. ' ans' → logprob: -15.000163078308105
    7. '   ' → logprob: -16.50016212463379
    8. '	ans' → logprob: -17.62516212463379
    9. '(err' → logprob: -18.87516212463379
    10. '(abs' → logprob: -19.12516212463379

Token 429: '_and' (ID: 18645)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0005021584220230579
    2. 'ans' → logprob: -7.625502109527588
    3. '(' → logprob: -11.375502586364746
    4. '	ans' → logprob: -14.000502586364746
    5. ' (' → logprob: -14.375502586364746
    6. ' ans' → logprob: -14.750502586364746
    7. 'mod' → logprob: -14.875502586364746
    8. '(answer' → logprob: -15.625502586364746
    9. '(mod' → logprob: -15.750502586364746
    10. '(
' → logprob: -16.00050163269043

Token 430: '_mod' (ID: 15325)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.38350731134414673
    2. 'mod' → logprob: -1.258507251739502
    3. '(mod' → logprob: -4.008507251739502
    4. 'ans' → logprob: -4.758507251739502
    5. '(s' → logprob: -5.633507251739502
    6. '(' → logprob: -6.633507251739502
    7. '_mod' → logprob: -7.508507251739502
    8. ' mod' → logprob: -7.758507251739502
    9. 'pow' → logprob: -8.38350772857666
    10. '```' → logprob: -8.50850772857666

Token 431: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -5.200166469876422e-06
    2. 'ans' → logprob: -13.375004768371582
    3. '(' → logprob: -13.625004768371582
    4. '(answer' → logprob: -13.750004768371582
    5. '	ans' → logprob: -14.250004768371582
    6. '(
' → logprob: -14.625004768371582
    7. '(s' → logprob: -15.875004768371582
    8. '```' → logprob: -16.7500057220459
    9. 's' → logprob: -17.2500057220459
    10. ' (' → logprob: -17.6250057220459

Token 432: ',' (ID: 11)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.22992631793022156
    2. ',' → logprob: -1.604926347732544
    3. '(' → logprob: -5.604926109313965
    4. ',s' → logprob: -7.979926109313965
    5. ' (' → logprob: -8.479926109313965
    6. ' ,' → logprob: -8.854926109313965
    7. 's' → logprob: -9.604926109313965
    8. '(
' → logprob: -9.979926109313965
    9. '*,' → logprob: -12.854926109313965
    10. '*' → logprob: -12.854926109313965

Token 433: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.018160004168748856
    2. ' s' → logprob: -4.018159866333008
    3. '   ' → logprob: -12.018159866333008
    4. ' ' → logprob: -14.018159866333008
    5. '(s' → logprob: -14.018159866333008
    6. '    ' → logprob: -14.393159866333008
    7. '       ' → logprob: -15.393159866333008
    8. '	s' → logprob: -15.643159866333008
    9. '```' → logprob: -15.768159866333008
    10. '
' → logprob: -16.018159866333008

Token 434: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011892046313732862
    2. ' ,' → logprob: -9.12511920928955
    3. ')' → logprob: -12.00011920928955
    4. '%' → logprob: -13.12511920928955
    5. ' %' → logprob: -13.62511920928955
    6. '   ' → logprob: -15.00011920928955
    7. ',
' → logprob: -16.250118255615234
    8. '%,' → logprob: -16.500118255615234
    9. ' ' → logprob: -17.875118255615234
    10. '```' → logprob: -18.375118255615234

Token 435: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -9.615255839889869e-05
    2. ' mod' → logprob: -9.250096321105957
    3. '
' → logprob: -19.25009536743164
    4. '(mod' → logprob: -20.37509536743164
    5. '	mod' → logprob: -20.87509536743164
    6. '   ' → logprob: -22.00009536743164
    7. '```' → logprob: -22.37509536743164
    8. ')' → logprob: -23.50009536743164
    9. 'moder' → logprob: -23.50009536743164
    10. '_mod' → logprob: -24.25009536743164

Token 436: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1472419600977446e-06
    2. ')
' → logprob: -14.625000953674316
    3. ' )' → logprob: -14.750000953674316
    4. '   ' → logprob: -16.000001907348633
    5. ',' → logprob: -16.500001907348633
    6. ' ' → logprob: -17.125001907348633
    7. '),' → logprob: -17.875001907348633
    8. ')

' → logprob: -19.375001907348633
    9. ')#' → logprob: -19.875001907348633
    10. ')}' → logprob: -20.125001907348633

Token 437: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08155832439661026
    2. '<|end|>' → logprob: -3.7065582275390625
    3. '*' → logprob: -4.3315582275390625
    4. 'def' → logprob: -4.5815582275390625
    5. ' ' → logprob: -4.7065582275390625
    6. ',' → logprob: -5.7065582275390625
    7. '    
' → logprob: -5.7065582275390625
    8. '```' → logprob: -6.0815582275390625
    9. '  ' → logprob: -6.2065582275390625
    10. '\' → logprob: -6.4565582275390625

Token 438: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43074831366539
    2. 'return' (adapté à ' return') → logprob: -1.1807483434677124
    3. 'def' → logprob: -3.430748224258423
    4. ' return' → logprob: -4.555748462677002
    5. '  ' → logprob: -11.180747985839844
    6. ' ' → logprob: -11.180747985839844
    7. '	return' → logprob: -11.430747985839844
    8. ':return' → logprob: -12.555747985839844
    9. '```' → logprob: -12.555747985839844
    10. ' def' → logprob: -13.055747985839844

Token 439: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0011745095252990723
    2. ' ans' → logprob: -6.751174449920654
    3. '(ans' → logprob: -12.376174926757812
    4. '	ans' → logprob: -16.376174926757812
    5. '_ans' → logprob: -20.251174926757812
    6. 'answer' → logprob: -20.626174926757812
    7. 'ann' → logprob: -21.251174926757812
    8. '   ' → logprob: -21.626174926757812
    9. 'abs' → logprob: -22.626174926757812
    10. ' ' → logprob: -22.751174926757812

Token 440: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00010032468708232045
    2. '*' → logprob: -10.000100135803223
    3. '**' → logprob: -11.000100135803223
    4. '```' → logprob: -11.750100135803223
    5. '_def' → logprob: -12.125100135803223
    6. '_' → logprob: -12.125100135803223
    7. '<|end|>' → logprob: -12.500100135803223
    8. '\' → logprob: -12.500100135803223
    9. ' def' → logprob: -13.000100135803223
    10. '#' → logprob: -13.125100135803223

Token 441: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.3856492842023727e-06
    2. '*' → logprob: -14.375000953674316
    3. ' def' → logprob: -14.875000953674316
    4. '#' → logprob: -17.000001907348633
    5. '```' → logprob: -17.000001907348633
    6. '%' → logprob: -17.125001907348633
    7. ':def' → logprob: -17.125001907348633
    8. '-def' → logprob: -17.250001907348633
    9. '**' → logprob: -17.250001907348633
    10. '1' → logprob: -17.500001907348633

Token 442: ' multiply' (ID: 57388)
  Prédit: 'multiply'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'multiply' → logprob: -0.012511883862316608
    2. ' multiply' → logprob: -4.387511730194092
    3. 'multip' → logprob: -14.13751220703125
    4. 'main' → logprob: -14.26251220703125
    5. 'mul' → logprob: -14.76251220703125
    6. 'ultiply' → logprob: -15.88751220703125
    7. 'mult' → logprob: -16.13751220703125
    8. 'm' → logprob: -16.51251220703125
    9. '.multiply' → logprob: -17.26251220703125
    10. 'def' → logprob: -17.38751220703125

Token 443: '_and' (ID: 18645)
  Prédit: '_and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_and' → logprob: -7.465036105713807e-06
    2. '_' → logprob: -12.500007629394531
    3. 'and' → logprob: -13.000007629394531
    4. '_a' → logprob: -14.500007629394531
    5. '(a' → logprob: -14.750007629394531
    6. '_an' → logprob: -15.500007629394531
    7. '_(' → logprob: -16.12500762939453
    8. ' and' → logprob: -16.25000762939453
    9. '_AND' → logprob: -16.87500762939453
    10. '(' → logprob: -17.00000762939453

Token 444: '_mod' (ID: 15325)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -9.088346359931165e-07
    2. '_mod' → logprob: -14.250000953674316
    3. ' mod' → logprob: -15.750000953674316
    4. 'def' → logprob: -18.625
    5. '	mod' → logprob: -19.75
    6. 'omod' → logprob: -20.375
    7. 'Mod' → logprob: -22.0
    8. 'od' → logprob: -22.375
    9. 'mul' → logprob: -22.375
    10. '(mod' → logprob: -22.625

Token 445: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.00071695790393278
    2. '(ans' → logprob: -7.2507171630859375
    3. '(' → logprob: -12.500717163085938
    4. '(x' → logprob: -12.875717163085938
    5. ' (' → logprob: -14.375717163085938
    6. 'a' → logprob: -17.250717163085938
    7. '(num' → logprob: -18.125717163085938
    8. '(base' → logprob: -18.500717163085938
    9. '(acc' → logprob: -18.875717163085938
    10. '(arr' → logprob: -19.375717163085938

Token 446: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.0100624169572257e-05
    2. ' ,' → logprob: -11.125020027160645
    3. ',a' → logprob: -12.375020027160645
    4. '<|end|>' → logprob: -14.375020027160645
    5. 'a' → logprob: -15.125020027160645
    6. ',b' → logprob: -16.75002098083496
    7. ')' → logprob: -17.37502098083496
    8. ',
' → logprob: -17.50002098083496
    9. '‌,' → logprob: -17.50002098083496
    10. '_,' → logprob: -18.62502098083496

Token 447: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0001234428636962548
    2. ' b' → logprob: -9.000123023986816
    3. 'mod' → logprob: -18.250123977661133
    4. 'a' → logprob: -19.625123977661133
    5. ' ' → logprob: -19.875123977661133
    6. 'm' → logprob: -20.250123977661133
    7. '   ' → logprob: -20.625123977661133
    8. '	b' → logprob: -20.750123977661133
    9. '```' → logprob: -21.875123977661133
    10. 'n' → logprob: -22.625123977661133

Token 448: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.253090865968261e-06
    2. ' ,' → logprob: -11.625009536743164
    3. ',a' → logprob: -15.250009536743164
    4. '_,' → logprob: -18.625009536743164
    5. ',int' → logprob: -19.125009536743164
    6. 'a' → logprob: -19.125009536743164
    7. ',
' → logprob: -19.375009536743164
    8. '   ' → logprob: -20.000009536743164
    9. '‌,' → logprob: -20.250009536743164
    10. '```' → logprob: -21.750009536743164

Token 449: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.006718452088534832
    2. ' mod' → logprob: -5.006718635559082
    3. 'm' → logprob: -12.756718635559082
    4. '	mod' → logprob: -16.631717681884766
    5. '   ' → logprob: -17.381717681884766
    6. ' ' → logprob: -17.506717681884766
    7. 'MOD' → logprob: -18.131717681884766
    8. ' m' → logprob: -18.381717681884766
    9. 'moder' → logprob: -18.756717681884766
    10. 'c' → logprob: -19.006717681884766

Token 450: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0004953675088472664
    2. '):
' → logprob: -7.625495433807373
    3. ' ):' → logprob: -13.000494956970215
    4. ',' → logprob: -13.125494956970215
    5. ':' → logprob: -13.250494956970215
    6. ')' → logprob: -14.125494956970215
    7. '):
' → logprob: -14.625494956970215
    8. '}:' → logprob: -17.00049591064453
    9. '):

' → logprob: -17.62549591064453
    10. ']:' → logprob: -18.12549591064453

Token 451: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.38500121235847473
    2. '   ' → logprob: -1.3850011825561523
    3. ' return' → logprob: -2.8850011825561523
    4. '(a' → logprob: -4.385001182556152
    5. ' (' → logprob: -7.510001182556152
    6. '(return' → logprob: -8.760001182556152
    7. '```' → logprob: -9.135001182556152
    8. '	return' → logprob: -10.385001182556152
    9. 'a' → logprob: -10.760001182556152
    10. '(' → logprob: -11.260001182556152

Token 452: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.03004111908376217
    2. ' return' → logprob: -3.530041217803955
    3. '   ' → logprob: -8.280040740966797
    4. '(return' → logprob: -11.280040740966797
    5. '(a' → logprob: -11.280040740966797
    6. ' (' → logprob: -12.530040740966797
    7. '```' → logprob: -12.530040740966797
    8. '	return' → logprob: -13.030040740966797
    9. '
' → logprob: -14.030040740966797
    10. '{return' → logprob: -14.530040740966797

Token 453: ' (' (ID: 350)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.006715728435665369
    2. ' (' → logprob: -5.006715774536133
    3. 'a' → logprob: -15.756715774536133
    4. '(' → logprob: -16.506715774536133
    5. '(ab' → logprob: -16.756715774536133
    6. '(A' → logprob: -17.006715774536133
    7. '((' → logprob: -17.006715774536133
    8. '(ans' → logprob: -18.256715774536133
    9. '(ax' → logprob: -18.631715774536133
    10. '   ' → logprob: -18.756715774536133

Token 454: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.3856492842023727e-06
    2. '(a' → logprob: -14.125000953674316
    3. ' a' → logprob: -14.375000953674316
    4. '	a' → logprob: -18.625001907348633
    5. '_a' → logprob: -20.625001907348633
    6. ')a' → logprob: -20.750001907348633
    7. '   ' → logprob: -20.875001907348633
    8. 'а' → logprob: -20.875001907348633
    9. '[a' → logprob: -21.875001907348633
    10. '```' → logprob: -22.250001907348633

Token 455: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.10025336593389511
    2. '*' → logprob: -2.3502533435821533
    3. '*b' → logprob: -9.975253105163574
    4. ' ' → logprob: -16.10025405883789
    5. ' ' → logprob: -17.47525405883789
    6. ' **' → logprob: -18.47525405883789
    7. '**' → logprob: -18.47525405883789
    8. '*a' → logprob: -19.97525405883789
    9. '   ' → logprob: -20.72525405883789
    10. '*object' → logprob: -20.72525405883789

Token 456: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0019286326132714748
    2. ' b' → logprob: -6.251928806304932
    3. '   ' → logprob: -20.376928329467773
    4. '	b' → logprob: -20.876928329467773
    5. ')b' → logprob: -21.501928329467773
    6. '(b' → logprob: -21.876928329467773
    7. ' ' → logprob: -22.626928329467773
    8. '    ' → logprob: -23.001928329467773
    9. '
' → logprob: -23.001928329467773
    10. '_b' → logprob: -24.251928329467773

Token 457: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00016825977945700288
    2. ')%' → logprob: -8.750167846679688
    3. ' )' → logprob: -11.750167846679688
    4. '%' → logprob: -13.250167846679688
    5. ' %' → logprob: -17.000167846679688
    6. '）' → logprob: -19.500167846679688
    7. '   ' → logprob: -20.125167846679688
    8. ')
' → logprob: -20.125167846679688
    9. '%)' → logprob: -20.125167846679688
    10. '),' → logprob: -20.125167846679688

Token 458: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.6931471824645996
    2. ' %' → logprob: -0.6931471824645996
    3. ' ' → logprob: -17.693147659301758
    4. ' ' → logprob: -19.943147659301758
    5. '%s' → logprob: -20.443147659301758
    6. '%n' → logprob: -20.443147659301758
    7. '```' → logprob: -20.568147659301758
    8. ')%' → logprob: -20.693147659301758
    9. '%b' → logprob: -20.818147659301758
    10. ' %=' → logprob: -20.818147659301758

Token 459: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -4.842555426876061e-06
    2. ' mod' → logprob: -12.250004768371582
    3. '(mod' → logprob: -21.3750057220459
    4. '	mod' → logprob: -23.6250057220459
    5. '```' → logprob: -24.2500057220459
    6. 'moder' → logprob: -25.0000057220459
    7. ' ' → logprob: -25.8750057220459
    8. 'mo' → logprob: -26.3750057220459
    9. 'mods' → logprob: -26.6250057220459
    10. 'm' → logprob: -26.6250057220459

Token 460: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00027087211492471397
    2. '```' → logprob: -9.25027084350586
    3. 'n' → logprob: -9.75027084350586
    4. '#' → logprob: -10.00027084350586
    5. 'if' → logprob: -10.25027084350586
    6. 'mod' → logprob: -10.62527084350586
    7. '<|end|>' → logprob: -12.37527084350586
    8. 'print' → logprob: -12.75027084350586
    9. 'MOD' → logprob: -13.87527084350586
    10. ' def' → logprob: -14.25027084350586

Token 461: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0014570204075425863
    2. 'MOD' → logprob: -6.626457214355469
    3. '```' → logprob: -9.501457214355469
    4. 'if' → logprob: -10.126457214355469
    5. 'mod' → logprob: -11.126457214355469
    6. ' def' → logprob: -13.876457214355469
    7. ' MOD' → logprob: -14.626457214355469
    8. 'print' → logprob: -16.50145721435547
    9. 'Mod' → logprob: -17.00145721435547
    10. '#' → logprob: -17.50145721435547

Token 462: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.474820613861084
    2. ' main' → logprob: -0.974820613861084
    3. 'def' → logprob: -7.224820613861084
    4. ' def' → logprob: -11.224821090698242
    5. '__' → logprob: -14.224821090698242
    6. 'solve' → logprob: -15.349821090698242
    7. '_main' → logprob: -15.474821090698242
    8. 'if' → logprob: -15.849821090698242
    9. ' solve' → logprob: -15.974821090698242
    10. ' run' → logprob: -16.599821090698242

Token 463: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -1.0325924449716695e-05
    2. ' ():' → logprob: -12.00001049041748
    3. '():
' → logprob: -12.50001049041748
    4. '()' → logprob: -15.75001049041748
    5. '(' → logprob: -16.500009536743164
    6. '():
' → logprob: -17.125009536743164
    7. '()>' → logprob: -17.750009536743164
    8. '_' → logprob: -18.375009536743164
    9. 'def' → logprob: -18.375009536743164
    10. ':' → logprob: -18.500009536743164

Token 464: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09052667021751404
    2. 'n' → logprob: -2.590526580810547
    3. ' n' → logprob: -4.465526580810547
    4. '	n' → logprob: -10.590526580810547
    5. '  ' → logprob: -11.465526580810547
    6. '
' → logprob: -11.465526580810547
    7. 'def' → logprob: -11.590526580810547
    8. '```' → logprob: -11.965526580810547
    9. ' ' → logprob: -12.715526580810547
    10. '    
' → logprob: -13.090526580810547

Token 465: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.10642226785421371
    2. '   ' → logprob: -2.606422185897827
    3. ' n' → logprob: -3.606422185897827
    4. '	n' → logprob: -11.856422424316406
    5. ' ' → logprob: -14.481422424316406
    6. '  ' → logprob: -14.606422424316406
    7. '```' → logprob: -16.731422424316406
    8. '(n' → logprob: -17.731422424316406
    9. '
' → logprob: -18.106422424316406
    10. '   ' → logprob: -18.481422424316406

Token 466: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.141186450899113e-05
    2. ',k' → logprob: -10.875020980834961
    3. ' ,' → logprob: -13.250020980834961
    4. '=' → logprob: -15.375020980834961
    5. '‌,' → logprob: -16.25002098083496
    6. ',
' → logprob: -16.25002098083496
    7. 'k' → logprob: -16.37502098083496
    8. ',n' → logprob: -17.50002098083496
    9. ',K' → logprob: -18.25002098083496
    10. '   ' → logprob: -18.50002098083496

Token 467: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.15271064639091492
    2. ' ' → logprob: -2.7777106761932373
    3. 'k' → logprob: -3.0277106761932373
    4. '<|end|>' → logprob: -3.5277106761932373
    5. ' ' → logprob: -7.777710437774658
    6. ' 
' → logprob: -8.152710914611816
    7. 'space' → logprob: -8.277710914611816
    8. ',' → logprob: -9.277710914611816
    9. '=' → logprob: -9.277710914611816
    10. '    ' → logprob: -9.527710914611816

Token 468: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132733702659607
    2. '=' → logprob: -1.3132734298706055
    3. ',' → logprob: -11.438273429870605
    4. '=k' → logprob: -15.063273429870605
    5. ' ' → logprob: -15.563273429870605
    6. ')' → logprob: -15.938273429870605
    7. ' =
' → logprob: -16.81327247619629
    8. '.' → logprob: -17.43827247619629
    9. '=create' → logprob: -17.56327247619629
    10. '   ' → logprob: -17.56327247619629

Token 469: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.0002613358374219388
    2. 'read' → logprob: -8.250261306762695
    3. '	read' → logprob: -19.875261306762695
    4. '(read' → logprob: -23.750261306762695
    5. '_read' → logprob: -24.250261306762695
    6. '.read' → logprob: -25.000261306762695
    7. ' reads' → logprob: -25.125261306762695
    8. ' map' → logprob: -25.875261306762695
    9. ' write' → logprob: -25.875261306762695
    10. ' readline' → logprob: -26.375261306762695

Token 470: '_initial' (ID: 45740)
  Prédit: '_initial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_initial' → logprob: -0.009792448952794075
    2. '_' → logprob: -4.634792327880859
    3. '(' → logprob: -11.75979232788086
    4. ' _' → logprob: -11.88479232788086
    5. '_INITIAL' → logprob: -12.00979232788086
    6. '_final' → logprob: -12.25979232788086
    7. '_n' → logprob: -13.13479232788086
    8. '_init' → logprob: -13.50979232788086
    9. '_in' → logprob: -13.63479232788086
    10. '()' → logprob: -14.00979232788086

Token 471: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -6.837811088189483e-05
    2. '_' → logprob: -9.875068664550781
    3. 'input' → logprob: -11.750068664550781
    4. '_space' → logprob: -13.250068664550781
    5. ' _' → logprob: -13.375068664550781
    6. '_inputs' → logprob: -13.625068664550781
    7. '_code' → logprob: -14.000068664550781
    8. '```' → logprob: -14.500068664550781
    9. '_in' → logprob: -14.875068664550781
    10. '__' → logprob: -14.875068664550781

Token 472: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.017885934561491013
    2. '()
' → logprob: -4.142886161804199
    3. '   ' → logprob: -7.017886161804199
    4. '
' → logprob: -7.892886161804199
    5. ')' → logprob: -8.2678861618042
    6. '<|end|>' → logprob: -9.2678861618042
    7. '(' → logprob: -9.8928861618042
    8. '();' → logprob: -10.5178861618042
    9. '(n' → logprob: -10.7678861618042
    10. 'newline' → logprob: -10.8928861618042

Token 473: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003927487414330244
    2. ' ki' → logprob: -6.128927707672119
    3. 'ki' → logprob: -6.378927707672119
    4. '```' → logprob: -11.378927230834961
    5. '   ' → logprob: -11.878927230834961
    6. '<|end|>' → logprob: -12.003927230834961
    7. '    
' → logprob: -12.128927230834961
    8. '
' → logprob: -12.253927230834961
    9. 'k' → logprob: -13.503927230834961
    10. '  ' → logprob: -13.753927230834961

Token 474: ' ki' (ID: 3314)
  Prédit: 'ki'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ki' (adapté à ' ki') → logprob: -0.003682140028104186
    2. ' ki' → logprob: -5.6286821365356445
    3. '   ' → logprob: -9.878682136535645
    4. 'k' → logprob: -11.253682136535645
    5. 'kii' → logprob: -12.003682136535645
    6. 'ko' → logprob: -12.878682136535645
    7. '```' → logprob: -13.628682136535645
    8. ' ' → logprob: -13.753682136535645
    9. 'if' → logprob: -13.878682136535645
    10. 'kin' → logprob: -14.003682136535645

Token 475: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0788925439119339
    2. '=' → logprob: -2.578892469406128
    3. ',' → logprob: -12.828892707824707
    4. '	' → logprob: -16.95389175415039
    5. ' ' → logprob: -17.07889175415039
    6. ')' → logprob: -17.57889175415039
    7. '   ' → logprob: -18.20389175415039
    8. '＝' → logprob: -18.57889175415039
    9. '.' → logprob: -18.95389175415039
    10. '[' → logprob: -19.20389175415039

Token 476: ' build' (ID: 3024)
  Prédit: 'build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'build' → logprob: -0.3868717551231384
    2. ' build' → logprob: -1.1368718147277832
    3. '(build' → logprob: -14.886871337890625
    4. '	build' → logprob: -15.136871337890625
    5. ' buil' → logprob: -17.136871337890625
    6. '_build' → logprob: -17.386871337890625
    7. '.build' → logprob: -17.636871337890625
    8. '   ' → logprob: -17.886871337890625
    9. 'b' → logprob: -18.636871337890625
    10. ' ' → logprob: -19.261871337890625

Token 477: '_ad' (ID: 23782)
  Prédit: '_ad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ad' → logprob: -2.935296834039036e-06
    2. '_adj' → logprob: -12.87500286102295
    3. 'adj' → logprob: -16.125003814697266
    4. '_' → logprob: -16.125003814697266
    5. '_an' → logprob: -17.125003814697266
    6. ' adjacency' → logprob: -17.250003814697266
    7. '_add' → logprob: -17.625003814697266
    8. '(n' → logprob: -18.500003814697266
    9. '_a' → logprob: -18.875003814697266
    10. '(ad' → logprob: -19.000003814697266

Token 478: 'jac' (ID: 77250)
  Prédit: 'jac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jac' → logprob: -4.251091377227567e-05
    2. 'j' → logprob: -10.125042915344238
    3. 'acency' → logprob: -13.125042915344238
    4. '_j' → logprob: -16.125041961669922
    5. ' adjacency' → logprob: -16.125041961669922
    6. ' jac' → logprob: -16.250041961669922
    7. 'jc' → logprob: -17.000041961669922
    8. 'Jac' → logprob: -17.125041961669922
    9. '
' → logprob: -17.875041961669922
    10. '[j' → logprob: -18.125041961669922

Token 479: 'ency' (ID: 2799)
  Prédit: 'ency'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ency' → logprob: -0.0014483332633972168
    2. 'n' → logprob: -7.626448154449463
    3. 'cy' → logprob: -8.251448631286621
    4. 'acency' → logprob: -8.376448631286621
    5. '_list' → logprob: -8.501448631286621
    6. 'y' → logprob: -9.376448631286621
    7. 'list' → logprob: -10.126448631286621
    8. '   ' → logprob: -10.126448631286621
    9. 'c' → logprob: -11.251448631286621
    10. 't' → logprob: -11.251448631286621

Token 480: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -6.704273118884885e-07
    2. 'list' → logprob: -14.250000953674316
    3. ' _' → logprob: -17.5
    4. '_' → logprob: -18.25
    5. '[_' → logprob: -18.375
    6. '_lists' → logprob: -18.375
    7. '```' → logprob: -18.5
    8. 'List' → logprob: -20.0
    9. '_l' → logprob: -20.25
    10. '(_' → logprob: -20.375

Token 481: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.9146995327901095e-05
    2. '(' → logprob: -11.125019073486328
    3. ' (' → logprob: -12.375019073486328
    4. ',' → logprob: -17.625019073486328
    5. '(len' → logprob: -18.250019073486328
    6. '(N' → logprob: -18.375019073486328
    7. '(
' → logprob: -18.625019073486328
    8. '   ' → logprob: -18.875019073486328
    9. ' ' → logprob: -19.250019073486328
    10. '```' → logprob: -19.875019073486328

Token 482: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06202247366309166
    2. ')' → logprob: -2.8120224475860596
    3. ',k' → logprob: -9.93702220916748
    4. ' ,' → logprob: -13.31202220916748
    5. ',)' → logprob: -13.43702220916748
    6. ',n' → logprob: -13.56202220916748
    7. ' )' → logprob: -14.93702220916748
    8. '(k' → logprob: -15.18702220916748
    9. '   ' → logprob: -15.31202220916748
    10. 'k' → logprob: -15.43702220916748

Token 483: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13942892849445343
    2. 'seen' → logprob: -2.3894288539886475
    3. ' seen' → logprob: -3.2644288539886475
    4. 'k' → logprob: -9.389429092407227
    5. ' ' → logprob: -9.764429092407227
    6. '  ' → logprob: -10.764429092407227
    7. '
' → logprob: -11.014429092407227
    8. '    
' → logprob: -11.014429092407227
    9. '_seen' → logprob: -11.389429092407227
    10. '```' → logprob: -11.639429092407227

Token 484: ' mod' (ID: 1812)
  Prédit: 'seen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'seen' → logprob: -3.941161776310764e-05
    2. '   ' → logprob: -10.375039100646973
    3. ' seen' → logprob: -11.750039100646973
    4. 'shown' → logprob: -15.750039100646973
    5. ' ' → logprob: -17.62504005432129
    6. '
' → logprob: -17.62504005432129
    7. '  ' → logprob: -18.37504005432129
    8. '    
' → logprob: -18.62504005432129
    9. '```' → logprob: -20.00004005432129
    10. 's' → logprob: -20.25004005432129

Token 485: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008614926598966122
    2. '=' → logprob: -4.758615016937256
    3. ',' → logprob: -15.508614540100098
    4. ' =
' → logprob: -16.633615493774414
    5. '_' → logprob: -17.383615493774414
    6. '=int' → logprob: -17.883615493774414
    7. '.' → logprob: -18.633615493774414
    8. ')' → logprob: -18.633615493774414
    9. ' ' → logprob: -18.633615493774414
    10. ':' → logprob: -19.008615493774414

Token 486: ' pow' (ID: 9779)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0038106455467641354
    2. '100' → logprob: -5.628810882568359
    3. ' ' → logprob: -8.50381088256836
    4. '1' → logprob: -12.50381088256836
    5. 'int' → logprob: -13.25381088256836
    6. '998' → logprob: -13.62881088256836
    7. 'pow' → logprob: -13.87881088256836
    8. '１０' → logprob: -15.87881088256836
    9. '   ' → logprob: -16.37881088256836
    10. '101' → logprob: -17.37881088256836

Token 487: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0007101670489646494
    2. '10' → logprob: -7.2507100105285645
    3. '(
' → logprob: -16.625709533691406
    4. '(int' → logprob: -17.375709533691406
    5. '()' → logprob: -17.500709533691406
    6. '```' → logprob: -17.625709533691406
    7. '2' → logprob: -17.875709533691406
    8. 'int' → logprob: -18.250709533691406
    9. 'mod' → logprob: -18.875709533691406
    10. '100' → logprob: -19.625709533691406

Token 488: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.9361264946837764e-07
    2. '1' → logprob: -17.125
    3. '(' → logprob: -17.375
    4. '100' → logprob: -17.875
    5. 'int' → logprob: -18.625
    6. '１０' → logprob: -18.875
    7. '2' → logprob: -19.0
    8. '998' → logprob: -19.125
    9. '```' → logprob: -19.375
    10. '{' → logprob: -20.25

Token 489: ',' (ID: 11)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -3.292907877039397e-06
    2. '09' → logprob: -13.00000286102295
    3. '**' → logprob: -14.62500286102295
    4. ' ' → logprob: -15.00000286102295
    5. '```' → logprob: -16.625003814697266
    6. '+' → logprob: -17.000003814697266
    7. ',' → logprob: -17.625003814697266
    8. '   ' → logprob: -19.250003814697266
    9. '
' → logprob: -20.000003814697266
    10. '=' → logprob: -20.375003814697266

Token 490: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.9361264946837764e-07
    2. '
' → logprob: -16.375
    3. '   ' → logprob: -18.125
    4. '+' → logprob: -18.25
    5. '

' → logprob: -18.375
    6. '09' → logprob: -19.0
    7. ' ' → logprob: -19.5
    8. '```' → logprob: -19.75
    9. '{' → logprob: -20.25
    10. '９' → logprob: -20.5

Token 491: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: 0.0
    2. '
' → logprob: -17.875
    3. '09' → logprob: -19.0
    4. '```' → logprob: -20.0
    5. '

' → logprob: -20.125
    6. '   ' → logprob: -20.375
    7. '+' → logprob: -20.625
    8. '９' → logprob: -20.875
    9. '**' → logprob: -21.0
    10. '}' → logprob: -21.0

Token 492: ')' (ID: 8)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -7.76759916334413e-05
    2. ' +' → logprob: -10.000077247619629
    3. '7' → logprob: -10.750077247619629
    4. ')' → logprob: -12.375077247619629
    5. ')+' → logprob: -12.375077247619629
    6. ',' → logprob: -13.875077247619629
    7. '+
' → logprob: -14.500077247619629
    8. '9' → logprob: -15.250077247619629
    9. 'plus' → logprob: -15.500077247619629
    10. '```' → logprob: -15.750077247619629

Token 493: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0017831178847700357
    2. '7' → logprob: -6.3767828941345215
    3. ' +' → logprob: -9.50178337097168
    4. 'plus' → logprob: -12.87678337097168
    5. '```' → logprob: -13.37678337097168
    6. '+
' → logprob: -14.12678337097168
    7. ' plus' → logprob: -14.50178337097168
    8. '＋' → logprob: -15.37678337097168
    9. '9' → logprob: -15.87678337097168
    10. 'Plus' → logprob: -16.50178337097168

Token 494: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '+' → logprob: -19.5
    3. ' ' → logprob: -20.625
    4. '   ' → logprob: -21.125
    5. '9' → logprob: -21.25
    6. '07' → logprob: -21.75
    7. '```' → logprob: -22.0
    8. '

' → logprob: -22.5
    9. '
' → logprob: -23.0
    10. '７' → logprob: -23.125

Token 495: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. ' ' → logprob: -19.25
    3. '```' → logprob: -19.625
    4. '+' → logprob: -19.75
    5. '

' → logprob: -19.875
    6. '
' → logprob: -20.0
    7. '9' → logprob: -20.5
    8. '07' → logprob: -20.625
    9. '   ' → logprob: -20.625
    10. '
' → logprob: -21.875

Token 496: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06735914200544357
    2. '   ' → logprob: -2.817359209060669
    3. '    
' → logprob: -5.81735897064209
    4. 'seen' → logprob: -6.94235897064209
    5. ' seen' → logprob: -7.44235897064209
    6. '
' → logprob: -8.19235897064209
    7. '  
' → logprob: -8.69235897064209
    8. '	
' → logprob: -8.94235897064209
    9. '   
' → logprob: -9.44235897064209
    10. ' 
' → logprob: -9.44235897064209

Token 497: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015652115689590573
    2. 'seen' → logprob: -7.126564979553223
    3. ' seen' → logprob: -7.251564979553223
    4. '
' → logprob: -10.126564979553223
    5. '   ' → logprob: -12.751564979553223
    6. '_seen' → logprob: -13.001564979553223
    7. '    
' → logprob: -13.126564979553223
    8. '  ' → logprob: -14.251564979553223
    9. 'se' → logprob: -14.501564979553223
    10. ' ' → logprob: -14.751564979553223

Token 498: ' seen' (ID: 6177)
  Prédit: 'seen'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seen' (adapté à ' seen') → logprob: -0.0008354776655323803
    2. ' seen' → logprob: -7.375835418701172
    3. '   ' → logprob: -8.500835418701172
    4. '
' → logprob: -13.250835418701172
    5. '    
' → logprob: -14.125835418701172
    6. 'shown' → logprob: -14.250835418701172
    7. ' ' → logprob: -14.375835418701172
    8. 's' → logprob: -14.500835418701172
    9. 'se' → logprob: -14.750835418701172
    10. '_seen' → logprob: -15.250835418701172

Token 499: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05653925612568855
    2. '=' → logprob: -2.931539297103882
    3. ',' → logprob: -6.431539058685303
    4. '[' → logprob: -10.056539535522461
    5. ' ,' → logprob: -13.931539535522461
    6. ' ' → logprob: -14.806539535522461
    7. '	' → logprob: -14.806539535522461
    8. '   ' → logprob: -15.556539535522461
    9. ' =[' → logprob: -15.556539535522461
    10. ')' → logprob: -15.931539535522461

Token 500: ' initialize' (ID: 18400)
  Prédit: 'initialize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initialize' → logprob: -0.014164329506456852
    2. ' initialize' → logprob: -4.264164447784424
    3. '	initialize' → logprob: -14.889163970947266
    4. '.initialize' → logprob: -15.764163970947266
    5. '_initialize' → logprob: -15.764163970947266
    6. 'initial' → logprob: -16.139163970947266
    7. '   ' → logprob: -17.139163970947266
    8. '[' → logprob: -18.889163970947266
    9. 'itialize' → logprob: -18.889163970947266
    10. '=' → logprob: -19.139163970947266

Token 501: '_seen' (ID: 158839)
  Prédit: '_seen'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_seen' → logprob: -0.09234904497861862
    2. '(n' → logprob: -2.467349052429199
    3. 'seen' → logprob: -5.967349052429199
    4. '_' → logprob: -7.592349052429199
    5. '_se' → logprob: -8.7173490524292
    6. '_(' → logprob: -10.3423490524292
    7. ' (' → logprob: -10.5923490524292
    8. '(' → logprob: -10.7173490524292
    9. '_visible' → logprob: -10.9673490524292
    10. '(se' → logprob: -10.9673490524292

Token 502: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0011031834874302149
    2. ' (' → logprob: -7.126103401184082
    3. '(' → logprob: -8.126103401184082
    4. ',' → logprob: -13.751103401184082
    5. ' ' → logprob: -14.876103401184082
    6. '<|end|>' → logprob: -15.251103401184082
    7. '   ' → logprob: -15.376103401184082
    8. '```' → logprob: -15.626103401184082
    9. '(len' → logprob: -15.751103401184082
    10. '(
' → logprob: -15.751103401184082

Token 503: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.729906196298543e-06
    2. ',k' → logprob: -11.875009536743164
    3. ' ,' → logprob: -12.875009536743164
    4. ',
' → logprob: -16.625009536743164
    5. '‌,' → logprob: -18.125009536743164
    6. '   ' → logprob: -18.500009536743164
    7. ',n' → logprob: -19.375009536743164
    8. ')' → logprob: -19.375009536743164
    9. '```' → logprob: -20.125009536743164
    10. 'k' → logprob: -20.250009536743164

Token 504: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.38687121868133545
    2. ' k' → logprob: -1.1368712186813354
    3. '	k' → logprob: -16.136871337890625
    4. ')' → logprob: -16.761871337890625
    5. ',k' → logprob: -17.886871337890625
    6. '_k' → logprob: -18.011871337890625
    7. ' ' → logprob: -18.011871337890625
    8. '{k' → logprob: -18.636871337890625
    9. '(k' → logprob: -18.761871337890625
    10. ' к' → logprob: -19.011871337890625

Token 505: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11885424703359604
    2. ')
' → logprob: -2.243854284286499
    3. '   ' → logprob: -5.11885404586792
    4. ')
' → logprob: -11.618854522705078
    5. ',' → logprob: -11.993854522705078
    6. ' )' → logprob: -12.118854522705078
    7. ' )
' → logprob: -12.368854522705078
    8. ' ' → logprob: -13.243854522705078
    9. '
' → logprob: -14.243854522705078
    10. ')t' → logprob: -14.243854522705078

Token 506: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006202631164342165
    2. 'todo' → logprob: -5.381202697753906
    3. '	t' → logprob: -6.756202697753906
    4. ' todo' → logprob: -7.881202697753906
    5. '
' → logprob: -11.131202697753906
    6. '   ' → logprob: -12.006202697753906
    7. '\t' → logprob: -12.256202697753906
    8. '(todo' → logprob: -12.381202697753906
    9. '    
' → logprob: -13.256202697753906
    10. '```' → logprob: -13.881202697753906

Token 507: ' todo' (ID: 6520)
  Prédit: 'todo'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'todo' (adapté à ' todo') → logprob: -3.881560041918419e-05
    2. '   ' → logprob: -10.250039100646973
    3. ' todo' → logprob: -12.625039100646973
    4. 'tod' → logprob: -16.125038146972656
    5. 'todos' → logprob: -18.000038146972656
    6. '(todo' → logprob: -18.500038146972656
    7. '
' → logprob: -18.875038146972656
    8. '  ' → logprob: -19.000038146972656
    9. 't' → logprob: -19.000038146972656
    10. 'TODO' → logprob: -19.375038146972656

Token 508: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11298778653144836
    2. '=' → logprob: -2.237987756729126
    3. '.append' → logprob: -9.362987518310547
    4. ')' → logprob: -10.362987518310547
    5. '()' → logprob: -10.987987518310547
    6. '(' → logprob: -11.487987518310547
    7. '.' → logprob: -12.237987518310547
    8. ',' → logprob: -12.862987518310547
    9. '.add' → logprob: -12.987987518310547
    10. ' ' → logprob: -13.112987518310547

Token 509: ' initialize' (ID: 18400)
  Prédit: 'initialize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initialize' → logprob: -0.001502717612311244
    2. ' initialize' → logprob: -6.501502513885498
    3. '	initialize' → logprob: -15.001502990722656
    4. '_initialize' → logprob: -17.126502990722656
    5. 'itialize' → logprob: -17.501502990722656
    6. '.initialize' → logprob: -17.751502990722656
    7. 'Initialize' → logprob: -19.876502990722656
    8. 'initial' → logprob: -20.126502990722656
    9. '   ' → logprob: -20.251502990722656
    10. 'italize' → logprob: -20.251502990722656

Token 510: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -0.00036204091156832874
    2. 'todo' → logprob: -8.500362396240234
    3. '(todo' → logprob: -9.000362396240234
    4. '_' → logprob: -11.375362396240234
    5. '_to' → logprob: -11.875362396240234
    6. '()' → logprob: -12.500362396240234
    7. '```' → logprob: -12.750362396240234
    8. '_seen' → logprob: -12.875362396240234
    9. '_done' → logprob: -13.500362396240234
    10. '(_' → logprob: -13.750362396240234

Token 511: 'odo' (ID: 6397)
  Prédit: 'odo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odo' → logprob: -6.704273118884885e-07
    2. 'todo' → logprob: -15.125000953674316
    3. 'do' → logprob: -15.625000953674316
    4. 'o' → logprob: -16.625
    5. 'ODO' → logprob: -18.125
    6. '_' → logprob: -19.0
    7. '```' → logprob: -19.375
    8. '
' → logprob: -19.875
    9. 'ado' → logprob: -20.625
    10. 'oto' → logprob: -20.875

Token 512: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09154210239648819
    2. '
' → logprob: -2.4665420055389404
    3. '    
' → logprob: -6.2165422439575195
    4. '()
' → logprob: -7.9665422439575195
    5. '(process' → logprob: -9.59154224395752
    6. '()' → logprob: -9.84154224395752
    7. '  
' → logprob: -9.96654224395752
    8. '(
' → logprob: -11.21654224395752
    9. '<|end|>' → logprob: -11.59154224395752
    10. '(' → logprob: -11.59154224395752

Token 513: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07697780430316925
    2. 'process' → logprob: -3.0769777297973633
    3. ' process' → logprob: -3.5769777297973633
    4. '	process' → logprob: -10.826977729797363
    5. '
' → logprob: -11.826977729797363
    6. '(process' → logprob: -13.076977729797363
    7. '```' → logprob: -14.451977729797363
    8. '    
' → logprob: -14.951977729797363
    9. '  ' → logprob: -15.076977729797363
    10. '.process' → logprob: -15.076977729797363

Token 514: ' process' (ID: 2273)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' (adapté à ' process') → logprob: -0.060435663908720016
    2. ' process' → logprob: -3.3104357719421387
    3. '   ' → logprob: -3.8104357719421387
    4. '	process' → logprob: -12.06043529510498
    5. '(process' → logprob: -15.18543529510498
    6. '
' → logprob: -15.18543529510498
    7. ' ' → logprob: -15.43543529510498
    8. '.process' → logprob: -15.43543529510498
    9. '  ' → logprob: -16.060436248779297
    10. 'proces' → logprob: -16.935436248779297

Token 515: '_tree' (ID: 27118)
  Prédit: '_tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tree' → logprob: -3.173704271830502e-06
    2. '_t' → logprob: -12.75000286102295
    3. '_' → logprob: -16.750003814697266
    4. '(tree' → logprob: -17.750003814697266
    5. '_process' → logprob: -19.125003814697266
    6. 'tree' → logprob: -19.375003814697266
    7. '_TREE' → logprob: -20.000003814697266
    8. '_tr' → logprob: -20.125003814697266
    9. '_thread' → logprob: -20.375003814697266
    10. '(_' → logprob: -20.500003814697266

Token 516: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.008627697825431824
    2. '(' → logprob: -4.758627891540527
    3. ' (' → logprob: -11.383627891540527
    4. '(
' → logprob: -13.383627891540527
    5. '\(' → logprob: -16.00862693786621
    6. '```' → logprob: -16.13362693786621
    7. '((' → logprob: -17.88362693786621
    8. '(noun' → logprob: -17.88362693786621
    9. '(

' → logprob: -18.25862693786621
    10. '(None' → logprob: -18.75862693786621

Token 517: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.723352049040841e-06
    2. ',k' → logprob: -12.625004768371582
    3. ' ,' → logprob: -13.625004768371582
    4. ',
' → logprob: -16.000003814697266
    5. '   ' → logprob: -16.625003814697266
    6. ')' → logprob: -17.750003814697266
    7. '‌,' → logprob: -18.125003814697266
    8. '(' → logprob: -19.500003814697266
    9. '=' → logprob: -19.750003814697266
    10. '```' → logprob: -19.875003814697266

Token 518: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0007099286303855479
    2. ' k' → logprob: -7.2507100105285645
    3. '   ' → logprob: -18.750709533691406
    4. '
' → logprob: -19.000709533691406
    5. ' ' → logprob: -19.875709533691406
    6. '	k' → logprob: -20.125709533691406
    7. '    ' → logprob: -21.250709533691406
    8. ')' → logprob: -21.250709533691406
    9. '
' → logprob: -21.750709533691406
    10. ',k' → logprob: -21.750709533691406

Token 519: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.3458322731312364e-06
    2. ' ,' → logprob: -11.875007629394531
    3. ',
' → logprob: -15.125007629394531
    4. '   ' → logprob: -17.87500762939453
    5. '‌,' → logprob: -18.50000762939453
    6. '`,' → logprob: -19.50000762939453
    7. '```' → logprob: -19.62500762939453
    8. ')' → logprob: -20.12500762939453
    9. '
' → logprob: -20.12500762939453
    10. '_,' → logprob: -20.37500762939453

Token 520: ' ki' (ID: 3314)
  Prédit: 'ki'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ki' → logprob: -0.0024817234370857477
    2. ' ki' → logprob: -6.002481937408447
    3. 'seen' → logprob: -13.252481460571289
    4. 'ko' → logprob: -13.752481460571289
    5. 'Ki' → logprob: -14.127481460571289
    6. 'kii' → logprob: -14.502481460571289
    7. ' ' → logprob: -14.502481460571289
    8. '   ' → logprob: -14.752481460571289
    9. 'k' → logprob: -15.252481460571289
    10. ')' → logprob: -16.00248146057129

Token 521: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.5577775128767826e-06
    2. ' ,' → logprob: -12.125005722045898
    3. ',
' → logprob: -16.7500057220459
    4. '‌,' → logprob: -17.3750057220459
    5. ' seen' → logprob: -17.3750057220459
    6. 'seen' → logprob: -18.0000057220459
    7. ')' → logprob: -18.6250057220459
    8. '`,' → logprob: -18.8750057220459
    9. '‍,' → logprob: -19.1250057220459
    10. '   ' → logprob: -19.2500057220459

Token 522: ' seen' (ID: 6177)
  Prédit: 'seen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seen' → logprob: -0.0006279678200371563
    2. ' seen' → logprob: -7.3756279945373535
    3. '   ' → logprob: -14.000627517700195
    4. 'shown' → logprob: -15.625627517700195
    5. 'se' → logprob: -15.875627517700195
    6. 's' → logprob: -16.375627517700195
    7. '_seen' → logprob: -16.875627517700195
    8. 'see' → logprob: -17.000627517700195
    9. ' ' → logprob: -17.375627517700195
    10. '	' → logprob: -18.625627517700195

Token 523: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.650518920039758e-06
    2. ' ,' → logprob: -12.625003814697266
    3. ',t' → logprob: -15.500003814697266
    4. ',
' → logprob: -17.500003814697266
    5. '   ' → logprob: -17.875003814697266
    6. ')' → logprob: -18.875003814697266
    7. '```' → logprob: -20.125003814697266
    8. '‌,' → logprob: -20.500003814697266
    9. 'todo' → logprob: -21.000003814697266
    10. '[' → logprob: -21.000003814697266

Token 524: ' todo' (ID: 6520)
  Prédit: 'todo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'todo' → logprob: -0.005234002135694027
    2. ' todo' → logprob: -5.2552337646484375
    3. '(todo' → logprob: -16.005233764648438
    4. '   ' → logprob: -17.755233764648438
    5. 't' → logprob: -18.130233764648438
    6. 'tod' → logprob: -19.130233764648438
    7. ' ' → logprob: -19.255233764648438
    8. '.todo' → logprob: -19.505233764648438
    9. ')' → logprob: -19.880233764648438
    10. '
' → logprob: -20.255233764648438

Token 525: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.465036105713807e-06
    2. ')
' → logprob: -11.875007629394531
    3. '   ' → logprob: -15.000007629394531
    4. ' )' → logprob: -16.50000762939453
    5. ')#' → logprob: -18.25000762939453
    6. ')

' → logprob: -18.25000762939453
    7. ')`' → logprob: -18.62500762939453
    8. ')
' → logprob: -19.75000762939453
    9. ')add' → logprob: -19.75000762939453
    10. '))' → logprob: -19.87500762939453

Token 526: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10221587121486664
    2. '
' → logprob: -2.3522157669067383
    3. '    
' → logprob: -6.727215766906738
    4. '```' → logprob: -7.227215766906738
    5. '<|end|>' → logprob: -10.477215766906738
    6. 'print' → logprob: -10.602215766906738
    7. '``' → logprob: -11.977215766906738
    8. '  
' → logprob: -12.102215766906738
    9. '`' → logprob: -12.602215766906738
    10. '

' → logprob: -13.227215766906738

Token 527: ' ans' (ID: 3345)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.016994792968034744
    2. 'ans' (adapté à ' ans') → logprob: -4.766994953155518
    3. 'answer' → logprob: -5.016994953155518
    4. '   ' → logprob: -7.016994953155518
    5. 'result' → logprob: -7.141994953155518
    6. '```' → logprob: -11.01699447631836
    7. ' print' → logprob: -11.64199447631836
    8. 'final' → logprob: -12.39199447631836
    9. ' ans' → logprob: -13.64199447631836
    10. '    
' → logprob: -13.89199447631836

Token 528: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012512002140283585
    2. '=' → logprob: -4.38751220703125
    3. ',' → logprob: -14.26251220703125
    4. '   ' → logprob: -14.38751220703125
    5. ' ' → logprob: -15.01251220703125
    6. '_' → logprob: -15.26251220703125
    7. ' =
' → logprob: -16.01251220703125
    8. ' =)' → logprob: -16.13751220703125
    9. '  ' → logprob: -16.63751220703125
    10. ')' → logprob: -16.88751220703125

Token 529: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.0004309076175559312
    2. ' compute' → logprob: -7.750431060791016
    3. '   ' → logprob: -15.625431060791016
    4. '1' → logprob: -17.750431060791016
    5. ' ' → logprob: -18.750431060791016
    6. '.compute' → logprob: -19.000431060791016
    7. 'calculate' → logprob: -19.500431060791016
    8. 'computed' → logprob: -19.500431060791016
    9. '```' → logprob: -19.875431060791016
    10. '
' → logprob: -20.125431060791016

Token 530: '_final' (ID: 46468)
  Prédit: '_final'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_final' → logprob: -1.1472419600977446e-06
    2. 'final' → logprob: -13.750000953674316
    3. '_' → logprob: -17.750001907348633
    4. '_f' → logprob: -17.875001907348633
    5. '_finalize' → logprob: -19.250001907348633
    6. ' _' → logprob: -19.375001907348633
    7. '
' → logprob: -19.750001907348633
    8. 'Final' → logprob: -19.875001907348633
    9. '_FINAL' → logprob: -19.875001907348633
    10. '_fin' → logprob: -19.875001907348633

Token 531: '_answer' (ID: 65702)
  Prédit: '_answer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_answer' → logprob: -2.935296834039036e-06
    2. '_ans' → logprob: -12.87500286102295
    3. 'answer' → logprob: -15.50000286102295
    4. '_' → logprob: -17.125003814697266
    5. '_answers' → logprob: -17.625003814697266
    6. ' _' → logprob: -18.625003814697266
    7. '_argument' → logprob: -19.500003814697266
    8. 'Answer' → logprob: -19.500003814697266
    9. '_value' → logprob: -19.875003814697266
    10. '_
' → logprob: -20.000003814697266

Token 532: '(se' (ID: 19430)
  Prédit: '(se'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(se' → logprob: -8.804671233519912e-05
    2. '(' → logprob: -9.37508773803711
    3. ' (' → logprob: -12.87508773803711
    4. '(s' → logprob: -14.50008773803711
    5. '```' → logprob: -16.50008773803711
    6. '(`' → logprob: -17.87508773803711
    7. '(ans' → logprob: -18.00008773803711
    8. '\(' → logprob: -18.75008773803711
    9. 'seen' → logprob: -18.87508773803711
    10. '(
' → logprob: -19.25008773803711

Token 533: 'en' (ID: 262)
  Prédit: 'en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -5.676981345459353e-06
    2. 'e' → logprob: -13.250005722045898
    3. 'een' → logprob: -13.625005722045898
    4. 'seen' → logprob: -14.250005722045898
    5. 'ent' → logprob: -14.625005722045898
    6. '(en' → logprob: -15.125005722045898
    7. ' en' → logprob: -15.875005722045898
    8. 'end' → logprob: -16.0000057220459
    9. 'env' → logprob: -16.0000057220459
    10. 'ен' → logprob: -16.1250057220459

Token 534: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.1008713702030946e-06
    2. ' ,' → logprob: -13.625001907348633
    3. '   ' → logprob: -14.750001907348633
    4. '(ans' → logprob: -15.500001907348633
    5. '(' → logprob: -16.000001907348633
    6. '```' → logprob: -16.750001907348633
    7. '(mod' → logprob: -17.375001907348633
    8. ',
' → logprob: -17.625001907348633
    9. ')' → logprob: -18.875001907348633
    10. '[' → logprob: -20.000001907348633

Token 535: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0004307884373702109
    2. ' mod' → logprob: -7.750430583953857
    3. '(mod' → logprob: -18.375431060791016
    4. '	mod' → logprob: -18.750431060791016
    5. '10' → logprob: -18.875431060791016
    6. '   ' → logprob: -20.000431060791016
    7. 'm' → logprob: -20.375431060791016
    8. 'mods' → logprob: -21.000431060791016
    9. '
' → logprob: -21.375431060791016
    10. 'moder' → logprob: -21.500431060791016

Token 536: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2521980404853821
    2. ')' → logprob: -1.5021979808807373
    3. '   ' → logprob: -8.252198219299316
    4. ')
' → logprob: -11.877198219299316
    5. ' )
' → logprob: -14.377198219299316
    6. ' )' → logprob: -16.127197265625
    7. '())
' → logprob: -16.252197265625
    8. ')

' → logprob: -16.252197265625
    9. ')`
' → logprob: -16.377197265625
    10. '()' → logprob: -16.502197265625

Token 537: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01156197115778923
    2. 'print' → logprob: -4.511561870574951
    3. '```' → logprob: -8.51156234741211
    4. '
' → logprob: -8.88656234741211
    5. ' print' → logprob: -9.13656234741211
    6. '    
' → logprob: -10.38656234741211
    7. '	print' → logprob: -10.76156234741211
    8. '<|end|>' → logprob: -11.76156234741211
    9. '(print' → logprob: -12.88656234741211
    10. '`' → logprob: -14.13656234741211

Token 538: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0009334942442364991
    2. '   ' → logprob: -7.000933647155762
    3. ' print' → logprob: -10.750933647155762
    4. '```' → logprob: -14.875933647155762
    5. '	print' → logprob: -15.625933647155762
    6. '
' → logprob: -17.125932693481445
    7. '.print' → logprob: -18.375932693481445
    8. '(print' → logprob: -18.625932693481445
    9. '#print' → logprob: -18.750932693481445
    10. '_print' → logprob: -19.000932693481445

Token 539: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0052386182360351086
    2. '(' → logprob: -5.2552385330200195
    3. '('' → logprob: -12.88023853302002
    4. '("("' → logprob: -14.00523853302002
    5. ' (' → logprob: -15.13023853302002
    6. '(`' → logprob: -15.38023853302002
    7. '()' → logprob: -15.50523853302002
    8. '(answer' → logprob: -15.50523853302002
    9. '(ord' → logprob: -16.255239486694336
    10. '(paren' → logprob: -16.755239486694336

Token 540: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ')
' → logprob: -16.125
    3. ')`' → logprob: -16.25
    4. ' )' → logprob: -16.375
    5. '`)' → logprob: -18.0
    6. '))' → logprob: -18.375
    7. '')' → logprob: -18.875
    8. '()' → logprob: -19.125
    9. '())' → logprob: -19.875
    10. '(' → logprob: -19.875

Token 541: 'main' (ID: 7731)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.027388527989387512
    2. '
' → logprob: -3.652388572692871
    3. '<|end|>' → logprob: -8.027388572692871
    4. ' if' → logprob: -8.277388572692871
    5. '```' → logprob: -8.277388572692871
    6. '#' → logprob: -9.277388572692871
    7. '\n' → logprob: -10.152388572692871
    8. '_' → logprob: -10.652388572692871
    9. '[' → logprob: -10.902388572692871
    10. '\' → logprob: -11.402388572692871

Token 542: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 540
Tokens correctement prédits (1ère position, stricte): 244
Tokens correctement prédits (1ère position, avec adaptation): 264
Tokens correctement prédits (top 10): 479
Précision stricte (1ère position): 45.19%
Précision adaptée (1ère position): 48.89%
Précision (top 10): 88.70%
================================================================================
