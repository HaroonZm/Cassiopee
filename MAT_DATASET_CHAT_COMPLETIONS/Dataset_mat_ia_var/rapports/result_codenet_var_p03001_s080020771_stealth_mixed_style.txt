================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:55:44
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
W, H, x, y = [int(i) for i in input().split()]
area = W * H / 2
from math import isclose

def output(ans, flag):
    print("{:.6f}".format(ans), flag)

center = lambda W,H: (W/2, H/2)
cx, cy = center(W,H)
if isclose(x, cx) and isclose(y, cy):
    output(area, True if 1 else 0)
else:
    class R: pass
    r = R(); setattr(r, 'v', 0)
    output(area, r.v)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'W' (ID: 54)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' H' (ID: 487)
  → Token d'amorce (pas de prédiction)

Token 3: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3279529809951782
    2. ',' → logprob: -1.3279529809951782
    3. ' =' → logprob: -4.827952861785889
    4. ')' → logprob: -6.577952861785889
    5. '*' → logprob: -6.577952861785889
    6. ';' → logprob: -6.952952861785889
    7. '```' → logprob: -6.952952861785889
    8. '.' → logprob: -7.202952861785889
    9. ':' → logprob: -7.577952861785889
    10. '#' → logprob: -9.077953338623047

Token 4: ' x' (ID: 1215)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04735010117292404
    2. ' =' → logprob: -3.1723501682281494
    3. ',' → logprob: -5.54734992980957
    4. ')' → logprob: -8.17234992980957
    5. ';' → logprob: -10.04734992980957
    6. '.' → logprob: -11.04734992980957
    7. ' ' → logprob: -11.04734992980957
    8. ' ,' → logprob: -11.79734992980957
    9. '```' → logprob: -11.79734992980957
    10. 'for' → logprob: -11.92234992980957

Token 5: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.049739863723516464
    2. ',' → logprob: -3.6747398376464844
    3. ' =' → logprob: -4.049739837646484
    4. '*' → logprob: -5.924739837646484
    5. '+' → logprob: -7.049739837646484
    6. '-' → logprob: -7.174739837646484
    7. ')' → logprob: -7.549739837646484
    8. '.' → logprob: -8.674739837646484
    9. ';' → logprob: -8.799739837646484
    10. '```' → logprob: -9.049739837646484

Token 6: ' y' (ID: 342)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2692236602306366
    2. '=' → logprob: -1.519223690032959
    3. ' =' → logprob: -4.269223690032959
    4. ')' → logprob: -6.644223690032959
    5. ',y' → logprob: -6.644223690032959
    6. ' ,' → logprob: -8.7692232131958
    7. 'y' → logprob: -9.1442232131958
    8. '.' → logprob: -9.7692232131958
    9. ' ' → logprob: -9.8942232131958
    10. '_' → logprob: -10.6442232131958

Token 7: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.001450948417186737
    2. ' =' → logprob: -7.251451015472412
    3. ',' → logprob: -7.751451015472412
    4. '+' → logprob: -9.251450538635254
    5. '```' → logprob: -10.251450538635254
    6. '*' → logprob: -10.376450538635254
    7. '.' → logprob: -10.501450538635254
    8. ';' → logprob: -10.626450538635254
    9. ')' → logprob: -10.751450538635254
    10. ' ' → logprob: -10.876450538635254

Token 8: ' [' (ID: 723)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.17269691824913025
    2. ' ' → logprob: -1.9226969480514526
    3. '10' → logprob: -5.172697067260742
    4. '100' → logprob: -5.547697067260742
    5. 'map' → logprob: -7.172697067260742
    6. ' map' → logprob: -7.922697067260742
    7. '20' → logprob: -8.172697067260742
    8. '1' → logprob: -8.297697067260742
    9. '50' → logprob: -8.547697067260742
    10. '800' → logprob: -8.672697067260742

Token 9: 'int' (ID: 491)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3122892677783966
    2. ']' → logprob: -2.562289237976074
    3. 'int' → logprob: -2.562289237976074
    4. '100' → logprob: -2.562289237976074
    5. '10' → logprob: -3.812289237976074
    6. ']int' → logprob: -5.312289237976074
    7. '1' → logprob: -6.187289237976074
    8. '32' → logprob: -6.562289237976074
    9. '50' → logprob: -6.812289237976074
    10. ' ' → logprob: -7.062289237976074

Token 10: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.23666761815547943
    2. '(' → logprob: -2.3616676330566406
    3. '(s' → logprob: -3.3616676330566406
    4. '(x' → logprob: -3.4866676330566406
    5. ']' → logprob: -3.7366676330566406
    6. '(input' → logprob: -4.486667633056641
    7. '(item' → logprob: -5.236667633056641
    8. '(token' → logprob: -5.486667633056641
    9. '()]' → logprob: -5.611667633056641
    10. '(line' → logprob: -6.736667633056641

Token 11: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003882619086652994
    2. '(x' → logprob: -6.37888240814209
    3. '(i' → logprob: -6.75388240814209
    4. '(input' → logprob: -8.25388240814209
    5. ')]' → logprob: -8.62888240814209
    6. 'input' → logprob: -8.75388240814209
    7. '(s' → logprob: -8.75388240814209
    8. ')i' → logprob: -9.62888240814209
    9. ')x' → logprob: -9.75388240814209
    10. ')s' → logprob: -10.50388240814209

Token 12: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.9573624730110168
    2. ' for' → logprob: -1.332362413406372
    3. '(x' → logprob: -2.207362413406372
    4. 'for' → logprob: -2.457362413406372
    5. '(i' → logprob: -3.332362413406372
    6. '(' → logprob: -3.332362413406372
    7. '(s' → logprob: -3.582362413406372
    8. ')' → logprob: -3.957362413406372
    9. '(token' → logprob: -4.707362651824951
    10. '(line' → logprob: -4.832362651824951

Token 13: ' i' (ID: 575)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.029779190197587013
    2. 'input' → logprob: -3.5297791957855225
    3. '(input' → logprob: -11.029779434204102
    4. ' ' → logprob: -11.779779434204102
    5. ' in' → logprob: -13.279779434204102
    6. ' range' → logprob: -14.029779434204102
    7. ' raw' → logprob: -14.404779434204102
    8. '=input' → logprob: -14.529779434204102
    9. ' s' → logprob: -15.779779434204102
    10. 'range' → logprob: -15.904779434204102

Token 14: ' in' (ID: 306)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.3826192617416382
    2. 'input' → logprob: -1.3826192617416382
    3. '(input' → logprob: -2.7576193809509277
    4. ' in' → logprob: -6.007619380950928
    5. '(' → logprob: -7.007619380950928
    6. 'in' → logprob: -9.50761890411377
    7. '=input' → logprob: -9.50761890411377
    8. ' (' → logprob: -11.75761890411377
    9. ' range' → logprob: -12.00761890411377
    10. '_input' → logprob: -12.13261890411377

Token 15: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.20142698287963867
    2. ' input' → logprob: -1.7014269828796387
    3. '(input' → logprob: -11.326427459716797
    4. '<input' → logprob: -14.701427459716797
    5. 'range' → logprob: -15.201427459716797
    6. ' ' → logprob: -15.701427459716797
    7. '=input' → logprob: -15.701427459716797
    8. '```' → logprob: -16.201427459716797
    9. '[input' → logprob: -16.326427459716797
    10. 'raw' → logprob: -16.451427459716797

Token 16: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.1171627789735794
    2. '()' → logprob: -2.3671627044677734
    3. '()]' → logprob: -4.117162704467773
    4. '(' → logprob: -8.492162704467773
    5. '()].' → logprob: -8.867162704467773
    6. '()][' → logprob: -10.242162704467773
    7. '()[' → logprob: -10.492162704467773
    8. '())' → logprob: -10.492162704467773
    9. '('' → logprob: -11.617162704467773
    10. '("' → logprob: -11.742162704467773

Token 17: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.3915141355246305e-05
    2. 'strip' → logprob: -10.87502384185791
    3. 'rstrip' → logprob: -12.75002384185791
    4. ' split' → logprob: -13.37502384185791
    5. 'spl' → logprob: -15.25002384185791
    6. '(split' → logprob: -15.25002384185791
    7. 'replace' → logprob: -18.500024795532227
    8. 's' → logprob: -18.625024795532227
    9. '```' → logprob: -19.000024795532227
    10. 'read' → logprob: -19.375024795532227

Token 18: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.0067279222421348095
    2. '())' → logprob: -5.631727695465088
    3. '()' → logprob: -6.256727695465088
    4. '(' → logprob: -7.131727695465088
    5. '('' → logprob: -8.006728172302246
    6. ')]' → logprob: -10.881728172302246
    7. '()][' → logprob: -11.256728172302246
    8. ']' → logprob: -11.506728172302246
    9. '("' → logprob: -11.881728172302246
    10. '()],' → logprob: -12.006728172302246

Token 19: 'area' (ID: 7502)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.9314205646514893
    2. 'x' → logprob: -1.9314205646514893
    3. 'if' → logprob: -2.1814205646514893
    4. 'for' → logprob: -2.9314205646514893
    5. 'r' → logprob: -3.0564205646514893
    6. 'width' → logprob: -3.1814205646514893
    7. 'a' → logprob: -3.1814205646514893
    8. 'n' → logprob: -3.5564205646514893
    9. ',' → logprob: -3.9314205646514893
    10. 'd' → logprob: -4.05642032623291

Token 20: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.48330405354499817
    2. '_' → logprob: -0.9833040237426758
    3. '_area' → logprob: -5.608304023742676
    4. '=' → logprob: -6.233304023742676
    5. ')' → logprob: -6.983304023742676
    6. 's' → logprob: -7.108304023742676
    7. 'area' → logprob: -8.483304023742676
    8. '*' → logprob: -8.483304023742676
    9. ' =' → logprob: -8.608304023742676
    10. ',' → logprob: -9.108304023742676

Token 21: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.6998320817947388
    2. ' W' → logprob: -0.6998320817947388
    3. 'x' → logprob: -5.074831962585449
    4. ' x' → logprob: -8.19983196258545
    5. ' ' → logprob: -9.44983196258545
    6. ''' → logprob: -11.19983196258545
    7. '0' → logprob: -11.19983196258545
    8. 'Wx' → logprob: -11.82483196258545
    9. '`' → logprob: -12.07483196258545
    10. ' ' → logprob: -12.82483196258545

Token 22: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.10024484992027283
    2. ' *' → logprob: -2.3502447605133057
    3. ' ' → logprob: -11.475244522094727
    4. '**' → logprob: -11.725244522094727
    5. '*y' → logprob: -12.350244522094727
    6. '*object' → logprob: -12.975244522094727
    7. ''*' → logprob: -13.600244522094727
    8. '<|end|>' → logprob: -13.600244522094727
    9. '*w' → logprob: -14.100244522094727
    10. ')' → logprob: -14.100244522094727

Token 23: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.10024431347846985
    2. ' H' → logprob: -2.3502442836761475
    3. ' ' → logprob: -10.225244522094727
    4. ' ' → logprob: -14.225244522094727
    5. ''' → logprob: -15.350244522094727
    6. '`' → logprob: -15.975244522094727
    7. ',' → logprob: -16.725244522094727
    8. '  ' → logprob: -17.037744522094727
    9. 'space' → logprob: -17.100244522094727
    10. ',H' → logprob: -17.225244522094727

Token 24: ' /' (ID: 820)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7081509232521057
    2. ' 
' → logprob: -2.708150863647461
    3. ' if' → logprob: -2.833150863647461
    4. ' ' → logprob: -2.833150863647461
    5. '\n' → logprob: -2.958150863647461
    6. '-' → logprob: -3.208150863647461
    7. ',' → logprob: -3.333150863647461
    8. '\' → logprob: -3.458150863647461
    9. 'if' → logprob: -3.583150863647461
    10. '  
' → logprob: -3.958150863647461

Token 25: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.01421087421476841
    2. ' ' → logprob: -4.2642107009887695
    3. '1' → logprob: -10.76421070098877
    4. '4' → logprob: -11.38921070098877
    5. '6' → logprob: -12.63921070098877
    6. '3' → logprob: -12.76421070098877
    7. '100' → logprob: -13.01421070098877
    8. 'x' → logprob: -13.63921070098877
    9. 'W' → logprob: -13.76421070098877
    10. '(' → logprob: -13.76421070098877

Token 26: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0037962731439620256
    2. ' ' → logprob: -5.628796100616455
    3. '4' → logprob: -9.128796577453613
    4. 'x' → logprob: -11.003796577453613
    5. '3' → logprob: -11.253796577453613
    6. '(' → logprob: -11.378796577453613
    7. '1' → logprob: -11.628796577453613
    8. '100' → logprob: -11.878796577453613
    9. '10' → logprob: -11.878796577453613
    10. '6' → logprob: -12.003796577453613

Token 27: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8101121783256531
    2. '*' → logprob: -2.185112237930298
    3. '+' → logprob: -2.810112237930298
    4. '.' → logprob: -2.810112237930298
    5. '\n' → logprob: -2.810112237930298
    6. '#' → logprob: -3.310112237930298
    7. ',' → logprob: -3.435112237930298
    8. ')' → logprob: -3.560112237930298
    9. ' ' → logprob: -3.685112237930298
    10. '\' → logprob: -3.810112237930298

Token 28: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1747349500656128
    2. 'print' → logprob: -1.2997349500656128
    3. 'if' → logprob: -2.0497350692749023
    4. 'x' → logprob: -2.7997350692749023
    5. ' 
' → logprob: -3.0497350692749023
    6. '*' → logprob: -3.9247350692749023
    7. ',' → logprob: -3.9247350692749023
    8. '' → logprob: -4.174735069274902
    9. ' if' → logprob: -4.424735069274902
    10. '.' → logprob: -4.424735069274902

Token 29: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.017902448773384094
    2. 'math' → logprob: -4.267902374267578
    3. ' itertools' → logprob: -6.142902374267578
    4. ' collections' → logprob: -7.517902374267578
    5. ' sys' → logprob: -7.767902374267578
    6. ' fractions' → logprob: -8.392902374267578
    7. '_' → logprob: -9.017902374267578
    8. ' random' → logprob: -9.517902374267578
    9. 'cmath' → logprob: -9.892902374267578
    10. '_math' → logprob: -10.142902374267578

Token 30: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.0020252352114766836
    2. 'import' → logprob: -6.252025127410889
    3. ' im' → logprob: -10.002025604248047
    4. '	import' → logprob: -10.752025604248047
    5. ' ' → logprob: -11.627025604248047
    6. ' impor' → logprob: -11.877025604248047
    7. ' importar' → logprob: -12.502025604248047
    8. '.' → logprob: -12.877025604248047
    9. ' imports' → logprob: -12.877025604248047
    10. ' sqrt' → logprob: -14.002025604248047

Token 31: ' is' (ID: 382)
  Prédit: 'sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sqrt' → logprob: -0.4930310845375061
    2. ' sqrt' → logprob: -1.4930310249328613
    3. 'fabs' → logprob: -2.7430310249328613
    4. 'ceil' → logprob: -3.9930310249328613
    5. 'dist' → logprob: -4.368031024932861
    6. 'pi' → logprob: -4.493031024932861
    7. ' ceil' → logprob: -4.618031024932861
    8. 'atan' → logprob: -4.743031024932861
    9. 'sin' → logprob: -5.118031024932861
    10. 'inf' → logprob: -5.618031024932861

Token 32: 'close' (ID: 8722)
  Prédit: 'qrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qrt' → logprob: -0.041451163589954376
    2. 'n' → logprob: -3.6664512157440186
    3. 'close' → logprob: -4.7914509773254395
    4. 'nf' → logprob: -6.0414509773254395
    5. 'nt' → logprob: -6.4164509773254395
    6. 'ns' → logprob: -7.0414509773254395
    7. 'nc' → logprob: -7.9164509773254395
    8. 'nan' → logprob: -8.041451454162598
    9. 'in' → logprob: -8.416451454162598
    10. 'np' → logprob: -8.666451454162598

Token 33: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0532381534576416
    2. '
' → logprob: -4.3032379150390625
    3. '\n' → logprob: -4.8032379150390625
    4. ',' → logprob: -4.8032379150390625
    5. '' → logprob: -5.3032379150390625
    6. 'if' → logprob: -5.3032379150390625
    7. ' if' → logprob: -5.8032379150390625
    8. '<|end|>' → logprob: -6.5532379150390625
    9. ' 
' → logprob: -6.6782379150390625
    10. '

' → logprob: -6.6782379150390625

Token 34: 'def' (ID: 1314)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.05008665472269058
    2. '
' → logprob: -3.800086736679077
    3. 'x' → logprob: -4.550086498260498
    4. ' if' → logprob: -5.425086498260498
    5. '\n' → logprob: -6.050086498260498
    6. ',' → logprob: -6.300086498260498
    7. ':' → logprob: -6.925086498260498
    8. 'n' → logprob: -7.050086498260498
    9. 'y' → logprob: -7.550086498260498
    10. 't' → logprob: -7.550086498260498

Token 35: ' output' (ID: 4733)
  Prédit: ' area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' area' → logprob: -0.1145133450627327
    2. ' calculate' → logprob: -2.614513397216797
    3. ' is' → logprob: -4.739513397216797
    4. ' triangle' → logprob: -4.864513397216797
    5. ' distance' → logprob: -5.114513397216797
    6. ' find' → logprob: -5.864513397216797
    7. ' trape' → logprob: -6.989513397216797
    8. ' midpoint' → logprob: -6.989513397216797
    9. ' compute' → logprob: -7.114513397216797
    10. ' space' → logprob: -7.364513397216797

Token 36: '(ans' (ID: 70054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20430488884449005
    2. '_area' → logprob: -1.8293049335479736
    3. '(x' → logprob: -5.0793046951293945
    4. '(_' → logprob: -5.2043046951293945
    5. '_(' → logprob: -6.2043046951293945
    6. '_result' → logprob: -6.5793046951293945
    7. '((' → logprob: -6.8293046951293945
    8. '(area' → logprob: -6.9543046951293945
    9. '_value' → logprob: -7.3293046951293945
    10. '(value' → logprob: -7.3293046951293945

Token 37: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.013004925101995468
    2. ':' → logprob: -4.513004779815674
    3. ')' → logprob: -6.388004779815674
    4. ' ):' → logprob: -9.263005256652832
    5. ',' → logprob: -9.513005256652832
    6. '=' → logprob: -9.888005256652832
    7. '):
' → logprob: -10.138005256652832
    8. ' :' → logprob: -12.513005256652832
    9. ' ' → logprob: -13.263005256652832
    10. '):
' → logprob: -13.638005256652832

Token 38: ' flag' (ID: 9641)
  Prédit: ' eps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' eps' → logprob: -1.3624789714813232
    2. ' tol' → logprob: -1.3624789714813232
    3. ' rel' → logprob: -2.6124789714813232
    4. 'eps' → logprob: -3.1124789714813232
    5. ' tolerance' → logprob: -3.1124789714813232
    6. 'tol' → logprob: -3.6124789714813232
    7. ' precision' → logprob: -3.9874789714813232
    8. ' area' → logprob: -4.049979209899902
    9. ' epsilon' → logprob: -4.049979209899902
    10. ' margin' → logprob: -4.487479209899902

Token 39: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.14577583968639374
    2. '=' → logprob: -2.02077579498291
    3. '=True' → logprob: -6.64577579498291
    4. '=False' → logprob: -7.27077579498291
    5. ')' → logprob: -7.77077579498291
    6. ',' → logprob: -8.14577579498291
    7. '=None' → logprob: -8.89577579498291
    8. ':' → logprob: -9.02077579498291
    9. ' =' → logprob: -9.89577579498291
    10. '):
' → logprob: -10.27077579498291

Token 40: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03602735698223114
    2. '<|end|>' → logprob: -3.411027431488037
    3. ':' → logprob: -7.286027431488037
    4. '<|end|>' → logprob: -8.036026954650879
    5. ' return' → logprob: -8.286026954650879
    6. ' ' → logprob: -8.411026954650879
    7. '    ' → logprob: -8.536026954650879
    8. '    
' → logprob: -8.661026954650879
    9. '	return' → logprob: -9.286026954650879
    10. '(' → logprob: -9.911026954650879

Token 41: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004785395693033934
    2. ' print' → logprob: -5.879785537719727
    3. ' if' → logprob: -7.129785537719727
    4. '<|end|>' → logprob: -7.629785537719727
    5. 'print' (adapté à ' print') → logprob: -8.004785537719727
    6. ' return' → logprob: -8.879785537719727
    7. '	print' → logprob: -10.129785537719727
    8. '    ' → logprob: -10.254785537719727
    9. ' ' → logprob: -10.754785537719727
    10. '\t' → logprob: -11.004785537719727

Token 42: '("{' (ID: 29673)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4767349660396576
    2. '(ans' → logprob: -0.97673499584198
    3. '(f' → logprob: -6.4767351150512695
    4. '('' → logprob: -7.3517351150512695
    5. '((' → logprob: -8.47673511505127
    6. '()' → logprob: -9.60173511505127
    7. '(*' → logprob: -9.85173511505127
    8. '("' → logprob: -10.10173511505127
    9. '("("' → logprob: -10.72673511505127
    10. '(int' → logprob: -10.97673511505127

Token 43: ':.' (ID: 27474)
  Prédit: ':.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':.' → logprob: -0.058670997619628906
    2. '0' → logprob: -3.308670997619629
    3. ':' → logprob: -4.308670997619629
    4. 'ans' → logprob: -5.308670997619629
    5. '.' → logprob: -6.433670997619629
    6. '}' → logprob: -9.433670997619629
    7. ':=' → logprob: -10.058670997619629
    8. '1' → logprob: -10.683670997619629
    9. ':,' → logprob: -10.683670997619629
    10. ' ans' → logprob: -10.933670997619629

Token 44: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.39265620708465576
    2. '10' → logprob: -2.6426563262939453
    3. '9' → logprob: -3.0176563262939453
    4. '3' → logprob: -3.2676563262939453
    5. '7' → logprob: -3.5176563262939453
    6. '2' → logprob: -3.5176563262939453
    7. '8' → logprob: -3.8926563262939453
    8. '5' → logprob: -4.142656326293945
    9. '15' → logprob: -4.267656326293945
    10. '4' → logprob: -4.267656326293945

Token 45: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -2.6537622034084052e-05
    2. 'e' → logprob: -11.50002670288086
    3. 'g' → logprob: -11.62502670288086
    4. '}' → logprob: -12.75002670288086
    5. '%' → logprob: -13.50002670288086
    6. '```' → logprob: -13.87502670288086
    7. ' f' → logprob: -14.75002670288086
    8. '
' → logprob: -15.00002670288086
    9. '	f' → logprob: -15.75002670288086
    10. '

' → logprob: -16.00002670288086

Token 46: '}".' (ID: 53576)
  Prédit: '}".'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}".' → logprob: -0.004152126144617796
    2. '}' → logprob: -5.504152297973633
    3. 'f' → logprob: -10.379152297973633
    4. '}"' → logprob: -10.754152297973633
    5. '}'.' → logprob: -11.379152297973633
    6. '}.' → logprob: -12.379152297973633
    7. '".' → logprob: -12.879152297973633
    8. '}",' → logprob: -13.879152297973633
    9. '}")' → logprob: -14.629152297973633
    10. '"}' → logprob: -15.004152297973633

Token 47: 'format' (ID: 4078)
  Prédit: 'format'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'format' → logprob: -3.8889261304575484e-06
    2. 'ormat' → logprob: -12.750003814697266
    3. 'form' → logprob: -15.500003814697266
    4. '```' → logprob: -15.625003814697266
    5. '	format' → logprob: -16.250003814697266
    6. ')' → logprob: -16.375003814697266
    7. 'forma' → logprob: -16.500003814697266
    8. '
' → logprob: -16.625003814697266
    9. ' format' → logprob: -16.625003814697266
    10. '(format' → logprob: -17.375003814697266

Token 48: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.00019126241386402398
    2. '(' → logprob: -8.875191688537598
    3. '(abs' → logprob: -10.000191688537598
    4. ')' → logprob: -13.125191688537598
    5. '(answer' → logprob: -13.375191688537598
    6. ' (' → logprob: -13.875191688537598
    7. '((' → logprob: -13.875191688537598
    8. '(area' → logprob: -16.00019073486328
    9. '(round' → logprob: -17.00019073486328
    10. 'ans' → logprob: -17.00019073486328

Token 49: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.014086754992604256
    2. ')' → logprob: -4.889086723327637
    3. '))' → logprob: -5.139086723327637
    4. ',' → logprob: -8.264086723327637
    5. ' ),' → logprob: -8.889086723327637
    6. '),(' → logprob: -9.639086723327637
    7. '),
' → logprob: -10.139086723327637
    8. '),"' → logprob: -10.764086723327637
    9. '))
' → logprob: -11.139086723327637
    10. ' if' → logprob: -11.264086723327637

Token 50: ' flag' (ID: 9641)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.2359599471092224
    2. '""' → logprob: -2.735960006713867
    3. ' "' → logprob: -3.110960006713867
    4. 'end' → logprob: -3.235960006713867
    5. ''' → logprob: -3.610960006713867
    6. ' end' → logprob: -4.485960006713867
    7. '''' → logprob: -4.985960006713867
    8. 'flag' → logprob: -5.610960006713867
    9. ' '' → logprob: -5.985960006713867
    10. ' ""' → logprob: -5.985960006713867

Token 51: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5570885807392187e-05
    2. '))' → logprob: -11.375015258789062
    3. ')
' → logprob: -13.375015258789062
    4. ')")' → logprob: -14.000015258789062
    5. ' )' → logprob: -14.625015258789062
    6. '`)' → logprob: -14.875015258789062
    7. ')`' → logprob: -15.125015258789062
    8. '')' → logprob: -15.500015258789062
    9. '")' → logprob: -16.000015258789062
    10. ')

' → logprob: -17.625015258789062

Token 52: 'center' (ID: 5463)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3952804207801819
    2. 'x' → logprob: -1.895280361175537
    3. 'if' → logprob: -2.520280361175537
    4. 'def' → logprob: -4.020280361175537
    5. 'area' → logprob: -4.145280361175537
    6. 'a' → logprob: -4.520280361175537
    7. '<|end|>' → logprob: -4.895280361175537
    8. 't' → logprob: -5.145280361175537
    9. 's' → logprob: -5.270280361175537
    10. '  
' → logprob: -5.770280361175537

Token 53: ' =' (ID: 314)
  Prédit: '_x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.03236948698759079
    2. 'x' → logprob: -4.532369613647461
    3. ' =' → logprob: -4.657369613647461
    4. '_' → logprob: -5.532369613647461
    5. '_dist' → logprob: -6.032369613647461
    6. '=' → logprob: -6.282369613647461
    7. '_distance' → logprob: -6.282369613647461
    8. 'X' → logprob: -7.282369613647461
    9. 'dist' → logprob: -8.782369613647461
    10. '_area' → logprob: -9.032369613647461

Token 54: ' lambda' (ID: 27871)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.5269280672073364
    2. '(W' → logprob: -1.0269280672073364
    3. '(' → logprob: -3.651927947998047
    4. '(H' → logprob: -4.901927947998047
    5. ' W' → logprob: -5.026927947998047
    6. '((' → logprob: -5.401927947998047
    7. 'W' → logprob: -5.651927947998047
    8. '(x' → logprob: -6.151927947998047
    9. ' ((' → logprob: -8.026927947998047
    10. '[' → logprob: -8.651927947998047

Token 55: ' W' (ID: 486)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.9078128933906555
    2. 'x' → logprob: -1.4078128337860107
    3. ' W' → logprob: -1.5328128337860107
    4. 'W' → logprob: -2.6578128337860107
    5. ' lambda' → logprob: -3.2828128337860107
    6. ' (' → logprob: -4.03281307220459
    7. 'lambda' → logprob: -4.90781307220459
    8. ' ' → logprob: -6.65781307220459
    9. '(x' → logprob: -7.53281307220459
    10. '(lambda' → logprob: -8.03281307220459

Token 56: ',H' (ID: 94400)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4306977093219757
    2. '/' → logprob: -1.0556976795196533
    3. ' /' → logprob: -6.680697917938232
    4. ',W' → logprob: -8.555697441101074
    5. 'x' → logprob: -8.805697441101074
    6. ',H' → logprob: -9.430697441101074
    7. ' ,' → logprob: -9.555697441101074
    8. '//' → logprob: -9.805697441101074
    9. ':' → logprob: -10.055697441101074
    10. 'W' → logprob: -10.680697441101074

Token 57: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01375571172684431
    2. ',' → logprob: -4.763755798339844
    3. ' :' → logprob: -6.138755798339844
    4. ':(' → logprob: -6.263755798339844
    5. ',:' → logprob: -7.888755798339844
    6. ',x' → logprob: -8.388755798339844
    7. ',W' → logprob: -8.638755798339844
    8. ':x' → logprob: -9.263755798339844
    9. ',y' → logprob: -9.638755798339844
    10. 'x' → logprob: -10.263755798339844

Token 58: ' (' (ID: 350)
  Prédit: '(W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(W' → logprob: -0.48629552125930786
    2. ' (' → logprob: -1.111295461654663
    3. '(H' → logprob: -3.111295461654663
    4. '(' → logprob: -5.111295700073242
    5. '((' → logprob: -5.486295700073242
    6. ' ((' → logprob: -7.736295700073242
    7. '[' → logprob: -8.861295700073242
    8. '(x' → logprob: -9.736295700073242
    9. '([' → logprob: -9.736295700073242
    10. ' ' → logprob: -9.861295700073242

Token 59: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.020033271983265877
    2. ' W' → logprob: -4.020033359527588
    3. '(W' → logprob: -6.645033359527588
    4. '(' → logprob: -8.14503288269043
    5. ' (' → logprob: -8.27003288269043
    6. '0' → logprob: -11.39503288269043
    7. ' ' → logprob: -11.64503288269043
    8. 'H' → logprob: -12.52003288269043
    9. '	W' → logprob: -12.52003288269043
    10. '   ' → logprob: -13.39503288269043

Token 60: '/' (ID: 14)
  Prédit: '/'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.014206168241798878
    2. ' /' → logprob: -4.2642059326171875
    3. '//' → logprob: -10.889205932617188
    4. '*' → logprob: -11.139205932617188
    5. ' //' → logprob: -12.389205932617188
    6. ' *' → logprob: -13.264205932617188
    7. ',' → logprob: -13.764205932617188
    8. ' ' → logprob: -13.764205932617188
    9. '2' → logprob: -14.764205932617188
    10. '   ' → logprob: -15.014205932617188

Token 61: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00043162284418940544
    2. ' ' → logprob: -7.750431537628174
    3. '   ' → logprob: -15.875432014465332
    4. '```' → logprob: -16.250431060791016
    5. '۲' → logprob: -16.250431060791016
    6. '２' → logprob: -16.375431060791016
    7. '  ' → logprob: -16.500431060791016
    8. ')' → logprob: -16.625431060791016
    9. '

' → logprob: -17.000431060791016
    10. ',' → logprob: -17.687931060791016

Token 62: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017759765032678843
    2. ',H' → logprob: -6.876775741577148
    3. ' ,' → logprob: -7.251775741577148
    4. ',W' → logprob: -10.501775741577148
    5. '),' → logprob: -13.376775741577148
    6. ')' → logprob: -13.751775741577148
    7. ',

' → logprob: -13.876775741577148
    8. ',y' → logprob: -14.251775741577148
    9. ' ' → logprob: -14.626775741577148
    10. '‌,' → logprob: -15.001775741577148

Token 63: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.47407862544059753
    2. ' H' → logprob: -0.9740786552429199
    3. ' ' → logprob: -13.599078178405762
    4. ' ' → logprob: -15.974078178405762
    5. '	H' → logprob: -16.474079132080078
    6. '   ' → logprob: -16.974079132080078
    7. '  ' → logprob: -16.974079132080078
    8. '<|end|>' → logprob: -16.974079132080078
    9. ')' → logprob: -18.161579132080078
    10. ',H' → logprob: -18.599079132080078

Token 64: '/' (ID: 14)
  Prédit: '/'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -2.2603901015827432e-05
    2. ' /' → logprob: -10.750022888183594
    3. '2' → logprob: -14.125022888183594
    4. ')' → logprob: -15.125022888183594
    5. '/)' → logprob: -16.250022888183594
    6. '<|end|>' → logprob: -16.750022888183594
    7. ')/' → logprob: -17.625022888183594
    8. '   ' → logprob: -18.250022888183594
    9. '()/' → logprob: -18.625022888183594
    10. '4' → logprob: -18.750022888183594

Token 65: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1637164789135568e-05
    2. ' ' → logprob: -11.375011444091797
    3. ')' → logprob: -17.000011444091797
    4. '   ' → logprob: -17.375011444091797
    5. '<|end|>' → logprob: -17.875011444091797
    6. '  ' → logprob: -18.000011444091797
    7. '```' → logprob: -19.000011444091797
    8. '>' → logprob: -19.000011444091797
    9. '4' → logprob: -20.000011444091797
    10. '    ' → logprob: -20.062511444091797

Token 66: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3856492842023727e-06
    2. ' )' → logprob: -14.375000953674316
    3. ')
' → logprob: -14.500000953674316
    4. '))' → logprob: -16.375001907348633
    5. '),' → logprob: -16.750001907348633
    6. '')' → logprob: -17.250001907348633
    7. ')

' → logprob: -17.500001907348633
    8. ')}' → logprob: -17.625001907348633
    9. '}' → logprob: -17.750001907348633
    10. '<|end|>' → logprob: -17.875001907348633

Token 67: 'cx' (ID: 47207)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5801196098327637
    2. 'def' → logprob: -1.8301196098327637
    3. '<|end|>' → logprob: -2.3301196098327637
    4. 'next' → logprob: -3.8301196098327637
    5. '#' → logprob: -3.8301196098327637
    6. 'if' → logprob: -4.080119609832764
    7. 'w' → logprob: -4.580119609832764
    8. 'point' → logprob: -4.955119609832764
    9. '<|end|>' → logprob: -4.955119609832764
    10. ',' → logprob: -4.955119609832764

Token 68: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013274075172375888
    2. ' ,' → logprob: -9.00013256072998
    3. ',c' → logprob: -12.75013256072998
    4. ',y' → logprob: -13.25013256072998
    5. ',x' → logprob: -13.50013256072998
    6. ',w' → logprob: -14.00013256072998
    7. '_,' → logprob: -14.62513256072998
    8. '=' → logprob: -14.62513256072998
    9. ',W' → logprob: -15.00013256072998
    10. ' =' → logprob: -15.62513256072998

Token 69: ' cy' (ID: 5504)
  Prédit: 'cy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cy' → logprob: -0.0017847756389528513
    2. ' cy' → logprob: -6.376784801483154
    3. '<|end|>' → logprob: -9.626784324645996
    4. 'cyj' → logprob: -11.501784324645996
    5. 'c' → logprob: -13.001784324645996
    6. 'y' → logprob: -13.501784324645996
    7. '.cy' → logprob: -14.126784324645996
    8. 'cych' → logprob: -14.251784324645996
    9. ' cyo' → logprob: -15.501784324645996
    10. '<|end|>' → logprob: -15.626784324645996

Token 70: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38687434792518616
    2. '=' → logprob: -1.1368743181228638
    3. ',' → logprob: -13.386874198913574
    4. '<|end|>' → logprob: -14.261874198913574
    5. '=

' → logprob: -15.136874198913574
    6. ')' → logprob: -15.886874198913574
    7. ' =)' → logprob: -16.01187515258789
    8. ' ' → logprob: -16.38687515258789
    9. ' =
' → logprob: -16.63687515258789
    10. '=
' → logprob: -17.01187515258789

Token 71: ' center' (ID: 6170)
  Prédit: 'center'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'center' → logprob: -0.22876499593257904
    2. ' center' → logprob: -1.6037650108337402
    3. ' W' → logprob: -6.22876501083374
    4. 'W' → logprob: -6.60376501083374
    5. '(center' → logprob: -11.728764533996582
    6. '(W' → logprob: -13.103764533996582
    7. 'cent' → logprob: -13.228764533996582
    8. '	center' → logprob: -14.103764533996582
    9. ' (' → logprob: -14.228764533996582
    10. 'Center' → logprob: -14.353764533996582

Token 72: '(W' (ID: 26031)
  Prédit: '(W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(W' → logprob: -0.00979669950902462
    2. '(' → logprob: -4.634796619415283
    3. ' (' → logprob: -10.384797096252441
    4. '(
' → logprob: -12.009797096252441
    5. '(w' → logprob: -14.134797096252441
    6. '(

' → logprob: -14.384797096252441
    7. '(H' → logprob: -14.509797096252441
    8. '((' → logprob: -14.509797096252441
    9. ')(' → logprob: -14.759797096252441
    10. 'W' → logprob: -15.634797096252441

Token 73: ',H' (ID: 94400)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05539660155773163
    2. ',H' → logprob: -2.930396556854248
    3. ' ,' → logprob: -7.680396556854248
    4. ',W' → logprob: -10.180397033691406
    5. ')' → logprob: -12.180397033691406
    6. ',
' → logprob: -12.680397033691406
    7. ',

' → logprob: -13.305397033691406
    8. '),' → logprob: -13.805397033691406
    9. ',K' → logprob: -14.555397033691406
    10. ',h' → logprob: -14.680397033691406

Token 74: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0280383548888494e-06
    2. ')
' → logprob: -14.625000953674316
    3. '))' → logprob: -15.125000953674316
    4. ' )' → logprob: -15.875000953674316
    5. '),' → logprob: -16.125001907348633
    6. '<|end|>' → logprob: -17.375001907348633
    7. ')

' → logprob: -17.750001907348633
    8. '')' → logprob: -18.875001907348633
    9. ')))' → logprob: -19.250001907348633
    10. ')}' → logprob: -19.625001907348633

Token 75: 'if' (ID: 366)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6894965767860413
    2. 'if' → logprob: -1.5644965171813965
    3. ' if' → logprob: -2.3144965171813965
    4. 'x' → logprob: -2.5644965171813965
    5. '<|end|>' → logprob: -3.1894965171813965
    6. '#' → logprob: -3.4394965171813965
    7. '

' → logprob: -5.3144965171813965
    8. 'area' → logprob: -5.6894965171813965
    9. '<|end|>' → logprob: -5.6894965171813965
    10. ',' → logprob: -5.9394965171813965

Token 76: ' is' (ID: 382)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.20394261181354523
    2. ' is' → logprob: -2.3289425373077393
    3. 'x' → logprob: -3.2039425373077393
    4. ' abs' → logprob: -3.8289425373077393
    5. ' (' → logprob: -4.328942775726318
    6. ' ' → logprob: -5.578942775726318
    7. ' not' → logprob: -5.703942775726318
    8. 'is' → logprob: -6.203942775726318
    9. ' y' → logprob: -7.453942775726318
    10. ' W' → logprob: -7.703942775726318

Token 77: 'close' (ID: 8722)
  Prédit: 'close'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'close' → logprob: -0.0010525768157094717
    2. '_close' → logprob: -6.876052379608154
    3. ' close' → logprob: -12.251052856445312
    4. '_' → logprob: -12.876052856445312
    5. 'cl' → logprob: -13.001052856445312
    6. 'closed' → logprob: -13.251052856445312
    7. 'c' → logprob: -13.376052856445312
    8. 'closest' → logprob: -13.626052856445312
    9. '.close' → logprob: -14.251052856445312
    10. ')' → logprob: -14.626052856445312

Token 78: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.030466264113783836
    2. '(y' → logprob: -4.030466079711914
    3. '(' → logprob: -4.530466079711914
    4. '(abs' → logprob: -7.405466079711914
    5. '((' → logprob: -7.655466079711914
    6. '(cx' → logprob: -8.905466079711914
    7. '(area' → logprob: -9.280466079711914
    8. ' (' → logprob: -9.530466079711914
    9. '(s' → logprob: -11.280466079711914
    10. '(center' → logprob: -11.405466079711914

Token 79: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04662821814417839
    2. ' ,' → logprob: -3.17162823677063
    3. ',c' → logprob: -5.921627998352051
    4. ',x' → logprob: -7.671627998352051
    5. ',y' → logprob: -8.29662799835205
    6. ',w' → logprob: -10.04662799835205
    7. ',W' → logprob: -10.29662799835205
    8. ' ' → logprob: -10.92162799835205
    9. '(cx' → logprob: -11.04662799835205
    10. ',C' → logprob: -11.79662799835205

Token 80: ' cx' (ID: 44448)
  Prédit: 'cx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cx' → logprob: -0.10167094320058823
    2. ' cx' → logprob: -2.351670980453491
    3. '(cx' → logprob: -6.726670742034912
    4. ' ' → logprob: -9.35167121887207
    5. '0' → logprob: -9.60167121887207
    6. '.cx' → logprob: -10.72667121887207
    7. 'cw' → logprob: -11.22667121887207
    8. 'W' → logprob: -11.53917121887207
    9. ')' → logprob: -11.53917121887207
    10. 'c' → logprob: -11.66417121887207

Token 81: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04306107759475708
    2. ' and' → logprob: -3.2930610179901123
    3. ' )' → logprob: -5.918061256408691
    4. ',' → logprob: -6.293061256408691
    5. 'and' → logprob: -7.918061256408691
    6. ' ,' → logprob: -10.543061256408691
    7. '):' → logprob: -11.043061256408691
    8. ' ' → logprob: -11.418061256408691
    9. '")' → logprob: -12.168061256408691
    10. '

' → logprob: -12.293061256408691

Token 82: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.05583366006612778
    2. 'and' → logprob: -2.930833578109741
    3. ')' → logprob: -7.30583381652832
    4. ',' → logprob: -9.05583381652832
    5. ' ' → logprob: -9.18083381652832
    6. ' or' → logprob: -10.30583381652832
    7. ':' → logprob: -12.30583381652832
    8. ' ,' → logprob: -12.30583381652832
    9. ' )' → logprob: -12.55583381652832
    10. '   ' → logprob: -13.30583381652832

Token 83: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.007634900975972414
    2. 'is' → logprob: -4.882635116577148
    3. ' ' → logprob: -11.507635116577148
    4. 'y' → logprob: -12.007635116577148
    5. ' not' → logprob: -12.257635116577148
    6. ' ' → logprob: -12.632635116577148
    7. ' y' → logprob: -12.882635116577148
    8. '    ' → logprob: -14.382635116577148
    9. 'not' → logprob: -14.882635116577148
    10. '	is' → logprob: -15.007635116577148

Token 84: 'close' (ID: 8722)
  Prédit: 'close'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'close' → logprob: -8.363617962459102e-05
    2. '_close' → logprob: -10.000083923339844
    3. ' close' → logprob: -12.000083923339844
    4. 'cl' → logprob: -12.125083923339844
    5. '(close' → logprob: -12.625083923339844
    6. ')' → logprob: -12.875083923339844
    7. '>' → logprob: -13.000083923339844
    8. '_' → logprob: -13.375083923339844
    9. '(x' → logprob: -13.500083923339844
    10. 'c' → logprob: -13.500083923339844

Token 85: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.10022822767496109
    2. '(' → logprob: -2.3502283096313477
    3. '(x' → logprob: -11.100228309631348
    4. ' (' → logprob: -12.475228309631348
    5. 'y' → logprob: -13.100228309631348
    6. '<|end|>' → logprob: -15.225228309631348
    7. '(
' → logprob: -16.35022735595703
    8. ' y' → logprob: -17.35022735595703
    9. '(z' → logprob: -17.35022735595703
    10. '(user' → logprob: -17.35022735595703

Token 86: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004362718027550727
    2. ' ,' → logprob: -7.750436305999756
    3. ',c' → logprob: -12.500435829162598
    4. ' ' → logprob: -14.875435829162598
    5. '‌,' → logprob: -14.875435829162598
    6. ',y' → logprob: -15.250435829162598
    7. ',x' → logprob: -15.500435829162598
    8. '<|end|>' → logprob: -16.000436782836914
    9. ',

' → logprob: -16.500436782836914
    10. '，' → logprob: -16.500436782836914

Token 87: ' cy' (ID: 5504)
  Prédit: 'cy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cy' → logprob: -0.10021184384822845
    2. ' cy' → logprob: -2.3502118587493896
    3. '.cy' → logprob: -13.475212097167969
    4. ' ' → logprob: -13.725212097167969
    5. '	c' → logprob: -14.350212097167969
    6. 'cyj' → logprob: -14.475212097167969
    7. '<|end|>' → logprob: -14.975212097167969
    8. '  ' → logprob: -15.100212097167969
    9. ')' → logprob: -15.350212097167969
    10. ' ' → logprob: -15.850212097167969

Token 88: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0005033504567109048
    2. ')' → logprob: -8.250503540039062
    3. ':' → logprob: -8.750503540039062
    4. '):
' → logprob: -9.875503540039062
    5. ',' → logprob: -10.625503540039062
    6. ' ):' → logprob: -12.125503540039062
    7. '):

' → logprob: -13.625503540039062
    8. '():' → logprob: -15.750503540039062
    9. ''):' → logprob: -15.750503540039062
    10. ')):' → logprob: -15.875503540039062

Token 89: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2373415231704712
    2. ':' → logprob: -1.7373415231704712
    3. ' print' → logprob: -1.7373415231704712
    4. 'print' → logprob: -2.3623414039611816
    5. ' output' → logprob: -2.3623414039611816
    6. '0' → logprob: -2.7373414039611816
    7. 'output' → logprob: -2.9873414039611816
    8. ' ' → logprob: -3.7373414039611816
    9. ':
' → logprob: -4.737341403961182
    10. ',' → logprob: -5.737341403961182

Token 90: ' output' (ID: 4733)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5556387901306152
    2. ' print' → logprob: -1.5556387901306152
    3. 'print' → logprob: -1.8056387901306152
    4. ' output' → logprob: -3.5556387901306152
    5. 'output' (adapté à ' output') → logprob: -4.055638790130615
    6. '    
' → logprob: -6.930638790130615
    7. '    ' → logprob: -7.180638790130615
    8. ' flag' → logprob: -7.305638790130615
    9. ' ' → logprob: -7.680638790130615
    10. 'flag' → logprob: -7.930638790130615

Token 91: '(area' (ID: 115185)
  Prédit: '(area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(area' → logprob: -0.0008364312816411257
    2. '(' → logprob: -7.125836372375488
    3. 'area' → logprob: -11.000836372375488
    4. ' (' → logprob: -11.250836372375488
    5. ' area' → logprob: -14.125836372375488
    6. '(angle' → logprob: -14.625836372375488
    7. '((' → logprob: -15.500836372375488
    8. '0' → logprob: -15.750836372375488
    9. '(s' → logprob: -15.875836372375488
    10. '(abs' → logprob: -16.125837326049805

Token 92: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6205856204032898
    2. '(' → logprob: -1.3705856800079346
    3. '(True' → logprob: -1.6205856800079346
    4. '(False' → logprob: -5.2455854415893555
    5. '("' → logprob: -5.9955854415893555
    6. ' (' → logprob: -6.4955854415893555
    7. '(true' → logprob: -7.6205854415893555
    8. ' ,' → logprob: -8.370585441589355
    9. '(",' → logprob: -8.745585441589355
    10. '('' → logprob: -8.745585441589355

Token 93: ' True' (ID: 6432)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.2933884263038635
    2. ''' → logprob: -2.0433883666992188
    3. 'True' → logprob: -3.5433883666992188
    4. '0' → logprob: -4.043388366699219
    5. ' True' → logprob: -4.043388366699219
    6. ' "' → logprob: -4.168388366699219
    7. '1' → logprob: -4.293388366699219
    8. ' '' → logprob: -5.543388366699219
    9. ' ' → logprob: -5.668388366699219
    10. '"No' → logprob: -5.918388366699219

Token 94: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00694139814004302
    2. ')
' → logprob: -5.006941318511963
    3. 'else' → logprob: -8.506941795349121
    4. ')

' → logprob: -11.756941795349121
    5. ' )' → logprob: -12.006941795349121
    6. ')return' → logprob: -12.881941795349121
    7. ')
' → logprob: -13.131941795349121
    8. ' else' → logprob: -13.506941795349121
    9. '))' → logprob: -13.631941795349121
    10. '())' → logprob: -14.881941795349121

Token 95: ' ' (ID: 220)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.8754891157150269
    2. 'W' → logprob: -2.6254892349243164
    3. ' x' → logprob: -2.6254892349243164
    4. ' (' → logprob: -3.0004892349243164
    5. 'True' → logprob: -3.0004892349243164
    6. '(x' → logprob: -3.0004892349243164
    7. 'is' → logprob: -3.1254892349243164
    8. ' W' → logprob: -3.2504892349243164
    9. ' is' → logprob: -3.3754892349243164
    10. '0' → logprob: -3.6254892349243164

Token 96: '1' (ID: 16)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7276405692100525
    2. 'W' → logprob: -1.7276406288146973
    3. 'is' → logprob: -2.3526406288146973
    4. '(x' → logprob: -2.6026406288146973
    5. 'area' → logprob: -3.2276406288146973
    6. '(W' → logprob: -3.8526406288146973
    7. 'True' → logprob: -3.9776406288146973
    8. '0' → logprob: -4.352640628814697
    9. 'y' → logprob: -4.477640628814697
    10. 'H' → logprob: -4.602640628814697

Token 97: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.28165122866630554
    2. 'else' → logprob: -1.906651258468628
    3. '==' → logprob: -3.531651258468628
    4. '+' → logprob: -3.781651258468628
    5. '/' → logprob: -4.531651020050049
    6. '0' → logprob: -4.906651020050049
    7. ' ' → logprob: -5.031651020050049
    8. '-' → logprob: -5.156651020050049
    9. ' ==' → logprob: -5.906651020050049
    10. '.' → logprob: -6.156651020050049

Token 98: ' ' (ID: 220)
  Prédit: ' False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.07891799509525299
    2. 'False' → logprob: -2.578917980194092
    3. ' True' → logprob: -11.70391845703125
    4. ')' → logprob: -12.07891845703125
    5. ' ' → logprob: -12.20391845703125
    6. '(False' → logprob: -12.32891845703125
    7. '   ' → logprob: -13.82891845703125
    8. ' )' → logprob: -13.95391845703125
    9. '=False' → logprob: -13.95391845703125
    10. '0' → logprob: -14.07891845703125

Token 99: '0' (ID: 15)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.016116129234433174
    2. ' False' → logprob: -4.141116142272949
    3. '0' → logprob: -10.01611614227295
    4. 'True' → logprob: -10.51611614227295
    5. ' ' → logprob: -12.26611614227295
    6. '   ' → logprob: -13.64111614227295
    7. 'flag' → logprob: -14.14111614227295
    8. '(False' → logprob: -14.26611614227295
    9. ')' → logprob: -14.64111614227295
    10. ' True' → logprob: -14.76611614227295

Token 100: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.23917081207037e-05
    2. ')
' → logprob: -10.125041961669922
    3. '))' → logprob: -14.000041961669922
    4. ')

' → logprob: -14.625041961669922
    5. ' )' → logprob: -14.875041961669922
    6. 'else' → logprob: -15.625041961669922
    7. ')
' → logprob: -16.750041961669922
    8. '),' → logprob: -16.875041961669922
    9. '())' → logprob: -16.875041961669922
    10. ')`' → logprob: -17.250041961669922

Token 101: 'else' (ID: 2807)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09860792756080627
    2. '<|end|>' → logprob: -2.7236080169677734
    3. 'else' → logprob: -3.7236080169677734
    4. ' else' → logprob: -6.848608016967773
    5. '
' → logprob: -7.473608016967773
    6. '   ' → logprob: -7.848608016967773
    7. '<|end|>' → logprob: -7.973608016967773
    8. '\n' → logprob: -8.098608016967773
    9. ')
' → logprob: -8.098608016967773
    10. ' ' → logprob: -8.848608016967773

Token 102: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009351211600005627
    2. ' :' → logprob: -5.0093512535095215
    3. ':
' → logprob: -6.0093512535095215
    4. ' :
' → logprob: -8.884350776672363
    5. '   ' → logprob: -10.384350776672363
    6. ':

' → logprob: -13.384350776672363
    7. ' ' → logprob: -13.634350776672363
    8. ':
' → logprob: -13.884350776672363
    9. '    ' → logprob: -14.384350776672363
    10. ',' → logprob: -14.759350776672363

Token 103: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0069145262241363525
    2. ' area' → logprob: -5.6319146156311035
    3. 'area' → logprob: -7.1319146156311035
    4. ' output' → logprob: -7.3819146156311035
    5. ' x' → logprob: -8.256914138793945
    6. ' a' → logprob: -9.131914138793945
    7. ' flag' → logprob: -9.131914138793945
    8. ' print' → logprob: -9.256914138793945
    9. 'output' → logprob: -9.444414138793945
    10. ' if' → logprob: -9.506914138793945

Token 104: ' class' (ID: 744)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'output' → logprob: -0.8336648344993591
    2. 'print' → logprob: -2.208664894104004
    3. ' output' → logprob: -2.458664894104004
    4. 'x' → logprob: -2.833664894104004
    5. 'dx' → logprob: -2.833664894104004
    6. '   ' → logprob: -2.958664894104004
    7. 'if' → logprob: -3.708664894104004
    8. 'dist' → logprob: -3.833664894104004
    9. 'd' → logprob: -4.333664894104004
    10. ' dx' → logprob: -4.708664894104004

Token 105: ' R' (ID: 460)
  Prédit: ' Triangle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Triangle' → logprob: -0.6077386736869812
    2. ' Polygon' → logprob: -1.107738733291626
    3. ' Solution' → logprob: -3.607738733291626
    4. ' Quadr' → logprob: -4.232738494873047
    5. '<|end|>' → logprob: -4.357738494873047
    6. ' Rectangle' → logprob: -4.607738494873047
    7. ' Tri' → logprob: -4.732738494873047
    8. ' Point' → logprob: -5.232738494873047
    9. ' ' → logprob: -5.357738494873047
    10. ' Geometry' → logprob: -5.482738494873047

Token 106: ':' (ID: 25)
  Prédit: 'ect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.04745548591017723
    2. 'e' → logprob: -3.1724555492401123
    3. 'ec' → logprob: -6.547455310821533
    4. ':' → logprob: -6.672455310821533
    5. 'act' → logprob: -7.547455310821533
    6. 'ects' → logprob: -7.797455310821533
    7. '(' → logprob: -9.047455787658691
    8. '```' → logprob: -9.297455787658691
    9. 'ea' → logprob: -9.922455787658691
    10. 'angle' → logprob: -10.172455787658691

Token 107: ' pass' (ID: 1853)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 108: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 109: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 110: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.2546645998954773
    2. ' r' → logprob: -1.879664659500122
    3. 'R' → logprob: -3.254664659500122
    4. ' R' → logprob: -4.254664421081543
    5. '   ' → logprob: -4.379664421081543
    6. 'a' → logprob: -6.254664421081543
    7. 's' → logprob: -7.129664421081543
    8. 'A' → logprob: -7.629664421081543
    9. ' top' → logprob: -7.942164421081543
    10. ' a' → logprob: -8.379664421081543

Token 111: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06291726976633072
    2. '=' → logprob: -2.8129172325134277
    3. '1' → logprob: -7.437917232513428
    4. 'e' → logprob: -10.187917709350586
    5. ' ' → logprob: -10.187917709350586
    6. 'W' → logprob: -10.437917709350586
    7. '=r' → logprob: -10.562917709350586
    8. 'adius' → logprob: -10.562917709350586
    9. 'r' → logprob: -11.187917709350586
    10. ',' → logprob: -11.187917709350586

Token 112: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.10200309008359909
    2. ' R' → logprob: -2.6020030975341797
    3. 'type' → logprob: -4.22700309753418
    4. ' type' → logprob: -6.35200309753418
    5. '(type' → logprob: -7.35200309753418
    6. '0' → logprob: -7.47700309753418
    7. '[]' → logprob: -7.47700309753418
    8. ' ' → logprob: -7.60200309753418
    9. ' (' → logprob: -7.72700309753418
    10. 'W' → logprob: -7.85200309753418

Token 113: '();' (ID: 4177)
  Prédit: '.area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.area' → logprob: -1.0842441320419312
    2. '.r' → logprob: -1.3342441320419312
    3. '.x' → logprob: -1.4592441320419312
    4. '.w' → logprob: -2.7092442512512207
    5. '.W' → logprob: -3.4592442512512207
    6. '.' → logprob: -3.4592442512512207
    7. 'area' → logprob: -5.084244251251221
    8. '<|end|>' → logprob: -5.209244251251221
    9. '.left' → logprob: -5.334244251251221
    10. '.a' → logprob: -6.084244251251221

Token 114: ' setattr' (ID: 166554)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.36664262413978577
    2. ' r' → logprob: -1.3666425943374634
    3. 'x' → logprob: -3.616642713546753
    4. ' x' → logprob: -5.366642475128174
    5. 'a' → logprob: -5.991642475128174
    6. ' points' → logprob: -6.491642475128174
    7. '   ' → logprob: -6.679142475128174
    8. 'w' → logprob: -6.741642475128174
    9. 'area' → logprob: -6.866642475128174
    10. 's' → logprob: -7.054142475128174

Token 115: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -1.3856492842023727e-06
    2. '(' → logprob: -14.000000953674316
    3. 'r' → logprob: -14.875000953674316
    4. '(
' → logprob: -16.125001907348633
    5. '(R' → logprob: -19.625001907348633
    6. '(re' → logprob: -20.250001907348633
    7. '(x' → logprob: -20.875001907348633
    8. ' (' → logprob: -20.875001907348633
    9. ' r' → logprob: -21.250001907348633
    10. '<|end|>' → logprob: -21.250001907348633

Token 116: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0646430030465126
    2. ',r' → logprob: -2.814642906188965
    3. ','' → logprob: -6.064642906188965
    4. ',"' → logprob: -8.689642906188965
    5. ' ,' → logprob: -9.439642906188965
    6. '(r' → logprob: -9.814642906188965
    7. ''r' → logprob: -11.189642906188965
    8. ' ,'' → logprob: -12.314642906188965
    9. ',R' → logprob: -12.439642906188965
    10. 'r' → logprob: -12.439642906188965

Token 117: ' '' (ID: 461)
  Prédit: ''x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''x' → logprob: -0.22929316759109497
    2. ''' → logprob: -1.7292931079864502
    3. '"x' → logprob: -4.354293346405029
    4. ''r' → logprob: -5.104293346405029
    5. ''w' → logprob: -5.604293346405029
    6. '"' → logprob: -6.354293346405029
    7. ''value' → logprob: -6.979293346405029
    8. ''t' → logprob: -7.979293346405029
    9. '"W' → logprob: -8.104292869567871
    10. ''s' → logprob: -8.229292869567871

Token 118: 'v' (ID: 85)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3649790287017822
    2. 'W' → logprob: -2.6149790287017822
    3. 'w' → logprob: -2.7399790287017822
    4. 'area' → logprob: -2.9899790287017822
    5. '__' → logprob: -3.7399790287017822
    6. 'a' → logprob: -4.239978790283203
    7. 'cx' → logprob: -4.614978790283203
    8. 'flag' → logprob: -4.989978790283203
    9. 'width' → logprob: -5.239978790283203
    10. 'value' → logprob: -5.614978790283203

Token 119: '',' (ID: 787)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.49318209290504456
    2. 'alue' → logprob: -1.4931820631027222
    3. '',' → logprob: -1.9931820631027222
    4. 'ector' → logprob: -4.368182182312012
    5. 'a' → logprob: -5.493182182312012
    6. ',' → logprob: -5.993182182312012
    7. 'ALUE' → logprob: -6.243182182312012
    8. 'alid' → logprob: -6.493182182312012
    9. '',(' → logprob: -6.743182182312012
    10. 'ariable' → logprob: -7.368182182312012

Token 120: ' ' (ID: 220)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.333797425031662
    2. '[' → logprob: -2.3337974548339844
    3. '[x' → logprob: -2.9587974548339844
    4. '0' → logprob: -3.0837974548339844
    5. '[])' → logprob: -3.4587974548339844
    6. '[]' → logprob: -4.708797454833984
    7. '(x' → logprob: -4.708797454833984
    8. '(' → logprob: -5.083797454833984
    9. 'True' → logprob: -5.333797454833984
    10. '[[' → logprob: -5.708797454833984

Token 121: '0' (ID: 15)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.4550771713256836
    2. '[' → logprob: -1.9550771713256836
    3. '0' → logprob: -2.8300771713256836
    4. '[x' → logprob: -3.0800771713256836
    5. '(x' → logprob: -4.080077171325684
    6. '[])' → logprob: -4.080077171325684
    7. '[]' → logprob: -4.205077171325684
    8. '(' → logprob: -4.455077171325684
    9. 'True' → logprob: -4.705077171325684
    10. 'area' → logprob: -4.830077171325684

Token 122: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00017743845819495618
    2. ')
' → logprob: -9.250177383422852
    3. '<|end|>' → logprob: -10.250177383422852
    4. ' )' → logprob: -10.875177383422852
    5. ');' → logprob: -11.875177383422852
    6. ';' → logprob: -12.750177383422852
    7. ',' → logprob: -13.250177383422852
    8. '   ' → logprob: -13.250177383422852
    9. '<|end|>' → logprob: -13.375177383422852
    10. '
' → logprob: -13.625177383422852

Token 123: '   ' (ID: 271)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.5492602586746216
    2. '<|end|>' → logprob: -1.7992602586746216
    3. '.' → logprob: -3.049260139465332
    4. ' ' → logprob: -3.174260139465332
    5. ' r' → logprob: -3.549260139465332
    6. '   ' → logprob: -3.674260139465332
    7. ' 
' → logprob: -4.049260139465332
    8. '
' → logprob: -4.174260139465332
    9. 'v' → logprob: -4.174260139465332
    10. '#' → logprob: -4.549260139465332

Token 124: ' output' (ID: 4733)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.862311840057373
    2. 'if' → logprob: -2.112311840057373
    3. 'v' → logprob: -2.487311840057373
    4. 'for' → logprob: -2.737311840057373
    5. 'x' → logprob: -2.987311840057373
    6. 'w' → logprob: -3.612311840057373
    7. 'dx' → logprob: -3.737311840057373
    8. ' for' → logprob: -3.862311840057373
    9. ' if' → logprob: -4.112311840057373
    10. '   ' → logprob: -4.237311840057373

Token 125: '(area' (ID: 115185)
  Prédit: '(area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(area' → logprob: -0.011273572221398354
    2. '(' → logprob: -4.511273384094238
    3. 'area' → logprob: -9.011273384094238
    4. '(r' → logprob: -9.761273384094238
    5. '((' → logprob: -11.511273384094238
    6. '0' → logprob: -11.636273384094238
    7. '(
' → logprob: -12.261273384094238
    8. '(x' → logprob: -13.136273384094238
    9. '(abs' → logprob: -13.136273384094238
    10. '(angle' → logprob: -13.261273384094238

Token 126: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03896510973572731
    2. '/' → logprob: -4.288965225219727
    3. ' /' → logprob: -4.538965225219727
    4. ' ,' → logprob: -4.663965225219727
    5. ')' → logprob: -6.163965225219727
    6. ' *' → logprob: -7.288965225219727
    7. '*' → logprob: -7.288965225219727
    8. '-' → logprob: -8.413965225219727
    9. ' -' → logprob: -8.663965225219727
    10. '+' → logprob: -8.913965225219727

Token 127: ' r' (ID: 428)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.44745072722435
    2. ' False' → logprob: -1.3224507570266724
    3. '0' → logprob: -2.447450637817383
    4. ' ' → logprob: -4.947450637817383
    5. ' True' → logprob: -8.822450637817383
    6. 'True' → logprob: -8.947450637817383
    7. '   ' → logprob: -9.197450637817383
    8. '1' → logprob: -9.447450637817383
    9. ' not' → logprob: -10.322450637817383
    10. '(False' → logprob: -10.572450637817383

Token 128: '.v' (ID: 5520)
  Prédit: '.v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.v' → logprob: -0.00033034008811227977
    2. '.' → logprob: -8.125329971313477
    3. ' .' → logprob: -10.875329971313477
    4. '.w' → logprob: -11.625329971313477
    5. ').' → logprob: -12.375329971313477
    6. '.x' → logprob: -14.750329971313477
    7. ')' → logprob: -15.125329971313477
    8. '>.' → logprob: -15.125329971313477
    9. '.y' → logprob: -15.875329971313477
    10. ',' → logprob: -16.125329971313477

Token 129: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00027945113833993673
    2. ' )' → logprob: -9.000279426574707
    3. '==' → logprob: -9.125279426574707
    4. '+' → logprob: -11.000279426574707
    5. ')
' → logprob: -11.750279426574707
    6. '))' → logprob: -12.125279426574707
    7. ' ==' → logprob: -12.125279426574707
    8. '0' → logprob: -12.250279426574707
    9. ')==' → logprob: -14.250279426574707
    10. '+)' → logprob: -14.250279426574707


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 127
Tokens correctement prédits (1ère position, stricte): 47
Tokens correctement prédits (1ère position, avec adaptation): 48
Tokens correctement prédits (top 10): 94
Précision stricte (1ère position): 37.01%
Précision adaptée (1ère position): 37.80%
Précision (top 10): 74.02%
================================================================================
