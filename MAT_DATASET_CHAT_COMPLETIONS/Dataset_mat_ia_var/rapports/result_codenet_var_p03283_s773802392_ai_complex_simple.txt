================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:11:19
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from itertools import accumulate, product
from operator import itemgetter

n, m, q = map(int, input().split())
lr = list(map(lambda x: tuple(map(int, x.split())), [input() for _ in range(m)]))
pq = list(map(lambda x: tuple(map(int, x.split())), [input() for _ in range(q)]))

from collections import defaultdict
inc = defaultdict(int)
list(map(lambda x: inc.update({(x[0]-1, x[1]-1): inc[(x[0]-1, x[1]-1)] + 1}), lr))
sq = [[inc[(i, j)] for j in range(n)] for i in range(n)]

c = [list(accumulate(row)) for row in sq]

for p, qv in pq:
    r = (lambda P, Q: sum((lambda a, b: c[a][b] - (c[a][P-2] if P-1 else 0))(a, Q-1) for a in range(P-1, Q))) 
    print(r(p, qv))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' itertools' (ID: 103178)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' accumulate' (ID: 74226)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -1.1646274328231812
    2. 'product' → logprob: -1.4146274328231812
    3. 'per' → logprob: -1.7896274328231812
    4. 'count' → logprob: -2.0396275520324707
    5. 'cycle' → logprob: -2.6646275520324707
    6. 'group' → logprob: -3.2896275520324707
    7. 'chain' → logprob: -3.4146275520324707
    8. 'acc' → logprob: -6.039627552032471
    9. 'is' → logprob: -6.539627552032471
    10. 'zip' → logprob: -6.914627552032471

Token 4: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0001669485354796052
    2. '(
' → logprob: -9.250166893005371
    3. '.' → logprob: -10.375166893005371
    4. ',' → logprob: -11.125166893005371
    5. '\(' → logprob: -11.750166893005371
    6. '()' → logprob: -12.375166893005371
    7. ' (' → logprob: -12.625166893005371
    8. '```' → logprob: -13.500166893005371
    9. '(

' → logprob: -13.625166893005371
    10. '('' → logprob: -14.000166893005371

Token 5: ' product' (ID: 1888)
  Prédit: 'chain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chain' → logprob: -0.8178706169128418
    2. ' chain' → logprob: -0.9428706169128418
    3. 'group' → logprob: -2.692870616912842
    4. 'com' → logprob: -3.067870616912842
    5. ' group' → logprob: -3.067870616912842
    6. 'product' → logprob: -6.192870616912842
    7. 'compress' → logprob: -6.692870616912842
    8. ' product' → logprob: -6.817870616912842
    9. ' combinations' → logprob: -7.192870616912842
    10. '```' → logprob: -7.692870616912842

Token 6: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003831252979580313
    2. '(
' → logprob: -8.625383377075195
    3. '\(' → logprob: -9.750383377075195
    4. ',' → logprob: -10.125383377075195
    5. '.' → logprob: -11.000383377075195
    6. ' (' → logprob: -11.375383377075195
    7. '```' → logprob: -11.625383377075195
    8. '`' → logprob: -11.625383377075195
    9. '_' → logprob: -11.750383377075195
    10. 's' → logprob: -11.875383377075195

Token 7: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01995684765279293
    2. '(
' → logprob: -4.019957065582275
    3. ',' → logprob: -7.894957065582275
    4. '\(' → logprob: -8.144956588745117
    5. '
' → logprob: -8.519956588745117
    6. '.' → logprob: -9.019956588745117
    7. '\n' → logprob: -9.019956588745117
    8. 'a' → logprob: -9.144956588745117
    9. '```' → logprob: -9.144956588745117
    10. '\' → logprob: -9.269956588745117

Token 8: ' operator' (ID: 11019)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.20391063392162323
    2. 'math' → logprob: -2.2039105892181396
    3. ' operator' → logprob: -3.2039105892181396
    4. ' collections' → logprob: -4.453910827636719
    5. 'collections' → logprob: -4.828910827636719
    6. ' functools' → logprob: -4.828910827636719
    7. 'operator' → logprob: -5.328910827636719
    8. 'fun' → logprob: -7.328910827636719
    9. ' itertools' → logprob: -9.578910827636719
    10. ' sys' → logprob: -9.828910827636719

Token 9: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.0901959240436554
    2. 'import' → logprob: -2.465195894241333
    3. ' ' → logprob: -6.965196132659912
    4. '.' → logprob: -8.715195655822754
    5. '<|end|>' → logprob: -9.715195655822754
    6. '_import' → logprob: -10.465195655822754
    7. '	import' → logprob: -10.715195655822754
    8. ' .' → logprob: -11.340195655822754
    9. '.import' → logprob: -12.090195655822754
    10. ',' → logprob: -12.465195655822754

Token 10: ' item' (ID: 2169)
  Prédit: ' mul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mul' → logprob: -0.7888844013214111
    2. ' add' → logprob: -1.1638844013214111
    3. 'mul' → logprob: -1.9138844013214111
    4. ' ' → logprob: -3.288884401321411
    5. 'add' → logprob: -3.288884401321411
    6. ' item' → logprob: -5.663884162902832
    7. ' import' → logprob: -6.038884162902832
    8. 'item' → logprob: -6.413884162902832
    9. '```' → logprob: -6.913884162902832
    10. 'import' → logprob: -7.038884162902832

Token 11: 'getter' (ID: 132812)
  Prédit: 'getter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'getter' → logprob: -0.01841377094388008
    2. 'get' → logprob: -4.018413543701172
    3. 'gett' → logprob: -8.643413543701172
    4. 'getitem' → logprob: -9.393413543701172
    5. 'g' → logprob: -13.518413543701172
    6. 'ge' → logprob: -14.143413543701172
    7. 'gt' → logprob: -14.643413543701172
    8. 'gets' → logprob: -15.018413543701172
    9. 'item' → logprob: -15.268413543701172
    10. 'gte' → logprob: -15.643413543701172

Token 12: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13064995408058167
    2. '\n' → logprob: -3.255650043487549
    3. '(
' → logprob: -3.630650043487549
    4. ',' → logprob: -4.005650043487549
    5. '\' → logprob: -4.005650043487549
    6. '[' → logprob: -5.380650043487549
    7. '`' → logprob: -6.005650043487549
    8. 'for' → logprob: -6.255650043487549
    9. '.' → logprob: -6.380650043487549
    10. '
' → logprob: -6.380650043487549

Token 13: 'n' (ID: 77)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.36427226662635803
    2. 'd' → logprob: -2.989272356033325
    3. '#' → logprob: -3.239272356033325
    4. '(
' → logprob: -3.239272356033325
    5. 'a' → logprob: -3.489272356033325
    6. '`' → logprob: -3.739272356033325
    7. 'for' → logprob: -3.739272356033325
    8. 'result' → logprob: -4.364272117614746
    9. '[' → logprob: -4.614272117614746
    10. '*' → logprob: -4.614272117614746

Token 14: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1403016746044159
    2. ' ' → logprob: -2.2653017044067383
    3. '=' → logprob: -3.7653017044067383
    4. '  ' → logprob: -6.640301704406738
    5. ',' → logprob: -7.015301704406738
    6. 's' → logprob: -7.265301704406738
    7. ' ,' → logprob: -8.140301704406738
    8. '.' → logprob: -8.140301704406738
    9. '_' → logprob: -9.640301704406738
    10. ')' → logprob: -9.640301704406738

Token 15: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -1.2117811441421509
    2. 'k' → logprob: -1.3367811441421509
    3. 'm' → logprob: -1.4617811441421509
    4. ' k' → logprob: -1.5867811441421509
    5. ' ' → logprob: -6.336781024932861
    6. '=' → logprob: -7.461781024932861
    7. ' =' → logprob: -8.08678150177002
    8. ' r' → logprob: -9.33678150177002
    9. 'a' → logprob: -9.58678150177002
    10. '=k' → logprob: -9.96178150177002

Token 16: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004718841519206762
    2. '=' → logprob: -5.379718780517578
    3. ',' → logprob: -9.379718780517578
    4. ' ,' → logprob: -12.004718780517578
    5. ' ' → logprob: -12.379718780517578
    6. ' =
' → logprob: -14.129718780517578
    7. '<|end|>' → logprob: -14.254718780517578
    8. ')' → logprob: -14.379718780517578
    9. ' =",' → logprob: -14.879718780517578
    10. '  ' → logprob: -15.129718780517578

Token 17: ' q' (ID: 2335)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.5587968230247498
    2. 'k' → logprob: -1.0587968826293945
    3. ' =' → logprob: -3.1837968826293945
    4. ' p' → logprob: -4.4337968826293945
    5. 'a' → logprob: -5.0587968826293945
    6. ' ' → logprob: -5.3087968826293945
    7. '=' → logprob: -5.5587968826293945
    8. 'p' → logprob: -5.8087968826293945
    9. ' q' → logprob: -6.3087968826293945
    10. 'q' → logprob: -6.4337968826293945

Token 18: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0234895758330822
    2. '=' → logprob: -3.773489475250244
    3. ',' → logprob: -8.398489952087402
    4. '<|end|>' → logprob: -12.023489952087402
    5. ' ,' → logprob: -12.273489952087402
    6. ')' → logprob: -13.023489952087402
    7. '  ' → logprob: -13.648489952087402
    8. ' ' → logprob: -13.898489952087402
    9. ' =
' → logprob: -14.523489952087402
    10. '>' → logprob: -15.023489952087402

Token 19: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.390342116355896
    2. 'map' → logprob: -1.140342116355896
    3. ' ' → logprob: -5.8903422355651855
    4. '0' → logprob: -7.5153422355651855
    5. '5' → logprob: -10.015341758728027
    6. '10' → logprob: -10.515341758728027
    7. 'input' → logprob: -10.890341758728027
    8. '	map' → logprob: -11.140341758728027
    9. ' list' → logprob: -11.390341758728027
    10. 'list' → logprob: -11.515341758728027

Token 20: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.024534933269023895
    2. '(' → logprob: -3.7745349407196045
    3. '(input' → logprob: -7.774534702301025
    4. 'int' → logprob: -7.899534702301025
    5. '(str' → logprob: -8.024535179138184
    6. '(lambda' → logprob: -9.399535179138184
    7. 'input' → logprob: -10.024535179138184
    8. '<int' → logprob: -11.024535179138184
    9. '[int' → logprob: -11.649535179138184
    10. '=int' → logprob: -12.649535179138184

Token 21: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.8269882798194885
    2. 'input' → logprob: -0.9519882798194885
    3. ',' → logprob: -2.3269882202148438
    4. ',input' → logprob: -3.0769882202148438
    5. ')' → logprob: -4.201988220214844
    6. ' input' → logprob: -4.576988220214844
    7. '(' → logprob: -4.951988220214844
    8. '=input' → logprob: -7.951988220214844
    9. '```' → logprob: -9.576988220214844
    10. '<input' → logprob: -9.951988220214844

Token 22: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.16026179492473602
    2. ' input' → logprob: -1.9102617502212524
    3. ')' → logprob: -10.285262107849121
    4. ' )' → logprob: -13.410262107849121
    5. '(input' → logprob: -14.410262107849121
    6. ' ' → logprob: -14.535262107849121
    7. '=input' → logprob: -15.035262107849121
    8. ',input' → logprob: -15.535262107849121
    9. '	input' → logprob: -15.660262107849121
    10. '```' → logprob: -15.660262107849121

Token 23: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.5872762799263
    2. '()' → logprob: -1.4622762203216553
    3. '())' → logprob: -1.5872762203216553
    4. '(' → logprob: -5.962276458740234
    5. ')' → logprob: -6.212276458740234
    6. '(),' → logprob: -7.087276458740234
    7. '());' → logprob: -7.087276458740234
    8. '('' → logprob: -8.087276458740234
    9. '()>' → logprob: -8.087276458740234
    10. '();' → logprob: -8.962276458740234

Token 24: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -6.945094355614856e-05
    2. 'strip' → logprob: -9.625069618225098
    3. ' split' → logprob: -13.625069618225098
    4. 'rstrip' → logprob: -13.875069618225098
    5. ')' → logprob: -14.125069618225098
    6. 'spl' → logprob: -15.375069618225098
    7. '(split' → logprob: -15.750069618225098
    8. 'read' → logprob: -15.875069618225098
    9. '```' → logprob: -17.75006866455078
    10. 's' → logprob: -18.25006866455078

Token 25: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001703983056358993
    2. '))' → logprob: -6.501704216003418
    3. '())' → logprob: -8.876704216003418
    4. '),' → logprob: -10.501704216003418
    5. '()' → logprob: -11.626704216003418
    6. '(' → logprob: -11.876704216003418
    7. '')' → logprob: -12.876704216003418
    8. ')))' → logprob: -12.876704216003418
    9. '`)' → logprob: -13.126704216003418
    10. ')`' → logprob: -13.376704216003418

Token 26: 'lr' (ID: 35878)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1702418327331543
    2. 'a' → logprob: -1.5452418327331543
    3. ' 
' → logprob: -2.5452418327331543
    4. ')' → logprob: -2.5452418327331543
    5. 'data' → logprob: -2.6702418327331543
    6. '<|end|>' → logprob: -2.7952418327331543
    7. '  
' → logprob: -3.4202418327331543
    8. ' ' → logprob: -3.7952418327331543
    9. ',' → logprob: -4.045241832733154
    10. 'n' → logprob: -4.170241832733154

Token 27: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.13396745920181274
    2. ' =' → logprob: -2.508967399597168
    3. 's' → logprob: -3.133967399597168
    4. ' ' → logprob: -8.258967399597168
    5. 'st' → logprob: -9.758967399597168
    6. '=[]' → logprob: -10.133967399597168
    7. 'i' → logprob: -11.258967399597168
    8. '_s' → logprob: -11.258967399597168
    9. 'ist' → logprob: -11.508967399597168
    10. 'a' → logprob: -11.633967399597168

Token 28: ' list' (ID: 1562)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.085297130048275
    2. '[list' → logprob: -2.835297107696533
    3. '[input' → logprob: -4.585297107696533
    4. '[int' → logprob: -4.585297107696533
    5. ' [' → logprob: -6.710297107696533
    6. '[List' → logprob: -7.710297107696533
    7. '[array' → logprob: -8.335297584533691
    8. '[len' → logprob: -9.210297584533691
    9. '[item' → logprob: -9.335297584533691
    10. '[l' → logprob: -9.460297584533691

Token 29: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5166466236114502
    2. '(map' → logprob: -1.0166466236114502
    3. '(product' → logprob: -3.51664662361145
    4. '(range' → logprob: -5.391646385192871
    5. '(acc' → logprob: -6.516646385192871
    6. '(filter' → logprob: -6.516646385192871
    7. '(input' → logprob: -7.266646385192871
    8. '(item' → logprob: -7.391646385192871
    9. '(chain' → logprob: -7.391646385192871
    10. '(zip' → logprob: -8.016646385192871

Token 30: '(lambda' (ID: 43341)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.002309646224603057
    2. '(' → logprob: -6.377309799194336
    3. '(lambda' → logprob: -7.877309799194336
    4. '[int' → logprob: -9.252309799194336
    5. '<|end|>' → logprob: -9.752309799194336
    6. '(str' → logprob: -11.127309799194336
    7. ')' → logprob: -11.252309799194336
    8. '<int' → logprob: -11.752309799194336
    9. 'int' → logprob: -11.877309799194336
    10. ')(' → logprob: -12.252309799194336

Token 31: ' x' (ID: 1215)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5455780625343323
    2. 'x' → logprob: -1.4205780029296875
    3. 'lambda' → logprob: -2.2955780029296875
    4. ' x' → logprob: -3.7955780029296875
    5. ' int' → logprob: -4.1705780029296875
    6. ' lambda' → logprob: -4.6705780029296875
    7. '_' → logprob: -4.7955780029296875
    8. ':' → logprob: -5.2955780029296875
    9. 's' → logprob: -5.6705780029296875
    10. '(int' → logprob: -5.9205780029296875

Token 32: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.055694762617349625
    2. ':int' → logprob: -2.930694818496704
    3. ' :' → logprob: -7.305694580078125
    4. ':list' → logprob: -9.430694580078125
    5. ':x' → logprob: -10.055694580078125
    6. 'int' → logprob: -11.930694580078125
    7. ',int' → logprob: -13.555694580078125
    8. '=int' → logprob: -13.680694580078125
    9. ':[' → logprob: -13.680694580078125
    10. 'x' → logprob: -14.180694580078125

Token 33: ' tuple' (ID: 31311)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.3779410719871521
    2. 'tuple' → logprob: -1.8779411315917969
    3. 'list' → logprob: -2.252941131591797
    4. ' tuple' → logprob: -3.377941131591797
    5. 'x' → logprob: -4.627941131591797
    6. ' int' → logprob: -5.127941131591797
    7. ' list' → logprob: -5.877941131591797
    8. ' x' → logprob: -6.627941131591797
    9. 'input' → logprob: -7.127941131591797
    10. '[int' → logprob: -7.252941131591797

Token 34: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.002382664941251278
    2. '(int' → logprob: -7.002382755279541
    3. '(x' → logprob: -7.002382755279541
    4. 'map' → logprob: -8.002382278442383
    5. '(' → logprob: -8.877382278442383
    6. 'x' → logprob: -9.627382278442383
    7. '(input' → logprob: -11.377382278442383
    8. 'int' → logprob: -12.377382278442383
    9. ' map' → logprob: -13.502382278442383
    10. 'input' → logprob: -14.502382278442383

Token 35: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -8.220573363360018e-05
    2. 'int' → logprob: -9.500082015991211
    3. '(' → logprob: -12.750082015991211
    4. '<int' → logprob: -12.875082015991211
    5. '=int' → logprob: -14.375082015991211
    6. ',int' → logprob: -14.750082015991211
    7. '[int' → logprob: -15.000082015991211
    8. ')' → logprob: -16.00008201599121
    9. ' int' → logprob: -16.25008201599121
    10. '(str' → logprob: -16.75008201599121

Token 36: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10633502155542374
    2. ',x' → logprob: -2.356334924697876
    3. ',input' → logprob: -5.606335163116455
    4. '(x' → logprob: -6.106335163116455
    5. ',(' → logprob: -9.981334686279297
    6. 'x' → logprob: -10.356334686279297
    7. '<|end|>' → logprob: -10.731334686279297
    8. '(' → logprob: -10.856334686279297
    9. ' ,' → logprob: -10.981334686279297
    10. ')),' → logprob: -11.606334686279297

Token 37: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0034831815864890814
    2. 'input' → logprob: -5.753483295440674
    3. ' x' → logprob: -8.128482818603516
    4. '(x' → logprob: -12.253482818603516
    5. ' input' → logprob: -12.378482818603516
    6. ')x' → logprob: -14.503482818603516
    7. ')' → logprob: -15.128482818603516
    8. ' ' → logprob: -15.878482818603516
    9. '```' → logprob: -16.253482818603516
    10. '	x' → logprob: -16.253482818603516

Token 38: '.split' (ID: 10347)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.1864977926015854
    2. '.split' → logprob: -1.9364978075027466
    3. '.' → logprob: -3.686497688293457
    4. ' .' → logprob: -7.936497688293457
    5. '.strip' → logprob: -9.061497688293457
    6. '()' → logprob: -9.186497688293457
    7. '.readline' → logprob: -9.561497688293457
    8. ')' → logprob: -9.561497688293457
    9. 'input' → logprob: -9.936497688293457
    10. 'split' → logprob: -10.186497688293457

Token 39: '()' (ID: 416)
  Prédit: '())))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())))' → logprob: -0.7466394305229187
    2. '()' → logprob: -0.9966394305229187
    3. '()))' → logprob: -2.3716394901275635
    4. '()),' → logprob: -3.3716394901275635
    5. '())' → logprob: -3.7466394901275635
    6. ')))' → logprob: -5.871639251708984
    7. '('' → logprob: -7.121639251708984
    8. ')),' → logprob: -7.371639251708984
    9. '()));' → logprob: -7.871639251708984
    10. ')' → logprob: -8.371639251708984

Token 40: ')),' (ID: 12098)
  Prédit: '()),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()),' → logprob: -0.39551129937171936
    2. '),' → logprob: -1.145511269569397
    3. '(','' → logprob: -6.145511150360107
    4. '()' → logprob: -6.270511150360107
    5. ''),' → logprob: -6.395511150360107
    6. '())' → logprob: -7.145511150360107
    7. ')' → logprob: -7.270511150360107
    8. ')),' → logprob: -7.770511150360107
    9. '"),' → logprob: -8.645511627197266
    10. ''),'' → logprob: -8.770511627197266

Token 41: ' [' (ID: 723)
  Prédit: '[input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[input' → logprob: -0.020943790674209595
    2. '[' → logprob: -4.020943641662598
    3. '(input' → logprob: -6.145943641662598
    4. 'input' → logprob: -7.895943641662598
    5. ' [' → logprob: -9.395943641662598
    6. '[line' → logprob: -9.895943641662598
    7. '[item' → logprob: -10.520943641662598
    8. '(range' → logprob: -10.770943641662598
    9. '[list' → logprob: -10.770943641662598
    10. '([' → logprob: -11.645943641662598

Token 42: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.00020520923135336488
    2. ' input' → logprob: -8.500205039978027
    3. '   ' → logprob: -14.375205039978027
    4. '<input' → logprob: -14.750205039978027
    5. '(input' → logprob: -15.625205039978027
    6. ' ' → logprob: -15.625205039978027
    7. '```' → logprob: -15.875205039978027
    8. '_' → logprob: -16.125205993652344
    9. '[input' → logprob: -16.750205993652344
    10. '	input' → logprob: -16.750205993652344

Token 43: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -6.988221684878226e-06
    2. '().' → logprob: -12.750006675720215
    3. '())' → logprob: -13.250006675720215
    4. ' ()' → logprob: -13.500006675720215
    5. '()
' → logprob: -15.125006675720215
    6. '()]' → logprob: -15.625006675720215
    7. '()))' → logprob: -16.25000762939453
    8. '（）' → logprob: -16.50000762939453
    9. '(' → logprob: -16.75000762939453
    10. '()),' → logprob: -17.00000762939453

Token 44: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0025694756768643856
    2. ' for' → logprob: -6.377569675445557
    3. 'for' → logprob: -7.252569675445557
    4. ' ()' → logprob: -9.002569198608398
    5. ')' → logprob: -10.877569198608398
    6. '().' → logprob: -11.627569198608398
    7. '())' → logprob: -12.877569198608398
    8. ' ' → logprob: -13.377569198608398
    9. '()
' → logprob: -14.127569198608398
    10. '_' → logprob: -14.877569198608398

Token 45: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.11182311922311783
    2. ' range' → logprob: -2.611823081970215
    3. ' _' → logprob: -3.486823081970215
    4. '_range' → logprob: -6.736823081970215
    5. 'range' → logprob: -8.236823081970215
    6. ' ' → logprob: -8.361823081970215
    7. ' in' → logprob: -9.861823081970215
    8. '_q' → logprob: -9.986823081970215
    9. ' q' → logprob: -12.236823081970215
    10. '_j' → logprob: -13.611823081970215

Token 46: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.038197677582502365
    2. ' range' → logprob: -3.2881977558135986
    3. ' in' → logprob: -9.03819751739502
    4. 'in' → logprob: -10.91319751739502
    5. '(range' → logprob: -11.66319751739502
    6. 'q' → logprob: -12.16319751739502
    7. '	range' → logprob: -13.66319751739502
    8. 'm' → logprob: -14.28819751739502
    9. 'n' → logprob: -14.28819751739502
    10. 'ange' → logprob: -14.41319751739502

Token 47: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00020425561524461955
    2. ' range' → logprob: -8.500204086303711
    3. '(range' → logprob: -14.500204086303711
    4. '[q' → logprob: -15.875204086303711
    5. '	range' → logprob: -16.87520408630371
    6. 'rage' → logprob: -17.37520408630371
    7. 'q' → logprob: -17.50020408630371
    8. '[r' → logprob: -17.50020408630371
    9. '[' → logprob: -17.87520408630371
    10. ')' → logprob: -18.25020408630371

Token 48: '(m' (ID: 2145)
  Prédit: '(q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -0.04912286251783371
    2. '(m' → logprob: -3.5491228103637695
    3. '(n' → logprob: -4.2991228103637695
    4. 'q' → logprob: -5.2991228103637695
    5. '(' → logprob: -7.9241228103637695
    6. 'm' → logprob: -8.42412281036377
    7. 'n' → logprob: -10.67412281036377
    8. ' (' → logprob: -12.79912281036377
    9. ' q' → logprob: -13.79912281036377
    10. '(
' → logprob: -15.42412281036377

Token 49: ')]' (ID: 15710)
  Prédit: ']))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.005157027393579483
    2. ']' → logprob: -6.005156993865967
    3. ')]' → logprob: -6.505156993865967
    4. '])' → logprob: -7.255156993865967
    5. '])))' → logprob: -8.130157470703125
    6. ')])' → logprob: -9.255157470703125
    7. '))' → logprob: -10.005157470703125
    8. ')' → logprob: -11.130157470703125
    9. ']))
' → logprob: -11.380157470703125
    10. ')))' → logprob: -12.130157470703125

Token 50: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.002076505683362484
    2. ')' → logprob: -6.377076625823975
    3. ')))' → logprob: -8.127076148986816
    4. '))
' → logprob: -9.627076148986816
    5. ')),' → logprob: -12.377076148986816
    6. ' ))' → logprob: -12.502076148986816
    7. '),' → logprob: -13.752076148986816
    8. ''))' → logprob: -14.502076148986816
    9. ']))' → logprob: -14.627076148986816
    10. '))

' → logprob: -14.752076148986816

Token 51: 'pq' (ID: 124147)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0161932706832886
    2. '
' → logprob: -1.0161932706832886
    3. ')
' → logprob: -1.7661932706832886
    4. '[' → logprob: -3.641193389892578
    5. '\n' → logprob: -4.266193389892578
    6. '
' → logprob: -4.266193389892578
    7. 'for' → logprob: -4.516193389892578
    8. ',
' → logprob: -4.766193389892578
    9. '[
' → logprob: -5.016193389892578
    10. '```' → logprob: -5.766193389892578

Token 52: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.638847827911377
    2. ' =' → logprob: -0.763847827911377
    3. 'u' → logprob: -5.263847827911377
    4. ' ' → logprob: -7.763847827911377
    5. '=[]' → logprob: -8.513847351074219
    6. 's' → logprob: -8.888847351074219
    7. '[' → logprob: -10.013847351074219
    8. '   ' → logprob: -10.138847351074219
    9. 'r' → logprob: -10.388847351074219
    10. '[]' → logprob: -10.638847351074219

Token 53: ' list' (ID: 1562)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.31876540184020996
    2. 'list' → logprob: -1.44376540184021
    3. ' [' → logprob: -4.193765640258789
    4. ' list' → logprob: -4.318765640258789
    5. '[' → logprob: -4.818765640258789
    6. '(list' → logprob: -9.068765640258789
    7. '[int' → logprob: -9.818765640258789
    8. '[input' → logprob: -9.943765640258789
    9. '[item' → logprob: -10.193765640258789
    10. '[l' → logprob: -10.318765640258789

Token 54: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.049284130334854126
    2. '(' → logprob: -3.4242842197418213
    3. '(lambda' → logprob: -4.174283981323242
    4. '(tuple' → logprob: -9.924283981323242
    5. '(filter' → logprob: -10.799283981323242
    6. '((' → logprob: -10.799283981323242
    7. '(range' → logprob: -11.674283981323242
    8. '(product' → logprob: -12.299283981323242
    9. '(m' → logprob: -12.549283981323242
    10. '(token' → logprob: -12.799283981323242

Token 55: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.0036634914577007294
    2. '(int' → logprob: -5.878663539886475
    3. '(' → logprob: -7.128663539886475
    4. 'lambda' → logprob: -10.378663063049316
    5. '(tuple' → logprob: -11.378663063049316
    6. '(str' → logprob: -11.878663063049316
    7. '=lambda' → logprob: -13.003663063049316
    8. '(input' → logprob: -13.878663063049316
    9. '(list' → logprob: -14.128663063049316
    10. '(
' → logprob: -14.503663063049316

Token 56: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.4830586314201355
    2. 'x' → logprob: -1.1080586910247803
    3. '(x' → logprob: -3.3580586910247803
    4. '<|end|>' → logprob: -4.233058452606201
    5. '(' → logprob: -6.733058452606201
    6. '(int' → logprob: -7.108058452606201
    7. '(lambda' → logprob: -7.233058452606201
    8. ' (' → logprob: -8.23305892944336
    9. 'int' → logprob: -8.73305892944336
    10. 'lambda' → logprob: -9.35805892944336

Token 57: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -6.539801688631997e-05
    2. ' :' → logprob: -9.750065803527832
    3. '<|end|>' → logprob: -13.625065803527832
    4. ':int' → logprob: -14.250065803527832
    5. '(x' → logprob: -14.250065803527832
    6. '):' → logprob: -14.250065803527832
    7. '(' → logprob: -14.250065803527832
    8. 'x' → logprob: -14.500065803527832
    9. '=lambda' → logprob: -14.500065803527832
    10. '=' → logprob: -14.750065803527832

Token 58: ' tuple' (ID: 31311)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.5768365263938904
    2. ' tuple' → logprob: -0.8268365263938904
    3. 'int' → logprob: -7.076836585998535
    4. ' int' → logprob: -10.826836585998535
    5. '(tuple' → logprob: -10.826836585998535
    6. 'lambda' → logprob: -11.826836585998535
    7. ' lambda' → logprob: -13.201836585998535
    8. 'input' → logprob: -14.076836585998535
    9. 'tu' → logprob: -14.326836585998535
    10. 't' → logprob: -14.576836585998535

Token 59: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.001421187655068934
    2. '(int' → logprob: -6.626420974731445
    3. '(' → logprob: -9.751420974731445
    4. 'map' → logprob: -10.376420974731445
    5. 'int' → logprob: -12.876420974731445
    6. '(m' → logprob: -14.376420974731445
    7. '(input' → logprob: -14.376420974731445
    8. '(lambda' → logprob: -14.751420974731445
    9. '<int' → logprob: -14.876420974731445
    10. ' map' → logprob: -14.876420974731445

Token 60: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.000568998686503619
    2. 'int' → logprob: -7.500568866729736
    3. '<int' → logprob: -11.250569343566895
    4. '=int' → logprob: -13.625569343566895
    5. ' int' → logprob: -14.500569343566895
    6. ',int' → logprob: -14.625569343566895
    7. ']int' → logprob: -15.125569343566895
    8. '[int' → logprob: -15.375569343566895
    9. ':int' → logprob: -15.500569343566895
    10. '(' → logprob: -16.375568389892578

Token 61: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.523948907968588e-05
    2. ',x' → logprob: -10.750035285949707
    3. '(x' → logprob: -11.750035285949707
    4. '(' → logprob: -12.875035285949707
    5. ' ,' → logprob: -13.875035285949707
    6. '<|end|>' → logprob: -14.000035285949707
    7. '(),' → logprob: -14.750035285949707
    8. '‌,' → logprob: -15.125035285949707
    9. ',input' → logprob: -15.375035285949707
    10. ',(' → logprob: -15.375035285949707

Token 62: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.201422318816185
    2. ' x' → logprob: -1.7014223337173462
    3. '(x' → logprob: -11.826422691345215
    4. 'input' → logprob: -13.826422691345215
    5. ' ' → logprob: -15.326422691345215
    6. ')x' → logprob: -15.451422691345215
    7. ')' → logprob: -16.4514217376709
    8. ' input' → logprob: -16.4514217376709
    9. ',x' → logprob: -16.8264217376709
    10. '	x' → logprob: -17.2014217376709

Token 63: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.008835204876959324
    2. '.' → logprob: -4.758835315704346
    3. ' .' → logprob: -9.008834838867188
    4. 'split' → logprob: -9.758834838867188
    5. '.readline' → logprob: -11.008834838867188
    6. '().' → logprob: -11.258834838867188
    7. ')' → logprob: -13.133834838867188
    8. '.input' → logprob: -13.633834838867188
    9. ':' → logprob: -13.758834838867188
    10. 'input' → logprob: -13.883834838867188

Token 64: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4690346121788025
    2. '),' → logprob: -1.8440346717834473
    3. '()),' → logprob: -1.8440346717834473
    4. ')),' → logprob: -2.9690346717834473
    5. '(),' → logprob: -5.219034671783447
    6. ')' → logprob: -8.094034194946289
    7. ' ' → logprob: -8.219034194946289
    8. '()))' → logprob: -8.969034194946289
    9. ',' → logprob: -9.219034194946289
    10. '(' → logprob: -9.469034194946289

Token 65: ')),' (ID: 12098)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.11245059221982956
    2. ')),' → logprob: -2.86245059967041
    3. '()),' → logprob: -3.11245059967041
    4. '()' → logprob: -5.73745059967041
    5. ')' → logprob: -7.61245059967041
    6. '(),' → logprob: -7.73745059967041
    7. '(' → logprob: -8.98745059967041
    8. ' ),' → logprob: -9.48745059967041
    9. '()[' → logprob: -9.61245059967041
    10. '))' → logprob: -9.61245059967041

Token 66: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.31348538398742676
    2. '[input' → logprob: -1.3134853839874268
    3. '[' → logprob: -8.688485145568848
    4. '[x' → logprob: -10.438485145568848
    5. '[ip' → logprob: -11.813485145568848
    6. '([' → logprob: -12.063485145568848
    7. '[int' → logprob: -13.063485145568848
    8. '[item' → logprob: -13.313485145568848
    9. ' ' → logprob: -13.813485145568848
    10. '[q' → logprob: -13.813485145568848

Token 67: 'input' (ID: 2586)
  Prédit: '[input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[input' → logprob: -0.5841785073280334
    2. 'input' → logprob: -1.0841784477233887
    3. 'range' → logprob: -3.2091784477233887
    4. ' input' → logprob: -3.4591784477233887
    5. '(input' → logprob: -3.8341784477233887
    6. ' range' → logprob: -4.959178447723389
    7. ' [' → logprob: -5.834178447723389
    8. '<input' → logprob: -8.334178924560547
    9. '(range' → logprob: -8.334178924560547
    10. '=input' → logprob: -9.709178924560547

Token 68: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.259079363080673e-05
    2. ' ()' → logprob: -11.500012397766113
    3. ')' → logprob: -14.250012397766113
    4. '(' → logprob: -14.250012397766113
    5. '()
' → logprob: -15.000012397766113
    6. 'for' → logprob: -15.000012397766113
    7. ' for' → logprob: -15.875012397766113
    8. '().' → logprob: -16.00001335144043
    9. '())' → logprob: -17.00001335144043
    10. ' ' → logprob: -17.00001335144043

Token 69: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.21293513476848602
    2. 'for' → logprob: -2.087935209274292
    3. ' for' → logprob: -2.837935209274292
    4. ')' → logprob: -4.712934970855713
    5. ' ' → logprob: -8.712935447692871
    6. '(' → logprob: -9.462935447692871
    7. ' ()' → logprob: -10.337935447692871
    8. '	for' → logprob: -10.962935447692871
    9. '())' → logprob: -11.837935447692871
    10. ' )' → logprob: -12.587935447692871

Token 70: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.05739530548453331
    2. '_' → logprob: -3.0573952198028564
    3. 'range' → logprob: -4.8073954582214355
    4. ' _' → logprob: -7.5573954582214355
    5. '(range' → logprob: -9.932394981384277
    6. '_range' → logprob: -10.932394981384277
    7. ' q' → logprob: -11.557394981384277
    8. 'q' → logprob: -14.557394981384277
    9. '_q' → logprob: -15.432394981384277
    10. ' xrange' → logprob: -15.432394981384277

Token 71: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.16030728816986084
    2. ' range' → logprob: -1.9103072881698608
    3. '(range' → logprob: -9.785306930541992
    4. '_' → logprob: -11.535306930541992
    5. '_range' → logprob: -11.660306930541992
    6. '	range' → logprob: -12.285306930541992
    7. ' in' → logprob: -13.035306930541992
    8. ' _' → logprob: -14.160306930541992
    9. '(' → logprob: -15.160306930541992
    10. 'in' → logprob: -15.160306930541992

Token 72: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.20144355297088623
    2. ' range' → logprob: -1.7014435529708862
    3. '(range' → logprob: -10.451443672180176
    4. '	range' → logprob: -13.951443672180176
    5. '_range' → logprob: -15.326443672180176
    6. ' ' → logprob: -16.57644271850586
    7. ' xrange' → logprob: -17.07644271850586
    8. 'q' → logprob: -17.20144271850586
    9. '.range' → logprob: -17.45144271850586
    10. ' q' → logprob: -17.82644271850586

Token 73: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -0.026885127648711205
    2. 'q' → logprob: -3.6518850326538086
    3. '(' → logprob: -8.151885032653809
    4. ' (' → logprob: -8.401885032653809
    5. ' q' → logprob: -9.776885032653809
    6. 'range' → logprob: -12.901885032653809
    7. ' ' → logprob: -13.026885032653809
    8. '   ' → logprob: -13.276885032653809
    9. ' range' → logprob: -13.401885032653809
    10. '	q' → logprob: -13.401885032653809

Token 74: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0018628339748829603
    2. ')])' → logprob: -6.7518630027771
    3. ']))' → logprob: -8.126862525939941
    4. ']' → logprob: -8.626862525939941
    5. ')' → logprob: -9.376862525939941
    6. '])' → logprob: -9.876862525939941
    7. '])))' → logprob: -9.876862525939941
    8. '])]' → logprob: -10.876862525939941
    9. '))' → logprob: -13.001862525939941
    10. '()' → logprob: -13.126862525939941

Token 75: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.030079742893576622
    2. ')' → logprob: -3.5300798416137695
    3. ')))' → logprob: -8.03007984161377
    4. '),' → logprob: -14.15507984161377
    5. '))
' → logprob: -14.40507984161377
    6. ' ))' → logprob: -14.90507984161377
    7. '));' → logprob: -15.03007984161377
    8. ')),' → logprob: -15.15507984161377
    9. ''))' → logprob: -15.15507984161377
    10. '()))' → logprob: -15.53007984161377

Token 76: 'from' (ID: 2845)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9718630313873291
    2. ')' → logprob: -1.846863031387329
    3. '
' → logprob: -2.471863031387329
    4. 'A' → logprob: -2.846863031387329
    5. '#' → logprob: -2.846863031387329
    6. 'dp' → logprob: -3.221863031387329
    7. '[' → logprob: -3.846863031387329
    8. 'arr' → logprob: -3.971863031387329
    9. 'r' → logprob: -3.971863031387329
    10. 'counts' → logprob: -4.34686279296875

Token 77: ' collections' (ID: 22690)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.0016356664709746838
    2. ' math' → logprob: -7.376635551452637
    3. ' collections' → logprob: -7.626635551452637
    4. ' operator' → logprob: -8.251635551452637
    5. ' functools' → logprob: -9.251635551452637
    6. 'it' → logprob: -9.501635551452637
    7. '_' → logprob: -9.876635551452637
    8. 'collections' → logprob: -10.876635551452637
    9. 'operator' → logprob: -11.876635551452637
    10. ' ' → logprob: -13.001635551452637

Token 78: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.5244625210762024
    2. 'import' → logprob: -0.8994625210762024
    3. ' ' → logprob: -7.649462699890137
    4. '.' → logprob: -8.274462699890137
    5. '<|end|>' → logprob: -8.274462699890137
    6. ' ' → logprob: -9.399462699890137
    7. 'space' → logprob: -10.024462699890137
    8. ' a' → logprob: -10.649462699890137
    9. '	import' → logprob: -10.649462699890137
    10. ' ​' → logprob: -10.774462699890137

Token 79: ' defaultdict' (ID: 107098)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.508614718914032
    2. 'default' → logprob: -1.5086147785186768
    3. ' defaultdict' → logprob: -1.7586147785186768
    4. ' deque' → logprob: -5.633614540100098
    5. 'de' → logprob: -6.883614540100098
    6. 'Counter' → logprob: -8.133614540100098
    7. ' Counter' → logprob: -8.883614540100098
    8. 'named' → logprob: -9.758614540100098
    9. 'import' → logprob: -10.508614540100098
    10. 'counter' → logprob: -10.883614540100098

Token 80: '
' (ID: 198)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.2942200899124146
    2. '
' → logprob: -1.2942200899124146
    3. '(' → logprob: -2.169219970703125
    4. 'default' → logprob: -2.294219970703125
    5. '_' → logprob: -2.544219970703125
    6. 'def' → logprob: -3.419219970703125
    7. '' → logprob: -3.919219970703125
    8. ' 
' → logprob: -4.294219970703125
    9. '(default' → logprob: -4.419219970703125
    10. ' defaultdict' → logprob: -4.419219970703125

Token 81: 'inc' (ID: 2768)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16497226059436798
    2. 'd' → logprob: -2.0399723052978516
    3. 'default' → logprob: -4.914972305297852
    4. ' 
' → logprob: -6.164972305297852
    5. 'def' → logprob: -6.539972305297852
    6. '' → logprob: -6.664972305297852
    7. '

' → logprob: -6.664972305297852
    8. 'a' → logprob: -6.664972305297852
    9. '
' → logprob: -6.914972305297852
    10. 'dp' → logprob: -7.164972305297852

Token 82: ' =' (ID: 314)
  Prédit: 'rement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rement' → logprob: -0.35727304220199585
    2. 're' → logprob: -1.4822731018066406
    3. '=' → logprob: -3.9822731018066406
    4. 'r' → logprob: -4.107273101806641
    5. ' =' → logprob: -4.232273101806641
    6. '_' → logprob: -4.857273101806641
    7. '_counter' → logprob: -4.857273101806641
    8. 'ount' → logprob: -6.357273101806641
    9. '_re' → logprob: -6.732273101806641
    10. '_count' → logprob: -6.982273101806641

Token 83: ' defaultdict' (ID: 107098)
  Prédit: ' defaultdict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.1271660029888153
    2. 'default' → logprob: -2.1271660327911377
    3. ' default' → logprob: -8.377165794372559
    4. '(default' → logprob: -13.127165794372559
    5. '"default' → logprob: -13.752165794372559
    6. 'Default' → logprob: -14.002165794372559
    7. ''default' → logprob: -14.127165794372559
    8. '.default' → logprob: -14.252165794372559
    9. '-default' → logprob: -14.502165794372559
    10. '_default' → logprob: -14.502165794372559

Token 84: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.016447102651000023
    2. '(list' → logprob: -4.641447067260742
    3. '(lambda' → logprob: -5.141447067260742
    4. '(' → logprob: -7.266447067260742
    5. 'int' → logprob: -9.516447067260742
    6. 'list' → logprob: -10.641447067260742
    7. '(<' → logprob: -11.766447067260742
    8. '(
' → logprob: -12.266447067260742
    9. '<int' → logprob: -13.391447067260742
    10. '(bool' → logprob: -13.516447067260742

Token 85: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.465036105713807e-06
    2. ' )' → logprob: -12.625007629394531
    3. ')
' → logprob: -13.625007629394531
    4. '[' → logprob: -13.875007629394531
    5. '())' → logprob: -14.875007629394531
    6. '()' → logprob: -15.000007629394531
    7. ')

' → logprob: -15.125007629394531
    8. ')`' → logprob: -15.125007629394531
    9. ',' → logprob: -15.500007629394531
    10. '))' → logprob: -15.875007629394531

Token 86: 'list' (ID: 2641)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.41722947359085083
    2. ')' → logprob: -1.292229413986206
    3. ' for' → logprob: -3.542229413986206
    4. '<|end|>' → logprob: -3.917229413986206
    5. '[' → logprob: -5.667229652404785
    6. ']' → logprob: -6.167229652404785
    7. '_' → logprob: -6.417229652404785
    8. '(' → logprob: -6.417229652404785
    9. '\n' → logprob: -6.417229652404785
    10. ' ' → logprob: -6.917229652404785

Token 87: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.025422310456633568
    2. '_' → logprob: -4.900422096252441
    3. '()' → logprob: -5.150422096252441
    4. '(range' → logprob: -6.150422096252441
    5. '([]' → logprob: -6.400422096252441
    6. 's' → logprob: -6.650422096252441
    7. '[' → logprob: -6.650422096252441
    8. '.' → logprob: -7.150422096252441
    9. ')' → logprob: -7.400422096252441
    10. '([(' → logprob: -7.650422096252441

Token 88: '(lambda' (ID: 43341)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.47546789050102234
    2. '(lambda' → logprob: -0.9754679203033447
    3. '(in' → logprob: -7.975467681884766
    4. '(
' → logprob: -8.100467681884766
    5. '<|end|>' → logprob: -8.225467681884766
    6. '((' → logprob: -8.600467681884766
    7. ')' → logprob: -9.475467681884766
    8. '(int' → logprob: -9.975467681884766
    9. '))' → logprob: -10.475467681884766
    10. '(ind' → logprob: -10.600467681884766

Token 89: ' x' (ID: 1215)
  Prédit: ' lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.6193764209747314
    2. 'lambda' → logprob: -1.4943764209747314
    3. '(lambda' → logprob: -1.9943764209747314
    4. ' x' → logprob: -3.2443764209747314
    5. 'x' → logprob: -4.494376182556152
    6. '<|end|>' → logprob: -4.869376182556152
    7. '_' → logprob: -4.994376182556152
    8. ' (' → logprob: -5.119376182556152
    9. 'inc' → logprob: -5.244376182556152
    10. '(' → logprob: -5.494376182556152

Token 90: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0022512455470860004
    2. ' :' → logprob: -6.377251148223877
    3. '<|end|>' → logprob: -8.752251625061035
    4. '=lambda' → logprob: -9.127251625061035
    5. ':list' → logprob: -9.252251625061035
    6. ':
' → logprob: -10.002251625061035
    7. ':x' → logprob: -10.002251625061035
    8. ':int' → logprob: -11.252251625061035
    9. ' x' → logprob: -11.627251625061035
    10. ',' → logprob: -11.877251625061035

Token 91: ' inc' (ID: 4570)
  Prédit: 'inc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inc' → logprob: -0.06512876600027084
    2. ' inc' → logprob: -3.565128803253174
    3. '(lambda' → logprob: -4.065128803253174
    4. 'lambda' → logprob: -4.815128803253174
    5. '(' → logprob: -5.315128803253174
    6. ' lambda' → logprob: -5.565128803253174
    7. 'increment' → logprob: -8.940128326416016
    8. ' (' → logprob: -9.065128326416016
    9. '(
' → logprob: -9.752628326416016
    10. ' ' → logprob: -9.940128326416016

Token 92: '.update' (ID: 8689)
  Prédit: '.__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.__' → logprob: -0.0016838706796988845
    2. '[' → logprob: -7.751683712005615
    3. '[x' → logprob: -7.751683712005615
    4. '.update' → logprob: -8.376684188842773
    5. '.setdefault' → logprob: -8.376684188842773
    6. '__' → logprob: -9.001684188842773
    7. '().__' → logprob: -9.001684188842773
    8. '(x' → logprob: -10.376684188842773
    9. ':' → logprob: -10.501684188842773
    10. '__.__' → logprob: -11.751684188842773

Token 93: '({' (ID: 3972)
  Prédit: '({'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '({' → logprob: -0.0030580461025238037
    2. '{' → logprob: -6.128057956695557
    3. '{x' → logprob: -7.503057956695557
    4. '(x' → logprob: -9.128058433532715
    5. '((' → logprob: -9.628058433532715
    6. '(' → logprob: -10.128058433532715
    7. '(dict' → logprob: -10.503058433532715
    8. '({'' → logprob: -10.753058433532715
    9. '(({' → logprob: -10.878058433532715
    10. '({
' → logprob: -11.253058433532715

Token 94: '(' (ID: 7)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.6376616358757019
    2. 'x' → logprob: -0.7626616358757019
    3. '(' → logprob: -5.637661457061768
    4. ' (' → logprob: -7.887661457061768
    5. 'tuple' → logprob: -8.137661933898926
    6. '(
' → logprob: -8.887661933898926
    7. ' x' → logprob: -9.012661933898926
    8. '(tuple' → logprob: -9.137661933898926
    9. '(i' → logprob: -9.262661933898926
    10. '(int' → logprob: -9.762661933898926

Token 95: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.005873567890375853
    2. '(x' → logprob: -5.255873680114746
    3. ' x' → logprob: -8.005873680114746
    4. '(' → logprob: -9.755873680114746
    5. ' (' → logprob: -9.755873680114746
    6. ')' → logprob: -9.880873680114746
    7. 'i' → logprob: -10.880873680114746
    8. ' ' → logprob: -11.380873680114746
    9. ')x' → logprob: -11.505873680114746
    10. '(i' → logprob: -11.755873680114746

Token 96: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0009917225688695908
    2. ')' → logprob: -7.5009918212890625
    3. ',' → logprob: -9.500991821289062
    4. ')}' → logprob: -9.750991821289062
    5. '
' → logprob: -10.375991821289062
    6. ',[' → logprob: -10.625991821289062
    7. ' )' → logprob: -10.750991821289062
    8. ' ' → logprob: -10.750991821289062
    9. ')}}' → logprob: -10.750991821289062
    10. '[
' → logprob: -11.000991821289062

Token 97: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005974180996417999
    2. '1' → logprob: -5.130974292755127
    3. ' ' → logprob: -10.380973815917969
    4. '
' → logprob: -12.568473815917969
    5. '2' → logprob: -12.943473815917969
    6. ')' → logprob: -13.443473815917969
    7. '[' → logprob: -13.693473815917969
    8. '-' → logprob: -14.193473815917969
    9. ']' → logprob: -14.443473815917969
    10. '(' → logprob: -14.818473815917969

Token 98: ']-' (ID: 27107)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02581876516342163
    2. '-' → logprob: -4.650818824768066
    3. ',x' → logprob: -5.025818824768066
    4. ')' → logprob: -6.150818824768066
    5. ' ,' → logprob: -6.275818824768066
    6. ' -' → logprob: -6.275818824768066
    7. ',)' → logprob: -6.900818824768066
    8. '),' → logprob: -7.775818824768066
    9. '-,' → logprob: -8.275818824768066
    10. ' ' → logprob: -8.275818824768066

Token 99: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001017551330733113
    2. ' ' → logprob: -9.250102043151855
    3. ')' → logprob: -13.375102043151855
    4. ',' → logprob: -13.500102043151855
    5. '2' → logprob: -13.750102043151855
    6. '<|end|>' → logprob: -15.312602043151855
    7. '0' → logprob: -15.500102043151855
    8. '-' → logprob: -15.562602043151855
    9. '  ' → logprob: -15.625102043151855
    10. '

' → logprob: -15.875102043151855

Token 100: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07973133772611618
    2. ',x' → logprob: -2.5797312259674072
    3. ' ,' → logprob: -7.954731464385986
    4. '<|end|>' → logprob: -8.329730987548828
    5. ')x' → logprob: -10.329730987548828
    6. ')' → logprob: -10.329730987548828
    7. ' ' → logprob: -10.579730987548828
    8. ',(' → logprob: -10.954730987548828
    9. ',n' → logprob: -10.954730987548828
    10. '),(' → logprob: -11.454730987548828

Token 101: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.008646833710372448
    2. ' x' → logprob: -4.7586469650268555
    3. '1' → logprob: -11.383646965026855
    4. ' ' → logprob: -11.883646965026855
    5. ')x' → logprob: -12.258646965026855
    6. '0' → logprob: -13.258646965026855
    7. ')' → logprob: -13.508646965026855
    8. '   ' → logprob: -14.008646965026855
    9. '	x' → logprob: -14.133646965026855
    10. '-' → logprob: -14.133646965026855

Token 102: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.44574936106801e-05
    2. '1' → logprob: -10.50007438659668
    3. ')' → logprob: -11.62507438659668
    4. '<|end|>' → logprob: -11.62507438659668
    5. '[
' → logprob: -12.12507438659668
    6. '
' → logprob: -12.37507438659668
    7. '][' → logprob: -12.50007438659668
    8. '<|end|>' → logprob: -12.50007438659668
    9. ':' → logprob: -13.00007438659668
    10. ',' → logprob: -13.62507438659668

Token 103: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000561373308300972
    2. '0' → logprob: -7.500561237335205
    3. ' ' → logprob: -12.875561714172363
    4. '-' → logprob: -13.688061714172363
    5. ']' → logprob: -14.000561714172363
    6. '[' → logprob: -14.188061714172363
    7. '```' → logprob: -14.250561714172363
    8. '
' → logprob: -14.563061714172363
    9. '   ' → logprob: -15.375561714172363
    10. '2' → logprob: -15.688061714172363

Token 104: ']-' (ID: 27107)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5336903929710388
    2. '-' → logprob: -0.9086903929710388
    3. '0' → logprob: -5.783690452575684
    4. ')' → logprob: -6.033690452575684
    5. '):' → logprob: -6.033690452575684
    6. ')-' → logprob: -6.783690452575684
    7. ' -' → logprob: -7.283690452575684
    8. '1' → logprob: -8.408690452575684
    9. ' ' → logprob: -9.283690452575684
    10. ' )' → logprob: -9.971190452575684

Token 105: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00017815368482843041
    2. '2' → logprob: -8.750178337097168
    3. ' ' → logprob: -11.625178337097168
    4. '0' → logprob: -12.250178337097168
    5. ')' → logprob: -12.500178337097168
    6. '
' → logprob: -14.625178337097168
    7. '```' → logprob: -14.625178337097168
    8. '-' → logprob: -15.062678337097168
    9. ')}' → logprob: -15.500178337097168
    10. '

' → logprob: -15.937678337097168

Token 106: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0019173339242115617
    2. ')' → logprob: -6.626917362213135
    3. ':' → logprob: -8.751916885375977
    4. ' ):' → logprob: -8.751916885375977
    5. '):(' → logprob: -9.501916885375977
    6. '```' → logprob: -10.751916885375977
    7. '+' → logprob: -10.751916885375977
    8. ',' → logprob: -10.751916885375977
    9. ' ' → logprob: -10.876916885375977
    10. ')+' → logprob: -11.001916885375977

Token 107: ' inc' (ID: 4570)
  Prédit: 'inc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inc' → logprob: -0.23688764870166779
    2. '1' → logprob: -1.6118876934051514
    3. ' inc' → logprob: -4.861887454986572
    4. ' ' → logprob: -5.736887454986572
    5. 'x' → logprob: -8.11188793182373
    6. '   ' → logprob: -10.48688793182373
    7. ' x' → logprob: -10.61188793182373
    8. '+' → logprob: -11.23688793182373
    9. '  ' → logprob: -11.79938793182373
    10. '    ' → logprob: -12.11188793182373

Token 108: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.004146068822592497
    2. '.get' → logprob: -5.504146099090576
    3. '(x' → logprob: -10.254145622253418
    4. '[x' → logprob: -10.629145622253418
    5. '[
' → logprob: -12.379145622253418
    6. '[' → logprob: -13.254145622253418
    7. 'get' → logprob: -13.504145622253418
    8. '
' → logprob: -14.879145622253418
    9. '```' → logprob: -15.754145622253418
    10. '((' → logprob: -16.379146575927734

Token 109: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.28412482142448425
    2. '(x' → logprob: -1.4091248512268066
    3. '(' → logprob: -6.409124851226807
    4. ' x' → logprob: -7.034124851226807
    5. ' (' → logprob: -8.409124374389648
    6. '0' → logprob: -9.034124374389648
    7. '[x' → logprob: -10.909124374389648
    8. '[' → logprob: -11.034124374389648
    9. ')x' → logprob: -11.284124374389648
    10. ' ' → logprob: -11.659124374389648

Token 110: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.019455771893262863
    2. '(' → logprob: -4.644455909729004
    3. '0' → logprob: -4.644455909729004
    4. ' (' → logprob: -11.394455909729004
    5. ' ' → logprob: -12.394455909729004
    6. ')]' → logprob: -12.519455909729004
    7. '-' → logprob: -12.644455909729004
    8. '[
' → logprob: -13.394455909729004
    9. ')' → logprob: -13.644455909729004
    10. ')])' → logprob: -13.769455909729004

Token 111: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003967266529798508
    2. '(' → logprob: -6.00396728515625
    3. '[' → logprob: -6.75396728515625
    4. '1' → logprob: -8.50396728515625
    5. ' ' → logprob: -9.37896728515625
    6. ' (' → logprob: -11.25396728515625
    7. '-' → logprob: -11.87896728515625
    8. ')' → logprob: -12.75396728515625
    9. ')]' → logprob: -13.00396728515625
    10. '   ' → logprob: -13.19146728515625

Token 112: ']-' (ID: 27107)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.16552209854125977
    2. '[' → logprob: -1.9155220985412598
    3. '0' → logprob: -5.66552209854126
    4. '1' → logprob: -6.66552209854126
    5. '(' → logprob: -8.165521621704102
    6. '```' → logprob: -9.790521621704102
    7. ')-' → logprob: -10.290521621704102
    8. ' -' → logprob: -10.540521621704102
    9. ' ' → logprob: -10.540521621704102
    10. ',' → logprob: -10.665521621704102

Token 113: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000193527273950167
    2. ' ' → logprob: -8.62519359588623
    3. '0' → logprob: -12.56269359588623
    4. '<|end|>' → logprob: -13.43769359588623
    5. 'inc' → logprob: -14.00019359588623
    6. '-' → logprob: -14.00019359588623
    7. '<|end|>' → logprob: -14.06269359588623
    8. '```' → logprob: -14.25019359588623
    9. 'int' → logprob: -14.31269359588623
    10. '(' → logprob: -14.62519359588623

Token 114: ',' (ID: 11)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3134145438671112
    2. ']+' → logprob: -1.3134145736694336
    3. ']+=' → logprob: -9.063414573669434
    4. ' ]' → logprob: -10.938414573669434
    5. '1' → logprob: -12.188414573669434
    6. ')+' → logprob: -12.938414573669434
    7. ')' → logprob: -13.188414573669434
    8. ']]' → logprob: -13.188414573669434
    9. '+' → logprob: -13.688414573669434
    10. ']}' → logprob: -14.313414573669434

Token 115: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.05491872876882553
    2. ' x' → logprob: -2.9299187660217285
    3. '(x' → logprob: -10.92991828918457
    4. ' (' → logprob: -11.67991828918457
    5. ' ' → logprob: -12.55491828918457
    6. '(' → logprob: -13.17991828918457
    7. 'inc' → logprob: -13.55491828918457
    8. ')x' → logprob: -14.42991828918457
    9. '    ' → logprob: -14.55491828918457
    10. '	x' → logprob: -14.55491828918457

Token 116: '[' (ID: 58)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6933304667472839
    2. '[' → logprob: -0.6933304667472839
    3. '-' → logprob: -9.568330764770508
    4. '```' → logprob: -10.568330764770508
    5. '(' → logprob: -10.943330764770508
    6. ' ' → logprob: -11.193330764770508
    7. '0' → logprob: -12.005830764770508
    8. ')]' → logprob: -12.068330764770508
    9. '   ' → logprob: -12.068330764770508
    10. ']' → logprob: -12.193330764770508

Token 117: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.310693111619912e-05
    2. '0' → logprob: -11.125042915344238
    3. '-' → logprob: -11.500042915344238
    4. ' ' → logprob: -12.562542915344238
    5. '   ' → logprob: -12.625042915344238
    6. '```' → logprob: -13.062542915344238
    7. '[' → logprob: -13.375042915344238
    8. '
' → logprob: -13.437542915344238
    9. ']' → logprob: -13.687542915344238
    10. '])' → logprob: -14.687542915344238

Token 118: ']-' (ID: 27107)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.05603240057826042
    2. '1' → logprob: -3.181032419204712
    3. ')]' → logprob: -5.306032180786133
    4. ')-' → logprob: -5.431032180786133
    5. ']-' → logprob: -5.931032180786133
    6. ')' → logprob: -7.931032180786133
    7. '])-' → logprob: -8.556032180786133
    8. ' -' → logprob: -9.056032180786133
    9. ']' → logprob: -9.681032180786133
    10. '0' → logprob: -10.056032180786133

Token 119: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012809180771000683
    2. ' ' → logprob: -10.125127792358398
    3. ']+' → logprob: -10.625127792358398
    4. ']' → logprob: -10.625127792358398
    5. '0' → logprob: -11.250127792358398
    6. '```' → logprob: -11.875127792358398
    7. ')]' → logprob: -12.500127792358398
    8. ')' → logprob: -13.125127792358398
    9. '
' → logprob: -13.750127792358398
    10. ']]' → logprob: -14.062627792358398

Token 120: ')]' (ID: 15710)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.25221359729766846
    2. ']+' → logprob: -1.5022135972976685
    3. ' ]' → logprob: -8.502213478088379
    4. ']+=' → logprob: -10.127213478088379
    5. '+' → logprob: -10.252213478088379
    6. '1' → logprob: -13.752213478088379
    7. ')+' → logprob: -14.002213478088379
    8. ']}' → logprob: -14.252213478088379
    9. '+]' → logprob: -14.252213478088379
    10. ']
' → logprob: -14.752213478088379

Token 121: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.02976900152862072
    2. ' +' → logprob: -3.529768943786621
    3. '1' → logprob: -11.529768943786621
    4. ' ' → logprob: -12.529768943786621
    5. '+
' → logprob: -13.029768943786621
    6. '+x' → logprob: -13.279768943786621
    7. ' +
' → logprob: -15.404768943786621
    8. ' plus' → logprob: -15.654768943786621
    9. '＋' → logprob: -15.904768943786621
    10. '()+' → logprob: -15.904768943786621

Token 122: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002765644807368517
    2. ' ' → logprob: -6.127765655517578
    3. 'x' → logprob: -7.502765655517578
    4. ' x' → logprob: -10.752765655517578
    5. '   ' → logprob: -12.752765655517578
    6. 'int' → logprob: -13.690265655517578
    7. '  ' → logprob: -14.315265655517578
    8. '2' → logprob: -15.190265655517578
    9. '(x' → logprob: -15.377765655517578
    10. '10' → logprob: -15.627765655517578

Token 123: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012689977302215993
    2. ' ' → logprob: -9.000126838684082
    3. 'x' → logprob: -13.250126838684082
    4. '   ' → logprob: -14.750126838684082
    5. '  ' → logprob: -15.750126838684082
    6. '2' → logprob: -15.875126838684082
    7. '<|end|>' → logprob: -16.0626277923584
    8. 'int' → logprob: -16.5001277923584
    9. '-' → logprob: -16.7501277923584
    10. ')' → logprob: -16.8751277923584

Token 124: '}),' (ID: 81345)
  Prédit: '}),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}),' → logprob: -0.003127806121483445
    2. '),' → logprob: -6.253127574920654
    3. '}' → logprob: -7.503127574920654
    4. '})' → logprob: -8.378128051757812
    5. ')' → logprob: -8.628128051757812
    6. ' }),' → logprob: -8.878128051757812
    7. ')),' → logprob: -10.378128051757812
    8. ',' → logprob: -10.753128051757812
    9. ')},' → logprob: -11.378128051757812
    10. ' ' → logprob: -11.878128051757812

Token 125: ' lr' (ID: 58770)
  Prédit: 'lr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lr' → logprob: -0.02979273721575737
    2. ' lr' → logprob: -3.5297927856445312
    3. ' ' → logprob: -10.904792785644531
    4. '   ' → logprob: -11.404792785644531
    5. '  ' → logprob: -13.154792785644531
    6. 'l' → logprob: -13.404792785644531
    7. '    ' → logprob: -13.529792785644531
    8. 'rl' → logprob: -13.654792785644531
    9. 'range' → logprob: -13.779792785644531
    10. '_lr' → logprob: -13.779792785644531

Token 126: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.011064444668591022
    2. ')' → logprob: -4.511064529418945
    3. ')))' → logprob: -11.886064529418945
    4. '))
' → logprob: -12.386064529418945
    5. '));' → logprob: -13.011064529418945
    6. '),' → logprob: -13.386064529418945
    7. ' ))' → logprob: -14.136064529418945
    8. '()))' → logprob: -15.386064529418945
    9. '))

' → logprob: -15.636064529418945
    10. ')),' → logprob: -15.761064529418945

Token 127: 'sq' (ID: 57619)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007847334491088986
    2. ')
' → logprob: -8.000784873962402
    3. '(' → logprob: -8.875784873962402
    4. ' )' → logprob: -9.250784873962402
    5. '
' → logprob: -10.000784873962402
    6. '[' → logprob: -10.125784873962402
    7. '#' → logprob: -10.750784873962402
    8. '(
' → logprob: -10.750784873962402
    9. '))' → logprob: -11.000784873962402
    10. ')

' → logprob: -11.625784873962402

Token 128: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.381815642118454
    2. ' =' → logprob: -1.5068156719207764
    3. 'u' → logprob: -3.3818156719207764
    4. '=[]' → logprob: -3.6318156719207764
    5. 'q' → logprob: -4.881815433502197
    6. '(' → logprob: -4.881815433502197
    7. 'r' → logprob: -6.006815433502197
    8. ' ' → logprob: -6.506815433502197
    9. '=[]
' → logprob: -6.506815433502197
    10. 'quares' → logprob: -6.631815433502197

Token 129: ' [[' (ID: 9237)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9524236917495728
    2. 'sorted' → logprob: -0.9524236917495728
    3. 'default' → logprob: -2.702423572540283
    4. 'list' → logprob: -3.327423572540283
    5. '[item' → logprob: -3.452423572540283
    6. 'sum' → logprob: -3.702423572540283
    7. 'set' → logprob: -4.327423572540283
    8. '[]' → logprob: -4.702423572540283
    9. '[n' → logprob: -4.827423572540283
    10. '{' → logprob: -5.327423572540283

Token 130: 'inc' (ID: 2768)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008743013604544103
    2. ' ' → logprob: -8.625874519348145
    3. '[' → logprob: -9.125874519348145
    4. 'm' → logprob: -9.250874519348145
    5. 'q' → logprob: -9.375874519348145
    6. '(' → logprob: -9.625874519348145
    7. 'inc' → logprob: -9.750874519348145
    8. 'False' → logprob: -10.000874519348145
    9. '[m' → logprob: -10.000874519348145
    10. 'sum' → logprob: -10.250874519348145

Token 131: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.1958431452512741
    2. '.get' → logprob: -2.07084321975708
    3. '[i' → logprob: -3.19584321975708
    4. '(i' → logprob: -5.94584321975708
    5. '.setdefault' → logprob: -6.44584321975708
    6. '[j' → logprob: -6.57084321975708
    7. '[' → logprob: -6.94584321975708
    8. '((' → logprob: -6.94584321975708
    9. ']' → logprob: -7.57084321975708
    10. ']])' → logprob: -7.57084321975708

Token 132: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.004715991672128439
    2. 'x' → logprob: -6.254715919494629
    3. 'a' → logprob: -7.504715919494629
    4. 'j' → logprob: -7.879715919494629
    5. '0' → logprob: -8.004715919494629
    6. ')' → logprob: -8.254715919494629
    7. 'r' → logprob: -8.254715919494629
    8. ' i' → logprob: -8.629715919494629
    9. 'l' → logprob: -8.754715919494629
    10. 'p' → logprob: -9.004715919494629

Token 133: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2016083300113678
    2. ',j' → logprob: -1.7016083002090454
    3. ' ,' → logprob: -9.326608657836914
    4. ',i' → logprob: -9.951608657836914
    5. 'j' → logprob: -10.076608657836914
    6. ',
' → logprob: -12.201608657836914
    7. ',k' → logprob: -12.826608657836914
    8. '
' → logprob: -13.826608657836914
    9. '<|end|>' → logprob: -13.826608657836914
    10. ',q' → logprob: -14.576608657836914

Token 134: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.011158885434269905
    2. ' j' → logprob: -4.6361589431762695
    3. '   ' → logprob: -8.01115894317627
    4. 'i' → logprob: -8.26115894317627
    5. 'k' → logprob: -8.51115894317627
    6. ' ' → logprob: -8.63615894317627
    7. '  ' → logprob: -8.76115894317627
    8. '    ' → logprob: -9.51115894317627
    9. '```' → logprob: -10.69865894317627
    10. '	j' → logprob: -10.76115894317627

Token 135: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.10400011390447617
    2. ')' → logprob: -2.4790000915527344
    3. ']' → logprob: -4.354000091552734
    4. '])' → logprob: -7.104000091552734
    5. ' )' → logprob: -7.729000091552734
    6. ')])' → logprob: -8.729000091552734
    7. ']]' → logprob: -9.104000091552734
    8. ']+' → logprob: -9.104000091552734
    9. ')+' → logprob: -9.104000091552734
    10. '])]' → logprob: -9.229000091552734

Token 136: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0345076359808445
    2. 'for' → logprob: -3.4095077514648438
    3. ' ' → logprob: -7.784507751464844
    4. ' if' → logprob: -7.909507751464844
    5. 'if' → logprob: -10.034507751464844
    6. '+' → logprob: -11.409507751464844
    7. '	for' → logprob: -11.909507751464844
    8. '    ' → logprob: -12.284507751464844
    9. '  ' → logprob: -12.409507751464844
    10. '   ' → logprob: -13.159507751464844

Token 137: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.1181982010602951
    2. ' j' → logprob: -2.2431981563568115
    3. 'range' → logprob: -5.868198394775391
    4. ' range' → logprob: -5.993198394775391
    5. ' ' → logprob: -10.74319839477539
    6. 'k' → logprob: -12.74319839477539
    7. '	j' → logprob: -12.99319839477539
    8. '   ' → logprob: -13.11819839477539
    9. '  ' → logprob: -13.36819839477539
    10. '    ' → logprob: -13.74319839477539

Token 138: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07907694578170776
    2. 'in' → logprob: -2.5790770053863525
    3. 'range' → logprob: -8.829076766967773
    4. ' range' → logprob: -10.454076766967773
    5. ' ' → logprob: -11.704076766967773
    6. '<|end|>' → logprob: -12.954076766967773
    7. 'n' → logprob: -15.829076766967773
    8. '  ' → logprob: -15.954076766967773
    9. '<|end|>' → logprob: -16.329076766967773
    10. '	in' → logprob: -16.391576766967773

Token 139: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5759475231170654
    2. 'range' → logprob: -0.8259475231170654
    3. '	range' → logprob: -12.700947761535645
    4. ' ' → logprob: -12.950947761535645
    5. '(range' → logprob: -14.075947761535645
    6. '
' → logprob: -14.075947761535645
    7. '   ' → logprob: -14.825947761535645
    8. 'ran' → logprob: -15.700947761535645
    9. '  ' → logprob: -16.075946807861328
    10. '

' → logprob: -16.700946807861328

Token 140: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.20501765608787537
    2. 'n' → logprob: -1.7050176858901978
    3. '(' → logprob: -6.205017566680908
    4. '10' → logprob: -7.705017566680908
    5. ' n' → logprob: -8.830018043518066
    6. '100' → logprob: -8.955018043518066
    7. ' (' → logprob: -8.955018043518066
    8. '50' → logprob: -9.205018043518066
    9. '9' → logprob: -9.455018043518066
    10. '20' → logprob: -9.455018043518066

Token 141: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0020286848302930593
    2. ' )' → logprob: -6.377028465270996
    3. ')' → logprob: -9.127028465270996
    4. ')])' → logprob: -9.752028465270996
    5. '])' → logprob: -10.127028465270996
    6. ' ' → logprob: -10.377028465270996
    7. ']' → logprob: -10.377028465270996
    8. ')]
' → logprob: -11.252028465270996
    9. ' ]' → logprob: -11.252028465270996
    10. '])]' → logprob: -11.377028465270996

Token 142: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4097288250923157
    2. 'for' → logprob: -1.409728765487671
    3. ']' → logprob: -2.409728765487671
    4. ' ]' → logprob: -6.28472900390625
    5. ' ' → logprob: -8.90972900390625
    6. ')' → logprob: -10.03472900390625
    7. '   ' → logprob: -10.40972900390625
    8. '	for' → logprob: -11.28472900390625
    9. '    ' → logprob: -11.65972900390625
    10. '  ' → logprob: -12.03472900390625

Token 143: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.25269371271133423
    2. 'range' → logprob: -1.6276936531066895
    3. 'n' → logprob: -4.0026936531066895
    4. ' n' → logprob: -4.7526936531066895
    5. 'i' → logprob: -12.002694129943848
    6. ' ' → logprob: -12.627694129943848
    7. '	range' → logprob: -13.127694129943848
    8. '(range' → logprob: -13.252694129943848
    9. ' i' → logprob: -13.752694129943848
    10. ' in' → logprob: -14.002694129943848

Token 144: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014662522822618484
    2. 'in' → logprob: -4.264662742614746
    3. 'range' → logprob: -8.014662742614746
    4. ' range' → logprob: -9.264662742614746
    5. 'n' → logprob: -10.389662742614746
    6. '(n' → logprob: -10.639662742614746
    7. '<|end|>' → logprob: -11.764662742614746
    8. ' n' → logprob: -11.889662742614746
    9. '(range' → logprob: -13.139662742614746
    10. ' ' → logprob: -13.889662742614746

Token 145: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.2903950810432434
    2. 'range' → logprob: -1.4153950214385986
    3. 'n' → logprob: -5.165395259857178
    4. ' n' → logprob: -5.665395259857178
    5. '(range' → logprob: -11.29039478302002
    6. '(n' → logprob: -11.91539478302002
    7. ' ' → logprob: -12.54039478302002
    8. '	range' → logprob: -13.41539478302002
    9. ' xrange' → logprob: -13.79039478302002
    10. '
' → logprob: -14.29039478302002

Token 146: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0004612935590557754
    2. '(' → logprob: -7.750461101531982
    3. 'n' → logprob: -10.75046157836914
    4. ' (' → logprob: -12.00046157836914
    5. '(
' → logprob: -13.75046157836914
    6. ' n' → logprob: -14.00046157836914
    7. '(m' → logprob: -14.12546157836914
    8. '	n' → logprob: -16.12546157836914
    9. ' ' → logprob: -16.75046157836914
    10. '
' → logprob: -16.87546157836914

Token 147: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.007339565083384514
    2. '])' → logprob: -5.3823394775390625
    3. ']' → logprob: -6.5073394775390625
    4. '])]' → logprob: -7.1323394775390625
    5. ')])' → logprob: -8.132339477539062
    6. ')' → logprob: -9.882339477539062
    7. ' )' → logprob: -10.382339477539062
    8. ')]
' → logprob: -11.257339477539062
    9. ' ])' → logprob: -11.382339477539062
    10. ' ]' → logprob: -11.757339477539062

Token 148: 'c' (ID: 66)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4141325354576111
    2. ']' → logprob: -1.6641325950622559
    3. '
' → logprob: -3.039132595062256
    4. 'for' → logprob: -3.414132595062256
    5. 's' → logprob: -4.164132595062256
    6. '\n' → logprob: -4.539132595062256
    7. ' ' → logprob: -4.789132595062256
    8. '#' → logprob: -5.289132595062256
    9. ')
' → logprob: -5.539132595062256
    10. ' for' → logprob: -5.664132595062256

Token 149: ' =' (ID: 314)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.2828647494316101
    2. 's' → logprob: -1.7828648090362549
    3. 'umsum' → logprob: -3.157864809036255
    4. 'sum' → logprob: -4.657864570617676
    5. 'u' → logprob: -5.407864570617676
    6. 'nt' → logprob: -6.032864570617676
    7. 'ums' → logprob: -6.157864570617676
    8. '=' → logprob: -6.282864570617676
    9. 'c' → logprob: -6.532864570617676
    10. 'umu' → logprob: -6.657864570617676

Token 150: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3200593590736389
    2. ' [' → logprob: -2.445059299468994
    3. '[list' → logprob: -3.195059299468994
    4. '0' → logprob: -3.320059299468994
    5. '[s' → logprob: -3.570059299468994
    6. '[[' → logprob: -3.695059299468994
    7. 'list' → logprob: -3.695059299468994
    8. '[n' → logprob: -4.820059299468994
    9. '[q' → logprob: -4.945059299468994
    10. ' list' → logprob: -5.320059299468994

Token 151: 'list' (ID: 2641)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03926442936062813
    2. '[' → logprob: -4.28926420211792
    3. 'list' → logprob: -4.41426420211792
    4. 'int' → logprob: -5.53926420211792
    5. '[int' → logprob: -5.91426420211792
    6. '1' → logprob: -6.66426420211792
    7. ']' → logprob: -7.16426420211792
    8. '[i' → logprob: -7.41426420211792
    9. '[]' → logprob: -7.66426420211792
    10. '[list' → logprob: -7.91426420211792

Token 152: '(acc' (ID: 82668)
  Prédit: '(acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(acc' → logprob: -0.009060163050889969
    2. '(map' → logprob: -5.009060382843018
    3. '(product' → logprob: -6.509060382843018
    4. 'acc' → logprob: -8.00905990600586
    5. '(range' → logprob: -8.38405990600586
    6. '(' → logprob: -8.50905990600586
    7. '(ac' → logprob: -10.38405990600586
    8. '()' → logprob: -10.50905990600586
    9. '(i' → logprob: -12.63405990600586
    10. ' accumulate' → logprob: -12.75905990600586

Token 153: 'umulate' (ID: 134636)
  Prédit: 'umulate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umulate' → logprob: -0.0004020713677164167
    2. 'um' → logprob: -8.625402450561523
    3. 'cum' → logprob: -9.000402450561523
    4. 'umul' → logprob: -9.875402450561523
    5. 'ulate' → logprob: -11.000402450561523
    6. 'om' → logprob: -11.125402450561523
    7. 'umulative' → logprob: -12.875402450561523
    8. '(c' → logprob: -13.125402450561523
    9. '(acc' → logprob: -13.375402450561523
    10. '(' → logprob: -13.500402450561523

Token 154: '(row' (ID: 15945)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.027551475912332535
    2. '(row' → logprob: -4.027551651000977
    3. '([' → logprob: -5.527551651000977
    4. '(map' → logprob: -6.277551651000977
    5. '(' → logprob: -6.402551651000977
    6. ')' → logprob: -7.277551651000977
    7. '(p' → logprob: -8.527551651000977
    8. '(line' → logprob: -8.652551651000977
    9. '(x' → logprob: -9.027551651000977
    10. '(square' → logprob: -9.777551651000977

Token 155: '))' (ID: 915)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0014096397208049893
    2. '(' → logprob: -7.001409530639648
    3. ',' → logprob: -8.501409530639648
    4. ')' → logprob: -8.751409530639648
    5. '(c' → logprob: -10.626409530639648
    6. '(lambda' → logprob: -11.001409530639648
    7. ' (' → logprob: -11.126409530639648
    8. ' for' → logprob: -11.126409530639648
    9. '(square' → logprob: -11.251409530639648
    10. 's' → logprob: -11.876409530639648

Token 156: ' for' (ID: 395)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.07478456199169159
    2. ' for' → logprob: -3.199784517288208
    3. 'for' → logprob: -3.699784517288208
    4. '(' → logprob: -5.449784755706787
    5. ' (' → logprob: -7.574784755706787
    6. ')' → logprob: -7.574784755706787
    7. '([' → logprob: -8.449784278869629
    8. 's' → logprob: -8.699784278869629
    9. ' ' → logprob: -8.699784278869629
    10. ']' → logprob: -8.824784278869629

Token 157: ' row' (ID: 5225)
  Prédit: ' sq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sq' → logprob: -0.17975737154483795
    2. 'sq' → logprob: -1.8047573566436768
    3. 's' → logprob: -12.179757118225098
    4. '_sq' → logprob: -13.179757118225098
    5. ' ' → logprob: -13.304757118225098
    6. ' range' → logprob: -14.054757118225098
    7. '	s' → logprob: -14.054757118225098
    8. ' ' → logprob: -14.679757118225098
    9. 'range' → logprob: -15.304757118225098
    10. '(s' → logprob: -15.429757118225098

Token 158: ' in' (ID: 306)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.40104684233665466
    2. ' in' → logprob: -1.151046872138977
    3. '=s' → logprob: -4.9010467529296875
    4. 'in' → logprob: -5.2760467529296875
    5. 's' → logprob: -7.7760467529296875
    6. 'sq' → logprob: -7.7760467529296875
    7. '<|end|>' → logprob: -8.401046752929688
    8. '=' → logprob: -8.526046752929688
    9. '(' → logprob: -9.401046752929688
    10. ' =' → logprob: -10.401046752929688

Token 159: ' sq' (ID: 24743)
  Prédit: 'sq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sq' → logprob: -0.2014336884021759
    2. ' sq' → logprob: -1.7014336585998535
    3. ' ' → logprob: -11.326434135437012
    4. 's' → logprob: -12.826434135437012
    5. '_sq' → logprob: -13.576434135437012
    6. 'pq' → logprob: -14.076434135437012
    7. ' pq' → logprob: -14.201434135437012
    8. 'SQ' → logprob: -14.701434135437012
    9. 'sqm' → logprob: -15.326434135437012
    10. '
' → logprob: -15.326434135437012

Token 160: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0023777850437909365
    2. ')]' → logprob: -7.252377986907959
    3. ' ]' → logprob: -7.252377986907959
    4. ']
' → logprob: -7.377377986907959
    5. '
' → logprob: -8.7523775100708
    6. ')' → logprob: -9.2523775100708
    7. ']

' → logprob: -11.1273775100708
    8. '()]' → logprob: -11.1273775100708
    9. '<|end|>' → logprob: -11.2523775100708
    10. '])' → logprob: -12.1273775100708

Token 161: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.28148165345191956
    2. 'r' → logprob: -2.5314817428588867
    3. 'result' → logprob: -3.2814817428588867
    4. 'res' → logprob: -3.5314817428588867
    5. ' for' → logprob: -3.9064817428588867
    6. ')' → logprob: -4.281481742858887
    7. 'answer' → logprob: -4.906481742858887
    8. 's' → logprob: -5.031481742858887
    9. '[]' → logprob: -5.031481742858887
    10. 'def' → logprob: -5.281481742858887

Token 162: ' p' (ID: 275)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6039689779281616
    2. ' _' → logprob: -1.6039689779281616
    3. ' p' → logprob: -1.8539689779281616
    4. '_' → logprob: -3.353969097137451
    5. 'i' → logprob: -3.853969097137451
    6. ' pq' → logprob: -4.603969097137451
    7. ' r' → logprob: -5.103969097137451
    8. 'p' → logprob: -5.228969097137451
    9. '_i' → logprob: -5.853969097137451
    10. ' u' → logprob: -6.478969097137451

Token 163: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.26040026545524597
    2. '_i' → logprob: -2.7604002952575684
    3. 'i' → logprob: -3.2604002952575684
    4. 'r' → logprob: -3.3854002952575684
    5. '_,' → logprob: -3.6354002952575684
    6. ' in' → logprob: -3.7604002952575684
    7. '_' → logprob: -4.135400295257568
    8. '_idx' → logprob: -5.010400295257568
    9. ',_' → logprob: -5.260400295257568
    10. 'p' → logprob: -6.135400295257568

Token 164: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.1298711746931076
    2. 'r' → logprob: -2.379871129989624
    3. 'x' → logprob: -4.504871368408203
    4. 'k' → logprob: -5.004871368408203
    5. 'qq' → logprob: -5.879871368408203
    6. 'l' → logprob: -6.504871368408203
    7. 's' → logprob: -6.629871368408203
    8. '(q' → logprob: -6.754871368408203
    9. 'd' → logprob: -7.254871368408203
    10. ' q' → logprob: -7.379871368408203

Token 165: 'v' (ID: 85)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.1270138919353485
    2. ' in' → logprob: -2.127013921737671
    3. '_' → logprob: -10.62701416015625
    4. ' ' → logprob: -10.62701416015625
    5. 'i' → logprob: -11.87701416015625
    6. ',' → logprob: -12.00201416015625
    7. 'n' → logprob: -12.00201416015625
    8. '_in' → logprob: -12.75201416015625
    9. '  ' → logprob: -13.12701416015625
    10. ')' → logprob: -13.50201416015625

Token 166: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5231620669364929
    2. ' in' → logprob: -0.8981620669364929
    3. 'n' → logprob: -11.648161888122559
    4. ' ' → logprob: -11.648161888122559
    5. 's' → logprob: -12.523161888122559
    6. ',' → logprob: -13.148161888122559
    7. 'v' → logprob: -13.398161888122559
    8. 'p' → logprob: -13.398161888122559
    9. 'i' → logprob: -13.523161888122559
    10. 'int' → logprob: -13.898161888122559

Token 167: ' pq' (ID: 65424)
  Prédit: 'pq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pq' → logprob: -0.06197462975978851
    2. ' pq' → logprob: -2.81197452545166
    3. 'p' → logprob: -12.56197452545166
    4. 'PQ' → logprob: -13.56197452545166
    5. ' ' → logprob: -13.81197452545166
    6. '
' → logprob: -14.56197452545166
    7. 'pp' → logprob: -16.186975479125977
    8. '[p' → logprob: -16.561975479125977
    9. 'rq' → logprob: -17.061975479125977
    10. 'qp' → logprob: -17.061975479125977

Token 168: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.688212614681106e-05
    2. ':
' → logprob: -11.250017166137695
    3. ',' → logprob: -13.000017166137695
    4. '[' → logprob: -14.750017166137695
    5. ':**' → logprob: -15.250017166137695
    6. '):' → logprob: -15.375017166137695
    7. ' :' → logprob: -15.750017166137695
    8. '[:]' → logprob: -16.375017166137695
    9. ':

' → logprob: -16.500017166137695
    10. ':list' → logprob: -16.875017166137695

Token 169: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002539990236982703
    2. '    ' → logprob: -6.627540111541748
    3. '    
' → logprob: -7.752540111541748
    4. ' print' → logprob: -8.37753963470459
    5. '       ' → logprob: -8.87753963470459
    6. ' ind' → logprob: -9.75253963470459
    7. ' s' → logprob: -10.12753963470459
    8. ' ' → logprob: -10.37753963470459
    9. ' ans' → logprob: -10.37753963470459
    10. ' i' → logprob: -10.62753963470459

Token 170: ' r' (ID: 428)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8014645576477051
    2. 'r' (adapté à ' r') → logprob: -2.051464557647705
    3. 's' → logprob: -2.551464557647705
    4. 'i' → logprob: -2.926464557647705
    5. ' s' → logprob: -3.176464557647705
    6. 'p' → logprob: -3.176464557647705
    7. ' r' → logprob: -3.551464557647705
    8. 'l' → logprob: -3.801464557647705
    9. ' p' → logprob: -3.801464557647705
    10. ' print' → logprob: -3.801464557647705

Token 171: ' =' (ID: 314)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.9684324264526367
    2. '=' → logprob: -1.4684324264526367
    3. 'ange' → logprob: -1.7184324264526367
    4. ' =' → logprob: -1.8434324264526367
    5. 'int' → logprob: -3.7184324264526367
    6. 'ight' → logprob: -5.468432426452637
    7. '=int' → logprob: -5.718432426452637
    8. '0' → logprob: -6.093432426452637
    9. ',' → logprob: -6.218432426452637
    10. 'anged' → logprob: -6.343432426452637

Token 172: ' (' (ID: 350)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.06714626401662827
    2. ' c' → logprob: -2.8171463012695312
    3. '0' → logprob: -5.942146301269531
    4. 'sum' → logprob: -6.692146301269531
    5. ' ' → logprob: -8.442146301269531
    6. '(c' → logprob: -8.567146301269531
    7. 'acc' → logprob: -8.817146301269531
    8. ' sum' → logprob: -9.192146301269531
    9. '[' → logprob: -9.317146301269531
    10. '[c' → logprob: -9.442146301269531

Token 173: 'lambda' (ID: 35280)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.003808742156252265
    2. ' c' → logprob: -6.253808975219727
    3. 'p' → logprob: -7.253808975219727
    4. 'acc' → logprob: -8.003808975219727
    5. 'sum' → logprob: -8.128808975219727
    6. '(c' → logprob: -9.253808975219727
    7. '0' → logprob: -9.253808975219727
    8. 'lambda' → logprob: -9.503808975219727
    9. 'max' → logprob: -10.128808975219727
    10. ' ' → logprob: -10.378808975219727

Token 174: ' P' (ID: 398)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.0066313743591309
    2. ':' → logprob: -2.131631374359131
    3. ' x' → logprob: -2.131631374359131
    4. 'i' → logprob: -2.631631374359131
    5. ' p' → logprob: -3.131631374359131
    6. ' s' → logprob: -3.256631374359131
    7. ' :' → logprob: -3.256631374359131
    8. ' a' → logprob: -3.256631374359131
    9. ' r' → logprob: -3.381631374359131
    10. 'x' → logprob: -3.631631374359131

Token 175: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.185709148645401
    2. ',' → logprob: -2.060709238052368
    3. ' :' → logprob: -3.685709238052368
    4. ',i' → logprob: -5.060708999633789
    5. ',p' → logprob: -5.560708999633789
    6. ',r' → logprob: -7.185708999633789
    7. 'p' → logprob: -7.310708999633789
    8. ':p' → logprob: -7.310708999633789
    9. 'r' → logprob: -7.435708999633789
    10. ' ,' → logprob: -7.685708999633789

Token 176: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.2016109824180603
    2. 'q' → logprob: -3.451611042022705
    3. 'x' → logprob: -3.576611042022705
    4. 'i' → logprob: -3.701611042022705
    5. 'c' → logprob: -3.826611042022705
    6. 'L' → logprob: -4.201611042022705
    7. ' Q' → logprob: -4.326611042022705
    8. 's' → logprob: -4.826611042022705
    9. 'p' → logprob: -4.826611042022705
    10. 'R' → logprob: -4.951611042022705

Token 177: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0029350295662879944
    2. ' :' → logprob: -6.25293493270874
    3. ',' → logprob: -7.37793493270874
    4. ':[' → logprob: -9.502935409545898
    5. ':(' → logprob: -9.627935409545898
    6. ':p' → logprob: -10.127935409545898
    7. ',:' → logprob: -10.627935409545898
    8. '=' → logprob: -10.627935409545898
    9. ',r' → logprob: -11.127935409545898
    10. ':P' → logprob: -11.252935409545898

Token 178: ' sum' (ID: 4215)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.3676903545856476
    2. ' c' → logprob: -1.2426903247833252
    3. '(c' → logprob: -5.617690563201904
    4. '0' → logprob: -5.617690563201904
    5. 'sum' → logprob: -5.867690563201904
    6. 'acc' → logprob: -6.367690563201904
    7. ' (' → logprob: -6.617690563201904
    8. ' ' → logprob: -6.742690563201904
    9. '   ' → logprob: -7.117690563201904
    10. 'max' → logprob: -7.617690563201904

Token 179: '((' (ID: 2054)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.07741093635559082
    2. '(' → logprob: -3.202410936355591
    3. '(
' → logprob: -3.577410936355591
    4. '([' → logprob: -5.952410697937012
    5. '((' → logprob: -6.452410697937012
    6. '(acc' → logprob: -7.202410697937012
    7. '(p' → logprob: -7.702410697937012
    8. 'c' → logprob: -9.077410697937012
    9. '(

' → logprob: -9.452410697937012
    10. '(sum' → logprob: -9.577410697937012

Token 180: 'lambda' (ID: 35280)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.02187155932188034
    2. ' c' → logprob: -4.646871566772461
    3. '(c' → logprob: -4.771871566772461
    4. '   ' → logprob: -7.771871566772461
    5. '           ' → logprob: -7.771871566772461
    6. '(P' → logprob: -7.896871566772461
    7. 'P' → logprob: -8.021871566772461
    8. '(' → logprob: -8.521871566772461
    9. 'Q' → logprob: -8.646871566772461
    10. 'acc' → logprob: -8.771871566772461

Token 181: ' a' (ID: 261)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.088976263999939
    2. ' c' → logprob: -1.088976263999939
    3. 'i' → logprob: -2.2139763832092285
    4. ' i' → logprob: -2.7139763832092285
    5. 'x' → logprob: -3.7139763832092285
    6. ' x' → logprob: -4.0889763832092285
    7. ' p' → logprob: -4.4639763832092285
    8. 'p' → logprob: -4.7139763832092285
    9. 'r' → logprob: -4.8389763832092285
    10. '(i' → logprob: -5.2139763832092285

Token 182: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5501143336296082
    2. '[i' → logprob: -2.425114393234253
    3. '[c' → logprob: -2.800114393234253
    4. 'c' → logprob: -3.050114393234253
    5. '[a' → logprob: -3.050114393234253
    6. '[P' → logprob: -4.050114154815674
    7. '[p' → logprob: -4.175114154815674
    8. '[' → logprob: -4.175114154815674
    9. '(c' → logprob: -4.300114154815674
    10. 'a' → logprob: -4.550114154815674

Token 183: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.06893540173768997
    2. ' b' → logprob: -3.0689353942871094
    3. 'i' → logprob: -4.568935394287109
    4. 'c' → logprob: -5.943935394287109
    5. 'x' → logprob: -6.318935394287109
    6. 'a' → logprob: -6.818935394287109
    7. ' i' → logprob: -7.318935394287109
    8. 'p' → logprob: -7.693935394287109
    9. 'r' → logprob: -7.943935394287109
    10. ' c' → logprob: -8.06893539428711

Token 184: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001613769680261612
    2. ' :' → logprob: -7.001613616943359
    3. ':a' → logprob: -8.50161361694336
    4. 'a' → logprob: -8.75161361694336
    5. ',' → logprob: -8.87661361694336
    6. '[' → logprob: -10.25161361694336
    7. ':
' → logprob: -10.75161361694336
    8. '=' → logprob: -11.25161361694336
    9. ':b' → logprob: -11.25161361694336
    10. '[a' → logprob: -11.37661361694336

Token 185: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.27043792605400085
    2. ' c' → logprob: -1.7704379558563232
    3. 'a' → logprob: -3.1454379558563232
    4. '(c' → logprob: -4.770437717437744
    5. ' a' → logprob: -5.270437717437744
    6. 'b' → logprob: -5.520437717437744
    7. '(a' → logprob: -6.020437717437744
    8. ' b' → logprob: -6.770437717437744
    9. ' (' → logprob: -7.770437717437744
    10. '(' → logprob: -8.270438194274902

Token 186: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.16420376300811768
    2. '[P' → logprob: -2.164203643798828
    3. '[b' → logprob: -3.539203643798828
    4. '[' → logprob: -5.289203643798828
    5. '[p' → logprob: -6.914203643798828
    6. '[q' → logprob: -7.664203643798828
    7. 'a' → logprob: -8.414203643798828
    8. '[min' → logprob: -8.414203643798828
    9. '[i' → logprob: -8.914203643798828
    10. 'b' → logprob: -9.789203643798828

Token 187: '][' (ID: 2696)
  Prédit: '[q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[q' → logprob: -0.44018828868865967
    2. '][' → logprob: -1.5651882886886597
    3. '[' → logprob: -2.190188407897949
    4. '[p' → logprob: -4.190188407897949
    5. '[P' → logprob: -4.440188407897949
    6. '[b' → logprob: -5.940188407897949
    7. '[r' → logprob: -6.440188407897949
    8. '-' → logprob: -7.565188407897949
    9. '[min' → logprob: -7.565188407897949
    10. 'q' → logprob: -7.690188407897949

Token 188: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.6480331420898438
    2. 'Q' → logprob: -0.7730331420898438
    3. 'q' → logprob: -4.273033142089844
    4. ' Q' → logprob: -7.773033142089844
    5. '   ' → logprob: -7.898033142089844
    6. ' b' → logprob: -8.523033142089844
    7. 'p' → logprob: -9.773033142089844
    8. 'P' → logprob: -9.773033142089844
    9. ' ' → logprob: -9.898033142089844
    10. '	Q' → logprob: -9.898033142089844

Token 189: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03473827615380287
    2. '-' → logprob: -5.284738063812256
    3. '])' → logprob: -5.284738063812256
    4. ']-' → logprob: -5.659738063812256
    5. '](' → logprob: -5.909738063812256
    6. ' ]' → logprob: -6.034738063812256
    7. '[' → logprob: -6.284738063812256
    8. ' -' → logprob: -6.284738063812256
    9. ']
' → logprob: -6.534738063812256
    10. 'r' → logprob: -6.909738063812256

Token 190: ' -' (ID: 533)
  Prédit: '(Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(Q' → logprob: -0.6169921159744263
    2. '(P' → logprob: -1.3669921159744263
    3. '(p' → logprob: -2.2419919967651367
    4. '(q' → logprob: -3.4919919967651367
    5. '(' → logprob: -3.6169919967651367
    6. '(r' → logprob: -4.491991996765137
    7. '(a' → logprob: -4.866991996765137
    8. '(
' → logprob: -5.241991996765137
    9. '[P' → logprob: -5.866991996765137
    10. ' (' → logprob: -5.866991996765137

Token 191: ' (' (ID: 350)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.888715386390686
    2. ' (' → logprob: -1.013715386390686
    3. ' c' → logprob: -2.1387152671813965
    4. 'c' → logprob: -2.2637152671813965
    5. '(' → logprob: -6.8887152671813965
    6. '(
' → logprob: -7.6387152671813965
    7. ' ' → logprob: -7.6387152671813965
    8. '   ' → logprob: -7.6387152671813965
    9. '(a' → logprob: -7.9512152671813965
    10. '  ' → logprob: -8.513715744018555

Token 192: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.04116576910018921
    2. ' c' → logprob: -3.291165828704834
    3. '   ' → logprob: -6.791165828704834
    4. '(c' → logprob: -7.166165828704834
    5. ' ' → logprob: -7.666165828704834
    6. '           ' → logprob: -8.916165351867676
    7. '    ' → logprob: -9.041165351867676
    8. ' (' → logprob: -9.041165351867676
    9. '  ' → logprob: -9.541165351867676
    10. '       ' → logprob: -9.666165351867676

Token 193: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.34205710887908936
    2. '[P' → logprob: -1.3420571088790894
    3. '[p' → logprob: -3.592057228088379
    4. '[' → logprob: -8.592057228088379
    5. 'a' → logprob: -8.592057228088379
    6. 'P' → logprob: -8.967057228088379
    7. '[A' → logprob: -9.467057228088379
    8. 'p' → logprob: -9.842057228088379
    9. '[q' → logprob: -9.842057228088379
    10. '```' → logprob: -11.279557228088379

Token 194: '][' (ID: 2696)
  Prédit: '[p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.5081913471221924
    2. '][' → logprob: -1.6331913471221924
    3. '[P' → logprob: -2.0081913471221924
    4. '-' → logprob: -3.3831913471221924
    5. '[' → logprob: -3.7581913471221924
    6. 'p' → logprob: -5.383191108703613
    7. ' -' → logprob: -5.758191108703613
    8. '[q' → logprob: -6.383191108703613
    9. 'P' → logprob: -7.508191108703613
    10. '[a' → logprob: -7.758191108703613

Token 195: 'P' (ID: 47)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.6658161878585815
    2. 'q' → logprob: -1.4158161878585815
    3. 'Q' → logprob: -1.5408161878585815
    4. 'P' → logprob: -3.790816307067871
    5. 'b' → logprob: -6.290816307067871
    6. '-' → logprob: -6.790816307067871
    7. 'd' → logprob: -7.290816307067871
    8. ' Q' → logprob: -7.540816307067871
    9. '[p' → logprob: -7.665816307067871
    10. ' p' → logprob: -8.165816307067871

Token 196: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.04447456821799278
    2. ' -' → logprob: -3.1694746017456055
    3. ']' → logprob: -6.7944746017456055
    4. '[' → logprob: -8.794474601745605
    5. '1' → logprob: -9.669474601745605
    6. '[q' → logprob: -10.544474601745605
    7. '-
' → logprob: -10.669474601745605
    8. 'q' → logprob: -10.669474601745605
    9. '2' → logprob: -10.919474601745605
    10. '```' → logprob: -12.481974601745605

Token 197: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00258302828297019
    2. '-' → logprob: -6.502583026885986
    3. ']' → logprob: -7.002583026885986
    4. 'q' → logprob: -10.127583503723145
    5. ' ' → logprob: -10.252583503723145
    6. '```' → logprob: -10.627583503723145
    7. ' -' → logprob: -10.752583503723145
    8. '
' → logprob: -11.752583503723145
    9. ']-' → logprob: -12.002583503723145
    10. '   ' → logprob: -12.127583503723145

Token 198: ']' (ID: 60)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.011873370036482811
    2. ']' → logprob: -4.886873245239258
    3. ' ][' → logprob: -6.386873245239258
    4. '[q' → logprob: -6.636873245239258
    5. '[' → logprob: -7.386873245239258
    6. '-' → logprob: -8.886873245239258
    7. '+' → logprob: -9.136873245239258
    8. 'Q' → logprob: -9.511873245239258
    9. ' -' → logprob: -10.011873245239258
    10. 'q' → logprob: -10.261873245239258

Token 199: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7052094340324402
    2. ' if' → logprob: -0.7052094340324402
    3. ']' → logprob: -4.455209255218506
    4. '[' → logprob: -9.205209732055664
    5. ')' → logprob: -9.330209732055664
    6. '])' → logprob: -10.080209732055664
    7. ' ' → logprob: -10.330209732055664
    8. '   ' → logprob: -11.330209732055664
    9. '[]' → logprob: -11.580209732055664
    10. '-' → logprob: -11.580209732055664

Token 200: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.013347629457712173
    2. ' P' → logprob: -4.388347625732422
    3. '(P' → logprob: -7.263347625732422
    4. ' ' → logprob: -10.263347625732422
    5. 'Q' → logprob: -10.388347625732422
    6. ' (' → logprob: -11.138347625732422
    7. 'p' → logprob: -11.263347625732422
    8. '   ' → logprob: -11.388347625732422
    9. '	P' → logprob: -12.013347625732422
    10. '[P' → logprob: -12.138347625732422

Token 201: '-' (ID: 12)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.3835085332393646
    2. '-' → logprob: -1.633508563041687
    3. ' >' → logprob: -2.1335084438323975
    4. '[' → logprob: -5.758508682250977
    5. '>=' → logprob: -7.133508682250977
    6. ' -' → logprob: -7.633508682250977
    7. 'and' → logprob: -10.008508682250977
    8. '```' → logprob: -10.008508682250977
    9. '>-' → logprob: -10.258508682250977
    10. '1' → logprob: -10.258508682250977

Token 202: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.06299751996994019
    2. '1' → logprob: -2.812997579574585
    3. ' ' → logprob: -7.312997341156006
    4. '>' → logprob: -8.062997817993164
    5. ' >' → logprob: -11.062997817993164
    6. '   ' → logprob: -11.437997817993164
    7. '-' → logprob: -11.687997817993164
    8. '0' → logprob: -12.562997817993164
    9. '```' → logprob: -13.437997817993164
    10. ' -' → logprob: -13.812997817993164

Token 203: ' else' (ID: 1203)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.15699604153633118
    2. '-' → logprob: -2.531996011734009
    3. ' >' → logprob: -3.281996011734009
    4. 'else' → logprob: -4.031996250152588
    5. '>=' → logprob: -5.781996250152588
    6. '[' → logprob: -6.031996250152588
    7. 'and' → logprob: -6.781996250152588
    8. ' else' → logprob: -7.031996250152588
    9. '0' → logprob: -7.156996250152588
    10. '   ' → logprob: -7.406996250152588

Token 204: ' ' (ID: 220)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.6827608346939087
    2. ' Q' → logprob: -1.3077608346939087
    3. 'P' → logprob: -2.057760715484619
    4. ' P' → logprob: -2.932760715484619
    5. '(P' → logprob: -4.557760715484619
    6. '0' → logprob: -4.682760715484619
    7. '(Q' → logprob: -4.932760715484619
    8. ' (' → logprob: -5.432760715484619
    9. 'p' → logprob: -6.182760715484619
    10. ' ' → logprob: -6.432760715484619

Token 205: '0' (ID: 15)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.24627771973609924
    2. 'Q' → logprob: -1.8712776899337769
    3. 'a' → logprob: -3.6212778091430664
    4. 'c' → logprob: -4.621277809143066
    5. 'q' → logprob: -4.621277809143066
    6. '0' → logprob: -5.121277809143066
    7. '   ' → logprob: -5.121277809143066
    8. ' b' → logprob: -6.621277809143066
    9. 'p' → logprob: -6.746277809143066
    10. 'True' → logprob: -6.996277809143066

Token 206: '))(' (ID: 72297)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13863533735275269
    2. '])' → logprob: -3.6386353969573975
    3. ')[' → logprob: -3.7636353969573975
    4. ')(' → logprob: -3.8886353969573975
    5. ')])' → logprob: -4.138635158538818
    6. '))' → logprob: -4.263635158538818
    7. '])(' → logprob: -5.013635158538818
    8. '))(' → logprob: -5.888635158538818
    9. ')][' → logprob: -5.888635158538818
    10. ')
' → logprob: -6.013635158538818

Token 207: 'a' (ID: 64)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.4993303716182709
    2. 'p' → logprob: -1.2493304014205933
    3. 'r' → logprob: -2.9993302822113037
    4. 'Q' → logprob: -3.3743302822113037
    5. 'i' → logprob: -3.8743302822113037
    6. 'n' → logprob: -7.749330520629883
    7. '   ' → logprob: -8.749330520629883
    8. 'j' → logprob: -8.999330520629883
    9. 'P' → logprob: -9.374330520629883
    10. 'b' → logprob: -9.749330520629883

Token 208: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2068454921245575
    2. ',q' → logprob: -2.33184552192688
    3. '-' → logprob: -2.70684552192688
    4. ' -' → logprob: -4.581845283508301
    5. '+' → logprob: -5.706845283508301
    6. ',p' → logprob: -5.956845283508301
    7. ',r' → logprob: -6.581845283508301
    8. ' +' → logprob: -6.581845283508301
    9. '[q' → logprob: -6.706845283508301
    10. ' ,' → logprob: -7.081845283508301

Token 209: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.008725548163056374
    2. 'q' → logprob: -5.383725643157959
    3. ' Q' → logprob: -6.008725643157959
    4. ' ' → logprob: -7.133725643157959
    5. '   ' → logprob: -8.1337251663208
    6. 'p' → logprob: -8.3837251663208
    7. '  ' → logprob: -8.6337251663208
    8. 'r' → logprob: -9.8837251663208
    9. ' q' → logprob: -10.6337251663208
    10. '    ' → logprob: -11.2587251663208

Token 210: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.007011482957750559
    2. ' -' → logprob: -5.132011413574219
    3. ')' → logprob: -6.882011413574219
    4. '[' → logprob: -10.132011413574219
    5. ' )' → logprob: -12.507011413574219
    6. '))' → logprob: -12.507011413574219
    7. '-)' → logprob: -12.757011413574219
    8. '])' → logprob: -13.257011413574219
    9. '1' → logprob: -14.382011413574219
    10. ')-' → logprob: -14.632011413574219

Token 211: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0022551720030605793
    2. 'q' → logprob: -6.127254962921143
    3. ')' → logprob: -10.3772554397583
    4. ' q' → logprob: -11.1272554397583
    5. 'r' → logprob: -11.6272554397583
    6. ' ' → logprob: -11.6272554397583
    7. '2' → logprob: -13.1272554397583
    8. '-' → logprob: -14.0022554397583
    9. 'p' → logprob: -14.1272554397583
    10. 'b' → logprob: -14.6272554397583

Token 212: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.032455816864967346
    2. '))' → logprob: -3.6574559211730957
    3. ')))' → logprob: -5.407455921173096
    4. ' )' → logprob: -6.907455921173096
    5. ')
' → logprob: -7.782455921173096
    6. '   ' → logprob: -9.032455444335938
    7. ' ))' → logprob: -10.907455444335938
    8. ' ' → logprob: -10.907455444335938
    9. '))))' → logprob: -11.282455444335938
    10. '))
' → logprob: -11.782455444335938

Token 213: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6028321981430054
    2. ' for' → logprob: -0.8528321981430054
    3. '   ' → logprob: -4.977832317352295
    4. ' )' → logprob: -5.102832317352295
    5. ')(' → logprob: -5.477832317352295
    6. '))' → logprob: -6.102832317352295
    7. 'for' → logprob: -6.727832317352295
    8. ')c' → logprob: -6.852832317352295
    9. ' if' → logprob: -6.977832317352295
    10. ')n' → logprob: -7.227832317352295

Token 214: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0036017363891005516
    2. ' a' → logprob: -5.628601551055908
    3. '	a' → logprob: -13.753602027893066
    4. '_a' → logprob: -15.503602027893066
    5. ' ' → logprob: -16.50360107421875
    6. 'range' → logprob: -16.75360107421875
    7. '   ' → logprob: -16.87860107421875
    8. 'а' → logprob: -17.50360107421875
    9. 'r' → logprob: -17.87860107421875
    10. ')a' → logprob: -17.87860107421875

Token 215: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.055049847811460495
    2. 'p' → logprob: -3.9300498962402344
    3. 'in' → logprob: -4.180049896240234
    4. 'P' → logprob: -5.055049896240234
    5. ' p' → logprob: -5.430049896240234
    6. ' range' → logprob: -5.680049896240234
    7. 'range' → logprob: -6.055049896240234
    8. '   ' → logprob: -7.180049896240234
    9. ' P' → logprob: -7.305049896240234
    10. '(p' → logprob: -8.555049896240234

Token 216: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.09079375118017197
    2. ' range' → logprob: -2.4657938480377197
    3. 'p' → logprob: -6.340793609619141
    4. ' p' → logprob: -9.84079360961914
    5. '(range' → logprob: -10.59079360961914
    6. '[p' → logprob: -12.46579360961914
    7. '(p' → logprob: -13.09079360961914
    8. 'P' → logprob: -13.71579360961914
    9. 'r' → logprob: -13.71579360961914
    10. ')' → logprob: -14.21579360961914

Token 217: '(P' (ID: 8952)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.046843357384204865
    2. 'p' → logprob: -3.2968432903289795
    3. '   ' → logprob: -5.671843528747559
    4. '(P' → logprob: -5.796843528747559
    5. ' p' → logprob: -6.921843528747559
    6. ' (' → logprob: -7.546843528747559
    7. '(' → logprob: -7.921843528747559
    8. 'P' → logprob: -8.296843528747559
    9. '       ' → logprob: -10.671843528747559
    10. '(
' → logprob: -10.671843528747559

Token 218: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.13346844911575317
    2. ',' → logprob: -2.2584683895111084
    3. ' -' → logprob: -4.0084686279296875
    4. ' ,' → logprob: -6.7584686279296875
    5. ',q' → logprob: -7.1334686279296875
    6. ',Q' → logprob: -9.133468627929688
    7. ',n' → logprob: -9.883468627929688
    8. ' ' → logprob: -10.508468627929688
    9. ')' → logprob: -10.758468627929688
    10. '+' → logprob: -11.008468627929688

Token 219: '1' (ID: 16)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.0268369913101196
    2. '1' → logprob: -1.4018369913101196
    3. 'Q' → logprob: -2.15183687210083
    4. 'q' → logprob: -2.15183687210083
    5. ' p' → logprob: -2.77683687210083
    6. 'n' → logprob: -3.52683687210083
    7. 'r' → logprob: -3.90183687210083
    8. ' q' → logprob: -4.27683687210083
    9. ' Q' → logprob: -4.40183687210083
    10. ' ' → logprob: -4.90183687210083

Token 220: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03370148688554764
    2. ',Q' → logprob: -3.5337014198303223
    3. ' ,' → logprob: -5.908701419830322
    4. ',q' → logprob: -7.033701419830322
    5. 'Q' → logprob: -9.15870189666748
    6. ',p' → logprob: -9.78370189666748
    7. '))' → logprob: -10.03370189666748
    8. ',n' → logprob: -10.28370189666748
    9. ')' → logprob: -10.65870189666748
    10. ')):' → logprob: -11.03370189666748

Token 221: ' Q' (ID: 1486)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.40373408794403076
    2. 'Q' → logprob: -1.1537340879440308
    3. 'p' → logprob: -4.90373420715332
    4. 'r' → logprob: -5.02873420715332
    5. ' q' → logprob: -6.40373420715332
    6. ' Q' → logprob: -7.15373420715332
    7. 'R' → logprob: -9.02873420715332
    8. '   ' → logprob: -9.27873420715332
    9. ' p' → logprob: -10.40373420715332
    10. ' r' → logprob: -11.52873420715332

Token 222: ')))' (ID: 15975)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.20106114447116852
    2. ')))' → logprob: -2.201061248779297
    3. ')):' → logprob: -3.076061248779297
    4. '+' → logprob: -3.826061248779297
    5. ')' → logprob: -6.951061248779297
    6. '))))' → logprob: -7.701061248779297
    7. '))+' → logprob: -7.701061248779297
    8. ' +' → logprob: -7.826061248779297
    9. ' ))' → logprob: -7.951061248779297
    10. ')),' → logprob: -8.701061248779297

Token 223: ' 
' (ID: 793)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5816781520843506
    2. '(' → logprob: -0.9566781520843506
    3. ':' → logprob: -3.3316781520843506
    4. '(p' → logprob: -5.33167839050293
    5. '   ' → logprob: -5.45667839050293
    6. ' ' → logprob: -6.20667839050293
    7. '()' → logprob: -6.33167839050293
    8. '(
' → logprob: -6.45667839050293
    9. '<|end|>' → logprob: -6.70667839050293
    10. ')(' → logprob: -7.08167839050293

Token 224: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6667969226837158
    2. '(' → logprob: -0.9167969226837158
    3. ':' → logprob: -3.041796922683716
    4. '(p' → logprob: -3.916796922683716
    5. '):' → logprob: -4.791796684265137
    6. ')(' → logprob: -5.666796684265137
    7. '(
' → logprob: -6.291796684265137
    8. '   ' → logprob: -6.416796684265137
    9. '(P' → logprob: -6.541796684265137
    10. ' ' → logprob: -7.791796684265137

Token 225: ' print' (ID: 2123)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.0025267915334552526
    2. '(' → logprob: -6.127526760101318
    3. '(P' → logprob: -8.377527236938477
    4. '(n' → logprob: -9.877527236938477
    5. '(
' → logprob: -10.877527236938477
    6. ' (' → logprob: -11.127527236938477
    7. ')' → logprob: -11.627527236938477
    8. ')(' → logprob: -12.127527236938477
    9. 'p' → logprob: -12.877527236938477
    10. '()' → logprob: -13.002527236938477

Token 226: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.05113708972930908
    2. '(sum' → logprob: -3.1761369705200195
    3. '(' → logprob: -4.9261369705200195
    4. '((' → logprob: -7.6761369705200195
    5. '(max' → logprob: -9.42613697052002
    6. '(s' → logprob: -9.55113697052002
    7. '(next' → logprob: -9.80113697052002
    8. '(*' → logprob: -10.67613697052002
    9. '(
' → logprob: -10.92613697052002
    10. 'r' → logprob: -11.17613697052002

Token 227: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.0028401799499988556
    2. '(' → logprob: -5.877840042114258
    3. ' (' → logprob: -11.127840042114258
    4. '(
' → logprob: -11.502840042114258
    5. ')' → logprob: -11.877840042114258
    6. '(P' → logprob: -13.377840042114258
    7. 'p' → logprob: -13.877840042114258
    8. '((' → logprob: -15.502840042114258
    9. '(

' → logprob: -15.502840042114258
    10. '(*' → logprob: -15.752840042114258

Token 228: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017656205454841256
    2. ',q' → logprob: -6.376765727996826
    3. ' ,' → logprob: -10.251765251159668
    4. ')' → logprob: -11.751765251159668
    5. ',p' → logprob: -12.001765251159668
    6. 'q' → logprob: -12.376765251159668
    7. ',
' → logprob: -12.501765251159668
    8. ' ' → logprob: -13.626765251159668
    9. ' q' → logprob: -13.876765251159668
    10. '[' → logprob: -13.876765251159668

Token 229: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0010338802821934223
    2. ' q' → logprob: -6.876033782958984
    3. ' ' → logprob: -15.251033782958984
    4. '	q' → logprob: -15.376033782958984
    5. 'p' → logprob: -15.501033782958984
    6. '   ' → logprob: -16.126033782958984
    7. ')' → logprob: -16.126033782958984
    8. '  ' → logprob: -16.501033782958984
    9. '    ' → logprob: -16.751033782958984
    10. '' → logprob: -17.688533782958984

Token 230: 'v' (ID: 85)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.03893633186817169
    2. 'v' → logprob: -3.2889363765716553
    3. ')' → logprob: -7.538936138153076
    4. 'q' → logprob: -8.038936614990234
    5. '))
' → logprob: -10.538936614990234
    6. ')))' → logprob: -12.288936614990234
    7. ' ))' → logprob: -13.038936614990234
    8. '));' → logprob: -13.538936614990234
    9. '),' → logprob: -14.038936614990234
    10. ' ' → logprob: -14.538936614990234

Token 231: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.2519400119781494
    2. ')' → logprob: -1.5019400119781494
    3. ')))' → logprob: -11.75193977355957
    4. '))
' → logprob: -14.00193977355957
    5. ')
' → logprob: -14.50193977355957
    6. ' )' → logprob: -14.87693977355957
    7. ' ))' → logprob: -15.00193977355957
    8. '),' → logprob: -15.12693977355957
    9. ')>' → logprob: -15.50193977355957
    10. ')}' → logprob: -16.25193977355957


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 229
Tokens correctement prédits (1ère position, stricte): 87
Tokens correctement prédits (1ère position, avec adaptation): 87
Tokens correctement prédits (top 10): 191
Précision stricte (1ère position): 37.99%
Précision adaptée (1ère position): 37.99%
Précision (top 10): 83.41%
================================================================================
