================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:05:13
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

# Bon, on va bosser avec le buffer comme demandé dans l'énoncé
readline = sys.stdin.buffer.readline

MOD = 10 ** 9 + 7  # J'aime bien les grands nombres premiers

N = int(readline())  # Taille du mot, "N" comme "nombre"

# Un tableau 4D... C'est pas super sexy mais bon, pas le choix ici
dp = [[[[0 for _ in range(4)] for _ in range(4)] for _ in range(4)] for _ in range(N + 1)]

# On part de l'état initial (aucune lettre choisie donc 3,3,3)
dp[0][3][3][3] = 1

# Les 4 lettres possibles sont codées 0,1,2,3, classique ACGT
for i in range(N):
    for j in range(4):
        for k in range(4):
            for l in range(4):
                now = dp[i][j][k][l]
                if not now:
                    continue
                for a in range(4):  # Nouvelle lettre à ajouter
                    # Empêcher des motifs interdits
                    if (k == 0 and l == 1 and a == 2):
                        continue
                    if (k == 1 and l == 0 and a == 2):
                        continue
                    if (k == 0 and l == 2 and a == 1):
                        continue
                    # Hum, ces deux-là je dois bien vérifier qu'ils servent :
                    if (j == 0 and l == 1 and a == 2):
                        continue
                    if (j == 0 and k == 1 and a == 2):
                        continue
                    dp[i + 1][k][l][a] += now
                    dp[i + 1][k][l][a] %= MOD  # Modulo à chaque fois, sinon overflow (j'ai oublié une fois...)

ans = 0
# Bon, maintenant on additionne tout ce qui reste à la fin
for j in range(4):
    for k in range(4):
        for l in range(4):
            ans = (ans + dp[N][j][k][l]) % MOD  # Plus sûr de refaire % là, même si normalement c'est fait avant

print(ans)  # Voilà, c'est fini (ouf)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: '#' (ID: 2)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0347585454583168
    2. '\n' → logprob: -4.034758567810059
    3. 'import' → logprob: -4.909758567810059
    4. '<|end|>' → logprob: -5.284758567810059
    5. '\' → logprob: -7.159758567810059
    6. '<|end|>' → logprob: -7.534758567810059
    7. 'newline' → logprob: -7.909758567810059
    8. ',' → logprob: -8.159758567810059
    9. '[' → logprob: -8.284758567810059
    10. '' → logprob: -8.284758567810059

Token 4: ' Bon' (ID: 12658)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.013595553115010262
    2. ' def' → logprob: -5.8885955810546875
    3. ' This' → logprob: -6.5135955810546875
    4. ' #' → logprob: -6.7635955810546875
    5. 'def' → logprob: -7.0135955810546875
    6. ' -*-' → logprob: -7.1385955810546875
    7. ' The' → logprob: -7.2635955810546875
    8. ' import' → logprob: -7.3885955810546875
    9. ' ```' → logprob: -7.3885955810546875
    10. ' argparse' → logprob: -7.6385955810546875

Token 5: ',' (ID: 11)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.7608194351196289
    2. 'jour' → logprob: -1.010819435119629
    3. 'd' → logprob: -2.510819435119629
    4. 'us' → logprob: -3.510819435119629
    5. 'def' → logprob: -4.010819435119629
    6. 'uses' → logprob: -4.885819435119629
    7. 'fire' → logprob: -5.135819435119629
    8. '```' → logprob: -5.385819435119629
    9. 'jours' → logprob: -5.760819435119629
    10. 'du' → logprob: -6.010819435119629

Token 6: ' on' (ID: 402)
  Prédit: ' je'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' je' → logprob: -0.48675331473350525
    2. 'je' → logprob: -2.236753225326538
    3. ' voici' → logprob: -2.486753225326538
    4. ' j' → logprob: -2.611753225326538
    5. ' c' → logprob: -3.736753225326538
    6. ' voilà' → logprob: -3.861753225326538
    7. ' mais' → logprob: -3.986753225326538
    8. ' il' → logprob: -4.486753463745117
    9. ' on' → logprob: -5.236753463745117
    10. ' maintenant' → logprob: -5.736753463745117

Token 7: ' va' (ID: 3423)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.5216401815414429
    2. '_' → logprob: -1.7716401815414429
    3. ' continue' → logprob: -2.2716403007507324
    4. ' va' → logprob: -2.5216403007507324
    5. '```' → logprob: -2.7716403007507324
    6. ' a' → logprob: -3.0216403007507324
    7. ' veut' → logprob: -3.0216403007507324
    8. ' peut' → logprob: -3.2716403007507324
    9. ' importe' → logprob: -3.7716403007507324
    10. ' the' → logprob: -4.021640300750732

Token 8: ' bos' (ID: 26134)
  Prédit: ' continuer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continuer' → logprob: -1.6878635883331299
    2. ' essayer' → logprob: -1.6878635883331299
    3. 'import' → logprob: -1.8128635883331299
    4. ' y' → logprob: -2.68786358833313
    5. ' import' → logprob: -2.68786358833313
    6. ' sys' → logprob: -3.06286358833313
    7. ' print' → logprob: -3.06286358833313
    8. ' ' → logprob: -3.31286358833313
    9. ' partir' → logprob: -3.31286358833313
    10. ' faire' → logprob: -3.56286358833313

Token 9: 'ser' (ID: 599)
  Prédit: 'ser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ser' → logprob: -0.13213111460208893
    2. 's' → logprob: -2.3821310997009277
    3. 'ter' → logprob: -3.5071310997009277
    4. '#' → logprob: -7.382131099700928
    5. 'ster' → logprob: -8.507131576538086
    6. 'si' → logprob: -9.257131576538086
    7. 'u' → logprob: -9.507131576538086
    8. 'sir' → logprob: -9.632131576538086
    9. '```' → logprob: -10.007131576538086
    10. '##' → logprob: -10.507131576538086

Token 10: ' avec' (ID: 3937)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7563601136207581
    2. '\' → logprob: -0.8813601136207581
    3. '_' → logprob: -3.1313600540161133
    4. '\n' → logprob: -3.6313600540161133
    5. '!' → logprob: -4.381360054016113
    6. '' → logprob: -4.631360054016113
    7. 'import' → logprob: -5.131360054016113
    8. ' ' → logprob: -5.381360054016113
    9. ':' → logprob: -5.756360054016113
    10. ',' → logprob: -6.006360054016113

Token 11: ' le' (ID: 505)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07612942904233932
    2. '_' → logprob: -3.32612943649292
    3. ' sys' → logprob: -3.95112943649292
    4. '.' → logprob: -5.20112943649292
    5. 'sys' → logprob: -6.07612943649292
    6. 'import' → logprob: -6.45112943649292
    7. ':' → logprob: -6.57612943649292
    8. '  ' → logprob: -6.57612943649292
    9. ' _' → logprob: -7.32612943649292
    10. ',' → logprob: -7.32612943649292

Token 12: ' buffer' (ID: 8573)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.082147240638733
    2. ' sys' → logprob: -1.082147240638733
    3. ' fichier' → logprob: -2.3321471214294434
    4. ' f' → logprob: -3.2071471214294434
    5. ' code' → logprob: -3.7071471214294434
    6. 's' → logprob: -3.7071471214294434
    7. 'sys' → logprob: -3.8321471214294434
    8. 'csv' → logprob: -3.9571471214294434
    9. ' système' → logprob: -4.332147121429443
    10. 'd' → logprob: -4.832147121429443

Token 13: ' comme' (ID: 7971)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5348666310310364
    2. '_' → logprob: -1.2848665714263916
    3. '\' → logprob: -2.6598665714263916
    4. '=' → logprob: -3.5348665714263916
    5. '#' → logprob: -4.784866809844971
    6. '\n' → logprob: -5.159866809844971
    7. ' =' → logprob: -5.284866809844971
    8. ',' → logprob: -5.409866809844971
    9. '`' → logprob: -6.159866809844971
    10. '' → logprob: -6.284866809844971

Token 14: ' demandé' (ID: 82780)
  Prédit: ' ça'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ça' → logprob: -1.400008201599121
    2. ' prévu' → logprob: -1.775008201599121
    3. ' sys' → logprob: -2.150008201599121
    4. 'sys' → logprob: -2.525008201599121
    5. 'd' → logprob: -2.650008201599121
    6. 'ça' → logprob: -2.900008201599121
    7. ' on' → logprob: -2.900008201599121
    8. ' d' → logprob: -3.275008201599121
    9. ' ceci' → logprob: -3.650008201599121
    10. 'une' → logprob: -4.400008201599121

Token 15: ' dans' (ID: 2671)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7040070295333862
    2. '_' → logprob: -1.5790070295333862
    3. '\' → logprob: -1.5790070295333862
    4. ',' → logprob: -3.579007148742676
    5. ':' → logprob: -4.204007148742676
    6. '\n' → logprob: -4.329007148742676
    7. 'import' → logprob: -4.329007148742676
    8. '#' → logprob: -5.204007148742676
    9. '' → logprob: -5.704007148742676
    10. ' ' → logprob: -5.704007148742676

Token 16: ' l' (ID: 305)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -1.1102139949798584
    2. ' sys' → logprob: -1.4852139949798584
    3. ' le' → logprob: -1.7352139949798584
    4. 'la' → logprob: -3.1102139949798584
    5. 'sys' → logprob: -3.1102139949798584
    6. ' la' → logprob: -3.2352139949798584
    7. ' l' → logprob: -3.3602139949798584
    8. 'l' → logprob: -3.6102139949798584
    9. ' ce' → logprob: -4.1102142333984375
    10. ' ' → logprob: -5.2352142333984375

Token 17: ''' (ID: 6)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7435733675956726
    2. 'e' → logprob: -1.6185734272003174
    3. ''' → logprob: -1.9935734272003174
    4. 'es' → logprob: -2.6185734272003174
    5. ''ex' → logprob: -3.7435734272003174
    6. ''entrée' → logprob: -3.9935734272003174
    7. 'input' → logprob: -4.118573188781738
    8. 'ex' → logprob: -4.993573188781738
    9. ''import' → logprob: -4.993573188781738
    10. ''environnement' → logprob: -5.493573188781738

Token 18: 'én' (ID: 3289)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -1.5216565132141113
    2. 'import' → logprob: -2.0216565132141113
    3. 'én' → logprob: -2.1466565132141113
    4. 'input' → logprob: -2.3966565132141113
    5. 'ex' → logprob: -2.5216565132141113
    6. 'open' → logprob: -2.7716565132141113
    7. '#' → logprob: -2.8966565132141113
    8. 'os' → logprob: -3.2716565132141113
    9. 'é' → logprob: -3.5216565132141113
    10. 'entrée' → logprob: -3.7716565132141113

Token 19: 'oncé' (ID: 59071)
  Prédit: 'oncé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oncé' → logprob: -0.08491886407136917
    2. 'v' → logprob: -3.584918975830078
    3. 'onc' → logprob: -3.709918975830078
    4. 'c' → logprob: -4.584918975830078
    5. 'vironment' → logprob: -5.959918975830078
    6. 'um' → logprob: -6.209918975830078
    7. 'vironnement' → logprob: -6.334918975830078
    8. 'once' → logprob: -6.334918975830078
    9. 'on' → logprob: -6.459918975830078
    10. '```' → logprob: -6.834918975830078

Token 20: '
' (ID: 198)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.37254345417022705
    2. '.' → logprob: -2.3725433349609375
    3. ',' → logprob: -2.8725433349609375
    4. 'buffer' → logprob: -3.1225433349609375
    5. ' ' → logprob: -3.7475433349609375
    6. '\' → logprob: -3.8725433349609375
    7. '=' → logprob: -4.3725433349609375
    8. '#' → logprob: -4.3725433349609375
    9. '\n' → logprob: -4.8725433349609375
    10. 'import' → logprob: -4.9975433349609375

Token 21: 'read' (ID: 1293)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.37857210636138916
    2. ',' → logprob: -2.6285719871520996
    3. '#' → logprob: -3.1285719871520996
    4. '.' → logprob: -3.2535719871520996
    5. '' → logprob: -3.3785719871520996
    6. ' ' → logprob: -3.3785719871520996
    7. '=' → logprob: -3.7535719871520996
    8. '\' → logprob: -3.8785719871520996
    9. '\n' → logprob: -4.6285719871521
    10. 'import' → logprob: -4.8785719871521

Token 22: 'line' (ID: 1137)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.871895968914032
    2. '_buffer' → logprob: -1.9968960285186768
    3. 'er' → logprob: -2.1218960285186768
    4. 'line' → logprob: -2.7468960285186768
    5. '_' → logprob: -2.9968960285186768
    6. ' =' → logprob: -3.1218960285186768
    7. '()' → logprob: -3.2468960285186768
    8. 'r' → logprob: -3.3718960285186768
    9. 'buffer' → logprob: -3.4968960285186768
    10. '_line' → logprob: -4.121895790100098

Token 23: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00325126969255507
    2. '()' → logprob: -6.128251075744629
    3. '.' → logprob: -6.878251075744629
    4. ' (' → logprob: -11.128251075744629
    5. '(
' → logprob: -11.628251075744629
    6. '('' → logprob: -13.253251075744629
    7. '=' → logprob: -13.253251075744629
    8. '(

' → logprob: -13.378251075744629
    9. '(.)' → logprob: -14.003251075744629
    10. ' =' → logprob: -14.378251075744629

Token 24: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.34853091835975647
    2. ' sys' → logprob: -1.223530888557434
    3. '	sys' → logprob: -10.098530769348145
    4. '(sys' → logprob: -10.723530769348145
    5. '=sys' → logprob: -11.723530769348145
    6. 'input' → logprob: -11.973530769348145
    7. 'lambda' → logprob: -12.223530769348145
    8. ' lambda' → logprob: -13.598530769348145
    9. ' input' → logprob: -14.098530769348145
    10. ' ' → logprob: -14.223530769348145

Token 25: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.041605204343795776
    2. '.' → logprob: -3.291605234146118
    3. '.stdout' → logprob: -5.916604995727539
    4. '.readline' → logprob: -7.166604995727539
    5. '.std' → logprob: -10.291604995727539
    6. ' .' → logprob: -10.791604995727539
    7. '.buffer' → logprob: -11.291604995727539
    8. '.stderr' → logprob: -11.666604995727539
    9. '.input' → logprob: -12.166604995727539
    10. '.read' → logprob: -12.541604995727539

Token 26: '.buffer' (ID: 48964)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.026393074542284012
    2. '.buffer' → logprob: -3.776393175125122
    3. '.read' → logprob: -6.401392936706543
    4. '.' → logprob: -6.526392936706543
    5. '.readlines' → logprob: -11.651392936706543
    6. ' .' → logprob: -11.901392936706543
    7. 'buffer' → logprob: -13.276392936706543
    8. '.detach' → logprob: -14.901392936706543
    9. '.Buffered' → logprob: -15.276392936706543
    10. '.f' → logprob: -15.276392936706543

Token 27: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.004132422618567944
    2. '.read' → logprob: -5.879132270812988
    3. '.' → logprob: -6.629132270812988
    4. '.readlines' → logprob: -12.504132270812988
    5. 'read' → logprob: -14.379132270812988
    6. ' readline' → logprob: -15.254132270812988
    7. '```' → logprob: -15.754132270812988
    8. '.raw' → logprob: -15.754132270812988
    9. '.peek' → logprob: -16.254133224487305
    10. '.Read' → logprob: -16.754133224487305

Token 28: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06342052668333054
    2. '()' → logprob: -3.313420534133911
    3. '(
' → logprob: -4.313420295715332
    4. '
' → logprob: -4.688420295715332
    5. '#' → logprob: -7.938420295715332
    6. '()
' → logprob: -7.938420295715332
    7. ' (' → logprob: -8.063420295715332
    8. ')' → logprob: -8.063420295715332
    9. ' ' → logprob: -8.313420295715332
    10. '\n' → logprob: -8.563420295715332

Token 29: 'MOD' (ID: 52135)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7091566920280457
    2. '#' → logprob: -1.2091567516326904
    3. 'x' → logprob: -2.9591567516326904
    4. ' ' → logprob: -3.4591567516326904
    5. '
' → logprob: -3.8341567516326904
    6. 'b' → logprob: -3.8341567516326904
    7. '()' → logprob: -4.709156513214111
    8. 'import' → logprob: -4.834156513214111
    9. '\' → logprob: -5.209156513214111
    10. ')' → logprob: -5.209156513214111

Token 30: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03846130520105362
    2. '=' → logprob: -4.038461208343506
    3. ' ' → logprob: -4.038461208343506
    4. '_' → logprob: -6.163461208343506
    5. '  ' → logprob: -9.413461685180664
    6. ')' → logprob: -9.913461685180664
    7. ' )' → logprob: -9.913461685180664
    8. ' ,' → logprob: -10.163461685180664
    9. ',' → logprob: -10.413461685180664
    10. ' _' → logprob: -10.538461685180664

Token 31: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.4748179316520691
    2. ' ' → logprob: -1.2248179912567139
    3. '100' → logprob: -2.474817991256714
    4. '1' → logprob: -11.474818229675293
    5. ' (' → logprob: -14.224818229675293
    6. '(' → logprob: -15.099818229675293
    7. '998' → logprob: -15.099818229675293
    8. 'int' → logprob: -15.849818229675293
    9. ' int' → logprob: -16.849817276000977
    10. ' ' → logprob: -16.849817276000977

Token 32: '10' (ID: 702)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.4743364155292511
    2. '10' → logprob: -0.9743363857269287
    3. '1' → logprob: -8.474336624145508
    4. ' ' → logprob: -9.974336624145508
    5. '998' → logprob: -12.849336624145508
    6. 'int' → logprob: -14.224336624145508
    7. '(' → logprob: -15.224336624145508
    8. '```' → logprob: -15.474336624145508
    9. '101' → logprob: -16.849336624145508
    10. '123' → logprob: -17.224336624145508

Token 33: ' **' (ID: 6240)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.00045009577297605574
    2. '**' → logprob: -8.125450134277344
    3. '09' → logprob: -9.375450134277344
    4. '+' → logprob: -10.625450134277344
    5. '```' → logprob: -11.000450134277344
    6. '000' → logprob: -11.250450134277344
    7. '7' → logprob: -11.375450134277344
    8. '99' → logprob: -13.750450134277344
    9. '6' → logprob: -14.250450134277344
    10. ' ' → logprob: -14.875450134277344

Token 34: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -3.128163257315464e-07
    2. '09' → logprob: -15.625
    3. ' ' → logprob: -15.875
    4. '```' → logprob: -17.5
    5. '+' → logprob: -18.375
    6. '   ' → logprob: -20.125
    7. '4' → logprob: -20.875
    8. '10' → logprob: -20.875
    9. '19' → logprob: -21.5
    10. '>' → logprob: -21.5

Token 35: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.9361264946837764e-07
    2. '09' → logprob: -15.875
    3. '```' → logprob: -17.375
    4. ' ' → logprob: -18.125
    5. '+' → logprob: -18.375
    6. '   ' → logprob: -19.75
    7. '**' → logprob: -19.875
    8. '``' → logprob: -20.375
    9. '19' → logprob: -20.625
    10. ' ' → logprob: -20.875

Token 36: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.016085047274827957
    2. ' +' → logprob: -4.141085147857666
    3. '7' → logprob: -10.016084671020508
    4. ' ' → logprob: -12.891084671020508
    5. ' plus' → logprob: -13.766084671020508
    6. ' ' → logprob: -14.766084671020508
    7. 'plus' → logprob: -15.141084671020508
    8. '+
' → logprob: -15.141084671020508
    9. '20' → logprob: -15.516084671020508
    10. '```' → logprob: -15.516084671020508

Token 37: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '+' → logprob: -16.75
    4. '```' → logprob: -18.375
    5. '   ' → logprob: -19.25
    6. '9' → logprob: -19.375
    7. '07' → logprob: -19.625
    8. '  ' → logprob: -20.5
    9. '７' → logprob: -21.4375
    10. '

' → logprob: -21.5625

Token 38: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. ' ' → logprob: -18.875
    3. '+' → logprob: -19.0
    4. '```' → logprob: -19.75
    5. '9' → logprob: -20.25
    6. '07' → logprob: -20.375
    7. '   ' → logprob: -20.875
    8. '

' → logprob: -21.375
    9. '٧' → logprob: -22.8125
    10. '  ' → logprob: -23.0

Token 39: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.24229344725608826
    2. 'def' → logprob: -2.617293357849121
    3. '

' → logprob: -2.742293357849121
    4. '\n' → logprob: -3.367293357849121
    5. 'newline' → logprob: -4.367293357849121
    6. '' → logprob: -4.492293357849121
    7. '
' → logprob: -5.492293357849121
    8. '```' → logprob: -5.742293357849121
    9. ' 

' → logprob: -5.867293357849121
    10. '\' → logprob: -6.117293357849121

Token 40: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0458257831633091
    2. '

' → logprob: -4.420825958251953
    3. '\n' → logprob: -4.420825958251953
    4. 'def' → logprob: -4.670825958251953
    5. '
' → logprob: -4.920825958251953
    6. '' → logprob: -6.170825958251953
    7. 'n' → logprob: -7.670825958251953
    8. 'newline' → logprob: -7.795825958251953
    9. '```' → logprob: -7.920825958251953
    10. '\' → logprob: -8.670825958251953

Token 41: ' J' (ID: 643)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0007241101702675223
    2. '<|end|>' → logprob: -8.250723838806152
    3. '  ' → logprob: -8.625723838806152
    4. ' ' → logprob: -10.000723838806152
    5. ' """' → logprob: -10.750723838806152
    6. ' ```' → logprob: -10.750723838806152
    7. ')' → logprob: -10.875723838806152
    8. ' )' → logprob: -10.875723838806152
    9. '```' → logprob: -10.875723838806152
    10. '#' → logprob: -11.125723838806152

Token 42: ''aime' (ID: 57963)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6095212697982788
    2. 'u' → logprob: -1.6095212697982788
    3. 'e' → logprob: -2.1095213890075684
    4. ''' → logprob: -3.3595213890075684
    5. 'uste' → logprob: -3.8595213890075684
    6. '-' → logprob: -3.8595213890075684
    7. '=' → logprob: -4.609521389007568
    8. 'us' → logprob: -4.609521389007568
    9. 'oueur' → logprob: -5.484521389007568
    10. '+' → logprob: -5.609521389007568

Token 43: ' bien' (ID: 5340)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -1.1979933977127075
    2. ' bien' → logprob: -1.9479933977127075
    3. 'le' → logprob: -2.447993278503418
    4. ' les' → logprob: -2.572993278503418
    5. 'bien' → logprob: -2.947993278503418
    6. ' la' → logprob: -3.197993278503418
    7. 'l' → logprob: -3.697993278503418
    8. 'pow' → logprob: -3.697993278503418
    9. 'mod' → logprob: -3.697993278503418
    10. ' le' → logprob: -3.947993278503418

Token 44: ' les' (ID: 1341)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 45: ' grands' (ID: 43085)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6658875346183777
    2. ' nombres' → logprob: -1.9158875942230225
    3. ' _' → logprob: -2.4158875942230225
    4. ' modulo' → logprob: -3.1658875942230225
    5. ' mod' → logprob: -3.4158875942230225
    6. ' grandes' → logprob: -3.7908875942230225
    7. ' ' → logprob: -4.040887355804443
    8. 'mod' → logprob: -4.040887355804443
    9. ' espaces' → logprob: -4.040887355804443
    10. ' codes' → logprob: -4.165887355804443

Token 46: ' nombres' (ID: 76205)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 47: ' premiers' (ID: 59140)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04774215817451477
    2. '

' → logprob: -4.0477423667907715
    3. '' → logprob: -5.0477423667907715
    4. '\n' → logprob: -5.2977423667907715
    5. '<|end|>' → logprob: -5.2977423667907715
    6. ' 
' → logprob: -5.9227423667907715
    7. '
' → logprob: -6.1727423667907715
    8. ' 

' → logprob: -6.7977423667907715
    9. '```' → logprob: -7.0477423667907715
    10. 'newline' → logprob: -7.0477423667907715

Token 48: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13484202325344086
    2. '

' → logprob: -2.7598419189453125
    3. '\n' → logprob: -3.3848419189453125
    4. '' → logprob: -4.5098419189453125
    5. 'newline' → logprob: -5.3848419189453125
    6. '
' → logprob: -5.8848419189453125
    7. '```' → logprob: -5.8848419189453125
    8. '<|end|>' → logprob: -6.2598419189453125
    9. '\' → logprob: -6.7598419189453125
    10. ' 

' → logprob: -6.8848419189453125

Token 49: 'N' (ID: 45)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7590026259422302
    2. 'def' → logprob: -0.7590026259422302
    3. '
' → logprob: -3.759002685546875
    4. '\n' → logprob: -4.134002685546875
    5. 'a' → logprob: -4.384002685546875
    6. '\' → logprob: -5.634002685546875
    7. '

' → logprob: -5.634002685546875
    8. 'x' → logprob: -7.509002685546875
    9. '#' → logprob: -7.759002685546875
    10. '' → logprob: -7.884002685546875

Token 50: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38309159874916077
    2. ',' → logprob: -1.6330915689468384
    3. ' ' → logprob: -2.758091688156128
    4. ' ,' → logprob: -3.258091688156128
    5. '=' → logprob: -3.883091688156128
    6. '  ' → logprob: -9.133091926574707
    7. ')' → logprob: -9.133091926574707
    8. '_' → logprob: -9.883091926574707
    9. '.' → logprob: -10.008091926574707
    10. ' )' → logprob: -10.133091926574707

Token 51: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.009213730692863464
    2. 'int' → logprob: -5.134213924407959
    3. ' ' → logprob: -5.759213924407959
    4. ' len' → logprob: -9.6342134475708
    5. ' read' → logprob: -11.0092134475708
    6. ' readline' → logprob: -11.6342134475708
    7. '=int' → logprob: -12.0092134475708
    8. '<int' → logprob: -12.7592134475708
    9. 'len' → logprob: -12.8842134475708
    10. ',int' → logprob: -13.1342134475708

Token 52: '(read' (ID: 45738)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3142937123775482
    2. '(read' → logprob: -1.3142937421798706
    3. '(sys' → logprob: -7.18929386138916
    4. '(input' → logprob: -8.56429386138916
    5. 'read' → logprob: -10.93929386138916
    6. ' (' → logprob: -11.06429386138916
    7. '('' → logprob: -11.31429386138916
    8. '(
' → logprob: -11.56429386138916
    9. '()' → logprob: -11.93929386138916
    10. '.readline' → logprob: -12.31429386138916

Token 53: 'line' (ID: 1137)
  Prédit: 'line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -3.4121114822482923e-06
    2. '(line' → logprob: -13.375003814697266
    3. '_line' → logprob: -14.375003814697266
    4. 'Line' → logprob: -14.500003814697266
    5. 'ine' → logprob: -15.125003814697266
    6. ' line' → logprob: -15.250003814697266
    7. 'lin' → logprob: -16.500003814697266
    8. 'LINE' → logprob: -17.000003814697266
    9. 'l' → logprob: -17.375003814697266
    10. '-line' → logprob: -17.625003814697266

Token 54: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.01830129697918892
    2. '()' → logprob: -4.018301486968994
    3. '().' → logprob: -9.018301010131836
    4. ' ())' → logprob: -10.643301010131836
    5. '())
' → logprob: -14.018301010131836
    6. ')' → logprob: -14.018301010131836
    7. '();)' → logprob: -14.143301010131836
    8. '(' → logprob: -14.143301010131836
    9. '()
' → logprob: -14.268301010131836
    10. ' ()' → logprob: -14.393301010131836

Token 55: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9084200263023376
    2. ')' → logprob: -1.5334200859069824
    3. '<|end|>' → logprob: -2.1584200859069824
    4. '
' → logprob: -2.2834200859069824
    5. '\n' → logprob: -2.9084200859069824
    6. ' 
' → logprob: -3.1584200859069824
    7. '```' → logprob: -4.408420085906982
    8. '#' → logprob: -4.658420085906982
    9. '%' → logprob: -4.783420085906982
    10. '\' → logprob: -5.158420085906982

Token 56: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16020970046520233
    2. '%' → logprob: -2.0352096557617188
    3. '<|end|>' → logprob: -4.535209655761719
    4. '#' → logprob: -6.660209655761719
    5. 'for' → logprob: -6.660209655761719
    6. '
' → logprob: -7.285209655761719
    7. ' ' → logprob: -7.410209655761719
    8. ' )' → logprob: -7.660209655761719
    9. '```' → logprob: -8.535209655761719
    10. '*' → logprob: -8.535209655761719

Token 57: ' Taille' (ID: 174124)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5132958292961121
    2. '<|end|>' → logprob: -1.6382958889007568
    3. '(' → logprob: -2.888295888900757
    4. '()' → logprob: -3.263295888900757
    5. '.readline' → logprob: -3.513295888900757
    6. '(N' → logprob: -4.013295650482178
    7. ' readline' → logprob: -4.013295650482178
    8. '<|end|>' → logprob: -4.138295650482178
    9. 'N' → logprob: -4.763295650482178
    10. ' )' → logprob: -5.763295650482178

Token 58: ' du' (ID: 1462)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 59: ' mot' (ID: 3598)
  Prédit: ' tableau'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tableau' → logprob: -0.06691695004701614
    2. 'table' → logprob: -3.4419169425964355
    3. ' table' → logprob: -5.1919169425964355
    4. 'texte' → logprob: -5.4419169425964355
    5. 'tab' → logprob: -6.3169169425964355
    6. ' code' → logprob: -6.3169169425964355
    7. ' plateau' → logprob: -6.3169169425964355
    8. 's' → logprob: -6.5669169425964355
    9. 'code' → logprob: -6.9419169425964355
    10. ' t' → logprob: -7.0669169425964355

Token 60: ',' (ID: 11)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6528827548027039
    2. '<|end|>' → logprob: -1.2778828144073486
    3. ' 
' → logprob: -3.0278828144073486
    4. 's' → logprob: -3.0278828144073486
    5. ')' → logprob: -3.4028828144073486
    6. '
' → logprob: -3.7778828144073486
    7. 'n' → logprob: -4.6528825759887695
    8. ' word' → logprob: -5.4028825759887695
    9. '<|end|>' → logprob: -5.4028825759887695
    10. '\n' → logprob: -5.5278825759887695

Token 61: ' "' (ID: 392)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8151916265487671
    2. ' word' → logprob: -0.9401916265487671
    3. ' s' → logprob: -2.9401917457580566
    4. ' M' → logprob: -3.1901917457580566
    5. ' w' → logprob: -4.940191745758057
    6. 's' → logprob: -5.065191745758057
    7. ' S' → logprob: -5.190191745758057
    8. ' K' → logprob: -5.315191745758057
    9. ' a' → logprob: -5.440191745758057
    10. ' A' → logprob: -5.565191745758057

Token 62: 'N' (ID: 45)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8251263499259949
    2. 'N' → logprob: -1.3251264095306396
    3. 's' → logprob: -3.2001264095306396
    4. 'input' → logprob: -3.4501264095306396
    5. 'S' → logprob: -3.5751264095306396
    6. 'word' → logprob: -3.5751264095306396
    7. 'mot' → logprob: -3.7001264095306396
    8. 'len' → logprob: -4.4501261711120605
    9. 'K' → logprob: -4.4501261711120605
    10. 'A' → logprob: -4.8251261711120605

Token 63: '"' (ID: 1)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7918268442153931
    2. '"' → logprob: -1.041826844215393
    3. ' =' → logprob: -2.6668267250061035
    4. '")' → logprob: -2.7918267250061035
    5. '=' → logprob: -4.4168267250061035
    6. ' )' → logprob: -4.9168267250061035
    7. ' "' → logprob: -5.4168267250061035
    8. ' ' → logprob: -5.6668267250061035
    9. ',' → logprob: -5.7918267250061035
    10. ')"' → logprob: -6.3543267250061035

Token 64: ' comme' (ID: 7971)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 65: ' "' (ID: 392)
  Prédit: 'Nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Nombre' → logprob: -0.9524146914482117
    2. ' Nombre' → logprob: -1.4524147510528564
    3. ' nombre' → logprob: -1.7024147510528564
    4. 'nombre' → logprob: -2.7024147510528564
    5. ' ' → logprob: -3.5774147510528564
    6. ' N' → logprob: -3.9524147510528564
    7. ' "' → logprob: -4.452414512634277
    8. ' le' → logprob: -4.577414512634277
    9. ' Number' → logprob: -4.702414512634277
    10. 'N' → logprob: -4.952414512634277

Token 66: 'nombre' (ID: 28576)
  Prédit: 'Nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Nombre' → logprob: -0.19865037500858307
    2. 'nombre' → logprob: -2.448650360107422
    3. 'N' → logprob: -3.073650360107422
    4. 'Nom' → logprob: -3.573650360107422
    5. 'Name' → logprob: -5.198650360107422
    6. ' Nombre' → logprob: -5.948650360107422
    7. 'n' → logprob: -6.448650360107422
    8. 'Nb' → logprob: -6.573650360107422
    9. '_N' → logprob: -6.698650360107422
    10. 'Number' → logprob: -6.948650360107422

Token 67: '"

' (ID: 2678)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.4130026400089264
    2. 'de' → logprob: -1.788002610206604
    3. ' d' → logprob: -2.6630027294158936
    4. ' ' → logprob: -3.1630027294158936
    5. '_de' → logprob: -3.7880027294158936
    6. 'd' → logprob: -3.9130027294158936
    7. ' des' → logprob: -5.7880024909973145
    8. '_' → logprob: -6.4130024909973145
    9. ')' → logprob: -6.5380024909973145
    10. ' total' → logprob: -6.6630024909973145

Token 68: '#' (ID: 2)
  Prédit: 'word'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'word' → logprob: -0.30758360028266907
    2. ' word' → logprob: -1.9325835704803467
    3. 's' → logprob: -2.3075835704803467
    4. 'S' → logprob: -5.557583808898926
    5. 'A' → logprob: -5.682583808898926
    6. 'w' → logprob: -6.182583808898926
    7. 'data' → logprob: -6.307583808898926
    8. 'a' → logprob: -6.682583808898926
    9. ')' → logprob: -7.057583808898926
    10. ' s' → logprob: -7.182583808898926

Token 69: ' Un' (ID: 1367)
  Prédit: ' word'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' word' → logprob: -0.7575051188468933
    2. 'word' → logprob: -0.8825051188468933
    3. 's' → logprob: -3.007505178451538
    4. 'A' → logprob: -5.007504940032959
    5. 'S' → logprob: -5.007504940032959
    6. ' s' → logprob: -5.007504940032959
    7. 'dp' → logprob: -5.132504940032959
    8. 'freq' → logprob: -5.382504940032959
    9. 'data' → logprob: -5.882504940032959
    10. ' S' → logprob: -5.882504940032959

Token 70: ' tableau' (ID: 67053)
  Prédit: ' word'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' word' → logprob: -0.882737934589386
    2. 'mot' → logprob: -1.2577378749847412
    3. ' mot' → logprob: -2.132737874984741
    4. 's' → logprob: -2.632737874984741
    5. 'word' → logprob: -3.507737874984741
    6. ' s' → logprob: -3.507737874984741
    7. ' ' → logprob: -4.63273811340332
    8. ' =' → logprob: -5.13273811340332
    9. '_' → logprob: -5.13273811340332
    10. ' motif' → logprob: -6.00773811340332

Token 71: ' ' (ID: 220)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8413240313529968
    2. '[]' → logprob: -1.3413240909576416
    3. 's' → logprob: -2.2163240909576416
    4. 'des' → logprob: -3.2163240909576416
    5. '[' → logprob: -3.4663240909576416
    6. 'de' → logprob: -3.7163240909576416
    7. '=' → logprob: -4.0913238525390625
    8. '<|end|>' → logprob: -4.2163238525390625
    9. ' des' → logprob: -4.5913238525390625
    10. '_' → logprob: -4.5913238525390625

Token 72: '4' (ID: 19)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.0326807498931885
    2. 'de' → logprob: -1.1576807498931885
    3. 'des' → logprob: -1.6576807498931885
    4. '[]' → logprob: -3.2826807498931885
    5. 'dp' → logprob: -4.032680511474609
    6. '[' → logprob: -4.282680511474609
    7. '<|end|>' → logprob: -4.532680511474609
    8. ' =' → logprob: -4.657680511474609
    9. 'vide' → logprob: -4.907680511474609
    10. 's' → logprob: -5.032680511474609

Token 73: 'D' (ID: 35)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -2.128657102584839
    2. ' =' → logprob: -2.378657102584839
    3. '_' → logprob: -2.503657102584839
    4. ' ' → logprob: -2.753657102584839
    5. '*' → logprob: -2.878657102584839
    6. ',' → logprob: -3.128657102584839
    7. 'elements' → logprob: -3.128657102584839
    8. 'élé' → logprob: -3.378657102584839
    9. ' *' → logprob: -3.503657102584839
    10. '[' → logprob: -3.753657102584839

Token 74: '...' (ID: 1008)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.2275158166885376
    2. ' dp' → logprob: -1.4775158166885376
    3. '[' → logprob: -1.7275158166885376
    4. ',' → logprob: -3.102515697479248
    5. ' =' → logprob: -3.102515697479248
    6. 'import' → logprob: -3.477515697479248
    7. 'a' → logprob: -3.852515697479248
    8. ' ' → logprob: -4.102515697479248
    9. 's' → logprob: -4.602515697479248
    10. '_' → logprob: -4.977515697479248

Token 75: ' C' (ID: 363)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.796176016330719
    2. 'dp' → logprob: -0.921176016330719
    3. ' ' → logprob: -3.421175956726074
    4. '[' → logprob: -3.546175956726074
    5. ' =' → logprob: -3.546175956726074
    6. ',' → logprob: -4.671175956726074
    7. 's' → logprob: -5.046175956726074
    8. 'DP' → logprob: -5.546175956726074
    9. ' ,' → logprob: -5.546175956726074
    10. ' DP' → logprob: -5.921175956726074

Token 76: ''est' (ID: 6616)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'o' → logprob: -1.1063159704208374
    2. ' =' → logprob: -1.8563159704208374
    3. '=' → logprob: -2.106316089630127
    4. '[' → logprob: -2.231316089630127
    5. 'omme' → logprob: -2.731316089630127
    6. '_' → logprob: -2.856316089630127
    7. ' ' → logprob: -3.606316089630127
    8. 'om' → logprob: -3.856316089630127
    9. '-' → logprob: -4.106316089630127
    10. 'a' → logprob: -4.481316089630127

Token 77: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -2.2768592834472656
    2. ' un' → logprob: -2.4018592834472656
    3. ' une' → logprob: -2.5268592834472656
    4. ' pour' → logprob: -2.6518592834472656
    5. ' quoi' → logprob: -2.7768592834472656
    6. 'pas' → logprob: -3.2768592834472656
    7. 'part' → logprob: -3.2768592834472656
    8. 'a' → logprob: -3.5268592834472656
    9. 'pour' → logprob: -3.5268592834472656
    10. '```' → logprob: -3.6518592834472656

Token 78: ' super' (ID: 2539)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.5385178327560425
    2. 'tr' → logprob: -2.288517951965332
    3. ' très' → logprob: -2.288517951965332
    4. 'possible' → logprob: -2.413517951965332
    5. ' pratique' → logprob: -2.663517951965332
    6. ' facile' → logprob: -3.413517951965332
    7. ' évident' → logprob: -3.413517951965332
    8. 'pr' → logprob: -3.538517951965332
    9. 'simple' → logprob: -3.538517951965332
    10. ' simple' → logprob: -3.538517951965332

Token 79: ' sexy' (ID: 18740)
  Prédit: ' pratique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pratique' → logprob: -0.9005682468414307
    2. ',' → logprob: -1.5255682468414307
    3. ' optim' → logprob: -2.5255682468414307
    4. 'com' → logprob: -2.6505682468414307
    5. ' ,' → logprob: -3.2755682468414307
    6. ' utile' → logprob: -4.150568008422852
    7. 'optimal' → logprob: -4.400568008422852
    8. '<|end|>' → logprob: -4.400568008422852
    9. 'optim' → logprob: -4.650568008422852
    10. ' simple' → logprob: -4.900568008422852

Token 80: ' mais' (ID: 2899)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.9795626997947693
    2. 'dp' → logprob: -1.104562759399414
    3. ',' → logprob: -1.604562759399414
    4. ' ,' → logprob: -3.604562759399414
    5. 'd' → logprob: -4.854562759399414
    6. '[' → logprob: -4.854562759399414
    7. 'a' → logprob: -5.104562759399414
    8. 'dimensions' → logprob: -5.729562759399414
    9. 'dims' → logprob: -5.979562759399414
    10. 't' → logprob: -5.979562759399414

Token 81: ' bon' (ID: 4846)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5169202089309692
    2. ' ça' → logprob: -2.6419200897216797
    3. ' ,' → logprob: -2.8919200897216797
    4. ' c' → logprob: -3.0169200897216797
    5. ' on' → logprob: -3.0169200897216797
    6. ' '' → logprob: -3.5169200897216797
    7. ' a' → logprob: -4.01692008972168
    8. ',' → logprob: -4.01692008972168
    9. ' je' → logprob: -4.51692008972168
    10. ' la' → logprob: -4.76692008972168

Token 82: ',' (ID: 11)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.874058187007904
    2. 'dp' → logprob: -0.999058187007904
    3. 'a' → logprob: -3.374058246612549
    4. ' word' → logprob: -3.999058246612549
    5. ' ,' → logprob: -4.124058246612549
    6. '[' → logprob: -4.249058246612549
    7. 's' → logprob: -4.374058246612549
    8. ',' → logprob: -4.374058246612549
    9. ' ' → logprob: -4.624058246612549
    10. 't' → logprob: -5.124058246612549

Token 83: ' pas' (ID: 2173)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.49736955761909485
    2. ' on' → logprob: -1.2473695278167725
    3. ' ' → logprob: -3.7473695278167725
    4. 'dp' → logprob: -4.122369766235352
    5. ' je' → logprob: -4.247369766235352
    6. ' c' → logprob: -4.372369766235352
    7. ' t' → logprob: -4.997369766235352
    8. ' j' → logprob: -5.372369766235352
    9. ' code' → logprob: -5.997369766235352
    10. ' voilà' → logprob: -5.997369766235352

Token 84: ' le' (ID: 505)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.41543540358543396
    2. '<|end|>' → logprob: -2.915435314178467
    3. ' a' → logprob: -3.790435314178467
    4. ' très' → logprob: -3.915435314178467
    5. ' grave' → logprob: -4.040435314178467
    6. '   ' → logprob: -4.165435314178467
    7. 'grave' → logprob: -4.165435314178467
    8. ' évident' → logprob: -4.540435314178467
    9. ' de' → logprob: -4.665435314178467
    10. ')' → logprob: -4.665435314178467

Token 85: ' choix' (ID: 28642)
  Prédit: ' choix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' choix' → logprob: -0.4966173470020294
    2. 'cho' → logprob: -1.121617317199707
    3. 'choice' → logprob: -3.746617317199707
    4. '<|end|>' → logprob: -5.246617317199707
    5. 'de' → logprob: -5.746617317199707
    6. 'd' → logprob: -5.746617317199707
    7. 'a' → logprob: -5.746617317199707
    8. 'au' → logprob: -6.121617317199707
    9. 'Cho' → logprob: -6.246617317199707
    10. 'plus' → logprob: -6.246617317199707

Token 86: ' ici' (ID: 27994)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.6749333739280701
    2. 'dp' → logprob: -0.7999333739280701
    3. ',' → logprob: -5.174933433532715
    4. ' ' → logprob: -5.549933433532715
    5. 'd' → logprob: -6.049933433532715
    6. ' ,' → logprob: -6.049933433532715
    7. ' d' → logprob: -6.174933433532715
    8. 's' → logprob: -6.299933433532715
    9. 'DP' → logprob: -6.424933433532715
    10. ' 
' → logprob: -6.424933433532715

Token 87: '
' (ID: 198)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.5693727135658264
    2. 'dp' → logprob: -0.9443727135658264
    3. ',' → logprob: -5.194372653961182
    4. 'state' → logprob: -5.319372653961182
    5. ' ,' → logprob: -5.569372653961182
    6. 'd' → logprob: -5.569372653961182
    7. 'a' → logprob: -5.694372653961182
    8. 'm' → logprob: -6.194372653961182
    9. 'A' → logprob: -6.319372653961182
    10. 's' → logprob: -6.444372653961182

Token 88: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.07189154624938965
    2. ' dp' → logprob: -3.1968915462493896
    3. 'd' → logprob: -4.696891784667969
    4. 'D' → logprob: -4.821891784667969
    5. 'DP' → logprob: -5.321891784667969
    6. 'A' → logprob: -7.321891784667969
    7. 'dims' → logprob: -7.446891784667969
    8. 'dimensions' → logprob: -7.571891784667969
    9. 't' → logprob: -8.071891784667969
    10. 'a' → logprob: -8.196891784667969

Token 89: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0036847591400146484
    2. '=' → logprob: -6.503684997558594
    3. '[' → logprob: -6.503684997558594
    4. ' ' → logprob: -7.503684997558594
    5. ' =[' → logprob: -9.253684997558594
    6. '=[' → logprob: -10.878684997558594
    7. ' [' → logprob: -11.878684997558594
    8. '  ' → logprob: -13.378684997558594
    9. '    ' → logprob: -14.003684997558594
    10. '_' → logprob: -14.128684997558594

Token 90: ' [[' (ID: 9237)
  Prédit: ' [['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [[' → logprob: -0.32248881459236145
    2. '[[' → logprob: -1.322488784790039
    3. ' [[[' → logprob: -4.822488784790039
    4. '[' → logprob: -7.197488784790039
    5. ' [' → logprob: -7.947488784790039
    6. ' []' → logprob: -11.072488784790039
    7. ' ' → logprob: -11.572488784790039
    8. ' [{}' → logprob: -12.697488784790039
    9. ' {}' → logprob: -13.322488784790039
    10. ' [[]' → logprob: -13.322488784790039

Token 91: '[[' (ID: 26245)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5854315757751465
    2. '[[' → logprob: -0.8354315757751465
    3. '0' → logprob: -4.7104315757751465
    4. ' [' → logprob: -8.960432052612305
    5. 'False' → logprob: -8.960432052612305
    6. ' [[[' → logprob: -9.460432052612305
    7. ' [[' → logprob: -10.085432052612305
    8. '[
' → logprob: -10.710432052612305
    9. '[N' → logprob: -11.085432052612305
    10. 'None' → logprob: -11.960432052612305

Token 92: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00022964231902733445
    2. '-' → logprob: -8.625229835510254
    3. ' ' → logprob: -10.250229835510254
    4. 'False' → logprob: -11.375229835510254
    5. ']' → logprob: -14.250229835510254
    6. 'None' → logprob: -14.250229835510254
    7. '[' → logprob: -14.750229835510254
    8. ' -' → logprob: -15.125229835510254
    9. '۰' → logprob: -15.562729835510254
    10. '
' → logprob: -16.062728881835938

Token 93: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.11743184179067612
    2. ']' → logprob: -2.367431879043579
    3. 'for' → logprob: -4.992431640625
    4. ' ' → logprob: -5.367431640625
    5. ' ]' → logprob: -5.867431640625
    6. ']*' → logprob: -5.992431640625
    7. ')' → logprob: -9.492431640625
    8. '	for' → logprob: -9.492431640625
    9. '  ' → logprob: -10.242431640625
    10. '<|end|>' → logprob: -10.867431640625

Token 94: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.30273157358169556
    2. ' in' → logprob: -1.6777315139770508
    3. '_' → logprob: -2.677731513977051
    4. ' range' → logprob: -5.927731513977051
    5. 'range' → logprob: -6.552731513977051
    6. ' ' → logprob: -7.052731513977051
    7. 'in' → logprob: -7.802731513977051
    8. ' j' → logprob: -9.80273151397705
    9. ' i' → logprob: -9.80273151397705
    10. '0' → logprob: -10.67773151397705

Token 95: ' in' (ID: 306)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5393270254135132
    2. 'range' → logprob: -1.4143270254135132
    3. ' in' → logprob: -1.7893270254135132
    4. 'in' → logprob: -5.539327144622803
    5. ' ' → logprob: -6.039327144622803
    6. '  ' → logprob: -9.289326667785645
    7. 'ange' → logprob: -10.039326667785645
    8. '	range' → logprob: -10.039326667785645
    9. ' xrange' → logprob: -10.289326667785645
    10. '(range' → logprob: -10.414326667785645

Token 96: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.31339067220687866
    2. ' range' → logprob: -1.3133907318115234
    3. '(range' → logprob: -9.688390731811523
    4. ' ' → logprob: -11.063390731811523
    5. '	range' → logprob: -11.438390731811523
    6. '   ' → logprob: -11.563390731811523
    7. ''' → logprob: -12.313390731811523
    8. ' xrange' → logprob: -12.438390731811523
    9. '4' → logprob: -12.563390731811523
    10. '"' → logprob: -12.688390731811523

Token 97: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09020191431045532
    2. '4' → logprob: -3.0902018547058105
    3. '(N' → logprob: -3.4652018547058105
    4. '10' → logprob: -5.7152018547058105
    5. '5' → logprob: -6.3402018547058105
    6. '7' → logprob: -6.7152018547058105
    7. ' (' → logprob: -7.2152018547058105
    8. '3' → logprob: -7.7152018547058105
    9. '9' → logprob: -7.7152018547058105
    10. '2' → logprob: -7.9652018547058105

Token 98: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.9268519878387451
    2. 'N' → logprob: -1.8018519878387451
    3. '10' → logprob: -1.9268519878387451
    4. '5' → logprob: -2.051851987838745
    5. '11' → logprob: -2.926851987838745
    6. '2' → logprob: -3.426851987838745
    7. '9' → logprob: -4.051852226257324
    8. '3' → logprob: -4.176852226257324
    9. '7' → logprob: -4.551852226257324
    10. '51' → logprob: -4.551852226257324

Token 99: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0005464801797643304
    2. ')' → logprob: -7.625546455383301
    3. ' )' → logprob: -10.5005464553833
    4. ']' → logprob: -10.6255464553833
    5. ']]' → logprob: -13.1255464553833
    6. ' ]' → logprob: -13.2505464553833
    7. ')]
' → logprob: -14.2505464553833
    8. '+' → logprob: -14.3755464553833
    9. '])]' → logprob: -15.2505464553833
    10. ')])' → logprob: -15.6255464553833

Token 100: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4090040922164917
    2. ']' → logprob: -1.4090040922164917
    3. 'for' → logprob: -2.4090042114257812
    4. ' ]' → logprob: -6.909004211425781
    5. ')' → logprob: -8.534004211425781
    6. '   ' → logprob: -9.409004211425781
    7. ' in' → logprob: -10.409004211425781
    8. ' ' → logprob: -10.534004211425781
    9. '	for' → logprob: -11.034004211425781
    10. '       ' → logprob: -11.909004211425781

Token 101: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.1275525540113449
    2. ' in' → logprob: -2.5025525093078613
    3. ' range' → logprob: -3.5025525093078613
    4. '_' → logprob: -4.877552509307861
    5. 'range' → logprob: -9.50255298614502
    6. ' ' → logprob: -10.37755298614502
    7. '_range' → logprob: -11.12755298614502
    8. '_in' → logprob: -12.00255298614502
    9. '(range' → logprob: -12.50255298614502
    10. '<|end|>' → logprob: -12.50255298614502

Token 102: ' in' (ID: 306)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.31488606333732605
    2. 'range' → logprob: -1.3148860931396484
    3. ' in' → logprob: -6.439886093139648
    4. '(range' → logprob: -11.189886093139648
    5. ' ' → logprob: -12.439886093139648
    6. 'in' → logprob: -13.064886093139648
    7. '_range' → logprob: -13.439886093139648
    8. '	range' → logprob: -13.439886093139648
    9. '_' → logprob: -13.564886093139648
    10. '<|end|>' → logprob: -13.814886093139648

Token 103: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.005941716954112053
    2. 'range' → logprob: -5.130941867828369
    3. '(range' → logprob: -11.380941390991211
    4. '	range' → logprob: -14.255941390991211
    5. ' ' → logprob: -15.255941390991211
    6. '[' → logprob: -15.255941390991211
    7. '4' → logprob: -16.00594139099121
    8. '_range' → logprob: -16.25594139099121
    9. '(' → logprob: -16.25594139099121
    10. '_' → logprob: -16.38094139099121

Token 104: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007852788083255291
    2. '(range' → logprob: -4.882852554321289
    3. ' range' → logprob: -8.757852554321289
    4. ' (' → logprob: -9.757852554321289
    5. 'range' → logprob: -10.882852554321289
    6. '((' → logprob: -11.507852554321289
    7. '([' → logprob: -13.507852554321289
    8. ' ' → logprob: -14.882852554321289
    9. '(
' → logprob: -15.757852554321289
    10. ' in' → logprob: -15.882852554321289

Token 105: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.0010992534225806594
    2. '5' → logprob: -7.876099109649658
    3. '7' → logprob: -8.751099586486816
    4. '3' → logprob: -9.001099586486816
    5. ' ' → logprob: -9.126099586486816
    6. '10' → logprob: -9.251099586486816
    7. '6' → logprob: -9.751099586486816
    8. '2' → logprob: -10.001099586486816
    9. '8' → logprob: -10.251099586486816
    10. '26' → logprob: -10.626099586486816

Token 106: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.02138368785381317
    2. ']' → logprob: -3.896383762359619
    3. ')' → logprob: -7.146383762359619
    4. ' ]' → logprob: -10.271383285522461
    5. ']]' → logprob: -11.646383285522461
    6. '])' → logprob: -12.646383285522461
    7. ' )' → logprob: -12.771383285522461
    8. '}]' → logprob: -13.771383285522461
    9. ' ' → logprob: -14.146383285522461
    10. ')][' → logprob: -14.271383285522461

Token 107: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.07899411022663116
    2. 'for' → logprob: -2.578994035720825
    3. '   ' → logprob: -9.578993797302246
    4. '	for' → logprob: -11.578993797302246
    5. '    ' → logprob: -11.703993797302246
    6. ' ' → logprob: -12.203993797302246
    7. '       ' → logprob: -12.578993797302246
    8. '        ' → logprob: -12.828993797302246
    9. '           ' → logprob: -13.203993797302246
    10. '  ' → logprob: -13.953993797302246

Token 108: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.4906114935874939
    2. '_' → logprob: -0.9906114935874939
    3. ' range' → logprob: -4.490611553192139
    4. ' in' → logprob: -5.365611553192139
    5. '_range' → logprob: -7.615611553192139
    6. '_in' → logprob: -11.36561107635498
    7. 'range' → logprob: -12.36561107635498
    8. ' ' → logprob: -14.61561107635498
    9. '(range' → logprob: -15.36561107635498
    10. '_=' → logprob: -16.490612030029297

Token 109: ' in' (ID: 306)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0623759999871254
    2. 'range' → logprob: -2.812376022338867
    3. ' in' → logprob: -8.312376022338867
    4. '_' → logprob: -8.937376022338867
    5. '_range' → logprob: -11.312376022338867
    6. '(range' → logprob: -11.687376022338867
    7. ' _' → logprob: -11.687376022338867
    8. '	range' → logprob: -14.312376022338867
    9. ' ' → logprob: -14.437376022338867
    10. 'in' → logprob: -14.437376022338867

Token 110: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.16022950410842896
    2. 'range' → logprob: -1.9102294445037842
    3. '(range' → logprob: -12.660229682922363
    4. '_' → logprob: -13.785229682922363
    5. '_range' → logprob: -15.160229682922363
    6. '4' → logprob: -15.285229682922363
    7. '	range' → logprob: -15.535229682922363
    8. ' ' → logprob: -15.660229682922363
    9. '   ' → logprob: -16.285228729248047
    10. ' in' → logprob: -16.785228729248047

Token 111: '(' (ID: 7)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.39546993374824524
    2. '(' → logprob: -1.1454699039459229
    3. ' range' → logprob: -5.395470142364502
    4. '(N' → logprob: -5.895470142364502
    5. ' (' → logprob: -6.895470142364502
    6. 'range' → logprob: -8.270469665527344
    7. '((' → logprob: -13.270469665527344
    8. ' ' → logprob: -14.020469665527344
    9. '(n' → logprob: -14.395469665527344
    10. '	range' → logprob: -14.770469665527344

Token 112: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.0035581388510763645
    2. 'N' → logprob: -6.003558158874512
    3. ' ' → logprob: -7.003558158874512
    4. ' N' → logprob: -9.753558158874512
    5. '5' → logprob: -9.878558158874512
    6. '(N' → logprob: -11.316058158874512
    7. '3' → logprob: -12.003558158874512
    8. '   ' → logprob: -12.191058158874512
    9. '10' → logprob: -12.191058158874512
    10. '(' → logprob: -12.191058158874512

Token 113: ')]' (ID: 15710)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10036151856184006
    2. ')]' → logprob: -2.3503615856170654
    3. ' ]' → logprob: -9.475361824035645
    4. ')' → logprob: -9.600361824035645
    5. ']]' → logprob: -11.850361824035645
    6. '])' → logprob: -13.100361824035645
    7. '}]' → logprob: -14.850361824035645
    8. ']
' → logprob: -15.600361824035645
    9. ' ' → logprob: -15.850361824035645
    10. '()]' → logprob: -15.975361824035645

Token 114: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.10021357238292694
    2. 'for' → logprob: -2.3502135276794434
    3. '   ' → logprob: -12.475214004516602
    4. '	for' → logprob: -13.850214004516602
    5. ' ' → logprob: -14.225214004516602
    6. '    ' → logprob: -14.350214004516602
    7. ']' → logprob: -15.225214004516602
    8. '        ' → logprob: -15.475214004516602
    9. '       ' → logprob: -15.725214004516602
    10. '  ' → logprob: -16.2252140045166

Token 115: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.00020711649267468601
    2. 'range' → logprob: -8.75020694732666
    3. '_' → logprob: -10.50020694732666
    4. ' _' → logprob: -11.00020694732666
    5. ' in' → logprob: -12.62520694732666
    6. '(range' → logprob: -13.75020694732666
    7. '_range' → logprob: -17.250207901000977
    8. ' N' → logprob: -18.875207901000977
    9. '	range' → logprob: -19.000207901000977
    10. ' ' → logprob: -19.250207901000977

Token 116: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.036749593913555145
    2. 'range' → logprob: -4.161749362945557
    3. ' range' → logprob: -4.411749362945557
    4. 'in' → logprob: -5.036749362945557
    5. '_' → logprob: -6.286749362945557
    6. ' _' → logprob: -12.161749839782715
    7. '(range' → logprob: -12.911749839782715
    8. ' ' → logprob: -13.661749839782715
    9. '_range' → logprob: -13.786749839782715
    10. 's' → logprob: -14.786749839782715

Token 117: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.47410959005355835
    2. 'range' → logprob: -0.9741095900535583
    3. '(range' → logprob: -10.349109649658203
    4. '	range' → logprob: -15.099109649658203
    5. ' ' → logprob: -15.849109649658203
    6. '[' → logprob: -16.599109649658203
    7. '_range' → logprob: -17.599109649658203
    8. '(' → logprob: -17.724109649658203
    9. '.range' → logprob: -18.224109649658203
    10. ' xrange' → logprob: -18.224109649658203

Token 118: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0031988697592169046
    2. '(' → logprob: -5.753199100494385
    3. ' (' → logprob: -11.128198623657227
    4. '((' → logprob: -12.628198623657227
    5. '(n' → logprob: -13.878198623657227
    6. ' ' → logprob: -14.253198623657227
    7. '(range' → logprob: -14.253198623657227
    8. 'N' → logprob: -14.628198623657227
    9. ']' → logprob: -15.753198623657227
    10. ')' → logprob: -16.753198623657227

Token 119: ' +' (ID: 659)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0031880477908998728
    2. '+' → logprob: -6.003188133239746
    3. ')' → logprob: -7.378188133239746
    4. ' )' → logprob: -10.003188133239746
    5. ']' → logprob: -10.753188133239746
    6. ' +' → logprob: -11.253188133239746
    7. ')])' → logprob: -13.378188133239746
    8. ')]
' → logprob: -13.503188133239746
    9. ')][' → logprob: -14.128188133239746
    10. ')]

' → logprob: -14.253188133239746

Token 120: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0046334033831954
    2. ' ' → logprob: -5.37963342666626
    3. '2' → logprob: -11.254632949829102
    4. '   ' → logprob: -17.0046329498291
    5. '  ' → logprob: -17.5046329498291
    6. '0' → logprob: -17.6296329498291
    7. '7' → logprob: -17.7546329498291
    8. '```' → logprob: -18.1296329498291
    9. '3' → logprob: -18.6296329498291
    10. ' ' → logprob: -18.8796329498291

Token 121: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004755943373311311
    2. '2' → logprob: -7.7504754066467285
    3. ' ' → logprob: -10.125475883483887
    4. '3' → logprob: -12.500475883483887
    5. '7' → logprob: -14.750475883483887
    6. '4' → logprob: -15.125475883483887
    7. '5' → logprob: -15.500475883483887
    8. '10' → logprob: -16.25047492980957
    9. '```' → logprob: -16.87547492980957
    10. '   ' → logprob: -17.00047492980957

Token 122: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.3229891359806061
    2. ']' → logprob: -1.3229891061782837
    3. '])' → logprob: -4.822988986968994
    4. ')' → logprob: -6.697988986968994
    5. ')])' → logprob: -8.322989463806152
    6. '])]' → logprob: -8.947989463806152
    7. ')],' → logprob: -11.697989463806152
    8. '()]' → logprob: -11.822989463806152
    9. '`]' → logprob: -12.572989463806152
    10. '>]' → logprob: -12.947989463806152

Token 123: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 124: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06319695711135864
    2. '#' → logprob: -2.938196897506714
    3. 'dp' → logprob: -4.938197135925293
    4. ' for' → logprob: -7.813197135925293
    5. 'prev' → logprob: -8.188197135925293
    6. 'indices' → logprob: -9.188197135925293
    7. 'def' → logprob: -9.563197135925293
    8. 'i' → logprob: -10.188197135925293
    9. 'alphabet' → logprob: -10.188197135925293
    10. 'last' → logprob: -10.688197135925293

Token 125: ' part' (ID: 997)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.41708219051361084
    2. '#' → logprob: -2.1670823097229004
    3. 'for' → logprob: -3.0420823097229004
    4. ' dp' → logprob: -3.0420823097229004
    5. ' =' → logprob: -3.5420823097229004
    6. ' #' → logprob: -4.0420823097229
    7. ' for' → logprob: -4.2920823097229
    8. ']' → logprob: -4.9170823097229
    9. 'range' → logprob: -5.1670823097229
    10. ' ' → logprob: -5.2920823097229

Token 126: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.956688642501831
    2. 'from' → logprob: -1.706688642501831
    3. 'de' → logprob: -2.331688642501831
    4. ' des' → logprob: -2.331688642501831
    5. ' du' → logprob: -2.581688642501831
    6. ' from' → logprob: -3.081688642501831
    7. 'dp' → logprob: -3.581688642501831
    8. 'd' → logprob: -4.45668888092041
    9. '#' → logprob: -4.70668888092041
    10. 'for' → logprob: -4.83168888092041

Token 127: ' l' (ID: 305)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.9171923995018005
    2. 'dp' → logprob: -1.0421924591064453
    3. ' ' → logprob: -2.0421924591064453
    4. '0' → logprob: -2.6671924591064453
    5. '1' → logprob: -3.5421924591064453
    6. ' N' → logprob: -4.917192459106445
    7. '[' → logprob: -5.042192459106445
    8. ' la' → logprob: -6.542192459106445
    9. '4' → logprob: -6.917192459106445
    10. 'N' → logprob: -7.167192459106445

Token 128: ''état' (ID: 116357)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.9950484037399292
    2. '0' → logprob: -1.7450484037399292
    3. '[' → logprob: -2.1200485229492188
    4. 'e' → logprob: -2.6200485229492188
    5. 'dp' → logprob: -2.7450485229492188
    6. ''' → logprob: -2.7450485229492188
    7. ' ' → logprob: -3.2450485229492188
    8. 'a' → logprob: -3.4950485229492188
    9. ''état' → logprob: -3.9950485229492188
    10. 'i' → logprob: -4.870048522949219

Token 129: ' initial' (ID: 4871)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.21223819255828857
    2. 'dp' → logprob: -2.212238311767578
    3. ' dp' → logprob: -3.462238311767578
    4. '0' → logprob: -3.712238311767578
    5. ' [' → logprob: -4.462238311767578
    6. ' ' → logprob: -4.462238311767578
    7. 'for' → logprob: -7.212238311767578
    8. 's' → logprob: -7.712238311767578
    9. ' for' → logprob: -8.462238311767578
    10. '_' → logprob: -8.462238311767578

Token 130: ' (' (ID: 350)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0008690637187100947
    2. ' dp' → logprob: -7.250869274139404
    3. 'for' → logprob: -9.750868797302246
    4. ']' → logprob: -10.375868797302246
    5. '0' → logprob: -11.000868797302246
    6. ' for' → logprob: -11.250868797302246
    7. '
' → logprob: -11.625868797302246
    8. 'print' → logprob: -11.875868797302246
    9. '[' → logprob: -12.250868797302246
    10. '```' → logprob: -12.250868797302246

Token 131: 'auc' (ID: 11816)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.22635510563850403
    2. '0' → logprob: -1.6013550758361816
    3. 'for' → logprob: -7.226355075836182
    4. ' dp' → logprob: -8.72635555267334
    5. ' ' → logprob: -11.97635555267334
    6. ' for' → logprob: -11.97635555267334
    7. '1' → logprob: -12.22635555267334
    8. ')' → logprob: -12.22635555267334
    9. '[' → logprob: -12.22635555267334
    10. '#' → logprob: -12.35135555267334

Token 132: 'une' (ID: 2561)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.15608097612857819
    2. 'une' → logprob: -2.031080961227417
    3. ')' → logprob: -5.906081199645996
    4. 'uns' → logprob: -6.281081199645996
    5. '#' → logprob: -6.781081199645996
    6. 'n' → logprob: -6.906081199645996
    7. 'ucun' → logprob: -7.281081199645996
    8. 'ún' → logprob: -7.406081199645996
    9. 'u' → logprob: -7.406081199645996
    10. '_' → logprob: -7.531081199645996

Token 133: ' lettre' (ID: 68013)
  Prédit: 'lett'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lett' → logprob: -0.15320026874542236
    2. ' lettre' → logprob: -2.028200149536133
    3. 'ligne' → logprob: -5.903200149536133
    4. ' ' → logprob: -6.778200149536133
    5. 'chaine' → logprob: -7.153200149536133
    6. 'car' → logprob: -7.403200149536133
    7. 'le' → logprob: -7.403200149536133
    8. 'let' → logprob: -7.528200149536133
    9. 'n' → logprob: -7.653200149536133
    10. 'val' → logprob: -7.778200149536133

Token 134: ' chois' (ID: 33475)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12153942137956619
    2. ',' → logprob: -3.496539354324341
    3. 'pos' → logprob: -4.24653959274292
    4. ' chois' → logprob: -4.62153959274292
    5. 'l' → logprob: -4.99653959274292
    6. 'aj' → logprob: -5.37153959274292
    7. 's' → logprob: -5.37153959274292
    8. 'import' → logprob: -5.49653959274292
    9. 'cho' → logprob: -5.62153959274292
    10. '),' → logprob: -5.74653959274292

Token 135: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.0893770307302475
    2. 'e' → logprob: -2.464376926422119
    3. 'i' → logprob: -9.214377403259277
    4. 'ue' → logprob: -9.839377403259277
    5. ']' → logprob: -10.214377403259277
    6. ' ie' → logprob: -10.589377403259277
    7. '```' → logprob: -10.714377403259277
    8. '#' → logprob: -10.839377403259277
    9. ')' → logprob: -11.089377403259277
    10. '0' → logprob: -11.214377403259277

Token 136: ' donc' (ID: 14206)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14214497804641724
    2. 'dp' → logprob: -2.2671449184417725
    3. ',' → logprob: -3.7671449184417725
    4. '[' → logprob: -5.892145156860352
    5. ' )' → logprob: -6.767145156860352
    6. ']' → logprob: -7.892145156860352
    7. ' dp' → logprob: -8.142145156860352
    8. '])' → logprob: -8.267145156860352
    9. ' ,' → logprob: -8.392145156860352
    10. '),' → logprob: -8.642145156860352

Token 137: ' ' (ID: 220)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3663029372692108
    2. '0' → logprob: -2.741302967071533
    3. 'dp' → logprob: -3.241302967071533
    4. ' )' → logprob: -3.366302967071533
    5. ',' → logprob: -3.741302967071533
    6. 'j' → logprob: -3.991302967071533
    7. 'l' → logprob: -4.241302967071533
    8. ' toutes' → logprob: -4.366302967071533
    9. ' les' → logprob: -4.741302967071533
    10. '4' → logprob: -4.866302967071533

Token 138: '3' (ID: 18)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3910169005393982
    2. '-' → logprob: -2.766016960144043
    3. 'a' → logprob: -2.766016960144043
    4. '4' → logprob: -2.891016960144043
    5. '3' → logprob: -3.891016960144043
    6. 'tout' → logprob: -4.016016960144043
    7. 'for' → logprob: -4.141016960144043
    8. 't' → logprob: -4.141016960144043
    9. 'dp' → logprob: -4.516016960144043
    10. 'auc' → logprob: -4.516016960144043

Token 139: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.43325504660606384
    2. ' ' → logprob: -2.6832549571990967
    3. ' )' → logprob: -2.6832549571990967
    4. 'indices' → logprob: -3.4332549571990967
    5. ' indices' → logprob: -3.5582549571990967
    6. ',' → logprob: -3.6832549571990967
    7. '0' → logprob: -4.058255195617676
    8. ' fois' → logprob: -4.558255195617676
    9. ' ,' → logprob: -4.683255195617676
    10. ' au' → logprob: -4.808255195617676

Token 140: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.012515183538198471
    2. ' ' → logprob: -4.387515068054199
    3. '4' → logprob: -12.3875150680542
    4. '
' → logprob: -14.8875150680542
    5. '  ' → logprob: -16.012516021728516
    6. ',' → logprob: -16.012516021728516
    7. '#' → logprob: -16.262516021728516
    8. '

' → logprob: -16.387516021728516
    9. ' ' → logprob: -16.387516021728516
    10. '...' → logprob: -16.512516021728516

Token 141: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007974773179739714
    2. '3' → logprob: -7.625797271728516
    3. ' ,' → logprob: -8.125797271728516
    4. ')' → logprob: -11.500797271728516
    5. '4' → logprob: -13.625797271728516
    6. ' ' → logprob: -13.750797271728516
    7. ',
' → logprob: -14.500797271728516
    8. '),' → logprob: -16.250797271728516
    9. ')]' → logprob: -16.375797271728516
    10. '```' → logprob: -17.000797271728516

Token 142: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -2.7610454708337784e-05
    2. ' ' → logprob: -10.500027656555176
    3. '4' → logprob: -18.75002670288086
    4. '0' → logprob: -19.25002670288086
    5. '  ' → logprob: -19.25002670288086
    6. '   ' → logprob: -19.75002670288086
    7. '

' → logprob: -20.00002670288086
    8. '۳' → logprob: -20.31252670288086
    9. '
' → logprob: -20.68752670288086
    10. '৩' → logprob: -21.00002670288086

Token 143: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012608781456947327
    2. ')' → logprob: -5.137609004974365
    3. ')]' → logprob: -5.137609004974365
    4. ')])' → logprob: -7.762609004974365
    5. ' ,' → logprob: -8.637608528137207
    6. '])' → logprob: -9.637608528137207
    7. ']' → logprob: -10.137608528137207
    8. ')],' → logprob: -11.137608528137207
    9. '])]' → logprob: -11.137608528137207
    10. ' )' → logprob: -11.637608528137207

Token 144: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -2.3557529857498594e-05
    2. ' dp' → logprob: -11.62502384185791
    3. '
' → logprob: -12.12502384185791
    4. '```' → logprob: -12.62502384185791
    5. 'for' → logprob: -12.87502384185791
    6. '  
' → logprob: -13.75002384185791
    7. '    
' → logprob: -14.62502384185791
    8. 'print' → logprob: -15.12502384185791
    9. 'prev' → logprob: -15.37502384185791
    10. '   
' → logprob: -15.62502384185791

Token 145: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.320199877838604e-07
    2. '[N' → logprob: -15.125
    3. '0' → logprob: -16.125
    4. '```' → logprob: -19.0
    5. '\[' → logprob: -19.5
    6. ' [' → logprob: -19.75
    7. '][' → logprob: -21.0
    8. 'N' → logprob: -21.625
    9. '[n' → logprob: -21.875
    10. '1' → logprob: -21.875

Token 146: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '000' → logprob: -18.250001907348633
    4. '۰' → logprob: -18.437501907348633
    5. '```' → logprob: -18.500001907348633
    6. '1' → logprob: -18.500001907348633
    7. '[' → logprob: -18.625001907348633
    8. '#' → logprob: -18.750001907348633
    9. '   ' → logprob: -18.875001907348633
    10. '０' → logprob: -18.937501907348633

Token 147: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0036512718070298433
    2. ']' → logprob: -5.628651142120361
    3. '[' → logprob: -10.12865161895752
    4. ' ][' → logprob: -11.62865161895752
    5. '][-' → logprob: -13.87865161895752
    6. ']][' → logprob: -15.00365161895752
    7. ' ]' → logprob: -15.25365161895752
    8. '][:' → logprob: -15.37865161895752
    9. ']
' → logprob: -15.75365161895752
    10. '])' → logprob: -16.253650665283203

Token 148: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '   ' → logprob: -18.25
    4. '```' → logprob: -19.5
    5. '  ' → logprob: -19.625
    6. '۳' → logprob: -20.125
    7. '-' → logprob: -20.125
    8. '
' → logprob: -20.5
    9. '３' → logprob: -20.625
    10. '

' → logprob: -21.375

Token 149: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -9.269565634895116e-05
    2. ' ][' → logprob: -9.625092506408691
    3. ']' → logprob: -10.625092506408691
    4. ' ' → logprob: -14.000092506408691
    5. '[' → logprob: -14.375092506408691
    6. '3' → logprob: -15.250092506408691
    7. ',' → logprob: -15.625092506408691
    8. '()][' → logprob: -16.625093460083008
    9. '"][' → logprob: -16.875093460083008
    10. '  ' → logprob: -17.125093460083008

Token 150: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '۳' → logprob: -18.000001907348633
    4. '<|end|>' → logprob: -18.625001907348633
    5. '৩' → logprob: -19.000001907348633
    6. '３' → logprob: -19.250001907348633
    7. '३' → logprob: -19.875001907348633
    8. '  ' → logprob: -21.125001907348633
    9. '٣' → logprob: -21.250001907348633
    10. '<|end|>' → logprob: -21.500001907348633

Token 151: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -4.227250610711053e-05
    2. '[' → logprob: -11.000041961669922
    3. ']' → logprob: -11.250041961669922
    4. ' ][' → logprob: -11.500041961669922
    5. '3' → logprob: -13.125041961669922
    6. ''][' → logprob: -15.625041961669922
    7. '"][' → logprob: -15.750041961669922
    8. '()][' → logprob: -18.125041961669922
    9. ' ' → logprob: -18.375041961669922
    10. '```' → logprob: -18.500041961669922

Token 152: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '۳' → logprob: -18.375003814697266
    4. '৩' → logprob: -19.125003814697266
    5. '   ' → logprob: -19.375003814697266
    6. '  ' → logprob: -19.500003814697266
    7. '<|end|>' → logprob: -19.750003814697266
    8. '३' → logprob: -20.187503814697266
    9. '３' → logprob: -21.000003814697266
    10. '
' → logprob: -21.250003814697266

Token 153: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.9981420336989686e-05
    2. ']=' → logprob: -11.000020027160645
    3. ' ]' → logprob: -13.375020027160645
    4. '=' → logprob: -13.500020027160645
    5. ' =' → logprob: -17.000019073486328
    6. '1' → logprob: -17.000019073486328
    7. ')' → logprob: -17.500019073486328
    8. ']+=' → logprob: -17.625019073486328
    9. '`]' → logprob: -18.750019073486328
    10. ']
' → logprob: -18.750019073486328

Token 154: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029751067981123924
    2. ' =' → logprob: -3.5297510623931885
    3. '1' → logprob: -15.27975082397461
    4. 's' → logprob: -16.27975082397461
    5. ']' → logprob: -16.52975082397461
    6. '=True' → logprob: -17.15475082397461
    7. '＝' → logprob: -17.40475082397461
    8. '[' → logprob: -17.52975082397461
    9. '=
' → logprob: -18.02975082397461
    10. '=int' → logprob: -18.27975082397461

Token 155: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '   ' → logprob: -18.250001907348633
    4. '0' → logprob: -19.125001907348633
    5. '۱' → logprob: -19.875001907348633
    6. '```' → logprob: -20.187501907348633
    7. '  ' → logprob: -20.250001907348633
    8. '১' → logprob: -20.687501907348633
    9. '１' → logprob: -21.312501907348633
    10. '' → logprob: -21.750001907348633

Token 156: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. '   ' → logprob: -19.375
    4. '```' → logprob: -20.0
    5. '۱' → logprob: -20.125
    6. '１' → logprob: -20.375
    7. '0' → logprob: -20.75
    8. '১' → logprob: -20.9375
    9. 'int' → logprob: -20.9375
    10. '' → logprob: -21.3125

Token 157: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18046404421329498
    2. 'for' → logprob: -1.9304640293121338
    3. '\n' → logprob: -4.680464267730713
    4. ' for' → logprob: -4.805464267730713
    5. '<|end|>' → logprob: -6.680464267730713
    6. '```' → logprob: -8.430463790893555
    7. ' 
' → logprob: -8.430463790893555
    8. '
' → logprob: -8.430463790893555
    9. 'newline' → logprob: -8.555463790893555
    10. '

' → logprob: -8.805463790893555

Token 158: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03940712288022041
    2. ' for' → logprob: -3.4144070148468018
    3. '
' → logprob: -5.664407253265381
    4. '<|end|>' → logprob: -6.914407253265381
    5. '\n' → logprob: -7.164407253265381
    6. '```' → logprob: -7.789407253265381
    7. '#' → logprob: -11.039406776428223
    8. '<|end|>' → logprob: -11.414406776428223
    9. ' 
' → logprob: -11.789406776428223
    10. 'newline' → logprob: -11.789406776428223

Token 159: ' Les' (ID: 7029)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00020520923135336488
    2. ' for' → logprob: -8.500205039978027
    3. '#' → logprob: -13.875205039978027
    4. 'i' → logprob: -14.625205039978027
    5. 'n' → logprob: -16.500205993652344
    6. 'A' → logprob: -16.500205993652344
    7. 'range' → logprob: -17.125205993652344
    8. '	for' → logprob: -17.500205993652344
    9. '```' → logprob: -17.625205993652344
    10. 'def' → logprob: -18.000205993652344

Token 160: ' ' (ID: 220)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.2269710302352905
    2. ' for' → logprob: -1.8519710302352905
    3. 'letters' → logprob: -2.10197114944458
    4. 'alphabet' → logprob: -2.35197114944458
    5. ' lettres' → logprob: -2.85197114944458
    6. ' letters' → logprob: -2.97697114944458
    7. '#' → logprob: -3.22697114944458
    8. ' bases' → logprob: -3.35197114944458
    9. ' alphabet' → logprob: -3.47697114944458
    10. 'v' → logprob: -3.72697114944458

Token 161: '4' (ID: 19)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.3274749517440796
    2. 'alphabet' → logprob: -1.3274749517440796
    3. '#' → logprob: -1.5774749517440796
    4. 'letters' → logprob: -2.202475070953369
    5. 'n' → logprob: -3.202475070953369
    6. 'bases' → logprob: -3.327475070953369
    7. 'lett' → logprob: -3.452475070953369
    8. 'alph' → logprob: -4.202475070953369
    9. 'alpha' → logprob: -5.077475070953369
    10. 'chars' → logprob: -5.327475070953369

Token 162: ' lettres' (ID: 101234)
  Prédit: 'letters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letters' → logprob: -0.714158296585083
    2. 'n' → logprob: -1.589158296585083
    3. 'for' → logprob: -1.839158296585083
    4. ' for' → logprob: -3.214158296585083
    5. ' nucle' → logprob: -3.839158296585083
    6. ' lettres' → logprob: -4.089158058166504
    7. '#' → logprob: -4.339158058166504
    8. 'bases' → logprob: -4.339158058166504
    9. ' letters' → logprob: -4.464158058166504
    10. 'nu' → logprob: -5.464158058166504

Token 163: ' possibles' (ID: 97753)
  Prédit: 'letters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'letters' → logprob: -0.33262646198272705
    2. 'A' → logprob: -2.4576263427734375
    3. 'a' → logprob: -3.0826263427734375
    4. 's' → logprob: -3.3326263427734375
    5. 'alphabet' → logprob: -3.4576263427734375
    6. ' =' → logprob: -3.9576263427734375
    7. 'chars' → logprob: -4.4576263427734375
    8. ' lettres' → logprob: -4.4576263427734375
    9. 'le' → logprob: -4.7076263427734375
    10. 'n' → logprob: -5.0826263427734375

Token 164: ' sont' (ID: 5242)
  Prédit: 'letters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'letters' → logprob: -0.305276095867157
    2. 'for' → logprob: -2.4302761554718018
    3. ':' → logprob: -3.0552761554718018
    4. ' for' → logprob: -3.1802761554718018
    5. 'le' → logprob: -3.8052761554718018
    6. ' letters' → logprob: -4.430275917053223
    7. 'chars' → logprob: -4.555275917053223
    8. ' lettres' → logprob: -4.680275917053223
    9. 'alphabet' → logprob: -4.805275917053223
    10. 'A' → logprob: -5.680275917053223

Token 165: ' cod' (ID: 26163)
  Prédit: ''A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''A' → logprob: -0.9813404679298401
    2. '['' → logprob: -1.3563404083251953
    3. ' ['' → logprob: -2.7313404083251953
    4. ' for' → logprob: -2.8563404083251953
    5. 'for' → logprob: -2.8563404083251953
    6. 'A' → logprob: -2.9813404083251953
    7. ' A' → logprob: -3.3563404083251953
    8. ' '' → logprob: -3.8563404083251953
    9. ' range' → logprob: -4.106340408325195
    10. 'range' → logprob: -4.106340408325195

Token 166: 'ées' (ID: 5161)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.0457921028137207
    2. 'for' → logprob: -1.0457921028137207
    3. '=' → logprob: -2.0457921028137207
    4. 'é' → logprob: -3.0457921028137207
    5. ' for' → logprob: -3.1707921028137207
    6. '0' → logprob: -3.6707921028137207
    7. 'ées' → logprob: -4.295792102813721
    8. '[' → logprob: -4.670792102813721
    9. 'ed' → logprob: -4.795792102813721
    10. ' =' → logprob: -5.170792102813721

Token 167: ' ' (ID: 220)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11742834001779556
    2. 'for' → logprob: -3.2424283027648926
    3. '=' → logprob: -3.4924283027648926
    4. ' for' → logprob: -3.6174283027648926
    5. '0' → logprob: -4.867428302764893
    6. 'range' → logprob: -6.117428302764893
    7. ' in' → logprob: -6.742428302764893
    8. ' ' → logprob: -7.492428302764893
    9. ':' → logprob: -7.492428302764893
    10. ' range' → logprob: -7.742428302764893

Token 168: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03086989000439644
    2. 'for' → logprob: -4.280869960784912
    3. ' ' → logprob: -5.655869960784912
    4. 'en' → logprob: -5.905869960784912
    5. ' as' → logprob: -5.905869960784912
    6. 'range' → logprob: -6.155869960784912
    7. ' for' → logprob: -6.530869960784912
    8. ' en' → logprob: -6.530869960784912
    9. 'in' → logprob: -7.780869960784912
    10. 'as' → logprob: -7.905869960784912

Token 169: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19998078048229218
    2. ' ' → logprob: -1.9499807357788086
    3. '<|end|>' → logprob: -3.9499807357788086
    4. ' ,' → logprob: -4.074980735778809
    5. ' to' → logprob: -6.949980735778809
    6. '  ' → logprob: -7.949980735778809
    7. '<|end|>' → logprob: -8.074980735778809
    8. '...' → logprob: -8.824980735778809
    9. ':' → logprob: -8.949980735778809
    10. '0' → logprob: -9.074980735778809

Token 170: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011703446507453918
    2. ' ' → logprob: -6.7511701583862305
    3. '4' → logprob: -17.251171112060547
    4. ',' → logprob: -17.626171112060547
    5. '  ' → logprob: -18.376171112060547
    6. '```' → logprob: -18.876171112060547
    7. '3' → logprob: -19.001171112060547
    8. ' ,' → logprob: -19.001171112060547
    9. '   ' → logprob: -19.126171112060547
    10. '...' → logprob: -19.938671112060547

Token 171: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016643257811665535
    2. '2' → logprob: -4.266643047332764
    3. ' ,' → logprob: -6.141643047332764
    4. ' ' → logprob: -8.266643524169922
    5. ',
' → logprob: -10.891643524169922
    6. '4' → logprob: -11.016643524169922
    7. '  ' → logprob: -12.391643524169922
    8. '```' → logprob: -12.391643524169922
    9. '3' → logprob: -12.641643524169922
    10. 'import' → logprob: -12.641643524169922

Token 172: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.0126840758603066e-05
    2. ' ' → logprob: -10.125040054321289
    3. ',' → logprob: -17.50004005432129
    4. '3' → logprob: -17.87504005432129
    5. '
' → logprob: -18.37504005432129
    6. '

' → logprob: -18.87504005432129
    7. '۲' → logprob: -19.50004005432129
    8. '  ' → logprob: -19.62504005432129
    9. '```' → logprob: -20.31254005432129
    10. '...' → logprob: -20.50004005432129

Token 173: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005883048754185438
    2. 'for' → logprob: -5.88088321685791
    3. '4' → logprob: -6.88088321685791
    4. ' for' → logprob: -7.38088321685791
    5. ' ,' → logprob: -8.38088321685791
    6. ',
' → logprob: -8.50588321685791
    7. ':' → logprob: -8.63088321685791
    8. 'range' → logprob: -8.88088321685791
    9. '#' → logprob: -9.13088321685791
    10. ',#' → logprob: -9.63088321685791

Token 174: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.676292231422849e-05
    2. ' ' → logprob: -11.000017166137695
    3. 'and' → logprob: -18.875017166137695
    4. '4' → logprob: -19.250017166137695
    5. ' and' → logprob: -19.625017166137695
    6. '```' → logprob: -19.625017166137695
    7. 'or' → logprob: -20.000017166137695
    8. 'et' → logprob: -20.125017166137695
    9. ',' → logprob: -20.500017166137695
    10. '۳' → logprob: -20.625017166137695

Token 175: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7611932158470154
    2. 'for' → logprob: -1.1361932754516602
    3. ' for' → logprob: -1.7611932754516602
    4. ':' → logprob: -3.63619327545166
    5. '\n' → logprob: -5.38619327545166
    6. '<|end|>' → logprob: -5.76119327545166
    7. ',' → logprob: -6.01119327545166
    8. '' → logprob: -7.38619327545166
    9. ' 
' → logprob: -7.63619327545166
    10. '#' → logprob: -7.88619327545166

Token 176: ' classique' (ID: 76895)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.652987539768219
    2. ' for' → logprob: -0.777987539768219
    3. ':' → logprob: -4.777987480163574
    4. ' ' → logprob: -4.902987480163574
    5. ' 
' → logprob: -5.902987480163574
    6. ' :' → logprob: -7.402987480163574
    7. '
' → logprob: -8.402987480163574
    8. ':
' → logprob: -8.902987480163574
    9. ' :
' → logprob: -9.027987480163574
    10. ' and' → logprob: -9.777987480163574

Token 177: ' A' (ID: 355)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8528398275375366
    2. 'for' → logprob: -1.1028398275375366
    3. ' for' → logprob: -1.7278398275375366
    4. '<|end|>' → logprob: -3.352839946746826
    5. '\n' → logprob: -4.352839946746826
    6. ':' → logprob: -4.977839946746826
    7. ' 
' → logprob: -6.227839946746826
    8. ',' → logprob: -6.727839946746826
    9. ' ' → logprob: -6.727839946746826
    10. '' → logprob: -6.852839946746826

Token 178: 'CG' (ID: 17879)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.2495753765106201
    2. 'for' → logprob: -1.6245753765106201
    3. ' for' → logprob: -1.9995753765106201
    4. 'C' → logprob: -2.24957537651062
    5. 'G' → logprob: -2.49957537651062
    6. ',' → logprob: -2.49957537651062
    7. '=' → logprob: -3.87457537651062
    8. '   ' → logprob: -4.124575614929199
    9. 'CG' → logprob: -4.249575614929199
    10. 'T' → logprob: -4.249575614929199

Token 179: 'T' (ID: 51)
  Prédit: 'T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.00035143180866725743
    2. 't' → logprob: -8.000351905822754
    3. '<|end|>' → logprob: -12.000351905822754
    4. 'import' → logprob: -13.125351905822754
    5. '=' → logprob: -13.375351905822754
    6. '4' → logprob: -14.375351905822754
    7. '['' → logprob: -14.500351905822754
    8. 'from' → logprob: -14.500351905822754
    9. '[' → logprob: -14.500351905822754
    10. ' T' → logprob: -14.625351905822754

Token 180: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.074791319668293
    2. '<|end|>' → logprob: -3.699791431427002
    3. '\n' → logprob: -3.824791431427002
    4. 'for' → logprob: -4.449791431427002
    5. ' for' → logprob: -4.824791431427002
    6. ' 
' → logprob: -6.324791431427002
    7. '  
' → logprob: -6.699791431427002
    8. '' → logprob: -6.824791431427002
    9. '

' → logprob: -8.449790954589844
    10. ':' → logprob: -8.449790954589844

Token 181: 'for' (ID: 1938)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7221492528915405
    2. 'for' → logprob: -1.4721492528915405
    3. '
' → logprob: -2.09714937210083
    4. '\n' → logprob: -2.09714937210083
    5. ':' → logprob: -3.59714937210083
    6. ' 
' → logprob: -5.34714937210083
    7. 'newline' → logprob: -6.59714937210083
    8. '' → logprob: -6.72214937210083
    9. '<|end|>' → logprob: -6.72214937210083
    10. ':
' → logprob: -7.09714937210083

Token 182: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.27575406432151794
    2. ' length' → logprob: -1.7757540941238403
    3. 'i' → logprob: -3.150753974914551
    4. ' n' → logprob: -4.025753974914551
    5. ' pos' → logprob: -5.400753974914551
    6. 'n' → logprob: -6.025753974914551
    7. 'length' → logprob: -6.150753974914551
    8. ' l' → logprob: -7.150753974914551
    9. 'l' → logprob: -8.52575397491455
    10. 'pos' → logprob: -8.65075397491455

Token 183: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016039295122027397
    2. 'in' → logprob: -4.1410393714904785
    3. ' ' → logprob: -12.51603889465332
    4. '+' → logprob: -14.76603889465332
    5. '```' → logprob: -15.26603889465332
    6. '	in' → logprob: -15.39103889465332
    7. 'In' → logprob: -16.26603889465332
    8. 'range' → logprob: -16.51603889465332
    9. ' ' → logprob: -16.51603889465332
    10. '1' → logprob: -17.01603889465332

Token 184: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.47407805919647217
    2. ' range' → logprob: -0.9740780591964722
    3. '(range' → logprob: -15.099078178405762
    4. '	range' → logprob: -15.099078178405762
    5. '```' → logprob: -15.974078178405762
    6. ' ' → logprob: -15.974078178405762
    7. ' xrange' → logprob: -16.099077224731445
    8. 'rang' → logprob: -17.349077224731445
    9. 'ange' → logprob: -17.724077224731445
    10. ')' → logprob: -17.974077224731445

Token 185: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.201422318816185
    2. '(N' → logprob: -1.7014223337173462
    3. ' (' → logprob: -12.076422691345215
    4. '(n' → logprob: -13.451422691345215
    5. '1' → logprob: -13.951422691345215
    6. 'N' → logprob: -14.576422691345215
    7. '(
' → logprob: -14.951422691345215
    8. ' ' → logprob: -15.701422691345215
    9. '(len' → logprob: -17.4514217376709
    10. ' N' → logprob: -17.5764217376709

Token 186: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007284900173544884
    2. ' ):' → logprob: -5.007285118103027
    3. '):
' → logprob: -7.507285118103027
    4. ')' → logprob: -11.632285118103027
    5. '+' → logprob: -12.257285118103027
    6. ':' → logprob: -12.507285118103027
    7. ' ):
' → logprob: -13.632285118103027
    8. '):
' → logprob: -14.257285118103027
    9. ' :' → logprob: -15.132285118103027
    10. ']:' → logprob: -15.882285118103027

Token 187: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7096366882324219
    2. ' for' → logprob: -0.7096366882324219
    3. 'for' → logprob: -4.209636688232422
    4. '	for' → logprob: -7.709636688232422
    5. '    
' → logprob: -8.209636688232422
    6. ' ' → logprob: -8.209636688232422
    7. '   ' → logprob: -8.834636688232422
    8. '    ' → logprob: -9.584636688232422
    9. '```' → logprob: -9.709636688232422
    10. ',' → logprob: -10.334636688232422

Token 188: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.5767388939857483
    2. ' for' → logprob: -0.8267388939857483
    3. '   ' → logprob: -7.2017388343811035
    4. ' ' → logprob: -10.451739311218262
    5. '    ' → logprob: -11.451739311218262
    6. '	for' → logprob: -11.576739311218262
    7. '    
' → logprob: -13.076739311218262
    8. '
' → logprob: -14.326739311218262
    9. ' 
' → logprob: -14.701739311218262
    10. '```' → logprob: -14.951739311218262

Token 189: ' j' (ID: 441)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.557300329208374
    2. 'j' → logprob: -1.557300329208374
    3. 'x' → logprob: -2.682300329208374
    4. 'p' → logprob: -3.057300329208374
    5. 'l' → logprob: -3.432300329208374
    6. 'c' → logprob: -3.932300329208374
    7. 'prev' → logprob: -4.807300567626953
    8. 'b' → logprob: -4.807300567626953
    9. 'h' → logprob: -5.057300567626953
    10. 'k' → logprob: -5.307300567626953

Token 190: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026314932852983475
    2. 'in' → logprob: -3.6513149738311768
    3. ' ' → logprob: -13.151314735412598
    4. '1' → logprob: -13.526314735412598
    5. 'range' → logprob: -13.526314735412598
    6. '4' → logprob: -13.651314735412598
    7. '3' → logprob: -13.776314735412598
    8. '0' → logprob: -13.901314735412598
    9. 'In' → logprob: -14.026314735412598
    10. '   ' → logprob: -14.026314735412598

Token 191: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00022713904036208987
    2. ' range' → logprob: -8.500226974487305
    3. '4' → logprob: -10.875226974487305
    4. '(' → logprob: -12.750226974487305
    5. '(range' → logprob: -13.500226974487305
    6. '[' → logprob: -15.250226974487305
    7. '3' → logprob: -17.375226974487305
    8. '0' → logprob: -18.750226974487305
    9. ' ' → logprob: -19.250226974487305
    10. '   ' → logprob: -19.375226974487305

Token 192: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.45848218582978e-06
    2. '4' → logprob: -13.25000286102295
    3. 'range' → logprob: -15.12500286102295
    4. ' (' → logprob: -15.37500286102295
    5. '(range' → logprob: -15.87500286102295
    6. '((' → logprob: -16.750001907348633
    7. ' ' → logprob: -17.375001907348633
    8. '(-' → logprob: -18.375001907348633
    9. '(
' → logprob: -18.625001907348633
    10. ' range' → logprob: -19.250001907348633

Token 193: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -14.375000953674316
    3. '5' → logprob: -15.500000953674316
    4. '(' → logprob: -15.750000953674316
    5. '3' → logprob: -15.750000953674316
    6. 'range' → logprob: -16.625001907348633
    7. '

' → logprob: -18.375001907348633
    8. '   ' → logprob: -18.500001907348633
    9. '```' → logprob: -18.875001907348633
    10. '0' → logprob: -19.000001907348633

Token 194: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.314940869808197
    2. '):' → logprob: -1.3149409294128418
    3. ':' → logprob: -7.189940929412842
    4. '   ' → logprob: -7.564940929412842
    5. ':
' → logprob: -9.314940452575684
    6. 'for' → logprob: -9.564940452575684
    7. '+' → logprob: -9.814940452575684
    8. ')' → logprob: -10.314940452575684
    9. '4' → logprob: -10.564940452575684
    10. ',' → logprob: -10.689940452575684

Token 195: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2868335247039795
    2. ' for' → logprob: -1.5368335247039795
    3. 'for' → logprob: -3.4118335247039795
    4. '   ' → logprob: -7.036833763122559
    5. '	for' → logprob: -8.286833763122559
    6. '<|end|>' → logprob: -9.036833763122559
    7. '	   ' → logprob: -10.286833763122559
    8. '	' → logprob: -10.786833763122559
    9. ' ' → logprob: -11.911833763122559
    10. ',' → logprob: -13.161833763122559

Token 196: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.07989092171192169
    2. ' for' → logprob: -2.5798909664154053
    3. '           ' → logprob: -7.704890727996826
    4. '       ' → logprob: -7.954890727996826
    5. '   ' → logprob: -8.579891204833984
    6. '	for' → logprob: -11.954891204833984
    7. ' ' → logprob: -12.329891204833984
    8. '               ' → logprob: -15.954891204833984
    9. '	   ' → logprob: -16.329891204833984
    10. '  ' → logprob: -17.329891204833984

Token 197: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.001287140417844057
    2. ' k' → logprob: -6.75128698348999
    3. 'l' → logprob: -9.251287460327148
    4. '   ' → logprob: -12.126287460327148
    5. ' ' → logprob: -12.501287460327148
    6. 'x' → logprob: -13.501287460327148
    7. 'h' → logprob: -13.626287460327148
    8. 'm' → logprob: -13.876287460327148
    9. 'p' → logprob: -14.001287460327148
    10. 'g' → logprob: -14.376287460327148

Token 198: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008619419299066067
    2. 'in' → logprob: -4.75861930847168
    3. 'range' → logprob: -13.25861930847168
    4. ' ' → logprob: -13.63361930847168
    5. 'import' → logprob: -14.13361930847168
    6. '   ' → logprob: -14.75861930847168
    7. '1' → logprob: -15.75861930847168
    8. '```' → logprob: -16.25861930847168
    9. '4' → logprob: -16.50861930847168
    10. '  ' → logprob: -16.88361930847168

Token 199: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0005542247672565281
    2. ' range' → logprob: -7.500554084777832
    3. '(range' → logprob: -13.750554084777832
    4. '4' → logprob: -16.00055503845215
    5. '   ' → logprob: -19.00055503845215
    6. '(' → logprob: -19.62555503845215
    7. 'ange' → logprob: -20.37555503845215
    8. ' ' → logprob: -20.50055503845215
    9. '	range' → logprob: -21.12555503845215
    10. '[' → logprob: -22.00055503845215

Token 200: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.146429223008454e-05
    2. 'range' → logprob: -10.12506103515625
    3. ' (' → logprob: -11.62506103515625
    4. ' range' → logprob: -12.00006103515625
    5. '4' → logprob: -12.25006103515625
    6. '(range' → logprob: -14.50006103515625
    7. '       ' → logprob: -14.75006103515625
    8. '           ' → logprob: -15.62506103515625
    9. 'for' → logprob: -15.87506103515625
    10. '   ' → logprob: -16.37506103515625

Token 201: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -13.375001907348633
    3. '   ' → logprob: -16.500001907348633
    4. 'range' → logprob: -16.625001907348633
    5. '3' → logprob: -17.125001907348633
    6. ')' → logprob: -18.500001907348633
    7. '       ' → logprob: -18.750001907348633
    8. '(' → logprob: -18.875001907348633
    9. 'for' → logprob: -19.000001907348633
    10. '           ' → logprob: -19.500001907348633

Token 202: '):
' (ID: 1883)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06326097995042801
    2. '):
' → logprob: -3.563261032104492
    3. ':
' → logprob: -3.688261032104492
    4. '):' → logprob: -5.063261032104492
    5. '           ' → logprob: -6.688261032104492
    6. '       ' → logprob: -8.563261032104492
    7. ',' → logprob: -9.813261032104492
    8. '():
' → logprob: -10.438261032104492
    9. '   ' → logprob: -10.688261032104492
    10. ' :' → logprob: -10.813261032104492

Token 203: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -8.180258191714529e-06
    2. ' for' → logprob: -12.125008583068848
    3. 'for' → logprob: -13.750008583068848
    4. '	       ' → logprob: -14.250008583068848
    5. '               ' → logprob: -15.750008583068848
    6. '          ' → logprob: -15.750008583068848
    7. '		' → logprob: -15.875008583068848
    8. '         ' → logprob: -16.12500762939453
    9. '       ' → logprob: -16.25000762939453
    10. '<|end|>' → logprob: -16.37500762939453

Token 204: ' for' (ID: 395)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5553110837936401
    2. ' for' → logprob: -1.4303110837936401
    3. 'for' (adapté à ' for') → logprob: -1.6803110837936401
    4. '           ' → logprob: -7.68031120300293
    5. '       ' → logprob: -10.05531120300293
    6. '	for' → logprob: -10.93031120300293
    7. '			' → logprob: -11.93031120300293
    8. '```' → logprob: -11.93031120300293
    9. '<|end|>' → logprob: -12.55531120300293
    10. '                       ' → logprob: -13.05531120300293

Token 205: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.07037173956632614
    2. ' l' → logprob: -2.695371627807617
    3. 'm' → logprob: -8.070371627807617
    4. ' m' → logprob: -9.945371627807617
    5. ' ' → logprob: -10.695371627807617
    6. 'h' → logprob: -11.820371627807617
    7. 't' → logprob: -11.820371627807617
    8. '   ' → logprob: -11.945371627807617
    9. 'x' → logprob: -12.320371627807617
    10. 'r' → logprob: -12.570371627807617

Token 206: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005240514408797026
    2. 'in' → logprob: -5.255240440368652
    3. ' ' → logprob: -12.755240440368652
    4. '<|end|>' → logprob: -14.005240440368652
    5. 'range' → logprob: -14.255240440368652
    6. '   ' → logprob: -14.380240440368652
    7. '	in' → logprob: -14.880240440368652
    8. 'import' → logprob: -14.880240440368652
    9. '    ' → logprob: -15.255240440368652
    10. '  ' → logprob: -15.880240440368652

Token 207: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00891259778290987
    2. ' range' → logprob: -4.758912563323975
    3. '(range' → logprob: -8.133913040161133
    4. '(' → logprob: -12.383913040161133
    5. 'ange' → logprob: -15.883913040161133
    6. '	range' → logprob: -16.383913040161133
    7. '4' → logprob: -16.883913040161133
    8. '[' → logprob: -17.008913040161133
    9. 'in' → logprob: -17.883913040161133
    10. 'for' → logprob: -18.758913040161133

Token 208: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.117345684382599e-05
    2. ' (' → logprob: -11.250020980834961
    3. 'range' → logprob: -12.375020980834961
    4. '4' → logprob: -12.750020980834961
    5. ' range' → logprob: -14.625020980834961
    6. ' in' → logprob: -15.500020980834961
    7. 'in' → logprob: -16.00002098083496
    8. '(range' → logprob: -16.00002098083496
    9. '           ' → logprob: -16.75002098083496
    10. ' ' → logprob: -16.75002098083496

Token 209: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -2.2842308680992573e-05
    2. ' ' → logprob: -10.750022888183594
    3. '3' → logprob: -14.000022888183594
    4. ')' → logprob: -15.375022888183594
    5. '   ' → logprob: -15.625022888183594
    6. '           ' → logprob: -17.375022888183594
    7. '(' → logprob: -17.437522888183594
    8. '  ' → logprob: -18.125022888183594
    9. '       ' → logprob: -18.437522888183594
    10. '         ' → logprob: -18.562522888183594

Token 210: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.15349264442920685
    2. ':' → logprob: -2.1534926891326904
    3. '):
' → logprob: -3.6534926891326904
    4. ':
' → logprob: -9.02849292755127
    5. ']:' → logprob: -9.52849292755127
    6. '           ' → logprob: -9.90349292755127
    7. '               ' → logprob: -10.90349292755127
    8. ')' → logprob: -11.40349292755127
    9. '):
' → logprob: -11.65349292755127
    10. '       ' → logprob: -11.90349292755127

Token 211: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002103155944496393
    2. ' if' → logprob: -7.002103328704834
    3. ' for' → logprob: -7.127103328704834
    4. '           ' → logprob: -8.502102851867676
    5. 'if' → logprob: -9.752102851867676
    6. 'for' → logprob: -9.877102851867676
    7. '   ' → logprob: -10.502102851867676
    8. '                   ' → logprob: -11.627102851867676
    9. '       ' → logprob: -11.752102851867676
    10. ' next' → logprob: -11.877102851867676

Token 212: ' now' (ID: 1954)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12961821258068085
    2. ' for' → logprob: -2.1296181678771973
    3. '                   ' → logprob: -6.629618167877197
    4. '   ' → logprob: -7.004618167877197
    5. 'if' → logprob: -8.379618644714355
    6. '               ' → logprob: -9.004618644714355
    7. ' if' → logprob: -10.129618644714355
    8. '                       ' → logprob: -10.754618644714355
    9. ' ' → logprob: -11.629618644714355
    10. '                               ' → logprob: -11.754618644714355

Token 213: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2521653473377228
    2. '=' → logprob: -1.5021653175354004
    3. '_' → logprob: -9.752165794372559
    4. '_val' → logprob: -9.752165794372559
    5. '_count' → logprob: -10.377165794372559
    6. ':' → logprob: -10.627165794372559
    7. '_=' → logprob: -10.752165794372559
    8. ' ' → logprob: -12.002165794372559
    9. 'count' → logprob: -12.377165794372559
    10. '=count' → logprob: -12.627165794372559

Token 214: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0021874953527003527
    2. ' dp' → logprob: -6.127187728881836
    3. '(dp' → logprob: -13.627187728881836
    4. '	dp' → logprob: -14.502187728881836
    5. '   ' → logprob: -15.127187728881836
    6. ' ' → logprob: -15.627187728881836
    7. '           ' → logprob: -16.752187728881836
    8. '               ' → logprob: -17.502187728881836
    9. ' ' → logprob: -17.627187728881836
    10. 'd' → logprob: -17.627187728881836

Token 215: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: 0.0
    2. 'i' → logprob: -17.5
    3. '```' → logprob: -18.0
    4. ' [' → logprob: -18.5
    5. '   ' → logprob: -18.5
    6. '[' → logprob: -18.75
    7. '[I' → logprob: -18.875
    8. '[j' → logprob: -19.5
    9. '\[' → logprob: -20.625
    10. '
' → logprob: -20.875

Token 216: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0013892814749851823
    2. '[j' → logprob: -6.626389503479004
    3. ' ][' → logprob: -9.876389503479004
    4. ']' → logprob: -12.376389503479004
    5. ' ' → logprob: -13.751389503479004
    6. '"][' → logprob: -13.876389503479004
    7. '}[' → logprob: -14.001389503479004
    8. ' [' → logprob: -14.001389503479004
    9. '[' → logprob: -14.376389503479004
    10. ''][' → logprob: -14.376389503479004

Token 217: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.282920129597187e-05
    2. ' j' → logprob: -11.375012397766113
    3. '[j' → logprob: -13.625012397766113
    4. '   ' → logprob: -17.62501335144043
    5. '	j' → logprob: -18.12501335144043
    6. '][' → logprob: -18.37501335144043
    7. '
' → logprob: -18.50001335144043
    8. ' ' → logprob: -19.50001335144043
    9. ',j' → logprob: -20.25001335144043
    10. ']' → logprob: -20.62501335144043

Token 218: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00010199354437645525
    2. '[k' → logprob: -9.750102043151855
    3. ' ][' → logprob: -10.375102043151855
    4. ']' → logprob: -11.500102043151855
    5. 'k' → logprob: -13.500102043151855
    6. '"][' → logprob: -15.500102043151855
    7. '[' → logprob: -16.00010108947754
    8. ' [' → logprob: -16.00010108947754
    9. '[l' → logprob: -16.25010108947754
    10. ''][' → logprob: -16.25010108947754

Token 219: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -7.896309739408025e-07
    2. ' k' → logprob: -14.125000953674316
    3. 'l' → logprob: -17.25
    4. 'kl' → logprob: -18.375
    5. ' ' → logprob: -18.875
    6. '	k' → logprob: -19.25
    7. '[k' → logprob: -20.25
    8. '
' → logprob: -20.625
    9. '   ' → logprob: -20.875
    10. '{k' → logprob: -21.125

Token 220: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -9.186122770188376e-05
    2. '[l' → logprob: -9.375091552734375
    3. ' ][' → logprob: -12.625091552734375
    4. ']' → logprob: -12.750091552734375
    5. 'l' → logprob: -14.625091552734375
    6. '"][' → logprob: -16.375091552734375
    7. '[' → logprob: -16.625091552734375
    8. ''][' → logprob: -16.625091552734375
    9. '	l' → logprob: -17.875091552734375
    10. '```' → logprob: -18.000091552734375

Token 221: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -2.2200749754119897e-06
    2. ' l' → logprob: -13.125001907348633
    3. '1' → logprob: -16.750001907348633
    4. '   ' → logprob: -17.250001907348633
    5. ' ' → logprob: -17.750001907348633
    6. '	l' → logprob: -17.750001907348633
    7. ']' → logprob: -18.125001907348633
    8. '0' → logprob: -18.250001907348633
    9. '```' → logprob: -18.875001907348633
    10. ')' → logprob: -19.125001907348633

Token 222: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003921076189726591
    2. ']
' → logprob: -5.753921031951904
    3. ']%' → logprob: -7.628921031951904
    4. '%' → logprob: -9.003921508789062
    5. ' ]' → logprob: -9.753921508789062
    6. 'for' → logprob: -10.753921508789062
    7. '
' → logprob: -11.003921508789062
    8. '               ' → logprob: -12.003921508789062
    9. '                   ' → logprob: -12.253921508789062
    10. 'if' → logprob: -12.253921508789062

Token 223: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0011801084037870169
    2. ' if' → logprob: -7.626180171966553
    3. '<|end|>' → logprob: -8.376179695129395
    4. '                ' → logprob: -8.626179695129395
    5. 'if' → logprob: -9.251179695129395
    6. '			' → logprob: -10.001179695129395
    7. ' ' → logprob: -10.251179695129395
    8. '                   ' → logprob: -10.751179695129395
    9. '                
' → logprob: -11.001179695129395
    10. '              ' → logprob: -11.001179695129395

Token 224: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.01935708522796631
    2. ' if' → logprob: -4.019357204437256
    3. '               ' → logprob: -7.019357204437256
    4. 'for' → logprob: -8.144356727600098
    5. '                   ' → logprob: -11.269356727600098
    6. ' for' → logprob: -11.894356727600098
    7. '                ' → logprob: -14.144356727600098
    8. '                       ' → logprob: -14.644356727600098
    9. '                
' → logprob: -15.394356727600098
    10. '                               ' → logprob: -15.769356727600098

Token 225: ' not' (ID: 625)
  Prédit: ' now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' now' → logprob: -0.19339054822921753
    2. 'now' → logprob: -1.9433906078338623
    3. ' not' → logprob: -3.4433906078338623
    4. 'not' → logprob: -7.318390369415283
    5. '	now' → logprob: -13.568390846252441
    6. '[now' → logprob: -13.943390846252441
    7. '(now' → logprob: -15.318390846252441
    8. ' maintenant' → logprob: -15.568390846252441
    9. ' ' → logprob: -15.943390846252441
    10. ' ' → logprob: -16.068389892578125

Token 226: ' now' (ID: 1954)
  Prédit: ' now'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' now' → logprob: -0.020545274019241333
    2. 'now' → logprob: -3.895545244216919
    3. '	now' → logprob: -13.64554500579834
    4. ' ' → logprob: -14.14554500579834
    5. '(now' → logprob: -14.39554500579834
    6. '[now' → logprob: -14.39554500579834
    7. ' ' → logprob: -16.020545959472656
    8. ' not' → logprob: -16.395545959472656
    9. '_now' → logprob: -17.270545959472656
    10. '0' → logprob: -17.270545959472656

Token 227: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00019662656995933503
    2. ' :' → logprob: -9.37519645690918
    3. 'continue' → logprob: -10.00019645690918
    4. ':
' → logprob: -10.62519645690918
    5. ' continue' → logprob: -11.00019645690918
    6. ':return' → logprob: -11.50019645690918
    7. '=' → logprob: -11.62519645690918
    8. '==' → logprob: -12.87519645690918
    9. '	continue' → logprob: -13.62519645690918
    10. '):' → logprob: -14.62519645690918

Token 228: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00784202478826046
    2. ' continue' → logprob: -4.882842063903809
    3. 'continue' → logprob: -8.757842063903809
    4. '               ' → logprob: -11.132842063903809
    5. '                       ' → logprob: -11.507842063903809
    6. '		           ' → logprob: -11.632842063903809
    7. '	continue' → logprob: -11.632842063903809
    8. '				' → logprob: -12.007842063903809
    9. '   ' → logprob: -12.257842063903809
    10. ' continues' → logprob: -12.382842063903809

Token 229: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.5139952301979065
    2. ' continue' → logprob: -1.0139951705932617
    3. '                   ' → logprob: -3.2639951705932617
    4. '                       ' → logprob: -7.763995170593262
    5. '	continue' → logprob: -8.138995170593262
    6. '               ' → logprob: -9.263995170593262
    7. '_continue' → logprob: -10.138995170593262
    8. '   ' → logprob: -11.263995170593262
    9. '
' → logprob: -11.638995170593262
    10. '				' → logprob: -12.638995170593262

Token 230: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01906965859234333
    2. ' for' → logprob: -4.394069671630859
    3. '                
' → logprob: -5.519069671630859
    4. 'for' → logprob: -6.894069671630859
    5. '   ' → logprob: -7.394069671630859
    6. '                ' → logprob: -7.894069671630859
    7. '                   ' → logprob: -8.89406967163086
    8. '       ' → logprob: -9.64406967163086
    9. '    
' → logprob: -9.89406967163086
    10. '                    
' → logprob: -10.26906967163086

Token 231: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5168464779853821
    2. ' for' → logprob: -1.1418464183807373
    3. 'for' → logprob: -2.5168464183807373
    4. '   ' → logprob: -6.391846656799316
    5. '                
' → logprob: -6.641846656799316
    6. '                ' → logprob: -8.266846656799316
    7. '                   ' → logprob: -8.641846656799316
    8. '	for' → logprob: -9.641846656799316
    9. '                    
' → logprob: -10.641846656799316
    10. '       ' → logprob: -10.891846656799316

Token 232: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.006754917558282614
    2. ' for' → logprob: -5.0067548751831055
    3. '               ' → logprob: -10.256754875183105
    4. '	for' → logprob: -12.881754875183105
    5. '   ' → logprob: -14.006754875183105
    6. '                   ' → logprob: -14.381754875183105
    7. '                
' → logprob: -15.256754875183105
    8. '                ' → logprob: -16.506755828857422
    9. '           ' → logprob: -17.131755828857422
    10. ' ' → logprob: -17.131755828857422

Token 233: ' a' (ID: 261)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.12630999088287354
    2. 'c' → logprob: -2.876309871673584
    3. 'a' → logprob: -3.376309871673584
    4. 'x' → logprob: -3.751309871673584
    5. 'd' → logprob: -7.501309871673584
    6. 'n' → logprob: -7.626309871673584
    7. 'ch' → logprob: -7.751309871673584
    8. ' m' → logprob: -7.751309871673584
    9. 'w' → logprob: -8.001310348510742
    10. 'o' → logprob: -8.001310348510742

Token 234: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008619658648967743
    2. 'in' → logprob: -4.758619785308838
    3. ' ' → logprob: -13.00861930847168
    4. '<|end|>' → logprob: -13.38361930847168
    5. 'In' → logprob: -15.25861930847168
    6. '	in' → logprob: -15.50861930847168
    7. 'range' → logprob: -16.00861930847168
    8. 's' → logprob: -16.00861930847168
    9. '_in' → logprob: -16.13361930847168
    10. '```' → logprob: -16.50861930847168

Token 235: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0031781906727701426
    2. ' range' → logprob: -5.753178119659424
    3. '0' → logprob: -15.378178596496582
    4. '[' → logprob: -16.128177642822266
    5. '(range' → logprob: -16.128177642822266
    6. '4' → logprob: -17.503177642822266
    7. '	range' → logprob: -17.878177642822266
    8. '(' → logprob: -18.253177642822266
    9. '   ' → logprob: -18.378177642822266
    10. ' ' → logprob: -19.628177642822266

Token 236: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07889584451913834
    2. '4' → logprob: -2.5788958072662354
    3. '(
' → logprob: -12.578895568847656
    4. '   ' → logprob: -13.203895568847656
    5. ' ' → logprob: -15.078895568847656
    6. '{' → logprob: -16.453895568847656
    7. ' (' → logprob: -16.578895568847656
    8. '               ' → logprob: -16.828895568847656
    9. '```' → logprob: -16.828895568847656
    10. '                   ' → logprob: -17.328895568847656

Token 237: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -2.2200749754119897e-06
    2. ' ' → logprob: -13.125001907348633
    3. '   ' → logprob: -16.500001907348633
    4. ')' → logprob: -17.875001907348633
    5. '```' → logprob: -17.875001907348633
    6. '４' → logprob: -18.875001907348633
    7. '۴' → logprob: -19.000001907348633
    8. '৪' → logprob: -19.250001907348633
    9. '' → logprob: -19.312501907348633
    10. '٤' → logprob: -19.375001907348633

Token 238: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.011188228614628315
    2. '):
' → logprob: -4.51118803024292
    3. ')' → logprob: -9.886188507080078
    4. ' ):' → logprob: -10.136188507080078
    5. ':' → logprob: -10.761188507080078
    6. '):
' → logprob: -11.386188507080078
    7. '):

' → logprob: -11.386188507080078
    8. '<|end|>' → logprob: -14.136188507080078
    9. '                   ' → logprob: -14.261188507080078
    10. '}:' → logprob: -14.261188507080078

Token 239: ' ' (ID: 220)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.4102664291858673
    2. '#' → logprob: -1.160266399383545
    3. ' if' → logprob: -5.285266399383545
    4. 'if' → logprob: -5.410266399383545
    5. '               ' → logprob: -5.535266399383545
    6. ' #' → logprob: -5.535266399383545
    7. '   ' → logprob: -6.785266399383545
    8. '                               ' → logprob: -7.160266399383545
    9. '                           ' → logprob: -7.160266399383545
    10. '                       ' → logprob: -7.285266399383545

Token 240: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6563035845756531
    2. 'if' → logprob: -1.2813036441802979
    3. '                   ' → logprob: -1.6563036441802979
    4. ' if' → logprob: -4.781303405761719
    5. ' #' → logprob: -5.906303405761719
    6. '               ' → logprob: -7.906303405761719
    7. '                       ' → logprob: -8.281303405761719
    8. 'next' → logprob: -8.406303405761719
    9. '                               ' → logprob: -8.656303405761719
    10. '                    
' → logprob: -8.781303405761719

Token 241: ' Nouvelle' (ID: 113786)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.05123415216803551
    2. 'if' → logprob: -4.051234245300293
    3. ' #' → logprob: -4.301234245300293
    4. '                   ' → logprob: -4.426234245300293
    5. ' if' → logprob: -6.176234245300293
    6. '                               ' → logprob: -6.301234245300293
    7. '   ' → logprob: -6.676234245300293
    8. '                                   ' → logprob: -8.176234245300293
    9. '                       ' → logprob: -8.426234245300293
    10. '               ' → logprob: -8.551234245300293

Token 242: ' lettre' (ID: 68013)
  Prédit: 'lett'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lett' → logprob: -0.12594272196292877
    2. 'letter' → logprob: -2.8759427070617676
    3. ' lettre' → logprob: -2.8759427070617676
    4. 'let' → logprob: -6.000942707061768
    5. 'le' → logprob: -7.125942707061768
    6. '   ' → logprob: -7.750942707061768
    7. 'Let' → logprob: -8.000943183898926
    8. 'for' → logprob: -8.625943183898926
    9. ' letter' → logprob: -8.875943183898926
    10. ' let' → logprob: -9.000943183898926

Token 243: ' à' (ID: 1221)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.3545304834842682
    2. ':' → logprob: -2.1045305728912354
    3. '<|end|>' → logprob: -2.1045305728912354
    4. '<|end|>' → logprob: -4.479530334472656
    5. '                    
' → logprob: -4.729530334472656
    6. '                    ' → logprob: -4.979530334472656
    7. '               ' → logprob: -5.354530334472656
    8. '                ' → logprob: -5.354530334472656
    9. ' :' → logprob: -6.354530334472656
    10. '                       ' → logprob: -6.479530334472656

Token 244: ' ajouter' (ID: 78457)
  Prédit: 'aj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aj' → logprob: -0.14941948652267456
    2. 'placer' → logprob: -2.5244195461273193
    3. 'cho' → logprob: -2.8994195461273193
    4. 'prendre' → logprob: -6.39941930770874
    5. 'mettre' → logprob: -7.02441930770874
    6. 'ins' → logprob: -8.149419784545898
    7. ' ajouter' → logprob: -8.399419784545898
    8. ' choisir' → logprob: -9.274419784545898
    9. 'tester' → logprob: -9.524419784545898
    10. 'append' → logprob: -9.774419784545898

Token 245: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5845717787742615
    2. ':' → logprob: -0.9595717787742615
    3. '<|end|>' → logprob: -3.7095718383789062
    4. '               ' → logprob: -5.209571838378906
    5. ' :' → logprob: -5.459571838378906
    6. '                    
' → logprob: -5.709571838378906
    7. '<|end|>' → logprob: -5.834571838378906
    8. '                       ' → logprob: -5.834571838378906
    9. ':
' → logprob: -5.959571838378906
    10. '                ' → logprob: -6.084571838378906

Token 246: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.027524108067154884
    2. '#' → logprob: -4.902523994445801
    3. '               ' → logprob: -5.277523994445801
    4. '                    ' → logprob: -5.652523994445801
    5. '                ' → logprob: -6.027523994445801
    6. '                               ' → logprob: -6.402523994445801
    7. '                    
' → logprob: -6.652523994445801
    8. '                       ' → logprob: -6.777523994445801
    9. ' if' → logprob: -7.152523994445801
    10. '                           ' → logprob: -7.277523994445801

Token 247: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6153168082237244
    2. '#' (adapté à ' #') → logprob: -0.8653168082237244
    3. ' if' → logprob: -3.615316867828369
    4. '                   ' → logprob: -5.115316867828369
    5. ' #' → logprob: -5.865316867828369
    6. '                       ' → logprob: -6.365316867828369
    7. '                               ' → logprob: -8.115316390991211
    8. '                        
' → logprob: -8.240316390991211
    9. '                           ' → logprob: -8.740316390991211
    10. '                    
' → logprob: -8.990316390991211

Token 248: ' Emp' (ID: 15601)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.016423294320702553
    2. '#' → logprob: -4.141423225402832
    3. ' if' → logprob: -8.516423225402832
    4. '                   ' → logprob: -8.766423225402832
    5. ' #' → logprob: -11.391423225402832
    6. 'for' → logprob: -12.391423225402832
    7. '                       ' → logprob: -12.641423225402832
    8. '   ' → logprob: -12.891423225402832
    9. '                    
' → logprob: -12.891423225402832
    10. 'next' → logprob: -13.516423225402832

Token 249: 'êcher' (ID: 109382)
  Prédit: 'êcher'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êcher' → logprob: -1.4621922969818115
    2. '#' → logprob: -1.5871922969818115
    3. 'êche' → logprob: -1.8371922969818115
    4. '                   ' → logprob: -2.3371922969818115
    5. '   ' → logprob: -2.4621922969818115
    6. '           ' → logprob: -3.0871922969818115
    7. 'a' → logprob: -3.4621922969818115
    8. 'has' → logprob: -3.4621922969818115
    9. '                               ' → logprob: -4.087192535400391
    10. 'if' → logprob: -4.337192535400391

Token 250: ' des' (ID: 731)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4320320785045624
    2. ' if' → logprob: -1.4320321083068848
    3. ' (' → logprob: -3.3070321083068848
    4. '#' → logprob: -4.057032108306885
    5. '(a' → logprob: -5.057032108306885
    6. ' d' → logprob: -5.432032108306885
    7. '(
' → logprob: -5.432032108306885
    8. 'a' → logprob: -5.432032108306885
    9. ' (
' → logprob: -5.557032108306885
    10. ' la' → logprob: -5.557032108306885

Token 251: ' motifs' (ID: 89637)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.1789177656173706
    2. 'sé' → logprob: -1.8039177656173706
    3. ' motifs' → logprob: -2.05391788482666
    4. 'comb' → logprob: -2.67891788482666
    5. 'patterns' → logprob: -3.05391788482666
    6. 'mot' → logprob: -3.05391788482666
    7. '"' → logprob: -3.17891788482666
    8. 'trip' → logprob: -3.42891788482666
    9. 'suite' → logprob: -4.05391788482666
    10. ' sé' → logprob: -4.30391788482666

Token 252: ' interd' (ID: 84840)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -1.1331199407577515
    2. ' =' → logprob: -1.2581199407577515
    3. ' if' → logprob: -1.2581199407577515
    4. 'if' → logprob: -2.758120059967041
    5. '                       ' → logprob: -3.633120059967041
    6. '=' → logprob: -4.758120059967041
    7. '                    ' → logprob: -5.258120059967041
    8. '                           ' → logprob: -6.758120059967041
    9. ':' → logprob: -7.383120059967041
    10. '                        ' → logprob: -7.633120059967041

Token 253: 'its' (ID: 1348)
  Prédit: 'its'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'its' → logprob: -0.001974311424419284
    2. 'it' → logprob: -6.376974105834961
    3. 'is' → logprob: -9.501974105834961
    4. '   ' → logprob: -10.751974105834961
    5. 'd' → logprob: -10.876974105834961
    6. 'ites' → logprob: -11.001974105834961
    7. 'ir' → logprob: -11.126974105834961
    8. 'i' → logprob: -11.251974105834961
    9. 'ited' → logprob: -11.251974105834961
    10. '```' → logprob: -11.751974105834961

Token 254: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.006034500431269407
    2. '                    
' → logprob: -6.2560343742370605
    3. '                    ' → logprob: -6.5060343742370605
    4. ' if' → logprob: -7.0060343742370605
    5. ':' → logprob: -7.7560343742370605
    6. '               ' → logprob: -8.256034851074219
    7. 'if' → logprob: -8.506034851074219
    8. '                       ' → logprob: -8.756034851074219
    9. ' =' → logprob: -9.256034851074219
    10. '                  ' → logprob: -9.506034851074219

Token 255: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.02906164340674877
    2. '                    ' → logprob: -4.404061794281006
    3. '                    
' → logprob: -5.154061794281006
    4. ' if' → logprob: -5.779061794281006
    5. ' =' → logprob: -6.529061794281006
    6. '                       ' → logprob: -6.779061794281006
    7. ':' → logprob: -7.154061794281006
    8. '<|end|>' → logprob: -7.404061794281006
    9. 'if' → logprob: -7.529061794281006
    10. '               ' → logprob: -7.654061794281006

Token 256: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.015984520316123962
    2. ' if' → logprob: -4.265984535217285
    3. '                   ' → logprob: -6.390984535217285
    4. '#' → logprob: -9.140984535217285
    5. '                    
' → logprob: -11.015984535217285
    6. '                       ' → logprob: -12.640984535217285
    7. ' #' → logprob: -12.890984535217285
    8. 'next' → logprob: -13.015984535217285
    9. '```' → logprob: -13.390984535217285
    10. '                    ' → logprob: -13.640984535217285

Token 257: ' (' (ID: 350)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.33457398414611816
    2. '(a' → logprob: -1.5845739841461182
    3. ' a' → logprob: -3.209573984146118
    4. ' (' → logprob: -3.334573984146118
    5. '(j' → logprob: -7.334573745727539
    6. '(i' → logprob: -7.334573745727539
    7. '   ' → logprob: -7.459573745727539
    8. ' ' → logprob: -7.834573745727539
    9. '(' → logprob: -8.084573745727539
    10. '[a' → logprob: -8.709573745727539

Token 258: 'k' (ID: 74)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0012936893617734313
    2. '(a' → logprob: -7.001293659210205
    3. ' a' → logprob: -8.126294136047363
    4. '   ' → logprob: -10.626294136047363
    5. '[a' → logprob: -10.876294136047363
    6. ' (' → logprob: -11.126294136047363
    7. 'j' → logprob: -11.251294136047363
    8. '(j' → logprob: -12.376294136047363
    9. ' ' → logprob: -12.501294136047363
    10. '    ' → logprob: -13.376294136047363

Token 259: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.06579803675413132
    2. ' ==' → logprob: -2.815798044204712
    3. 'a' → logprob: -5.690797805786133
    4. '==
' → logprob: -9.315797805786133
    5. ' ' → logprob: -9.565797805786133
    6. ',' → logprob: -9.565797805786133
    7. '[' → logprob: -10.190797805786133
    8. '!=' → logprob: -10.315797805786133
    9. ']==' → logprob: -10.315797805786133
    10. ',a' → logprob: -10.440797805786133

Token 260: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4098503887653351
    2. 'a' → logprob: -1.4098503589630127
    3. '1' → logprob: -2.4098503589630127
    4. ' ' → logprob: -6.784850597381592
    5. '3' → logprob: -7.284850597381592
    6. ' a' → logprob: -8.284850120544434
    7. '2' → logprob: -9.909850120544434
    8. '
' → logprob: -10.534850120544434
    9. '   ' → logprob: -11.034850120544434
    10. 'l' → logprob: -11.284850120544434

Token 261: '0' (ID: 15)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.05556757003068924
    2. '0' → logprob: -2.930567502975464
    3. '1' → logprob: -7.555567741394043
    4. '3' → logprob: -9.930567741394043
    5. ' a' → logprob: -10.305567741394043
    6. '2' → logprob: -10.555567741394043
    7. ' ' → logprob: -11.180567741394043
    8. '   ' → logprob: -11.555567741394043
    9. 'j' → logprob: -11.805567741394043
    10. ''a' → logprob: -11.930567741394043

Token 262: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.07895610481500626
    2. ' and' → logprob: -2.578956127166748
    3. 'a' → logprob: -9.95395565032959
    4. ' ' → logprob: -11.20395565032959
    5. '   ' → logprob: -12.95395565032959
    6. ' a' → logprob: -14.32895565032959
    7. '==' → logprob: -14.57895565032959
    8. '    ' → logprob: -14.95395565032959
    9. '                   ' → logprob: -15.45395565032959
    10. '  ' → logprob: -15.57895565032959

Token 263: ' l' (ID: 305)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -9.353008499601856e-05
    2. ' a' → logprob: -10.125093460083008
    3. 'l' → logprob: -10.375093460083008
    4. 'j' → logprob: -10.875093460083008
    5. '   ' → logprob: -13.625093460083008
    6. ' ' → logprob: -14.625093460083008
    7. 'i' → logprob: -15.000093460083008
    8. '(a' → logprob: -15.125093460083008
    9. '  ' → logprob: -15.250093460083008
    10. '	a' → logprob: -15.750093460083008

Token 264: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.07889463007450104
    2. ' ==' → logprob: -2.57889461517334
    3. '==
' → logprob: -13.57889461517334
    4. ' ' → logprob: -13.95389461517334
    5. '=' → logprob: -14.32889461517334
    6. 'a' → logprob: -14.57889461517334
    7. '0' → logprob: -14.57889461517334
    8. ')' → logprob: -15.20389461517334
    9. ']==' → logprob: -15.20389461517334
    10. ')==' → logprob: -15.32889461517334

Token 265: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.013231880962848663
    2. ' ' → logprob: -4.7632317543029785
    3. '1' → logprob: -5.3882317543029785
    4. '2' → logprob: -11.013232231140137
    5. '   ' → logprob: -11.638232231140137
    6. 'a' → logprob: -12.138232231140137
    7. '  ' → logprob: -13.138232231140137
    8. '```' → logprob: -14.138232231140137
    9. '    ' → logprob: -14.450732231140137
    10. '

' → logprob: -14.513232231140137

Token 266: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.012672214768826962
    2. '0' → logprob: -4.387672424316406
    3. ' ' → logprob: -9.387672424316406
    4. '2' → logprob: -9.762672424316406
    5. 'a' → logprob: -11.012672424316406
    6. '3' → logprob: -13.512672424316406
    7. '   ' → logprob: -13.637672424316406
    8. '
' → logprob: -13.637672424316406
    9. '```' → logprob: -15.262672424316406
    10. '

' → logprob: -15.637672424316406

Token 267: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.20630764961242676
    2. 'and' → logprob: -1.7063076496124268
    3. ')' → logprob: -5.331307411193848
    4. '   ' → logprob: -10.831307411193848
    5. ' )' → logprob: -11.956307411193848
    6. ' ' → logprob: -12.081307411193848
    7. '    ' → logprob: -12.331307411193848
    8. '==' → logprob: -12.956307411193848
    9. ' и' → logprob: -13.581307411193848
    10. 'a' → logprob: -13.706307411193848

Token 268: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.000431861262768507
    2. ' a' → logprob: -7.750432014465332
    3. '   ' → logprob: -14.500432014465332
    4. ' ' → logprob: -15.500432014465332
    5. '	a' → logprob: -15.625432014465332
    6. '    ' → logprob: -16.500431060791016
    7. '  ' → logprob: -17.250431060791016
    8. '
' → logprob: -17.375431060791016
    9. '     ' → logprob: -18.125431060791016
    10. '(a' → logprob: -18.125431060791016

Token 269: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6931707262992859
    2. ' ==' → logprob: -0.6931707262992859
    3. ' ' → logprob: -11.443170547485352
    4. ')' → logprob: -12.068170547485352
    5. '==
' → logprob: -13.068170547485352
    6. '=' → logprob: -13.818170547485352
    7. '0' → logprob: -14.193170547485352
    8. ')==' → logprob: -14.318170547485352
    9. '  ' → logprob: -14.443170547485352
    10. ' ==
' → logprob: -14.818170547485352

Token 270: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.018060851842164993
    2. '0' → logprob: -4.893060684204102
    3. '1' → logprob: -4.893060684204102
    4. '3' → logprob: -5.893060684204102
    5. ' ' → logprob: -8.893060684204102
    6. '#' → logprob: -12.518060684204102
    7. '   ' → logprob: -14.518060684204102
    8. '
' → logprob: -14.768060684204102
    9. '[' → logprob: -15.768060684204102
    10. '_' → logprob: -15.768060684204102

Token 271: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.25456398725509644
    2. '0' → logprob: -1.5045640468597412
    3. '3' → logprob: -6.254563808441162
    4. '1' → logprob: -7.254563808441162
    5. ' ' → logprob: -13.87956428527832
    6. '#' → logprob: -14.00456428527832
    7. '
' → logprob: -15.37956428527832
    8. '<' → logprob: -15.62956428527832
    9. '   ' → logprob: -16.12956428527832
    10. '

' → logprob: -16.37956428527832

Token 272: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001967457792488858
    2. '                   ' → logprob: -9.12519645690918
    3. '):' → logprob: -9.87519645690918
    4. ' )' → logprob: -11.00019645690918
    5. '                       ' → logprob: -11.75019645690918
    6. '):
' → logprob: -12.25019645690918
    7. ')\
' → logprob: -12.87519645690918
    8. '                           ' → logprob: -14.00019645690918
    9. '                    ' → logprob: -14.37519645690918
    10. ' or' → logprob: -14.75019645690918

Token 273: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0004411591507960111
    2. ':' → logprob: -8.625441551208496
    3. '                   ' → logprob: -8.625441551208496
    4. ':
' → logprob: -10.625441551208496
    5. 'continue' → logprob: -11.625441551208496
    6. '                           ' → logprob: -11.750441551208496
    7. '       ' → logprob: -11.750441551208496
    8. ' continue' → logprob: -11.750441551208496
    9. '                     ' → logprob: -12.250441551208496
    10. '					' → logprob: -12.500441551208496

Token 274: ' continue' (ID: 4901)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.5084072351455688
    2. 'continue' (adapté à ' continue') → logprob: -1.2584072351455688
    3. ' continue' → logprob: -2.2584071159362793
    4. '                           ' → logprob: -4.758407115936279
    5. '	continue' → logprob: -7.633407115936279
    6. '                               ' → logprob: -8.133407592773438
    7. '                   ' → logprob: -8.258407592773438
    8. '   ' → logprob: -8.883407592773438
    9. '       ' → logprob: -10.258407592773438
    10. '                        
' → logprob: -10.633407592773438

Token 275: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -8.327856630785391e-05
    2. '               ' → logprob: -10.625082969665527
    3. '                    
' → logprob: -10.625082969665527
    4. '
' → logprob: -11.250082969665527
    5. '                    ' → logprob: -12.125082969665527
    6. '                       ' → logprob: -12.500082969665527
    7. '           ' → logprob: -12.625082969665527
    8. '                  ' → logprob: -12.875082969665527
    9. 'if' → logprob: -13.625082969665527
    10. '				' → logprob: -13.750082969665527

Token 276: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -2.2127087504486553e-05
    2. '
' → logprob: -11.750021934509277
    3. '               ' → logprob: -12.250021934509277
    4. '                    
' → logprob: -12.875021934509277
    5. '                    ' → logprob: -13.125021934509277
    6. '           ' → logprob: -13.250021934509277
    7. '                       ' → logprob: -13.875021934509277
    8. '                  ' → logprob: -14.000021934509277
    9. '                        
' → logprob: -15.250021934509277
    10. '   ' → logprob: -15.375021934509277

Token 277: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.12774424254894257
    2. 'if' (adapté à ' if') → logprob: -2.127744197845459
    3. ' if' → logprob: -7.877744197845459
    4. '                    
' → logprob: -8.377744674682617
    5. '               ' → logprob: -9.127744674682617
    6. '                    ' → logprob: -10.252744674682617
    7. '           ' → logprob: -10.877744674682617
    8. '   ' → logprob: -11.252744674682617
    9. '                  ' → logprob: -11.752744674682617
    10. '       ' → logprob: -12.752744674682617

Token 278: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.023931732401251793
    2. '(k' → logprob: -3.7739317417144775
    3. '(l' → logprob: -7.523931503295898
    4. '(j' → logprob: -8.898931503295898
    5. '(' → logprob: -12.398931503295898
    6. '                           ' → logprob: -13.273931503295898
    7. '(a' → logprob: -14.023931503295898
    8. '                   ' → logprob: -14.398931503295898
    9. '                       ' → logprob: -14.773931503295898
    10. '                               ' → logprob: -15.398931503295898

Token 279: 'k' (ID: 74)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.17999538779258728
    2. 'k' → logprob: -1.8049954175949097
    3. 'l' → logprob: -8.5549955368042
    4. ' j' → logprob: -10.6799955368042
    5. '[j' → logprob: -11.9299955368042
    6. '(k' → logprob: -12.0549955368042
    7. '(j' → logprob: -12.3049955368042
    8. 'i' → logprob: -12.3049955368042
    9. '   ' → logprob: -12.6799955368042
    10. '[k' → logprob: -12.6799955368042

Token 280: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.14269819855690002
    2. '==' → logprob: -2.017698287963867
    3. ' ' → logprob: -10.892698287963867
    4. '0' → logprob: -13.267698287963867
    5. '=' → logprob: -13.392698287963867
    6. '==
' → logprob: -15.142698287963867
    7. ')==' → logprob: -16.142698287963867
    8. ' =' → logprob: -16.142698287963867
    9. '```' → logprob: -16.267698287963867
    10. ']==' → logprob: -16.392698287963867

Token 281: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006639582570642233
    2. '1' → logprob: -5.13163948059082
    3. ' ' → logprob: -7.75663948059082
    4. '2' → logprob: -8.25663948059082
    5. '3' → logprob: -11.44413948059082
    6. '   ' → logprob: -12.31913948059082
    7. 'a' → logprob: -13.56913948059082
    8. '[' → logprob: -14.00663948059082
    9. '```' → logprob: -14.00663948059082
    10. '  ' → logprob: -14.44413948059082

Token 282: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.13693006336688995
    2. '1' → logprob: -2.261929988861084
    3. '2' → logprob: -3.761929988861084
    4. '3' → logprob: -7.761929988861084
    5. ' ' → logprob: -9.136930465698242
    6. '   ' → logprob: -11.199430465698242
    7. '```' → logprob: -12.136930465698242
    8. '[' → logprob: -12.449430465698242
    9. 'a' → logprob: -12.574430465698242
    10. '
' → logprob: -12.824430465698242

Token 283: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.04859020933508873
    2. 'and' → logprob: -3.0485901832580566
    3. ' ' → logprob: -13.298590660095215
    4. ' и' → logprob: -14.173590660095215
    5. ')' → logprob: -15.923590660095215
    6. '0' → logprob: -16.2985897064209
    7. ' et' → logprob: -16.7985897064209
    8. ' ' → logprob: -16.7985897064209
    9. '==' → logprob: -17.0485897064209
    10. ' và' → logprob: -17.1735897064209

Token 284: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -4.143808109802194e-05
    2. ' l' → logprob: -10.375041007995605
    3. 'a' → logprob: -11.875041007995605
    4. '0' → logprob: -12.875041007995605
    5. '2' → logprob: -14.875041007995605
    6. '   ' → logprob: -15.125041007995605
    7. '	l' → logprob: -16.500041961669922
    8. '  ' → logprob: -17.875041961669922
    9. ' ' → logprob: -18.500041961669922
    10. '           ' → logprob: -19.250041961669922

Token 285: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.16023895144462585
    2. '==' → logprob: -1.9102389812469482
    3. ' ' → logprob: -11.535239219665527
    4. '[' → logprob: -13.285239219665527
    5. ']==' → logprob: -14.410239219665527
    6. '                           ' → logprob: -14.660239219665527
    7. '```' → logprob: -14.660239219665527
    8. '=' → logprob: -14.910239219665527
    9. '   ' → logprob: -15.535239219665527
    10. '           ' → logprob: -15.785239219665527

Token 286: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.039489299058914185
    2. '0' → logprob: -3.289489269256592
    3. ' ' → logprob: -6.539489269256592
    4. '   ' → logprob: -13.91448974609375
    5. '3' → logprob: -14.78948974609375
    6. '  ' → logprob: -16.28948974609375
    7. '1' → logprob: -16.41448974609375
    8. '[' → logprob: -18.03948974609375
    9. '(' → logprob: -18.28948974609375
    10. '```' → logprob: -18.97698974609375

Token 287: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0028162896633148193
    2. '2' → logprob: -5.877816200256348
    3. ' ' → logprob: -11.502816200256348
    4. '   ' → logprob: -14.377816200256348
    5. '3' → logprob: -14.752816200256348
    6. '```' → logprob: -16.315317153930664
    7. '(' → logprob: -16.565317153930664
    8. '  ' → logprob: -17.440317153930664
    9. '1' → logprob: -17.502817153930664
    10. '[' → logprob: -17.565317153930664

Token 288: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.01815767213702202
    2. 'and' → logprob: -4.018157482147217
    3. '                   ' → logprob: -12.143157958984375
    4. '                       ' → logprob: -13.893157958984375
    5. ' ' → logprob: -14.393157958984375
    6. '                    ' → logprob: -15.518157958984375
    7. ' и' → logprob: -15.518157958984375
    8. ')' → logprob: -15.768157958984375
    9. '               ' → logprob: -17.018157958984375
    10. '```' → logprob: -17.018157958984375

Token 289: ' a' (ID: 261)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.774276774493046e-05
    2. 'a' → logprob: -10.625038146972656
    3. ' ' → logprob: -11.625038146972656
    4. '3' → logprob: -12.375038146972656
    5. '0' → logprob: -16.125038146972656
    6. '   ' → logprob: -16.625038146972656
    7. '1' → logprob: -16.875038146972656
    8. ' a' → logprob: -17.250038146972656
    9. '```' → logprob: -17.750038146972656
    10. '
' → logprob: -18.125038146972656

Token 290: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5759450793266296
    2. '==' → logprob: -0.8259450793266296
    3. ' ' → logprob: -13.075944900512695
    4. '==
' → logprob: -14.200944900512695
    5. ']==' → logprob: -14.450944900512695
    6. '=' → logprob: -14.950944900512695
    7. '  ' → logprob: -14.950944900512695
    8. ' !=' → logprob: -15.200944900512695
    9. ' ==
' → logprob: -15.450944900512695
    10. '!=' → logprob: -15.575944900512695

Token 291: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0008888294687494636
    2. ' ' → logprob: -7.750888824462891
    3. '3' → logprob: -8.12588882446289
    4. '1' → logprob: -8.75088882446289
    5. '0' → logprob: -12.75088882446289
    6. '   ' → logprob: -14.62588882446289
    7. '  ' → logprob: -16.12588882446289
    8. '```' → logprob: -16.62588882446289
    9. '
' → logprob: -16.93838882446289
    10. '(' → logprob: -17.06338882446289

Token 292: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.2994620242971e-06
    2. '3' → logprob: -12.250008583068848
    3. ' ' → logprob: -12.625008583068848
    4. '0' → logprob: -16.87500762939453
    5. '1' → logprob: -17.00000762939453
    6. '   ' → logprob: -17.62500762939453
    7. '
' → logprob: -17.87500762939453
    8. '２' → logprob: -18.12500762939453
    9. '```' → logprob: -19.00000762939453
    10. '۲' → logprob: -19.06250762939453

Token 293: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.017235608771443367
    2. '):' → logprob: -4.14223575592041
    3. '                       ' → logprob: -7.14223575592041
    4. '                   ' → logprob: -8.51723575592041
    5. '):
' → logprob: -9.14223575592041
    6. ')' → logprob: -10.51723575592041
    7. ':
' → logprob: -10.64223575592041
    8. ':' → logprob: -11.01723575592041
    9. '):

' → logprob: -11.01723575592041
    10. ''):
' → logprob: -11.64223575592041

Token 294: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0009009773493744433
    2. '                   ' → logprob: -7.125900745391846
    3. 'continue' → logprob: -10.125901222229004
    4. ' continue' → logprob: -10.750901222229004
    5. '               ' → logprob: -11.250901222229004
    6. ':
' → logprob: -12.000901222229004
    7. '       ' → logprob: -12.750901222229004
    8. '                           ' → logprob: -12.750901222229004
    9. '<|end|>' → logprob: -13.000901222229004
    10. '                      ' → logprob: -13.250901222229004

Token 295: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.025547007098793983
    2. '                       ' → logprob: -3.7755470275878906
    3. ' continue' → logprob: -6.275547027587891
    4. '                   ' → logprob: -8.52554702758789
    5. '                           ' → logprob: -8.90054702758789
    6. '	continue' → logprob: -10.15054702758789
    7. '   ' → logprob: -10.52554702758789
    8. '               ' → logprob: -12.15054702758789
    9. '           ' → logprob: -12.27554702758789
    10. '                               ' → logprob: -12.90054702758789

Token 296: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0003825293097179383
    2. '                    
' → logprob: -8.375382423400879
    3. '               ' → logprob: -9.875382423400879
    4. '                    ' → logprob: -10.750382423400879
    5. '                        
' → logprob: -11.125382423400879
    6. '<|end|>' → logprob: -11.125382423400879
    7. '                       ' → logprob: -11.500382423400879
    8. '           ' → logprob: -12.000382423400879
    9. '				' → logprob: -12.000382423400879
    10. '                  ' → logprob: -12.125382423400879

Token 297: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0007846142980270088
    2. '                    ' → logprob: -8.125784873962402
    3. '                    
' → logprob: -8.625784873962402
    4. '<|end|>' → logprob: -9.000784873962402
    5. '               ' → logprob: -9.375784873962402
    6. '                  ' → logprob: -10.625784873962402
    7. '                       ' → logprob: -11.500784873962402
    8. '           ' → logprob: -11.500784873962402
    9. '                ' → logprob: -11.500784873962402
    10. '                        
' → logprob: -11.875784873962402

Token 298: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.005858397576957941
    2. 'if' (adapté à ' if') → logprob: -5.380858421325684
    3. ' if' → logprob: -7.505858421325684
    4. '               ' → logprob: -8.380858421325684
    5. '                    ' → logprob: -8.630858421325684
    6. '                    
' → logprob: -9.505858421325684
    7. '   ' → logprob: -9.880858421325684
    8. '           ' → logprob: -10.005858421325684
    9. '       ' → logprob: -10.880858421325684
    10. '                       ' → logprob: -11.130858421325684

Token 299: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.13998647034168243
    2. '(k' → logprob: -2.639986515045166
    3. '(j' → logprob: -3.139986515045166
    4. '(l' → logprob: -4.139986515045166
    5. '                           ' → logprob: -10.764986038208008
    6. '                   ' → logprob: -11.264986038208008
    7. '(' → logprob: -11.764986038208008
    8. '                               ' → logprob: -12.639986038208008
    9. '                       ' → logprob: -13.264986038208008
    10. ' ' → logprob: -13.514986038208008

Token 300: 'k' (ID: 74)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.24202750623226166
    2. 'l' → logprob: -1.6170275211334229
    3. 'k' → logprob: -4.117027282714844
    4. ' j' → logprob: -9.367027282714844
    5. ' l' → logprob: -10.367027282714844
    6. 'i' → logprob: -10.367027282714844
    7. '0' → logprob: -11.117027282714844
    8. ' ' → logprob: -11.742027282714844
    9. '   ' → logprob: -12.492027282714844
    10. '	l' → logprob: -13.367027282714844

Token 301: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.026348024606704712
    2. '==' → logprob: -3.651348114013672
    3. ' ' → logprob: -10.151348114013672
    4. '0' → logprob: -12.276348114013672
    5. '=' → logprob: -13.151348114013672
    6. '1' → logprob: -14.401348114013672
    7. ' =' → logprob: -15.026348114013672
    8. '           ' → logprob: -16.026348114013672
    9. ' ' → logprob: -16.026348114013672
    10. '[' → logprob: -16.151348114013672

Token 302: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.05942096933722496
    2. '0' → logprob: -3.0594210624694824
    3. '1' → logprob: -4.559421062469482
    4. '3' → logprob: -8.684420585632324
    5. ' ' → logprob: -9.059420585632324
    6. '   ' → logprob: -12.246920585632324
    7. 'a' → logprob: -12.809420585632324
    8. '

' → logprob: -13.309420585632324
    9. '[' → logprob: -13.621920585632324
    10. '
' → logprob: -13.684420585632324

Token 303: '0' (ID: 15)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.04227941855788231
    2. '0' → logprob: -3.2922794818878174
    3. '1' → logprob: -5.542279243469238
    4. '3' → logprob: -8.167279243469238
    5. ' ' → logprob: -10.854779243469238
    6. '   ' → logprob: -13.167279243469238
    7. '[' → logprob: -13.542279243469238
    8. '```' → logprob: -14.042279243469238
    9. 'a' → logprob: -14.292279243469238
    10. '

' → logprob: -14.854779243469238

Token 304: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.12701451778411865
    2. 'and' → logprob: -2.127014636993408
    3. '==' → logprob: -9.75201416015625
    4. ' ==' → logprob: -11.25201416015625
    5. ' ' → logprob: -11.87701416015625
    6. '           ' → logprob: -13.25201416015625
    7. '1' → logprob: -13.50201416015625
    8. ' и' → logprob: -14.12701416015625
    9. '   ' → logprob: -14.25201416015625
    10. '0' → logprob: -14.62701416015625

Token 305: ' l' (ID: 305)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.03469797596335411
    2. 'l' → logprob: -3.659698009490967
    3. '2' → logprob: -5.034698009490967
    4. 'j' → logprob: -6.534698009490967
    5. 'k' → logprob: -7.909698009490967
    6. '1' → logprob: -11.284697532653809
    7. ' a' → logprob: -11.784697532653809
    8. '3' → logprob: -12.784697532653809
    9. '   ' → logprob: -13.034697532653809
    10. 'i' → logprob: -13.159697532653809

Token 306: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.47548970580101013
    2. ' ==' → logprob: -0.9754897356033325
    3. '1' → logprob: -6.725489616394043
    4. '=' → logprob: -9.725489616394043
    5. '[' → logprob: -9.850489616394043
    6. '2' → logprob: -10.350489616394043
    7. '0' → logprob: -10.975489616394043
    8. ' ' → logprob: -11.100489616394043
    9. ' !=' → logprob: -11.850489616394043
    10. '   ' → logprob: -12.350489616394043

Token 307: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0006454797694459558
    2. '3' → logprob: -7.375645637512207
    3. '0' → logprob: -11.625645637512207
    4. '1' → logprob: -11.750645637512207
    5. '
' → logprob: -14.750645637512207
    6. '[' → logprob: -15.000645637512207
    7. ' ' → logprob: -15.000645637512207
    8. '```' → logprob: -15.125645637512207
    9. '   ' → logprob: -15.250645637512207
    10. '-' → logprob: -15.875645637512207

Token 308: '2' (ID: 17)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.47422435879707336
    2. '2' → logprob: -0.974224328994751
    3. '0' → logprob: -9.474224090576172
    4. '1' → logprob: -9.849224090576172
    5. '```' → logprob: -12.349224090576172
    6. '[' → logprob: -12.599224090576172
    7. '   ' → logprob: -13.224224090576172
    8. '
' → logprob: -13.349224090576172
    9. ' ' → logprob: -13.911724090576172
    10. '#' → logprob: -14.286724090576172

Token 309: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.10021993517875671
    2. 'and' → logprob: -2.350219964981079
    3. '                       ' → logprob: -11.9752197265625
    4. '                   ' → logprob: -12.7252197265625
    5. ' ' → logprob: -13.4752197265625
    6. ')' → logprob: -14.7252197265625
    7. ' и' → logprob: -14.9752197265625
    8. '```' → logprob: -15.2252197265625
    9. '                    ' → logprob: -15.6002197265625
    10. '                     ' → logprob: -15.7252197265625

Token 310: ' a' (ID: 261)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06842254102230072
    2. 'a' → logprob: -2.818422555923462
    3. '0' → logprob: -5.068422317504883
    4. '3' → logprob: -9.818422317504883
    5. ' ' → logprob: -10.193422317504883
    6. ' a' → logprob: -11.068422317504883
    7. '   ' → logprob: -11.443422317504883
    8. '(a' → logprob: -12.068422317504883
    9. '2' → logprob: -12.193422317504883
    10. '(' → logprob: -12.193422317504883

Token 311: ' ==' (ID: 951)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.9787213206291199
    2. '1' → logprob: -0.9787213206291199
    3. '==' → logprob: -1.9787213802337646
    4. '(' → logprob: -2.7287213802337646
    5. ' ==' → logprob: -3.3537213802337646
    6. ' ' → logprob: -4.9787211418151855
    7. '                   ' → logprob: -6.9787211418151855
    8. ' (' → logprob: -7.7287211418151855
    9. '           ' → logprob: -7.8537211418151855
    10. '3' → logprob: -7.9787211418151855

Token 312: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.259079363080673e-05
    2. ' ' → logprob: -12.000012397766113
    3. '0' → logprob: -12.250012397766113
    4. '[' → logprob: -15.125012397766113
    5. '3' → logprob: -15.250012397766113
    6. '１' → logprob: -15.250012397766113
    7. '
' → logprob: -15.375012397766113
    8. '```' → logprob: -16.12501335144043
    9. '...' → logprob: -16.31251335144043
    10. '{
' → logprob: -16.75001335144043

Token 313: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.723973582556937e-05
    2. ' ' → logprob: -11.500017166137695
    3. '0' → logprob: -12.125017166137695
    4. '[' → logprob: -14.625017166137695
    5. '１' → logprob: -15.125017166137695
    6. '3' → logprob: -15.500017166137695
    7. '```' → logprob: -16.000017166137695
    8. '
' → logprob: -16.000017166137695
    9. '#' → logprob: -16.125017166137695
    10. '   ' → logprob: -16.312517166137695

Token 314: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.03120860829949379
    2. '):' → logprob: -3.5312085151672363
    3. '                       ' → logprob: -7.031208515167236
    4. '                   ' → logprob: -7.781208515167236
    5. '):
' → logprob: -9.656208992004395
    6. ':
' → logprob: -10.531208992004395
    7. '):

' → logprob: -11.031208992004395
    8. ')' → logprob: -11.031208992004395
    9. ':' → logprob: -11.531208992004395
    10. ''):
' → logprob: -11.531208992004395

Token 315: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0032357019372284412
    2. '                   ' → logprob: -6.378235816955566
    3. 'continue' → logprob: -6.628235816955566
    4. ' continue' → logprob: -8.878235816955566
    5. ':
' → logprob: -11.128235816955566
    6. '                           ' → logprob: -11.253235816955566
    7. '               ' → logprob: -11.378235816955566
    8. '                        
' → logprob: -12.003235816955566
    9. '       ' → logprob: -12.128235816955566
    10. '   ' → logprob: -12.628235816955566

Token 316: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.3454667627811432
    2. '                       ' → logprob: -1.3454667329788208
    3. ' continue' → logprob: -3.5954668521881104
    4. '                   ' → logprob: -5.595466613769531
    5. '                           ' → logprob: -8.095466613769531
    6. '   ' → logprob: -9.595466613769531
    7. '               ' → logprob: -9.845466613769531
    8. '	continue' → logprob: -10.470466613769531
    9. '       ' → logprob: -10.595466613769531
    10. '           ' → logprob: -10.595466613769531

Token 317: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.28060486912727356
    2. '                       ' → logprob: -1.5306048393249512
    3. ':' → logprob: -4.280604839324951
    4. '<|end|>' → logprob: -5.405604839324951
    5. '               ' → logprob: -5.780604839324951
    6. ':
' → logprob: -6.155604839324951
    7. ',' → logprob: -6.530604839324951
    8. '                        
' → logprob: -7.155604839324951
    9. '       ' → logprob: -7.655604839324951
    10. '                    
' → logprob: -8.28060531616211

Token 318: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.005708831362426281
    2. '               ' → logprob: -6.755708694458008
    3. '                       ' → logprob: -6.755708694458008
    4. 'dp' → logprob: -7.255708694458008
    5. '                    
' → logprob: -7.255708694458008
    6. '                    ' → logprob: -7.755708694458008
    7. ' continue' → logprob: -8.130708694458008
    8. 'continue' → logprob: -8.130708694458008
    9. ' dp' → logprob: -8.755708694458008
    10. '                               ' → logprob: -9.005708694458008

Token 319: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.13421431183815002
    2. '                   ' → logprob: -2.134214401245117
    3. ' dp' → logprob: -5.884214401245117
    4. 'if' → logprob: -6.259214401245117
    5. '                       ' → logprob: -6.884214401245117
    6. '                    ' → logprob: -7.884214401245117
    7. '                           ' → logprob: -8.509214401245117
    8. '                               ' → logprob: -8.634214401245117
    9. '                    
' → logprob: -9.009214401245117
    10. '#' (adapté à ' #') → logprob: -9.509214401245117

Token 320: ' Hum' (ID: 29795)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.010229134932160378
    2. 'if' → logprob: -5.260229110717773
    3. '                   ' → logprob: -5.885229110717773
    4. ' dp' → logprob: -7.010229110717773
    5. 'for' → logprob: -8.135229110717773
    6. 'next' → logprob: -8.510229110717773
    7. 'new' → logprob: -8.760229110717773
    8. 'nd' → logprob: -9.010229110717773
    9. '                       ' → logprob: -9.135229110717773
    10. '#' → logprob: -10.135229110717773

Token 321: ',' (ID: 11)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.9149868488311768
    2. 'dp' → logprob: -1.0399868488311768
    3. ' dp' → logprob: -1.9149868488311768
    4. ' if' → logprob: -3.2899868488311768
    5. 'if' → logprob: -3.4149868488311768
    6. '                               ' → logprob: -5.164986610412598
    7. '                       ' → logprob: -5.664986610412598
    8. '                                   ' → logprob: -5.914986610412598
    9. '               ' → logprob: -6.039986610412598
    10. '                                       ' → logprob: -6.039986610412598

Token 322: ' ces' (ID: 10532)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.4958479702472687
    2. 'if' → logprob: -1.1208479404449463
    3. '                   ' → logprob: -3.6208479404449463
    4. ' dp' → logprob: -3.8708479404449463
    5. ' if' → logprob: -4.495848178863525
    6. '                       ' → logprob: -6.120848178863525
    7. 'continue' → logprob: -7.120848178863525
    8. '                           ' → logprob: -7.495848178863525
    9. 'for' → logprob: -7.745848178863525
    10. '#' → logprob: -8.120847702026367

Token 323: ' deux' (ID: 10301)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3420374095439911
    2. ' dp' → logprob: -1.9670374393463135
    3. '                   ' → logprob: -2.5920374393463135
    4. 'if' → logprob: -3.2170374393463135
    5. ' espaces' → logprob: -5.342037200927734
    6. ' if' → logprob: -5.342037200927734
    7. 'n' → logprob: -6.092037200927734
    8. '(dp' → logprob: -6.342037200927734
    9. 'a' → logprob: -6.467037200927734
    10. '                    ' → logprob: -6.592037200927734

Token 324: '-là' (ID: 71108)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3391740918159485
    2. ' if' → logprob: -1.7141740322113037
    3. '                   ' → logprob: -2.9641740322113037
    4. '                       ' → logprob: -4.089174270629883
    5. ' espaces' → logprob: -4.464174270629883
    6. 'a' → logprob: -5.714174270629883
    7. '                    ' → logprob: -5.839174270629883
    8. ' a' → logprob: -6.339174270629883
    9. '...' → logprob: -6.464174270629883
    10. ' spaces' → logprob: -6.589174270629883

Token 325: ' je' (ID: 1264)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.05531562492251396
    2. '                       ' → logprob: -3.0553157329559326
    3. 'continue' → logprob: -5.9303154945373535
    4. 'if' → logprob: -6.8053154945373535
    5. ' if' → logprob: -6.8053154945373535
    6. '               ' → logprob: -7.0553154945373535
    7. ' continue' → logprob: -7.5553154945373535
    8. '   ' → logprob: -8.555315971374512
    9. '           ' → logprob: -9.805315971374512
    10. '       ' → logprob: -10.305315971374512

Token 326: ' dois' (ID: 18435)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.875746488571167
    2. 'continue' → logprob: -1.125746488571167
    3. '                   ' → logprob: -1.500746488571167
    4. '                       ' → logprob: -3.625746488571167
    5. '                    ' → logprob: -5.875746726989746
    6. 's' → logprob: -6.375746726989746
    7. 'contin' → logprob: -6.625746726989746
    8. '                     ' → logprob: -6.750746726989746
    9. '               ' → logprob: -7.250746726989746
    10. '	continue' → logprob: -8.250746726989746

Token 327: ' bien' (ID: 5340)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.47985079884529114
    2. ' continue' → logprob: -1.4798507690429688
    3. 'contin' → logprob: -1.9798507690429688
    4. ' continuer' → logprob: -4.479850769042969
    5. 'les' → logprob: -7.104850769042969
    6. 'aj' → logprob: -7.479850769042969
    7. 's' → logprob: -7.854850769042969
    8. ' les' → logprob: -7.979850769042969
    9. ' ajouter' → logprob: -8.604850769042969
    10. 'v' → logprob: -8.854850769042969

Token 328: ' vérifier' (ID: 93671)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.8461131453514099
    2. 'contin' → logprob: -0.8461131453514099
    3. '                   ' → logprob: -2.2211132049560547
    4. '                       ' → logprob: -3.8461132049560547
    5. ' continuer' → logprob: -6.096113204956055
    6. ' continue' → logprob: -6.221113204956055
    7. '                    ' → logprob: -6.596113204956055
    8. '                     ' → logprob: -6.721113204956055
    9. '                      ' → logprob: -7.471113204956055
    10. ' ' → logprob: -7.471113204956055

Token 329: ' qu' (ID: 474)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.005485957022756338
    2. ' if' → logprob: -6.505486011505127
    3. 'if' → logprob: -6.630486011505127
    4. '                       ' → logprob: -7.005486011505127
    5. '               ' → logprob: -7.755486011505127
    6. 'continue' → logprob: -7.880486011505127
    7. '                    ' → logprob: -8.255485534667969
    8. '   ' → logprob: -8.630485534667969
    9. '       ' → logprob: -9.005485534667969
    10. '           ' → logprob: -9.255485534667969

Token 330: ''ils' (ID: 41108)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.7555229067802429
    2. ' not' → logprob: -1.1305229663848877
    3. 'a' → logprob: -2.0055229663848877
    4. ' (' → logprob: -2.8805229663848877
    5. 'not' → logprob: -5.005522727966309
    6. '(a' → logprob: -5.505522727966309
    7. ' if' → logprob: -6.880522727966309
    8. '(not' → logprob: -7.130522727966309
    9. '(' → logprob: -7.380522727966309
    10. ' k' → logprob: -7.755522727966309

Token 331: ' servent' (ID: 192213)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.23796392977237701
    2. 'continue' → logprob: -1.8629639148712158
    3. '                   ' → logprob: -3.487963914871216
    4. '                       ' → logprob: -4.737964153289795
    5. ' ' → logprob: -5.112964153289795
    6. 'contin' → logprob: -6.112964153289795
    7. '	continue' → logprob: -6.987964153289795
    8. '   ' → logprob: -7.112964153289795
    9. ' continues' → logprob: -7.237964153289795
    10. '                    ' → logprob: -7.362964153289795

Token 332: ' :
' (ID: 10039)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0034633444156497717
    2. '                    ' → logprob: -6.878463268280029
    3. '                       ' → logprob: -7.503463268280029
    4. ' ' → logprob: -7.628463268280029
    5. '               ' → logprob: -7.878463268280029
    6. '   ' → logprob: -8.253463745117188
    7. '                    
' → logprob: -8.753463745117188
    8. '                  ' → logprob: -9.378463745117188
    9. ',' → logprob: -9.628463745117188
    10. '<|end|>' → logprob: -9.753463745117188

Token 333: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0552690327167511
    2. '                       ' → logprob: -3.1802690029144287
    3. '                    ' → logprob: -5.555269241333008
    4. ' continue' → logprob: -6.180269241333008
    5. 'continue' → logprob: -7.055269241333008
    6. '                               ' → logprob: -7.305269241333008
    7. '                           ' → logprob: -7.430269241333008
    8. ' if' → logprob: -7.430269241333008
    9. '               ' → logprob: -7.680269241333008
    10. 'if' → logprob: -7.930269241333008

Token 334: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.09189166873693466
    2. '                   ' → logprob: -2.4668917655944824
    3. ' if' → logprob: -5.966891765594482
    4. 'for' → logprob: -8.591891288757324
    5. '#' → logprob: -10.466891288757324
    6. 'dp' → logprob: -10.466891288757324
    7. '               ' → logprob: -10.591891288757324
    8. '                    
' → logprob: -10.841891288757324
    9. '                    ' → logprob: -10.966891288757324
    10. '   ' → logprob: -10.966891288757324

Token 335: ' (' (ID: 350)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.7541608810424805
    2. ' (' → logprob: -1.2541608810424805
    3. '(j' → logprob: -1.7541608810424805
    4. '(l' → logprob: -2.7541608810424805
    5. '(' → logprob: -6.1291608810424805
    6. '(a' → logprob: -6.2541608810424805
    7. 'j' → logprob: -6.6291608810424805
    8. ' j' → logprob: -7.6291608810424805
    9. ' not' → logprob: -8.25416088104248
    10. '   ' → logprob: -8.37916088104248

Token 336: 'j' (ID: 73)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.6205856204032898
    2. 'j' → logprob: -1.1205856800079346
    3. 'k' → logprob: -1.9955856800079346
    4. ' l' → logprob: -8.995585441589355
    5. ' j' → logprob: -9.495585441589355
    6. 'i' → logprob: -10.120585441589355
    7. ' k' → logprob: -10.870585441589355
    8. '   ' → logprob: -10.870585441589355
    9. ' ' → logprob: -11.245585441589355
    10. '(l' → logprob: -11.620585441589355

Token 337: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.17978456616401672
    2. '==' → logprob: -1.8047845363616943
    3. ' ' → logprob: -10.679784774780273
    4. '==
' → logprob: -12.429784774780273
    5. ' !=' → logprob: -13.054784774780273
    6. '=' → logprob: -13.304784774780273
    7. ' ' → logprob: -13.804784774780273
    8. 'a' → logprob: -13.804784774780273
    9. '0' → logprob: -13.929784774780273
    10. ',' → logprob: -13.929784774780273

Token 338: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00045247984235174954
    2. '1' → logprob: -7.875452518463135
    3. '2' → logprob: -9.875452041625977
    4. ' ' → logprob: -11.000452041625977
    5. '3' → logprob: -13.375452041625977
    6. '   ' → logprob: -13.750452041625977
    7. '

' → logprob: -14.750452041625977
    8. '    ' → logprob: -15.000452041625977
    9. '
' → logprob: -15.125452041625977
    10. '  ' → logprob: -15.750452041625977

Token 339: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.018438229337334633
    2. '1' → logprob: -4.393438339233398
    3. '2' → logprob: -5.143438339233398
    4. '3' → logprob: -9.643438339233398
    5. ' ' → logprob: -12.768438339233398
    6. '   ' → logprob: -14.018438339233398
    7. '

' → logprob: -14.018438339233398
    8. '
' → logprob: -14.518438339233398
    9. 'a' → logprob: -14.580938339233398
    10. '    ' → logprob: -14.643438339233398

Token 340: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.06197754293680191
    2. 'and' → logprob: -2.8119776248931885
    3. ' ' → logprob: -11.81197738647461
    4. ' и' → logprob: -13.93697738647461
    5. ')' → logprob: -14.43697738647461
    6. 'a' → logprob: -15.43697738647461
    7. '	and' → logprob: -15.43697738647461
    8. ' &&' → logprob: -16.06197738647461
    9. 'そして' → logprob: -16.56197738647461
    10. '    ' → logprob: -16.81197738647461

Token 341: ' l' (ID: 305)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.20368671417236328
    2. 'l' → logprob: -1.7036867141723633
    3. ' k' → logprob: -6.828686714172363
    4. 'a' → logprob: -7.453686714172363
    5. ' l' → logprob: -7.453686714172363
    6. '   ' → logprob: -11.453686714172363
    7. '  ' → logprob: -11.578686714172363
    8. ' ' → logprob: -12.203686714172363
    9. ' a' → logprob: -12.953686714172363
    10. '    ' → logprob: -13.578686714172363

Token 342: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.026323866099119186
    2. ' ==' → logprob: -3.6513237953186035
    3. '=' → logprob: -11.776324272155762
    4. ' ' → logprob: -12.026324272155762
    5. '==
' → logprob: -12.526324272155762
    6. '!=' → logprob: -13.276324272155762
    7. '  ' → logprob: -13.901324272155762
    8. '1' → logprob: -14.276324272155762
    9. ']==' → logprob: -14.526324272155762
    10. ')==' → logprob: -14.651324272155762

Token 343: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4743800759315491
    2. '2' → logprob: -0.9743800759315491
    3. ' ' → logprob: -8.849380493164062
    4. '0' → logprob: -9.474380493164062
    5. '   ' → logprob: -9.724380493164062
    6. '3' → logprob: -12.224380493164062
    7. '  ' → logprob: -12.849380493164062
    8. '```' → logprob: -12.911880493164062
    9. 'a' → logprob: -13.411880493164062
    10. '
' → logprob: -13.474380493164062

Token 344: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5234255194664001
    2. '2' → logprob: -0.8984255194664001
    3. '0' → logprob: -8.648425102233887
    4. ' ' → logprob: -9.648425102233887
    5. '3' → logprob: -10.648425102233887
    6. '[' → logprob: -11.273425102233887
    7. '   ' → logprob: -11.835925102233887
    8. '{' → logprob: -12.335925102233887
    9. '"' → logprob: -13.523425102233887
    10. '(' → logprob: -13.648425102233887

Token 345: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.20142912864685059
    2. 'and' → logprob: -1.7014291286468506
    3. ')' → logprob: -12.20142936706543
    4. '                   ' → logprob: -12.82642936706543
    5. ' ' → logprob: -13.07642936706543
    6. '                       ' → logprob: -13.20142936706543
    7. ' и' → logprob: -14.32642936706543
    8. '                    ' → logprob: -14.82642936706543
    9. '                           ' → logprob: -14.82642936706543
    10. '	and' → logprob: -15.07642936706543

Token 346: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -2.8206473871250637e-05
    2. ' a' → logprob: -10.500028610229492
    3. '	a' → logprob: -15.125028610229492
    4. '   ' → logprob: -15.500028610229492
    5. '2' → logprob: -16.000028610229492
    6. 'а' → logprob: -17.125028610229492
    7. '0' → logprob: -17.500028610229492
    8. ')a' → logprob: -18.000028610229492
    9. 'k' → logprob: -18.250028610229492
    10. ' ' → logprob: -18.625028610229492

Token 347: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3133215606212616
    2. ' ==' → logprob: -1.313321590423584
    3. ')' → logprob: -11.063321113586426
    4. ' ' → logprob: -11.063321113586426
    5. '=' → logprob: -11.813321113586426
    6. '  ' → logprob: -12.313321113586426
    7. ']==' → logprob: -12.813321113586426
    8. ')==' → logprob: -12.813321113586426
    9. '!=' → logprob: -13.188321113586426
    10. '[' → logprob: -13.563321113586426

Token 348: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.877503907773644e-05
    2. '3' → logprob: -9.375099182128906
    3. ' ' → logprob: -12.000099182128906
    4. '0' → logprob: -12.125099182128906
    5. '   ' → logprob: -13.875099182128906
    6. '
' → logprob: -14.875099182128906
    7. '1' → logprob: -15.000099182128906
    8. '```' → logprob: -16.312599182128906
    9. '  ' → logprob: -16.500099182128906
    10. '

' → logprob: -16.562599182128906

Token 349: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00386801571585238
    2. '0' → logprob: -6.253868103027344
    3. '3' → logprob: -6.253868103027344
    4. ' ' → logprob: -11.628868103027344
    5. '   ' → logprob: -13.003868103027344
    6. '1' → logprob: -13.253868103027344
    7. '```' → logprob: -14.503868103027344
    8. '
' → logprob: -15.003868103027344
    9. '  ' → logprob: -16.003868103027344
    10. '[' → logprob: -16.253868103027344

Token 350: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.384136825799942
    2. '):
' → logprob: -1.2591367959976196
    3. ')' → logprob: -3.384136915206909
    4. '                       ' → logprob: -7.50913667678833
    5. '                   ' → logprob: -8.259137153625488
    6. '):

' → logprob: -9.259137153625488
    7. '):
' → logprob: -9.634137153625488
    8. ':' → logprob: -10.134137153625488
    9. 'continue' → logprob: -10.509137153625488
    10. ')==' → logprob: -10.884137153625488

Token 351: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.004858480300754309
    2. '                   ' → logprob: -5.629858493804932
    3. 'continue' → logprob: -7.254858493804932
    4. ' continue' → logprob: -7.754858493804932
    5. '               ' → logprob: -10.379858016967773
    6. '                           ' → logprob: -10.629858016967773
    7. ':' → logprob: -10.629858016967773
    8. '       ' → logprob: -11.129858016967773
    9. ':
' → logprob: -11.879858016967773
    10. '	continue' → logprob: -12.004858016967773

Token 352: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.27344849705696106
    2. ' continue' → logprob: -2.1484484672546387
    3. '                       ' → logprob: -2.2734484672546387
    4. '                   ' → logprob: -4.023448467254639
    5. '	continue' → logprob: -7.273448467254639
    6. '                           ' → logprob: -7.523448467254639
    7. '   ' → logprob: -8.023448944091797
    8. '               ' → logprob: -9.523448944091797
    9. ' ' → logprob: -10.523448944091797
    10. '           ' → logprob: -11.023448944091797

Token 353: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.001428928691893816
    2. '<|end|>' → logprob: -8.001428604125977
    3. '               ' → logprob: -8.376428604125977
    4. ')' → logprob: -8.376428604125977
    5. '                    ' → logprob: -8.751428604125977
    6. '                    
' → logprob: -8.751428604125977
    7. '				' → logprob: -9.626428604125977
    8. '   ' → logprob: -9.876428604125977
    9. '                       ' → logprob: -10.251428604125977
    10. '           ' → logprob: -10.501428604125977

Token 354: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.011416075751185417
    2. '<|end|>' → logprob: -5.511415958404541
    3. '               ' → logprob: -5.636415958404541
    4. '                    ' → logprob: -7.136415958404541
    5. '                    
' → logprob: -7.386415958404541
    6. ')' → logprob: -7.636415958404541
    7. '                       ' → logprob: -8.0114164352417
    8. '                ' → logprob: -8.3864164352417
    9. '   ' → logprob: -8.5114164352417
    10. '<|end|>' → logprob: -8.6364164352417

Token 355: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.02849837951362133
    2. 'dp' → logprob: -3.653498411178589
    3. ' dp' → logprob: -7.02849817276001
    4. ')' → logprob: -7.77849817276001
    5. '               ' → logprob: -8.528498649597168
    6. '                    ' → logprob: -8.778498649597168
    7. '                    
' → logprob: -8.778498649597168
    8. '                       ' → logprob: -9.528498649597168
    9. 'if' (adapté à ' if') → logprob: -9.653498649597168
    10. '   ' → logprob: -10.153498649597168

Token 356: ' (' (ID: 350)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.03300601243972778
    2. ' (' → logprob: -4.033006191253662
    3. '(l' → logprob: -4.533006191253662
    4. '(k' → logprob: -5.533006191253662
    5. 'j' → logprob: -11.908005714416504
    6. '(' → logprob: -11.908005714416504
    7. '   ' → logprob: -12.033005714416504
    8. '(i' → logprob: -12.158005714416504
    9. '[j' → logprob: -12.658005714416504
    10. '           ' → logprob: -12.783005714416504

Token 357: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00015050210640765727
    2. 'k' → logprob: -9.875150680541992
    3. 'l' → logprob: -10.125150680541992
    4. ' j' → logprob: -10.250150680541992
    5. 'i' → logprob: -11.750150680541992
    6. '   ' → logprob: -12.375150680541992
    7. ' ' → logprob: -12.625150680541992
    8. '[j' → logprob: -13.500150680541992
    9. '	j' → logprob: -13.625150680541992
    10. ')' → logprob: -13.750150680541992

Token 358: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.575979471206665
    2. '==' → logprob: -0.825979471206665
    3. ' ' → logprob: -11.075979232788086
    4. '=' → logprob: -11.450979232788086
    5. '==
' → logprob: -11.950979232788086
    6. ')' → logprob: -13.575979232788086
    7. '<|end|>' → logprob: -14.200979232788086
    8. '...' → logprob: -14.325979232788086
    9. '  ' → logprob: -14.450979232788086
    10. '0' → logprob: -14.450979232788086

Token 359: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5381785035133362
    2. '1' → logprob: -1.0381784439086914
    3. ' ' → logprob: -2.7881784439086914
    4. '2' → logprob: -8.038178443908691
    5. '   ' → logprob: -8.975678443908691
    6. '  ' → logprob: -10.725678443908691
    7. '[' → logprob: -11.600678443908691
    8. '    ' → logprob: -11.663178443908691
    9. '3' → logprob: -11.850678443908691
    10. ')' → logprob: -12.038178443908691

Token 360: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3135184049606323
    2. '0' → logprob: -1.3135184049606323
    3. '2' → logprob: -8.563518524169922
    4. '3' → logprob: -10.063518524169922
    5. ' ' → logprob: -11.813518524169922
    6. '   ' → logprob: -12.563518524169922
    7. '...' → logprob: -12.938518524169922
    8. '[' → logprob: -13.376018524169922
    9. 'l' → logprob: -14.188518524169922
    10. '
' → logprob: -14.188518524169922

Token 361: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.47408318519592285
    2. 'and' → logprob: -0.9740831851959229
    3. ' ' → logprob: -12.349082946777344
    4. '==' → logprob: -15.349082946777344
    5. '[' → logprob: -15.474082946777344
    6. '    ' → logprob: -15.599082946777344
    7. '   ' → logprob: -15.724082946777344
    8. '	and' → logprob: -15.724082946777344
    9. ' ' → logprob: -15.724082946777344
    10. ',' → logprob: -16.349082946777344

Token 362: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.023248272016644478
    2. 'l' → logprob: -3.7732481956481934
    3. 'a' → logprob: -13.898248672485352
    4. ' k' → logprob: -13.898248672485352
    5. ' l' → logprob: -14.898248672485352
    6. '   ' → logprob: -15.023248672485352
    7. '  ' → logprob: -15.648248672485352
    8. ' ' → logprob: -16.27324867248535
    9. '	k' → logprob: -17.89824867248535
    10. '    ' → logprob: -18.14824867248535

Token 363: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.47414833307266235
    2. ' ==' → logprob: -0.9741483330726624
    3. '1' → logprob: -9.849148750305176
    4. ' ' → logprob: -12.224148750305176
    5. '=' → logprob: -12.724148750305176
    6. '[' → logprob: -12.724148750305176
    7. ']==' → logprob: -13.099148750305176
    8. '2' → logprob: -13.474148750305176
    9. '==
' → logprob: -13.599148750305176
    10. '!=' → logprob: -14.474148750305176

Token 364: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.004712545778602362
    2. '1' → logprob: -5.3797125816345215
    3. ' ' → logprob: -9.379712104797363
    4. '   ' → logprob: -12.129712104797363
    5. '  ' → logprob: -14.004712104797363
    6. '0' → logprob: -14.254712104797363
    7. '
' → logprob: -15.067212104797363
    8. '    ' → logprob: -15.692212104797363
    9. '```' → logprob: -16.06721305847168
    10. '

' → logprob: -16.75471305847168

Token 365: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0067405966110527515
    2. '2' → logprob: -5.006740570068359
    3. ' ' → logprob: -10.63174057006836
    4. '0' → logprob: -14.50674057006836
    5. '   ' → logprob: -15.00674057006836
    6. '  ' → logprob: -16.81924057006836
    7. '```' → logprob: -17.44424057006836
    8. '3' → logprob: -17.63174057006836
    9. '-' → logprob: -17.75674057006836
    10. ')' → logprob: -18.00674057006836

Token 366: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.16023895144462585
    2. 'and' → logprob: -1.9102389812469482
    3. ' ' → logprob: -12.285239219665527
    4. '                       ' → logprob: -12.285239219665527
    5. '                        ' → logprob: -13.410239219665527
    6. '                           ' → logprob: -14.285239219665527
    7. '                   ' → logprob: -14.410239219665527
    8. ' ' → logprob: -14.660239219665527
    9. '	and' → logprob: -14.660239219665527
    10. '                    ' → logprob: -15.035239219665527

Token 367: ' a' (ID: 261)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.004632215015590191
    2. ' ' → logprob: -5.379631996154785
    3. 'a' → logprob: -12.004631996154785
    4. '   ' → logprob: -12.254631996154785
    5. '  ' → logprob: -14.629631996154785
    6. '    ' → logprob: -15.129631996154785
    7. ' a' → logprob: -16.1296329498291
    8. '                   ' → logprob: -16.7546329498291
    9. '           ' → logprob: -17.0046329498291
    10. '     ' → logprob: -18.3796329498291

Token 368: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3986676037311554
    2. ' ==' → logprob: -1.398667573928833
    3. '=' → logprob: -2.648667573928833
    4. ' ' → logprob: -5.523667812347412
    5. '2' → logprob: -5.648667812347412
    6. ' =' → logprob: -5.898667812347412
    7. '  ' → logprob: -7.898667812347412
    8. '                           ' → logprob: -9.273667335510254
    9. '                          ' → logprob: -9.398667335510254
    10. '   ' → logprob: -9.773667335510254

Token 369: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.56102097814437e-05
    2. ' ' → logprob: -10.000045776367188
    3. '   ' → logprob: -16.375045776367188
    4. '  ' → logprob: -17.625045776367188
    5. '۲' → logprob: -18.125045776367188
    6. '    ' → logprob: -20.062545776367188
    7. '２' → logprob: -20.250045776367188
    8. '২' → logprob: -20.312545776367188
    9. '       ' → logprob: -20.625045776367188
    10. '     ' → logprob: -20.750045776367188

Token 370: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.130576806142926e-05
    2. ' ' → logprob: -10.375031471252441
    3. '   ' → logprob: -17.250030517578125
    4. '  ' → logprob: -17.750030517578125
    5. '۲' → logprob: -18.875030517578125
    6. '２' → logprob: -20.500030517578125
    7. '২' → logprob: -20.625030517578125
    8. '    ' → logprob: -20.875030517578125
    9. '२' → logprob: -21.375030517578125
    10. '<|end|>' → logprob: -21.375030517578125

Token 371: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07278718054294586
    2. '):
' → logprob: -2.822787284851074
    3. ')' → logprob: -4.572787284851074
    4. '                       ' → logprob: -8.697787284851074
    5. ':' → logprob: -8.947787284851074
    6. '                   ' → logprob: -9.697787284851074
    7. '):

' → logprob: -10.197787284851074
    8. '):
' → logprob: -11.572787284851074
    9. ':
' → logprob: -11.947787284851074
    10. ' ):' → logprob: -12.072787284851074

Token 372: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.019054684787988663
    2. 'continue' → logprob: -4.644054889678955
    3. '                   ' → logprob: -5.019054889678955
    4. ' continue' → logprob: -6.144054889678955
    5. ':
' → logprob: -8.144054412841797
    6. '               ' → logprob: -9.644054412841797
    7. '                           ' → logprob: -10.769054412841797
    8. '   ' → logprob: -10.769054412841797
    9. '	continue' → logprob: -10.894054412841797
    10. '                      ' → logprob: -11.019054412841797

Token 373: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.005256645381450653
    2. ' continue' → logprob: -5.255256652832031
    3. '                       ' → logprob: -11.380256652832031
    4. '                   ' → logprob: -11.755256652832031
    5. '	continue' → logprob: -12.880256652832031
    6. '                           ' → logprob: -14.630256652832031
    7. '               ' → logprob: -15.880256652832031
    8. '_continue' → logprob: -16.25525665283203
    9. '                               ' → logprob: -16.38025665283203
    10. 'contin' → logprob: -16.50525665283203

Token 374: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.011426091194152832
    2. '                    
' → logprob: -5.886425971984863
    3. '               ' → logprob: -6.386425971984863
    4. '<|end|>' → logprob: -6.511425971984863
    5. '                       ' → logprob: -6.886425971984863
    6. '                               ' → logprob: -7.136425971984863
    7. '                           ' → logprob: -7.511425971984863
    8. '				' → logprob: -7.886425971984863
    9. '                        
' → logprob: -8.011425971984863
    10. 'dp' → logprob: -8.386425971984863

Token 375: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.010565605945885181
    2. 'dp' → logprob: -4.760565757751465
    3. ' dp' → logprob: -7.010565757751465
    4. '                    
' → logprob: -7.260565757751465
    5. '               ' → logprob: -9.885565757751465
    6. '```' → logprob: -9.885565757751465
    7. '                    ' → logprob: -10.010565757751465
    8. '                       ' → logprob: -10.260565757751465
    9. '(dp' → logprob: -10.635565757751465
    10. '                        
' → logprob: -10.885565757751465

Token 376: ' dp' (ID: 21546)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.07296828180551529
    2. 'dp' (adapté à ' dp') → logprob: -2.6979682445526123
    3. ' dp' → logprob: -6.197968482971191
    4. '                    
' → logprob: -7.197968482971191
    5. '                    ' → logprob: -9.447968482971191
    6. '               ' → logprob: -10.322968482971191
    7. '                       ' → logprob: -10.322968482971191
    8. '                  ' → logprob: -10.822968482971191
    9. '                           ' → logprob: -11.072968482971191
    10. '(dp' → logprob: -11.697968482971191

Token 377: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: 0.0
    2. '[' → logprob: -17.0
    3. '[I' → logprob: -19.125
    4. '   ' → logprob: -19.25
    5. '[j' → logprob: -20.25
    6. ' [' → logprob: -20.375
    7. '[next' → logprob: -20.5
    8. '[n' → logprob: -20.625
    9. 'i' → logprob: -20.875
    10. '```' → logprob: -21.25

Token 378: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00036787090357393026
    2. ' +' → logprob: -8.000368118286133
    3. '][' → logprob: -10.500368118286133
    4. '[i' → logprob: -12.750368118286133
    5. '+i' → logprob: -13.500368118286133
    6. '＋' → logprob: -14.750368118286133
    7. '[' → logprob: -16.125368118286133
    8. ' ' → logprob: -17.125368118286133
    9. '   ' → logprob: -18.375368118286133
    10. '[next' → logprob: -18.500368118286133

Token 379: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.125
    3. '][' → logprob: -18.375
    4. 'j' → logprob: -19.375
    5. '１' → logprob: -20.75
    6. '   ' → logprob: -21.0
    7. '```' → logprob: -21.375
    8. '[j' → logprob: -21.375
    9. '
' → logprob: -23.0
    10. 'l' → logprob: -23.25

Token 380: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4498052223643754e-05
    2. 'a' → logprob: -11.250014305114746
    3. 'j' → logprob: -14.625014305114746
    4. ' ' → logprob: -14.625014305114746
    5. '   ' → logprob: -15.625014305114746
    6. '][' → logprob: -15.875014305114746
    7. 'l' → logprob: -16.000015258789062
    8. '
' → logprob: -16.875015258789062
    9. '```' → logprob: -17.500015258789062
    10. '{' → logprob: -18.375015258789062

Token 381: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.6509451866149902
    2. '[l' → logprob: -0.7759451866149902
    3. '[k' → logprob: -4.02594518661499
    4. '[j' → logprob: -8.900945663452148
    5. '[a' → logprob: -10.525945663452148
    6. '}[' → logprob: -10.525945663452148
    7. '[' → logprob: -10.650945663452148
    8. ')[' → logprob: -10.775945663452148
    9. ' ][' → logprob: -11.025945663452148
    10. '[m' → logprob: -11.275945663452148

Token 382: 'k' (ID: 74)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.20144441723823547
    2. 'k' → logprob: -1.701444387435913
    3. ' ' → logprob: -11.326444625854492
    4. '   ' → logprob: -11.326444625854492
    5. '     ' → logprob: -13.076444625854492
    6. '	l' → logprob: -13.326444625854492
    7. ' l' → logprob: -13.451444625854492
    8. '  ' → logprob: -14.326444625854492
    9. '           ' → logprob: -15.076444625854492
    10. ' k' → logprob: -15.826444625854492

Token 383: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.011065510101616383
    2. '[l' → logprob: -4.511065483093262
    3. 'l' → logprob: -11.386065483093262
    4. '[' → logprob: -12.636065483093262
    5. ' ][' → logprob: -13.261065483093262
    6. ']' → logprob: -14.511065483093262
    7. '	l' → logprob: -15.636065483093262
    8. '   ' → logprob: -15.886065483093262
    9. '"][' → logprob: -16.261066436767578
    10. ''][' → logprob: -16.261066436767578

Token 384: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.3306015716807451e-05
    2. ' l' → logprob: -11.25001335144043
    3. '   ' → logprob: -16.50001335144043
    4. '	l' → logprob: -16.50001335144043
    5. ' ' → logprob: -19.25001335144043
    6. '           ' → logprob: -19.62501335144043
    7. '  ' → logprob: -19.87501335144043
    8. ',l' → logprob: -20.00001335144043
    9. '_l' → logprob: -20.12501335144043
    10. 'л' → logprob: -20.37501335144043

Token 385: '][' (ID: 2696)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.008829060941934586
    2. '][' → logprob: -4.758829116821289
    3. 'a' → logprob: -8.633829116821289
    4. '[' → logprob: -10.258829116821289
    5. ' [' → logprob: -14.633829116821289
    6. '   ' → logprob: -16.13382911682129
    7. ' a' → logprob: -16.25882911682129
    8. '}[' → logprob: -16.38382911682129
    9. '[
' → logprob: -16.50882911682129
    10. '           ' → logprob: -16.75882911682129

Token 386: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.8624639324116288e-06
    2. ' a' → logprob: -13.250001907348633
    3. '	a' → logprob: -20.000001907348633
    4. 'а' → logprob: -21.750001907348633
    5. ''a' → logprob: -21.875001907348633
    6. '   ' → logprob: -22.625001907348633
    7. ')a' → logprob: -22.750001907348633
    8. '_a' → logprob: -22.875001907348633
    9. '#a' → logprob: -23.125001907348633
    10. '```' → logprob: -23.500001907348633

Token 387: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0007657911046408117
    2. ']+=' → logprob: -7.375765800476074
    3. ']=(' → logprob: -9.750765800476074
    4. '(' → logprob: -9.875765800476074
    5. '=' → logprob: -11.500765800476074
    6. '=(' → logprob: -12.125765800476074
    7. ']=' → logprob: -12.125765800476074
    8. ' (' → logprob: -13.250765800476074
    9. '+=' → logprob: -13.250765800476074
    10. '+' → logprob: -13.750765800476074

Token 388: ' +=' (ID: 2757)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12580449879169464
    2. '+=' → logprob: -2.2508044242858887
    3. '=(' → logprob: -4.500804424285889
    4. ' =' → logprob: -6.625804424285889
    5. ']+=' → logprob: -8.500804901123047
    6. '(' → logprob: -9.000804901123047
    7. ' +=' → logprob: -9.625804901123047
    8. '%=' → logprob: -10.125804901123047
    9. ']' → logprob: -11.625804901123047
    10. '+=(' → logprob: -11.875804901123047

Token 389: ' now' (ID: 1954)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'now' → logprob: -0.07889397442340851
    2. ' now' → logprob: -2.5788938999176025
    3. '(now' → logprob: -13.453893661499023
    4. '	now' → logprob: -13.453893661499023
    5. '   ' → logprob: -14.328893661499023
    6. '[now' → logprob: -14.828893661499023
    7. '_now' → logprob: -15.953893661499023
    8. 'nown' → logprob: -16.328893661499023
    9. ' ' → logprob: -16.703893661499023
    10. '               ' → logprob: -17.328893661499023

Token 390: '
' (ID: 198)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.31636565923690796
    2. '%' → logprob: -1.3163657188415527
    3. ' %=' → logprob: -7.066365718841553
    4. '<|end|>' → logprob: -7.066365718841553
    5. ' dp' → logprob: -8.066365242004395
    6. ' ' → logprob: -8.441365242004395
    7. ')' → logprob: -8.441365242004395
    8. '                   ' → logprob: -9.066365242004395
    9. '
' → logprob: -9.316365242004395
    10. ')%' → logprob: -9.566365242004395

Token 391: '                   ' (ID: 699)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.8661201596260071
    2. '%' → logprob: -0.9911201596260071
    3. ' %' → logprob: -2.2411201000213623
    4. ' dp' → logprob: -2.7411201000213623
    5. ' %=' → logprob: -4.616120338439941
    6. '(dp' → logprob: -4.741120338439941
    7. '%=' → logprob: -5.116120338439941
    8. '
' → logprob: -5.741120338439941
    9. '                   ' → logprob: -5.991120338439941
    10. '	dp' → logprob: -6.241120338439941

Token 392: ' dp' (ID: 21546)
  Prédit: ' dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.5083196759223938
    2. 'dp' (adapté à ' dp') → logprob: -1.008319616317749
    3. ' %' → logprob: -4.008319854736328
    4. '%' → logprob: -5.133319854736328
    5. '(dp' → logprob: -5.883319854736328
    6. ')' → logprob: -6.133319854736328
    7. '                   ' → logprob: -6.508319854736328
    8. ' 
' → logprob: -7.008319854736328
    9. '                    
' → logprob: -7.758319854736328
    10. '                    ' → logprob: -8.008319854736328

Token 393: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: 0.0
    2. '[' → logprob: -17.125
    3. '[I' → logprob: -18.625
    4. 'i' → logprob: -19.5
    5. '```' → logprob: -20.5
    6. ' [' → logprob: -20.875
    7. ' ' → logprob: -21.625
    8. ']' → logprob: -21.75
    9. '[
' → logprob: -21.75
    10. 'import' → logprob: -21.75

Token 394: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06199827790260315
    2. ' +' → logprob: -2.8119983673095703
    3. '][' → logprob: -10.81199836730957
    4. '[' → logprob: -12.43699836730957
    5. '＋' → logprob: -12.43699836730957
    6. '[i' → logprob: -13.68699836730957
    7. ' [+' → logprob: -14.18699836730957
    8. '+i' → logprob: -15.06199836730957
    9. '+[' → logprob: -15.18699836730957
    10. '[next' → logprob: -16.56199836730957

Token 395: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.180258191714529e-06
    2. ' ' → logprob: -11.750008583068848
    3. '```' → logprob: -16.31250762939453
    4. '   ' → logprob: -16.43750762939453
    5. '           ' → logprob: -18.25000762939453
    6. '[' → logprob: -18.37500762939453
    7. '+' → logprob: -18.50000762939453
    8. '0' → logprob: -18.62500762939453
    9. '                   ' → logprob: -18.75000762939453
    10. '     ' → logprob: -19.06250762939453

Token 396: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.750003814697266
    3. '```' → logprob: -15.250003814697266
    4. '   ' → logprob: -16.125003814697266
    5. '+' → logprob: -17.000003814697266
    6. '0' → logprob: -17.687503814697266
    7. '[' → logprob: -17.812503814697266
    8. '１' → logprob: -17.812503814697266
    9. '
' → logprob: -18.062503814697266
    10. '१' → logprob: -18.250003814697266

Token 397: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.026376472786068916
    2. '[k' → logprob: -3.651376485824585
    3. ')[' → logprob: -10.776376724243164
    4. '}[' → logprob: -10.901376724243164
    5. ']' → logprob: -11.526376724243164
    6. '   ' → logprob: -12.151376724243164
    7. '"][' → logprob: -12.276376724243164
    8. ' ][' → logprob: -12.276376724243164
    9. '[' → logprob: -12.651376724243164
    10. ',k' → logprob: -14.151376724243164

Token 398: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: 0.0
    2. ' k' → logprob: -16.75
    3. 'j' → logprob: -17.625
    4. ' ' → logprob: -19.375
    5. 'l' → logprob: -20.125
    6. '   ' → logprob: -20.625
    7. '	k' → logprob: -20.875
    8. '```' → logprob: -21.375
    9. '[k' → logprob: -21.625
    10. '
' → logprob: -22.625

Token 399: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -9.610702363715973e-06
    2. '[l' → logprob: -11.750009536743164
    3. ']' → logprob: -13.875009536743164
    4. ' ][' → logprob: -15.250009536743164
    5. '[' → logprob: -15.625009536743164
    6. 'l' → logprob: -16.250009536743164
    7. '"][' → logprob: -16.500009536743164
    8. '   ' → logprob: -17.250009536743164
    9. ''][' → logprob: -17.750009536743164
    10. '}[' → logprob: -17.750009536743164

Token 400: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -2.696889623621246e-06
    2. '	l' → logprob: -13.50000286102295
    3. 'a' → logprob: -14.87500286102295
    4. '[l' → logprob: -15.00000286102295
    5. ' l' → logprob: -15.12500286102295
    6. 'л' → logprob: -16.000001907348633
    7. '```' → logprob: -16.250001907348633
    8. '][' → logprob: -17.250001907348633
    9. '_l' → logprob: -17.375001907348633
    10. '(l' → logprob: -17.625001907348633

Token 401: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00020747410599142313
    2. '[a' → logprob: -8.625207901000977
    3. ']' → logprob: -12.000207901000977
    4. 'a' → logprob: -12.000207901000977
    5. '           ' → logprob: -12.375207901000977
    6. ' ][' → logprob: -12.875207901000977
    7. '"][' → logprob: -13.250207901000977
    8. '```' → logprob: -13.500207901000977
    9. '       ' → logprob: -13.875207901000977
    10. ')[' → logprob: -14.000207901000977

Token 402: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.1472419600977446e-06
    2. ' a' → logprob: -13.875000953674316
    3. '[a' → logprob: -16.375001907348633
    4. '	a' → logprob: -18.125001907348633
    5. '   ' → logprob: -19.625001907348633
    6. '][' → logprob: -19.625001907348633
    7. '           ' → logprob: -19.750001907348633
    8. 'а' → logprob: -19.750001907348633
    9. ''a' → logprob: -20.000001907348633
    10. '(a' → logprob: -20.250001907348633

Token 403: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -9.491498531133402e-06
    2. ']%' → logprob: -11.750009536743164
    3. ')' → logprob: -14.500009536743164
    4. '}' → logprob: -14.875009536743164
    5. ' ]' → logprob: -15.000009536743164
    6. '```' → logprob: -15.875009536743164
    7. '[' → logprob: -16.625009536743164
    8. '%' → logprob: -16.750009536743164
    9. ']
' → logprob: -17.125009536743164
    10. '']' → logprob: -17.500009536743164

Token 404: ' %=' (ID: 117035)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3271637260913849
    2. '%=' → logprob: -1.5771636962890625
    3. ' %=' → logprob: -2.7021636962890625
    4. '%' → logprob: -6.0771636962890625
    5. ')' → logprob: -6.5771636962890625
    6. '```' → logprob: -7.3271636962890625
    7. ']%' → logprob: -7.4521636962890625
    8. '   ' → logprob: -8.827163696289062
    9. '[' → logprob: -8.952163696289062
    10. '	' → logprob: -10.077163696289062

Token 405: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -6.2729995988775045e-06
    2. ' MOD' → logprob: -12.000006675720215
    3. '_MOD' → logprob: -21.5000057220459
    4. 'MO' → logprob: -23.3750057220459
    5. '.MOD' → logprob: -23.6250057220459
    6. 'MD' → logprob: -24.7500057220459
    7. 'mod' → logprob: -24.8750057220459
    8. '10' → logprob: -25.7500057220459
    9. '```' → logprob: -25.7500057220459
    10. '   ' → logprob: -25.7500057220459

Token 406: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 407: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 408: ' Mod' (ID: 7191)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 409: 'ulo' (ID: 5953)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 410: ' à' (ID: 1221)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 411: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.30548208951950073
    2. '}' → logprob: -2.6804821491241455
    3. 'each' → logprob: -2.6804821491241455
    4. 'MOD' → logprob: -3.0554821491241455
    5. ' each' → logprob: -3.8054821491241455
    6. 'continue' → logprob: -5.055481910705566
    7. '100' → logprob: -5.180481910705566
    8. ' }' → logprob: -5.180481910705566
    9. 'prevent' → logprob: -5.430481910705566
    10. '```' → logprob: -5.805481910705566

Token 412: ' fois' (ID: 14697)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 413: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 414: ' sinon' (ID: 52915)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 415: ' overflow' (ID: 28614)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 416: ' (' (ID: 350)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 417: 'j' (ID: 73)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01636301539838314
    2. '<|end|>' → logprob: -4.141363143920898
    3. '<|end|>' → logprob: -9.266363143920898
    4. ')
' → logprob: -9.516363143920898
    5. '```' → logprob: -10.391363143920898
    6. '                   ' → logprob: -10.766363143920898
    7. ' )' → logprob: -10.766363143920898
    8. '')' → logprob: -11.266363143920898
    9. '   ' → logprob: -11.516363143920898
    10. '               ' → logprob: -11.516363143920898

Token 418: ''ai' (ID: 12480)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.025449614971876144
    2. '])' → logprob: -4.150449752807617
    3. ']' → logprob: -4.775449752807617
    4. '+' → logprob: -8.525449752807617
    5. ' )' → logprob: -9.150449752807617
    6. '})' → logprob: -9.400449752807617
    7. '[' → logprob: -9.400449752807617
    8. '}' → logprob: -9.525449752807617
    9. '#' → logprob: -10.275449752807617
    10. '=' → logprob: -10.275449752807617

Token 419: ' oublié' (ID: 151945)
  Prédit: ' overflow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' overflow' → logprob: -0.5679348707199097
    2. ')' → logprob: -1.4429348707199097
    3. ' error' → logprob: -3.317934989929199
    4. 'overflow' → logprob: -4.192934989929199
    5. ' )' → logprob: -4.317934989929199
    6. ']' → logprob: -4.442934989929199
    7. ' +=' → logprob: -4.567934989929199
    8. ' not' → logprob: -4.692934989929199
    9. ' bugs' → logprob: -4.817934989929199
    10. '+' → logprob: -4.817934989929199

Token 420: ' une' (ID: 2463)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004509301797952503
    2. ' )' → logprob: -7.87545108795166
    3. '!)' → logprob: -11.37545108795166
    4. '!' → logprob: -11.75045108795166
    5. '...)' → logprob: -11.87545108795166
    6. '})' → logprob: -11.87545108795166
    7. '}' → logprob: -11.87545108795166
    8. ']' → logprob: -12.00045108795166
    9. ')
' → logprob: -12.50045108795166
    10. '])' → logprob: -12.62545108795166

Token 421: ' fois' (ID: 14697)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.27005162835121155
    2. '+' → logprob: -2.2700517177581787
    3. '%' → logprob: -2.3950517177581787
    4. ' %' → logprob: -4.8950514793396
    5. ' )' → logprob: -5.1450514793396
    6. '+=' → logprob: -5.3950514793396
    7. '=' → logprob: -5.5200514793396
    8. ' space' → logprob: -5.6450514793396
    9. 'space' → logprob: -5.8950514793396
    10. ']' → logprob: -5.8950514793396

Token 422: '...)

' (ID: 98555)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0017883480759337544
    2. '<|end|>' → logprob: -6.376788139343262
    3. ' )' → logprob: -10.751788139343262
    4. ')
' → logprob: -10.751788139343262
    5. '<|end|>' → logprob: -11.126788139343262
    6. '}' → logprob: -12.376788139343262
    7. '!' → logprob: -12.626788139343262
    8. '...)' → logprob: -12.876788139343262
    9. '```' → logprob: -13.001788139343262
    10. '...' → logprob: -13.001788139343262

Token 423: 'ans' (ID: 616)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 424: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03810770437121391
    2. '=' → logprob: -3.2881076335906982
    3. '_' → logprob: -10.413107872009277
    4. ' ' → logprob: -11.413107872009277
    5. ' +=' → logprob: -12.163107872009277
    6. '[' → logprob: -12.163107872009277
    7. ')' → logprob: -12.913107872009277
    8. ',' → logprob: -12.913107872009277
    9. ' ' → logprob: -13.163107872009277
    10. 'space' → logprob: -13.913107872009277

Token 425: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10323657840490341
    2. 'sum' → logprob: -2.353236675262451
    3. ' sum' → logprob: -5.853236675262451
    4. ' ' → logprob: -8.853236198425293
    5. '(sum' → logprob: -11.478236198425293
    6. '   ' → logprob: -14.478236198425293
    7. '```' → logprob: -14.853236198425293
    8. '(' → logprob: -15.853236198425293
    9. '=sum' → logprob: -15.978236198425293
    10. ' ' → logprob: -16.22823715209961

Token 426: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0297551192343235
    2. 'sum' → logprob: -3.529755115509033
    3. ' sum' → logprob: -13.279755592346191
    4. 'str' → logprob: -13.779755592346191
    5. '(sum' → logprob: -13.779755592346191
    6. ' ' → logprob: -14.779755592346191
    7. '```' → logprob: -15.779755592346191
    8. 'print' → logprob: -16.154754638671875
    9. '(' → logprob: -17.279754638671875
    10. '   ' → logprob: -17.279754638671875

Token 427: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0206720617134124e-05
    2. ' for' → logprob: -11.50001049041748
    3. '```' → logprob: -16.750009536743164
    4. '
' → logprob: -17.125009536743164
    5. '	for' → logprob: -18.750009536743164
    6. 'print' → logprob: -20.625009536743164
    7. '``' → logprob: -20.750009536743164
    8. '#' → logprob: -21.000009536743164
    9. 'sum' → logprob: -21.250009536743164
    10. '   ' → logprob: -21.375009536743164

Token 428: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0024805311113595963
    2. ' for' → logprob: -6.002480506896973
    3. '
' → logprob: -12.502480506896973
    4. '```' → logprob: -14.752480506896973
    5. ' 
' → logprob: -15.377480506896973
    6. '<|end|>' → logprob: -16.12748146057129
    7. '	for' → logprob: -16.37748146057129
    8. '+' → logprob: -16.87748146057129
    9. ')' → logprob: -17.37748146057129
    10. ' ' → logprob: -18.00248146057129

Token 429: ' Bon' (ID: 12658)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.2664456789934775e-06
    2. ' for' → logprob: -13.625000953674316
    3. 'j' → logprob: -17.750001907348633
    4. 'print' → logprob: -18.000001907348633
    5. '_' → logprob: -18.750001907348633
    6. 'i' → logprob: -18.875001907348633
    7. '```' → logprob: -19.250001907348633
    8. 'a' → logprob: -21.000001907348633
    9. '	for' → logprob: -21.125001907348633
    10. '   ' → logprob: -22.125001907348633

Token 430: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.029803020879626274
    2. ' for' → logprob: -3.5298030376434326
    3. 'i' → logprob: -10.029803276062012
    4. ' i' → logprob: -12.779803276062012
    5. '```' → logprob: -12.779803276062012
    6. '_' → logprob: -13.404803276062012
    7. '
' → logprob: -15.029803276062012
    8. 'a' → logprob: -15.279803276062012
    9. 'n' → logprob: -15.904803276062012
    10. 's' → logprob: -16.029802322387695

Token 431: ' maintenant' (ID: 35735)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.027638446539640427
    2. 'j' → logprob: -3.6526384353637695
    3. ' for' → logprob: -6.9026384353637695
    4. 'i' → logprob: -8.52763843536377
    5. ' j' → logprob: -9.15263843536377
    6. 's' → logprob: -11.52763843536377
    7. 'x' → logprob: -12.27763843536377
    8. 'a' → logprob: -12.40263843536377
    9. '```' → logprob: -12.77763843536377
    10. '   ' → logprob: -13.40263843536377

Token 432: ' on' (ID: 402)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.7610454708337784e-05
    2. ' for' → logprob: -10.500027656555176
    3. 'i' → logprob: -17.25002670288086
    4. '```' → logprob: -18.25002670288086
    5. 'print' → logprob: -18.37502670288086
    6. '
' → logprob: -18.62502670288086
    7. '   ' → logprob: -20.62502670288086
    8. '	for' → logprob: -20.87502670288086
    9. '_' → logprob: -21.12502670288086
    10. 'a' → logprob: -21.62502670288086

Token 433: ' addition' (ID: 5856)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.003729534102603793
    2. ' for' → logprob: -5.628729343414307
    3. '=' → logprob: -9.003729820251465
    4. ' =' → logprob: -13.003729820251465
    5. 'range' → logprob: -13.253729820251465
    6. '
' → logprob: -14.378729820251465
    7. ' range' → logprob: -14.628729820251465
    8. 'pour' → logprob: -14.878729820251465
    9. '+=' → logprob: -15.128729820251465
    10. '```' → logprob: -15.503729820251465

Token 434: 'ne' (ID: 611)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02728261984884739
    2. '=' → logprob: -3.90228271484375
    3. '   ' → logprob: -5.90228271484375
    4. ' for' → logprob: -6.40228271484375
    5. '+=' → logprob: -6.65228271484375
    6. 'range' → logprob: -7.40228271484375
    7. 'ner' → logprob: -9.27728271484375
    8. ' =' → logprob: -9.77728271484375
    9. ' +=' → logprob: -10.02728271484375
    10. 'er' → logprob: -10.15228271484375

Token 435: ' tout' (ID: 5501)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.165027217415627e-05
    2. ' for' → logprob: -10.750021934509277
    3. 'i' → logprob: -16.00002098083496
    4. '   ' → logprob: -18.25002098083496
    5. '```' → logprob: -18.62502098083496
    6. '	for' → logprob: -19.87502098083496
    7. '_' → logprob: -20.50002098083496
    8. 'print' → logprob: -20.50002098083496
    9. '_for' → logprob: -21.62502098083496
    10. 'sum' → logprob: -21.62502098083496

Token 436: ' ce' (ID: 2357)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.7697225252486533e-06
    2. ' for' → logprob: -12.500003814697266
    3. '```' → logprob: -19.500003814697266
    4. '   ' → logprob: -20.250003814697266
    5. '
' → logprob: -20.625003814697266
    6. 'i' → logprob: -21.000003814697266
    7. 'print' → logprob: -22.750003814697266
    8. '	for' → logprob: -22.750003814697266
    9. '``' → logprob: -23.250003814697266
    10. 'final' → logprob: -25.125003814697266

Token 437: ' qui' (ID: 2780)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04160359874367714
    2. 'pour' → logprob: -3.4166035652160645
    3. ' for' → logprob: -5.4166035652160645
    4. '[i' → logprob: -6.1666035652160645
    5. ' pour' → logprob: -7.1666035652160645
    6. 'i' → logprob: -8.541604042053223
    7. 'in' → logprob: -8.791604042053223
    8. '   ' → logprob: -10.166604042053223
    9. 'en' → logprob: -10.166604042053223
    10. '_' → logprob: -10.541604042053223

Token 438: ' reste' (ID: 26769)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.4521375894546509
    2. '[i' → logprob: -2.0771374702453613
    3. 'se' → logprob: -2.3271374702453613
    4. 'possible' → logprob: -2.7021374702453613
    5. 'pour' → logprob: -2.9521374702453613
    6. 'for' → logprob: -2.9521374702453613
    7. 'a' → logprob: -3.0771374702453613
    8. '[N' → logprob: -3.0771374702453613
    9. 's' → logprob: -3.4521374702453613
    10. 'n' → logprob: -3.4521374702453613

Token 439: ' à' (ID: 1221)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1160349458805285e-05
    2. ' for' → logprob: -11.625011444091797
    3. '```' → logprob: -13.125011444091797
    4. '
' → logprob: -16.625011444091797
    5. '``' → logprob: -17.625011444091797
    6. '   ' → logprob: -17.625011444091797
    7. '	for' → logprob: -19.250011444091797
    8. '    
' → logprob: -20.125011444091797
    9. 'print' → logprob: -20.750011444091797
    10. 'i' → logprob: -21.000011444091797

Token 440: ' la' (ID: 557)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.16081897914409637
    2. 'la' → logprob: -2.0358190536499023
    3. 'i' → logprob: -4.410819053649902
    4. 'l' → logprob: -5.785819053649902
    5. 'ans' → logprob: -7.160819053649902
    6. ' la' → logprob: -8.160819053649902
    7. '0' → logprob: -8.160819053649902
    8. 'len' → logprob: -8.410819053649902
    9. 'for' → logprob: -8.410819053649902
    10. '[N' → logprob: -8.410819053649902

Token 441: ' fin' (ID: 2131)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0012997613521292806
    2. '[N' → logprob: -7.876299858093262
    3. '```' → logprob: -8.001299858093262
    4. 'dp' → logprob: -8.501299858093262
    5. 'fin' → logprob: -9.251299858093262
    6. 'for' → logprob: -10.126299858093262
    7. 'final' → logprob: -10.376299858093262
    8. 'niveau' → logprob: -10.626299858093262
    9. 'som' → logprob: -10.876299858093262
    10. '
' → logprob: -10.876299858093262

Token 442: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -6.704273118884885e-07
    2. ' for' → logprob: -14.375000953674316
    3. '```' → logprob: -18.5
    4. '
' → logprob: -20.25
    5. '``' → logprob: -22.5
    6. '   ' → logprob: -22.875
    7. '	for' → logprob: -23.25
    8. 'print' → logprob: -23.375
    9. 'from' → logprob: -24.0
    10. '_for' → logprob: -25.625

Token 443: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -7.896309739408025e-07
    2. ' for' → logprob: -14.375000953674316
    3. '```' → logprob: -15.500000953674316
    4. 'print' → logprob: -19.875
    5. '``' → logprob: -21.0
    6. '	for' → logprob: -21.125
    7. '   ' → logprob: -23.125
    8. '
' → logprob: -23.875
    9. 'For' → logprob: -24.375
    10. 'sum' → logprob: -24.5

Token 444: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.03298444300889969
    2. 'x' → logprob: -3.907984495162964
    3. 'i' → logprob: -4.532984256744385
    4. 'a' → logprob: -6.782984256744385
    5. ' j' → logprob: -8.282984733581543
    6. 'k' → logprob: -9.282984733581543
    7. 'l' → logprob: -10.657984733581543
    8. '_j' → logprob: -10.657984733581543
    9. 'd' → logprob: -11.032984733581543
    10. 'p' → logprob: -11.657984733581543

Token 445: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6931560039520264
    2. ' in' → logprob: -0.6931560039520264
    3. ' ' → logprob: -12.318156242370605
    4. 'range' → logprob: -13.068156242370605
    5. '0' → logprob: -14.568156242370605
    6. '[' → logprob: -14.943156242370605
    7. '```' → logprob: -15.443156242370605
    8. '   ' → logprob: -15.693156242370605
    9. '	in' → logprob: -15.943156242370605
    10. ' ' → logprob: -16.19315528869629

Token 446: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -7.493430894101039e-05
    2. ' range' → logprob: -9.500075340270996
    3. '(range' → logprob: -18.25007438659668
    4. '0' → logprob: -18.50007438659668
    5. '   ' → logprob: -18.87507438659668
    6. '[' → logprob: -19.37507438659668
    7. ' ' → logprob: -19.37507438659668
    8. 'in' → logprob: -20.12507438659668
    9. '  ' → logprob: -21.12507438659668
    10. '4' → logprob: -21.37507438659668

Token 447: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12692904472351074
    2. '4' → logprob: -2.1269290447235107
    3. ' ' → logprob: -14.50192928314209
    4. ' (' → logprob: -15.87692928314209
    5. '```' → logprob: -16.126928329467773
    6. '(
' → logprob: -16.251928329467773
    7. '   ' → logprob: -17.251928329467773
    8. 'def' → logprob: -17.501928329467773
    9. '
' → logprob: -17.501928329467773
    10. 'for' → logprob: -17.501928329467773

Token 448: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '5' → logprob: -19.375
    4. '４' → logprob: -20.25
    5. '   ' → logprob: -20.25
    6. '3' → logprob: -21.25
    7. '```' → logprob: -21.375
    8. '۴' → logprob: -21.75
    9. '٤' → logprob: -22.5
    10. '' → logprob: -22.625

Token 449: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.010195279493927956
    2. '):' → logprob: -4.635195255279541
    3. 'for' → logprob: -9.1351957321167
    4. ',' → logprob: -9.3851957321167
    5. '   ' → logprob: -9.6351957321167
    6. ')' → logprob: -9.6351957321167
    7. ':
' → logprob: -10.0101957321167
    8. ':' → logprob: -10.8851957321167
    9. ' for' → logprob: -11.0101957321167
    10. '):
' → logprob: -11.1351957321167

Token 450: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00022523177904076874
    2. ' for' → logprob: -8.500225067138672
    3. '   ' → logprob: -10.750225067138672
    4. ' ' → logprob: -15.750225067138672
    5. '	for' → logprob: -15.875225067138672
    6. '```' → logprob: -18.875225067138672
    7. '
' → logprob: -19.500225067138672
    8. '       ' → logprob: -21.125225067138672
    9. '  ' → logprob: -21.750225067138672
    10. '4' → logprob: -22.000225067138672

Token 451: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -1.676292231422849e-05
    2. ' for' → logprob: -11.000017166137695
    3. ' ' → logprob: -18.875017166137695
    4. '   ' → logprob: -20.375017166137695
    5. '	for' → logprob: -23.500017166137695
    6. '
' → logprob: -23.500017166137695
    7. '  ' → logprob: -25.250017166137695
    8. 'from' → logprob: -26.000017166137695
    9. '.for' → logprob: -26.000017166137695
    10. '```' → logprob: -26.250017166137695

Token 452: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.00091217877343297
    2. 'l' → logprob: -7.000912189483643
    3. ' k' → logprob: -14.250911712646484
    4. ' l' → logprob: -18.875911712646484
    5. '   ' → logprob: -19.875911712646484
    6. 'kl' → logprob: -21.000911712646484
    7. 'a' → logprob: -21.375911712646484
    8. '	k' → logprob: -22.000911712646484
    9. ' ' → logprob: -22.750911712646484
    10. ',k' → logprob: -23.000911712646484

Token 453: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12693126499652863
    2. 'in' → logprob: -2.1269311904907227
    3. 'range' → logprob: -13.501931190490723
    4. ' ' → logprob: -13.876931190490723
    5. '   ' → logprob: -15.251931190490723
    6. 'import' → logprob: -15.626931190490723
    7. '(' → logprob: -16.37693214416504
    8. '<|end|>' → logprob: -17.12693214416504
    9. '```' → logprob: -17.25193214416504
    10. 'inthe' → logprob: -17.37693214416504

Token 454: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005248225759714842
    2. ' range' → logprob: -5.255248069763184
    3. '(range' → logprob: -11.255248069763184
    4. '4' → logprob: -13.505248069763184
    5. 'for' → logprob: -16.8802490234375
    6. '(' → logprob: -17.1302490234375
    7. 'in' → logprob: -17.7552490234375
    8. ' in' → logprob: -18.8802490234375
    9. '```' → logprob: -19.1302490234375
    10. ' ' → logprob: -19.5052490234375

Token 455: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01831464096903801
    2. '4' → logprob: -4.268314838409424
    3. 'range' → logprob: -5.518314838409424
    4. ' range' → logprob: -9.018314361572266
    5. 'for' → logprob: -12.643314361572266
    6. 'in' → logprob: -12.893314361572266
    7. '(range' → logprob: -13.018314361572266
    8. ' ' → logprob: -15.143314361572266
    9. ' (' → logprob: -15.393314361572266
    10. ' in' → logprob: -15.768314361572266

Token 456: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.125
    3. 'range' → logprob: -17.0
    4. ' range' → logprob: -21.0
    5. '   ' → logprob: -21.625
    6. 'for' → logprob: -22.125
    7. '```' → logprob: -23.0
    8. ' four' → logprob: -23.125
    9. '۴' → logprob: -23.625
    10. '４' → logprob: -23.875

Token 457: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.04685826227068901
    2. '   ' → logprob: -4.296858310699463
    3. ':
' → logprob: -4.421858310699463
    4. ')' → logprob: -5.171858310699463
    5. ':' → logprob: -5.921858310699463
    6. '<|end|>' → logprob: -5.921858310699463
    7. '):' → logprob: -6.046858310699463
    8. ' ' → logprob: -6.671858310699463
    9. ',' → logprob: -6.796858310699463
    10. ' in' → logprob: -6.921858310699463

Token 458: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7774689197540283
    2. 'for' → logprob: -1.0274689197540283
    3. '   ' → logprob: -2.2774689197540283
    4. ' for' → logprob: -2.5274689197540283
    5. '	for' → logprob: -9.77746868133545
    6. ' ' → logprob: -10.15246868133545
    7. '	' → logprob: -12.15246868133545
    8. '    ' → logprob: -12.65246868133545
    9. '[' → logprob: -12.90246868133545
    10. '```' → logprob: -13.02746868133545

Token 459: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.008741740137338638
    2. ' for' → logprob: -4.758741855621338
    3. '   ' → logprob: -9.00874137878418
    4. '       ' → logprob: -12.63374137878418
    5. '	for' → logprob: -13.63374137878418
    6. ' ' → logprob: -15.00874137878418
    7. '```' → logprob: -17.75874137878418
    8. '    ' → logprob: -19.25874137878418
    9. '  ' → logprob: -19.50874137878418
    10. '           ' → logprob: -20.25874137878418

Token 460: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -2.935296834039036e-06
    2. ' l' → logprob: -12.75000286102295
    3. ' range' → logprob: -21.750003814697266
    4. 'range' → logprob: -22.750003814697266
    5. '	l' → logprob: -22.750003814697266
    6. '_l' → logprob: -23.625003814697266
    7. ' in' → logprob: -25.125003814697266
    8. ' ' → logprob: -25.125003814697266
    9. '   ' → logprob: -25.250003814697266
    10. '$l' → logprob: -26.000003814697266

Token 461: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.06595529615879059
    2. ' in' → logprob: -2.815955400466919
    3. 'range' → logprob: -5.56595516204834
    4. ' range' → logprob: -8.81595516204834
    5. '(range' → logprob: -12.56595516204834
    6. '(' → logprob: -14.06595516204834
    7. ' ' → logprob: -14.56595516204834
    8. '   ' → logprob: -14.81595516204834
    9. '```' → logprob: -15.69095516204834
    10. '	range' → logprob: -17.065956115722656

Token 462: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.001969673437997699
    2. ' range' → logprob: -6.251969814300537
    3. '(range' → logprob: -10.251969337463379
    4. '(' → logprob: -12.126969337463379
    5. '4' → logprob: -15.251969337463379
    6. 'in' → logprob: -17.001970291137695
    7. '_range' → logprob: -17.876970291137695
    8. '	range' → logprob: -18.376970291137695
    9. '```' → logprob: -19.126970291137695
    10. '[' → logprob: -19.376970291137695

Token 463: '(' (ID: 7)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.05757976323366165
    2. '(' → logprob: -3.057579755783081
    3. 'range' → logprob: -4.93257999420166
    4. ' range' → logprob: -6.55757999420166
    5. '(range' → logprob: -8.80757999420166
    6. 'in' → logprob: -9.30757999420166
    7. ' in' → logprob: -9.55757999420166
    8. ' ' → logprob: -12.68257999420166
    9. '[' → logprob: -12.80757999420166
    10. '```' → logprob: -13.18257999420166

Token 464: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -14.625000953674316
    3. 'range' → logprob: -14.750000953674316
    4. ' range' → logprob: -17.375001907348633
    5. '```' → logprob: -18.500001907348633
    6. '   ' → logprob: -18.875001907348633
    7. ')' → logprob: -19.500001907348633
    8. '۴' → logprob: -19.750001907348633
    9. '' → logprob: -21.125001907348633
    10. '৪' → logprob: -21.250001907348633

Token 465: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5801755785942078
    2. '):' → logprob: -0.8301755785942078
    3. ':' → logprob: -5.955175399780273
    4. ')' → logprob: -6.705175399780273
    5. '):

' → logprob: -9.455175399780273
    6. '<|end|>' → logprob: -9.955175399780273
    7. ':
' → logprob: -10.080175399780273
    8. ' in' → logprob: -10.080175399780273
    9. '```' → logprob: -10.080175399780273
    10. 'in' → logprob: -10.205175399780273

Token 466: '           ' (ID: 352)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0820850357413292
    2. ' ans' → logprob: -3.457085132598877
    3. '   ' → logprob: -3.582085132598877
    4. '	ans' → logprob: -4.082085132598877
    5. '<|end|>' → logprob: -7.332085132598877
    6. '(ans' → logprob: -7.457085132598877
    7. '       ' → logprob: -7.457085132598877
    8. '```' → logprob: -7.707085132598877
    9. 'anst' → logprob: -9.082084655761719
    10. '_ans' → logprob: -9.207084655761719

Token 467: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.0010787796927616
    2. '   ' → logprob: -7.2510786056518555
    3. ' ans' → logprob: -8.001078605651855
    4. '	ans' → logprob: -10.626078605651855
    5. '```' → logprob: -12.126078605651855
    6. '(ans' → logprob: -13.001078605651855
    7. '_ans' → logprob: -14.501078605651855
    8. '       ' → logprob: -14.876078605651855
    9. 'anst' → logprob: -15.001078605651855
    10. '
' → logprob: -15.876078605651855

Token 468: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.02330312877893448
    2. ' +=' → logprob: -3.7733030319213867
    3. '   ' → logprob: -10.773303031921387
    4. '+' → logprob: -11.023303031921387
    5. ']+=' → logprob: -11.273303031921387
    6. '+=(' → logprob: -12.398303031921387
    7. '```' → logprob: -13.273303031921387
    8. '	' → logprob: -15.023303031921387
    9. '﻿' → logprob: -15.148303031921387
    10. '+='' → logprob: -15.273303031921387

Token 469: ' (' (ID: 350)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.004811492282897234
    2. ' (' → logprob: -5.3798112869262695
    3. '(' → logprob: -9.00481128692627
    4. '(dp' → logprob: -9.75481128692627
    5. '(sum' → logprob: -12.25481128692627
    6. '(answer' → logprob: -13.25481128692627
    7. '(acc' → logprob: -14.12981128692627
    8. '(arr' → logprob: -14.25481128692627
    9. '   ' → logprob: -14.62981128692627
    10. '(ax' → logprob: -14.75481128692627

Token 470: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.000363590574124828
    2. '(ans' → logprob: -8.00036334991455
    3. ' ans' → logprob: -10.50036334991455
    4. '	ans' → logprob: -14.75036334991455
    5. '           ' → logprob: -16.500364303588867
    6. '_ans' → logprob: -16.625364303588867
    7. 'answer' → logprob: -16.875364303588867
    8. 'ANS' → logprob: -18.000364303588867
    9. '   ' → logprob: -18.125364303588867
    10. 'Ans' → logprob: -18.250364303588867

Token 471: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4740777611732483
    2. ' +' → logprob: -0.9740777611732483
    3. ' ' → logprob: -15.099078178405762
    4. '＋' → logprob: -15.224078178405762
    5. ' ans' → logprob: -16.724077224731445
    6. '+
' → logprob: -16.724077224731445
    7. 'ans' → logprob: -16.849077224731445
    8. ' +
' → logprob: -17.599077224731445
    9. '(ans' → logprob: -17.724077224731445
    10. '
' → logprob: -18.224077224731445

Token 472: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -9.615255839889869e-05
    2. ' dp' → logprob: -9.250096321105957
    3. '           ' → logprob: -19.25009536743164
    4. '	dp' → logprob: -19.50009536743164
    5. '(dp' → logprob: -19.75009536743164
    6. '   ' → logprob: -20.87509536743164
    7. '               ' → logprob: -21.50009536743164
    8. '                   ' → logprob: -22.00009536743164
    9. '_dp' → logprob: -22.00009536743164
    10. '```' → logprob: -22.12509536743164

Token 473: '[N' (ID: 49776)
  Prédit: '[N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[N' → logprob: -5.848420551046729e-05
    2. 'N' → logprob: -9.7500581741333
    3. '[n' → logprob: -16.500059127807617
    4. '[-' → logprob: -18.000059127807617
    5. '[' → logprob: -19.500059127807617
    6. '   ' → logprob: -20.125059127807617
    7. '[
' → logprob: -20.750059127807617
    8. '	N' → logprob: -20.750059127807617
    9. '(N' → logprob: -21.625059127807617
    10. '
' → logprob: -22.000059127807617

Token 474: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0005463610286824405
    2. '[j' → logprob: -7.875546455383301
    3. ']' → logprob: -9.2505464553833
    4. '[' → logprob: -10.3755464553833
    5. ' ][' → logprob: -11.1255464553833
    6. '[N' → logprob: -11.3755464553833
    7. ')[' → logprob: -12.1255464553833
    8. ' ' → logprob: -13.0005464553833
    9. '   ' → logprob: -13.6255464553833
    10. '"][' → logprob: -14.2505464553833

Token 475: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -6.2729995988775045e-06
    2. ' j' → logprob: -12.000006675720215
    3. '   ' → logprob: -17.3750057220459
    4. '[j' → logprob: -18.0000057220459
    5. '	j' → logprob: -18.8750057220459
    6. ' ' → logprob: -19.8750057220459
    7. '$j' → logprob: -20.5000057220459
    8. '  ' → logprob: -20.8750057220459
    9. '_j' → logprob: -21.3750057220459
    10. ':j' → logprob: -21.3750057220459

Token 476: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -6.034592388459714e-06
    2. 'k' → logprob: -12.750005722045898
    3. ' ][' → logprob: -13.250005722045898
    4. '[k' → logprob: -13.875005722045898
    5. ']' → logprob: -15.750005722045898
    6. '"][' → logprob: -16.6250057220459
    7. '   ' → logprob: -17.3750057220459
    8. ''][' → logprob: -17.3750057220459
    9. ',k' → logprob: -17.8750057220459
    10. ' ' → logprob: -18.5000057220459

Token 477: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -5.1689596148207784e-05
    2. ' k' → logprob: -9.875051498413086
    3. 'l' → logprob: -15.875051498413086
    4. ' ' → logprob: -17.250051498413086
    5. '	k' → logprob: -18.625051498413086
    6. 'kl' → logprob: -18.750051498413086
    7. '[k' → logprob: -19.000051498413086
    8. ',k' → logprob: -19.500051498413086
    9. '   ' → logprob: -19.625051498413086
    10. '{k' → logprob: -19.750051498413086

Token 478: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -5.3596853831550106e-05
    2. '[l' → logprob: -9.875053405761719
    3. 'l' → logprob: -13.750053405761719
    4. ' ][' → logprob: -14.750053405761719
    5. ']' → logprob: -15.250053405761719
    6. '"][' → logprob: -15.625053405761719
    7. '```' → logprob: -16.62505340576172
    8. ',l' → logprob: -17.00005340576172
    9. ''][' → logprob: -17.12505340576172
    10. ')[' → logprob: -17.50005340576172

Token 479: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -2.696889623621246e-06
    2. ' l' → logprob: -12.87500286102295
    3. '[l' → logprob: -16.750001907348633
    4. '	l' → logprob: -17.000001907348633
    5. '   ' → logprob: -18.125001907348633
    6. '           ' → logprob: -18.500001907348633
    7. '```' → logprob: -18.500001907348633
    8. ' ' → logprob: -18.500001907348633
    9. '_l' → logprob: -19.375001907348633
    10. '       ' → logprob: -19.500001907348633

Token 480: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.005252018105238676
    2. ')' → logprob: -5.255251884460449
    3. ']' → logprob: -11.25525188446045
    4. ' ])' → logprob: -13.38025188446045
    5. ')%' → logprob: -13.75525188446045
    6. '))' → logprob: -13.88025188446045
    7. ' )' → logprob: -14.50525188446045
    8. '})' → logprob: -14.75525188446045
    9. ''])' → logprob: -15.38025188446045
    10. '   ' → logprob: -15.50525188446045

Token 481: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.16289614140987396
    2. ' %' → logprob: -1.9128961563110352
    3. ')' → logprob: -6.162896156311035
    4. ')%' → logprob: -7.537896156311035
    5. ' %=' → logprob: -11.412896156311035
    6. ' ans' → logprob: -12.537896156311035
    7. ']%' → logprob: -12.662896156311035
    8. 'ans' → logprob: -13.162896156311035
    9. '(ans' → logprob: -13.662896156311035
    10. ' ' → logprob: -13.787896156311035

Token 482: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -3.128163257315464e-07
    2. ' MOD' → logprob: -15.25
    3. '_MOD' → logprob: -21.25
    4. '.MOD' → logprob: -22.375
    5. '```' → logprob: -23.375
    6. 'MO' → logprob: -24.0
    7. 'Mod' → logprob: -25.25
    8. '100' → logprob: -25.75
    9. 'MD' → logprob: -26.0
    10. 'MODE' → logprob: -26.25

Token 483: ' ' (ID: 220)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -6.015305552864447e-05
    2. '
' → logprob: -9.750060081481934
    3. ' print' → logprob: -14.000060081481934
    4. '```' → logprob: -14.000060081481934
    5. '
' → logprob: -16.62506103515625
    6. '            
' → logprob: -17.50006103515625
    7. '(print' → logprob: -18.00006103515625
    8. '#print' → logprob: -18.25006103515625
    9. '``' → logprob: -18.37506103515625
    10. '

' → logprob: -18.87506103515625

Token 484: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00016671013145241886
    2. '
' → logprob: -8.750166893005371
    3. ' print' → logprob: -12.000166893005371
    4. '```' → logprob: -13.375166893005371
    5. '
' → logprob: -15.375166893005371
    6. '(print' → logprob: -16.500165939331055
    7. '``' → logprob: -17.250165939331055
    8. '<|end|>' → logprob: -17.375165939331055
    9. '#print' → logprob: -17.500165939331055
    10. '            
' → logprob: -17.625165939331055

Token 485: ' Plus' (ID: 11899)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.054500666621607e-06
    2. ' print' → logprob: -13.00000286102295
    3. '
' → logprob: -14.25000286102295
    4. '```' → logprob: -16.375003814697266
    5. '#print' → logprob: -18.875003814697266
    6. '#' → logprob: -18.875003814697266
    7. '
' → logprob: -19.375003814697266
    8. 'sys' → logprob: -19.750003814697266
    9. 'import' → logprob: -19.875003814697266
    10. '            
' → logprob: -20.375003814697266

Token 486: ' sûr' (ID: 46415)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.016711603850126266
    2. ')' → logprob: -5.391711711883545
    3. 'ans' → logprob: -5.891711711883545
    4. 'print' → logprob: -5.891711711883545
    5. '```' → logprob: -6.391711711883545
    6. 'import' → logprob: -6.641711711883545
    7. '+=' → logprob: -7.266711711883545
    8. '...' → logprob: -7.766711711883545
    9. ']' → logprob: -7.891711711883545
    10. '1' → logprob: -8.016711235046387

Token 487: ' de' (ID: 334)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0002703953068703413
    2. '
' → logprob: -8.37527084350586
    3. ' print' → logprob: -10.75027084350586
    4. '<|end|>' → logprob: -11.25027084350586
    5. '```' → logprob: -13.37527084350586
    6. ')' → logprob: -13.87527084350586
    7. '            
' → logprob: -14.25027084350586
    8. '

' → logprob: -14.87527084350586
    9. '(print' → logprob: -14.87527084350586
    10. '#print' → logprob: -15.37527084350586

Token 488: ' refaire' (ID: 182834)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2122763693332672
    2. 'print' → logprob: -2.9622764587402344
    3. 'continue' → logprob: -3.4622764587402344
    4. 'import' → logprob: -4.337276458740234
    5. 'contin' → logprob: -4.337276458740234
    6. '+' → logprob: -4.712276458740234
    7. 'faire' → logprob: -4.712276458740234
    8. 'prendre' → logprob: -4.837276458740234
    9. 'range' → logprob: -5.587276458740234
    10. '0' → logprob: -5.587276458740234

Token 489: ' %' (ID: 1851)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 490: ' là' (ID: 8052)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.011734114959836006
    2. ' MOD' → logprob: -5.1367340087890625
    3. '<|end|>' → logprob: -5.7617340087890625
    4. ')' → logprob: -6.3867340087890625
    5. '_MOD' → logprob: -7.7617340087890625
    6. '.MOD' → logprob: -8.511734008789062
    7. '(Mod' → logprob: -8.636734008789062
    8. '(mod' → logprob: -10.761734008789062
    9. 'mod' → logprob: -10.886734008789062
    10. '(' → logprob: -11.261734008789062

Token 491: ',' (ID: 11)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.3063477277755737
    2. ')' → logprob: -1.4313477277755737
    3. 'print' → logprob: -1.5563477277755737
    4. '<|end|>' → logprob: -1.8063477277755737
    5. '
' → logprob: -2.5563478469848633
    6. 'ans' → logprob: -4.806347846984863
    7. '=' → logprob: -5.681347846984863
    8. '<|end|>' → logprob: -5.681347846984863
    9. ')
' → logprob: -5.806347846984863
    10. '``' → logprob: -5.931347846984863

Token 492: ' même' (ID: 9679)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6943553686141968
    2. '<|end|>' → logprob: -1.3193553686141968
    3. '```' → logprob: -2.5693554878234863
    4. '...' → logprob: -3.1943554878234863
    5. ' ' → logprob: -3.1943554878234863
    6. '1' → logprob: -3.6943554878234863
    7. 'print' → logprob: -4.194355487823486
    8. 'ans' → logprob: -5.569355487823486
    9. '10' → logprob: -5.694355487823486
    10. '0' → logprob: -5.694355487823486

Token 493: ' si' (ID: 1784)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9217895865440369
    2. 'ans' → logprob: -0.9217895865440369
    3. '=' → logprob: -2.9217896461486816
    4. ')' → logprob: -3.0467896461486816
    5. 'after' → logprob: -3.4217896461486816
    6. 'import' → logprob: -4.546789646148682
    7. '#' → logprob: -4.921789646148682
    8. ' après' → logprob: -5.171789646148682
    9. ' if' → logprob: -5.296789646148682
    10. '!' → logprob: -5.296789646148682

Token 494: ' normalement' (ID: 164432)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.040998395532369614
    2. ' MOD' → logprob: -3.7909984588623047
    3. '0' → logprob: -4.915998458862305
    4. 'ans' → logprob: -4.915998458862305
    5. '```' → logprob: -7.540998458862305
    6. ')' → logprob: -7.665998458862305
    7. ' ' → logprob: -8.290998458862305
    8. '...' → logprob: -8.415998458862305
    9. '_MOD' → logprob: -8.540998458862305
    10. '+' → logprob: -8.790998458862305

Token 495: ' c' (ID: 274)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.07546098530292511
    2. ')' → logprob: -2.700460910797119
    3. 'MOD' → logprob: -6.200460910797119
    4. '(ans' → logprob: -7.200460910797119
    5. '+' → logprob: -7.325460910797119
    6. ' ans' → logprob: -8.075461387634277
    7. '...' → logprob: -8.075461387634277
    8. '=' → logprob: -8.200461387634277
    9. '```' → logprob: -8.575461387634277
    10. '0' → logprob: -9.325461387634277

Token 496: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.6132262349128723
    2. 'ans' → logprob: -1.2382261753082275
    3. ')' → logprob: -3.6132261753082275
    4. 'est' → logprob: -3.7382261753082275
    5. '```' → logprob: -3.7382261753082275
    6. ''était' → logprob: -4.113226413726807
    7. ''' → logprob: -4.363226413726807
    8. 'n't' → logprob: -4.738226413726807
    9. '’est' → logprob: -5.238226413726807
    10. '%' → logprob: -5.363226413726807

Token 497: ' fait' (ID: 7473)
  Prédit: 'done'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'done' → logprob: -1.0883980989456177
    2. 'already' → logprob: -1.0883980989456177
    3. 'not' → logprob: -2.338397979736328
    4. '%' → logprob: -3.338397979736328
    5. 'ans' → logprob: -3.463397979736328
    6. 'correct' → logprob: -3.713397979736328
    7. ' done' → logprob: -3.713397979736328
    8. ' not' → logprob: -4.463397979736328
    9. ' already' → logprob: -4.713397979736328
    10. ' ' → logprob: -4.713397979736328

Token 498: ' avant' (ID: 13339)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 499: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00010711929644457996
    2. '
' → logprob: -10.250106811523438
    3. ' print' → logprob: -10.375106811523438
    4. '```' → logprob: -10.500106811523438
    5. '<|end|>' → logprob: -11.375106811523438
    6. ')' → logprob: -14.250106811523438
    7. '(print' → logprob: -15.375106811523438
    8. '``' → logprob: -15.625106811523438
    9. '#print' → logprob: -16.000106811523438
    10. 'return' → logprob: -16.250106811523438

Token 500: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.36574100604048e-06
    2. '```' → logprob: -12.500004768371582
    3. ' print' → logprob: -14.875004768371582
    4. '
' → logprob: -15.000004768371582
    5. '``' → logprob: -18.000003814697266
    6. '#print' → logprob: -18.375003814697266
    7. '<|end|>' → logprob: -18.875003814697266
    8. '(print' → logprob: -19.250003814697266
    9. 'import' → logprob: -20.125003814697266
    10. '-print' → logprob: -20.750003814697266

Token 501: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.5760043263435364
    2. '(' → logprob: -0.8260043263435364
    3. ' (' → logprob: -10.076004028320312
    4. '(
' → logprob: -11.201004028320312
    5. '((' → logprob: -12.951004028320312
    6. 'ans' → logprob: -13.076004028320312
    7. '()' → logprob: -13.451004028320312
    8. '(answer' → logprob: -13.826004028320312
    9. '('' → logprob: -14.701004028320312
    10. '(`' → logprob: -15.326004028320312

Token 502: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8624639324116288e-06
    2. '())' → logprob: -13.750001907348633
    3. '()' → logprob: -14.750001907348633
    4. '))' → logprob: -15.500001907348633
    5. ')`' → logprob: -16.500001907348633
    6. ' )' → logprob: -16.875001907348633
    7. ')
' → logprob: -17.250001907348633
    8. ')}' → logprob: -18.750001907348633
    9. '）' → logprob: -19.000001907348633
    10. '`)' → logprob: -19.375001907348633

Token 503: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 504: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 505: ' Voilà' (ID: 149427)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 506: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 507: ' c' (ID: 274)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 508: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.23013365268707275
    2. 'est' → logprob: -1.7301336526870728
    3. 'e' → logprob: -4.855133533477783
    4. '#' → logprob: -5.355133533477783
    5. 'a' → logprob: -5.480133533477783
    6. ''''' → logprob: -5.605133533477783
    7. ''' → logprob: -5.980133533477783
    8. ''était' → logprob: -6.980133533477783
    9. '```' → logprob: -7.230133533477783
    10. ''s' → logprob: -8.105134010314941

Token 509: ' fini' (ID: 63561)
  Prédit: 'tout'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tout' → logprob: -0.007527124602347612
    2. 'f' → logprob: -5.1325273513793945
    3. 'le' → logprob: -7.0075273513793945
    4. 'bon' → logprob: -8.632527351379395
    5. 'termin' → logprob: -9.632527351379395
    6. 'fait' → logprob: -9.757527351379395
    7. ' tout' → logprob: -9.757527351379395
    8. 'fin' → logprob: -9.882527351379395
    9. 'term' → logprob: -10.507527351379395
    10. 'la' → logprob: -10.632527351379395

Token 510: ' (' (ID: 350)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 511: 'ouf' (ID: 154935)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.12127808178775e-05
    2. ')
' → logprob: -10.000051498413086
    3. '<|end|>' → logprob: -12.875051498413086
    4. ' )' → logprob: -14.000051498413086
    5. '```' → logprob: -14.500051498413086
    6. ')#' → logprob: -14.625051498413086
    7. '))' → logprob: -14.625051498413086
    8. '#' → logprob: -15.500051498413086
    9. '}' → logprob: -16.250051498413086
    10. '')' → logprob: -16.375051498413086

Token 512: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.465036105713807e-06
    2. ')
' → logprob: -12.000007629394531
    3. '))' → logprob: -14.750007629394531
    4. '())' → logprob: -15.875007629394531
    5. '`)' → logprob: -16.12500762939453
    6. '）' → logprob: -16.12500762939453
    7. ')`' → logprob: -16.12500762939453
    8. '```' → logprob: -16.12500762939453
    9. ' )' → logprob: -16.37500762939453
    10. ')}' → logprob: -16.62500762939453


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 510
Tokens correctement prédits (1ère position, stricte): 186
Tokens correctement prédits (1ère position, avec adaptation): 200
Tokens correctement prédits (top 10): 354
Précision stricte (1ère position): 36.47%
Précision adaptée (1ère position): 39.22%
Précision (top 10): 69.41%
================================================================================
