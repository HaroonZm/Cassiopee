================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:20:27
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
x, y, a, b, c = map(int, input().split())
p = list(map(int, input().split()))
q = list(map(int, input().split()))
r = list(map(int, input().split()))
for i in range(len(p)):
    pass  # Pas de fonction, pas d'abstractions, ligne laissée pour la platitude
p.sort(reverse=True)
for i in range(len(q)):
    pass
q.sort(reverse=True)
for i in range(len(r)):
    pass
r.sort(reverse=True)
p = p[:x]
q = q[:y]
all_list = []
for v in p:
    all_list.append(v)
for v in q:
    all_list.append(v)
for v in r:
    all_list.append(v)
all_list.sort(reverse=True)
s = 0
i = 0
while i < x + y:
    s += all_list[i]
    i += 1
print(s)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'x' (ID: 87)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' y' (ID: 342)
  → Token d'amorce (pas de prédiction)

Token 3: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.047798529267311096
    2. ' =' → logprob: -3.1727986335754395
    3. ',' → logprob: -5.4227986335754395
    4. ' ' → logprob: -8.922798156738281
    5. '.' → logprob: -9.047798156738281
    6. '+' → logprob: -10.172798156738281
    7. ')' → logprob: -11.172798156738281
    8. '```' → logprob: -11.172798156738281
    9. ';' → logprob: -11.297798156738281
    10. '_' → logprob: -11.672798156738281

Token 4: ' a' (ID: 261)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09458693861961365
    2. ' =' → logprob: -2.4695868492126465
    3. ',' → logprob: -5.4695868492126465
    4. ' ' → logprob: -6.8445868492126465
    5. ')' → logprob: -9.094587326049805
    6. ' ,' → logprob: -9.469587326049805
    7. '.' → logprob: -9.719587326049805
    8. '_' → logprob: -10.594587326049805
    9. '<|end|>' → logprob: -11.094587326049805
    10. '```' → logprob: -11.594587326049805

Token 5: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.002180000301450491
    2. ' =' → logprob: -6.252180099487305
    3. '+' → logprob: -9.127180099487305
    4. ',' → logprob: -9.127180099487305
    5. ' ' → logprob: -12.127180099487305
    6. '```' → logprob: -12.127180099487305
    7. ')' → logprob: -12.502180099487305
    8. '_' → logprob: -12.502180099487305
    9. '.' → logprob: -12.502180099487305
    10. '*' → logprob: -12.877180099487305

Token 6: ' b' (ID: 287)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03321394324302673
    2. ' =' → logprob: -3.9082138538360596
    3. ',' → logprob: -4.408214092254639
    4. ',b' → logprob: -9.03321361541748
    5. 'b' → logprob: -9.15821361541748
    6. ' ' → logprob: -9.15821361541748
    7. '.' → logprob: -10.28321361541748
    8. '_' → logprob: -11.03321361541748
    9. '=b' → logprob: -11.53321361541748
    10. ' b' → logprob: -11.90821361541748

Token 7: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004536923486739397
    2. '+' → logprob: -6.254537105560303
    3. ' =' → logprob: -6.254537105560303
    4. ',' → logprob: -8.129536628723145
    5. ')' → logprob: -9.504536628723145
    6. '```' → logprob: -9.504536628723145
    7. '*' → logprob: -9.879536628723145
    8. ' ' → logprob: -10.379536628723145
    9. '[' → logprob: -10.379536628723145
    10. '_' → logprob: -10.504536628723145

Token 8: ' c' (ID: 274)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0029536932706832886
    2. ' =' → logprob: -5.87795352935791
    3. ',' → logprob: -8.87795352935791
    4. ')' → logprob: -13.12795352935791
    5. ' ' → logprob: -13.37795352935791
    6. '=
' → logprob: -13.50295352935791
    7. '.' → logprob: -13.75295352935791
    8. '+' → logprob: -13.75295352935791
    9. ';' → logprob: -14.25295352935791
    10. 'x' → logprob: -14.37795352935791

Token 9: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.009111315943300724
    2. ' =' → logprob: -4.759111404418945
    3. ',' → logprob: -8.384111404418945
    4. '+' → logprob: -9.009111404418945
    5. '```' → logprob: -10.384111404418945
    6. ' ' → logprob: -10.759111404418945
    7. '.' → logprob: -11.009111404418945
    8. '_' → logprob: -11.009111404418945
    9. ')' → logprob: -11.134111404418945
    10. ':' → logprob: -11.884111404418945

Token 10: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.22957871854305267
    2. '0' → logprob: -1.6045787334442139
    3. '1' → logprob: -6.229578495025635
    4. ' [' → logprob: -6.729578495025635
    5. '[' → logprob: -7.229578495025635
    6. ' (' → logprob: -9.729578971862793
    7. '10' → logprob: -10.229578971862793
    8. 'map' → logprob: -10.479578971862793
    9. ' x' → logprob: -10.604578971862793
    10. ' map' → logprob: -10.604578971862793

Token 11: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07242046296596527
    2. '(lambda' → logprob: -3.072420358657837
    3. '<|end|>' → logprob: -3.947420358657837
    4. '```' → logprob: -5.947420597076416
    5. ')' → logprob: -7.447420597076416
    6. '<|end|>' → logprob: -8.447420120239258
    7. '(int' → logprob: -8.697420120239258
    8. '(user' → logprob: -9.572420120239258
    9. 'user' → logprob: -10.197420120239258
    10. '(str' → logprob: -10.197420120239258

Token 12: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9070728421211243
    2. '(input' → logprob: -1.0320727825164795
    3. '<|end|>' → logprob: -1.6570727825164795
    4. '(' → logprob: -4.032073020935059
    5. '(user' → logprob: -4.782073020935059
    6. '<|end|>' → logprob: -5.157073020935059
    7. 'input' → logprob: -5.532073020935059
    8. '(x' → logprob: -6.407073020935059
    9. '```' → logprob: -6.407073020935059
    10. '('' → logprob: -6.657073020935059

Token 13: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.10115145891904831
    2. ' input' → logprob: -2.351151466369629
    3. '(input' → logprob: -7.101151466369629
    4. ')' → logprob: -9.101151466369629
    5. ',input' → logprob: -12.851151466369629
    6. '=input' → logprob: -13.726151466369629
    7. ' )' → logprob: -14.101151466369629
    8. ' ' → logprob: -14.101151466369629
    9. 'range' → logprob: -14.351151466369629
    10. '[input' → logprob: -14.476151466369629

Token 14: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.17296788096427917
    2. '())' → logprob: -2.6729679107666016
    3. '()' → logprob: -3.0479679107666016
    4. ')' → logprob: -3.9229679107666016
    5. '('' → logprob: -4.922967910766602
    6. '`()' → logprob: -5.922967910766602
    7. '(""))' → logprob: -6.422967910766602
    8. '```' → logprob: -6.422967910766602
    9. '(
' → logprob: -6.672967910766602
    10. '(()' → logprob: -6.672967910766602

Token 15: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -8.780830830801278e-05
    2. 'strip' → logprob: -9.50008773803711
    3. ' split' → logprob: -11.62508773803711
    4. 'rstrip' → logprob: -13.00008773803711
    5. '(split' → logprob: -13.62508773803711
    6. ')' → logprob: -15.12508773803711
    7. 'spl' → logprob: -15.25008773803711
    8. 'read' → logprob: -17.00008773803711
    9. '```' → logprob: -18.12508773803711
    10. '_split' → logprob: -18.12508773803711

Token 16: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04287814721465111
    2. '())' → logprob: -3.2928781509399414
    3. '))' → logprob: -5.542878150939941
    4. '()' → logprob: -7.792878150939941
    5. '(' → logprob: -8.542878150939941
    6. '`)' → logprob: -8.667878150939941
    7. '()))' → logprob: -10.042878150939941
    8. ')`' → logprob: -11.042878150939941
    9. '```' → logprob: -11.667878150939941
    10. '')' → logprob: -11.917878150939941

Token 17: 'p' (ID: 79)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3807358741760254
    2. 'if' → logprob: -1.6307358741760254
    3. '#' → logprob: -3.2557358741760254
    4. '*' → logprob: -3.3807358741760254
    5. 'x' → logprob: -4.005735874176025
    6. 'i' → logprob: -4.755735874176025
    7. '
' → logprob: -5.755735874176025
    8. '+
' → logprob: -5.755735874176025
    9. '=' → logprob: -6.005735874176025
    10. 'd' → logprob: -6.380735874176025

Token 18: ' =' (ID: 314)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.007131504826247692
    2. ',' → logprob: -5.882131576538086
    3. ' =' → logprob: -6.632131576538086
    4. '=' → logprob: -6.757131576538086
    5. '+' → logprob: -7.382131576538086
    6. ',r' → logprob: -8.257131576538086
    7. '1' → logprob: -8.507131576538086
    8. '.' → logprob: -9.132131576538086
    9. ')' → logprob: -9.757131576538086
    10. '[' → logprob: -9.757131576538086

Token 19: ' list' (ID: 1562)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.18806535005569458
    2. 'x' → logprob: -2.06306529045105
    3. ' a' → logprob: -3.93806529045105
    4. ' x' → logprob: -4.313065528869629
    5. '0' → logprob: -6.313065528869629
    6. '(x' → logprob: -6.313065528869629
    7. '(a' → logprob: -6.563065528869629
    8. 'max' → logprob: -6.938065528869629
    9. '[]' → logprob: -7.063065528869629
    10. 'int' → logprob: -7.313065528869629

Token 20: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005009478889405727
    2. '(p' → logprob: -6.380009651184082
    3. 's' → logprob: -6.505009651184082
    4. '(range' → logprob: -7.880009651184082
    5. '()' → logprob: -8.380009651184082
    6. '<|end|>' → logprob: -8.380009651184082
    7. ')' → logprob: -9.130009651184082
    8. '(
' → logprob: -9.380009651184082
    9. '[' → logprob: -9.630009651184082
    10. '(a' → logprob: -9.755009651184082

Token 21: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.009840375743806362
    2. '(' → logprob: -4.634840488433838
    3. '<int' → logprob: -10.63484001159668
    4. 'int' → logprob: -10.88484001159668
    5. '[int' → logprob: -11.00984001159668
    6. '(input' → logprob: -12.25984001159668
    7. '(str' → logprob: -12.38484001159668
    8. '=int' → logprob: -12.63484001159668
    9. '(lambda' → logprob: -12.88484001159668
    10. ',int' → logprob: -13.25984001159668

Token 22: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10341803729534149
    2. ',input' → logprob: -2.3534181118011475
    3. '(input' → logprob: -6.353417873382568
    4. '(' → logprob: -6.728417873382568
    5. ',int' → logprob: -9.353418350219727
    6. ' ,' → logprob: -9.478418350219727
    7. '(),' → logprob: -9.978418350219727
    8. ')' → logprob: -10.853418350219727
    9. 'input' → logprob: -11.103418350219727
    10. '),' → logprob: -12.228418350219727

Token 23: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.42872077226638794
    2. ' input' → logprob: -1.0537207126617432
    3. '(input' → logprob: -11.178720474243164
    4. ',input' → logprob: -13.303720474243164
    5. '=input' → logprob: -13.928720474243164
    6. '[input' → logprob: -14.303720474243164
    7. ')' → logprob: -14.428720474243164
    8. ' ' → logprob: -14.553720474243164
    9. 'list' → logprob: -14.553720474243164
    10. '	input' → logprob: -15.053720474243164

Token 24: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0003540542966220528
    2. '()' → logprob: -8.000353813171387
    3. '()))' → logprob: -11.750353813171387
    4. ')' → logprob: -12.875353813171387
    5. ' ().' → logprob: -12.875353813171387
    6. '())' → logprob: -13.375353813171387
    7. '(' → logprob: -14.000353813171387
    8. '()));' → logprob: -14.250353813171387
    9. '>().' → logprob: -14.375353813171387
    10. '))' → logprob: -15.375353813171387

Token 25: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.2200749754119897e-06
    2. 'strip' → logprob: -13.125001907348633
    3. ' split' → logprob: -16.000001907348633
    4. '(split' → logprob: -17.500001907348633
    5. 'plit' → logprob: -18.250001907348633
    6. 'rstrip' → logprob: -18.500001907348633
    7. 'read' → logprob: -18.625001907348633
    8. 'spl' → logprob: -19.750001907348633
    9. '.split' → logprob: -20.750001907348633
    10. 'str' → logprob: -21.000001907348633

Token 26: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.26295945048332214
    2. '())' → logprob: -1.7629594802856445
    3. '))' → logprob: -3.3879594802856445
    4. '()' → logprob: -4.2629594802856445
    5. ')' → logprob: -4.5129594802856445
    6. '(' → logprob: -7.1379594802856445
    7. '()));' → logprob: -11.137959480285645
    8. '())))' → logprob: -11.512959480285645
    9. '(),' → logprob: -11.887959480285645
    10. '()))
' → logprob: -12.012959480285645

Token 27: 'q' (ID: 80)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6142455339431763
    2. 'for' → logprob: -1.6142455339431763
    3. 'result' → logprob: -2.8642454147338867
    4. 'q' → logprob: -3.2392454147338867
    5. 's' → logprob: -3.3642454147338867
    6. 'dp' → logprob: -4.114245414733887
    7. 'r' → logprob: -4.489245414733887
    8. 'a' → logprob: -4.489245414733887
    9. 'k' → logprob: -4.614245414733887
    10. 'if' → logprob: -4.864245414733887

Token 28: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0623149648308754
    2. '=' → logprob: -2.812314987182617
    3. '.' → logprob: -8.187314987182617
    4. '[' → logprob: -10.437314987182617
    5. 'u' → logprob: -11.812314987182617
    6. '(' → logprob: -12.187314987182617
    7. ',' → logprob: -12.312314987182617
    8. '_' → logprob: -12.562314987182617
    9. 's' → logprob: -12.687314987182617
    10. ')' → logprob: -12.812314987182617

Token 29: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.3493818938732147
    2. 'list' → logprob: -1.224381923675537
    3. ' p' → logprob: -7.349381923675537
    4. '[' → logprob: -9.474381446838379
    5. 'p' → logprob: -9.474381446838379
    6. ' [' → logprob: -9.849381446838379
    7. '[]' → logprob: -10.224381446838379
    8. ' []' → logprob: -10.474381446838379
    9. '[p' → logprob: -11.974381446838379
    10. '[list' → logprob: -12.474381446838379

Token 30: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4778982698917389
    2. '(map' → logprob: -0.9778982400894165
    3. '(int' → logprob: -5.602898120880127
    4. '(list' → logprob: -10.102898597717285
    5. '((' → logprob: -10.727898597717285
    6. '(
' → logprob: -10.852898597717285
    7. ' (' → logprob: -11.602898597717285
    8. '(

' → logprob: -11.727898597717285
    9. '(range' → logprob: -12.602898597717285
    10. '(lambda' → logprob: -12.602898597717285

Token 31: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -9.496052371105179e-05
    2. '<int' → logprob: -10.12509536743164
    3. '(' → logprob: -10.75009536743164
    4. 'int' → logprob: -10.87509536743164
    5. '=int' → logprob: -11.87509536743164
    6. '[int' → logprob: -12.37509536743164
    7. '(str' → logprob: -14.50009536743164
    8. ' (' → logprob: -14.50009536743164
    9. ',int' → logprob: -14.50009536743164
    10. ']int' → logprob: -14.87509536743164

Token 32: ',' (ID: 11)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.6322095394134521
    2. ',' → logprob: -1.0072095394134521
    3. ',int' → logprob: -2.882209539413452
    4. '(input' → logprob: -3.632209539413452
    5. ',input' → logprob: -4.632209777832031
    6. '=int' → logprob: -5.757209777832031
    7. '(' → logprob: -6.257209777832031
    8. '<int' → logprob: -6.632209777832031
    9. ' ,' → logprob: -7.132209777832031
    10. '```' → logprob: -7.382209777832031

Token 33: ' input' (ID: 3422)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0012792840134352446
    2. 'input' → logprob: -6.751279354095459
    3. '(int' → logprob: -9.6262788772583
    4. ' int' → logprob: -10.1262788772583
    5. '[int' → logprob: -13.7512788772583
    6. ' input' → logprob: -13.7512788772583
    7. '=int' → logprob: -15.5012788772583
    8. ',int' → logprob: -15.6262788772583
    9. '<int' → logprob: -15.6262788772583
    10. '(input' → logprob: -16.501279830932617

Token 34: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.320199877838604e-07
    2. '()' → logprob: -15.5
    3. '.' → logprob: -16.5
    4. ' ().' → logprob: -17.5
    5. ').' → logprob: -18.75
    6. '(.' → logprob: -19.375
    7. '(' → logprob: -19.875
    8. '()).' → logprob: -20.625
    9. '().
' → logprob: -21.25
    10. '>().' → logprob: -21.25

Token 35: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.9361264946837764e-07
    2. 'spl' → logprob: -16.875
    3. 's' → logprob: -17.125
    4. 'strip' → logprob: -17.75
    5. ' split' → logprob: -17.75
    6. ')' → logprob: -18.375
    7. '(split' → logprob: -18.375
    8. '```' → logprob: -18.375
    9. 'plit' → logprob: -18.75
    10. '.split' → logprob: -19.5

Token 36: '()))
' (ID: 24521)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.129256010055542
    2. '))' → logprob: -1.254256010055542
    3. '()))' → logprob: -1.379256010055542
    4. '())' → logprob: -2.129256010055542
    5. '()' → logprob: -3.879256010055542
    6. '()))
' → logprob: -10.629256248474121
    7. '(' → logprob: -11.379256248474121
    8. '())
' → logprob: -12.129256248474121
    9. '()));' → logprob: -12.254256248474121
    10. ')))' → logprob: -12.379256248474121

Token 37: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.5116302371025085
    2. 'd' → logprob: -2.1366302967071533
    3. 'i' → logprob: -2.6366302967071533
    4. '=' → logprob: -3.5116302967071533
    5. '[' → logprob: -3.6366302967071533
    6. 's' → logprob: -3.7616302967071533
    7. '#' → logprob: -4.136630058288574
    8. 'for' → logprob: -4.261630058288574
    9. '.' → logprob: -4.386630058288574
    10. 'n' → logprob: -4.511630058288574

Token 38: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020893128588795662
    2. '=' → logprob: -3.895893096923828
    3. '[' → logprob: -8.770893096923828
    4. '.' → logprob: -9.645893096923828
    5. '_' → logprob: -9.895893096923828
    6. ',' → logprob: -10.020893096923828
    7. '(' → logprob: -11.645893096923828
    8. ' ' → logprob: -11.770893096923828
    9. 's' → logprob: -12.020893096923828
    10. ')' → logprob: -12.770893096923828

Token 39: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.16353538632392883
    2. 'list' → logprob: -1.9135353565216064
    3. ' []' → logprob: -6.4135355949401855
    4. '[]' → logprob: -7.1635355949401855
    5. '[' → logprob: -8.163535118103027
    6. '(list' → logprob: -8.288535118103027
    7. ' [' → logprob: -8.788535118103027
    8. ' p' → logprob: -9.038535118103027
    9. ' ' → logprob: -10.913535118103027
    10. '[list' → logprob: -10.913535118103027

Token 40: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02825458161532879
    2. '(int' → logprob: -3.653254508972168
    3. '(map' → logprob: -7.278254508972168
    4. '(list' → logprob: -7.778254508972168
    5. '((' → logprob: -8.028254508972168
    6. '(range' → logprob: -8.778254508972168
    7. '(len' → logprob: -9.403254508972168
    8. '(
' → logprob: -9.403254508972168
    9. '(

' → logprob: -9.653254508972168
    10. ' (' → logprob: -10.278254508972168

Token 41: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -6.289473822107539e-05
    2. '(' → logprob: -9.875062942504883
    3. '<int' → logprob: -11.750062942504883
    4. '=int' → logprob: -13.500062942504883
    5. 'int' → logprob: -14.125062942504883
    6. '[int' → logprob: -14.125062942504883
    7. ',int' → logprob: -15.875062942504883
    8. '```' → logprob: -16.000062942504883
    9. ')(' → logprob: -16.250062942504883
    10. ' (' → logprob: -16.500062942504883

Token 42: ',' (ID: 11)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.10199932008981705
    2. ',' → logprob: -3.101999282836914
    3. ',int' → logprob: -3.101999282836914
    4. '(' → logprob: -5.851999282836914
    5. '(input' → logprob: -6.101999282836914
    6. ',input' → logprob: -7.351999282836914
    7. '```' → logprob: -7.601999282836914
    8. ')' → logprob: -8.726999282836914
    9. ' ,' → logprob: -8.976999282836914
    10. '<int' → logprob: -9.101999282836914

Token 43: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.38943231105804443
    2. 'int' → logprob: -1.1394323110580444
    3. ' input' → logprob: -6.014432430267334
    4. '(input' → logprob: -9.889431953430176
    5. '(int' → logprob: -10.389431953430176
    6. ' int' → logprob: -10.389431953430176
    7. '[int' → logprob: -14.014431953430176
    8. '<int' → logprob: -15.014431953430176
    9. '=input' → logprob: -15.264431953430176
    10. 'stdin' → logprob: -15.264431953430176

Token 44: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.141186450899113e-05
    2. '()' → logprob: -11.375020980834961
    3. '(.' → logprob: -12.500020980834961
    4. '>().' → logprob: -13.250020980834961
    5. '(' → logprob: -14.125020980834961
    6. ' ().' → logprob: -14.250020980834961
    7. '()).' → logprob: -14.250020980834961
    8. '.' → logprob: -14.250020980834961
    9. ').' → logprob: -14.500020980834961
    10. '(int' → logprob: -14.875020980834961

Token 45: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.981667537620524e-06
    2. ')' → logprob: -13.625001907348633
    3. 's' → logprob: -15.500001907348633
    4. '(split' → logprob: -15.625001907348633
    5. 'spl' → logprob: -15.875001907348633
    6. '```' → logprob: -16.250001907348633
    7. 'strip' → logprob: -16.625001907348633
    8. ' split' → logprob: -17.250001907348633
    9. 'rstrip' → logprob: -18.250001907348633
    10. '.split' → logprob: -19.250001907348633

Token 46: '()))
' (ID: 24521)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.6383892893791199
    2. '()))' → logprob: -0.8883892893791199
    3. ')' → logprob: -3.3883893489837646
    4. '()' → logprob: -4.0133891105651855
    5. '))' → logprob: -4.7633891105651855
    6. '()))
' → logprob: -9.638389587402344
    7. '())
' → logprob: -10.638389587402344
    8. '()));' → logprob: -11.013389587402344
    9. '(' → logprob: -11.388389587402344
    10. ' ())' → logprob: -11.638389587402344

Token 47: 'for' (ID: 1938)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.95536869764328
    2. 'for' → logprob: -0.95536869764328
    3. 'i' → logprob: -3.080368757247925
    4. 's' → logprob: -3.455368757247925
    5. 'p' → logprob: -3.830368757247925
    6. 'f' → logprob: -4.080368518829346
    7. '[' → logprob: -4.205368518829346
    8. '```' → logprob: -4.330368518829346
    9. 'x' → logprob: -4.455368518829346
    10. '=' → logprob: -4.580368518829346

Token 48: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.18970780074596405
    2. ' ' → logprob: -2.0647077560424805
    3. '_' → logprob: -3.5647077560424805
    4. ' _' → logprob: -4.4397077560424805
    5. 'i' → logprob: -5.4397077560424805
    6. ' x' → logprob: -7.6897077560424805
    7. ' p' → logprob: -7.9397077560424805
    8. '  ' → logprob: -8.56470775604248
    9. ' a' → logprob: -9.31470775604248
    10. ' ' → logprob: -9.56470775604248

Token 49: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2203623503446579
    2. 'in' → logprob: -1.8453623056411743
    3. ' ' → logprob: -3.345362424850464
    4. '  ' → logprob: -5.720362186431885
    5. '_' → logprob: -7.845362186431885
    6. ' i' → logprob: -8.470362663269043
    7. ' _' → logprob: -9.220362663269043
    8. 'space' → logprob: -9.220362663269043
    9. '```' → logprob: -9.970362663269043
    10. '   ' → logprob: -10.095362663269043

Token 50: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.07597807794809341
    2. ' p' → logprob: -3.3259780406951904
    3. 'range' → logprob: -3.3259780406951904
    4. 'p' → logprob: -7.0759782791137695
    5. ' r' → logprob: -7.9509782791137695
    6. ' ' → logprob: -10.45097827911377
    7. ' q' → logprob: -10.57597827911377
    8. 'r' → logprob: -11.20097827911377
    9. ' a' → logprob: -12.20097827911377
    10. ' xrange' → logprob: -12.32597827911377

Token 51: '(len' (ID: 14990)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005674933083355427
    2. '(a' → logprob: -5.505674839019775
    3. '(x' → logprob: -6.880674839019775
    4. ' (' → logprob: -8.005675315856934
    5. '(b' → logprob: -9.380675315856934
    6. '(y' → logprob: -10.130675315856934
    7. '(n' → logprob: -10.255675315856934
    8. '(c' → logprob: -10.505675315856934
    9. '(
' → logprob: -10.880675315856934
    10. '(s' → logprob: -11.505675315856934

Token 52: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.07142326980829239
    2. '(' → logprob: -2.696423292160034
    3. '(q' → logprob: -7.071423053741455
    4. '(r' → logprob: -8.196423530578613
    5. '(x' → logprob: -8.946423530578613
    6. '(a' → logprob: -9.321423530578613
    7. '(s' → logprob: -9.571423530578613
    8. '(y' → logprob: -10.196423530578613
    9. ' (' → logprob: -11.946423530578613
    10. '(b' → logprob: -12.071423530578613

Token 53: ')):
' (ID: 22530)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.759341299533844
    2. '):' → logprob: -0.884341299533844
    3. '))' → logprob: -2.259341239929199
    4. ')' → logprob: -4.259341239929199
    5. '[' → logprob: -9.0093412399292
    6. ')):
' → logprob: -9.5093412399292
    7. ':' → logprob: -9.7593412399292
    8. ']):' → logprob: -10.2593412399292
    9. ')>' → logprob: -10.3843412399292
    10. '>):' → logprob: -10.5093412399292

Token 54: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.30854031443595886
    2. ' ' → logprob: -1.9335403442382812
    3. '   ' → logprob: -2.5585403442382812
    4. '<|end|>' → logprob: -3.4335403442382812
    5. ')' → logprob: -5.808540344238281
    6. '(p' → logprob: -6.683540344238281
    7. ' p' → logprob: -6.808540344238281
    8. ' if' → logprob: -7.433540344238281
    9. '  ' → logprob: -7.558540344238281
    10. ',' → logprob: -7.933540344238281

Token 55: ' pass' (ID: 1853)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7239753007888794
    2. ' p' → logprob: -1.3489753007888794
    3. 'p' → logprob: -2.09897518157959
    4. ' if' → logprob: -2.59897518157959
    5. 'if' → logprob: -3.09897518157959
    6. '   ' → logprob: -5.34897518157959
    7. 'i' → logprob: -6.47397518157959
    8. 'r' → logprob: -6.47397518157959
    9. '    ' → logprob: -7.22397518157959
    10. 'x' → logprob: -7.34897518157959

Token 56: ' ' (ID: 220)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.24188168346881866
    2. '   ' → logprob: -1.6168817281723022
    3. ' ' → logprob: -4.866881847381592
    4. '<|end|>' → logprob: -5.741881847381592
    5. '  ' → logprob: -6.366881847381592
    6. ' if' → logprob: -6.616881847381592
    7. ',' → logprob: -7.366881847381592
    8. ' :' → logprob: -7.741881847381592
    9. 'if' → logprob: -8.491881370544434
    10. '[' → logprob: -8.616881370544434

Token 57: ' #' (ID: 1069)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3294064700603485
    2. ' ' → logprob: -1.454406499862671
    3. '   ' → logprob: -3.704406499862671
    4. ' if' → logprob: -4.829406261444092
    5. ' :' → logprob: -5.329406261444092
    6. '  ' → logprob: -5.579406261444092
    7. 'if' → logprob: -6.079406261444092
    8. ',' → logprob: -7.329406261444092
    9. '(' → logprob: -7.954406261444092
    10. ':
' → logprob: -8.07940673828125

Token 58: ' Pas' (ID: 18323)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04437731206417084
    2. '<|end|>' → logprob: -3.544377326965332
    3. ' if' → logprob: -5.419377326965332
    4. '  ' → logprob: -5.669377326965332
    5. 'if' → logprob: -5.794377326965332
    6. '   ' → logprob: -7.044377326965332
    7. ':' → logprob: -7.919377326965332
    8. ' p' → logprob: -8.044377326965332
    9. '    ' → logprob: -8.169377326965332
    10. ' 
' → logprob: -8.169377326965332

Token 59: ' de' (ID: 334)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00803314708173275
    2. ':' → logprob: -5.508033275604248
    3. ' ' → logprob: -6.133033275604248
    4. '    ' → logprob: -7.383033275604248
    5. '#' → logprob: -8.00803279876709
    6. '  ' → logprob: -8.13303279876709
    7. ' s' → logprob: -8.75803279876709
    8. '   ' → logprob: -9.25803279876709
    9. ' :' → logprob: -10.00803279876709
    10. '      ' → logprob: -10.13303279876709

Token 60: ' fonction' (ID: 17610)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.6035545468330383
    2. 's' → logprob: -1.2285544872283936
    3. '...' → logprob: -3.2285544872283936
    4. 'ss' → logprob: -4.103554725646973
    5. '```' → logprob: -4.228554725646973
    6. '#' → logprob: -4.353554725646973
    7. 'f' → logprob: -4.603554725646973
    8. 'ass' → logprob: -4.603554725646973
    9. 'l' → logprob: -4.728554725646973
    10. 'code' → logprob: -5.228554725646973

Token 61: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5128341317176819
    2. '   ' → logprob: -2.012834072113037
    3. ' ' → logprob: -2.012834072113037
    4. '<|end|>' → logprob: -2.262834072113037
    5. '  ' → logprob: -4.637834072113037
    6. '[' → logprob: -5.637834072113037
    7. '(' → logprob: -6.512834072113037
    8. ' if' → logprob: -6.512834072113037
    9. 'p' → logprob: -6.512834072113037
    10. '\' → logprob: -6.637834072113037

Token 62: ' pas' (ID: 2173)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0378745011985302
    2. '<|end|>' → logprob: -3.662874460220337
    3. ':' → logprob: -5.662874698638916
    4. '   ' → logprob: -6.412874698638916
    5. ')' → logprob: -6.537874698638916
    6. '    ' → logprob: -6.787874698638916
    7. '  ' → logprob: -7.037874698638916
    8. ' :' → logprob: -7.287874698638916
    9. ' if' → logprob: -8.412874221801758
    10. '<|end|>' → logprob: -8.537874221801758

Token 63: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.5958385467529297
    2. ' ' → logprob: -1.3458385467529297
    3. ' d' → logprob: -2.5958385467529297
    4. '<|end|>' → logprob: -3.0958385467529297
    5. 'd' → logprob: -3.8458385467529297
    6. 'de' → logprob: -4.47083854675293
    7. '  ' → logprob: -4.47083854675293
    8. '   ' → logprob: -4.97083854675293
    9. 's' → logprob: -5.22083854675293
    10. '    ' → logprob: -5.84583854675293

Token 64: ''ab' (ID: 41238)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.263249009847641
    2. '   ' → logprob: -3.513248920440674
    3. 'e' → logprob: -3.888248920440674
    4. 'a' → logprob: -3.888248920440674
    5. '  ' → logprob: -4.263248920440674
    6. 's' → logprob: -4.263248920440674
    7. 'u' → logprob: -4.388248920440674
    8. 'r' → logprob: -4.388248920440674
    9. '    ' → logprob: -4.513248920440674
    10. 'space' → logprob: -4.513248920440674

Token 65: 'stra' (ID: 14867)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.03222302347421646
    2. 'ord' → logprob: -4.157223224639893
    3. 'stract' → logprob: -5.907223224639893
    4. 'b' → logprob: -5.907223224639893
    5. 'straction' → logprob: -6.407223224639893
    6. 'sent' → logprob: -6.532223224639893
    7. 'sol' → logprob: -6.657223224639893
    8. 'r' → logprob: -7.657223224639893
    9. '```' → logprob: -7.657223224639893
    10. 'sort' → logprob: -7.657223224639893

Token 66: 'ctions' (ID: 2620)
  Prédit: 'ction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ction' → logprob: -0.5424082279205322
    2. 'ct' → logprob: -1.1674082279205322
    3. 'ctions' → logprob: -2.4174082279205322
    4. 't' → logprob: -5.792407989501953
    5. 'c' → logprob: -6.042407989501953
    6. '   ' → logprob: -6.542407989501953
    7. 'n' → logprob: -6.542407989501953
    8. 'r' → logprob: -6.792407989501953
    9. 'i' → logprob: -6.792407989501953
    10. '#' → logprob: -6.792407989501953

Token 67: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9739019274711609
    2. ' ' → logprob: -1.3489019870758057
    3. '<|end|>' → logprob: -1.3489019870758057
    4. '   ' → logprob: -2.9739019870758057
    5. ' if' → logprob: -4.973901748657227
    6. '  ' → logprob: -4.973901748657227
    7. '\n' → logprob: -5.098901748657227
    8. ' 
' → logprob: -5.223901748657227
    9. '
' → logprob: -5.223901748657227
    10. '  
' → logprob: -5.348901748657227

Token 68: ' ligne' (ID: 19583)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06048448383808136
    2. '   ' → logprob: -3.6854844093322754
    3. '    ' → logprob: -3.6854844093322754
    4. '<|end|>' → logprob: -6.560484409332275
    5. ' p' → logprob: -6.685484409332275
    6. ' if' → logprob: -6.810484409332275
    7. '  ' → logprob: -7.310484409332275
    8. '       ' → logprob: -7.810484409332275
    9. '     
' → logprob: -7.935484409332275
    10. ' )' → logprob: -7.935484409332275

Token 69: ' laiss' (ID: 192979)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7798486948013306
    2. '   ' → logprob: -1.0298486948013306
    3. ' if' → logprob: -2.279848575592041
    4. ':' → logprob: -4.404848575592041
    5. 'if' → logprob: -4.529848575592041
    6. '    ' → logprob: -4.529848575592041
    7. '  ' → logprob: -4.904848575592041
    8. '    
' → logprob: -5.154848575592041
    9. '   
' → logprob: -5.529848575592041
    10. '<|end|>' → logprob: -5.654848575592041

Token 70: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.003973796963691711
    2. 'e' → logprob: -6.003973960876465
    3. 'ées' → logprob: -7.003973960876465
    4. 'é' → logprob: -8.003973960876465
    5. 'ee' → logprob: -8.503973960876465
    6. '   ' → logprob: -12.128973960876465
    7. 'es' → logprob: -12.128973960876465
    8. 'ees' → logprob: -12.253973960876465
    9. 'ea' → logprob: -12.503973960876465
    10. 'és' → logprob: -12.503973960876465

Token 71: ' pour' (ID: 1930)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 72: ' la' (ID: 557)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.0813790559768677
    2. 'contin' → logprob: -1.9563790559768677
    3. 'le' → logprob: -2.206378936767578
    4. 'maint' → logprob: -2.706378936767578
    5. 'compl' → logprob: -2.956378936767578
    6. ' l' → logprob: -3.581378936767578
    7. 'respect' → logprob: -3.581378936767578
    8. 'la' → logprob: -3.956378936767578
    9. 'code' → logprob: -3.956378936767578
    10. ' ' → logprob: -3.956378936767578

Token 73: ' plat' (ID: 26916)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5723833441734314
    2. 'for' → logprob: -2.572383403778076
    3. 's' → logprob: -2.822383403778076
    4. 'continu' → logprob: -3.572383403778076
    5. 'code' → logprob: -3.822383403778076
    6. 'f' → logprob: -3.947383403778076
    7. 'n' → logprob: -3.947383403778076
    8. '   ' → logprob: -4.072383403778076
    9. '_' → logprob: -4.197383403778076
    10. ' moment' → logprob: -4.322383403778076

Token 74: 'itude' (ID: 5962)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.005363840609788895
    2. 'for' → logprob: -5.380363941192627
    3. 'itude' → logprob: -7.755363941192627
    4. 'form' → logprob: -8.880363464355469
    5. 'é' → logprob: -10.880363464355469
    6. 'a' → logprob: -11.130363464355469
    7. 'x' → logprob: -11.255363464355469
    8. '#' → logprob: -11.630363464355469
    9. 'line' → logprob: -11.755363464355469
    10. ' for' → logprob: -11.755363464355469

Token 75: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6236943602561951
    2. ' ' → logprob: -1.3736944198608398
    3. '   ' → logprob: -2.24869441986084
    4. '<|end|>' → logprob: -2.87369441986084
    5. '\n' → logprob: -3.99869441986084
    6. ' :' → logprob: -5.49869441986084
    7. '  ' → logprob: -5.74869441986084
    8. ' 
' → logprob: -5.87369441986084
    9. '
' → logprob: -5.99869441986084
    10. '\' → logprob: -6.24869441986084

Token 76: 'p' (ID: 79)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.034276008605957
    2. '   ' → logprob: -1.409276008605957
    3. ':' → logprob: -2.159276008605957
    4. ' if' → logprob: -2.534276008605957
    5. '<|end|>' → logprob: -2.909276008605957
    6. 'if' → logprob: -3.284276008605957
    7. ' 
' → logprob: -3.409276008605957
    8. '
' → logprob: -3.659276008605957
    9. ',' → logprob: -4.784276008605957
    10. '[' → logprob: -5.284276008605957

Token 77: '.sort' (ID: 19551)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.13680624961853027
    2. '[i' → logprob: -2.1368062496185303
    3. '[:]' → logprob: -5.386806488037109
    4. '+' → logprob: -6.136806488037109
    5. '[p' → logprob: -7.386806488037109
    6. '<|end|>' → logprob: -7.511806488037109
    7. '.' → logprob: -7.886806488037109
    8. '[q' → logprob: -8.13680648803711
    9. ']' → logprob: -9.01180648803711
    10. '[int' → logprob: -9.13680648803711

Token 78: '(reverse' (ID: 110806)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0487055741250515
    2. '(' → logprob: -3.048705577850342
    3. '()`' → logprob: -10.673705101013184
    4. '()
' → logprob: -11.298705101013184
    5. '(p' → logprob: -11.298705101013184
    6. '```' → logprob: -11.298705101013184
    7. '().' → logprob: -11.673705101013184
    8. '(
' → logprob: -12.298705101013184
    9. '())' → logprob: -12.548705101013184
    10. '()>' → logprob: -12.548705101013184

Token 79: '=True' (ID: 7827)
  Prédit: '=True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=True' → logprob: -0.02403496578335762
    2. '=' → logprob: -4.2740349769592285
    3. ')' → logprob: -4.6490349769592285
    4. '(True' → logprob: -9.14903450012207
    5. '())' → logprob: -9.64903450012207
    6. '()' → logprob: -10.02403450012207
    7. 'True' → logprob: -10.64903450012207
    8. '=False' → logprob: -12.39903450012207
    9. '(' → logprob: -12.89903450012207
    10. ')=' → logprob: -13.02403450012207

Token 80: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.511406809295295e-06
    2. ')
' → logprob: -12.375006675720215
    3. ' )' → logprob: -13.500006675720215
    4. ')p' → logprob: -15.000006675720215
    5. '))' → logprob: -16.0000057220459
    6. ')#' → logprob: -16.1250057220459
    7. '<|end|>' → logprob: -16.6250057220459
    8. ')

' → logprob: -17.0000057220459
    9. '#' → logprob: -17.0000057220459
    10. '),' → logprob: -17.3750057220459

Token 81: 'for' (ID: 1938)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 82: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5669852495193481
    2. ' i' → logprob: -1.1919852495193481
    3. ' j' → logprob: -2.1919851303100586
    4. ' b' → logprob: -4.941985130310059
    5. ' y' → logprob: -5.941985130310059
    6. ' c' → logprob: -6.441985130310059
    7. '  ' → logprob: -6.691985130310059
    8. ' _' → logprob: -6.941985130310059
    9. ' q' → logprob: -7.066985130310059
    10. ' x' → logprob: -7.316985130310059

Token 83: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.24717627465724945
    2. 'in' → logprob: -1.7471762895584106
    3. ' ' → logprob: -3.122176170349121
    4. '  ' → logprob: -8.497176170349121
    5. '<|end|>' → logprob: -8.622176170349121
    6. 'n' → logprob: -9.497176170349121
    7. '	in' → logprob: -10.622176170349121
    8. ' n' → logprob: -10.747176170349121
    9. ' p' → logprob: -11.122176170349121
    10. ')' → logprob: -11.122176170349121

Token 84: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.18352432548999786
    2. 'range' → logprob: -2.5585243701934814
    3. ' q' → logprob: -2.9335243701934814
    4. ' r' → logprob: -3.9335243701934814
    5. ' p' → logprob: -4.933524131774902
    6. 'q' → logprob: -4.933524131774902
    7. 'r' → logprob: -6.433524131774902
    8. ' b' → logprob: -7.433524131774902
    9. 'p' → logprob: -7.558524131774902
    10. 'b' → logprob: -9.183524131774902

Token 85: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.9759125709533691
    2. '(b' → logprob: -1.6009125709533691
    3. '(a' → logprob: -1.8509125709533691
    4. '(y' → logprob: -2.225912570953369
    5. '(c' → logprob: -2.475912570953369
    6. '(' → logprob: -3.350912570953369
    7. '(x' → logprob: -3.350912570953369
    8. '(q' → logprob: -7.100912570953369
    9. '(n' → logprob: -7.225912570953369
    10. '(l' → logprob: -8.350912094116211

Token 86: '(q' (ID: 21479)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.11384155601263046
    2. '(q' → logprob: -2.6138415336608887
    3. '(' → logprob: -3.4888415336608887
    4. '(r' → logprob: -6.238841533660889
    5. '(a' → logprob: -6.738841533660889
    6. '(b' → logprob: -8.863842010498047
    7. '(x' → logprob: -9.113842010498047
    8. '(y' → logprob: -9.238842010498047
    9. ' (' → logprob: -9.363842010498047
    10. '(s' → logprob: -9.363842010498047

Token 87: ')):
' (ID: 22530)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.5315131545066833
    2. '):' → logprob: -0.9065131545066833
    3. '))' → logprob: -5.156513214111328
    4. ' ):' → logprob: -6.281513214111328
    5. ')' → logprob: -7.656513214111328
    6. ' ))' → logprob: -9.281513214111328
    7. ':' → logprob: -10.031513214111328
    8. ')):
' → logprob: -10.406513214111328
    9. ']):' → logprob: -11.031513214111328
    10. '>):' → logprob: -11.031513214111328

Token 88: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08101089298725128
    2. '   ' → logprob: -3.5810108184814453
    3. '    ' → logprob: -3.8310108184814453
    4. '<|end|>' → logprob: -4.581010818481445
    5. ' q' → logprob: -4.581010818481445
    6. '  ' → logprob: -6.331010818481445
    7. ' p' → logprob: -6.956010818481445
    8. ' )' → logprob: -6.956010818481445
    9. 'q' → logprob: -6.956010818481445
    10. ')' → logprob: -7.081010818481445

Token 89: ' pass' (ID: 1853)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03933079168200493
    2. ' q' → logprob: -3.4143307209014893
    3. '    ' → logprob: -6.539330959320068
    4. ' p' → logprob: -6.789330959320068
    5. '<|end|>' → logprob: -6.789330959320068
    6. 'q' → logprob: -7.414330959320068
    7. ' 
' → logprob: -7.914330959320068
    8. '  ' → logprob: -8.53933048248291
    9. '     
' → logprob: -9.53933048248291
    10. ' )' → logprob: -9.53933048248291

Token 90: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.056039389222860336
    2. '<|end|>' → logprob: -3.306039333343506
    3. 'q' → logprob: -5.556039333343506
    4. '  
' → logprob: -5.681039333343506
    5. 'p' → logprob: -5.931039333343506
    6. ' 
' → logprob: -6.056039333343506
    7. ' q' → logprob: -6.556039333343506
    8. '  ' → logprob: -6.806039333343506
    9. '   ' → logprob: -7.431039333343506
    10. '    
' → logprob: -7.931039333343506

Token 91: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.024406850337982178
    2. ' q' → logprob: -3.899406909942627
    3. ' 
' → logprob: -6.774406909942627
    4. '
' → logprob: -7.274406909942627
    5. '```' → logprob: -7.399406909942627
    6. '<|end|>' → logprob: -7.399406909942627
    7. ' ' → logprob: -7.774406909942627
    8. '   ' → logprob: -9.399406433105469
    9. '  
' → logprob: -9.899406433105469
    10. ')' → logprob: -10.024406433105469

Token 92: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.28743094205856323
    2. '.' → logprob: -1.412431001663208
    3. '[' → logprob: -5.412430763244629
    4. '<|end|>' → logprob: -6.912430763244629
    5. 'sort' → logprob: -8.537430763244629
    6. '[q' → logprob: -9.037430763244629
    7. ')' → logprob: -9.037430763244629
    8. '[:]' → logprob: -9.412430763244629
    9. '.q' → logprob: -9.537430763244629
    10. '.Sort' → logprob: -10.287430763244629

Token 93: '(reverse' (ID: 110806)
  Prédit: '(reverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(reverse' → logprob: -0.053171347826719284
    2. '(' → logprob: -3.678171396255493
    3. '()' → logprob: -3.678171396255493
    4. '(()' → logprob: -7.803171157836914
    5. '(.' → logprob: -8.303171157836914
    6. '()(' → logprob: -8.803171157836914
    7. '(True' → logprob: -9.053171157836914
    8. '(False' → logprob: -9.803171157836914
    9. '_reverse' → logprob: -9.928171157836914
    10. 'reverse' → logprob: -10.303171157836914

Token 94: '=True' (ID: 7827)
  Prédit: '=True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=True' → logprob: -0.0006273718317970634
    2. '=' → logprob: -8.000627517700195
    3. ')' → logprob: -8.875627517700195
    4. '())' → logprob: -9.250627517700195
    5. '(True' → logprob: -10.000627517700195
    6. '()' → logprob: -12.000627517700195
    7. '=False' → logprob: -13.500627517700195
    8. ')=' → logprob: -13.625627517700195
    9. ' =' → logprob: -14.625627517700195
    10. '()>' → logprob: -15.375627517700195

Token 95: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0034304349683225155
    2. '()' → logprob: -6.378430366516113
    3. '())' → logprob: -6.378430366516113
    4. ')
' → logprob: -10.753430366516113
    5. '))' → logprob: -13.003430366516113
    6. ' )' → logprob: -13.503430366516113
    7. '()
' → logprob: -13.878430366516113
    8. '')' → logprob: -14.628430366516113
    9. '())
' → logprob: -15.378430366516113
    10. '#' → logprob: -15.378430366516113

Token 96: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0054679443128407
    2. ' for' → logprob: -5.255467891693115
    3. 'r' → logprob: -9.755468368530273
    4. '<|end|>' → logprob: -10.255468368530273
    5. '```' → logprob: -10.755468368530273
    6. '[' → logprob: -10.755468368530273
    7. '
' → logprob: -10.880468368530273
    8. 'c' → logprob: -11.380468368530273
    9. '+' → logprob: -11.505468368530273
    10. '#' → logprob: -11.755468368530273

Token 97: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.03403487801551819
    2. ' ' → logprob: -4.159034729003906
    3. ' ' → logprob: -5.159034729003906
    4. ' range' → logprob: -5.159034729003906
    5. ' in' → logprob: -6.034034729003906
    6. ' (' → logprob: -6.784034729003906
    7. 'i' → logprob: -6.784034729003906
    8. '  ' → logprob: -7.909034729003906
    9. ' space' → logprob: -7.909034729003906
    10. ' ‌' → logprob: -8.409034729003906

Token 98: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07909280806779861
    2. 'in' → logprob: -2.5790927410125732
    3. ' ' → logprob: -8.579092979431152
    4. 'range' → logprob: -11.954092979431152
    5. '  ' → logprob: -12.954092979431152
    6. 'n' → logprob: -14.079092979431152
    7. ' ' → logprob: -14.204092979431152
    8. '(' → logprob: -14.579092979431152
    9. ' i' → logprob: -14.579092979431152
    10. ' (' → logprob: -14.704092979431152

Token 99: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.2521018087863922
    2. 'range' → logprob: -1.5021017789840698
    3. '(range' → logprob: -9.12710189819336
    4. ' len' → logprob: -10.25210189819336
    5. 'len' → logprob: -11.12710189819336
    6. ' ' → logprob: -12.75210189819336
    7. 'rang' → logprob: -13.00210189819336
    8. '(len' → logprob: -13.50210189819336
    9. ' xrange' → logprob: -13.62710189819336
    10. ' rang' → logprob: -13.75210189819336

Token 100: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -1.0445127372804563e-05
    2. '(' → logprob: -11.62501049041748
    3. ' len' → logprob: -14.25001049041748
    4. ' (' → logprob: -15.00001049041748
    5. '(l' → logprob: -15.12501049041748
    6. '(range' → logprob: -16.125009536743164
    7. 'len' → logprob: -16.625009536743164
    8. '[len' → logprob: -17.250009536743164
    9. '<len' → logprob: -17.250009536743164
    10. '(s' → logprob: -18.750009536743164

Token 101: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.0005909211467951536
    2. '(' → logprob: -7.500590801239014
    3. ' (' → logprob: -11.000591278076172
    4. '(q' → logprob: -11.125591278076172
    5. 'r' → logprob: -13.125591278076172
    6. ' r' → logprob: -13.875591278076172
    7. '(s' → logprob: -13.875591278076172
    8. ')' → logprob: -14.750591278076172
    9. '(R' → logprob: -15.000591278076172
    10. '(p' → logprob: -15.000591278076172

Token 102: ')):
' (ID: 22530)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0003099599271081388
    2. '):
' → logprob: -9.125309944152832
    3. ' ):' → logprob: -9.375309944152832
    4. ')):' → logprob: -9.500309944152832
    5. ')' → logprob: -10.500309944152832
    6. '):
' → logprob: -11.625309944152832
    7. ':' → logprob: -13.375309944152832
    8. '[]):' → logprob: -13.875309944152832
    9. ']):' → logprob: -14.500309944152832
    10. '():' → logprob: -14.750309944152832

Token 103: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1615876406431198
    2. ' pass' → logprob: -1.9115875959396362
    3. 'pass' → logprob: -7.786587715148926
    4. '    ' → logprob: -7.786587715148926
    5. ' ' → logprob: -8.411587715148926
    6. ' p' → logprob: -9.286587715148926
    7. '	pass' → logprob: -9.411587715148926
    8. '  ' → logprob: -10.161587715148926
    9. '    
' → logprob: -10.286587715148926
    10. '<|end|>' → logprob: -11.286587715148926

Token 104: ' pass' (ID: 1853)
  Prédit: ' pass'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.0022354244720190763
    2. 'pass' (adapté à ' pass') → logprob: -6.377235412597656
    3. ' ' → logprob: -7.627235412597656
    4. ' p' → logprob: -11.002235412597656
    5. '    ' → logprob: -12.002235412597656
    6. ' ' → logprob: -12.377235412597656
    7. ' if' → logprob: -12.627235412597656
    8. '	pass' → logprob: -12.752235412597656
    9. ' r' → logprob: -12.877235412597656
    10. 'r' → logprob: -13.564735412597656

Token 105: '
' (ID: 198)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00014811802248004824
    2. ' 
' → logprob: -9.500147819519043
    3. '
' → logprob: -10.125147819519043
    4. ' r' → logprob: -11.750147819519043
    5. '```' → logprob: -11.750147819519043
    6. '\n' → logprob: -12.250147819519043
    7. '   ' → logprob: -13.000147819519043
    8. '<|end|>' → logprob: -13.125147819519043
    9. '  
' → logprob: -13.375147819519043
    10. '	r' → logprob: -13.875147819519043

Token 106: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.2664456789934775e-06
    2. '   ' → logprob: -14.500000953674316
    3. ' r' → logprob: -14.750000953674316
    4. '
' → logprob: -16.250001907348633
    5. ' 
' → logprob: -16.750001907348633
    6. '    
' → logprob: -17.625001907348633
    7. '```' → logprob: -17.625001907348633
    8. ' ' → logprob: -17.750001907348633
    9. '  
' → logprob: -18.125001907348633
    10. ')' → logprob: -18.125001907348633

Token 107: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.008708884008228779
    2. '.' → logprob: -4.758708953857422
    3. ' .' → logprob: -9.383708953857422
    4. 'sort' → logprob: -12.758708953857422
    5. ' ' → logprob: -12.883708953857422
    6. ' =' → logprob: -13.383708953857422
    7. '.s' → logprob: -13.508708953857422
    8. '=' → logprob: -15.008708953857422
    9. ' sort' → logprob: -15.133708953857422
    10. '.reverse' → logprob: -15.258708953857422

Token 108: '(reverse' (ID: 110806)
  Prédit: '(reverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(reverse' → logprob: -0.5897032618522644
    2. '()' → logprob: -0.8397032618522644
    3. '(' → logprob: -4.33970308303833
    4. '(True' → logprob: -8.714703559875488
    5. '()(' → logprob: -8.714703559875488
    6. '(()' → logprob: -9.089703559875488
    7. '(False' → logprob: -9.839703559875488
    8. 'reverse' → logprob: -10.214703559875488
    9. '(inplace' → logprob: -11.089703559875488
    10. '())' → logprob: -11.214703559875488

Token 109: '=True' (ID: 7827)
  Prédit: '=True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=True' → logprob: -0.001025662524625659
    2. '(True' → logprob: -7.751025676727295
    3. '())' → logprob: -7.876025676727295
    4. '()' → logprob: -8.501025199890137
    5. ')' → logprob: -11.751025199890137
    6. '=' → logprob: -13.001025199890137
    7. '(' → logprob: -14.501025199890137
    8. '()>' → logprob: -14.876025199890137
    9. '()==' → logprob: -15.501025199890137
    10. ' =' → logprob: -16.376026153564453

Token 110: ')
' (ID: 446)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5862855911254883
    2. '())' → logprob: -1.3362855911254883
    3. ')' → logprob: -1.7112855911254883
    4. '()
' → logprob: -9.461285591125488
    5. '())
' → logprob: -10.836285591125488
    6. '()]' → logprob: -10.836285591125488
    7. '();)' → logprob: -11.711285591125488
    8. '(' → logprob: -11.961285591125488
    9. ')
' → logprob: -12.461285591125488
    10. '(True' → logprob: -12.586285591125488

Token 111: 'p' (ID: 79)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.3166619539260864
    2. '#' → logprob: -1.5666619539260864
    3. 'i' → logprob: -2.316661834716797
    4. ' for' → logprob: -2.441661834716797
    5. 'x' → logprob: -3.191661834716797
    6. 'if' → logprob: -3.191661834716797
    7. 'a' → logprob: -3.316661834716797
    8. 'p' → logprob: -3.316661834716797
    9. ' ' → logprob: -3.691661834716797
    10. 'n' → logprob: -3.941661834716797

Token 112: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 113: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.48382166028022766
    2. ' p' → logprob: -1.2338216304779053
    3. '[p' → logprob: -2.9838216304779053
    4. ' [' → logprob: -4.108821868896484
    5. '[' → logprob: -4.233821868896484
    6. 'sorted' → logprob: -5.233821868896484
    7. ' sorted' → logprob: -5.608821868896484
    8. '[]' → logprob: -8.108821868896484
    9. 'list' → logprob: -8.358821868896484
    10. ' list' → logprob: -8.796321868896484

Token 114: '[:' (ID: 7808)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.973985493183136
    2. '[:' → logprob: -0.973985493183136
    3. '[:]' → logprob: -1.5989854335784912
    4. '[' → logprob: -3.598985433578491
    5. ' +' → logprob: -4.72398567199707
    6. '+p' → logprob: -5.59898567199707
    7. '[::-' → logprob: -6.59898567199707
    8. '[:-' → logprob: -7.59898567199707
    9. '[p' → logprob: -8.22398567199707
    10. '+b' → logprob: -8.59898567199707

Token 115: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5760931372642517
    2. 'a' → logprob: -0.8260931372642517
    3. ' x' → logprob: -9.826092720031738
    4. ' a' → logprob: -9.951092720031738
    5. 'b' → logprob: -10.201092720031738
    6. 'y' → logprob: -11.951092720031738
    7. 'c' → logprob: -12.326092720031738
    8. '   ' → logprob: -13.701092720031738
    9. ' ' → logprob: -14.326092720031738
    10. 'min' → logprob: -15.076092720031738

Token 116: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -5.967624019831419e-05
    2. ']
' → logprob: -10.250060081481934
    3. ' ]' → logprob: -10.875060081481934
    4. ']

' → logprob: -12.625060081481934
    5. ']
' → logprob: -13.625060081481934
    6. '+' → logprob: -14.750060081481934
    7. ']+' → logprob: -16.250059127807617
    8. '*' → logprob: -16.500059127807617
    9. '][:' → logprob: -16.750059127807617
    10. '],' → logprob: -17.000059127807617

Token 117: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -9.491498531133402e-06
    2. ' q' → logprob: -12.000009536743164
    3. 'p' → logprob: -14.000009536743164
    4. '
' → logprob: -14.125009536743164
    5. '<|end|>' → logprob: -15.250009536743164
    6. 'y' → logprob: -15.500009536743164
    7. 'for' → logprob: -15.750009536743164
    8. 'print' → logprob: -15.875009536743164
    9. '   ' → logprob: -16.250009536743164
    10. 'a' → logprob: -16.375009536743164

Token 118: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06994854658842087
    2. '=' → logprob: -2.694948434829712
    3. '=q' → logprob: -11.819948196411133
    4. ' ' → logprob: -13.694948196411133
    5. '<|end|>' → logprob: -14.194948196411133
    6. '[:' → logprob: -14.569948196411133
    7. ' =
' → logprob: -14.569948196411133
    8. '=p' → logprob: -15.194948196411133
    9. 'q' → logprob: -15.319948196411133
    10. '.' → logprob: -15.694948196411133

Token 119: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.04300571233034134
    2. ' q' → logprob: -3.1680057048797607
    3. ' ' → logprob: -13.16800594329834
    4. '	q' → logprob: -13.41800594329834
    5. 'b' → logprob: -14.41800594329834
    6. '   ' → logprob: -14.79300594329834
    7. '[:' → logprob: -14.91800594329834
    8. '  ' → logprob: -15.23050594329834
    9. '[q' → logprob: -15.41800594329834
    10. '[' → logprob: -15.79300594329834

Token 120: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -2.057743949990254e-05
    2. '[:]' → logprob: -11.500020980834961
    3. '[' → logprob: -11.875020980834961
    4. ' [:' → logprob: -13.125020980834961
    5. '[q' → logprob: -14.375020980834961
    6. '][:' → logprob: -15.125020980834961
    7. '[:-' → logprob: -16.12502098083496
    8. '+' → logprob: -16.37502098083496
    9. '[
' → logprob: -16.50002098083496
    10. '[:,' → logprob: -16.87502098083496

Token 121: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0020945880096405745
    2. ' y' → logprob: -6.752094745635986
    3. 'b' → logprob: -7.127094745635986
    4. 'a' → logprob: -9.627094268798828
    5. 'x' → logprob: -10.002094268798828
    6. ' ' → logprob: -12.752094268798828
    7. '
' → logprob: -13.252094268798828
    8. '	y' → logprob: -14.252094268798828
    9. '   ' → logprob: -14.502094268798828
    10. '(y' → logprob: -14.689594268798828

Token 122: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0015467642806470394
    2. ']
' → logprob: -6.501546859741211
    3. ' ]' → logprob: -10.251546859741211
    4. 'q' → logprob: -12.501546859741211
    5. ']

' → logprob: -13.126546859741211
    6. ']
' → logprob: -14.376546859741211
    7. '']' → logprob: -14.751546859741211
    8. 'c' → logprob: -14.876546859741211
    9. '+' → logprob: -14.876546859741211
    10. ')' → logprob: -15.126546859741211

Token 123: 'all' (ID: 586)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.03258240595459938
    2. 'c' → logprob: -4.4075822830200195
    3. 's' → logprob: -4.4075822830200195
    4. 'p' → logprob: -6.7825822830200195
    5. '+' → logprob: -7.0325822830200195
    6. 'q' → logprob: -7.4075822830200195
    7. 'combined' → logprob: -7.4075822830200195
    8. 'print' → logprob: -7.6575822830200195
    9. 'sorted' → logprob: -8.03258228302002
    10. '
' → logprob: -8.03258228302002

Token 124: '_list' (ID: 4162)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02443826012313366
    2. ' =' → logprob: -4.399438381195068
    3. '=p' → logprob: -4.774438381195068
    4. 'p' → logprob: -6.399438381195068
    5. '_cards' → logprob: -7.524438381195068
    6. '_items' → logprob: -8.64943790435791
    7. '_=' → logprob: -9.02443790435791
    8. '_' → logprob: -9.02443790435791
    9. '_scores' → logprob: -9.02443790435791
    10. '_c' → logprob: -9.14943790435791

Token 125: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0036120666190981865
    2. ' =' → logprob: -5.628612041473389
    3. 's' → logprob: -11.503612518310547
    4. '=p' → logprob: -13.878612518310547
    5. 'a' → logprob: -15.003612518310547
    6. '=[]' → logprob: -15.128612518310547
    7. '＝' → logprob: -16.628612518310547
    8. 'p' → logprob: -16.878612518310547
    9. '=s' → logprob: -17.378612518310547
    10. '_' → logprob: -17.378612518310547

Token 126: ' []
' (ID: 8911)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.12717567384243011
    2. ' p' → logprob: -2.1271755695343018
    3. '[p' → logprob: -8.752175331115723
    4. 'sorted' → logprob: -10.502175331115723
    5. ' sorted' → logprob: -10.752175331115723
    6. ' ' → logprob: -11.377175331115723
    7. '[' → logprob: -11.752175331115723
    8. '   ' → logprob: -12.002175331115723
    9. '	p' → logprob: -12.752175331115723
    10. ' [' → logprob: -13.127175331115723

Token 127: 'for' (ID: 1938)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.011715262196958065
    2. 'for' → logprob: -4.511715412139893
    3. 'p' → logprob: -7.511715412139893
    4. 'i' → logprob: -9.636714935302734
    5. ' all' → logprob: -10.636714935302734
    6. 'a' → logprob: -11.261714935302734
    7. ' for' → logprob: -12.261714935302734
    8. '<|end|>' → logprob: -12.511714935302734
    9. 'while' → logprob: -12.761714935302734
    10. '
' → logprob: -13.886714935302734

Token 128: ' v' (ID: 323)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6746123433113098
    2. 'item' → logprob: -1.549612283706665
    3. ' i' → logprob: -2.924612283706665
    4. 'val' → logprob: -2.924612283706665
    5. 'value' → logprob: -3.049612283706665
    6. 'elem' → logprob: -3.299612283706665
    7. ' item' → logprob: -4.049612522125244
    8. ' val' → logprob: -4.299612522125244
    9. 'num' → logprob: -4.424612522125244
    10. 'v' → logprob: -4.799612522125244

Token 129: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.28139060735702515
    2. 'in' → logprob: -1.40639066696167
    3. 'n' → logprob: -9.281390190124512
    4. ' ' → logprob: -9.531390190124512
    5. 's' → logprob: -11.031390190124512
    6. 'i' → logprob: -11.406390190124512
    7. 'ine' → logprob: -12.156390190124512
    8. 'a' → logprob: -12.156390190124512
    9. '  ' → logprob: -12.281390190124512
    10. 'v' → logprob: -12.531390190124512

Token 130: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.03644227609038353
    2. ' p' → logprob: -3.411442279815674
    3. '[p' → logprob: -6.161442279815674
    4. '(p' → logprob: -8.036441802978516
    5. 'q' → logprob: -8.911441802978516
    6. ' ' → logprob: -9.911441802978516
    7. 'range' → logprob: -10.036441802978516
    8. '[' → logprob: -10.036441802978516
    9. 'r' → logprob: -11.161441802978516
    10. '   ' → logprob: -11.161441802978516

Token 131: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003260654164478183
    2. '+' → logprob: -6.003260612487793
    3. ',' → logprob: -7.878260612487793
    4. ':
' → logprob: -8.128260612487793
    5. ' +' → logprob: -9.753260612487793
    6. '+:' → logprob: -10.253260612487793
    7. ' :' → logprob: -13.003260612487793
    8. ',q' → logprob: -13.253260612487793
    9. '+p' → logprob: -13.253260612487793
    10. '.' → logprob: -13.753260612487793

Token 132: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.50412917137146
    2. ' all' → logprob: -1.50412917137146
    3. 'all' → logprob: -1.75412917137146
    4. '	all' → logprob: -7.504129409790039
    5. ' ' → logprob: -10.504129409790039
    6. '    
' → logprob: -10.754129409790039
    7. '   ' → logprob: -10.754129409790039
    8. ' if' → logprob: -11.504129409790039
    9. 'al' → logprob: -11.504129409790039
    10. '  ' → logprob: -11.754129409790039

Token 133: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' (adapté à ' all') → logprob: -0.576261579990387
    2. ' all' → logprob: -0.826261579990387
    3. '   ' → logprob: -8.076261520385742
    4. '	all' → logprob: -11.826261520385742
    5. '
' → logprob: -13.451261520385742
    6. ' ' → logprob: -14.576261520385742
    7. '```' → logprob: -14.576261520385742
    8. ' 
' → logprob: -14.951261520385742
    9. '    ' → logprob: -15.076261520385742
    10. ' if' → logprob: -15.201261520385742

Token 134: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -5.478889215737581e-05
    2. '_' → logprob: -10.375054359436035
    3. '.append' → logprob: -11.250054359436035
    4. ' _' → logprob: -12.000054359436035
    5. '_l' → logprob: -13.375054359436035
    6. 'list' → logprob: -14.125054359436035
    7. '._' → logprob: -15.375054359436035
    8. '_all' → logprob: -15.500054359436035
    9. '_lists' → logprob: -15.625054359436035
    10. '_li' → logprob: -15.750054359436035

Token 135: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.014176442287862301
    2. '.' → logprob: -4.264176368713379
    3. '.extend' → logprob: -11.764176368713379
    4. '.add' → logprob: -13.139176368713379
    5. '.app' → logprob: -13.389176368713379
    6. ' .' → logprob: -14.389176368713379
    7. '.push' → logprob: -14.889176368713379
    8. '.ap' → logprob: -15.264176368713379
    9. 'append' → logprob: -16.139177322387695
    10. '.insert' → logprob: -16.389177322387695

Token 136: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -6.825890159234405e-05
    2. '(' → logprob: -9.625068664550781
    3. 'v' → logprob: -13.750068664550781
    4. '((' → logprob: -14.000068664550781
    5. '(
' → logprob: -16.12506866455078
    6. ' (' → logprob: -17.00006866455078
    7. '(-' → logprob: -17.37506866455078
    8. ' v' → logprob: -18.00006866455078
    9. '(value' → logprob: -18.25006866455078
    10. '(True' → logprob: -18.37506866455078

Token 137: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008638561703264713
    2. ')
' → logprob: -4.758638381958008
    3. ' )' → logprob: -10.758638381958008
    4. ' )
' → logprob: -13.883638381958008
    5. ')
' → logprob: -14.508638381958008
    6. ')

' → logprob: -14.633638381958008
    7. '
' → logprob: -14.883638381958008
    8. '+' → logprob: -15.258638381958008
    9. '),' → logprob: -16.508638381958008
    10. ')\
' → logprob: -16.883638381958008

Token 138: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.008723536506295204
    2. ' for' → logprob: -4.758723735809326
    3. ' 
' → logprob: -9.758723258972168
    4. '
' → logprob: -10.633723258972168
    5. '<|end|>' → logprob: -11.633723258972168
    6. '  
' → logprob: -12.133723258972168
    7. ' ' → logprob: -12.258723258972168
    8. '```' → logprob: -12.383723258972168
    9. '+
' → logprob: -14.258723258972168
    10. '    
' → logprob: -14.383723258972168

Token 139: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.5759520530700684
    2. ' v' → logprob: -0.8259520530700684
    3. ' ' → logprob: -12.575952529907227
    4. 'w' → logprob: -12.700952529907227
    5. ' w' → logprob: -12.825952529907227
    6. '	v' → logprob: -13.450952529907227
    7. 'q' → logprob: -14.575952529907227
    8. 'vq' → logprob: -14.825952529907227
    9. ' q' → logprob: -15.325952529907227
    10. 'u' → logprob: -15.325952529907227

Token 140: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.34847262501716614
    2. 'in' → logprob: -1.2234725952148438
    3. ' ' → logprob: -11.348472595214844
    4. 's' → logprob: -11.973472595214844
    5. 'n' → logprob: -13.348472595214844
    6. 'i' → logprob: -13.723472595214844
    7. 'import' → logprob: -13.973472595214844
    8. '  ' → logprob: -13.973472595214844
    9. 'In' → logprob: -14.348472595214844
    10. '	in' → logprob: -14.348472595214844

Token 141: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.10021087527275085
    2. ' q' → logprob: -2.3502109050750732
    3. ' ' → logprob: -13.350211143493652
    4. '	q' → logprob: -13.850211143493652
    5. 'r' → logprob: -14.475211143493652
    6. '<|end|>' → logprob: -15.912711143493652
    7. 'qml' → logprob: -16.287710189819336
    8. '?q' → logprob: -16.287710189819336
    9. '(q' → logprob: -16.412710189819336
    10. '    ' → logprob: -16.475210189819336

Token 142: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0019298245897516608
    2. ':
' → logprob: -6.251929759979248
    3. '   ' → logprob: -14.751930236816406
    4. ' :' → logprob: -14.876930236816406
    5. ' in' → logprob: -15.751930236816406
    6. ':
' → logprob: -16.126930236816406
    7. 'in' → logprob: -16.626930236816406
    8. ':

' → logprob: -16.626930236816406
    9. 'all' → logprob: -17.001930236816406
    10. '.' → logprob: -17.251930236816406

Token 143: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0045859417878091335
    2. 'all' → logprob: -5.5045857429504395
    3. ' all' → logprob: -7.6295857429504395
    4. '	all' → logprob: -11.004586219787598
    5. '    
' → logprob: -13.629586219787598
    6. '       ' → logprob: -14.129586219787598
    7. '   ' → logprob: -14.129586219787598
    8. ' ' → logprob: -14.629586219787598
    9. '(all' → logprob: -14.754586219787598
    10. '  ' → logprob: -14.754586219787598

Token 144: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' (adapté à ' all') → logprob: -0.47472789883613586
    2. ' all' → logprob: -0.9747278690338135
    3. '   ' → logprob: -7.349728107452393
    4. '	all' → logprob: -12.724727630615234
    5. ' ' → logprob: -13.349727630615234
    6. '
' → logprob: -13.599727630615234
    7. ' 
' → logprob: -14.099727630615234
    8. '    
' → logprob: -14.849727630615234
    9. '  ' → logprob: -15.599727630615234
    10. '    ' → logprob: -15.724727630615234

Token 145: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0017953701317310333
    2. '.append' → logprob: -6.626795291900635
    3. 'list' → logprob: -7.876795291900635
    4. 'List' → logprob: -10.251795768737793
    5. '.' → logprob: -10.376795768737793
    6. 'append' → logprob: -11.376795768737793
    7. '._' → logprob: -12.751795768737793
    8. '_.' → logprob: -13.376795768737793
    9. '   ' → logprob: -14.126795768737793
    10. '.list' → logprob: -14.251795768737793

Token 146: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.04859304800629616
    2. '.' → logprob: -3.048593044281006
    3. 'append' → logprob: -13.048593521118164
    4. '.app' → logprob: -13.298593521118164
    5. ' .' → logprob: -13.673593521118164
    6. '.extend' → logprob: -15.173593521118164
    7. '.Append' → logprob: -16.173593521118164
    8. '.add' → logprob: -16.548593521118164
    9. '   ' → logprob: -16.673593521118164
    10. '.
' → logprob: -17.048593521118164

Token 147: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.001037691137753427
    2. '(' → logprob: -6.87603759765625
    3. '(r' → logprob: -12.37603759765625
    4. ' (' → logprob: -14.62603759765625
    5. '(value' → logprob: -16.25103759765625
    6. '(
' → logprob: -16.50103759765625
    7. '((' → logprob: -16.62603759765625
    8. '(s' → logprob: -17.37603759765625
    9. '(x' → logprob: -18.25103759765625
    10. 'v' → logprob: -18.87603759765625

Token 148: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001171056181192398
    2. ')
' → logprob: -6.751171112060547
    3. ')
' → logprob: -14.626171112060547
    4. ' )' → logprob: -16.001171112060547
    5. ')

' → logprob: -16.501171112060547
    6. 'v' → logprob: -17.501171112060547
    7. 'r' → logprob: -17.626171112060547
    8. ')`' → logprob: -17.876171112060547
    9. ')v' → logprob: -18.251171112060547
    10. '),' → logprob: -18.251171112060547

Token 149: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.012588057667016983
    2. 'all' → logprob: -4.387588024139404
    3. 'r' → logprob: -9.887588500976562
    4. '+' → logprob: -12.012588500976562
    5. '.' → logprob: -12.137588500976562
    6. ' for' → logprob: -12.762588500976562
    7. '[' → logprob: -13.137588500976562
    8. '```' → logprob: -13.387588500976562
    9. 'while' → logprob: -13.637588500976562
    10. '[:]' → logprob: -13.887588500976562

Token 150: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.3869081139564514
    2. ' v' → logprob: -1.1369080543518066
    3. 'r' → logprob: -11.636908531188965
    4. '	v' → logprob: -11.886908531188965
    5. 'value' → logprob: -12.011908531188965
    6. ' ' → logprob: -12.761908531188965
    7. 'w' → logprob: -12.886908531188965
    8. 'c' → logprob: -13.011908531188965
    9. ' value' → logprob: -13.511908531188965
    10. ' r' → logprob: -13.511908531188965

Token 151: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.42934343218803406
    2. 'in' → logprob: -1.0543434619903564
    3. 'r' → logprob: -7.554343223571777
    4. ' r' → logprob: -9.554343223571777
    5. 's' → logprob: -11.054343223571777
    6. 'i' → logprob: -11.679343223571777
    7. '_' → logprob: -12.741843223571777
    8. ' ' → logprob: -12.866843223571777
    9. ',r' → logprob: -13.554343223571777
    10. '  ' → logprob: -13.616843223571777

Token 152: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.03364754095673561
    2. ' r' → logprob: -3.4086475372314453
    3. '	r' → logprob: -13.908647537231445
    4. '   ' → logprob: -14.658647537231445
    5. ' ' → logprob: -15.408647537231445
    6. '  ' → logprob: -16.158647537231445
    7. '(r' → logprob: -16.783647537231445
    8. 'c' → logprob: -17.158647537231445
    9. '
' → logprob: -17.283647537231445
    10. ' ' → logprob: -17.408647537231445

Token 153: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00871384609490633
    2. ':
' → logprob: -4.758713722229004
    3. 'all' → logprob: -10.258713722229004
    4. '   ' → logprob: -10.383713722229004
    5. '.append' → logprob: -11.133713722229004
    6. ' all' → logprob: -11.758713722229004
    7. '.' → logprob: -12.508713722229004
    8. '.all' → logprob: -12.508713722229004
    9. ')' → logprob: -14.133713722229004
    10. 'All' → logprob: -14.508713722229004

Token 154: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08049429208040237
    2. 'all' → logprob: -2.5804944038391113
    3. ' all' → logprob: -6.455494403839111
    4. '	all' → logprob: -11.705493927001953
    5. '  ' → logprob: -12.330493927001953
    6. ' ' → logprob: -12.455493927001953
    7. '{
' → logprob: -12.705493927001953
    8. ':
' → logprob: -12.705493927001953
    9. '       ' → logprob: -12.830493927001953
    10. ':' → logprob: -12.830493927001953

Token 155: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' (adapté à ' all') → logprob: -0.10280987620353699
    2. ' all' → logprob: -2.3528099060058594
    3. '   ' → logprob: -5.977809906005859
    4. ' ' → logprob: -10.35280990600586
    5. '  ' → logprob: -10.85280990600586
    6. 'c' → logprob: -12.22780990600586
    7. '	all' → logprob: -12.47780990600586
    8. '    ' → logprob: -13.22780990600586
    9. 'r' → logprob: -13.35280990600586
    10. '       ' → logprob: -14.10280990600586

Token 156: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.8789383830153383e-05
    2. '.append' → logprob: -11.125019073486328
    3. 'list' → logprob: -12.875019073486328
    4. 'List' → logprob: -13.625019073486328
    5. '._' → logprob: -16.000019073486328
    6. '-list' → logprob: -17.750019073486328
    7. '   ' → logprob: -18.000019073486328
    8. '.' → logprob: -18.000019073486328
    9. 'append' → logprob: -18.000019073486328
    10. '_' → logprob: -18.125019073486328

Token 157: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.04861098527908325
    2. '.' → logprob: -3.0486109256744385
    3. '.app' → logprob: -10.92361068725586
    4. 'append' → logprob: -12.42361068725586
    5. '.ap' → logprob: -14.54861068725586
    6. '.extend' → logprob: -14.92361068725586
    7. '.Append' → logprob: -15.42361068725586
    8. ' .' → logprob: -15.42361068725586
    9. '.add' → logprob: -16.17361068725586
    10. '_append' → logprob: -16.29861068725586

Token 158: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.0001987722353078425
    2. '(' → logprob: -8.625198364257812
    3. ' (' → logprob: -10.875198364257812
    4. '(value' → logprob: -16.375198364257812
    5. '(
' → logprob: -17.125198364257812
    6. ' ' → logprob: -17.750198364257812
    7. '(x' → logprob: -18.625198364257812
    8. '(s' → logprob: -18.750198364257812
    9. '
' → logprob: -18.875198364257812
    10. '```' → logprob: -19.000198364257812

Token 159: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.4740896224975586
    2. ')' → logprob: -0.9740896224975586
    3. ')
' → logprob: -11.724089622497559
    4. ')

' → logprob: -12.849089622497559
    5. ' )
' → logprob: -14.099089622497559
    6. ')`
' → logprob: -14.849089622497559
    7. ' )' → logprob: -15.974089622497559
    8. 'v' → logprob: -16.099090576171875
    9. '))
' → logprob: -16.349090576171875
    10. ')`' → logprob: -16.474090576171875

Token 160: 'all' (ID: 586)
  Prédit: 'all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.0001649220648687333
    2. '.all' → logprob: -9.375164985656738
    3. '.sort' → logprob: -9.625164985656738
    4. '
' → logprob: -11.875164985656738
    5. ' all' → logprob: -13.000164985656738
    6. 'sorted' → logprob: -13.000164985656738
    7. '.' → logprob: -14.000164985656738
    8. '_all' → logprob: -14.875164985656738
    9. 'a' → logprob: -15.500164985656738
    10. '(all' → logprob: -15.625164985656738

Token 161: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -3.464347173576243e-05
    2. '_' → logprob: -10.50003433227539
    3. '_l' → logprob: -13.37503433227539
    4. '=' → logprob: -13.50003433227539
    5. '_lists' → logprob: -14.12503433227539
    6. '_sorted' → logprob: -14.12503433227539
    7. ' =' → logprob: -14.50003433227539
    8. ' _' → logprob: -14.62503433227539
    9. '=_' → logprob: -14.87503433227539
    10. '_li' → logprob: -15.50003433227539

Token 162: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.10024172812700272
    2. '.' → logprob: -2.3502416610717773
    3. 'sort' → logprob: -11.475241661071777
    4. '.sorted' → logprob: -12.100241661071777
    5. ' .' → logprob: -12.225241661071777
    6. ' =' → logprob: -12.350241661071777
    7. '=' → logprob: -12.600241661071777
    8. 'sorted' → logprob: -12.725241661071777
    9. '.s' → logprob: -13.975241661071777
    10. '_sorted' → logprob: -14.100241661071777

Token 163: '(reverse' (ID: 110806)
  Prédit: '(reverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(reverse' → logprob: -0.002248507458716631
    2. '()' → logprob: -6.252248287200928
    3. '(' → logprob: -8.252248764038086
    4. 'reverse' → logprob: -9.752248764038086
    5. '(key' → logprob: -14.502248764038086
    6. '()
' → logprob: -15.877248764038086
    7. '(re' → logprob: -16.127248764038086
    8. '.reverse' → logprob: -16.627248764038086
    9. ' reverse' → logprob: -17.377248764038086
    10. '(
' → logprob: -17.627248764038086

Token 164: '=True' (ID: 7827)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.2978655695915222
    2. '()' → logprob: -1.422865629196167
    3. '=True' → logprob: -4.547865390777588
    4. ')' → logprob: -5.422865390777588
    5. '(True' → logprob: -7.047865390777588
    6. '()>' → logprob: -7.672865390777588
    7. '()]' → logprob: -9.297865867614746
    8. '()
' → logprob: -10.547865867614746
    9. '();)' → logprob: -10.672865867614746
    10. '(' → logprob: -11.047865867614746

Token 165: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029762526974081993
    2. ')
' → logprob: -3.5297625064849854
    3. ')
' → logprob: -11.529762268066406
    4. ')`' → logprob: -14.654762268066406
    5. ')

' → logprob: -14.779762268066406
    6. ' )' → logprob: -15.279762268066406
    7. '))' → logprob: -15.404762268066406
    8. '
' → logprob: -16.154762268066406
    9. ')return' → logprob: -16.154762268066406
    10. ')#' → logprob: -16.279762268066406

Token 166: 's' (ID: 82)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.12546470761299133
    2. 'result' → logprob: -2.375464677810669
    3. 'answer' → logprob: -4.625464916229248
    4. 'ans' → logprob: -5.125464916229248
    5. 'sum' → logprob: -5.500464916229248
    6. 'total' → logprob: -5.625464916229248
    7. 'all' → logprob: -7.500464916229248
    8. 'for' → logprob: -7.500464916229248
    9. 'res' → logprob: -8.62546443939209
    10. 's' → logprob: -8.75046443939209

Token 167: ' =' (ID: 314)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.00648183049634099
    2. '=' → logprob: -5.131481647491455
    3. ' =' → logprob: -8.006482124328613
    4. '=sum' → logprob: -9.381482124328613
    5. 'umma' → logprob: -10.756482124328613
    6. 'print' → logprob: -11.006482124328613
    7. '
' → logprob: -11.131482124328613
    8. '1' → logprob: -11.256482124328613
    9. 'u' → logprob: -11.256482124328613
    10. 'umm' → logprob: -11.756482124328613

Token 168: ' ' (ID: 220)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.02899240143597126
    2. ' sum' → logprob: -3.9039924144744873
    3. '0' → logprob: -4.778992176055908
    4. ' ' → logprob: -11.778992652893066
    5. 'um' → logprob: -14.028992652893066
    6. '(sum' → logprob: -14.153992652893066
    7. '	sum' → logprob: -15.153992652893066
    8. '=sum' → logprob: -15.653992652893066
    9. '1' → logprob: -16.02899169921875
    10. 's' → logprob: -16.27899169921875

Token 169: '0' (ID: 15)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.008639034815132618
    2. '0' → logprob: -4.758638858795166
    3. ' sum' → logprob: -10.633639335632324
    4. '(sum' → logprob: -16.258638381958008
    5. 'all' → logprob: -16.633638381958008
    6. ' ' → logprob: -17.133638381958008
    7. '
' → logprob: -17.383638381958008
    8. 'm' → logprob: -17.383638381958008
    9. '=sum' → logprob: -18.008638381958008
    10. 'um' → logprob: -18.133638381958008

Token 170: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01509966142475605
    2. ' for' → logprob: -4.89009952545166
    3. '
' → logprob: -5.39009952545166
    4. '<|end|>' → logprob: -5.89009952545166
    5. '+' → logprob: -9.64009952545166
    6. '\n' → logprob: -10.26509952545166
    7. ',' → logprob: -11.89009952545166
    8. '+
' → logprob: -12.39009952545166
    9. '<|end|>' → logprob: -12.64009952545166
    10. ' 
' → logprob: -12.89009952545166

Token 171: 'i' (ID: 72)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -7.374227425316349e-05
    2. ' for' → logprob: -9.625073432922363
    3. '<|end|>' → logprob: -12.500073432922363
    4. '
' → logprob: -13.375073432922363
    5. 'range' → logprob: -14.000073432922363
    6. 'i' → logprob: -14.875073432922363
    7. '0' → logprob: -15.250073432922363
    8. 'all' → logprob: -15.500073432922363
    9. 's' → logprob: -16.12507438659668
    10. '(' → logprob: -16.25007438659668

Token 172: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07641120254993439
    2. ' =' → logprob: -2.701411247253418
    3. 'n' → logprob: -5.826411247253418
    4. ' ' → logprob: -5.951411247253418
    5. 'nd' → logprob: -8.326411247253418
    6. ' +=' → logprob: -8.451411247253418
    7. '+=' → logprob: -8.826411247253418
    8. '0' → logprob: -9.701411247253418
    9. ' n' → logprob: -9.826411247253418
    10. '+' → logprob: -10.326411247253418

Token 173: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001093841710826382
    2. ' ' → logprob: -9.125109672546387
    3. 's' → logprob: -16.37510871887207
    4. 'a' → logprob: -16.62510871887207
    5. 'b' → logprob: -16.81260871887207
    6. 'c' → logprob: -16.87510871887207
    7. '<|end|>' → logprob: -16.87510871887207
    8. '1' → logprob: -17.06260871887207
    9. '  ' → logprob: -17.87510871887207
    10. 'x' → logprob: -18.12510871887207

Token 174: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '1' → logprob: -17.000001907348633
    4. 's' → logprob: -17.875001907348633
    5. '<|end|>' → logprob: -18.875001907348633
    6. '```' → logprob: -19.375001907348633
    7. '۰' → logprob: -19.625001907348633
    8. 'x' → logprob: -20.250001907348633
    9. '00' → logprob: -20.312501907348633
    10. '2' → logprob: -20.375001907348633

Token 175: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.2756898105144501
    2. '<|end|>' → logprob: -1.7756898403167725
    3. '
' → logprob: -3.5256898403167725
    4. ' while' → logprob: -3.9006898403167725
    5. '+' → logprob: -4.275689601898193
    6. ',' → logprob: -5.775689601898193
    7. 's' → logprob: -6.025689601898193
    8. 'for' → logprob: -7.275689601898193
    9. ':' → logprob: -7.775689601898193
    10. '#' → logprob: -8.275690078735352

Token 176: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -9.865583706414327e-05
    2. 'for' → logprob: -9.87509822845459
    3. '
' → logprob: -10.75009822845459
    4. ' while' → logprob: -10.75009822845459
    5. 's' → logprob: -13.87509822845459
    6. 'count' → logprob: -14.12509822845459
    7. 'w' → logprob: -14.50009822845459
    8. 'b' → logprob: -14.50009822845459
    9. 'n' → logprob: -14.87509822845459
    10. 'c' → logprob: -15.00009822845459

Token 177: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.01697685942053795
    2. ' i' → logprob: -4.141976833343506
    3. 's' → logprob: -7.141976833343506
    4. 'len' → logprob: -9.391977310180664
    5. ' s' → logprob: -10.141977310180664
    6. '(i' → logprob: -11.266977310180664
    7. ' len' → logprob: -12.141977310180664
    8. '   ' → logprob: -12.891977310180664
    9. 'x' → logprob: -13.391977310180664
    10. 'all' → logprob: -13.641977310180664

Token 178: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.20229178667068481
    2. '<' → logprob: -1.70229172706604
    3. '<len' → logprob: -7.202291965484619
    4. '<x' → logprob: -9.077291488647461
    5. ' ' → logprob: -11.952291488647461
    6. '<size' → logprob: -12.452291488647461
    7. '<n' → logprob: -12.827291488647461
    8. '<s' → logprob: -12.952291488647461
    9. ' x' → logprob: -13.952291488647461
    10. ' <
' → logprob: -14.452291488647461

Token 179: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.41371962428092957
    2. 'a' → logprob: -1.163719654083252
    3. 'len' → logprob: -3.663719654083252
    4. 'c' → logprob: -8.288719177246094
    5. ' x' → logprob: -8.413719177246094
    6. '(x' → logprob: -8.913719177246094
    7. ' a' → logprob: -9.288719177246094
    8. ' len' → logprob: -9.413719177246094
    9. 'b' → logprob: -10.663719177246094
    10. '(a' → logprob: -11.038719177246094

Token 180: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.11034885793924332
    2. '+y' → logprob: -2.73534893989563
    3. ' +' → logprob: -3.23534893989563
    4. 'and' → logprob: -9.73534870147705
    5. ' or' → logprob: -9.73534870147705
    6. 'or' → logprob: -10.36034870147705
    7. '+b' → logprob: -10.48534870147705
    8. ' and' → logprob: -10.61034870147705
    9. '+x' → logprob: -10.73534870147705
    10. '+s' → logprob: -11.73534870147705

Token 181: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00020389800192788243
    2. ' y' → logprob: -8.500204086303711
    3. '	y' → logprob: -16.00020408630371
    4. 'b' → logprob: -16.50020408630371
    5. ' ' → logprob: -16.62520408630371
    6. '   ' → logprob: -17.12520408630371
    7. ''y' → logprob: -19.25020408630371
    8. 'Y' → logprob: -19.25020408630371
    9. '(y' → logprob: -19.25020408630371
    10. 'x' → logprob: -19.37520408630371

Token 182: ':
' (ID: 734)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.38869667053222656
    2. ' and' → logprob: -1.1386966705322266
    3. ':
' → logprob: -6.888696670532227
    4. ':' → logprob: -7.138696670532227
    5. 's' → logprob: -12.388696670532227
    6. '	and' → logprob: -13.138696670532227
    7. ' ' → logprob: -13.263696670532227
    8. '   ' → logprob: -13.763696670532227
    9. 'all' → logprob: -15.138696670532227
    10. ',' → logprob: -15.513696670532227

Token 183: '   ' (ID: 271)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.1416258066892624
    2. ':' → logprob: -2.3916258811950684
    3. '   ' → logprob: -3.6416258811950684
    4. ':
' → logprob: -5.516625881195068
    5. ' s' → logprob: -5.641625881195068
    6. '):' → logprob: -5.891625881195068
    7. ')' → logprob: -6.141625881195068
    8. ' :' → logprob: -7.266625881195068
    9. ' ' → logprob: -7.891625881195068
    10. ' and' → logprob: -8.51662540435791

Token 184: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.000737442634999752
    2. '   ' → logprob: -7.37573766708374
    3. ' s' → logprob: -9.250737190246582
    4. 'if' → logprob: -11.875737190246582
    5. '
' → logprob: -12.875737190246582
    6. ')' → logprob: -13.750737190246582
    7. '  ' → logprob: -14.250737190246582
    8. ' ' → logprob: -14.375737190246582
    9. '	s' → logprob: -14.500737190246582
    10. '       ' → logprob: -15.000737190246582

Token 185: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.16291721165180206
    2. '+=' → logprob: -2.162917137145996
    3. '+' → logprob: -3.412917137145996
    4. ' +' → logprob: -6.037917137145996
    5. '=' → logprob: -12.412917137145996
    6. ']+=' → logprob: -12.662917137145996
    7. ' ' → logprob: -13.162917137145996
    8. '+='' → logprob: -13.537917137145996
    9. ' ' → logprob: -13.912917137145996
    10. 's' → logprob: -13.912917137145996

Token 186: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.014163747429847717
    2. ' all' → logprob: -4.264163970947266
    3. '	all' → logprob: -16.139163970947266
    4. '   ' → logprob: -16.639163970947266
    5. 'a' → logprob: -17.389163970947266
    6. ' ' → logprob: -17.514163970947266
    7. 'int' → logprob: -18.389163970947266
    8. ' ' → logprob: -18.514163970947266
    9. '(all' → logprob: -18.764163970947266
    10. 'al' → logprob: -19.514163970947266

Token 187: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.981667537620524e-06
    2. 'list' → logprob: -13.375001907348633
    3. '_' → logprob: -15.625001907348633
    4. '_l' → logprob: -17.500001907348633
    5. 'List' → logprob: -17.750001907348633
    6. '[' → logprob: -17.750001907348633
    7. '[_' → logprob: -17.875001907348633
    8. '_li' → logprob: -18.250001907348633
    9. '_lists' → logprob: -18.625001907348633
    10. '[i' → logprob: -18.625001907348633

Token 188: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.73314929776825e-05
    2. '[' → logprob: -9.37508773803711
    3. '[s' → logprob: -13.62508773803711
    4. '[
' → logprob: -14.12508773803711
    5. '```' → logprob: -15.12508773803711
    6. ' [' → logprob: -15.87508773803711
    7. '   ' → logprob: -17.25008773803711
    8. ' ' → logprob: -17.62508773803711
    9. '\[' → logprob: -17.62508773803711
    10. 'i' → logprob: -18.12508773803711

Token 189: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00022964231902733445
    2. ']
' → logprob: -8.500229835510254
    3. ' ]' → logprob: -10.875229835510254
    4. ')' → logprob: -12.375229835510254
    5. ']

' → logprob: -13.625229835510254
    6. ']
' → logprob: -14.375229835510254
    7. ')]' → logprob: -14.875229835510254
    8. '<|end|>' → logprob: -15.125229835510254
    9. '']' → logprob: -16.125228881835938
    10. '+' → logprob: -16.500228881835938

Token 190: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008391046896576881
    2. 'i' → logprob: -5.2583909034729
    3. '
' → logprob: -5.8833909034729
    4. ' i' → logprob: -8.133391380310059
    5. '    
' → logprob: -10.508391380310059
    6. '[i' → logprob: -11.008391380310059
    7. '	i' → logprob: -11.383391380310059
    8. ',i' → logprob: -11.508391380310059
    9. '\' → logprob: -13.758391380310059
    10. '\n' → logprob: -13.883391380310059

Token 191: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -4.847109812544659e-05
    2. '   ' → logprob: -10.250048637390137
    3. ' i' → logprob: -11.250048637390137
    4. '
' → logprob: -17.75004768371582
    5. '	i' → logprob: -18.00004768371582
    6. '```' → logprob: -18.37504768371582
    7. '_i' → logprob: -19.75004768371582
    8. '  ' → logprob: -19.87504768371582
    9. '    
' → logprob: -20.00004768371582
    10. '[i' → logprob: -20.50004768371582

Token 192: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.6036190390586853
    2. '+' → logprob: -0.8536190390586853
    3. ' +=' → logprob: -3.60361909866333
    4. '=' → logprob: -10.228618621826172
    5. '++' → logprob: -10.353618621826172
    6. ' +' → logprob: -12.603618621826172
    7. '+++' → logprob: -13.103618621826172
    8. '+="' → logprob: -14.353618621826172
    9. '+='' → logprob: -14.853618621826172
    10. '1' → logprob: -15.353618621826172

Token 193: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '```' → logprob: -18.375003814697266
    4. '   ' → logprob: -18.750003814697266
    5. '１' → logprob: -21.250003814697266
    6. '  ' → logprob: -21.625003814697266
    7. '
' → logprob: -22.625003814697266
    8. '۱' → logprob: -22.812503814697266
    9. '१' → logprob: -23.312503814697266
    10. '১' → logprob: -23.625003814697266

Token 194: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. '```' → logprob: -18.5
    4. '
' → logprob: -21.25
    5. '   ' → logprob: -21.375
    6. '１' → logprob: -21.5
    7. '

' → logprob: -22.6875
    8. '۱' → logprob: -22.75
    9. '  ' → logprob: -22.8125
    10. '<|end|>' → logprob: -22.9375

Token 195: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0005697138840332627
    2. '
' → logprob: -7.500569820404053
    3. ' print' → logprob: -11.125569343566895
    4. ' 
' → logprob: -14.750569343566895
    5. '```' → logprob: -14.750569343566895
    6. '
' → logprob: -15.000569343566895
    7. '  
' → logprob: -15.375569343566895
    8. '#print' → logprob: -16.12557029724121
    9. '#' → logprob: -16.37557029724121
    10. ')' → logprob: -16.50057029724121

Token 196: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.1008713702030946e-06
    2. ' print' → logprob: -13.250001907348633
    3. '
' → logprob: -16.125001907348633
    4. ')' → logprob: -17.250001907348633
    5. '#print' → logprob: -17.500001907348633
    6. '```' → logprob: -17.625001907348633
    7. '<|end|>' → logprob: -17.875001907348633
    8. '#' → logprob: -18.500001907348633
    9. '(print' → logprob: -18.500001907348633
    10. 'return' → logprob: -19.500001907348633

Token 197: '(s' (ID: 1858)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005243718158453703
    2. '(s' → logprob: -5.25524377822876
    3. 's' → logprob: -12.005243301391602
    4. '(
' → logprob: -13.630243301391602
    5. '()' → logprob: -13.755243301391602
    6. '('' → logprob: -14.130243301391602
    7. '(

' → logprob: -15.630243301391602
    8. '(S' → logprob: -16.1302433013916
    9. '(sum' → logprob: -16.1302433013916
    10. ' (' → logprob: -16.2552433013916

Token 198: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ' )' → logprob: -16.375
    3. ')`' → logprob: -16.5
    4. ')
' → logprob: -17.875
    5. '))' → logprob: -18.125
    6. ')#' → logprob: -20.0
    7. '`)' → logprob: -20.25
    8. '),' → logprob: -21.0
    9. '')' → logprob: -21.0
    10. '）' → logprob: -21.125


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 196
Tokens correctement prédits (1ère position, stricte): 78
Tokens correctement prédits (1ère position, avec adaptation): 83
Tokens correctement prédits (top 10): 160
Précision stricte (1ère position): 39.80%
Précision adaptée (1ère position): 42.35%
Précision (top 10): 81.63%
================================================================================
