================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:15:23
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def check(inp):
    if inp == "ABC":
        return "ARC"
    return "ABC"

s = input()
res = ""
while res == "":
    t = (lambda x: check(x))(s)
    for item in [t]:
        print(item)
        res = item
        break
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' check' (ID: 2371)
  → Token d'amorce (pas de prédiction)

Token 2: '(inp' (ID: 141645)
  → Token d'amorce (pas de prédiction)

Token 3: '):
' (ID: 1883)
  Prédit: 'ut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ut' → logprob: -0.004775430075824261
    2. 'u' → logprob: -5.879775524139404
    3. ' ut' → logprob: -7.254775524139404
    4. '_ut' → logprob: -7.254775524139404
    5. ')' → logprob: -8.504775047302246
    6. '):' → logprob: -8.879775047302246
    7. '(' → logprob: -9.379775047302246
    8. '-ut' → logprob: -10.504775047302246
    9. '_' → logprob: -10.629775047302246
    10. '[' → logprob: -11.504775047302246

Token 4: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8354297876358032
    2. '   ' → logprob: -0.8354297876358032
    3. '```' → logprob: -2.0854296684265137
    4. '():' → logprob: -6.960429668426514
    5. '    
' → logprob: -7.085429668426514
    6. '    ' → logprob: -7.085429668426514
    7. '(' → logprob: -7.085429668426514
    8. '[:]' → logprob: -7.335429668426514
    9. ''' → logprob: -7.460429668426514
    10. '\' → logprob: -7.460429668426514

Token 5: ' if' (ID: 538)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7618025541305542
    2. ' ' → logprob: -1.1368025541305542
    3. '   ' → logprob: -2.2618026733398438
    4. ' i' → logprob: -3.0118026733398438
    5. ' if' → logprob: -3.8868026733398438
    6. 'r' → logprob: -3.8868026733398438
    7. 'if' (adapté à ' if') → logprob: -5.886802673339844
    8. '_' → logprob: -6.011802673339844
    9. ' return' → logprob: -6.011802673339844
    10. '```' → logprob: -6.511802673339844

Token 6: ' inp' (ID: 64450)
  Prédit: ' inp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' inp' → logprob: -0.09146541357040405
    2. ' ' → logprob: -2.591465473175049
    3. ' not' → logprob: -4.466465473175049
    4. 'inp' → logprob: -7.216465473175049
    5. '(inp' → logprob: -9.46646499633789
    6. '  ' → logprob: -10.09146499633789
    7. ' input' → logprob: -10.46646499633789
    8. ' a' → logprob: -10.59146499633789
    9. ' in' → logprob: -10.71646499633789
    10. ' ' → logprob: -11.09146499633789

Token 7: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.13291992247104645
    2. '==' → logprob: -2.382920026779175
    3. ' ' → logprob: -4.132919788360596
    4. '.' → logprob: -5.382919788360596
    5. '[' → logprob: -5.632919788360596
    6. ' .' → logprob: -6.382919788360596
    7. '=' → logprob: -6.632919788360596
    8. '  ' → logprob: -7.007919788360596
    9. ')' → logprob: -7.757919788360596
    10. 'space' → logprob: -7.882919788360596

Token 8: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.24099306762218475
    2. ''' → logprob: -1.7409930229187012
    3. ' True' → logprob: -3.990993022918701
    4. ' None' → logprob: -4.865993022918701
    5. 'True' → logprob: -5.740993022918701
    6. ' ' → logprob: -5.740993022918701
    7. 'None' → logprob: -6.115993022918701
    8. ' '' → logprob: -6.240993022918701
    9. ' "' → logprob: -6.490993022918701
    10. '0' → logprob: -8.74099349975586

Token 9: 'ABC' (ID: 44197)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '":' → logprob: -0.9035043120384216
    2. 'hello' → logprob: -1.5285043716430664
    3. '"' → logprob: -2.1535043716430664
    4. 'yes' → logprob: -2.6535043716430664
    5. 'pass' → logprob: -3.6535043716430664
    6. '\n' → logprob: -4.028504371643066
    7. 'ok' → logprob: -4.153504371643066
    8. 'hi' → logprob: -4.278504371643066
    9. 'True' → logprob: -4.403504371643066
    10. 'true' → logprob: -4.528504371643066

Token 10: '":
' (ID: 9213)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":' → logprob: -0.0037607743870466948
    2. '"' → logprob: -5.628760814666748
    3. '":
' → logprob: -9.50376033782959
    4. ':' → logprob: -9.87876033782959
    5. '"):' → logprob: -10.75376033782959
    6. '":
' → logprob: -12.25376033782959
    7. ' ":' → logprob: -13.25376033782959
    8. '_' → logprob: -13.75376033782959
    9. '"]:' → logprob: -13.75376033782959
    10. 'A' → logprob: -14.00376033782959

Token 11: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.19375313818454742
    2. '       ' → logprob: -1.9437531232833862
    3. ':
' → logprob: -3.693753242492676
    4. ':return' → logprob: -6.443753242492676
    5. ' :' → logprob: -6.568753242492676
    6. '):' → logprob: -6.943753242492676
    7. '\n' → logprob: -6.943753242492676
    8. '\' → logprob: -7.693753242492676
    9. '():' → logprob: -7.693753242492676
    10. ' return' → logprob: -7.943753242492676

Token 12: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -1.0734572410583496
    2. 'return' (adapté à ' return') → logprob: -1.0734572410583496
    3. '           ' → logprob: -1.1984572410583496
    4. '       ' → logprob: -4.32345724105835
    5. '\n' → logprob: -7.32345724105835
    6. '   ' → logprob: -8.323457717895508
    7. '```' → logprob: -8.823457717895508
    8. ':return' → logprob: -9.323457717895508
    9. '\' → logprob: -9.823457717895508
    10. ' ' → logprob: -10.573457717895508

Token 13: ' "' (ID: 392)
  Prédit: ' None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.9321407675743103
    2. '"' → logprob: -1.432140827178955
    3. ' ' → logprob: -1.682140827178955
    4. ' True' → logprob: -2.307140827178955
    5. 'None' → logprob: -3.057140827178955
    6. 'True' → logprob: -4.182140827178955
    7. ' "' → logprob: -4.432140827178955
    8. ' 
' → logprob: -6.307140827178955
    9. ''' → logprob: -6.432140827178955
    10. '    ' → logprob: -7.432140827178955

Token 14: 'ARC' (ID: 64758)
  Prédit: 'ABC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ABC' → logprob: -1.14289391040802
    2. 'OK' → logprob: -1.39289391040802
    3. 'Correct' → logprob: -2.3928937911987305
    4. 'True' → logprob: -3.0178937911987305
    5. 'YES' → logprob: -3.1428937911987305
    6. 'correct' → logprob: -3.5178937911987305
    7. 'COR' → logprob: -3.6428937911987305
    8. 'Accepted' → logprob: -3.6428937911987305
    9. 'Valid' → logprob: -3.7678937911987305
    10. ' OK' → logprob: -4.1428937911987305

Token 15: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.001760029001161456
    2. '"""' → logprob: -7.126760005950928
    3. '"}' → logprob: -8.376760482788086
    4. '_' → logprob: -9.001760482788086
    5. '""' → logprob: -9.376760482788086
    6. 'I' → logprob: -9.751760482788086
    7. '```' → logprob: -9.751760482788086
    8. 'A' → logprob: -9.876760482788086
    9. 'D' → logprob: -10.001760482788086
    10. '_"' → logprob: -10.376760482788086

Token 16: '   ' (ID: 271)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.012340784072876
    2. '
' → logprob: -1.387340784072876
    3. '\' → logprob: -2.262340784072876
    4. '   ' → logprob: -2.512340784072876
    5. '```' → logprob: -2.512340784072876
    6. '    
' → logprob: -2.762340784072876
    7. '  
' → logprob: -3.512340784072876
    8. ':' → logprob: -5.762340545654297
    9. ''\' → logprob: -5.887340545654297
    10. '\r' → logprob: -6.012340545654297

Token 17: ' return' (ID: 622)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.4248613119125366
    2. '   ' → logprob: -1.6748613119125366
    3. '
' → logprob: -3.174861431121826
    4. '\' → logprob: -3.424861431121826
    5. ' ' → logprob: -4.299861431121826
    6. '    
' → logprob: -4.549861431121826
    7. '<|end|>' → logprob: -4.549861431121826
    8. '```' → logprob: -4.674861431121826
    9. ':' → logprob: -4.799861431121826
    10. 'else' → logprob: -5.049861431121826

Token 18: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.6960716247558594
    2. ' None' → logprob: -0.8210716247558594
    3. 'None' → logprob: -3.4460716247558594
    4. ' ' → logprob: -4.196071624755859
    5. '""' → logprob: -5.196071624755859
    6. ' "' → logprob: -5.446071624755859
    7. ' ""' → logprob: -6.071071624755859
    8. ''' → logprob: -6.321071624755859
    9. '<|end|>' → logprob: -8.69607162475586
    10. ' False' → logprob: -9.19607162475586

Token 19: 'ABC' (ID: 44197)
  Prédit: 'ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ABC' → logprob: -0.500389814376831
    2. 'BCD' → logprob: -2.500389814376831
    3. 'ARC' → logprob: -3.250389814376831
    4. '"' → logprob: -3.250389814376831
    5. '")' → logprob: -3.375389814376831
    6. 'B' → logprob: -3.500389814376831
    7. 'ABD' → logprob: -3.875389814376831
    8. 'BAD' → logprob: -4.00039005279541
    9. 'XYZ' → logprob: -4.12539005279541
    10. 'AC' → logprob: -4.25039005279541

Token 20: '"

' (ID: 2678)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.00010080150241265073
    2. '```' → logprob: -9.625101089477539
    3. '"
' → logprob: -10.375101089477539
    4. '\n' → logprob: -13.625101089477539
    5. '"""' → logprob: -13.750101089477539
    6. '"

' → logprob: -15.500101089477539
    7. '"`' → logprob: -15.500101089477539
    8. ''' → logprob: -15.500101089477539
    9. '"
' → logprob: -15.750101089477539
    10. '"\' → logprob: -16.00010108947754

Token 21: 's' (ID: 82)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1451014280319214
    2. '<|end|>' → logprob: -3.020101547241211
    3. '\n' → logprob: -4.145101547241211
    4. '```' → logprob: -4.145101547241211
    5. '\' → logprob: -4.270101547241211
    6. '
' → logprob: -5.020101547241211
    7. ')' → logprob: -5.145101547241211
    8. '(
' → logprob: -5.145101547241211
    9. '#' → logprob: -5.520101547241211
    10. '_' → logprob: -5.770101547241211

Token 22: ' =' (ID: 314)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.9411278963088989
    2. 't' → logprob: -1.316127896308899
    3. 'u' → logprob: -1.691127896308899
    4. 'w' → logprob: -2.9411277770996094
    5. 'a' → logprob: -3.3161277770996094
    6. 'h' → logprob: -3.9411277770996094
    7. 'o' → logprob: -4.441127777099609
    8. 'et' → logprob: -4.691127777099609
    9. 'tr' → logprob: -4.941127777099609
    10. 'q' → logprob: -5.066127777099609

Token 23: ' input' (ID: 3422)
  Prédit: ' "'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' "' → logprob: -0.817192554473877
    2. '"' → logprob: -0.942192554473877
    3. ' input' → logprob: -2.442192554473877
    4. ' check' → logprob: -3.692192554473877
    5. ' s' → logprob: -4.067192554473877
    6. 'input' → logprob: -4.442192554473877
    7. 's' → logprob: -4.567192554473877
    8. ' ' → logprob: -5.442192554473877
    9. '"s' → logprob: -5.817192554473877
    10. ' ""' → logprob: -6.192192554473877

Token 24: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003793423529714346
    2. '('' → logprob: -6.128793239593506
    3. '("("' → logprob: -6.753793239593506
    4. ''' → logprob: -8.378793716430664
    5. '"' → logprob: -9.753793716430664
    6. 's' → logprob: -10.628793716430664
    7. '```' → logprob: -10.878793716430664
    8. '(
' → logprob: -10.878793716430664
    9. '()' → logprob: -11.003793716430664
    10. '`' → logprob: -11.128793716430664

Token 25: 'res' (ID: 430)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.013434205204248428
    2. 'if' → logprob: -4.388434410095215
    3. 'p' → logprob: -7.388434410095215
    4. 'pr' → logprob: -8.638434410095215
    5. 'result' → logprob: -10.013434410095215
    6. '```' → logprob: -10.263434410095215
    7. 'r' → logprob: -11.138434410095215
    8. 'res' → logprob: -11.138434410095215
    9. 'i' → logprob: -12.513434410095215
    10. 'output' → logprob: -12.638434410095215

Token 26: ' =' (ID: 314)
  Prédit: 'ult'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ult' → logprob: -0.293826162815094
    2. ' =' → logprob: -1.7938261032104492
    3. '=' → logprob: -2.668826103210449
    4. 'ul' → logprob: -4.543826103210449
    5. 'u' → logprob: -5.793826103210449
    6. 'ults' → logprob: -5.918826103210449
    7. 'ultat' → logprob: -6.793826103210449
    8. 'ULT' → logprob: -7.668826103210449
    9. 'ault' → logprob: -8.66882610321045
    10. 'uls' → logprob: -8.91882610321045

Token 27: ' ""
' (ID: 18061)
  Prédit: ' check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' check' → logprob: -0.1602274775505066
    2. 'check' → logprob: -1.9102275371551514
    3. '(check' → logprob: -13.66022777557373
    4. 's' → logprob: -14.53522777557373
    5. ' s' → logprob: -14.53522777557373
    6. ' ' → logprob: -15.41022777557373
    7. '	check' → logprob: -15.41022777557373
    8. '.check' → logprob: -15.53522777557373
    9. 'chec' → logprob: -15.78522777557373
    10. '_check' → logprob: -16.035226821899414

Token 28: 'while' (ID: 7032)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.030246654525399208
    2. ' for' → logprob: -4.405246734619141
    3. 'f' → logprob: -5.030246734619141
    4. 'i' → logprob: -5.280246734619141
    5. 'if' → logprob: -5.530246734619141
    6. '```' → logprob: -7.280246734619141
    7. '
' → logprob: -7.405246734619141
    8. '\n' → logprob: -8.03024673461914
    9. 'r' → logprob: -9.28024673461914
    10. 'n' → logprob: -9.28024673461914

Token 29: ' res' (ID: 694)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.01662449538707733
    2. ' len' → logprob: -5.016624450683594
    3. ' res' → logprob: -5.641624450683594
    4. ' not' → logprob: -5.766624450683594
    5. ' True' → logprob: -6.391624450683594
    6. 's' → logprob: -7.016624450683594
    7. ' ' → logprob: -7.891624450683594
    8. ' inp' → logprob: -9.141624450683594
    9. 'True' → logprob: -9.641624450683594
    10. 'res' → logprob: -10.766624450683594

Token 30: ' ==' (ID: 951)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.0337330661714077
    2. '!=' → logprob: -3.4087331295013428
    3. ' ' → logprob: -10.033733367919922
    4. ' ==' → logprob: -10.283733367919922
    5. '==' → logprob: -12.533733367919922
    6. ' not' → logprob: -13.033733367919922
    7. '!='' → logprob: -14.158733367919922
    8. '!="' → logprob: -14.158733367919922
    9. ' !' → logprob: -14.783733367919922
    10. '()!=' → logprob: -15.158733367919922

Token 31: ' "":
' (ID: 132826)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '""' → logprob: -0.5878444314002991
    2. ' ""' → logprob: -0.9628444314002991
    3. '"' → logprob: -2.9628443717956543
    4. ' ' → logprob: -4.962844371795654
    5. ' "' → logprob: -5.837844371795654
    6. '''' → logprob: -8.212844848632812
    7. '"":' → logprob: -8.462844848632812
    8. 's' → logprob: -9.087844848632812
    9. ' ''' → logprob: -9.462844848632812
    10. ' "")' → logprob: -9.587844848632812

Token 32: '   ' (ID: 271)
  Prédit: ' check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' check' → logprob: -0.09903287887573242
    2. 'check' → logprob: -3.0990328788757324
    3. ' s' → logprob: -3.3490328788757324
    4. ' res' → logprob: -5.224032878875732
    5. 's' → logprob: -5.474032878875732
    6. ' inp' → logprob: -5.849032878875732
    7. 'inp' → logprob: -7.849032878875732
    8. 'res' → logprob: -8.34903335571289
    9. ' input' → logprob: -8.72403335571289
    10. ' not' → logprob: -8.84903335571289

Token 33: ' t' (ID: 260)
  Prédit: ' res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.5675739645957947
    2. 'res' → logprob: -1.8175740242004395
    3. ' inp' → logprob: -2.3175740242004395
    4. ' s' → logprob: -2.9425740242004395
    5. ' check' → logprob: -3.1925740242004395
    6. 'inp' → logprob: -3.5675740242004395
    7. 'check' → logprob: -4.1925740242004395
    8. ' if' → logprob: -4.4425740242004395
    9. 's' → logprob: -4.4425740242004395
    10. '   ' → logprob: -5.6925740242004395

Token 34: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2277662754058838
    2. '=' → logprob: -1.6027662754058838
    3. ' ' → logprob: -7.102766036987305
    4. 'emp' → logprob: -8.102766036987305
    5. '=input' → logprob: -8.102766036987305
    6. 'e' → logprob: -8.477766036987305
    7. 'ext' → logprob: -8.477766036987305
    8. 'he' → logprob: -9.602766036987305
    9. 'ime' → logprob: -9.977766036987305
    10. 'r' → logprob: -10.602766036987305

Token 35: ' (' (ID: 350)
  Prédit: ' check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' check' → logprob: -0.971346378326416
    2. 'check' → logprob: -1.096346378326416
    3. 'input' → logprob: -1.971346378326416
    4. ' input' → logprob: -2.471346378326416
    5. 's' → logprob: -3.471346378326416
    6. ' s' → logprob: -3.471346378326416
    7. ' inp' → logprob: -7.471346378326416
    8. 'inp' → logprob: -7.471346378326416
    9. ' ' → logprob: -8.721345901489258
    10. 'int' → logprob: -10.846345901489258

Token 36: 'lambda' (ID: 35280)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.2336248755455017
    2. 's' → logprob: -2.2336249351501465
    3. ' check' → logprob: -2.6086249351501465
    4. ' s' → logprob: -4.3586249351501465
    5. 'input' → logprob: -4.9836249351501465
    6. 'inp' → logprob: -5.1086249351501465
    7. ' inp' → logprob: -6.9836249351501465
    8. ' input' → logprob: -7.8586249351501465
    9. ')' → logprob: -7.9836249351501465
    10. ' ' → logprob: -9.983624458312988

Token 37: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.7834222316741943
    2. ' inp' → logprob: -1.5334222316741943
    3. 'x' → logprob: -1.6584222316741943
    4. 'inp' → logprob: -2.4084222316741943
    5. ' s' → logprob: -3.7834222316741943
    6. 's' → logprob: -4.033422470092773
    7. 'lambda' → logprob: -6.408422470092773
    8. ' lambda' → logprob: -6.658422470092773
    9. 'a' → logprob: -7.158422470092773
    10. ' a' → logprob: -7.408422470092773

Token 38: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014092395082116127
    2. ' :' → logprob: -4.389092445373535
    3. ':x' → logprob: -7.014092445373535
    4. 'x' → logprob: -7.889092445373535
    5. ' x' → logprob: -8.264092445373535
    6. ',' → logprob: -11.639092445373535
    7. '):' → logprob: -11.764092445373535
    8. 's' → logprob: -11.889092445373535
    9. 't' → logprob: -11.889092445373535
    10. ')' → logprob: -12.514092445373535

Token 39: ' check' (ID: 2371)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.8176984786987305
    2. 'x' → logprob: -1.1926984786987305
    3. ' check' → logprob: -1.9426984786987305
    4. 'check' → logprob: -2.5676984786987305
    5. '"' → logprob: -4.0676984786987305
    6. ' "' → logprob: -5.0676984786987305
    7. '"x' → logprob: -5.5676984786987305
    8. '""' → logprob: -6.1926984786987305
    9. ' not' → logprob: -7.3176984786987305
    10. ''' → logprob: -7.5676984786987305

Token 40: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.04834432899951935
    2. '(' → logprob: -3.423344373703003
    3. ' x' → logprob: -5.173344135284424
    4. ')' → logprob: -5.673344135284424
    5. 'x' → logprob: -5.798344135284424
    6. ' (' → logprob: -7.048344135284424
    7. '(s' → logprob: -7.423344135284424
    8. ')x' → logprob: -8.173344612121582
    9. ')(' → logprob: -8.298344612121582
    10. ' ' → logprob: -8.798344612121582

Token 41: '))(' (ID: 72297)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0362579822540283
    2. '))' → logprob: -1.6612579822540283
    3. '(s' → logprob: -1.7862579822540283
    4. '))(' → logprob: -1.7862579822540283
    5. 's' → logprob: -2.6612579822540283
    6. ')(' → logprob: -3.9112579822540283
    7. '(inp' → logprob: -4.536257743835449
    8. ')):' → logprob: -5.411257743835449
    9. '(' → logprob: -5.786257743835449
    10. 't' → logprob: -6.161257743835449

Token 42: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.009785249829292297
    2. ' s' → logprob: -4.634785175323486
    3. ' ' → logprob: -11.259785652160645
    4. ')' → logprob: -12.259785652160645
    5. '(s' → logprob: -12.509785652160645
    6. 'inp' → logprob: -13.134785652160645
    7. '   ' → logprob: -13.259785652160645
    8. 'input' → logprob: -13.384785652160645
    9. '  ' → logprob: -14.259785652160645
    10. ')s' → logprob: -15.259785652160645

Token 43: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.983476436696947e-05
    2. ' )' → logprob: -9.875089645385742
    3. '))' → logprob: -10.250089645385742
    4. ')
' → logprob: -13.500089645385742
    5. ')))' → logprob: -13.875089645385742
    6. ')t' → logprob: -16.125089645385742
    7. ')`' → logprob: -16.500089645385742
    8. ' ' → logprob: -16.625089645385742
    9. ')s' → logprob: -16.625089645385742
    10. ')

' → logprob: -17.000089645385742

Token 44: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11065752804279327
    2. '   ' → logprob: -2.3606574535369873
    3. ' if' → logprob: -5.110657691955566
    4. 'if' → logprob: -6.235657691955566
    5. ' res' → logprob: -6.985657691955566
    6. 'res' → logprob: -7.110657691955566
    7. '<|end|>' → logprob: -8.360657691955566
    8. '    
' → logprob: -8.610657691955566
    9. '\n' → logprob: -9.735657691955566
    10. ' 
' → logprob: -9.985657691955566

Token 45: ' for' (ID: 395)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.7802207469940186
    2. 'if' → logprob: -1.0302207469940186
    3. '
' → logprob: -1.9052207469940186
    4. ' if' → logprob: -3.6552207469940186
    5. '\n' → logprob: -4.905220985412598
    6. ' res' → logprob: -6.155220985412598
    7. ' 
' → logprob: -8.905220985412598
    8. '    
' → logprob: -9.030220985412598
    9. '   ' → logprob: -9.155220985412598
    10. '  
' → logprob: -9.280220985412598

Token 46: ' item' (ID: 2169)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.20739997923374176
    2. ' i' → logprob: -1.9573999643325806
    3. 'c' → logprob: -4.082399845123291
    4. ' ' → logprob: -4.457399845123291
    5. ' _' → logprob: -4.707399845123291
    6. '_' → logprob: -5.832399845123291
    7. ' t' → logprob: -6.457399845123291
    8. 'i' → logprob: -6.457399845123291
    9. ' ch' → logprob: -7.332399845123291
    10. ' char' → logprob: -7.457399845123291

Token 47: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0013627357548102736
    2. 'in' → logprob: -6.6263628005981445
    3. 's' → logprob: -11.126362800598145
    4. ' ' → logprob: -11.251362800598145
    5. ' i' → logprob: -12.876362800598145
    6. '	in' → logprob: -13.376362800598145
    7. '  ' → logprob: -13.501362800598145
    8. '_' → logprob: -14.626362800598145
    9. '_in' → logprob: -14.626362800598145
    10. '<|end|>' → logprob: -14.813862800598145

Token 48: ' [' (ID: 723)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.12464839220046997
    2. 't' → logprob: -2.249648332595825
    3. ' range' → logprob: -5.624648571014404
    4. '["' → logprob: -6.124648571014404
    5. ' res' → logprob: -6.624648571014404
    6. 'res' → logprob: -7.124648571014404
    7. ' ["' → logprob: -7.249648571014404
    8. '"' → logprob: -7.374648571014404
    9. 'range' → logprob: -7.374648571014404
    10. '[' → logprob: -7.749648571014404

Token 49: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.2558162808418274
    2. ' t' → logprob: -2.1308162212371826
    3. '"' → logprob: -3.6308162212371826
    4. 's' → logprob: -3.7558162212371826
    5. ''' → logprob: -4.255816459655762
    6. ''A' → logprob: -4.255816459655762
    7. '"A' → logprob: -4.755816459655762
    8. '   ' → logprob: -5.380816459655762
    9. ' '' → logprob: -5.755816459655762
    10. '0' → logprob: -6.380816459655762

Token 50: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.04605064541101456
    2. ',' → logprob: -4.046050548553467
    3. ']:
' → logprob: -4.171050548553467
    4. ' ]' → logprob: -4.796050548553467
    5. ']' → logprob: -6.421050548553467
    6. ']:
' → logprob: -7.171050548553467
    7. '   ' → logprob: -7.546050548553467
    8. '):' → logprob: -8.796051025390625
    9. '       ' → logprob: -8.796051025390625
    10. ' ,' → logprob: -9.421051025390625

Token 51: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.047767166048288345
    2. ' ' → logprob: -3.922767162322998
    3. ' if' → logprob: -4.172767162322998
    4. '    ' → logprob: -5.797767162322998
    5. '        
' → logprob: -6.297767162322998
    6. '   ' → logprob: -6.422767162322998
    7. '<|end|>' → logprob: -6.422767162322998
    8. ' 
' → logprob: -6.672767162322998
    9. 'if' → logprob: -7.797767162322998
    10. '    
' → logprob: -8.047767639160156

Token 52: ' print' (ID: 2123)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.035876594483852386
    2. 'if' → logprob: -3.910876512527466
    3. ' res' → logprob: -5.035876750946045
    4. '           ' → logprob: -5.285876750946045
    5. '    ' → logprob: -7.160876750946045
    6. '        ' → logprob: -7.285876750946045
    7. ' ' → logprob: -7.410876750946045
    8. '            ' → logprob: -7.535876750946045
    9. 'res' → logprob: -7.785876750946045
    10. '       ' → logprob: -8.535876274108887

Token 53: '(item' (ID: 10016)
  Prédit: '(item'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(item' → logprob: -0.008675670251250267
    2. '(' → logprob: -4.758675575256348
    3. 'item' → logprob: -10.008675575256348
    4. '(t' → logprob: -11.633675575256348
    5. ' item' → logprob: -12.883675575256348
    6. ' (' → logprob: -13.133675575256348
    7. '(Item' → logprob: -14.258675575256348
    8. '(items' → logprob: -14.633675575256348
    9. ')item' → logprob: -14.758675575256348
    10. '(it' → logprob: -15.383675575256348

Token 54: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.961759259458631e-06
    2. ' )' → logprob: -12.750004768371582
    3. ')
' → logprob: -13.750004768371582
    4. '))' → logprob: -14.875004768371582
    5. '   ' → logprob: -15.875004768371582
    6. '")' → logprob: -16.3750057220459
    7. '')' → logprob: -16.6250057220459
    8. ')")' → logprob: -16.6250057220459
    9. ')`' → logprob: -17.0000057220459
    10. '       ' → logprob: -17.0000057220459

Token 55: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.856829047203064
    2. '<|end|>' → logprob: -0.981829047203064
    3. ' ' → logprob: -2.3568291664123535
    4. '       ' → logprob: -3.4818291664123535
    5. ' 
' → logprob: -3.9818291664123535
    6. '   ' → logprob: -4.2318291664123535
    7. '<|end|>' → logprob: -4.6068291664123535
    8. ')' → logprob: -5.2318291664123535
    9. '```' → logprob: -5.6068291664123535
    10. '    ' → logprob: -5.7318291664123535

Token 56: ' res' (ID: 694)
  Prédit: '        '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '        ' → logprob: -1.1239804029464722
    2. 'res' (adapté à ' res') → logprob: -1.4989804029464722
    3. '       ' → logprob: -1.4989804029464722
    4. 'break' → logprob: -2.9989805221557617
    5. ' res' → logprob: -3.2489805221557617
    6. '<|end|>' → logprob: -3.4989805221557617
    7. ' break' → logprob: -3.7489805221557617
    8. ' ' → logprob: -3.8739805221557617
    9. '    ' → logprob: -4.123980522155762
    10. 's' → logprob: -4.123980522155762

Token 57: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14587752521038055
    2. '=' → logprob: -2.1458775997161865
    3. ' +=' → logprob: -4.020877361297607
    4. '+=' → logprob: -7.770877361297607
    5. ' ==' → logprob: -8.270877838134766
    6. ' ' → logprob: -9.020877838134766
    7. '==' → logprob: -11.520877838134766
    8. ' !=' → logprob: -11.770877838134766
    9. '+' → logprob: -12.520877838134766
    10. ' +' → logprob: -13.020877838134766

Token 58: ' item' (ID: 2169)
  Prédit: 'item'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'item' → logprob: -0.06452967971563339
    2. ' item' → logprob: -2.8145296573638916
    3. 't' → logprob: -6.564529895782471
    4. ' t' → logprob: -7.064529895782471
    5. '"' → logprob: -8.439529418945312
    6. 's' → logprob: -10.564529418945312
    7. ' ' → logprob: -11.814529418945312
    8. ' s' → logprob: -12.189529418945312
    9. ' "' → logprob: -12.189529418945312
    10. 'input' → logprob: -12.189529418945312

Token 59: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 60: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 61: ' break' (ID: 2338)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 59
Tokens correctement prédits (1ère position, stricte): 14
Tokens correctement prédits (1ère position, avec adaptation): 14
Tokens correctement prédits (top 10): 37
Précision stricte (1ère position): 23.73%
Précision adaptée (1ère position): 23.73%
Précision (top 10): 62.71%
================================================================================
