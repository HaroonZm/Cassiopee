================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:06:08
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n, a, b = list(map(int, input().split()))
if bin(a).count('1') % 2 == bin(b).count('1') % 2:
    print('NO')
else:
    remain = set(range(n))
    ans = [0] * (1 << n)
    stack = []
    stack.append((n, a, b, remain.copy(), 0, ans, 1 << n, None))
    while stack:
        n1, a1, b1, remain1, ai1, ans1, width1, l1 = stack.pop()
        if width1 == 2:
            ans1[ai1] = a1
            ans1[ai1 + 1] = b1
            continue
        if l1 is None:
            x = a1 ^ b1
            y = x & -x
            l2 = y.bit_length() - 1
        else:
            y = 1 << l1
            l2 = l1
        remain1 = remain1.copy()
        remain1.remove(l2)
        i = next(iter(remain1))
        lb = a1 ^ (1 << i)
        ra = lb ^ y
        width2 = width1 >> 1
        # right
        stack.append((n1, ra, b1, remain1.copy(), ai1 + width2, ans1, width2, None))
        # left
        stack.append((n1, a1, a1 ^ (1 << i), remain1, ai1, ans1, width2, i))
    print('YES')
    print(*ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' a' (ID: 261)
  → Token d'amorce (pas de prédiction)

Token 3: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03023047000169754
    2. ',' → logprob: -4.155230522155762
    3. ' =' → logprob: -4.280230522155762
    4. '+' → logprob: -9.155230522155762
    5. '[' → logprob: -10.280230522155762
    6. ')' → logprob: -10.280230522155762
    7. ' ' → logprob: -10.780230522155762
    8. ';' → logprob: -10.905230522155762
    9. '_' → logprob: -11.405230522155762
    10. '*' → logprob: -11.780230522155762

Token 4: ' b' (ID: 287)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12810403108596802
    2. ' =' → logprob: -2.3781039714813232
    3. ',' → logprob: -3.6281039714813232
    4. ' ' → logprob: -8.003104209899902
    5. ')' → logprob: -8.753104209899902
    6. '_' → logprob: -9.003104209899902
    7. '.' → logprob: -9.128104209899902
    8. ';' → logprob: -9.628104209899902
    9. '[' → logprob: -10.253104209899902
    10. 'b' → logprob: -10.378104209899902

Token 5: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.017119837924838066
    2. ' =' → logprob: -4.142119884490967
    3. ',' → logprob: -6.892119884490967
    4. ';' → logprob: -11.017119407653809
    5. ' ' → logprob: -11.642119407653809
    6. '[' → logprob: -11.642119407653809
    7. '_' → logprob: -11.767119407653809
    8. '+' → logprob: -12.017119407653809
    9. '.' → logprob: -12.392119407653809
    10. ')' → logprob: -12.642119407653809

Token 6: ' list' (ID: 1562)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6894039511680603
    2. ' map' → logprob: -1.314404010772705
    3. ' input' → logprob: -1.939404010772705
    4. 'input' → logprob: -3.314404010772705
    5. '0' → logprob: -3.564404010772705
    6. 'map' → logprob: -3.939404010772705
    7. '1' → logprob: -7.814404010772705
    8. ' n' → logprob: -7.939404010772705
    9. '10' → logprob: -8.189403533935547
    10. ' list' → logprob: -8.439403533935547

Token 7: '(map' (ID: 16946)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3730756342411041
    2. '.' → logprob: -1.6230756044387817
    3. ',' → logprob: -2.7480757236480713
    4. '=' → logprob: -3.3730757236480713
    5. '[:]' → logprob: -4.623075485229492
    6. ' =' → logprob: -6.123075485229492
    7. '```' → logprob: -6.998075485229492
    8. '[n' → logprob: -7.998075485229492
    9. '[]' → logprob: -8.373075485229492
    10. '`' → logprob: -8.623075485229492

Token 8: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.873766303062439
    2. '(' → logprob: -1.248766303062439
    3. '(str' → logprob: -1.373766303062439
    4. '(lambda' → logprob: -3.9987664222717285
    5. ')' → logprob: -4.1237664222717285
    6. '```' → logprob: -6.3737664222717285
    7. '(eval' → logprob: -6.6237664222717285
    8. 'int' → logprob: -6.7487664222717285
    9. '<|end|>' → logprob: -6.9987664222717285
    10. '<int' → logprob: -7.1237664222717285

Token 9: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.08475075662136078
    2. '(' → logprob: -2.5847506523132324
    3. ')' → logprob: -5.709750652313232
    4. '(str' → logprob: -7.959750652313232
    5. '(range' → logprob: -8.08475112915039
    6. 'input' → logprob: -8.20975112915039
    7. '))' → logprob: -8.33475112915039
    8. '(""))' → logprob: -8.70975112915039
    9. '(user' → logprob: -8.95975112915039
    10. '('' → logprob: -9.08475112915039

Token 10: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.10087710618972778
    2. ' input' → logprob: -2.350877046585083
    3. '(input' → logprob: -7.475877285003662
    4. ')' → logprob: -9.475876808166504
    5. ',input' → logprob: -10.850876808166504
    6. '=input' → logprob: -13.100876808166504
    7. '<input' → logprob: -13.725876808166504
    8. 'str' → logprob: -13.975876808166504
    9. ' )' → logprob: -14.475876808166504
    10. '```' → logprob: -14.600876808166504

Token 11: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6840037703514099
    2. '())' → logprob: -1.4340038299560547
    3. '()))' → logprob: -1.6840038299560547
    4. '(' → logprob: -3.8090038299560547
    5. '(()' → logprob: -4.434003829956055
    6. '()));' → logprob: -4.434003829956055
    7. '())))' → logprob: -5.309003829956055
    8. '().' → logprob: -5.309003829956055
    9. '());' → logprob: -5.684003829956055
    10. '()>' → logprob: -6.059003829956055

Token 12: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.002547839190810919
    2. 'strip' → logprob: -6.002547740936279
    3. 'rstrip' → logprob: -9.752548217773438
    4. ' split' → logprob: -11.502548217773438
    5. '(split' → logprob: -13.502548217773438
    6. ')' → logprob: -13.502548217773438
    7. 'read' → logprob: -14.377548217773438
    8. 'spl' → logprob: -15.002548217773438
    9. 's' → logprob: -15.627548217773438
    10. ' strip' → logprob: -16.627548217773438

Token 13: '()))
' (ID: 24521)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.05301714316010475
    2. '()))' → logprob: -3.1780171394348145
    3. ')' → logprob: -5.3030171394348145
    4. ')))' → logprob: -5.6780171394348145
    5. '(' → logprob: -7.3030171394348145
    6. '())' → logprob: -8.178017616271973
    7. ''))' → logprob: -8.928017616271973
    8. '('' → logprob: -9.178017616271973
    9. '())))' → logprob: -9.553017616271973
    10. '()' → logprob: -9.553017616271973

Token 14: 'if' (ID: 366)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.412264347076416
    2. 'if' → logprob: -2.037264347076416
    3. 'for' → logprob: -2.787264347076416
    4. 'x' → logprob: -3.662264347076416
    5. '#' → logprob: -3.662264347076416
    6. 'i' → logprob: -4.037264347076416
    7. 'd' → logprob: -4.412264347076416
    8. '\n' → logprob: -4.912264347076416
    9. 'n' → logprob: -5.037264347076416
    10. 's' → logprob: -5.037264347076416

Token 15: ' bin' (ID: 6958)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.15069890022277832
    2. ' a' → logprob: -2.5256989002227783
    3. 'n' → logprob: -3.6506989002227783
    4. ' ' → logprob: -3.7756989002227783
    5. 'a' → logprob: -4.650698661804199
    6. ' not' → logprob: -7.400698661804199
    7. ' ' → logprob: -7.900698661804199
    8. ' b' → logprob: -8.1506986618042
    9. ' (' → logprob: -10.1506986618042
    10. '(n' → logprob: -10.2756986618042

Token 16: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.882587730884552
    2. '(n' → logprob: -0.882587730884552
    3. '(a' → logprob: -1.7575876712799072
    4. '(b' → logprob: -10.007587432861328
    5. ' (' → logprob: -10.257587432861328
    6. '(x' → logprob: -11.257587432861328
    7. 'a' → logprob: -11.507587432861328
    8. '((' → logprob: -12.882587432861328
    9. '('' → logprob: -13.132587432861328
    10. '(
' → logprob: -13.382587432861328

Token 17: ').' (ID: 741)
  Prédit: ').'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -1.1239949464797974
    2. ')[' → logprob: -1.4989949464797974
    3. '&' → logprob: -1.6239949464797974
    4. ' &' → logprob: -1.7489949464797974
    5. ')' → logprob: -2.998994827270508
    6. '|' → logprob: -4.123994827270508
    7. '&a' → logprob: -5.623994827270508
    8. ')&' → logprob: -6.248994827270508
    9. '^' → logprob: -6.748994827270508
    10. '[a' → logprob: -7.123994827270508

Token 18: 'count' (ID: 5420)
  Prédit: 'startswith'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'startswith' → logprob: -0.0662878081202507
    2. 'count' → logprob: -2.8162877559661865
    3. 'bit' → logprob: -6.191287994384766
    4. 'r' → logprob: -7.066287994384766
    5. 'ends' → logprob: -7.316287994384766
    6. 'find' → logprob: -8.191287994384766
    7. 'bits' → logprob: -9.066287994384766
    8. 'l' → logprob: -9.316287994384766
    9. 'z' → logprob: -9.691287994384766
    10. '&' → logprob: -10.441287994384766

Token 19: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.14643196761608124
    2. '(' → logprob: -2.5214319229125977
    3. '("("' → logprob: -2.8964319229125977
    4. '("' → logprob: -7.896431922912598
    5. '('(' → logprob: -9.396431922912598
    6. '("(' → logprob: -9.646431922912598
    7. ''' → logprob: -10.271431922912598
    8. '(`' → logprob: -10.896431922912598
    9. ''(' → logprob: -11.521431922912598
    10. '((' → logprob: -11.521431922912598

Token 20: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014185366220772266
    2. ''' → logprob: -4.264185428619385
    3. '"' → logprob: -11.764184951782227
    4. ' '' → logprob: -12.139184951782227
    5. '0' → logprob: -12.889184951782227
    6. ''s' → logprob: -13.264184951782227
    7. '')' → logprob: -13.389184951782227
    8. ' ' → logprob: -13.514184951782227
    9. ')' → logprob: -14.139184951782227
    10. '`' → logprob: -16.389184951782227

Token 21: '')' (ID: 1542)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06534989178180695
    2. '')' → logprob: -2.940349817276001
    3. ' )' → logprob: -5.56535005569458
    4. '>' → logprob: -5.69035005569458
    5. ' >' → logprob: -6.69035005569458
    6. ')>' → logprob: -6.81535005569458
    7. ' ')' → logprob: -8.940349578857422
    8. ')>=' → logprob: -8.940349578857422
    9. '")' → logprob: -9.065349578857422
    10. '>)' → logprob: -9.315349578857422

Token 22: ' %' (ID: 1851)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.18208162486553192
    2. ' >=' → logprob: -2.432081699371338
    3. ' ==' → logprob: -3.432081699371338
    4. ' <' → logprob: -4.057081699371338
    5. '>' → logprob: -4.182081699371338
    6. ' ' → logprob: -4.932081699371338
    7. ' <=' → logprob: -5.682081699371338
    8. '==' → logprob: -6.807081699371338
    9. '>=' → logprob: -6.932081699371338
    10. '<' → logprob: -8.05708122253418

Token 23: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.03805331513285637
    2. ' ' → logprob: -3.288053274154663
    3. ' n' → logprob: -11.788053512573242
    4. 'n' → logprob: -13.788053512573242
    5. '3' → logprob: -14.538053512573242
    6. '  ' → logprob: -14.663053512573242
    7. '>' → logprob: -14.663053512573242
    8. '```' → logprob: -15.163053512573242
    9. '1' → logprob: -15.288053512573242
    10. '%' → logprob: -15.538053512573242

Token 24: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00026574634830467403
    2. ' ' → logprob: -8.250266075134277
    3. 'b' → logprob: -13.500266075134277
    4. '1' → logprob: -13.750266075134277
    5. 'n' → logprob: -14.750266075134277
    6. '  ' → logprob: -15.500266075134277
    7. '```' → logprob: -15.500266075134277
    8. 'a' → logprob: -15.750266075134277
    9. '10' → logprob: -15.750266075134277
    10. '3' → logprob: -15.937766075134277

Token 25: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5790642499923706
    2. '==' → logprob: -0.8290642499923706
    3. ' !=' → logprob: -6.45406436920166
    4. '=' → logprob: -7.20406436920166
    5. '!=' → logprob: -7.82906436920166
    6. ':' → logprob: -8.82906436920166
    7. ' =' → logprob: -9.07906436920166
    8. ' ' → logprob: -9.95406436920166
    9. '<|end|>' → logprob: -10.82906436920166
    10. '>' → logprob: -10.82906436920166

Token 26: ' bin' (ID: 6958)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6012881994247437
    2. '1' → logprob: -0.9762881994247437
    3. ' ' → logprob: -3.476288318634033
    4. 'bin' → logprob: -3.476288318634033
    5. ' bin' → logprob: -4.601288318634033
    6. 'b' → logprob: -6.351288318634033
    7. '(bin' → logprob: -6.726288318634033
    8. 'n' → logprob: -8.726287841796875
    9. ' b' → logprob: -9.851287841796875
    10. ' n' → logprob: -10.288787841796875

Token 27: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.03811987116932869
    2. '(' → logprob: -3.2881197929382324
    3. '(n' → logprob: -10.66312026977539
    4. 'b' → logprob: -10.78812026977539
    5. '(a' → logprob: -11.03812026977539
    6. ' (' → logprob: -11.66312026977539
    7. '(bin' → logprob: -12.53812026977539
    8. '((' → logprob: -14.28812026977539
    9. '(x' → logprob: -14.41312026977539
    10. ' b' → logprob: -14.41312026977539

Token 28: ').' (ID: 741)
  Prédit: ').'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -9.460291767027229e-05
    2. ')' → logprob: -9.500094413757324
    3. ' ).' → logprob: -11.500094413757324
    4. ' ' → logprob: -13.000094413757324
    5. '').' → logprob: -13.125094413757324
    6. '.count' → logprob: -13.625094413757324
    7. '.' → logprob: -13.750094413757324
    8. '`).' → logprob: -14.750094413757324
    9. '   ' → logprob: -15.312594413757324
    10. '#' → logprob: -15.750094413757324

Token 29: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.0013765414478257298
    2. '.count' → logprob: -7.251376628875732
    3. '1' → logprob: -7.376376628875732
    4. ' count' → logprob: -10.626376152038574
    5. '<count' → logprob: -12.626376152038574
    6. '	count' → logprob: -12.751376152038574
    7. '```' → logprob: -13.126376152038574
    8. 'c' → logprob: -13.126376152038574
    9. ' ' → logprob: -13.751376152038574
    10. '(count' → logprob: -14.001376152038574

Token 30: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0011044946731999516
    2. '(' → logprob: -7.001104354858398
    3. ' ('' → logprob: -9.001104354858398
    4. ' (' → logprob: -10.626104354858398
    5. ' ' → logprob: -11.251104354858398
    6. '>('' → logprob: -12.001104354858398
    7. '<|end|>' → logprob: -12.001104354858398
    8. ''' → logprob: -12.251104354858398
    9. ''s' → logprob: -12.751104354858398
    10. ' '('' → logprob: -12.876104354858398

Token 31: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00016706773021724075
    2. ''' → logprob: -9.000166893005371
    3. ' ' → logprob: -10.375166893005371
    4. '')' → logprob: -11.625166893005371
    5. ')' → logprob: -13.000166893005371
    6. '"' → logprob: -15.437666893005371
    7. '2' → logprob: -15.812666893005371
    8. ' '' → logprob: -16.000167846679688
    9. '0' → logprob: -16.250167846679688
    10. '('' → logprob: -16.437667846679688

Token 32: '')' (ID: 1542)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.062258508056402206
    2. '')' → logprob: -2.81225848197937
    3. ' )' → logprob: -9.31225872039795
    4. ')%' → logprob: -9.68725872039795
    5. ''' → logprob: -10.43725872039795
    6. '())' → logprob: -10.68725872039795
    7. '1' → logprob: -10.81225872039795
    8. '()' → logprob: -11.06225872039795
    9. ')==' → logprob: -11.56225872039795
    10. '('' → logprob: -11.56225872039795

Token 33: ' %' (ID: 1851)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 34: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0009130131802521646
    2. ' ' → logprob: -7.000913143157959
    3. '```' → logprob: -14.3759126663208
    4. '   ' → logprob: -15.3759126663208
    5. ')' → logprob: -16.063413619995117
    6. '1' → logprob: -16.625913619995117
    7. '>' → logprob: -16.750913619995117
    8. '  ' → logprob: -16.750913619995117
    9. '۲' → logprob: -17.000913619995117
    10. '`' → logprob: -17.313413619995117

Token 35: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.833878508885391e-05
    2. ' ' → logprob: -10.250038146972656
    3. '26' → logprob: -14.250038146972656
    4. '```' → logprob: -15.000038146972656
    5. '۲' → logprob: -15.687538146972656
    6. '256' → logprob: -15.750038146972656
    7. '1' → logprob: -15.750038146972656
    8. '٢' → logprob: -15.875038146972656
    9. '  ' → logprob: -16.375038146972656
    10. '   ' → logprob: -16.437538146972656

Token 36: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.17347964644432068
    2. ' :' → logprob: -2.2984795570373535
    3. '0' → logprob: -3.6734795570373535
    4. ' ==' → logprob: -4.0484795570373535
    5. ' ' → logprob: -5.0484795570373535
    6. '==' → logprob: -5.9234795570373535
    7. '):' → logprob: -6.5484795570373535
    8. '<|end|>' → logprob: -6.5484795570373535
    9. ' ):' → logprob: -6.9234795570373535
    10. '=' → logprob: -7.5484795570373535

Token 37: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5795730352401733
    2. ':' → logprob: -1.2045730352401733
    3. ' ' → logprob: -2.704573154449463
    4. ' :' → logprob: -3.704573154449463
    5. '    ' → logprob: -4.079573154449463
    6. ' print' → logprob: -4.329573154449463
    7. 'print' → logprob: -6.329573154449463
    8. ',' → logprob: -6.329573154449463
    9. ':
' → logprob: -6.454573154449463
    10. '\' → logprob: -6.579573154449463

Token 38: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.3720020651817322
    2. '   ' → logprob: -1.372002124786377
    3. 'print' (adapté à ' print') → logprob: -3.497002124786377
    4. '    ' → logprob: -4.622002124786377
    5. ' pass' → logprob: -4.622002124786377
    6. ' ' → logprob: -5.872002124786377
    7. '       ' → logprob: -5.997002124786377
    8. ' n' → logprob: -8.372001647949219
    9. '    
' → logprob: -8.372001647949219
    10. ' a' → logprob: -8.622001647949219

Token 39: '('' (ID: 706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.017062654718756676
    2. '(a' → logprob: -5.142062664031982
    3. '('' → logprob: -5.267062664031982
    4. '()' → logprob: -6.017062664031982
    5. '(True' → logprob: -6.392062664031982
    6. '("' → logprob: -7.017062664031982
    7. '(False' → logprob: -8.017062187194824
    8. '(n' → logprob: -8.142062187194824
    9. '(b' → logprob: -9.767062187194824
    10. 'a' → logprob: -9.767062187194824

Token 40: 'NO' (ID: 14695)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5076324343681335
    2. '0' → logprob: -2.0076324939727783
    3. 'B' → logprob: -2.7576324939727783
    4. 'Y' → logprob: -3.0076324939727783
    5. 'YES' → logprob: -3.3826324939727783
    6. 'a' → logprob: -3.7576324939727783
    7. 'b' → logprob: -4.507632255554199
    8. 'Yes' → logprob: -4.507632255554199
    9. 'NO' → logprob: -4.632632255554199
    10. 'S' → logprob: -4.632632255554199

Token 41: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.008795616216957569
    2. ')' → logprob: -4.758795738220215
    3. '')
' → logprob: -8.758795738220215
    4. '")' → logprob: -11.508795738220215
    5. ''' → logprob: -12.008795738220215
    6. '')
' → logprob: -12.383795738220215
    7. 'else' → logprob: -13.883795738220215
    8. ')')
' → logprob: -14.508795738220215
    9. ')
' → logprob: -14.633795738220215
    10. ')'' → logprob: -14.883795738220215

Token 42: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0033914719242602587
    2. ' else' → logprob: -5.753391265869141
    3. 'elif' → logprob: -8.75339126586914
    4. '<|end|>' → logprob: -10.75339126586914
    5. '```' → logprob: -11.37839126586914
    6. '   ' → logprob: -11.87839126586914
    7. '	else' → logprob: -12.87839126586914
    8. 'e' → logprob: -13.00339126586914
    9. ')' → logprob: -13.37839126586914
    10. '_else' → logprob: -13.50339126586914

Token 43: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -3.2378600735682994e-05
    2. ':
' → logprob: -11.250032424926758
    3. ' :' → logprob: -11.375032424926758
    4. '   ' → logprob: -12.000032424926758
    5. '):' → logprob: -13.875032424926758
    6. '():' → logprob: -16.000032424926758
    7. ',' → logprob: -16.500032424926758
    8. '<|end|>' → logprob: -16.625032424926758
    9. ':**' → logprob: -16.750032424926758
    10. '':' → logprob: -16.750032424926758

Token 44: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008728709071874619
    2. '```' → logprob: -8.250872611999512
    3. 'print' → logprob: -8.375872611999512
    4. ' print' → logprob: -9.000872611999512
    5. '       ' → logprob: -9.000872611999512
    6. '    ' → logprob: -9.875872611999512
    7. ''' → logprob: -10.750872611999512
    8. ' ' → logprob: -11.500872611999512
    9. '\n' → logprob: -11.500872611999512
    10. '``' → logprob: -11.875872611999512

Token 45: ' remain' (ID: 12760)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05915156006813049
    2. 'print' → logprob: -3.0591516494750977
    3. ' print' → logprob: -4.559151649475098
    4. '```' → logprob: -10.434151649475098
    5. '	print' → logprob: -12.934151649475098
    6. '       ' → logprob: -13.309151649475098
    7. '\n' → logprob: -13.934151649475098
    8. '   ' → logprob: -14.434151649475098
    9. '    ' → logprob: -14.684151649475098
    10. ' ' → logprob: -14.684151649475098

Token 46: ' =' (ID: 314)
  Prédit: 'ing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.6279276609420776
    2. '=' → logprob: -1.5029276609420776
    3. ' =' → logprob: -2.002927780151367
    4. 's' → logprob: -2.502927780151367
    5. '_' → logprob: -4.877927780151367
    6. 'ed' → logprob: -5.252927780151367
    7. '   ' → logprob: -6.127927780151367
    8. 'd' → logprob: -6.252927780151367
    9. '  ' → logprob: -6.377927780151367
    10. '_count' → logprob: -6.627927780151367

Token 47: ' set' (ID: 920)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.8639869689941406
    2. ' n' → logprob: -1.6139869689941406
    3. ' b' → logprob: -1.7389869689941406
    4. 'n' → logprob: -1.8639869689941406
    5. '1' → logprob: -4.363986968994141
    6. ' (' → logprob: -4.363986968994141
    7. 'a' → logprob: -4.738986968994141
    8. '(n' → logprob: -5.238986968994141
    9. ' a' → logprob: -6.238986968994141
    10. ' ' → logprob: -6.738986968994141

Token 48: '(range' (ID: 50017)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.45378535985946655
    2. '(range' → logprob: -1.2037854194641113
    3. '(' → logprob: -2.8287854194641113
    4. '([' → logprob: -5.828785419464111
    5. '(a' → logprob: -7.078785419464111
    6. '((' → logprob: -7.078785419464111
    7. '(list' → logprob: -8.078784942626953
    8. '([(' → logprob: -8.953784942626953
    9. '([]' → logprob: -9.703784942626953
    10. '(s' → logprob: -9.703784942626953

Token 49: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3882105052471161
    2. '(n' → logprob: -1.1382105350494385
    3. '(a' → logprob: -6.763210296630859
    4. '1' → logprob: -9.63821029663086
    5. '(b' → logprob: -9.88821029663086
    6. 'n' → logprob: -11.63821029663086
    7. 'a' → logprob: -11.76321029663086
    8. '((' → logprob: -11.76321029663086
    9. '(k' → logprob: -11.76321029663086
    10. '(len' → logprob: -11.88821029663086

Token 50: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0018616418819874525
    2. '))
' → logprob: -7.001861572265625
    3. ')' → logprob: -7.251861572265625
    4. ' ))' → logprob: -9.126861572265625
    5. '-' → logprob: -9.876861572265625
    6. ' -' → logprob: -10.251861572265625
    7. ')))' → logprob: -11.376861572265625
    8. '))

' → logprob: -11.501861572265625
    9. ')).' → logprob: -12.126861572265625
    10. ' )' → logprob: -12.501861572265625

Token 51: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24611788988113403
    2. '    
' → logprob: -2.9961178302764893
    3. '<|end|>' → logprob: -2.9961178302764893
    4. '\n' → logprob: -3.2461178302764893
    5. '
' → logprob: -3.7461178302764893
    6. '  
' → logprob: -4.871118068695068
    7. '```' → logprob: -4.871118068695068
    8. ' 
' → logprob: -4.996118068695068
    9. ' ' → logprob: -5.121118068695068
    10. ')' → logprob: -5.496118068695068

Token 52: ' ans' (ID: 3345)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.8818690180778503
    2. 'result' → logprob: -1.7568690776824951
    3. 'for' → logprob: -2.381869077682495
    4. 'res' → logprob: -2.756869077682495
    5. 'answer' → logprob: -3.006869077682495
    6. ' while' → logprob: -3.131869077682495
    7. 'used' → logprob: -4.131868839263916
    8. '   ' → logprob: -4.131868839263916
    9. 'selected' → logprob: -4.131868839263916
    10. 'c' → logprob: -4.631868839263916

Token 53: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0211931224912405
    2. '=' → logprob: -3.896193027496338
    3. 's' → logprob: -7.396193027496338
    4. '=[]' → logprob: -11.021193504333496
    5. ' ' → logprob: -12.021193504333496
    6. ',' → logprob: -12.396193504333496
    7. '[' → logprob: -13.271193504333496
    8. ')' → logprob: -13.771193504333496
    9. '```' → logprob: -14.021193504333496
    10. '[]' → logprob: -14.271193504333496

Token 54: ' [' (ID: 723)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.021889526396989822
    2. ' []' → logprob: -4.146889686584473
    3. 'set' → logprob: -5.771889686584473
    4. '0' → logprob: -6.646889686584473
    5. '[' → logprob: -7.146889686584473
    6. '{}' → logprob: -8.521889686584473
    7. ' ' → logprob: -8.521889686584473
    8. '[]
' → logprob: -9.146889686584473
    9. ' set' → logprob: -9.896889686584473
    10. '[]}' → logprob: -10.521889686584473

Token 55: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.26499053835868835
    2. '-' → logprob: -1.5149905681610107
    3. ']' → logprob: -4.889990329742432
    4. 'None' → logprob: -6.264990329742432
    5. 'False' → logprob: -6.264990329742432
    6. '[]' → logprob: -7.264990329742432
    7. ')' → logprob: -8.51499080657959
    8. 'a' → logprob: -8.63999080657959
    9. ' ' → logprob: -9.26499080657959
    10. '1' → logprob: -9.63999080657959

Token 56: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0038398560136556625
    2. ' ]' → logprob: -6.25383996963501
    3. ']*' → logprob: -6.37883996963501
    4. ')]' → logprob: -9.253839492797852
    5. ' for' → logprob: -10.003839492797852
    6. ')' → logprob: -10.253839492797852
    7. ',' → logprob: -11.003839492797852
    8. ']*(' → logprob: -11.378839492797852
    9. '])' → logprob: -13.128839492797852
    10. 'for' → logprob: -13.128839492797852

Token 57: ' *' (ID: 425)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 58: ' (' (ID: 350)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0013748762430623174
    2. '(n' → logprob: -6.6263747215271
    3. ' n' → logprob: -10.626375198364258
    4. '(' → logprob: -10.626375198364258
    5. ' (' → logprob: -15.251375198364258
    6. '	n' → logprob: -16.251375198364258
    7. ')n' → logprob: -17.626375198364258
    8. '[n' → logprob: -18.126375198364258
    9. '9' → logprob: -18.626375198364258
    10. '_n' → logprob: -18.751375198364258

Token 59: '1' (ID: 16)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -9.372294698550832e-06
    2. ' n' → logprob: -11.750009536743164
    3. ')n' → logprob: -15.000009536743164
    4. '2' → logprob: -15.375009536743164
    5. '   ' → logprob: -15.875009536743164
    6. '(n' → logprob: -16.000009536743164
    7. '3' → logprob: -16.250009536743164
    8. ')' → logprob: -16.375009536743164
    9. '	n' → logprob: -16.750009536743164
    10. '6' → logprob: -16.875009536743164

Token 60: ' <<' (ID: 2256)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.24161632359027863
    2. 'n' → logprob: -2.4916162490844727
    3. '0' → logprob: -3.3666162490844727
    4. '<<' → logprob: -3.4916162490844727
    5. '<n' → logprob: -3.9916162490844727
    6. '+' → logprob: -4.241616249084473
    7. ')n' → logprob: -4.741616249084473
    8. ' n' → logprob: -5.366616249084473
    9. ',n' → logprob: -5.741616249084473
    10. '*n' → logprob: -6.116616249084473

Token 61: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -2.8802491215174086e-05
    2. ' n' → logprob: -10.625028610229492
    3. '   ' → logprob: -13.375028610229492
    4. '20' → logprob: -13.750028610229492
    5. '	n' → logprob: -14.125028610229492
    6. '(n' → logprob: -16.000028610229492
    7. ')n' → logprob: -16.250028610229492
    8. ' ' → logprob: -16.375028610229492
    9. '18' → logprob: -16.500028610229492
    10. '26' → logprob: -16.625028610229492

Token 62: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00048751471331343055
    2. ')
' → logprob: -8.125487327575684
    3. '))' → logprob: -9.125487327575684
    4. ')]' → logprob: -10.500487327575684
    5. ' )' → logprob: -11.125487327575684
    6. '`)' → logprob: -11.500487327575684
    7. ')])' → logprob: -11.625487327575684
    8. '])' → logprob: -12.625487327575684
    9. ')
' → logprob: -12.875487327575684
    10. '   ' → logprob: -12.875487327575684

Token 63: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 64: ' stack' (ID: 10825)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.448871910572052
    2. 'for' → logprob: -1.4488718509674072
    3. 'i' → logprob: -3.5738718509674072
    4. ' i' → logprob: -3.8238718509674072
    5. '   ' → logprob: -4.073872089385986
    6. 'a' → logprob: -4.573872089385986
    7. ' ' → logprob: -4.948872089385986
    8. ')' → logprob: -5.198872089385986
    9. '```' → logprob: -5.198872089385986
    10. ' remain' → logprob: -6.073872089385986

Token 65: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0013365513877943158
    2. '=' → logprob: -6.626336574554443
    3. '=[]' → logprob: -12.001336097717285
    4. ' ' → logprob: -13.501336097717285
    5. '.append' → logprob: -14.376336097717285
    6. ')' → logprob: -15.001336097717285
    7. '   ' → logprob: -15.126336097717285
    8. ',' → logprob: -15.126336097717285
    9. '[]' → logprob: -15.251336097717285
    10. '[:]' → logprob: -15.501336097717285

Token 66: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.09064830094575882
    2. '[' → logprob: -2.4656484127044678
    3. '[(' → logprob: -6.715648174285889
    4. ' []' → logprob: -9.090648651123047
    5. 'remain' → logprob: -9.215648651123047
    6. '[]}' → logprob: -9.465648651123047
    7. '[n' → logprob: -9.715648651123047
    8. '[list' → logprob: -9.840648651123047
    9. 'list' → logprob: -11.090648651123047
    10. ' [' → logprob: -11.465648651123047

Token 67: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.1172813177108765
    2. '   ' → logprob: -1.2422813177108765
    3. 'for' → logprob: -1.7422813177108765
    4. '<|end|>' → logprob: -2.117281436920166
    5. ' ' → logprob: -4.117281436920166
    6. '    
' → logprob: -4.242281436920166
    7. ' 
' → logprob: -4.242281436920166
    8. '[' → logprob: -4.492281436920166
    9. '    ' → logprob: -4.992281436920166
    10. 'stack' → logprob: -5.992281436920166

Token 68: ' stack' (ID: 10825)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.39141786098480225
    2. 'stack' (adapté à ' stack') → logprob: -1.8914178609848022
    3. ' for' → logprob: -2.891417980194092
    4. '   ' → logprob: -3.641417980194092
    5. 'n' → logprob: -4.016417980194092
    6. '<|end|>' → logprob: -4.141417980194092
    7. 'i' → logprob: -4.766417980194092
    8. ')' → logprob: -4.766417980194092
    9. '[' → logprob: -4.766417980194092
    10. '(' → logprob: -5.391417980194092

Token 69: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.016657911241054535
    2. '.' → logprob: -4.141657829284668
    3. '.extend' → logprob: -7.891657829284668
    4. '.pop' → logprob: -8.516657829284668
    5. '.push' → logprob: -10.516657829284668
    6. '.clear' → logprob: -11.391657829284668
    7. '.=' → logprob: -13.266657829284668
    8. '.setdefault' → logprob: -13.266657829284668
    9. ' .' → logprob: -13.391657829284668
    10. '=' → logprob: -14.266657829284668

Token 70: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.2876095175743103
    2. '(' → logprob: -1.412609577178955
    3. '(rem' → logprob: -5.662609577178955
    4. '(n' → logprob: -6.662609577178955
    5. '(('' → logprob: -7.162609577178955
    6. '(a' → logprob: -8.037609100341797
    7. '(()' → logprob: -8.662609100341797
    8. '('' → logprob: -8.912609100341797
    9. '([' → logprob: -9.537609100341797
    10. '(((' → logprob: -10.287609100341797

Token 71: 'n' (ID: 77)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05166307091712952
    2. '(' → logprob: -3.4266631603240967
    3. 'remain' → logprob: -5.176662921905518
    4. 'a' → logprob: -5.801662921905518
    5. '(n' → logprob: -6.051662921905518
    6. 'b' → logprob: -6.051662921905518
    7. 'n' → logprob: -6.551662921905518
    8. ' ' → logprob: -7.051662921905518
    9. '(a' → logprob: -8.051663398742676
    10. '(rem' → logprob: -8.301663398742676

Token 72: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7821247577667236
    2. '-' → logprob: -0.7821247577667236
    3. ' -' → logprob: -2.5321247577667236
    4. ' ,' → logprob: -5.2821245193481445
    5. ' ' → logprob: -8.282124519348145
    6. ',n' → logprob: -8.532124519348145
    7. ')' → logprob: -9.782124519348145
    8. '   ' → logprob: -11.782124519348145
    9. ',
' → logprob: -11.844624519348145
    10. ',b' → logprob: -11.969624519348145

Token 73: ' a' (ID: 261)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5378109216690063
    2. ' ' → logprob: -2.037810802459717
    3. 'a' → logprob: -2.287810802459717
    4. ' remain' → logprob: -2.787810802459717
    5. 'remain' → logprob: -2.912810802459717
    6. ' a' → logprob: -3.412810802459717
    7. ' n' → logprob: -5.037810802459717
    8. 'n' → logprob: -5.287810802459717
    9. 'b' → logprob: -5.287810802459717
    10. '1' → logprob: -5.537810802459717

Token 74: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.026327701285481453
    2. '))' → logprob: -4.151327610015869
    3. ' ^' → logprob: -5.526327610015869
    4. '-' → logprob: -6.151327610015869
    5. ' -' → logprob: -7.151327610015869
    6. ' ,' → logprob: -7.151327610015869
    7. '^' → logprob: -7.276327610015869
    8. ',b' → logprob: -7.401327610015869
    9. '+' → logprob: -7.651327610015869
    10. ')' → logprob: -8.026328086853027

Token 75: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.349062979221344
    2. ' b' → logprob: -1.2240629196166992
    3. '0' → logprob: -8.3490629196167
    4. ')' → logprob: -8.7240629196167
    5. ' ' → logprob: -9.8490629196167
    6. '))' → logprob: -10.7240629196167
    7. 'n' → logprob: -10.7240629196167
    8. '1' → logprob: -10.7240629196167
    9. ' n' → logprob: -11.0990629196167
    10. 'a' → logprob: -11.0990629196167

Token 76: ',' (ID: 11)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00492466613650322
    2. ')' → logprob: -5.504924774169922
    3. ',' → logprob: -7.504924774169922
    4. '))
' → logprob: -8.629924774169922
    5. ' ))' → logprob: -9.254924774169922
    6. ')))' → logprob: -11.629924774169922
    7. ' ' → logprob: -12.379924774169922
    8. '))

' → logprob: -13.254924774169922
    9. '))
' → logprob: -13.379924774169922
    10. ' )' → logprob: -13.379924774169922

Token 77: ' remain' (ID: 12760)
  Prédit: 'remain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remain' → logprob: -0.2937743663787842
    2. ' remain' → logprob: -1.4187743663787842
    3. '0' → logprob: -4.918774604797363
    4. '1' → logprob: -6.918774604797363
    5. ' ' → logprob: -7.168774604797363
    6. '))' → logprob: -7.293774604797363
    7. 'set' → logprob: -8.168774604797363
    8. 'rem' → logprob: -8.231274604797363
    9. '[]' → logprob: -8.418774604797363
    10. 'True' → logprob: -8.668774604797363

Token 78: '.copy' (ID: 22925)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00795805361121893
    2. ')' → logprob: -5.507957935333252
    3. ',' → logprob: -5.632957935333252
    4. '))
' → logprob: -8.50795841217041
    5. ' ))' → logprob: -9.88295841217041
    6. ' ' → logprob: -11.00795841217041
    7. ')))' → logprob: -11.38295841217041
    8. '))

' → logprob: -12.38295841217041
    9. '))
' → logprob: -13.00795841217041
    10. '.copy' → logprob: -13.75795841217041

Token 79: '(),' (ID: 2547)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.010087174363434315
    2. '()' → logprob: -5.635087013244629
    3. '))' → logprob: -5.885087013244629
    4. '()))
' → logprob: -6.385087013244629
    5. '(),' → logprob: -6.885087013244629
    6. '())' → logprob: -7.135087013244629
    7. '()))

' → logprob: -9.385087013244629
    8. '()))
' → logprob: -9.635087013244629
    9. '()));' → logprob: -11.885087013244629
    10. '(' → logprob: -12.385087013244629

Token 80: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5498872995376587
    2. '[]' → logprob: -2.049887180328369
    3. '))' → logprob: -2.299887180328369
    4. '1' → logprob: -2.799887180328369
    5. ' ' → logprob: -3.674887180328369
    6. '[' → logprob: -4.049887180328369
    7. ')' → logprob: -4.424887180328369
    8. '{}' → logprob: -4.674887180328369
    9. 'n' → logprob: -4.924887180328369
    10. '{' → logprob: -5.049887180328369

Token 81: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8678154349327087
    2. '))' → logprob: -1.8678154945373535
    3. '[]' → logprob: -1.9928154945373535
    4. '1' → logprob: -2.4928154945373535
    5. '{' → logprob: -3.2428154945373535
    6. '{}' → logprob: -3.4928154945373535
    7. '[' → logprob: -3.9928154945373535
    8. 'n' → logprob: -4.1178154945373535
    9. 'ans' → logprob: -4.2428154945373535
    10. ')' → logprob: -4.2428154945373535

Token 82: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1800912618637085
    2. '))' → logprob: -1.8050912618637085
    3. ',' → logprob: -8.55509090423584
    4. ')
' → logprob: -9.80509090423584
    5. ' )' → logprob: -10.18009090423584
    6. ')))' → logprob: -10.43009090423584
    7. '))
' → logprob: -10.80509090423584
    8. ' ))' → logprob: -12.30509090423584
    9. '),' → logprob: -13.68009090423584
    10. '   ' → logprob: -14.05509090423584

Token 83: ' ans' (ID: 3345)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.20851098001003265
    2. '1' → logprob: -2.4585108757019043
    3. '[]' → logprob: -3.4585108757019043
    4. '))' → logprob: -3.7085108757019043
    5. ')' → logprob: -4.333510875701904
    6. ' ' → logprob: -4.833510875701904
    7. 'False' → logprob: -5.458510875701904
    8. '2' → logprob: -5.583510875701904
    9. 'n' → logprob: -5.958510875701904
    10. '-' → logprob: -6.333510875701904

Token 84: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22645188868045807
    2. '))' → logprob: -1.6014518737792969
    3. ',' → logprob: -7.101451873779297
    4. ' )' → logprob: -9.226451873779297
    5. ')))' → logprob: -9.476451873779297
    6. ' ))' → logprob: -11.226451873779297
    7. ')
' → logprob: -11.726451873779297
    8. '))
' → logprob: -11.976451873779297
    9. ',)' → logprob: -12.476451873779297
    10. '   ' → logprob: -13.351451873779297

Token 85: ' ' (ID: 220)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.8366620540618896
    2. '0' → logprob: -1.0866620540618896
    3. ')' → logprob: -1.9616620540618896
    4. '1' → logprob: -3.3366620540618896
    5. '[]' → logprob: -3.9616620540618896
    6. 'n' → logprob: -5.336662292480469
    7. 'True' → logprob: -5.336662292480469
    8. ' ' → logprob: -5.586662292480469
    9. ')))' → logprob: -5.961662292480469
    10. 'False' → logprob: -6.336662292480469

Token 86: '1' (ID: 16)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -1.0104727745056152
    2. '0' → logprob: -1.3854727745056152
    3. '1' → logprob: -2.1354727745056152
    4. ')' → logprob: -2.3854727745056152
    5. 'stack' → logprob: -2.7604727745056152
    6. '[]' → logprob: -3.0104727745056152
    7. 'n' → logprob: -4.635472774505615
    8. 'True' → logprob: -4.885472774505615
    9. ')))' → logprob: -5.260472774505615
    10. 'False' → logprob: -5.385472774505615

Token 87: ' <<' (ID: 2256)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03812377154827118
    2. '))' → logprob: -3.288123846054077
    3. ',' → logprob: -10.538124084472656
    4. ')))' → logprob: -10.538124084472656
    5. ' )' → logprob: -10.663124084472656
    6. ')
' → logprob: -13.038124084472656
    7. ' ))' → logprob: -13.913124084472656
    8. '),' → logprob: -14.413124084472656
    9. '))
' → logprob: -14.663124084472656
    10. ' ' → logprob: -14.788124084472656

Token 88: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5072877407073975
    2. '(n' → logprob: -1.0072877407073975
    3. '(' → logprob: -4.507287979125977
    4. '0' → logprob: -4.757287979125977
    5. ' (' → logprob: -5.632287979125977
    6. ' n' → logprob: -5.757287979125977
    7. 'a' → logprob: -6.382287979125977
    8. ' ' → logprob: -7.507287979125977
    9. '(a' → logprob: -7.632287979125977
    10. '1' → logprob: -7.757287979125977

Token 89: ',' (ID: 11)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.07149352878332138
    2. ')' → logprob: -2.821493625640869
    3. ',' → logprob: -4.946493625640869
    4. ' ))' → logprob: -6.696493625640869
    5. ')))' → logprob: -7.821493625640869
    6. ' )' → logprob: -8.321493148803711
    7. '-' → logprob: -8.696493148803711
    8. '))
' → logprob: -9.946493148803711
    9. ' ' → logprob: -10.196493148803711
    10. '[' → logprob: -10.196493148803711

Token 90: ' None' (ID: 4662)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.35772454738616943
    2. '0' → logprob: -2.107724666595459
    3. '1' → logprob: -2.607724666595459
    4. ')' → logprob: -2.982724666595459
    5. 'True' → logprob: -4.107724666595459
    6. 'n' → logprob: -4.357724666595459
    7. '[]' → logprob: -5.357724666595459
    8. 'False' → logprob: -5.857724666595459
    9. ' ' → logprob: -6.232724666595459
    10. '2' → logprob: -6.232724666595459

Token 91: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0032593535725027323
    2. '))' → logprob: -5.753259181976318
    3. ',' → logprob: -10.003259658813477
    4. ' )' → logprob: -10.878259658813477
    5. ')))' → logprob: -11.253259658813477
    6. ')
' → logprob: -13.253259658813477
    7. ',)' → logprob: -14.628259658813477
    8. '),' → logprob: -14.753259658813477
    9. ' ' → logprob: -15.003259658813477
    10. '   ' → logprob: -15.003259658813477

Token 92: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04320482909679413
    2. ':' → logprob: -3.2932047843933105
    3. '):' → logprob: -5.6682047843933105
    4. '[' → logprob: -8.043205261230469
    5. '<|end|>' → logprob: -8.043205261230469
    6. ',' → logprob: -8.168205261230469
    7. '
' → logprob: -8.668205261230469
    8. '#' → logprob: -9.293205261230469
    9. ' ' → logprob: -9.668205261230469
    10. '   ' → logprob: -9.793205261230469

Token 93: ' while' (ID: 2049)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2620503902435303
    2. ':' → logprob: -1.5120503902435303
    3. '):' → logprob: -5.387050628662109
    4. '[' → logprob: -6.887050628662109
    5. ' ' → logprob: -7.012050628662109
    6. ',' → logprob: -7.137050628662109
    7. '
' → logprob: -7.762050628662109
    8. '\n' → logprob: -8.13705062866211
    9. ' )' → logprob: -8.26205062866211
    10. '.' → logprob: -8.26205062866211

Token 94: ' stack' (ID: 10825)
  Prédit: ' stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stack' → logprob: -0.0022092582657933235
    2. 'stack' → logprob: -6.127209186553955
    3. '	stack' → logprob: -11.627209663391113
    4. ' len' → logprob: -11.752209663391113
    5. ' ' → logprob: -12.127209663391113
    6. '(stack' → logprob: -13.877209663391113
    7. '   ' → logprob: -15.002209663391113
    8. '  ' → logprob: -15.127209663391113
    9. 'len' → logprob: -16.127208709716797
    10. ' not' → logprob: -16.877208709716797

Token 95: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.000854062382131815
    2. '[-' → logprob: -8.0008544921875
    3. '.pop' → logprob: -8.1258544921875
    4. ' and' → logprob: -9.7508544921875
    5. '):' → logprob: -10.0008544921875
    6. ':
' → logprob: -10.2508544921875
    7. 'and' → logprob: -10.3758544921875
    8. '>:' → logprob: -10.8758544921875
    9. '[' → logprob: -11.5008544921875
    10. ' :' → logprob: -12.0008544921875

Token 96: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.4125758409500122
    2. '<|end|>' → logprob: -1.4125758409500122
    3. '    ' → logprob: -1.6625758409500122
    4. '(stack' → logprob: -2.0375757217407227
    5. '   ' → logprob: -2.1625757217407227
    6. 'stack' → logprob: -3.6625757217407227
    7. ' ' → logprob: -4.662575721740723
    8. ' stack' → logprob: -4.787575721740723
    9. '	stack' → logprob: -4.912575721740723
    10. ',' → logprob: -5.662575721740723

Token 97: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.0186650138348341
    2. '(n' → logprob: -5.393664836883545
    3. 'cur' → logprob: -5.518664836883545
    4. ' n' → logprob: -6.268664836883545
    5. 'size' → logprob: -6.268664836883545
    6. '   ' → logprob: -6.393664836883545
    7. 'node' → logprob: -6.518664836883545
    8. 'depth' → logprob: -6.518664836883545
    9. 'level' → logprob: -8.768665313720703
    10. 'current' → logprob: -8.893665313720703

Token 98: '1' (ID: 16)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003365350130479783
    2. ' ,' → logprob: -8.750336647033691
    3. '_,' → logprob: -9.375336647033691
    4. '-' → logprob: -9.625336647033691
    5. ',n' → logprob: -12.000336647033691
    6. ',
' → logprob: -12.875336647033691
    7. '-,' → logprob: -13.000336647033691
    8. ' -' → logprob: -13.000336647033691
    9. '>' → logprob: -13.125336647033691
    10. ')' → logprob: -13.500336647033691

Token 99: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003793144423980266
    2. ' ,' → logprob: -8.25037956237793
    3. ',n' → logprob: -10.37537956237793
    4. '=' → logprob: -10.62537956237793
    5. '-' → logprob: -10.87537956237793
    6. ')' → logprob: -11.25037956237793
    7. '   ' → logprob: -11.87537956237793
    8. ',)' → logprob: -11.87537956237793
    9. '_,' → logprob: -13.12537956237793
    10. '>' → logprob: -13.12537956237793

Token 100: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5761898159980774
    2. ' a' → logprob: -0.8261898159980774
    3. ' ' → logprob: -9.826189994812012
    4. 'x' → logprob: -11.013689994812012
    5. 'start' → logprob: -11.076189994812012
    6. 'n' → logprob: -11.263689994812012
    7. ' n' → logprob: -11.388689994812012
    8. ' s' → logprob: -11.388689994812012
    9. ' x' → logprob: -11.451189994812012
    10. 'cur' → logprob: -11.826189994812012

Token 101: '1' (ID: 16)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013595925702247769
    2. ' ,' → logprob: -9.250136375427246
    3. '<|end|>' → logprob: -11.000136375427246
    4. '1' → logprob: -12.500136375427246
    5. ')' → logprob: -12.625136375427246
    6. '_,' → logprob: -13.000136375427246
    7. '=' → logprob: -13.125136375427246
    8. 'a' → logprob: -13.375136375427246
    9. '<|end|>' → logprob: -13.625136375427246
    10. 'b' → logprob: -13.625136375427246

Token 102: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.860340752406046e-05
    2. ' ,' → logprob: -10.3750581741333
    3. '<|end|>' → logprob: -10.7500581741333
    4. '=' → logprob: -12.7500581741333
    5. ')' → logprob: -14.2500581741333
    6. ',b' → logprob: -14.5000581741333
    7. '<|end|>' → logprob: -14.5000581741333
    8. 'a' → logprob: -15.6250581741333
    9. ' =' → logprob: -15.7500581741333
    10. ',a' → logprob: -15.8750581741333

Token 103: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.07891060411930084
    2. ' b' → logprob: -2.5789105892181396
    3. ' ' → logprob: -11.578910827636719
    4. 'a' → logprob: -12.703910827636719
    5. ',' → logprob: -13.078910827636719
    6. '   ' → logprob: -13.453910827636719
    7. '<|end|>' → logprob: -13.453910827636719
    8. '    ' → logprob: -13.703910827636719
    9. '  ' → logprob: -14.578910827636719
    10. ' a' → logprob: -14.828910827636719

Token 104: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007416110602207482
    2. ',' → logprob: -8.125741958618164
    3. '_' → logprob: -8.500741958618164
    4. ')' → logprob: -9.000741958618164
    5. ')_' → logprob: -9.875741958618164
    6. '<|end|>' → logprob: -10.750741958618164
    7. '```' → logprob: -11.125741958618164
    8. '[' → logprob: -11.750741958618164
    9. '   ' → logprob: -12.375741958618164
    10. ' ' → logprob: -12.625741958618164

Token 105: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010330478107789531
    2. ' ,' → logprob: -9.250102996826172
    3. '=' → logprob: -12.125102996826172
    4. ' =' → logprob: -14.125102996826172
    5. '1' → logprob: -15.750102996826172
    6. '   ' → logprob: -16.000102996826172
    7. ')' → logprob: -16.125102996826172
    8. '_,' → logprob: -16.375102996826172
    9. ' ' → logprob: -16.500102996826172
    10. '‌,' → logprob: -17.500102996826172

Token 106: ' remain' (ID: 12760)
  Prédit: 'remain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remain' → logprob: -0.10078205168247223
    2. ' remain' → logprob: -2.3507821559906006
    3. 'rem' → logprob: -7.9757819175720215
    4. 'r' → logprob: -8.72578239440918
    5. 'remaining' → logprob: -11.47578239440918
    6. 'rm' → logprob: -11.72578239440918
    7. ' ' → logprob: -11.72578239440918
    8. ' r' → logprob: -11.72578239440918
    9. 'rema' → logprob: -12.47578239440918
    10. 's' → logprob: -12.53828239440918

Token 107: '1' (ID: 16)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.025575118139386177
    2. ' =' → logprob: -4.525575160980225
    3. '=' → logprob: -4.775575160980225
    4. ' ,' → logprob: -5.150575160980225
    5. ')' → logprob: -8.775574684143066
    6. ' ' → logprob: -11.150574684143066
    7. '1' → logprob: -12.025574684143066
    8. ')=' → logprob: -12.900574684143066
    9. ' )' → logprob: -12.900574684143066
    10. '_,' → logprob: -13.400574684143066

Token 108: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0032507930882275105
    2. ' ,' → logprob: -6.253250598907471
    3. ' =' → logprob: -7.128250598907471
    4. '=' → logprob: -7.628250598907471
    5. ')' → logprob: -10.628251075744629
    6. ' ' → logprob: -12.503251075744629
    7. ' )' → logprob: -13.753251075744629
    8. '   ' → logprob: -14.003251075744629
    9. '),' → logprob: -14.503251075744629
    10. ')=' → logprob: -14.878251075744629

Token 109: ' ai' (ID: 8440)
  Prédit: 'depth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'depth' → logprob: -1.6907404661178589
    2. 'pos' → logprob: -2.0657405853271484
    3. 'ans' → logprob: -2.1907405853271484
    4. 'idx' → logprob: -2.3157405853271484
    5. 'i' → logprob: -3.5657405853271484
    6. 'mask' → logprob: -3.6907405853271484
    7. 'p' → logprob: -3.6907405853271484
    8. ' depth' → logprob: -3.8157405853271484
    9. 'index' → logprob: -4.065740585327148
    10. 'cur' → logprob: -4.065740585327148

Token 110: '1' (ID: 16)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04936639964580536
    2. '=' → logprob: -3.1743664741516113
    3. '1' → logprob: -5.799366474151611
    4. ')' → logprob: -6.674366474151611
    5. ' ,' → logprob: -6.799366474151611
    6. ' =' → logprob: -7.424366474151611
    7. '_idx' → logprob: -9.424365997314453
    8. '[' → logprob: -9.924365997314453
    9. ']' → logprob: -10.799365997314453
    10. '<|end|>' → logprob: -11.049365997314453

Token 111: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014328587567433715
    2. '=' → logprob: -6.8764328956604
    3. ' ,' → logprob: -8.251432418823242
    4. ' =' → logprob: -9.126432418823242
    5. ')' → logprob: -11.376432418823242
    6. '   ' → logprob: -11.751432418823242
    7. '<|end|>' → logprob: -12.876432418823242
    8. ' ' → logprob: -13.751432418823242
    9. ',a' → logprob: -13.938932418823242
    10. 'a' → logprob: -14.438932418823242

Token 112: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.031012041494250298
    2. ' ans' → logprob: -3.5310120582580566
    3. 'res' → logprob: -8.406011581420898
    4. 'answer' → logprob: -8.781011581420898
    5. 'an' → logprob: -9.031011581420898
    6. 'arr' → logprob: -9.031011581420898
    7. '_ans' → logprob: -9.031011581420898
    8. 'a' → logprob: -9.406011581420898
    9. '	ans' → logprob: -9.406011581420898
    10. ' ' → logprob: -10.031011581420898

Token 113: '1' (ID: 16)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009619263932108879
    2. '1' → logprob: -4.759619235992432
    3. ')' → logprob: -7.259619235992432
    4. ' ,' → logprob: -9.38461971282959
    5. '<|end|>' → logprob: -9.50961971282959
    6. '[' → logprob: -9.63461971282959
    7. '<|end|>' → logprob: -11.50961971282959
    8. ',
' → logprob: -11.50961971282959
    9. ']' → logprob: -11.75961971282959
    10. ',)' → logprob: -11.75961971282959

Token 114: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004206634475849569
    2. ')' → logprob: -8.625420570373535
    3. ' ,' → logprob: -9.000420570373535
    4. '=' → logprob: -9.500420570373535
    5. ' =' → logprob: -10.500420570373535
    6. ',)' → logprob: -12.625420570373535
    7. ')=' → logprob: -13.125420570373535
    8. '   ' → logprob: -13.375420570373535
    9. ' ' → logprob: -13.500420570373535
    10. ',
' → logprob: -14.125420570373535

Token 115: ' width' (ID: 4345)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mask' → logprob: -1.5572779178619385
    2. 'sz' → logprob: -2.3072779178619385
    3. 'size' → logprob: -2.5572779178619385
    4. 'n' → logprob: -2.5572779178619385
    5. 'length' → logprob: -2.8072779178619385
    6. 'limit' → logprob: -2.9322779178619385
    7. 'lim' → logprob: -3.1822779178619385
    8. ' mask' → logprob: -3.3072779178619385
    9. 'max' → logprob: -3.3072779178619385
    10. 'ans' → logprob: -3.6822779178619385

Token 116: '1' (ID: 16)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18378286063671112
    2. ' =' → logprob: -2.5587828159332275
    3. '1' → logprob: -3.0587828159332275
    4. '=' → logprob: -3.5587828159332275
    5. ')' → logprob: -4.433783054351807
    6. '<|end|>' → logprob: -6.433783054351807
    7. '<|end|>' → logprob: -6.933783054351807
    8. ')=' → logprob: -8.308782577514648
    9. ' ,' → logprob: -9.433782577514648
    10. '   ' → logprob: -10.183782577514648

Token 117: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.021621352061629295
    2. ' =' → logprob: -4.521621227264404
    3. '=' → logprob: -4.646621227264404
    4. ' ,' → logprob: -7.271621227264404
    5. ')' → logprob: -8.771621704101562
    6. '   ' → logprob: -10.021621704101562
    7. ' ' → logprob: -11.146621704101562
    8. ')=' → logprob: -12.146621704101562
    9. '    ' → logprob: -13.021621704101562
    10. '  ' → logprob: -13.021621704101562

Token 118: ' l' (ID: 305)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -1.4039478302001953
    2. 'depth' → logprob: -2.6539478302001953
    3. 'cur' → logprob: -3.0289478302001953
    4. 'p' → logprob: -3.0289478302001953
    5. 'stack' → logprob: -3.2789478302001953
    6. 'idx' → logprob: -3.5289478302001953
    7. 'op' → logprob: -3.6539478302001953
    8. 'pos' → logprob: -3.6539478302001953
    9. 'par' → logprob: -3.7789478302001953
    10. 'prev' → logprob: -4.091447830200195

Token 119: '1' (ID: 16)
  Prédit: 'eft'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eft' → logprob: -0.3518306016921997
    2. 'e' → logprob: -2.35183048248291
    3. 'ast' → logprob: -2.72683048248291
    4. 'abel' → logprob: -3.85183048248291
    5. '1' → logprob: -3.97683048248291
    6. 'r' → logprob: -4.10183048248291
    7. 'en' → logprob: -4.35183048248291
    8. ',' → logprob: -4.85183048248291
    9. 'ist' → logprob: -4.97683048248291
    10. 'idx' → logprob: -5.10183048248291

Token 120: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22819364070892334
    2. ' =' → logprob: -1.6031936407089233
    3. ',' → logprob: -6.603193759918213
    4. ')' → logprob: -6.728193759918213
    5. ')=' → logprob: -8.728193283081055
    6. '   ' → logprob: -10.103193283081055
    7. ' ' → logprob: -11.228193283081055
    8. '    ' → logprob: -12.728193283081055
    9. ' )' → logprob: -13.853193283081055
    10. '  ' → logprob: -14.103193283081055

Token 121: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.25199154019355774
    2. ' stack' → logprob: -1.5019915103912354
    3. '   ' → logprob: -10.501991271972656
    4. '	stack' → logprob: -10.876991271972656
    5. ' ' → logprob: -12.126991271972656
    6. '(stack' → logprob: -12.251991271972656
    7. '    ' → logprob: -13.251991271972656
    8. '       ' → logprob: -13.751991271972656
    9. '  ' → logprob: -14.251991271972656
    10. '.stack' → logprob: -14.501991271972656

Token 122: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.0009619582560844719
    2. '.' → logprob: -7.625961780548096
    3. '.append' → logprob: -7.750961780548096
    4. 'pop' → logprob: -10.125962257385254
    5. ' .' → logprob: -13.125962257385254
    6. '[-' → logprob: -14.625962257385254
    7. '_pop' → logprob: -15.250962257385254
    8. '.extend' → logprob: -15.500962257385254
    9. 'Pop' → logprob: -15.750962257385254
    10. '.p' → logprob: -15.875962257385254

Token 123: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.11289513856172562
    2. '(' → logprob: -2.2378952503204346
    3. '(
' → logprob: -10.987895011901855
    4. '()
' → logprob: -11.112895011901855
    5. '()`' → logprob: -11.987895011901855
    6. '();' → logprob: -12.112895011901855
    7. '(),' → logprob: -12.362895011901855
    8. '()>' → logprob: -12.737895011901855
    9. '()]' → logprob: -12.862895011901855
    10. '("("' → logprob: -13.237895011901855

Token 124: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5364458560943604
    2. '   ' → logprob: -1.2864458560943604
    3. ' if' → logprob: -2.2864458560943604
    4. '       ' → logprob: -4.286445617675781
    5. ':
' → logprob: -4.286445617675781
    6. '    ' → logprob: -6.161445617675781
    7. 'if' → logprob: -6.286445617675781
    8. ',' → logprob: -6.661445617675781
    9. ' :' → logprob: -7.036445617675781
    10. ')' → logprob: -7.161445617675781

Token 125: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.18462543189525604
    2. ' if' → logprob: -1.8096253871917725
    3. '       ' → logprob: -6.309625625610352
    4. '   ' → logprob: -6.434625625610352
    5. 'for' → logprob: -7.559625625610352
    6. '           ' → logprob: -8.684625625610352
    7. ' for' → logprob: -8.684625625610352
    8. ')' → logprob: -8.809625625610352
    9. 'n' → logprob: -9.559625625610352
    10. '    ' → logprob: -9.684625625610352

Token 126: ' width' (ID: 4345)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.09446145594120026
    2. ' not' → logprob: -3.594461441040039
    3. ' len' → logprob: -4.219461441040039
    4. 'n' → logprob: -4.219461441040039
    5. ' a' → logprob: -4.469461441040039
    6. ' width' → logprob: -4.719461441040039
    7. ' ai' → logprob: -4.969461441040039
    8. ' l' → logprob: -6.344461441040039
    9. ' ' → logprob: -6.844461441040039
    10. ' remain' → logprob: -6.969461441040039

Token 127: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005555909126996994
    2. '==' → logprob: -5.880556106567383
    3. ' ==' → logprob: -6.005556106567383
    4. '_' → logprob: -8.755556106567383
    5. '```' → logprob: -10.255556106567383
    6. ' <=' → logprob: -10.755556106567383
    7. ' ' → logprob: -11.005556106567383
    8. '[' → logprob: -11.505556106567383
    9. '<=' → logprob: -12.005556106567383
    10. ' <' → logprob: -12.005556106567383

Token 128: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.40476298332214355
    2. '==' → logprob: -1.4047629833221436
    3. ' <=' → logprob: -2.5297629833221436
    4. '<=' → logprob: -5.029763221740723
    5. ' <' → logprob: -7.279763221740723
    6. '<' → logprob: -8.904763221740723
    7. '>' → logprob: -9.404763221740723
    8. ' ' → logprob: -9.404763221740723
    9. ' >' → logprob: -9.529763221740723
    10. ' !=' → logprob: -10.404763221740723

Token 129: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01644698530435562
    2. '0' → logprob: -4.766447067260742
    3. '2' → logprob: -5.141447067260742
    4. ' ' → logprob: -6.266447067260742
    5. '4' → logprob: -10.641447067260742
    6. '   ' → logprob: -11.141447067260742
    7. 'n' → logprob: -12.641447067260742
    8. '(' → logprob: -13.141447067260742
    9. '  ' → logprob: -13.141447067260742
    10. '8' → logprob: -13.391447067260742

Token 130: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0056708985939621925
    2. '0' → logprob: -5.88067102432251
    3. '2' → logprob: -5.88067102432251
    4. ' ' → logprob: -9.755670547485352
    5. '   ' → logprob: -12.630670547485352
    6. '4' → logprob: -12.880670547485352
    7. 'n' → logprob: -14.005670547485352
    8. '(' → logprob: -14.318170547485352
    9. '```' → logprob: -14.630670547485352
    10. '8' → logprob: -14.755670547485352

Token 131: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07627148181200027
    2. ':
' → logprob: -2.7012715339660645
    3. ' and' → logprob: -5.2012715339660645
    4. ' :' → logprob: -7.9512715339660645
    5. '       ' → logprob: -8.826271057128906
    6. ' :
' → logprob: -9.076271057128906
    7. '           ' → logprob: -9.701271057128906
    8. '   ' → logprob: -10.201271057128906
    9. 'and' → logprob: -10.826271057128906
    10. '[' → logprob: -11.076271057128906

Token 132: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8603493571281433
    2. '           ' → logprob: -0.9853493571281433
    3. ':
' → logprob: -1.985349416732788
    4. '       ' → logprob: -2.985349416732788
    5. '
' → logprob: -5.860349178314209
    6. '               ' → logprob: -5.860349178314209
    7. ' :' → logprob: -6.485349178314209
    8. ',' → logprob: -6.485349178314209
    9. '   ' → logprob: -6.985349178314209
    10. ' :
' → logprob: -7.110349178314209

Token 133: ' ans' (ID: 3345)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8242775201797485
    2. ' if' → logprob: -1.0742775201797485
    3. 'ans' (adapté à ' ans') → logprob: -2.199277400970459
    4. ' ans' → logprob: -3.074277400970459
    5. '           ' → logprob: -3.324277400970459
    6. 'for' → logprob: -4.824277400970459
    7. ' for' → logprob: -5.324277400970459
    8. '       ' → logprob: -5.824277400970459
    9. 'x' → logprob: -5.949277400970459
    10. '               ' → logprob: -6.199277400970459

Token 134: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004123280756175518
    2. '[' → logprob: -5.504123210906982
    3. '```' → logprob: -10.75412368774414
    4. '[a' → logprob: -12.87912368774414
    5. ' [' → logprob: -13.37912368774414
    6. '=' → logprob: -13.62912368774414
    7. '[i' → logprob: -13.75412368774414
    8. '[int' → logprob: -13.87912368774414
    9. '\[' → logprob: -13.87912368774414
    10. '[
' → logprob: -14.12912368774414

Token 135: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00024203950306400657
    2. '[a' → logprob: -8.625242233276367
    3. '[l' → logprob: -10.875242233276367
    4. '[...]' → logprob: -11.375242233276367
    5. '[min' → logprob: -12.000242233276367
    6. '\[' → logprob: -12.750242233276367
    7. '[b' → logprob: -13.000242233276367
    8. '[max' → logprob: -13.125242233276367
    9. '[left' → logprob: -13.375242233276367
    10. '[int' → logprob: -13.375242233276367

Token 136: 'ai' (ID: 1361)
  Prédit: 'ai'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ai' → logprob: -0.00011391390580683947
    2. ' ai' → logprob: -9.625113487243652
    3. '(ai' → logprob: -10.250113487243652
    4. 'a' → logprob: -12.250113487243652
    5. '0' → logprob: -12.625113487243652
    6. '   ' → logprob: -13.625113487243652
    7. 'l' → logprob: -14.000113487243652
    8. ' ' → logprob: -14.875113487243652
    9. '_ai' → logprob: -14.875113487243652
    10. '(' → logprob: -15.375113487243652

Token 137: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0012739235535264015
    2. '+' → logprob: -7.001274108886719
    3. ']' → logprob: -8.251274108886719
    4. ' +' → logprob: -10.501274108886719
    5. ']+' → logprob: -11.376274108886719
    6. ' ' → logprob: -11.563774108886719
    7. '```' → logprob: -11.563774108886719
    8. '-' → logprob: -12.376274108886719
    9. 'i' → logprob: -12.438774108886719
    10. ']==' → logprob: -12.688774108886719

Token 138: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06490356475114822
    2. ' ]' → logprob: -3.064903497695923
    3. '+' → logprob: -4.439903736114502
    4. ' +' → logprob: -6.189903736114502
    5. ']=' → logprob: -6.439903736114502
    6. '[' → logprob: -8.564903259277344
    7. '=' → logprob: -9.064903259277344
    8. ']+=' → logprob: -9.314903259277344
    9. ' =' → logprob: -9.689903259277344
    10. '+]' → logprob: -9.814903259277344

Token 139: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38760900497436523
    2. ' =' → logprob: -1.1376090049743652
    3. ' |=' → logprob: -8.637609481811523
    4. ']' → logprob: -8.637609481811523
    5. ',' → logprob: -8.762609481811523
    6. ']=' → logprob: -9.512609481811523
    7. ' ' → logprob: -10.012609481811523
    8. '+=' → logprob: -10.387609481811523
    9. ' ^=' → logprob: -10.762609481811523
    10. '[' → logprob: -10.887609481811523

Token 140: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.009744640439748764
    2. 'l' → logprob: -5.634744644165039
    3. ' a' → logprob: -6.009744644165039
    4. '1' → logprob: -6.884744644165039
    5. '0' → logprob: -7.009744644165039
    6. 'b' → logprob: -7.259744644165039
    7. '(a' → logprob: -8.134744644165039
    8. ' ' → logprob: -9.009744644165039
    9. ''a' → logprob: -9.009744644165039
    10. 'n' → logprob: -9.134744644165039

Token 141: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00015562419139314443
    2. '[' → logprob: -9.750155448913574
    3. 'a' → logprob: -10.625155448913574
    4. '&' → logprob: -11.125155448913574
    5. 'n' → logprob: -11.937655448913574
    6. '<|end|>' → logprob: -12.250155448913574
    7. 'i' → logprob: -12.375155448913574
    8. ')' → logprob: -12.375155448913574
    9. 'l' → logprob: -12.437655448913574
    10. 'b' → logprob: -12.750155448913574

Token 142: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0952276811003685
    2. '           ' → logprob: -3.4702277183532715
    3. ' 
' → logprob: -4.4702277183532715
    4. '+' → logprob: -4.9702277183532715
    5. '  
' → logprob: -5.0952277183532715
    6. '\n' → logprob: -5.3452277183532715
    7. '+
' → logprob: -5.4702277183532715
    8. '            
' → logprob: -5.5952277183532715
    9. '
' → logprob: -5.7202277183532715
    10. ' if' → logprob: -5.8452277183532715

Token 143: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11825930327177048
    2. '
' → logprob: -2.3682591915130615
    3. '       ' → logprob: -5.493259429931641
    4. ' ans' → logprob: -6.118259429931641
    5. ',
' → logprob: -6.118259429931641
    6. '\n' → logprob: -6.243259429931641
    7. '<|end|>' → logprob: -6.368259429931641
    8. '               ' → logprob: -6.868259429931641
    9. 'ans' → logprob: -7.118259429931641
    10. '   ' → logprob: -7.493259429931641

Token 144: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.0033017699606716633
    2. ' ans' → logprob: -5.753301620483398
    3. 'continue' → logprob: -9.878301620483398
    4. '   ' → logprob: -11.253301620483398
    5. '           ' → logprob: -11.253301620483398
    6. 'return' → logprob: -11.253301620483398
    7. '	ans' → logprob: -11.378301620483398
    8. ' continue' → logprob: -12.503301620483398
    9. 'print' → logprob: -12.503301620483398
    10. '
' → logprob: -12.878301620483398

Token 145: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.984787902794778e-05
    2. '[' → logprob: -9.250100135803223
    3. '```' → logprob: -12.625100135803223
    4. ']' → logprob: -15.750100135803223
    5. '<|end|>' → logprob: -17.125099182128906
    6. '[]' → logprob: -17.250099182128906
    7. '[
' → logprob: -17.375099182128906
    8. '...' → logprob: -17.500099182128906
    9. ' ' → logprob: -17.500099182128906
    10. ' [' → logprob: -18.187599182128906

Token 146: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.4855663721391466e-05
    2. '```' → logprob: -11.875015258789062
    3. '1' → logprob: -12.625015258789062
    4. ' [' → logprob: -14.375015258789062
    5. '[]' → logprob: -14.500015258789062
    6. '[
' → logprob: -14.500015258789062
    7. '\[' → logprob: -15.000015258789062
    8. '   ' → logprob: -15.125015258789062
    9. '[...]' → logprob: -15.250015258789062
    10. '+' → logprob: -15.625015258789062

Token 147: 'ai' (ID: 1361)
  Prédit: 'ai'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ai' → logprob: -0.027152925729751587
    2. 'bi' → logprob: -3.6521530151367188
    3. 'b' → logprob: -7.527153015136719
    4. ' ai' → logprob: -8.652153015136719
    5. '(ai' → logprob: -9.402153015136719
    6. '   ' → logprob: -11.027153015136719
    7. 'a' → logprob: -11.652153015136719
    8. 'aj' → logprob: -12.527153015136719
    9. ' bi' → logprob: -12.527153015136719
    10. ' ' → logprob: -12.652153015136719

Token 148: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004558175278361887
    2. '+' → logprob: -8.000455856323242
    3. '[' → logprob: -10.625455856323242
    4. 'i' → logprob: -10.625455856323242
    5. 'ai' → logprob: -10.875455856323242
    6. '_' → logprob: -11.375455856323242
    7. ']' → logprob: -11.375455856323242
    8. '```' → logprob: -11.750455856323242
    9. '
' → logprob: -12.562955856323242
    10. ' +' → logprob: -12.937955856323242

Token 149: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.16710543632507324
    2. ' +' → logprob: -1.9171054363250732
    3. ']' → logprob: -5.042105674743652
    4. ' ]' → logprob: -9.042105674743652
    5. ']+' → logprob: -9.042105674743652
    6. ' ' → logprob: -9.542105674743652
    7. '   ' → logprob: -10.792105674743652
    8. '1' → logprob: -10.917105674743652
    9. ' ^' → logprob: -11.667105674743652
    10. '2' → logprob: -12.292105674743652

Token 150: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013270224444568157
    2. ' ' → logprob: -6.626327037811279
    3. '   ' → logprob: -14.376326560974121
    4. '0' → logprob: -15.001326560974121
    5. '  ' → logprob: -16.001327514648438
    6. ' ' → logprob: -17.251327514648438
    7. '     ' → logprob: -17.938827514648438
    8. '    ' → logprob: -18.001327514648438
    9. 'width' → logprob: -18.251327514648438
    10. '`' → logprob: -18.376327514648438

Token 151: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.8961017202818766e-05
    2. ' ' → logprob: -9.750059127807617
    3. '0' → logprob: -15.000059127807617
    4. '   ' → logprob: -16.000059127807617
    5. 'width' → logprob: -17.375059127807617
    6. '```' → logprob: -17.875059127807617
    7. '  ' → logprob: -18.000059127807617
    8. '     ' → logprob: -18.812559127807617
    9. '       ' → logprob: -19.187559127807617
    10. '           ' → logprob: -19.625059127807617

Token 152: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004365914035588503
    2. ' ]' → logprob: -5.504365921020508
    3. ']=' → logprob: -8.379365921020508
    4. '=' → logprob: -10.129365921020508
    5. ' =' → logprob: -11.129365921020508
    6. ')' → logprob: -14.004365921020508
    7. ' ' → logprob: -14.004365921020508
    8. '[' → logprob: -14.379365921020508
    9. '']' → logprob: -15.379365921020508
    10. '`]' → logprob: -15.629365921020508

Token 153: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5760440230369568
    2. '=' → logprob: -0.8260440230369568
    3. ' ' → logprob: -9.701044082641602
    4. ']' → logprob: -10.826044082641602
    5. '<|end|>' → logprob: -11.451044082641602
    6. ' |=' → logprob: -12.451044082641602
    7. ')' → logprob: -12.951044082641602
    8. ']=' → logprob: -13.326044082641602
    9. ' =)' → logprob: -13.451044082641602
    10. '[' → logprob: -13.951044082641602

Token 154: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.016038473695516586
    2. ' b' → logprob: -4.141038417816162
    3. 'a' → logprob: -12.51603889465332
    4. '   ' → logprob: -15.51603889465332
    5. ' ' → logprob: -15.89103889465332
    6. '	b' → logprob: -16.64103889465332
    7. ' a' → logprob: -16.64103889465332
    8. ')b' → logprob: -17.76603889465332
    9. 'B' → logprob: -18.14103889465332
    10. '1' → logprob: -18.26603889465332

Token 155: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.981667537620524e-06
    2. '```' → logprob: -14.625001907348633
    3. ' ' → logprob: -14.750001907348633
    4. '_' → logprob: -15.000001907348633
    5. ')' → logprob: -16.187501907348633
    6. '[' → logprob: -16.750001907348633
    7. '`' → logprob: -16.875001907348633
    8. '<|end|>' → logprob: -17.062501907348633
    9. '-' → logprob: -17.187501907348633
    10. '
' → logprob: -17.187501907348633

Token 156: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3815493583679199
    2. '
' → logprob: -1.50654935836792
    3. '       ' → logprob: -2.75654935836792
    4. '<|end|>' → logprob: -3.75654935836792
    5. '               ' → logprob: -6.13154935836792
    6. ' else' → logprob: -6.63154935836792
    7. '\n' → logprob: -6.75654935836792
    8. '<|end|>' → logprob: -7.25654935836792
    9. ')' → logprob: -7.50654935836792
    10. '   ' → logprob: -7.63154935836792

Token 157: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.44106221199035645
    2. '
' → logprob: -2.1910622119903564
    3. '   ' → logprob: -2.4410622119903564
    4. '<|end|>' → logprob: -2.4410622119903564
    5. 'else' → logprob: -4.191061973571777
    6. ' else' → logprob: -4.316061973571777
    7. '           ' → logprob: -4.316061973571777
    8. 'elif' → logprob: -4.691061973571777
    9. '\n' → logprob: -5.316061973571777
    10. '```' → logprob: -5.691061973571777

Token 158: ' continue' (ID: 4901)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4659407436847687
    2. '           ' → logprob: -1.7159407138824463
    3. ' continue' → logprob: -2.0909407138824463
    4. '   ' → logprob: -3.8409407138824463
    5. ' else' → logprob: -3.9659407138824463
    6. '               ' → logprob: -4.590940952301025
    7. 'continue' (adapté à ' continue') → logprob: -4.590940952301025
    8. '                   ' → logprob: -6.465940952301025
    9. 'else' → logprob: -6.715940952301025
    10. ' ' → logprob: -6.965940952301025

Token 159: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03957328945398331
    2. '   ' → logprob: -3.9145731925964355
    3. '
' → logprob: -4.7895731925964355
    4. '        
' → logprob: -5.6645731925964355
    5. 'n' → logprob: -6.5395731925964355
    6. '    
' → logprob: -6.6645731925964355
    7. ' if' → logprob: -7.1645731925964355
    8. '    ' → logprob: -7.5395731925964355
    9. ' 
' → logprob: -7.7895731925964355
    10. '        ' → logprob: -8.164573669433594

Token 160: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018909402191638947
    2. '   ' → logprob: -4.768909454345703
    3. '
' → logprob: -5.768909454345703
    4. 'n' → logprob: -6.393909454345703
    5. '        
' → logprob: -6.643909454345703
    6. '<|end|>' → logprob: -7.018909454345703
    7. ' if' → logprob: -7.643909454345703
    8. 'stack' → logprob: -7.768909454345703
    9. '    
' → logprob: -7.893909454345703
    10. '```' → logprob: -8.393909454345703

Token 161: ' if' (ID: 538)
  Prédit: ' mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mid' → logprob: -0.2803291976451874
    2. 'mid' → logprob: -2.0303292274475098
    3. ' n' → logprob: -3.2803292274475098
    4. ' width' → logprob: -3.5303292274475098
    5. 'n' → logprob: -4.28032922744751
    6. ' middle' → logprob: -5.78032922744751
    7. ' l' → logprob: -5.78032922744751
    8. 'width' → logprob: -5.78032922744751
    9. ' m' → logprob: -5.78032922744751
    10. ' split' → logprob: -5.90532922744751

Token 162: ' l' (ID: 305)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.9247486591339111
    2. ' len' → logprob: -2.174748659133911
    3. ' width' → logprob: -2.549748659133911
    4. ' l' → logprob: -2.549748659133911
    5. ' (' → logprob: -2.674748659133911
    6. ' b' → logprob: -2.674748659133911
    7. ' bin' → logprob: -2.674748659133911
    8. ' n' → logprob: -3.299748659133911
    9. ' not' → logprob: -3.924748659133911
    10. 'a' → logprob: -4.049748420715332

Token 163: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.684157026233152e-05
    2. 'l' → logprob: -11.375077247619629
    3. 'ength' → logprob: -11.375077247619629
    4. '==' → logprob: -12.000077247619629
    5. ' ==' → logprob: -12.125077247619629
    6. '_' → logprob: -12.500077247619629
    7. '```' → logprob: -12.500077247619629
    8. ')' → logprob: -12.625077247619629
    9. '   ' → logprob: -12.812577247619629
    10. ' ' → logprob: -12.937577247619629

Token 164: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.03917548060417175
    2. '==' → logprob: -4.164175510406494
    3. ' ==' → logprob: -4.414175510406494
    4. 'is' → logprob: -4.539175510406494
    5. '[' → logprob: -9.914175033569336
    6. ' ' → logprob: -10.789175033569336
    7. ' !=' → logprob: -12.789175033569336
    8. 'in' → logprob: -12.914175033569336
    9. '!=' → logprob: -13.039175033569336
    10. '<|end|>' → logprob: -13.414175033569336

Token 165: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.05504623427987099
    2. ' None' → logprob: -2.930046319961548
    3. ' not' → logprob: -9.055046081542969
    4. 'not' → logprob: -10.930046081542969
    5. '   ' → logprob: -11.180046081542969
    6. 'True' → logprob: -11.680046081542969
    7. '0' → logprob: -12.930046081542969
    8. ' ' → logprob: -13.180046081542969
    9. '_None' → logprob: -14.680046081542969
    10. '(None' → logprob: -14.805046081542969

Token 166: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007775917649269104
    2. ':
' → logprob: -4.882775783538818
    3. ' and' → logprob: -9.382776260375977
    4. '       ' → logprob: -10.507776260375977
    5. ',' → logprob: -10.882776260375977
    6. ' :' → logprob: -11.257776260375977
    7. ' or' → logprob: -12.132776260375977
    8. '=' → logprob: -12.757776260375977
    9. '   ' → logprob: -12.757776260375977
    10. ':

' → logprob: -13.132776260375977

Token 167: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.17439717054367065
    2. ':
' → logprob: -1.9243972301483154
    3. '           ' → logprob: -4.674396991729736
    4. '       ' → logprob: -5.799396991729736
    5. ' and' → logprob: -7.924396991729736
    6. ' l' → logprob: -8.424397468566895
    7. ',' → logprob: -8.424397468566895
    8. ' :' → logprob: -9.049397468566895
    9. '):
' → logprob: -9.049397468566895
    10. ' :
' → logprob: -9.674397468566895

Token 168: ' x' (ID: 1215)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.4906565248966217
    2. 'mid' → logprob: -1.7406564950942993
    3. 'm' → logprob: -2.865656614303589
    4. 'x' (adapté à ' x') → logprob: -3.490656614303589
    5. 'for' → logprob: -4.11565637588501
    6. ' mid' → logprob: -4.49065637588501
    7. 'remain' → logprob: -4.49065637588501
    8. '   ' → logprob: -4.61565637588501
    9. 'if' → logprob: -4.61565637588501
    10. ' l' → logprob: -4.61565637588501

Token 169: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08004411309957504
    2. '=' → logprob: -3.3300440311431885
    3. 'or' → logprob: -3.9550440311431885
    4. '1' → logprob: -4.705044269561768
    5. '_' → logprob: -4.955044269561768
    6. ',' → logprob: -5.455044269561768
    7. 's' → logprob: -8.20504379272461
    8. '_candidates' → logprob: -8.83004379272461
    9. '   ' → logprob: -8.95504379272461
    10. '0' → logprob: -9.20504379272461

Token 170: ' a' (ID: 261)
  Prédit: ' remain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' remain' → logprob: -0.6864275932312012
    2. 'remain' → logprob: -1.4364275932312012
    3. ' min' → logprob: -2.311427593231201
    4. ' next' → logprob: -3.311427593231201
    5. 'min' → logprob: -3.436427593231201
    6. ' (' → logprob: -4.061427593231201
    7. 'next' → logprob: -4.311427593231201
    8. ' list' → logprob: -5.061427593231201
    9. ' max' → logprob: -5.311427593231201
    10. '(min' → logprob: -5.436427593231201

Token 171: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008315438753925264
    2. '_' → logprob: -7.750831604003906
    3. ')' → logprob: -9.750831604003906
    4. 'i' → logprob: -9.875831604003906
    5. '[' → logprob: -10.000831604003906
    6. ' &' → logprob: -10.250831604003906
    7. 'a' → logprob: -10.250831604003906
    8. '&' → logprob: -11.000831604003906
    9. ' ' → logprob: -11.000831604003906
    10. ' +' → logprob: -11.125831604003906

Token 172: ' ^' (ID: 7602)
  Prédit: ' &'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.3942561447620392
    2. ' ^' → logprob: -1.2692561149597168
    3. '&' → logprob: -3.894256114959717
    4. ' |' → logprob: -5.269256114959717
    5. ' >>' → logprob: -5.269256114959717
    6. '^' → logprob: -5.394256114959717
    7. '+' → logprob: -6.019256114959717
    8. '>>' → logprob: -6.269256114959717
    9. '|' → logprob: -6.644256114959717
    10. ' ' → logprob: -6.644256114959717

Token 173: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0033881450071930885
    2. '(' → logprob: -6.503387928009033
    3. 'l' → logprob: -7.253387928009033
    4. 'a' → logprob: -7.378387928009033
    5. '(b' → logprob: -8.753388404846191
    6. '1' → logprob: -9.503388404846191
    7. ' b' → logprob: -9.753388404846191
    8. 'x' → logprob: -9.753388404846191
    9. '((' → logprob: -10.253388404846191
    10. '           ' → logprob: -10.378388404846191

Token 174: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020663968462031335
    2. '<|end|>' → logprob: -9.25020694732666
    3. '[' → logprob: -10.62520694732666
    4. 'x' → logprob: -11.00020694732666
    5. '```' → logprob: -11.25020694732666
    6. ')' → logprob: -11.25020694732666
    7. '_' → logprob: -11.62520694732666
    8. 'l' → logprob: -11.87520694732666
    9. '...' → logprob: -12.00020694732666
    10. ' ' → logprob: -12.12520694732666

Token 175: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 176: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.016328897327184677
    2. '           ' → logprob: -4.641328811645508
    3. '<|end|>' → logprob: -5.641328811645508
    4. ' 
' → logprob: -6.891328811645508
    5. '
' → logprob: -7.141328811645508
    6. '            
' → logprob: -7.891328811645508
    7. '<|end|>' → logprob: -9.016328811645508
    8. '  
' → logprob: -9.016328811645508
    9. '       ' → logprob: -9.266328811645508
    10. ')' → logprob: -9.891328811645508

Token 177: ' y' (ID: 342)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.6884921789169312
    2. ' l' → logprob: -1.0634921789169312
    3. ' pop' → logprob: -3.9384922981262207
    4. 'pop' → logprob: -3.9384922981262207
    5. 'p' → logprob: -4.063492298126221
    6. ' p' → logprob: -4.688492298126221
    7. 'x' → logprob: -4.938492298126221
    8. 'k' → logprob: -5.063492298126221
    9. '           ' → logprob: -5.188492298126221
    10. ' ones' → logprob: -5.438492298126221

Token 178: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0028343498706817627
    2. '=' → logprob: -5.877834320068359
    3. ',' → logprob: -10.87783432006836
    4. ' ' → logprob: -11.62783432006836
    5. '=x' → logprob: -15.50283432006836
    6. 'x' → logprob: -15.50283432006836
    7. ' =
' → logprob: -15.62783432006836
    8. '  ' → logprob: -16.12783432006836
    9. '   ' → logprob: -16.25283432006836
    10. ' ,' → logprob: -16.25283432006836

Token 179: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.8123370409011841
    2. ' x' → logprob: -1.187337040901184
    3. ' (' → logprob: -2.5623369216918945
    4. '(x' → logprob: -2.9373369216918945
    5. '1' → logprob: -3.6873369216918945
    6. '0' → logprob: -3.8123369216918945
    7. ' ' → logprob: -4.5623369216918945
    8. 'a' → logprob: -4.5623369216918945
    9. 'bin' → logprob: -4.9373369216918945
    10. ' l' → logprob: -5.1873369216918945

Token 180: ' &' (ID: 827)
  Prédit: '.bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.bit' → logprob: -0.16125988960266113
    2. '&' → logprob: -2.411259889602661
    3. '=' → logprob: -3.286259889602661
    4. '>>' → logprob: -4.286259651184082
    5. ' &' → logprob: -5.286259651184082
    6. 'bit' → logprob: -7.286259651184082
    7. '.' → logprob: -7.536259651184082
    8. ' =' → logprob: -7.911259651184082
    9. '^' → logprob: -7.911259651184082
    10. '-' → logprob: -8.036259651184082

Token 181: ' -' (ID: 533)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.22425921261310577
    2. ' -' → logprob: -2.4742591381073
    3. '-' → logprob: -2.8492591381073
    4. ' (-' → logprob: -3.5992591381073
    5. '(' → logprob: -4.724259376525879
    6. '(a' → logprob: -4.849259376525879
    7. ' (' → logprob: -5.599259376525879
    8. ' (~' → logprob: -5.974259376525879
    9. '(~' → logprob: -6.099259376525879
    10. '-(' → logprob: -6.474259376525879

Token 182: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.3856492842023727e-06
    2. ' x' → logprob: -14.000000953674316
    3. '(x' → logprob: -15.375000953674316
    4. '<|end|>' → logprob: -16.125001907348633
    5. '<|end|>' → logprob: -16.875001907348633
    6. '	x' → logprob: -17.125001907348633
    7. '{x' → logprob: -17.375001907348633
    8. 'xec' → logprob: -18.375001907348633
    9. '```' → logprob: -18.375001907348633
    10. ' ' → logprob: -18.500001907348633

Token 183: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0038775079883635044
    2. ' 
' → logprob: -6.503877639770508
    3. '           ' → logprob: -7.128877639770508
    4. '<|end|>' → logprob: -7.503877639770508
    5. '
' → logprob: -7.878877639770508
    6. '  
' → logprob: -8.503877639770508
    7. ' x' → logprob: -9.503877639770508
    8. '<|end|>' → logprob: -9.628877639770508
    9. 'x' → logprob: -9.878877639770508
    10. '            
' → logprob: -10.003877639770508

Token 184: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.024774879217147827
    2. '
' → logprob: -5.02477502822876
    3. ',' → logprob: -5.14977502822876
    4. '       ' → logprob: -5.89977502822876
    5. '<|end|>' → logprob: -6.14977502822876
    6. '            ' → logprob: -6.39977502822876
    7. ' if' → logprob: -7.02477502822876
    8. '               ' → logprob: -7.14977502822876
    9. ' ' → logprob: -7.27477502822876
    10. '   ' → logprob: -7.39977502822876

Token 185: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -1.0829923152923584
    2. 'if' → logprob: -2.2079923152923584
    3. 'remain' → logprob: -2.4579923152923584
    4. ' l' → logprob: -2.7079923152923584
    5. 'x' → logprob: -2.8329923152923584
    6. ' remain' → logprob: -3.2079923152923584
    7. ' stack' → logprob: -3.3329923152923584
    8. ' if' → logprob: -3.4579923152923584
    9. 'z' → logprob: -3.5829923152923584
    10. 'stack' → logprob: -3.5829923152923584

Token 186: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7197257280349731
    2. ' =' → logprob: -0.7197257280349731
    3. '=' → logprob: -3.8447256088256836
    4. ' <<=' → logprob: -6.969725608825684
    5. ' ' → logprob: -7.094725608825684
    6. '   ' → logprob: -7.719725608825684
    7. ' +=' → logprob: -8.094725608825684
    8. '2' → logprob: -8.344725608825684
    9. ',' → logprob: -8.469725608825684
    10. ' |=' → logprob: -8.594725608825684

Token 187: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007621295750141144
    2. '=' → logprob: -4.8826212882995605
    3. ' ' → logprob: -11.382621765136719
    4. ',' → logprob: -13.007621765136719
    5. '2' → logprob: -14.757621765136719
    6. '1' → logprob: -15.632621765136719
    7. '   ' → logprob: -15.882621765136719
    8. '  ' → logprob: -16.50762176513672
    9. '=None' → logprob: -17.00762176513672
    10. '    ' → logprob: -17.00762176513672

Token 188: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -1.0168581008911133
    2. ' y' → logprob: -1.1418581008911133
    3. '(y' → logprob: -2.1418581008911133
    4. ' (' → logprob: -2.7668581008911133
    5. 'l' → logprob: -3.5168581008911133
    6. 'x' → logprob: -4.016858100891113
    7. 'bin' → logprob: -4.016858100891113
    8. ' l' → logprob: -4.141858100891113
    9. '(x' → logprob: -4.391858100891113
    10. '(bin' → logprob: -4.641858100891113

Token 189: '.bit' (ID: 61866)
  Prédit: '.bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.bit' → logprob: -0.0077193742617964745
    2. 'bit' → logprob: -5.75771951675415
    3. '-' → logprob: -6.38271951675415
    4. '
' → logprob: -6.63271951675415
    5. ' if' → logprob: -8.132719039916992
    6. '|' → logprob: -8.382719039916992
    7. '<<' → logprob: -8.632719039916992
    8. ' -' → logprob: -8.632719039916992
    9. 'if' → logprob: -9.007719039916992
    10. ' bit' → logprob: -9.257719039916992

Token 190: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -4.246537173457909e-06
    2. 'length' → logprob: -12.750003814697266
    3. 'ength' → logprob: -14.500003814697266
    4. '_l' → logprob: -15.500003814697266
    5. '_width' → logprob: -15.875003814697266
    6. 'l' → logprob: -16.125003814697266
    7. '_LENGTH' → logprob: -16.625003814697266
    8. '_count' → logprob: -16.750003814697266
    9. '_size' → logprob: -17.375003814697266
    10. '```' → logprob: -17.500003814697266

Token 191: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0001721934968372807
    2. '()
' → logprob: -9.00017261505127
    3. '()-' → logprob: -10.25017261505127
    4. ' ()' → logprob: -11.37517261505127
    5. '()+' → logprob: -15.00017261505127
    6. '（）' → logprob: -15.00017261505127
    7. '()

' → logprob: -15.37517261505127
    8. '(' → logprob: -15.75017261505127
    9. '()>' → logprob: -15.87517261505127
    10. '()<' → logprob: -15.87517261505127

Token 192: ' -' (ID: 533)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1249367967247963
    2. ' -' → logprob: -2.499936819076538
    3. '()-' → logprob: -4.249936580657959
    4. '-' → logprob: -4.749936580657959
    5. '()
' → logprob: -4.999936580657959
    6. '           ' → logprob: -5.374936580657959
    7. ' ()' → logprob: -6.999936580657959
    8. '       ' → logprob: -10.249937057495117
    9. ' ' → logprob: -10.499937057495117
    10. '            ' → logprob: -10.749937057495117

Token 193: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.870950215263292e-05
    2. ' ' → logprob: -10.000048637390137
    3. '2' → logprob: -14.125048637390137
    4. '   ' → logprob: -14.562548637390137
    5. '```' → logprob: -14.750048637390137
    6. '           ' → logprob: -15.312548637390137
    7. '
' → logprob: -15.500048637390137
    8. '  ' → logprob: -16.687549591064453
    9. '...' → logprob: -16.750049591064453
    10. ')' → logprob: -16.750049591064453

Token 194: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3782830137643032e-05
    2. ' ' → logprob: -11.37501335144043
    3. '           ' → logprob: -14.50001335144043
    4. '2' → logprob: -14.62501335144043
    5. '   ' → logprob: -15.31251335144043
    6. '```' → logprob: -15.50001335144043
    7. '
' → logprob: -15.81251335144043
    8. '0' → logprob: -15.93751335144043
    9. ',' → logprob: -17.12501335144043
    10. '       ' → logprob: -17.37501335144043

Token 195: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5976172685623169
    2. '<|end|>' → logprob: -0.8476172685623169
    3. '
' → logprob: -4.472617149353027
    4. '<|end|>' → logprob: -5.847617149353027
    5. '       ' → logprob: -6.097617149353027
    6. ',' → logprob: -6.597617149353027
    7. ')' → logprob: -6.722617149353027
    8. '               ' → logprob: -7.222617149353027
    9. '          ' → logprob: -7.972617149353027
    10. '            
' → logprob: -8.722617149353027

Token 196: '       ' (ID: 309)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006896405015140772
    2. '
' → logprob: -5.631896495819092
    3. '<|end|>' → logprob: -6.881896495819092
    4. '            ' → logprob: -7.631896495819092
    5. '       ' → logprob: -7.631896495819092
    6. ',' → logprob: -8.006896018981934
    7. '            
' → logprob: -8.131896018981934
    8. ' ' → logprob: -8.881896018981934
    9. '          ' → logprob: -9.256896018981934
    10. '               ' → logprob: -9.381896018981934

Token 197: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8054624199867249
    2. ' if' → logprob: -1.80546236038208
    3. '           ' → logprob: -1.80546236038208
    4. ' else' → logprob: -2.43046236038208
    5. '   ' → logprob: -3.30546236038208
    6. ' ' → logprob: -4.05546236038208
    7. 'else' (adapté à ' else') → logprob: -4.05546236038208
    8. '    ' → logprob: -4.18046236038208
    9. '        ' → logprob: -4.43046236038208
    10. ' elif' → logprob: -5.18046236038208

Token 198: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09130667895078659
    2. ':
' → logprob: -2.466306686401367
    3. '           ' → logprob: -6.341306686401367
    4. '       ' → logprob: -7.966306686401367
    5. ' :' → logprob: -9.216306686401367
    6. '   ' → logprob: -9.716306686401367
    7. '        ' → logprob: -10.591306686401367
    8. ',' → logprob: -10.716306686401367
    9. ' :
' → logprob: -11.341306686401367
    10. ':

' → logprob: -12.341306686401367

Token 199: '           ' (ID: 352)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.8874388337135315
    2. ' l' → logprob: -1.2624387741088867
    3. '           ' → logprob: -1.7624387741088867
    4. 'if' → logprob: -3.5124387741088867
    5. ' if' → logprob: -3.5124387741088867
    6. '   ' → logprob: -4.512438774108887
    7. ' for' → logprob: -4.887438774108887
    8. '       ' → logprob: -5.262438774108887
    9. ' ans' → logprob: -5.262438774108887
    10. ' remain' → logprob: -5.637438774108887

Token 200: ' y' (ID: 342)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.059624820947647095
    2. 'if' → logprob: -3.9346249103546143
    3. 'remain' → logprob: -4.434624671936035
    4. ' l' → logprob: -5.059624671936035
    5. '           ' → logprob: -5.309624671936035
    6. 'for' → logprob: -5.934624671936035
    7. 'mask' → logprob: -6.309624671936035
    8. 'x' → logprob: -6.434624671936035
    9. 'ans' → logprob: -6.934624671936035
    10. 'width' → logprob: -7.184624671936035

Token 201: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06197138875722885
    2. '=' → logprob: -2.811971426010132
    3. ' ' → logprob: -14.061971664428711
    4. ',' → logprob: -14.186971664428711
    5. ' &=' → logprob: -14.186971664428711
    6. ' &' → logprob: -14.561971664428711
    7. ' <<=' → logprob: -15.186971664428711
    8. '>' → logprob: -15.686971664428711
    9. ' |=' → logprob: -16.06197166442871
    10. ')' → logprob: -16.31197166442871

Token 202: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7796658873558044
    2. '(' → logprob: -1.6546659469604492
    3. ' ' → logprob: -2.154665946960449
    4. 'l' → logprob: -2.904665946960449
    5. ' (' → logprob: -2.904665946960449
    6. 'x' → logprob: -3.154665946960449
    7. ' l' → logprob: -3.529665946960449
    8. ' x' → logprob: -3.904665946960449
    9. 'b' → logprob: -4.654665946960449
    10. ' b' → logprob: -5.279665946960449

Token 203: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7155096530914307
    2. '(' → logprob: -1.4655096530914307
    3. 'l' → logprob: -1.8405096530914307
    4. 'x' → logprob: -2.3405096530914307
    5. 'b' → logprob: -4.715509414672852
    6. '(l' → logprob: -5.590509414672852
    7. '(x' → logprob: -5.715509414672852
    8. '((' → logprob: -6.090509414672852
    9. 'a' → logprob: -6.715509414672852
    10. ' (' → logprob: -6.840509414672852

Token 204: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.029839929193258286
    2. ' <<' → logprob: -3.5298399925231934
    3. '<' → logprob: -9.779839515686035
    4. '<<<' → logprob: -11.529839515686035
    5. '<<(' → logprob: -11.529839515686035
    6. ' <<=' → logprob: -12.279839515686035
    7. '           ' → logprob: -12.529839515686035
    8. '   ' → logprob: -13.904839515686035
    9. 'l' → logprob: -14.779839515686035
    10. '       ' → logprob: -14.904839515686035

Token 205: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.00477199163287878
    2. '(l' → logprob: -5.379772186279297
    3. ' l' → logprob: -9.254772186279297
    4. '(' → logprob: -10.129772186279297
    5. ' (' → logprob: -11.379772186279297
    6. '(n' → logprob: -14.004772186279297
    7. '```' → logprob: -14.379772186279297
    8. '	l' → logprob: -14.379772186279297
    9. '   ' → logprob: -14.504772186279297
    10. '(x' → logprob: -15.254772186279297

Token 206: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0034882856998592615
    2. '2' → logprob: -6.378488063812256
    3. 'l' → logprob: -6.378488063812256
    4. '```' → logprob: -9.753488540649414
    5. '+' → logprob: -11.003488540649414
    6. '_l' → logprob: -12.753488540649414
    7. ' l' → logprob: -13.253488540649414
    8. '`' → logprob: -13.753488540649414
    9. '...' → logprob: -14.503488540649414
    10. '_' → logprob: -14.503488540649414

Token 207: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 208: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16926181316375732
    2. 'remain' → logprob: -2.544261932373047
    3. '
' → logprob: -3.669261932373047
    4. '           ' → logprob: -3.919261932373047
    5. ' remain' → logprob: -4.294261932373047
    6. '<|end|>' → logprob: -4.919261932373047
    7. 'n' → logprob: -6.419261932373047
    8. '   ' → logprob: -6.669261932373047
    9. 'rem' → logprob: -7.044261932373047
    10. 'if' → logprob: -7.044261932373047

Token 209: ' l' (ID: 305)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.1441179513931274
    2. 'remain' → logprob: -1.6441179513931274
    3. 'mask' → logprob: -2.644117832183838
    4. 'l' (adapté à ' l') → logprob: -2.644117832183838
    5. 'x' → logprob: -2.894117832183838
    6. 'm' → logprob: -3.269117832183838
    7. 'mid' → logprob: -3.394117832183838
    8. 'for' → logprob: -3.769117832183838
    9. 'ans' → logprob: -3.769117832183838
    10. 'diff' → logprob: -3.769117832183838

Token 210: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.013564745895564556
    2. ' =' → logprob: -5.138564586639404
    3. '1' → logprob: -5.638564586639404
    4. '=' → logprob: -6.013564586639404
    5. 'continue' → logprob: -8.013565063476562
    6. '_' → logprob: -8.138565063476562
    7. '3' → logprob: -8.763565063476562
    8. ' +=' → logprob: -9.513565063476562
    9. '+=' → logprob: -9.763565063476562
    10. '_continue' → logprob: -10.013565063476562

Token 211: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04937059059739113
    2. '=' → logprob: -3.049370527267456
    3. ' +=' → logprob: -7.424370765686035
    4. '+=' → logprob: -8.924370765686035
    5. ' -=' → logprob: -11.299370765686035
    6. '+' → logprob: -11.299370765686035
    7. ' ' → logprob: -11.424370765686035
    8. ',' → logprob: -11.674370765686035
    9. '   ' → logprob: -12.549370765686035
    10. ' +' → logprob: -13.799370765686035

Token 212: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0018279805080965161
    2. 'bin' → logprob: -7.751828193664551
    3. ' l' → logprob: -7.876828193664551
    4. 'y' → logprob: -8.00182819366455
    5. '0' → logprob: -8.75182819366455
    6. 'None' → logprob: -9.00182819366455
    7. '(l' → logprob: -9.50182819366455
    8. 'a' → logprob: -9.62682819366455
    9. 'stack' → logprob: -9.87682819366455
    10. '1' → logprob: -10.00182819366455

Token 213: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.013459247536957264
    2. 'l' → logprob: -4.388459205627441
    3. '-' → logprob: -8.013459205627441
    4. '2' → logprob: -8.513459205627441
    5. ' l' → logprob: -8.513459205627441
    6. '+' → logprob: -9.513459205627441
    7. ' -' → logprob: -10.013459205627441
    8. '   ' → logprob: -10.888459205627441
    9. '```' → logprob: -11.138459205627441
    10. 'y' → logprob: -11.388459205627441

Token 214: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2357935756444931
    2. '+' → logprob: -1.8607935905456543
    3. ' +' → logprob: -3.6107935905456543
    4. '
' → logprob: -3.8607935905456543
    5. '           ' → logprob: -6.235793590545654
    6. '<|end|>' → logprob: -6.735793590545654
    7. '   ' → logprob: -7.360793590545654
    8. ' if' → logprob: -7.360793590545654
    9. ',' → logprob: -7.985793590545654
    10. '-' → logprob: -8.110793113708496

Token 215: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03202250972390175
    2. 'remain' → logprob: -4.407022476196289
    3. 'if' → logprob: -5.657022476196289
    4. '
' → logprob: -5.657022476196289
    5. ' if' → logprob: -5.657022476196289
    6. ' remain' → logprob: -6.032022476196289
    7. '<|end|>' → logprob: -6.032022476196289
    8. '           ' → logprob: -7.282022476196289
    9. '        
' → logprob: -7.657022476196289
    10. '   ' → logprob: -7.782022476196289

Token 216: ' remain' (ID: 12760)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.277323842048645
    2. ' remain' → logprob: -1.277323842048645
    3. 'remain' (adapté à ' remain') → logprob: -1.777323842048645
    4. '       ' → logprob: -2.4023237228393555
    5. 'if' → logprob: -2.9023237228393555
    6. ' for' → logprob: -3.1523237228393555
    7. ' x' → logprob: -4.6523237228393555
    8. ' mask' → logprob: -4.6523237228393555
    9. 'mask' → logprob: -4.9023237228393555
    10. 'for' → logprob: -5.1523237228393555

Token 217: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7257267832756042
    2. '.remove' → logprob: -0.8507267832756042
    3. '.dis' → logprob: -3.100726842880249
    4. ' =' → logprob: -3.600726842880249
    5. '2' → logprob: -5.47572660446167
    6. '=' → logprob: -5.60072660446167
    7. ' -=' → logprob: -6.22572660446167
    8. '_copy' → logprob: -6.35072660446167
    9. '.' → logprob: -6.60072660446167
    10. '-' → logprob: -7.60072660446167

Token 218: ' =' (ID: 314)
  Prédit: '.remove'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.remove' → logprob: -0.07031885534524918
    2. '.dis' → logprob: -2.9453189373016357
    3. ' =' → logprob: -4.320318698883057
    4. '.' → logprob: -7.195318698883057
    5. '=' → logprob: -7.570318698883057
    6. '.pop' → logprob: -8.195319175720215
    7. ' -=' → logprob: -8.820319175720215
    8. '.add' → logprob: -8.820319175720215
    9. 'remove' → logprob: -9.820319175720215
    10. ' .' → logprob: -10.070319175720215

Token 219: ' remain' (ID: 12760)
  Prédit: 'remain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remain' → logprob: -0.36240658164024353
    2. '{' → logprob: -1.862406611442566
    3. ' remain' → logprob: -1.987406611442566
    4. ' {' → logprob: -5.3624067306518555
    5. 'set' → logprob: -5.4874067306518555
    6. ' set' → logprob: -5.9874067306518555
    7. 'rem' → logprob: -8.862406730651855
    8. '[' → logprob: -10.862406730651855
    9. '{x' → logprob: -10.987406730651855
    10. 'copy' → logprob: -11.424906730651855

Token 220: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.465036105713807e-06
    2. '.copy' → logprob: -12.625007629394531
    3. '```' → logprob: -14.375007629394531
    4. ' ' → logprob: -14.375007629394531
    5. 'copy' → logprob: -14.562507629394531
    6. '{' → logprob: -14.625007629394531
    7. '.remove' → logprob: -15.312507629394531
    8. '
' → logprob: -15.500007629394531
    9. '   ' → logprob: -15.687507629394531
    10. '-' → logprob: -15.812507629394531

Token 221: '.copy' (ID: 22925)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3777570128440857
    2. ' -' → logprob: -1.2527570724487305
    3. '.d' → logprob: -4.5027570724487305
    4. '.copy' → logprob: -4.7527570724487305
    5. '-{' → logprob: -4.7527570724487305
    6. '.' → logprob: -8.87775707244873
    7. '{' → logprob: -9.00275707244873
    8. '-d' → logprob: -9.25275707244873
    9. '.inter' → logprob: -9.50275707244873
    10. '-copy' → logprob: -10.50275707244873

Token 222: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.023301033303141594
    2. '()
' → logprob: -3.773301124572754
    3. '())' → logprob: -11.398301124572754
    4. '       ' → logprob: -11.523301124572754
    5. '()

' → logprob: -11.898301124572754
    6. '();' → logprob: -12.398301124572754
    7. '.remove' → logprob: -12.773301124572754
    8. '().' → logprob: -12.773301124572754
    9. '<|end|>' → logprob: -12.773301124572754
    10. '()
' → logprob: -13.023301124572754

Token 223: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08535295724868774
    2. 'remain' → logprob: -3.085352897644043
    3. ' remain' → logprob: -3.710352897644043
    4. '<|end|>' → logprob: -5.960352897644043
    5. '
' → logprob: -6.085352897644043
    6. ' if' → logprob: -6.960352897644043
    7. 'rem' → logprob: -7.335352897644043
    8. '        
' → logprob: -7.585352897644043
    9. ' for' → logprob: -7.585352897644043
    10. '   ' → logprob: -7.710352897644043

Token 224: ' remain' (ID: 12760)
  Prédit: 'remain'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remain' (adapté à ' remain') → logprob: -0.6322514414787292
    2. 'if' → logprob: -2.132251501083374
    3. 'for' → logprob: -2.757251501083374
    4. 'rem' → logprob: -3.257251501083374
    5. 'mask' → logprob: -3.382251501083374
    6. ' remain' → logprob: -4.007251262664795
    7. 'pos' → logprob: -4.132251262664795
    8. 'low' → logprob: -4.382251262664795
    9. 'bit' → logprob: -4.632251262664795
    10. ' if' → logprob: -4.757251262664795

Token 225: '1' (ID: 16)
  Prédit: '.remove'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.remove' → logprob: -0.04718398302793503
    2. '.dis' → logprob: -3.4221839904785156
    3. '.' → logprob: -5.047183990478516
    4. '1' → logprob: -5.047183990478516
    5. ' .' → logprob: -7.922183990478516
    6. ' =' → logprob: -9.547183990478516
    7. 'remove' → logprob: -9.797183990478516
    8. ' -=' → logprob: -10.422183990478516
    9. '   ' → logprob: -10.797183990478516
    10. 'discard' → logprob: -11.172183990478516

Token 226: '.remove' (ID: 7986)
  Prédit: '.remove'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.remove' → logprob: -0.10042761266231537
    2. '.dis' → logprob: -2.3504276275634766
    3. '.' → logprob: -8.600427627563477
    4. 'remove' → logprob: -11.350427627563477
    5. '.add' → logprob: -11.350427627563477
    6. ' .' → logprob: -12.100427627563477
    7. '.d' → logprob: -12.475427627563477
    8. 'discard' → logprob: -12.850427627563477
    9. '.pop' → logprob: -14.725427627563477
    10. 'dis' → logprob: -15.225427627563477

Token 227: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.0003811025235336274
    2. '(a' → logprob: -8.875381469726562
    3. '(y' → logprob: -9.000381469726562
    4. '(' → logprob: -10.000381469726562
    5. 'l' → logprob: -10.375381469726562
    6. '(x' → logprob: -10.500381469726562
    7. '(b' → logprob: -12.000381469726562
    8. '((' → logprob: -12.250381469726562
    9. '(n' → logprob: -14.000381469726562
    10. '(s' → logprob: -15.500381469726562

Token 228: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.08734087646007538
    2. 'l' → logprob: -2.837340831756592
    3. '1' → logprob: -3.837340831756592
    4. 'y' → logprob: -5.962340831756592
    5. ' l' → logprob: -8.71234130859375
    6. 'a' → logprob: -8.71234130859375
    7. ')' → logprob: -9.21234130859375
    8. 'x' → logprob: -9.27484130859375
    9. '_l' → logprob: -9.89984130859375
    10. ' ' → logprob: -9.96234130859375

Token 229: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0789341852068901
    2. ')
' → logprob: -2.5789341926574707
    3. ')
' → logprob: -10.328933715820312
    4. ')

' → logprob: -11.828933715820312
    5. ' )' → logprob: -12.953933715820312
    6. ' )
' → logprob: -14.078933715820312
    7. '       ' → logprob: -15.203933715820312
    8. '   ' → logprob: -16.078933715820312
    9. '),' → logprob: -16.078933715820312
    10. '')' → logprob: -16.078933715820312

Token 230: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009928436018526554
    2. '
' → logprob: -5.509928226470947
    3. ' if' → logprob: -6.634928226470947
    4. 'if' → logprob: -6.759928226470947
    5. '        
' → logprob: -7.009928226470947
    6. '   ' → logprob: -7.384928226470947
    7. 'stack' → logprob: -7.759928226470947
    8. '<|end|>' → logprob: -8.009928703308105
    9. ',' → logprob: -8.259928703308105
    10. ')' → logprob: -8.634928703308105

Token 231: ' i' (ID: 575)
  Prédit: ' mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mid' → logprob: -1.3517537117004395
    2. 'mid' → logprob: -1.4767537117004395
    3. ' stack' → logprob: -1.6017537117004395
    4. 'stack' → logprob: -1.7267537117004395
    5. 'half' → logprob: -3.6017537117004395
    6. 'm' → logprob: -4.2267537117004395
    7. 'mask' → logprob: -4.2267537117004395
    8. ' half' → logprob: -4.3517537117004395
    9. ' m' → logprob: -4.6017537117004395
    10. '       ' → logprob: -5.2267537117004395

Token 232: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4193008840084076
    2. 'f' → logprob: -1.91930091381073
    3. 'nd' → logprob: -2.1693007946014404
    4. '=' → logprob: -3.1693007946014404
    5. '1' → logprob: -4.6693010330200195
    6. ',' → logprob: -4.9193010330200195
    7. 'n' → logprob: -5.0443010330200195
    8. 's' → logprob: -5.5443010330200195
    9. 'ndi' → logprob: -6.1693010330200195
    10. 'nds' → logprob: -6.5443010330200195

Token 233: ' next' (ID: 2613)
  Prédit: ' remain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' remain' → logprob: -0.7074631452560425
    2. 'remain' → logprob: -1.9574631452560425
    3. '0' → logprob: -2.332463264465332
    4. ' min' → logprob: -2.582463264465332
    5. ' ' → logprob: -3.082463264465332
    6. ' next' → logprob: -3.207463264465332
    7. 'min' → logprob: -3.582463264465332
    8. 'next' → logprob: -4.332463264465332
    9. ' (' → logprob: -4.707463264465332
    10. 'a' → logprob: -4.707463264465332

Token 234: '(iter' (ID: 61014)
  Prédit: '(iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(iter' → logprob: -0.0006224881508387625
    2. '(i' → logprob: -7.875622272491455
    3. '((' → logprob: -8.625622749328613
    4. '(x' → logprob: -9.750622749328613
    5. '(idx' → logprob: -13.375622749328613
    6. '(' → logprob: -13.875622749328613
    7. 'iter' → logprob: -13.875622749328613
    8. '(
' → logprob: -15.625622749328613
    9. '(it' → logprob: -16.000621795654297
    10. '(ix' → logprob: -16.125621795654297

Token 235: '(rem' (ID: 150425)
  Prédit: '(rem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(rem' → logprob: -0.00021212305000517517
    2. 'remain' → logprob: -8.500211715698242
    3. ' remain' → logprob: -12.750211715698242
    4. '(' → logprob: -12.875211715698242
    5. 'rem' → logprob: -12.875211715698242
    6. '(rest' → logprob: -15.500211715698242
    7. ')' → logprob: -16.500211715698242
    8. '(remove' → logprob: -16.500211715698242
    9. '_rem' → logprob: -16.875211715698242
    10. ' (' → logprob: -17.750211715698242

Token 236: 'ain' (ID: 524)
  Prédit: 'ain'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ain' → logprob: -0.0008118899422697723
    2. '1' → logprob: -7.12581205368042
    3. 'a' → logprob: -13.500811576843262
    4. '   ' → logprob: -13.750811576843262
    5. ')' → logprob: -13.875811576843262
    6. 'an' → logprob: -14.250811576843262
    7. '2' → logprob: -14.625811576843262
    8. 'ai' → logprob: -14.875811576843262
    9. 'in' → logprob: -14.875811576843262
    10. 'ained' → logprob: -15.125811576843262

Token 237: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ')' → logprob: -15.875
    3. '_' → logprob: -17.75
    4. ' ' → logprob: -18.5625
    5. '<|end|>' → logprob: -18.5625
    6. '))' → logprob: -18.875
    7. '১' → logprob: -19.375
    8. '
' → logprob: -19.4375
    9. '۱' → logprob: -19.5
    10. '१' → logprob: -20.0

Token 238: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5783025026321411
    2. '))' → logprob: -0.8283025026321411
    3. ')
' → logprob: -6.828302383422852
    4. '))
' → logprob: -7.078302383422852
    5. ' )' → logprob: -8.078302383422852
    6. ' ))' → logprob: -9.328302383422852
    7. ')))' → logprob: -11.328302383422852
    8. '})' → logprob: -12.328302383422852
    9. ')}' → logprob: -12.703302383422852
    10. '),' → logprob: -12.828302383422852

Token 239: '       ' (ID: 309)
  Prédit: ' remain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' remain' → logprob: -1.0023994445800781
    2. '       ' → logprob: -1.2523994445800781
    3. 'remain' → logprob: -1.2523994445800781
    4. '<|end|>' → logprob: -3.752399444580078
    5. '
' → logprob: -4.127399444580078
    6. '        
' → logprob: -5.502399444580078
    7. '<|end|>' → logprob: -5.752399444580078
    8. 'remaining' → logprob: -5.877399444580078
    9. '    
' → logprob: -6.502399444580078
    10. ' remaining' → logprob: -6.877399444580078

Token 240: ' lb' (ID: 32474)
  Prédit: 'remain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'remain' → logprob: -0.18710125982761383
    2. 'stack' → logprob: -2.562101364135742
    3. ' remain' → logprob: -3.687101364135742
    4. 'if' → logprob: -3.812101364135742
    5. '       ' → logprob: -4.687101364135742
    6. 'j' → logprob: -5.062101364135742
    7. 'y' → logprob: -5.437101364135742
    8. ' stack' → logprob: -5.562101364135742
    9. 'x' → logprob: -5.562101364135742
    10. '   ' → logprob: -5.812101364135742

Token 241: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1088491827249527
    2. '=' → logprob: -2.358849287033081
    3. '2' → logprob: -4.858849048614502
    4. '1' → logprob: -8.35884952545166
    5. 'i' → logprob: -8.48384952545166
    6. '=i' → logprob: -9.10884952545166
    7. '_' → logprob: -9.23384952545166
    8. '_i' → logprob: -9.73384952545166
    9. 'it' → logprob: -10.35884952545166
    10. 'w' → logprob: -11.10884952545166

Token 242: ' a' (ID: 261)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.8086698055267334
    2. ' ' → logprob: -1.8086698055267334
    3. 'i' → logprob: -2.5586698055267334
    4. ' i' → logprob: -2.8086698055267334
    5. 'l' → logprob: -3.0586698055267334
    6. ' (' → logprob: -3.3086698055267334
    7. '(' → logprob: -3.4336698055267334
    8. 'a' → logprob: -3.8086698055267334
    9. ' l' → logprob: -3.8086698055267334
    10. 'b' → logprob: -3.8086698055267334

Token 243: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.019976599141955376
    2. ')' → logprob: -5.894976615905762
    3. 'i' → logprob: -6.019976615905762
    4. '|' → logprob: -6.019976615905762
    5. '_' → logprob: -6.269976615905762
    6. '=' → logprob: -6.644976615905762
    7. ' =' → logprob: -6.644976615905762
    8. ' |' → logprob: -6.769976615905762
    9. '>>' → logprob: -7.269976615905762
    10. ' &' → logprob: -7.644976615905762

Token 244: ' ^' (ID: 7602)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.25498899817466736
    2. '^' → logprob: -2.3799889087677
    3. ' |' → logprob: -2.7549889087677
    4. ' ^' → logprob: -2.8799889087677
    5. '&' → logprob: -5.004989147186279
    6. ' &' → logprob: -5.504989147186279
    7. '>>' → logprob: -7.129989147186279
    8. '=' → logprob: -8.004988670349121
    9. ' ^=' → logprob: -8.129988670349121
    10. ' ' → logprob: -9.129988670349121

Token 245: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2227257639169693
    2. '(i' → logprob: -2.0977258682250977
    3. 'i' → logprob: -2.5977258682250977
    4. 'b' → logprob: -6.597725868225098
    5. ' (' → logprob: -7.847725868225098
    6. '(b' → logprob: -8.222725868225098
    7. 'x' → logprob: -8.847725868225098
    8. '((' → logprob: -9.097725868225098
    9. 'y' → logprob: -9.847725868225098
    10. '(x' → logprob: -10.222725868225098

Token 246: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006922688335180283
    2. 'y' → logprob: -5.631922721862793
    3. '(' → logprob: -6.256922721862793
    4. 'i' → logprob: -6.881922721862793
    5. 'a' → logprob: -8.506922721862793
    6. 'b' → logprob: -9.381922721862793
    7. '(i' → logprob: -10.131922721862793
    8. 'x' → logprob: -11.006922721862793
    9. ' ' → logprob: -11.131922721862793
    10. 'ai' → logprob: -13.006922721862793

Token 247: ' <<' (ID: 2256)
  Prédit: ' <<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <<' → logprob: -0.4740819036960602
    2. '<<' → logprob: -0.9740818738937378
    3. '1' → logprob: -12.849081993103027
    4. 'i' → logprob: -13.849081993103027
    5. ' ' → logprob: -15.099081993103027
    6. ' ' → logprob: -15.349081993103027
    7. '<' → logprob: -15.349081993103027
    8. '<<<' → logprob: -15.849081993103027
    9. '<<(' → logprob: -16.47408103942871
    10. '>>' → logprob: -16.59908103942871

Token 248: ' i' (ID: 575)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.3501560091972351
    2. 'i' → logprob: -1.2251560688018799
    3. ' l' → logprob: -7.100155830383301
    4. ' i' → logprob: -7.350155830383301
    5. '(i' → logprob: -8.8501558303833
    6. '(' → logprob: -10.1001558303833
    7. '(l' → logprob: -10.6001558303833
    8. 'n' → logprob: -12.2876558303833
    9. '   ' → logprob: -12.4751558303833
    10. ' ' → logprob: -12.6001558303833

Token 249: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000650125031825155
    2. ')
' → logprob: -7.375649929046631
    3. ' )' → logprob: -10.750650405883789
    4. ')

' → logprob: -14.250650405883789
    5. '<|end|>' → logprob: -14.500650405883789
    6. ')
' → logprob: -15.250650405883789
    7. '       ' → logprob: -15.875650405883789
    8. '))' → logprob: -16.25065040588379
    9. ' )
' → logprob: -16.50065040588379
    10. '),' → logprob: -16.62565040588379

Token 250: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6404199004173279
    2. '<|end|>' → logprob: -0.8904199004173279
    3. '
' → logprob: -4.015419960021973
    4. '       ' → logprob: -4.515419960021973
    5. ' ' → logprob: -4.890419960021973
    6. '<|end|>' → logprob: -5.890419960021973
    7. 'b' → logprob: -6.015419960021973
    8. '    ' → logprob: -6.015419960021973
    9. ' if' → logprob: -6.015419960021973
    10. ',' → logprob: -6.140419960021973

Token 251: ' ra' (ID: 4409)
  Prédit: 'ub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ub' → logprob: -0.8144099116325378
    2. 'stack' → logprob: -1.5644099712371826
    3. 'remain' → logprob: -2.1894099712371826
    4. 'rb' → logprob: -2.3144099712371826
    5. ' stack' → logprob: -3.1894099712371826
    6. 'ur' → logprob: -3.4394099712371826
    7. ' remain' → logprob: -3.8144099712371826
    8. ' ub' → logprob: -4.3144097328186035
    9. 'if' → logprob: -4.8144097328186035
    10. ' if' → logprob: -6.0644097328186035

Token 252: ' =' (ID: 314)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.3766593039035797
    2. '=' → logprob: -2.501659393310547
    3. ' =' → logprob: -2.626659393310547
    4. 'emain' → logprob: -2.751659393310547
    5. '1' → logprob: -3.626659393310547
    6. 'em' → logprob: -4.376659393310547
    7. 'nge' → logprob: -4.876659393310547
    8. 'main' → logprob: -5.001659393310547
    9. 'n' → logprob: -5.126659393310547
    10. 'stack' → logprob: -5.251659393310547

Token 253: ' lb' (ID: 32474)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.31017446517944336
    2. ' b' → logprob: -1.9351744651794434
    3. 'a' → logprob: -2.3101744651794434
    4. ' a' → logprob: -4.185174465179443
    5. 'ai' → logprob: -6.435174465179443
    6. '(a' → logprob: -6.560174465179443
    7. '(b' → logprob: -7.060174465179443
    8. ' (' → logprob: -7.060174465179443
    9. ' ai' → logprob: -7.310174465179443
    10. 'lb' → logprob: -7.810174465179443

Token 254: ' ^' (ID: 7602)
  Prédit: ' ^'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ^' → logprob: -0.3079518973827362
    2. '^' → logprob: -1.4329519271850586
    3. '=' → logprob: -4.182951927185059
    4. '+' → logprob: -5.682951927185059
    5. ' =' → logprob: -5.932951927185059
    6. '|' → logprob: -6.182951927185059
    7. ' |' → logprob: -6.432951927185059
    8. ' +' → logprob: -7.307951927185059
    9. ' ^=' → logprob: -8.432951927185059
    10. '>>' → logprob: -8.557951927185059

Token 255: ' y' (ID: 342)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0034191510640084743
    2. 'y' → logprob: -5.753418922424316
    3. ' (' → logprob: -8.503418922424316
    4. 'x' → logprob: -10.503418922424316
    5. ' y' → logprob: -12.003418922424316
    6. '   ' → logprob: -13.503418922424316
    7. ' ' → logprob: -14.378418922424316
    8. '       ' → logprob: -14.628418922424316
    9. '```' → logprob: -15.003418922424316
    10. '
' → logprob: -15.128418922424316

Token 256: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 257: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 258: ' width' (ID: 4345)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6855539083480835
    2. ' stack' → logprob: -1.1855539083480835
    3. 'stack' → logprob: -1.8105539083480835
    4. 'remain' → logprob: -4.560554027557373
    5. ' remain' → logprob: -5.310554027557373
    6. '       ' → logprob: -5.310554027557373
    7. '	stack' → logprob: -6.060554027557373
    8. '    ' → logprob: -6.435554027557373
    9. ' if' → logprob: -7.560554027557373
    10. '
' → logprob: -7.935554027557373

Token 259: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0024106118362396955
    2. '_' → logprob: -7.377410411834717
    3. '>>' → logprob: -7.377410411834717
    4. '//' → logprob: -8.002410888671875
    5. ' //' → logprob: -8.127410888671875
    6. '```' → logprob: -8.877410888671875
    7. '=' → logprob: -9.002410888671875
    8. ' >>=' → logprob: -9.377410888671875
    9. '2' → logprob: -10.002410888671875
    10. ' >>' → logprob: -10.377410888671875

Token 260: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006719759665429592
    2. '=' → logprob: -5.006719589233398
    3. ' >>=' → logprob: -13.881719589233398
    4. ' //' → logprob: -14.506719589233398
    5. '```' → logprob: -14.506719589233398
    6. ' ' → logprob: -14.506719589233398
    7. '1' → logprob: -14.631719589233398
    8. ',' → logprob: -14.881719589233398
    9. '2' → logprob: -15.256719589233398
    10. ' <<=' → logprob: -15.381719589233398

Token 261: ' width' (ID: 4345)
  Prédit: 'width'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'width' → logprob: -0.023308487609028816
    2. ' width' → logprob: -3.773308515548706
    3. '   ' → logprob: -10.023308753967285
    4. ' ' → logprob: -11.773308753967285
    5. '(width' → logprob: -11.898308753967285
    6. 'w' → logprob: -13.898308753967285
    7. '1' → logprob: -14.023308753967285
    8. '	width' → logprob: -14.648308753967285
    9. 'wide' → logprob: -15.273308753967285
    10. 'height' → logprob: -15.773308753967285

Token 262: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. '```' → logprob: -13.50000286102295
    3. ' ' → logprob: -14.00000286102295
    4. '   ' → logprob: -15.25000286102295
    5. '//' → logprob: -16.000003814697266
    6. '_' → logprob: -16.375003814697266
    7. '``' → logprob: -16.750003814697266
    8. '2' → logprob: -16.750003814697266
    9. ' //' → logprob: -17.250003814697266
    10. '１' → logprob: -18.125003814697266

Token 263: ' >>' (ID: 6832)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.024957437068223953
    2. ' >>' → logprob: -4.024957656860352
    3. '//' → logprob: -5.649957656860352
    4. ' //' → logprob: -6.274957656860352
    5. '   ' → logprob: -6.774957656860352
    6. ' ' → logprob: -8.899957656860352
    7. '<<' → logprob: -10.149957656860352
    8. '>>>' → logprob: -10.774957656860352
    9. ' >>=' → logprob: -11.149957656860352
    10. ' ' → logprob: -11.524957656860352

Token 264: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.2378600735682994e-05
    2. '2' → logprob: -10.500032424926758
    3. ' ' → logprob: -12.500032424926758
    4. '   ' → logprob: -14.500032424926758
    5. '```' → logprob: -15.875032424926758
    6. ' ' → logprob: -17.062532424926758
    7. '
' → logprob: -17.062532424926758
    8. '１' → logprob: -17.312532424926758
    9. '=' → logprob: -17.562532424926758
    10. '3' → logprob: -17.750032424926758

Token 265: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.8325677703833207e-05
    2. '2' → logprob: -10.500028610229492
    3. ' ' → logprob: -14.500028610229492
    4. '   ' → logprob: -16.000028610229492
    5. '```' → logprob: -16.500028610229492
    6. '１' → logprob: -18.187528610229492
    7. '0' → logprob: -18.437528610229492
    8. '3' → logprob: -18.687528610229492
    9. ' ' → logprob: -18.812528610229492
    10. '۱' → logprob: -19.187528610229492

Token 266: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3277064859867096
    2. '       ' → logprob: -1.5777064561843872
    3. 'stack' → logprob: -3.9527065753936768
    4. '	stack' → logprob: -3.9527065753936768
    5. '<|end|>' → logprob: -4.077706336975098
    6. '
' → logprob: -5.202706336975098
    7. '```' → logprob: -5.577706336975098
    8. ',' → logprob: -5.952706336975098
    9. ' stack' → logprob: -6.827706336975098
    10. '    
' → logprob: -7.202706336975098

Token 267: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06408299505710602
    2. 'stack' → logprob: -3.4390830993652344
    3. '   ' → logprob: -3.6890830993652344
    4. ' stack' → logprob: -5.689083099365234
    5. 'remain' → logprob: -7.439083099365234
    6. '           ' → logprob: -8.439083099365234
    7. '```' → logprob: -8.689083099365234
    8. '	stack' → logprob: -8.814083099365234
    9. ',' → logprob: -9.564083099365234
    10. '        
' → logprob: -10.314083099365234

Token 268: ' #' (ID: 1069)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.03322535753250122
    2. 'remain' → logprob: -3.7832252979278564
    3. ' stack' → logprob: -4.9082255363464355
    4. 'ans' → logprob: -6.7832255363464355
    5. '   ' → logprob: -8.283225059509277
    6. 'if' → logprob: -8.408225059509277
    7. ' remain' → logprob: -8.658225059509277
    8. 'mid' → logprob: -8.783225059509277
    9. 'rem' → logprob: -8.908225059509277
    10. '
' → logprob: -8.908225059509277

Token 269: ' right' (ID: 1849)
  Prédit: ' stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' stack' → logprob: -0.6341072916984558
    2. 'stack' → logprob: -0.7591072916984558
    3. '       ' → logprob: -7.2591071128845215
    4. '   ' → logprob: -7.7591071128845215
    5. '           ' → logprob: -8.63410758972168
    6. 'if' → logprob: -9.63410758972168
    7. ' if' → logprob: -10.00910758972168
    8. '
' → logprob: -10.25910758972168
    9. '	stack' → logprob: -11.25910758972168
    10. '    ' → logprob: -11.38410758972168

Token 270: '
' (ID: 198)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.605431318283081
    2. '=' → logprob: -2.230431318283081
    3. ' =' → logprob: -2.355431318283081
    4. 'branch' → logprob: -2.605431318283081
    5. '   ' → logprob: -3.230431318283081
    6. '_stack' → logprob: -3.230431318283081
    7. ' stack' → logprob: -3.730431318283081
    8. ')' → logprob: -4.60543155670166
    9. '(stack' → logprob: -4.98043155670166
    10. '       ' → logprob: -5.10543155670166

Token 271: '       ' (ID: 309)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.07105670869350433
    2. ' stack' → logprob: -4.071056842803955
    3. ' =' → logprob: -4.321056842803955
    4. '   ' → logprob: -4.571056842803955
    5. '=' → logprob: -4.821056842803955
    6. ',' → logprob: -5.696056842803955
    7. '.append' → logprob: -5.821056842803955
    8. '(stack' → logprob: -5.946056842803955
    9. '_stack' → logprob: -6.071056842803955
    10. ')' → logprob: -6.196056842803955

Token 272: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' (adapté à ' stack') → logprob: -0.3133699297904968
    2. ' stack' → logprob: -1.3133699893951416
    3. '   ' → logprob: -9.938369750976562
    4. '       ' → logprob: -9.938369750976562
    5. 'if' → logprob: -12.688369750976562
    6. '	stack' → logprob: -13.063369750976562
    7. '
' → logprob: -13.438369750976562
    8. ' if' → logprob: -14.063369750976562
    9. ' ans' → logprob: -14.438369750976562
    10. 'ans' → logprob: -14.563369750976562

Token 273: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.0683535037969705e-05
    2. '.' → logprob: -11.50001049041748
    3. 'append' → logprob: -15.50001049041748
    4. ' .' → logprob: -16.125011444091797
    5. '.pop' → logprob: -16.625011444091797
    6. '.extend' → logprob: -16.750011444091797
    7. '.push' → logprob: -16.750011444091797
    8. '.app' → logprob: -17.000011444091797
    9. ').' → logprob: -18.250011444091797
    10. '.ap' → logprob: -19.625011444091797

Token 274: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0005550591740757227
    2. '(' → logprob: -7.500555038452148
    3. '(n' → logprob: -14.000555038452148
    4. '(
' → logprob: -14.250555038452148
    5. '   ' → logprob: -15.375555038452148
    6. '(((' → logprob: -15.625555038452148
    7. '  ' → logprob: -17.87555503845215
    8. ' ' → logprob: -18.12555503845215
    9. '(('' → logprob: -18.25055503845215
    10. ' ((' → logprob: -18.37555503845215

Token 275: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.01674184948205948
    2. 'width' → logprob: -4.266741752624512
    3. 'l' → logprob: -6.266741752624512
    4. '   ' → logprob: -8.141741752624512
    5. '(n' → logprob: -8.891741752624512
    6. ' n' → logprob: -9.016741752624512
    7. '       ' → logprob: -9.766741752624512
    8. ' width' → logprob: -11.266741752624512
    9. '           ' → logprob: -11.391741752624512
    10. '(width' → logprob: -11.641741752624512

Token 276: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0020423675887286663
    2. '2' → logprob: -7.127042293548584
    3. ',' → logprob: -7.252042293548584
    4. '-' → logprob: -7.752042293548584
    5. ' -' → logprob: -9.502042770385742
    6. ' ,' → logprob: -11.877042770385742
    7. '```' → logprob: -12.252042770385742
    8. ' ' → logprob: -12.252042770385742
    9. '   ' → logprob: -12.939542770385742
    10. ',n' → logprob: -14.689542770385742

Token 277: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003664206713438034
    2. ' ,' → logprob: -5.628664016723633
    3. '   ' → logprob: -10.753664016723633
    4. '-' → logprob: -11.753664016723633
    5. 'b' → logprob: -12.128664016723633
    6. ',b' → logprob: -12.378664016723633
    7. ' -' → logprob: -12.628664016723633
    8. '    ' → logprob: -13.003664016723633
    9. '       ' → logprob: -13.128664016723633
    10. ',i' → logprob: -13.253664016723633

Token 278: ' ra' (ID: 4409)
  Prédit: 'ra'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ra' → logprob: -0.012656208127737045
    2. 'lb' → logprob: -4.762656211853027
    3. 'rb' → logprob: -6.137656211853027
    4. ' ra' → logprob: -7.012656211853027
    5. '   ' → logprob: -7.887656211853027
    6. ' lb' → logprob: -8.762656211853027
    7. 'la' → logprob: -9.512656211853027
    8. 'i' → logprob: -10.012656211853027
    9. 'a' → logprob: -10.137656211853027
    10. '       ' → logprob: -10.262656211853027

Token 279: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0036763211246579885
    2. ' ,' → logprob: -5.628676414489746
    3. ',b' → logprob: -9.878676414489746
    4. 'b' → logprob: -11.628676414489746
    5. '1' → logprob: -11.628676414489746
    6. '   ' → logprob: -12.503676414489746
    7. ',
' → logprob: -14.128676414489746
    8. ' ' → logprob: -14.253676414489746
    9. 'a' → logprob: -15.003676414489746
    10. '  ' → logprob: -15.128676414489746

Token 280: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0019268518080934882
    2. ' b' → logprob: -6.376926898956299
    3. '   ' → logprob: -8.87692642211914
    4. '    ' → logprob: -10.87692642211914
    5. '  ' → logprob: -11.25192642211914
    6. ' ' → logprob: -11.37692642211914
    7. '     ' → logprob: -11.75192642211914
    8. '       ' → logprob: -11.87692642211914
    9. '           ' → logprob: -11.87692642211914
    10. 'rb' → logprob: -12.75192642211914

Token 281: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003919463779311627
    2. ',' → logprob: -7.875391960144043
    3. ' ' → logprob: -12.375391960144043
    4. ' ,' → logprob: -13.000391960144043
    5. '),' → logprob: -13.500391960144043
    6. '2' → logprob: -13.750391960144043
    7. '   ' → logprob: -14.687891960144043
    8. ')' → logprob: -15.187891960144043
    9. '```' → logprob: -15.312891960144043
    10. '  ' → logprob: -15.625391960144043

Token 282: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017100441036745906
    2. ' ,' → logprob: -6.376709938049316
    3. '   ' → logprob: -12.626709938049316
    4. ',
' → logprob: -13.001709938049316
    5. ' ' → logprob: -14.626709938049316
    6. '    ' → logprob: -14.751709938049316
    7. '  ' → logprob: -15.626709938049316
    8. '       ' → logprob: -15.876709938049316
    9. '	' → logprob: -16.126710891723633
    10. 'rem' → logprob: -16.126710891723633

Token 283: ' remain' (ID: 12760)
  Prédit: 'remain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remain' → logprob: -0.20183195173740387
    2. ' remain' → logprob: -1.7018319368362427
    3. 'rem' → logprob: -8.701831817626953
    4. '{' → logprob: -8.951831817626953
    5. ' ' → logprob: -10.076831817626953
    6. '   ' → logprob: -10.576831817626953
    7. '    ' → logprob: -11.201831817626953
    8. '  ' → logprob: -11.451831817626953
    9. 'set' → logprob: -12.326831817626953
    10. '     ' → logprob: -12.701831817626953

Token 284: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.796184723294573e-06
    2. '<|end|>' → logprob: -12.625005722045898
    3. ',' → logprob: -14.250005722045898
    4. ' ' → logprob: -14.875005722045898
    5. '2' → logprob: -15.250005722045898
    6. 'remain' → logprob: -15.375005722045898
    7. ')' → logprob: -15.500005722045898
    8. '<|end|>' → logprob: -15.500005722045898
    9. '.copy' → logprob: -16.4375057220459
    10. '```' → logprob: -17.0000057220459

Token 285: '.copy' (ID: 22925)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03808142989873886
    2. '.copy' → logprob: -3.288081407546997
    3. ' ,' → logprob: -10.413081169128418
    4. '   ' → logprob: -12.288081169128418
    5. 'copy' → logprob: -12.913081169128418
    6. ' ' → logprob: -14.413081169128418
    7. '  ' → logprob: -14.663081169128418
    8. '.' → logprob: -14.788081169128418
    9. '       ' → logprob: -14.788081169128418
    10. ',
' → logprob: -15.288081169128418

Token 286: '(),' (ID: 2547)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012504660990089178
    2. '(),' → logprob: -6.876250267028809
    3. ' ,' → logprob: -8.751250267028809
    4. '))' → logprob: -10.751250267028809
    5. '   ' → logprob: -11.001250267028809
    6. '()' → logprob: -11.751250267028809
    7. '       ' → logprob: -12.501250267028809
    8. ',
' → logprob: -13.126250267028809
    9. '),' → logprob: -14.126250267028809
    10. '    ' → logprob: -14.126250267028809

Token 287: ' ai' (ID: 8440)
  Prédit: 'ai'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ai' → logprob: -0.0011108051985502243
    2. ' ai' → logprob: -7.626111030578613
    3. '   ' → logprob: -7.876111030578613
    4. '       ' → logprob: -10.001111030578613
    5. '     ' → logprob: -10.126111030578613
    6. '           ' → logprob: -10.126111030578613
    7. '               ' → logprob: -10.626111030578613
    8. ' ' → logprob: -10.751111030578613
    9. '(ai' → logprob: -11.251111030578613
    10. '         ' → logprob: -11.251111030578613

Token 288: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0031118765473365784
    2. '+' → logprob: -6.128111839294434
    3. ' +' → logprob: -7.378111839294434
    4. '2' → logprob: -8.503111839294434
    5. ',' → logprob: -10.753111839294434
    6. ' ' → logprob: -10.878111839294434
    7. 'i' → logprob: -11.128111839294434
    8. '```' → logprob: -11.128111839294434
    9. '   ' → logprob: -11.878111839294434
    10. '[' → logprob: -12.690611839294434

Token 289: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.31678396463394165
    2. ' +' → logprob: -1.3167839050292969
    3. ',' → logprob: -5.691783905029297
    4. ' ,' → logprob: -9.316783905029297
    5. '   ' → logprob: -10.566783905029297
    6. '+,' → logprob: -12.566783905029297
    7. '       ' → logprob: -12.691783905029297
    8. ' ' → logprob: -12.691783905029297
    9. '    ' → logprob: -13.191783905029297
    10. '           ' → logprob: -13.316783905029297

Token 290: ' width' (ID: 4345)
  Prédit: 'width'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'width' → logprob: -0.014164566993713379
    2. ' width' → logprob: -4.264164447784424
    3. '   ' → logprob: -14.889164924621582
    4. ' ' → logprob: -15.014164924621582
    5. '(width' → logprob: -15.639164924621582
    6. ',width' → logprob: -16.514163970947266
    7. '	width' → logprob: -17.264163970947266
    8. '       ' → logprob: -17.514163970947266
    9. '  ' → logprob: -17.639163970947266
    10. '
' → logprob: -17.889163970947266

Token 291: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -15.625000953674316
    3. '[' → logprob: -15.750000953674316
    4. '```' → logprob: -15.750000953674316
    5. 'width' → logprob: -16.000001907348633
    6. '۲' → logprob: -16.937501907348633
    7. '1' → logprob: -17.312501907348633
    8. '_' → logprob: -17.500001907348633
    9. ')' → logprob: -17.875001907348633
    10. '...' → logprob: -18.125001907348633

Token 292: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0018042956944555044
    2. ' ,' → logprob: -6.376804351806641
    3. '   ' → logprob: -9.75180435180664
    4. ',
' → logprob: -11.50180435180664
    5. '//' → logprob: -11.75180435180664
    6. '       ' → logprob: -12.50180435180664
    7. '))' → logprob: -12.75180435180664
    8. ' ' → logprob: -13.00180435180664
    9. '),' → logprob: -13.00180435180664
    10. ')' → logprob: -13.00180435180664

Token 293: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0023952710907906294
    2. ' ans' → logprob: -6.502395153045654
    3. 'width' → logprob: -7.127395153045654
    4. '   ' → logprob: -10.377395629882812
    5. ' ' → logprob: -11.002395629882812
    6. ' width' → logprob: -11.627395629882812
    7. '       ' → logprob: -12.127395629882812
    8. '  ' → logprob: -12.252395629882812
    9. '	ans' → logprob: -12.502395629882812
    10. '    ' → logprob: -12.627395629882812

Token 294: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0036045825108885765
    2. ',' → logprob: -5.628604412078857
    3. ')' → logprob: -13.378604888916016
    4. ' ' → logprob: -14.128604888916016
    5. ' ,' → logprob: -14.253604888916016
    6. '```' → logprob: -15.128604888916016
    7. ',
' → logprob: -15.378604888916016
    8. '2' → logprob: -15.878604888916016
    9. ',)' → logprob: -15.878604888916016
    10. '),' → logprob: -15.878604888916016

Token 295: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018923594325315207
    2. ' ,' → logprob: -8.750188827514648
    3. '   ' → logprob: -10.625188827514648
    4. '  ' → logprob: -13.250188827514648
    5. ' ' → logprob: -13.375188827514648
    6. ',
' → logprob: -14.375188827514648
    7. '       ' → logprob: -14.750188827514648
    8. '    ' → logprob: -14.875188827514648
    9. '```' → logprob: -15.000188827514648
    10. '     ' → logprob: -15.625188827514648

Token 296: ' width' (ID: 4345)
  Prédit: 'width'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'width' → logprob: -0.0006302326801232994
    2. ' width' → logprob: -7.3756303787231445
    3. '   ' → logprob: -12.875630378723145
    4. ' ' → logprob: -14.625630378723145
    5. '       ' → logprob: -15.500630378723145
    6. '  ' → logprob: -16.125629425048828
    7. '(width' → logprob: -16.250629425048828
    8. '           ' → logprob: -16.500629425048828
    9. '    ' → logprob: -17.000629425048828
    10. '     ' → logprob: -17.125629425048828

Token 297: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.6240566083070007e-06
    2. '1' → logprob: -13.750001907348633
    3. ')' → logprob: -16.125001907348633
    4. '۲' → logprob: -16.187501907348633
    5. '```' → logprob: -16.437501907348633
    6. ' ' → logprob: -16.937501907348633
    7. '_' → logprob: -17.000001907348633
    8. '...' → logprob: -17.500001907348633
    9. '₂' → logprob: -17.750001907348633
    10. '２' → logprob: -17.875001907348633

Token 298: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003645442193374038
    2. ' ,' → logprob: -8.000364303588867
    3. '   ' → logprob: -11.125364303588867
    4. ')' → logprob: -12.875364303588867
    5. '       ' → logprob: -13.000364303588867
    6. ',l' → logprob: -13.000364303588867
    7. '  ' → logprob: -13.750364303588867
    8. '),' → logprob: -13.875364303588867
    9. '))' → logprob: -14.000364303588867
    10. ' ' → logprob: -14.250364303588867

Token 299: ' None' (ID: 4662)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.022299161180853844
    2. 'None' → logprob: -3.89729905128479
    3. 'i' → logprob: -6.897299289703369
    4. '   ' → logprob: -8.022298812866211
    5. ' l' → logprob: -8.522298812866211
    6. ' None' → logprob: -10.272298812866211
    7. '    ' → logprob: -10.522298812866211
    8. '	l' → logprob: -10.647298812866211
    9. '  ' → logprob: -10.897298812866211
    10. ' ' → logprob: -11.084798812866211

Token 300: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.029901716858148575
    2. '))
' → logprob: -3.5299017429351807
    3. ')' → logprob: -8.904901504516602
    4. ')
' → logprob: -12.154901504516602
    5. '   ' → logprob: -12.529901504516602
    6. '       ' → logprob: -12.904901504516602
    7. '))
' → logprob: -13.029901504516602
    8. ' ))' → logprob: -13.654901504516602
    9. '))

' → logprob: -15.404901504516602
    10. ')))' → logprob: -15.529901504516602

Token 301: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05031624063849449
    2. '       ' → logprob: -3.175316333770752
    3. ')' → logprob: -5.800316333770752
    4. '	stack' → logprob: -6.425316333770752
    5. '```' → logprob: -6.675316333770752
    6. '(stack' → logprob: -7.800316333770752
    7. 'stack' → logprob: -7.925316333770752
    8. '[' → logprob: -9.175315856933594
    9. ',' → logprob: -9.300315856933594
    10. '<|end|>' → logprob: -9.300315856933594

Token 302: ' #' (ID: 1069)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.02630506083369255
    2. '       ' → logprob: -4.651305198669434
    3. '   ' → logprob: -4.901305198669434
    4. ' stack' → logprob: -5.276305198669434
    5. '	stack' → logprob: -6.151305198669434
    6. '(stack' → logprob: -7.526305198669434
    7. '
' → logprob: -7.776305198669434
    8. '#' (adapté à ' #') → logprob: -7.776305198669434
    9. ' ' → logprob: -9.151305198669434
    10. '```' → logprob: -9.401305198669434

Token 303: ' left' (ID: 3561)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.5575331449508667
    2. 'left' → logprob: -1.0575331449508667
    3. ' stack' → logprob: -2.8075332641601562
    4. ' left' → logprob: -4.057533264160156
    5. '#' → logprob: -6.557533264160156
    6. 'remain' → logprob: -7.682533264160156
    7. ' #' → logprob: -8.307533264160156
    8. 'n' → logprob: -9.557533264160156
    9. ' n' → logprob: -9.807533264160156
    10. '       ' → logprob: -10.557533264160156

Token 304: '
' (ID: 198)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.06560972332954407
    2. '(stack' → logprob: -2.8156096935272217
    3. ' stack' → logprob: -5.940609931945801
    4. '	stack' → logprob: -7.690609931945801
    5. '(n' → logprob: -8.0656099319458
    6. '.stack' → logprob: -9.6906099319458
    7. ' (' → logprob: -10.0656099319458
    8. '   ' → logprob: -10.1906099319458
    9. '(' → logprob: -10.5656099319458
    10. '((' → logprob: -10.8156099319458

Token 305: '       ' (ID: 309)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.00012856863031629473
    2. ' stack' → logprob: -9.000128746032715
    3. '(stack' → logprob: -12.250128746032715
    4. '	stack' → logprob: -16.1251277923584
    5. '```' → logprob: -16.6251277923584
    6. '   ' → logprob: -17.3751277923584
    7. '.stack' → logprob: -17.5001277923584
    8. '
' → logprob: -18.3751277923584
    9. '_stack' → logprob: -18.3751277923584
    10. 'stackoverflow' → logprob: -19.6251277923584

Token 306: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' (adapté à ' stack') → logprob: -6.392202976712724e-06
    2. ' stack' → logprob: -12.000006675720215
    3. '(stack' → logprob: -16.2500057220459
    4. '	stack' → logprob: -18.8750057220459
    5. '   ' → logprob: -19.8750057220459
    6. '(n' → logprob: -20.5000057220459
    7. 'n' → logprob: -21.1250057220459
    8. 'stock' → logprob: -22.0000057220459
    9. '(' → logprob: -22.1250057220459
    10. ' ' → logprob: -22.3750057220459

Token 307: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.0087516784551553e-05
    2. '.' → logprob: -12.00001049041748
    3. ' .' → logprob: -13.12501049041748
    4. '.app' → logprob: -13.87501049041748
    5. 'append' → logprob: -14.12501049041748
    6. '	append' → logprob: -17.000009536743164
    7. '_append' → logprob: -17.250009536743164
    8. '.Append' → logprob: -17.500009536743164
    9. '_APPEND' → logprob: -17.750009536743164
    10. '.extend' → logprob: -17.750009536743164

Token 308: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -1.9146995327901095e-05
    2. '(' → logprob: -11.125019073486328
    3. '(n' → logprob: -12.375019073486328
    4. '[(' → logprob: -17.250019073486328
    5. '(()' → logprob: -18.250019073486328
    6. ' ((' → logprob: -18.250019073486328
    7. '=(' → logprob: -19.000019073486328
    8. '(('' → logprob: -19.000019073486328
    9. '(
' → logprob: -19.125019073486328
    10. '__((' → logprob: -19.250019073486328

Token 309: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -2.2200749754119897e-06
    2. ' n' → logprob: -13.375001907348633
    3. '(n' → logprob: -14.500001907348633
    4. ')n' → logprob: -16.500001907348633
    5. '	n' → logprob: -19.125001907348633
    6. ')' → logprob: -19.125001907348633
    7. '[n' → logprob: -19.875001907348633
    8. '
' → logprob: -20.000001907348633
    9. '   ' → logprob: -20.250001907348633
    10. '(' → logprob: -20.250001907348633

Token 310: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11830558627843857
    2. 'n' → logprob: -2.2433056831359863
    3. '(n' → logprob: -5.368305683135986
    4. ',n' → logprob: -7.993305683135986
    5. ' n' → logprob: -8.243305206298828
    6. ',' → logprob: -9.368305206298828
    7. ' (' → logprob: -10.993305206298828
    8. '(' → logprob: -10.993305206298828
    9. '```' → logprob: -11.118305206298828
    10. '2' → logprob: -11.243305206298828

Token 311: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00026264708139933646
    2. ' ,' → logprob: -8.250262260437012
    3. ',a' → logprob: -14.250262260437012
    4. ',
' → logprob: -14.375262260437012
    5. 'a' → logprob: -16.250263214111328
    6. ' a' → logprob: -17.500263214111328
    7. ' ' → logprob: -17.750263214111328
    8. ')' → logprob: -18.000263214111328
    9. ',
' → logprob: -18.250263214111328
    10. ',n' → logprob: -18.625263214111328

Token 312: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.012248382903635502
    2. 'lb' → logprob: -4.762248516082764
    3. ' a' → logprob: -5.887248516082764
    4. ' lb' → logprob: -8.012248039245605
    5. 'la' → logprob: -8.887248039245605
    6. 'ra' → logprob: -9.137248039245605
    7. '   ' → logprob: -9.137248039245605
    8. 'ai' → logprob: -9.637248039245605
    9. ' ' → logprob: -10.637248039245605
    10. '    ' → logprob: -11.387248039245605

Token 313: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010586526477709413
    2. ',' → logprob: -6.876058578491211
    3. ' ,' → logprob: -11.376058578491211
    4. 'ai' → logprob: -12.626058578491211
    5. ')' → logprob: -12.876058578491211
    6. ' ' → logprob: -12.876058578491211
    7. '[' → logprob: -13.626058578491211
    8. '```' → logprob: -13.876058578491211
    9. 'a' → logprob: -14.376058578491211
    10. '_' → logprob: -14.501058578491211

Token 314: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015056940028443933
    2. ' ,' → logprob: -6.5015058517456055
    3. ',
' → logprob: -13.126505851745605
    4. ')' → logprob: -15.001505851745605
    5. '   ' → logprob: -15.126505851745605
    6. ' ' → logprob: -15.501505851745605
    7. ',
' → logprob: -15.751505851745605
    8. '    ' → logprob: -16.87650489807129
    9. '  ' → logprob: -17.12650489807129
    10. ',b' → logprob: -17.37650489807129

Token 315: ' a' (ID: 261)
  Prédit: 'remain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'remain' → logprob: -1.2944623231887817
    2. 'i' → logprob: -1.5444623231887817
    3. ' lb' → logprob: -1.7944623231887817
    4. 'lb' → logprob: -1.7944623231887817
    5. ' remain' → logprob: -1.9194623231887817
    6. ' i' → logprob: -3.544462203979492
    7. '   ' → logprob: -7.044462203979492
    8. ' ' → logprob: -7.169462203979492
    9. '    ' → logprob: -7.919462203979492
    10. '  ' → logprob: -8.044462203979492

Token 316: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0017201616428792477
    2. '1' → logprob: -6.376719951629639
    3. ' i' → logprob: -12.501720428466797
    4. 'I' → logprob: -12.751720428466797
    5. '
' → logprob: -13.251720428466797
    6. ')' → logprob: -13.376720428466797
    7. 'ai' → logprob: -14.001720428466797
    8. ',' → logprob: -14.376720428466797
    9. '[i' → logprob: -14.439220428466797
    10. '[' → logprob: -14.564220428466797

Token 317: ' ^' (ID: 7602)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.39275792241096497
    2. '^' → logprob: -1.2677578926086426
    3. ' ^' → logprob: -3.3927578926086426
    4. '+' → logprob: -5.017757892608643
    5. ' ,' → logprob: -6.392757892608643
    6. ')' → logprob: -7.392757892608643
    7. '|' → logprob: -8.5177583694458
    8. ' +' → logprob: -8.7677583694458
    9. '),' → logprob: -9.3927583694458
    10. ' ' → logprob: -9.5177583694458

Token 318: ' (' (ID: 350)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.3492446839809418
    2. '(' → logprob: -1.2242447137832642
    3. '(y' → logprob: -7.474244594573975
    4. ' y' → logprob: -9.599245071411133
    5. ' (' → logprob: -9.849245071411133
    6. 'x' → logprob: -10.349245071411133
    7. '(i' → logprob: -10.724245071411133
    8. '(x' → logprob: -10.724245071411133
    9. '((' → logprob: -11.849245071411133
    10. '(s' → logprob: -12.974245071411133

Token 319: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0898812860250473
    2. 'y' → logprob: -2.464881181716919
    3. '1' → logprob: -7.089881420135498
    4. ' (' → logprob: -10.46488094329834
    5. '(y' → logprob: -10.46488094329834
    6. 'x' → logprob: -11.21488094329834
    7. ' y' → logprob: -11.58988094329834
    8. '           ' → logprob: -11.71488094329834
    9. ')' → logprob: -12.58988094329834
    10. '
' → logprob: -13.08988094329834

Token 320: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.08802925795316696
    2. '(' → logprob: -2.588029146194458
    3. ' <<' → logprob: -5.838029384613037
    4. '(i' → logprob: -6.088029384613037
    5. 'y' → logprob: -6.213029384613037
    6. ' (' → logprob: -7.463029384613037
    7. 'i' → logprob: -7.463029384613037
    8. '[i' → logprob: -7.963029384613037
    9. '(y' → logprob: -9.338028907775879
    10. '```' → logprob: -9.588028907775879

Token 321: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0034420802257955074
    2. 'l' → logprob: -5.753442287445068
    3. ' i' → logprob: -8.37844181060791
    4. '(i' → logprob: -11.00344181060791
    5. '   ' → logprob: -12.50344181060791
    6. ' l' → logprob: -12.87844181060791
    7. '(' → logprob: -13.25344181060791
    8. '
' → logprob: -13.37844181060791
    9. ')' → logprob: -13.50344181060791
    10. ' ' → logprob: -14.12844181060791

Token 322: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.00022642381372861564
    2. ')' → logprob: -8.875226020812988
    3. ' ),' → logprob: -9.750226020812988
    4. '   ' → logprob: -11.375226020812988
    5. '       ' → logprob: -12.250226020812988
    6. ' ' → logprob: -12.875226020812988
    7. ',' → logprob: -13.000226020812988
    8. '),
' → logprob: -13.500226020812988
    9. '  ' → logprob: -13.750226020812988
    10. '    ' → logprob: -13.875226020812988

Token 323: ' remain' (ID: 12760)
  Prédit: 'remain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remain' → logprob: -0.5232177972793579
    2. ' remain' → logprob: -0.8982177972793579
    3. 'rem' → logprob: -10.398218154907227
    4. ' ' → logprob: -11.023218154907227
    5. '    ' → logprob: -11.523218154907227
    6. '   ' → logprob: -12.023218154907227
    7. '
' → logprob: -12.773218154907227
    8. ' 
' → logprob: -13.023218154907227
    9. 'l' → logprob: -13.023218154907227
    10. '           ' → logprob: -13.398218154907227

Token 324: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.3199920178740285e-05
    2. '.copy' → logprob: -11.000022888183594
    3. ',' → logprob: -13.375022888183594
    4. 'copy' → logprob: -14.000022888183594
    5. '```' → logprob: -14.000022888183594
    6. '...' → logprob: -14.125022888183594
    7. ')' → logprob: -14.500022888183594
    8. '(copy' → logprob: -14.750022888183594
    9. '[' → logprob: -15.125022888183594
    10. '_copy' → logprob: -15.250022888183594

Token 325: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.25271639227867126
    2. '.copy' → logprob: -1.5027164220809937
    3. 'copy' → logprob: -7.502716541290283
    4. ' ,' → logprob: -8.502716064453125
    5. ' copy' → logprob: -11.627716064453125
    6. '       ' → logprob: -12.002716064453125
    7. '   ' → logprob: -12.377716064453125
    8. ')' → logprob: -12.502716064453125
    9. '     ' → logprob: -13.502716064453125
    10. ' ' → logprob: -13.502716064453125

Token 326: ' ai' (ID: 8440)
  Prédit: 'ai'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ai' → logprob: -0.0022146080154925585
    2. ' ai' → logprob: -6.127214431762695
    3. '   ' → logprob: -11.252214431762695
    4. '       ' → logprob: -11.877214431762695
    5. '     ' → logprob: -13.252214431762695
    6. ' ' → logprob: -13.502214431762695
    7. '  ' → logprob: -13.627214431762695
    8. '      ' → logprob: -13.627214431762695
    9. '    ' → logprob: -13.627214431762695
    10. '           ' → logprob: -14.127214431762695

Token 327: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.60414821645827e-06
    2. '[' → logprob: -13.250004768371582
    3. '```' → logprob: -13.500004768371582
    4. ' ' → logprob: -14.500004768371582
    5. 'ai' → logprob: -15.000004768371582
    6. '   ' → logprob: -15.875004768371582
    7. '+' → logprob: -16.125003814697266
    8. ')' → logprob: -16.875003814697266
    9. '``' → logprob: -17.000003814697266
    10. ',' → logprob: -17.625003814697266

Token 328: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000977075076662004
    2. ' ,' → logprob: -7.000977039337158
    3. '   ' → logprob: -10.625977516174316
    4. '       ' → logprob: -12.000977516174316
    5. '    ' → logprob: -12.125977516174316
    6. ')' → logprob: -12.125977516174316
    7. '  ' → logprob: -12.125977516174316
    8. ' ' → logprob: -12.500977516174316
    9. '+' → logprob: -12.500977516174316
    10. '     ' → logprob: -12.750977516174316

Token 329: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.1249866634607315
    2. 'width' → logprob: -2.6249866485595703
    3. ' ans' → logprob: -3.2499866485595703
    4. ' width' → logprob: -5.12498664855957
    5. '    ' → logprob: -9.49998664855957
    6. ' ' → logprob: -9.62498664855957
    7. '   ' → logprob: -9.99998664855957
    8. '        ' → logprob: -10.37498664855957
    9. '       ' → logprob: -10.49998664855957
    10. '  ' → logprob: -10.87498664855957

Token 330: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03355579450726509
    2. ',' → logprob: -3.533555746078491
    3. '2' → logprob: -6.15855598449707
    4. ')' → logprob: -7.78355598449707
    5. ' ,' → logprob: -8.40855598449707
    6. '...' → logprob: -8.53355598449707
    7. '```' → logprob: -8.65855598449707
    8. 'width' → logprob: -9.15855598449707
    9. '   ' → logprob: -9.28355598449707
    10. ',width' → logprob: -9.53355598449707

Token 331: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00045307583059184253
    2. ' ,' → logprob: -7.750452995300293
    3. ',width' → logprob: -10.750452995300293
    4. '   ' → logprob: -15.125452995300293
    5. '),' → logprob: -15.750452995300293
    6. '       ' → logprob: -16.00045394897461
    7. 'width' → logprob: -16.12545394897461
    8. ',
' → logprob: -16.62545394897461
    9. ' ' → logprob: -17.00045394897461
    10. ')' → logprob: -17.00045394897461

Token 332: ' width' (ID: 4345)
  Prédit: 'width'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'width' → logprob: -0.00671584764495492
    2. ' width' → logprob: -5.006715774536133
    3. '(width' → logprob: -15.881715774536133
    4. '   ' → logprob: -16.256715774536133
    5. ' ' → logprob: -16.506715774536133
    6. '           ' → logprob: -16.881715774536133
    7. ',width' → logprob: -16.881715774536133
    8. '       ' → logprob: -16.881715774536133
    9. '	width' → logprob: -17.256715774536133
    10. '    ' → logprob: -17.506715774536133

Token 333: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0007510208524763584
    2. 'width' → logprob: -7.37575101852417
    3. ' ' → logprob: -9.875751495361328
    4. '   ' → logprob: -10.625751495361328
    5. '       ' → logprob: -11.250751495361328
    6. ' width' → logprob: -11.875751495361328
    7. '1' → logprob: -12.125751495361328
    8. '[' → logprob: -12.375751495361328
    9. '```' → logprob: -12.500751495361328
    10. '    ' → logprob: -13.250751495361328

Token 334: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003825293097179383
    2. ' ,' → logprob: -7.875382423400879
    3. ',
' → logprob: -13.875382423400879
    4. ')' → logprob: -14.750382423400879
    5. '   ' → logprob: -15.375382423400879
    6. ',l' → logprob: -16.000383377075195
    7. '       ' → logprob: -16.125383377075195
    8. '),' → logprob: -16.375383377075195
    9. '))' → logprob: -16.625383377075195
    10. ' ' → logprob: -16.875383377075195

Token 335: ' i' (ID: 575)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.004643603693693876
    2. 'i' → logprob: -5.504643440246582
    3. 'None' → logprob: -8.254643440246582
    4. ' l' → logprob: -8.629643440246582
    5. 'y' → logprob: -10.004643440246582
    6. '   ' → logprob: -10.254643440246582
    7. ' ' → logprob: -11.567143440246582
    8. '	l' → logprob: -11.942143440246582
    9. ' i' → logprob: -12.379643440246582
    10. '  ' → logprob: -12.504643440246582

Token 336: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00015133652777876705
    2. '))
' → logprob: -9.375151634216309
    3. ')' → logprob: -10.000151634216309
    4. ' ))' → logprob: -11.000151634216309
    5. ')))' → logprob: -12.875151634216309
    6. '+' → logprob: -14.875151634216309
    7. ''))' → logprob: -14.875151634216309
    8. '   ' → logprob: -15.500151634216309
    9. '()))' → logprob: -15.625151634216309
    10. '"))' → logprob: -15.875151634216309

Token 337: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 338: ' print' (ID: 2123)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.015434608794748783
    2. '<|end|>' → logprob: -4.765434741973877
    3. ']' → logprob: -5.640434741973877
    4. '[' → logprob: -6.765434741973877
    5. '#' → logprob: -7.765434741973877
    6. 'n' → logprob: -8.015434265136719
    7. '```' → logprob: -8.015434265136719
    8. '   ' → logprob: -8.015434265136719
    9. '}' → logprob: -8.890434265136719
    10. '0' → logprob: -9.640434265136719

Token 339: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.8886183500289917
    2. '(' → logprob: -1.1386183500289917
    3. '(ans' → logprob: -1.3886183500289917
    4. '(*' → logprob: -4.013618469238281
    5. '(len' → logprob: -7.638618469238281
    6. ' (' → logprob: -8.888618469238281
    7. '('(' → logprob: -9.513618469238281
    8. '("' → logprob: -10.138618469238281
    9. '(sum' → logprob: -10.388618469238281
    10. '(tuple' → logprob: -10.513618469238281

Token 340: 'YES' (ID: 31958)
  Prédit: ' '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '.' → logprob: -0.49276140332221985
    2. ''.' → logprob: -1.6177613735198975
    3. ''' → logprob: -2.3677613735198975
    4. '0' → logprob: -3.4927613735198975
    5. 'ans' → logprob: -4.242761611938477
    6. 'YES' → logprob: -4.242761611938477
    7. '1' → logprob: -4.992761611938477
    8. 'a' → logprob: -5.367761611938477
    9. '''.' → logprob: -5.742761611938477
    10. '".' → logprob: -5.992761611938477

Token 341: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.030195532366633415
    2. ')' → logprob: -3.530195474624634
    3. '')
' → logprob: -7.780195713043213
    4. '")' → logprob: -11.655195236206055
    5. ')
' → logprob: -12.155195236206055
    6. ')')
' → logprob: -12.530195236206055
    7. '   ' → logprob: -13.155195236206055
    8. ')'' → logprob: -13.530195236206055
    9. ' )' → logprob: -14.030195236206055
    10. '')
' → logprob: -14.405195236206055

Token 342: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 343: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.5873892307281494
    2. 'for' → logprob: -0.9623892307281494
    3. ' for' → logprob: -3.0873892307281494
    4. ' print' → logprob: -5.33738899230957
    5. 'ans' → logprob: -5.58738899230957
    6. '[' → logprob: -5.71238899230957
    7. ' ans' → logprob: -6.08738899230957
    8. ''' → logprob: -6.58738899230957
    9. '[
' → logprob: -8.33738899230957
    10. '(ans' → logprob: -8.46238899230957

Token 344: '(*' (ID: 9000)
  Prédit: '(*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.011090856045484543
    2. '('' → logprob: -4.5110907554626465
    3. '(' → logprob: -10.261091232299805
    4. '(*(' → logprob: -12.386091232299805
    5. '(ans' → logprob: -12.761091232299805
    6. '("' → logprob: -14.511091232299805
    7. '('\' → logprob: -15.636091232299805
    8. ' (*' → logprob: -16.011091232299805
    9. '(*)' → logprob: -16.136091232299805
    10. '(
' → logprob: -16.511091232299805

Token 345: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.0325924449716695e-05
    2. ' ans' → logprob: -11.50001049041748
    3. '(ans' → logprob: -16.000009536743164
    4. '[' → logprob: -17.375009536743164
    5. 'answer' → logprob: -18.750009536743164
    6. '	ans' → logprob: -19.250009536743164
    7. '   ' → logprob: -20.250009536743164
    8. 'map' → logprob: -21.000009536743164
    9. 'a' → logprob: -21.250009536743164
    10. 'ANS' → logprob: -21.375009536743164

Token 346: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.842555426876061e-06
    2. '[' → logprob: -13.375004768371582
    3. ' )' → logprob: -13.750004768371582
    4. ')
' → logprob: -14.250004768371582
    5. '))' → logprob: -14.250004768371582
    6. ')`' → logprob: -15.000004768371582
    7. '())' → logprob: -15.750004768371582
    8. '[])' → logprob: -16.6250057220459
    9. '`)' → logprob: -16.6250057220459
    10. '')' → logprob: -16.8750057220459


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 344
Tokens correctement prédits (1ère position, stricte): 135
Tokens correctement prédits (1ère position, avec adaptation): 143
Tokens correctement prédits (top 10): 293
Précision stricte (1ère position): 39.24%
Précision adaptée (1ère position): 41.57%
Précision (top 10): 85.17%
================================================================================
