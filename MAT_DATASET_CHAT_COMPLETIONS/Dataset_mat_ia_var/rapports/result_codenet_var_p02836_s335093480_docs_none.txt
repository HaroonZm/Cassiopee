================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:35:01
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
s = input()
count = 0
for i in range(len(s)//2):
    if s[i] != s[-i-1]:
        count += 1
print(count)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 's' (ID: 82)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' input' (ID: 3422)
  → Token d'amorce (pas de prédiction)

Token 3: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0039759352803230286
    2. ''' → logprob: -6.753975868225098
    3. '()' → logprob: -7.128975868225098
    4. '('' → logprob: -7.128975868225098
    5. '`' → logprob: -7.253975868225098
    6. '"' → logprob: -8.878975868225098
    7. '```' → logprob: -8.878975868225098
    8. '("("' → logprob: -9.378975868225098
    9. '(
' → logprob: -9.753975868225098
    10. '(`' → logprob: -10.753975868225098

Token 4: 'count' (ID: 5420)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.30454960465431213
    2. 'if' → logprob: -2.0545496940612793
    3. '[' → logprob: -3.1795496940612793
    4. '+' → logprob: -3.4295496940612793
    5. '[::-' → logprob: -4.179549694061279
    6. 'print' → logprob: -4.804549694061279
    7. '=' → logprob: -5.304549694061279
    8. '_' → logprob: -5.304549694061279
    9. '```' → logprob: -5.304549694061279
    10. ''' → logprob: -5.554549694061279

Token 5: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4699438214302063
    2. '(' → logprob: -1.2199437618255615
    3. 's' → logprob: -2.5949437618255615
    4. '=' → logprob: -6.094944000244141
    5. '[' → logprob: -6.219944000244141
    6. '(s' → logprob: -8.46994400024414
    7. ')' → logprob: -9.71994400024414
    8. '_s' → logprob: -9.71994400024414
    9. '_space' → logprob: -9.84494400024414
    10. '.' → logprob: -9.96994400024414

Token 6: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2649620771408081
    2. ' ' → logprob: -2.1399621963500977
    3. '{}' → logprob: -2.2649621963500977
    4. ' {}' → logprob: -4.514962196350098
    5. '{' → logprob: -8.514962196350098
    6. 's' → logprob: -9.764962196350098
    7. '1' → logprob: -10.639962196350098
    8. ' s' → logprob: -11.514962196350098
    9. ' {' → logprob: -11.639962196350098
    10. '{'' → logprob: -12.639962196350098

Token 7: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.38909831643104553
    2. '{}' → logprob: -1.1390982866287231
    3. '{' → logprob: -6.139098167419434
    4. ' {}' → logprob: -10.514098167419434
    5. ' ' → logprob: -11.514098167419434
    6. '{'' → logprob: -12.139098167419434
    7. 's' → logprob: -12.514098167419434
    8. '1' → logprob: -12.514098167419434
    9. '{}
' → logprob: -12.514098167419434
    10. 'dict' → logprob: -12.764098167419434

Token 8: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.29527339339256287
    2. '\n' → logprob: -2.5452733039855957
    3. ' for' → logprob: -2.7952733039855957
    4. '
' → logprob: -3.1702733039855957
    5. '\' → logprob: -3.6702733039855957
    6. '```' → logprob: -3.9202733039855957
    7. ' 
' → logprob: -4.795273303985596
    8. 'i' → logprob: -5.045273303985596
    9. '' → logprob: -5.670273303985596
    10. ':' → logprob: -5.920273303985596

Token 9: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00040815072134137154
    2. ' for' → logprob: -8.625408172607422
    3. 'f' → logprob: -9.250408172607422
    4. '```' → logprob: -9.250408172607422
    5. '
' → logprob: -11.625408172607422
    6. 'i' → logprob: -12.000408172607422
    7. ':' → logprob: -12.000408172607422
    8. '`' → logprob: -12.250408172607422
    9. ' 
' → logprob: -12.625408172607422
    10. '\n' → logprob: -13.125408172607422

Token 10: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.009073508903384209
    2. ' s' → logprob: -5.509073734283447
    3. '  ' → logprob: -5.759073734283447
    4. ' i' → logprob: -6.384073734283447
    5. 's' → logprob: -10.009073257446289
    6. '_' → logprob: -10.509073257446289
    7. 'i' → logprob: -10.884073257446289
    8. ' c' → logprob: -11.134073257446289
    9. ''' → logprob: -12.009073257446289
    10. ' _' → logprob: -12.259073257446289

Token 11: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.44859039783477783
    2. ' ' → logprob: -1.6985903978347778
    3. 'in' → logprob: -1.8235903978347778
    4. '  ' → logprob: -4.573590278625488
    5. ' s' → logprob: -5.948590278625488
    6. 's' → logprob: -6.448590278625488
    7. '[' → logprob: -7.573590278625488
    8. ')' → logprob: -8.323590278625488
    9. '<|end|>' → logprob: -8.323590278625488
    10. 'range' → logprob: -8.448590278625488

Token 12: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.1050201952457428
    2. ' s' → logprob: -2.85502028465271
    3. 'range' → logprob: -3.35502028465271
    4. 's' → logprob: -4.980020046234131
    5. ' ' → logprob: -7.980020046234131
    6. '(range' → logprob: -12.730020523071289
    7. '  ' → logprob: -12.730020523071289
    8. '"' → logprob: -13.355020523071289
    9. '	range' → logprob: -13.855020523071289
    10. ' ' → logprob: -13.980020523071289

Token 13: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.3872126340866089
    2. '(' → logprob: -1.1372126340866089
    3. '(s' → logprob: -8.137212753295898
    4. '(length' → logprob: -10.512212753295898
    5. '(n' → logprob: -12.137212753295898
    6. 's' → logprob: -12.762212753295898
    7. ' (' → logprob: -13.137212753295898
    8. '(l' → logprob: -13.137212753295898
    9. 'len' → logprob: -13.387212753295898
    10. '((' → logprob: -13.637212753295898

Token 14: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0017195657128468156
    2. '(' → logprob: -6.3767194747924805
    3. 's' → logprob: -11.00171947479248
    4. ')' → logprob: -15.37671947479248
    5. '(count' → logprob: -15.75171947479248
    6. '(
' → logprob: -16.001720428466797
    7. '(i' → logprob: -16.376720428466797
    8. ' (' → logprob: -17.001720428466797
    9. '(n' → logprob: -17.001720428466797
    10. '(a' → logprob: -18.126720428466797

Token 15: ')//' (ID: 60375)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.018715323880314827
    2. '))' → logprob: -4.5187153816223145
    3. '):' → logprob: -5.2687153816223145
    4. ')):
' → logprob: -7.1437153816223145
    5. '[' → logprob: -7.3937153816223145
    6. ')' → logprob: -7.5187153816223145
    7. '[i' → logprob: -8.393714904785156
    8. 's' → logprob: -8.893714904785156
    9. '[s' → logprob: -9.768714904785156
    10. ':' → logprob: -10.768714904785156

Token 16: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0021500231232494116
    2. ' ' → logprob: -6.252150058746338
    3. '3' → logprob: -8.62714958190918
    4. '1' → logprob: -10.87714958190918
    5. '4' → logprob: -11.25214958190918
    6. '5' → logprob: -12.62714958190918
    7. '10' → logprob: -13.93964958190918
    8. '6' → logprob: -14.18964958190918
    9. '20' → logprob: -14.18964958190918
    10. '```' → logprob: -14.37714958190918

Token 17: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004546300508081913
    2. '+' → logprob: -6.129546165466309
    3. ')' → logprob: -6.754546165466309
    4. ':' → logprob: -7.504546165466309
    5. ' ):' → logprob: -7.629546165466309
    6. '+:' → logprob: -9.129546165466309
    7. '):
' → logprob: -10.754546165466309
    8. '```' → logprob: -12.504546165466309
    9. ':)' → logprob: -13.129546165466309
    10. '():' → logprob: -13.254546165466309

Token 18: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29030904173851013
    2. ' ' → logprob: -2.165308952331543
    3. ' if' → logprob: -2.290308952331543
    4. 'if' → logprob: -4.540308952331543
    5. '<|end|>' → logprob: -4.790308952331543
    6. '    ' → logprob: -5.040308952331543
    7. '  ' → logprob: -5.915308952331543
    8. '```' → logprob: -6.040308952331543
    9. ':' → logprob: -6.540308952331543
    10. '[' → logprob: -6.915308952331543

Token 19: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.34602490067481995
    2. '   ' → logprob: -1.7210248708724976
    3. 'if' (adapté à ' if') → logprob: -2.221024990081787
    4. ' ' → logprob: -5.721024990081787
    5. '    ' → logprob: -6.721024990081787
    6. 's' → logprob: -8.346024513244629
    7. ' s' → logprob: -8.721024513244629
    8. '  ' → logprob: -8.971024513244629
    9. '```' → logprob: -10.221024513244629
    10. '       ' → logprob: -10.846024513244629

Token 20: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.0004883344518020749
    2. 's' → logprob: -7.62548828125
    3. ' ' → logprob: -15.37548828125
    4. '    ' → logprob: -17.25048828125
    5. ' ' → logprob: -17.25048828125
    6. '(s' → logprob: -18.00048828125
    7. ' not' → logprob: -18.12548828125
    8. '	s' → logprob: -18.50048828125
    9. '```' → logprob: -18.62548828125
    10. '   ' → logprob: -18.87548828125

Token 21: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00023202638840302825
    2. '[' → logprob: -8.375231742858887
    3. '[count' → logprob: -14.625231742858887
    4. '[I' → logprob: -14.875231742858887
    5. '==' → logprob: -15.875231742858887
    6. '```' → logprob: -16.625232696533203
    7. '[int' → logprob: -16.875232696533203
    8. ' [' → logprob: -17.000232696533203
    9. '[index' → logprob: -17.375232696533203
    10. '[s' → logprob: -17.375232696533203

Token 22: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.9643049240112305
    2. ']' → logprob: -1.0893049240112305
    3. '!=' → logprob: -1.8393049240112305
    4. ']==' → logprob: -2.7143049240112305
    5. ' ==' → logprob: -3.9643049240112305
    6. ']!=' → logprob: -4.0893049240112305
    7. ' !=' → logprob: -4.4643049240112305
    8. '=' → logprob: -4.8393049240112305
    9. ' ]' → logprob: -6.9643049240112305
    10. '   ' → logprob: -7.9643049240112305

Token 23: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.028524328023195267
    2. ' !=' → logprob: -3.653524398803711
    3. '==' → logprob: -6.153524398803711
    4. ' ==' → logprob: -9.653524398803711
    5. '=' → logprob: -10.653524398803711
    6. '()!=' → logprob: -13.403524398803711
    7. ']!=' → logprob: -13.528524398803711
    8. '!==' → logprob: -13.653524398803711
    9. ')!=' → logprob: -14.028524398803711
    10. ' ' → logprob: -14.153524398803711

Token 24: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.38687315583229065
    2. ' s' → logprob: -1.1368731260299683
    3. ' ' → logprob: -13.511873245239258
    4. '	s' → logprob: -15.511873245239258
    5. '   ' → logprob: -15.636873245239258
    6. ''s' → logprob: -15.886873245239258
    7. '_s' → logprob: -16.386873245239258
    8. '  ' → logprob: -16.636873245239258
    9. '(s' → logprob: -16.761873245239258
    10. ')s' → logprob: -17.261873245239258

Token 25: '[-' (ID: 17503)
  Prédit: '[len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[len' → logprob: -0.04418012127280235
    2. '[-' → logprob: -3.669180154800415
    3. '[' → logprob: -4.169179916381836
    4. '[::-' → logprob: -7.044179916381836
    5. ']' → logprob: -8.044179916381836
    6. '[i' → logprob: -8.419179916381836
    7. '][' → logprob: -9.169179916381836
    8. '-' → logprob: -9.169179916381836
    9. '][-' → logprob: -9.294179916381836
    10. '```' → logprob: -9.294179916381836

Token 26: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07847525924444199
    2. '1' → logprob: -3.3284752368927
    3. '(i' → logprob: -3.3284752368927
    4. '(' → logprob: -5.703475475311279
    5. '{i' → logprob: -8.328474998474121
    6. ' i' → logprob: -8.828474998474121
    7. '[i' → logprob: -11.203474998474121
    8. '-i' → logprob: -11.453474998474121
    9. ' (' → logprob: -11.828474998474121
    10. ' ' → logprob: -12.078474998474121

Token 27: '-' (ID: 12)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08957978338003159
    2. '-' → logprob: -2.4645798206329346
    3. ' -' → logprob: -7.7145795822143555
    4. ' ' → logprob: -8.839579582214355
    5. '```' → logprob: -10.089579582214355
    6. 'i' → logprob: -12.464579582214355
    7. '   ' → logprob: -14.214579582214355
    8. '-i' → logprob: -14.464579582214355
    9. '``' → logprob: -14.964579582214355
    10. '  ' → logprob: -14.964579582214355

Token 28: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.03521392197581e-05
    2. ' ' → logprob: -10.500030517578125
    3. '2' → logprob: -13.000030517578125
    4. '```' → logprob: -15.750030517578125
    5. '-' → logprob: -16.375030517578125
    6. '   ' → logprob: -16.500030517578125
    7. ']' → logprob: -17.000030517578125
    8. '１' → logprob: -17.000030517578125
    9. '۱' → logprob: -17.125030517578125
    10. 'i' → logprob: -17.500030517578125

Token 29: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.048982229083776474
    2. '):' → logprob: -3.5489821434020996
    3. ':' → logprob: -4.1739821434021
    4. ']' → logprob: -5.6739821434021
    5. ']):' → logprob: -9.423982620239258
    6. ')' → logprob: -10.673982620239258
    7. ']:
' → logprob: -10.798982620239258
    8. ' ):' → logprob: -10.798982620239258
    9. '"]:' → logprob: -11.298982620239258
    10. '']:' → logprob: -11.423982620239258

Token 30: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005433809128589928
    2. '   ' → logprob: -8.625543594360352
    3. 'count' → logprob: -8.625543594360352
    4. ' count' → logprob: -9.625543594360352
    5. '        
' → logprob: -10.250543594360352
    6. '
' → logprob: -11.125543594360352
    7. '<|end|>' → logprob: -11.375543594360352
    8. ' ' → logprob: -11.875543594360352
    9. '     ' → logprob: -12.125543594360352
    10. '1' → logprob: -12.250543594360352

Token 31: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.08687486499547958
    2. '       ' → logprob: -2.8368749618530273
    3. ' count' → logprob: -3.8368749618530273
    4. '   ' → logprob: -6.086874961853027
    5. '
' → logprob: -7.961874961853027
    6. '           ' → logprob: -8.836874961853027
    7. '        
' → logprob: -9.836874961853027
    8. '	count' → logprob: -9.836874961853027
    9. '```' → logprob: -9.961874961853027
    10. ' 
' → logprob: -10.211874961853027

Token 32: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.01824558526277542
    2. '+=' → logprob: -4.268245697021484
    3. '+' → logprob: -5.518245697021484
    4. ' +' → logprob: -10.643245697021484
    5. ' =' → logprob: -11.268245697021484
    6. '=' → logprob: -11.643245697021484
    7. ' ' → logprob: -12.143245697021484
    8. '+='' → logprob: -13.143245697021484
    9. '    ' → logprob: -13.643245697021484
    10. ']+=' → logprob: -13.893245697021484

Token 33: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.56102097814437e-05
    2. ' ' → logprob: -10.000045776367188
    3. '   ' → logprob: -16.750045776367188
    4. '2' → logprob: -18.375045776367188
    5. '```' → logprob: -18.562545776367188
    6. '<|end|>' → logprob: -18.562545776367188
    7. '  ' → logprob: -19.062545776367188
    8. '１' → logprob: -19.312545776367188
    9. '۱' → logprob: -19.312545776367188
    10. '       ' → logprob: -19.437545776367188

Token 34: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.688212614681106e-05
    2. ' ' → logprob: -11.000017166137695
    3. '   ' → logprob: -16.375017166137695
    4. '2' → logprob: -17.000017166137695
    5. '  ' → logprob: -18.125017166137695
    6. '```' → logprob: -18.125017166137695
    7. '１' → logprob: -18.687517166137695
    8. '0' → logprob: -18.937517166137695
    9. 's' → logprob: -19.125017166137695
    10. '    ' → logprob: -19.187517166137695

Token 35: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1105579137802124
    2. 'print' → logprob: -1.1105579137802124
    3. '<|end|>' → logprob: -1.3605579137802124
    4. '\n' → logprob: -3.110558032989502
    5. ')' → logprob: -3.860558032989502
    6. '```' → logprob: -4.985558032989502
    7. 'newline' → logprob: -6.110558032989502
    8. ' print' → logprob: -6.360558032989502
    9. '*' → logprob: -6.610558032989502
    10. '\' → logprob: -6.610558032989502

Token 36: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.12158607691526413
    2. '
' → logprob: -2.2465860843658447
    3. '<|end|>' → logprob: -5.246585845947266
    4. '\n' → logprob: -7.121585845947266
    5. 'if' → logprob: -7.371585845947266
    6. '```' → logprob: -7.496585845947266
    7. ' print' → logprob: -7.996585845947266
    8. ')' → logprob: -8.371585845947266
    9. '#' → logprob: -8.621585845947266
    10. '  
' → logprob: -8.996585845947266

Token 37: '(count' (ID: 25892)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.25229132175445557
    2. '(count' → logprob: -1.5022913217544556
    3. '()' → logprob: -8.877291679382324
    4. '(s' → logprob: -9.502291679382324
    5. '('' → logprob: -9.627291679382324
    6. '((' → logprob: -10.752291679382324
    7. '("("' → logprob: -10.752291679382324
    8. '(len' → logprob: -11.002291679382324
    9. '(sum' → logprob: -12.002291679382324
    10. '(max' → logprob: -13.002291679382324

Token 38: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1472419600977446e-06
    2. ' )' → logprob: -14.250000953674316
    3. '))' → logprob: -15.125000953674316
    4. ')`' → logprob: -17.375001907348633
    5. '')' → logprob: -18.625001907348633
    6. '`)' → logprob: -18.750001907348633
    7. '）' → logprob: -19.250001907348633
    8. ')}' → logprob: -19.500001907348633
    9. ')**' → logprob: -19.625001907348633
    10. ')
' → logprob: -19.625001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 36
Tokens correctement prédits (1ère position, stricte): 19
Tokens correctement prédits (1ère position, avec adaptation): 20
Tokens correctement prédits (top 10): 32
Précision stricte (1ère position): 52.78%
Précision adaptée (1ère position): 55.56%
Précision (top 10): 88.89%
================================================================================
