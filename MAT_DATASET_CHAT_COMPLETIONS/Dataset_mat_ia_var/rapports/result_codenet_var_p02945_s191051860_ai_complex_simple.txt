================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:48:44
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce
from operator import add, sub, mul

(a, b), ops = tuple(map(int, input().split())), (add, sub, mul)

print(reduce(lambda x, y: x if x > y else y, (op(a, b) for op in ops)))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -0.29569441080093384
    2. 'partial' → logprob: -1.545694351196289
    3. 'reduce' → logprob: -3.295694351196289
    4. 'l' → logprob: -5.920694351196289
    5. ' wraps' → logprob: -6.295694351196289
    6. 'cached' → logprob: -7.295694351196289
    7. 'cache' → logprob: -8.295694351196289
    8. 'cmp' → logprob: -8.795694351196289
    9. '`' → logprob: -9.795694351196289
    10. '```' → logprob: -9.795694351196289

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01989164389669895
    2. '(lambda' → logprob: -4.644891738891602
    3. '.' → logprob: -5.394891738891602
    4. ',' → logprob: -5.894891738891602
    5. '\' → logprob: -7.144891738891602
    6. ' (' → logprob: -7.519891738891602
    7. '```' → logprob: -8.019891738891602
    8. 'def' → logprob: -8.644891738891602
    9. 'lambda' → logprob: -8.894891738891602
    10. '`' → logprob: -8.894891738891602

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.028136486187577248
    2. 'def' → logprob: -4.653136253356934
    3. ' ' → logprob: -4.778136253356934
    4. '\' → logprob: -5.153136253356934
    5. '(
' → logprob: -7.278136253356934
    6. ',' → logprob: -7.403136253356934
    7. '```' → logprob: -7.653136253356934
    8. ' (' → logprob: -8.153136253356934
    9. 'r' → logprob: -8.653136253356934
    10. 'd' → logprob: -8.778136253356934

Token 6: ' operator' (ID: 11019)
  Prédit: ' operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.3917332589626312
    2. ' math' → logprob: -1.3917332887649536
    3. ' itertools' → logprob: -3.141733169555664
    4. ' collections' → logprob: -3.891733169555664
    5. 'operator' → logprob: -4.766733169555664
    6. 'math' → logprob: -6.266733169555664
    7. ' os' → logprob: -7.516733169555664
    8. ' typing' → logprob: -8.016733169555664
    9. ' ' → logprob: -8.266733169555664
    10. 'collections' → logprob: -8.391733169555664

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.023960482329130173
    2. 'import' → logprob: -3.898960590362549
    3. '.' → logprob: -5.898960590362549
    4. ' ' → logprob: -7.398960590362549
    5. ' .' → logprob: -10.14896011352539
    6. '	import' → logprob: -11.89896011352539
    7. '.import' → logprob: -12.77396011352539
    8. '<|end|>' → logprob: -13.27396011352539
    9. '_import' → logprob: -13.64896011352539
    10. ' Import' → logprob: -13.64896011352539

Token 8: ' add' (ID: 1147)
  Prédit: ' add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.32611098885536194
    2. ' import' → logprob: -1.7011109590530396
    3. ' mul' → logprob: -3.076111078262329
    4. 'add' → logprob: -3.701111078262329
    5. ' ' → logprob: -4.07611083984375
    6. 'import' → logprob: -5.45111083984375
    7. 'mul' → logprob: -6.20111083984375
    8. ' item' → logprob: -7.07611083984375
    9. ' icon' → logprob: -8.45111083984375
    10. '```' → logprob: -9.32611083984375

Token 9: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05271875485777855
    2. '(
' → logprob: -4.052718639373779
    3. ',' → logprob: -4.552718639373779
    4. '\n' → logprob: -4.677718639373779
    5. '\' → logprob: -4.802718639373779
    6. '#' → logprob: -6.677718639373779
    7. '`' → logprob: -6.802718639373779
    8. '
' → logprob: -7.677718639373779
    9. '()' → logprob: -7.802718639373779
    10. ' ' → logprob: -7.927718639373779

Token 10: ' sub' (ID: 1543)
  Prédit: ' mul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mul' → logprob: -0.597747802734375
    2. 'mul' → logprob: -0.847747802734375
    3. ' sub' → logprob: -4.597747802734375
    4. 'sub' → logprob: -4.597747802734375
    5. ' i' → logprob: -7.722747802734375
    6. '```' → logprob: -8.347747802734375
    7. 'getitem' → logprob: -8.472747802734375
    8. 'i' → logprob: -8.472747802734375
    9. ' ' → logprob: -9.597747802734375
    10. 'item' → logprob: -9.972747802734375

Token 11: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07778079807758331
    2. ',' → logprob: -3.3277807235717773
    3. '\n' → logprob: -4.202780723571777
    4. '\' → logprob: -4.702780723571777
    5. '(
' → logprob: -4.827780723571777
    6. '#' → logprob: -6.452780723571777
    7. '```' → logprob: -6.452780723571777
    8. '`' → logprob: -6.702780723571777
    9. 'def' → logprob: -7.452780723571777
    10. '\(' → logprob: -7.702780723571777

Token 12: ' mul' (ID: 9975)
  Prédit: ' mul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mul' → logprob: -0.030251286923885345
    2. 'mul' → logprob: -3.5302512645721436
    3. ' tr' → logprob: -8.780251502990723
    4. ' ' → logprob: -9.405251502990723
    5. '_mul' → logprob: -9.905251502990723
    6. ' xor' → logprob: -10.280251502990723
    7. '```' → logprob: -10.780251502990723
    8. ' and' → logprob: -11.280251502990723
    9. ' import' → logprob: -11.280251502990723
    10. 'pow' → logprob: -11.405251502990723

Token 13: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.23041430115699768
    2. ',' → logprob: -2.105414390563965
    3. 'def' → logprob: -3.480414390563965
    4. '\' → logprob: -4.105414390563965
    5. '\n' → logprob: -4.605414390563965
    6. '```' → logprob: -4.855414390563965
    7. '(
' → logprob: -5.355414390563965
    8. '#' → logprob: -5.605414390563965
    9. '[' → logprob: -6.480414390563965
    10. '`' → logprob: -6.480414390563965

Token 14: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2936159074306488
    2. ',' → logprob: -1.5436159372329712
    3. '#' → logprob: -4.168615818023682
    4. 'def' → logprob: -4.418615818023682
    5. '(
' → logprob: -5.918615818023682
    6. '*' → logprob: -6.168615818023682
    7. '+' → logprob: -6.293615818023682
    8. ')' → logprob: -6.668615818023682
    9. '```' → logprob: -7.043615818023682
    10. '`' → logprob: -7.168615818023682

Token 15: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8978937864303589
    2. ')' → logprob: -1.5228937864303589
    3. ' +' → logprob: -1.7728937864303589
    4. ' ,' → logprob: -2.8978939056396484
    5. '+' → logprob: -3.0228939056396484
    6. '[' → logprob: -3.2728939056396484
    7. ' )' → logprob: -3.7728939056396484
    8. ' *' → logprob: -3.7728939056396484
    9. ' ' → logprob: -4.897893905639648
    10. '*' → logprob: -6.397893905639648

Token 16: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.11357735842466354
    2. 'b' → logprob: -2.238577365875244
    3. ' ' → logprob: -8.113576889038086
    4. 'a' → logprob: -8.488576889038086
    5. ' a' → logprob: -9.113576889038086
    6. ')' → logprob: -9.488576889038086
    7. ')b' → logprob: -10.488576889038086
    8. '	b' → logprob: -12.113576889038086
    9. ' ' → logprob: -12.238576889038086
    10. ',' → logprob: -12.676076889038086

Token 17: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00523317139595747
    2. ',' → logprob: -5.630233287811279
    3. '),' → logprob: -6.630233287811279
    4. ')=' → logprob: -8.255232810974121
    5. ' )' → logprob: -10.880232810974121
    6. '=' → logprob: -11.505232810974121
    7. ' =' → logprob: -11.755232810974121
    8. '):' → logprob: -12.755232810974121
    9. ')c' → logprob: -13.505232810974121
    10. ')=>' → logprob: -13.630232810974121

Token 18: ' ops' (ID: 26973)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.8105799555778503
    2. '(c' → logprob: -0.9355799555778503
    3. 'c' → logprob: -2.185580015182495
    4. ' c' → logprob: -3.935580015182495
    5. ' =' → logprob: -4.560579776763916
    6. '*' → logprob: -5.435579776763916
    7. '(a' → logprob: -5.935579776763916
    8. 'operator' → logprob: -6.310579776763916
    9. ' op' → logprob: -6.435579776763916
    10. '=' → logprob: -6.685579776763916

Token 19: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005262930411845446
    2. '=' → logprob: -5.255262851715088
    3. ')' → logprob: -11.255263328552246
    4. ',' → logprob: -12.005263328552246
    5. ' ' → logprob: -12.505263328552246
    6. '[' → logprob: -13.880263328552246
    7. ' ,' → logprob: -13.880263328552246
    8. 's' → logprob: -13.880263328552246
    9. ' =)' → logprob: -14.255263328552246
    10. '<|end|>' → logprob: -14.630263328552246

Token 20: ' tuple' (ID: 31311)
  Prédit: '(['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '([' → logprob: -0.5615667104721069
    2. '[(' → logprob: -1.811566710472107
    3. '[' → logprob: -2.1865668296813965
    4. '(' → logprob: -3.5615668296813965
    5. '([(' → logprob: -3.5615668296813965
    6. ' ([' → logprob: -3.6865668296813965
    7. '((' → logprob: -3.8115668296813965
    8. '(([' → logprob: -4.0615668296813965
    9. ' [(' → logprob: -4.9365668296813965
    10. ' [' → logprob: -4.9365668296813965

Token 21: '(map' (ID: 16946)
  Prédit: '([('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([(' → logprob: -0.46116963028907776
    2. '([' → logprob: -1.8361696004867554
    3. '(' → logprob: -2.461169719696045
    4. '[(' → logprob: -3.211169719696045
    5. '(range' → logprob: -3.336169719696045
    6. '((' → logprob: -4.211169719696045
    7. '[' → logprob: -4.211169719696045
    8. '(input' → logprob: -5.461169719696045
    9. '(map' → logprob: -5.961169719696045
    10. '(a' → logprob: -6.711169719696045

Token 22: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.026597287505865097
    2. '(' → logprob: -4.526597499847412
    3. '(lambda' → logprob: -4.651597499847412
    4. '(eval' → logprob: -6.151597499847412
    5. '(str' → logprob: -6.401597499847412
    6. '(abs' → logprob: -7.401597499847412
    7. '(tuple' → logprob: -7.526597499847412
    8. '(list' → logprob: -7.901597499847412
    9. 'int' → logprob: -8.526597023010254
    10. 'list' → logprob: -9.276597023010254

Token 23: ',' (ID: 11)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.037646401673555374
    2. ')' → logprob: -4.412646293640137
    3. ')),' → logprob: -4.912646293640137
    4. '(input' → logprob: -5.287646293640137
    5. '(' → logprob: -5.662646293640137
    6. '))' → logprob: -6.037646293640137
    7. ',' → logprob: -6.537646293640137
    8. '(a' → logprob: -7.037646293640137
    9. '(data' → logprob: -7.287646293640137
    10. '(token' → logprob: -7.787646293640137

Token 24: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.6351959109306335
    2. ' input' → logprob: -0.7601959109306335
    3. '(input' → logprob: -6.635195732116699
    4. ')' → logprob: -7.135195732116699
    5. '))' → logprob: -8.8851957321167
    6. ')),' → logprob: -9.3851957321167
    7. '),' → logprob: -9.8851957321167
    8. ',input' → logprob: -10.2601957321167
    9. 's' → logprob: -10.7601957321167
    10. ' ' → logprob: -11.3851957321167

Token 25: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.6552022099494934
    2. '()' → logprob: -1.2802021503448486
    3. '()))' → logprob: -2.1552021503448486
    4. '()),' → logprob: -2.5302021503448486
    5. '())' → logprob: -5.655202388763428
    6. '('' → logprob: -6.780202388763428
    7. ')),' → logprob: -7.655202388763428
    8. '()));' → logprob: -7.655202388763428
    9. '())))' → logprob: -7.905202388763428
    10. '(' → logprob: -8.53020191192627

Token 26: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00028398085851222277
    2. 'strip' → logprob: -8.500284194946289
    3. ' split' → logprob: -9.750284194946289
    4. 'rstrip' → logprob: -11.125284194946289
    5. '(split' → logprob: -12.375284194946289
    6. 'replace' → logprob: -13.375284194946289
    7. 'spl' → logprob: -14.625284194946289
    8. 's' → logprob: -15.125284194946289
    9. '```' → logprob: -15.125284194946289
    10. ' ' → logprob: -15.250284194946289

Token 27: '()' (ID: 416)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.7107262015342712
    2. '()' → logprob: -0.9607262015342712
    3. '))' → logprob: -2.585726261138916
    4. ')),' → logprob: -3.335726261138916
    5. '())' → logprob: -5.210726261138916
    6. '()),' → logprob: -5.460726261138916
    7. '())),
' → logprob: -5.960726261138916
    8. ')' → logprob: -7.460726261138916
    9. '()))
' → logprob: -7.585726261138916
    10. '('' → logprob: -7.585726261138916

Token 28: ')),' (ID: 12098)
  Prédit: ')),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')),' → logprob: -0.0820733904838562
    2. '))' → logprob: -2.582073450088501
    3. '),' → logprob: -6.082073211669922
    4. ')' → logprob: -7.582073211669922
    5. ' ' → logprob: -8.707073211669922
    6. ')),
' → logprob: -9.082073211669922
    7. '))
' → logprob: -9.957073211669922
    8. '))),' → logprob: -11.207073211669922
    9. '()' → logprob: -11.832073211669922
    10. ')),
' → logprob: -11.957073211669922

Token 29: ' (' (ID: 350)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.685644268989563
    2. ' list' → logprob: -1.310644268989563
    3. 'input' → logprob: -1.935644268989563
    4. 'list' → logprob: -2.6856441497802734
    5. ' [' → logprob: -5.560644149780273
    6. '[input' → logprob: -5.560644149780273
    7. ' tuple' → logprob: -5.685644149780273
    8. '[' → logprob: -6.435644149780273
    9. 'tuple' → logprob: -7.310644149780273
    10. 'map' → logprob: -9.185644149780273

Token 30: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.004040406551212072
    2. 'mul' → logprob: -6.129040241241455
    3. ' add' → logprob: -7.129040241241455
    4. 'sub' → logprob: -7.254040241241455
    5. '   ' → logprob: -9.004040718078613
    6. ')add' → logprob: -9.504040718078613
    7. '	add' → logprob: -10.879040718078613
    8. '(add' → logprob: -11.004040718078613
    9. '  ' → logprob: -11.254040718078613
    10. '+' → logprob: -11.254040718078613

Token 31: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011977284448221326
    2. ' ,' → logprob: -6.751197814941406
    3. ',s' → logprob: -11.876197814941406
    4. ',b' → logprob: -12.251197814941406
    5. 'sub' → logprob: -12.626197814941406
    6. ' ' → logprob: -13.001197814941406
    7. ',m' → logprob: -13.126197814941406
    8. ',
' → logprob: -13.251197814941406
    9. '),' → logprob: -14.126197814941406
    10. '(sub' → logprob: -14.251197814941406

Token 32: ' sub' (ID: 1543)
  Prédit: ' sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sub' → logprob: -0.09322744607925415
    2. ' mul' → logprob: -2.8432273864746094
    3. 'sub' → logprob: -3.5932273864746094
    4. 'mul' → logprob: -5.843227386474609
    5. ' ' → logprob: -8.09322738647461
    6. ' ' → logprob: -10.96822738647461
    7. ' add' → logprob: -11.46822738647461
    8. ',' → logprob: -11.90572738647461
    9. '	sub' → logprob: -12.15572738647461
    10. 'add' → logprob: -13.40572738647461

Token 33: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011071135522797704
    2. ',m' → logprob: -7.376107215881348
    3. ')' → logprob: -8.251107215881348
    4. ' ,' → logprob: -8.626107215881348
    5. '),' → logprob: -11.126107215881348
    6. 'mul' → logprob: -11.251107215881348
    7. '_mul' → logprob: -13.001107215881348
    8. ' mul' → logprob: -13.376107215881348
    9. '‌,' → logprob: -14.126107215881348
    10. ',
' → logprob: -14.563607215881348

Token 34: ' mul' (ID: 9975)
  Prédit: ' mul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mul' → logprob: -0.3485790491104126
    2. 'mul' → logprob: -1.2235790491104126
    3. ' ' → logprob: -9.473579406738281
    4. '_mul' → logprob: -10.598579406738281
    5. '.mul' → logprob: -11.473579406738281
    6. ' mull' → logprob: -12.098579406738281
    7. ' mu' → logprob: -12.973579406738281
    8. ' ' → logprob: -13.223579406738281
    9. 'mult' → logprob: -13.473579406738281
    10. ' muli' → logprob: -13.473579406738281

Token 35: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.12127808178775e-05
    2. '))' → logprob: -10.375051498413086
    3. ' )' → logprob: -11.500051498413086
    4. ',' → logprob: -12.875051498413086
    5. '`)' → logprob: -12.875051498413086
    6. '[' → logprob: -14.000051498413086
    7. '),' → logprob: -14.375051498413086
    8. ')
' → logprob: -14.625051498413086
    9. ')))' → logprob: -14.625051498413086
    10. ')`' → logprob: -14.625051498413086

Token 36: 'print' (ID: 1598)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.36686939001083374
    2. 'for' → logprob: -1.6168694496154785
    3. 'res' → logprob: -3.7418694496154785
    4. 'print' → logprob: -3.8668694496154785
    5. '[' → logprob: -4.3668694496154785
    6. 'op' → logprob: -4.3668694496154785
    7. 'ops' → logprob: -5.3668694496154785
    8. 'c' → logprob: -5.4918694496154785
    9. ')' → logprob: -5.6168694496154785
    10. 'results' → logprob: -5.8668694496154785

Token 37: '(re' (ID: 8178)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03154974803328514
    2. '((' → logprob: -3.9065496921539307
    3. '(*' → logprob: -5.03154993057251
    4. '(sum' → logprob: -6.65654993057251
    5. '(max' → logprob: -6.78154993057251
    6. '(a' → logprob: -7.53154993057251
    7. '(*(' → logprob: -7.90654993057251
    8. '(
' → logprob: -8.531549453735352
    9. '(lambda' → logprob: -8.531549453735352
    10. '("("' → logprob: -8.781549453735352

Token 38: 'duce' (ID: 21375)
  Prédit: 'duce'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'duce' → logprob: -1.1160349458805285e-05
    2. 'd' → logprob: -12.000011444091797
    3. 'du' → logprob: -12.750011444091797
    4. '(' → logprob: -14.000011444091797
    5. 'duc' → logprob: -14.750011444091797
    6. '[' → logprob: -15.250011444091797
    7. '(a' → logprob: -15.625011444091797
    8. 'dux' → logprob: -16.875011444091797
    9. 'duced' → logprob: -16.875011444091797
    10. 'dice' → logprob: -16.875011444091797

Token 39: '(lambda' (ID: 43341)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10534125566482544
    2. '(lambda' → logprob: -2.3553411960601807
    3. ')' → logprob: -6.23034143447876
    4. ' (' → logprob: -6.85534143447876
    5. '(
' → logprob: -7.23034143447876
    6. '(operator' → logprob: -7.48034143447876
    7. '(op' → logprob: -7.85534143447876
    8. '((' → logprob: -9.730340957641602
    9. ' (,' → logprob: -9.980340957641602
    10. '),' → logprob: -10.230340957641602

Token 40: ' x' (ID: 1215)
  Prédit: ' acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' acc' → logprob: -0.17455336451530457
    2. 'acc' → logprob: -2.924553394317627
    3. ' op' → logprob: -3.299553394317627
    4. ' x' → logprob: -3.299553394317627
    5. 'x' → logprob: -4.049553394317627
    6. ' res' → logprob: -5.424553394317627
    7. ' f' → logprob: -5.799553394317627
    8. ' a' → logprob: -7.049553394317627
    9. ' accu' → logprob: -7.049553394317627
    10. ' s' → logprob: -7.174553394317627

Token 41: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002831464516930282
    2. ',x' → logprob: -8.625283241271973
    3. ' ,' → logprob: -10.000283241271973
    4. 'x' → logprob: -11.250283241271973
    5. ',y' → logprob: -11.375283241271973
    6. 'a' → logprob: -11.875283241271973
    7. ',a' → logprob: -12.375283241271973
    8. '_,' → logprob: -12.750283241271973
    9. ',c' → logprob: -13.250283241271973
    10. 'acc' → logprob: -13.375283241271973

Token 42: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.4863576889038086
    2. 'y' → logprob: -1.4863576889038086
    3. ' op' → logprob: -2.2363576889038086
    4. ' f' → logprob: -3.6113576889038086
    5. 'f' → logprob: -4.361357688903809
    6. 'op' → logprob: -5.736357688903809
    7. ' ops' → logprob: -5.861357688903809
    8. 'ops' → logprob: -6.111357688903809
    9. ' acc' → logprob: -7.486357688903809
    10. ' ' → logprob: -7.611357688903809

Token 43: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6368906497955322
    2. ',' → logprob: -0.7618906497955322
    3. ' :' → logprob: -5.636890411376953
    4. ' ,' → logprob: -7.636890411376953
    5. ',:' → logprob: -9.761890411376953
    6. ',y' → logprob: -10.011890411376953
    7. ',x' → logprob: -11.136890411376953
    8. '=' → logprob: -11.261890411376953
    9. '):' → logprob: -11.261890411376953
    10. ',m' → logprob: -11.886890411376953

Token 44: ' x' (ID: 1215)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' y' → logprob: -1.0270020961761475
    2. 'y' → logprob: -1.1520020961761475
    3. 'ops' → logprob: -1.7770020961761475
    4. ' ops' → logprob: -1.9020020961761475
    5. 'op' → logprob: -5.652002334594727
    6. '_ops' → logprob: -7.027002334594727
    7. ')' → logprob: -7.152002334594727
    8. ' op' → logprob: -7.152002334594727
    9. 'x' → logprob: -8.277002334594727
    10. ' ' → logprob: -8.527002334594727

Token 45: ' if' (ID: 538)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -1.3351647853851318
    2. '(y' → logprob: -1.9601647853851318
    3. ',' → logprob: -2.085164785385132
    4. ')' → logprob: -2.210164785385132
    5. 'ops' → logprob: -2.335164785385132
    6. '+' → logprob: -2.960164785385132
    7. '(' → logprob: -3.335164785385132
    8. ' +' → logprob: -3.585164785385132
    9. ' y' → logprob: -3.960164785385132
    10. '[' → logprob: -3.960164785385132

Token 46: ' x' (ID: 1215)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.29752635955810547
    2. 'ops' → logprob: -2.2975263595581055
    3. 'not' → logprob: -2.7975263595581055
    4. 'x' → logprob: -3.0475263595581055
    5. ' y' → logprob: -4.0475263595581055
    6. 'type' → logprob: -4.4225263595581055
    7. ' not' → logprob: -4.7975263595581055
    8. 'is' → logprob: -6.7975263595581055
    9. 'op' → logprob: -6.9225263595581055
    10. '0' → logprob: -7.0475263595581055

Token 47: ' >' (ID: 1424)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' else' → logprob: -1.180964708328247
    2. ' in' → logprob: -2.055964708328247
    3. ' ==' → logprob: -2.180964708328247
    4. ' y' → logprob: -2.180964708328247
    5. ' not' → logprob: -2.305964708328247
    6. 'y' → logprob: -2.555964708328247
    7. '==' → logprob: -2.930964708328247
    8. 'else' → logprob: -3.430964708328247
    9. ' is' → logprob: -3.930964708328247
    10. ' ' → logprob: -4.305964469909668

Token 48: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0620461031794548
    2. ' y' → logprob: -2.8120460510253906
    3. '0' → logprob: -10.43704605102539
    4. ' ' → logprob: -10.68704605102539
    5. 'b' → logprob: -12.43704605102539
    6. '9' → logprob: -13.06204605102539
    7. '1' → logprob: -13.18704605102539
    8. '  ' → logprob: -13.43704605102539
    9. 'x' → logprob: -13.43704605102539
    10. '20' → logprob: -13.43704605102539

Token 49: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.0516398623585701
    2. 'else' → logprob: -3.1766397953033447
    3. 'ops' → logprob: -6.176640033721924
    4. ' ' → logprob: -6.426640033721924
    5. ')' → logprob: -7.051640033721924
    6. '(y' → logprob: -7.176640033721924
    7. ' or' → logprob: -7.426640033721924
    8. ' y' → logprob: -7.676640033721924
    9. 'y' → logprob: -7.801640033721924
    10. '()' → logprob: -7.926640033721924

Token 50: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.42880672216415405
    2. 'y' → logprob: -1.0538067817687988
    3. 'x' → logprob: -10.17880630493164
    4. ' x' → logprob: -10.80380630493164
    5. ' ' → logprob: -11.05380630493164
    6. ' ' → logprob: -12.17880630493164
    7. '	y' → logprob: -12.30380630493164
    8. '  ' → logprob: -12.42880630493164
    9. 'op' → logprob: -13.24130630493164
    10. ')' → logprob: -13.42880630493164

Token 51: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.15863123536109924
    2. '(' → logprob: -2.6586313247680664
    3. '),' → logprob: -3.4086313247680664
    4. '))' → logprob: -4.158631324768066
    5. ')' → logprob: -4.533631324768066
    6. 'ops' → logprob: -5.158631324768066
    7. ' ,' → logprob: -5.658631324768066
    8. ')(' → logprob: -6.283631324768066
    9. '(a' → logprob: -6.908631324768066
    10. ')))' → logprob: -7.158631324768066

Token 52: ' (' (ID: 350)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3930939435958862
    2. 'map' → logprob: -1.3930939435958862
    3. '[a' → logprob: -1.3930939435958862
    4. '(a' → logprob: -2.143094062805176
    5. '(map' → logprob: -2.643094062805176
    6. 'ops' → logprob: -3.643094062805176
    7. '[(' → logprob: -4.018094062805176
    8. 'list' → logprob: -5.018094062805176
    9. '[list' → logprob: -5.893094062805176
    10. '[i' → logprob: -6.268094062805176

Token 53: 'op' (ID: 467)
  Prédit: 'ops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ops' → logprob: -0.8628053069114685
    2. 'op' → logprob: -1.1128053665161133
    3. 'map' → logprob: -1.8628053665161133
    4. '[' → logprob: -2.6128053665161133
    5. '(' → logprob: -4.862805366516113
    6. ' map' → logprob: -6.112805366516113
    7. '(map' → logprob: -6.112805366516113
    8. '(op' → logprob: -6.362805366516113
    9. 'list' → logprob: -6.737805366516113
    10. ' op' → logprob: -6.862805366516113

Token 54: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.3294534683227539
    2. '(i' → logprob: -2.579453468322754
    3. '(op' → logprob: -2.579453468322754
    4. '(x' → logprob: -3.079453468322754
    5. '(' → logprob: -3.329453468322754
    6. '((' → logprob: -3.454453468322754
    7. ')(' → logprob: -5.454453468322754
    8. 's' → logprob: -6.329453468322754
    9. '(abs' → logprob: -6.329453468322754
    10. '(s' → logprob: -6.579453468322754

Token 55: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.26606452465057373
    2. 'b' → logprob: -1.5160645246505737
    3. ',b' → logprob: -5.016064643859863
    4. ' b' → logprob: -5.266064643859863
    5. ')' → logprob: -7.016064643859863
    6. ' ,' → logprob: -7.516064643859863
    7. 'a' → logprob: -8.141064643859863
    8. ')b' → logprob: -8.641064643859863
    9. '(b' → logprob: -9.391064643859863
    10. '),' → logprob: -9.766064643859863

Token 56: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.002981863683089614
    2. ' b' → logprob: -5.877981662750244
    3. ' ' → logprob: -9.627982139587402
    4. '   ' → logprob: -9.752982139587402
    5. '  ' → logprob: -10.627982139587402
    6. '    ' → logprob: -11.377982139587402
    7. ')b' → logprob: -12.752982139587402
    8. '     ' → logprob: -12.877982139587402
    9. '       ' → logprob: -13.002982139587402
    10. '      ' → logprob: -13.252982139587402

Token 57: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.513339445111342e-05
    2. 'for' → logprob: -11.125044822692871
    3. '))' → logprob: -11.125044822692871
    4. ' )' → logprob: -12.125044822692871
    5. ' for' → logprob: -12.625044822692871
    6. ')))' → logprob: -12.875044822692871
    7. ')
' → logprob: -14.250044822692871
    8. ')`' → logprob: -14.500044822692871
    9. ' ' → logprob: -14.750044822692871
    10. '),' → logprob: -15.000044822692871

Token 58: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5879077315330505
    2. ' for' → logprob: -1.3379077911376953
    3. 'for' → logprob: -1.7129077911376953
    4. ' ' → logprob: -7.337907791137695
    5. '))' → logprob: -7.337907791137695
    6. ' )' → logprob: -8.212907791137695
    7. '   ' → logprob: -9.837907791137695
    8. 'op' → logprob: -10.212907791137695
    9. '()' → logprob: -10.462907791137695
    10. '  ' → logprob: -10.712907791137695

Token 59: ' op' (ID: 991)
  Prédit: 'ops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ops' → logprob: -0.06469697505235672
    2. ' ops' → logprob: -2.814697027206421
    3. 'op' → logprob: -6.064696788787842
    4. ' op' → logprob: -7.939696788787842
    5. '_ops' → logprob: -11.189697265625
    6. ' ' → logprob: -11.439697265625
    7. 'opsy' → logprob: -12.564697265625
    8. '.ops' → logprob: -12.564697265625
    9. 'opse' → logprob: -13.189697265625
    10. ')' → logprob: -13.314697265625

Token 60: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007635258603841066
    2. 'in' → logprob: -5.007635116577148
    3. 's' → logprob: -7.757635116577148
    4. 'ops' → logprob: -7.882635116577148
    5. ' ops' → logprob: -9.632635116577148
    6. ')' → logprob: -10.507635116577148
    7. '_ops' → logprob: -12.132635116577148
    8. '<|end|>' → logprob: -12.132635116577148
    9. ' ' → logprob: -12.632635116577148
    10. '<|end|>' → logprob: -13.257635116577148

Token 61: ' ops' (ID: 26973)
  Prédit: 'ops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ops' → logprob: -0.012529309839010239
    2. ' ops' → logprob: -4.387529373168945
    3. 'op' → logprob: -11.637529373168945
    4. '_ops' → logprob: -12.512529373168945
    5. '.ops' → logprob: -12.762529373168945
    6. ' ' → logprob: -13.512529373168945
    7. 'opsy' → logprob: -14.637529373168945
    8. 'rops' → logprob: -14.887529373168945
    9. ')' → logprob: -14.887529373168945
    10. ' op' → logprob: -15.137529373168945

Token 62: ')))' (ID: 15975)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.2539476156234741
    2. ')))' → logprob: -1.5039476156234741
    3. ')' → logprob: -6.253947734832764
    4. '))))' → logprob: -10.003947257995605
    5. '))
' → logprob: -10.878947257995605
    6. ')))
' → logprob: -11.628947257995605
    7. '),' → logprob: -11.628947257995605
    8. ' ))' → logprob: -12.503947257995605
    9. ')));' → logprob: -13.003947257995605
    10. '))

' → logprob: -13.878947257995605


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 60
Tokens correctement prédits (1ère position, stricte): 27
Tokens correctement prédits (1ère position, avec adaptation): 27
Tokens correctement prédits (top 10): 45
Précision stricte (1ère position): 45.00%
Précision adaptée (1ère position): 45.00%
Précision (top 10): 75.00%
================================================================================
