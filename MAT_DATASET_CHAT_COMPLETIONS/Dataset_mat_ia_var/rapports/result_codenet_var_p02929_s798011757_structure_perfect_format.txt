================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:47:02
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import bisect
import heapq
import math
import random
import sys
from collections import Counter, defaultdict, deque
from decimal import ROUND_CEILING, ROUND_HALF_UP, Decimal
from functools import lru_cache, reduce
from itertools import combinations, combinations_with_replacement, product, permutations
from operator import add, mul, sub

sys.setrecursionlimit(100000)
input = sys.stdin.readline

def read_int():
    return int(input())

def read_int_n():
    return list(map(int, input().split()))

def read_float():
    return float(input())

def read_float_n():
    return list(map(float, input().split()))

def read_str():
    return input().strip()

def read_str_n():
    return list(map(str, input().split()))

def error_print(*args):
    print(*args, file=sys.stderr)

def mt(f):
    import time
    def wrap(*args, **kwargs):
        s = time.time()
        ret = f(*args, **kwargs)
        e = time.time()
        error_print(e - s, 'sec')
        return ret
    return wrap

class Mod:
    def __init__(self, m):
        self.m = m
    def add(self, a, b):
        return (a + b) % self.m
    def sub(self, a, b):
        return (a - b) % self.m
    def mul(self, a, b):
        return ((a % self.m) * (b % self.m)) % self.m
    def div(self, a, b):
        return self.mul(a, pow(b, self.m - 2, self.m))
    def pow(self, a, b):
        return pow(a, b, self.m)

@mt
def slv(N, S):
    if S[0] != 'B' or S[-1] != 'B':
        return 0
    LR = [''] * (N * 2)
    l = 0
    ans = 1
    M = Mod(10 ** 9 + 7)
    for i in range(2 * N):
        if S[i] == 'B':
            if l % 2 == 0:
                LR[i] = 'L'
                l += 1
            else:
                LR[i] = 'R'
                ans = M.mul(ans, l)
                l -= 1
        else:
            if l % 2 == 0:
                LR[i] = 'R'
                ans = M.mul(ans, l)
                l -= 1
            else:
                LR[i] = 'L'
                l += 1
    C = Counter(LR)
    if C['L'] != C['R']:
        return 0
    for i in range(1, N + 1):
        ans = M.mul(ans, i)
    return ans

def main():
    N = read_int()
    S = read_str()
    print(slv(N, S))

if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' bis' (ID: 7204)
  → Token d'amorce (pas de prédiction)

Token 2: 'ect' (ID: 534)
  → Token d'amorce (pas de prédiction)

Token 3: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00018577903392724693
    2. '(' → logprob: -8.7501859664917
    3. '\' → logprob: -12.5001859664917
    4. '\n' → logprob: -12.8751859664917
    5. '.\' → logprob: -13.0001859664917
    6. 'newline' → logprob: -13.0001859664917
    7. ' ' → logprob: -13.3751859664917
    8. '```' → logprob: -13.5001859664917
    9. '[' → logprob: -13.6251859664917
    10. '.b' → logprob: -13.6251859664917

Token 4: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.002915788209065795
    2. '(' → logprob: -6.002915859222412
    3. '
' → logprob: -9.752915382385254
    4. '```' → logprob: -9.752915382385254
    5. '

' → logprob: -10.002915382385254
    6. '\n' → logprob: -10.252915382385254
    7. '\' → logprob: -10.252915382385254
    8. '.
' → logprob: -10.252915382385254
    9. ',' → logprob: -10.377915382385254
    10. '[' → logprob: -10.877915382385254

Token 5: ' heap' (ID: 37237)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.21257461607456207
    2. ' math' → logprob: -1.8375746011734009
    3. ' heap' → logprob: -4.087574481964111
    4. ' collections' → logprob: -4.587574481964111
    5. 'sys' → logprob: -6.212574481964111
    6. ' itertools' → logprob: -6.462574481964111
    7. ' os' → logprob: -7.337574481964111
    8. 'collections' → logprob: -8.08757495880127
    9. 'heap' → logprob: -8.21257495880127
    10. 'math' → logprob: -8.33757495880127

Token 6: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.7954958821064793e-05
    2. 'queue' → logprob: -11.125018119812012
    3. 'ify' → logprob: -14.375018119812012
    4. '#' → logprob: -14.625018119812012
    5. 'i' → logprob: -14.750018119812012
    6. ' queue' → logprob: -15.000018119812012
    7. '```' → logprob: -15.125018119812012
    8. 't' → logprob: -15.375018119812012
    9. 'u' → logprob: -15.375018119812012
    10. '<|end|>' → logprob: -16.125017166137695

Token 7: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.029062801972031593
    2. '\' → logprob: -4.404062747955322
    3. '\n' → logprob: -4.904062747955322
    4. '
' → logprob: -5.904062747955322
    5. '#' → logprob: -6.154062747955322
    6. ',' → logprob: -6.904062747955322
    7. 'import' → logprob: -7.654062747955322
    8. '

' → logprob: -7.654062747955322
    9. '.
' → logprob: -7.904062747955322
    10. '<|end|>' → logprob: -7.904062747955322

Token 8: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.1302616596221924
    2. 'def' → logprob: -1.6302616596221924
    3. '
' → logprob: -1.7552616596221924
    4. '\' → logprob: -2.3802616596221924
    5. '

' → logprob: -2.6302616596221924
    6. '\n' → logprob: -3.0052616596221924
    7. '' → logprob: -3.7552616596221924
    8. 'd' → logprob: -4.380261421203613
    9. 'import' → logprob: -4.630261421203613
    10. '#' → logprob: -4.880261421203613

Token 9: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.430050253868103
    2. ' collections' → logprob: -1.680050253868103
    3. ' itertools' → logprob: -1.930050253868103
    4. ' sys' → logprob: -4.555050373077393
    5. 'collections' → logprob: -5.555050373077393
    6. 'math' → logprob: -6.305050373077393
    7. ' threading' → logprob: -7.430050373077393
    8. ' random' → logprob: -7.555050373077393
    9. ' os' → logprob: -7.680050373077393
    10. ' operator' → logprob: -9.805049896240234

Token 10: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.0088742971420288
    2. '\' → logprob: -1.6338742971420288
    3. '

' → logprob: -2.3838744163513184
    4. 'def' → logprob: -2.3838744163513184
    5. '
' → logprob: -2.5088744163513184
    6. '```' → logprob: -2.8838744163513184
    7. 'import' → logprob: -3.2588744163513184
    8. '\n' → logprob: -3.6338744163513184
    9. ',' → logprob: -4.008874416351318
    10. '' → logprob: -5.133874416351318

Token 11: 'import' (ID: 561)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7633292078971863
    2. '\' → logprob: -1.888329267501831
    3. 'import' → logprob: -2.138329267501831
    4. '.' → logprob: -2.638329267501831
    5. ',' → logprob: -3.513329267501831
    6. '
' → logprob: -3.513329267501831
    7. 'from' → logprob: -3.513329267501831
    8. '\n' → logprob: -3.638329267501831
    9. '```' → logprob: -3.638329267501831
    10. '

' → logprob: -4.138329029083252

Token 12: ' random' (ID: 7526)
  Prédit: 'random'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'random' → logprob: -1.1809319257736206
    2. ' random' → logprob: -1.4309319257736206
    3. ' sys' → logprob: -1.8059319257736206
    4. ' collections' → logprob: -2.18093204498291
    5. 'collections' → logprob: -2.30593204498291
    6. ' itertools' → logprob: -3.43093204498291
    7. 'sys' → logprob: -3.68093204498291
    8. ' operator' → logprob: -4.68093204498291
    9. 'operator' → logprob: -5.80593204498291
    10. ' os' → logprob: -6.05593204498291

Token 13: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.7796174883842468
    2. '\' → logprob: -1.5296175479888916
    3. '
' → logprob: -2.0296175479888916
    4. '<|end|>' → logprob: -2.9046175479888916
    5. 'import' → logprob: -3.2796175479888916
    6. '```' → logprob: -3.7796175479888916
    7. '#' → logprob: -4.1546173095703125
    8. '

' → logprob: -4.2796173095703125
    9. 'def' → logprob: -4.6546173095703125
    10. ',' → logprob: -4.6546173095703125

Token 14: 'import' (ID: 561)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -1.2843334674835205
    2. 'def' → logprob: -1.6593334674835205
    3. '#' → logprob: -1.7843334674835205
    4. 'from' → logprob: -2.0343334674835205
    5. 'import' → logprob: -2.2843334674835205
    6. 'class' → logprob: -3.6593334674835205
    7. '\n' → logprob: -3.7843334674835205
    8. '```' → logprob: -3.9093334674835205
    9. ',' → logprob: -4.034333229064941
    10. '
' → logprob: -4.284333229064941

Token 15: ' sys' (ID: 12228)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -1.6368070840835571
    2. 'sys' → logprob: -1.8868070840835571
    3. 'string' → logprob: -2.0118069648742676
    4. ' sys' → logprob: -2.0118069648742676
    5. 'statistics' → logprob: -2.2618069648742676
    6. 'collections' → logprob: -2.3868069648742676
    7. ' statistics' → logprob: -3.0118069648742676
    8. 're' → logprob: -3.2618069648742676
    9. ' time' → logprob: -3.6368069648742676
    10. ' string' → logprob: -3.6368069648742676

Token 16: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9086334109306335
    2. '\n' → logprob: -1.1586334705352783
    3. '

' → logprob: -2.5336334705352783
    4. 'import' → logprob: -2.5336334705352783
    5. '<|end|>' → logprob: -3.1586334705352783
    6. '```' → logprob: -3.5336334705352783
    7. '\' → logprob: -3.7836334705352783
    8. '#' → logprob: -4.283633232116699
    9. '<|end|>' → logprob: -5.158633232116699
    10. '.' → logprob: -5.658633232116699

Token 17: 'from' (ID: 2845)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.1747894287109375
    2. 'import' → logprob: -1.4247894287109375
    3. '#' → logprob: -2.2997894287109375
    4. 'from' → logprob: -2.4247894287109375
    5. '
' → logprob: -2.9247894287109375
    6. '```' → logprob: -2.9247894287109375
    7. 'def' → logprob: -3.1747894287109375
    8. '\' → logprob: -3.4247894287109375
    9. 'class' → logprob: -3.5497894287109375
    10. '

' → logprob: -3.5497894287109375

Token 18: ' collections' (ID: 22690)
  Prédit: ' collections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.0659782886505127
    2. 'collections' → logprob: -3.1909782886505127
    3. ' typing' → logprob: -3.9409782886505127
    4. ' itertools' → logprob: -6.065978050231934
    5. ' functools' → logprob: -8.440978050231934
    6. 'typing' → logprob: -8.440978050231934
    7. ' ' → logprob: -8.815978050231934
    8. ' threading' → logprob: -9.440978050231934
    9. ' io' → logprob: -9.565978050231934
    10. '_' → logprob: -9.565978050231934

Token 19: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.28129443526268005
    2. ' import' → logprob: -1.4062944650650024
    3. '	import' → logprob: -10.031294822692871
    4. '```' → logprob: -10.531294822692871
    5. '.' → logprob: -10.906294822692871
    6. 'from' → logprob: -11.406294822692871
    7. ' ' → logprob: -11.656294822692871
    8. '<|end|>' → logprob: -12.156294822692871
    9. ' defaultdict' → logprob: -12.281294822692871
    10. '_import' → logprob: -12.531294822692871

Token 20: ' Counter' (ID: 32251)
  Prédit: ' defaultdict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.06958355754613876
    2. ' deque' → logprob: -3.0695836544036865
    3. 'deque' → logprob: -4.194583415985107
    4. ' abc' → logprob: -5.194583415985107
    5. 'abc' → logprob: -10.194583892822266
    6. ' itertools' → logprob: -10.444583892822266
    7. ' named' → logprob: -10.944583892822266
    8. '_' → logprob: -11.069583892822266
    9. 'default' → logprob: -11.319583892822266
    10. ' collections' → logprob: -11.694583892822266

Token 21: ',' (ID: 11)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.8173180222511292
    2. 'import' → logprob: -1.3173179626464844
    3. '
' → logprob: -2.0673179626464844
    4. '<|end|>' → logprob: -2.1923179626464844
    5. ',' → logprob: -3.4423179626464844
    6. '\n' → logprob: -5.067317962646484
    7. '<|end|>' → logprob: -5.067317962646484
    8. 'from' → logprob: -6.692317962646484
    9. '```' → logprob: -6.692317962646484
    10. 'class' → logprob: -7.192317962646484

Token 22: ' defaultdict' (ID: 107098)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.43383166193962097
    2. ' defaultdict' → logprob: -1.1838316917419434
    3. 'default' → logprob: -3.5588316917419434
    4. ' deque' → logprob: -4.058831691741943
    5. 'named' → logprob: -9.058831214904785
    6. ' named' → logprob: -11.683831214904785
    7. 'de' → logprob: -12.808831214904785
    8. 'abc' → logprob: -13.183831214904785
    9. 'Ordered' → logprob: -13.683831214904785
    10. 'Deque' → logprob: -13.683831214904785

Token 23: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6940504312515259
    2. '

' → logprob: -0.9440504312515259
    3. 'import' → logprob: -2.8190503120422363
    4. ',' → logprob: -3.4440503120422363
    5. '\n' → logprob: -5.069050312042236
    6. '```' → logprob: -5.819050312042236
    7. ',
' → logprob: -5.944050312042236
    8. '' → logprob: -6.569050312042236
    9. ',

' → logprob: -6.819050312042236
    10. 'class' → logprob: -6.944050312042236

Token 24: ' deque' (ID: 90347)
  Prédit: ' deque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deque' → logprob: -0.6931514143943787
    2. 'deque' → logprob: -0.6931514143943787
    3. 'named' → logprob: -13.693151473999023
    4. 'de' → logprob: -13.818151473999023
    5. 'Deque' → logprob: -14.068151473999023
    6. ' itertools' → logprob: -14.193151473999023
    7. ' named' → logprob: -15.318151473999023
    8. ' Ordered' → logprob: -16.068151473999023
    9. 'Ordered' → logprob: -16.443151473999023
    10. '```' → logprob: -17.193151473999023

Token 25: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6713738441467285
    2. '

' → logprob: -1.0463738441467285
    3. 'import' → logprob: -2.5463738441467285
    4. '<|end|>' → logprob: -3.7963738441467285
    5. ',' → logprob: -4.6713738441467285
    6. ' 

' → logprob: -5.0463738441467285
    7. '\n' → logprob: -5.4213738441467285
    8. 'def' → logprob: -5.6713738441467285
    9. '```' → logprob: -6.1713738441467285
    10. 'class' → logprob: -6.2963738441467285

Token 26: 'from' (ID: 2845)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.4787079691886902
    2. '
' → logprob: -1.228708028793335
    3. 'import' → logprob: -3.103708028793335
    4. 'class' → logprob: -4.103707790374756
    5. 'def' → logprob: -4.353707790374756
    6. '\n' → logprob: -5.978707790374756
    7. 'from' → logprob: -5.978707790374756
    8. ' 

' → logprob: -6.478707790374756
    9. '#' → logprob: -6.603707790374756
    10. '


' → logprob: -6.728707790374756

Token 27: ' decimal' (ID: 26964)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.2161470502614975
    2. ' typing' → logprob: -1.8411470651626587
    3. 'typing' → logprob: -3.716146945953369
    4. ' fractions' → logprob: -5.591146945953369
    5. ' functools' → logprob: -5.716146945953369
    6. ' operator' → logprob: -6.591146945953369
    7. ' heap' → logprob: -7.216146945953369
    8. 'it' → logprob: -7.591146945953369
    9. 'operator' → logprob: -7.716146945953369
    10. 'fra' → logprob: -8.216147422790527

Token 28: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.014926807023584843
    2. 'import' → logprob: -4.264926910400391
    3. ' ' → logprob: -7.389926910400391
    4. '<|end|>' → logprob: -9.38992691040039
    5. '	import' → logprob: -10.26492691040039
    6. ' ' → logprob: -11.38992691040039
    7. '.' → logprob: -11.76492691040039
    8. '```' → logprob: -13.38992691040039
    9. '<|end|>' → logprob: -13.38992691040039
    10. '_import' → logprob: -13.51492691040039

Token 29: ' ROUND' (ID: 168858)
  Prédit: ' Decimal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Decimal' → logprob: -0.20211286842823029
    2. 'Decimal' → logprob: -1.7021129131317139
    3. '.Decimal' → logprob: -7.827112674713135
    4. '```' → logprob: -9.202113151550293
    5. 'decimal' → logprob: -9.577113151550293
    6. ' ' → logprob: -10.077113151550293
    7. 'local' → logprob: -10.952113151550293
    8. ' local' → logprob: -11.202113151550293
    9. ' decimal' → logprob: -11.702113151550293
    10. ' ' → logprob: -11.827113151550293

Token 30: '_C' (ID: 1720)
  Prédit: '_HALF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_HALF' → logprob: -0.006820866838097572
    2. '_DOWN' → logprob: -5.3818206787109375
    3. '_C' → logprob: -6.5068206787109375
    4. '_' → logprob: -7.7568206787109375
    5. '_UP' → logprob: -8.381820678710938
    6. '_F' → logprob: -10.006820678710938
    7. '_HAL' → logprob: -14.381820678710938
    8. 'ING' → logprob: -14.631820678710938
    9. '_half' → logprob: -15.006820678710938
    10. '_H' → logprob: -15.256820678710938

Token 31: 'E' (ID: 36)
  Prédit: 'E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.0002422779070911929
    2. 'EL' → logprob: -9.375242233276367
    3. 'EP' → logprob: -9.500242233276367
    4. 'HAL' → logprob: -11.000242233276367
    5. 'EPT' → logprob: -11.125242233276367
    6. 'eil' → logprob: -11.750242233276367
    7. 'EAN' → logprob: -11.875242233276367
    8. 'ELE' → logprob: -11.875242233276367
    9. 'L' → logprob: -12.500242233276367
    10. 'F' → logprob: -12.500242233276367

Token 32: 'ILING' (ID: 63201)
  Prédit: 'IL'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IL' → logprob: -0.1287129521369934
    2. 'ILING' → logprob: -2.1287128925323486
    3. 'LING' → logprob: -6.378713130950928
    4. 'L' → logprob: -10.37871265411377
    5. 'I' → logprob: -10.87871265411377
    6. '1' → logprob: -11.87871265411377
    7. 'ING' → logprob: -12.37871265411377
    8. '{' → logprob: -12.75371265411377
    9. 'ILED' → logprob: -12.87871265411377
    10. 'iling' → logprob: -13.25371265411377

Token 33: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4182359278202057
    2. 'from' → logprob: -1.1682358980178833
    3. 'import' → logprob: -4.168235778808594
    4. ',
' → logprob: -5.043235778808594
    5. ' from' → logprob: -5.293235778808594
    6. '```' → logprob: -5.918235778808594
    7. '
' → logprob: -7.793235778808594
    8. '\n' → logprob: -8.793235778808594
    9. ' ,' → logprob: -8.793235778808594
    10. '`' → logprob: -9.418235778808594

Token 34: ' ROUND' (ID: 168858)
  Prédit: 'ROUND'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ROUND' → logprob: -0.172516867518425
    2. 'Decimal' → logprob: -2.0475168228149414
    3. ' Decimal' → logprob: -3.7975168228149414
    4. ' ROUND' → logprob: -5.047516822814941
    5. ' ' → logprob: -8.797516822814941
    6. ' get' → logprob: -9.797516822814941
    7. 'Context' → logprob: -9.797516822814941
    8. 'get' → logprob: -9.922516822814941
    9. 'Division' → logprob: -10.172516822814941
    10. '   ' → logprob: -10.672516822814941

Token 35: '_HALF' (ID: 175765)
  Prédit: '_DOWN'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_DOWN' → logprob: -0.5239567756652832
    2. '_F' → logprob: -1.3989567756652832
    3. 'DOWN' → logprob: -2.148956775665283
    4. 'F' → logprob: -3.648956775665283
    5. '_HALF' → logprob: -4.023956775665283
    6. '_UP' → logprob: -8.023956298828125
    7. 'ING' → logprob: -10.148956298828125
    8. '	F' → logprob: -10.523956298828125
    9. ' DOWN' → logprob: -10.773956298828125
    10. 'UP' → logprob: -10.898956298828125

Token 36: '_UP' (ID: 29902)
  Prédit: '_UP'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_UP' → logprob: -0.06479362398386002
    2. '_E' → logprob: -2.814793586730957
    3. '_DOWN' → logprob: -5.939793586730957
    4. 'UP' → logprob: -8.689793586730957
    5. 'DOWN' → logprob: -11.689793586730957
    6. 'EV' → logprob: -12.189793586730957
    7. '_A' → logprob: -12.564793586730957
    8. 'Even' → logprob: -13.439793586730957
    9. '_EV' → logprob: -14.814793586730957
    10. ' UP' → logprob: -14.939793586730957

Token 37: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7958027124404907
    2. 'from' → logprob: -0.9208027124404907
    3. 'import' → logprob: -2.420802593231201
    4. '
' → logprob: -3.170802593231201
    5. '```' → logprob: -4.670802593231201
    6. ',
' → logprob: -5.045802593231201
    7. '
' → logprob: -7.170802593231201
    8. '\n' → logprob: -7.170802593231201
    9. ' from' → logprob: -7.545802593231201
    10. '' → logprob: -7.795802593231201

Token 38: ' Decimal' (ID: 56874)
  Prédit: 'ROUND'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ROUND' → logprob: -0.29592815041542053
    2. 'Decimal' → logprob: -1.9209281206130981
    3. ' Decimal' → logprob: -2.4209282398223877
    4. ' ROUND' → logprob: -3.9209282398223877
    5. 'get' → logprob: -8.295928001403809
    6. ' get' → logprob: -8.545928001403809
    7. ' ' → logprob: -9.420928001403809
    8. 'Context' → logprob: -9.670928001403809
    9. 'Division' → logprob: -9.670928001403809
    10. ' Division' → logprob: -9.920928001403809

Token 39: '
' (ID: 198)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.21475958824157715
    2. '
' → logprob: -1.7147595882415771
    3. '' → logprob: -5.839759826660156
    4. '


' → logprob: -5.839759826660156
    5. 'import' → logprob: -5.839759826660156
    6. '\n' → logprob: -7.089759826660156
    7. 'class' → logprob: -7.339759826660156
    8. '
' → logprob: -7.339759826660156
    9. '



' → logprob: -7.464759826660156
    10. '#' → logprob: -8.214759826660156

Token 40: 'from' (ID: 2845)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.6948301792144775
    2. '
' → logprob: -1.3198301792144775
    3. 'import' → logprob: -2.3198301792144775
    4. 'def' → logprob: -3.3198301792144775
    5. 'from' → logprob: -3.5698301792144775
    6. 'class' → logprob: -3.6948301792144775
    7. '\n' → logprob: -4.694829940795898
    8. '#' → logprob: -5.194829940795898
    9. '```' → logprob: -5.194829940795898
    10. '' → logprob: -5.319829940795898

Token 41: ' functools' (ID: 142636)
  Prédit: 'fra'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fra' → logprob: -0.1094609871506691
    2. ' fractions' → logprob: -2.4844610691070557
    3. ' functools' → logprob: -4.859460830688477
    4. ' itertools' → logprob: -5.234460830688477
    5. 'fun' → logprob: -5.984460830688477
    6. 'email' → logprob: -6.359460830688477
    7. 'io' → logprob: -7.234460830688477
    8. ' typing' → logprob: -8.234460830688477
    9. 'typing' → logprob: -8.359460830688477
    10. 'math' → logprob: -8.359460830688477

Token 42: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.05589387193322182
    2. 'import' → logprob: -2.930893898010254
    3. ' ' → logprob: -7.680893898010254
    4. '_import' → logprob: -8.055893898010254
    5. '<|end|>' → logprob: -9.180893898010254
    6. '	import' → logprob: -9.305893898010254
    7. '_' → logprob: -12.055893898010254
    8. '<|end|>' → logprob: -12.180893898010254
    9. ' _' → logprob: -12.805893898010254
    10. ' ' → logprob: -12.805893898010254

Token 43: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.036811064928770065
    2. 'l' → logprob: -3.536811113357544
    3. ' cmp' → logprob: -6.161810874938965
    4. ' reduce' → logprob: -6.411810874938965
    5. ' partial' → logprob: -6.661810874938965
    6. 'cmp' → logprob: -7.411810874938965
    7. 'reduce' → logprob: -7.411810874938965
    8. ' wraps' → logprob: -7.661810874938965
    9. 'partial' → logprob: -9.036810874938965
    10. ' cache' → logprob: -9.411810874938965

Token 44: 'ru' (ID: 1942)
  Prédit: 'ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -1.5570885807392187e-05
    2. 'r' → logprob: -11.375015258789062
    3. 'ruz' → logprob: -13.000015258789062
    4. 'ruh' → logprob: -14.875015258789062
    5. 'z' → logprob: -15.500015258789062
    6. 'ruff' → logprob: -15.625015258789062
    7. '_ru' → logprob: -16.000015258789062
    8. 'reduce' → logprob: -16.125015258789062
    9. 'rum' → logprob: -16.125015258789062
    10. 'rup' → logprob: -16.250015258789062

Token 45: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -0.043101388961076736
    2. 'cache' → logprob: -3.1681013107299805
    3. 'c' → logprob: -10.54310131072998
    4. 'Cache' → logprob: -10.91810131072998
    5. '```' → logprob: -11.29310131072998
    6. '_c' → logprob: -11.54310131072998
    7. 't' → logprob: -11.66810131072998
    8. '_CACHE' → logprob: -11.91810131072998
    9. '_cached' → logprob: -12.16810131072998
    10. 'cached' → logprob: -12.54310131072998

Token 46: ',' (ID: 11)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.4241412580013275
    2. '
' → logprob: -1.79914128780365
    3. 'from' → logprob: -2.0491411685943604
    4. ',' → logprob: -3.5491411685943604
    5. '

' → logprob: -5.1741414070129395
    6. '<|end|>' → logprob: -5.4241414070129395
    7. ',
' → logprob: -5.7991414070129395
    8. 'def' → logprob: -5.9241414070129395
    9. '\n' → logprob: -6.4241414070129395
    10. '' → logprob: -6.7991414070129395

Token 47: ' reduce' (ID: 10389)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.5609880089759827
    2. 'partial' → logprob: -1.935987949371338
    3. ' wraps' → logprob: -2.060987949371338
    4. 'wrap' → logprob: -2.685987949371338
    5. ' reduce' → logprob: -2.935987949371338
    6. ' partial' → logprob: -4.185987949371338
    7. 'total' → logprob: -4.435987949371338
    8. 'cmp' → logprob: -5.560987949371338
    9. 'cache' → logprob: -6.185987949371338
    10. ' total' → logprob: -6.310987949371338

Token 48: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1229627132415771
    2. 'import' → logprob: -1.3729627132415771
    3. '
' → logprob: -1.6229627132415771
    4. 'from' → logprob: -1.9979627132415771
    5. ',
' → logprob: -2.622962713241577
    6. '

' → logprob: -5.122962951660156
    7. 'def' → logprob: -6.122962951660156
    8. '<|end|>' → logprob: -6.622962951660156
    9. '\n' → logprob: -7.122962951660156
    10. '' → logprob: -7.122962951660156

Token 49: 'from' (ID: 2845)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.32963746786117554
    2. 'from' → logprob: -1.7046375274658203
    3. ',' → logprob: -3.8296375274658203
    4. '
' → logprob: -4.20463752746582
    5. 'class' → logprob: -4.20463752746582
    6. 'def' → logprob: -4.20463752746582
    7. '\n' → logprob: -4.45463752746582
    8. '

' → logprob: -4.95463752746582
    9. '#' → logprob: -5.57963752746582
    10. '\' → logprob: -5.82963752746582

Token 50: ' itertools' (ID: 103178)
  Prédit: ' itertools'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.17006656527519226
    2. ' operator' → logprob: -1.9200665950775146
    3. 'operator' → logprob: -6.1700663566589355
    4. ' io' → logprob: -6.2950663566589355
    5. ' ' → logprob: -6.4200663566589355
    6. ' heap' → logprob: -6.5450663566589355
    7. ' typing' → logprob: -7.0450663566589355
    8. ' hashlib' → logprob: -7.1700663566589355
    9. ' fractions' → logprob: -8.170066833496094
    10. ' math' → logprob: -8.420066833496094

Token 51: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.03239027410745621
    2. 'import' → logprob: -3.5323903560638428
    3. '.' → logprob: -6.032390117645264
    4. ' ' → logprob: -9.032390594482422
    5. ' .' → logprob: -9.907390594482422
    6. '	import' → logprob: -10.532390594482422
    7. '.import' → logprob: -11.282390594482422
    8. '<|end|>' → logprob: -11.657390594482422
    9. ' itertools' → logprob: -11.782390594482422
    10. '_import' → logprob: -13.032390594482422

Token 52: ' combinations' (ID: 43835)
  Prédit: ' accumulate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' accumulate' → logprob: -0.17916598916053772
    2. ' combinations' → logprob: -3.179166078567505
    3. ' chain' → logprob: -3.554166078567505
    4. ' ' → logprob: -3.679166078567505
    5. 'com' → logprob: -3.804166078567505
    6. 'acc' → logprob: -4.054165840148926
    7. ' permutations' → logprob: -4.179165840148926
    8. ' product' → logprob: -5.054165840148926
    9. ' group' → logprob: -5.554165840148926
    10. ' cycle' → logprob: -7.054165840148926

Token 53: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00045593673712573946
    2. ',
' → logprob: -9.000455856323242
    3. 'import' → logprob: -9.125455856323242
    4. '<|end|>' → logprob: -9.500455856323242
    5. 'from' → logprob: -9.750455856323242
    6. ' ,' → logprob: -9.875455856323242
    7. '<|end|>' → logprob: -12.125455856323242
    8. ',n' → logprob: -12.375455856323242
    9. '```' → logprob: -12.625455856323242
    10. 'def' → logprob: -13.000455856323242

Token 54: ' combinations' (ID: 43835)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'per' → logprob: -1.0075993537902832
    2. 'com' → logprob: -1.5075993537902832
    3. 'product' → logprob: -2.257599353790283
    4. 'group' → logprob: -2.507599353790283
    5. 'count' → logprob: -2.632599353790283
    6. ' permutations' → logprob: -3.007599353790283
    7. 'compress' → logprob: -3.257599353790283
    8. 'cycle' → logprob: -3.382599353790283
    9. 'chain' → logprob: -3.757599353790283
    10. 'is' → logprob: -5.632599353790283

Token 55: '_with' (ID: 14161)
  Prédit: '_with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_with' → logprob: -0.0020600922871381044
    2. 'with' → logprob: -6.2520599365234375
    3. 'With' → logprob: -9.377059936523438
    4. '_without' → logprob: -10.377059936523438
    5. '_w' → logprob: -12.502059936523438
    6. '_WITH' → logprob: -12.752059936523438
    7. '_' → logprob: -12.752059936523438
    8. 'import' → logprob: -13.877059936523438
    9. '_per' → logprob: -14.002059936523438
    10. '-with' → logprob: -14.252059936523438

Token 56: '_re' (ID: 3067)
  Prédit: 'replacement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'replacement' → logprob: -0.08192567527294159
    2. '_re' → logprob: -2.581925630569458
    3. ' replacement' → logprob: -5.831925868988037
    4. 'Replacement' → logprob: -10.081925392150879
    5. 're' → logprob: -10.331925392150879
    6. '-re' → logprob: -11.956925392150879
    7. 'replace' → logprob: -11.956925392150879
    8. ' Replacement' → logprob: -12.456925392150879
    9. 'rep' → logprob: -13.081925392150879
    10. 'r' → logprob: -13.581925392150879

Token 57: 'placement' (ID: 17947)
  Prédit: 'placement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'placement' → logprob: -0.00039944887976162136
    2. 'placements' → logprob: -8.375399589538574
    3. 'place' → logprob: -9.250399589538574
    4. 'p' → logprob: -10.250399589538574
    5. 'peat' → logprob: -10.750399589538574
    6. 'pl' → logprob: -12.375399589538574
    7. 'm' → logprob: -12.375399589538574
    8. 'plac' → logprob: -12.375399589538574
    9. 's' → logprob: -14.125399589538574
    10. 'e' → logprob: -14.375399589538574

Token 58: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007002840866334736
    2. 'from' → logprob: -7.8757004737854
    3. ',
' → logprob: -8.875699996948242
    4. 'import' → logprob: -9.000699996948242
    5. ' ,' → logprob: -11.000699996948242
    6. '<|end|>' → logprob: -11.375699996948242
    7. ' from' → logprob: -12.375699996948242
    8. ',

' → logprob: -13.250699996948242
    9. ',b' → logprob: -13.250699996948242
    10. ',d' → logprob: -13.375699996948242

Token 59: ' product' (ID: 1888)
  Prédit: ' permutations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' permutations' → logprob: -0.2873935401439667
    2. 'product' → logprob: -2.912393569946289
    3. ' product' → logprob: -3.287393569946289
    4. ' compress' → logprob: -3.537393569946289
    5. 'compress' → logprob: -3.662393569946289
    6. 'per' → logprob: -3.787393569946289
    7. 'cycle' → logprob: -3.912393569946289
    8. 'count' → logprob: -4.037393569946289
    9. ' accumulate' → logprob: -4.412393569946289
    10. 'group' → logprob: -5.037393569946289

Token 60: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005577721633017063
    2. 'from' → logprob: -6.380577564239502
    3. '<|end|>' → logprob: -6.505577564239502
    4. 'import' → logprob: -6.755577564239502
    5. ',
' → logprob: -7.005577564239502
    6. '\n' → logprob: -9.75557804107666
    7. ' ,' → logprob: -10.13057804107666
    8. '<|end|>' → logprob: -10.38057804107666
    9. '```' → logprob: -10.63057804107666
    10. '\' → logprob: -11.00557804107666

Token 61: ' permutations' (ID: 174595)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.586723804473877
    2. ' permutations' → logprob: -0.836723804473877
    3. 'group' → logprob: -5.461723804473877
    4. 'cycle' → logprob: -6.086723804473877
    5. ' accumulate' → logprob: -6.836723804473877
    6. ' group' → logprob: -7.086723804473877
    7. 'chain' → logprob: -7.461723804473877
    8. 'count' → logprob: -7.836723804473877
    9. ' chain' → logprob: -8.211723327636719
    10. ' cycle' → logprob: -8.336723327636719

Token 62: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.036136481910943985
    2. 'import' → logprob: -4.411136627197266
    3. 'from' → logprob: -4.661136627197266
    4. ',
' → logprob: -4.911136627197266
    5. '<|end|>' → logprob: -5.286136627197266
    6. '\n' → logprob: -8.286136627197266
    7. '
' → logprob: -8.411136627197266
    8. ' ,' → logprob: -8.536136627197266
    9. 'def' → logprob: -9.036136627197266
    10. '<|end|>' → logprob: -9.161136627197266

Token 63: 'from' (ID: 2845)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.045281268656253815
    2. 'import' → logprob: -4.045281410217285
    3. '<|end|>' → logprob: -4.420281410217285
    4. 'from' → logprob: -4.545281410217285
    5. ',
' → logprob: -6.170281410217285
    6. 'def' → logprob: -7.920281410217285
    7. ' ,' → logprob: -8.295281410217285
    8. '\n' → logprob: -8.295281410217285
    9. '```' → logprob: -8.545281410217285
    10. '<|end|>' → logprob: -8.545281410217285

Token 64: ' operator' (ID: 11019)
  Prédit: ' operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.2989494502544403
    2. 'operator' → logprob: -1.4239494800567627
    3. 'math' → logprob: -5.673949241638184
    4. ' typing' → logprob: -5.923949241638184
    5. ' math' → logprob: -6.048949241638184
    6. ' keyword' → logprob: -6.048949241638184
    7. 'keyword' → logprob: -6.798949241638184
    8. ' statistics' → logprob: -6.923949241638184
    9. 'os' → logprob: -7.048949241638184
    10. 'json' → logprob: -7.423949241638184

Token 65: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.03829611465334892
    2. 'import' → logprob: -3.4132962226867676
    3. '<|end|>' → logprob: -5.538296222686768
    4. ' ' → logprob: -7.413296222686768
    5. '	import' → logprob: -10.28829574584961
    6. ' as' → logprob: -10.78829574584961
    7. ',' → logprob: -10.78829574584961
    8. '<|end|>' → logprob: -11.78829574584961
    9. '_import' → logprob: -11.91329574584961
    10. ' ,' → logprob: -12.41329574584961

Token 66: ' add' (ID: 1147)
  Prédit: ' item'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' item' → logprob: -0.1147160530090332
    2. 'item' → logprob: -2.864716053009033
    3. ' mul' → logprob: -4.114716053009033
    4. ' attr' → logprob: -4.114716053009033
    5. ' add' → logprob: -4.364716053009033
    6. 'attr' → logprob: -6.114716053009033
    7. 'mul' → logprob: -6.489716053009033
    8. 'add' → logprob: -7.114716053009033
    9. 'getitem' → logprob: -7.864716053009033
    10. ' method' → logprob: -8.239715576171875

Token 67: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007786541245877743
    2. ' ,' → logprob: -8.500778198242188
    3. ',
' → logprob: -8.750778198242188
    4. 'import' → logprob: -8.875778198242188
    5. '<|end|>' → logprob: -9.000778198242188
    6. 'from' → logprob: -10.500778198242188
    7. ',s' → logprob: -10.500778198242188
    8. ' ' → logprob: -11.000778198242188
    9. 's' → logprob: -11.500778198242188
    10. ' as' → logprob: -11.750778198242188

Token 68: ' mul' (ID: 9975)
  Prédit: ' mul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mul' → logprob: -0.4517894685268402
    2. ' sub' → logprob: -1.9517894983291626
    3. 'mul' → logprob: -1.9517894983291626
    4. 'sub' → logprob: -3.201789379119873
    5. 'item' → logprob: -3.951789379119873
    6. ' item' → logprob: -4.451789379119873
    7. 'getitem' → logprob: -6.451789379119873
    8. 'attr' → logprob: -6.576789379119873
    9. ' i' → logprob: -6.951789379119873
    10. ' attr' → logprob: -7.451789379119873

Token 69: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.022771095857024193
    2. '<|end|>' → logprob: -4.772770881652832
    3. '
' → logprob: -5.147770881652832
    4. 'import' → logprob: -5.897770881652832
    5. ',
' → logprob: -6.147770881652832
    6. 'from' → logprob: -6.897770881652832
    7. '\n' → logprob: -7.022770881652832
    8. ' ' → logprob: -8.147770881652832
    9. ' ,' → logprob: -8.897770881652832
    10. '<|end|>' → logprob: -8.897770881652832

Token 70: ' sub' (ID: 1543)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.2527003586292267
    2. ' sub' → logprob: -1.6277003288269043
    3. 'pow' → logprob: -4.502700328826904
    4. ' item' → logprob: -5.252700328826904
    5. 'item' → logprob: -5.502700328826904
    6. 'neg' → logprob: -6.252700328826904
    7. ' tr' → logprob: -6.877700328826904
    8. 'tr' → logprob: -6.877700328826904
    9. '   ' → logprob: -7.877700328826904
    10. 'flo' → logprob: -7.877700328826904

Token 71: '

' (ID: 279)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11876309663057327
    2. 'import' → logprob: -2.9937632083892822
    3. '<|end|>' → logprob: -3.9937632083892822
    4. '
' → logprob: -4.243762969970703
    5. 'from' → logprob: -4.743762969970703
    6. ',
' → logprob: -5.493762969970703
    7. '\n' → logprob: -5.618762969970703
    8. '

' → logprob: -5.868762969970703
    9. ' ' → logprob: -6.118762969970703
    10. '' → logprob: -6.743762969970703

Token 72: 'sys' (ID: 17324)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.1943236589431763
    2. '#' → logprob: -1.8193236589431763
    3. 'import' → logprob: -1.9443236589431763
    4. ',' → logprob: -2.1943235397338867
    5. 'from' → logprob: -2.5693235397338867
    6. 'class' → logprob: -2.6943235397338867
    7. '\n' → logprob: -2.9443235397338867
    8. '
' → logprob: -3.3193235397338867
    9. '\' → logprob: -4.569323539733887
    10. '_' → logprob: -4.944323539733887

Token 73: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -5.574251918005757e-05
    2. ' .' → logprob: -10.750055313110352
    3. '.setdefault' → logprob: -12.625055313110352
    4. '.readline' → logprob: -12.750055313110352
    5. '.stdout' → logprob: -12.875055313110352
    6. '.argv' → logprob: -12.875055313110352
    7. '.exit' → logprob: -12.875055313110352
    8. '.stdin' → logprob: -13.125055313110352
    9. '.`' → logprob: -13.250055313110352
    10. '.user' → logprob: -13.250055313110352

Token 74: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.004382893908768892
    2. '_rec' → logprob: -5.629383087158203
    3. ' recursion' → logprob: -8.379383087158203
    4. '_limit' → logprob: -8.504383087158203
    5. 'limit' → logprob: -9.129383087158203
    6. '_int' → logprob: -10.379383087158203
    7. 's' → logprob: -10.379383087158203
    8. '_' → logprob: -11.129383087158203
    9. '_execution' → logprob: -11.129383087158203
    10. '_exc' → logprob: -11.379383087158203

Token 75: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0018382027046754956
    2. 'ursive' → logprob: -6.751838207244873
    3. 'urs' → logprob: -7.876838207244873
    4. 'ur' → logprob: -8.876837730407715
    5. 'limit' → logprob: -9.251837730407715
    6. '_limit' → logprob: -11.501837730407715
    7. 'urf' → logprob: -11.876837730407715
    8. 'urse' → logprob: -11.876837730407715
    9. 'ursor' → logprob: -12.251837730407715
    10. 'ursively' → logprob: -12.501837730407715

Token 76: 'limit' (ID: 19698)
  Prédit: '_limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.038346126675605774
    2. 'limit' → logprob: -3.2883460521698
    3. '_depth' → logprob: -8.288346290588379
    4. '_lim' → logprob: -10.663346290588379
    5. ' limit' → logprob: -11.413346290588379
    6. '_LIMIT' → logprob: -11.788346290588379
    7. 'lim' → logprob: -12.538346290588379
    8. '_limits' → logprob: -13.038346290588379
    9. '_threshold' → logprob: -13.913346290588379
    10. 'depth' → logprob: -14.163346290588379

Token 77: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.842555426876061e-06
    2. '(
' → logprob: -13.375004768371582
    3. '(

' → logprob: -14.250004768371582
    4. '("("' → logprob: -14.375004768371582
    5. '((' → logprob: -14.500004768371582
    6. ' (' → logprob: -14.875004768371582
    7. '```' → logprob: -15.125004768371582
    8. '<|end|>' → logprob: -15.250004768371582
    9. '(`' → logprob: -16.1250057220459
    10. ')(' → logprob: -16.1250057220459

Token 78: '100' (ID: 1353)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.10035979747772217
    2. '100' → logprob: -2.3503599166870117
    3. '9' → logprob: -9.975359916687012
    4. '1' → logprob: -10.100359916687012
    5. ' ' → logprob: -10.350359916687012
    6. '999' → logprob: -11.850359916687012
    7. '300' → logprob: -11.850359916687012
    8. '900' → logprob: -12.225359916687012
    9. '500' → logprob: -12.600359916687012
    10. '104' → logprob: -12.725359916687012

Token 79: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.4049411118030548
    2. '00' → logprob: -1.1549410820007324
    3. '0' → logprob: -4.029941082000732
    4. '500' → logprob: -9.77994155883789
    5. '50' → logprob: -10.65494155883789
    6. '_' → logprob: -10.90494155883789
    7. ')' → logprob: -11.40494155883789
    8. '050' → logprob: -12.02994155883789
    9. '9' → logprob: -12.65494155883789
    10. '002' → logprob: -13.27994155883789

Token 80: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0619877465069294
    2. '0' → logprob: -2.8119876384735107
    3. '1' → logprob: -11.31198787689209
    4. ')
' → logprob: -12.68698787689209
    5. '))' → logprob: -13.81198787689209
    6. '')' → logprob: -14.18698787689209
    7. ' )' → logprob: -14.31198787689209
    8. '`)' → logprob: -14.31198787689209
    9. '```' → logprob: -14.81198787689209
    10. '")' → logprob: -15.31198787689209

Token 81: 'input' (ID: 2586)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12882184982299805
    2. '

' → logprob: -2.253821849822998
    3. '
' → logprob: -5.378821849822998
    4. '#' → logprob: -5.628821849822998
    5. 'def' → logprob: -6.128821849822998
    6. '' → logprob: -6.253821849822998
    7. '\n' → logprob: -6.503821849822998
    8. 'n' → logprob: -7.628821849822998
    9. '\' → logprob: -8.128822326660156
    10. '```' → logprob: -8.128822326660156

Token 82: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01571442000567913
    2. '()' → logprob: -4.265714645385742
    3. '.' → logprob: -6.765714645385742
    4. '(
' → logprob: -9.265714645385742
    5. '```' → logprob: -9.890714645385742
    6. '("("' → logprob: -10.015714645385742
    7. '<|end|>' → logprob: -10.140714645385742
    8. ')' → logprob: -10.515714645385742
    9. '("")' → logprob: -10.640714645385742
    10. '=' → logprob: -11.140714645385742

Token 83: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.15394467115402222
    2. ' input' → logprob: -2.153944730758667
    3. 'input' → logprob: -4.153944492340088
    4. 'sys' → logprob: -4.653944492340088
    5. ' lambda' → logprob: -7.153944492340088
    6. ' raw' → logprob: -8.278944969177246
    7. '	sys' → logprob: -9.403944969177246
    8. '=sys' → logprob: -9.403944969177246
    9. 'lambda' → logprob: -9.653944969177246
    10. ' ' → logprob: -9.778944969177246

Token 84: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.18916942179203033
    2. '.stdin' → logprob: -1.8141694068908691
    3. '.readline' → logprob: -4.814169406890869
    4. '.stdout' → logprob: -7.189169406890869
    5. ' .' → logprob: -8.689169883728027
    6. '.argv' → logprob: -9.939169883728027
    7. '._' → logprob: -10.314169883728027
    8. '.​' → logprob: -10.439169883728027
    9. '.
' → logprob: -10.564169883728027
    10. '.stderr' → logprob: -10.814169883728027

Token 85: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0009474263642914593
    2. '.' → logprob: -7.25094747543335
    3. '.read' → logprob: -8.375946998596191
    4. '.buffer' → logprob: -12.875946998596191
    5. '.Read' → logprob: -13.750946998596191
    6. '.stdin' → logprob: -13.875946998596191
    7. '.readlines' → logprob: -14.500946998596191
    8. '.__' → logprob: -15.000946998596191
    9. '._' → logprob: -15.125946998596191
    10. '.READ' → logprob: -15.500946998596191

Token 86: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6633515954017639
    2. 'def' → logprob: -1.2883515357971191
    3. '

' → logprob: -1.6633515357971191
    4. '\' → logprob: -4.913351535797119
    5. '\n' → logprob: -5.163351535797119
    6. '
' → logprob: -6.413351535797119
    7. '' → logprob: -6.663351535797119
    8. '#' → logprob: -7.413351535797119
    9. '<|end|>' → logprob: -7.413351535797119
    10. 'class' → logprob: -7.538351535797119

Token 87: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5742528438568115
    2. '
' → logprob: -1.8242528438568115
    3. 'class' → logprob: -1.8242528438568115
    4. 'n' → logprob: -2.8242528438568115
    5. '

' → logprob: -3.1992528438568115
    6. '\' → logprob: -5.074253082275391
    7. '#' → logprob: -5.574253082275391
    8. '\n' → logprob: -6.074253082275391
    9. 'd' → logprob: -7.949253082275391
    10. 'N' → logprob: -7.949253082275391

Token 88: ' read' (ID: 1729)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5108268857002258
    2. ' main' → logprob: -1.510826826095581
    3. '_' → logprob: -2.385826826095581
    4. ' solve' → logprob: -2.635826826095581
    5. ' dfs' → logprob: -4.88582706451416
    6. ' _' → logprob: -6.51082706451416
    7. '_main' → logprob: -7.13582706451416
    8. ' a' → logprob: -7.13582706451416
    9. '_solver' → logprob: -7.26082706451416
    10. 'solve' → logprob: -7.88582706451416

Token 89: '_int' (ID: 12285)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.47968369722366333
    2. '()' → logprob: -1.3546836376190186
    3. '(' → logprob: -2.6046836376190186
    4. '_' → logprob: -3.3546836376190186
    5. 'line' → logprob: -4.479683876037598
    6. 'Line' → logprob: -7.229683876037598
    7. '():' → logprob: -7.604683876037598
    8. 's' → logprob: -8.354683876037598
    9. '_LINE' → logprob: -8.979683876037598
    10. '_lines' → logprob: -9.229683876037598

Token 90: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.1343465894460678
    2. '()' → logprob: -2.2593464851379395
    3. 's' → logprob: -3.8843464851379395
    4. ' ()' → logprob: -8.134346961975098
    5. '(' → logprob: -8.259346961975098
    6. '():
' → logprob: -9.509346961975098
    7. ' ():' → logprob: -9.759346961975098
    8. 'List' → logprob: -12.384346961975098
    9. '(s' → logprob: -12.509346961975098
    10. '()*' → logprob: -12.759346961975098

Token 91: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.08954904973506927
    2. '()' → logprob: -2.4645490646362305
    3. ' ():' → logprob: -8.21454906463623
    4. '():
' → logprob: -8.46454906463623
    5. ' ()' → logprob: -9.58954906463623
    6. '(' → logprob: -10.46454906463623
    7. ':' → logprob: -10.83954906463623
    8. '()>' → logprob: -12.83954906463623
    9. '()*' → logprob: -13.33954906463623
    10. '()
' → logprob: -13.96454906463623

Token 92: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.1825975775718689
    2. 'int' → logprob: -2.8075976371765137
    3. 'return' (adapté à ' return') → logprob: -3.0575976371765137
    4. ' ' → logprob: -3.5575976371765137
    5. ' int' → logprob: -3.9325976371765137
    6. '()' → logprob: -4.932597637176514
    7. ' ()' → logprob: -6.807597637176514
    8. ' map' → logprob: -7.682597637176514
    9. '    ' → logprob: -7.932597637176514
    10. '(int' → logprob: -7.932597637176514

Token 93: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.018176162615418434
    2. 'int' → logprob: -4.018176078796387
    3. '(int' → logprob: -11.768176078796387
    4. ' in' → logprob: -11.893176078796387
    5. ' ' → logprob: -12.393176078796387
    6. '	int' → logprob: -12.768176078796387
    7. '   ' → logprob: -13.268176078796387
    8. '<int' → logprob: -14.518176078796387
    9. ' map' → logprob: -14.768176078796387
    10. '[int' → logprob: -14.893176078796387

Token 94: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12699498236179352
    2. '(input' → logprob: -2.126995086669922
    3. '(
' → logprob: -10.001995086669922
    4. 'input' → logprob: -11.001995086669922
    5. '(

' → logprob: -12.626995086669922
    6. '(sys' → logprob: -13.876995086669922
    7. '()' → logprob: -15.751995086669922
    8. ' input' → logprob: -16.251995086669922
    9. '(in' → logprob: -16.751995086669922
    10. ' (' → logprob: -17.001995086669922

Token 95: '())

' (ID: 27654)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.1130499541759491
    2. '())' → logprob: -2.3630499839782715
    3. '()' → logprob: -4.3630499839782715
    4. '()
' → logprob: -11.363049507141113
    5. ' ())' → logprob: -12.238049507141113
    6. '(' → logprob: -13.738049507141113
    7. '())
' → logprob: -14.363049507141113
    8. '()`' → logprob: -14.988049507141113
    9. '().
' → logprob: -14.988049507141113
    10. '()[' → logprob: -14.988049507141113

Token 96: 'def' (ID: 1314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.27270612120628357
    2. '()
' → logprob: -2.3977060317993164
    3. '(' → logprob: -2.5227060317993164
    4. '(
' → logprob: -3.2727060317993164
    5. '
' → logprob: -4.397706031799316
    6. '\n' → logprob: -4.897706031799316
    7. '()

' → logprob: -5.397706031799316
    8. '()\' → logprob: -5.897706031799316
    9. 'def' → logprob: -7.022706031799316
    10. '\' → logprob: -8.522706031799316

Token 97: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.003031309461221099
    2. 'read' → logprob: -5.878031253814697
    3. '_read' → logprob: -8.628031730651855
    4. '_' → logprob: -10.253031730651855
    5. ' readline' → logprob: -12.503031730651855
    6. '	read' → logprob: -12.628031730651855
    7. ' reads' → logprob: -13.128031730651855
    8. ' write' → logprob: -13.253031730651855
    9. ' ' → logprob: -14.378031730651855
    10. 's' → logprob: -15.628031730651855

Token 98: '_int' (ID: 12285)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5983538031578064
    2. '_line' → logprob: -1.7233538627624512
    3. '_list' → logprob: -1.8483538627624512
    4. '_array' → logprob: -2.848353862762451
    5. '_int' → logprob: -3.223353862762451
    6. '_str' → logprob: -4.973353862762451
    7. ' _' → logprob: -5.848353862762451
    8. '_vec' → logprob: -6.973353862762451
    9. '()' → logprob: -7.223353862762451
    10. '__' → logprob: -7.223353862762451

Token 99: '_n' (ID: 2170)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.038172535598278046
    2. '_list' → logprob: -4.038172721862793
    3. '()' → logprob: -4.163172721862793
    4. '_array' → logprob: -5.913172721862793
    5. '_line' → logprob: -7.038172721862793
    6. '_s' → logprob: -8.413172721862793
    7. 'list' → logprob: -8.663172721862793
    8. '_' → logprob: -9.038172721862793
    9. 'line' → logprob: -9.788172721862793
    10. '_vector' → logprob: -10.663172721862793

Token 100: '():
' (ID: 8595)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0052688573487102985
    2. '_list' → logprob: -6.6302690505981445
    3. 'list' → logprob: -7.1302690505981445
    4. '`()' → logprob: -7.6302690505981445
    5. '()">' → logprob: -8.130269050598145
    6. '()]' → logprob: -8.255269050598145
    7. '()>' → logprob: -8.505269050598145
    8. '())' → logprob: -8.505269050598145
    9. 'ow' → logprob: -8.755269050598145
    10. '_' → logprob: -8.880269050598145

Token 101: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.015088981948792934
    2. '():' → logprob: -5.26508903503418
    3. '()[' → logprob: -5.51508903503418
    4. '().' → logprob: -5.89008903503418
    5. '(' → logprob: -6.76508903503418
    6. '()*' → logprob: -7.76508903503418
    7. '():
' → logprob: -8.01508903503418
    8. '(){' → logprob: -9.14008903503418
    9. 'list' → logprob: -9.26508903503418
    10. ' ()' → logprob: -9.26508903503418

Token 102: ' return' (ID: 622)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.06714927405118942
    2. ' list' → logprob: -3.0671491622924805
    3. 'map' → logprob: -4.3171491622924805
    4. '()' → logprob: -5.9421491622924805
    5. ' map' → logprob: -6.5671491622924805
    6. 'return' (adapté à ' return') → logprob: -8.06714916229248
    7. 'tuple' → logprob: -8.44214916229248
    8. '[' → logprob: -8.81714916229248
    9. '()[' → logprob: -8.94214916229248
    10. '[]' → logprob: -9.81714916229248

Token 103: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.3874146640300751
    2. 'list' → logprob: -1.1374146938323975
    3. 'map' → logprob: -8.262414932250977
    4. ' map' → logprob: -8.262414932250977
    5. '(list' → logprob: -11.762414932250977
    6. '[' → logprob: -11.887414932250977
    7. '[list' → logprob: -12.512414932250977
    8. ' [' → logprob: -12.762414932250977
    9. '	list' → logprob: -13.262414932250977
    10. ' tuple' → logprob: -13.512414932250977

Token 104: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.011056429706513882
    2. '(' → logprob: -4.511056423187256
    3. '(input' → logprob: -13.261056900024414
    4. '(int' → logprob: -13.386056900024414
    5. '(
' → logprob: -13.386056900024414
    6. 'map' → logprob: -13.636056900024414
    7. '(

' → logprob: -14.261056900024414
    8. ' map' → logprob: -14.886056900024414
    9. '(list' → logprob: -14.886056900024414
    10. '(eval' → logprob: -15.261056900024414

Token 105: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0028406570199877024
    2. '(' → logprob: -5.877840518951416
    3. '(
' → logprob: -11.377840995788574
    4. 'int' → logprob: -11.377840995788574
    5. ')' → logprob: -12.502840995788574
    6. ' (' → logprob: -13.002840995788574
    7. '<int' → logprob: -13.127840995788574
    8. ',int' → logprob: -13.252840995788574
    9. '[int' → logprob: -13.752840995788574
    10. ')(' → logprob: -14.752840995788574

Token 106: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6947910189628601
    2. ',input' → logprob: -0.6947910189628601
    3. '(input' → logprob: -6.569790840148926
    4. '(' → logprob: -9.069790840148926
    5. ',(' → logprob: -9.819790840148926
    6. ' ,' → logprob: -10.069790840148926
    7. 'input' → logprob: -10.819790840148926
    8. ' (' → logprob: -13.319790840148926
    9. ' input' → logprob: -13.819790840148926
    10. ',int' → logprob: -13.944790840148926

Token 107: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.06996578723192215
    2. ' input' → logprob: -2.6949658393859863
    3. ',input' → logprob: -11.944965362548828
    4. '   ' → logprob: -12.069965362548828
    5. ')' → logprob: -12.194965362548828
    6. '(input' → logprob: -12.569965362548828
    7. '
' → logprob: -12.819965362548828
    8. ' ' → logprob: -13.194965362548828
    9. '	input' → logprob: -13.319965362548828
    10. '    ' → logprob: -14.319965362548828

Token 108: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.2200749754119897e-06
    2. '()' → logprob: -13.125001907348633
    3. ' ().' → logprob: -15.875001907348633
    4. '(' → logprob: -17.875001907348633
    5. '().__' → logprob: -19.500001907348633
    6. '.' → logprob: -19.500001907348633
    7. '.readline' → logprob: -19.625001907348633
    8. '()
' → logprob: -19.750001907348633
    9. '   ' → logprob: -20.000001907348633
    10. '.strip' → logprob: -20.125001907348633

Token 109: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.18925240635871887
    2. 'split' → logprob: -2.1892523765563965
    3. 'read' → logprob: -3.0642523765563965
    4. 'rstrip' → logprob: -4.3142523765563965
    5. ')' → logprob: -8.064252853393555
    6. '.readline' → logprob: -10.689252853393555
    7. ' readline' → logprob: -12.189252853393555
    8. ' strip' → logprob: -12.439252853393555
    9. '().' → logprob: -12.564252853393555
    10. '))' → logprob: -13.939252853393555

Token 110: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.04433750733733177
    2. '()' → logprob: -3.544337511062622
    3. '))' → logprob: -4.294337272644043
    4. '(' → logprob: -7.794337272644043
    5. '())' → logprob: -8.544337272644043
    6. '()))
' → logprob: -8.544337272644043
    7. '()));' → logprob: -11.044337272644043
    8. '()))

' → logprob: -12.294337272644043
    9. ')' → logprob: -12.669337272644043
    10. '()
' → logprob: -13.419337272644043

Token 111: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.013697978109121323
    2. '\' → logprob: -4.638698101043701
    3. '
' → logprob: -6.138698101043701
    4. 'd' → logprob: -6.888698101043701
    5. '\n' → logprob: -7.513698101043701
    6. '#' → logprob: -9.888697624206543
    7. '_' → logprob: -9.888697624206543
    8. '

' → logprob: -11.013697624206543
    9. 'de' → logprob: -11.263697624206543
    10. '```' → logprob: -11.263697624206543

Token 112: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.1799091398715973
    2. ' read' → logprob: -1.804909110069275
    3. 'write' → logprob: -10.179908752441406
    4. 'print' → logprob: -10.304908752441406
    5. 'main' → logprob: -10.304908752441406
    6. ' main' → logprob: -11.304908752441406
    7. '_read' → logprob: -11.429908752441406
    8. ' readline' → logprob: -11.804908752441406
    9. '	read' → logprob: -12.054908752441406
    10. 'str' → logprob: -12.804908752441406

Token 113: '_float' (ID: 44505)
  Prédit: '_str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.8785594701766968
    2. '_' → logprob: -1.2535594701766968
    3. '_string' → logprob: -2.1285595893859863
    4. '_line' → logprob: -2.1285595893859863
    5. '_int' → logprob: -3.6285595893859863
    6. '_char' → logprob: -5.253559589385986
    7. '_n' → logprob: -5.378559589385986
    8. '_text' → logprob: -5.878559589385986
    9. '_a' → logprob: -6.003559589385986
    10. '_s' → logprob: -6.003559589385986

Token 114: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00048191213863901794
    2. '()' → logprob: -7.875482082366943
    3. '():
' → logprob: -9.375481605529785
    4. '_n' → logprob: -12.250481605529785
    5. '():

' → logprob: -12.875481605529785
    6. '_' → logprob: -13.000481605529785
    7. '()>' → logprob: -13.125481605529785
    8. '()">' → logprob: -13.125481605529785
    9. ' ():' → logprob: -13.250481605529785
    10. '():
' → logprob: -14.500481605529785

Token 115: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.13412007689476013
    2. '():
' → logprob: -2.259119987487793
    3. '()' → logprob: -3.884119987487793
    4. ' ():' → logprob: -8.884119987487793
    5. 'return' → logprob: -9.134119987487793
    6. '()
' → logprob: -9.759119987487793
    7. '   ' → logprob: -10.009119987487793
    8. ' ()' → logprob: -10.509119987487793
    9. '():
' → logprob: -10.634119987487793
    10. ':' → logprob: -10.759119987487793

Token 116: ' return' (ID: 622)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.04867639020085335
    2. 'return' (adapté à ' return') → logprob: -3.0486764907836914
    3. '   ' → logprob: -10.298676490783691
    4. ' float' → logprob: -10.423676490783691
    5. ')' → logprob: -11.798676490783691
    6. 'def' → logprob: -12.173676490783691
    7. '=float' → logprob: -12.173676490783691
    8. ' return' → logprob: -12.798676490783691
    9. 'lambda' → logprob: -13.298676490783691
    10. '
' → logprob: -14.423676490783691

Token 117: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.0015023599844425917
    2. ' float' → logprob: -6.501502513885498
    3. '(float' → logprob: -16.501502990722656
    4. '	float' → logprob: -17.876502990722656
    5. '=float' → logprob: -18.876502990722656
    6. 'loat' → logprob: -19.376502990722656
    7. '<float' → logprob: -19.876502990722656
    8. '   ' → logprob: -20.126502990722656
    9. ',float' → logprob: -20.251502990722656
    10. 'f' → logprob: -20.376502990722656

Token 118: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.16024017333984375
    2. '(' → logprob: -1.9102401733398438
    3. ' (' → logprob: -12.035240173339844
    4. '(
' → logprob: -12.910240173339844
    5. 'input' → logprob: -13.160240173339844
    6. '()' → logprob: -13.160240173339844
    7. '(open' → logprob: -14.160240173339844
    8. '(read' → logprob: -14.285240173339844
    9. '(

' → logprob: -14.410240173339844
    10. '(output' → logprob: -15.910240173339844

Token 119: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.003936987370252609
    2. '()' → logprob: -5.628936767578125
    3. ')' → logprob: -8.378936767578125
    4. '().' → logprob: -9.628936767578125
    5. ' ())' → logprob: -11.253936767578125
    6. '(' → logprob: -11.378936767578125
    7. '()))' → logprob: -12.003936767578125
    8. '())
' → logprob: -12.378936767578125
    9. '();)' → logprob: -13.003936767578125
    10. '()[' → logprob: -13.628936767578125

Token 120: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.014620713889598846
    2. '()' → logprob: -4.639620780944824
    3. '

' → logprob: -6.014620780944824
    4. '
' → logprob: -7.139620780944824
    5. '<|end|>' → logprob: -7.139620780944824
    6. '()

' → logprob: -7.514620780944824
    7. ' def' → logprob: -9.389620780944824
    8. '```' → logprob: -9.764620780944824
    9. '()
' → logprob: -10.389620780944824
    10. '<|end|>' → logprob: -10.514620780944824

Token 121: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.38700318336486816
    2. 'read' → logprob: -1.1370031833648682
    3. '_read' → logprob: -10.262002944946289
    4. ' float' → logprob: -10.637002944946289
    5. 'float' → logprob: -11.012002944946289
    6. ' input' → logprob: -11.637002944946289
    7. ' readline' → logprob: -11.637002944946289
    8. '	read' → logprob: -11.762002944946289
    9. 'input' → logprob: -12.012002944946289
    10. 'str' → logprob: -12.512002944946289

Token 122: '_float' (ID: 44505)
  Prédit: '_float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_float' → logprob: -0.7262741327285767
    2. '_' → logprob: -0.8512741327285767
    3. '_string' → logprob: -3.601274013519287
    4. '_line' → logprob: -3.726274013519287
    5. '_int' → logprob: -3.726274013519287
    6. '_str' → logprob: -4.601274013519287
    7. '_n' → logprob: -7.351274013519287
    8. '_raw' → logprob: -7.476274013519287
    9. '_text' → logprob: -8.226274490356445
    10. '_s' → logprob: -8.226274490356445

Token 123: '_n' (ID: 2170)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.009291795082390308
    2. '_n' → logprob: -4.759291648864746
    3. '()>' → logprob: -8.259291648864746
    4. '_' → logprob: -8.384291648864746
    5. ' ()' → logprob: -10.009291648864746
    6. '(' → logprob: -10.134291648864746
    7. '()">' → logprob: -10.759291648864746
    8. '()
' → logprob: -11.134291648864746
    9. '()[' → logprob: -11.759291648864746
    10. '().' → logprob: -12.134291648864746

Token 124: '():
' (ID: 8595)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.000889067945536226
    2. '():' → logprob: -8.00088882446289
    3. '(' → logprob: -8.12588882446289
    4. '()>' → logprob: -9.62588882446289
    5. '():
' → logprob: -10.37588882446289
    6. '()">' → logprob: -10.62588882446289
    7. '().' → logprob: -10.75088882446289
    8. '(){' → logprob: -10.75088882446289
    9. '();' → logprob: -11.12588882446289
    10. '())' → logprob: -11.25088882446289

Token 125: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.02846907079219818
    2. '()' → logprob: -4.028469085693359
    3. '():
' → logprob: -4.653469085693359
    4. '):' → logprob: -7.903469085693359
    5. '()[' → logprob: -10.02846908569336
    6. '()):
' → logprob: -10.02846908569336
    7. ':' → logprob: -10.27846908569336
    8. '   ' → logprob: -10.52846908569336
    9. '()>' → logprob: -10.52846908569336
    10. 'return' → logprob: -10.77846908569336

Token 126: ' return' (ID: 622)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.005698753986507654
    2. 'return' (adapté à ' return') → logprob: -5.7556986808776855
    3. ' list' → logprob: -6.0056986808776855
    4. ' return' → logprob: -9.880699157714844
    5. 'map' → logprob: -13.630699157714844
    6. ')' → logprob: -15.005699157714844
    7. '   ' → logprob: -16.505699157714844
    8. '=list' → logprob: -16.505699157714844
    9. 'List' → logprob: -16.755699157714844
    10. ':list' → logprob: -17.005699157714844

Token 127: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.3868755102157593
    2. ' list' → logprob: -1.1368755102157593
    3. 'float' → logprob: -13.26187515258789
    4. 'map' → logprob: -13.38687515258789
    5. ' map' → logprob: -15.13687515258789
    6. ' ' → logprob: -15.51187515258789
    7. '[' → logprob: -15.63687515258789
    8. 'List' → logprob: -15.88687515258789
    9. '(list' → logprob: -16.38687515258789
    10. ' ' → logprob: -16.38687515258789

Token 128: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2526090741157532
    2. '(map' → logprob: -1.5026090145111084
    3. '(float' → logprob: -7.3776092529296875
    4. '(list' → logprob: -10.627609252929688
    5. '(
' → logprob: -11.502609252929688
    6. '(

' → logprob: -12.127609252929688
    7. '(int' → logprob: -13.002609252929688
    8. ' (' → logprob: -13.377609252929688
    9. '(lambda' → logprob: -13.627609252929688
    10. '(f' → logprob: -14.002609252929688

Token 129: '(float' (ID: 17830)
  Prédit: '(float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(float' → logprob: -0.25244441628456116
    2. '(' → logprob: -1.5024443864822388
    3. '(lambda' → logprob: -8.00244426727295
    4. '(int' → logprob: -9.62744426727295
    5. '(
' → logprob: -9.87744426727295
    6. '(f' → logprob: -10.87744426727295
    7. ' (' → logprob: -11.37744426727295
    8. 'float' → logprob: -11.50244426727295
    9. ')(' → logprob: -12.50244426727295
    10. ')' → logprob: -12.62744426727295

Token 130: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0636293888092041
    2. ',input' → logprob: -2.813629388809204
    3. '(input' → logprob: -6.563629150390625
    4. 'input' → logprob: -9.063629150390625
    5. '(' → logprob: -9.188629150390625
    6. ' ,' → logprob: -10.688629150390625
    7. '[input' → logprob: -13.313629150390625
    8. ')' → logprob: -13.563629150390625
    9. '(),' → logprob: -14.188629150390625
    10. '))' → logprob: -14.188629150390625

Token 131: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0700075700879097
    2. ' input' → logprob: -2.695007562637329
    3. '(input' → logprob: -9.69500732421875
    4. ',input' → logprob: -12.69500732421875
    5. ' ' → logprob: -13.07000732421875
    6. ')' → logprob: -13.44500732421875
    7. '	input' → logprob: -14.57000732421875
    8. '<input' → logprob: -14.69500732421875
    9. '=input' → logprob: -14.69500732421875
    10. '   ' → logprob: -14.94500732421875

Token 132: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.531315314830863e-06
    2. '()' → logprob: -13.125003814697266
    3. '.' → logprob: -14.000003814697266
    4. ').' → logprob: -14.875003814697266
    5. ')' → logprob: -15.625003814697266
    6. ' ().' → logprob: -17.125003814697266
    7. '.split' → logprob: -17.250003814697266
    8. '))' → logprob: -17.625003814697266
    9. '().__' → logprob: -17.875003814697266
    10. '>().' → logprob: -17.875003814697266

Token 133: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.060365608893335e-05
    2. 'strip' → logprob: -10.625041007995605
    3. ')' → logprob: -11.625041007995605
    4. '(split' → logprob: -13.125041007995605
    5. 'read' → logprob: -13.375041007995605
    6. ' split' → logprob: -13.500041007995605
    7. 'rstrip' → logprob: -13.750041007995605
    8. 'spl' → logprob: -14.375041007995605
    9. '.split' → logprob: -15.000041007995605
    10. '().' → logprob: -15.625041007995605

Token 134: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.35507676005363464
    2. '))' → logprob: -1.230076789855957
    3. '()' → logprob: -5.230076789855957
    4. '()))
' → logprob: -6.980076789855957
    5. '())' → logprob: -8.605076789855957
    6. '))
' → logprob: -9.980076789855957
    7. '(' → logprob: -10.355076789855957
    8. ')' → logprob: -10.855076789855957
    9. ' ))' → logprob: -11.480076789855957
    10. '()))

' → logprob: -11.480076789855957

Token 135: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0017436044290661812
    2. '
' → logprob: -6.376743793487549
    3. '\' → logprob: -10.62674331665039
    4. 'class' → logprob: -12.00174331665039
    5. '\n' → logprob: -12.50174331665039
    6. '

' → logprob: -13.12674331665039
    7. '#' → logprob: -13.75174331665039
    8. 'ndef' → logprob: -13.87674331665039
    9. '
' → logprob: -14.25174331665039
    10. 'd' → logprob: -15.00174331665039

Token 136: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.6328997015953064
    2. ' read' → logprob: -0.7578997015953064
    3. 'str' → logprob: -8.507899284362793
    4. '_read' → logprob: -10.632899284362793
    5. ' str' → logprob: -11.132899284362793
    6. 'main' → logprob: -11.632899284362793
    7. ' readline' → logprob: -11.757899284362793
    8. '	read' → logprob: -11.882899284362793
    9. ' main' → logprob: -12.007899284362793
    10. 'print' → logprob: -12.382899284362793

Token 137: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.2114119976758957
    2. '_line' → logprob: -2.586411952972412
    3. '_string' → logprob: -2.711411952972412
    4. '_' → logprob: -3.086411952972412
    5. '_text' → logprob: -7.336411952972412
    6. '_raw' → logprob: -7.836411952972412
    7. '_s' → logprob: -7.961411952972412
    8. '_list' → logprob: -8.08641242980957
    9. '_char' → logprob: -8.21141242980957
    10. '_int' → logprob: -8.33641242980957

Token 138: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0006969464011490345
    2. '():
' → logprob: -7.375697135925293
    3. '()' → logprob: -9.625697135925293
    4. ' ():' → logprob: -13.500697135925293
    5. '():

' → logprob: -14.000697135925293
    6. '():
' → logprob: -14.000697135925293
    7. '().' → logprob: -14.625697135925293
    8. '()>' → logprob: -14.875697135925293
    9. '()">' → logprob: -15.375697135925293
    10. '_n' → logprob: -16.000696182250977

Token 139: '   ' (ID: 271)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.251085489988327
    2. '()' → logprob: -1.6260855197906494
    3. '   ' → logprob: -4.50108528137207
    4. 'input' → logprob: -5.00108528137207
    5. 'return' → logprob: -5.12608528137207
    6. '()
' → logprob: -7.25108528137207
    7. 'rstrip' → logprob: -8.25108528137207
    8. '.strip' → logprob: -9.00108528137207
    9. '.rstrip' → logprob: -9.50108528137207
    10. 'strip' → logprob: -9.62608528137207

Token 140: ' return' (ID: 622)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.16054417192935944
    2. 'return' (adapté à ' return') → logprob: -1.9105441570281982
    3. '(input' → logprob: -9.410544395446777
    4. ' input' → logprob: -9.535544395446777
    5. '
' → logprob: -9.910544395446777
    6. '().' → logprob: -10.160544395446777
    7. 'rstrip' → logprob: -10.660544395446777
    8. '=input' → logprob: -11.160544395446777
    9. ' return' → logprob: -11.410544395446777
    10. '   ' → logprob: -12.035544395446777

Token 141: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.00012523093027994037
    2. ' input' → logprob: -9.00012493133545
    3. '(input' → logprob: -13.25012493133545
    4. 'sys' → logprob: -17.625125885009766
    5. 'str' → logprob: -18.000125885009766
    6. '=input' → logprob: -18.125125885009766
    7. 'inp' → logprob: -19.375125885009766
    8. 's' → logprob: -19.750125885009766
    9. 'strip' → logprob: -20.000125885009766
    10. 'string' → logprob: -20.375125885009766

Token 142: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4740917682647705
    2. '().' → logprob: -0.9740917682647705
    3. '(' → logprob: -12.474091529846191
    4. '())' → logprob: -13.099091529846191
    5. ' ()' → logprob: -13.474091529846191
    6. '()
' → logprob: -14.099091529846191
    7. '().__' → logprob: -14.474091529846191
    8. '()]' → logprob: -14.474091529846191
    9. 'rstrip' → logprob: -14.599091529846191
    10. '().'' → logprob: -14.724091529846191

Token 143: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.01416350994259119
    2. 'rstrip' → logprob: -4.264163494110107
    3. ' strip' → logprob: -17.014163970947266
    4. 'str' → logprob: -17.764163970947266
    5. 'split' → logprob: -18.139163970947266
    6. '_strip' → logprob: -18.639163970947266
    7. 'rst' → logprob: -18.764163970947266
    8. '(strip' → logprob: -19.639163970947266
    9. 'rs' → logprob: -20.639163970947266
    10. 'stripe' → logprob: -20.889163970947266

Token 144: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -5.908022285439074e-05
    2. '(' → logprob: -10.000059127807617
    3. '()
' → logprob: -11.750059127807617
    4. '())' → logprob: -12.875059127807617
    5. '()\' → logprob: -14.250059127807617
    6. '()

' → logprob: -14.500059127807617
    7. '()]' → logprob: -14.875059127807617
    8. '()`' → logprob: -15.375059127807617
    9. '()>' → logprob: -15.500059127807617
    10. ')' → logprob: -15.625059127807617

Token 145: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.000327956018736586
    2. 'class' → logprob: -8.125328063964844
    3. '
' → logprob: -10.750328063964844
    4. '#' → logprob: -12.125328063964844
    5. '\' → logprob: -13.375328063964844
    6. 'ndef' → logprob: -14.375328063964844
    7. 'from' → logprob: -14.500328063964844
    8. '```' → logprob: -14.875328063964844
    9. ' def' → logprob: -15.000328063964844
    10. ':def' → logprob: -15.000328063964844

Token 146: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.20296600461006165
    2. 'read' → logprob: -1.7029659748077393
    3. ' write' → logprob: -7.702966213226318
    4. ' main' → logprob: -8.45296573638916
    5. '_read' → logprob: -8.57796573638916
    6. 'write' → logprob: -8.57796573638916
    7. ' readline' → logprob: -9.07796573638916
    8. 'main' → logprob: -9.70296573638916
    9. 'print' → logprob: -9.70296573638916
    10. ' print' → logprob: -9.95296573638916

Token 147: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.01542650442570448
    2. '_line' → logprob: -4.6404266357421875
    3. '_' → logprob: -5.8904266357421875
    4. '_list' → logprob: -6.7654266357421875
    5. '_int' → logprob: -6.8904266357421875
    6. '_n' → logprob: -7.6404266357421875
    7. '_s' → logprob: -10.265426635742188
    8. '_string' → logprob: -10.265426635742188
    9. '_lines' → logprob: -10.640426635742188
    10. '__' → logprob: -10.765426635742188

Token 148: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.0008000997477211058
    2. '()' → logprob: -7.500800132751465
    3. '_' → logprob: -8.375800132751465
    4. ' _' → logprob: -12.125800132751465
    5. 'n' → logprob: -12.625800132751465
    6. 's' → logprob: -13.125800132751465
    7. '_s' → logprob: -13.250800132751465
    8. ')' → logprob: -14.250800132751465
    9. '(n' → logprob: -14.250800132751465
    10. ' ()' → logprob: -14.750800132751465

Token 149: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00827660784125328
    2. '():
' → logprob: -5.383276462554932
    3. '()' → logprob: -5.633276462554932
    4. '(' → logprob: -10.00827693939209
    5. '():

' → logprob: -11.38327693939209
    6. ' ():' → logprob: -12.00827693939209
    7. '()>' → logprob: -12.50827693939209
    8. '().' → logprob: -13.25827693939209
    9. '():
' → logprob: -14.00827693939209
    10. '(
' → logprob: -14.13327693939209

Token 150: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.07016239315271378
    2. '():
' → logprob: -2.945162296295166
    3. '()' → logprob: -4.195162296295166
    4. '(' → logprob: -11.070162773132324
    5. ' ():' → logprob: -11.320162773132324
    6. '   ' → logprob: -11.445162773132324
    7. '()>' → logprob: -11.570162773132324
    8. '().' → logprob: -11.695162773132324
    9. '():

' → logprob: -11.945162773132324
    10. '):' → logprob: -12.070162773132324

Token 151: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.06784046441316605
    2. ' return' → logprob: -2.817840576171875
    3. '()' → logprob: -6.442840576171875
    4. ')' → logprob: -6.567840576171875
    5. 'def' → logprob: -7.442840576171875
    6. 'split' → logprob: -7.442840576171875
    7. 'lambda' → logprob: -7.567840576171875
    8. '()
' → logprob: -8.317840576171875
    9. '   ' → logprob: -8.567840576171875
    10. '
' → logprob: -8.817840576171875

Token 152: ' list' (ID: 1562)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.6415826082229614
    2. 'input' → logprob: -1.3915826082229614
    3. ' list' → logprob: -2.016582489013672
    4. 'list' → logprob: -2.391582489013672
    5. '(input' → logprob: -8.641582489013672
    6. '[input' → logprob: -9.641582489013672
    7. '[' → logprob: -11.391582489013672
    8. ' ' → logprob: -12.641582489013672
    9. ' [' → logprob: -12.891582489013672
    10. '(list' → logprob: -13.766582489013672

Token 153: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -1.0071721076965332
    2. '(input' → logprob: -1.1321721076965332
    3. '(str' → logprob: -1.8821721076965332
    4. '(' → logprob: -1.8821721076965332
    5. '(read' → logprob: -5.382172107696533
    6. '(strip' → logprob: -6.257172107696533
    7. '(split' → logprob: -7.632172107696533
    8. '(lambda' → logprob: -8.007171630859375
    9. '()' → logprob: -9.007171630859375
    10. '(
' → logprob: -10.007171630859375

Token 154: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -8.029847231227905e-05
    2. 'str' → logprob: -9.500080108642578
    3. '(input' → logprob: -12.500080108642578
    4. '(' → logprob: -13.750080108642578
    5. '(read' → logprob: -14.875080108642578
    6. '=str' → logprob: -15.750080108642578
    7. '(strip' → logprob: -16.625080108642578
    8. ' str' → logprob: -17.000080108642578
    9. '[str' → logprob: -17.375080108642578
    10. 'input' → logprob: -18.250080108642578

Token 155: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006007129326462746
    2. ',input' → logprob: -5.131007194519043
    3. '(),' → logprob: -10.256007194519043
    4. '(input' → logprob: -10.506007194519043
    5. ' ,' → logprob: -11.631007194519043
    6. 'input' → logprob: -12.256007194519043
    7. '(' → logprob: -13.131007194519043
    8. ' input' → logprob: -15.756007194519043
    9. '),' → logprob: -17.006006240844727
    10. '=input' → logprob: -17.131006240844727

Token 156: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.6931517124176025
    2. ' input' → logprob: -0.6931517124176025
    3. '   ' → logprob: -13.818151473999023
    4. ' ' → logprob: -13.943151473999023
    5. ',input' → logprob: -13.943151473999023
    6. '(input' → logprob: -14.068151473999023
    7. '=input' → logprob: -15.443151473999023
    8. '<input' → logprob: -15.693151473999023
    9. '	input' → logprob: -15.943151473999023
    10. '_input' → logprob: -16.068151473999023

Token 157: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.512236498361744e-07
    2. '.' → logprob: -15.500000953674316
    3. '()' → logprob: -15.500000953674316
    4. ' ().' → logprob: -17.125
    5. '))' → logprob: -17.25
    6. ')' → logprob: -18.625
    7. '(' → logprob: -18.625
    8. ' .' → logprob: -18.625
    9. '()))' → logprob: -19.25
    10. ').' → logprob: -19.875

Token 158: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00043102685594931245
    2. 'strip' → logprob: -7.750431060791016
    3. ' split' → logprob: -15.500431060791016
    4. '(split' → logprob: -16.750431060791016
    5. 'rstrip' → logprob: -17.000431060791016
    6. ')' → logprob: -17.375431060791016
    7. 'spl' → logprob: -17.750431060791016
    8. ' strip' → logprob: -19.750431060791016
    9. 'read' → logprob: -19.875431060791016
    10. '```' → logprob: -20.250431060791016

Token 159: '()))

' (ID: 125972)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.5794351696968079
    2. '()))' → logprob: -0.8294351696968079
    3. '()' → logprob: -5.704435348510742
    4. '())' → logprob: -9.079435348510742
    5. ')' → logprob: -10.454435348510742
    6. '()))
' → logprob: -11.954435348510742
    7. '(' → logprob: -11.954435348510742
    8. ')))' → logprob: -14.454435348510742
    9. '()));' → logprob: -14.454435348510742
    10. '))
' → logprob: -14.704435348510742

Token 160: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.014070766977965832
    2. 'class' → logprob: -4.389070987701416
    3. '
' → logprob: -7.264070987701416
    4. 'd' → logprob: -8.139070510864258
    5. '

' → logprob: -8.514070510864258
    6. '\' → logprob: -8.764070510864258
    7. '#' → logprob: -9.264070510864258
    8. '@' → logprob: -10.264070510864258
    9. 'from' → logprob: -11.514070510864258
    10. '```' → logprob: -11.514070510864258

Token 161: ' error' (ID: 2915)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.3299238681793213
    2. ' read' → logprob: -1.4549238681793213
    3. 'main' → logprob: -4.204923629760742
    4. ' solve' → logprob: -4.204923629760742
    5. 'read' → logprob: -4.704923629760742
    6. ' is' → logprob: -6.454923629760742
    7. 'solve' → logprob: -6.704923629760742
    8. ' factorial' → logprob: -6.954923629760742
    9. '_' → logprob: -7.704923629760742
    10. ' readline' → logprob: -8.204923629760742

Token 162: '_print' (ID: 31509)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.054258622229099274
    2. '(*' → logprob: -3.0542585849761963
    3. '():' → logprob: -6.054258823394775
    4. '(message' → logprob: -6.679258823394775
    5. '(
' → logprob: -7.554258823394775
    6. '(msg' → logprob: -7.804258823394775
    7. '(*)' → logprob: -8.304258346557617
    8. '(s' → logprob: -8.679258346557617
    9. '()' → logprob: -9.429258346557617
    10. '*' → logprob: -10.054258346557617

Token 163: '(*' (ID: 9000)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014964265748858452
    2. '():' → logprob: -4.5149641036987305
    3. '(*' → logprob: -5.8899641036987305
    4. '()' → logprob: -7.8899641036987305
    5. '(message' → logprob: -8.38996410369873
    6. '(s' → logprob: -8.38996410369873
    7. '(msg' → logprob: -10.01496410369873
    8. '("")' → logprob: -10.13996410369873
    9. '(*)' → logprob: -10.26496410369873
    10. '(":' → logprob: -10.38996410369873

Token 164: 'args' (ID: 4285)
  Prédit: 'args'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'args' → logprob: -0.02384105883538723
    2. 'a' → logprob: -3.773841142654419
    3. 'argv' → logprob: -7.64884090423584
    4. ' args' → logprob: -9.89884090423584
    5. ')' → logprob: -10.02384090423584
    6. 'k' → logprob: -12.14884090423584
    7. 'objs' → logprob: -12.52384090423584
    8. 'kwargs' → logprob: -13.02384090423584
    9. 'values' → logprob: -13.02384090423584
    10. 'objects' → logprob: -13.27384090423584

Token 165: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04051324352622032
    2. ',' → logprob: -3.290513277053833
    3. '):
' → logprob: -6.040513038635254
    4. ')' → logprob: -9.790513038635254
    5. '):
' → logprob: -11.290513038635254
    6. ' ):' → logprob: -11.540513038635254
    7. ':' → logprob: -12.290513038635254
    8. ' ,' → logprob: -12.665513038635254
    9. ' ' → logprob: -14.165513038635254
    10. '}:' → logprob: -15.165513038635254

Token 166: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6686192154884338
    2. ':' → logprob: -1.418619155883789
    3. '   ' → logprob: -1.543619155883789
    4. ' print' → logprob: -4.543619155883789
    5. ':
' → logprob: -4.918619155883789
    6. '):' → logprob: -5.043619155883789
    7. ',' → logprob: -5.543619155883789
    8. '):
' → logprob: -6.668619155883789
    9. 'import' → logprob: -7.168619155883789
    10. ' :' → logprob: -7.418619155883789

Token 167: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.001933873863890767
    2. ' print' → logprob: -6.251934051513672
    3. 'import' → logprob: -13.001934051513672
    4. '   ' → logprob: -13.126934051513672
    5. 'pass' → logprob: -14.126934051513672
    6. 'sys' → logprob: -15.751934051513672
    7. '	print' → logprob: -16.626934051513672
    8. '#print' → logprob: -17.001934051513672
    9. ' ' → logprob: -17.876934051513672
    10. '
' → logprob: -18.251934051513672

Token 168: '(*' (ID: 9000)
  Prédit: '(*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.313300758600235
    2. '(' → logprob: -1.3133007287979126
    3. '(
' → logprob: -10.188301086425781
    4. '(

' → logprob: -14.188301086425781
    5. '*' → logprob: -15.063301086425781
    6. '(\' → logprob: -16.31330108642578
    7. '(*(' → logprob: -16.43830108642578
    8. ' (*' → logprob: -17.06330108642578
    9. '(
' → logprob: -17.18830108642578
    10. '()' → logprob: -17.43830108642578

Token 169: 'args' (ID: 4285)
  Prédit: 'args'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'args' → logprob: -0.00014191943046171218
    2. '(args' → logprob: -8.875142097473145
    3. ' args' → logprob: -13.375142097473145
    4. '$args' → logprob: -16.125141143798828
    5. '[' → logprob: -16.250141143798828
    6. ',args' → logprob: -16.375141143798828
    7. '	args' → logprob: -16.500141143798828
    8. '(' → logprob: -17.625141143798828
    9. '.args' → logprob: -17.750141143798828
    10. 'sys' → logprob: -17.875141143798828

Token 170: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006775761488825083
    2. ',file' → logprob: -5.006775856018066
    3. 'file' → logprob: -10.131775856018066
    4. ' ,' → logprob: -10.881775856018066
    5. ')' → logprob: -13.756775856018066
    6. ',end' → logprob: -15.131775856018066
    7. ',f' → logprob: -15.756775856018066
    8. ',error' → logprob: -16.75677490234375
    9. ' file' → logprob: -17.13177490234375
    10. '，' → logprob: -17.25677490234375

Token 171: ' file' (ID: 1974)
  Prédit: 'file'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'file' → logprob: -5.860340752406046e-05
    2. ' file' → logprob: -9.7500581741333
    3. 'flush' → logprob: -15.6250581741333
    4. ',file' → logprob: -18.500059127807617
    5. 'fil' → logprob: -18.875059127807617
    6. '	file' → logprob: -18.875059127807617
    7. ' ' → logprob: -19.125059127807617
    8. 'sys' → logprob: -19.500059127807617
    9. '
' → logprob: -19.625059127807617
    10. '   ' → logprob: -19.875059127807617

Token 172: '=sys' (ID: 149200)
  Prédit: '=sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=sys' → logprob: -0.0005537479883059859
    2. '=' → logprob: -7.500553607940674
    3. '=subprocess' → logprob: -14.625554084777832
    4. 'sys' → logprob: -16.000553131103516
    5. '=file' → logprob: -17.500553131103516
    6. ' =' → logprob: -17.625553131103516
    7. '=open' → logprob: -17.625553131103516
    8. '(sys' → logprob: -17.750553131103516
    9. '=torch' → logprob: -17.875553131103516
    10. '=
' → logprob: -17.875553131103516

Token 173: '.stderr' (ID: 87058)
  Prédit: '.stderr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stderr' → logprob: -3.500108141452074e-05
    2. '.stdout' → logprob: -10.500035285949707
    3. '.' → logprob: -12.875035285949707
    4. 'stderr' → logprob: -12.875035285949707
    5. '.__' → logprob: -14.125035285949707
    6. '.st' → logprob: -14.500035285949707
    7. '.stdin' → logprob: -14.625035285949707
    8. '(stderr' → logprob: -15.500035285949707
    9. '.std' → logprob: -15.625035285949707
    10. '._' → logprob: -16.12503433227539

Token 174: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. ' )' → logprob: -15.75
    3. ')
' → logprob: -18.75
    4. ',' → logprob: -18.875
    5. '),' → logprob: -19.0
    6. ')}' → logprob: -19.625
    7. '))' → logprob: -19.625
    8. ',)' → logprob: -20.375
    9. ')`' → logprob: -20.5
    10. ').' → logprob: -20.625

Token 175: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.011507879942655563
    2. 'class' → logprob: -4.511507987976074
    3. '#' → logprob: -8.886507987976074
    4. '@' → logprob: -9.011507987976074
    5. '
' → logprob: -9.261507987976074
    6. '\' → logprob: -11.261507987976074
    7. '

' → logprob: -11.261507987976074
    8. '<|end|>' → logprob: -11.386507987976074
    9. 'from' → logprob: -11.511507987976074
    10. 'n' → logprob: -12.011507987976074

Token 176: ' mt' (ID: 16170)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.011746253818273544
    2. 'main' → logprob: -5.011746406555176
    3. ' solve' → logprob: -6.511746406555176
    4. ' debug' → logprob: -6.636746406555176
    5. ' dfs' → logprob: -7.886746406555176
    6. '_' → logprob: -8.011746406555176
    7. ' binary' → logprob: -8.386746406555176
    8. 'solve' → logprob: -8.636746406555176
    9. ' is' → logprob: -9.011746406555176
    10. ' safe' → logprob: -9.386746406555176

Token 177: '(f' (ID: 1526)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.44843778014183044
    2. '()' → logprob: -1.5734378099441528
    3. '199' → logprob: -3.0734376907348633
    4. 'imes' → logprob: -3.5734376907348633
    5. 'f' → logprob: -4.573437690734863
    6. '_init' → logprob: -4.948437690734863
    7. '()
' → logprob: -5.698437690734863
    8. '_def' → logprob: -5.823437690734863
    9. '_rand' → logprob: -5.823437690734863
    10. 'uples' → logprob: -5.823437690734863

Token 178: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.21909508109092712
    2. 'imes' → logprob: -2.71909499168396
    3. 'o' → logprob: -3.34409499168396
    4. 'def' → logprob: -3.96909499168396
    5. '):
' → logprob: -4.219095230102539
    6. 'x' → logprob: -4.219095230102539
    7. ',' → logprob: -5.094095230102539
    8. 'ype' → logprob: -5.344095230102539
    9. ')' → logprob: -5.344095230102539
    10. '(*' → logprob: -5.469095230102539

Token 179: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6256805658340454
    2. '   ' → logprob: -0.8756805658340454
    3. ' def' → logprob: -3.875680446624756
    4. ' ' → logprob: -4.750680446624756
    5. '
' → logprob: -5.125680446624756
    6. ')' → logprob: -5.750680446624756
    7. ' f' → logprob: -6.250680446624756
    8. '@' → logprob: -6.500680446624756
    9. 'return' → logprob: -7.125680446624756
    10. '=lambda' → logprob: -7.125680446624756

Token 180: ' import' (ID: 1588)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.12311418354511261
    2. ' def' → logprob: -3.4981141090393066
    3. '
' → logprob: -3.6231141090393066
    4. 'lambda' → logprob: -4.123114109039307
    5. 'f' → logprob: -4.623114109039307
    6. '   ' → logprob: -4.748114109039307
    7. ' f' → logprob: -4.998114109039307
    8. ' lambda' → logprob: -5.373114109039307
    9. 'return' → logprob: -5.748114109039307
    10. ')' → logprob: -6.248114109039307

Token 181: ' time' (ID: 1058)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.7993856072425842
    2. ' time' → logprob: -1.2993855476379395
    3. 'time' → logprob: -2.6743855476379395
    4. ' threading' → logprob: -2.7993855476379395
    5. 'types' → logprob: -3.2993855476379395
    6. ' typing' → logprob: -3.5493855476379395
    7. 'math' → logprob: -4.0493855476379395
    8. ' types' → logprob: -4.1743855476379395
    9. 'ime' → logprob: -4.2993855476379395
    10. ' functools' → logprob: -4.5493855476379395

Token 182: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8070294857025146
    2. '
' → logprob: -1.0570294857025146
    3. 'def' → logprob: -2.4320294857025146
    4. ' def' → logprob: -2.8070294857025146
    5. '	def' → logprob: -3.4320294857025146
    6. '    
' → logprob: -4.182029724121094
    7. '	
' → logprob: -6.432029724121094
    8. '    ' → logprob: -6.557029724121094
    9. '  
' → logprob: -6.682029724121094
    10. ' ' → logprob: -6.682029724121094

Token 183: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9383141398429871
    2. '
' → logprob: -1.5633141994476318
    3. '	def' → logprob: -1.5633141994476318
    4. ' def' → logprob: -2.813314199447632
    5. 'def' → logprob: -2.813314199447632
    6. '    
' → logprob: -3.688314199447632
    7. '	return' → logprob: -4.313313961029053
    8. '	
' → logprob: -4.938313961029053
    9. '()
' → logprob: -5.438313961029053
    10. '    ' → logprob: -5.938313961029053

Token 184: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.253314346075058
    2. 'def' (adapté à ' def') → logprob: -1.6283143758773804
    3. '   ' → logprob: -3.628314256668091
    4. '	def' → logprob: -7.12831449508667
    5. 'import' → logprob: -9.753314018249512
    6. ' ' → logprob: -10.503314018249512
    7. '
' → logprob: -11.128314018249512
    8. ' return' → logprob: -11.503314018249512
    9. '    ' → logprob: -11.628314018249512
    10. '  ' → logprob: -12.003314018249512

Token 185: ' wrap' (ID: 20404)
  Prédit: ' wrapper'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' wrapper' → logprob: -0.08277564495801926
    2. 'wrapper' → logprob: -2.582775592803955
    3. '_wrapper' → logprob: -6.457775592803955
    4. ' inner' → logprob: -7.082775592803955
    5. ' _' → logprob: -7.207775592803955
    6. '_wrap' → logprob: -8.707776069641113
    7. 'wrap' → logprob: -9.082776069641113
    8. 'inner' → logprob: -9.082776069641113
    9. ' wrapped' → logprob: -9.207776069641113
    10. ' wrap' → logprob: -9.582776069641113

Token 186: '(*' (ID: 9000)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0953235924243927
    2. '(*' → logprob: -2.5953235626220703
    3. '(f' → logprob: -4.22032356262207
    4. '(func' → logprob: -7.47032356262207
    5. '(
' → logprob: -7.84532356262207
    6. '(s' → logprob: -9.09532356262207
    7. '(fn' → logprob: -9.59532356262207
    8. 'per' → logprob: -9.72032356262207
    9. '(*)' → logprob: -9.72032356262207
    10. '():' → logprob: -10.22032356262207

Token 187: 'args' (ID: 4285)
  Prédit: 'args'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'args' → logprob: -0.0004342453321442008
    2. 'a' → logprob: -7.875434398651123
    3. 'argv' → logprob: -10.625433921813965
    4. '	args' → logprob: -12.125433921813965
    5. 'arg' → logprob: -12.250433921813965
    6. '   ' → logprob: -12.250433921813965
    7. ' args' → logprob: -12.625433921813965
    8. 'argc' → logprob: -12.750433921813965
    9. '_args' → logprob: -12.875433921813965
    10. 'ags' → logprob: -14.125433921813965

Token 188: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018198523670434952
    2. '):' → logprob: -4.018198490142822
    3. ')' → logprob: -10.14319896697998
    4. '):
' → logprob: -12.89319896697998
    5. ',
' → logprob: -13.39319896697998
    6. ' ,' → logprob: -13.39319896697998
    7. ',*' → logprob: -13.64319896697998
    8. '),' → logprob: -14.39319896697998
    9. ',args' → logprob: -14.51819896697998
    10. ',b' → logprob: -15.89319896697998

Token 189: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.030171362683176994
    2. ' **' → logprob: -3.5301713943481445
    3. 'kwargs' → logprob: -8.280171394348145
    4. ' kwargs' → logprob: -8.905171394348145
    5. '**)' → logprob: -11.280171394348145
    6. ')' → logprob: -12.655171394348145
    7. 'timeout' → logprob: -12.780171394348145
    8. ' ' → logprob: -13.155171394348145
    9. ' **)' → logprob: -13.280171394348145
    10. '*' → logprob: -13.405171394348145

Token 190: 'kwargs' (ID: 19200)
  Prédit: 'kwargs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kwargs' → logprob: -0.0014249986270442605
    2. 'kw' → logprob: -7.251424789428711
    3. 'args' → logprob: -7.376424789428711
    4. 'k' → logprob: -10.751424789428711
    5. ' kwargs' → logprob: -10.751424789428711
    6. ')' → logprob: -11.501424789428711
    7. '):' → logprob: -11.501424789428711
    8. '):
' → logprob: -11.876424789428711
    9. '_kwargs' → logprob: -12.251424789428711
    10. 'Kw' → logprob: -12.626424789428711

Token 191: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0006771695916540921
    2. ')' → logprob: -7.375677108764648
    3. '):
' → logprob: -10.000677108764648
    4. ':' → logprob: -12.625677108764648
    5. ' ):' → logprob: -14.000677108764648
    6. '   ' → logprob: -14.750677108764648
    7. ',' → logprob: -15.375677108764648
    8. '**' → logprob: -15.750677108764648
    9. '():' → logprob: -16.00067710876465
    10. ' ' → logprob: -17.25067710876465

Token 192: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007206532754935324
    2. '   ' → logprob: -8.250720977783203
    3. 'import' → logprob: -8.625720977783203
    4. '        
' → logprob: -10.375720977783203
    5. '           ' → logprob: -10.625720977783203
    6. '     ' → logprob: -10.750720977783203
    7. '	' → logprob: -10.875720977783203
    8. ',' → logprob: -11.000720977783203
    9. '<|end|>' → logprob: -11.125720977783203
    10. ' import' → logprob: -11.125720977783203

Token 193: ' s' (ID: 265)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.022087199613451958
    2. ' start' → logprob: -4.022087097167969
    3. 's' (adapté à ' s') → logprob: -6.272087097167969
    4. '       ' → logprob: -7.022087097167969
    5. 't' → logprob: -7.147087097167969
    6. 'import' → logprob: -8.647087097167969
    7. 'res' → logprob: -9.397087097167969
    8. '   ' → logprob: -10.522087097167969
    9. ' t' → logprob: -11.022087097167969
    10. 'st' → logprob: -11.272087097167969

Token 194: ' =' (ID: 314)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.03945915400981903
    2. '=' → logprob: -3.414459228515625
    3. ' =' → logprob: -5.539459228515625
    4. '_time' → logprob: -6.914459228515625
    5. '=time' → logprob: -7.539459228515625
    6. 'time' → logprob: -9.664459228515625
    7. '=start' → logprob: -9.664459228515625
    8. ' ' → logprob: -10.414459228515625
    9. '=t' → logprob: -10.414459228515625
    10. '	t' → logprob: -10.539459228515625

Token 195: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.47407805919647217
    2. ' time' → logprob: -0.9740780591964722
    3. '	time' → logprob: -14.224078178405762
    4. ' ' → logprob: -15.599078178405762
    5. '=time' → logprob: -16.724077224731445
    6. '   ' → logprob: -17.099077224731445
    7. ' ' → logprob: -18.349077224731445
    8. '.time' → logprob: -18.474077224731445
    9. '_time' → logprob: -18.974077224731445
    10. '"time' → logprob: -19.224077224731445

Token 196: '.time' (ID: 11486)
  Prédit: '.time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.time' → logprob: -0.22999395430088043
    2. '.' → logprob: -2.229994058609009
    3. '()' → logprob: -2.854994058609009
    4. '.per' → logprob: -3.354994058609009
    5. '.process' → logprob: -5.85499382019043
    6. '().' → logprob: -6.85499382019043
    7. '()
' → logprob: -7.22999382019043
    8. '.now' → logprob: -8.35499382019043
    9. '.clock' → logprob: -8.97999382019043
    10. ' .' → logprob: -9.22999382019043

Token 197: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.000493937055580318
    2. '()
' → logprob: -7.625494003295898
    3. '()*' → logprob: -12.500494003295898
    4. '();' → logprob: -14.375494003295898
    5. '()

' → logprob: -14.375494003295898
    6. ' ()' → logprob: -15.125494003295898
    7. '()]' → logprob: -15.875494003295898
    8. '()
' → logprob: -16.0004940032959
    9. '())' → logprob: -16.5004940032959
    10. '()>' → logprob: -16.6254940032959

Token 198: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01726982370018959
    2. '
' → logprob: -4.142269611358643
    3. '        
' → logprob: -8.3922700881958
    4. '<|end|>' → logprob: -8.5172700881958
    5. '	' → logprob: -8.6422700881958
    6. 'result' → logprob: -9.1422700881958
    7. '   ' → logprob: -9.2672700881958
    8. '<|end|>' → logprob: -10.0172700881958
    9. 'return' → logprob: -10.1422700881958
    10. '    
' → logprob: -10.1422700881958

Token 199: ' ret' (ID: 2881)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.0532255172729492
    2. 'res' → logprob: -1.4282255172729492
    3. ' res' → logprob: -1.5532255172729492
    4. ' result' → logprob: -2.053225517272949
    5. 'ret' (adapté à ' ret') → logprob: -3.053225517272949
    6. ' ret' → logprob: -4.553225517272949
    7. 'r' → logprob: -5.053225517272949
    8. ' r' → logprob: -5.178225517272949
    9. '       ' → logprob: -6.803225517272949
    10. ' rv' → logprob: -8.67822551727295

Token 200: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0889546200633049
    2. ' =' → logprob: -2.4639546871185303
    3. ',' → logprob: -12.08895492553711
    4. '=
' → logprob: -12.96395492553711
    5. ' ' → logprob: -13.08895492553711
    6. ' =
' → logprob: -13.46395492553711
    7. '   ' → logprob: -14.46395492553711
    8. '_val' → logprob: -14.71395492553711
    9. 'val' → logprob: -14.71395492553711
    10. '=

' → logprob: -15.08895492553711

Token 201: ' f' (ID: 285)
  Prédit: ' f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.0380416102707386
    2. 'f' → logprob: -3.288041591644287
    3. '	f' → logprob: -15.788042068481445
    4. ' ' → logprob: -17.038042068481445
    5. ' ' → logprob: -18.913042068481445
    6. '(f' → logprob: -21.288042068481445
    7. '[f' → logprob: -21.413042068481445
    8. '​' → logprob: -21.913042068481445
    9. '   ' → logprob: -22.413042068481445
    10. '‌' → logprob: -22.538042068481445

Token 202: '(*' (ID: 9000)
  Prédit: '(*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -1.318681188422488e-05
    2. '(' → logprob: -11.25001335144043
    3. '(
' → logprob: -16.50001335144043
    4. '(*)' → logprob: -17.00001335144043
    5. ' (*' → logprob: -18.25001335144043
    6. '()' → logprob: -19.00001335144043
    7. '*' → logprob: -20.62501335144043
    8. '(

' → logprob: -21.37501335144043
    9. '((*' → logprob: -22.12501335144043
    10. '(**' → logprob: -22.62501335144043

Token 203: 'args' (ID: 4285)
  Prédit: 'args'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'args' → logprob: -1.676292231422849e-05
    2. ' args' → logprob: -11.000017166137695
    3. '(args' → logprob: -16.875017166137695
    4. '	args' → logprob: -18.250017166137695
    5. 'argv' → logprob: -19.875017166137695
    6. ',args' → logprob: -20.375017166137695
    7. ')' → logprob: -21.250017166137695
    8. 'arg' → logprob: -21.250017166137695
    9. '   ' → logprob: -21.750017166137695
    10. '$args' → logprob: -21.875017166137695

Token 204: ',' (ID: 11)
  Prédit: ')('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')(' → logprob: -0.6463860273361206
    2. ',' → logprob: -1.2713860273361206
    3. ')' → logprob: -1.7713860273361206
    4. '(' → logprob: -4.39638614654541
    5. '(*' → logprob: -5.02138614654541
    6. ')(
' → logprob: -5.27138614654541
    7. ',*' → logprob: -7.14638614654541
    8. ' ' → logprob: -8.52138614654541
    9. '*' → logprob: -9.52138614654541
    10. '),' → logprob: -10.14638614654541

Token 205: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.0043993787840008736
    2. ' **' → logprob: -5.754399299621582
    3. '*' → logprob: -7.129399299621582
    4. 'args' → logprob: -8.504399299621582
    5. 'kwargs' → logprob: -8.879399299621582
    6. ')' → logprob: -10.629399299621582
    7. ' kwargs' → logprob: -10.754399299621582
    8. ' args' → logprob: -11.754399299621582
    9. '   ' → logprob: -12.254399299621582
    10. ' ' → logprob: -12.379399299621582

Token 206: 'kwargs' (ID: 19200)
  Prédit: 'args'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'args' → logprob: -0.38694730401039124
    2. 'kwargs' → logprob: -1.1369472742080688
    3. ')' → logprob: -10.261947631835938
    4. ' args' → logprob: -11.011947631835938
    5. 'argv' → logprob: -11.636947631835938
    6. ' kwargs' → logprob: -12.261947631835938
    7. '(args' → logprob: -13.386947631835938
    8. 'kw' → logprob: -13.636947631835938
    9. '(kwargs' → logprob: -13.886947631835938
    10. '```' → logprob: -13.886947631835938

Token 207: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5381177067756653
    2. '       ' → logprob: -0.9131177067756653
    3. ')
' → logprob: -4.6631178855896
    4. '
' → logprob: -5.4131178855896
    5. '<|end|>' → logprob: -7.9131178855896
    6. '   ' → logprob: -8.038117408752441
    7. ',' → logprob: -9.163117408752441
    8. ')return' → logprob: -9.663117408752441
    9. '<|end|>' → logprob: -9.788117408752441
    10. ' )' → logprob: -11.288117408752441

Token 208: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007735815830528736
    2. '
' → logprob: -4.882735729217529
    3. '        
' → logprob: -9.257736206054688
    4. '
' → logprob: -11.507736206054688
    5. '<|end|>' → logprob: -12.007736206054688
    6. '    
' → logprob: -12.632736206054688
    7. 'return' → logprob: -12.757736206054688
    8. '   ' → logprob: -13.132736206054688
    9. '  
' → logprob: -13.382736206054688
    10. '' → logprob: -13.382736206054688

Token 209: ' e' (ID: 319)
  Prédit: ' e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' e' → logprob: -0.4943492114543915
    2. 'e' (adapté à ' e') → logprob: -0.9943492412567139
    3. ' t' → logprob: -4.494349002838135
    4. ' error' → logprob: -5.994349002838135
    5. '   ' → logprob: -6.119349002838135
    6. ' print' → logprob: -6.619349002838135
    7. '       ' → logprob: -6.869349002838135
    8. 't' → logprob: -6.869349002838135
    9. 'print' → logprob: -7.869349002838135
    10. 'error' → logprob: -8.619349479675293

Token 210: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3485703766345978
    2. '=' → logprob: -1.2235703468322754
    3. '=time' → logprob: -10.098570823669434
    4. 'nd' → logprob: -10.723570823669434
    5. 'x' → logprob: -10.973570823669434
    6. '   ' → logprob: -11.473570823669434
    7. ' ' → logprob: -11.848570823669434
    8. 'l' → logprob: -12.348570823669434
    9. '	' → logprob: -12.473570823669434
    10. 'time' → logprob: -12.848570823669434

Token 211: ' time' (ID: 1058)
  Prédit: ' time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' time' → logprob: -0.023310350254178047
    2. 'time' → logprob: -3.773310422897339
    3. ' s' → logprob: -9.898310661315918
    4. 's' → logprob: -11.273310661315918
    5. ' ' → logprob: -14.523310661315918
    6. '	time' → logprob: -14.773310661315918
    7. '    ' → logprob: -15.523310661315918
    8. '(time' → logprob: -15.648310661315918
    9. ' ' → logprob: -15.898310661315918
    10. ' t' → logprob: -15.898310661315918

Token 212: '.time' (ID: 11486)
  Prédit: '.time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.time' → logprob: -0.062008801847696304
    2. '.' → logprob: -2.812008857727051
    3. '()' → logprob: -10.68700885772705
    4. 'time' → logprob: -11.68700885772705
    5. '.
' → logprob: -12.18700885772705
    6. '(time' → logprob: -13.68700885772705
    7. '.per' → logprob: -13.93700885772705
    8. ' time' → logprob: -14.43700885772705
    9. '=time' → logprob: -14.43700885772705
    10. '().' → logprob: -14.68700885772705

Token 213: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.02339874766767025
    2. ')' → logprob: -4.3983988761901855
    3. '()
' → logprob: -5.1483988761901855
    4. '       ' → logprob: -6.2733988761901855
    5. '()-' → logprob: -6.6483988761901855
    6. '-' → logprob: -7.7733988761901855
    7. '<|end|>' → logprob: -7.8983988761901855
    8. ' -' → logprob: -7.8983988761901855
    9. '   ' → logprob: -8.773398399353027
    10. '
' → logprob: -9.273398399353027

Token 214: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005941396811977029
    2. '        
' → logprob: -8.750594139099121
    3. '
' → logprob: -9.000594139099121
    4. ' return' → logprob: -9.500594139099121
    5. 'return' → logprob: -9.500594139099121
    6. '   ' → logprob: -10.125594139099121
    7. '<|end|>' → logprob: -10.250594139099121
    8. '	' → logprob: -10.500594139099121
    9. ',' → logprob: -11.625594139099121
    10. '  
' → logprob: -11.750594139099121

Token 215: ' error' (ID: 2915)
  Prédit: 'error'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'error' (adapté à ' error') → logprob: -0.09066103398799896
    2. 'print' → logprob: -2.71566104888916
    3. ' error' → logprob: -3.96566104888916
    4. ' print' → logprob: -7.21566104888916
    5. '       ' → logprob: -7.71566104888916
    6. '   ' → logprob: -8.71566104888916
    7. '	error' → logprob: -9.84066104888916
    8. '
' → logprob: -9.96566104888916
    9. '#print' → logprob: -10.34066104888916
    10. '#' → logprob: -10.34066104888916

Token 216: '_print' (ID: 31509)
  Prédit: '_print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_print' → logprob: -0.004406855441629887
    2. '(' → logprob: -5.754406929016113
    3. 'print' → logprob: -7.254406929016113
    4. '_' → logprob: -7.879406929016113
    5. '_Print' → logprob: -10.504406929016113
    6. '_PRINT' → logprob: -11.004406929016113
    7. '_putchar' → logprob: -11.379406929016113
    8. 'Print' → logprob: -11.379406929016113
    9. '_printf' → logprob: -11.629406929016113
    10. '("_' → logprob: -11.629406929016113

Token 217: '(e' (ID: 3454)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.10462754219770432
    2. '('' → logprob: -2.6046276092529297
    3. '(' → logprob: -3.8546276092529297
    4. '("' → logprob: -5.60462760925293
    5. '('[' → logprob: -7.97962760925293
    6. '(s' → logprob: -8.97962760925293
    7. '((' → logprob: -10.85462760925293
    8. '("[' → logprob: -10.97962760925293
    9. '(
' → logprob: -11.22962760925293
    10. '('{}' → logprob: -11.85462760925293

Token 218: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3887821435928345
    2. ' -' → logprob: -1.1387821435928345
    3. '-s' → logprob: -6.263782024383545
    4. 's' → logprob: -12.888782501220703
    5. ' ' → logprob: -14.138782501220703
    6. ',' → logprob: -14.263782501220703
    7. '-
' → logprob: -15.013782501220703
    8. ' -
' → logprob: -15.263782501220703
    9. ' s' → logprob: -15.638782501220703
    10. '   ' → logprob: -16.013782501220703

Token 219: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.003178071230649948
    2. ' s' → logprob: -5.753178119659424
    3. '	s' → logprob: -15.503177642822266
    4. ' ' → logprob: -16.128177642822266
    5. '(s' → logprob: -17.253177642822266
    6. ' ' → logprob: -17.253177642822266
    7. '   ' → logprob: -17.503177642822266
    8. '  ' → logprob: -18.503177642822266
    9. '_s' → logprob: -18.503177642822266
    10. 'start' → logprob: -18.878177642822266

Token 220: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6936337351799011
    2. ')
' → logprob: -0.6936337351799011
    3. ',' → logprob: -8.068634033203125
    4. ')
' → logprob: -9.568634033203125
    5. ')return' → logprob: -10.193634033203125
    6. ' )
' → logprob: -10.318634033203125
    7. ')

' → logprob: -11.443634033203125
    8. ' )' → logprob: -12.068634033203125
    9. ',
' → logprob: -12.693634033203125
    10. '   ' → logprob: -12.818634033203125

Token 221: ' '' (ID: 461)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.17169027030467987
    2. 'f' → logprob: -3.1716902256011963
    3. 'file' → logprob: -3.4216902256011963
    4. ''' → logprob: -3.7966902256011963
    5. ')' → logprob: -3.9216902256011963
    6. 'args' → logprob: -4.296690464019775
    7. ' "' → logprob: -4.796690464019775
    8. ')
' → logprob: -5.546690464019775
    9. 'flush' → logprob: -5.546690464019775
    10. ' f' → logprob: -5.671690464019775

Token 222: 'sec' (ID: 13711)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.039740681648254395
    2. 'ms' → logprob: -4.039740562438965
    3. 'sec' → logprob: -4.164740562438965
    4. 'seconds' → logprob: -5.914740562438965
    5. '')' → logprob: -6.539740562438965
    6. '秒' → logprob: -6.914740562438965
    7. ' s' → logprob: -7.914740562438965
    8. ')' → logprob: -9.289740562438965
    9. '}s' → logprob: -10.164740562438965
    10. ')s' → logprob: -10.789740562438965

Token 223: '')
' (ID: 2515)
  Prédit: '')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')
' → logprob: -0.21460647881031036
    2. '')' → logprob: -1.964606523513794
    3. ')' → logprob: -3.589606523513794
    4. ')
' → logprob: -4.214606285095215
    5. ')')
' → logprob: -4.589606285095215
    6. '')
' → logprob: -8.464606285095215
    7. ''' → logprob: -9.589606285095215
    8. ':')
' → logprob: -10.714606285095215
    9. ')'
' → logprob: -11.089606285095215
    10. 'def' → logprob: -11.464606285095215

Token 224: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003133036196231842
    2. 'return' → logprob: -5.8781328201293945
    3. ' return' → logprob: -8.628132820129395
    4. '   ' → logprob: -9.628132820129395
    5. '
' → logprob: -10.003132820129395
    6. '	' → logprob: -10.503132820129395
    7. '	return' → logprob: -12.128132820129395
    8. ',' → logprob: -13.878132820129395
    9. '<|end|>' → logprob: -14.003132820129395
    10. '        
' → logprob: -14.128132820129395

Token 225: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11349254846572876
    2. 'return' (adapté à ' return') → logprob: -2.363492488861084
    3. ' return' → logprob: -4.363492488861084
    4. '   ' → logprob: -7.738492488861084
    5. '	return' → logprob: -11.113492965698242
    6. '
' → logprob: -11.863492965698242
    7. ' ' → logprob: -13.238492965698242
    8. '	' → logprob: -13.488492965698242
    9. '     ' → logprob: -13.863492965698242
    10. '           ' → logprob: -13.988492965698242

Token 226: ' ret' (ID: 2881)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.00861468818038702
    2. ' ret' → logprob: -4.758614540100098
    3. '(ret' → logprob: -17.008615493774414
    4. '	ret' → logprob: -17.383615493774414
    5. '$ret' → logprob: -17.883615493774414
    6. 're' → logprob: -19.008615493774414
    7. 'retval' → logprob: -19.383615493774414
    8. 'rets' → logprob: -19.383615493774414
    9. ' ' → logprob: -21.133615493774414
    10. '_ret' → logprob: -21.258615493774414

Token 227: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026812246069312096
    2. '
' → logprob: -3.6518123149871826
    3. 'return' → logprob: -8.276812553405762
    4. '    
' → logprob: -8.776812553405762
    5. '	return' → logprob: -10.401812553405762
    6. ' return' → logprob: -10.901812553405762
    7. '   ' → logprob: -11.026812553405762
    8. '<|end|>' → logprob: -11.151812553405762
    9. '	' → logprob: -12.401812553405762
    10. '
' → logprob: -12.526812553405762

Token 228: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000646433443762362
    2. '
' → logprob: -7.875646591186523
    3. '    
' → logprob: -8.625646591186523
    4. 'return' → logprob: -9.750646591186523
    5. '	return' → logprob: -11.625646591186523
    6. '<|end|>' → logprob: -12.500646591186523
    7. '   ' → logprob: -12.500646591186523
    8. ' return' → logprob: -12.750646591186523
    9. ' ' → logprob: -13.125646591186523
    10. '  
' → logprob: -13.125646591186523

Token 229: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.02408047392964363
    2. ' return' → logprob: -3.774080514907837
    3. '   ' → logprob: -7.149080276489258
    4. '
' → logprob: -10.649080276489258
    5. '	return' → logprob: -11.149080276489258
    6. ' ' → logprob: -11.899080276489258
    7. '    
' → logprob: -13.024080276489258
    8. ':return' → logprob: -14.274080276489258
    9. '  ' → logprob: -14.899080276489258
    10. '  
' → logprob: -15.649080276489258

Token 230: ' wrap' (ID: 20404)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -0.07889000326395035
    2. ' wrap' → logprob: -2.578890085220337
    3. '_wrap' → logprob: -16.328889846801758
    4. '.wrap' → logprob: -16.453889846801758
    5. 'warp' → logprob: -17.328889846801758
    6. 'w' → logprob: -18.828889846801758
    7. ' ' → logprob: -18.828889846801758
    8. ' wraps' → logprob: -19.328889846801758
    9. '-wrap' → logprob: -19.703889846801758
    10. '(w' → logprob: -20.078889846801758

Token 231: '

' (ID: 279)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' → logprob: -0.031182609498500824
    2. '
' → logprob: -4.281182765960693
    3. 'def' → logprob: -4.781182765960693
    4. '<|end|>' → logprob: -5.281182765960693
    5. '@example' → logprob: -7.656182765960693
    6. '@return' → logprob: -7.656182765960693
    7. '@n' → logprob: -8.156182289123535
    8. '

' → logprob: -8.281182289123535
    9. '@pytest' → logprob: -8.531182289123535
    10. '<|end|>' → logprob: -8.781182289123535

Token 232: 'class' (ID: 1444)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' → logprob: -0.0012063038302585483
    2. 'def' → logprob: -7.126206398010254
    3. '@n' → logprob: -8.751206398010254
    4. 'class' → logprob: -9.251206398010254
    5. '@class' → logprob: -9.626206398010254
    6. '@m' → logprob: -10.376206398010254
    7. '@dat' → logprob: -12.126206398010254
    8. '@s' → logprob: -12.251206398010254
    9. '@app' → logprob: -12.251206398010254
    10. '@\' → logprob: -12.376206398010254

Token 233: ' Mod' (ID: 7191)
  Prédit: ' Solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Solution' → logprob: -1.3225260972976685
    2. ' Segment' → logprob: -1.4475260972976685
    3. ' Counter' → logprob: -1.9475260972976685
    4. ' Trie' → logprob: -1.9475260972976685
    5. ' Solver' → logprob: -2.572525978088379
    6. ' My' → logprob: -3.947525978088379
    7. ' defaultdict' → logprob: -4.072525978088379
    8. ' Sorted' → logprob: -4.197525978088379
    9. ' Node' → logprob: -4.197525978088379
    10. ' Heap' → logprob: -4.197525978088379

Token 234: ':
' (ID: 734)
  Prédit: 'Int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -0.5798521637916565
    2. ':' → logprob: -1.7048521041870117
    3. 'int' → logprob: -1.8298521041870117
    4. 'ular' → logprob: -2.5798521041870117
    5. 'ulo' → logprob: -3.9548521041870117
    6. 'ulus' → logprob: -6.954852104187012
    7. 'uler' → logprob: -7.204852104187012
    8. ':int' → logprob: -7.954852104187012
    9. 'ulator' → logprob: -8.579852104187012
    10. ':
' → logprob: -8.829852104187012

Token 235: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1636384278535843
    2. '   ' → logprob: -2.0386383533477783
    3. ' :' → logprob: -5.288638591766357
    4. ':
' → logprob: -5.413638591766357
    5. '(' → logprob: -5.663638591766357
    6. '(object' → logprob: -5.788638591766357
    7. ' ' → logprob: -6.663638591766357
    8. '    ' → logprob: -7.288638591766357
    9. 'def' → logprob: -7.663638591766357
    10. ' def' → logprob: -7.788638591766357

Token 236: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.11008714884519577
    2. 'def' (adapté à ' def') → logprob: -2.3600871562957764
    3. ' __' → logprob: -4.735086917877197
    4. '__' → logprob: -7.485086917877197
    5. ' MOD' → logprob: -8.610087394714355
    6. '   ' → logprob: -8.610087394714355
    7. 'MOD' → logprob: -9.360087394714355
    8. ' ' → logprob: -11.110087394714355
    9. ' mod' → logprob: -11.735087394714355
    10. 'mod' → logprob: -11.860087394714355

Token 237: ' __' (ID: 2516)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.10956772416830063
    2. ' __' → logprob: -2.359567642211914
    3. ' init' → logprob: -4.984567642211914
    4. '__' → logprob: -6.484567642211914
    5. '_init' → logprob: -6.984567642211914
    6. 'int' → logprob: -11.234567642211914
    7. ' def' → logprob: -13.484567642211914
    8. 'def' → logprob: -13.609567642211914
    9. ' _' → logprob: -13.984567642211914
    10. 'nit' → logprob: -14.109567642211914

Token 238: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -2.816093228830141e-06
    2. 'int' → logprob: -12.87500286102295
    3. 'ini' → logprob: -15.87500286102295
    4. 'in' → logprob: -17.000001907348633
    5. ' init' → logprob: -17.375001907348633
    6. 'mod' → logprob: -18.000001907348633
    7. 'new' → logprob: -19.500001907348633
    8. '_init' → logprob: -19.625001907348633
    9. 'inite' → logprob: -19.875001907348633
    10. '   ' → logprob: -20.125001907348633

Token 239: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.009998070076107979
    2. '__' → logprob: -4.634997844696045
    3. '(self' → logprob: -8.634998321533203
    4. '__(
' → logprob: -9.884998321533203
    5. '(' → logprob: -12.509998321533203
    6. '_(' → logprob: -12.759998321533203
    7. '__((' → logprob: -12.759998321533203
    8. '__('' → logprob: -13.759998321533203
    9. '_' → logprob: -13.884998321533203
    10. '___' → logprob: -14.009998321533203

Token 240: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -8.180258191714529e-06
    2. ' self' → logprob: -11.750008583068848
    3. '(self' → logprob: -16.12500762939453
    4. 's' → logprob: -17.00000762939453
    5. '
' → logprob: -17.00000762939453
    6. ',' → logprob: -17.25000762939453
    7. '0' → logprob: -17.87500762939453
    8. ',self' → logprob: -18.00000762939453
    9. ')' → logprob: -19.50000762939453
    10. '	self' → logprob: -19.50000762939453

Token 241: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001320000272244215
    2. ' ,' → logprob: -7.251319885253906
    3. 'self' → logprob: -8.001319885253906
    4. '(self' → logprob: -8.626319885253906
    5. ',self' → logprob: -9.376319885253906
    6. ' self' → logprob: -11.876319885253906
    7. ' (' → logprob: -13.626319885253906
    8. ',(' → logprob: -14.126319885253906
    9. ',
' → logprob: -14.501319885253906
    10. '(' → logprob: -14.876319885253906

Token 242: ' m' (ID: 284)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00715293362736702
    2. 'value' → logprob: -5.132153034210205
    3. 'mod' → logprob: -7.632153034210205
    4. 'val' → logprob: -7.882153034210205
    5. ' self' → logprob: -9.007152557373047
    6. 'x' → logprob: -9.257152557373047
    7. 'n' → logprob: -9.632152557373047
    8. 'v' → logprob: -9.632152557373047
    9. ' value' → logprob: -12.382152557373047
    10. 'cls' → logprob: -13.257152557373047

Token 243: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3182622790336609
    2. 'od' → logprob: -1.5682623386383057
    3. ':' → logprob: -3.1932623386383057
    4. 'odule' → logprob: -4.068262100219727
    5. '):
' → logprob: -5.318262100219727
    6. 'odu' → logprob: -8.318262100219727
    7. 'ode' → logprob: -8.943262100219727
    8. ')' → logprob: -9.068262100219727
    9. '=' → logprob: -9.193262100219727
    10. ',' → logprob: -9.318262100219727

Token 244: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003610401414334774
    2. ':' → logprob: -6.253610610961914
    3. ',' → logprob: -7.003610610961914
    4. 'self' → logprob: -7.878610610961914
    5. '   ' → logprob: -8.628610610961914
    6. ' self' → logprob: -10.003610610961914
    7. '):' → logprob: -10.003610610961914
    8. '	' → logprob: -10.378610610961914
    9. '	   ' → logprob: -11.628610610961914
    10. '#' → logprob: -11.753610610961914

Token 245: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.005441858433187008
    2. ' self' → logprob: -5.255441665649414
    3. '       ' → logprob: -8.505441665649414
    4. '   ' → logprob: -12.130441665649414
    5. '        
' → logprob: -16.380441665649414
    6. ' ' → logprob: -16.630441665649414
    7. '    ' → logprob: -16.755441665649414
    8. '	self' → logprob: -17.005441665649414
    9. 'm' → logprob: -17.130441665649414
    10. '        ' → logprob: -17.630441665649414

Token 246: '.m' (ID: 1021)
  Prédit: '.m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.m' → logprob: -0.42097464203834534
    2. '.' → logprob: -1.170974612236023
    3. '.mod' → logprob: -3.4209747314453125
    4. '._' → logprob: -8.545974731445312
    5. ' .' → logprob: -8.545974731445312
    6. '.value' → logprob: -8.670974731445312
    7. ' =' → logprob: -10.420974731445312
    8. '.mx' → logprob: -10.420974731445312
    9. '.ms' → logprob: -10.670974731445312
    10. '.mods' → logprob: -10.795974731445312

Token 247: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759527087211609
    2. ' =' → logprob: -0.8259527087211609
    3. ' ' → logprob: -11.825952529907227
    4. ',' → logprob: -12.700952529907227
    5. '=int' → logprob: -13.950952529907227
    6. '=m' → logprob: -14.200952529907227
    7. ':' → logprob: -14.450952529907227
    8. '   ' → logprob: -14.950952529907227
    9. ' =
' → logprob: -15.825952529907227
    10. '=

' → logprob: -16.575952529907227

Token 248: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.002475777640938759
    2. ' m' → logprob: -6.002475738525391
    3. 'int' → logprob: -16.00247573852539
    4. '	m' → logprob: -17.75247573852539
    5. ' int' → logprob: -18.62747573852539
    6. ' ' → logprob: -18.87747573852539
    7. '   ' → logprob: -19.37747573852539
    8. '0' → logprob: -20.25247573852539
    9. '_m' → logprob: -20.25247573852539
    10. 'mod' → logprob: -20.37747573852539

Token 249: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 250: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2648192346096039
    2. '   ' → logprob: -2.1398191452026367
    3. '<|end|>' → logprob: -2.6398191452026367
    4. 'def' → logprob: -3.6398191452026367
    5. '    
' → logprob: -4.639819145202637
    6. ' def' → logprob: -6.139819145202637
    7. '       ' → logprob: -6.389819145202637
    8. ',' → logprob: -6.639819145202637
    9. '	def' → logprob: -7.764819145202637
    10. '<|end|>' → logprob: -7.889819145202637

Token 251: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.2245301902294159
    2. ' def' → logprob: -2.0995302200317383
    3. '
' → logprob: -3.3495302200317383
    4. '   ' → logprob: -3.5995302200317383
    5. '    
' → logprob: -4.474530220031738
    6. '<|end|>' → logprob: -6.224530220031738
    7. '	def' → logprob: -7.724530220031738
    8. ' 
' → logprob: -7.974530220031738
    9. ',' → logprob: -8.099530220031738
    10. ' ' → logprob: -8.224530220031738

Token 252: ' add' (ID: 1147)
  Prédit: ' add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.03971181809902191
    2. ' __' → logprob: -3.5397117137908936
    3. 'add' → logprob: -5.289711952209473
    4. '_add' → logprob: -6.414711952209473
    5. ' mod' → logprob: -6.539711952209473
    6. 'mod' → logprob: -7.414711952209473
    7. '__' → logprob: -7.664711952209473
    8. ' _' → logprob: -8.039711952209473
    9. '_mod' → logprob: -8.039711952209473
    10. ' pow' → logprob: -11.039711952209473

Token 253: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.008824095129966736
    2. '(' → logprob: -4.758823871612549
    3. ' (' → logprob: -8.883824348449707
    4. '(s' → logprob: -10.258824348449707
    5. '(
' → logprob: -10.883824348449707
    6. '(a' → logprob: -11.883824348449707
    7. '<|end|>' → logprob: -12.633824348449707
    8. 'self' → logprob: -12.883824348449707
    9. '(Self' → logprob: -14.258824348449707
    10. ' self' → logprob: -14.258824348449707

Token 254: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0022192494943737984
    2. ' ,' → logprob: -6.252219200134277
    3. '(self' → logprob: -9.377219200134277
    4. '(' → logprob: -9.752219200134277
    5. ',self' → logprob: -9.752219200134277
    6. 'self' → logprob: -10.252219200134277
    7. '_,' → logprob: -10.502219200134277
    8. ',a' → logprob: -11.627219200134277
    9. ',
' → logprob: -12.877219200134277
    10. ')' → logprob: -13.127219200134277

Token 255: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.13002797961235046
    2. 'self' → logprob: -2.255028009414673
    3. ' a' → logprob: -4.880027770996094
    4. 'x' → logprob: -5.255027770996094
    5. ' self' → logprob: -5.630027770996094
    6. ' x' → logprob: -7.380027770996094
    7. ' ' → logprob: -11.880027770996094
    8. '	a' → logprob: -12.630027770996094
    9. 'lambda' → logprob: -12.630027770996094
    10. '   ' → logprob: -12.755027770996094

Token 256: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003386806638445705
    2. ' ,' → logprob: -8.000338554382324
    3. ',b' → logprob: -13.125338554382324
    4. ',a' → logprob: -14.250338554382324
    5. ',
' → logprob: -15.250338554382324
    6. ')' → logprob: -16.00033950805664
    7. '‌,' → logprob: -17.12533950805664
    8. ',n' → logprob: -17.25033950805664
    9. ' ' → logprob: -18.12533950805664
    10. ',m' → logprob: -18.50033950805664

Token 257: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.47407716512680054
    2. ' b' → logprob: -0.9740771651268005
    3. ' ' → logprob: -16.599077224731445
    4. '	b' → logprob: -16.849077224731445
    5. '   ' → logprob: -17.849077224731445
    6. ')b' → logprob: -17.974077224731445
    7. '    ' → logprob: -18.474077224731445
    8. ' ' → logprob: -18.974077224731445
    9. ',b' → logprob: -19.349077224731445
    10. ' б' → logprob: -19.724077224731445

Token 258: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.001236060750670731
    2. ' ):' → logprob: -7.2512359619140625
    3. ',' → logprob: -7.7512359619140625
    4. '):
' → logprob: -9.376235961914062
    5. ')' → logprob: -11.501235961914062
    6. ':' → logprob: -15.126235961914062
    7. '   ' → logprob: -15.501235961914062
    8. '):
' → logprob: -16.251235961914062
    9. ' )' → logprob: -16.626235961914062
    10. ')):' → logprob: -17.251235961914062

Token 259: '       ' (ID: 309)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.041955627501010895
    2. ':' → logprob: -4.666955471038818
    3. '):
' → logprob: -4.666955471038818
    4. 'a' → logprob: -4.791955471038818
    5. ',' → logprob: -5.041955471038818
    6. ' ):' → logprob: -5.541955471038818
    7. '(a' → logprob: -6.166955471038818
    8. ' a' → logprob: -7.291955471038818
    9. '       ' → logprob: -8.541955947875977
    10. ')' → logprob: -8.666955947875977

Token 260: ' return' (ID: 622)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.9110984206199646
    2. ' return' → logprob: -0.9110984206199646
    3. 'return' (adapté à ' return') → logprob: -1.6610984802246094
    4. '(a' → logprob: -5.411098480224609
    5. '(' → logprob: -6.661098480224609
    6. '       ' → logprob: -9.41109848022461
    7. '(return' → logprob: -9.66109848022461
    8. '   ' → logprob: -12.78609848022461
    9. '(s' → logprob: -13.16109848022461
    10. ':return' → logprob: -13.66109848022461

Token 261: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.16029387712478638
    2. '(a' → logprob: -1.9102938175201416
    3. '(' → logprob: -9.660293579101562
    4. '(ans' → logprob: -13.660293579101562
    5. '(x' → logprob: -13.910293579101562
    6. '(A' → logprob: -14.035293579101562
    7. '((' → logprob: -14.160293579101562
    8. '(
' → logprob: -14.535293579101562
    9. '(self' → logprob: -14.660293579101562
    10. ' ' → logprob: -14.910293579101562

Token 262: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -2.5941604690160602e-05
    2. ' a' → logprob: -10.750025749206543
    3. '(a' → logprob: -12.375025749206543
    4. '   ' → logprob: -16.37502670288086
    5. '	a' → logprob: -16.50002670288086
    6. ' (' → logprob: -18.12502670288086
    7. ')a' → logprob: -19.62502670288086
    8. 'а' → logprob: -20.00002670288086
    9. '(' → logprob: -20.37502670288086
    10. '_a' → logprob: -20.62502670288086

Token 263: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.47544199228286743
    2. '+' → logprob: -0.9754419922828674
    3. '+b' → logprob: -6.600441932678223
    4. '+a' → logprob: -12.725441932678223
    5. '+m' → logprob: -15.475441932678223
    6. ' ' → logprob: -15.600441932678223
    7. '+c' → logprob: -15.725441932678223
    8. '%' → logprob: -15.850441932678223
    9. ' plus' → logprob: -16.10044288635254
    10. ' ' → logprob: -16.22544288635254

Token 264: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.47407785058021545
    2. ' b' → logprob: -0.9740778207778931
    3. ')b' → logprob: -14.724078178405762
    4. ')' → logprob: -15.224078178405762
    5. ' ' → logprob: -16.474077224731445
    6. '	b' → logprob: -17.349077224731445
    7. '       ' → logprob: -17.599077224731445
    8. '   ' → logprob: -17.849077224731445
    9. '    ' → logprob: -18.099077224731445
    10. ' 
' → logprob: -18.099077224731445

Token 265: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.848420551046729e-05
    2. ')%' → logprob: -9.8750581741333
    3. ' )' → logprob: -11.8750581741333
    4. ')
' → logprob: -17.375059127807617
    5. '%' → logprob: -17.875059127807617
    6. '）' → logprob: -18.375059127807617
    7. ')

' → logprob: -18.875059127807617
    8. ')#' → logprob: -21.000059127807617
    9. '%)' → logprob: -21.125059127807617
    10. '   ' → logprob: -21.125059127807617

Token 266: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.16026292741298676
    2. ' %' → logprob: -1.910262942314148
    3. '%m' → logprob: -11.160263061523438
    4. ')' → logprob: -11.660263061523438
    5. '%b' → logprob: -12.410263061523438
    6. ' ' → logprob: -12.535263061523438
    7. '%i' → logprob: -13.160263061523438
    8. '%n' → logprob: -13.285263061523438
    9. '%d' → logprob: -13.410263061523438
    10. '%c' → logprob: -13.910263061523438

Token 267: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.20141352713108063
    2. 'self' → logprob: -1.7014135122299194
    3. '(self' → logprob: -15.95141315460205
    4. ' ' → logprob: -16.201414108276367
    5. '	self' → logprob: -17.701414108276367
    6. ' ' → logprob: -19.826414108276367
    7. '[self' → logprob: -20.701414108276367
    8. 's' → logprob: -21.201414108276367
    9. '*self' → logprob: -21.576414108276367
    10. '_self' → logprob: -21.576414108276367

Token 268: '.m' (ID: 1021)
  Prédit: '.m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.m' → logprob: -0.0003818140830844641
    2. '.' → logprob: -7.875381946563721
    3. 'm' → logprob: -13.625381469726562
    4. ' .' → logprob: -14.875381469726562
    5. ').' → logprob: -16.250381469726562
    6. '.м' → logprob: -17.375381469726562
    7. '`.' → logprob: -18.375381469726562
    8. '[m' → logprob: -18.375381469726562
    9. '[' → logprob: -18.875381469726562
    10. '(m' → logprob: -19.250381469726562

Token 269: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 270: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 271: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4378463923931122
    2. '<|end|>' → logprob: -2.3128464221954346
    3. '    
' → logprob: -2.5628464221954346
    4. '
' → logprob: -2.8128464221954346
    5. 'def' (adapté à ' def') → logprob: -2.9378464221954346
    6. '  
' → logprob: -3.5628464221954346
    7. ' 
' → logprob: -4.3128461837768555
    8. ' ' → logprob: -5.0628461837768555
    9. '   
' → logprob: -5.3128461837768555
    10. '  ' → logprob: -5.5628461837768555

Token 272: ' sub' (ID: 1543)
  Prédit: ' sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sub' → logprob: -0.20376597344875336
    2. 'sub' → logprob: -1.7037659883499146
    3. ' mul' → logprob: -6.453765869140625
    4. 'mul' → logprob: -7.203765869140625
    5. ' subtract' → logprob: -11.453765869140625
    6. 'subtract' → logprob: -11.453765869140625
    7. ' ' → logprob: -12.703765869140625
    8. '	sub' → logprob: -12.953765869140625
    9. '   ' → logprob: -13.078765869140625
    10. '  ' → logprob: -13.703765869140625

Token 273: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.018160942941904068
    2. '(' → logprob: -4.018160820007324
    3. ',' → logprob: -12.143160820007324
    4. ' (' → logprob: -12.518160820007324
    5. 'self' → logprob: -13.893160820007324
    6. ',self' → logprob: -14.768160820007324
    7. '(
' → logprob: -15.143160820007324
    8. ' self' → logprob: -15.643160820007324
    9. '(a' → logprob: -15.893160820007324
    10. '(s' → logprob: -16.14316177368164

Token 274: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.2234850376844406
    2. ',' → logprob: -1.723484992980957
    3. '(' → logprob: -3.848484992980957
    4. '(a' → logprob: -7.973484992980957
    5. ' (' → logprob: -9.848484992980957
    6. 'self' → logprob: -9.973484992980957
    7. ',self' → logprob: -10.973484992980957
    8. '   ' → logprob: -11.223484992980957
    9. ')' → logprob: -11.348484992980957
    10. ' ,' → logprob: -11.473484992980957

Token 275: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.062044546008110046
    2. ' a' → logprob: -2.812044620513916
    3. 'self' → logprob: -9.937044143676758
    4. ' self' → logprob: -10.687044143676758
    5. '   ' → logprob: -12.937044143676758
    6. 'def' → logprob: -13.937044143676758
    7. ' ' → logprob: -14.187044143676758
    8. '(a' → logprob: -14.312044143676758
    9. '	a' → logprob: -14.562044143676758
    10. ' def' → logprob: -15.562044143676758

Token 276: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003804949577897787
    2. ' ,' → logprob: -5.628805160522461
    3. ',b' → logprob: -8.503805160522461
    4. ',a' → logprob: -13.878805160522461
    5. ',
' → logprob: -14.878805160522461
    6. ' ' → logprob: -16.12880516052246
    7. ' b' → logprob: -16.12880516052246
    8. '_,' → logprob: -16.25380516052246
    9. '<|end|>' → logprob: -16.25380516052246
    10. 'b' → logprob: -16.25380516052246

Token 277: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.011047814972698689
    2. ' b' → logprob: -4.511047840118408
    3. ' ' → logprob: -17.01104736328125
    4. '   ' → logprob: -18.51104736328125
    5. '(b' → logprob: -18.51104736328125
    6. '	b' → logprob: -18.76104736328125
    7. ')b' → logprob: -20.13604736328125
    8. '    ' → logprob: -20.51104736328125
    9. '  ' → logprob: -20.88604736328125
    10. '       ' → logprob: -21.01104736328125

Token 278: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008308886550366879
    2. '):
' → logprob: -5.1333088874816895
    3. ':' → logprob: -6.1333088874816895
    4. ' ):' → logprob: -8.633308410644531
    5. ',' → logprob: -11.883308410644531
    6. ')' → logprob: -11.883308410644531
    7. ' :' → logprob: -12.383308410644531
    8. '   ' → logprob: -12.508308410644531
    9. '):
' → logprob: -13.133308410644531
    10. '():' → logprob: -13.383308410644531

Token 279: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5401214361190796
    2. ' (' → logprob: -1.2901214361190796
    3. ' return' → logprob: -2.290121555328369
    4. '(' → logprob: -3.415121555328369
    5. 'return' → logprob: -5.415121555328369
    6. ',' → logprob: -7.040121555328369
    7. ')' → logprob: -7.790121555328369
    8. ':' → logprob: -8.040121078491211
    9. '
' → logprob: -8.165121078491211
    10. '   ' → logprob: -8.540121078491211

Token 280: ' return' (ID: 622)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.03925653174519539
    2. ' return' → logprob: -3.2892565727233887
    3. 'return' (adapté à ' return') → logprob: -6.914256572723389
    4. '       ' → logprob: -8.91425609588623
    5. '(a' → logprob: -9.66425609588623
    6. '(' → logprob: -11.03925609588623
    7. '(return' → logprob: -12.78925609588623
    8. ' ' → logprob: -14.28925609588623
    9. '   ' → logprob: -14.41425609588623
    10. '(s' → logprob: -14.53925609588623

Token 281: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.1602243334054947
    2. '(a' → logprob: -1.9102243185043335
    3. '(self' → logprob: -17.66022491455078
    4. '(A' → logprob: -18.03522491455078
    5. ' ' → logprob: -18.16022491455078
    6. '(' → logprob: -18.28522491455078
    7. '(abs' → logprob: -18.28522491455078
    8. '(b' → logprob: -18.28522491455078
    9. '(ans' → logprob: -18.53522491455078
    10. '((' → logprob: -18.66022491455078

Token 282: 'a' (ID: 64)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.31459707021713257
    2. 'a' → logprob: -1.3145971298217773
    3. ' (' → logprob: -6.689597129821777
    4. ' a' → logprob: -9.314597129821777
    5. '   ' → logprob: -15.439597129821777
    6. '
' → logprob: -16.56459617614746
    7. ' ' → logprob: -16.56459617614746
    8. '	a' → logprob: -16.81459617614746
    9. '(' → logprob: -16.93959617614746
    10. '[a' → logprob: -16.93959617614746

Token 283: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.004729041364043951
    2. '-' → logprob: -5.379729270935059
    3. ' ' → logprob: -9.629729270935059
    4. '+' → logprob: -11.254729270935059
    5. ')' → logprob: -11.504729270935059
    6. ' %' → logprob: -11.754729270935059
    7. '%' → logprob: -12.379729270935059
    8. ' +' → logprob: -12.629729270935059
    9. ' )' → logprob: -12.754729270935059
    10. '-b' → logprob: -14.129729270935059

Token 284: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.07888978719711304
    2. 'b' → logprob: -2.578889846801758
    3. ' ' → logprob: -17.453889846801758
    4. ')b' → logprob: -17.953889846801758
    5. '	b' → logprob: -19.328889846801758
    6. ' б' → logprob: -19.453889846801758
    7. '<|end|>' → logprob: -19.453889846801758
    8. ' ' → logprob: -19.953889846801758
    9. '_b' → logprob: -20.578889846801758
    10. '>b' → logprob: -20.703889846801758

Token 285: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00019340807921253145
    2. ' )' → logprob: -8.75019359588623
    3. '+' → logprob: -10.62519359588623
    4. ')%' → logprob: -11.50019359588623
    5. ' +' → logprob: -15.37519359588623
    6. ' ' → logprob: -16.875192642211914
    7. '%' → logprob: -17.000192642211914
    8. '

' → logprob: -17.000192642211914
    9. ')

' → logprob: -17.500192642211914
    10. '}' → logprob: -17.500192642211914

Token 286: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.2522031366825104
    2. ' %' → logprob: -1.502203106880188
    3. ')' → logprob: -8.627202987670898
    4. ')%' → logprob: -9.877202987670898
    5. '%b' → logprob: -11.127202987670898
    6. '%m' → logprob: -11.127202987670898
    7. ' ' → logprob: -12.502202987670898
    8. '%c' → logprob: -13.252202987670898
    9. '%n' → logprob: -13.377202987670898
    10. '%s' → logprob: -13.627202987670898

Token 287: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0007099286303855479
    2. ' self' → logprob: -7.2507100105285645
    3. '(self' → logprob: -17.875709533691406
    4. '       ' → logprob: -18.250709533691406
    5. '   ' → logprob: -19.750709533691406
    6. '	self' → logprob: -20.250709533691406
    7. '[self' → logprob: -21.250709533691406
    8. '
' → logprob: -22.125709533691406
    9. 'm' → logprob: -22.375709533691406
    10. '=self' → logprob: -22.875709533691406

Token 288: '.m' (ID: 1021)
  Prédit: '.m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.m' → logprob: -0.0001278534036828205
    2. '.' → logprob: -9.000127792358398
    3. 'm' → logprob: -12.375127792358398
    4. ' .' → logprob: -16.3751277923584
    5. '.м' → logprob: -18.3751277923584
    6. '	m' → logprob: -19.2501277923584
    7. ' m' → logprob: -19.6251277923584
    8. '...' → logprob: -20.1251277923584
    9. ' м' → logprob: -20.1251277923584
    10. ')' → logprob: -20.1251277923584

Token 289: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008389746770262718
    2. '
' → logprob: -5.633389949798584
    3. '    
' → logprob: -6.258389949798584
    4. '<|end|>' → logprob: -6.383389949798584
    5. '```' → logprob: -7.508389949798584
    6. 'def' → logprob: -7.883389949798584
    7. '  
' → logprob: -9.258389472961426
    8. ' 
' → logprob: -11.133389472961426
    9. ' def' → logprob: -11.133389472961426
    10. '   
' → logprob: -11.133389472961426

Token 290: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0072969780303537846
    2. 'def' → logprob: -5.132297039031982
    3. ' def' → logprob: -7.382297039031982
    4. '    
' → logprob: -8.007296562194824
    5. '
' → logprob: -8.507296562194824
    6. '  ' → logprob: -10.007296562194824
    7. '<|end|>' → logprob: -10.132296562194824
    8. ' ' → logprob: -10.257296562194824
    9. '  
' → logprob: -10.757296562194824
    10. '```' → logprob: -10.757296562194824

Token 291: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20153029263019562
    2. 'def' (adapté à ' def') → logprob: -1.7015303373336792
    3. ' def' → logprob: -9.076530456542969
    4. '	def' → logprob: -13.576530456542969
    5. '    
' → logprob: -14.326530456542969
    6. '```' → logprob: -15.076530456542969
    7. '  ' → logprob: -16.07653045654297
    8. ' ' → logprob: -16.07653045654297
    9. '
' → logprob: -16.32653045654297
    10. ',' → logprob: -16.70153045654297

Token 292: ' mul' (ID: 9975)
  Prédit: 'mul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mul' → logprob: -0.3132627606391907
    2. ' mul' → logprob: -1.313262701034546
    3. '_mul' → logprob: -14.063262939453125
    4. '.mul' → logprob: -16.438262939453125
    5. 'Mul' → logprob: -16.563262939453125
    6. ' ' → logprob: -17.438262939453125
    7. 'mult' → logprob: -17.813262939453125
    8. '   ' → logprob: -18.563262939453125
    9. '  ' → logprob: -18.688262939453125
    10. '```' → logprob: -18.688262939453125

Token 293: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.015529810450971127
    2. '(' → logprob: -4.265529632568359
    3. ',' → logprob: -6.640529632568359
    4. 'self' → logprob: -10.64052963256836
    5. '(
' → logprob: -11.39052963256836
    6. ',self' → logprob: -11.39052963256836
    7. ' (' → logprob: -11.64052963256836
    8. ' self' → logprob: -13.39052963256836
    9. '<|end|>' → logprob: -14.39052963256836
    10. ' ' → logprob: -15.01552963256836

Token 294: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017815681640058756
    2. '(self' → logprob: -6.626781463623047
    3. '(' → logprob: -8.126781463623047
    4. '(a' → logprob: -9.376781463623047
    5. 'self' → logprob: -10.501781463623047
    6. ' ,' → logprob: -10.626781463623047
    7. ',a' → logprob: -11.751781463623047
    8. ',self' → logprob: -12.001781463623047
    9. '   ' → logprob: -12.751781463623047
    10. 'a' → logprob: -13.626781463623047

Token 295: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0619802325963974
    2. ' a' → logprob: -2.8119802474975586
    3. '   ' → logprob: -11.936980247497559
    4. 'self' → logprob: -13.186980247497559
    5. ' ' → logprob: -13.561980247497559
    6. ' self' → logprob: -14.061980247497559
    7. 'def' → logprob: -14.311980247497559
    8. '	a' → logprob: -14.311980247497559
    9. '<|end|>' → logprob: -14.936980247497559
    10. '(a' → logprob: -16.061979293823242

Token 296: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.860340752406046e-05
    2. ' ,' → logprob: -9.8750581741333
    3. ',b' → logprob: -11.8750581741333
    4. ',
' → logprob: -16.375059127807617
    5. '<|end|>' → logprob: -16.500059127807617
    6. ',a' → logprob: -17.250059127807617
    7. '‌,' → logprob: -17.250059127807617
    8. ',m' → logprob: -18.625059127807617
    9. ' ' → logprob: -18.750059127807617
    10. ')' → logprob: -18.875059127807617

Token 297: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.12692853808403015
    2. ' b' → logprob: -2.1269285678863525
    3. ' ' → logprob: -15.251928329467773
    4. '   ' → logprob: -15.626928329467773
    5. '    ' → logprob: -16.626928329467773
    6. ')b' → logprob: -17.126928329467773
    7. '	b' → logprob: -17.501928329467773
    8. '  ' → logprob: -18.251928329467773
    9. '(b' → logprob: -18.251928329467773
    10. '       ' → logprob: -18.376928329467773

Token 298: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.010076089762151241
    2. ',' → logprob: -5.38507604598999
    3. '):
' → logprob: -5.51007604598999
    4. ' ):' → logprob: -6.76007604598999
    5. ':' → logprob: -8.760076522827148
    6. '       ' → logprob: -10.510076522827148
    7. ')' → logprob: -10.885076522827148
    8. '   ' → logprob: -11.260076522827148
    9. ' ,' → logprob: -12.010076522827148
    10. ' ):
' → logprob: -12.510076522827148

Token 299: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01268481183797121
    2. ' return' → logprob: -4.5126848220825195
    3. ' (' → logprob: -6.5126848220825195
    4. 'return' → logprob: -9.26268482208252
    5. '(' → logprob: -10.26268482208252
    6. '   ' → logprob: -12.13768482208252
    7. ',' → logprob: -12.26268482208252
    8. '      ' → logprob: -13.13768482208252
    9. ' ' → logprob: -13.26268482208252
    10. '<|end|>' → logprob: -13.63768482208252

Token 300: ' return' (ID: 622)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.10023956745862961
    2. ' (' → logprob: -2.3502395153045654
    3. '(' → logprob: -10.600239753723145
    4. 'return' (adapté à ' return') → logprob: -12.350239753723145
    5. ' return' → logprob: -13.100239753723145
    6. '       ' → logprob: -13.600239753723145
    7. '(A' → logprob: -16.225238800048828
    8. '(return' → logprob: -16.350238800048828
    9. '(b' → logprob: -16.600238800048828
    10. '   ' → logprob: -16.975238800048828

Token 301: ' ((' (ID: 3536)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.01815064437687397
    2. '(a' → logprob: -4.018150806427002
    3. '(' → logprob: -14.268150329589844
    4. 'a' → logprob: -18.393150329589844
    5. ' ' → logprob: -18.393150329589844
    6. '(ans' → logprob: -18.393150329589844
    7. '((' → logprob: -18.518150329589844
    8. ' ' → logprob: -18.893150329589844
    9. '(A' → logprob: -18.893150329589844
    10. ' a' → logprob: -19.393150329589844

Token 302: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -3.7697225252486533e-06
    2. ' a' → logprob: -12.500003814697266
    3. '	a' → logprob: -18.250003814697266
    4. '(a' → logprob: -19.125003814697266
    5. '   ' → logprob: -19.500003814697266
    6. 'int' → logprob: -20.125003814697266
    7. ')a' → logprob: -20.125003814697266
    8. 'а' → logprob: -20.500003814697266
    9. ')' → logprob: -21.125003814697266
    10. '1' → logprob: -21.750003814697266

Token 303: ' %' (ID: 1851)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.2963092029094696
    2. ' %' → logprob: -1.796309232711792
    3. '%' → logprob: -2.796309232711792
    4. '*' → logprob: -3.546309232711792
    5. ')' → logprob: -8.171309471130371
    6. ' ' → logprob: -8.171309471130371
    7. ' )' → logprob: -9.671309471130371
    8. ')*' → logprob: -11.546309471130371
    9. ' ' → logprob: -11.671309471130371
    10. ')%' → logprob: -12.171309471130371

Token 304: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03804412856698036
    2. ' self' → logprob: -3.2880442142486572
    3. ' ' → logprob: -14.038043975830078
    4. 'b' → logprob: -14.288043975830078
    5. ')' → logprob: -14.913043975830078
    6. '(self' → logprob: -15.413043975830078
    7. '       ' → logprob: -16.038043975830078
    8. 's' → logprob: -16.163043975830078
    9. '   ' → logprob: -16.413043975830078
    10. '=self' → logprob: -16.538043975830078

Token 305: '.m' (ID: 1021)
  Prédit: '.m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.m' → logprob: -0.0001617035741219297
    2. ')' → logprob: -9.250162124633789
    3. '.' → logprob: -9.875162124633789
    4. 'm' → logprob: -11.875162124633789
    5. ' .' → logprob: -13.375162124633789
    6. ')m' → logprob: -13.875162124633789
    7. '_m' → logprob: -14.000162124633789
    8. ').' → logprob: -14.000162124633789
    9. '.)' → logprob: -15.125162124633789
    10. '.
' → logprob: -15.125162124633789

Token 306: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005880602402612567
    2. ')*' → logprob: -7.8755879402160645
    3. ' )' → logprob: -8.625588417053223
    4. '*' → logprob: -11.000588417053223
    5. ')*(' → logprob: -11.625588417053223
    6. ' *' → logprob: -13.375588417053223
    7. '*)' → logprob: -13.750588417053223
    8. ')
' → logprob: -16.000587463378906
    9. ' ' → logprob: -16.250587463378906
    10. '   ' → logprob: -17.625587463378906

Token 307: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.07900843024253845
    2. '*' → logprob: -2.5790083408355713
    3. ')' → logprob: -9.329008102416992
    4. ' *
' → logprob: -11.579008102416992
    5. ')*' → logprob: -11.704008102416992
    6. ' ' → logprob: -11.704008102416992
    7. '*
' → logprob: -14.079008102416992
    8. '*b' → logprob: -14.079008102416992
    9. '*(' → logprob: -14.204008102416992
    10. ' )' → logprob: -14.704008102416992

Token 308: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.048589076846838
    2. '(b' → logprob: -3.048588991165161
    3. ' b' → logprob: -13.798588752746582
    4. 'b' → logprob: -15.048588752746582
    5. ' ' → logprob: -15.923588752746582
    6. '(' → logprob: -16.1735897064209
    7. ' 
' → logprob: -16.5485897064209
    8. '  ' → logprob: -17.9235897064209
    9. '    ' → logprob: -18.0485897064209
    10. '   ' → logprob: -19.0485897064209

Token 309: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.476792573928833
    2. '(b' → logprob: -1.226792573928833
    3. ' (' → logprob: -2.976792573928833
    4. ' b' → logprob: -3.351792573928833
    5. '	b' → logprob: -12.101792335510254
    6. '(' → logprob: -12.351792335510254
    7. '   ' → logprob: -12.601792335510254
    8. ' ' → logprob: -12.976792335510254
    9. '  ' → logprob: -13.351792335510254
    10. '    ' → logprob: -13.976792335510254

Token 310: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.06196970492601395
    2. '%' → logprob: -2.811969757080078
    3. ' ' → logprob: -13.936969757080078
    4. '<|end|>' → logprob: -14.436969757080078
    5. ' ' → logprob: -15.436969757080078
    6. '%m' → logprob: -16.436969757080078
    7. ' %=' → logprob: -16.561969757080078
    8. ' %
' → logprob: -16.686969757080078
    9. '%s' → logprob: -16.936969757080078
    10. 'import' → logprob: -17.561969757080078

Token 311: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0263078510761261
    2. ' self' → logprob: -3.6513078212738037
    3. '<|end|>' → logprob: -12.776308059692383
    4. ' ' → logprob: -13.526308059692383
    5. '(self' → logprob: -13.901308059692383
    6. 's' → logprob: -14.401308059692383
    7. '   ' → logprob: -14.776308059692383
    8. ')' → logprob: -14.901308059692383
    9. '[self' → logprob: -15.276308059692383
    10. '	self' → logprob: -15.401308059692383

Token 312: '.m' (ID: 1021)
  Prédit: '.m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.m' → logprob: -1.5213274309644476e-05
    2. '.' → logprob: -11.500015258789062
    3. 'm' → logprob: -12.750015258789062
    4. ')' → logprob: -13.250015258789062
    5. ' .' → logprob: -16.250015258789062
    6. ').' → logprob: -16.375015258789062
    7. ')m' → logprob: -16.500015258789062
    8. ' ' → logprob: -17.375015258789062
    9. '),' → logprob: -18.000015258789062
    10. ' m' → logprob: -18.250015258789062

Token 313: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001302374730585143
    2. ' )' → logprob: -9.250130653381348
    3. ')%' → logprob: -10.875130653381348
    4. '))' → logprob: -11.125130653381348
    5. '   ' → logprob: -14.875130653381348
    6. '    ' → logprob: -17.37512969970703
    7. ' ' → logprob: -17.75012969970703
    8. '     ' → logprob: -18.12512969970703
    9. '       ' → logprob: -18.25012969970703
    10. ')
' → logprob: -18.87512969970703

Token 314: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013232150813564658
    2. ')%' → logprob: -6.876323223114014
    3. '%' → logprob: -8.626322746276855
    4. ' )' → logprob: -9.251322746276855
    5. ' %' → logprob: -11.126322746276855
    6. '%)' → logprob: -16.251323699951172
    7. '   ' → logprob: -16.501323699951172
    8. ' ' → logprob: -16.876323699951172
    9. ' ' → logprob: -17.001323699951172
    10. '       ' → logprob: -18.126323699951172

Token 315: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.31326204538345337
    2. ' self' → logprob: -1.3132619857788086
    3. '(self' → logprob: -15.438261985778809
    4. ' ' → logprob: -16.688262939453125
    5. ' ' → logprob: -17.063262939453125
    6. '	self' → logprob: -17.063262939453125
    7. 'm' → logprob: -17.813262939453125
    8. ' 
' → logprob: -17.938262939453125
    9. '<|end|>' → logprob: -18.438262939453125
    10. 's' → logprob: -18.563262939453125

Token 316: '.m' (ID: 1021)
  Prédit: '.m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.m' → logprob: -2.236549335066229e-05
    2. '.' → logprob: -10.750021934509277
    3. 'm' → logprob: -14.000021934509277
    4. ' .' → logprob: -17.750022888183594
    5. ').' → logprob: -18.125022888183594
    6. '	m' → logprob: -18.500022888183594
    7. '.м' → logprob: -19.000022888183594
    8. ')' → logprob: -19.625022888183594
    9. '   ' → logprob: -19.625022888183594
    10. ' ' → logprob: -19.750022888183594

Token 317: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00580614386126399
    2. '<|end|>' → logprob: -5.755805969238281
    3. '
' → logprob: -6.255805969238281
    4. '    
' → logprob: -8.255805969238281
    5. ')' → logprob: -8.755805969238281
    6. 'def' → logprob: -9.130805969238281
    7. '  ' → logprob: -9.505805969238281
    8. '<|end|>' → logprob: -10.505805969238281
    9. ',' → logprob: -11.255805969238281
    10. '}' → logprob: -11.505805969238281

Token 318: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017861807718873024
    2. 'def' → logprob: -4.267861843109131
    3. ' def' → logprob: -5.767861843109131
    4. ' ' → logprob: -8.142861366271973
    5. '    
' → logprob: -9.392861366271973
    6. '
' → logprob: -9.767861366271973
    7. '  ' → logprob: -10.017861366271973
    8. '```' → logprob: -10.642861366271973
    9. '	def' → logprob: -10.767861366271973
    10. ',' → logprob: -11.892861366271973

Token 319: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.32978329062461853
    2. '   ' → logprob: -1.329783320426941
    3. ' def' → logprob: -4.2047834396362305
    4. '
' → logprob: -7.3297834396362305
    5. '```' → logprob: -7.8297834396362305
    6. '    
' → logprob: -8.70478343963623
    7. ' ' → logprob: -8.70478343963623
    8. '	def' → logprob: -10.07978343963623
    9. '  
' → logprob: -12.07978343963623
    10. '\' → logprob: -12.20478343963623

Token 320: ' div' (ID: 4223)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.0011767742689698935
    2. 'inv' → logprob: -6.751176834106445
    3. ' pow' → logprob: -12.751176834106445
    4. 'div' → logprob: -13.876176834106445
    5. '_pow' → logprob: -14.001176834106445
    6. 'power' → logprob: -14.376176834106445
    7. 'mod' → logprob: -14.751176834106445
    8. 'exp' → logprob: -15.251176834106445
    9. 'Pow' → logprob: -15.501176834106445
    10. 'p' → logprob: -16.251176834106445

Token 321: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0019299437990412116
    2. '(' → logprob: -6.251929759979248
    3. 'self' → logprob: -14.376930236816406
    4. ' (' → logprob: -15.126930236816406
    5. ',' → logprob: -15.251930236816406
    6. '(a' → logprob: -16.001930236816406
    7. '(
' → logprob: -16.376930236816406
    8. 'def' → logprob: -17.251930236816406
    9. ' ' → logprob: -17.501930236816406
    10. '(s' → logprob: -17.626930236816406

Token 322: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02662583440542221
    2. '(self' → logprob: -3.651625871658325
    3. '(' → logprob: -8.151625633239746
    4. 'self' → logprob: -11.151625633239746
    5. ',self' → logprob: -11.901625633239746
    6. '(a' → logprob: -12.026625633239746
    7. ')' → logprob: -12.901625633239746
    8. ')(' → logprob: -12.901625633239746
    9. ' (' → logprob: -14.026625633239746
    10. ' ,' → logprob: -14.151625633239746

Token 323: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.17146895825862885
    2. ' a' → logprob: -2.04646897315979
    3. 'self' → logprob: -3.79646897315979
    4. ' self' → logprob: -5.171468734741211
    5. '   ' → logprob: -8.796468734741211
    6. 'def' → logprob: -9.671468734741211
    7. ' def' → logprob: -11.421468734741211
    8. '(self' → logprob: -11.546468734741211
    9. '       ' → logprob: -12.046468734741211
    10. '	a' → logprob: -12.421468734741211

Token 324: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.8961017202818766e-05
    2. ' ,' → logprob: -9.750059127807617
    3. ',b' → logprob: -15.750059127807617
    4. ',a' → logprob: -16.000059127807617
    5. '<|end|>' → logprob: -16.000059127807617
    6. 'def' → logprob: -16.125059127807617
    7. ',
' → logprob: -16.625059127807617
    8. '_,' → logprob: -17.500059127807617
    9. '   ' → logprob: -18.125059127807617
    10. ' ' → logprob: -18.250059127807617

Token 325: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.47409698367118835
    2. ' b' → logprob: -0.9740970134735107
    3. '   ' → logprob: -11.59909725189209
    4. 'def' → logprob: -11.84909725189209
    5. ' def' → logprob: -13.34909725189209
    6. ' ' → logprob: -14.22409725189209
    7. '	b' → logprob: -14.97409725189209
    8. '    ' → logprob: -15.09909725189209
    9. '       ' → logprob: -15.59909725189209
    10. '  ' → logprob: -16.099096298217773

Token 326: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00044902291847392917
    2. '):
' → logprob: -8.125449180603027
    3. ',' → logprob: -9.750449180603027
    4. ' ):' → logprob: -9.875449180603027
    5. ')' → logprob: -10.375449180603027
    6. ':' → logprob: -11.500449180603027
    7. '):
' → logprob: -14.000449180603027
    8. '}:' → logprob: -14.750449180603027
    9. ' ' → logprob: -15.625449180603027
    10. '   ' → logprob: -16.37544822692871

Token 327: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3179752230644226
    2. '):' → logprob: -2.0679752826690674
    3. ':' → logprob: -2.1929752826690674
    4. '):
' → logprob: -3.8179752826690674
    5. ',' → logprob: -5.567975044250488
    6. '():' → logprob: -5.567975044250488
    7. ':
' → logprob: -5.942975044250488
    8. '():
' → logprob: -7.317975044250488
    9. ' :' → logprob: -7.567975044250488
    10. '   ' → logprob: -8.317975044250488

Token 328: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.022737650200724602
    2. ' return' → logprob: -4.022737503051758
    3. '       ' → logprob: -5.647737503051758
    4. 'a' → logprob: -7.272737503051758
    5. 'def' → logprob: -8.397737503051758
    6. '(a' → logprob: -10.522737503051758
    7. ' a' → logprob: -10.647737503051758
    8. 'self' → logprob: -10.772737503051758
    9. 'pow' → logprob: -10.772737503051758
    10. '   ' → logprob: -11.147737503051758

Token 329: ' self' (ID: 1051)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.2281932681798935
    2. 'self' → logprob: -1.7281932830810547
    3. ' self' → logprob: -4.353193283081055
    4. ' (' → logprob: -4.478193283081055
    5. '(a' → logprob: -6.353193283081055
    6. '((' → logprob: -8.353193283081055
    7. 'a' → logprob: -8.478193283081055
    8. '   ' → logprob: -11.728193283081055
    9. ' a' → logprob: -12.478193283081055
    10. '       ' → logprob: -12.728193283081055

Token 330: '.mul' (ID: 106202)
  Prédit: '.mul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.mul' → logprob: -6.0629870858974755e-05
    2. '.div' → logprob: -10.00006103515625
    3. '.m' → logprob: -12.00006103515625
    4. ' .' → logprob: -12.62506103515625
    5. '.mod' → logprob: -12.75006103515625
    6. '.pow' → logprob: -13.75006103515625
    7. '.' → logprob: -13.87506103515625
    8. 'mul' → logprob: -14.75006103515625
    9. '.exp' → logprob: -16.12506103515625
    10. '.add' → logprob: -16.25006103515625

Token 331: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -4.36574100604048e-06
    2. 'a' → logprob: -12.500004768371582
    3. '(' → logprob: -15.125004768371582
    4. '(
' → logprob: -15.750004768371582
    5. '(self' → logprob: -16.625003814697266
    6. '```' → logprob: -19.250003814697266
    7. '   ' → logprob: -20.125003814697266
    8. ')a' → logprob: -20.500003814697266
    9. 'self' → logprob: -20.625003814697266
    10. 'b' → logprob: -21.000003814697266

Token 332: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020520923135336488
    2. ',a' → logprob: -9.250205039978027
    3. ' ,' → logprob: -10.000205039978027
    4. 'a' → logprob: -10.500205039978027
    5. ',b' → logprob: -11.000205039978027
    6. ',
' → logprob: -11.500205039978027
    7. ',self' → logprob: -12.250205039978027
    8. 'self' → logprob: -12.750205039978027
    9. '(a' → logprob: -14.125205039978027
    10. 'b' → logprob: -15.750205039978027

Token 333: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.00029744720086455345
    2. ' pow' → logprob: -8.375297546386719
    3. 'self' → logprob: -9.625297546386719
    4. '   ' → logprob: -15.000297546386719
    5. '(pow' → logprob: -15.125297546386719
    6. 'power' → logprob: -16.87529754638672
    7. 'mod' → logprob: -17.75029754638672
    8. ' self' → logprob: -17.87529754638672
    9. 'Pow' → logprob: -17.87529754638672
    10. '       ' → logprob: -18.00029754638672

Token 334: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.00024763107649050653
    2. 'b' → logprob: -8.375247955322266
    3. '(' → logprob: -11.125247955322266
    4. ')b' → logprob: -13.625247955322266
    5. '(
' → logprob: -14.250247955322266
    6. ' b' → logprob: -15.875247955322266
    7. ')' → logprob: -16.875247955322266
    8. '```' → logprob: -17.250247955322266
    9. '	b' → logprob: -17.500247955322266
    10. ',b' → logprob: -17.500247955322266

Token 335: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02959820255637169
    2. ',self' → logprob: -4.154598236083984
    3. 'self' → logprob: -4.779598236083984
    4. ',-' → logprob: -6.154598236083984
    5. '(self' → logprob: -6.529598236083984
    6. '-' → logprob: -7.404598236083984
    7. ' ,' → logprob: -8.029598236083984
    8. ' self' → logprob: -8.279598236083984
    9. ',
' → logprob: -9.029598236083984
    10. ' -' → logprob: -9.404598236083984

Token 336: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.009195066057145596
    2. ' self' → logprob: -4.759194850921631
    3. '-' → logprob: -8.134195327758789
    4. '-self' → logprob: -8.509195327758789
    5. '(self' → logprob: -9.634195327758789
    6. '	self' → logprob: -12.009195327758789
    7. '   ' → logprob: -12.134195327758789
    8. ',self' → logprob: -13.384195327758789
    9. ' -' → logprob: -13.509195327758789
    10. '       ' → logprob: -13.634195327758789

Token 337: '.m' (ID: 1021)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.12018144130706787
    2. '-' → logprob: -2.4951815605163574
    3. '(self' → logprob: -3.9951815605163574
    4. ' self' → logprob: -4.745181560516357
    5. '-self' → logprob: -6.370181560516357
    6. '(-' → logprob: -7.245181560516357
    7. 'm' → logprob: -7.995181560516357
    8. ' -' → logprob: -8.1201810836792
    9. '
' → logprob: -9.1201810836792
    10. '{' → logprob: -9.4951810836792

Token 338: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0002991160727106035
    2. ' -' → logprob: -8.125299453735352
    3. 'self' → logprob: -12.875299453735352
    4. '−' → logprob: -15.375299453735352
    5. '-self' → logprob: -16.37529945373535
    6. '–' → logprob: -16.50029945373535
    7. 'm' → logprob: -17.50029945373535
    8. '   ' → logprob: -17.62529945373535
    9. '-
' → logprob: -17.87529945373535
    10. ' ' → logprob: -18.12529945373535

Token 339: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0921942703134846e-05
    2. '-' → logprob: -11.50001049041748
    3. '
' → logprob: -15.25001049041748
    4. ' ' → logprob: -15.50001049041748
    5. '```' → logprob: -16.375011444091797
    6. ' -' → logprob: -16.750011444091797
    7. '

' → logprob: -18.000011444091797
    8. '' → logprob: -18.125011444091797
    9. '
' → logprob: -18.250011444091797
    10. ')' → logprob: -19.375011444091797

Token 340: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.896309739408025e-07
    2. '-' → logprob: -14.625000953674316
    3. '
' → logprob: -15.500000953674316
    4. ' ' → logprob: -16.625
    5. '```' → logprob: -17.75
    6. '

' → logprob: -18.125
    7. ' -' → logprob: -19.25
    8. '
' → logprob: -19.9375
    9. '۲' → logprob: -20.1875
    10. '２' → logprob: -20.5

Token 341: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00025549851125106215
    2. ' ,' → logprob: -8.375255584716797
    3. ')' → logprob: -10.875255584716797
    4. ',
' → logprob: -13.250255584716797
    5. '))' → logprob: -13.500255584716797
    6. '   ' → logprob: -13.625255584716797
    7. ',self' → logprob: -15.250255584716797
    8. ' ' → logprob: -16.000255584716797
    9. '),' → logprob: -16.125255584716797
    10. ' -' → logprob: -16.125255584716797

Token 342: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.006715728435665369
    2. ' self' → logprob: -5.006715774536133
    3. ')' → logprob: -15.256715774536133
    4. '(self' → logprob: -16.756715774536133
    5. '       ' → logprob: -17.256715774536133
    6. '[self' → logprob: -17.631715774536133
    7. ' ' → logprob: -17.881715774536133
    8. '   ' → logprob: -18.381715774536133
    9. '	self' → logprob: -18.506715774536133
    10. '
' → logprob: -19.381715774536133

Token 343: '.m' (ID: 1021)
  Prédit: '.m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.m' → logprob: -0.010800674557685852
    2. ')' → logprob: -5.010800838470459
    3. '))' → logprob: -5.510800838470459
    4. 'm' → logprob: -10.7608003616333
    5. ')m' → logprob: -11.8858003616333
    6. '.' → logprob: -13.2608003616333
    7. ')))' → logprob: -13.6358003616333
    8. '	m' → logprob: -14.0108003616333
    9. ' m' → logprob: -14.3858003616333
    10. ',m' → logprob: -14.5108003616333

Token 344: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.02326003834605217
    2. ')' → logprob: -3.7732601165771484
    3. '))
' → logprob: -11.398260116577148
    4. ')
' → logprob: -13.773260116577148
    5. ' ))' → logprob: -13.898260116577148
    6. '))

' → logprob: -14.523260116577148
    7. ')))' → logprob: -15.148260116577148
    8. ' ' → logprob: -15.523260116577148
    9. '),' → logprob: -16.02326011657715
    10. '   ' → logprob: -16.14826011657715

Token 345: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 346: ' def' (ID: 1056)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 347: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.0015186689561232924
    2. 'inv' → logprob: -6.501518726348877
    3. 'exp' → logprob: -11.751518249511719
    4. ' pow' → logprob: -12.126518249511719
    5. '_pow' → logprob: -14.001518249511719
    6. 'power' → logprob: -14.251518249511719
    7. 'mod' → logprob: -14.876518249511719
    8. 'inverse' → logprob: -15.126518249511719
    9. 'neg' → logprob: -15.501518249511719
    10. 'fact' → logprob: -15.626518249511719

Token 348: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.06999335438013077
    2. '(' → logprob: -2.694993257522583
    3. '(
' → logprob: -10.319993019104004
    4. '<|end|>' → logprob: -10.944993019104004
    5. '(a' → logprob: -12.819993019104004
    6. 'self' → logprob: -13.069993019104004
    7. '(s' → logprob: -14.694993019104004
    8. '<|end|>' → logprob: -15.319993019104004
    9. ' self' → logprob: -15.944993019104004
    10. ' (' → logprob: -16.06999397277832

Token 349: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.26518258452415466
    2. ',' → logprob: -1.765182614326477
    3. '(self' → logprob: -3.1401824951171875
    4. '(a' → logprob: -4.0151824951171875
    5. ')' → logprob: -8.765182495117188
    6. ')(' → logprob: -9.015182495117188
    7. '(
' → logprob: -9.390182495117188
    8. ',a' → logprob: -10.765182495117188
    9. 'a' → logprob: -11.390182495117188
    10. '),' → logprob: -11.515182495117188

Token 350: ' a' (ID: 261)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.26077961921691895
    2. 'a' → logprob: -2.010779619216919
    3. ' self' → logprob: -2.385779619216919
    4. ' a' → logprob: -5.63577938079834
    5. '(self' → logprob: -10.13577938079834
    6. '   ' → logprob: -11.01077938079834
    7. ',' → logprob: -11.26077938079834
    8. ' ' → logprob: -12.13577938079834
    9. '       ' → logprob: -13.38577938079834
    10. 'def' → logprob: -13.88577938079834

Token 351: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3306015716807451e-05
    2. ' ,' → logprob: -11.25001335144043
    3. ',a' → logprob: -16.50001335144043
    4. ',
' → logprob: -17.12501335144043
    5. ',self' → logprob: -18.00001335144043
    6. 'self' → logprob: -18.12501335144043
    7. '‌,' → logprob: -18.25001335144043
    8. '   ' → logprob: -18.37501335144043
    9. ',n' → logprob: -18.37501335144043
    10. ',b' → logprob: -18.62501335144043

Token 352: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.014181956648826599
    2. ' b' → logprob: -4.264182090759277
    3. 'n' → logprob: -11.014182090759277
    4. ' n' → logprob: -13.514182090759277
    5. 'p' → logprob: -14.889182090759277
    6. 'e' → logprob: -15.764182090759277
    7. 'k' → logprob: -16.38918113708496
    8. 'exp' → logprob: -17.76418113708496
    9. '   ' → logprob: -18.01418113708496
    10. 'ex' → logprob: -18.51418113708496

Token 353: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2034064382314682
    2. '):' → logprob: -1.7034064531326294
    3. ' ):' → logprob: -6.32840633392334
    4. ' ,' → logprob: -8.82840633392334
    5. '):
' → logprob: -10.07840633392334
    6. ':' → logprob: -11.95340633392334
    7. '   ' → logprob: -11.95340633392334
    8. ')' → logprob: -13.70340633392334
    9. '    ' → logprob: -14.07840633392334
    10. ' )' → logprob: -14.70340633392334

Token 354: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.046337027102708817
    2. ':' → logprob: -3.796337127685547
    3. '):' → logprob: -4.921337127685547
    4. ',' → logprob: -5.421337127685547
    5. '):
' → logprob: -6.171337127685547
    6. '(self' → logprob: -6.296337127685547
    7. '(' → logprob: -6.421337127685547
    8. ' (' → logprob: -6.546337127685547
    9. '(pow' → logprob: -6.671337127685547
    10. ':
' → logprob: -7.046337127685547

Token 355: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.32433393597602844
    2. 'result' → logprob: -1.574333906173706
    3. 'pow' → logprob: -2.824333906173706
    4. 'res' → logprob: -4.949334144592285
    5. 'def' → logprob: -6.074334144592285
    6. ' return' → logprob: -7.574334144592285
    7. '       ' → logprob: -8.574334144592285
    8. ' result' → logprob: -9.449334144592285
    9. 'r' → logprob: -9.699334144592285
    10. 'ret' → logprob: -9.824334144592285

Token 356: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.0011708177626132965
    2. ' pow' → logprob: -6.751170635223389
    3. '(pow' → logprob: -14.251171112060547
    4. 'power' → logprob: -19.376171112060547
    5. '   ' → logprob: -20.126171112060547
    6. '_pow' → logprob: -21.501171112060547
    7. '.pow' → logprob: -21.751171112060547
    8. 'Pow' → logprob: -22.501171112060547
    9. 'self' → logprob: -23.251171112060547
    10. '
' → logprob: -23.376171112060547

Token 357: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -5.88418151892256e-05
    2. '(' → logprob: -9.750059127807617
    3. 'a' → logprob: -14.625059127807617
    4. '((' → logprob: -18.625059127807617
    5. ' (' → logprob: -18.750059127807617
    6. '(
' → logprob: -18.750059127807617
    7. '(ai' → logprob: -21.125059127807617
    8. '```' → logprob: -21.500059127807617
    9. ' ' → logprob: -21.625059127807617
    10. '(abs' → logprob: -22.000059127807617

Token 358: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008611999801360071
    2. ' ,' → logprob: -7.375861167907715
    3. ',b' → logprob: -8.750861167907715
    4. '%' → logprob: -9.875861167907715
    5. ' %' → logprob: -11.125861167907715
    6. '%b' → logprob: -12.250861167907715
    7. ' ' → logprob: -12.625861167907715
    8. 'b' → logprob: -14.250861167907715
    9. '%,' → logprob: -15.000861167907715
    10. ')' → logprob: -15.375861167907715

Token 359: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0019286326132714748
    2. ' b' → logprob: -6.251928806304932
    3. '       ' → logprob: -19.751928329467773
    4. '	b' → logprob: -20.001928329467773
    5. ')b' → logprob: -20.126928329467773
    6. '   ' → logprob: -20.251928329467773
    7. ' ' → logprob: -21.001928329467773
    8. '<|end|>' → logprob: -21.126928329467773
    9. '$b' → logprob: -21.376928329467773
    10. '    ' → logprob: -21.626928329467773

Token 360: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008654399774968624
    2. ' ,' → logprob: -4.758654594421387
    3. ' %' → logprob: -10.508654594421387
    4. '%' → logprob: -11.883654594421387
    5. ',self' → logprob: -12.508654594421387
    6. ',m' → logprob: -15.008654594421387
    7. ')' → logprob: -15.008654594421387
    8. ',
' → logprob: -15.258654594421387
    9. ',module' → logprob: -15.383654594421387
    10. ',%' → logprob: -15.633654594421387

Token 361: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.04858759790658951
    2. ' self' → logprob: -3.0485875606536865
    3. '(self' → logprob: -16.173587799072266
    4. '	self' → logprob: -17.048587799072266
    5. '       ' → logprob: -17.548587799072266
    6. '[self' → logprob: -17.798587799072266
    7. ' ' → logprob: -18.548587799072266
    8. '=self' → logprob: -19.048587799072266
    9. '   ' → logprob: -19.798587799072266
    10. ' ' → logprob: -19.923587799072266

Token 362: '.m' (ID: 1021)
  Prédit: '.m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.m' → logprob: -9.729906196298543e-06
    2. '.' → logprob: -11.875009536743164
    3. 'm' → logprob: -12.875009536743164
    4. ')' → logprob: -16.750009536743164
    5. ').' → logprob: -17.375009536743164
    6. ' .' → logprob: -17.500009536743164
    7. ')m' → logprob: -18.875009536743164
    8. '.м' → logprob: -19.625009536743164
    9. ' m' → logprob: -20.250009536743164
    10. ',m' → logprob: -20.500009536743164

Token 363: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2200749754119897e-06
    2. ' )' → logprob: -13.750001907348633
    3. ')
' → logprob: -14.125001907348633
    4. '<|end|>' → logprob: -15.750001907348633
    5. ')

' → logprob: -17.000001907348633
    6. ')return' → logprob: -17.125001907348633
    7. ')#' → logprob: -17.500001907348633
    8. ')}' → logprob: -17.875001907348633
    9. '),' → logprob: -18.625001907348633
    10. '<|end|>' → logprob: -18.875001907348633

Token 364: '@' (ID: 31)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6030803322792053
    2. '<|end|>' → logprob: -1.3530802726745605
    3. 'mod' → logprob: -2.4780802726745605
    4. '   ' → logprob: -2.9780802726745605
    5. '#' → logprob: -4.2280802726745605
    6. ')' → logprob: -4.2280802726745605
    7. '```' → logprob: -4.2280802726745605
    8. '<|end|>' → logprob: -5.4780802726745605
    9. 'class' → logprob: -5.9780802726745605
    10. ' ' → logprob: -6.1030802726745605

Token 365: 'mt' (ID: 3586)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.474218487739563
    2. 'mt' → logprob: -0.974218487739563
    3. 'dat' → logprob: -8.974218368530273
    4. 'lt' → logprob: -11.724218368530273
    5. 'staticmethod' → logprob: -12.099218368530273
    6. ' l' → logprob: -15.099218368530273
    7. ' mt' → logprob: -15.599218368530273
    8. '_mt' → logprob: -16.349218368530273
    9. 'lm' → logprob: -16.724218368530273
    10. 'classmethod' → logprob: -16.724218368530273

Token 366: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.000810936326161027
    2. '
' → logprob: -7.1258111000061035
    3. ' def' → logprob: -12.375810623168945
    4. 'class' → logprob: -14.875810623168945
    5. 'de' → logprob: -15.125810623168945
    6. '(' → logprob: -15.125810623168945
    7. '\' → logprob: -16.000810623168945
    8. '
' → logprob: -16.000810623168945
    9. 'write' → logprob: -16.000810623168945
    10. '()' → logprob: -16.125810623168945

Token 367: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.2664456789934775e-06
    2. '
' → logprob: -13.875000953674316
    3. 'class' → logprob: -15.250000953674316
    4. ' def' → logprob: -17.250001907348633
    5. 'de' → logprob: -19.875001907348633
    6. '#' → logprob: -20.375001907348633
    7. 'mod' → logprob: -20.875001907348633
    8. 'div' → logprob: -21.125001907348633
    9. 'Def' → logprob: -21.500001907348633
    10. 'Mod' → logprob: -21.625001907348633

Token 368: ' sl' (ID: 1925)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.7557553648948669
    2. 'main' → logprob: -0.7557553648948669
    3. 'solve' → logprob: -3.0057554244995117
    4. ' solve' → logprob: -4.505755424499512
    5. 'count' → logprob: -10.630755424499512
    6. 'calculate' → logprob: -10.880755424499512
    7. 'factor' → logprob: -10.880755424499512
    8. 'mod' → logprob: -11.005755424499512
    9. '	main' → logprob: -11.755755424499512
    10. ' count' → logprob: -12.130755424499512

Token 369: 'v' (ID: 85)
  Prédit: 'ove'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ove' → logprob: -0.24487663805484772
    2. 'ow' → logprob: -2.2448766231536865
    3. 'iding' → logprob: -2.7448766231536865
    4. 'eep' → logprob: -3.3698766231536865
    5. 'v' → logprob: -6.244876861572266
    6. 'ug' → logprob: -6.494876861572266
    7. 'ice' → logprob: -6.744876861572266
    8. 'ower' → logprob: -6.869876861572266
    9. 'ov' → logprob: -6.994876861572266
    10. 'ide' → logprob: -7.119876861572266

Token 370: '(N' (ID: 10564)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0006739511154592037
    2. '():
' → logprob: -7.375673770904541
    3. '(' → logprob: -11.0006742477417
    4. '(a' → logprob: -11.5006742477417
    5. 'e' → logprob: -11.7506742477417
    6. 'er' → logprob: -12.8756742477417
    7. '():
' → logprob: -13.0006742477417
    8. 'a' → logprob: -13.2506742477417
    9. 'ar' → logprob: -13.7506742477417
    10. '(n' → logprob: -14.0006742477417

Token 371: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07982510328292847
    2. '):' → logprob: -2.5798251628875732
    3. ' ,' → logprob: -7.704824924468994
    4. ' ):' → logprob: -7.954824924468994
    5. ':' → logprob: -9.829825401306152
    6. ')' → logprob: -10.079825401306152
    7. ',n' → logprob: -11.829825401306152
    8. '):
' → logprob: -12.329825401306152
    9. ',
' → logprob: -12.454825401306152
    10. ',k' → logprob: -12.954825401306152

Token 372: ' S' (ID: 336)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.4613305926322937
    2. 'K' → logprob: -1.4613306522369385
    3. 'M' → logprob: -2.2113306522369385
    4. 'arr' → logprob: -5.086330413818359
    5. 'S' → logprob: -5.461330413818359
    6. 'X' → logprob: -5.586330413818359
    7. 'Q' → logprob: -5.836330413818359
    8. 'a' → logprob: -6.461330413818359
    9. 'L' → logprob: -6.586330413818359
    10. 'D' → logprob: -6.586330413818359

Token 373: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.16069433093070984
    2. ',' → logprob: -1.9106943607330322
    3. ' ):' → logprob: -8.660694122314453
    4. '):
' → logprob: -9.285694122314453
    5. ' ,' → logprob: -9.535694122314453
    6. ')' → logprob: -9.910694122314453
    7. ':' → logprob: -10.160694122314453
    8. '):
' → logprob: -12.160694122314453
    9. '[]):' → logprob: -13.098194122314453
    10. ')):' → logprob: -13.285694122314453

Token 374: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010170908644795418
    2. 'dp' → logprob: -7.501017093658447
    3. ' dp' → logprob: -8.001016616821289
    4. 'a' → logprob: -10.751016616821289
    5. 'n' → logprob: -10.751016616821289
    6. ')' → logprob: -12.001016616821289
    7. '	dp' → logprob: -12.126016616821289
    8. ' ans' → logprob: -12.251016616821289
    9. 'mod' → logprob: -12.251016616821289
    10. 'cnt' → logprob: -12.376016616821289

Token 375: ' if' (ID: 538)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.10373800247907639
    2. 'mod' → logprob: -2.6037380695343018
    3. 'MOD' → logprob: -4.478737831115723
    4. 'm' → logprob: -5.728737831115723
    5. 'from' → logprob: -5.728737831115723
    6. 'cnt' → logprob: -6.353737831115723
    7. 'M' → logprob: -6.978737831115723
    8. '   ' → logprob: -7.728737831115723
    9. 'freq' → logprob: -7.978737831115723
    10. 'd' → logprob: -8.228737831115723

Token 376: ' S' (ID: 336)
  Prédit: ' S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.3453995883464813
    2. 'S' → logprob: -1.7203996181488037
    3. ' N' → logprob: -2.5953996181488037
    4. 'N' → logprob: -3.9703996181488037
    5. ' len' → logprob: -4.595399379730225
    6. ' not' → logprob: -4.845399379730225
    7. 'len' → logprob: -6.970399379730225
    8. ' ' → logprob: -8.720399856567383
    9. ' isinstance' → logprob: -8.970399856567383
    10. 'not' → logprob: -9.345399856567383

Token 377: '[' (ID: 58)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.5629768967628479
    2. '<' → logprob: -1.6879768371582031
    3. ' >' → logprob: -1.8129768371582031
    4. '>' → logprob: -2.687976837158203
    5. ' ==' → logprob: -4.937976837158203
    6. '==' → logprob: -5.062976837158203
    7. ' <=' → logprob: -8.687976837158203
    8. ' >=' → logprob: -8.687976837158203
    9. '%' → logprob: -8.937976837158203
    10. '<=' → logprob: -9.312976837158203

Token 378: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004795834422111511
    2. '-' → logprob: -6.254796028137207
    3. 'N' → logprob: -6.254796028137207
    4. ':' → logprob: -7.754796028137207
    5. ']' → logprob: -8.629796028137207
    6. ':]' → logprob: -9.379796028137207
    7. 'i' → logprob: -10.379796028137207
    8. ']==' → logprob: -10.504796028137207
    9. ':N' → logprob: -11.004796028137207
    10. '1' → logprob: -11.129796028137207

Token 379: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.022195525467395782
    2. ']==' → logprob: -4.022195339202881
    3. '[' → logprob: -6.522195339202881
    4. ']!=' → logprob: -6.897195339202881
    5. '==' → logprob: -7.647195339202881
    6. ']=='' → logprob: -8.272195816040039
    7. ']>' → logprob: -8.397195816040039
    8. '][' → logprob: -8.772195816040039
    9. ' ]' → logprob: -9.272195816040039
    10. ']!='' → logprob: -9.897195816040039

Token 380: ' !=' (ID: 1666)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.26079562306404114
    2. '!=' → logprob: -2.1357955932617188
    3. ' ==' → logprob: -2.8857955932617188
    4. '>' → logprob: -3.3857955932617188
    5. ' !=' → logprob: -4.885795593261719
    6. '<' → logprob: -5.635795593261719
    7. '[' → logprob: -5.635795593261719
    8. ':' → logprob: -6.010795593261719
    9. ' >' → logprob: -6.385795593261719
    10. ' <' → logprob: -7.635795593261719

Token 381: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.27413931488990784
    2. ''S' → logprob: -2.774139404296875
    3. '0' → logprob: -3.149139404296875
    4. 'S' → logprob: -3.524139404296875
    5. ''A' → logprob: -3.524139404296875
    6. ''+' → logprob: -3.774139404296875
    7. '1' → logprob: -4.649139404296875
    8. '"' → logprob: -5.024139404296875
    9. ''-' → logprob: -5.274139404296875
    10. ''N' → logprob: -5.399139404296875

Token 382: 'B' (ID: 33)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -1.2180006504058838
    2. '1' → logprob: -2.593000650405884
    3. '?' → logprob: -2.718000650405884
    4. '(':' → logprob: -2.718000650405884
    5. ''' → logprob: -2.843000650405884
    6. '0' → logprob: -2.843000650405884
    7. 'A' → logprob: -2.968000650405884
    8. 'a' → logprob: -3.093000650405884
    9. '-' → logprob: -3.218000650405884
    10. '#' → logprob: -3.343000650405884

Token 383: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.43355295062065125
    2. '':' → logprob: -1.0585529804229736
    3. '':
' → logprob: -5.9335527420043945
    4. 'B' → logprob: -7.3085527420043945
    5. ''or' → logprob: -7.9335527420043945
    6. 'A' → logprob: -8.183552742004395
    7. ''A' → logprob: -9.308552742004395
    8. 'R' → logprob: -9.683552742004395
    9. 'e' → logprob: -9.808552742004395
    10. '':
' → logprob: -10.183552742004395

Token 384: ' or' (ID: 503)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.027781415730714798
    2. ':
' → logprob: -3.9027814865112305
    3. ' or' → logprob: -5.5277814865112305
    4. ':return' → logprob: -6.5277814865112305
    5. '       ' → logprob: -7.0277814865112305
    6. ' and' → logprob: -7.4027814865112305
    7. '   ' → logprob: -8.90278148651123
    8. 'or' → logprob: -10.27778148651123
    9. 'and' → logprob: -10.40278148651123
    10. ' :' → logprob: -10.77778148651123

Token 385: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.00038693982060067356
    2. ' S' → logprob: -8.625387191772461
    3. 'len' → logprob: -8.875387191772461
    4. '   ' → logprob: -10.375387191772461
    5. 'not' → logprob: -11.000387191772461
    6. 'sum' → logprob: -12.500387191772461
    7. ' not' → logprob: -13.000387191772461
    8. ' ' → logprob: -13.125387191772461
    9. '(S' → logprob: -13.125387191772461
    10. '
' → logprob: -13.500387191772461

Token 386: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.8856140375137329
    2. '[' → logprob: -1.010614037513733
    3. '.count' → logprob: -1.510614037513733
    4. '[len' → logprob: -6.135613918304443
    5. 'count' → logprob: -8.885614395141602
    6. '.' → logprob: -8.885614395141602
    7. '==' → logprob: -10.135614395141602
    8. '.find' → logprob: -10.385614395141602
    9. '[:' → logprob: -10.385614395141602
    10. '.endswith' → logprob: -10.385614395141602

Token 387: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.303229570388794
    2. '0' → logprob: -1.428229570388794
    3. ''' → logprob: -1.553229570388794
    4. ']' → logprob: -2.053229570388794
    5. '-' → logprob: -2.928229570388794
    6. '']' → logprob: -3.428229570388794
    7. 'B' → logprob: -3.803229570388794
    8. ' ' → logprob: -4.428229331970215
    9. 'S' → logprob: -5.553229331970215
    10. '[' → logprob: -5.678229331970215

Token 388: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05174367129802704
    2. ']!=' → logprob: -3.301743745803833
    3. '!=' → logprob: -4.926743507385254
    4. '']' → logprob: -6.176743507385254
    5. ' !=' → logprob: -6.176743507385254
    6. ']!='' → logprob: -7.051743507385254
    7. ']==' → logprob: -7.676743507385254
    8. ' ]' → logprob: -7.801743507385254
    9. '!='' → logprob: -9.176743507385254
    10. '==' → logprob: -9.301743507385254

Token 389: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.09369886666536331
    2. ' !=' → logprob: -2.4686989784240723
    3. '==' → logprob: -6.218698978424072
    4. ' not' → logprob: -6.218698978424072
    5. '!='' → logprob: -7.468698978424072
    6. ' ==' → logprob: -8.843698501586914
    7. 'not' → logprob: -10.593698501586914
    8. '!="' → logprob: -11.593698501586914
    9. ')!=' → logprob: -12.593698501586914
    10. '()!=' → logprob: -12.843698501586914

Token 390: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.11518552899360657
    2. ''A' → logprob: -2.490185499191284
    3. ''S' → logprob: -4.240185737609863
    4. ''O' → logprob: -5.740185737609863
    5. ''C' → logprob: -5.990185737609863
    6. ''E' → logprob: -6.740185737609863
    7. ''D' → logprob: -6.865185737609863
    8. ''I' → logprob: -6.990185737609863
    9. ''M' → logprob: -7.490185737609863
    10. ''H' → logprob: -7.740185737609863

Token 391: 'B' (ID: 33)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -1.029361367225647
    2. 'B' → logprob: -1.404361367225647
    3. 'A' → logprob: -1.654361367225647
    4. 'R' → logprob: -1.904361367225647
    5. 'G' → logprob: -4.154361248016357
    6. 'K' → logprob: -4.279361248016357
    7. 'S' → logprob: -5.279361248016357
    8. 'N' → logprob: -5.404361248016357
    9. ''' → logprob: -5.529361248016357
    10. 'I' → logprob: -5.779361248016357

Token 392: '':
' (ID: 7669)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.017483623698353767
    2. ':
' → logprob: -4.392483711242676
    3. '):' → logprob: -6.142483711242676
    4. '':' → logprob: -6.642483711242676
    5. ' or' → logprob: -7.142483711242676
    6. '):
' → logprob: -8.142483711242676
    7. ':return' → logprob: -8.642483711242676
    8. '   ' → logprob: -9.767483711242676
    9. ')' → logprob: -10.267483711242676
    10. 'or' → logprob: -10.642483711242676

Token 393: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00011629798245849088
    2. ',' → logprob: -9.875116348266602
    3. '   ' → logprob: -10.750116348266602
    4. ' return' → logprob: -11.000116348266602
    5. 'return' → logprob: -11.500116348266602
    6. '	' → logprob: -12.250116348266602
    7. '
' → logprob: -12.375116348266602
    8. '      ' → logprob: -13.625116348266602
    9. ':' → logprob: -13.875116348266602
    10. '           ' → logprob: -14.125116348266602

Token 394: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.1370285004377365
    2. 'print' → logprob: -2.137028455734253
    3. '       ' → logprob: -4.887028694152832
    4. '   ' → logprob: -6.012028694152832
    5. '
' → logprob: -10.512028694152832
    6. ' return' → logprob: -11.387028694152832
    7. '           ' → logprob: -11.512028694152832
    8. '0' → logprob: -13.262028694152832
    9. '	return' → logprob: -13.262028694152832
    10. '        
' → logprob: -14.137028694152832

Token 395: ' ' (ID: 220)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.13647204637527466
    2. 'print' → logprob: -2.63647198677063
    3. '0' → logprob: -3.38647198677063
    4. '   ' → logprob: -4.261472225189209
    5. 'None' → logprob: -5.386472225189209
    6. '"' → logprob: -7.136472225189209
    7. 'False' → logprob: -7.261472225189209
    8. '    
' → logprob: -7.511472225189209
    9. '
' → logprob: -8.13647174835205
    10. '1' → logprob: -8.13647174835205

Token 396: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5822718739509583
    2. '-' → logprob: -1.3322718143463135
    3. ''' → logprob: -2.9572718143463135
    4. 'False' → logprob: -2.9572718143463135
    5. '"' → logprob: -3.2072718143463135
    6. '"No' → logprob: -4.082272052764893
    7. 'print' → logprob: -4.457272052764893
    8. 'None' → logprob: -6.082272052764893
    9. 'No' → logprob: -6.957272052764893
    10. ''-' → logprob: -8.332271575927734

Token 397: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5953242778778076
    2. '   ' → logprob: -0.8453242778778076
    3. '    
' → logprob: -4.720324516296387
    4. '<|end|>' → logprob: -4.845324516296387
    5. '\n' → logprob: -7.845324516296387
    6. '  
' → logprob: -7.845324516296387
    7. 'n' → logprob: -8.095324516296387
    8. ' 
' → logprob: -8.345324516296387
    9. '   
' → logprob: -8.595324516296387
    10. '  ' → logprob: -9.095324516296387

Token 398: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007595861330628395
    2. '    
' → logprob: -5.382596015930176
    3. '
' → logprob: -5.882596015930176
    4. 'n' → logprob: -9.007596015930176
    5. '   
' → logprob: -10.757596015930176
    6. '        
' → logprob: -11.757596015930176
    7. '  
' → logprob: -12.382596015930176
    8. '    ' → logprob: -12.507596015930176
    9. '    
    
' → logprob: -12.882596015930176
    10. '  ' → logprob: -13.132596015930176

Token 399: ' LR' (ID: 85167)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.42342472076416016
    2. '   ' → logprob: -1.9234247207641602
    3. 'n' → logprob: -2.79842472076416
    4. 'count' → logprob: -3.04842472076416
    5. 'cnt' → logprob: -3.42342472076416
    6. 'ans' → logprob: -3.79842472076416
    7. 'res' → logprob: -3.92342472076416
    8. 'c' → logprob: -5.54842472076416
    9. 'mod' → logprob: -6.04842472076416
    10. 'answer' → logprob: -6.54842472076416

Token 400: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6364967823028564
    2. ' =' → logprob: -0.7614967823028564
    3. '=[]' → logprob: -6.636496543884277
    4. ',' → logprob: -6.886496543884277
    5. 'count' → logprob: -8.136496543884277
    6. ' ' → logprob: -8.761496543884277
    7. '_count' → logprob: -9.011496543884277
    8. '=[' → logprob: -9.011496543884277
    9. 'B' → logprob: -9.261496543884277
    10. '=[]
' → logprob: -9.261496543884277

Token 401: ' ['' (ID: 5140)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.45803454518318176
    2. '[]' → logprob: -1.4580345153808594
    3. '[]
' → logprob: -2.9580345153808594
    4. '[(' → logprob: -3.7080345153808594
    5. '[len' → logprob: -3.8330345153808594
    6. '[N' → logprob: -4.333034515380859
    7. '0' → logprob: -4.958034515380859
    8. 'deque' → logprob: -5.208034515380859
    9. '[S' → logprob: -5.583034515380859
    10. '[[' → logprob: -6.458034515380859

Token 402: '']' (ID: 1089)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007305956911295652
    2. 'B' → logprob: -5.757306098937988
    3. '']' → logprob: -6.882306098937988
    4. 'L' → logprob: -7.132306098937988
    5. '[' → logprob: -7.507306098937988
    6. '-' → logprob: -8.257306098937988
    7. ']' → logprob: -8.257306098937988
    8. '1' → logprob: -8.382306098937988
    9. '('' → logprob: -8.382306098937988
    10. '(' → logprob: -8.757306098937988

Token 403: ' *' (ID: 425)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0162345170974731
    2. '
' → logprob: -1.3912345170974731
    3. ',' → logprob: -2.2662343978881836
    4. '*' → logprob: -2.6412343978881836
    5. 'LR' → logprob: -2.8912343978881836
    6. '   ' → logprob: -3.6412343978881836
    7. ' for' → logprob: -3.7662343978881836
    8. 'def' → logprob: -4.141234397888184
    9. '[' → logprob: -4.266234397888184
    10. ' LR' → logprob: -4.641234397888184

Token 404: ' (' (ID: 350)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.028203124180436134
    2. '(N' → logprob: -3.778203010559082
    3. '(' → logprob: -6.278203010559082
    4. 'len' → logprob: -6.778203010559082
    5. '(len' → logprob: -6.778203010559082
    6. '2' → logprob: -8.528203010559082
    7. ' (' → logprob: -8.778203010559082
    8. ' N' → logprob: -8.778203010559082
    9. '3' → logprob: -9.778203010559082
    10. '6' → logprob: -10.153203010559082

Token 405: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0015411654021590948
    2. '2' → logprob: -7.0015411376953125
    3. 'len' → logprob: -7.8765411376953125
    4. '3' → logprob: -9.876541137695312
    5. ' N' → logprob: -9.876541137695312
    6. '   ' → logprob: -10.251541137695312
    7. '(' → logprob: -10.501541137695312
    8. '(N' → logprob: -10.876541137695312
    9. '6' → logprob: -11.126541137695312
    10. '4' → logprob: -11.626541137695312

Token 406: ' *' (ID: 425)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.015004443004727364
    2. ')
' → logprob: -4.265004634857178
    3. '+' → logprob: -7.265004634857178
    4. ' )' → logprob: -9.64000415802002
    5. ' +' → logprob: -10.76500415802002
    6. '   ' → logprob: -10.89000415802002
    7. ')
' → logprob: -12.51500415802002
    8. '7' → logprob: -12.76500415802002
    9. ')

' → logprob: -12.89000415802002
    10. ' )
' → logprob: -12.89000415802002

Token 407: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.03136769309639931
    2. '3' → logprob: -3.906367778778076
    3. '4' → logprob: -4.781367778778076
    4. '10' → logprob: -7.031367778778076
    5. '5' → logprob: -7.281367778778076
    6. '6' → logprob: -8.156367301940918
    7. ' ' → logprob: -8.531367301940918
    8. '100' → logprob: -9.156367301940918
    9. '7' → logprob: -9.906367301940918
    10. '20' → logprob: -9.906367301940918

Token 408: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.10619019716978073
    2. '3' → logprob: -2.4811902046203613
    3. '4' → logprob: -4.481190204620361
    4. '10' → logprob: -6.106190204620361
    5. '5' → logprob: -6.356190204620361
    6. '100' → logprob: -7.481190204620361
    7. '6' → logprob: -7.731190204620361
    8. '50' → logprob: -8.606189727783203
    9. '20' → logprob: -8.731189727783203
    10. '7' → logprob: -8.981189727783203

Token 409: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012563452124595642
    2. ')
' → logprob: -4.387563228607178
    3. '+' → logprob: -10.637563705444336
    4. ' )' → logprob: -11.012563705444336
    5. ')

' → logprob: -12.512563705444336
    6. ' +' → logprob: -12.887563705444336
    7. ')
' → logprob: -12.887563705444336
    8. '   ' → logprob: -13.637563705444336
    9. ' )
' → logprob: -14.137563705444336
    10. ')L' → logprob: -14.512563705444336

Token 410: '   ' (ID: 271)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.8221626281738281
    2. 'stack' → logprob: -2.322162628173828
    3. '   ' → logprob: -2.447162628173828
    4. 'count' → logprob: -2.447162628173828
    5. ' stack' → logprob: -2.447162628173828
    6. 'i' → logprob: -2.572162628173828
    7. ' for' → logprob: -2.572162628173828
    8. 'for' → logprob: -3.072162628173828
    9. 'idx' → logprob: -3.447162628173828
    10. 'L' → logprob: -3.572162628173828

Token 411: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -0.7991220951080322
    2. 'i' → logprob: -2.5491220951080322
    3. 'for' → logprob: -2.7991220951080322
    4. 'stack' → logprob: -2.9241220951080322
    5. 'idx' → logprob: -2.9241220951080322
    6. 'count' → logprob: -3.0491220951080322
    7. 'L' → logprob: -3.1741220951080322
    8. 'left' → logprob: -3.1741220951080322
    9. ' l' → logprob: -3.6741220951080322
    10. ' for' → logprob: -3.6741220951080322

Token 412: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4193826913833618
    2. ' =' → logprob: -1.2943826913833618
    3. ',' → logprob: -2.9193825721740723
    4. 'r' → logprob: -4.419382572174072
    5. ',r' → logprob: -6.919382572174072
    6. 'eft' → logprob: -7.294382572174072
    7. 'R' → logprob: -8.91938304901123
    8. '=[]' → logprob: -8.91938304901123
    9. 'e' → logprob: -9.16938304901123
    10. '=r' → logprob: -10.29438304901123

Token 413: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004945308435708284
    2. 'r' → logprob: -5.879945278167725
    3. '-' → logprob: -6.504945278167725
    4. ' ' → logprob: -7.504945278167725
    5. '[' → logprob: -10.379945755004883
    6. '1' → logprob: -11.254945755004883
    7. '-r' → logprob: -11.379945755004883
    8. ' -' → logprob: -11.504945755004883
    9. ' r' → logprob: -12.379945755004883
    10. '[]' → logprob: -12.879945755004883

Token 414: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004979832097887993
    2. '-' → logprob: -6.004979610443115
    3. 'r' → logprob: -6.379979610443115
    4. '[' → logprob: -8.379980087280273
    5. '[]' → logprob: -8.379980087280273
    6. ' ' → logprob: -9.254980087280273
    7. '-r' → logprob: -9.504980087280273
    8. '[]
' → logprob: -9.754980087280273
    9. '[-' → logprob: -10.504980087280273
    10. '[r' → logprob: -11.129980087280273

Token 415: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5647513270378113
    2. '<|end|>' → logprob: -1.064751386642456
    3. ',' → logprob: -3.814751386642456
    4. '
' → logprob: -4.064751148223877
    5. ' 
' → logprob: -4.064751148223877
    6. '<|end|>' → logprob: -4.689751148223877
    7. '   ' → logprob: -4.814751148223877
    8. '    
' → logprob: -6.314751148223877
    9. '  
' → logprob: -6.439751148223877
    10. ' for' → logprob: -6.564751148223877

Token 416: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.45605459809303284
    2. '   ' → logprob: -2.2060546875
    3. 'r' → logprob: -2.3310546875
    4. ' 
' → logprob: -2.9560546875
    5. '<|end|>' → logprob: -2.9560546875
    6. ',' → logprob: -4.3310546875
    7. ' r' → logprob: -4.5810546875
    8. ')' → logprob: -4.8310546875
    9. ' for' → logprob: -5.2060546875
    10. '
' → logprob: -5.8310546875

Token 417: ' ans' (ID: 3345)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.024273864924907684
    2. 'for' → logprob: -3.8992738723754883
    3. 'stack' → logprob: -6.024273872375488
    4. 'count' → logprob: -7.774273872375488
    5. 'cnt' → logprob: -8.024273872375488
    6. ' r' → logprob: -8.899273872375488
    7. ' for' → logprob: -9.274273872375488
    8. 'balance' → logprob: -9.774273872375488
    9. '   ' → logprob: -10.274273872375488
    10. 'ans' (adapté à ' ans') → logprob: -10.524273872375488

Token 418: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759931206703186
    2. '=' → logprob: -0.8259931206703186
    3. ',' → logprob: -10.200993537902832
    4. ' ' → logprob: -11.325993537902832
    5. ')' → logprob: -14.200993537902832
    6. ':' → logprob: -14.200993537902832
    7. ' =
' → logprob: -14.200993537902832
    8. '  ' → logprob: -14.575993537902832
    9. '=int' → logprob: -14.700993537902832
    10. 's' → logprob: -15.200993537902832

Token 419: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.010313388891518116
    2. ' ' → logprob: -4.635313510894775
    3. '1' → logprob: -7.510313510894775
    4. '-' → logprob: -13.385313034057617
    5. '[' → logprob: -13.385313034057617
    6. '[]' → logprob: -13.385313034057617
    7. '   ' → logprob: -14.260313034057617
    8. '2' → logprob: -14.697813034057617
    9. ' -' → logprob: -14.822813034057617
    10. 'N' → logprob: -15.072813034057617

Token 420: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007961660739965737
    2. '1' → logprob: -7.250796318054199
    3. '-' → logprob: -10.3757963180542
    4. '[]' → logprob: -10.6257963180542
    5. '[' → logprob: -11.2507963180542
    6. ' ' → logprob: -12.0007963180542
    7. '[]
' → logprob: -13.0007963180542
    8. '10' → logprob: -13.6257963180542
    9. 'N' → logprob: -13.7507963180542
    10. '[-' → logprob: -14.1257963180542

Token 421: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6690031290054321
    2. '<|end|>' → logprob: -1.9190031290054321
    3. ' ' → logprob: -2.0440030097961426
    4. '   ' → logprob: -2.6690030097961426
    5. ' 
' → logprob: -2.7940030097961426
    6. '	
' → logprob: -4.294003009796143
    7. '  
' → logprob: -4.419003009796143
    8. ',' → logprob: -4.544003009796143
    9. '    
' → logprob: -4.544003009796143
    10. ' for' → logprob: -4.919003009796143

Token 422: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7514071464538574
    2. ' 
' → logprob: -1.8764071464538574
    3. '<|end|>' → logprob: -1.8764071464538574
    4. '   ' → logprob: -2.0014071464538574
    5. '
' → logprob: -3.6264071464538574
    6. '    
' → logprob: -4.376407146453857
    7. ',' → logprob: -4.876407146453857
    8. ' for' → logprob: -5.001407146453857
    9. '  
' → logprob: -5.001407146453857
    10. '	
' → logprob: -5.376407146453857

Token 423: ' M' (ID: 391)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05392920598387718
    2. ' for' → logprob: -3.178929090499878
    3. ')' → logprob: -5.803929328918457
    4. 'i' → logprob: -5.803929328918457
    5. 'stack' → logprob: -6.303929328918457
    6. 'r' → logprob: -6.678929328918457
    7. '   ' → logprob: -7.678929328918457
    8. ' stack' → logprob: -8.053929328918457
    9. 'b' → logprob: -8.803929328918457
    10. 'count' → logprob: -8.928929328918457

Token 424: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038110461086034775
    2. '=' → logprob: -3.2881104946136475
    3. ',' → logprob: -10.163110733032227
    4. ' ' → logprob: -11.288110733032227
    5. ' =
' → logprob: -11.663110733032227
    6. '   ' → logprob: -12.663110733032227
    7. '    ' → logprob: -13.663110733032227
    8. '.' → logprob: -13.913110733032227
    9. ')' → logprob: -14.163110733032227
    10. '=
' → logprob: -14.163110733032227

Token 425: ' Mod' (ID: 7191)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.014320391230285168
    2. '998' → logprob: -4.514320373535156
    3. '100' → logprob: -5.764320373535156
    4. 'int' → logprob: -9.889320373535156
    5. 'Mod' → logprob: -10.014320373535156
    6. '1' → logprob: -11.514320373535156
    7. '123' → logprob: -12.014320373535156
    8. ' ' → logprob: -12.139320373535156
    9. '(' → logprob: -12.889320373535156
    10. '101' → logprob: -13.014320373535156

Token 426: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002122661331668496
    2. '10' → logprob: -6.25212287902832
    3. '100' → logprob: -8.62712287902832
    4. '998' → logprob: -11.50212287902832
    5. '(int' → logprob: -13.25212287902832
    6. '((' → logprob: -13.50212287902832
    7. ' (' → logprob: -14.75212287902832
    8. '(
' → logprob: -15.00212287902832
    9. '1' → logprob: -15.50212287902832
    10. 'int' → logprob: -15.62712287902832

Token 427: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.08321879059076309
    2. '100' → logprob: -2.583218812942505
    3. '998' → logprob: -5.458218574523926
    4. '1' → logprob: -10.583218574523926
    5. ' ' → logprob: -11.583218574523926
    6. 'int' → logprob: -12.083218574523926
    7. '999' → logprob: -12.083218574523926
    8. '2' → logprob: -12.958218574523926
    9. '123' → logprob: -13.208218574523926
    10. '(' → logprob: -13.333218574523926

Token 428: ' **' (ID: 6240)
  Prédit: '09'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '09' → logprob: -0.3910398781299591
    2. '**' → logprob: -1.7660398483276367
    3. '9' → logprob: -1.8910398483276367
    4. ' ' → logprob: -7.641039848327637
    5. '009' → logprob: -7.641039848327637
    6. '000' → logprob: -7.641039848327637
    7. '07' → logprob: -9.516039848327637
    8. '00' → logprob: -9.516039848327637
    9. ' **' → logprob: -10.641039848327637
    10. '007' → logprob: -10.891039848327637

Token 429: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.25
    3. '09' → logprob: -15.625
    4. '```' → logprob: -17.875
    5. '+' → logprob: -18.5
    6. '
' → logprob: -18.75
    7. '_' → logprob: -19.375
    8. '   ' → logprob: -19.375
    9. '6' → logprob: -20.125
    10. '8' → logprob: -20.75

Token 430: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -4.4849443838757e-06
    2. '+' → logprob: -13.125004768371582
    3. '09' → logprob: -13.500004768371582
    4. '
' → logprob: -15.375004768371582
    5. '6' → logprob: -15.750004768371582
    6. '**' → logprob: -16.000003814697266
    7. '18' → logprob: -16.000003814697266
    8. '8' → logprob: -16.125003814697266
    9. '```' → logprob: -16.375003814697266
    10. '99' → logprob: -16.812503814697266

Token 431: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0001725511101540178
    2. '7' → logprob: -9.25017261505127
    3. ' +' → logprob: -9.50017261505127
    4. '+
' → logprob: -13.62517261505127
    5. '＋' → logprob: -15.62517261505127
    6. '9' → logprob: -16.375171661376953
    7. '```' → logprob: -16.750171661376953
    8. '
' → logprob: -18.375171661376953
    9. 'plus' → logprob: -18.625171661376953
    10. ' plus' → logprob: -18.625171661376953

Token 432: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.5
    3. '07' → logprob: -19.125
    4. '+' → logprob: -19.25
    5. '9' → logprob: -20.0
    6. '   ' → logprob: -20.0
    7. '```' → logprob: -20.125
    8. '７' → logprob: -20.375
    9. '
' → logprob: -20.75
    10. '67' → logprob: -21.9375

Token 433: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '+' → logprob: -18.0
    3. ' ' → logprob: -18.5
    4. '07' → logprob: -18.875
    5. '```' → logprob: -19.5
    6. '
' → logprob: -19.625
    7. '７' → logprob: -20.75
    8. '   ' → logprob: -21.125
    9. '

' → logprob: -21.375
    10. '007' → logprob: -21.75

Token 434: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0017107593594118953
    2. ')
' → logprob: -6.376710891723633
    3. ')
' → logprob: -12.376710891723633
    4. ')

' → logprob: -13.126710891723633
    5. ' )' → logprob: -13.751710891723633
    6. '   ' → logprob: -14.001710891723633
    7. ' ' → logprob: -16.376710891723633
    8. ')`' → logprob: -16.376710891723633
    9. '))' → logprob: -17.251710891723633
    10. '),' → logprob: -17.251710891723633

Token 435: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8973778486251831
    2. ' ' → logprob: -1.022377848625183
    3. ' 
' → logprob: -2.0223779678344727
    4. '<|end|>' → logprob: -2.6473779678344727
    5. '    
' → logprob: -5.022377967834473
    6. '  
' → logprob: -5.147377967834473
    7. '
' → logprob: -5.647377967834473
    8. ' for' → logprob: -6.022377967834473
    9. '\t' → logprob: -6.522377967834473
    10. '  ' → logprob: -6.647377967834473

Token 436: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.6442948579788208
    2. 'for' (adapté à ' for') → logprob: -1.6442948579788208
    3. ' for' → logprob: -1.8942948579788208
    4. ' stack' → logprob: -1.8942948579788208
    5. 'i' → logprob: -2.1442947387695312
    6. 'stack' → logprob: -2.1442947387695312
    7. ' i' → logprob: -3.7692947387695312
    8. ')' → logprob: -5.019294738769531
    9. 'c' → logprob: -5.019294738769531
    10. 'count' → logprob: -5.019294738769531

Token 437: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.06449403613805771
    2. ' i' → logprob: -2.8144941329956055
    3. 'c' → logprob: -6.0644941329956055
    4. ' c' → logprob: -8.814494132995605
    5. '_i' → logprob: -11.064494132995605
    6. 'x' → logprob: -12.064494132995605
    7. 'ch' → logprob: -12.189494132995605
    8. '   ' → logprob: -12.689494132995605
    9. '	i' → logprob: -12.689494132995605
    10. 'd' → logprob: -12.814494132995605

Token 438: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.030406251549720764
    2. 'in' → logprob: -3.5304062366485596
    3. ',' → logprob: -7.655406475067139
    4. ' ' → logprob: -8.90540599822998
    5. '	in' → logprob: -11.53040599822998
    6. '   ' → logprob: -12.15540599822998
    7. '1' → logprob: -12.65540599822998
    8. 'import' → logprob: -12.65540599822998
    9. ' ,' → logprob: -12.78040599822998
    10. '(' → logprob: -12.78040599822998

Token 439: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.003603036515414715
    2. ' range' → logprob: -5.628602981567383
    3. '   ' → logprob: -14.253602981567383
    4. '
' → logprob: -14.503602981567383
    5. ' ' → logprob: -14.503602981567383
    6. '(range' → logprob: -14.878602981567383
    7. '  ' → logprob: -15.628602981567383
    8. 'S' → logprob: -16.003602981567383
    9. '	range' → logprob: -16.003602981567383
    10. 'ran' → logprob: -16.253602981567383

Token 440: '(' (ID: 7)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.17815040051937103
    2. '(' → logprob: -1.9281504154205322
    3. 'N' → logprob: -4.428150177001953
    4. '1' → logprob: -5.178150177001953
    5. '(n' → logprob: -9.553150177001953
    6. '(
' → logprob: -10.428150177001953
    7. '(len' → logprob: -10.553150177001953
    8. '2' → logprob: -11.178150177001953
    9. 'l' → logprob: -11.678150177001953
    10. 'n' → logprob: -12.178150177001953

Token 441: '2' (ID: 17)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.002948935842141509
    2. '1' → logprob: -5.877948760986328
    3. '2' → logprob: -10.127948760986328
    4. ' N' → logprob: -10.377948760986328
    5. 'len' → logprob: -10.627948760986328
    6. '   ' → logprob: -11.002948760986328
    7. '0' → logprob: -11.127948760986328
    8. 'n' → logprob: -11.877948760986328
    9. ' ' → logprob: -13.002948760986328
    10. 'l' → logprob: -13.377948760986328

Token 442: ' *' (ID: 425)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00045843268162570894
    2. ' ,' → logprob: -8.125458717346191
    3. ',N' → logprob: -9.250458717346191
    4. ',
' → logprob: -10.250458717346191
    5. '*N' → logprob: -11.625458717346191
    6. '
' → logprob: -12.000458717346191
    7. '*' → logprob: -12.125458717346191
    8. ' *' → logprob: -13.125458717346191
    9. '**' → logprob: -13.375458717346191
    10. 'N' → logprob: -13.875458717346191

Token 443: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00028731857310049236
    2. ' N' → logprob: -8.375287055969238
    3. 'l' → logprob: -10.625287055969238
    4. 'i' → logprob: -10.750287055969238
    5. 'n' → logprob: -12.875287055969238
    6. '(N' → logprob: -13.250287055969238
    7. '   ' → logprob: -13.375287055969238
    8. ' ' → logprob: -13.375287055969238
    9. '	N' → logprob: -14.000287055969238
    10. 'len' → logprob: -15.187787055969238

Token 444: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2812552750110626
    2. '):
' → logprob: -1.4062552452087402
    3. '):
' → logprob: -10.031255722045898
    4. '-' → logprob: -10.531255722045898
    5. ' ):' → logprob: -11.656255722045898
    6. '   ' → logprob: -11.906255722045898
    7. ':' → logprob: -12.031255722045898
    8. ')' → logprob: -12.156255722045898
    9. ' -' → logprob: -12.531255722045898
    10. ' ):
' → logprob: -13.406255722045898

Token 445: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011434339685365558
    2. ' if' → logprob: -7.876143455505371
    3. ' ' → logprob: -8.751143455505371
    4. '	' → logprob: -9.126143455505371
    5. ',' → logprob: -9.376143455505371
    6. '   ' → logprob: -9.626143455505371
    7. '    ' → logprob: -9.626143455505371
    8. ' s' → logprob: -9.751143455505371
    9. '	   ' → logprob: -9.876143455505371
    10. 'if' → logprob: -10.626143455505371

Token 446: ' if' (ID: 538)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.22382263839244843
    2. ' if' → logprob: -2.223822593688965
    3. ' c' → logprob: -3.098822593688965
    4. 'if' (adapté à ' if') → logprob: -3.473822593688965
    5. '       ' → logprob: -4.348822593688965
    6. '   ' → logprob: -5.848822593688965
    7. 'ch' → logprob: -8.223822593688965
    8. 's' → logprob: -9.723822593688965
    9. ' ch' → logprob: -9.848822593688965
    10. ' s' → logprob: -10.848822593688965

Token 447: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.038078673183918
    2. ' S' → logprob: -3.288078784942627
    3. '   ' → logprob: -11.163078308105469
    4. ' ' → logprob: -11.663078308105469
    5. 'i' → logprob: -11.913078308105469
    6. ' i' → logprob: -12.788078308105469
    7. '       ' → logprob: -14.163078308105469
    8. '(S' → logprob: -14.413078308105469
    9. '    ' → logprob: -14.538078308105469
    10. 'L' → logprob: -14.663078308105469

Token 448: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.8789383830153383e-05
    2. '[' → logprob: -11.000019073486328
    3. '[
' → logprob: -14.125019073486328
    4. 'i' → logprob: -14.875019073486328
    5. '[I' → logprob: -15.125019073486328
    6. ' [' → logprob: -15.250019073486328
    7. '==' → logprob: -15.875019073486328
    8. '(i' → logprob: -17.000019073486328
    9. ' i' → logprob: -17.250019073486328
    10. ']' → logprob: -17.250019073486328

Token 449: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.523612380027771
    2. '==' → logprob: -1.273612380027771
    3. ']==' → logprob: -2.2736124992370605
    4. ' ==' → logprob: -3.7736124992370605
    5. ']=='' → logprob: -6.7736124992370605
    6. '=='' → logprob: -8.523612022399902
    7. ')' → logprob: -9.398612022399902
    8. '=' → logprob: -9.523612022399902
    9. '==
' → logprob: -9.773612022399902
    10. '[' → logprob: -10.023612022399902

Token 450: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.02444477379322052
    2. ' ==' → logprob: -3.774444818496704
    3. '!=' → logprob: -8.024444580078125
    4. '=='' → logprob: -8.149444580078125
    5. '==
' → logprob: -8.649444580078125
    6. '=' → logprob: -9.399444580078125
    7. 'in' → logprob: -9.524444580078125
    8. ' in' → logprob: -9.524444580078125
    9. '[' → logprob: -9.649444580078125
    10. ']==' → logprob: -10.274444580078125

Token 451: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.010771192610263824
    2. ''A' → logprob: -5.26077127456665
    3. ''L' → logprob: -5.26077127456665
    4. ''U' → logprob: -9.260770797729492
    5. ''C' → logprob: -9.885770797729492
    6. ''O' → logprob: -10.010770797729492
    7. ''S' → logprob: -10.385770797729492
    8. ''I' → logprob: -10.385770797729492
    9. '"B' → logprob: -10.760770797729492
    10. ' '' → logprob: -11.010770797729492

Token 452: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.11321146041154861
    2. 'A' → logprob: -3.2382113933563232
    3. 'R' → logprob: -3.3632113933563232
    4. 'L' → logprob: -4.113211631774902
    5. ''' → logprob: -4.988211631774902
    6. 'W' → logprob: -5.238211631774902
    7. 'I' → logprob: -5.988211631774902
    8. ''A' → logprob: -7.738211631774902
    9. ''L' → logprob: -8.113211631774902
    10. '')' → logprob: -8.363211631774902

Token 453: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.2092052698135376
    2. '':
' → logprob: -2.084205150604248
    3. ''' → logprob: -2.959205150604248
    4. ':' → logprob: -4.834205150604248
    5. ' '' → logprob: -6.584205150604248
    6. ':
' → logprob: -6.834205150604248
    7. '':
' → logprob: -8.584205627441406
    8. ''s' → logprob: -8.709205627441406
    9. ')' → logprob: -8.959205627441406
    10. ''):
' → logprob: -9.084205627441406

Token 454: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.674980878829956
    2. '           ' → logprob: -1.049980878829956
    3. ':
' → logprob: -2.424980878829956
    4. '       ' → logprob: -3.299980878829956
    5. ' and' → logprob: -4.424981117248535
    6. ',' → logprob: -6.924981117248535
    7. 'and' → logprob: -7.549981117248535
    8. '          ' → logprob: -8.299981117248535
    9. '        
' → logprob: -8.549981117248535
    10. '        ' → logprob: -8.799981117248535

Token 455: ' if' (ID: 538)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.00030817187507636845
    2. '           ' → logprob: -8.8753080368042
    3. 'LR' → logprob: -9.6253080368042
    4. ' l' → logprob: -9.7503080368042
    5. '       ' → logprob: -11.1253080368042
    6. 'L' → logprob: -11.3753080368042
    7. 'if' (adapté à ' if') → logprob: -12.1253080368042
    8. 'lr' → logprob: -12.5003080368042
    9. 'ans' → logprob: -12.6253080368042
    10. '   ' → logprob: -13.1253080368042

Token 456: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.3629987835884094
    2. 'LR' → logprob: -1.8629987239837646
    3. ' l' → logprob: -2.1129987239837646
    4. ' LR' → logprob: -4.112998962402344
    5. 'L' → logprob: -4.987998962402344
    6. 'S' → logprob: -6.112998962402344
    7. ' L' → logprob: -6.862998962402344
    8. ' S' → logprob: -7.237998962402344
    9. 'lr' → logprob: -7.862998962402344
    10. 'i' → logprob: -8.487998962402344

Token 457: ' %' (ID: 1851)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3812948763370514
    2. '==' → logprob: -1.256294846534729
    3. '+' → logprob: -4.8812947273254395
    4. ' +' → logprob: -5.2562947273254395
    5. ' >' → logprob: -5.2562947273254395
    6. ' >=' → logprob: -5.3812947273254395
    7. ' <' → logprob: -5.7562947273254395
    8. '>' → logprob: -6.5062947273254395
    9. '>=' → logprob: -6.6312947273254395
    10. '<' → logprob: -6.8812947273254395

Token 458: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0015850928612053394
    2. ' ' → logprob: -6.501585006713867
    3. '4' → logprob: -9.501585006713867
    4. '3' → logprob: -13.376585006713867
    5. '  ' → logprob: -13.376585006713867
    6. '   ' → logprob: -13.626585006713867
    7. '==' → logprob: -14.126585006713867
    8. '256' → logprob: -15.126585006713867
    9. '```' → logprob: -15.189085006713867
    10. '202' → logprob: -15.189085006713867

Token 459: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00017863049288280308
    2. '4' → logprob: -9.000178337097168
    3. '3' → logprob: -10.000178337097168
    4. ' ' → logprob: -12.500178337097168
    5. '10' → logprob: -14.187678337097168
    6. '6' → logprob: -14.437678337097168
    7. '26' → logprob: -14.437678337097168
    8. '1' → logprob: -14.625178337097168
    9. '5' → logprob: -14.750178337097168
    10. '
' → logprob: -14.750178337097168

Token 460: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.11296830326318741
    2. ' ==' → logprob: -2.2379682064056396
    3. '==
' → logprob: -9.862968444824219
    4. ')' → logprob: -10.362968444824219
    5. ')==' → logprob: -10.487968444824219
    6. ':' → logprob: -11.487968444824219
    7. '!=' → logprob: -11.862968444824219
    8. '=' → logprob: -12.237968444824219
    9. ']==' → logprob: -12.487968444824219
    10. '
' → logprob: -13.112968444824219

Token 461: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0014141658321022987
    2. ' ' → logprob: -6.8764142990112305
    3. '1' → logprob: -7.8764142990112305
    4. '=' → logprob: -13.75141429901123
    5. '==' → logprob: -15.00141429901123
    6. '2' → logprob: -16.251413345336914
    7. ' =' → logprob: -16.251413345336914
    8. '   ' → logprob: -18.188913345336914
    9. ' ==' → logprob: -18.188913345336914
    10. '  ' → logprob: -18.251413345336914

Token 462: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009362359414808452
    2. '1' → logprob: -7.000936031341553
    3. ' ' → logprob: -10.625936508178711
    4. '=' → logprob: -16.18843650817871
    5. 's' → logprob: -16.56343650817871
    6. '   ' → logprob: -17.31343650817871
    7. '==' → logprob: -17.37593650817871
    8. ' =' → logprob: -17.56343650817871
    9. ')' → logprob: -18.31343650817871
    10. '
' → logprob: -18.31343650817871

Token 463: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5158001184463501
    2. ':' → logprob: -1.01580011844635
    3. ' and' → logprob: -3.8907999992370605
    4. 'and' → logprob: -4.0157999992370605
    5. '==' → logprob: -6.8907999992370605
    6. ')' → logprob: -8.140800476074219
    7. '           ' → logprob: -8.265800476074219
    8. '):
' → logprob: -8.515800476074219
    9. '       ' → logprob: -9.015800476074219
    10. ' or' → logprob: -9.390800476074219

Token 464: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2729930579662323
    2. '           ' → logprob: -1.6479930877685547
    3. 'LR' → logprob: -3.7729930877685547
    4. '       ' → logprob: -4.522993087768555
    5. '
' → logprob: -6.397993087768555
    6. ' and' → logprob: -6.397993087768555
    7. 'ans' → logprob: -6.522993087768555
    8. ' ans' → logprob: -6.647993087768555
    9. '   ' → logprob: -6.897993087768555
    10. ' LR' → logprob: -7.272993087768555

Token 465: ' LR' (ID: 85167)
  Prédit: 'LR'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LR' (adapté à ' LR') → logprob: -0.006237337365746498
    2. 'ans' → logprob: -5.506237506866455
    3. '           ' → logprob: -7.381237506866455
    4. ' LR' → logprob: -8.006237030029297
    5. '   ' → logprob: -8.256237030029297
    6. 'L' → logprob: -8.256237030029297
    7. '               ' → logprob: -8.256237030029297
    8. 'if' → logprob: -8.756237030029297
    9. 'l' → logprob: -9.631237030029297
    10. '                   ' → logprob: -10.131237030029297

Token 466: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.4583854675292969
    2. '[l' → logprob: -1.0833854675292969
    3. '[' → logprob: -3.833385467529297
    4. '=' → logprob: -5.333385467529297
    5. ' =' → logprob: -6.583385467529297
    6. '[L' → logprob: -7.333385467529297
    7. '[
' → logprob: -8.708385467529297
    8. '=l' → logprob: -8.833385467529297
    9. ' [' → logprob: -9.083385467529297
    10. '[I' → logprob: -10.208385467529297

Token 467: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.41458550095558167
    2. '=' → logprob: -1.6645854711532593
    3. ']=' → logprob: -1.9145854711532593
    4. ' =' → logprob: -6.414585590362549
    5. ']='' → logprob: -7.164585590362549
    6. '='' → logprob: -9.03958511352539
    7. ']+=' → logprob: -9.28958511352539
    8. ' ]' → logprob: -9.66458511352539
    9. '+=' → logprob: -12.78958511352539
    10. '],' → logprob: -12.78958511352539

Token 468: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.001199635793454945
    2. ' =' → logprob: -6.751199722290039
    3. '='' → logprob: -10.501199722290039
    4. '+=' → logprob: -13.501199722290039
    5. '=
' → logprob: -16.00119972229004
    6. '=

' → logprob: -16.00119972229004
    7. ' ='' → logprob: -16.12619972229004
    8. '+='' → logprob: -16.62619972229004
    9. '=('' → logprob: -17.62619972229004
    10. ' ' → logprob: -18.00119972229004

Token 469: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.4309220314025879
    2. ''L' → logprob: -1.055922031402588
    3. ''A' → logprob: -6.805922031402588
    4. ''l' → logprob: -8.55592155456543
    5. ''O' → logprob: -8.55592155456543
    6. 'L' → logprob: -9.05592155456543
    7. ''U' → logprob: -9.05592155456543
    8. ''S' → logprob: -9.30592155456543
    9. ''C' → logprob: -9.55592155456543
    10. '"L' → logprob: -9.68092155456543

Token 470: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.014762498438358307
    2. ''' → logprob: -5.5147624015808105
    3. '('' → logprob: -5.6397624015808105
    4. 'R' → logprob: -5.7647624015808105
    5. 'B' → logprob: -6.1397624015808105
    6. ''L' → logprob: -6.5147624015808105
    7. '(' → logprob: -9.639762878417969
    8. 'A' → logprob: -9.639762878417969
    9. 'l' → logprob: -10.014762878417969
    10. '(L' → logprob: -10.514762878417969

Token 471: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0022771733347326517
    2. ''
' → logprob: -6.127277374267578
    3. 'B' → logprob: -10.002277374267578
    4. '')' → logprob: -11.002277374267578
    5. 'L' → logprob: -11.377277374267578
    6. ' '' → logprob: -12.127277374267578
    7. ''

' → logprob: -12.877277374267578
    8. '"' → logprob: -13.127277374267578
    9. ''L' → logprob: -13.377277374267578
    10. ''''' → logprob: -14.127277374267578

Token 472: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08510413020849228
    2. '               ' → logprob: -2.71010422706604
    3. 'else' → logprob: -4.710103988647461
    4. ' else' → logprob: -5.585103988647461
    5. '<|end|>' → logprob: -6.335103988647461
    6. '       ' → logprob: -8.335103988647461
    7. '<|end|>' → logprob: -10.085103988647461
    8. 'elif' → logprob: -10.335103988647461
    9. 'n' → logprob: -10.585103988647461
    10. ')' → logprob: -10.710103988647461

Token 473: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -2.3080716346157715e-05
    2. ' l' → logprob: -11.125022888183594
    3. '           ' → logprob: -12.375022888183594
    4. '               ' → logprob: -13.000022888183594
    5. '                   ' → logprob: -13.750022888183594
    6. '	l' → logprob: -15.375022888183594
    7. '   ' → logprob: -15.625022888183594
    8. '       ' → logprob: -15.750022888183594
    9. '
' → logprob: -16.000022888183594
    10. 'r' → logprob: -17.625022888183594

Token 474: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.16336531937122345
    2. ' +=' → logprob: -1.913365364074707
    3. '=' → logprob: -5.788365364074707
    4. '+' → logprob: -10.163365364074707
    5. ' =' → logprob: -10.413365364074707
    6. ']+=' → logprob: -13.038365364074707
    7. '+='' → logprob: -14.038365364074707
    8. '+=(' → logprob: -14.663365364074707
    9. '+="' → logprob: -15.038365364074707
    10. ')' → logprob: -15.538365364074707

Token 475: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4974866644479334e-05
    2. ' ' → logprob: -11.125015258789062
    3. '2' → logprob: -15.750015258789062
    4. '   ' → logprob: -18.125015258789062
    5. '
' → logprob: -18.375015258789062
    6. '<|end|>' → logprob: -19.625015258789062
    7. '  ' → logprob: -19.875015258789062
    8. '```' → logprob: -20.250015258789062
    9. '0' → logprob: -21.000015258789062
    10. '

' → logprob: -21.375015258789062

Token 476: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.054500666621607e-06
    2. ' ' → logprob: -12.75000286102295
    3. '2' → logprob: -15.75000286102295
    4. '<|end|>' → logprob: -17.000003814697266
    5. '-' → logprob: -19.000003814697266
    6. '   ' → logprob: -19.250003814697266
    7. '
' → logprob: -19.375003814697266
    8. '```' → logprob: -20.062503814697266
    9. '.' → logprob: -20.437503814697266
    10. '+' → logprob: -20.437503814697266

Token 477: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8639959096908569
    2. '<|end|>' → logprob: -1.238995909690857
    3. ' else' → logprob: -1.863995909690857
    4. '       ' → logprob: -2.9889960289001465
    5. 'else' → logprob: -3.1139960289001465
    6. '               ' → logprob: -4.2389960289001465
    7. 'elif' → logprob: -4.7389960289001465
    8. ' elif' → logprob: -5.1139960289001465
    9. '
' → logprob: -5.4889960289001465
    10. '<|end|>' → logprob: -6.1139960289001465

Token 478: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0524488687515259
    2. ' else' → logprob: -1.1774488687515259
    3. '<|end|>' → logprob: -1.9274488687515259
    4. 'else' → logprob: -2.1774487495422363
    5. '       ' → logprob: -3.3024487495422363
    6. '               ' → logprob: -3.9274487495422363
    7. 'elif' → logprob: -4.427448749542236
    8. ' elif' → logprob: -5.052448749542236
    9. '<|end|>' → logprob: -5.552448749542236
    10. '	else' → logprob: -6.802448749542236

Token 479: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.19827190041542053
    2. ' else' → logprob: -2.3232719898223877
    3. '           ' → logprob: -2.5732719898223877
    4. '       ' → logprob: -5.448271751403809
    5. '	else' → logprob: -7.448271751403809
    6. '               ' → logprob: -7.698271751403809
    7. 'elif' → logprob: -9.073271751403809
    8. '	       ' → logprob: -9.573271751403809
    9. '		' → logprob: -10.198271751403809
    10. '   ' → logprob: -11.073271751403809

Token 480: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8841190934181213
    2. '               ' → logprob: -1.0091190338134766
    3. ':
' → logprob: -1.5091190338134766
    4. '           ' → logprob: -7.509119033813477
    5. '<|end|>' → logprob: -8.634119033813477
    6. '              ' → logprob: -9.259119033813477
    7. ',' → logprob: -9.384119033813477
    8. ')' → logprob: -9.759119033813477
    9. '{' → logprob: -9.884119033813477
    10. '       ' → logprob: -10.509119033813477

Token 481: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0011402154341340065
    2. '<|end|>' → logprob: -8.126140594482422
    3. '           ' → logprob: -8.376140594482422
    4. '                ' → logprob: -8.501140594482422
    5. '              ' → logprob: -9.126140594482422
    6. '            ' → logprob: -9.626140594482422
    7. '                   ' → logprob: -9.876140594482422
    8. '             ' → logprob: -10.001140594482422
    9. '```' → logprob: -10.501140594482422
    10. '                
' → logprob: -10.876140594482422

Token 482: ' LR' (ID: 85167)
  Prédit: 'LR'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LR' (adapté à ' LR') → logprob: -0.16736865043640137
    2. ' LR' → logprob: -1.9173686504364014
    3. '               ' → logprob: -5.1673688888549805
    4. 'R' → logprob: -7.2923688888549805
    5. '                   ' → logprob: -7.7923688888549805
    6. 'L' → logprob: -8.79236888885498
    7. '           ' → logprob: -9.54236888885498
    8. '                ' → logprob: -10.54236888885498
    9. ' ' → logprob: -11.04236888885498
    10. '   ' → logprob: -11.41736888885498

Token 483: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.2352385965641588e-05
    2. '[' → logprob: -11.750012397766113
    3. '[I' → logprob: -12.625012397766113
    4. 'i' → logprob: -15.250012397766113
    5. ' [' → logprob: -15.375012397766113
    6. '=' → logprob: -15.750012397766113
    7. '[
' → logprob: -15.750012397766113
    8. ' =' → logprob: -16.500011444091797
    9. '```' → logprob: -17.000011444091797
    10. '   ' → logprob: -17.250011444091797

Token 484: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0022401853930205107
    2. ']=' → logprob: -6.502240180969238
    3. '=' → logprob: -7.252240180969238
    4. ' =' → logprob: -10.627240180969238
    5. ' ]' → logprob: -13.002240180969238
    6. '[i' → logprob: -13.502240180969238
    7. '   ' → logprob: -15.127240180969238
    8. '[' → logprob: -15.252240180969238
    9. ')' → logprob: -15.502240180969238
    10. ']='' → logprob: -16.752241134643555

Token 485: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.018150877207517624
    2. ' =' → logprob: -4.018150806427002
    3. ']' → logprob: -14.64315128326416
    4. ']=' → logprob: -14.89315128326416
    5. '=
' → logprob: -15.76815128326416
    6. '[' → logprob: -16.893150329589844
    7. '=

' → logprob: -17.018150329589844
    8. ')=' → logprob: -17.518150329589844
    9. ')' → logprob: -17.768150329589844
    10. '='' → logprob: -17.893150329589844

Token 486: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00021224225929472595
    2. ' ' → logprob: -9.250212669372559
    3. '
' → logprob: -9.750212669372559
    4. 'R' → logprob: -10.875212669372559
    5. ' '' → logprob: -11.125212669372559
    6. ' 
' → logprob: -12.250212669372559
    7. ' R' → logprob: -12.500212669372559
    8. ' ' → logprob: -12.500212669372559
    9. ''S' → logprob: -12.750212669372559
    10. '   ' → logprob: -13.125212669372559

Token 487: 'R' (ID: 49)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.1269330382347107
    2. 'R' → logprob: -2.1269330978393555
    3. '"' → logprob: -13.251933097839355
    4. ' R' → logprob: -14.251933097839355
    5. '`' → logprob: -14.626933097839355
    6. ''S' → logprob: -14.751933097839355
    7. ''r' → logprob: -15.251933097839355
    8. '')' → logprob: -15.876933097839355
    9. ''D' → logprob: -16.00193214416504
    10. ''Re' → logprob: -16.00193214416504

Token 488: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0010507925180718303
    2. ''
' → logprob: -6.87605094909668
    3. '<|end|>' → logprob: -11.62605094909668
    4. ' '' → logprob: -13.12605094909668
    5. '\n' → logprob: -13.12605094909668
    6. '"' → logprob: -13.25105094909668
    7. ''l' → logprob: -14.50105094909668
    8. '
' → logprob: -14.62605094909668
    9. ''#' → logprob: -14.87605094909668
    10. '')' → logprob: -15.37605094909668

Token 489: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0011487908195704222
    2. '           ' → logprob: -6.876148700714111
    3. '<|end|>' → logprob: -9.75114917755127
    4. '       ' → logprob: -11.37614917755127
    5. '              ' → logprob: -11.50114917755127
    6. '                   ' → logprob: -11.62614917755127
    7. ',' → logprob: -12.12614917755127
    8. '                ' → logprob: -12.75114917755127
    9. '```' → logprob: -12.75114917755127
    10. 'else' → logprob: -12.75114917755127

Token 490: ' ans' (ID: 3345)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.31333211064338684
    2. 'l' → logprob: -1.3133320808410645
    3. '           ' → logprob: -10.188332557678223
    4. '               ' → logprob: -11.438332557678223
    5. '	l' → logprob: -12.563332557678223
    6. ' ' → logprob: -12.813332557678223
    7. '                   ' → logprob: -12.938332557678223
    8. '```' → logprob: -13.063332557678223
    9. '    ' → logprob: -13.313332557678223
    10. '   ' → logprob: -13.438332557678223

Token 491: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3675006031990051
    2. '=' → logprob: -1.2425005435943604
    3. ' *=' → logprob: -4.1175007820129395
    4. '*=' → logprob: -5.9925007820129395
    5. ' ' → logprob: -9.992500305175781
    6. '*' → logprob: -10.367500305175781
    7. ' *' → logprob: -12.492500305175781
    8. ')' → logprob: -12.992500305175781
    9. ',' → logprob: -13.367500305175781
    10. '	' → logprob: -13.492500305175781

Token 492: ' M' (ID: 391)
  Prédit: '(M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.46708932518959045
    2. 'M' → logprob: -1.092089295387268
    3. ' M' → logprob: -3.4670894145965576
    4. ' (' → logprob: -6.2170891761779785
    5. '(' → logprob: -6.7170891761779785
    6. '(ans' → logprob: -6.7170891761779785
    7. 'ans' → logprob: -7.3420891761779785
    8. '(m' → logprob: -8.092089653015137
    9. '(L' → logprob: -8.342089653015137
    10. 'm' → logprob: -8.467089653015137

Token 493: '.mul' (ID: 106202)
  Prédit: '.mul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.mul' → logprob: -5.438573680294212e-06
    2. '.add' → logprob: -12.875005722045898
    3. '.' → logprob: -13.625005722045898
    4. '.multiply' → logprob: -14.375005722045898
    5. '.mult' → logprob: -14.875005722045898
    6. '.sub' → logprob: -15.250005722045898
    7. '.m' → logprob: -15.375005722045898
    8. ' .' → logprob: -17.0000057220459
    9. '.mu' → logprob: -17.0000057220459
    10. '.div' → logprob: -17.2500057220459

Token 494: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -6.392202976712724e-06
    2. 'ans' → logprob: -12.000006675720215
    3. '(
' → logprob: -16.0000057220459
    4. '(answer' → logprob: -17.0000057220459
    5. '(' → logprob: -17.7500057220459
    6. '	ans' → logprob: -18.8750057220459
    7. ' ans' → logprob: -21.2500057220459
    8. '(err' → logprob: -21.3750057220459
    9. '(an' → logprob: -21.5000057220459
    10. '```' → logprob: -21.8750057220459

Token 495: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20597299933433533
    2. '(ans' → logprob: -1.7059730291366577
    3. '(l' → logprob: -6.330973148345947
    4. ',l' → logprob: -6.455973148345947
    5. 'ans' → logprob: -7.580973148345947
    6. '(' → logprob: -7.955973148345947
    7. ' ,' → logprob: -8.455972671508789
    8. ',
' → logprob: -10.705972671508789
    9. '(
' → logprob: -10.830972671508789
    10. ',(' → logprob: -10.955972671508789

Token 496: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0012538038427010179
    2. '2' → logprob: -6.876253604888916
    3. '(' → logprob: -10.126254081726074
    4. '(l' → logprob: -10.126254081726074
    5. ' l' → logprob: -10.251254081726074
    6. '   ' → logprob: -10.876254081726074
    7. 'i' → logprob: -11.376254081726074
    8. '10' → logprob: -12.001254081726074
    9. 'max' → logprob: -12.001254081726074
    10. 'b' → logprob: -12.126254081726074

Token 497: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00753988791257143
    2. '//' → logprob: -5.882539749145508
    3. ' //' → logprob: -5.882539749145508
    4. ')
' → logprob: -6.507539749145508
    5. ' )' → logprob: -8.132539749145508
    6. '+' → logprob: -10.257539749145508
    7. '))' → logprob: -10.382539749145508
    8. ' +' → logprob: -11.007539749145508
    9. '   ' → logprob: -11.382539749145508
    10. ')//' → logprob: -11.507539749145508

Token 498: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06485720723867416
    2. '           ' → logprob: -2.939857244491577
    3. '       ' → logprob: -5.439857006072998
    4. '```' → logprob: -6.314857006072998
    5. '<|end|>' → logprob: -6.814857006072998
    6. '                   ' → logprob: -6.939857006072998
    7. '   ' → logprob: -7.064857006072998
    8. '                
' → logprob: -8.814857482910156
    9. '\n' → logprob: -8.939857482910156
    10. '            
' → logprob: -9.314857482910156

Token 499: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -0.1655108779668808
    2. '           ' → logprob: -1.915510892868042
    3. '               ' → logprob: -5.540510654449463
    4. ' l' → logprob: -7.415510654449463
    5. '   ' → logprob: -8.165511131286621
    6. '       ' → logprob: -8.165511131286621
    7. '                   ' → logprob: -9.040511131286621
    8. '	l' → logprob: -11.290511131286621
    9. '```' → logprob: -11.665511131286621
    10. '          ' → logprob: -12.040511131286621

Token 500: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.1920805275440216
    2. '+=' → logprob: -1.9420804977416992
    3. ' -=' → logprob: -3.817080497741699
    4. '-' → logprob: -5.442080497741699
    5. ' +=' → logprob: -5.817080497741699
    6. '=' → logprob: -6.192080497741699
    7. '   ' → logprob: -12.4420804977417
    8. ' =' → logprob: -12.8170804977417
    9. ' -' → logprob: -14.6920804977417
    10. ')' → logprob: -14.6920804977417

Token 501: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.375011444091797
    3. '   ' → logprob: -17.750011444091797
    4. '           ' → logprob: -19.875011444091797
    5. '2' → logprob: -20.125011444091797
    6. '
' → logprob: -20.250011444091797
    7. '       ' → logprob: -20.375011444091797
    8. '```' → logprob: -20.500011444091797
    9. '-' → logprob: -21.375011444091797
    10. '１' → logprob: -21.375011444091797

Token 502: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1637164789135568e-05
    2. ' ' → logprob: -11.375011444091797
    3. '   ' → logprob: -16.500011444091797
    4. '2' → logprob: -17.187511444091797
    5. '```' → logprob: -17.687511444091797
    6. '0' → logprob: -17.875011444091797
    7. '
' → logprob: -18.250011444091797
    8. '１' → logprob: -18.375011444091797
    9. '(' → logprob: -18.500011444091797
    10. '<|end|>' → logprob: -18.687511444091797

Token 503: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 504: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01943928375840187
    2. '<|end|>' → logprob: -4.144439220428467
    3. '   ' → logprob: -6.394439220428467
    4. ' else' → logprob: -7.894439220428467
    5. 'else' → logprob: -8.394439697265625
    6. ')' → logprob: -8.394439697265625
    7. '
' → logprob: -9.019439697265625
    8. 'return' → logprob: -9.144439697265625
    9. '<|end|>' → logprob: -9.269439697265625
    10. '.' → logprob: -9.519439697265625

Token 505: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.6034584045410156
    2. 'else' (adapté à ' else') → logprob: -1.1034584045410156
    3. '       ' → logprob: -2.6034584045410156
    4. '   ' → logprob: -3.4784584045410156
    5. '    ' → logprob: -5.853458404541016
    6. '	else' → logprob: -6.103458404541016
    7. '        ' → logprob: -6.228458404541016
    8. 'elif' → logprob: -6.228458404541016
    9. ')' → logprob: -6.603458404541016
    10. ' elif' → logprob: -6.603458404541016

Token 506: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07294245809316635
    2. '           ' → logprob: -3.1979424953460693
    3. ':
' → logprob: -3.6979424953460693
    4. '       ' → logprob: -5.44794225692749
    5. ' :' → logprob: -8.697942733764648
    6. '               ' → logprob: -9.822942733764648
    7. '<|end|>' → logprob: -10.447942733764648
    8. ',' → logprob: -10.572942733764648
    9. '   ' → logprob: -10.697942733764648
    10. '```' → logprob: -11.072942733764648

Token 507: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5591220855712891
    2. '           ' → logprob: -0.9341220855712891
    3. '               ' → logprob: -3.559122085571289
    4. ' l' → logprob: -5.684122085571289
    5. 'l' → logprob: -6.684122085571289
    6. 'if' → logprob: -7.434122085571289
    7. ' if' → logprob: -7.934122085571289
    8. '   ' → logprob: -8.559122085571289
    9. 'ans' → logprob: -8.559122085571289
    10. ' ' → logprob: -8.559122085571289

Token 508: ' if' (ID: 538)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0023789771366864443
    2. '           ' → logprob: -6.502378940582275
    3. ' l' → logprob: -7.502378940582275
    4. 'ans' → logprob: -9.127379417419434
    5. 'return' → logprob: -9.752379417419434
    6. 'pass' → logprob: -10.002379417419434
    7. 'if' (adapté à ' if') → logprob: -10.002379417419434
    8. '       ' → logprob: -10.627379417419434
    9. 'LR' → logprob: -11.252379417419434
    10. '   ' → logprob: -12.252379417419434

Token 509: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.5564067363739014
    2. 'l' → logprob: -0.9314067363739014
    3. 'LR' → logprob: -4.4314069747924805
    4. ' LR' → logprob: -4.8064069747924805
    5. 'S' → logprob: -5.3064069747924805
    6. ' S' → logprob: -6.0564069747924805
    7. ' i' → logprob: -6.8064069747924805
    8. 'i' → logprob: -7.0564069747924805
    9. 'L' → logprob: -7.1814069747924805
    10. 's' → logprob: -7.5564069747924805

Token 510: ' %' (ID: 1851)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.12788261473178864
    2. '+=' → logprob: -2.877882719039917
    3. ' ==' → logprob: -3.877882719039917
    4. ' >' → logprob: -4.127882480621338
    5. '==' → logprob: -4.502882480621338
    6. '>' → logprob: -5.252882480621338
    7. ' <' → logprob: -5.627882480621338
    8. '<' → logprob: -6.502882480621338
    9. '=' → logprob: -6.502882480621338
    10. '+' → logprob: -6.627882480621338

Token 511: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0003843173326458782
    2. ' ' → logprob: -7.875384330749512
    3. '1' → logprob: -13.375384330749512
    4. '0' → logprob: -14.375384330749512
    5. '==' → logprob: -14.500384330749512
    6. '   ' → logprob: -14.625384330749512
    7. '4' → logprob: -15.875384330749512
    8. '  ' → logprob: -16.312883377075195
    9. '3' → logprob: -16.375383377075195
    10. '           ' → logprob: -16.687883377075195

Token 512: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.759734732331708e-05
    2. ' ' → logprob: -11.500017166137695
    3. '1' → logprob: -12.250017166137695
    4. '4' → logprob: -14.750017166137695
    5. '0' → logprob: -14.875017166137695
    6. '
' → logprob: -15.187517166137695
    7. '   ' → logprob: -15.250017166137695
    8. '==' → logprob: -16.250017166137695
    9. '```' → logprob: -16.562517166137695
    10. '!' → logprob: -16.625017166137695

Token 513: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.062327396124601364
    2. ' ==' → logprob: -2.8123273849487305
    3. '!=' → logprob: -8.68732738494873
    4. ')==' → logprob: -9.68732738494873
    5. ' !=' → logprob: -10.43732738494873
    6. '==
' → logprob: -10.43732738494873
    7. '=' → logprob: -10.56232738494873
    8. '()==' → logprob: -11.18732738494873
    9. ' ' → logprob: -12.18732738494873
    10. ')' → logprob: -12.18732738494873

Token 514: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.017775271087884903
    2. '1' → logprob: -4.517775058746338
    3. ' ' → logprob: -5.017775058746338
    4. '=' → logprob: -9.892775535583496
    5. '==' → logprob: -10.642775535583496
    6. '           ' → logprob: -12.267775535583496
    7. '   ' → logprob: -12.392775535583496
    8. ' =' → logprob: -14.392775535583496
    9. '       ' → logprob: -14.767775535583496
    10. '               ' → logprob: -15.017775535583496

Token 515: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04887405037879944
    2. '1' → logprob: -3.0488741397857666
    3. ' ' → logprob: -8.173873901367188
    4. '   ' → logprob: -13.048873901367188
    5. '           ' → logprob: -14.486373901367188
    6. '
' → logprob: -14.611373901367188
    7. '       ' → logprob: -15.423873901367188
    8. '==' → logprob: -15.423873901367188
    9. '2' → logprob: -15.548873901367188
    10. '=' → logprob: -15.798873901367188

Token 516: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6078504323959351
    2. ':
' → logprob: -1.232850432395935
    3. '               ' → logprob: -1.857850432395935
    4. ' and' → logprob: -5.357850551605225
    5. '           ' → logprob: -6.482850551605225
    6. 'and' → logprob: -7.857850551605225
    7. '=' → logprob: -7.982850551605225
    8. '              ' → logprob: -8.357850074768066
    9. '==' → logprob: -8.607850074768066
    10. ' :' → logprob: -8.982850074768066

Token 517: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0011757015017792583
    2. '           ' → logprob: -7.376175880432129
    3. 'l' → logprob: -9.126175880432129
    4. ' l' → logprob: -9.126175880432129
    5. 'LR' → logprob: -9.501175880432129
    6. '                   ' → logprob: -9.626175880432129
    7. '                
' → logprob: -10.001175880432129
    8. '       ' → logprob: -10.501175880432129
    9. 'L' → logprob: -11.001175880432129
    10. '   ' → logprob: -11.001175880432129

Token 518: ' LR' (ID: 85167)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.29171502590179443
    2. 'LR' (adapté à ' LR') → logprob: -2.166715145111084
    3. 'return' → logprob: -3.041715145111084
    4. '               ' → logprob: -3.041715145111084
    5. 'ans' → logprob: -3.666715145111084
    6. '                   ' → logprob: -4.416715145111084
    7. '           ' → logprob: -6.166715145111084
    8. ' l' → logprob: -7.041715145111084
    9. 'L' → logprob: -7.916715145111084
    10. 'lr' → logprob: -8.041714668273926

Token 519: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00013786651834379882
    2. '[' → logprob: -9.000138282775879
    3. '=' → logprob: -12.375138282775879
    4. ' [' → logprob: -13.000138282775879
    5. ' =' → logprob: -13.125138282775879
    6. '[
' → logprob: -13.250138282775879
    7. '[I' → logprob: -13.250138282775879
    8. '   ' → logprob: -14.625138282775879
    9. 'i' → logprob: -14.875138282775879
    10. '
' → logprob: -15.000138282775879

Token 520: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02659577690064907
    2. ']=' → logprob: -4.151595592498779
    3. '=' → logprob: -4.651595592498779
    4. ' =' → logprob: -7.026595592498779
    5. ']='' → logprob: -10.026596069335938
    6. ' ]' → logprob: -11.026596069335938
    7. ']+=' → logprob: -12.276596069335938
    8. '[' → logprob: -13.276596069335938
    9. '   ' → logprob: -13.526596069335938
    10. ')' → logprob: -13.776596069335938

Token 521: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00462154159322381
    2. ' =' → logprob: -5.379621505737305
    3. '=
' → logprob: -14.379621505737305
    4. '='' → logprob: -14.629621505737305
    5. '=

' → logprob: -15.879621505737305
    6. '   ' → logprob: -16.629621505737305
    7. ' ' → logprob: -16.879621505737305
    8. '+=' → logprob: -17.004621505737305
    9. ']' → logprob: -17.254621505737305
    10. ']=' → logprob: -17.254621505737305

Token 522: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.16382969915866852
    2. ''L' → logprob: -1.9138296842575073
    3. '''' → logprob: -7.163829803466797
    4. ''S' → logprob: -7.413829803466797
    5. ''U' → logprob: -7.413829803466797
    6. ''A' → logprob: -8.038829803466797
    7. ' '' → logprob: -8.413829803466797
    8. ''O' → logprob: -8.538829803466797
    9. '')' → logprob: -8.913829803466797
    10. ''M' → logprob: -9.163829803466797

Token 523: 'R' (ID: 49)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5111101865768433
    2. ''L' → logprob: -1.7611101865768433
    3. 'L' → logprob: -2.261110305786133
    4. 'R' → logprob: -2.511110305786133
    5. 'B' → logprob: -4.511110305786133
    6. ''U' → logprob: -4.886110305786133
    7. ''?' → logprob: -5.386110305786133
    8. 'U' → logprob: -5.636110305786133
    9. ''O' → logprob: -6.511110305786133
    10. '?' → logprob: -6.636110305786133

Token 524: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.16568847000598907
    2. ''
' → logprob: -1.9156885147094727
    3. '               ' → logprob: -5.290688514709473
    4. '           ' → logprob: -8.165688514709473
    5. ' '' → logprob: -10.665688514709473
    6. '')' → logprob: -10.665688514709473
    7. '<|end|>' → logprob: -11.415688514709473
    8. ')' → logprob: -11.540688514709473
    9. '')
' → logprob: -11.665688514709473
    10. ''
' → logprob: -12.040688514709473

Token 525: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002869304269552231
    2. '           ' → logprob: -6.127869129180908
    3. '<|end|>' → logprob: -7.502869129180908
    4. 'else' → logprob: -10.377869606018066
    5. '                   ' → logprob: -10.877869606018066
    6. '
' → logprob: -10.877869606018066
    7. '       ' → logprob: -11.002869606018066
    8. '			' → logprob: -11.627869606018066
    9. '<|end|>' → logprob: -11.752869606018066
    10. '	           ' → logprob: -11.877869606018066

Token 526: ' ans' (ID: 3345)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.02238018810749054
    2. '               ' → logprob: -3.8973801136016846
    3. '           ' → logprob: -7.022380352020264
    4. ' l' → logprob: -7.147380352020264
    5. 'else' → logprob: -9.897379875183105
    6. '   ' → logprob: -10.397379875183105
    7. 'ans' (adapté à ' ans') → logprob: -10.397379875183105
    8. '       ' → logprob: -10.897379875183105
    9. '	l' → logprob: -12.147379875183105
    10. '
' → logprob: -12.397379875183105

Token 527: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06197093799710274
    2. ' =' → logprob: -2.8119709491729736
    3. ',' → logprob: -13.686970710754395
    4. '=M' → logprob: -13.811970710754395
    5. '*=' → logprob: -14.436970710754395
    6. ' *=' → logprob: -15.686970710754395
    7. ')' → logprob: -16.31197166442871
    8. ' ' → logprob: -16.43697166442871
    9. '   ' → logprob: -17.43697166442871
    10. ')=' → logprob: -17.81197166442871

Token 528: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.048653677105903625
    2. ' M' → logprob: -3.0486536026000977
    3. '0' → logprob: -9.923653602600098
    4. '(M' → logprob: -11.048653602600098
    5. '(' → logprob: -14.673653602600098
    6. ' ' → logprob: -14.673653602600098
    7. '	M' → logprob: -15.548653602600098
    8. '=M' → logprob: -16.048654556274414
    9. '   ' → logprob: -16.798654556274414
    10. '1' → logprob: -16.923654556274414

Token 529: '.mul' (ID: 106202)
  Prédit: '.mul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.mul' → logprob: -2.939851037808694e-05
    2. 'mul' → logprob: -10.625029563903809
    3. '=' → logprob: -13.250029563903809
    4. '_mul' → logprob: -14.000029563903809
    5. '.m' → logprob: -14.875029563903809
    6. ' =' → logprob: -15.000029563903809
    7. ' mul' → logprob: -15.000029563903809
    8. '.' → logprob: -15.125029563903809
    9. '.mult' → logprob: -15.125029563903809
    10. '.div' → logprob: -15.375029563903809

Token 530: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -1.9361264946837764e-07
    2. 'ans' → logprob: -16.375
    3. '(answer' → logprob: -17.0
    4. '(' → logprob: -17.125
    5. '(
' → logprob: -18.0
    6. ' (' → logprob: -19.875
    7. '	ans' → logprob: -20.0
    8. '(err' → logprob: -20.25
    9. '```' → logprob: -20.625
    10. '(an' → logprob: -20.75

Token 531: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.6550729419104755e-05
    2. '(ans' → logprob: -10.875036239624023
    3. '(' → logprob: -12.125036239624023
    4. ',
' → logprob: -12.250036239624023
    5. ',l' → logprob: -12.375036239624023
    6. ')' → logprob: -14.250036239624023
    7. ' ,' → logprob: -14.250036239624023
    8. 'ans' → logprob: -14.625036239624023
    9. '),' → logprob: -15.000036239624023
    10. '(
' → logprob: -15.250036239624023

Token 532: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.01432074885815382
    2. '(l' → logprob: -5.1393208503723145
    3. '2' → logprob: -5.8893208503723145
    4. '(N' → logprob: -6.6393208503723145
    5. 'N' → logprob: -6.7643208503723145
    6. 'max' → logprob: -6.7643208503723145
    7. '1' → logprob: -7.6393208503723145
    8. '(' → logprob: -7.6393208503723145
    9. ' l' → logprob: -9.139320373535156
    10. '(max' → logprob: -9.139320373535156

Token 533: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008572849445044994
    2. ',
' → logprob: -5.133573055267334
    3. '               ' → logprob: -6.258573055267334
    4. ',l' → logprob: -7.883573055267334
    5. ')' → logprob: -9.383572578430176
    6. '           ' → logprob: -9.633572578430176
    7. ' ,' → logprob: -9.758572578430176
    8. '
' → logprob: -10.758572578430176
    9. '       ' → logprob: -10.758572578430176
    10. '+' → logprob: -11.008572578430176

Token 534: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -6.909333023941144e-05
    2. '           ' → logprob: -9.875068664550781
    3. '                
' → logprob: -12.375068664550781
    4. '                   ' → logprob: -12.500068664550781
    5. 'l' → logprob: -13.250068664550781
    6. ' l' → logprob: -13.375068664550781
    7. '              ' → logprob: -13.375068664550781
    8. '<|end|>' → logprob: -13.625068664550781
    9. '			' → logprob: -13.750068664550781
    10. '```' → logprob: -14.375068664550781

Token 535: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -0.005615769885480404
    2. ' l' → logprob: -5.505615711212158
    3. '           ' → logprob: -7.130615711212158
    4. '               ' → logprob: -7.255615711212158
    5. '   ' → logprob: -12.005616188049316
    6. '       ' → logprob: -12.255616188049316
    7. '
' → logprob: -12.255616188049316
    8. '                   ' → logprob: -12.755616188049316
    9. '	l' → logprob: -12.755616188049316
    10. '```' → logprob: -13.130616188049316

Token 536: ' -=' (ID: 12583)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.4523802697658539
    2. ' +=' → logprob: -1.0773802995681763
    3. ' -=' → logprob: -4.452380180358887
    4. '-=' → logprob: -4.827380180358887
    5. '=' → logprob: -5.952380180358887
    6. '           ' → logprob: -7.452380180358887
    7. '-' → logprob: -9.077380180358887
    8. '               ' → logprob: -9.452380180358887
    9. '   ' → logprob: -9.577380180358887
    10. '       ' → logprob: -9.577380180358887

Token 537: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.012517070397734642
    2. ' ' → logprob: -4.387516975402832
    3. '           ' → logprob: -13.012516975402832
    4. '0' → logprob: -13.137516975402832
    5. '   ' → logprob: -13.512516975402832
    6. '       ' → logprob: -14.262516975402832
    7. ' ' → logprob: -14.762516975402832
    8. '               ' → logprob: -15.512516975402832
    9. ')' → logprob: -15.637516975402832
    10. '
' → logprob: -16.13751792907715

Token 538: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.927930654550437e-05
    2. ' ' → logprob: -10.500029563903809
    3. '0' → logprob: -14.125029563903809
    4. '(' → logprob: -15.687529563903809
    5. '2' → logprob: -15.687529563903809
    6. ')' → logprob: -16.562528610229492
    7. '[' → logprob: -16.812528610229492
    8. '-' → logprob: -17.375028610229492
    9. '   ' → logprob: -17.437528610229492
    10. '
' → logprob: -17.687528610229492

Token 539: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01221576426178217
    2. '<|end|>' → logprob: -5.012215614318848
    3. 'else' → logprob: -5.887215614318848
    4. ' else' → logprob: -6.137215614318848
    5. '               ' → logprob: -8.762215614318848
    6. '
' → logprob: -9.262215614318848
    7. '       ' → logprob: -9.262215614318848
    8. ')' → logprob: -9.637215614318848
    9. '		' → logprob: -10.012215614318848
    10. '<|end|>' → logprob: -11.262215614318848

Token 540: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01568988896906376
    2. 'else' → logprob: -4.265689849853516
    3. ' else' → logprob: -6.515689849853516
    4. '		' → logprob: -10.515689849853516
    5. '<|end|>' → logprob: -12.015689849853516
    6. '               ' → logprob: -12.515689849853516
    7. '       ' → logprob: -12.890689849853516
    8. 'elif' → logprob: -13.765689849853516
    9. '\
' → logprob: -14.265689849853516
    10. '```' → logprob: -14.265689849853516

Token 541: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.12932685017585754
    2. '           ' → logprob: -2.129326820373535
    3. ' else' → logprob: -6.129326820373535
    4. '		' → logprob: -9.004326820373535
    5. '       ' → logprob: -9.629326820373535
    6. '	else' → logprob: -11.004326820373535
    7. '               ' → logprob: -12.379326820373535
    8. '
' → logprob: -13.379326820373535
    9. '   ' → logprob: -13.504326820373535
    10. '	       ' → logprob: -13.629326820373535

Token 542: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.001998819876462221
    2. '           ' → logprob: -6.6269989013671875
    3. ':
' → logprob: -8.126998901367188
    4. '			' → logprob: -8.751998901367188
    5. '   ' → logprob: -10.251998901367188
    6. '       ' → logprob: -10.376998901367188
    7. '		' → logprob: -11.001998901367188
    8. '                   ' → logprob: -11.001998901367188
    9. '<|end|>' → logprob: -11.126998901367188
    10. ':' → logprob: -11.251998901367188

Token 543: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0032507930882275105
    2. 'LR' → logprob: -6.128250598907471
    3. '           ' → logprob: -7.378250598907471
    4. ' LR' → logprob: -8.128251075744629
    5. '			' → logprob: -9.878251075744629
    6. '   ' → logprob: -10.503251075744629
    7. '                   ' → logprob: -10.628251075744629
    8. ' ' → logprob: -11.503251075744629
    9. '	           ' → logprob: -12.378251075744629
    10. '       ' → logprob: -12.628251075744629

Token 544: ' LR' (ID: 85167)
  Prédit: 'LR'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LR' (adapté à ' LR') → logprob: -0.0003625177196227014
    2. ' LR' → logprob: -8.000362396240234
    3. '               ' → logprob: -11.125362396240234
    4. '           ' → logprob: -12.000362396240234
    5. '                   ' → logprob: -12.625362396240234
    6. '       ' → logprob: -13.500362396240234
    7. '   ' → logprob: -13.750362396240234
    8. 'L' → logprob: -15.500362396240234
    9. ' ' → logprob: -16.000362396240234
    10. 'LB' → logprob: -17.875362396240234

Token 545: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.127333340875339e-06
    2. '[
' → logprob: -13.250003814697266
    3. '[' → logprob: -13.625003814697266
    4. '=' → logprob: -15.250003814697266
    5. '[I' → logprob: -15.500003814697266
    6. '=i' → logprob: -15.625003814697266
    7. 'i' → logprob: -16.000003814697266
    8. '```' → logprob: -16.125003814697266
    9. '(i' → logprob: -17.125003814697266
    10. '   ' → logprob: -17.500003814697266

Token 546: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.034734245389699936
    2. ']=' → logprob: -3.6597342491149902
    3. '=' → logprob: -4.78473424911499
    4. ']='' → logprob: -10.784733772277832
    5. ']+=' → logprob: -11.284733772277832
    6. ' =' → logprob: -12.284733772277832
    7. ' ]' → logprob: -13.159733772277832
    8. '[' → logprob: -14.284733772277832
    9. ')' → logprob: -15.159733772277832
    10. '   ' → logprob: -15.284733772277832

Token 547: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0013261953135952353
    2. ' =' → logprob: -6.626326084136963
    3. '='' → logprob: -16.501325607299805
    4. '=
' → logprob: -16.626325607299805
    5. ')' → logprob: -17.251325607299805
    6. ' ' → logprob: -18.001325607299805
    7. '[' → logprob: -18.126325607299805
    8. ']' → logprob: -18.126325607299805
    9. ']=' → logprob: -18.126325607299805
    10. '<|end|>' → logprob: -18.626325607299805

Token 548: ' '' (ID: 461)
  Prédit: ''L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''L' → logprob: -0.00850666780024767
    2. ''' → logprob: -4.883506774902344
    3. ''S' → logprob: -7.633506774902344
    4. ' '' → logprob: -9.133506774902344
    5. ''U' → logprob: -9.633506774902344
    6. 'L' → logprob: -9.633506774902344
    7. ''C' → logprob: -10.008506774902344
    8. ''A' → logprob: -10.383506774902344
    9. ''N' → logprob: -10.633506774902344
    10. ''T' → logprob: -11.133506774902344

Token 549: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.014295956119894981
    2. ''L' → logprob: -4.264296054840088
    3. ''' → logprob: -9.26429557800293
    4. ' L' → logprob: -10.51429557800293
    5. '"L' → logprob: -12.38929557800293
    6. 'B' → logprob: -13.76429557800293
    7. '`' → logprob: -13.76429557800293
    8. ' '' → logprob: -14.13929557800293
    9. '	L' → logprob: -14.51429557800293
    10. ''S' → logprob: -14.63929557800293

Token 550: ''
' (ID: 2207)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05119994282722473
    2. '<|end|>' → logprob: -3.8011999130249023
    3. ')
' → logprob: -4.551199913024902
    4. ')' → logprob: -4.676199913024902
    5. ''
' → logprob: -5.926199913024902
    6. ''' → logprob: -6.301199913024902
    7. '           ' → logprob: -6.676199913024902
    8. '')
' → logprob: -7.551199913024902
    9. '')' → logprob: -7.676199913024902
    10. '<|end|>' → logprob: -8.801199913024902

Token 551: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04681764170527458
    2. '<|end|>' → logprob: -3.1718175411224365
    3. '			' → logprob: -7.171817779541016
    4. '<|end|>' → logprob: -7.421817779541016
    5. '
' → logprob: -7.546817779541016
    6. ')' → logprob: -8.171817779541016
    7. '       ' → logprob: -8.296817779541016
    8. '           ' → logprob: -8.546817779541016
    9. '              ' → logprob: -8.796817779541016
    10. '[i' → logprob: -9.046817779541016

Token 552: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -0.0015325936255976558
    2. ' l' → logprob: -6.876532554626465
    3. '           ' → logprob: -7.876532554626465
    4. 'ans' → logprob: -9.751532554626465
    5. '               ' → logprob: -10.376532554626465
    6. '                   ' → logprob: -11.251532554626465
    7. '   ' → logprob: -12.001532554626465
    8. '       ' → logprob: -12.501532554626465
    9. '	l' → logprob: -13.126532554626465
    10. ' ans' → logprob: -13.751532554626465

Token 553: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.4742412865161896
    2. ' +=' → logprob: -0.9742412567138672
    3. '=' → logprob: -9.099241256713867
    4. '+' → logprob: -11.349241256713867
    5. '                ' → logprob: -11.474241256713867
    6. '               ' → logprob: -11.849241256713867
    7. '            ' → logprob: -11.849241256713867
    8. '           ' → logprob: -12.849241256713867
    9. '                   ' → logprob: -12.849241256713867
    10. ' =' → logprob: -13.099241256713867

Token 554: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00975739024579525
    2. ' ' → logprob: -4.6347575187683105
    3. '   ' → logprob: -14.634757041931152
    4. '               ' → logprob: -14.634757041931152
    5. '           ' → logprob: -15.384757041931152
    6. '                   ' → logprob: -15.759757041931152
    7. ' ' → logprob: -16.63475799560547
    8. '       ' → logprob: -17.50975799560547
    9. '```' → logprob: -17.63475799560547
    10. '                               ' → logprob: -18.13475799560547

Token 555: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '```' → logprob: -19.125003814697266
    4. '   ' → logprob: -20.000003814697266
    5. '<|end|>' → logprob: -21.187503814697266
    6. '１' → logprob: -21.187503814697266
    7. '۱' → logprob: -21.312503814697266
    8. '0' → logprob: -21.375003814697266
    9. '2' → logprob: -21.375003814697266
    10. '+' → logprob: -21.687503814697266

Token 556: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33233895897865295
    2. '<|end|>' → logprob: -1.3323389291763306
    3. '       ' → logprob: -4.457338809967041
    4. '	return' → logprob: -5.707338809967041
    5. '<|end|>' → logprob: -6.457338809967041
    6. ')' → logprob: -7.082338809967041
    7. '
' → logprob: -7.582338809967041
    8. ' return' → logprob: -7.957338809967041
    9. 'return' → logprob: -8.5823392868042
    10. '```' → logprob: -8.8323392868042

Token 557: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4469030499458313
    2. '<|end|>' → logprob: -1.0719029903411865
    3. ')' → logprob: -4.446903228759766
    4. '	return' → logprob: -6.571903228759766
    5. '<|end|>' → logprob: -6.696903228759766
    6. ' return' → logprob: -6.946903228759766
    7. 'return' → logprob: -6.946903228759766
    8. '
' → logprob: -7.946903228759766
    9. '       ' → logprob: -7.946903228759766
    10. '    
' → logprob: -8.196903228759766

Token 558: ' C' (ID: 363)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33886951208114624
    2. 'return' → logprob: -1.338869571685791
    3. ' return' → logprob: -3.713869571685791
    4. ')' → logprob: -7.713869571685791
    5. '	return' → logprob: -8.463869094848633
    6. 'for' → logprob: -9.838869094848633
    7. '```' → logprob: -9.838869094848633
    8. ' for' → logprob: -10.338869094848633
    9. '       ' → logprob: -10.463869094848633
    10. ',' → logprob: -11.463869094848633

Token 559: ' =' (ID: 314)
  Prédit: 'ounter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ounter' → logprob: -0.18835896253585815
    2. 'ount' → logprob: -2.438359022140503
    3. ' =' → logprob: -2.688359022140503
    4. '=' → logprob: -4.813358783721924
    5. '   ' → logprob: -5.563358783721924
    6. 'ont' → logprob: -6.438358783721924
    7. 'ounters' → logprob: -7.063358783721924
    8. 'OUNT' → logprob: -7.938358783721924
    9. 'urrent' → logprob: -8.688359260559082
    10. ' ' → logprob: -8.938359260559082

Token 560: ' Counter' (ID: 32251)
  Prédit: 'Counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Counter' → logprob: -0.24585877358913422
    2. '[' → logprob: -1.9958587884902954
    3. 'ounter' → logprob: -3.120858669281006
    4. '0' → logprob: -4.245858669281006
    5. '1' → logprob: -4.995858669281006
    6. ' Counter' → logprob: -5.120858669281006
    7. ' [' → logprob: -5.745858669281006
    8. 'default' → logprob: -6.120858669281006
    9. 'LR' → logprob: -6.995858669281006
    10. '[N' → logprob: -7.495858669281006

Token 561: '(L' (ID: 11075)
  Prédit: '(L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.000351670227246359
    2. '(' → logprob: -8.250351905822754
    3. '(S' → logprob: -10.375351905822754
    4. '()' → logprob: -10.750351905822754
    5. '(l' → logprob: -11.375351905822754
    6. '(C' → logprob: -11.875351905822754
    7. '({' → logprob: -12.375351905822754
    8. '(
' → logprob: -12.750351905822754
    9. '([' → logprob: -13.000351905822754
    10. '({'' → logprob: -13.250351905822754

Token 562: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.42638349533081055
    2. '(L' → logprob: -1.5513834953308105
    3. '(R' → logprob: -2.1763834953308105
    4. ')' → logprob: -4.4263834953308105
    5. 'LR' → logprob: -5.5513834953308105
    6. '(
' → logprob: -6.4263834953308105
    7. 'L' → logprob: -6.5513834953308105
    8. '(' → logprob: -7.0513834953308105
    9. '(S' → logprob: -7.4263834953308105
    10. '([' → logprob: -8.301383972167969

Token 563: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00014454191841650754
    2. ')
' → logprob: -8.875144958496094
    3. '.values' → logprob: -13.625144958496094
    4. ' )' → logprob: -13.750144958496094
    5. ')`' → logprob: -14.625144958496094
    6. '[' → logprob: -15.125144958496094
    7. ')
' → logprob: -15.250144958496094
    8. ',' → logprob: -15.250144958496094
    9. ')

' → logprob: -15.375144958496094
    10. '))' → logprob: -15.500144958496094

Token 564: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03080585226416588
    2. '<|end|>' → logprob: -3.780805826187134
    3. '
' → logprob: -5.155806064605713
    4. ')' → logprob: -6.905806064605713
    5. ',' → logprob: -8.405805587768555
    6. ' if' → logprob: -8.780805587768555
    7. '    
' → logprob: -8.905805587768555
    8. '<|end|>' → logprob: -10.155805587768555
    9. '(' → logprob: -10.655805587768555
    10. 'if' → logprob: -10.780805587768555

Token 565: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07362033426761627
    2. 'if' (adapté à ' if') → logprob: -3.323620319366455
    3. 'return' → logprob: -3.698620319366455
    4. ' if' → logprob: -4.823620319366455
    5. ' return' → logprob: -6.823620319366455
    6. '
' → logprob: -7.448620319366455
    7. 'assert' → logprob: -8.948620796203613
    8. 'for' → logprob: -9.323620796203613
    9. 'total' → logprob: -10.198620796203613
    10. 'def' → logprob: -10.448620796203613

Token 566: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.6733874082565308
    2. ' C' → logprob: -0.7983874082565308
    3. 'l' → logprob: -3.7983875274658203
    4. ' l' → logprob: -4.17338752746582
    5. '(C' → logprob: -7.92338752746582
    6. ' not' → logprob: -8.17338752746582
    7. ' min' → logprob: -8.17338752746582
    8. ' any' → logprob: -8.29838752746582
    9. 'L' → logprob: -8.54838752746582
    10. ' len' → logprob: -8.79838752746582

Token 567: '['' (ID: 1181)
  Prédit: '[''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.004823718685656786
    2. '[' → logprob: -5.379823684692383
    3. '[L' → logprob: -9.504823684692383
    4. '["' → logprob: -9.504823684692383
    5. ''' → logprob: -11.379823684692383
    6. '[
' → logprob: -11.504823684692383
    7. '[C' → logprob: -12.254823684692383
    8. ' ['' → logprob: -12.254823684692383
    9. 'L' → logprob: -12.754823684692383
    10. '.get' → logprob: -12.879823684692383

Token 568: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.08368047326803207
    2. 'R' → logprob: -2.9586803913116455
    3. ''L' → logprob: -4.208680629730225
    4. ''' → logprob: -4.583680629730225
    5. 'B' → logprob: -6.208680629730225
    6. '']' → logprob: -7.458680629730225
    7. ']' → logprob: -8.708680152893066
    8. '')' → logprob: -9.833680152893066
    9. ' L' → logprob: -10.208680152893066
    10. 'l' → logprob: -10.208680152893066

Token 569: '']' (ID: 1089)
  Prédit: '']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '']' → logprob: -0.02523680403828621
    2. ']' → logprob: -3.7752368450164795
    3. '>' → logprob: -7.2752366065979
    4. '']==' → logprob: -7.9002366065979
    5. '<' → logprob: -8.400237083435059
    6. '==' → logprob: -8.400237083435059
    7. '"]' → logprob: -9.150237083435059
    8. ']>' → logprob: -9.525237083435059
    9. ''' → logprob: -10.025237083435059
    10. ']==' → logprob: -10.275237083435059

Token 570: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.37121573090553284
    2. '!=' → logprob: -1.6212157011032104
    3. '<' → logprob: -2.7462158203125
    4. ' <' → logprob: -3.9962158203125
    5. '>' → logprob: -4.4962158203125
    6. '%' → logprob: -4.7462158203125
    7. ' >' → logprob: -5.9962158203125
    8. '*' → logprob: -6.1212158203125
    9. ' ==' → logprob: -6.6212158203125
    10. ' %' → logprob: -6.7462158203125

Token 571: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.10871178656816483
    2. 'N' → logprob: -2.3587117195129395
    3. ' C' → logprob: -5.1087117195129395
    4. 'l' → logprob: -6.7337117195129395
    5. ' N' → logprob: -6.8587117195129395
    6. 'L' → logprob: -9.858712196350098
    7. ' ' → logprob: -10.233712196350098
    8. ' l' → logprob: -10.733712196350098
    9. '   ' → logprob: -10.733712196350098
    10. 'M' → logprob: -11.233712196350098

Token 572: '['' (ID: 1181)
  Prédit: '[''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -2.176947600673884e-05
    2. '[' → logprob: -10.875021934509277
    3. '[
' → logprob: -14.125021934509277
    4. ' ['' → logprob: -14.500021934509277
    5. '["' → logprob: -14.500021934509277
    6. '{'' → logprob: -14.875021934509277
    7. '('' → logprob: -15.625021934509277
    8. ''' → logprob: -16.00002098083496
    9. '[['' → logprob: -16.50002098083496
    10. '
' → logprob: -16.75002098083496

Token 573: 'R' (ID: 49)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -4.394135612528771e-05
    2. 'R' → logprob: -10.250043869018555
    3. ' '' → logprob: -12.750043869018555
    4. ''S' → logprob: -13.250043869018555
    5. '']' → logprob: -14.000043869018555
    6. ' ' → logprob: -14.375043869018555
    7. '   ' → logprob: -14.625043869018555
    8. '`' → logprob: -15.000043869018555
    9. ']' → logprob: -15.375043869018555
    10. ''Re' → logprob: -15.750043869018555

Token 574: '']:
' (ID: 44766)
  Prédit: '']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '']:
' → logprob: -0.1724233627319336
    2. '']:' → logprob: -2.2974233627319336
    3. ']:
' → logprob: -3.2974233627319336
    4. '']' → logprob: -4.672423362731934
    5. ']:' → logprob: -4.672423362731934
    6. ']' → logprob: -6.172423362731934
    7. '"]:' → logprob: -10.047423362731934
    8. '"]:
' → logprob: -10.172423362731934
    9. ':' → logprob: -12.547423362731934
    10. ''' → logprob: -13.172423362731934

Token 575: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0666651576757431
    2. ':' → logprob: -2.8166651725769043
    3. ':
' → logprob: -5.816665172576904
    4. ' or' → logprob: -6.941665172576904
    5. ':return' → logprob: -7.691665172576904
    6. '   ' → logprob: -9.316664695739746
    7. 'return' → logprob: -10.191664695739746
    8. ',' → logprob: -10.441664695739746
    9. '	' → logprob: -10.566664695739746
    10. ' return' → logprob: -10.691664695739746

Token 576: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.41620397567749023
    2. 'return' (adapté à ' return') → logprob: -1.5412039756774902
    3. '
' → logprob: -3.0412039756774902
    4. '       ' → logprob: -3.0412039756774902
    5. '   ' → logprob: -3.5412039756774902
    6. '	return' → logprob: -6.54120397567749
    7. ' 
' → logprob: -8.791204452514648
    8. '        
' → logprob: -9.541204452514648
    9. '    
' → logprob: -9.791204452514648
    10. '    ' → logprob: -10.916204452514648

Token 577: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.018150178715586662
    2. ' ' → logprob: -4.018150329589844
    3. '(' → logprob: -15.518150329589844
    4. ' ' → logprob: -16.893150329589844
    5. ' 
' → logprob: -17.143150329589844
    6. '
' → logprob: -17.268150329589844
    7. '1' → logprob: -19.518150329589844
    8. ' (' → logprob: -19.955650329589844
    9. '  ' → logprob: -20.018150329589844
    10. '	' → logprob: -20.268150329589844

Token 578: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '(' → logprob: -18.875
    4. '۰' → logprob: -18.875
    5. 'print' → logprob: -18.9375
    6. '00' → logprob: -19.0
    7. '000' → logprob: -19.0
    8. '```' → logprob: -19.3125
    9. '   ' → logprob: -19.375
    10. '`' → logprob: -19.8125

Token 579: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.35311174392700195
    2. '   ' → logprob: -1.228111743927002
    3. '    
' → logprob: -5.603111743927002
    4. '<|end|>' → logprob: -7.478111743927002
    5. '  
' → logprob: -9.353111267089844
    6. ' 
' → logprob: -9.978111267089844
    7. '	
' → logprob: -9.978111267089844
    8. '\n' → logprob: -10.353111267089844
    9. '	return' → logprob: -10.353111267089844
    10. ',
' → logprob: -10.353111267089844

Token 580: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003124479204416275
    2. '
' → logprob: -6.128124713897705
    3. '    
' → logprob: -7.253124713897705
    4. '<|end|>' → logprob: -9.128124237060547
    5. '```' → logprob: -9.878124237060547
    6. '	return' → logprob: -10.878124237060547
    7. 'return' → logprob: -11.253124237060547
    8. ' return' → logprob: -11.753124237060547
    9. '  
' → logprob: -12.003124237060547
    10. '        
' → logprob: -12.628124237060547

Token 581: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.043829455971717834
    2. 'return' → logprob: -3.1688294410705566
    3. ' return' → logprob: -7.168829441070557
    4. '	return' → logprob: -11.168829917907715
    5. '
' → logprob: -11.293829917907715
    6. 'for' (adapté à ' for') → logprob: -11.418829917907715
    7. '```' → logprob: -11.543829917907715
    8. 'if' → logprob: -11.918829917907715
    9. '    
' → logprob: -13.793829917907715
    10. 'eturn' → logprob: -14.043829917907715

Token 582: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.12662586569786072
    2. 'i' → logprob: -2.3766257762908936
    3. ' c' → logprob: -5.251626014709473
    4. '_' → logprob: -5.376626014709473
    5. ' x' → logprob: -5.376626014709473
    6. ' _' → logprob: -5.876626014709473
    7. 'x' → logprob: -6.126626014709473
    8. 'c' → logprob: -6.751626014709473
    9. 'v' → logprob: -7.126626014709473
    10. '_i' → logprob: -7.626626014709473

Token 583: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.003699604654684663
    2. 'in' → logprob: -5.628699779510498
    3. ' ' → logprob: -9.62869930267334
    4. ',' → logprob: -11.25369930267334
    5. 'range' → logprob: -11.62869930267334
    6. ' range' → logprob: -12.12869930267334
    7. '   ' → logprob: -13.25369930267334
    8. '	in' → logprob: -13.75369930267334
    9. ' ,' → logprob: -14.12869930267334
    10. ' i' → logprob: -14.12869930267334

Token 584: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.048594411462545395
    2. ' range' → logprob: -3.0485944747924805
    3. '   ' → logprob: -13.04859447479248
    4. '
' → logprob: -13.29859447479248
    5. ' ' → logprob: -13.67359447479248
    6. '	range' → logprob: -14.42359447479248
    7. '(range' → logprob: -14.67359447479248
    8. '[' → logprob: -15.17359447479248
    9. '  ' → logprob: -15.54859447479248
    10. ')' → logprob: -16.048593521118164

Token 585: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0033020011615008116
    2. '(len' → logprob: -6.378302097320557
    3. '2' → logprob: -6.628302097320557
    4. '(N' → logprob: -8.253301620483398
    5. '(
' → logprob: -12.378301620483398
    6. '((' → logprob: -12.378301620483398
    7. 'len' → logprob: -12.503301620483398
    8. '   ' → logprob: -13.628301620483398
    9. '(n' → logprob: -14.128301620483398
    10. ' (' → logprob: -14.503301620483398

Token 586: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.007463584654033184
    2. 'N' → logprob: -5.757463455200195
    3. ' ' → logprob: -6.257463455200195
    4. 'len' → logprob: -6.632463455200195
    5. '(' → logprob: -7.257463455200195
    6. '   ' → logprob: -8.632463455200195
    7. '1' → logprob: -9.757463455200195
    8. ' N' → logprob: -10.132463455200195
    9. '(N' → logprob: -11.132463455200195
    10. ' len' → logprob: -11.882463455200195

Token 587: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2893415689468384
    2. '(' → logprob: -1.5393415689468384
    3. '   ' → logprob: -4.164341449737549
    4. '(len' → logprob: -5.039341449737549
    5. ' (' → logprob: -5.039341449737549
    6. ' ,' → logprob: -6.039341449737549
    7. ',len' → logprob: -6.414341449737549
    8. '2' → logprob: -6.539341449737549
    9. '(N' → logprob: -6.789341449737549
    10. 'len' → logprob: -6.914341449737549

Token 588: ' N' (ID: 478)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.019232675433158875
    2. 'N' → logprob: -4.144232749938965
    3. ' ' → logprob: -6.519232749938965
    4. 'len' → logprob: -6.519232749938965
    5. ' N' → logprob: -9.019232749938965
    6. '   ' → logprob: -9.394232749938965
    7. '(' → logprob: -11.144232749938965
    8. ' len' → logprob: -11.644232749938965
    9. 'n' → logprob: -12.394232749938965
    10. '
' → logprob: -12.394232749938965

Token 589: ' +' (ID: 659)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.029979227110743523
    2. ' *' → logprob: -3.5299792289733887
    3. '):' → logprob: -9.02997875213623
    4. '   ' → logprob: -10.02997875213623
    5. '):
' → logprob: -10.27997875213623
    6. '+' → logprob: -12.02997875213623
    7. '2' → logprob: -12.02997875213623
    8. '
' → logprob: -12.40497875213623
    9. ')' → logprob: -12.90497875213623
    10. ' ' → logprob: -12.90497875213623

Token 590: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0049236007034778595
    2. '2' → logprob: -5.5049238204956055
    3. ' ' → logprob: -7.8799238204956055
    4. '   ' → logprob: -8.129923820495605
    5. 'N' → logprob: -9.129923820495605
    6. '(' → logprob: -10.004923820495605
    7. ' N' → logprob: -12.254923820495605
    8. '*' → logprob: -12.754923820495605
    9. ')' → logprob: -13.129923820495605
    10. '(N' → logprob: -13.504923820495605

Token 591: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004348413785919547
    2. '2' → logprob: -8.000434875488281
    3. 'N' → logprob: -9.500434875488281
    4. ' ' → logprob: -11.000434875488281
    5. '   ' → logprob: -12.625434875488281
    6. '*' → logprob: -12.875434875488281
    7. ')' → logprob: -14.500434875488281
    8. '(' → logprob: -14.625434875488281
    9. '+' → logprob: -15.375434875488281
    10. ' N' → logprob: -15.375434875488281

Token 592: '):
' (ID: 1883)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12452125549316406
    2. ':
' → logprob: -2.374521255493164
    3. '):
' → logprob: -4.124521255493164
    4. '):' → logprob: -5.249521255493164
    5. '   ' → logprob: -6.624521255493164
    6. '       ' → logprob: -7.499521255493164
    7. '():
' → logprob: -8.374521255493164
    8. ',' → logprob: -8.374521255493164
    9. ' :' → logprob: -9.499521255493164
    10. '():' → logprob: -9.749521255493164

Token 593: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001056626089848578
    2. '<|end|>' → logprob: -7.876056671142578
    3. ' if' → logprob: -8.251056671142578
    4. '   ' → logprob: -8.876056671142578
    5. '```' → logprob: -9.126056671142578
    6. 'if' → logprob: -9.626056671142578
    7. '	' → logprob: -10.126056671142578
    8. '	   ' → logprob: -11.876056671142578
    9. '<|end|>' → logprob: -12.126056671142578
    10. ',' → logprob: -12.376056671142578

Token 594: ' ans' (ID: 3345)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.26973944902420044
    2. 'ans' (adapté à ' ans') → logprob: -1.7697393894195557
    3. '       ' → logprob: -3.0197393894195557
    4. ' if' → logprob: -4.394739627838135
    5. '   ' → logprob: -5.644739627838135
    6. ' ans' → logprob: -7.019739627838135
    7. '           ' → logprob: -9.019739151000977
    8. '	ans' → logprob: -9.394739151000977
    9. '```' → logprob: -10.144739151000977
    10. '
' → logprob: -10.394739151000977

Token 595: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.048600319772958755
    2. ' =' → logprob: -3.048600435256958
    3. '*=' → logprob: -11.923600196838379
    4. '=M' → logprob: -12.173600196838379
    5. ' *=' → logprob: -13.923600196838379
    6. '   ' → logprob: -16.048601150512695
    7. ',' → logprob: -17.298601150512695
    8. ' ' → logprob: -17.798601150512695
    9. '.=' → logprob: -17.798601150512695
    10. '=m' → logprob: -17.923601150512695

Token 596: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.2519313097000122
    2. ' M' → logprob: -1.5019313097000122
    3. '   ' → logprob: -13.501931190490723
    4. '	M' → logprob: -14.626931190490723
    5. 'ans' → logprob: -16.00193214416504
    6. '=M' → logprob: -16.00193214416504
    7. '(M' → logprob: -16.25193214416504
    8. ' М' → logprob: -17.62693214416504
    9. '>M' → logprob: -17.75193214416504
    10. ' ' → logprob: -17.87693214416504

Token 597: '.mul' (ID: 106202)
  Prédit: '.mul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.mul' → logprob: -1.0280383548888494e-06
    2. 'mul' → logprob: -14.625000953674316
    3. '.m' → logprob: -15.000000953674316
    4. '.pow' → logprob: -16.000001907348633
    5. '.add' → logprob: -17.500001907348633
    6. '.' → logprob: -18.125001907348633
    7. '.multiply' → logprob: -18.250001907348633
    8. '```' → logprob: -18.250001907348633
    9. ' .' → logprob: -18.375001907348633
    10. '_mul' → logprob: -18.875001907348633

Token 598: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -9.674858301877975e-05
    2. 'ans' → logprob: -9.250096321105957
    3. '(' → logprob: -15.250096321105957
    4. '(
' → logprob: -15.500096321105957
    5. '	ans' → logprob: -16.250097274780273
    6. '(answer' → logprob: -17.875097274780273
    7. ' ans' → logprob: -19.000097274780273
    8. '(i' → logprob: -19.500097274780273
    9. 'Ans' → logprob: -19.625097274780273
    10. '
' → logprob: -19.875097274780273

Token 599: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013046692125499249
    2. ',i' → logprob: -4.888046741485596
    3. '(ans' → logprob: -5.638046741485596
    4. '(i' → logprob: -6.388046741485596
    5. '(' → logprob: -8.888046264648438
    6. 'ans' → logprob: -11.763046264648438
    7. ' ,' → logprob: -11.888046264648438
    8. ',
' → logprob: -12.388046264648438
    9. ',(' → logprob: -12.638046264648438
    10. ',int' → logprob: -12.638046264648438

Token 600: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -8.518582762917504e-05
    2. '2' → logprob: -9.87508487701416
    3. ' i' → logprob: -10.37508487701416
    4. '
' → logprob: -14.87508487701416
    5. '(i' → logprob: -15.00008487701416
    6. 'pow' → logprob: -15.37508487701416
    7. 'C' → logprob: -15.50008487701416
    8. '   ' → logprob: -15.50008487701416
    9. '(' → logprob: -15.62508487701416
    10. '10' → logprob: -15.75008487701416

Token 601: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011188744247192517
    2. ')
' → logprob: -9.12511157989502
    3. '   ' → logprob: -13.50011157989502
    4. ' )' → logprob: -13.87511157989502
    5. ')return' → logprob: -15.50011157989502
    6. ')

' → logprob: -16.250112533569336
    7. ')`' → logprob: -16.375112533569336
    8. '*' → logprob: -16.500112533569336
    9. ')
' → logprob: -17.000112533569336
    10. ' ' → logprob: -17.250112533569336

Token 602: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006536077708005905
    2. '<|end|>' → logprob: -5.88153600692749
    3. ' return' → logprob: -6.50653600692749
    4. '	return' → logprob: -7.00653600692749
    5. '
' → logprob: -7.38153600692749
    6. '    
' → logprob: -8.506536483764648
    7. 'return' → logprob: -8.881536483764648
    8. ',' → logprob: -9.381536483764648
    9. ' 
' → logprob: -9.631536483764648
    10. ')' → logprob: -10.006536483764648

Token 603: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3691020905971527
    2. 'return' (adapté à ' return') → logprob: -1.369102120399475
    3. ' return' → logprob: -2.9941020011901855
    4. '	return' → logprob: -5.4941020011901855
    5. ':return' → logprob: -10.869102478027344
    6. '<|end|>' → logprob: -11.119102478027344
    7. '```' → logprob: -11.369102478027344
    8. '
' → logprob: -11.619102478027344
    9. ' ' → logprob: -11.994102478027344
    10. '    
' → logprob: -11.994102478027344

Token 604: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.029760440811514854
    2. ' ans' → logprob: -3.5297603607177734
    3. '(ans' → logprob: -11.529760360717773
    4. '	ans' → logprob: -16.154760360717773
    5. 'answer' → logprob: -18.404760360717773
    6. '
' → logprob: -19.904760360717773
    7. '_ans' → logprob: -19.904760360717773
    8. 'anst' → logprob: -20.154760360717773
    9. 'int' → logprob: -21.279760360717773
    10. 'ANS' → logprob: -21.904760360717773

Token 605: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 606: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 607: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.0014861776726320386
    2. ' ' → logprob: -6.751486301422119
    3. ' run' → logprob: -9.376485824584961
    4. '_' → logprob: -10.126485824584961
    5. ' _' → logprob: -10.126485824584961
    6. ' solve' → logprob: -10.251485824584961
    7. ' read' → logprob: -10.376485824584961
    8. '_main' → logprob: -10.626485824584961
    9. ' __' → logprob: -12.001485824584961
    10. ' ' → logprob: -12.251485824584961

Token 608: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0008064138819463551
    2. '():
' → logprob: -7.1258063316345215
    3. '():
' → logprob: -13.50080680847168
    4. ' ():' → logprob: -14.75080680847168
    5. '()' → logprob: -15.50080680847168
    6. '():

' → logprob: -17.12580680847168
    7. '(' → logprob: -17.50080680847168
    8. '()>' → logprob: -18.00080680847168
    9. '_' → logprob: -19.50080680847168
    10. '().' → logprob: -20.00080680847168

Token 609: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0017828793497756124
    2. 'n' → logprob: -7.7517828941345215
    3. 'N' → logprob: -8.126782417297363
    4. '    
' → logprob: -8.376782417297363
    5. ' N' → logprob: -8.501782417297363
    6. '```' → logprob: -8.501782417297363
    7. ' n' → logprob: -9.376782417297363
    8. '
' → logprob: -9.626782417297363
    9. 'import' → logprob: -9.751782417297363
    10. '(N' → logprob: -10.001782417297363

Token 610: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -0.002253506798297167
    2. ' N' → logprob: -6.502253532409668
    3. '   ' → logprob: -7.377253532409668
    4. 'n' → logprob: -9.002253532409668
    5. '	N' → logprob: -13.377253532409668
    6. ' n' → logprob: -15.002253532409668
    7. ' ' → logprob: -15.377253532409668
    8. '
' → logprob: -16.00225257873535
    9. '```' → logprob: -16.12725257873535
    10. '    
' → logprob: -16.50225257873535

Token 611: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3071383535861969
    2. '=' → logprob: -1.8071383237838745
    3. ' =' → logprob: -2.307138442993164
    4. '=int' → logprob: -7.307138442993164
    5. ',N' → logprob: -9.932138442993164
    6. ',int' → logprob: -11.432138442993164
    7. ' ,' → logprob: -11.557138442993164
    8. '=N' → logprob: -11.557138442993164
    9. ',n' → logprob: -11.682138442993164
    10. '=input' → logprob: -12.057138442993164

Token 612: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.10428541153669357
    2. ' read' → logprob: -2.354285478591919
    3. 'int' → logprob: -5.60428524017334
    4. ' int' → logprob: -7.85428524017334
    5. '	read' → logprob: -15.22928524017334
    6. '  ' → logprob: -16.354286193847656
    7. ' ' → logprob: -16.979286193847656
    8. '   ' → logprob: -17.354286193847656
    9. '(read' → logprob: -17.854286193847656
    10. '_read' → logprob: -19.479286193847656

Token 613: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -2.7848862373502925e-05
    2. 'int' → logprob: -10.500027656555176
    3. 'Int' → logprob: -16.500028610229492
    4. '(int' → logprob: -16.500028610229492
    5. '_INT' → logprob: -17.125028610229492
    6. '_' → logprob: -17.375028610229492
    7. ' int' → logprob: -18.000028610229492
    8. '(' → logprob: -18.500028610229492
    9. '_uint' → logprob: -18.500028610229492
    10. '_line' → logprob: -18.625028610229492

Token 614: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5786604881286621
    2. '()
' → logprob: -0.8286604881286621
    3. '
' → logprob: -6.828660488128662
    4. '   ' → logprob: -7.078660488128662
    5. '()\' → logprob: -7.828660488128662
    6. '<|end|>' → logprob: -8.82866096496582
    7. '()
' → logprob: -10.32866096496582
    8. '();' → logprob: -10.57866096496582
    9. '    
' → logprob: -10.57866096496582
    10. ')' → logprob: -10.95366096496582

Token 615: '   ' (ID: 271)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.1698729544878006
    2. ' S' → logprob: -2.169872999191284
    3. '   ' → logprob: -3.169872999191284
    4. '	S' → logprob: -10.669873237609863
    5. ' ' → logprob: -13.294873237609863
    6. ',S' → logprob: -14.419873237609863
    7. 's' → logprob: -14.919873237609863
    8. '  ' → logprob: -15.169873237609863
    9. '```' → logprob: -15.544873237609863
    10. '_S' → logprob: -15.794873237609863

Token 616: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' (adapté à ' S') → logprob: -2.45848218582978e-06
    2. ' S' → logprob: -13.37500286102295
    3. '   ' → logprob: -14.00000286102295
    4. '	S' → logprob: -20.125001907348633
    5. '
' → logprob: -20.250001907348633
    6. '    
' → logprob: -20.250001907348633
    7. 's' → logprob: -20.625001907348633
    8. '```' → logprob: -20.875001907348633
    9. '  ' → logprob: -22.000001907348633
    10. '>S' → logprob: -22.375001907348633

Token 617: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01416350994259119
    2. ' =' → logprob: -4.264163494110107
    3. '   ' → logprob: -19.764163970947266
    4. '=

' → logprob: -19.764163970947266
    5. '=input' → logprob: -19.889163970947266
    6. '＝' → logprob: -20.014163970947266
    7. '=
' → logprob: -20.764163970947266
    8. ' ' → logprob: -20.889163970947266
    9. '.=' → logprob: -20.889163970947266
    10. ',' → logprob: -20.889163970947266

Token 618: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.0002116462419508025
    2. ' read' → logprob: -8.500211715698242
    3. 'input' → logprob: -11.750211715698242
    4. 'list' → logprob: -15.375211715698242
    5. ' input' → logprob: -17.250211715698242
    6. '	read' → logprob: -19.000211715698242
    7. '(read' → logprob: -19.125211715698242
    8. '.read' → logprob: -21.250211715698242
    9. '   ' → logprob: -21.750211715698242
    10. 'str' → logprob: -22.250211715698242

Token 619: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -5.080963092041202e-06
    2. '_line' → logprob: -12.500004768371582
    3. 'str' → logprob: -14.500004768371582
    4. '().' → logprob: -14.500004768371582
    5. 'line' → logprob: -15.625004768371582
    6. '_int' → logprob: -16.0000057220459
    7. '()' → logprob: -16.7500057220459
    8. 'Str' → logprob: -17.2500057220459
    9. '_' → logprob: -17.3750057220459
    10. '_STR' → logprob: -18.3750057220459

Token 620: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.024148892611265182
    2. '()
' → logprob: -3.774148941040039
    3. '   ' → logprob: -7.024148941040039
    4. '();' → logprob: -12.774148941040039
    5. '()
' → logprob: -13.149148941040039
    6. '()\' → logprob: -13.274148941040039
    7. '(' → logprob: -14.024148941040039
    8. ' ' → logprob: -14.149148941040039
    9. '())' → logprob: -14.149148941040039
    10. '()

' → logprob: -14.524148941040039

Token 621: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003742833388969302
    2. 'result' → logprob: -6.628742694854736
    3. 'print' → logprob: -6.753742694854736
    4. '
' → logprob: -7.253742694854736
    5. '```' → logprob: -7.878742694854736
    6. '    
' → logprob: -9.253743171691895
    7. ' result' → logprob: -10.878743171691895
    8. '<|end|>' → logprob: -11.503743171691895
    9. 'ans' → logprob: -12.128743171691895
    10. '``' → logprob: -12.128743171691895

Token 622: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00041065402911044657
    2. 'result' → logprob: -8.000411033630371
    3. '   ' → logprob: -10.000411033630371
    4. 'res' → logprob: -11.500411033630371
    5. ' print' → logprob: -11.500411033630371
    6. '
' → logprob: -11.875411033630371
    7. '```' → logprob: -14.000411033630371
    8. 'ans' → logprob: -14.250411033630371
    9. '    
' → logprob: -14.875411033630371
    10. 'answer' → logprob: -15.250411033630371

Token 623: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -2.176947600673884e-05
    2. '(' → logprob: -10.750021934509277
    3. '(
' → logprob: -15.250021934509277
    4. '((' → logprob: -19.00002098083496
    5. '(

' → logprob: -20.12502098083496
    6. '(f' → logprob: -20.50002098083496
    7. 'sl' → logprob: -20.50002098083496
    8. '(int' → logprob: -20.62502098083496
    9. 's' → logprob: -20.87502098083496
    10. '(sl' → logprob: -21.00002098083496

Token 624: 'lv' (ID: 33940)
  Prédit: 'lv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lv' → logprob: -0.00012475410767365247
    2. 'l' → logprob: -9.00012493133545
    3. 'vl' → logprob: -13.62512493133545
    4. 'lvl' → logprob: -16.750123977661133
    5. 'sl' → logprob: -17.500123977661133
    6. ' lv' → logprob: -17.500123977661133
    7. 'rv' → logprob: -18.375123977661133
    8. 'v' → logprob: -19.000123977661133
    9. '_lv' → logprob: -19.625123977661133
    10. 'nv' → logprob: -20.000123977661133

Token 625: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0001290454383706674
    2. '(' → logprob: -9.000128746032715
    3. ')' → logprob: -12.625128746032715
    4. ')(' → logprob: -14.000128746032715
    5. ' (' → logprob: -14.250128746032715
    6. '(
' → logprob: -14.500128746032715
    7. '(S' → logprob: -15.875128746032715
    8. 'N' → logprob: -16.62512969970703
    9. '((' → logprob: -17.37512969970703
    10. '
' → logprob: -17.75012969970703

Token 626: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020795092859771103
    2. ',S' → logprob: -8.500207901000977
    3. ' ,' → logprob: -12.875207901000977
    4. ',
' → logprob: -13.250207901000977
    5. '(' → logprob: -16.750207901000977
    6. '(S' → logprob: -17.875207901000977
    7. ',s' → logprob: -17.875207901000977
    8. '   ' → logprob: -18.875207901000977
    9. 'S' → logprob: -19.500207901000977
    10. '
' → logprob: -19.500207901000977

Token 627: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.0019286326132714748
    2. ' S' → logprob: -6.251928806304932
    3. '(S' → logprob: -18.001928329467773
    4. ')' → logprob: -20.251928329467773
    5. '   ' → logprob: -20.876928329467773
    6. '	S' → logprob: -20.876928329467773
    7. '<S' → logprob: -21.126928329467773
    8. ',S' → logprob: -21.626928329467773
    9. ' ' → logprob: -22.001928329467773
    10. '_S' → logprob: -22.126928329467773

Token 628: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.006717863027006388
    2. ')' → logprob: -5.006717681884766
    3. '()))' → logprob: -13.631717681884766
    4. '))
' → logprob: -14.006717681884766
    5. '())' → logprob: -15.256717681884766
    6. ')))' → logprob: -16.756717681884766
    7. ')
' → logprob: -17.131717681884766
    8. '()' → logprob: -17.381717681884766
    9. ' ))' → logprob: -17.756717681884766
    10. '])' → logprob: -18.256717681884766

Token 629: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 630: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.005949302110821009
    2. '__' → logprob: -5.1309494972229
    3. ' ' → logprob: -11.130949020385742
    4. '_' → logprob: -12.505949020385742
    5. ' _' → logprob: -13.880949020385742
    6. ' ' → logprob: -14.380949020385742
    7. '_name' → logprob: -15.505949020385742
    8. ' ___' → logprob: -15.880949020385742
    9. 'name' → logprob: -16.505949020385742
    10. ' name' → logprob: -16.630949020385742

Token 631: 'name' (ID: 897)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5600638389587402
    2. '__' → logprob: -1.4350638389587402
    3. ' __' → logprob: -1.6850638389587402
    4. '==' → logprob: -5.43506383895874
    5. '_name' → logprob: -8.560064315795898
    6. '.__' → logprob: -8.935064315795898
    7. ' ===' → logprob: -9.435064315795898
    8. 'name' → logprob: -9.560064315795898
    9. '=="' → logprob: -9.685064315795898
    10. ' =="' → logprob: -10.060064315795898

Token 632: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -3.7697225252486533e-06
    2. '==' → logprob: -13.125003814697266
    3. '__.__' → logprob: -14.000003814697266
    4. '__
' → logprob: -14.625003814697266
    5. ' ==' → logprob: -16.000003814697266
    6. '_' → logprob: -16.125003814697266
    7. '____' → logprob: -16.500003814697266
    8. '___' → logprob: -17.125003814697266
    9. '__.' → logprob: -17.500003814697266
    10. '__('' → logprob: -18.250003814697266

Token 633: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6105337738990784
    2. '==' → logprob: -1.1105337142944336
    3. '__' → logprob: -2.1105337142944336
    4. '=="' → logprob: -5.110533714294434
    5. '=='' → logprob: -8.860533714294434
    6. '_' → logprob: -9.610533714294434
    7. '==
' → logprob: -9.610533714294434
    8. '=' → logprob: -10.735533714294434
    9. '___' → logprob: -11.485533714294434
    10. '"' → logprob: -11.985533714294434

Token 634: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.03808131441473961
    2. ''' → logprob: -3.288081407546997
    3. ' "__' → logprob: -10.788081169128418
    4. '__' → logprob: -10.913081169128418
    5. 'main' → logprob: -15.163081169128418
    6. ' '__' → logprob: -15.163081169128418
    7. '"user' → logprob: -16.413082122802734
    8. '"name' → logprob: -16.663082122802734
    9. '   ' → logprob: -16.788082122802734
    10. '"'' → logprob: -17.413082122802734

Token 635: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.00036168331280350685
    2. '__' → logprob: -8.000361442565918
    3. 'name' → logprob: -10.625361442565918
    4. ''' → logprob: -13.750361442565918
    5. '_main' → logprob: -14.875361442565918
    6. '"' → logprob: -15.000361442565918
    7. ' main' → logprob: -16.500362396240234
    8. ''name' → logprob: -17.375362396240234
    9. '(main' → logprob: -18.500362396240234
    10. '	main' → logprob: -18.875362396240234

Token 636: '__':
' (ID: 39314)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.46297141909599304
    2. '__':
' → logprob: -1.4629714488983154
    3. ':' → logprob: -2.2129714488983154
    4. '__:' → logprob: -3.9629714488983154
    5. '__":
' → logprob: -5.587971210479736
    6. '_' → logprob: -5.712971210479736
    7. '():
' → logprob: -6.337971210479736
    8. ':
' → logprob: -6.587971210479736
    9. '':' → logprob: -8.712971687316895
    10. '():' → logprob: -9.462971687316895

Token 637: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26972895860671997
    2. '	main' → logprob: -2.019728899002075
    3. 'main' → logprob: -2.269728899002075
    4. ' main' → logprob: -7.894729137420654
    5. '   ' → logprob: -12.394728660583496
    6. '_main' → logprob: -13.269728660583496
    7. ' ' → logprob: -13.269728660583496
    8. '	Main' → logprob: -14.394728660583496
    9. '```' → logprob: -14.769728660583496
    10. '(main' → logprob: -15.394728660583496

Token 638: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -17.75
    3. '	main' → logprob: -20.0
    4. '   ' → logprob: -21.375
    5. '_main' → logprob: -23.0
    6. '(main' → logprob: -25.0
    7. 'import' → logprob: -25.0
    8. '.main' → logprob: -25.375
    9. '```' → logprob: -26.75
    10. 'Main' → logprob: -28.0

Token 639: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 637
Tokens correctement prédits (1ère position, stricte): 261
Tokens correctement prédits (1ère position, avec adaptation): 285
Tokens correctement prédits (top 10): 569
Précision stricte (1ère position): 40.97%
Précision adaptée (1ère position): 44.74%
Précision (top 10): 89.32%
================================================================================
