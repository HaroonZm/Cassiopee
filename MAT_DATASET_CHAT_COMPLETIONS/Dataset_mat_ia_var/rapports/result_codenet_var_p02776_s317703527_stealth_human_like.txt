================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:26:39
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import bisect
import os
import sys

# Let's open local input if env stuff is set, not usually like this but whatever 
if os.getenv("LOCAL"):
    sys.stdin = open("_in.txt", "r")

sys.setrecursionlimit(10**9)
INF = float("inf")
IINF = 10**18
MOD = 10**9 + 7
# MOD = 998244353  # people sometimes use the other one

# Read inputs - I wish Python had scanf...
N, M = map(int, sys.stdin.buffer.readline().split())
AB = []
for _ in range(N):
    AB.append(list(map(int, sys.stdin.buffer.readline().split())))

LR = []
for _ in range(M):
    LR.append(list(map(int, sys.stdin.buffer.readline().split())))

AB.sort()  # Sort by first one (I guess that's A)

nums = [(0, 0)] + AB + [(INF, 0)]
A = [xy[0] for xy in nums]
B = [xy[1] for xy in nums]

# Build some kind of graph or something, not sure what they're really doing but here we go
sz = len(nums)
graph = [[] for _ in range(sz)]

# for each LR we mess with the graph, it's a bit ugly
for i in range(M):
    l, r = LR[i]
    v = bisect.bisect_left(A, l) - 1
    u = bisect.bisect_right(A, r) - 1
    graph[v].append( (u, i+1) )
    graph[u].append( (v, i+1) )

parity = [0]*sz
# Seems parity depends on B sequence flipping 0<->1, a bit fishy but let's just do it
for i in range(sz-1):
    if B[i]==0 and B[i+1]==1:
        parity[i] = 1
    if B[i]==1 and B[i+1]==0:
        parity[i] = 1

# Find "trees" - components?
seen = [0]*sz
trees = []
for root in range(sz):
    if seen[root]:
        continue
    if not graph[root]:
        continue
    edges = []
    seen[root] = 1
    stack = [root]
    while stack:
        v = stack.pop()
        for u, eid in graph[v]:
            if seen[u]:
                continue
            seen[u] = 1
            stack.append(u)
            edges.append((v, u, eid))
    if not edges and parity[root]:
        # Single vertex but needs to flip? Impossible
        print(-1)
        sys.exit(0)
    trees.append(edges)

# Rebuild graph with new edges, plus track degrees
graph = [[] for _ in range(sz)]
deg = [0]*sz
for edgegroup in trees:
    for v, u, eid in edgegroup:
        graph[v].append( (u, eid) )
        graph[u].append( (v, eid) )
        deg[v] += 1
        deg[u] += 1

ans = []
marked = [0]*sz
leaves = []
for v in range(sz):
    if deg[v]==1:
        leaves.append(v)

while leaves:
    v = leaves.pop()
    if deg[v]==0:
        continue
    if marked[v]:
        continue
    marked[v]=1
    deg[v]=0
    # Go through connections
    for u, eid in graph[v]:
        if marked[u]:
            continue
        # try to push parity inwards (greedy probably)
        if parity[v] and parity[u]:
            parity[v]=0
            parity[u]=0
            ans.append(eid)
        elif parity[v]==1 and parity[u]==0:
            parity[v]=0
            parity[u]=1
            ans.append(eid)
        deg[u] -= 1
        if deg[u]==1:
            leaves.append(u)

if 1 in parity:
    # oops still left
    print(-1)
else:
    print(len(ans))
    print(*sorted(ans))
# it's probably ok, but pretty unreadable tbh
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' bis' (ID: 7204)
  → Token d'amorce (pas de prédiction)

Token 2: 'ect' (ID: 534)
  → Token d'amorce (pas de prédiction)

Token 3: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00021271906734909862
    2. '(' → logprob: -8.875212669372559
    3. '.b' → logprob: -10.750212669372559
    4. '.\' → logprob: -11.125212669372559
    5. '\n' → logprob: -12.000212669372559
    6. '\' → logprob: -12.625212669372559
    7. '[' → logprob: -12.875212669372559
    8. '.`' → logprob: -13.125212669372559
    9. '

' → logprob: -13.250212669372559
    10. '.
' → logprob: -13.250212669372559

Token 4: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.01686328835785389
    2. '(' → logprob: -4.1418633460998535
    3. '\n' → logprob: -8.516862869262695
    4. '\' → logprob: -8.641862869262695
    5. '```' → logprob: -10.016862869262695
    6. '

' → logprob: -10.141862869262695
    7. ',' → logprob: -10.266862869262695
    8. '' → logprob: -10.266862869262695
    9. '.
' → logprob: -10.516862869262695
    10. '
' → logprob: -10.516862869262695

Token 5: ' os' (ID: 1994)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.16773360967636108
    2. ' math' → logprob: -2.042733669281006
    3. ' heap' → logprob: -4.417733669281006
    4. ' collections' → logprob: -4.792733669281006
    5. 'sys' → logprob: -6.417733669281006
    6. ' itertools' → logprob: -6.667733669281006
    7. ' os' → logprob: -7.542733669281006
    8. 'collections' → logprob: -8.167733192443848
    9. 'heap' → logprob: -8.417733192443848
    10. 'math' → logprob: -8.542733192443848

Token 6: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5663332343101501
    2. '\n' → logprob: -1.316333293914795
    3. '.' → logprob: -2.816333293914795
    4. 'import' → logprob: -3.191333293914795
    5. '<|end|>' → logprob: -3.566333293914795
    6. '

' → logprob: -3.941333293914795
    7. '\' → logprob: -5.941333293914795
    8. '```' → logprob: -6.066333293914795
    9. 'newline' → logprob: -6.316333293914795
    10. '' → logprob: -6.566333293914795

Token 7: 'import' (ID: 561)
  Prédit: 'import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.5420424938201904
    2. '.' → logprob: -1.7920424938201904
    3. '\n' → logprob: -2.1670424938201904
    4. '
' → logprob: -2.6670424938201904
    5. '<|end|>' → logprob: -4.1670427322387695
    6. '```' → logprob: -4.2920427322387695
    7. '

' → logprob: -4.6670427322387695
    8. 'os' → logprob: -4.9170427322387695
    9. '\' → logprob: -5.1670427322387695
    10. ',' → logprob: -5.7920427322387695

Token 8: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.12708014249801636
    2. 'sys' → logprob: -2.127080202102661
    3. ' re' → logprob: -9.377079963684082
    4. 're' → logprob: -10.377079963684082
    5. ' math' → logprob: -10.877079963684082
    6. ' shutil' → logprob: -12.252079963684082
    7. ' pathlib' → logprob: -12.752079963684082
    8. 'math' → logprob: -12.752079963684082
    9. ' io' → logprob: -13.627079963684082
    10. ' time' → logprob: -14.252079963684082

Token 9: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.9285786151885986
    2. '
' → logprob: -1.4285786151885986
    3. 'import' → logprob: -1.5535786151885986
    4. '<|end|>' → logprob: -2.8035786151885986
    5. '

' → logprob: -2.9285786151885986
    6. '```' → logprob: -4.0535783767700195
    7. '\' → logprob: -4.3035783767700195
    8. '#' → logprob: -6.5535783767700195
    9. '<|end|>' → logprob: -6.5535783767700195
    10. '' → logprob: -6.8035783767700195

Token 10: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.678091824054718
    2. 'import' → logprob: -1.4280917644500732
    3. '\n' → logprob: -2.8030917644500732
    4. 'from' → logprob: -2.9280917644500732
    5. '```' → logprob: -2.9280917644500732
    6. '\' → logprob: -3.8030917644500732
    7. '
' → logprob: -4.053092002868652
    8. '#' → logprob: -4.053092002868652
    9. '

' → logprob: -4.428092002868652
    10. 'class' → logprob: -4.928092002868652

Token 11: ' Let's' (ID: 41021)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5956067442893982
    2. ' ' → logprob: -1.720606803894043
    3. ' def' → logprob: -2.345606803894043
    4. '#' → logprob: -2.595606803894043
    5. ' #' → logprob: -3.470606803894043
    6. '_' → logprob: -3.720606803894043
    7. 'import' → logprob: -4.845606803894043
    8. '\' → logprob: -4.970606803894043
    9. 'class' → logprob: -5.345606803894043
    10. ' class' → logprob: -5.345606803894043

Token 12: ' open' (ID: 2494)
  Prédit: ' define'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' define' → logprob: -0.18738754093647003
    2. 'def' → logprob: -2.562387466430664
    3. ' write' → logprob: -4.062387466430664
    4. 'define' → logprob: -4.062387466430664
    5. ' continue' → logprob: -4.937387466430664
    6. ' create' → logprob: -4.937387466430664
    7. ' use' → logprob: -5.187387466430664
    8. ' def' → logprob: -5.187387466430664
    9. ' try' → logprob: -5.312387466430664
    10. '_' → logprob: -5.812387466430664

Token 13: ' local' (ID: 2698)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0016103164525702596
    2. ' (' → logprob: -6.876610279083252
    3. ' a' → logprob: -8.75161075592041
    4. '(
' → logprob: -9.00161075592041
    5. ' the' → logprob: -9.37661075592041
    6. '('' → logprob: -9.62661075592041
    7. 'the' → logprob: -10.25161075592041
    8. 'file' → logprob: -10.50161075592041
    9. ' ' → logprob: -10.75161075592041
    10. 'a' → logprob: -10.87661075592041

Token 14: ' input' (ID: 3422)
  Prédit: 'file'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'file' → logprob: -0.7818331122398376
    2. ' file' → logprob: -1.4068331718444824
    3. ' files' → logprob: -2.0318331718444824
    4. '_file' → logprob: -2.1568331718444824
    5. 'files' → logprob: -3.9068331718444824
    6. '_' → logprob: -4.406833171844482
    7. '_files' → logprob: -5.281833171844482
    8. '_f' → logprob: -5.906833171844482
    9. ' ' → logprob: -6.281833171844482
    10. ' f' → logprob: -6.656833171844482

Token 15: ' if' (ID: 538)
  Prédit: 'file'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'file' → logprob: -0.6181074976921082
    2. 'f' → logprob: -0.8681074976921082
    3. '()' → logprob: -4.243107318878174
    4. '_file' → logprob: -4.493107318878174
    5. '(' → logprob: -4.993107318878174
    6. '_' → logprob: -5.743107318878174
    7. '_f' → logprob: -6.868107318878174
    8. 'with' → logprob: -7.118107318878174
    9. 'data' → logprob: -7.243107318878174
    10. '```' → logprob: -7.243107318878174

Token 16: ' env' (ID: 9744)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.43967676162719727
    2. ' __' → logprob: -1.1896767616271973
    3. ''' → logprob: -3.6896767616271973
    4. '__' → logprob: -4.439676761627197
    5. ''s' → logprob: -5.564676761627197
    6. 'os' → logprob: -5.689676761627197
    7. ' len' → logprob: -6.314676761627197
    8. ' '__' → logprob: -6.314676761627197
    9. ' sys' → logprob: -6.439676761627197
    10. ' '' → logprob: -7.689676761627197

Token 17: ' stuff' (ID: 9350)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4397587180137634
    2. '=' → logprob: -2.814758777618408
    3. '```' → logprob: -2.814758777618408
    4. ' ==' → logprob: -3.314758777618408
    5. 'IRONMENT' → logprob: -3.314758777618408
    6. 'iron' → logprob: -3.814758777618408
    7. ''' → logprob: -3.814758777618408
    8. '_var' → logprob: -3.939758777618408
    9. ' =' → logprob: -4.314758777618408
    10. 'var' → logprob: -4.314758777618408

Token 18: ' is' (ID: 382)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4087126851081848
    2. ':' → logprob: -2.03371262550354
    3. '```' → logprob: -2.53371262550354
    4. ' if' → logprob: -3.15871262550354
    5. ' =' → logprob: -3.90871262550354
    6. '_' → logprob: -4.158712863922119
    7. '=' → logprob: -4.533712863922119
    8. '[' → logprob: -5.033712863922119
    9. '``' → logprob: -5.408712863922119
    10. ' and' → logprob: -5.408712863922119

Token 19: ' set' (ID: 920)
  Prédit: ' set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' set' → logprob: -0.6377151012420654
    2. ' not' → logprob: -2.1377151012420654
    3. ' True' → logprob: -2.2627151012420654
    4. ' present' → logprob: -2.6377151012420654
    5. ''' → logprob: -3.0127151012420654
    6. ''s' → logprob: -3.5127151012420654
    7. ' '' → logprob: -3.7627151012420654
    8. ' available' → logprob: -4.5127153396606445
    9. ''t' → logprob: -4.5127153396606445
    10. ' detected' → logprob: -4.7627153396606445

Token 20: ',' (ID: 11)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.303871214389801
    2. '_
' → logprob: -2.4288711547851562
    3. 'if' → logprob: -2.9288711547851562
    4. '```' → logprob: -3.3038711547851562
    5. '
' → logprob: -3.8038711547851562
    6. '_

' → logprob: -4.553871154785156
    7. 'import' → logprob: -4.553871154785156
    8. ':' → logprob: -4.928871154785156
    9. '\n' → logprob: -5.178871154785156
    10. '``' → logprob: -5.428871154785156

Token 21: ' not' (ID: 625)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.41010046005249023
    2. '#' → logprob: -2.5351004600524902
    3. ' if' → logprob: -2.6601004600524902
    4. ' os' → logprob: -2.7851004600524902
    5. 'os' → logprob: -4.03510046005249
    6. 'try' → logprob: -4.03510046005249
    7. ' 
' → logprob: -4.78510046005249
    8. '_' → logprob: -4.91010046005249
    9. ' #' → logprob: -4.91010046005249
    10. ' ' → logprob: -5.16010046005249

Token 22: ' usually' (ID: 6971)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.8035596609115601
    2. ' sys' → logprob: -1.92855966091156
    3. 'os' → logprob: -2.6785597801208496
    4. ' in' → logprob: -3.0535597801208496
    5. 'in' → logprob: -3.1785597801208496
    6. ' interactive' → logprob: -3.8035597801208496
    7. 'sys' → logprob: -3.9285597801208496
    8. ' DEBUG' → logprob: -4.05355978012085
    9. ' online' → logprob: -4.17855978012085
    10. 'DEBUG' → logprob: -4.30355978012085

Token 23: ' like' (ID: 1299)
  Prédit: ' used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' used' → logprob: -1.032650113105774
    2. '```' → logprob: -1.907650113105774
    3. ' but' → logprob: -2.4076499938964844
    4. ' os' → logprob: -2.5326499938964844
    5. ' done' → logprob: -2.6576499938964844
    6. 'os' → logprob: -2.7826499938964844
    7. ' needed' → logprob: -2.9076499938964844
    8. 'used' → logprob: -3.7826499938964844
    9. 'import' → logprob: -3.7826499938964844
    10. 'done' → logprob: -4.407649993896484

Token 24: ' this' (ID: 495)
  Prédit: ' this'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' this' → logprob: -0.21868018805980682
    2. 'this' → logprob: -1.9686801433563232
    3. 'ly' → logprob: -3.7186801433563232
    4. '```' → logprob: -4.718680381774902
    5. 'import' → logprob: -4.968680381774902
    6. 'os' → logprob: -5.843680381774902
    7. 'if' → logprob: -5.843680381774902
    8. 'def' → logprob: -6.593680381774902
    9. '_this' → logprob: -6.718680381774902
    10. ':' → logprob: -6.843680381774902

Token 25: ' but' (ID: 889)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9459550976753235
    2. '_' → logprob: -1.9459550380706787
    3. '```' → logprob: -2.0709550380706787
    4. ':' → logprob: -2.4459550380706787
    5. '
' → logprob: -2.6959550380706787
    6. 'import' → logprob: -2.8209550380706787
    7. ',' → logprob: -3.0709550380706787
    8. 'input' → logprob: -4.445955276489258
    9. '

' → logprob: -4.570955276489258
    10. ' if' → logprob: -5.070955276489258

Token 26: ' whatever' (ID: 13485)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.014627759344875813
    2. 'os' → logprob: -4.389627933502197
    3. '```' → logprob: -7.389627933502197
    4. ' if' → logprob: -7.764627933502197
    5. ' sys' → logprob: -9.139627456665039
    6. ' in' → logprob: -9.264627456665039
    7. 'if' → logprob: -9.389627456665039
    8. ' True' → logprob: -9.389627456665039
    9. ' a' → logprob: -9.389627456665039
    10. '(os' → logprob: -9.514627456665039

Token 27: ' 
' (ID: 793)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1313513070344925
    2. '_' → logprob: -3.2563512325286865
    3. 'try' → logprob: -3.3813512325286865
    4. 'import' → logprob: -4.131351470947266
    5. 'input' → logprob: -4.756351470947266
    6. '\n' → logprob: -5.381351470947266
    7. '```' → logprob: -5.381351470947266
    8. '_
' → logprob: -5.881351470947266
    9. '_input' → logprob: -6.131351470947266
    10. '
' → logprob: -6.131351470947266

Token 28: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1310153752565384
    2. '_' → logprob: -2.7560153007507324
    3. 'input' → logprob: -4.506015300750732
    4. ' if' → logprob: -4.631015300750732
    5. 'try' → logprob: -4.756015300750732
    6. '_input' → logprob: -5.256015300750732
    7. '```' → logprob: -5.381015300750732
    8. ':' → logprob: -5.756015300750732
    9. 'import' → logprob: -6.131015300750732
    10. 'in' → logprob: -6.131015300750732

Token 29: ' os' (ID: 1994)
  Prédit: ' os'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.10669776052236557
    2. ''' → logprob: -3.3566977977752686
    3. ' '' → logprob: -3.4816977977752686
    4. ' "' → logprob: -3.9816977977752686
    5. '"' → logprob: -4.3566975593566895
    6. '"os' → logprob: -6.3566975593566895
    7. 'os' → logprob: -6.9816975593566895
    8. ' ' → logprob: -7.7316975593566895
    9. ''s' → logprob: -7.8566975593566895
    10. ' __' → logprob: -8.981698036193848

Token 30: '.getenv' (ID: 105382)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.8007357716560364
    2. '.environ' → logprob: -1.3007357120513916
    3. '.getenv' → logprob: -1.3007357120513916
    4. ' .' → logprob: -5.300735950469971
    5. '.path' → logprob: -6.925735950469971
    6. '.name' → logprob: -8.425735473632812
    7. '.env' → logprob: -9.800735473632812
    8. '```' → logprob: -9.925735473632812
    9. '.getcwd' → logprob: -11.175735473632812
    10. '.listdir' → logprob: -12.175735473632812

Token 31: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5433158874511719
    2. '('' → logprob: -0.9183158874511719
    3. '("' → logprob: -3.918315887451172
    4. '("("' → logprob: -9.918315887451172
    5. ' (' → logprob: -10.543315887451172
    6. '('_' → logprob: -11.418315887451172
    7. '(`' → logprob: -12.043315887451172
    8. '(
' → logprob: -12.543315887451172
    9. '("_' → logprob: -12.918315887451172
    10. '(\'' → logprob: -12.918315887451172

Token 32: 'LOCAL' (ID: 90515)
  Prédit: 'LOCAL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LOCAL' → logprob: -0.20001572370529175
    2. '"' → logprob: -2.2000157833099365
    3. ''' → logprob: -3.5750157833099365
    4. 'DEBUG' → logprob: -4.200015544891357
    5. 'USER' → logprob: -4.700015544891357
    6. 'INPUT' → logprob: -5.200015544891357
    7. 'LOC' → logprob: -5.950015544891357
    8. 'K' → logprob: -6.075015544891357
    9. 'PY' → logprob: -7.450015544891357
    10. 'USE' → logprob: -7.575015544891357

Token 33: '"):
' (ID: 33645)
  Prédit: '"):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"):' → logprob: -1.2387592792510986
    2. 'INPUT' → logprob: -1.7387592792510986
    3. '_INPUT' → logprob: -1.9887592792510986
    4. '"):
' → logprob: -2.1137592792510986
    5. '"):
' → logprob: -2.9887592792510986
    6. '")' → logprob: -3.4887592792510986
    7. '_RUN' → logprob: -3.7387592792510986
    8. '_TEST' → logprob: -3.8637592792510986
    9. '_ENV' → logprob: -3.8637592792510986
    10. '_IO' → logprob: -3.9887592792510986

Token 34: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10261303186416626
    2. ' :' → logprob: -2.4776129722595215
    3. '   ' → logprob: -5.8526129722595215
    4. '():' → logprob: -5.9776129722595215
    5. ':
' → logprob: -6.2276129722595215
    6. ' os' → logprob: -6.6026129722595215
    7. ' input' → logprob: -6.9776129722595215
    8. ' :
' → logprob: -7.4776129722595215
    9. 'input' → logprob: -7.6026129722595215
    10. '_input' → logprob: -7.9776129722595215

Token 35: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.02244126982986927
    2. 'sys' (adapté à ' sys') → logprob: -4.397441387176514
    3. '   ' → logprob: -6.022441387176514
    4. ' input' → logprob: -6.272441387176514
    5. ' os' → logprob: -6.397441387176514
    6. ' with' → logprob: -7.147441387176514
    7. ' __' → logprob: -7.272441387176514
    8. ' f' → logprob: -8.147440910339355
    9. ' import' → logprob: -8.147440910339355
    10. '__' → logprob: -8.272440910339355

Token 36: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00339551386423409
    2. '.stdout' → logprob: -5.7533955574035645
    3. '.' → logprob: -8.628395080566406
    4. '.stderr' → logprob: -11.128395080566406
    5. ' .' → logprob: -11.378395080566406
    6. '.argv' → logprob: -11.753395080566406
    7. '.path' → logprob: -13.628395080566406
    8. '.exit' → logprob: -13.628395080566406
    9. '   ' → logprob: -14.628395080566406
    10. '.setdefault' → logprob: -14.878395080566406

Token 37: ' =' (ID: 314)
  Prédit: '=open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=open' → logprob: -0.06010918319225311
    2. '=' → logprob: -3.3101091384887695
    3. ' =' → logprob: -4.0601091384887695
    4. '.readline' → logprob: -5.5601091384887695
    5. '.open' → logprob: -8.56010913848877
    6. '.' → logprob: -8.93510913848877
    7. '.flush' → logprob: -9.43510913848877
    8. '.read' → logprob: -9.43510913848877
    9. '=sys' → logprob: -9.81010913848877
    10. '.seek' → logprob: -9.81010913848877

Token 38: ' open' (ID: 2494)
  Prédit: 'open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'open' → logprob: -0.47407880425453186
    2. ' open' → logprob: -0.9740787744522095
    3. '	open' → logprob: -13.349079132080078
    4. '(open' → logprob: -16.349079132080078
    5. '=open' → logprob: -16.349079132080078
    6. ' ' → logprob: -18.474079132080078
    7. '```' → logprob: -18.724079132080078
    8. '   ' → logprob: -18.849079132080078
    9. 'op' → logprob: -19.474079132080078
    10. 'io' → logprob: -19.974079132080078

Token 39: '("_' (ID: 35483)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.46730542182922363
    2. '('' → logprob: -1.0923054218292236
    3. '("' → logprob: -3.3423054218292236
    4. '("("' → logprob: -6.8423051834106445
    5. '(os' → logprob: -6.9673051834106445
    6. ' (' → logprob: -8.967305183410645
    7. ' ("' → logprob: -9.092305183410645
    8. ' ('' → logprob: -9.717305183410645
    9. '('./' → logprob: -10.342305183410645
    10. '("/' → logprob: -10.342305183410645

Token 40: 'in' (ID: 258)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.031980711966753006
    2. 'local' → logprob: -3.5319807529449463
    3. 'in' → logprob: -7.031980514526367
    4. 'inputs' → logprob: -8.156980514526367
    5. '_input' → logprob: -8.281980514526367
    6. '.input' → logprob: -9.156980514526367
    7. 'stdin' → logprob: -9.156980514526367
    8. '_local' → logprob: -9.281980514526367
    9. 'LOCAL' → logprob: -9.406980514526367
    10. 'tests' → logprob: -9.406980514526367

Token 41: '.txt' (ID: 7186)
  Prédit: 'put'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'put' → logprob: -0.004012511111795902
    2. 'puts' → logprob: -5.754012584686279
    3. '.txt' → logprob: -7.379012584686279
    4. 'p' → logprob: -8.629012107849121
    5. '.' → logprob: -10.754012107849121
    6. '_put' → logprob: -12.754012107849121
    7. '")' → logprob: -13.254012107849121
    8. '.py' → logprob: -13.379012107849121
    9. '.put' → logprob: -14.254012107849121
    10. 'ut' → logprob: -14.504012107849121

Token 42: '",' (ID: 672)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.09698983281850815
    2. '",' → logprob: -2.471989870071411
    3. '","' → logprob: -5.096989631652832
    4. '"' → logprob: -6.346989631652832
    5. ')' → logprob: -8.971989631652832
    6. '",'' → logprob: -11.846989631652832
    7. ',"' → logprob: -12.721989631652832
    8. '')' → logprob: -12.721989631652832
    9. '")
' → logprob: -13.221989631652832
    10. ',' → logprob: -13.471989631652832

Token 43: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.09869411587715149
    2. ' "' → logprob: -3.348694086074829
    3. ''' → logprob: -3.598694086074829
    4. ''r' → logprob: -3.598694086074829
    5. ' '' → logprob: -5.973694324493408
    6. ''t' → logprob: -7.348694324493408
    7. ''m' → logprob: -8.47369384765625
    8. 'r' → logprob: -8.97369384765625
    9. '"os' → logprob: -9.34869384765625
    10. '"text' → logprob: -9.34869384765625

Token 44: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00026300468016415834
    2. 'rt' → logprob: -8.250263214111328
    3. 'read' → logprob: -14.125263214111328
    4. 't' → logprob: -15.250263214111328
    5. 'rb' → logprob: -15.250263214111328
    6. 'w' → logprob: -15.500263214111328
    7. '```' → logprob: -16.250263214111328
    8. ' r' → logprob: -17.000263214111328
    9. '")' → logprob: -17.625263214111328
    10. ')' → logprob: -17.750263214111328

Token 45: '")

' (ID: 10822)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.3870159089565277
    2. ')' → logprob: -1.13701593875885
    3. '')' → logprob: -9.012016296386719
    4. ')")' → logprob: -11.262016296386719
    5. '"' → logprob: -12.762016296386719
    6. ' )' → logprob: -13.262016296386719
    7. '`)' → logprob: -13.512016296386719
    8. '")
' → logprob: -13.762016296386719
    9. ')
' → logprob: -14.012016296386719
    10. '```' → logprob: -15.012016296386719

Token 46: 'sys' (ID: 17324)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -1.1147350072860718
    2. '#' → logprob: -1.7397350072860718
    3. 'input' → logprob: -2.3647351264953613
    4. 'n' → logprob: -2.4897351264953613
    5. '
' → logprob: -2.6147351264953613
    6. 'for' → logprob: -2.6147351264953613
    7. '\n' → logprob: -2.7397351264953613
    8. 'def' → logprob: -2.9897351264953613
    9. 'import' → logprob: -3.8647351264953613
    10. 'print' → logprob: -4.989735126495361

Token 47: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6511884927749634
    2. '.stdin' → logprob: -0.9011884927749634
    3. '.stdout' → logprob: -2.901188373565674
    4. '.exit' → logprob: -4.151188373565674
    5. '.argv' → logprob: -7.026188373565674
    6. '.stderr' → logprob: -7.776188373565674
    7. '.readline' → logprob: -8.151188850402832
    8. '.std' → logprob: -10.026188850402832
    9. '.read' → logprob: -10.401188850402832
    10. '.write' → logprob: -10.526188850402832

Token 48: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.020264605060219765
    2. 'stdin' → logprob: -4.770264625549316
    3. 'set' → logprob: -4.895264625549316
    4. 'limit' → logprob: -7.145264625549316
    5. '_rec' → logprob: -7.645264625549316
    6. 'exit' → logprob: -8.020264625549316
    7. '_' → logprob: -8.020264625549316
    8. 'st' → logprob: -8.145264625549316
    9. 'stdout' → logprob: -9.020264625549316
    10. 'stderr' → logprob: -9.020264625549316

Token 49: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0006750239408574998
    2. 'urs' → logprob: -8.000675201416016
    3. 'ur' → logprob: -8.125675201416016
    4. 'ursive' → logprob: -10.750675201416016
    5. 'limit' → logprob: -11.500675201416016
    6. 'ursor' → logprob: -12.125675201416016
    7. 'urf' → logprob: -12.375675201416016
    8. 'urst' → logprob: -14.000675201416016
    9. 'utf' → logprob: -14.625675201416016
    10. 'urse' → logprob: -15.250675201416016

Token 50: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -2.141186450899113e-05
    2. '_limit' → logprob: -10.875020980834961
    3. 'lim' → logprob: -13.250020980834961
    4. ' limit' → logprob: -15.250020980834961
    5. 'depth' → logprob: -15.500020980834961
    6. '.limit' → logprob: -16.62502098083496
    7. '(limit' → logprob: -16.87502098083496
    8. 'Limit' → logprob: -17.37502098083496
    9. '-limit' → logprob: -17.75002098083496
    10. '-' → logprob: -17.87502098083496

Token 51: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.45848218582978e-06
    2. '(
' → logprob: -13.25000286102295
    3. '(

' → logprob: -15.25000286102295
    4. ' (' → logprob: -15.50000286102295
    5. '((' → logprob: -15.62500286102295
    6. '()' → logprob: -17.000001907348633
    7. '(int' → logprob: -17.375001907348633
    8. '100' → logprob: -17.625001907348633
    9. '(
' → logprob: -17.750001907348633
    10. '(sys' → logprob: -18.375001907348633

Token 52: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.018850453197956085
    2. '100' → logprob: -4.018850326538086
    3. '200' → logprob: -8.393850326538086
    4. '300' → logprob: -8.518850326538086
    5. ' ' → logprob: -9.018850326538086
    6. '500' → logprob: -10.018850326538086
    7. '400' → logprob: -10.018850326538086
    8. '250' → logprob: -10.643850326538086
    9. '1' → logprob: -11.393850326538086
    10. 'int' → logprob: -11.893850326538086

Token 53: '**' (ID: 410)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.5229752063751221
    2. '**' → logprob: -1.897975206375122
    3. '7' → logprob: -2.022975206375122
    4. '000' → logprob: -2.397975206375122
    5. '00' → logprob: -3.897975206375122
    6. '5' → logprob: -4.397974967956543
    7. '0' → logprob: -7.022974967956543
    8. '8' → logprob: -7.397974967956543
    9. '4' → logprob: -10.147974967956543
    10. '07' → logprob: -10.772974967956543

Token 54: '9' (ID: 24)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.12769053876399994
    2. '9' → logprob: -2.127690553665161
    3. '8' → logprob: -7.252690315246582
    4. '6' → logprob: -9.877690315246582
    5. '**' → logprob: -13.627690315246582
    6. '```' → logprob: -14.252690315246582
    7. '

' → logprob: -15.377690315246582
    8. '+' → logprob: -16.0026912689209
    9. '``' → logprob: -16.1276912689209
    10. '  ' → logprob: -16.5026912689209

Token 55: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.200166469876422e-06
    2. ' )' → logprob: -12.375004768371582
    3. ')
' → logprob: -14.250004768371582
    4. '))' → logprob: -16.1250057220459
    5. ')

' → logprob: -16.5000057220459
    6. ')
' → logprob: -17.6250057220459
    7. ' ' → logprob: -18.1250057220459
    8. ')`' → logprob: -18.3750057220459
    9. '),' → logprob: -18.5000057220459
    10. '6' → logprob: -19.0000057220459

Token 56: 'INF' (ID: 64358)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4046618938446045
    2. '

' → logprob: -1.6546618938446045
    3. 'def' → logprob: -2.1546618938446045
    4. 'class' → logprob: -4.529662132263184
    5. '\n' → logprob: -6.029662132263184
    6. '```' → logprob: -6.029662132263184
    7. '#' → logprob: -6.279662132263184
    8. '\' → logprob: -6.404662132263184
    9. '
' → logprob: -6.779662132263184
    10. '<|end|>' → logprob: -6.779662132263184

Token 57: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.033681318163871765
    2. '=' → logprob: -3.4086813926696777
    3. '=int' → logprob: -10.90868091583252
    4. ',' → logprob: -12.40868091583252
    5. ' ' → logprob: -12.78368091583252
    6. ' =)' → logprob: -13.03368091583252
    7. '_' → logprob: -13.28368091583252
    8. ')' → logprob: -13.28368091583252
    9. ' ' → logprob: -14.03368091583252
    10. '    ' → logprob: -14.15868091583252

Token 58: ' float' (ID: 4428)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.2854861915111542
    2. ' ' → logprob: -1.5354862213134766
    3. 'float' → logprob: -3.9104862213134766
    4. ' float' → logprob: -4.410486221313477
    5. '1' → logprob: -7.785486221313477
    6. 'int' → logprob: -8.035486221313477
    7. ' int' → logprob: -10.160486221313477
    8. '100' → logprob: -10.660486221313477
    9. '2' → logprob: -11.785486221313477
    10. '9' → logprob: -12.660486221313477

Token 59: '("' (ID: 568)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0005919939721934497
    2. ''' → logprob: -8.375592231750488
    3. '("' → logprob: -8.500592231750488
    4. '(' → logprob: -8.875592231750488
    5. ''in' → logprob: -12.500592231750488
    6. '"' → logprob: -12.625592231750488
    7. '('-' → logprob: -12.625592231750488
    8. ''s' → logprob: -13.625592231750488
    9. '('+' → logprob: -13.625592231750488
    10. '32' → logprob: -13.875592231750488

Token 60: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.1588001847267151
    2. ''in' → logprob: -2.0338001251220703
    3. ''' → logprob: -4.53380012512207
    4. '"' → logprob: -6.53380012512207
    5. ''ex' → logprob: -7.15880012512207
    6. '32' → logprob: -7.40880012512207
    7. ''i' → logprob: -7.53380012512207
    8. ''ins' → logprob: -8.15880012512207
    9. ''x' → logprob: -8.28380012512207
    10. '64' → logprob: -8.40880012512207

Token 61: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.04017319157719612
    2. ')' → logprob: -3.290173292160034
    3. ')")' → logprob: -6.165173053741455
    4. ' )' → logprob: -11.790173530578613
    5. '")
' → logprob: -12.165173530578613
    6. ' ")' → logprob: -12.790173530578613
    7. '}")' → logprob: -12.790173530578613
    8. '"' → logprob: -12.915173530578613
    9. ')"' → logprob: -13.415173530578613
    10. '")
' → logprob: -13.790173530578613

Token 62: 'I' (ID: 40)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7185707092285156
    2. 'def' → logprob: -0.8435707092285156
    3. 'n' → logprob: -2.9685707092285156
    4. '

' → logprob: -3.9685707092285156
    5. '
' → logprob: -5.718570709228516
    6. 'class' → logprob: -5.968570709228516
    7. '#' → logprob: -6.093570709228516
    8. '```' → logprob: -6.843570709228516
    9. '\n' → logprob: -7.218570709228516
    10. '' → logprob: -7.843570709228516

Token 63: 'INF' (ID: 64358)
  Prédit: 'NF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'NF' → logprob: -0.0703909620642662
    2. 'N' → logprob: -2.6953909397125244
    3. 'NR' → logprob: -8.820390701293945
    4. 'NFL' → logprob: -8.945390701293945
    5. 'NV' → logprob: -9.570390701293945
    6. 'NT' → logprob: -10.570390701293945
    7. 'NP' → logprob: -10.695390701293945
    8. 'nf' → logprob: -10.820390701293945
    9. 'NFT' → logprob: -11.445390701293945
    10. ' NF' → logprob: -11.570390701293945

Token 64: ' =' (ID: 314)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.18130441009998322
    2. 'F' → logprob: -2.306304454803467
    3. 'f' → logprob: -3.806304454803467
    4. 'NF' → logprob: -4.056304454803467
    5. 'nf' → logprob: -4.431304454803467
    6. 'n' → logprob: -5.556304454803467
    7. '=' → logprob: -5.931304454803467
    8. 'NT' → logprob: -6.556304454803467
    9. '```' → logprob: -6.556304454803467
    10. 'NV' → logprob: -7.056304454803467

Token 65: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.022222794592380524
    2. '1' → logprob: -4.647222995758057
    3. 'int' → logprob: -5.397222995758057
    4. '922' → logprob: -5.647222995758057
    5. '100' → logprob: -5.772222995758057
    6. ' ' → logprob: -7.522222995758057
    7. '(' → logprob: -8.272222518920898
    8. '2' → logprob: -9.272222518920898
    9. '999' → logprob: -9.522222518920898
    10. 'float' → logprob: -9.772222518920898

Token 66: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.014047851786017418
    2. 'int' → logprob: -5.014047622680664
    3. '1' → logprob: -5.139047622680664
    4. '100' → logprob: -7.889047622680664
    5. '922' → logprob: -8.014047622680664
    6. 'float' → logprob: -8.139047622680664
    7. '(' → logprob: -8.389047622680664
    8. '2' → logprob: -9.639047622680664
    9. '0' → logprob: -9.889047622680664
    10. '999' → logprob: -10.264047622680664

Token 67: '**' (ID: 410)
  Prédit: '18'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '18' → logprob: -0.34851324558258057
    2. '9' → logprob: -2.098513126373291
    3. '10' → logprob: -2.848513126373291
    4. '**' → logprob: -3.473513126373291
    5. '12' → logprob: -3.723513126373291
    6. '20' → logprob: -4.098513126373291
    7. '15' → logprob: -4.348513126373291
    8. '0' → logprob: -4.848513126373291
    9. '8' → logprob: -4.973513126373291
    10. '00' → logprob: -5.098513126373291

Token 68: '18' (ID: 1157)
  Prédit: '18'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '18' → logprob: -0.19596810638904572
    2. '15' → logprob: -1.8209681510925293
    3. '10' → logprob: -5.070968151092529
    4. '16' → logprob: -5.070968151092529
    5. '9' → logprob: -7.070968151092529
    6. '17' → logprob: -7.320968151092529
    7. '19' → logprob: -7.445968151092529
    8. '20' → logprob: -7.570968151092529
    9. '14' → logprob: -7.695968151092529
    10. '12' → logprob: -7.945968151092529

Token 69: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04834830388426781
    2. '#' → logprob: -4.298348426818848
    3. '<|end|>' → logprob: -4.298348426818848
    4. '

' → logprob: -4.798348426818848
    5. '
' → logprob: -5.673348426818848
    6. 'def' → logprob: -6.298348426818848
    7. '```' → logprob: -6.298348426818848
    8. '' → logprob: -6.673348426818848
    9. ' 
' → logprob: -7.798348426818848
    10. '<|end|>' → logprob: -7.923348426818848

Token 70: 'MOD' (ID: 52135)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.21883957087993622
    2. 'class' → logprob: -2.093839645385742
    3. '
' → logprob: -3.343839645385742
    4. 'n' → logprob: -3.843839645385742
    5. '#' → logprob: -5.343839645385742
    6. '\n' → logprob: -5.593839645385742
    7. '```' → logprob: -6.343839645385742
    8. 'from' → logprob: -6.843839645385742
    9. '

' → logprob: -7.093839645385742
    10. '\' → logprob: -7.218839645385742

Token 71: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03813432902097702
    2. '=' → logprob: -3.2881343364715576
    3. ' ' → logprob: -9.538134574890137
    4. ' =)' → logprob: -11.663134574890137
    5. '<|end|>' → logprob: -12.038134574890137
    6. ' =
' → logprob: -13.163134574890137
    7. ')' → logprob: -13.663134574890137
    8. ',' → logprob: -14.538134574890137
    9. '_' → logprob: -14.788134574890137
    10. '<|end|>' → logprob: -15.038134574890137

Token 72: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.028246354311704636
    2. '10' → logprob: -3.6532464027404785
    3. '100' → logprob: -6.2782464027404785
    4. '998' → logprob: -9.90324592590332
    5. '1' → logprob: -11.52824592590332
    6. '999' → logprob: -13.77824592590332
    7. ' (' → logprob: -13.90324592590332
    8. '109' → logprob: -14.15324592590332
    9. '(' → logprob: -14.52824592590332
    10. '0' → logprob: -14.65324592590332

Token 73: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.25106281042099
    2. '100' → logprob: -1.6260628700256348
    3. '998' → logprob: -3.7510628700256348
    4. ' ' → logprob: -6.376062870025635
    5. '1' → logprob: -9.751062393188477
    6. '(' → logprob: -10.126062393188477
    7. '999' → logprob: -11.001062393188477
    8. '```' → logprob: -12.126062393188477
    9. 'int' → logprob: -12.876062393188477
    10. '  ' → logprob: -14.376062393188477

Token 74: '**' (ID: 410)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.03906635195016861
    2. '**' → logprob: -3.2890663146972656
    3. '09' → logprob: -6.914066314697266
    4. '7' → logprob: -11.164066314697266
    5. '0' → logprob: -11.914066314697266
    6. '000' → logprob: -13.164066314697266
    7. ' ' → logprob: -13.164066314697266
    8. ' **' → logprob: -13.289066314697266
    9. '+' → logprob: -13.789066314697266
    10. '^' → logprob: -14.164066314697266

Token 75: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: 0.0
    2. '09' → logprob: -17.625
    3. '18' → logprob: -19.75
    4. '10' → logprob: -20.25
    5. '19' → logprob: -21.125
    6. '```' → logprob: -22.0
    7. '+' → logprob: -22.875
    8. ' ' → logprob: -23.125
    9. '12' → logprob: -23.625
    10. '7' → logprob: -24.75

Token 76: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.003179259831085801
    2. ' +' → logprob: -5.75317907333374
    3. '7' → logprob: -13.628179550170898
    4. '+
' → logprob: -15.503179550170898
    5. '＋' → logprob: -16.5031795501709
    6. '+

' → logprob: -17.2531795501709
    7. ' +
' → logprob: -17.2531795501709
    8. ' +
' → logprob: -18.2531795501709
    9. '+</' → logprob: -18.5031795501709
    10. ' plus' → logprob: -18.5031795501709

Token 77: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.25
    3. '+' → logprob: -17.875
    4. '```' → logprob: -20.25
    5. '   ' → logprob: -21.75
    6. '07' → logprob: -22.0
    7. '' → logprob: -22.375
    8. '７' → logprob: -23.125
    9. '9' → logprob: -23.125
    10. '  ' → logprob: -23.3125

Token 78: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -1.9361264946837764e-07
    2. '+' → logprob: -16.25
    3. '```' → logprob: -19.75
    4. ' ' → logprob: -20.125
    5. '07' → logprob: -21.625
    6. '   ' → logprob: -22.5
    7. '9' → logprob: -23.125
    8. '' → logprob: -23.5625
    9. '７' → logprob: -23.6875
    10. '۷' → logprob: -24.0625

Token 79: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1653347760438919
    2. '

' → logprob: -1.9153348207473755
    3. '\n' → logprob: -6.665334701538086
    4. '
' → logprob: -6.915334701538086
    5. '' → logprob: -7.040334701538086
    6. '```' → logprob: -7.290334701538086
    7. 'def' → logprob: -7.540334701538086
    8. '#' → logprob: -8.040334701538086
    9. '\' → logprob: -9.165334701538086
    10. 'newline' → logprob: -9.290334701538086

Token 80: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4655652642250061
    2. 'def' → logprob: -1.2155652046203613
    3. '

' → logprob: -2.7155652046203613
    4. '```' → logprob: -6.340565204620361
    5. 'n' → logprob: -6.465565204620361
    6. '#' → logprob: -6.590565204620361
    7. 'class' → logprob: -6.715565204620361
    8. '\n' → logprob: -6.715565204620361
    9. '\' → logprob: -7.215565204620361
    10. '' → logprob: -7.590565204620361

Token 81: ' MOD' (ID: 32868)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3545956313610077
    2. '
' → logprob: -2.60459566116333
    3. ' 

' → logprob: -2.60459566116333
    4. ' 
' → logprob: -2.85459566116333
    5. 'n' → logprob: -3.47959566116333
    6. '#' → logprob: -4.35459566116333
    7. '

' → logprob: -4.47959566116333
    8. 'class' → logprob: -5.10459566116333
    9. '\' → logprob: -5.22959566116333
    10. ' 
 
' → logprob: -5.35459566116333

Token 82: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5607020258903503
    2. ' =' → logprob: -1.0607020854949951
    3. ' ' → logprob: -2.560702085494995
    4. '_' → logprob: -5.435701847076416
    5. ',' → logprob: -7.560701847076416
    6. ')' → logprob: -8.060702323913574
    7. '.' → logprob: -8.560702323913574
    8. ':' → logprob: -9.060702323913574
    9. '#' → logprob: -9.685702323913574
    10. '<|end|>' → logprob: -10.560702323913574

Token 83: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.48273777961730957
    2. '998' → logprob: -1.1077377796173096
    3. '10' → logprob: -3.8577377796173096
    4. '2' → logprob: -4.3577375411987305
    5. '(' → logprob: -5.1077375411987305
    6. '1' → logprob: -5.2327375411987305
    7. ' (' → logprob: -5.4827375411987305
    8. '100' → logprob: -6.7327375411987305
    9. '0' → logprob: -7.7327375411987305
    10. 'None' → logprob: -7.9827375411987305

Token 84: '998' (ID: 34589)
  Prédit: '998'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '998' → logprob: -0.0004935794277116656
    2. '2' → logprob: -8.500494003295898
    3. '(' → logprob: -8.625494003295898
    4. '10' → logprob: -9.875494003295898
    5. '1' → logprob: -10.750494003295898
    6. '100' → logprob: -11.000494003295898
    7. '```' → logprob: -11.875494003295898
    8. 'int' → logprob: -12.250494003295898
    9. '0' → logprob: -12.750494003295898
    10. ' ' → logprob: -13.625494003295898

Token 85: '244' (ID: 25291)
  Prédit: '244'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '244' → logprob: -1.9361264946837764e-07
    2. '243' → logprob: -16.5
    3. '444' → logprob: -18.125
    4. '24' → logprob: -18.25
    5. ',' → logprob: -18.875
    6. '_' → logprob: -19.125
    7. '2' → logprob: -19.625
    8. '+' → logprob: -19.875
    9. '```' → logprob: -20.25
    10. '247' → logprob: -20.375

Token 86: '353' (ID: 32996)
  Prédit: '353'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '353' → logprob: -0.05766933411359787
    2. '853' → logprob: -3.0576694011688232
    3. '53' → logprob: -5.307669162750244
    4. '857' → logprob: -6.807669162750244
    5. '753' → logprob: -7.057669162750244
    6. '7' → logprob: -7.307669162750244
    7. '```' → logprob: -7.432669162750244
    8. '257' → logprob: -8.432669639587402
    9. '553' → logprob: -9.057669639587402
    10. '653' → logprob: -9.307669639587402

Token 87: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.19787977635860443
    2. '

' → logprob: -2.0728797912597656
    3. '\n' → logprob: -3.4478797912597656
    4. '' → logprob: -4.947879791259766
    5. '#' → logprob: -5.197879791259766
    6. 'def' → logprob: -5.947879791259766
    7. '\' → logprob: -6.197879791259766
    8. '
' → logprob: -6.822879791259766
    9. '


' → logprob: -6.822879791259766
    10. '```' → logprob: -7.197879791259766

Token 88: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14001257717609406
    2. '

' → logprob: -2.515012502670288
    3. '\n' → logprob: -4.140012741088867
    4. 'def' → logprob: -4.265012741088867
    5. '#' → logprob: -4.515012741088867
    6. '' → logprob: -6.140012741088867
    7. '
' → logprob: -6.390012741088867
    8. '\' → logprob: -6.890012741088867
    9. '<|end|>' → logprob: -6.890012741088867
    10. '```' → logprob: -7.015012741088867

Token 89: ' people' (ID: 1665)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 90: ' sometimes' (ID: 10069)
  Prédit: 'often'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'often' → logprob: -1.1394990682601929
    2. ''s' → logprob: -1.5144990682601929
    3. ' often' → logprob: -1.5144990682601929
    4. 'sometimes' → logprob: -2.2644991874694824
    5. ' sometimes' → logprob: -3.1394991874694824
    6. 'who' → logprob: -4.139499187469482
    7. 'usually' → logprob: -4.264499187469482
    8. 'use' → logprob: -4.389499187469482
    9. ' who' → logprob: -4.389499187469482
    10. ' usually' → logprob: -5.264499187469482

Token 91: ' use' (ID: 1199)
  Prédit: 'use'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'use' → logprob: -0.23296035826206207
    2. ' use' → logprob: -2.4829604625701904
    3. '#' → logprob: -3.1079604625701904
    4. '*' → logprob: -3.9829604625701904
    5. '.' → logprob: -4.107960224151611
    6. '<|end|>' → logprob: -4.732960224151611
    7. '=' → logprob: -5.107960224151611
    8. 'prefer' → logprob: -5.482960224151611
    9. ' prefer' → logprob: -5.982960224151611
    10. ',' → logprob: -5.982960224151611

Token 92: ' the' (ID: 290)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.33013659715652466
    2. '<|end|>' → logprob: -1.9551365375518799
    3. ' this' → logprob: -2.70513653755188
    4. ' the' → logprob: -3.20513653755188
    5. '```' → logprob: -4.830136775970459
    6. ' these' → logprob: -5.205136775970459
    7. '<|end|>' → logprob: -5.330136775970459
    8. ' a' → logprob: -5.955136775970459
    9. '`' → logprob: -6.205136775970459
    10. '998' → logprob: -6.705136775970459

Token 93: ' other' (ID: 1273)
  Prédit: ' other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.7203261852264404
    2. 'other' → logprob: -1.3453261852264404
    3. '998' → logprob: -2.0953261852264404
    4. ' ' → logprob: -3.5953261852264404
    5. 'same' → logprob: -4.5953264236450195
    6. ' same' → logprob: -4.7203264236450195
    7. 'ir' → logprob: -4.7203264236450195
    8. 'second' → logprob: -5.1578264236450195
    9. ' second' → logprob: -5.4703264236450195
    10. ' code' → logprob: -5.5328264236450195

Token 94: ' one' (ID: 1001)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4155314862728119
    2. 'mod' → logprob: -2.9155313968658447
    3. '<|end|>' → logprob: -2.9155313968658447
    4. '\n' → logprob: -3.5405313968658447
    5. '
' → logprob: -3.6655313968658447
    6. '#
' → logprob: -3.7905313968658447
    7. '```' → logprob: -3.7905313968658447
    8. '_mod' → logprob: -3.9155313968658447
    9. ' ' → logprob: -4.040531635284424
    10. 'MOD' → logprob: -4.165531635284424

Token 95: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20018474757671356
    2. '

' → logprob: -1.95018470287323
    3. 'def' → logprob: -3.9501848220825195
    4. '\n' → logprob: -4.3251848220825195
    5. '
' → logprob: -5.8251848220825195
    6. '\' → logprob: -6.5751848220825195
    7. '```' → logprob: -7.4501848220825195
    8. 'n' → logprob: -7.5751848220825195
    9. '#' → logprob: -7.8251848220825195
    10. '


' → logprob: -8.45018482208252

Token 96: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01129266619682312
    2. 'class' → logprob: -5.011292457580566
    3. 'n' → logprob: -5.636292457580566
    4. 'from' → logprob: -7.261292457580566
    5. '
' → logprob: -8.761292457580566
    6. '#' → logprob: -9.636292457580566
    7. '\' → logprob: -10.886292457580566
    8. 'N' → logprob: -11.011292457580566
    9. 'input' → logprob: -11.511292457580566
    10. 'import' → logprob: -11.636292457580566

Token 97: ' Read' (ID: 5405)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.36196061968803406
    2. ' def' → logprob: -1.3619606494903564
    3. 'from' → logprob: -4.111960411071777
    4. ' class' → logprob: -4.986960411071777
    5. 'class' → logprob: -5.361960411071777
    6. ' input' → logprob: -6.236960411071777
    7. ' from' → logprob: -6.361960411071777
    8. 'input' → logprob: -6.486960411071777
    9. ' The' → logprob: -6.861960411071777
    10. ' dp' → logprob: -7.236960411071777

Token 98: ' inputs' (ID: 21963)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2816143333911896
    2. '(' → logprob: -1.5316143035888672
    3. 'input' → logprob: -3.781614303588867
    4. 'line' → logprob: -6.531614303588867
    5. '_input' → logprob: -6.781614303588867
    6. ' input' → logprob: -7.031614303588867
    7. ' =' → logprob: -7.531614303588867
    8. '_' → logprob: -7.906614303588867
    9. '()\' → logprob: -8.406614303588867
    10. 'data' → logprob: -8.406614303588867

Token 99: ' -' (ID: 533)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6455395817756653
    2. '\n' → logprob: -0.8955395817756653
    3. '
' → logprob: -3.5205395221710205
    4. '(n' → logprob: -4.3955397605896
    5. '\' → logprob: -4.8955397605896
    6. 'a' → logprob: -5.1455397605896
    7. 'data' → logprob: -5.6455397605896
    8. 's' → logprob: -5.7705397605896
    9. '[n' → logprob: -6.8955397605896
    10. 'input' → logprob: -7.6455397605896

Token 100: ' I' (ID: 357)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6659696102142334
    2. ' n' → logprob: -0.7909696102142334
    3. ' input' → logprob: -4.0409698486328125
    4. 'input' → logprob: -4.4159698486328125
    5. ' data' → logprob: -6.5409698486328125
    6. 'data' → logprob: -6.7909698486328125
    7. 'line' → logprob: -8.915969848632812
    8. 'def' → logprob: -9.540969848632812
    9. ' line' → logprob: -9.665969848632812
    10. ' N' → logprob: -10.165969848632812

Token 101: ' wish' (ID: 8115)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.006850820034742355
    2. ' =' → logprob: -5.881850719451904
    3. 'm' → logprob: -6.256850719451904
    4. '_n' → logprob: -7.756850719451904
    5. 'nit' → logprob: -8.006851196289062
    6. 'put' → logprob: -8.256851196289062
    7. 'f' → logprob: -8.631851196289062
    8. ' n' → logprob: -8.881851196289062
    9. '=' → logprob: -9.006851196289062
    10. 'nt' → logprob: -9.131851196289062

Token 102: ' Python' (ID: 26534)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2803098261356354
    2. 'n' → logprob: -2.4053099155426025
    3. '()' → logprob: -3.0303099155426025
    4. ' n' → logprob: -3.5303099155426025
    5. '(n' → logprob: -3.6553099155426025
    6. ' =' → logprob: -4.530309677124023
    7. ' (' → logprob: -4.655309677124023
    8. ',' → logprob: -5.155309677124023
    9. 'input' → logprob: -5.655309677124023
    10. '(
' → logprob: -5.905309677124023

Token 103: ' had' (ID: 1458)
  Prédit: ' had'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' had' → logprob: -0.3850243091583252
    2. ' could' → logprob: -2.010024309158325
    3. 'could' → logprob: -2.385024309158325
    4. 'had' → logprob: -3.010024309158325
    5. ''s' → logprob: -3.885024309158325
    6. ' ' → logprob: -5.260024070739746
    7. 'would' → logprob: -5.510024070739746
    8. ' would' → logprob: -6.260024070739746
    9. '3' → logprob: -6.260024070739746
    10. 'input' → logprob: -6.635024070739746

Token 104: ' scanf' (ID: 39550)
  Prédit: 'switch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'switch' → logprob: -0.7057268619537354
    2. ' switch' → logprob: -1.2057268619537354
    3. ' a' → logprob: -2.3307268619537354
    4. 'a' → logprob: -3.2057268619537354
    5. ' fast' → logprob: -3.7057268619537354
    6. 'fast' → logprob: -4.705726623535156
    7. ' scanf' → logprob: -5.080726623535156
    8. 's' → logprob: -5.080726623535156
    9. 'match' → logprob: -5.455726623535156
    10. 'scanf' → logprob: -5.830726623535156

Token 105: '...
' (ID: 4908)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5112190842628479
    2. '("("' → logprob: -1.3862190246582031
    3. '(
' → logprob: -3.011219024658203
    4. '('\' → logprob: -3.386219024658203
    5. '("\' → logprob: -3.386219024658203
    6. '('' → logprob: -4.386219024658203
    7. 's' → logprob: -5.386219024658203
    8. 'input' → logprob: -5.511219024658203
    9. '("' → logprob: -5.636219024658203
    10. '
' → logprob: -6.761219024658203

Token 106: 'N' (ID: 45)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.005198182072490454
    2. ' n' → logprob: -6.130198001861572
    3. 'data' → logprob: -6.755198001861572
    4. 'a' → logprob: -6.880198001861572
    5. 'N' → logprob: -8.63019847869873
    6. 'x' → logprob: -8.75519847869873
    7. 'input' → logprob: -9.00519847869873
    8. 'line' → logprob: -9.00519847869873
    9. 'for' → logprob: -9.75519847869873
    10. ' line' → logprob: -10.50519847869873

Token 107: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0028221122920513153
    2. ' =' → logprob: -6.377821922302246
    3. ' ,' → logprob: -6.877821922302246
    4. '=' → logprob: -9.502821922302246
    5. ' ' → logprob: -11.877821922302246
    6. ',n' → logprob: -13.127821922302246
    7. ',int' → logprob: -14.127821922302246
    8. ',N' → logprob: -14.377821922302246
    9. ',input' → logprob: -14.502821922302246
    10. ',
' → logprob: -15.002821922302246

Token 108: ' M' (ID: 391)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.8605042099952698
    2. 'M' → logprob: -0.9855042099952698
    3. ' K' → logprob: -2.485504150390625
    4. ' M' → logprob: -2.610504150390625
    5. 'Q' → logprob: -3.235504150390625
    6. ' Q' → logprob: -5.860504150390625
    7. 'x' → logprob: -6.735504150390625
    8. ' ' → logprob: -6.860504150390625
    9. 'k' → logprob: -7.110504150390625
    10. 'X' → logprob: -7.985504150390625

Token 109: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10022414475679398
    2. '=' → logprob: -2.350224256515503
    3. ',' → logprob: -11.725224494934082
    4. ' ' → logprob: -11.975224494934082
    5. '=input' → logprob: -13.100224494934082
    6. ')' → logprob: -14.975224494934082
    7. ' =
' → logprob: -15.850224494934082
    8. '=int' → logprob: -16.350223541259766
    9. ' =
' → logprob: -16.475223541259766
    10. ' ' → logprob: -17.100223541259766

Token 110: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.0052362410351634026
    2. 'map' → logprob: -5.2552361488342285
    3. ' ' → logprob: -14.005236625671387
    4. ' list' → logprob: -14.255236625671387
    5. '	map' → logprob: -15.005236625671387
    6. ' [' → logprob: -15.880236625671387
    7. ' sys' → logprob: -16.00523567199707
    8. ' mapa' → logprob: -16.38023567199707
    9. ' input' → logprob: -16.63023567199707
    10. 'list' → logprob: -17.00523567199707

Token 111: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.2585856318473816
    2. '(' → logprob: -1.5085856914520264
    3. '(str' → logprob: -5.258585453033447
    4. '(input' → logprob: -7.383585453033447
    5. '(lambda' → logprob: -7.758585453033447
    6. '(tuple' → logprob: -9.258585929870605
    7. ' (' → logprob: -9.633585929870605
    8. '(list' → logprob: -9.758585929870605
    9. 'int' → logprob: -10.258585929870605
    10. '(len' → logprob: -11.133585929870605

Token 112: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.6260679364204407
    2. '(' → logprob: -1.001067876815796
    3. 'input' → logprob: -3.376067876815796
    4. ',' → logprob: -3.751067876815796
    5. ',input' → logprob: -3.876067876815796
    6. '(sys' → logprob: -4.126068115234375
    7. ')' → logprob: -6.501068115234375
    8. ' input' → logprob: -7.126068115234375
    9. '(int' → logprob: -8.126068115234375
    10. '(
' → logprob: -8.626068115234375

Token 113: ' sys' (ID: 12228)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.08246348798274994
    2. 'sys' → logprob: -3.082463502883911
    3. ' input' → logprob: -3.582463502883911
    4. ' sys' → logprob: -5.207463264465332
    5. ' ' → logprob: -11.082463264465332
    6. ')' → logprob: -12.707463264465332
    7. 'int' → logprob: -13.082463264465332
    8. 'str' → logprob: -13.207463264465332
    9. '   ' → logprob: -13.832463264465332
    10. 'stdin' → logprob: -13.832463264465332

Token 114: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -2.951771421066951e-05
    2. '.argv' → logprob: -11.375029563903809
    3. '.readline' → logprob: -12.250029563903809
    4. '.stdout' → logprob: -12.375029563903809
    5. 'stdin' → logprob: -12.375029563903809
    6. '.' → logprob: -12.625029563903809
    7. '.std' → logprob: -13.750029563903809
    8. '```' → logprob: -15.875029563903809
    9. '(stdin' → logprob: -16.125028610229492
    10. ' stdin' → logprob: -17.625028610229492

Token 115: '.buffer' (ID: 48964)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0001468067930545658
    2. '.read' → logprob: -9.000146865844727
    3. '.' → logprob: -10.875146865844727
    4. '.stdin' → logprob: -13.000146865844727
    5. '.readlines' → logprob: -13.875146865844727
    6. '().' → logprob: -15.000146865844727
    7. ').' → logprob: -15.000146865844727
    8. ')' → logprob: -15.875146865844727
    9. ' .' → logprob: -16.125146865844727
    10. '.input' → logprob: -16.750146865844727

Token 116: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.003190905088558793
    2. '.read' → logprob: -5.753190994262695
    3. '.readlines' → logprob: -11.378190994262695
    4. '.' → logprob: -13.628190994262695
    5. '.decode' → logprob: -15.628190994262695
    6. 'read' → logprob: -16.628190994262695
    7. '.recv' → logprob: -16.753190994262695
    8. '.peek' → logprob: -17.253190994262695
    9. ' .' → logprob: -17.503190994262695
    10. ')' → logprob: -17.503190994262695

Token 117: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.040568988770246506
    2. '())' → logprob: -3.5405690670013428
    3. '()' → logprob: -4.540568828582764
    4. '(' → logprob: -10.040569305419922
    5. '()[' → logprob: -10.540569305419922
    6. '()]' → logprob: -12.290569305419922
    7. ')' → logprob: -12.540569305419922
    8. '(),' → logprob: -12.915569305419922
    9. ' ()' → logprob: -13.415569305419922
    10. '()
' → logprob: -13.415569305419922

Token 118: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.9062584638595581
    2. 'decode' → logprob: -0.9062584638595581
    3. 'rstrip' → logprob: -1.906258463859558
    4. 'strip' → logprob: -3.1562585830688477
    5. 'read' → logprob: -7.281258583068848
    6. ' decode' → logprob: -11.406258583068848
    7. ' split' → logprob: -11.656258583068848
    8. '```' → logprob: -13.281258583068848
    9. ' strip' → logprob: -13.781258583068848
    10. 'rs' → logprob: -14.031258583068848

Token 119: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.03411218151450157
    2. ')' → logprob: -3.7841122150421143
    3. '()' → logprob: -4.534111976623535
    4. '(),' → logprob: -10.284111976623535
    5. '(' → logprob: -10.784111976623535
    6. '())
' → logprob: -11.909111976623535
    7. '()))' → logprob: -12.909111976623535
    8. ' ())' → logprob: -13.284111976623535
    9. '))' → logprob: -13.409111976623535
    10. '());' → logprob: -13.909111976623535

Token 120: 'AB' (ID: 2912)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.29161563515663147
    2. 'data' → logprob: -2.1666157245635986
    3. 'a' → logprob: -3.4166157245635986
    4. 'arr' → logprob: -3.5416157245635986
    5. 'array' → logprob: -4.4166154861450195
    6. ' A' → logprob: -4.9166154861450195
    7. 'Q' → logprob: -5.5416154861450195
    8. ')' → logprob: -5.5416154861450195
    9. 'D' → logprob: -5.7916154861450195
    10. ',' → logprob: -5.9166154861450195

Token 121: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.42190515995025635
    2. ' =' → logprob: -1.1719051599502563
    3. 's' → logprob: -3.421905040740967
    4. '[]' → logprob: -6.671905040740967
    5. '=[]' → logprob: -8.421905517578125
    6. 'S' → logprob: -9.546905517578125
    7. '_pairs' → logprob: -9.671905517578125
    8. '_' → logprob: -9.921905517578125
    9. '_list' → logprob: -10.546905517578125
    10. ')' → logprob: -11.671905517578125

Token 122: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.035758126527071
    2. '[list' → logprob: -3.6607580184936523
    3. '[int' → logprob: -5.160758018493652
    4. 'sys' → logprob: -6.785758018493652
    5. 'list' → logprob: -7.035758018493652
    6. '[]' → logprob: -7.910758018493652
    7. '[s' → logprob: -8.285758018493652
    8. '[List' → logprob: -8.410758018493652
    9. '[np' → logprob: -8.535758018493652
    10. '[array' → logprob: -8.785758018493652

Token 123: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0019894209690392017
    2. ' for' → logprob: -6.251989364624023
    3. '[' → logprob: -9.876989364624023
    4. '[]' → logprob: -12.751989364624023
    5. '<|end|>' → logprob: -13.501989364624023
    6. '_' → logprob: -13.626989364624023
    7. '	for' → logprob: -14.126989364624023
    8. ']' → logprob: -14.501989364624023
    9. 'b' → logprob: -14.626989364624023
    10. '[
' → logprob: -15.126989364624023

Token 124: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10100684314966202
    2. ' _' → logprob: -2.3510067462921143
    3. '_i' → logprob: -7.226006984710693
    4. ' i' → logprob: -9.601006507873535
    5. ' ' → logprob: -13.101006507873535
    6. 'i' → logprob: -13.601006507873535
    7. '__' → logprob: -15.351006507873535
    8. ' ' → logprob: -15.476006507873535
    9. '_range' → logprob: -15.476006507873535
    10. '_line' → logprob: -15.601006507873535

Token 125: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006252623163163662
    2. 'in' → logprob: -5.131252765655518
    3. 'range' → logprob: -8.13125228881836
    4. ' ' → logprob: -11.00625228881836
    5. 'N' → logprob: -12.88125228881836
    6. 's' → logprob: -13.50625228881836
    7. 'i' → logprob: -13.50625228881836
    8. ' range' → logprob: -13.88125228881836
    9. 'sys' → logprob: -13.88125228881836
    10. 'n' → logprob: -14.00625228881836

Token 126: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00010390079842181876
    2. ' range' → logprob: -9.250103950500488
    3. 'sys' → logprob: -12.375103950500488
    4. '(range' → logprob: -14.000103950500488
    5. '	range' → logprob: -14.625103950500488
    6. '```' → logprob: -14.750103950500488
    7. 'x' → logprob: -15.000103950500488
    8. 'ange' → logprob: -15.125103950500488
    9. 'r' → logprob: -15.250103950500488
    10. 'ran' → logprob: -15.750103950500488

Token 127: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.008661840111017227
    2. '(M' → logprob: -4.75866174697876
    3. '(' → logprob: -10.008662223815918
    4. 'N' → logprob: -13.133662223815918
    5. 'M' → logprob: -15.633662223815918
    6. '(int' → logprob: -16.8836612701416
    7. '(
' → logprob: -17.5086612701416
    8. '(n' → logprob: -17.7586612701416
    9. ' (' → logprob: -18.3836612701416
    10. ' N' → logprob: -18.8836612701416

Token 128: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.34896597266197205
    2. '):
' → logprob: -1.2239660024642944
    3. ')' → logprob: -7.848966121673584
    4. ' ):' → logprob: -9.598965644836426
    5. ' ):
' → logprob: -10.223965644836426
    6. '):
' → logprob: -11.223965644836426
    7. ':' → logprob: -11.973965644836426
    8. ' ' → logprob: -13.473965644836426
    9. '():
' → logprob: -13.848965644836426
    10. ',' → logprob: -13.848965644836426

Token 129: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08231595158576965
    2. 'AB' → logprob: -2.7073159217834473
    3. ' AB' → logprob: -4.457315921783447
    4. ' A' → logprob: -8.207316398620605
    5. 'A' → logprob: -8.957316398620605
    6. ' ' → logprob: -9.082316398620605
    7. '   ' → logprob: -9.832316398620605
    8. '```' → logprob: -10.332316398620605
    9. 'ab' → logprob: -11.082316398620605
    10. ' ab' → logprob: -11.082316398620605

Token 130: ' AB' (ID: 16520)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.026269057765603065
    2. 'A' → logprob: -4.27626895904541
    3. ' a' → logprob: -4.77626895904541
    4. 'AB' (adapté à ' AB') → logprob: -6.02626895904541
    5. 'ab' → logprob: -7.27626895904541
    6. ' A' → logprob: -8.02626895904541
    7. '   ' → logprob: -9.40126895904541
    8. '	a' → logprob: -10.52626895904541
    9. ' AB' → logprob: -10.90126895904541
    10. 'x' → logprob: -11.40126895904541

Token 131: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0017224266193807125
    2. '.' → logprob: -6.37672233581543
    3. '.ap' → logprob: -11.25172233581543
    4. '.app' → logprob: -12.00172233581543
    5. 'append' → logprob: -15.00172233581543
    6. '.extend' → logprob: -15.25172233581543
    7. ' .' → logprob: -16.00172233581543
    8. '.a' → logprob: -16.12672233581543
    9. '=' → logprob: -16.12672233581543
    10. '.=' → logprob: -16.50172233581543

Token 132: '(list' (ID: 13116)
  Prédit: '(tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tuple' → logprob: -0.0019442226039245725
    2. '(list' → logprob: -6.501944065093994
    3. '(' → logprob: -8.001944541931152
    4. 'tuple' → logprob: -9.251944541931152
    5. ' tuple' → logprob: -12.001944541931152
    6. '(t' → logprob: -13.126944541931152
    7. '(map' → logprob: -13.376944541931152
    8. '(m' → logprob: -14.001944541931152
    9. '(sys' → logprob: -15.501944541931152
    10. '(
' → logprob: -15.751944541931152

Token 133: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.00042804674012586474
    2. 'map' → logprob: -8.000428199768066
    3. '(' → logprob: -9.375428199768066
    4. '(sys' → logprob: -12.500428199768066
    5. ' map' → logprob: -13.000428199768066
    6. ')' → logprob: -14.375428199768066
    7. '(int' → logprob: -14.625428199768066
    8. '	map' → logprob: -15.375428199768066
    9. ',map' → logprob: -15.875428199768066
    10. '(
' → logprob: -16.00042724609375

Token 134: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.000588417868129909
    2. 'int' → logprob: -7.750588417053223
    3. '(' → logprob: -9.375588417053223
    4. ',int' → logprob: -10.000588417053223
    5. '<int' → logprob: -11.250588417053223
    6. ' int' → logprob: -12.250588417053223
    7. '[int' → logprob: -12.500588417053223
    8. '=int' → logprob: -13.250588417053223
    9. ']int' → logprob: -13.375588417053223
    10. '	int' → logprob: -14.125588417053223

Token 135: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16237862408161163
    2. '(sys' → logprob: -1.9123786687850952
    3. 'sys' → logprob: -6.287378787994385
    4. ' ,' → logprob: -9.037378311157227
    5. '=sys' → logprob: -9.412378311157227
    6. '(' → logprob: -10.412378311157227
    7. '	sys' → logprob: -10.537378311157227
    8. '(),' → logprob: -11.037378311157227
    9. ' sys' → logprob: -11.412378311157227
    10. ',s' → logprob: -13.162378311157227

Token 136: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.029759511351585388
    2. ' sys' → logprob: -3.529759407043457
    3. '(sys' → logprob: -12.279759407043457
    4. '	sys' → logprob: -13.029759407043457
    5. '=sys' → logprob: -13.404759407043457
    6. '/sys' → logprob: -15.654759407043457
    7. '   ' → logprob: -16.154760360717773
    8. ' ' → logprob: -16.279760360717773
    9. '.sys' → logprob: -16.404760360717773
    10. '```' → logprob: -16.529760360717773

Token 137: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0003280751989223063
    2. '.buffer' → logprob: -9.250328063964844
    3. '=sys' → logprob: -9.250328063964844
    4. '.sys' → logprob: -10.000328063964844
    5. 'stdin' → logprob: -10.125328063964844
    6. '.stdout' → logprob: -10.750328063964844
    7. '.std' → logprob: -11.125328063964844
    8. 'sys' → logprob: -11.625328063964844
    9. '.readline' → logprob: -13.125328063964844
    10. '.' → logprob: -13.875328063964844

Token 138: '.buffer' (ID: 48964)
  Prédit: '.buffer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.buffer' → logprob: -0.022169863805174828
    2. '.readline' → logprob: -3.897169828414917
    3. 'buffer' → logprob: -6.647170066833496
    4. '.stdin' → logprob: -8.272170066833496
    5. 'sys' → logprob: -9.897170066833496
    6. '.read' → logprob: -11.772170066833496
    7. 'stdin' → logprob: -12.147170066833496
    8. '.sys' → logprob: -12.397170066833496
    9. '=sys' → logprob: -13.147170066833496
    10. '().' → logprob: -14.397170066833496

Token 139: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -3.292907877039397e-06
    2. '.readlines' → logprob: -13.25000286102295
    3. '.read' → logprob: -13.62500286102295
    4. ' readline' → logprob: -15.50000286102295
    5. 'read' → logprob: -17.750003814697266
    6. '().' → logprob: -20.375003814697266
    7. '.rstrip' → logprob: -20.375003814697266
    8. '.findall' → logprob: -20.375003814697266
    9. '.strptime' → logprob: -21.000003814697266
    10. '.split' → logprob: -21.125003814697266

Token 140: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.1637164789135568e-05
    2. '()' → logprob: -11.625011444091797
    3. '.readline' → logprob: -13.250011444091797
    4. '.' → logprob: -15.250011444091797
    5. ' ().' → logprob: -15.375011444091797
    6. '.split' → logprob: -16.250011444091797
    7. '   ' → logprob: -16.500011444091797
    8. '().__' → logprob: -16.875011444091797
    9. ' ' → logprob: -16.875011444091797
    10. ')' → logprob: -17.375011444091797

Token 141: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0008285674848593771
    2. 'rstrip' → logprob: -7.500828742980957
    3. 'decode' → logprob: -8.750828742980957
    4. 'read' → logprob: -9.375828742980957
    5. 'strip' → logprob: -10.375828742980957
    6. ' split' → logprob: -13.750828742980957
    7. 'spl' → logprob: -16.50082778930664
    8. '(split' → logprob: -16.75082778930664
    9. ')' → logprob: -17.12582778930664
    10. '.split' → logprob: -17.62582778930664

Token 142: '()))' (ID: 16829)
  Prédit: '())))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())))' → logprob: -0.5218002200126648
    2. ')))' → logprob: -1.0218002796173096
    3. '()' → logprob: -3.6468002796173096
    4. '()))' → logprob: -4.0218000411987305
    5. '))' → logprob: -6.6468000411987305
    6. '())' → logprob: -7.6468000411987305
    7. '())))
' → logprob: -7.7718000411987305
    8. ')' → logprob: -8.89680004119873
    9. '(' → logprob: -9.27180004119873
    10. ' ' → logprob: -9.89680004119873

Token 143: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008132012444548309
    2. '))' → logprob: -7.125813007354736
    3. ')
' → logprob: -12.625813484191895
    4. ' )' → logprob: -12.625813484191895
    5. '())' → logprob: -14.000813484191895
    6. ')))' → logprob: -14.875813484191895
    7. ')`' → logprob: -15.625813484191895
    8. ' ' → logprob: -15.750813484191895
    9. '()' → logprob: -15.750813484191895
    10. '])' → logprob: -16.250812530517578

Token 144: 'LR' (ID: 29067)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7735152840614319
    2. 'A' → logprob: -1.898515224456787
    3. 'DP' → logprob: -2.523515224456787
    4. '<|end|>' → logprob: -2.898515224456787
    5. 'AB' → logprob: -3.273515224456787
    6. 'Q' → logprob: -3.273515224456787
    7. 'dp' → logprob: -3.648515224456787
    8. '```' → logprob: -3.648515224456787
    9. 'S' → logprob: -4.148515224456787
    10. 'C' → logprob: -4.398515224456787

Token 145: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07912463694810867
    2. ' =' → logprob: -2.579124689102173
    3. '=[]' → logprob: -8.454124450683594
    4. ',' → logprob: -11.704124450683594
    5. '=[]
' → logprob: -12.954124450683594
    6. 'ange' → logprob: -13.329124450683594
    7. 'S' → logprob: -13.829124450683594
    8. 's' → logprob: -13.954124450683594
    9. 'C' → logprob: -13.954124450683594
    10. '[]' → logprob: -14.079124450683594

Token 146: ' []
' (ID: 8911)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.19737400114536285
    2. '[]
' → logprob: -2.697374105453491
    3. '[]' → logprob: -2.947374105453491
    4. '[' → logprob: -3.072374105453491
    5. 'list' → logprob: -4.697373867034912
    6. ' [' → logprob: -6.697373867034912
    7. '[int' → logprob: -7.447373867034912
    8. '[List' → logprob: -7.822373867034912
    9. '[b' → logprob: -7.947373867034912
    10. ' []' → logprob: -8.69737434387207

Token 147: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.1008713702030946e-06
    2. ' for' → logprob: -13.125001907348633
    3. '[' → logprob: -19.000001907348633
    4. '[]' → logprob: -19.625001907348633
    5. 'range' → logprob: -20.125001907348633
    6. '	for' → logprob: -20.500001907348633
    7. '```' → logprob: -20.875001907348633
    8. '<|end|>' → logprob: -20.875001907348633
    9. 'from' → logprob: -21.125001907348633
    10. '[
' → logprob: -21.875001907348633

Token 148: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.014165272004902363
    2. ' _' → logprob: -4.26416540145874
    3. '_i' → logprob: -14.264164924621582
    4. ' i' → logprob: -14.889164924621582
    5. ' ' → logprob: -15.014164924621582
    6. ' in' → logprob: -15.764164924621582
    7. ' ' → logprob: -16.5141658782959
    8. '_range' → logprob: -16.7641658782959
    9. 'i' → logprob: -17.2641658782959
    10. '__' → logprob: -17.2641658782959

Token 149: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.10027546435594559
    2. ' in' → logprob: -2.3502755165100098
    3. 'range' → logprob: -10.725275039672852
    4. ' ' → logprob: -10.850275039672852
    5. '_' → logprob: -11.225275039672852
    6. 'n' → logprob: -11.975275039672852
    7. ' _' → logprob: -13.225275039672852
    8. '_in' → logprob: -13.850275039672852
    9. 'import' → logprob: -14.100275039672852
    10. '(' → logprob: -14.600275039672852

Token 150: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005932589527219534
    2. ' range' → logprob: -5.130932807922363
    3. 'r' → logprob: -14.005932807922363
    4. '(range' → logprob: -14.130932807922363
    5. '_' → logprob: -14.255932807922363
    6. 'ran' → logprob: -15.130932807922363
    7. '	range' → logprob: -15.630932807922363
    8. ' ' → logprob: -15.630932807922363
    9. '
' → logprob: -15.755932807922363
    10. 'rang' → logprob: -15.880932807922363

Token 151: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.000639765290543437
    2. 'M' → logprob: -7.375639915466309
    3. '(' → logprob: -11.750639915466309
    4. ' M' → logprob: -12.375639915466309
    5. ' (' → logprob: -14.125639915466309
    6. '	M' → logprob: -16.875638961791992
    7. '(N' → logprob: -17.000638961791992
    8. '(int' → logprob: -17.125638961791992
    9. ',M' → logprob: -17.250638961791992
    10. '(Q' → logprob: -17.500638961791992

Token 152: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.04440045356750488
    2. '):' → logprob: -3.169400453567505
    3. ':
' → logprob: -7.294400215148926
    4. ':' → logprob: -7.794400215148926
    5. ')' → logprob: -8.544400215148926
    6. '):
' → logprob: -10.419400215148926
    7. '   ' → logprob: -10.419400215148926
    8. ',' → logprob: -10.669400215148926
    9. ' ):
' → logprob: -10.794400215148926
    10. '():
' → logprob: -12.794400215148926

Token 153: '   ' (ID: 271)
  Prédit: 'LR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LR' → logprob: -0.12703362107276917
    2. '   ' → logprob: -2.1270337104797363
    3. ' LR' → logprob: -9.377033233642578
    4. '	L' → logprob: -11.627033233642578
    5. ' ' → logprob: -11.877033233642578
    6. 'L' → logprob: -12.627033233642578
    7. '  ' → logprob: -14.127033233642578
    8. 'lr' → logprob: -15.502033233642578
    9. '    
' → logprob: -15.877033233642578
    10. 'LTR' → logprob: -16.127033233642578

Token 154: ' LR' (ID: 85167)
  Prédit: 'LR'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LR' (adapté à ' LR') → logprob: -2.927930654550437e-05
    2. ' LR' → logprob: -10.750029563903809
    3. '   ' → logprob: -12.625029563903809
    4. 'L' → logprob: -12.750029563903809
    5. 'lr' → logprob: -14.125029563903809
    6. 'l' → logprob: -15.250029563903809
    7. 'a' → logprob: -15.375029563903809
    8. 'x' → logprob: -16.500028610229492
    9. 'LTR' → logprob: -17.125028610229492
    10. 'LT' → logprob: -17.250028610229492

Token 155: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -6.0033853515051305e-05
    2. '.' → logprob: -9.750060081481934
    3. '.ap' → logprob: -14.500060081481934
    4. ' .' → logprob: -14.625060081481934
    5. '.app' → logprob: -14.875060081481934
    6. 'append' → logprob: -14.875060081481934
    7. ').' → logprob: -17.375059127807617
    8. '.=' → logprob: -18.250059127807617
    9. '.a' → logprob: -18.250059127807617
    10. '=' → logprob: -18.500059127807617

Token 156: '(list' (ID: 13116)
  Prédit: '(list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(list' → logprob: -0.006735860835760832
    2. '(tuple' → logprob: -5.006735801696777
    3. '(' → logprob: -11.006735801696777
    4. 'list' → logprob: -12.881735801696777
    5. 'tuple' → logprob: -14.256735801696777
    6. '=list' → logprob: -15.006735801696777
    7. ' (' → logprob: -15.756735801696777
    8. '(t' → logprob: -16.631736755371094
    9. ' tuple' → logprob: -16.881736755371094
    10. ' list' → logprob: -17.381736755371094

Token 157: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.010812228545546532
    2. '(int' → logprob: -4.635812282562256
    3. 'map' → logprob: -6.885812282562256
    4. '(' → logprob: -10.885811805725098
    5. ' map' → logprob: -11.760811805725098
    6. '<int' → logprob: -13.385811805725098
    7. 'int' → logprob: -13.635811805725098
    8. ')' → logprob: -13.760811805725098
    9. ',map' → logprob: -14.260811805725098
    10. '(tuple' → logprob: -14.385811805725098

Token 158: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.001562000485137105
    2. 'int' → logprob: -6.501562118530273
    3. '=int' → logprob: -10.626562118530273
    4. ',int' → logprob: -11.501562118530273
    5. '<int' → logprob: -11.751562118530273
    6. ']int' → logprob: -12.001562118530273
    7. '[int' → logprob: -12.376562118530273
    8. '(sys' → logprob: -13.251562118530273
    9. '(' → logprob: -13.376562118530273
    10. ' int' → logprob: -13.626562118530273

Token 159: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11626463383436203
    2. ',int' → logprob: -2.241264581680298
    3. '(int' → logprob: -6.116264820098877
    4. 'int' → logprob: -7.741264820098877
    5. '(sys' → logprob: -7.741264820098877
    6. ' ,' → logprob: -8.241264343261719
    7. '(' → logprob: -9.991264343261719
    8. 'sys' → logprob: -11.241264343261719
    9. ',(' → logprob: -11.616264343261719
    10. '<int' → logprob: -11.741264343261719

Token 160: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.14545616507530212
    2. 'int' → logprob: -2.020456075668335
    3. ' sys' → logprob: -5.895456314086914
    4. ' int' → logprob: -11.645456314086914
    5. '(sys' → logprob: -11.895456314086914
    6. 'ints' → logprob: -12.520456314086914
    7. 'stdin' → logprob: -13.145456314086914
    8. '[int' → logprob: -14.520456314086914
    9. '(int' → logprob: -14.520456314086914
    10. ' ' → logprob: -14.645456314086914

Token 161: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.2169954627752304
    2. '.sys' → logprob: -1.8419954776763916
    3. '.buffer' → logprob: -3.8419954776763916
    4. '=sys' → logprob: -4.5919952392578125
    5. '.stdout' → logprob: -6.2169952392578125
    6. '.stderr' → logprob: -6.9669952392578125
    7. 'sys' → logprob: -7.3419952392578125
    8. '._' → logprob: -8.466995239257812
    9. '.os' → logprob: -8.591995239257812
    10. '.argv' → logprob: -8.716995239257812

Token 162: '.buffer' (ID: 48964)
  Prédit: '.buffer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.buffer' → logprob: -0.0008209457155317068
    2. 'buffer' → logprob: -7.125821113586426
    3. '.sys' → logprob: -12.500821113586426
    4. 'sys' → logprob: -12.875821113586426
    5. '.stdin' → logprob: -13.125821113586426
    6. '.readline' → logprob: -13.250821113586426
    7. '.buf' → logprob: -13.250821113586426
    8. '	buffer' → logprob: -13.625821113586426
    9. '.stdout' → logprob: -14.625821113586426
    10. 'BUFFER' → logprob: -14.625821113586426

Token 163: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0034260391257703304
    2. 'buffer' → logprob: -6.5034260749816895
    3. '=sys' → logprob: -7.6284260749816895
    4. '1' → logprob: -7.8784260749816895
    5. 'sys' → logprob: -7.8784260749816895
    6. '().' → logprob: -8.128425598144531
    7. '(sys' → logprob: -9.628425598144531
    8. '.read' → logprob: -9.628425598144531
    9. 'read' → logprob: -10.003425598144531
    10. '.readlines' → logprob: -10.378425598144531

Token 164: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.1875571544806007e-05
    2. '()' → logprob: -11.500011444091797
    3. ' ().' → logprob: -14.250011444091797
    4. '.readline' → logprob: -14.750011444091797
    5. '.' → logprob: -15.875011444091797
    6. '())' → logprob: -16.125011444091797
    7. '()[' → logprob: -16.375011444091797
    8. '()))' → logprob: -16.750011444091797
    9. ')' → logprob: -16.750011444091797
    10. ').' → logprob: -16.875011444091797

Token 165: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.531315314830863e-06
    2. ' split' → logprob: -12.625003814697266
    3. 'decode' → logprob: -16.625003814697266
    4. 'strip' → logprob: -17.250003814697266
    5. '(split' → logprob: -17.250003814697266
    6. 'spl' → logprob: -17.375003814697266
    7. 'read' → logprob: -17.500003814697266
    8. '.split' → logprob: -17.875003814697266
    9. ')' → logprob: -18.500003814697266
    10. 'sys' → logprob: -19.000003814697266

Token 166: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.1523338109254837
    2. '())))' → logprob: -2.1523337364196777
    3. '()' → logprob: -3.9023337364196777
    4. ')))' → logprob: -5.652333736419678
    5. '))' → logprob: -6.777333736419678
    6. '())))
' → logprob: -9.152334213256836
    7. '()));' → logprob: -10.277334213256836
    8. '()))
' → logprob: -10.277334213256836
    9. '())' → logprob: -10.402334213256836
    10. '(' → logprob: -11.277334213256836

Token 167: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04864664003252983
    2. '))' → logprob: -3.0486466884613037
    3. '())' → logprob: -9.923646926879883
    4. '()' → logprob: -12.673646926879883
    5. ')
' → logprob: -12.798646926879883
    6. ')

' → logprob: -13.548646926879883
    7. ' )' → logprob: -14.048646926879883
    8. ')))' → logprob: -14.673646926879883
    9. '))
' → logprob: -14.923646926879883
    10. ')`' → logprob: -15.173646926879883

Token 168: 'AB' (ID: 2912)
  Prédit: 'AB'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AB' → logprob: -0.04205268248915672
    2. '#' → logprob: -3.292052745819092
    3. 'A' → logprob: -6.917052745819092
    4. 'ab' → logprob: -7.792052745819092
    5. 'LR' → logprob: -8.042052268981934
    6. 'sorted' → logprob: -8.042052268981934
    7. 'answers' → logprob: -8.292052268981934
    8. 'dp' → logprob: -8.417052268981934
    9. 'for' → logprob: -8.542052268981934
    10. 'DP' → logprob: -9.167052268981934

Token 169: '.sort' (ID: 19551)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 170: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.004816834349185228
    2. '()
' → logprob: -6.504817008972168
    3. '(key' → logprob: -7.379817008972168
    4. '<|end|>' → logprob: -7.379817008972168
    5. 'def' → logprob: -7.504817008972168
    6. '(' → logprob: -7.754817008972168
    7. '(reverse' → logprob: -7.754817008972168
    8. ',' → logprob: -8.629817008972168
    9. '#' → logprob: -9.004817008972168
    10. '()

' → logprob: -9.254817008972168

Token 171: ' ' (ID: 220)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.6405264139175415
    2. ')' → logprob: -2.390526294708252
    3. '
' → logprob: -2.640526294708252
    4. 's' → logprob: -2.890526294708252
    5. '#' → logprob: -3.015526294708252
    6. 'AB' → logprob: -3.015526294708252
    7. '```' → logprob: -4.390526294708252
    8. 'for' → logprob: -4.515526294708252
    9. ',' → logprob: -4.515526294708252
    10. '[' → logprob: -4.640526294708252

Token 172: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07193557173013687
    2. ',' → logprob: -3.4469356536865234
    3. '<|end|>' → logprob: -4.196935653686523
    4. '[' → logprob: -5.321935653686523
    5. ')' → logprob: -5.321935653686523
    6. '#' → logprob: -5.446935653686523
    7. ',
' → logprob: -5.821935653686523
    8. 'def' → logprob: -7.196935653686523
    9. '```' → logprob: -7.321935653686523
    10. '
' → logprob: -7.446935653686523

Token 173: ' Sort' (ID: 25945)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3619314134120941
    2. 'AB' → logprob: -1.6119314432144165
    3. 'prev' → logprob: -4.361931324005127
    4. 'from' → logprob: -4.486931324005127
    5. 'sorted' → logprob: -4.486931324005127
    6. 'A' → logprob: -4.611931324005127
    7. 'idx' → logprob: -4.736931324005127
    8. ' #' → logprob: -5.111931324005127
    9. 'pos' → logprob: -5.111931324005127
    10. 'ab' → logprob: -5.236931324005127

Token 174: ' by' (ID: 656)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.30435046553611755
    2. '(' → logprob: -1.55435049533844
    3. 'AB' → logprob: -3.6793503761291504
    4. 'by' → logprob: -4.80435037612915
    5. '<|end|>' → logprob: -5.05435037612915
    6. '(key' → logprob: -5.17935037612915
    7. '(A' → logprob: -6.80435037612915
    8. '()
' → logprob: -7.17935037612915
    9. '(lambda' → logprob: -7.30435037612915
    10. '(L' → logprob: -7.55435037612915

Token 175: ' first' (ID: 1577)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.3923729360103607
    2. ' lambda' → logprob: -1.767372965812683
    3. 'AB' → logprob: -2.2673728466033936
    4. 'the' → logprob: -3.7673728466033936
    5. 'ab' → logprob: -5.142373085021973
    6. 'x' → logprob: -5.267373085021973
    7. ' the' → logprob: -5.267373085021973
    8. ' AB' → logprob: -5.517373085021973
    9. ' ab' → logprob: -6.642373085021973
    10. '=lambda' → logprob: -6.642373085021973

Token 176: ' one' (ID: 1001)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.48358964920043945
    2. '(' → logprob: -1.8585896492004395
    3. 'A' → logprob: -2.9835896492004395
    4. 'element' → logprob: -3.2335896492004395
    5. '[' → logprob: -3.4835896492004395
    6. ' element' → logprob: -3.8585896492004395
    7. '()' → logprob: -4.1085896492004395
    8. 'AB' → logprob: -4.7335896492004395
    9. 'token' → logprob: -4.7335896492004395
    10. ' (' → logprob: -4.9835896492004395

Token 177: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.38991624116897583
    2. 'A' → logprob: -1.514916181564331
    3. 'AB' → logprob: -2.889916181564331
    4. ',
' → logprob: -4.38991641998291
    5. '#' → logprob: -4.76491641998291
    6. ')' → logprob: -5.01491641998291
    7. 's' → logprob: -5.01491641998291
    8. '<|end|>' → logprob: -6.01491641998291
    9. '```' → logprob: -6.38991641998291
    10. 'for' → logprob: -7.01491641998291

Token 178: 'I' (ID: 40)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.3930439352989197
    2. 'x' → logprob: -2.2680439949035645
    3. 'key' → logprob: -2.2680439949035645
    4. ' lambda' → logprob: -3.1430439949035645
    5. 'AB' → logprob: -3.2680439949035645
    6. 'A' → logprob: -4.8930439949035645
    7. ' key' → logprob: -4.8930439949035645
    8. '0' → logprob: -5.2680439949035645
    9. 'the' → logprob: -5.5180439949035645
    10. '=lambda' → logprob: -6.2680439949035645

Token 179: ' guess' (ID: 11915)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3928426504135132
    2. '0' → logprob: -1.6428426504135132
    3. ')' → logprob: -2.6428427696228027
    4. 'n' → logprob: -2.7678427696228027
    5. ' think' → logprob: -2.8928427696228027
    6. 'nd' → logprob: -3.0178427696228027
    7. 'AB' → logprob: -3.2678427696228027
    8. 't' → logprob: -3.3928427696228027
    9. ' assume' → logprob: -3.5178427696228027
    10. 'D' → logprob: -3.6428427696228027

Token 180: ' that's' (ID: 10954)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04968586564064026
    2. ',' → logprob: -3.0496859550476074
    3. ',)' → logprob: -7.174685955047607
    4. ')
' → logprob: -9.29968547821045
    5. ' )' → logprob: -9.92468547821045
    6. '),' → logprob: -10.17468547821045
    7. '#' → logprob: -10.17468547821045
    8. '())' → logprob: -10.79968547821045
    9. '...)' → logprob: -11.79968547821045
    10. '[' → logprob: -12.04968547821045

Token 181: ' A' (ID: 355)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.7077499628067017
    2. 'A' → logprob: -1.3327499628067017
    3. 'a' → logprob: -1.9577499628067017
    4. 'start' → logprob: -3.582749843597412
    5. 'what' → logprob: -3.707749843597412
    6. ' the' → logprob: -4.457749843597412
    7. 'time' → logprob: -5.207749843597412
    8. ' A' → logprob: -5.332749843597412
    9. ' what' → logprob: -5.457749843597412
    10. 'x' → logprob: -5.832749843597412

Token 182: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005365899996832013
    2. ',' → logprob: -8.250536918640137
    3. ',)' → logprob: -8.750536918640137
    4. ' )' → logprob: -9.625536918640137
    5. ')#' → logprob: -10.875536918640137
    6. '[' → logprob: -11.375536918640137
    7. '),' → logprob: -12.375536918640137
    8. ')
' → logprob: -12.750536918640137
    9. ')...' → logprob: -12.750536918640137
    10. '#' → logprob: -13.125536918640137

Token 183: 'nums' (ID: 44465)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.020468775182962418
    2. 'from' → logprob: -5.270468711853027
    3. 'import' → logprob: -6.270468711853027
    4. '#' → logprob: -6.895468711853027
    5. 'starts' → logprob: -6.895468711853027
    6. 'prefix' → logprob: -7.020468711853027
    7. 'dp' → logprob: -7.020468711853027
    8. 'a' → logprob: -7.145468711853027
    9. 'L' → logprob: -7.145468711853027
    10. 'B' → logprob: -7.520468711853027

Token 184: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2624717950820923
    2. '=' → logprob: -1.5124717950820923
    3. 'A' → logprob: -4.762471675872803
    4. '_A' → logprob: -7.512471675872803
    5. '_a' → logprob: -7.762471675872803
    6. 's' → logprob: -8.262472152709961
    7. '=A' → logprob: -8.637472152709961
    8. ',' → logprob: -8.887472152709961
    9. '=[]' → logprob: -9.012472152709961
    10. '_' → logprob: -9.262472152709961

Token 185: ' [(' (ID: 43900)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.20394843816757202
    2. '[]' → logprob: -1.7039484977722168
    3. '[]
' → logprob: -7.828948497772217
    4. '[list' → logprob: -7.828948497772217
    5. ' [' → logprob: -8.328948020935059
    6. '[A' → logprob: -8.453948020935059
    7. '[s' → logprob: -8.578948020935059
    8. 'sorted' → logprob: -8.578948020935059
    9. '[len' → logprob: -8.703948020935059
    10. '[int' → logprob: -9.578948020935059

Token 186: '0' (ID: 15)
  Prédit: 'ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ab' → logprob: -0.45054805278778076
    2. 'a' → logprob: -1.2005480527877808
    3. 'x' → logprob: -2.9505481719970703
    4. 'AB' → logprob: -5.32554817199707
    5. 'b' → logprob: -6.07554817199707
    6. '0' → logprob: -6.70054817199707
    7. 'v' → logprob: -8.32554817199707
    8. 'item' → logprob: -8.95054817199707
    9. 'i' → logprob: -9.20054817199707
    10. 'e' → logprob: -9.70054817199707

Token 187: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014096579980105162
    2. ' ,' → logprob: -9.750141143798828
    3. ',)' → logprob: -10.250141143798828
    4. ')]' → logprob: -10.500141143798828
    5. ',-' → logprob: -11.750141143798828
    6. ',
' → logprob: -12.625141143798828
    7. '0' → logprob: -13.375141143798828
    8. ']' → logprob: -13.625141143798828
    9. ',B' → logprob: -14.750141143798828
    10. ',[' → logprob: -14.875141143798828

Token 188: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12378578633069992
    2. 'INF' → logprob: -2.8737857341766357
    3. '-' → logprob: -3.7487857341766357
    4. 'I' → logprob: -4.123785972595215
    5. ' ' → logprob: -4.248785972595215
    6. '1' → logprob: -6.873785972595215
    7. ' INF' → logprob: -6.998785972595215
    8. ')' → logprob: -7.123785972595215
    9. ' -' → logprob: -7.248785972595215
    10. ' I' → logprob: -7.748785972595215

Token 189: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.060606107115745544
    2. 'INF' → logprob: -3.810606002807617
    3. 'I' → logprob: -4.060606002807617
    4. '-' → logprob: -4.060606002807617
    5. ')' → logprob: -7.560606002807617
    6. 'float' → logprob: -7.935606002807617
    7. '1' → logprob: -8.060606002807617
    8. '10' → logprob: -8.310606002807617
    9. ' ' → logprob: -8.310606002807617
    10. 'AB' → logprob: -9.935606002807617

Token 190: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0016087667318060994
    2. ')' → logprob: -6.751608848571777
    3. ']' → logprob: -8.376608848571777
    4. ',' → logprob: -9.501608848571777
    5. ' )' → logprob: -9.626608848571777
    6. '),' → logprob: -10.126608848571777
    7. ')]
' → logprob: -11.376608848571777
    8. '')]' → logprob: -12.626608848571777
    9. '),(' → logprob: -13.626608848571777
    10. '0' → logprob: -13.626608848571777

Token 191: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3306881785392761
    2. '+' → logprob: -2.080688238143921
    3. '<|end|>' → logprob: -2.830688238143921
    4. '
' → logprob: -3.580688238143921
    5. ')' → logprob: -3.955688238143921
    6. 'for' → logprob: -4.455687999725342
    7. ' ' → logprob: -4.580687999725342
    8. ',
' → logprob: -4.955687999725342
    9. ' +' → logprob: -5.080687999725342
    10. ' for' → logprob: -5.955687999725342

Token 192: ' AB' (ID: 16520)
  Prédit: 'AB'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AB' → logprob: -0.0001462107611587271
    2. ' AB' → logprob: -9.00014591217041
    3. '[(' → logprob: -11.37514591217041
    4. 'tuple' → logprob: -12.62514591217041
    5. '[' → logprob: -12.75014591217041
    6. 'sorted' → logprob: -13.00014591217041
    7. 'ab' → logprob: -13.37514591217041
    8. '_AB' → logprob: -14.25014591217041
    9. '(' → logprob: -15.75014591217041
    10. '   ' → logprob: -16.250146865844727

Token 193: ' +' (ID: 659)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.47015753388404846
    2. '<|end|>' → logprob: -1.220157504081726
    3. 'for' → logprob: -2.8451576232910156
    4. '[' → logprob: -5.345157623291016
    5. '#' → logprob: -5.595157623291016
    6. ' for' → logprob: -5.720157623291016
    7. 'nums' → logprob: -6.345157623291016
    8. ',' → logprob: -7.345157623291016
    9. ')' → logprob: -7.470157623291016
    10. '<|end|>' → logprob: -7.470157623291016

Token 194: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.009267939254641533
    2. 'LR' → logprob: -4.759267807006836
    3. ' [(' → logprob: -7.759267807006836
    4. '[' → logprob: -9.259267807006836
    5. ' LR' → logprob: -10.134267807006836
    6. '[L' → logprob: -10.134267807006836
    7. '[((' → logprob: -10.384267807006836
    8. '([(' → logprob: -11.134267807006836
    9. '[]' → logprob: -13.884267807006836
    10. 'AB' → logprob: -14.134267807006836

Token 195: 'INF' (ID: 64358)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.7770476341247559
    2. 'INF' → logprob: -0.7770476341247559
    3. '10' → logprob: -2.652047634124756
    4. '(' → logprob: -5.152047634124756
    5. '(I' → logprob: -5.777047634124756
    6. 'IN' → logprob: -7.652047634124756
    7. '(IN' → logprob: -9.027048110961914
    8. 'INT' → logprob: -9.402048110961914
    9. 'int' → logprob: -9.527048110961914
    10. 'inf' → logprob: -9.777048110961914

Token 196: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002988776541315019
    2. ' ,' → logprob: -8.125298500061035
    3. ',int' → logprob: -14.125298500061035
    4. ',float' → logprob: -14.250298500061035
    5. ',
' → logprob: -14.500298500061035
    6. ',I' → logprob: -15.000298500061035
    7. ' ' → logprob: -15.875298500061035
    8. ',Integer' → logprob: -16.75029945373535
    9. '+' → logprob: -16.87529945373535
    10. '```' → logprob: -17.00029945373535

Token 197: ' ' (ID: 220)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.18869857490062714
    2. '0' → logprob: -1.8136985301971436
    3. ' INF' → logprob: -5.063698768615723
    4. ' ' → logprob: -6.188698768615723
    5. 'inf' → logprob: -8.063698768615723
    6. '_INF' → logprob: -9.563698768615723
    7. ')' → logprob: -9.688698768615723
    8. 'I' → logprob: -10.563698768615723
    9. '-INF' → logprob: -11.188698768615723
    10. 'IN' → logprob: -11.626198768615723

Token 198: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.25316885113716125
    2. 'INF' → logprob: -1.5031688213348389
    3. 'inf' → logprob: -7.878169059753418
    4. ' ' → logprob: -8.003169059753418
    5. 'I' → logprob: -8.253169059753418
    6. ' INF' → logprob: -9.003169059753418
    7. '-INF' → logprob: -10.003169059753418
    8. '_INF' → logprob: -10.503169059753418
    9. '1' → logprob: -10.753169059753418
    10. '-' → logprob: -11.253169059753418

Token 199: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00018744789122138172
    2. ')' → logprob: -8.875187873840332
    3. ' )' → logprob: -10.500187873840332
    4. ',' → logprob: -12.000187873840332
    5. ']' → logprob: -12.250187873840332
    6. '),' → logprob: -12.625187873840332
    7. ')]
' → logprob: -12.750187873840332
    8. '))' → logprob: -14.250187873840332
    9. ')],' → logprob: -14.500187873840332
    10. ')])' → logprob: -14.625187873840332

Token 200: 'A' (ID: 32)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3886038661003113
    2. 'ans' → logprob: -3.513603925704956
    3. 'res' → logprob: -3.638603925704956
    4. 'A' → logprob: -3.763603925704956
    5. 'acc' → logprob: -4.013603687286377
    6. 'pos' → logprob: -4.138603687286377
    7. 'prefix' → logprob: -4.138603687286377
    8. 'cum' → logprob: -4.513603687286377
    9. 'ac' → logprob: -4.638603687286377
    10. 'pre' → logprob: -4.763603687286377

Token 201: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8447104096412659
    2. ' =' → logprob: -1.344710350036621
    3. '=' → logprob: -2.344710350036621
    4. 's' → logprob: -2.594710350036621
    5. '_vals' → logprob: -2.719710350036621
    6. '_values' → logprob: -3.594710350036621
    7. '_idx' → logprob: -4.469710350036621
    8. 'vals' → logprob: -4.844710350036621
    9. 'nums' → logprob: -5.219710350036621
    10. 'idx' → logprob: -5.719710350036621

Token 202: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0038227529730647802
    2. ' [' → logprob: -6.3788228034973145
    3. '[len' → logprob: -7.3788228034973145
    4. '[num' → logprob: -7.5038228034973145
    5. '[A' → logprob: -8.128822326660156
    6. '[n' → logprob: -8.378822326660156
    7. '[N' → logprob: -10.003822326660156
    8. '[]' → logprob: -10.128822326660156
    9. '[s' → logprob: -10.128822326660156
    10. '[max' → logprob: -10.253822326660156

Token 203: 'xy' (ID: 6077)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.02332153171300888
    2. 'a' → logprob: -4.148321628570557
    3. 'ab' → logprob: -5.398321628570557
    4. 'num' → logprob: -6.148321628570557
    5. 'p' → logprob: -7.898321628570557
    6. 'xy' → logprob: -9.523321151733398
    7. 'v' → logprob: -9.773321151733398
    8. 'nums' → logprob: -10.648321151733398
    9. 't' → logprob: -10.773321151733398
    10. '0' → logprob: -11.023321151733398

Token 204: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.630610641877865e-06
    2. 'for' → logprob: -12.500006675720215
    3. ' for' → logprob: -13.875006675720215
    4. 'x' → logprob: -14.125006675720215
    5. ' [' → logprob: -14.625006675720215
    6. '0' → logprob: -15.125006675720215
    7. '
' → logprob: -15.375006675720215
    8. '[i' → logprob: -16.2500057220459
    9. '   ' → logprob: -18.0000057220459
    10. '[x' → logprob: -18.0000057220459

Token 205: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '[' → logprob: -16.875
    4. '1' → logprob: -17.875
    5. '
' → logprob: -17.875
    6. '   ' → logprob: -19.0
    7. 'for' → logprob: -19.625
    8. '۰' → logprob: -19.75
    9. '][' → logprob: -19.875
    10. '０' → logprob: -20.4375

Token 206: ']' (ID: 60)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.20143437385559082
    2. 'for' → logprob: -1.7014343738555908
    3. ' ' → logprob: -10.826434135437012
    4. ']' → logprob: -14.076434135437012
    5. ')' → logprob: -15.326434135437012
    6. '	for' → logprob: -15.576434135437012
    7. '   ' → logprob: -17.201435089111328
    8. '
' → logprob: -17.201435089111328
    9. ' 
' → logprob: -18.076435089111328
    10. '```' → logprob: -18.326435089111328

Token 207: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3132641315460205
    2. 'for' → logprob: -1.3132641315460205
    3. ' ' → logprob: -13.063263893127441
    4. '	for' → logprob: -15.813263893127441
    5. ')' → logprob: -16.438264846801758
    6. ']' → logprob: -17.563264846801758
    7. '   ' → logprob: -18.188264846801758
    8. ',' → logprob: -18.688264846801758
    9. '
' → logprob: -19.188264846801758
    10. ' ' → logprob: -19.313264846801758

Token 208: ' xy' (ID: 53634)
  Prédit: 'xy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xy' → logprob: -0.04548722878098488
    2. ' xy' → logprob: -3.17048716545105
    3. 'nums' → logprob: -6.170487403869629
    4. ' nums' → logprob: -8.670487403869629
    5. 'AB' → logprob: -9.295487403869629
    6. ' AB' → logprob: -9.920487403869629
    7. '_xy' → logprob: -9.920487403869629
    8. 'x' → logprob: -12.170487403869629
    9. ' ' → logprob: -12.545487403869629
    10. '_' → logprob: -12.545487403869629

Token 209: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.47409260272979736
    2. 'in' → logprob: -0.9740926027297974
    3. 'n' → logprob: -12.099092483520508
    4. ' ' → logprob: -12.724092483520508
    5. '
' → logprob: -13.474092483520508
    6. 'xy' → logprob: -14.099092483520508
    7. 'x' → logprob: -14.349092483520508
    8. 'y' → logprob: -14.349092483520508
    9. 's' → logprob: -14.474092483520508
    10. ']' → logprob: -14.474092483520508

Token 210: ' nums' (ID: 18117)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.4028461277484894
    2. 'AB' → logprob: -1.152846097946167
    3. ' nums' → logprob: -4.402846336364746
    4. ' AB' → logprob: -5.652846336364746
    5. '(nums' → logprob: -9.902846336364746
    6. '[' → logprob: -11.277846336364746
    7. ' ' → logprob: -11.777846336364746
    8. 'ab' → logprob: -12.152846336364746
    9. '(' → logprob: -12.277846336364746
    10. 'num' → logprob: -12.277846336364746

Token 211: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -8.93579563125968e-05
    2. ' ]' → logprob: -9.375089645385742
    3. ']
' → logprob: -12.500089645385742
    4. '()]' → logprob: -15.125089645385742
    5. '[' → logprob: -15.625089645385742
    6. ']

' → logprob: -16.000089645385742
    7. ']<' → logprob: -17.000089645385742
    8. ')]' → logprob: -17.250089645385742
    9. '];' → logprob: -17.500089645385742
    10. '],' → logprob: -17.625089645385742

Token 212: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.04633759707212448
    2. 'dp' → logprob: -3.546337604522705
    3. 'acc' → logprob: -6.296337604522705
    4. 'P' → logprob: -6.296337604522705
    5. 'S' → logprob: -6.671337604522705
    6. 'V' → logprob: -6.796337604522705
    7. 'psum' → logprob: -6.796337604522705
    8. 'ans' → logprob: -6.921337604522705
    9. 'X' → logprob: -7.671337604522705
    10. 'pref' → logprob: -7.671337604522705

Token 213: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3133765459060669
    2. ' =' → logprob: -1.313376545906067
    3. '=[' → logprob: -9.438376426696777
    4. '[' → logprob: -10.938376426696777
    5. ' =[' → logprob: -11.063376426696777
    6. ' ' → logprob: -14.313376426696777
    7. '=[]' → logprob: -15.063376426696777
    8. ' [' → logprob: -15.563376426696777
    9. '＝' → logprob: -16.188377380371094
    10. '>' → logprob: -16.313377380371094

Token 214: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.16025590896606445
    2. ' [' → logprob: -1.9102559089660645
    3. '[num' → logprob: -11.035255432128906
    4. '[x' → logprob: -11.910255432128906
    5. '[y' → logprob: -12.160255432128906
    6. ' ' → logprob: -13.410255432128906
    7. '[len' → logprob: -14.785255432128906
    8. '[np' → logprob: -15.410255432128906
    9. '[i' → logprob: -15.535255432128906
    10. '[arr' → logprob: -15.535255432128906

Token 215: 'xy' (ID: 6077)
  Prédit: 'xy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xy' → logprob: -1.1472419600977446e-06
    2. ' xy' → logprob: -13.750000953674316
    3. ' ' → logprob: -17.625001907348633
    4. '_xy' → logprob: -17.875001907348633
    5. '.xy' → logprob: -18.625001907348633
    6. '  ' → logprob: -19.000001907348633
    7. '   ' → logprob: -19.250001907348633
    8. 'xyz' → logprob: -19.250001907348633
    9. '0' → logprob: -19.500001907348633
    10. 'x' → logprob: -19.625001907348633

Token 216: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.7432603272027336e-06
    2. '1' → logprob: -14.125001907348633
    3. ' [' → logprob: -14.750001907348633
    4. 'for' → logprob: -15.625001907348633
    5. '
' → logprob: -16.625001907348633
    6. ' ' → logprob: -16.625001907348633
    7. '0' → logprob: -16.750001907348633
    8. '[
' → logprob: -17.250001907348633
    9. '][' → logprob: -17.250001907348633
    10. ' for' → logprob: -17.875001907348633

Token 217: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. '
' → logprob: -14.375000953674316
    3. '[' → logprob: -16.625
    4. '0' → logprob: -17.25
    5. ' ' → logprob: -17.375
    6. '

' → logprob: -18.5
    7. '
' → logprob: -18.875
    8. '```' → logprob: -19.25
    9. '１' → logprob: -19.25
    10. '   ' → logprob: -19.3125

Token 218: ']' (ID: 60)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4765348434448242
    2. ' for' → logprob: -0.9765348434448242
    3. ']' → logprob: -6.101534843444824
    4. ')' → logprob: -9.101534843444824
    5. ' ' → logprob: -9.351534843444824
    6. '	for' → logprob: -11.601534843444824
    7. ' ]' → logprob: -13.351534843444824
    8. '
' → logprob: -13.351534843444824
    9. '()' → logprob: -14.351534843444824
    10. '+' → logprob: -14.476534843444824

Token 219: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1269458532333374
    2. 'for' → logprob: -2.126945972442627
    3. ' ' → logprob: -11.626945495605469
    4. ']' → logprob: -12.001945495605469
    5. '	for' → logprob: -13.626945495605469
    6. '+' → logprob: -14.876945495605469
    7. '   ' → logprob: -15.251945495605469
    8. ')' → logprob: -15.376945495605469
    9. ',' → logprob: -15.501945495605469
    10. '[' → logprob: -15.876945495605469

Token 220: ' xy' (ID: 53634)
  Prédit: 'xy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xy' → logprob: -0.002987448126077652
    2. 'nums' → logprob: -5.877987384796143
    3. ' xy' → logprob: -8.6279878616333
    4. ' nums' → logprob: -13.1279878616333
    5. 'x' → logprob: -13.6279878616333
    6. 'xyz' → logprob: -15.7529878616333
    7. 'num' → logprob: -16.127986907958984
    8. '(nums' → logprob: -16.877986907958984
    9. '(x' → logprob: -17.752986907958984
    10. '
' → logprob: -18.127986907958984

Token 221: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.9639569520950317
    2. ' in' → logprob: -0.9639569520950317
    3. ']' → logprob: -1.4639569520950317
    4. '()]' → logprob: -5.213956832885742
    5. 'nums' → logprob: -8.713956832885742
    6. ']()' → logprob: -9.963956832885742
    7. '(' → logprob: -10.088956832885742
    8. '[' → logprob: -10.463956832885742
    9. ')]' → logprob: -10.463956832885742
    10. '()' → logprob: -10.713956832885742

Token 222: ' nums' (ID: 18117)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nums' → logprob: -1.2233183042553719e-05
    2. ' nums' → logprob: -11.375012397766113
    3. 'num' → logprob: -15.250012397766113
    4. 'range' → logprob: -15.750012397766113
    5. '(nums' → logprob: -16.125011444091797
    6. 'AB' → logprob: -16.250011444091797
    7. 'xy' → logprob: -16.375011444091797
    8. 'A' → logprob: -17.625011444091797
    9. '
' → logprob: -17.625011444091797
    10. 'numer' → logprob: -19.125011444091797

Token 223: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0014635729603469372
    2. ')' → logprob: -6.626463413238525
    3. ']
' → logprob: -9.376463890075684
    4. ')]' → logprob: -10.376463890075684
    5. ' ]' → logprob: -11.626463890075684
    6. '])' → logprob: -12.626463890075684
    7. ']

' → logprob: -12.751463890075684
    8. '#' → logprob: -13.376463890075684
    9. ',' → logprob: -13.501463890075684
    10. '()]' → logprob: -13.751463890075684

Token 224: '#' (ID: 2)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5510695576667786
    2. 'prefix' → logprob: -1.8010694980621338
    3. 'pref' → logprob: -2.051069498062134
    4. 'cum' → logprob: -3.676069498062134
    5. 'acc' → logprob: -4.176069736480713
    6. 'psum' → logprob: -4.176069736480713
    7. 'pre' → logprob: -4.551069736480713
    8. 'S' → logprob: -4.676069736480713
    9. 's' → logprob: -4.926069736480713
    10. 'DP' → logprob: -5.176069736480713

Token 225: ' Build' (ID: 10885)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.2936359643936157
    2. 'pref' → logprob: -2.543635845184326
    3. 'prefix' → logprob: -3.168635845184326
    4. 'cum' → logprob: -3.918635845184326
    5. 'acc' → logprob: -4.168635845184326
    6. 'ps' → logprob: -4.418635845184326
    7. 'psum' → logprob: -4.418635845184326
    8. 's' → logprob: -4.668635845184326
    9. 'pre' → logprob: -5.168635845184326
    10. '#' → logprob: -5.293635845184326

Token 226: ' some' (ID: 1236)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.49584174156188965
    2. 'pref' → logprob: -1.9958417415618896
    3. 'acc' → logprob: -2.6208417415618896
    4. 'seg' → logprob: -2.8708417415618896
    5. 'prefix' → logprob: -3.4958417415618896
    6. 'psum' → logprob: -4.245841979980469
    7. 'left' → logprob: -4.870841979980469
    8. 'ps' → logprob: -4.995841979980469
    9. 'cum' → logprob: -4.995841979980469
    10. 'pre' → logprob: -5.370841979980469

Token 227: ' kind' (ID: 3675)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.08867496997117996
    2. 'acc' → logprob: -3.588675022125244
    3. 'prefix' → logprob: -3.588675022125244
    4. ' dp' → logprob: -5.338675022125244
    5. 'pref' → logprob: -5.338675022125244
    6. '#' → logprob: -6.213675022125244
    7. 'seg' → logprob: -6.338675022125244
    8. 'stack' → logprob: -6.463675022125244
    9. 'left' → logprob: -6.713675022125244
    10. 'DP' → logprob: -7.088675022125244

Token 228: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.2846316397190094
    2. ' of' → logprob: -1.409631609916687
    3. '#' → logprob: -7.409631729125977
    4. 's' → logprob: -7.409631729125977
    5. '_of' → logprob: -7.409631729125977
    6. '   ' → logprob: -8.034631729125977
    7. '
' → logprob: -8.034631729125977
    8. 'prefix' → logprob: -8.784631729125977
    9. 'def' → logprob: -9.409631729125977
    10. ' ' → logprob: -9.409631729125977

Token 229: ' graph' (ID: 7465)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5048443078994751
    2. 'segment' → logprob: -2.3798441886901855
    3. 'prefix' → logprob: -2.3798441886901855
    4. 'seg' → logprob: -2.6298441886901855
    5. 's' → logprob: -3.5048441886901855
    6. ' dp' → logprob: -3.8798441886901855
    7. ' seg' → logprob: -4.0048441886901855
    8. ' segment' → logprob: -4.5048441886901855
    9. 'pref' → logprob: -4.5048441886901855
    10. 'acc' → logprob: -4.6298441886901855

Token 230: ' or' (ID: 503)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.16112667322158813
    2. 'G' → logprob: -2.5361266136169434
    3. 'g' → logprob: -3.4111266136169434
    4. 'edges' → logprob: -4.036126613616943
    5. 'adj' → logprob: -4.411126613616943
    6. 'E' → logprob: -6.161126613616943
    7. ' graph' → logprob: -6.786126613616943
    8. 'from' → logprob: -7.536126613616943
    9. 'gr' → logprob: -7.536126613616943
    10. 'nodes' → logprob: -8.161127090454102

Token 231: ' something' (ID: 3543)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.21946433186531067
    2. 'adj' → logprob: -2.9694643020629883
    3. 'tree' → logprob: -3.4694643020629883
    4. 'segment' → logprob: -3.9694643020629883
    5. ' dp' → logprob: -4.219464302062988
    6. 'DP' → logprob: -4.469464302062988
    7. 'interval' → logprob: -4.469464302062988
    8. 'array' → logprob: -4.719464302062988
    9. 'edges' → logprob: -4.844464302062988
    10. 'data' → logprob: -5.219464302062988

Token 232: ',' (ID: 11)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.1946992427110672
    2. 'adj' → logprob: -2.819699287414551
    3. 'g' → logprob: -2.944699287414551
    4. 'G' → logprob: -3.569699287414551
    5. 'edges' → logprob: -3.694699287414551
    6. 'from' → logprob: -4.944699287414551
    7. 'E' → logprob: -6.694699287414551
    8. '#' → logprob: -7.444699287414551
    9. 'gr' → logprob: -7.694699287414551
    10. 'import' → logprob: -7.819699287414551

Token 233: ' not' (ID: 625)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'G' → logprob: -1.463603138923645
    2. 'g' → logprob: -1.713603138923645
    3. 'adj' → logprob: -1.838603138923645
    4. 'edges' → logprob: -2.2136030197143555
    5. '#' → logprob: -2.3386030197143555
    6. 'dp' → logprob: -2.4636030197143555
    7. 'graph' → logprob: -2.5886030197143555
    8. 'E' → logprob: -3.8386030197143555
    9. 'gr' → logprob: -4.4636030197143555
    10. 'to' → logprob: -5.7136030197143555

Token 234: ' sure' (ID: 3239)
  Prédit: 'sure'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sure' → logprob: -0.4231143593788147
    2. 'quite' → logprob: -2.04811429977417
    3. 'exact' → logprob: -2.92311429977417
    4. 'really' → logprob: -3.17311429977417
    5. 'ob' → logprob: -3.67311429977417
    6. 'shown' → logprob: -4.29811429977417
    7. 'finished' → logprob: -4.29811429977417
    8. 'clear' → logprob: -4.42311429977417
    9. 'used' → logprob: -4.67311429977417
    10. 'seen' → logprob: -4.67311429977417

Token 235: ' what' (ID: 1412)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.8654495477676392
    2. 'G' → logprob: -2.1154494285583496
    3. 'g' → logprob: -2.1154494285583496
    4. 'adj' → logprob: -2.1154494285583496
    5. 'edges' → logprob: -2.4904494285583496
    6. 'dp' → logprob: -2.4904494285583496
    7. 'next' → logprob: -4.61544942855835
    8. 'E' → logprob: -4.99044942855835
    9. 'from' → logprob: -5.24044942855835
    10. 'dist' → logprob: -5.36544942855835

Token 236: ' they're' (ID: 18940)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.7937672138214111
    2. 'adj' → logprob: -1.9187672138214111
    3. 'edges' → logprob: -2.043767213821411
    4. 'G' → logprob: -2.168767213821411
    5. 'g' → logprob: -2.418767213821411
    6. 'dp' → logprob: -3.793767213821411
    7. 'next' → logprob: -4.918766975402832
    8. 'E' → logprob: -5.043766975402832
    9. 'from' → logprob: -5.418766975402832
    10. 'gr' → logprob: -5.793766975402832

Token 237: ' really' (ID: 2715)
  Prédit: 'doing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'doing' → logprob: -0.45186251401901245
    2. 'trying' → logprob: -2.0768625736236572
    3. 'asking' → logprob: -2.3268625736236572
    4. 'for' → logprob: -3.8268625736236572
    5. 'supp' → logprob: -4.076862335205078
    6. ' doing' → logprob: -4.451862335205078
    7. ' trying' → logprob: -4.576862335205078
    8. ' asking' → logprob: -4.701862335205078
    9. 'going' → logprob: -4.701862335205078
    10. '#' → logprob: -4.951862335205078

Token 238: ' doing' (ID: 5306)
  Prédit: 'doing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'doing' → logprob: -0.0025188231375068426
    2. 'trying' → logprob: -6.877518653869629
    3. ' doing' → logprob: -7.002518653869629
    4. 'going' → logprob: -8.752518653869629
    5. 'code' → logprob: -9.252518653869629
    6. 'building' → logprob: -9.377518653869629
    7. 'up' → logprob: -9.877518653869629
    8. '```' → logprob: -10.252518653869629
    9. 'using' → logprob: -10.877518653869629
    10. '#' → logprob: -10.877518653869629

Token 239: ' but' (ID: 889)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -1.1685535907745361
    2. 'G' → logprob: -1.2935535907745361
    3. 'edges' → logprob: -1.9185535907745361
    4. 'adj' → logprob: -2.543553590774536
    5. 'g' → logprob: -2.793553590774536
    6. 'dp' → logprob: -2.918553590774536
    7. 'E' → logprob: -3.793553590774536
    8. 'from' → logprob: -5.043553352355957
    9. 'dist' → logprob: -5.168553352355957
    10. 'to' → logprob: -5.418553352355957

Token 240: ' here' (ID: 2105)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.686776876449585
    2. 'dp' → logprob: -1.811776876449585
    3. 'edges' → logprob: -1.811776876449585
    4. 'G' → logprob: -2.061776876449585
    5. 'g' → logprob: -2.561776876449585
    6. 'adj' → logprob: -2.811776876449585
    7. 'E' → logprob: -3.311776876449585
    8. 'stack' → logprob: -3.686776876449585
    9. 'dist' → logprob: -3.811776876449585
    10. '
' → logprob: -3.936776876449585

Token 241: ' we' (ID: 581)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -1.4436893463134766
    2. 'g' → logprob: -1.5686893463134766
    3. 'edges' → logprob: -1.5686893463134766
    4. 'G' → logprob: -2.3186893463134766
    5. 'graph' → logprob: -2.6936893463134766
    6. 'E' → logprob: -3.0686893463134766
    7. 'next' → logprob: -3.0686893463134766
    8. 'n' → logprob: -4.068689346313477
    9. 'dp' → logprob: -4.818689346313477
    10. 'dist' → logprob: -4.943689346313477

Token 242: ' go' (ID: 810)
  Prédit: 'go'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'go' → logprob: -0.1278042495250702
    2. ' go' → logprob: -2.1278042793273926
    3. ' goes' → logprob: -8.752803802490234
    4. '...' → logprob: -9.002803802490234
    5. '
' → logprob: -9.252803802490234
    6. 'se' → logprob: -9.877803802490234
    7. '```' → logprob: -9.877803802490234
    8. 'continue' → logprob: -10.377803802490234
    9. '_go' → logprob: -10.377803802490234
    10. 'try' → logprob: -10.502803802490234

Token 243: '
' (ID: 198)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'G' → logprob: -1.1100592613220215
    2. 'dp' → logprob: -1.6100592613220215
    3. 'graph' → logprob: -1.7350592613220215
    4. 'edges' → logprob: -2.6100592613220215
    5. 'g' → logprob: -2.8600592613220215
    6. 'adj' → logprob: -3.1100592613220215
    7. 'E' → logprob: -3.6100592613220215
    8. 'dist' → logprob: -4.2350592613220215
    9. 'gr' → logprob: -4.6100592613220215
    10. 'next' → logprob: -4.7350592613220215

Token 244: 'sz' (ID: 13849)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'G' → logprob: -1.130793571472168
    2. 'graph' → logprob: -1.630793571472168
    3. 'g' → logprob: -2.005793571472168
    4. 'edges' → logprob: -2.380793571472168
    5. 'adj' → logprob: -2.505793571472168
    6. 'dp' → logprob: -2.630793571472168
    7. 'E' → logprob: -3.630793571472168
    8. 'to' → logprob: -4.505793571472168
    9. 'gr' → logprob: -4.505793571472168
    10. 'n' → logprob: -5.380793571472168

Token 245: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5257828235626221
    2. '=' → logprob: -0.9007828235626221
    3. 's' → logprob: -7.150782585144043
    4. 't' → logprob: -7.275782585144043
    5. '=len' → logprob: -8.025782585144043
    6. '=s' → logprob: -8.775782585144043
    7. ' ' → logprob: -9.400782585144043
    8. 'x' → logprob: -9.525782585144043
    9. '=size' → logprob: -9.650782585144043
    10. 'z' → logprob: -9.650782585144043

Token 246: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.3809106945991516
    2. 'N' → logprob: -1.2559106349945068
    3. ' len' → logprob: -4.505910873413086
    4. ' N' → logprob: -4.880910873413086
    5. '[N' → logprob: -5.255910873413086
    6. '[' → logprob: -5.380910873413086
    7. '[len' → logprob: -6.505910873413086
    8. '2' → logprob: -7.380910873413086
    9. ' [' → logprob: -7.880910873413086
    10. '(len' → logprob: -8.755910873413086

Token 247: '(nums' (ID: 40372)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.04070988669991493
    2. '(nums' → logprob: -3.290709972381592
    3. '(' → logprob: -6.290709972381592
    4. '(B' → logprob: -7.165709972381592
    5. 'A' → logprob: -10.790709495544434
    6. 'nums' → logprob: -11.415709495544434
    7. '(num' → logprob: -12.915709495544434
    8. '(NUM' → logprob: -13.665709495544434
    9. '(N' → logprob: -13.915709495544434
    10. 'AB' → logprob: -14.290709495544434

Token 248: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00013905855303164572
    2. ')
' → logprob: -9.000139236450195
    3. ' )' → logprob: -11.250139236450195
    4. ')-' → logprob: -13.250139236450195
    5. ')#' → logprob: -15.500139236450195
    6. ')

' → logprob: -15.625139236450195
    7. ')`' → logprob: -16.125139236450195
    8. '#' → logprob: -16.250139236450195
    9. ' ' → logprob: -16.500139236450195
    10. '))' → logprob: -16.875139236450195

Token 249: 'graph' (ID: 7978)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -1.5375924110412598
    2. 'g' → logprob: -1.5375924110412598
    3. 'graph' → logprob: -2.0375924110412598
    4. 'adj' → logprob: -2.1625924110412598
    5. 'dp' → logprob: -2.2875924110412598
    6. 'edges' → logprob: -2.5375924110412598
    7. 'to' → logprob: -3.4125924110412598
    8. 'E' → logprob: -3.9125924110412598
    9. 'gr' → logprob: -4.53759241104126
    10. 'dist' → logprob: -4.53759241104126

Token 250: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4287208318710327
    2. ' =' → logprob: -1.0537208318710327
    3. '=[]' → logprob: -11.553720474243164
    4. '[' → logprob: -12.428720474243164
    5. '=[' → logprob: -12.803720474243164
    6. ' =[' → logprob: -13.428720474243164
    7. ' ' → logprob: -14.678720474243164
    8. ']' → logprob: -14.678720474243164
    9. ')' → logprob: -14.928720474243164
    10. '=[[' → logprob: -15.053720474243164

Token 251: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00045033416245132685
    2. ' [[]' → logprob: -7.750450134277344
    3. '{' → logprob: -11.000450134277344
    4. '[[' → logprob: -13.375450134277344
    5. '[]' → logprob: -13.750450134277344
    6. '{}' → logprob: -15.625450134277344
    7. 'default' → logprob: -15.875450134277344
    8. '[-' → logprob: -17.250450134277344
    9. '[:]' → logprob: -17.750450134277344
    10. '[len' → logprob: -17.875450134277344

Token 252: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04878879711031914
    2. ' for' → logprob: -3.0487887859344482
    3. ')' → logprob: -9.298789024353027
    4. ']' → logprob: -9.798789024353027
    5. '(sz' → logprob: -10.298789024353027
    6. '
' → logprob: -12.048789024353027
    7. ',' → logprob: -12.048789024353027
    8. 'sz' → logprob: -12.298789024353027
    9. ' ' → logprob: -13.798789024353027
    10. '	for' → logprob: -13.798789024353027

Token 253: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.000954098126385361
    2. ' _' → logprob: -7.0009541511535645
    3. '_range' → logprob: -10.375953674316406
    4. ' range' → logprob: -12.250953674316406
    5. 'range' → logprob: -12.750953674316406
    6. '_in' → logprob: -13.750953674316406
    7. '_i' → logprob: -13.875953674316406
    8. '_s' → logprob: -14.250953674316406
    9. '_x' → logprob: -15.375953674316406
    10. '_sz' → logprob: -15.750953674316406

Token 254: ' in' (ID: 306)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0952539443969727
    2. 'in' → logprob: -1.0952539443969727
    3. 'range' → logprob: -1.3452539443969727
    4. ' in' → logprob: -2.9702539443969727
    5. ' range' → logprob: -3.9702539443969727
    6. 'i' → logprob: -8.470253944396973
    7. ' _' → logprob: -9.345253944396973
    8. '0' → logprob: -9.845253944396973
    9. '_range' → logprob: -10.095253944396973
    10. ' ' → logprob: -10.345253944396973

Token 255: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04861053079366684
    2. ' range' → logprob: -3.0486104488372803
    3. '(range' → logprob: -10.67361068725586
    4. '	range' → logprob: -18.17361068725586
    5. '_range' → logprob: -19.04861068725586
    6. 'in' → logprob: -19.17361068725586
    7. ' ' → logprob: -19.29861068725586
    8. '(' → logprob: -19.29861068725586
    9. '   ' → logprob: -19.42361068725586
    10. 'r' → logprob: -19.54861068725586

Token 256: '(sz' (ID: 80788)
  Prédit: '(sz'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sz' → logprob: 0.0
    2. 'sz' → logprob: -17.25
    3. '(' → logprob: -17.625
    4. '(range' → logprob: -19.75
    5. ' (' → logprob: -19.875
    6. ' sz' → logprob: -20.125
    7. 'range' → logprob: -20.25
    8. '(sk' → logprob: -21.625
    9. '((' → logprob: -22.0
    10. '(sr' → logprob: -22.25

Token 257: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -2.165027217415627e-05
    2. ')' → logprob: -11.125021934509277
    3. ']' → logprob: -12.375021934509277
    4. ')]
' → logprob: -13.375021934509277
    5. '])' → logprob: -15.000021934509277
    6. '])]' → logprob: -15.500021934509277
    7. ')],' → logprob: -15.625021934509277
    8. ')]

' → logprob: -16.12502098083496
    9. ' )' → logprob: -16.37502098083496
    10. ')])' → logprob: -16.50002098083496

Token 258: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0018041764851659536
    2. 'prev' → logprob: -7.501804351806641
    3. 'i' → logprob: -8.37680435180664
    4. ' for' → logprob: -8.50180435180664
    5. 'stack' → logprob: -9.00180435180664
    6. '#' → logprob: -9.00180435180664
    7. 'last' → logprob: -9.25180435180664
    8. 'cur' → logprob: -9.75180435180664
    9. 'max' → logprob: -10.00180435180664
    10. 'dp' → logprob: -10.00180435180664

Token 259: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.013683279976248741
    2. 'j' → logprob: -6.013683319091797
    3. 'prev' → logprob: -6.013683319091797
    4. 'last' → logprob: -6.138683319091797
    5. 'stack' → logprob: -6.263683319091797
    6. 'i' → logprob: -7.013683319091797
    7. 'cur' → logprob: -7.263683319091797
    8. 'idx' → logprob: -7.638683319091797
    9. 'ptr' → logprob: -7.763683319091797
    10. 'dp' → logprob: -8.013683319091797

Token 260: ' each' (ID: 2454)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.35038042068481445
    2. ' i' → logprob: -1.2253804206848145
    3. 'a' → logprob: -6.9753804206848145
    4. ' a' → logprob: -8.475379943847656
    5. '(i' → logprob: -8.475379943847656
    6. 'u' → logprob: -8.850379943847656
    7. 'x' → logprob: -9.475379943847656
    8. ' u' → logprob: -9.725379943847656
    9. '_i' → logprob: -9.850379943847656
    10. ' x' → logprob: -10.850379943847656

Token 261: ' LR' (ID: 85167)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.006420594174414873
    2. ' i' → logprob: -5.131420612335205
    3. 'u' → logprob: -8.381420135498047
    4. 'a' → logprob: -9.381420135498047
    5. '(i' → logprob: -9.756420135498047
    6. 'x' → logprob: -10.256420135498047
    7. 'idx' → logprob: -10.506420135498047
    8. 'v' → logprob: -11.506420135498047
    9. '_i' → logprob: -12.256420135498047
    10. 'j' → logprob: -12.381420135498047

Token 262: ' we' (ID: 581)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4974437355995178
    2. 'in' → logprob: -0.9974437355995178
    3. 'i' → logprob: -4.622443675994873
    4. ',' → logprob: -5.122443675994873
    5. 'pair' → logprob: -6.122443675994873
    6. 'for' → logprob: -6.372443675994873
    7. '_pair' → logprob: -6.872443675994873
    8. '_i' → logprob: -7.747443675994873
    9. 'range' → logprob: -7.872443675994873
    10. ' i' → logprob: -8.372444152832031

Token 263: ' mess' (ID: 13017)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5208460092544556
    2. ' in' → logprob: -1.6458460092544556
    3. ' for' → logprob: -2.395845890045166
    4. 'in' → logprob: -2.770845890045166
    5. ':' → logprob: -2.895845890045166
    6. ',' → logprob: -6.395845890045166
    7. '...' → logprob: -8.020846366882324
    8. '   ' → logprob: -8.145846366882324
    9. ':
' → logprob: -8.270846366882324
    10. ' =' → logprob: -8.520846366882324

Token 264: ' with' (ID: 483)
  Prédit: 'with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'with' → logprob: -0.3278301954269409
    2. ' with' → logprob: -1.827830195426941
    3. 'age' → logprob: -2.8278303146362305
    4. 'for' → logprob: -3.4528303146362305
    5. '   ' → logprob: -4.8278303146362305
    6. ' for' → logprob: -5.0778303146362305
    7. 'ed' → logprob: -5.8278303146362305
    8. ' in' → logprob: -5.9528303146362305
    9. '.append' → logprob: -6.3278303146362305
    10. ' =' → logprob: -6.3278303146362305

Token 265: ' the' (ID: 290)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.0422024726867676
    2. 'lr' → logprob: -1.2922024726867676
    3. 'LR' → logprob: -1.9172024726867676
    4. 'l' → logprob: -2.5422024726867676
    5. ' lr' → logprob: -2.6672024726867676
    6. ' range' → logprob: -3.6672024726867676
    7. ' LR' → logprob: -4.042202472686768
    8. 'for' → logprob: -4.667202472686768
    9. 'L' → logprob: -4.792202472686768
    10. ' l' → logprob: -5.542202472686768

Token 266: ' graph' (ID: 7465)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.42995232343673706
    2. 'l' → logprob: -2.054952383041382
    3. ' L' → logprob: -2.929952383041382
    4. 'graph' → logprob: -3.304952383041382
    5. 'for' → logprob: -3.429952383041382
    6. 'range' → logprob: -3.679952383041382
    7. ' graph' → logprob: -3.929952383041382
    8. 'LR' → logprob: -4.554952144622803
    9. ' range' → logprob: -4.679952144622803
    10. 'i' → logprob: -4.804952144622803

Token 267: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0027065619360655546
    2. ' for' → logprob: -6.002706527709961
    3. '
' → logprob: -8.377706527709961
    4. ',' → logprob: -15.627706527709961
    5. ' 
' → logprob: -15.752706527709961
    6. '<|end|>' → logprob: -15.752706527709961
    7. '  
' → logprob: -16.50270652770996
    8. '```' → logprob: -16.62770652770996
    9. ':' → logprob: -16.87770652770996
    10. '	for' → logprob: -17.00270652770996

Token 268: ' it's' (ID: 4275)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00103352265432477
    2. ' for' → logprob: -6.876033306121826
    3. '
' → logprob: -14.251033782958984
    4. '#' → logprob: -17.001033782958984
    5. '	for' → logprob: -17.001033782958984
    6. ' 
' → logprob: -18.001033782958984
    7. ' ' → logprob: -19.001033782958984
    8. 'idx' → logprob: -19.751033782958984
    9. '

' → logprob: -19.876033782958984
    10. '```' → logprob: -19.876033782958984

Token 269: ' a' (ID: 261)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -1.244162917137146
    2. 'like' → logprob: -1.869162917137146
    3. 'a' → logprob: -2.1191630363464355
    4. 'probably' → logprob: -2.2441630363464355
    5. ' not' → logprob: -2.8691630363464355
    6. ' like' → logprob: -2.9941630363464355
    7. 'for' → logprob: -3.6191630363464355
    8. ' a' → logprob: -3.8691630363464355
    9. ' probably' → logprob: -4.1191630363464355
    10. 'likely' → logprob: -4.3691630363464355

Token 270: ' bit' (ID: 3546)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.21614214777946472
    2. 'range' → logprob: -2.091142177581787
    3. 'bit' → logprob: -3.841142177581787
    4. ' for' → logprob: -4.466142177581787
    5. 'b' → logprob: -4.716142177581787
    6. 'direct' → logprob: -5.591142177581787
    7. 'loop' → logprob: -5.966142177581787
    8. ' range' → logprob: -5.966142177581787
    9. ' bit' → logprob: -6.091142177581787
    10. 'und' → logprob: -6.341142177581787

Token 271: ' ugly' (ID: 50629)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.42999187111854553
    2. ' for' → logprob: -1.0549918413162231
    3. 'ind' → logprob: -8.429991722106934
    4. 'indent' → logprob: -8.804991722106934
    5. '```' → logprob: -9.179991722106934
    6. 'in' → logprob: -9.554991722106934
    7. 'counter' → logprob: -9.804991722106934
    8. '   ' → logprob: -10.054991722106934
    9. '0' → logprob: -10.054991722106934
    10. ' in' → logprob: -10.304991722106934

Token 272: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0038893844466656446
    2. ' for' → logprob: -5.753889560699463
    3. '
' → logprob: -7.253889560699463
    4. '<|end|>' → logprob: -12.878889083862305
    5. ',' → logprob: -15.128889083862305
    6. ' 
' → logprob: -15.253889083862305
    7. '```' → logprob: -15.503889083862305
    8. '<|end|>' → logprob: -16.503889083862305
    9. '  
' → logprob: -16.628889083862305
    10. '' → logprob: -16.753889083862305

Token 273: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0002967320033349097
    2. ' for' → logprob: -8.125296592712402
    3. '
' → logprob: -14.250296592712402
    4. '	for' → logprob: -16.87529754638672
    5. ' 
' → logprob: -18.50029754638672
    6. '```' → logprob: -19.25029754638672
    7. '    
' → logprob: -19.62529754638672
    8. '<|end|>' → logprob: -20.25029754638672
    9. 'idx' → logprob: -20.37529754638672
    10. '#' → logprob: -20.50029754638672

Token 274: ' i' (ID: 575)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.055711567401885986
    2. 'L' → logprob: -3.055711507797241
    3. ' l' → logprob: -5.43071174621582
    4. 'i' → logprob: -6.55571174621582
    5. ' L' → logprob: -7.68071174621582
    6. '(l' → logprob: -8.18071174621582
    7. '_l' → logprob: -9.05571174621582
    8. 'li' → logprob: -9.18071174621582
    9. '(L' → logprob: -9.18071174621582
    10. '_L' → logprob: -10.18071174621582

Token 275: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6827486157417297
    2. ' in' → logprob: -1.057748556137085
    3. ',' → logprob: -1.932748556137085
    4. ' ,' → logprob: -6.057748794555664
    5. '_,' → logprob: -8.682748794555664
    6. ' ' → logprob: -8.807748794555664
    7. ',_' → logprob: -10.557748794555664
    8. 'range' → logprob: -10.682748794555664
    9. ',l' → logprob: -11.057748794555664
    10. ',L' → logprob: -11.307748794555664

Token 276: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.007820967584848404
    2. ' range' → logprob: -4.882821083068848
    3. 'LR' → logprob: -8.507821083068848
    4. ' LR' → logprob: -12.757821083068848
    5. '(range' → logprob: -13.257821083068848
    6. 'in' → logprob: -13.257821083068848
    7. '0' → logprob: -13.382821083068848
    8. '   ' → logprob: -13.882821083068848
    9. 'rang' → logprob: -14.257821083068848
    10. ' ' → logprob: -14.382821083068848

Token 277: '(M' (ID: 6103)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.35129112005233765
    2. ' M' → logprob: -1.2262911796569824
    3. '(M' → logprob: -5.976291179656982
    4. '   ' → logprob: -8.851290702819824
    5. 'len' → logprob: -9.476290702819824
    6. '(' → logprob: -11.101290702819824
    7. ',' → logprob: -11.226290702819824
    8. ' ' → logprob: -11.351290702819824
    9. ' len' → logprob: -11.851290702819824
    10. '(len' → logprob: -11.851290702819824

Token 278: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.34931015968322754
    2. '):
' → logprob: -1.2243101596832275
    3. ' ):' → logprob: -7.849309921264648
    4. ')' → logprob: -8.474309921264648
    5. ' ):
' → logprob: -9.224309921264648
    6. ':' → logprob: -9.224309921264648
    7. ',' → logprob: -10.099309921264648
    8. '):
' → logprob: -11.349309921264648
    9. '   ' → logprob: -11.849309921264648
    10. '+' → logprob: -12.974309921264648

Token 279: '   ' (ID: 271)
  Prédit: ' L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' L' → logprob: -0.48669493198394775
    2. ' l' → logprob: -1.7366949319839478
    3. '   ' → logprob: -2.111694812774658
    4. 'L' → logprob: -2.861694812774658
    5. 'l' → logprob: -3.611694812774658
    6. 'a' → logprob: -6.486694812774658
    7. ' a' → logprob: -6.611694812774658
    8. ',' → logprob: -8.486695289611816
    9. '	L' → logprob: -8.986695289611816
    10. ' s' → logprob: -9.111695289611816

Token 280: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -0.1617104560136795
    2. 'L' → logprob: -1.911710500717163
    3. 'a' → logprob: -6.786710262298584
    4. 'left' → logprob: -9.661710739135742
    5. 'x' → logprob: -10.036710739135742
    6. '   ' → logprob: -10.286710739135742
    7. ' l' → logprob: -10.286710739135742
    8. 'li' → logprob: -10.286710739135742
    9. 'from' → logprob: -10.411710739135742
    10. 's' → logprob: -10.411710739135742

Token 281: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004991931840777397
    2. ' ,' → logprob: -5.3799920082092285
    3. ',r' → logprob: -8.62999153137207
    4. ' =' → logprob: -9.75499153137207
    5. '_,' → logprob: -10.00499153137207
    6. ',l' → logprob: -10.25499153137207
    7. 'r' → logprob: -10.75499153137207
    8. '=' → logprob: -11.25499153137207
    9. ' ' → logprob: -12.87999153137207
    10. 'o' → logprob: -13.00499153137207

Token 282: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.029755238443613052
    2. ' r' → logprob: -3.5297553539276123
    3. ',r' → logprob: -13.404755592346191
    4. ' =' → logprob: -14.404755592346191
    5. 'R' → logprob: -14.404755592346191
    6. ' ' → logprob: -14.529755592346191
    7. '=r' → logprob: -15.154755592346191
    8. '=' → logprob: -15.279755592346191
    9. ',' → logprob: -15.404755592346191
    10. '_r' → logprob: -15.529755592346191

Token 283: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47827601432800293
    2. ' =' → logprob: -0.9782760143280029
    3. ',' → logprob: -5.478276252746582
    4. '=l' → logprob: -12.603276252746582
    5. ' ' → logprob: -12.728276252746582
    6. '   ' → logprob: -13.228276252746582
    7. ',l' → logprob: -13.478276252746582
    8. ' ,' → logprob: -13.853276252746582
    9. '=line' → logprob: -14.728276252746582
    10. '=r' → logprob: -14.728276252746582

Token 284: ' LR' (ID: 85167)
  Prédit: 'LR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LR' → logprob: -0.10022381693124771
    2. ' LR' → logprob: -2.3502237796783447
    3. '   ' → logprob: -11.850223541259766
    4. 'L' → logprob: -12.350223541259766
    5. ' ' → logprob: -13.225223541259766
    6. ' L' → logprob: -13.725223541259766
    7. '(L' → logprob: -13.975223541259766
    8. '    ' → logprob: -14.225223541259766
    9. '	L' → logprob: -14.475223541259766
    10. '0' → logprob: -15.350223541259766

Token 285: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0003100791363976896
    2. '][' → logprob: -8.375309944152832
    3. ' =' → logprob: -10.875309944152832
    4. '[' → logprob: -11.125309944152832
    5. '   ' → logprob: -11.500309944152832
    6. '=' → logprob: -11.875309944152832
    7. ']' → logprob: -11.875309944152832
    8. ' [' → logprob: -12.250309944152832
    9. ')[' → logprob: -12.625309944152832
    10. '[s' → logprob: -12.750309944152832

Token 286: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.11072860658168793
    2. ']
' → logprob: -2.3607285022735596
    3. '[' → logprob: -5.235728740692139
    4. ')' → logprob: -5.735728740692139
    5. ']
' → logprob: -7.485728740692139
    6. '][' → logprob: -7.610728740692139
    7. ')
' → logprob: -7.985728740692139
    8. '   ' → logprob: -8.61072826385498
    9. ' ]' → logprob: -9.11072826385498
    10. '])' → logprob: -9.98572826385498

Token 287: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004081247374415398
    2. 'l' → logprob: -5.8790812492370605
    3. 'idx' → logprob: -8.129080772399902
    4. 'pos' → logprob: -8.629080772399902
    5. '    
' → logprob: -9.254080772399902
    6. 'from' → logprob: -9.254080772399902
    7. 'a' → logprob: -9.504080772399902
    8. 'u' → logprob: -9.504080772399902
    9. 'left' → logprob: -10.004080772399902
    10. ' l' → logprob: -10.129080772399902

Token 288: ' v' (ID: 323)
  Prédit: 'li'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'li' → logprob: -0.52651047706604
    2. 'l' → logprob: -1.40151047706604
    3. 'left' → logprob: -3.27651047706604
    4. 'x' → logprob: -3.40151047706604
    5. 'u' → logprob: -3.65151047706604
    6. 'idx' → logprob: -4.276510238647461
    7. 'p' → logprob: -4.776510238647461
    8. 'a' → logprob: -5.026510238647461
    9. 'L' → logprob: -5.151510238647461
    10. 'pos' → logprob: -5.276510238647461

Token 289: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05721259489655495
    2. '=' → logprob: -3.4322125911712646
    3. '1' → logprob: -4.682212829589844
    4. 'l' → logprob: -5.057212829589844
    5. 'a' → logprob: -6.057212829589844
    6. '_l' → logprob: -6.307212829589844
    7. 'al' → logprob: -6.432212829589844
    8. 'v' → logprob: -7.307212829589844
    9. '=l' → logprob: -8.432212829589844
    10. ',' → logprob: -8.682212829589844

Token 290: ' bis' (ID: 7204)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.007762788329273462
    2. ' bis' → logprob: -4.882762908935547
    3. 'b' → logprob: -10.132762908935547
    4. ' ' → logprob: -10.507762908935547
    5. '   ' → logprob: -10.632762908935547
    6. 'bs' → logprob: -11.257762908935547
    7. 'bi' → logprob: -11.632762908935547
    8. '	b' → logprob: -11.757762908935547
    9. '0' → logprob: -12.007762908935547
    10. 'i' → logprob: -12.257762908935547

Token 291: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -2.935296834039036e-06
    2. 'ext' → logprob: -13.50000286102295
    3. 'ct' → logprob: -14.75000286102295
    4. 'ec' → logprob: -15.25000286102295
    5. 'e' → logprob: -15.50000286102295
    6. 'sect' → logprob: -15.75000286102295
    7. '```' → logprob: -16.125003814697266
    8. '
' → logprob: -16.625003814697266
    9. 'act' → logprob: -16.750003814697266
    10. 'lect' → logprob: -17.000003814697266

Token 292: '.b' (ID: 1292)
  Prédit: '.b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -0.0015459299320355058
    2. '_left' → logprob: -6.5015459060668945
    3. '_right' → logprob: -10.251545906066895
    4. '.ins' → logprob: -12.001545906066895
    5. 'bis' → logprob: -13.626545906066895
    6. '.' → logprob: -14.876545906066895
    7. ' bis' → logprob: -15.376545906066895
    8. 'b' → logprob: -16.37654685974121
    9. 'Left' → logprob: -16.37654685974121
    10. 'Right' → logprob: -16.87654685974121

Token 293: 'is' (ID: 276)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.04829934611916542
    2. 'ect' → logprob: -3.6732993125915527
    3. 's' → logprob: -4.423299312591553
    4. 'sect' → logprob: -5.048299312591553
    5. 'is' → logprob: -7.298299312591553
    6. '_left' → logprob: -7.298299312591553
    7. 'left' → logprob: -7.798299312591553
    8. 'lt' → logprob: -8.048299789428711
    9. '```' → logprob: -8.173299789428711
    10. 'st' → logprob: -8.298299789428711

Token 294: 'ect' (ID: 534)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.00011236425780225545
    2. 'ect' → logprob: -9.125112533569336
    3. 'c' → logprob: -14.250112533569336
    4. '(ct' → logprob: -14.875112533569336
    5. '```' → logprob: -15.000112533569336
    6. 'с' → logprob: -15.000112533569336
    7. 'cts' → logprob: -15.500112533569336
    8. '
' → logprob: -15.750112533569336
    9. ' ct' → logprob: -15.875112533569336
    10. 'r' → logprob: -16.000112533569336

Token 295: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.024875465780496597
    2. '_right' → logprob: -4.149875640869141
    3. '(A' → logprob: -5.024875640869141
    4. 'left' → logprob: -6.274875640869141
    5. 'right' → logprob: -8.77487564086914
    6. 'Left' → logprob: -8.89987564086914
    7. 'Right' → logprob: -10.77487564086914
    8. 'A' → logprob: -11.27487564086914
    9. '(B' → logprob: -12.14987564086914
    10. '
' → logprob: -12.14987564086914

Token 296: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.0004903609515167773
    2. 'A' → logprob: -7.625490188598633
    3. '(' → logprob: -13.750490188598633
    4. '(B' → logprob: -14.125490188598633
    5. '(
' → logprob: -15.500490188598633
    6. '
' → logprob: -15.875490188598633
    7. '```' → logprob: -16.375490188598633
    8. 'B' → logprob: -17.125490188598633
    9. '(L' → logprob: -17.500490188598633
    10. 'graph' → logprob: -18.250490188598633

Token 297: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12553127110004425
    2. ',r' → logprob: -3.0005311965942383
    3. '(r' → logprob: -3.0005311965942383
    4. '(l' → logprob: -4.375531196594238
    5. ',l' → logprob: -5.500531196594238
    6. '(' → logprob: -7.625531196594238
    7. ',v' → logprob: -7.875531196594238
    8. '(v' → logprob: -8.250531196594238
    9. ',(' → logprob: -8.375531196594238
    10. ' ,' → logprob: -8.625531196594238

Token 298: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.00011009939044015482
    2. ' l' → logprob: -9.375109672546387
    3. 'r' → logprob: -10.625109672546387
    4. '   ' → logprob: -14.625109672546387
    5. '	l' → logprob: -14.875109672546387
    6. '(l' → logprob: -17.375110626220703
    7. 'v' → logprob: -17.500110626220703
    8. ')' → logprob: -17.750110626220703
    9. '[l' → logprob: -18.125110626220703
    10. ' ' → logprob: -18.750110626220703

Token 299: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4288216233253479
    2. ')
' → logprob: -1.0538215637207031
    3. '   ' → logprob: -10.303821563720703
    4. ' )
' → logprob: -10.428821563720703
    5. ' )' → logprob: -10.428821563720703
    6. ')
' → logprob: -11.178821563720703
    7. ')

' → logprob: -11.928821563720703
    8. ',' → logprob: -13.553821563720703
    9. ' ' → logprob: -13.678821563720703
    10. ')`
' → logprob: -14.178821563720703

Token 300: ' -' (ID: 533)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.37927713990211487
    2. 'graph' → logprob: -1.7542771100997925
    3. ' graph' → logprob: -2.879277229309082
    4. '   ' → logprob: -2.879277229309082
    5. ')
' → logprob: -4.629277229309082
    6. ')' → logprob: -5.254277229309082
    7. '#' → logprob: -6.004277229309082
    8. 'v' → logprob: -6.254277229309082
    9. 'u' → logprob: -6.629277229309082
    10. 'r' → logprob: -6.754277229309082

Token 301: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.253090865968261e-06
    2. ' ' → logprob: -11.625009536743164
    3. '0' → logprob: -15.125009536743164
    4. '2' → logprob: -18.250009536743164
    5. '
' → logprob: -18.375009536743164
    6. '   ' → logprob: -19.500009536743164
    7. '```' → logprob: -20.500009536743164
    8. '

' → logprob: -20.875009536743164
    9. '  ' → logprob: -21.250009536743164
    10. '-' → logprob: -21.375009536743164

Token 302: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0564331205387134e-05
    2. ' ' → logprob: -11.62501049041748
    3. '0' → logprob: -13.37501049041748
    4. '2' → logprob: -17.125011444091797
    5. '
' → logprob: -17.625011444091797
    6. '   ' → logprob: -18.625011444091797
    7. '```' → logprob: -18.875011444091797
    8. '[' → logprob: -19.250011444091797
    9. '-' → logprob: -19.250011444091797
    10. '  ' → logprob: -19.562511444091797

Token 303: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.343059241771698
    2. '
' → logprob: -1.5930593013763428
    3. 'graph' → logprob: -3.3430593013763428
    4. 'v' → logprob: -4.218059062957764
    5. '<|end|>' → logprob: -4.468059062957764
    6. ' graph' → logprob: -4.968059062957764
    7. ')' → logprob: -5.218059062957764
    8. '	graph' → logprob: -5.468059062957764
    9. ',' → logprob: -5.843059062957764
    10. '    
' → logprob: -6.593059062957764

Token 304: '   ' (ID: 271)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.13297398388385773
    2. '   ' → logprob: -2.7579739093780518
    3. 'w' → logprob: -3.0079739093780518
    4. ' u' → logprob: -5.132974147796631
    5. 'v' → logprob: -6.757974147796631
    6. ',' → logprob: -7.382974147796631
    7. 'r' → logprob: -7.382974147796631
    8. ' w' → logprob: -7.507974147796631
    9. '    
' → logprob: -7.507974147796631
    10. 'to' → logprob: -7.757974147796631

Token 305: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' (adapté à ' u') → logprob: -0.17729540169239044
    2. 'w' → logprob: -1.927295446395874
    3. 'to' → logprob: -4.552295207977295
    4. 'r' → logprob: -6.427295207977295
    5. 'x' → logprob: -6.677295207977295
    6. 'v' → logprob: -7.052295207977295
    7. 'graph' → logprob: -7.302295207977295
    8. 'if' → logprob: -8.302295684814453
    9. 'nv' → logprob: -8.677295684814453
    10. 'e' → logprob: -9.177295684814453

Token 306: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31326213479042053
    2. ' =' → logprob: -1.3132621049880981
    3. ' ' → logprob: -15.813261985778809
    4. '=
' → logprob: -16.563262939453125
    5. '=b' → logprob: -17.313262939453125
    6. ')' → logprob: -17.563262939453125
    7. ' =
' → logprob: -17.688262939453125
    8. ',' → logprob: -17.813262939453125
    9. '   ' → logprob: -18.063262939453125
    10. ' ' → logprob: -18.313262939453125

Token 307: ' bis' (ID: 7204)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.016052432358264923
    2. ' bis' → logprob: -4.14105224609375
    3. 'b' → logprob: -11.64105224609375
    4. 'bs' → logprob: -13.01605224609375
    5. 'bi' → logprob: -13.26605224609375
    6. '   ' → logprob: -13.51605224609375
    7. ' ' → logprob: -13.76605224609375
    8. '	b' → logprob: -13.89105224609375
    9. 'len' → logprob: -14.89105224609375
    10. 'bin' → logprob: -15.39105224609375

Token 308: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.1612289547920227
    2. 'ct' → logprob: -1.911228895187378
    3. 'sect' → logprob: -6.911229133605957
    4. 't' → logprob: -12.911229133605957
    5. 'с' → logprob: -13.911229133605957
    6. 'lect' → logprob: -14.036229133605957
    7. '```' → logprob: -14.786229133605957
    8. 's' → logprob: -15.036229133605957
    9. '#' → logprob: -15.036229133605957
    10. 'ce' → logprob: -15.411229133605957

Token 309: '.b' (ID: 1292)
  Prédit: '.b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -0.00011653638648567721
    2. '.' → logprob: -9.125116348266602
    3. '_left' → logprob: -11.875116348266602
    4. '_right' → logprob: -14.750116348266602
    5. ' .' → logprob: -17.3751163482666
    6. '.u' → logprob: -17.8751163482666
    7. 'bis' → logprob: -18.2501163482666
    8. '```' → logprob: -18.2501163482666
    9. '.B' → logprob: -18.3751163482666
    10. '[' → logprob: -18.5001163482666

Token 310: 'is' (ID: 276)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.6261820793151855
    2. 'ect' → logprob: -1.5011820793151855
    3. 'sect' → logprob: -1.7511820793151855
    4. 'is' → logprob: -2.7511820793151855
    5. 's' → logprob: -5.5011820793151855
    6. 'bis' → logprob: -8.126182556152344
    7. 'ict' → logprob: -9.126182556152344
    8. 'ist' → logprob: -9.626182556152344
    9. 'ise' → logprob: -9.626182556152344
    10. 'left' → logprob: -9.751182556152344

Token 311: 'ect' (ID: 534)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.02070748433470726
    2. 'ect' → logprob: -3.895707368850708
    3. 'sect' → logprob: -9.145707130432129
    4. 'n' → logprob: -10.020707130432129
    5. 't' → logprob: -12.145707130432129
    6. 'с' → logprob: -13.145707130432129
    7. 'ce' → logprob: -13.645707130432129
    8. '```' → logprob: -14.395707130432129
    9. '.ct' → logprob: -14.395707130432129
    10. 's' → logprob: -14.645707130432129

Token 312: '_right' (ID: 24402)
  Prédit: '_left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.030533794313669205
    2. '_right' → logprob: -3.530533790588379
    3. '.b' → logprob: -7.155533790588379
    4. 'left' → logprob: -13.405533790588379
    5. 'Left' → logprob: -14.780533790588379
    6. 'right' → logprob: -16.030534744262695
    7. '(b' → logprob: -16.030534744262695
    8. 'Right' → logprob: -16.280534744262695
    9. '.a' → logprob: -17.280534744262695
    10. '(A' → logprob: -17.280534744262695

Token 313: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -6.988221684878226e-06
    2. '(' → logprob: -12.000006675720215
    3. '(B' → logprob: -14.250006675720215
    4. 'A' → logprob: -16.37500762939453
    5. ' (' → logprob: -17.87500762939453
    6. '(
' → logprob: -18.00000762939453
    7. '```' → logprob: -19.25000762939453
    8. 'r' → logprob: -19.37500762939453
    9. '(U' → logprob: -19.62500762939453
    10. '   ' → logprob: -19.87500762939453

Token 314: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0018286957638338208
    2. '(r' → logprob: -6.501828670501709
    3. ',r' → logprob: -8.376829147338867
    4. ' ,' → logprob: -9.501829147338867
    5. 'A' → logprob: -11.501829147338867
    6. '(' → logprob: -12.376829147338867
    7. ',A' → logprob: -13.251829147338867
    8. '   ' → logprob: -13.501829147338867
    9. ' (' → logprob: -13.751829147338867
    10. ' ' → logprob: -14.501829147338867

Token 315: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.013900915160775185
    2. ' r' → logprob: -4.3889007568359375
    3. 'A' → logprob: -6.6389007568359375
    4. ' A' → logprob: -10.013900756835938
    5. '   ' → logprob: -11.263900756835938
    6. '[r' → logprob: -11.638900756835938
    7. 'B' → logprob: -12.513900756835938
    8. ')' → logprob: -12.888900756835938
    9. ' ' → logprob: -13.138900756835938
    10. '(r' → logprob: -13.388900756835938

Token 316: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00038229089113883674
    2. ')-' → logprob: -9.000382423400879
    3. ' )' → logprob: -9.125382423400879
    4. ',' → logprob: -9.750382423400879
    5. '[u' → logprob: -10.000382423400879
    6. 'u' → logprob: -11.375382423400879
    7. ' -' → logprob: -11.500382423400879
    8. '(u' → logprob: -12.000382423400879
    9. '-' → logprob: -12.125382423400879
    10. 'v' → logprob: -12.750382423400879

Token 317: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.02977236546576023
    2. '-' → logprob: -3.5297722816467285
    3. '   ' → logprob: -11.029772758483887
    4. ' ' → logprob: -13.154772758483887
    5. ')' → logprob: -13.654772758483887
    6. 'u' → logprob: -13.904772758483887
    7. '()-' → logprob: -15.029772758483887
    8. '<|end|>' → logprob: -15.029772758483887
    9. 'v' → logprob: -15.529772758483887
    10. ')-' → logprob: -15.904772758483887

Token 318: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00026419671485200524
    2. ' ' → logprob: -8.250264167785645
    3. '0' → logprob: -13.125264167785645
    4. '2' → logprob: -14.500264167785645
    5. '<|end|>' → logprob: -15.875264167785645
    6. '```' → logprob: -16.12526512145996
    7. '
' → logprob: -16.37526512145996
    8. '   ' → logprob: -17.81276512145996
    9. '(' → logprob: -17.81276512145996
    10. '...' → logprob: -18.12526512145996

Token 319: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9146995327901095e-05
    2. ' ' → logprob: -10.875019073486328
    3. '2' → logprob: -17.000019073486328
    4. '
' → logprob: -17.125019073486328
    5. '0' → logprob: -17.375019073486328
    6. '```' → logprob: -18.125019073486328
    7. '   ' → logprob: -19.187519073486328
    8. '(' → logprob: -19.437519073486328
    9. ',' → logprob: -20.250019073486328
    10. '

' → logprob: -20.312519073486328

Token 320: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008032320067286491
    2. 'graph' → logprob: -5.633032321929932
    3. '	graph' → logprob: -6.258032321929932
    4. '<|end|>' → logprob: -6.633032321929932
    5. '
' → logprob: -7.133032321929932
    6. ' graph' → logprob: -9.008031845092773
    7. '    
' → logprob: -9.133031845092773
    8. '(graph' → logprob: -9.758031845092773
    9. ')' → logprob: -10.258031845092773
    10. '#' → logprob: -10.758031845092773

Token 321: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2696637809276581
    2. '	graph' → logprob: -1.8946638107299805
    3. 'graph' → logprob: -3.1446638107299805
    4. '
' → logprob: -3.7696638107299805
    5. '<|end|>' → logprob: -4.3946638107299805
    6. '    
' → logprob: -6.0196638107299805
    7. ' graph' → logprob: -6.6446638107299805
    8. '(graph' → logprob: -6.8946638107299805
    9. ')' → logprob: -7.1446638107299805
    10. '	
' → logprob: -8.01966381072998

Token 322: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -0.0028953328728675842
    2. 'if' → logprob: -5.877895355224609
    3. ' graph' → logprob: -10.62789535522461
    4. '   ' → logprob: -10.87789535522461
    5. 'print' → logprob: -10.87789535522461
    6. 'for' → logprob: -11.87789535522461
    7. 'while' → logprob: -12.50289535522461
    8. 'u' → logprob: -12.87789535522461
    9. '	graph' → logprob: -13.12789535522461
    10. 'v' → logprob: -13.25289535522461

Token 323: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.029783006757497787
    2. '[u' → logprob: -3.529783010482788
    3. '[' → logprob: -10.404783248901367
    4. ' [' → logprob: -14.404783248901367
    5. '][' → logprob: -14.779783248901367
    6. 'v' → logprob: -14.904783248901367
    7. '[s' → logprob: -15.654783248901367
    8. '[q' → logprob: -16.029783248901367
    9. ')[' → logprob: -16.154783248901367
    10. '```' → logprob: -16.654783248901367

Token 324: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0012802376877516508
    2. '.append' → logprob: -7.251280307769775
    3. '.' → logprob: -7.876280307769775
    4. ']' → logprob: -8.626279830932617
    5. ').' → logprob: -12.376279830932617
    6. ' ].' → logprob: -12.376279830932617
    7. '+' → logprob: -14.376279830932617
    8. '   ' → logprob: -14.501279830932617
    9. '.app' → logprob: -14.876279830932617
    10. '[' → logprob: -15.251279830932617

Token 325: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -4.320199877838604e-07
    2. '.append' → logprob: -15.0
    3. ' append' → logprob: -16.25
    4. 'appen' → logprob: -18.75
    5. 'app' → logprob: -19.75
    6. '	append' → logprob: -20.25
    7. '_append' → logprob: -20.5
    8. 'insert' → logprob: -20.625
    9. 'Append' → logprob: -21.0
    10. 'extend' → logprob: -21.75

Token 326: '(' (ID: 7)
  Prédit: '(u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.02331291139125824
    2. '((' → logprob: -3.77331280708313
    3. '(' → logprob: -9.89831256866455
    4. 'u' → logprob: -11.52331256866455
    5. '(i' → logprob: -12.02331256866455
    6. '(r' → logprob: -14.64831256866455
    7. '([' → logprob: -15.39831256866455
    8. '(v' → logprob: -15.77331256866455
    9. '(
' → logprob: -16.398313522338867
    10. '[u' → logprob: -16.648313522338867

Token 327: ' (' (ID: 350)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.5255639553070068
    2. '(u' → logprob: -0.9005639553070068
    3. ' (' → logprob: -7.025564193725586
    4. ' u' → logprob: -7.900564193725586
    5. '[u' → logprob: -8.150564193725586
    6. '(' → logprob: -8.275564193725586
    7. ')' → logprob: -8.525564193725586
    8. '(i' → logprob: -8.900564193725586
    9. '(r' → logprob: -9.400564193725586
    10. '((' → logprob: -9.775564193725586

Token 328: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0018692599842324853
    2. ' u' → logprob: -6.876869201660156
    3. 'i' → logprob: -7.501869201660156
    4. '   ' → logprob: -8.626869201660156
    5. '(u' → logprob: -10.751869201660156
    6. ' ' → logprob: -11.251869201660156
    7. 'r' → logprob: -11.251869201660156
    8. '
' → logprob: -11.501869201660156
    9. '1' → logprob: -11.626869201660156
    10. '    ' → logprob: -11.876869201660156

Token 329: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011331788846291602
    2. ')' → logprob: -9.500113487243652
    3. ' ,' → logprob: -10.500113487243652
    4. ',)' → logprob: -12.625113487243652
    5. '+' → logprob: -12.875113487243652
    6. '   ' → logprob: -13.250113487243652
    7. ',
' → logprob: -13.875113487243652
    8. '-' → logprob: -14.125113487243652
    9. '),' → logprob: -15.500113487243652
    10. '1' → logprob: -15.750113487243652

Token 330: ' i' (ID: 575)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4292416274547577
    2. 'i' → logprob: -1.67924165725708
    3. 'r' → logprob: -2.80424165725708
    4. '0' → logprob: -3.42924165725708
    5. ' ' → logprob: -3.67924165725708
    6. ' i' → logprob: -3.67924165725708
    7. 'l' → logprob: -5.42924165725708
    8. ' r' → logprob: -5.67924165725708
    9. 'B' → logprob: -5.92924165725708
    10. '-' → logprob: -6.55424165725708

Token 331: '+' (ID: 10)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0014799826312810183
    2. ',' → logprob: -6.6264801025390625
    3. ' )' → logprob: -9.001480102539062
    4. '))' → logprob: -10.751480102539062
    5. '   ' → logprob: -12.876480102539062
    6. '}' → logprob: -13.501480102539062
    7. '+' → logprob: -13.626480102539062
    8. ',)' → logprob: -13.876480102539062
    9. ' ,' → logprob: -14.251480102539062
    10. '),' → logprob: -14.626480102539062

Token 332: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.470901229884475e-05
    2. ' ' → logprob: -9.50008487701416
    3. '2' → logprob: -12.68758487701416
    4. ')' → logprob: -13.06258487701416
    5. '0' → logprob: -14.18758487701416
    6. '   ' → logprob: -14.25008487701416
    7. '+' → logprob: -15.06258487701416
    8. ' )' → logprob: -15.25008487701416
    9. ',' → logprob: -15.37508487701416
    10. '7' → logprob: -15.56258487701416

Token 333: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010819212911883369
    2. ' )' → logprob: -10.125107765197754
    3. ',' → logprob: -10.250107765197754
    4. '))' → logprob: -10.375107765197754
    5. ')
' → logprob: -14.625107765197754
    6. '   ' → logprob: -14.750107765197754
    7. '),' → logprob: -15.375107765197754
    8. ',)' → logprob: -16.25010871887207
    9. '}' → logprob: -16.75010871887207
    10. ' ' → logprob: -17.00010871887207

Token 334: ' )
' (ID: 3270)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.656383680412546e-05
    2. ' )' → logprob: -10.125046730041504
    3. ')
' → logprob: -12.125046730041504
    4. '   ' → logprob: -13.875046730041504
    5. ')}' → logprob: -17.750045776367188
    6. '))' → logprob: -17.750045776367188
    7. ' ' → logprob: -18.250045776367188
    8. '),' → logprob: -18.250045776367188
    9. ')`' → logprob: -18.375045776367188
    10. ')#' → logprob: -18.500045776367188

Token 335: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 336: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -0.08276478201150894
    2. '   ' → logprob: -3.0827648639678955
    3. ' graph' → logprob: -4.082764625549316
    4. 'u' → logprob: -4.457764625549316
    5. '<|end|>' → logprob: -5.832764625549316
    6. 'for' → logprob: -7.582764625549316
    7. '	graph' → logprob: -7.832764625549316
    8. 'v' → logprob: -7.832764625549316
    9. '```' → logprob: -8.707764625549316
    10. '(graph' → logprob: -8.832764625549316

Token 337: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.0025064588990062475
    2. '[v' → logprob: -6.002506256103516
    3. '[' → logprob: -10.627506256103516
    4. '[i' → logprob: -13.752506256103516
    5. 'u' → logprob: -13.877506256103516
    6. '[r' → logprob: -14.002506256103516
    7. '[-' → logprob: -14.377506256103516
    8. '[z' → logprob: -14.877506256103516
    9. '[w' → logprob: -14.877506256103516
    10. '[s' → logprob: -15.252506256103516

Token 338: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.010818242095410824
    2. '.append' → logprob: -5.260818004608154
    3. '.' → logprob: -5.635818004608154
    4. ').' → logprob: -6.260818004608154
    5. ' ].' → logprob: -10.635818481445312
    6. ']' → logprob: -10.760818481445312
    7. '[' → logprob: -11.260818481445312
    8. '   ' → logprob: -11.260818481445312
    9. '}.' → logprob: -11.760818481445312
    10. ' ' → logprob: -12.510818481445312

Token 339: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.2664456789934775e-06
    2. 'appen' → logprob: -14.250000953674316
    3. '.append' → logprob: -15.000000953674316
    4. ' append' → logprob: -15.125000953674316
    5. 'app' → logprob: -17.375001907348633
    6. '	append' → logprob: -18.000001907348633
    7. 'extend' → logprob: -18.750001907348633
    8. '```' → logprob: -19.000001907348633
    9. 'appe' → logprob: -19.500001907348633
    10. 'add' → logprob: -21.375001907348633

Token 340: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0018412984209135175
    2. ' (' → logprob: -6.501841068267822
    3. '((' → logprob: -8.00184154510498
    4. '(v' → logprob: -12.62684154510498
    5. ' ((' → logprob: -14.37684154510498
    6. '   ' → logprob: -15.62684154510498
    7. '(
' → logprob: -17.501840591430664
    8. ',' → logprob: -19.501840591430664
    9. 'v' → logprob: -20.251840591430664
    10. '[(' → logprob: -20.376840591430664

Token 341: ' (' (ID: 350)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.2520008981227875
    2. ' (' → logprob: -1.5020009279251099
    3. '(' → logprob: -9.62700080871582
    4. '   ' → logprob: -12.50200080871582
    5. ' ' → logprob: -13.37700080871582
    6. '  ' → logprob: -15.50200080871582
    7. ' ' → logprob: -16.37700080871582
    8. '(u' → logprob: -16.50200080871582
    9. '	' → logprob: -16.62700080871582
    10. ')' → logprob: -16.87700080871582

Token 342: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.004189398139715195
    2. '(v' → logprob: -5.504189491271973
    3. ' v' → logprob: -9.379189491271973
    4. ' (' → logprob: -11.254189491271973
    5. '   ' → logprob: -11.879189491271973
    6. '
' → logprob: -12.879189491271973
    7. '	v' → logprob: -13.504189491271973
    8. ')v' → logprob: -14.754189491271973
    9. '[v' → logprob: -14.879189491271973
    10. ')' → logprob: -15.004189491271973

Token 343: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.5094070477061905e-05
    2. ' ,' → logprob: -11.125015258789062
    3. '   ' → logprob: -15.500015258789062
    4. ',i' → logprob: -16.875015258789062
    5. ',
' → logprob: -17.000015258789062
    6. '[' → logprob: -17.875015258789062
    7. '‌,' → logprob: -18.000015258789062
    8. ',u' → logprob: -18.375015258789062
    9. ' ' → logprob: -18.750015258789062
    10. ',(' → logprob: -19.000015258789062

Token 344: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4741087257862091
    2. ' i' → logprob: -0.9741086959838867
    3. ' ' → logprob: -11.224108695983887
    4. '   ' → logprob: -12.349108695983887
    5. '0' → logprob: -12.974108695983887
    6. ' ' → logprob: -13.224108695983887
    7. ')' → logprob: -13.224108695983887
    8. ',' → logprob: -13.349108695983887
    9. '1' → logprob: -13.599108695983887
    10. ' (' → logprob: -13.849108695983887

Token 345: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -4.842555426876061e-06
    2. ' +' → logprob: -12.875004768371582
    3. '1' → logprob: -13.375004768371582
    4. ',' → logprob: -15.375004768371582
    5. '+
' → logprob: -16.1250057220459
    6. ')' → logprob: -16.1250057220459
    7. '```' → logprob: -16.8750057220459
    8. '   ' → logprob: -17.1250057220459
    9. '-' → logprob: -17.7500057220459
    10. ')+' → logprob: -18.1250057220459

Token 346: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.360996485454962e-05
    2. ' ' → logprob: -10.2500638961792
    3. '0' → logprob: -10.6250638961792
    4. '-' → logprob: -12.7500638961792
    5. '   ' → logprob: -15.1875638961792
    6. ')' → logprob: -15.3125638961792
    7. '```' → logprob: -16.562562942504883
    8. '2' → logprob: -16.875062942504883
    9. '+' → logprob: -17.125062942504883
    10. '	' → logprob: -17.187562942504883

Token 347: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.438573680294212e-06
    2. ' )' → logprob: -12.250005722045898
    3. '   ' → logprob: -14.875005722045898
    4. '))' → logprob: -15.500005722045898
    5. ')
' → logprob: -16.0000057220459
    6. '}' → logprob: -18.2500057220459
    7. ')}' → logprob: -18.8750057220459
    8. ']' → logprob: -19.3750057220459
    9. ')`' → logprob: -19.3750057220459
    10. ' ' → logprob: -19.8750057220459

Token 348: ' )

' (ID: 11467)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00023452966706827283
    2. ' )' → logprob: -8.375234603881836
    3. ')
' → logprob: -12.625234603881836
    4. '   ' → logprob: -14.375234603881836
    5. ')}' → logprob: -17.625234603881836
    6. '}' → logprob: -18.250234603881836
    7. '))' → logprob: -18.375234603881836
    8. ' )
' → logprob: -18.500234603881836
    9. ' ' → logprob: -18.750234603881836
    10. ')`' → logprob: -18.875234603881836

Token 349: 'par' (ID: 796)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.2831968069076538
    2. 'dp' → logprob: -2.1581969261169434
    3. 'visited' → logprob: -2.2831969261169434
    4. 'distance' → logprob: -4.658196926116943
    5. 'stack' → logprob: -5.158196926116943
    6. 'from' → logprob: -5.408196926116943
    7. 'used' → logprob: -6.033196926116943
    8. 'depth' → logprob: -6.908196926116943
    9. 'parent' → logprob: -7.033196926116943
    10. 'for' → logprob: -7.408196926116943

Token 350: 'ity' (ID: 536)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.5746784210205078
    2. 't' → logprob: -1.4496784210205078
    3. ' =' → logprob: -2.324678421020508
    4. '=' → logprob: -2.699678421020508
    5. 'ents' → logprob: -4.449678421020508
    6. 'ts' → logprob: -4.699678421020508
    7. 'nt' → logprob: -5.199678421020508
    8. '=[]' → logprob: -5.699678421020508
    9. '[]' → logprob: -6.074678421020508
    10. '[' → logprob: -6.449678421020508

Token 351: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2051636129617691
    2. '=' → logprob: -1.705163598060608
    3. '[' → logprob: -6.330163478851318
    4. '_' → logprob: -7.080163478851318
    5. ',' → logprob: -8.205163955688477
    6. ')' → logprob: -8.205163955688477
    7. '[]' → logprob: -8.955163955688477
    8. 's' → logprob: -8.955163955688477
    9. ' ' → logprob: -9.080163955688477
    10. '=[]' → logprob: -9.580163955688477

Token 352: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.005399646237492561
    2. '0' → logprob: -5.505399703979492
    3. ' [' → logprob: -7.130399703979492
    4. '[-' → logprob: -7.630399703979492
    5. '[len' → logprob: -11.005399703979492
    6. '[N' → logprob: -12.005399703979492
    7. '[s' → logprob: -12.380399703979492
    8. ' ' → logprob: -13.130399703979492
    9. '[int' → logprob: -14.005399703979492
    10. '[]' → logprob: -14.380399703979492

Token 353: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.01775079406797886
    2. '0' → logprob: -4.3927507400512695
    3. 'False' → logprob: -5.2677507400512695
    4. 'None' → logprob: -10.26775074005127
    5. ' -' → logprob: -11.26775074005127
    6. '[-' → logprob: -11.51775074005127
    7. '[' → logprob: -11.64275074005127
    8. 'True' → logprob: -13.26775074005127
    9. ' False' → logprob: -14.01775074005127
    10. 'INF' → logprob: -14.14275074005127

Token 354: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.012425946071743965
    2. ' for' → logprob: -5.137425899505615
    3. ']*(' → logprob: -5.762425899505615
    4. ']*' → logprob: -6.137425899505615
    5. 'for' → logprob: -6.762425899505615
    6. ' ]' → logprob: -11.512426376342773
    7. ',' → logprob: -12.887426376342773
    8. ']+' → logprob: -13.887426376342773
    9. '   ' → logprob: -14.137426376342773
    10. ' ' → logprob: -14.887426376342773

Token 355: 'sz' (ID: 13849)
  Prédit: 'sz'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sz' → logprob: -0.008803298696875572
    2. '(sz' → logprob: -4.758803367614746
    3. 'len' → logprob: -9.008803367614746
    4. ' sz' → logprob: -10.383803367614746
    5. '(' → logprob: -10.508803367614746
    6. '(len' → logprob: -12.383803367614746
    7. 'N' → logprob: -13.883803367614746
    8. '(N' → logprob: -14.133803367614746
    9. 'SZ' → logprob: -14.258803367614746
    10. '.sz' → logprob: -15.258803367614746

Token 356: '
' (ID: 198)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.5278897285461426
    2. 'visited' → logprob: -2.0278897285461426
    3. 'stack' → logprob: -2.1528897285461426
    4. 'depth' → logprob: -3.1528897285461426
    5. 'from' → logprob: -3.7778897285461426
    6. 'used' → logprob: -3.9028897285461426
    7. 'color' → logprob: -4.027889728546143
    8. 'distance' → logprob: -4.152889728546143
    9. 'queue' → logprob: -4.277889728546143
    10. 'dp' → logprob: -4.902889728546143

Token 357: '#' (ID: 2)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.918426513671875
    2. 'dist' → logprob: -1.668426513671875
    3. 'visited' → logprob: -1.668426513671875
    4. 'stack' → logprob: -2.668426513671875
    5. 'color' → logprob: -3.293426513671875
    6. 'used' → logprob: -3.418426513671875
    7. 'import' → logprob: -4.418426513671875
    8. 'for' → logprob: -4.543426513671875
    9. 'q' → logprob: -4.668426513671875
    10. 'def' → logprob: -4.793426513671875

Token 358: ' Seems' (ID: 105038)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.1149989441037178
    2. 'stack' → logprob: -3.1149990558624268
    3. 'def' → logprob: -3.2399990558624268
    4. 'import' → logprob: -4.364998817443848
    5. 'visited' → logprob: -4.739998817443848
    6. 'queue' → logprob: -6.489998817443848
    7. 'q' → logprob: -6.739998817443848
    8. 'for' → logprob: -7.864998817443848
    9. 'color' → logprob: -8.614998817443848
    10. 'seen' → logprob: -8.989998817443848

Token 359: ' parity' (ID: 113181)
  Prédit: 'like'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'like' → logprob: -0.0038303565233945847
    2. ' like' → logprob: -6.503830432891846
    3. '#' → logprob: -6.878830432891846
    4. 'to' → logprob: -7.628830432891846
    5. 'stack' → logprob: -8.003829956054688
    6. 'likely' → logprob: -8.253829956054688
    7. 'visited' → logprob: -9.003829956054688
    8. 'queue' → logprob: -10.878829956054688
    9. 'def' → logprob: -11.003829956054688
    10. 'deque' → logprob: -11.628829956054688

Token 360: ' depends' (ID: 20102)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.48193836212158203
    2. ' =' → logprob: -0.981938362121582
    3. '[' → logprob: -5.981938362121582
    4. '=[]' → logprob: -6.606938362121582
    5. '=[' → logprob: -6.856938362121582
    6. ',' → logprob: -6.981938362121582
    7. '<|end|>' → logprob: -7.481938362121582
    8. 'def' → logprob: -8.481938362121582
    9. '_stack' → logprob: -8.731938362121582
    10. 'stack' → logprob: -8.856938362121582

Token 361: ' on' (ID: 402)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.6901382803916931
    2. ' on' → logprob: -1.315138339996338
    3. ' =' → logprob: -2.190138339996338
    4. '=' → logprob: -2.190138339996338
    5. 'import' → logprob: -6.440138339996338
    6. 'def' → logprob: -7.065138339996338
    7. '=[]' → logprob: -7.315138339996338
    8. '[' → logprob: -7.440138339996338
    9. 'dfs' → logprob: -7.565138339996338
    10. '[:]' → logprob: -8.44013786315918

Token 362: ' B' (ID: 418)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -1.2804701328277588
    2. 'the' → logprob: -1.4054701328277588
    3. 'par' → logprob: -2.405470132827759
    4. 'i' → logprob: -2.655470132827759
    5. 'u' → logprob: -2.780470132827759
    6. '0' → logprob: -2.905470132827759
    7. 'v' → logprob: -3.530470132827759
    8. ' graph' → logprob: -3.905470132827759
    9. 'B' → logprob: -4.15546989440918
    10. ' the' → logprob: -4.15546989440918

Token 363: ' sequence' (ID: 16281)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16679835319519043
    2. '[' → logprob: -2.2917983531951904
    3. ' for' → logprob: -3.4167983531951904
    4. ' =' → logprob: -4.5417985916137695
    5. 'def' → logprob: -5.2917985916137695
    6. '=' → logprob: -6.0417985916137695
    7. ',' → logprob: -7.7917985916137695
    8. '<|end|>' → logprob: -8.54179859161377
    9. '#' → logprob: -8.91679859161377
    10. '=[' → logprob: -9.04179859161377

Token 364: ' flipping' (ID: 110780)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06725873798131943
    2. ' for' → logprob: -2.817258834838867
    3. '=' → logprob: -5.567258834838867
    4. ' =' → logprob: -7.067258834838867
    5. ',' → logprob: -8.067258834838867
    6. ',
' → logprob: -9.817258834838867
    7. '[' → logprob: -9.817258834838867
    8. '<|end|>' → logprob: -10.192258834838867
    9. '
' → logprob: -10.692258834838867
    10. ')' → logprob: -10.942258834838867

Token 365: ' ' (ID: 220)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.016820864751935005
    2. 'stack' → logprob: -4.641820907592773
    3. 'def' → logprob: -5.766820907592773
    4. ' for' → logprob: -5.891820907592773
    5. 'queue' → logprob: -8.266820907592773
    6. 'deque' → logprob: -8.516820907592773
    7. 'q' → logprob: -8.766820907592773
    8. 'visited' → logprob: -9.391820907592773
    9. 'cur' → logprob: -9.641820907592773
    10. '=' → logprob: -9.766820907592773

Token 366: '0' (ID: 15)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.015119625255465508
    2. ' for' → logprob: -5.015119552612305
    3. 'cur' → logprob: -6.140119552612305
    4. '=' → logprob: -6.515119552612305
    5. 'curr' → logprob: -6.765119552612305
    6. 'prev' → logprob: -7.265119552612305
    7. 'xor' → logprob: -7.640119552612305
    8. ' =' → logprob: -7.640119552612305
    9. 'current' → logprob: -7.765119552612305
    10. ',' → logprob: -8.265119552612305

Token 367: '<' (ID: 27)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.059693694114685
    2. 'for' → logprob: -1.309693694114685
    3. '^' → logprob: -1.934693694114685
    4. '<|end|>' → logprob: -2.1846938133239746
    5. ' ^=' → logprob: -3.1846938133239746
    6. ' for' → logprob: -3.9346938133239746
    7. 's' → logprob: -4.809693813323975
    8. '[' → logprob: -4.809693813323975
    9. ' ' → logprob: -4.934693813323975
    10. ']' → logprob: -5.184693813323975

Token 368: '->' (ID: 609)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.30033910274505615
    2. '=' → logprob: -2.1753392219543457
    3. '->' → logprob: -2.1753392219543457
    4. '=>' → logprob: -3.9253392219543457
    5. '1' → logprob: -5.800339221954346
    6. ' >' → logprob: -6.175339221954346
    7. '0' → logprob: -6.425339221954346
    8. '[' → logprob: -6.925339221954346
    9. ' ' → logprob: -7.425339221954346
    10. '-->' → logprob: -7.675339221954346

Token 369: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05209418758749962
    2. '=' → logprob: -3.1770942211151123
    3. '>' → logprob: -4.802093982696533
    4. '->' → logprob: -7.677093982696533
    5. '=>' → logprob: -8.052094459533691
    6. ' ' → logprob: -10.927094459533691
    7. '```' → logprob: -11.677094459533691
    8. '[' → logprob: -12.052094459533691
    9. '0' → logprob: -12.052094459533691
    10. '-->' → logprob: -12.677094459533691

Token 370: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09096115827560425
    2. ' for' → logprob: -2.465961217880249
    3. 'current' → logprob: -7.34096097946167
    4. 'cur' → logprob: -7.84096097946167
    5. ',' → logprob: -8.590961456298828
    6. '=' → logprob: -8.590961456298828
    7. ' =' → logprob: -8.840961456298828
    8. 'prev' → logprob: -9.090961456298828
    9. 'curr' → logprob: -9.215961456298828
    10. 'def' → logprob: -9.715961456298828

Token 371: ' a' (ID: 261)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.002422152552753687
    2. 'cur' → logprob: -6.877422332763672
    3. ' for' → logprob: -7.127422332763672
    4. 'curr' → logprob: -8.752422332763672
    5. 'xor' → logprob: -9.252422332763672
    6. 'current' → logprob: -9.627422332763672
    7. 'stack' → logprob: -10.002422332763672
    8. 'flip' → logprob: -10.127422332763672
    9. 'def' → logprob: -10.377422332763672
    10. 'prev' → logprob: -10.627422332763672

Token 372: ' bit' (ID: 3546)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.639586865901947
    2. 'nd' → logprob: -1.3895869255065918
    3. 't' → logprob: -2.514586925506592
    4. 'fter' → logprob: -2.514586925506592
    5. 'b' → logprob: -4.014586925506592
    6. 'for' → logprob: -4.264586925506592
    7. 'l' → logprob: -5.264586925506592
    8. 'ct' → logprob: -5.389586925506592
    9. 'def' → logprob: -5.514586925506592
    10. '#' → logprob: -5.764586925506592

Token 373: ' fish' (ID: 13897)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05950857698917389
    2. 'cur' → logprob: -3.3095085620880127
    3. ' for' → logprob: -4.184508800506592
    4. 'curr' → logprob: -5.934508800506592
    5. 'current' → logprob: -6.309508800506592
    6. 'prev' → logprob: -7.559508800506592
    7. 'last' → logprob: -8.434508323669434
    8. 'x' → logprob: -8.434508323669434
    9. 'stack' → logprob: -9.184508323669434
    10. 'c' → logprob: -9.559508323669434

Token 374: 'y' (ID: 88)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.1312682032585144
    2. 'y' → logprob: -2.256268262863159
    3. 'lip' → logprob: -4.75626802444458
    4. 'for' → logprob: -5.00626802444458
    5. 'ip' → logprob: -7.00626802444458
    6. 'l' → logprob: -7.38126802444458
    7. 'flip' → logprob: -8.006268501281738
    8. 'r' → logprob: -8.256268501281738
    9. ' or' → logprob: -8.881268501281738
    10. 'bit' → logprob: -9.006268501281738

Token 375: ' but' (ID: 889)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.053782351315021515
    2. 'cur' → logprob: -3.5537824630737305
    3. ' for' → logprob: -4.0537824630737305
    4. 'current' → logprob: -6.1787824630737305
    5. 'curr' → logprob: -6.6787824630737305
    6. ' =' → logprob: -7.0537824630737305
    7. '=' → logprob: -7.8037824630737305
    8. 'flip' → logprob: -7.9287824630737305
    9. 'prev' → logprob: -8.05378246307373
    10. 'last' → logprob: -8.17878246307373

Token 376: ' let's' (ID: 35717)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.010172734968364239
    2. ' for' → logprob: -4.8851728439331055
    3. 'cur' → logprob: -6.1351728439331055
    4. 'current' → logprob: -8.635172843933105
    5. 'curr' → logprob: -9.635172843933105
    6. 'stack' → logprob: -10.010172843933105
    7. 'def' → logprob: -10.760172843933105
    8. 'par' → logprob: -11.010172843933105
    9. 'last' → logprob: -11.260172843933105
    10. 'prev' → logprob: -11.385172843933105

Token 377: ' just' (ID: 1327)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07031140476465225
    2. ' for' → logprob: -2.6953113079071045
    3. 'prev' → logprob: -9.070311546325684
    4. 'cur' → logprob: -9.195311546325684
    5. '
' → logprob: -10.195311546325684
    6. 'current' → logprob: -10.820311546325684
    7. 'curr' → logprob: -10.820311546325684
    8. 'last' → logprob: -10.945311546325684
    9. 'x' → logprob: -11.070311546325684
    10. ' last' → logprob: -11.820311546325684

Token 378: ' do' (ID: 621)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.028513096272945404
    2. ' for' → logprob: -3.653513193130493
    3. 'x' → logprob: -7.278512954711914
    4. 'prev' → logprob: -7.528512954711914
    5. 'xor' → logprob: -7.778512954711914
    6. 'cur' → logprob: -8.903512954711914
    7. '=' → logprob: -9.028512954711914
    8. 'i' → logprob: -9.778512954711914
    9. 'current' → logprob: -10.278512954711914
    10. '
' → logprob: -10.278512954711914

Token 379: ' it' (ID: 480)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.34948375821113586
    2. '1' → logprob: -1.4744837284088135
    3. '0' → logprob: -3.4744837284088135
    4. 'range' → logprob: -4.099483966827393
    5. ' for' → logprob: -4.849483966827393
    6. 'B' → logprob: -5.474483966827393
    7. ' range' → logprob: -6.724483966827393
    8. '_' → logprob: -7.474483966827393
    9. '_=' → logprob: -7.474483966827393
    10. ' ' → logprob: -7.474483966827393

Token 380: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.029089899733662605
    2. 'cur' → logprob: -3.77908992767334
    3. 'curr' → logprob: -6.27908992767334
    4. 'current' → logprob: -6.52908992767334
    5. 'par' → logprob: -6.65408992767334
    6. ' for' → logprob: -8.15408992767334
    7. 'fl' → logprob: -8.15408992767334
    8. 'p' → logprob: -8.65408992767334
    9. 'last' → logprob: -9.15408992767334
    10. 'flip' → logprob: -9.52908992767334

Token 381: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.003430792596191168
    2. 'cur' → logprob: -6.0034308433532715
    3. 'par' → logprob: -7.7534308433532715
    4. ' for' → logprob: -8.378430366516113
    5. 'current' → logprob: -9.003430366516113
    6. 'curr' → logprob: -9.503430366516113
    7. 'prev' → logprob: -9.753430366516113
    8. 'last' → logprob: -10.878430366516113
    9. 'p' → logprob: -11.628430366516113
    10. 'b' → logprob: -12.878430366516113

Token 382: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.011117025278508663
    2. ' i' → logprob: -4.511116981506348
    3. 'x' → logprob: -9.886116981506348
    4. 'k' → logprob: -12.011116981506348
    5. 'j' → logprob: -12.636116981506348
    6. 'idx' → logprob: -13.261116981506348
    7. ' ' → logprob: -13.511116981506348
    8. 'v' → logprob: -13.636116981506348
    9. '   ' → logprob: -14.261116981506348
    10. '_i' → logprob: -14.386116981506348

Token 383: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06208296865224838
    2. 'in' → logprob: -2.8120830059051514
    3. 'range' → logprob: -10.18708324432373
    4. '+' → logprob: -10.43708324432373
    5. ' ' → logprob: -10.56208324432373
    6. ',' → logprob: -11.43708324432373
    7. '   ' → logprob: -12.68708324432373
    8. '1' → logprob: -13.56208324432373
    9. 'd' → logprob: -13.68708324432373
    10. '	in' → logprob: -14.06208324432373

Token 384: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.018154388293623924
    2. ' range' → logprob: -4.018154621124268
    3. '(range' → logprob: -12.64315414428711
    4. '1' → logprob: -14.76815414428711
    5. ' ' → logprob: -14.89315414428711
    6. '(' → logprob: -16.01815414428711
    7. 'in' → logprob: -16.64315414428711
    8. '   ' → logprob: -16.76815414428711
    9. '	range' → logprob: -16.89315414428711
    10. ' in' → logprob: -17.01815414428711

Token 385: '(sz' (ID: 80788)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5760642290115356
    2. '(sz' → logprob: -0.8260642290115356
    3. '(len' → logprob: -9.201064109802246
    4. '(range' → logprob: -11.076064109802246
    5. 'range' → logprob: -12.701064109802246
    6. ' (' → logprob: -13.701064109802246
    7. '1' → logprob: -14.076064109802246
    8. 'sz' → logprob: -14.201064109802246
    9. ' sz' → logprob: -14.576064109802246
    10. '(s' → logprob: -14.576064109802246

Token 386: '-' (ID: 12)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3096402883529663
    2. '):' → logprob: -1.6846402883529663
    3. '-' → logprob: -2.559640407562256
    4. ' -' → logprob: -6.059640407562256
    5. '1' → logprob: -8.309639930725098
    6. ' ' → logprob: -8.684639930725098
    7. '   ' → logprob: -8.809639930725098
    8. ' ):
' → logprob: -8.934639930725098
    9. ' ):' → logprob: -9.059639930725098
    10. '+' → logprob: -9.059639930725098

Token 387: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.12258882028982e-05
    2. ' ' → logprob: -10.00006103515625
    3. '2' → logprob: -11.12506103515625
    4. '
' → logprob: -15.62506103515625
    5. '   ' → logprob: -15.68756103515625
    6. '```' → logprob: -15.75006103515625
    7. '3' → logprob: -16.25006103515625
    8. ')' → logprob: -16.75006103515625
    9. '-' → logprob: -16.81256103515625
    10. '0' → logprob: -16.93756103515625

Token 388: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.11367430537939072
    2. '):' → logprob: -2.2386744022369385
    3. ':' → logprob: -7.488674163818359
    4. ':
' → logprob: -8.98867416381836
    5. '):
' → logprob: -9.61367416381836
    6. ')' → logprob: -10.11367416381836
    7. ',' → logprob: -10.86367416381836
    8. ' ' → logprob: -11.11367416381836
    9. ' ):
' → logprob: -11.61367416381836
    10. '   ' → logprob: -11.73867416381836

Token 389: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12139583379030228
    2. 'par' → logprob: -2.2463958263397217
    3. ' parity' → logprob: -5.246396064758301
    4. ' par' → logprob: -5.871396064758301
    5. '	par' → logprob: -7.871396064758301
    6. ' if' → logprob: -10.4963960647583
    7. 'if' → logprob: -10.7463960647583
    8. '    
' → logprob: -12.4963960647583
    9. ' ' → logprob: -12.6213960647583
    10. '(par' → logprob: -12.7463960647583

Token 390: ' if' (ID: 538)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.0014138080878183246
    2. ' parity' → logprob: -7.001413822174072
    3. '   ' → logprob: -7.751413822174072
    4. 'if' (adapté à ' if') → logprob: -9.626413345336914
    5. ' par' → logprob: -13.001413345336914
    6. ' if' → logprob: -13.501413345336914
    7. 'Parity' → logprob: -14.251413345336914
    8. '	par' → logprob: -14.751413345336914
    9. '    
' → logprob: -15.376413345336914
    10. '
' → logprob: -15.376413345336914

Token 391: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.019515393301844597
    2. ' B' → logprob: -4.144515514373779
    3. '(B' → logprob: -5.769515514373779
    4. '   ' → logprob: -8.519515037536621
    5. ' ' → logprob: -9.269515037536621
    6. ' (' → logprob: -10.644515037536621
    7. '(' → logprob: -11.644515037536621
    8. 'par' → logprob: -12.144515037536621
    9. '	B' → logprob: -12.394515037536621
    10. '(par' → logprob: -12.394515037536621

Token 392: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.2200749754119897e-06
    2. '[' → logprob: -13.500001907348633
    3. 'i' → logprob: -14.375001907348633
    4. ' [' → logprob: -16.125001907348633
    5. '[
' → logprob: -16.125001907348633
    6. ' i' → logprob: -17.625001907348633
    7. '```' → logprob: -18.875001907348633
    8. '{i' → logprob: -19.500001907348633
    9. ')' → logprob: -19.625001907348633
    10. ' ' → logprob: -19.750001907348633

Token 393: ']==' (ID: 34128)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10957691818475723
    2. ']!=' → logprob: -2.984576940536499
    3. ']==' → logprob: -2.984576940536499
    4. ']^' → logprob: -6.23457670211792
    5. ']%' → logprob: -8.359577178955078
    6. ' ]' → logprob: -8.484577178955078
    7. '[' → logprob: -9.484577178955078
    8. '])' → logprob: -10.359577178955078
    9. ')' → logprob: -10.609577178955078
    10. ']=' → logprob: -11.234577178955078

Token 394: '0' (ID: 15)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.5661624670028687
    2. '0' → logprob: -1.0661624670028687
    3. '1' → logprob: -2.441162586212158
    4. ' B' → logprob: -7.566162586212158
    5. ' ' → logprob: -8.066162109375
    6. '   ' → logprob: -9.941162109375
    7. '2' → logprob: -11.941162109375
    8. '(' → logprob: -12.566162109375
    9. '  ' → logprob: -12.753662109375
    10. '100' → logprob: -12.753662109375

Token 395: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.38095563650131226
    2. ':
' → logprob: -1.505955696105957
    3. ' and' → logprob: -3.005955696105957
    4. ' !=' → logprob: -4.130955696105957
    5. '!=' → logprob: -4.880955696105957
    6. '==' → logprob: -5.380955696105957
    7. ',' → logprob: -5.630955696105957
    8. ' ' → logprob: -5.755955696105957
    9. 'and' → logprob: -6.380955696105957
    10. ' ^' → logprob: -6.505955696105957

Token 396: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.10035116225481033
    2. ' B' → logprob: -2.350351095199585
    3. '1' → logprob: -9.600351333618164
    4. ' ' → logprob: -9.850351333618164
    5. '0' → logprob: -11.475351333618164
    6. '   ' → logprob: -12.225351333618164
    7. '  ' → logprob: -13.225351333618164
    8. 'par' → logprob: -13.600351333618164
    9. 'b' → logprob: -13.662851333618164
    10. ' (' → logprob: -14.037851333618164

Token 397: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.010561962611973286
    2. '[' → logprob: -4.635561943054199
    3. ' [' → logprob: -7.885561943054199
    4. '==' → logprob: -8.3855619430542
    5. '[
' → logprob: -9.0105619430542
    6. '```' → logprob: -10.8855619430542
    7. ' ==' → logprob: -11.1355619430542
    8. ']' → logprob: -11.8855619430542
    9. ']==' → logprob: -12.2605619430542
    10. ' ' → logprob: -12.3855619430542

Token 398: '+' (ID: 10)
  Prédit: ']=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']==' → logprob: -0.6366390585899353
    2. '1' → logprob: -1.51163911819458
    3. '==' → logprob: -1.63663911819458
    4. ']' → logprob: -3.51163911819458
    5. '+' → logprob: -4.01163911819458
    6. ' ' → logprob: -6.26163911819458
    7. ' ==' → logprob: -6.26163911819458
    8. ']!=' → logprob: -7.01163911819458
    9. '[' → logprob: -7.26163911819458
    10. '!=' → logprob: -7.38663911819458

Token 399: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00351335690356791
    2. '0' → logprob: -6.003513336181641
    3. ' ' → logprob: -7.628513336181641
    4. ']' → logprob: -8.00351333618164
    5. ']==' → logprob: -8.50351333618164
    6. ']!=' → logprob: -12.75351333618164
    7. '==' → logprob: -13.00351333618164
    8. '```' → logprob: -13.12851333618164
    9. ']=' → logprob: -13.50351333618164
    10. '=' → logprob: -14.00351333618164

Token 400: ']==' (ID: 34128)
  Prédit: ']=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']==' → logprob: -0.129431813955307
    2. ']' → logprob: -2.25443172454834
    3. ']!=' → logprob: -4.12943172454834
    4. ')==' → logprob: -8.75443172454834
    5. ']^' → logprob: -9.87943172454834
    6. ']=='' → logprob: -10.37943172454834
    7. '==' → logprob: -10.37943172454834
    8. '']==' → logprob: -11.25443172454834
    9. ')!=' → logprob: -11.37943172454834
    10. '[' → logprob: -11.37943172454834

Token 401: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.012842059135437012
    2. '0' → logprob: -4.387842178344727
    3. ' ' → logprob: -8.012842178344727
    4. '```' → logprob: -15.200342178344727
    5. '   ' → logprob: -15.325342178344727
    6. '  ' → logprob: -15.950342178344727
    7. ')' → logprob: -16.887842178344727
    8. '-' → logprob: -17.012842178344727
    9. '`' → logprob: -17.075342178344727
    10. '(' → logprob: -17.200342178344727

Token 402: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.31714749336242676
    2. ':' → logprob: -1.3171474933624268
    3. '):
' → logprob: -6.692147254943848
    4. '   ' → logprob: -7.067147254943848
    5. ' or' → logprob: -7.192147254943848
    6. ' and' → logprob: -7.567147254943848
    7. ',' → logprob: -8.067147254943848
    8. ':
' → logprob: -9.317147254943848
    9. '       ' → logprob: -10.567147254943848
    10. '):' → logprob: -10.942147254943848

Token 403: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01904965192079544
    2. '       ' → logprob: -4.144049644470215
    3. 'par' → logprob: -6.144049644470215
    4. ' parity' → logprob: -7.894049644470215
    5. ' par' → logprob: -8.269049644470215
    6. '	par' → logprob: -8.519049644470215
    7. ':' → logprob: -12.519049644470215
    8. '           ' → logprob: -12.519049644470215
    9. '  ' → logprob: -12.644049644470215
    10. ',' → logprob: -12.644049644470215

Token 404: ' parity' (ID: 113181)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.001581639633513987
    2. '   ' → logprob: -6.50158166885376
    3. ' parity' → logprob: -9.501581192016602
    4. '1' → logprob: -12.751581192016602
    5. '	par' → logprob: -14.751581192016602
    6. 'for' → logprob: -15.876581192016602
    7. '       ' → logprob: -15.876581192016602
    8. ' par' → logprob: -15.876581192016602
    9. 'Parity' → logprob: -15.876581192016602
    10. '0' → logprob: -16.5015811920166

Token 405: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00015788905147928745
    2. '[' → logprob: -9.250158309936523
    3. ' ^=' → logprob: -9.750158309936523
    4. '^' → logprob: -13.250158309936523
    5. ' [' → logprob: -14.250158309936523
    6. '[v' → logprob: -15.000158309936523
    7. '^[' → logprob: -15.750158309936523
    8. '[
' → logprob: -16.375158309936523
    9. '=' → logprob: -16.500158309936523
    10. '[^' → logprob: -16.625158309936523

Token 406: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07626264542341232
    2. ']=' → logprob: -2.8262627124786377
    3. ']+=' → logprob: -4.701262474060059
    4. '=' → logprob: -6.201262474060059
    5. ']^' → logprob: -6.701262474060059
    6. '+' → logprob: -6.826262474060059
    7. '^' → logprob: -7.451262474060059
    8. ' ]' → logprob: -9.326262474060059
    9. ']+' → logprob: -10.076262474060059
    10. ' ^=' → logprob: -11.076262474060059

Token 407: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1630452275276184
    2. ' ^=' → logprob: -2.5380451679229736
    3. ' =' → logprob: -2.6630451679229736
    4. '^' → logprob: -6.413045406341553
    5. '+=' → logprob: -10.663044929504395
    6. ' ^' → logprob: -11.663044929504395
    7. ' ' → logprob: -11.913044929504395
    8. ' +=' → logprob: -12.413044929504395
    9. ' |=' → logprob: -12.538044929504395
    10. '   ' → logprob: -14.163044929504395

Token 408: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.016229433938860893
    2. '0' → logprob: -4.391229629516602
    3. 'par' → logprob: -5.641229629516602
    4. '   ' → logprob: -9.141229629516602
    5. ' ' → logprob: -10.516229629516602
    6. '(par' → logprob: -10.766229629516602
    7. '(' → logprob: -13.016229629516602
    8. ' parity' → logprob: -13.641229629516602
    9. 'p' → logprob: -14.516229629516602
    10. '2' → logprob: -14.703729629516602

Token 409: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0028809530194848776
    2. '0' → logprob: -6.377881050109863
    3. 'par' → logprob: -7.002881050109863
    4. '(par' → logprob: -8.377881050109863
    5. '(' → logprob: -10.627881050109863
    6. ' ' → logprob: -11.752881050109863
    7. '   ' → logprob: -13.002881050109863
    8. '(i' → logprob: -13.252881050109863
    9. 'i' → logprob: -14.252881050109863
    10. '(p' → logprob: -14.877881050109863

Token 410: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41066762804985046
    2. 'elif' → logprob: -2.410667657852173
    3. '<|end|>' → logprob: -2.410667657852173
    4. ' else' → logprob: -2.785667657852173
    5. 'else' → logprob: -2.910667657852173
    6. ' elif' → logprob: -3.535667657852173
    7. ' ' → logprob: -5.035667419433594
    8. '
' → logprob: -6.285667419433594
    9. '	elif' → logprob: -6.410667419433594
    10. '  ' → logprob: -7.660667419433594

Token 411: '   ' (ID: 271)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.27423980832099915
    2. 'else' → logprob: -1.5242397785186768
    3. '<|end|>' → logprob: -4.649240016937256
    4. '   ' → logprob: -5.149240016937256
    5. ' else' → logprob: -5.774240016937256
    6. ' elif' → logprob: -5.899240016937256
    7. ' ' → logprob: -8.024239540100098
    8. '	elif' → logprob: -8.524239540100098
    9. ')' → logprob: -9.274239540100098
    10. '...' → logprob: -10.274239540100098

Token 412: ' if' (ID: 538)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.22590233385562897
    2. 'else' → logprob: -1.7259023189544678
    3. ' else' → logprob: -4.225902557373047
    4. ' elif' → logprob: -4.725902557373047
    5. '<|end|>' → logprob: -8.100902557373047
    6. ' ' → logprob: -8.350902557373047
    7. '	elif' → logprob: -9.850902557373047
    8. ')' → logprob: -10.225902557373047
    9. '   ' → logprob: -10.725902557373047
    10. '
' → logprob: -11.350902557373047

Token 413: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.20148271322250366
    2. 'B' → logprob: -1.7014827728271484
    3. ' ' → logprob: -9.951482772827148
    4. ' not' → logprob: -12.451482772827148
    5. 'b' → logprob: -12.576482772827148
    6. '   ' → logprob: -13.076482772827148
    7. ' (' → logprob: -13.201482772827148
    8. '(B' → logprob: -13.451482772827148
    9. 'par' → logprob: -13.576482772827148
    10. 'not' → logprob: -13.576482772827148

Token 414: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.6405310816480778e-05
    2. '[' → logprob: -11.500016212463379
    3. 'i' → logprob: -12.500016212463379
    4. ' [' → logprob: -13.875016212463379
    5. '```' → logprob: -14.125016212463379
    6. '[
' → logprob: -14.875016212463379
    7. ' i' → logprob: -16.250017166137695
    8. '[I' → logprob: -16.500017166137695
    9. '   ' → logprob: -16.625017166137695
    10. ' ' → logprob: -17.000017166137695

Token 415: ']==' (ID: 34128)
  Prédit: ']=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']==' → logprob: -0.09091708064079285
    2. '+' → logprob: -3.0909171104431152
    3. ']' → logprob: -3.3409171104431152
    4. '[i' → logprob: -5.465917110443115
    5. ']+' → logprob: -7.340917110443115
    6. ']!=' → logprob: -7.340917110443115
    7. '==' → logprob: -8.340916633605957
    8. '[' → logprob: -9.465916633605957
    9. ' +' → logprob: -9.965916633605957
    10. '   ' → logprob: -10.215916633605957

Token 416: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015412846114486456
    2. ' ' → logprob: -7.0015411376953125
    3. '0' → logprob: -7.3765411376953125
    4. '   ' → logprob: -13.876541137695312
    5. '  ' → logprob: -14.814041137695312
    6. '
' → logprob: -15.564041137695312
    7. ' ' → logprob: -15.626541137695312
    8. 'B' → logprob: -15.751541137695312
    9. '```' → logprob: -15.876541137695312
    10. '(' → logprob: -16.126541137695312

Token 417: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.1608455628156662
    2. 'and' → logprob: -1.9108455181121826
    3. '==' → logprob: -7.535845756530762
    4. ' ' → logprob: -10.035845756530762
    5. ' ==' → logprob: -11.035845756530762
    6. '   ' → logprob: -11.160845756530762
    7. '=' → logprob: -12.160845756530762
    8. '	and' → logprob: -13.285845756530762
    9. '0' → logprob: -14.160845756530762
    10. '  ' → logprob: -14.160845756530762

Token 418: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.2524169087409973
    2. 'B' → logprob: -1.5024168491363525
    3. '0' → logprob: -8.127416610717773
    4. ' ' → logprob: -8.627416610717773
    5. '   ' → logprob: -12.752416610717773
    6. 'b' → logprob: -13.189916610717773
    7. '    ' → logprob: -13.814916610717773
    8. ' ' → logprob: -13.939916610717773
    9. ' parity' → logprob: -14.252416610717773
    10. '  ' → logprob: -14.439916610717773

Token 419: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.085517113911919e-05
    2. '[' → logprob: -10.50005054473877
    3. '+' → logprob: -11.00005054473877
    4. '[
' → logprob: -12.75005054473877
    5. '```' → logprob: -13.50005054473877
    6. 'i' → logprob: -14.25005054473877
    7. ' [' → logprob: -14.37505054473877
    8. '==' → logprob: -14.87505054473877
    9. '
' → logprob: -16.250051498413086
    10. '   ' → logprob: -16.250051498413086

Token 420: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.029130762442946434
    2. '==' → logprob: -3.779130697250366
    3. ']==' → logprob: -5.529130935668945
    4. '[i' → logprob: -6.404130935668945
    5. '[' → logprob: -9.779130935668945
    6. '```' → logprob: -10.029130935668945
    7. '+i' → logprob: -10.154130935668945
    8. '-' → logprob: -10.279130935668945
    9. ' +' → logprob: -11.154130935668945
    10. ' ==' → logprob: -11.529130935668945

Token 421: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00017803447553887963
    2. ' ' → logprob: -9.125178337097168
    3. '1' → logprob: -9.625178337097168
    4. '```' → logprob: -14.000178337097168
    5. '   ' → logprob: -14.750178337097168
    6. '-' → logprob: -15.000178337097168
    7. '
' → logprob: -15.125178337097168
    8. '=' → logprob: -15.375178337097168
    9. '==' → logprob: -15.750178337097168
    10. '  ' → logprob: -15.812678337097168

Token 422: ']==' (ID: 34128)
  Prédit: ']=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']==' → logprob: -0.12697650492191315
    2. '==' → logprob: -2.126976490020752
    3. ']' → logprob: -10.87697696685791
    4. '']==' → logprob: -11.50197696685791
    5. ')==' → logprob: -12.12697696685791
    6. '```' → logprob: -12.12697696685791
    7. '()==' → logprob: -12.62697696685791
    8. ' ==' → logprob: -13.12697696685791
    9. '==-' → logprob: -13.75197696685791
    10. '==
' → logprob: -14.00197696685791

Token 423: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.511406809295295e-06
    2. ' ' → logprob: -12.000006675720215
    3. '1' → logprob: -15.625006675720215
    4. '2' → logprob: -16.6250057220459
    5. '۰' → logprob: -17.5000057220459
    6. '00' → logprob: -18.5625057220459
    7. '=' → logprob: -18.6250057220459
    8. '
' → logprob: -18.6250057220459
    9. '   ' → logprob: -18.7500057220459
    10. '4' → logprob: -19.0625057220459

Token 424: ':
' (ID: 734)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.662268877029419
    2. ' =' → logprob: -0.912268877029419
    3. '   ' → logprob: -3.287268877029419
    4. ':' → logprob: -3.787268877029419
    5. ':
' → logprob: -4.03726863861084
    6. '       ' → logprob: -5.53726863861084
    7. '):
' → logprob: -8.03726863861084
    8. ',' → logprob: -8.41226863861084
    9. ']' → logprob: -9.16226863861084
    10. ')' → logprob: -9.16226863861084

Token 425: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11367184668779373
    2. ' parity' → logprob: -2.8636717796325684
    3. 'par' → logprob: -3.4886717796325684
    4. '   ' → logprob: -4.238671779632568
    5. '1' → logprob: -5.363671779632568
    6. ' par' → logprob: -8.113672256469727
    7. '           ' → logprob: -9.113672256469727
    8. '=' → logprob: -9.238672256469727
    9. ' =' → logprob: -9.363672256469727
    10. '	par' → logprob: -10.238672256469727

Token 426: ' parity' (ID: 113181)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3536456227302551
    2. 'par' → logprob: -1.2286455631256104
    3. ' parity' → logprob: -5.3536458015441895
    4. '   ' → logprob: -8.603645324707031
    5. '0' → logprob: -8.853645324707031
    6. '       ' → logprob: -9.603645324707031
    7. ' ' → logprob: -10.228645324707031
    8. '           ' → logprob: -11.603645324707031
    9. 'Parity' → logprob: -12.353645324707031
    10. 'pare' → logprob: -13.228645324707031

Token 427: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.990154047845863e-05
    2. '[' → logprob: -10.000049591064453
    3. '=' → logprob: -12.625049591064453
    4. ' =' → logprob: -14.750049591064453
    5. 'i' → logprob: -15.000049591064453
    6. '[
' → logprob: -16.250049591064453
    7. ' [' → logprob: -16.625049591064453
    8. ']' → logprob: -16.875049591064453
    9. '```' → logprob: -17.250049591064453
    10. '=i' → logprob: -18.000049591064453

Token 428: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1572582721710205
    2. '=' → logprob: -2.0322582721710205
    3. ']=' → logprob: -4.782258033752441
    4. ' =' → logprob: -5.532258033752441
    5. '[i' → logprob: -6.282258033752441
    6. ' ]' → logprob: -8.657258033752441
    7. '[' → logprob: -10.157258033752441
    8. '   ' → logprob: -10.532258033752441
    9. ']+=' → logprob: -11.407258033752441
    10. ')' → logprob: -12.157258033752441

Token 429: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014164102263748646
    2. ' =' → logprob: -4.264163970947266
    3. ' ^=' → logprob: -15.389163970947266
    4. ' ' → logprob: -16.139163970947266
    5. '[' → logprob: -16.264163970947266
    6. ' |=' → logprob: -17.514163970947266
    7. '   ' → logprob: -17.889163970947266
    8. '=
' → logprob: -18.014163970947266
    9. '+=' → logprob: -18.264163970947266
    10. ']' → logprob: -18.264163970947266

Token 430: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4259644558478612e-05
    2. ' ' → logprob: -11.500014305114746
    3. '0' → logprob: -12.500014305114746
    4. '   ' → logprob: -15.625014305114746
    5. '-' → logprob: -15.875014305114746
    6. '2' → logprob: -16.62501335144043
    7. '  ' → logprob: -18.50001335144043
    8. ' -' → logprob: -18.75001335144043
    9. '	' → logprob: -19.87501335144043
    10. ' ' → logprob: -20.25001335144043

Token 431: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.553032628493384e-05
    2. '0' → logprob: -9.500075340270996
    3. ' ' → logprob: -14.375075340270996
    4. '-' → logprob: -17.875076293945312
    5. '2' → logprob: -18.875076293945312
    6. '   ' → logprob: -19.000076293945312
    7. '
' → logprob: -20.250076293945312
    8. '  ' → logprob: -22.062576293945312
    9. ' -' → logprob: -22.125076293945312
    10. '１' → logprob: -22.187576293945312

Token 432: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 433: '#' (ID: 2)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.629817545413971
    2. 'for' → logprob: -1.7548174858093262
    3. 'stack' → logprob: -1.8798174858093262
    4. 'from' → logprob: -2.379817485809326
    5. 'queue' → logprob: -4.004817485809326
    6. 'q' → logprob: -4.879817485809326
    7. 'import' → logprob: -5.379817485809326
    8. 'deque' → logprob: -5.504817485809326
    9. 'dp' → logprob: -6.129817485809326
    10. 'd' → logprob: -6.254817485809326

Token 434: ' Find' (ID: 9764)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.21605715155601501
    2. 'visited' → logprob: -1.9660571813583374
    3. 'stack' → logprob: -3.966057062149048
    4. 'dist' → logprob: -4.466057300567627
    5. 'import' → logprob: -4.841057300567627
    6. 'q' → logprob: -5.466057300567627
    7. 'queue' → logprob: -5.716057300567627
    8. 'dp' → logprob: -5.966057300567627
    9. 'used' → logprob: -6.466057300567627
    10. 'color' → logprob: -7.216057300567627

Token 435: ' "' (ID: 392)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.9726065397262573
    2. 'queue' → logprob: -1.8476065397262573
    3. 'stack' → logprob: -2.222606658935547
    4. 'from' → logprob: -2.472606658935547
    5. ' visited' → logprob: -2.597606658935547
    6. 'dist' → logprob: -2.972606658935547
    7. ' queue' → logprob: -2.972606658935547
    8. ' stack' → logprob: -3.472606658935547
    9. 'def' → logprob: -4.097606658935547
    10. ' dist' → logprob: -4.472606658935547

Token 436: 'trees' (ID: 140063)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.25702744722366333
    2. 'from' → logprob: -2.5070273876190186
    3. 'stack' → logprob: -2.6320273876190186
    4. 'queue' → logprob: -3.1320273876190186
    5. 'def' → logprob: -4.882027626037598
    6. 'used' → logprob: -5.132027626037598
    7. 'dist' → logprob: -5.382027626037598
    8. 'q' → logprob: -5.632027626037598
    9. 'components' → logprob: -6.882027626037598
    10. 'color' → logprob: -6.882027626037598

Token 437: '"' (ID: 1)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.26994624733924866
    2. '"' → logprob: -2.019946336746216
    3. 'and' → logprob: -3.894946336746216
    4. '
' → logprob: -4.144946098327637
    5. '=' → logprob: -4.769946098327637
    6. 'def' → logprob: -4.894946098327637
    7. ' in' → logprob: -5.019946098327637
    8. ',' → logprob: -5.144946098327637
    9. ' and' → logprob: -5.144946098327637
    10. '_d' → logprob: -5.519946098327637

Token 438: ' -' (ID: 533)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.012589002028107643
    2. 'from' → logprob: -5.512588977813721
    3. 'seen' → logprob: -5.512588977813721
    4. 'used' → logprob: -6.387588977813721
    5. 'vis' → logprob: -6.762588977813721
    6. 'stack' → logprob: -7.387588977813721
    7. 'import' → logprob: -8.762589454650879
    8. 'def' → logprob: -8.887589454650879
    9. 'roots' → logprob: -9.137589454650879
    10. ' visited' → logprob: -9.137589454650879

Token 439: ' components' (ID: 10674)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.017258694395422935
    2. ' visited' → logprob: -4.892258644104004
    3. 'seen' → logprob: -5.392258644104004
    4. 'used' → logprob: -6.017258644104004
    5. 'vis' → logprob: -7.017258644104004
    6. 'from' → logprob: -7.017258644104004
    7. 'color' → logprob: -8.392258644104004
    8. ' seen' → logprob: -8.392258644104004
    9. 'import' → logprob: -8.767258644104004
    10. ' used' → logprob: -9.892258644104004

Token 440: '?
' (ID: 3901)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.012270400300621986
    2. 'seen' → logprob: -4.887270450592041
    3. 'comp' → logprob: -6.137270450592041
    4. 'used' → logprob: -6.762270450592041
    5. 'vis' → logprob: -7.262270450592041
    6. 'from' → logprob: -8.262269973754883
    7. 'color' → logprob: -8.887269973754883
    8. 'components' → logprob: -9.762269973754883
    9. 'component' → logprob: -10.262269973754883
    10. 'import' → logprob: -10.512269973754883

Token 441: 'seen' (ID: 34177)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.010294387117028236
    2. 'seen' → logprob: -5.260294437408447
    3. 'from' → logprob: -6.260294437408447
    4. 'used' → logprob: -6.635294437408447
    5. 'comp' → logprob: -7.135294437408447
    6. 'vis' → logprob: -7.760294437408447
    7. 'color' → logprob: -7.885294437408447
    8. 'stack' → logprob: -10.135293960571289
    9. 'component' → logprob: -10.260293960571289
    10. 'parent' → logprob: -10.385293960571289

Token 442: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1602446287870407
    2. '=' → logprob: -1.9102445840835571
    3. '[' → logprob: -11.285244941711426
    4. '=[' → logprob: -12.410244941711426
    5. ' =[' → logprob: -12.910244941711426
    6. ' ' → logprob: -14.285244941711426
    7. '=set' → logprob: -14.785244941711426
    8. ',' → logprob: -16.53524398803711
    9. '```' → logprob: -17.03524398803711
    10. ' [' → logprob: -17.16024398803711

Token 443: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03924082592129707
    2. ' [' → logprob: -3.289240837097168
    3. 'set' → logprob: -6.789240837097168
    4. ' set' → logprob: -9.664240837097168
    5. '[s' → logprob: -12.289240837097168
    6. '{' → logprob: -12.414240837097168
    7. '(set' → logprob: -15.664240837097168
    8. ' ' → logprob: -16.16423988342285
    9. '=set' → logprob: -16.41423988342285
    10. '[-' → logprob: -16.53923988342285

Token 444: '0' (ID: 15)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0003424951864872128
    2. '0' → logprob: -8.00034236907959
    3. ' False' → logprob: -11.87534236907959
    4. '(False' → logprob: -16.750343322753906
    5. 'True' → logprob: -18.000343322753906
    6. '[' → logprob: -18.875343322753906
    7. ' ' → logprob: -21.000343322753906
    8. '=False' → logprob: -21.625343322753906
    9. '.False' → logprob: -21.625343322753906
    10. '
' → logprob: -21.750343322753906

Token 445: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.4744633734226227
    2. ']' → logprob: -0.9744633436203003
    3. ']*(' → logprob: -8.09946346282959
    4. ' ]' → logprob: -10.34946346282959
    5. ']+' → logprob: -10.47446346282959
    6. 'for' → logprob: -11.72446346282959
    7. ' for' → logprob: -11.97446346282959
    8. '*' → logprob: -12.34946346282959
    9. '(sz' → logprob: -12.97446346282959
    10. ' ' → logprob: -15.47446346282959

Token 446: 'sz' (ID: 13849)
  Prédit: 'sz'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sz' → logprob: -7.100059156073257e-05
    2. ' sz' → logprob: -10.250070571899414
    3. '(sz' → logprob: -10.250070571899414
    4. 'len' → logprob: -16.125070571899414
    5. '(' → logprob: -16.375070571899414
    6. '
' → logprob: -18.500070571899414
    7. ' ' → logprob: -19.125070571899414
    8. '.sz' → logprob: -19.250070571899414
    9. '   ' → logprob: -19.375070571899414
    10. '```' → logprob: -19.375070571899414

Token 447: '
' (ID: 198)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.16815418004989624
    2. 'for' → logprob: -2.668154239654541
    3. 'from' → logprob: -2.668154239654541
    4. 'def' → logprob: -4.668154239654541
    5. 'import' → logprob: -5.168154239654541
    6. 'queue' → logprob: -8.043153762817383
    7. 'stk' → logprob: -9.043153762817383
    8. 'q' → logprob: -9.168153762817383
    9. 'cur' → logprob: -9.168153762817383
    10. 'order' → logprob: -9.918153762817383

Token 448: 'trees' (ID: 140063)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.0213305950164795
    2. 'for' → logprob: -1.2713305950164795
    3. 'def' → logprob: -1.3963305950164795
    4. 'stack' → logprob: -2.7713305950164795
    5. 'import' → logprob: -4.146330833435059
    6. 'comp' → logprob: -4.646330833435059
    7. 'components' → logprob: -5.521330833435059
    8. 'order' → logprob: -5.646330833435059
    9. 'ans' → logprob: -5.771330833435059
    10. 'res' → logprob: -6.021330833435059

Token 449: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6932128071784973
    2. ' =' → logprob: -0.6932128071784973
    3. '=[]' → logprob: -9.818212509155273
    4. ',' → logprob: -12.068212509155273
    5. '[' → logprob: -13.568212509155273
    6. '=[' → logprob: -13.693212509155273
    7. '=[]
' → logprob: -13.818212509155273
    8. '[]' → logprob: -14.568212509155273
    9. ' ' → logprob: -14.818212509155273
    10. ' =[' → logprob: -15.568212509155273

Token 450: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.006179879419505596
    2. '0' → logprob: -5.2561798095703125
    3. ' []' → logprob: -7.5061798095703125
    4. '[]
' → logprob: -8.006179809570312
    5. '[' → logprob: -10.256179809570312
    6. ' ' → logprob: -11.006179809570312
    7. '[]}' → logprob: -12.881179809570312
    8. '{}' → logprob: -13.006179809570312
    9. '[][]' → logprob: -13.131179809570312
    10. '[]

' → logprob: -13.256179809570312

Token 451: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14080631732940674
    2. 'def' → logprob: -2.140806198120117
    3. 'from' → logprob: -4.390806198120117
    4. 'stack' → logprob: -6.640806198120117
    5. 'import' → logprob: -9.640806198120117
    6. ' for' → logprob: -11.890806198120117
    7. '
' → logprob: -12.265806198120117
    8. '```' → logprob: -13.015806198120117
    9. 'q' → logprob: -13.390806198120117
    10. 'queue' → logprob: -13.765806198120117

Token 452: ' root' (ID: 6577)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2327190339565277
    2. 'v' → logprob: -1.60771906375885
    3. 'x' → logprob: -5.8577189445495605
    4. 'u' → logprob: -6.4827189445495605
    5. ' i' → logprob: -6.8577189445495605
    6. 'node' → logprob: -7.1077189445495605
    7. ' v' → logprob: -7.6077189445495605
    8. 's' → logprob: -8.232719421386719
    9. 'start' → logprob: -8.857719421386719
    10. 'root' → logprob: -10.107719421386719

Token 453: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.34846460819244385
    2. 'in' → logprob: -1.2234646081924438
    3. ' ' → logprob: -11.598464965820312
    4. '	in' → logprob: -12.848464965820312
    5. 'import' → logprob: -13.223464965820312
    6. '_in' → logprob: -13.473464965820312
    7. 'i' → logprob: -13.723464965820312
    8. '_' → logprob: -14.723464965820312
    9. '```' → logprob: -14.723464965820312
    10. 'range' → logprob: -14.973464965820312

Token 454: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.002475777640938759
    2. ' range' → logprob: -6.002475738525391
    3. '(range' → logprob: -16.87747573852539
    4. 'ra' → logprob: -17.37747573852539
    5. ' ' → logprob: -17.75247573852539
    6. 'r' → logprob: -18.25247573852539
    7. 'in' → logprob: -18.50247573852539
    8. '	range' → logprob: -18.75247573852539
    9. '   ' → logprob: -19.25247573852539
    10. 'rang' → logprob: -19.25247573852539

Token 455: '(sz' (ID: 80788)
  Prédit: '(sz'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sz' → logprob: -0.00012154294381616637
    2. '(' → logprob: -9.250121116638184
    3. 'sz' → logprob: -10.625121116638184
    4. '(
' → logprob: -15.000121116638184
    5. ' sz' → logprob: -15.375121116638184
    6. '(s' → logprob: -15.875121116638184
    7. '1' → logprob: -16.5001220703125
    8. '(t' → logprob: -16.7501220703125
    9. '(len' → logprob: -16.8751220703125
    10. ' (' → logprob: -16.8751220703125

Token 456: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.00423771608620882
    2. '):' → logprob: -5.504237651824951
    3. '):
' → logprob: -9.37923812866211
    4. ':
' → logprob: -11.00423812866211
    5. '():
' → logprob: -11.25423812866211
    6. ':' → logprob: -11.62923812866211
    7. '+' → logprob: -11.75423812866211
    8. ']:
' → logprob: -12.50423812866211
    9. '()):
' → logprob: -12.75423812866211
    10. ' ):
' → logprob: -12.87923812866211

Token 457: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1467021107673645
    2. '   ' → logprob: -2.0217020511627197
    3. 'if' → logprob: -6.021702289581299
    4. '	if' → logprob: -6.521702289581299
    5. '   ' → logprob: -10.14670181274414
    6. '<|end|>' → logprob: -10.39670181274414
    7. '```' → logprob: -10.77170181274414
    8. ' ' → logprob: -11.89670181274414
    9. ' ' → logprob: -12.52170181274414
    10. 'If' → logprob: -12.77170181274414

Token 458: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0006850333884358406
    2. ' if' → logprob: -7.375685214996338
    3. '   ' → logprob: -10.12568473815918
    4. 'import' → logprob: -11.50068473815918
    5. '```' → logprob: -12.12568473815918
    6. 'stack' → logprob: -13.50068473815918
    7. 'from' → logprob: -14.62568473815918
    8. '	if' → logprob: -14.87568473815918
    9. 'If' → logprob: -15.37568473815918
    10. '
' → logprob: -16.12568473815918

Token 459: ' seen' (ID: 6177)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.26436877250671387
    2. ' not' → logprob: -1.5143687725067139
    3. 'seen' → logprob: -4.514369010925293
    4. ' seen' → logprob: -7.014369010925293
    5. '!' → logprob: -7.764369010925293
    6. '(not' → logprob: -10.514369010925293
    7. '   ' → logprob: -10.764369010925293
    8. 'se' → logprob: -10.889369010925293
    9. '	not' → logprob: -11.389369010925293
    10. ' ' → logprob: -12.139369010925293

Token 460: '[root' (ID: 185287)
  Prédit: '[root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[root' → logprob: -5.5577775128767826e-06
    2. '[' → logprob: -12.250005722045898
    3. ' [' → logprob: -14.750005722045898
    4. '==' → logprob: -16.3750057220459
    5. '```' → logprob: -16.6250057220459
    6. '[
' → logprob: -16.8750057220459
    7. '[token' → logprob: -16.8750057220459
    8. '[row' → logprob: -17.2500057220459
    9. '[cur' → logprob: -18.1250057220459
    10. 'root' → logprob: -18.2500057220459

Token 461: ']:
' (ID: 22152)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.1528535932302475
    2. ']==' → logprob: -2.277853488922119
    3. ' ==' → logprob: -3.402853488922119
    4. ']' → logprob: -5.402853488922119
    5. '=' → logprob: -8.027853965759277
    6. '==
' → logprob: -8.027853965759277
    7. ':' → logprob: -8.277853965759277
    8. ')==' → logprob: -8.652853965759277
    9. ']:
' → logprob: -9.402853965759277
    10. ']:' → logprob: -9.652853965759277

Token 462: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1399528682231903
    2. ' continue' → logprob: -2.1399528980255127
    3. '	continue' → logprob: -4.889952659606934
    4. 'continue' → logprob: -5.639952659606934
    5. '       ' → logprob: -6.389952659606934
    6. '   ' → logprob: -9.014952659606934
    7. '_continue' → logprob: -10.889952659606934
    8. '```' → logprob: -11.639952659606934
    9. ' continues' → logprob: -12.014952659606934
    10. '\t' → logprob: -12.264952659606934

Token 463: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.6788381338119507
    2. ' continue' → logprob: -0.9288381338119507
    3. '   ' → logprob: -2.5538382530212402
    4. '	continue' → logprob: -3.9288382530212402
    5. '       ' → logprob: -8.303837776184082
    6. '```' → logprob: -9.803837776184082
    7. '_continue' → logprob: -12.178837776184082
    8. '
' → logprob: -12.178837776184082
    9. '   ' → logprob: -12.428837776184082
    10. '           ' → logprob: -12.928837776184082

Token 464: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.040812890976667404
    2. ' stack' → logprob: -3.4158129692077637
    3. 'stack' → logprob: -5.665812969207764
    4. ' seen' → logprob: -6.540812969207764
    5. '
' → logprob: -7.165812969207764
    6. '```' → logprob: -7.290812969207764
    7. ' queue' → logprob: -8.415812492370605
    8. 'seen' → logprob: -8.790812492370605
    9. '	stack' → logprob: -8.915812492370605
    10. '    
' → logprob: -9.290812492370605

Token 465: '   ' (ID: 271)
  Prédit: ' stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stack' → logprob: -0.6583471894264221
    2. '   ' → logprob: -0.7833471894264221
    3. ' seen' → logprob: -4.783347129821777
    4. 'stack' → logprob: -5.033347129821777
    5. ' queue' → logprob: -5.283347129821777
    6. ' from' → logprob: -5.908347129821777
    7. '```' → logprob: -6.408347129821777
    8. '	stack' → logprob: -7.908347129821777
    9. 'from' → logprob: -8.533347129821777
    10. 'seen' → logprob: -9.658347129821777

Token 466: ' if' (ID: 538)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.008019556291401386
    2. '   ' → logprob: -5.75801944732666
    3. 'from' → logprob: -6.00801944732666
    4. ' stack' → logprob: -6.38301944732666
    5. 'queue' → logprob: -8.00801944732666
    6. 'stk' → logprob: -8.63301944732666
    7. 'q' → logprob: -9.00801944732666
    8. 'import' → logprob: -10.88301944732666
    9. 'dq' → logprob: -12.13301944732666
    10. ' ' → logprob: -12.50801944732666

Token 467: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.8356372714042664
    2. ' not' → logprob: -1.3356373310089111
    3. 'par' → logprob: -1.3356373310089111
    4. ' parity' → logprob: -4.085637092590332
    5. 'root' → logprob: -5.335637092590332
    6. 'graph' → logprob: -5.710637092590332
    7. 'len' → logprob: -6.085637092590332
    8. ' par' → logprob: -6.085637092590332
    9. 'A' → logprob: -6.210637092590332
    10. 'seen' → logprob: -6.210637092590332

Token 468: ' graph' (ID: 7465)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.7611961960792542
    2. 'graph' → logprob: -0.7611961960792542
    3. 'root' → logprob: -3.7611961364746094
    4. ' graph' → logprob: -4.261196136474609
    5. 'seen' → logprob: -4.761196136474609
    6. 'A' → logprob: -5.011196136474609
    7. ' parity' → logprob: -5.386196136474609
    8. ' par' → logprob: -6.386196136474609
    9. 'len' → logprob: -6.636196136474609
    10. '0' → logprob: -7.011196136474609

Token 469: '[root' (ID: 185287)
  Prédit: '[root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[root' → logprob: -1.1472419600977446e-06
    2. 'root' → logprob: -14.250000953674316
    3. '[' → logprob: -15.125000953674316
    4. '[node' → logprob: -17.375001907348633
    5. '```' → logprob: -17.375001907348633
    6. '(root' → logprob: -17.875001907348633
    7. '\[' → logprob: -18.000001907348633
    8. ' [' → logprob: -18.250001907348633
    9. '[
' → logprob: -18.500001907348633
    10. '
' → logprob: -18.750001907348633

Token 470: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1472400426864624
    2. ':' → logprob: -2.022240161895752
    3. ']:' → logprob: -5.772240161895752
    4. '):
' → logprob: -6.772240161895752
    5. ']):' → logprob: -8.897239685058594
    6. ':
' → logprob: -10.147239685058594
    7. '[' → logprob: -10.522239685058594
    8. '[]):' → logprob: -10.897239685058594
    9. '>:' → logprob: -11.022239685058594
    10. '}:' → logprob: -11.397239685058594

Token 471: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04069970175623894
    2. '       ' → logprob: -3.4156997203826904
    3. 'continue' → logprob: -5.040699481964111
    4. ' continue' → logprob: -7.665699481964111
    5. '```' → logprob: -10.29069995880127
    6. '	continue' → logprob: -10.41569995880127
    7. ':' → logprob: -11.79069995880127
    8. 'seen' → logprob: -12.29069995880127
    9. ':
' → logprob: -12.54069995880127
    10. '
' → logprob: -13.29069995880127

Token 472: ' continue' (ID: 4901)
  Prédit: 'seen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seen' → logprob: -0.41958528757095337
    2. 'trees' → logprob: -1.6695852279663086
    3. '   ' → logprob: -2.2945852279663086
    4. 'continue' (adapté à ' continue') → logprob: -3.0445852279663086
    5. '       ' → logprob: -6.044585227966309
    6. ' seen' → logprob: -6.544585227966309
    7. ' trees' → logprob: -7.044585227966309
    8. ' continue' → logprob: -7.169585227966309
    9. '     ' → logprob: -9.419585227966309
    10. ' ' → logprob: -9.669585227966309

Token 473: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03763136267662048
    2. ' stack' → logprob: -4.037631511688232
    3. '
' → logprob: -4.412631511688232
    4. ' seen' → logprob: -5.787631511688232
    5. ' queue' → logprob: -6.662631511688232
    6. 'stack' → logprob: -7.037631511688232
    7. '    
' → logprob: -7.662631511688232
    8. '```' → logprob: -7.787631511688232
    9. 'seen' → logprob: -8.162631034851074
    10. '	stack' → logprob: -8.787631034851074

Token 474: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14286479353904724
    2. ' stack' → logprob: -2.14286470413208
    3. 'stack' → logprob: -5.26786470413208
    4. ' queue' → logprob: -5.51786470413208
    5. ' seen' → logprob: -5.89286470413208
    6. ' from' → logprob: -6.64286470413208
    7. '
' → logprob: -7.76786470413208
    8. '```' → logprob: -7.76786470413208
    9. 'seen' → logprob: -8.017865180969238
    10. ' continue' → logprob: -8.142865180969238

Token 475: ' edges' (ID: 22569)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.014014940708875656
    2. 'q' → logprob: -5.264014720916748
    3. 'queue' → logprob: -5.764014720916748
    4. 'from' → logprob: -5.764014720916748
    5. '   ' → logprob: -6.889014720916748
    6. 'stk' → logprob: -7.514014720916748
    7. ' stack' → logprob: -8.264015197753906
    8. 'dq' → logprob: -8.639015197753906
    9. 'seen' → logprob: -9.389015197753906
    10. 'cur' → logprob: -9.514015197753906

Token 476: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09847667813301086
    2. ' =' → logprob: -2.4734766483306885
    3. '=[]' → logprob: -5.348476886749268
    4. '_stack' → logprob: -5.723476886749268
    5. 'stack' → logprob: -6.973476886749268
    6. '=[]
' → logprob: -8.22347640991211
    7. ' stack' → logprob: -8.84847640991211
    8. ',' → logprob: -10.47347640991211
    9. '=[' → logprob: -11.34847640991211
    10. '_nodes' → logprob: -11.47347640991211

Token 477: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.40855616331100464
    2. '[]' → logprob: -1.1585562229156494
    3. '[(' → logprob: -3.9085562229156494
    4. '[' → logprob: -6.65855598449707
    5. '[]

' → logprob: -10.53355598449707
    6. '0' → logprob: -10.78355598449707
    7. ' []
' → logprob: -11.28355598449707
    8. 'set' → logprob: -11.90855598449707
    9. '{}' → logprob: -11.90855598449707
    10. ' []' → logprob: -12.65855598449707

Token 478: '   ' (ID: 271)
  Prédit: ' stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stack' → logprob: -0.2762703001499176
    2. '   ' → logprob: -1.7762702703475952
    3. 'stack' → logprob: -2.6512703895568848
    4. ' queue' → logprob: -6.901270389556885
    5. ' from' → logprob: -8.776269912719727
    6. '	stack' → logprob: -9.276269912719727
    7. ' seen' → logprob: -9.526269912719727
    8. 'queue' → logprob: -9.901269912719727
    9. 'from' → logprob: -10.026269912719727
    10. '
' → logprob: -10.151269912719727

Token 479: ' seen' (ID: 6177)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.00042292833677493036
    2. 'from' → logprob: -8.875422477722168
    3. '   ' → logprob: -9.875422477722168
    4. 'q' → logprob: -9.875422477722168
    5. ' stack' → logprob: -9.875422477722168
    6. 'stk' → logprob: -10.125422477722168
    7. 'queue' → logprob: -10.250422477722168
    8. 'nodes' → logprob: -10.250422477722168
    9. 'import' → logprob: -12.250422477722168
    10. 'dq' → logprob: -12.375422477722168

Token 480: '[root' (ID: 185287)
  Prédit: '[root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[root' → logprob: -0.000498701527249068
    2. '[node' → logprob: -8.75049877166748
    3. 'root' → logprob: -9.12549877166748
    4. '[' → logprob: -9.62549877166748
    5. ' =' → logprob: -10.12549877166748
    6. '=root' → logprob: -10.50049877166748
    7. '(root' → logprob: -11.62549877166748
    8. 'for' → logprob: -11.87549877166748
    9. '_root' → logprob: -12.00049877166748
    10. '_node' → logprob: -12.00049877166748

Token 481: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.012114133685827255
    2. ']' → logprob: -4.88711404800415
    3. ' =' → logprob: -5.63711404800415
    4. ']=' → logprob: -7.01211404800415
    5. '[root' → logprob: -10.512114524841309
    6. '=True' → logprob: -13.137114524841309
    7. ',' → logprob: -13.887114524841309
    8. '[' → logprob: -14.012114524841309
    9. '=root' → logprob: -14.387114524841309
    10. ')' → logprob: -14.512114524841309

Token 482: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005235887598246336
    2. ' =' → logprob: -5.25523567199707
    3. '=True' → logprob: -13.25523567199707
    4. ',' → logprob: -16.63023567199707
    5. '+=' → logprob: -16.63023567199707
    6. '=
' → logprob: -16.63023567199707
    7. ' ' → logprob: -17.38023567199707
    8. '   ' → logprob: -17.38023567199707
    9. '=

' → logprob: -17.38023567199707
    10. '.=' → logprob: -18.38023567199707

Token 483: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.036524842376821e-05
    2. 'True' → logprob: -10.250040054321289
    3. ' ' → logprob: -12.250040054321289
    4. ' True' → logprob: -16.00004005432129
    5. 'root' → logprob: -17.12504005432129
    6. '   ' → logprob: -18.25004005432129
    7. '
' → logprob: -18.62504005432129
    8. '[root' → logprob: -19.37504005432129
    9. '  ' → logprob: -19.75004005432129
    10. '{' → logprob: -20.00004005432129

Token 484: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000491076149046421
    2. 'True' → logprob: -7.625491142272949
    3. ' ' → logprob: -12.87549114227295
    4. ' True' → logprob: -14.37549114227295
    5. 'root' → logprob: -18.250490188598633
    6. '   ' → logprob: -18.375490188598633
    7. 'true' → logprob: -19.000490188598633
    8. '
' → logprob: -19.000490188598633
    9. '{' → logprob: -19.500490188598633
    10. '2' → logprob: -19.625490188598633

Token 485: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00016837897419463843
    2. ' stack' → logprob: -9.750168800354004
    3. 'stack' → logprob: -10.125168800354004
    4. '	stack' → logprob: -10.125168800354004
    5. '```' → logprob: -11.125168800354004
    6. 'import' → logprob: -12.250168800354004
    7. 'from' → logprob: -12.375168800354004
    8. ' from' → logprob: -13.125168800354004
    9. ' queue' → logprob: -14.000168800354004
    10. '	queue' → logprob: -14.125168800354004

Token 486: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00031258241506293416
    2. 'stack' → logprob: -9.000312805175781
    3. ' stack' → logprob: -9.000312805175781
    4. '```' → logprob: -10.750312805175781
    5. '	stack' → logprob: -11.125312805175781
    6. ' from' → logprob: -11.625312805175781
    7. 'from' → logprob: -11.750312805175781
    8. 'import' → logprob: -12.375312805175781
    9. '
' → logprob: -12.500312805175781
    10. ' queue' → logprob: -13.000312805175781

Token 487: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' (adapté à ' stack') → logprob: -0.25419923663139343
    2. 'from' → logprob: -1.5041992664337158
    3. 'import' → logprob: -7.129199028015137
    4. 'queue' → logprob: -7.254199028015137
    5. 'q' → logprob: -7.504199028015137
    6. '   ' → logprob: -9.004199028015137
    7. 'dq' → logprob: -10.129199028015137
    8. '```' → logprob: -11.004199028015137
    9. 'front' → logprob: -11.879199028015137
    10. 'deque' → logprob: -12.129199028015137

Token 488: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16077451407909393
    2. '=' → logprob: -1.9107744693756104
    3. '.append' → logprob: -8.035774230957031
    4. '=[' → logprob: -9.035774230957031
    5. ' =[' → logprob: -9.785774230957031
    6. '=[]' → logprob: -10.410774230957031
    7. '	' → logprob: -12.035774230957031
    8. '=[
' → logprob: -12.910774230957031
    9. '[' → logprob: -13.160774230957031
    10. '    ' → logprob: -13.285774230957031

Token 489: ' [' (ID: 723)
  Prédit: '[root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[root' → logprob: -0.0057759154587984085
    2. '[(' → logprob: -5.2557759284973145
    3. '[' → logprob: -7.7557759284973145
    4. ' [' → logprob: -9.255775451660156
    5. ' [(' → logprob: -11.130775451660156
    6. '[r' → logprob: -13.630775451660156
    7. '[top' → logprob: -14.380775451660156
    8. '[parent' → logprob: -14.630775451660156
    9. '[node' → logprob: -15.130775451660156
    10. '   ' → logprob: -15.255775451660156

Token 490: 'root' (ID: 5488)
  Prédit: 'root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.0005207431968301535
    2. '(root' → logprob: -7.875520706176758
    3. ' root' → logprob: -8.875520706176758
    4. '[root' → logprob: -14.875520706176758
    5. '   ' → logprob: -15.625520706176758
    6. ' (' → logprob: -15.875520706176758
    7. '(' → logprob: -16.375520706176758
    8. '	root' → logprob: -17.125520706176758
    9. '/root' → logprob: -17.375520706176758
    10. ' ' → logprob: -18.250520706176758

Token 491: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.38842135667800903
    2. ']' → logprob: -1.1384212970733643
    3. '   ' → logprob: -6.513421535491943
    4. ' ]
' → logprob: -10.638421058654785
    5. ' ]' → logprob: -11.388421058654785
    6. '
' → logprob: -11.888421058654785
    7. ']

' → logprob: -12.013421058654785
    8. ']
' → logprob: -12.263421058654785
    9. '[' → logprob: -13.013421058654785
    10. ',' → logprob: -13.013421058654785

Token 492: '   ' (ID: 271)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.3477608859539032
    2. '   ' → logprob: -1.9727609157562256
    3. ' while' → logprob: -1.9727609157562256
    4. '	while' → logprob: -4.4727606773376465
    5. '```' → logprob: -5.5977606773376465
    6. '
' → logprob: -8.472761154174805
    7. 'While' → logprob: -8.597761154174805
    8. '    
' → logprob: -10.847761154174805
    9. '``' → logprob: -11.972761154174805
    10. '\t' → logprob: -11.972761154174805

Token 493: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.002797391265630722
    2. '   ' → logprob: -6.002797603607178
    3. ' while' → logprob: -8.25279712677002
    4. '```' → logprob: -10.37779712677002
    5. '	while' → logprob: -11.25279712677002
    6. 'idx' → logprob: -12.37779712677002
    7. 'While' → logprob: -12.62779712677002
    8. 'v' → logprob: -13.00279712677002
    9. 'u' → logprob: -13.25279712677002
    10. 'parent' → logprob: -13.37779712677002

Token 494: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.008615161292254925
    2. ' stack' → logprob: -4.758615016937256
    3. '(stack' → logprob: -14.758615493774414
    4. '	stack' → logprob: -15.508615493774414
    5. 'len' → logprob: -17.508615493774414
    6. ' ' → logprob: -17.883615493774414
    7. '   ' → logprob: -18.633615493774414
    8. '  ' → logprob: -20.383615493774414
    9. '
' → logprob: -20.758615493774414
    10. 'Stack' → logprob: -20.758615493774414

Token 495: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11132358759641647
    2. ':
' → logprob: -2.611323595046997
    3. '.pop' → logprob: -3.486323595046997
    4. '[-' → logprob: -7.736323356628418
    5. '):' → logprob: -7.986323356628418
    6. '):
' → logprob: -8.361323356628418
    7. 'pop' → logprob: -8.986323356628418
    8. '```' → logprob: -9.861323356628418
    9. '.append' → logprob: -10.486323356628418
    10. '   ' → logprob: -10.611323356628418

Token 496: '       ' (ID: 309)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.6266587376594543
    2. '   ' → logprob: -1.1266586780548096
    3. ' stack' → logprob: -2.3766586780548096
    4. '	stack' → logprob: -3.2516586780548096
    5. 'node' → logprob: -5.251658916473389
    6. 'v' → logprob: -6.376658916473389
    7. ' node' → logprob: -6.501658916473389
    8. 'pop' → logprob: -7.876658916473389
    9. '(stack' → logprob: -8.25165843963623
    10. '	node' → logprob: -8.50165843963623

Token 497: ' v' (ID: 323)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.6887447834014893
    2. 'v' (adapté à ' v') → logprob: -0.9387447834014893
    3. 'node' → logprob: -2.6887447834014893
    4. '   ' → logprob: -4.43874454498291
    5. ' u' → logprob: -4.68874454498291
    6. ' v' → logprob: -5.06374454498291
    7. ' node' → logprob: -5.06374454498291
    8. 'cur' → logprob: -5.56374454498291
    9. 'x' → logprob: -6.81374454498291
    10. 'curr' → logprob: -10.06374454498291

Token 498: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868790566921234
    2. '=' → logprob: -1.1368790864944458
    3. '	' → logprob: -12.761878967285156
    4. '=v' → logprob: -12.761878967285156
    5. '.pop' → logprob: -14.886878967285156
    6. '   ' → logprob: -14.886878967285156
    7. ' ' → logprob: -15.136878967285156
    8. ',' → logprob: -15.136878967285156
    9. 'v' → logprob: -15.761878967285156
    10. '    ' → logprob: -15.886878967285156

Token 499: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.023245712742209435
    2. ' stack' → logprob: -3.7732458114624023
    3. '	stack' → logprob: -15.773245811462402
    4. '(stack' → logprob: -17.148244857788086
    5. '   ' → logprob: -19.273244857788086
    6. ' ' → logprob: -20.273244857788086
    7. '.stack' → logprob: -20.648244857788086
    8. '_stack' → logprob: -20.648244857788086
    9. 'pop' → logprob: -21.523244857788086
    10. 'stock' → logprob: -22.148244857788086

Token 500: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.00012475410767365247
    2. 'pop' → logprob: -9.00012493133545
    3. '[-' → logprob: -14.62512493133545
    4. 'Pop' → logprob: -15.00012493133545
    5. ' pop' → logprob: -15.25012493133545
    6. '.' → logprob: -16.250123977661133
    7. '   ' → logprob: -16.375123977661133
    8. '	pop' → logprob: -16.500123977661133
    9. '.append' → logprob: -17.500123977661133
    10. '=' → logprob: -17.500123977661133

Token 501: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0011745095252990723
    2. '()
' → logprob: -6.751174449920654
    3. '(' → logprob: -12.751174926757812
    4. '()

' → logprob: -14.751174926757812
    5. '();' → logprob: -14.751174926757812
    6. ' ()' → logprob: -16.126174926757812
    7. ')' → logprob: -16.251174926757812
    8. '()]' → logprob: -16.251174926757812
    9. '()\' → logprob: -16.501174926757812
    10. '()
' → logprob: -17.001174926757812

Token 502: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28997576236724854
    2. 'for' → logprob: -1.5399757623672485
    3. ' for' → logprob: -3.289975643157959
    4. '	for' → logprob: -10.164976119995117
    5. '       ' → logprob: -10.289976119995117
    6. ',' → logprob: -13.414976119995117
    7. ' ' → logprob: -13.539976119995117
    8. '```' → logprob: -14.039976119995117
    9. '    
' → logprob: -14.789976119995117
    10. '
' → logprob: -15.164976119995117

Token 503: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00022570860164705664
    2. ' for' → logprob: -8.500226020812988
    3. '   ' → logprob: -10.750226020812988
    4. '
' → logprob: -14.375226020812988
    5. '	for' → logprob: -16.375225067138672
    6. '```' → logprob: -17.500225067138672
    7. '    
' → logprob: -19.000225067138672
    8. ' ' → logprob: -20.000225067138672
    9. '       ' → logprob: -20.750225067138672
    10. 'if' → logprob: -21.375225067138672

Token 504: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.891482412815094
    2. '(u' → logprob: -1.1414823532104492
    3. 'to' → logprob: -2.016482353210449
    4. 'w' → logprob: -2.266482353210449
    5. '(to' → logprob: -4.516482353210449
    6. 'nx' → logprob: -4.766482353210449
    7. '(w' → logprob: -5.266482353210449
    8. '(n' → logprob: -5.766482353210449
    9. 'n' → logprob: -6.016482353210449
    10. 'nv' → logprob: -6.266482353210449

Token 505: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0026862293016165495
    2. ',u' → logprob: -6.502686023712158
    3. ',v' → logprob: -7.877686023712158
    4. ',w' → logprob: -8.002686500549316
    5. ' ,' → logprob: -8.377686500549316
    6. ',t' → logprob: -10.002686500549316
    7. ',n' → logprob: -10.377686500549316
    8. ',d' → logprob: -10.502686500549316
    9. ',user' → logprob: -10.627686500549316
    10. ' in' → logprob: -11.377686500549316

Token 506: ' eid' (ID: 131397)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.6588549613952637
    2. 'e' → logprob: -1.5338549613952637
    3. 'eid' → logprob: -2.1588549613952637
    4. 'idx' → logprob: -3.0338549613952637
    5. 'edge' → logprob: -3.4088549613952637
    6. 'c' → logprob: -3.7838549613952637
    7. 'id' → logprob: -3.9088549613952637
    8. 'cost' → logprob: -4.783854961395264
    9. 'x' → logprob: -5.408854961395264
    10. 'ei' → logprob: -5.658854961395264

Token 507: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007667790167033672
    2. 'in' → logprob: -4.8826680183410645
    3. ')' → logprob: -10.007667541503906
    4. ' ' → logprob: -12.007667541503906
    5. ',' → logprob: -12.632667541503906
    6. '=' → logprob: -13.632667541503906
    7. 'e' → logprob: -14.382667541503906
    8. '	in' → logprob: -14.507667541503906
    9. 's' → logprob: -14.632667541503906
    10. ' =' → logprob: -14.882667541503906

Token 508: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.001502598519437015
    2. ' graph' → logprob: -6.501502513885498
    3. '	graph' → logprob: -15.376502990722656
    4. '   ' → logprob: -16.501502990722656
    5. '(graph' → logprob: -17.501502990722656
    6. ' ' → logprob: -19.876502990722656
    7. 'graphic' → logprob: -21.126502990722656
    8. '  ' → logprob: -21.251502990722656
    9. '_graph' → logprob: -21.251502990722656
    10. 'Graph' → logprob: -21.376502990722656

Token 509: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -7.779520092299208e-05
    2. 'v' → logprob: -9.500078201293945
    3. '(v' → logprob: -13.750078201293945
    4. '[u' → logprob: -13.875078201293945
    5. ',v' → logprob: -14.375078201293945
    6. '	v' → logprob: -16.000078201293945
    7. ')v' → logprob: -16.250078201293945
    8. '[' → logprob: -16.875078201293945
    9. ' v' → logprob: -17.375078201293945
    10. '<v' → logprob: -17.875078201293945

Token 510: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.6707420349121094
    2. ']:' → logprob: -1.0457420349121094
    3. '):
' → logprob: -2.6707420349121094
    4. '):' → logprob: -3.2957420349121094
    5. ':' → logprob: -3.5457420349121094
    6. ':
' → logprob: -7.295742034912109
    7. ']' → logprob: -7.420742034912109
    8. '   ' → logprob: -8.67074203491211
    9. ']:
' → logprob: -8.67074203491211
    10. '():
' → logprob: -9.04574203491211

Token 511: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0021250417921692133
    2. '	       ' → logprob: -7.002125263214111
    3. '		' → logprob: -7.877125263214111
    4. ' if' → logprob: -8.377124786376953
    5. '<|end|>' → logprob: -8.502124786376953
    6. '<|end|>' → logprob: -9.127124786376953
    7. '    	' → logprob: -9.252124786376953
    8. '    	   ' → logprob: -10.252124786376953
    9. '		   ' → logprob: -10.627124786376953
    10. '          ' → logprob: -10.752124786376953

Token 512: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.319707989692688
    2. 'if' (adapté à ' if') → logprob: -1.319707989692688
    3. '           ' → logprob: -5.944707870483398
    4. '               ' → logprob: -6.319707870483398
    5. '       ' → logprob: -6.569707870483398
    6. '   ' → logprob: -7.944707870483398
    7. '	if' → logprob: -8.444707870483398
    8. '    ' → logprob: -11.819707870483398
    9. '	       ' → logprob: -12.319707870483398
    10. '```' → logprob: -12.444707870483398

Token 513: ' seen' (ID: 6177)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.11487080156803131
    2. ' not' → logprob: -2.23987078666687
    3. 'seen' → logprob: -6.239871025085449
    4. ' seen' → logprob: -9.73987102508545
    5. '!' → logprob: -10.86487102508545
    6. '(not' → logprob: -12.11487102508545
    7. '	not' → logprob: -12.23987102508545
    8. 'u' → logprob: -12.36487102508545
    9. '   ' → logprob: -13.48987102508545
    10. 'se' → logprob: -14.98987102508545

Token 514: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -5.512236498361744e-07
    2. 'u' → logprob: -14.750000953674316
    3. '[' → logprob: -16.5
    4. '```' → logprob: -18.875
    5. '[
' → logprob: -19.0
    6. '(u' → logprob: -19.375
    7. '<u' → logprob: -19.875
    8. '	u' → logprob: -20.0
    9. '[user' → logprob: -20.375
    10. '[v' → logprob: -20.5

Token 515: ']:
' (ID: 22152)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0330817848443985
    2. ':' → logprob: -3.7830817699432373
    3. ' ==' → logprob: -5.783082008361816
    4. '[u' → logprob: -6.033082008361816
    5. ']==' → logprob: -6.158082008361816
    6. '[v' → logprob: -6.783082008361816
    7. ':
' → logprob: -7.658082008361816
    8. ')==' → logprob: -8.033082008361816
    9. '[' → logprob: -10.158082008361816
    10. '):' → logprob: -10.158082008361816

Token 516: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0504034087061882
    2. 'continue' → logprob: -3.800403356552124
    3. ' continue' → logprob: -4.175403594970703
    4. '           ' → logprob: -5.300403594970703
    5. ':' → logprob: -5.550403594970703
    6. '==' → logprob: -6.800403594970703
    7. ' ==' → logprob: -7.800403594970703
    8. ':
' → logprob: -7.925403594970703
    9. '	continue' → logprob: -8.050403594970703
    10. '       ' → logprob: -9.175403594970703

Token 517: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.19116391241550446
    2. ' continue' → logprob: -2.191164016723633
    3. '               ' → logprob: -2.816164016723633
    4. '                   ' → logprob: -6.566164016723633
    5. '   ' → logprob: -7.816164016723633
    6. '           ' → logprob: -8.316164016723633
    7. '	continue' → logprob: -9.066164016723633
    8. '```' → logprob: -9.566164016723633
    9. 'if' → logprob: -9.691164016723633
    10. '       ' → logprob: -10.566164016723633

Token 518: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006784639321267605
    2. '               ' → logprob: -5.006784439086914
    3. ',' → logprob: -10.756784439086914
    4. '<|end|>' → logprob: -11.381784439086914
    5. '   ' → logprob: -11.631784439086914
    6. '                   ' → logprob: -11.881784439086914
    7. '<|end|>' → logprob: -12.381784439086914
    8. '       ' → logprob: -12.506784439086914
    9. ':
' → logprob: -12.756784439086914
    10. '```' → logprob: -13.131784439086914

Token 519: '           ' (ID: 352)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6245535016059875
    2. '           ' → logprob: -0.9995535016059875
    3. ' seen' → logprob: -2.9995534420013428
    4. '   ' → logprob: -3.9995534420013428
    5. '       ' → logprob: -4.249553680419922
    6. '```' → logprob: -5.249553680419922
    7. 'seen' → logprob: -5.499553680419922
    8. '                   ' → logprob: -5.499553680419922
    9. '	       ' → logprob: -9.124553680419922
    10. '``' → logprob: -9.374553680419922

Token 520: ' seen' (ID: 6177)
  Prédit: 'seen'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seen' (adapté à ' seen') → logprob: -0.008498270064592361
    2. ' seen' → logprob: -5.133498191833496
    3. '               ' → logprob: -6.508498191833496
    4. '           ' → logprob: -6.883498191833496
    5. '                   ' → logprob: -11.133498191833496
    6. 'visited' → logprob: -11.133498191833496
    7. '   ' → logprob: -11.633498191833496
    8. '       ' → logprob: -11.883498191833496
    9. '```' → logprob: -12.633498191833496
    10. '_seen' → logprob: -14.758498191833496

Token 521: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -16.375
    3. '[user' → logprob: -17.25
    4. 'u' → logprob: -17.375
    5. '```' → logprob: -18.5
    6. '[v' → logprob: -19.125
    7. '[
' → logprob: -19.875
    8. '[s' → logprob: -21.25
    9. '(u' → logprob: -21.375
    10. '[a' → logprob: -21.625

Token 522: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10121867805719376
    2. ']' → logprob: -2.6012187004089355
    3. ' =' → logprob: -4.6012187004089355
    4. ']=' → logprob: -4.7262187004089355
    5. '[u' → logprob: -5.8512187004089355
    6. '[v' → logprob: -8.226218223571777
    7. '[' → logprob: -10.851218223571777
    8. ')' → logprob: -12.601218223571777
    9. 'v' → logprob: -12.851218223571777
    10. ')=' → logprob: -12.976218223571777

Token 523: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0040785204619169235
    2. ' =' → logprob: -5.504078388214111
    3. '   ' → logprob: -17.129077911376953
    4. ')' → logprob: -18.254077911376953
    5. ']' → logprob: -18.754077911376953
    6. '[' → logprob: -19.379077911376953
    7. '＝' → logprob: -19.379077911376953
    8. ']=' → logprob: -19.504077911376953
    9. ' ' → logprob: -19.754077911376953
    10. ',' → logprob: -20.379077911376953

Token 524: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. 'v' → logprob: -21.8750057220459
    4. '
' → logprob: -22.1250057220459
    5. '   ' → logprob: -22.7500057220459
    6. 'True' → logprob: -23.2500057220459
    7. '۱' → logprob: -25.1250057220459
    8. ' v' → logprob: -25.5000057220459
    9. '```' → logprob: -25.5000057220459
    10. ' True' → logprob: -25.6250057220459

Token 525: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. 'v' → logprob: -17.625
    4. 'True' → logprob: -19.75
    5. '
' → logprob: -21.0
    6. '   ' → logprob: -21.75
    7. '0' → logprob: -23.125
    8. '```' → logprob: -23.375
    9. '  ' → logprob: -24.125
    10. '
' → logprob: -24.25

Token 526: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00031532408320344985
    2. '		' → logprob: -8.37531566619873
    3. 'stack' → logprob: -10.12531566619873
    4. ' stack' → logprob: -11.25031566619873
    5. '	stack' → logprob: -12.12531566619873
    6. '<|end|>' → logprob: -12.50031566619873
    7. '   ' → logprob: -12.62531566619873
    8. '               ' → logprob: -12.62531566619873
    9. '
' → logprob: -12.75031566619873
    10. ',' → logprob: -13.25031566619873

Token 527: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00011903966515092179
    2. 'stack' → logprob: -9.12511920928955
    3. ' stack' → logprob: -12.00011920928955
    4. '               ' → logprob: -13.50011920928955
    5. '		' → logprob: -13.87511920928955
    6. '       ' → logprob: -14.87511920928955
    7. '   ' → logprob: -15.37511920928955
    8. ',' → logprob: -15.50011920928955
    9. '          ' → logprob: -15.75011920928955
    10. '(stack' → logprob: -16.375118255615234

Token 528: ' stack' (ID: 10825)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.004502281080931425
    2. 'stack' (adapté à ' stack') → logprob: -5.629502296447754
    3. 'par' → logprob: -7.254502296447754
    4. '   ' → logprob: -8.754502296447754
    5. ' edges' → logprob: -10.754502296447754
    6. 'parent' → logprob: -12.504502296447754
    7. '       ' → logprob: -12.504502296447754
    8. 'edge' → logprob: -13.004502296447754
    9. '           ' → logprob: -13.504502296447754
    10. 'graph' → logprob: -13.629502296447754

Token 529: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -4.008129963040119e-06
    2. '.' → logprob: -12.750003814697266
    3. '.extend' → logprob: -14.000003814697266
    4. 'append' → logprob: -15.625003814697266
    5. ' .' → logprob: -17.375003814697266
    6. '.app' → logprob: -18.000003814697266
    7. '.push' → logprob: -18.125003814697266
    8. ' append' → logprob: -18.375003814697266
    9. '.Append' → logprob: -19.000003814697266
    10. 'Append' → logprob: -19.250003814697266

Token 530: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -4.320199877838604e-07
    2. '(' → logprob: -15.0
    3. 'u' → logprob: -16.75
    4. '((' → logprob: -19.625
    5. '(
' → logprob: -20.5
    6. '(v' → logprob: -21.625
    7. '[u' → logprob: -22.75
    8. '	u' → logprob: -23.25
    9. '(U' → logprob: -23.25
    10. ' (' → logprob: -23.75

Token 531: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005007279687561095
    2. ')
' → logprob: -8.000500679016113
    3. '[u' → logprob: -9.250500679016113
    4. '(u' → logprob: -9.875500679016113
    5. '[' → logprob: -12.250500679016113
    6. '   ' → logprob: -12.375500679016113
    7. ')v' → logprob: -13.500500679016113
    8. ',u' → logprob: -13.625500679016113
    9. '           ' → logprob: -13.875500679016113
    10. ' )' → logprob: -14.125500679016113

Token 532: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.047134305234067e-05
    2. '   ' → logprob: -11.375030517578125
    3. 'edges' → logprob: -12.000030517578125
    4. '       ' → logprob: -12.250030517578125
    5. '<|end|>' → logprob: -12.625030517578125
    6. '               ' → logprob: -13.625030517578125
    7. ' edges' → logprob: -13.750030517578125
    8. '<|end|>' → logprob: -14.250030517578125
    9. '                   ' → logprob: -14.750030517578125
    10. ',' → logprob: -14.875030517578125

Token 533: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' (adapté à ' edges') → logprob: -3.2855416066013277e-05
    2. ' edges' → logprob: -10.500032424926758
    3. '   ' → logprob: -12.375032424926758
    4. '           ' → logprob: -14.125032424926758
    5. '(edges' → logprob: -16.000032424926758
    6. '.edges' → logprob: -16.500032424926758
    7. '            
' → logprob: -17.000032424926758
    8. '
' → logprob: -17.500032424926758
    9. '       ' → logprob: -17.625032424926758
    10. 'if' → logprob: -18.375032424926758

Token 534: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0008569086203351617
    2. '.' → logprob: -7.125856876373291
    3. ' .' → logprob: -10.00085735321045
    4. '.app' → logprob: -12.62585735321045
    5. '.ap' → logprob: -13.37585735321045
    6. '.extend' → logprob: -13.87585735321045
    7. ',' → logprob: -14.50085735321045
    8. 'append' → logprob: -15.00085735321045
    9. '.Append' → logprob: -16.125856399536133
    10. ').' → logprob: -16.750856399536133

Token 535: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0011414075270295143
    2. '(' → logprob: -7.001141548156738
    3. '(e' → logprob: -8.626141548156738
    4. '(u' → logprob: -10.001141548156738
    5. '(((' → logprob: -12.251141548156738
    6. '(edge' → logprob: -16.501140594482422
    7. '([' → logprob: -16.751140594482422
    8. ' ((' → logprob: -17.001140594482422
    9. '(v' → logprob: -17.376140594482422
    10. '(E' → logprob: -17.626140594482422

Token 536: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.02223457582294941
    2. 'u' → logprob: -3.8972346782684326
    3. ' v' → logprob: -7.0222344398498535
    4. 'eid' → logprob: -7.5222344398498535
    5. ' eid' → logprob: -9.272234916687012
    6. ' u' → logprob: -9.397234916687012
    7. '(v' → logprob: -10.522234916687012
    8. '(u' → logprob: -11.147234916687012
    9. '   ' → logprob: -11.147234916687012
    10. '	v' → logprob: -12.272234916687012

Token 537: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.033812593668699265
    2. ',u' → logprob: -3.4088125228881836
    3. ' ,' → logprob: -9.283812522888184
    4. ',
' → logprob: -9.658812522888184
    5. 'u' → logprob: -12.033812522888184
    6. '
' → logprob: -13.908812522888184
    7. ',v' → logprob: -14.033812522888184
    8. ',user' → logprob: -14.283812522888184
    9. ',n' → logprob: -14.908812522888184
    10. ',e' → logprob: -15.533812522888184

Token 538: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0004311460361350328
    2. ' u' → logprob: -7.750431060791016
    3. '	u' → logprob: -15.500431060791016
    4. '   ' → logprob: -15.625431060791016
    5. '
' → logprob: -17.000431060791016
    6. ' ' → logprob: -18.500431060791016
    7. '    ' → logprob: -18.625431060791016
    8. '
' → logprob: -18.625431060791016
    9. '[u' → logprob: -18.750431060791016
    10. ')' → logprob: -19.125431060791016

Token 539: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008914520149119198
    2. ',e' → logprob: -7.25089168548584
    3. ' ,' → logprob: -8.75089168548584
    4. ')' → logprob: -11.50089168548584
    5. '))' → logprob: -13.00089168548584
    6. '),' → logprob: -13.25089168548584
    7. ',v' → logprob: -13.75089168548584
    8. '<|end|>' → logprob: -13.75089168548584
    9. ',u' → logprob: -13.87589168548584
    10. ',user' → logprob: -14.12589168548584

Token 540: ' eid' (ID: 131397)
  Prédit: 'eid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eid' → logprob: -0.009774863719940186
    2. ' eid' → logprob: -4.634774684906006
    3. 'iid' → logprob: -12.634775161743164
    4. 'ei' → logprob: -12.759775161743164
    5. ' ' → logprob: -12.884775161743164
    6. '   ' → logprob: -13.009775161743164
    7. '
' → logprob: -14.134775161743164
    8. 'pid' → logprob: -14.259775161743164
    9. 'id' → logprob: -14.509775161743164
    10. 'e' → logprob: -14.509775161743164

Token 541: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20144297182559967
    2. '))' → logprob: -1.7014429569244385
    3. ')))' → logprob: -11.20144271850586
    4. ')
' → logprob: -12.07644271850586
    5. '))
' → logprob: -12.20144271850586
    6. ' )' → logprob: -13.32644271850586
    7. ',' → logprob: -13.70144271850586
    8. '),' → logprob: -14.07644271850586
    9. ' ))' → logprob: -14.20144271850586
    10. '   ' → logprob: -15.07644271850586

Token 542: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 543: ' if' (ID: 538)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.2414032220840454
    2. 'trees' → logprob: -1.3664032220840454
    3. 'if' (adapté à ' if') → logprob: -1.4914032220840454
    4. 'for' → logprob: -2.491403102874756
    5. 'edges' → logprob: -2.991403102874756
    6. 'from' → logprob: -3.616403102874756
    7. 't' → logprob: -4.616403102874756
    8. 'import' → logprob: -4.616403102874756
    9. '<|end|>' → logprob: -5.116403102874756
    10. 'def' → logprob: -5.616403102874756

Token 544: ' not' (ID: 625)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.09830304980278015
    2. ' edges' → logprob: -2.4733030796051025
    3. 'len' → logprob: -5.473302841186523
    4. ' not' → logprob: -5.723302841186523
    5. 'not' → logprob: -6.598302841186523
    6. ' len' → logprob: -7.848302841186523
    7. '(edges' → logprob: -10.223302841186523
    8. '   ' → logprob: -11.473302841186523
    9. ' ' → logprob: -11.848302841186523
    10. 'e' → logprob: -12.035802841186523

Token 545: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.3488941192626953
    2. ' edges' → logprob: -1.2238941192626953
    3. 'len' → logprob: -9.223894119262695
    4. '(edges' → logprob: -9.348894119262695
    5. ' parity' → logprob: -9.598894119262695
    6. ' len' → logprob: -10.098894119262695
    7. 'par' → logprob: -10.348894119262695
    8. ' not' → logprob: -10.973894119262695
    9. ' par' → logprob: -11.598894119262695
    10. 'graph' → logprob: -11.598894119262695

Token 546: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004875669721513987
    2. ':
' → logprob: -5.504875659942627
    3. '.append' → logprob: -7.754875659942627
    4. 'continue' → logprob: -8.629876136779785
    5. ':return' → logprob: -9.129876136779785
    6. '.' → logprob: -10.504876136779785
    7. '   ' → logprob: -10.629876136779785
    8. '==' → logprob: -11.504876136779785
    9. ' continue' → logprob: -11.879876136779785
    10. '.empty' → logprob: -13.629876136779785

Token 547: ' parity' (ID: 113181)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.6694154143333435
    2. 'not' → logprob: -1.4194154739379883
    3. 'len' → logprob: -2.2944154739379883
    4. ' not' → logprob: -2.6694154739379883
    5. ' parity' → logprob: -3.5444154739379883
    6. 'graph' → logprob: -3.9194154739379883
    7. 'False' → logprob: -4.544415473937988
    8. ' len' → logprob: -5.294415473937988
    9. 'B' → logprob: -6.169415473937988
    10. ' graph' → logprob: -6.294415473937988

Token 548: '[root' (ID: 185287)
  Prédit: '[root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[root' → logprob: -0.004475339315831661
    2. '[' → logprob: -5.504475116729736
    3. '[v' → logprob: -8.129475593566895
    4. '==' → logprob: -10.254475593566895
    5. 'root' → logprob: -11.754475593566895
    6. '[]' → logprob: -11.879475593566895
    7. '[u' → logprob: -12.254475593566895
    8. '[...]' → logprob: -12.254475593566895
    9. '[node' → logprob: -12.504475593566895
    10. '[parent' → logprob: -12.629475593566895

Token 549: ']:
' (ID: 22152)
  Prédit: '[root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[root' → logprob: -0.6340128779411316
    2. '==' → logprob: -1.7590129375457764
    3. ']:' → logprob: -2.1340129375457764
    4. ':' → logprob: -2.3840129375457764
    5. ']==' → logprob: -3.0090129375457764
    6. '):' → logprob: -4.009012699127197
    7. ']' → logprob: -4.634012699127197
    8. ' ==' → logprob: -6.134012699127197
    9. ']:
' → logprob: -6.509012699127197
    10. '[' → logprob: -6.759012699127197

Token 550: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014121392741799355
    2. '   ' → logprob: -7.7514119148254395
    3. ':' → logprob: -8.001412391662598
    4. ':
' → logprob: -8.251412391662598
    5. 'continue' → logprob: -8.751412391662598
    6. ' continue' → logprob: -9.251412391662598
    7. '```' → logprob: -9.876412391662598
    8. ',' → logprob: -10.376412391662598
    9. ' parity' → logprob: -12.001412391662598
    10. '[' → logprob: -12.126412391662598

Token 551: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.02320878580212593
    2. ' print' → logprob: -4.8982086181640625
    3. 'trees' → logprob: -5.3982086181640625
    4. 'continue' → logprob: -6.0232086181640625
    5. 'raise' → logprob: -6.5232086181640625
    6. 'exit' → logprob: -6.5232086181640625
    7. '   ' → logprob: -6.6482086181640625
    8. 'par' → logprob: -6.6482086181640625
    9. 'edges' → logprob: -7.5232086181640625
    10. '#' (adapté à ' #') → logprob: -8.023208618164062

Token 552: ' Single' (ID: 16035)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.010024861432611942
    2. 'continue' → logprob: -6.2600250244140625
    3. ' print' → logprob: -6.3850250244140625
    4. 'par' → logprob: -6.5100250244140625
    5. 'return' → logprob: -6.6350250244140625
    6. 'raise' → logprob: -7.3850250244140625
    7. '   ' → logprob: -7.5100250244140625
    8. '#' → logprob: -7.7600250244140625
    9. 'exit' → logprob: -7.7600250244140625
    10. 'pass' → logprob: -7.8850250244140625

Token 553: ' vertex' (ID: 25363)
  Prédit: ' node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.45558032393455505
    2. 'node' → logprob: -1.2055803537368774
    3. 'vertex' → logprob: -3.955580234527588
    4. 'continue' → logprob: -4.705580234527588
    5. ' vertex' → logprob: -4.705580234527588
    6. 'component' → logprob: -4.955580234527588
    7. '#' → logprob: -5.705580234527588
    8. 'root' → logprob: -6.080580234527588
    9. '-node' → logprob: -6.330580234527588
    10. '```' → logprob: -6.330580234527588

Token 554: ' but' (ID: 889)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3868458569049835
    2. ' if' → logprob: -2.136845827102661
    3. 'if' → logprob: -2.761845827102661
    4. 'continue' → logprob: -3.136845827102661
    5. '       ' → logprob: -3.386845827102661
    6. ' continue' → logprob: -3.761845827102661
    7. ':
' → logprob: -3.886845827102661
    8. '           ' → logprob: -4.88684606552124
    9. ':' → logprob: -6.26184606552124
    10. ' trees' → logprob: -6.38684606552124

Token 555: ' needs' (ID: 4414)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0011351108551025
    2. 'pass' → logprob: -1.3761351108551025
    3. 'continue' → logprob: -2.1261351108551025
    4. 'par' → logprob: -2.1261351108551025
    5. ' continue' → logprob: -2.7511351108551025
    6. '```' → logprob: -3.2511351108551025
    7. '   ' → logprob: -5.126134872436523
    8. ' par' → logprob: -5.126134872436523
    9. ' parity' → logprob: -5.626134872436523
    10. ' pass' → logprob: -5.751134872436523

Token 556: ' to' (ID: 316)
  Prédit: ' parity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' parity' → logprob: -0.8508821129798889
    2. 'par' → logprob: -1.1008820533752441
    3. 'a' → logprob: -2.600882053375244
    4. 'fl' → logprob: -2.725882053375244
    5. ' flipping' → logprob: -2.725882053375244
    6. '1' → logprob: -4.725882053375244
    7. 'flip' → logprob: -4.850882053375244
    8. 'fix' → logprob: -5.975882053375244
    9. ' a' → logprob: -6.100882053375244
    10. 'an' → logprob: -6.350882053375244

Token 557: ' flip' (ID: 29130)
  Prédit: 'flip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'flip' → logprob: -0.6799768805503845
    2. 'print' → logprob: -1.4299769401550293
    3. 'be' → logprob: -1.9299769401550293
    4. 'raise' → logprob: -2.9299769401550293
    5. 'continue' → logprob: -4.179976940155029
    6. 'pass' → logprob: -4.804976940155029
    7. 'do' → logprob: -5.429976940155029
    8. 'connect' → logprob: -5.429976940155029
    9. 'output' → logprob: -5.679976940155029
    10. 'return' → logprob: -5.679976940155029

Token 558: '?' (ID: 30)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12694816291332245
    2. '           ' → logprob: -3.001948118209839
    3. ':
' → logprob: -3.751948118209839
    4. '   ' → logprob: -4.001948356628418
    5. ',' → logprob: -4.376948356628418
    6. ':' → logprob: -4.876948356628418
    7. '```' → logprob: -6.251948356628418
    8. ',
' → logprob: -7.001948356628418
    9. ' raise' → logprob: -7.126948356628418
    10. 'raise' → logprob: -7.501948356628418

Token 559: ' Impossible' (ID: 136939)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1233973577618599
    2. 'print' → logprob: -3.6233973503112793
    3. ' parity' → logprob: -3.6233973503112793
    4. ' print' → logprob: -4.373397350311279
    5. 'par' → logprob: -4.623397350311279
    6. '   ' → logprob: -4.748397350311279
    7. ' continue' → logprob: -4.748397350311279
    8. 'pass' → logprob: -5.623397350311279
    9. ' return' → logprob: -5.623397350311279
    10. 'continue' → logprob: -5.748397350311279

Token 560: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.055583119392395
    2. '       ' → logprob: -1.055583119392395
    3. '```' → logprob: -1.680583119392395
    4. 'raise' → logprob: -3.3055830001831055
    5. '           ' → logprob: -3.4305830001831055
    6. ',' → logprob: -4.0555830001831055
    7. '
' → logprob: -4.1805830001831055
    8. ' raise' → logprob: -5.3055830001831055
    9. '``' → logprob: -6.3055830001831055
    10. '    
' → logprob: -6.4305830001831055

Token 561: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0655890628695488
    2. 'raise' → logprob: -3.94058895111084
    3. '   ' → logprob: -4.19058895111084
    4. '           ' → logprob: -4.56558895111084
    5. ' raise' → logprob: -4.81558895111084
    6. '```' → logprob: -5.06558895111084
    7. 'return' → logprob: -6.44058895111084
    8. ',' → logprob: -7.44058895111084
    9. ' return' → logprob: -7.44058895111084
    10. '
' → logprob: -7.69058895111084

Token 562: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.03736543655395508
    2. 'return' → logprob: -3.537365436553955
    3. ' print' → logprob: -5.787365436553955
    4. 'raise' → logprob: -5.912365436553955
    5. 'exit' → logprob: -7.662365436553955
    6. '   ' → logprob: -7.662365436553955
    7. ' return' → logprob: -7.912365436553955
    8. '       ' → logprob: -8.537364959716797
    9. ' raise' → logprob: -9.537364959716797
    10. '           ' → logprob: -9.662364959716797

Token 563: '(-' (ID: 8087)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2542090117931366
    2. '(-' → logprob: -1.504209041595459
    3. '0' → logprob: -7.004209041595459
    4. '(' → logprob: -7.004209041595459
    5. '("' → logprob: -8.0042085647583
    6. ' -' → logprob: -10.2542085647583
    7. '(NO' → logprob: -11.0042085647583
    8. 'Impossible' → logprob: -11.0042085647583
    9. '("-' → logprob: -11.2542085647583
    10. 'im' → logprob: -11.6292085647583

Token 564: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. '
' → logprob: -17.375
    4. '2' → logprob: -17.75
    5. '۱' → logprob: -18.0
    6. '   ' → logprob: -18.125
    7. '１' → logprob: -18.25
    8. '```' → logprob: -18.8125
    9. '"' → logprob: -19.125
    10. '``' → logprob: -19.5

Token 565: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.43012043833732605
    2. ')
' → logprob: -1.0551204681396484
    3. '       ' → logprob: -7.180120468139648
    4. ')return' → logprob: -7.680120468139648
    5. ')
' → logprob: -9.180120468139648
    6. '   ' → logprob: -10.805120468139648
    7. '           ' → logprob: -11.555120468139648
    8. '),' → logprob: -11.805120468139648
    9. ',' → logprob: -11.930120468139648
    10. ')`
' → logprob: -11.930120468139648

Token 566: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005275976378470659
    2. '
' → logprob: -6.505276203155518
    3. '```' → logprob: -6.505276203155518
    4. '<|end|>' → logprob: -6.755276203155518
    5. '           ' → logprob: -7.880276203155518
    6. '   ' → logprob: -8.00527572631836
    7. 'continue' → logprob: -9.25527572631836
    8. ',' → logprob: -9.50527572631836
    9. '               ' → logprob: -9.75527572631836
    10. '<|end|>' → logprob: -10.63027572631836

Token 567: ' sys' (ID: 12228)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3560512363910675
    2. '       ' → logprob: -1.3560512065887451
    3. 'exit' → logprob: -3.606051206588745
    4. 'import' → logprob: -5.606051445007324
    5. ' exit' → logprob: -5.856051445007324
    6. 'return' → logprob: -6.106051445007324
    7. '	exit' → logprob: -6.231051445007324
    8. '<|end|>' → logprob: -7.106051445007324
    9. '```' → logprob: -7.231051445007324
    10. '
' → logprob: -7.481051445007324

Token 568: '.exit' (ID: 27076)
  Prédit: '.exit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.exit' → logprob: -0.04337332025170326
    2. 'exit' → logprob: -3.1683733463287354
    3. '.' → logprob: -9.043373107910156
    4. '_exit' → logprob: -9.418373107910156
    5. '	exit' → logprob: -10.168373107910156
    6. '```' → logprob: -10.668373107910156
    7. 'ex' → logprob: -11.418373107910156
    8. '0' → logprob: -11.418373107910156
    9. '
' → logprob: -11.418373107910156
    10. 'Exit' → logprob: -11.418373107910156

Token 569: '(' (ID: 7)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5760939717292786
    2. '(' → logprob: -0.8260939717292786
    3. '0' → logprob: -9.076093673706055
    4. '()
' → logprob: -10.451093673706055
    5. '()\' → logprob: -11.826093673706055
    6. '()`' → logprob: -13.951093673706055
    7. '()(' → logprob: -14.451093673706055
    8. '()]' → logprob: -14.576093673706055
    9. '()

' → logprob: -15.076093673706055
    10. '())' → logprob: -15.201093673706055

Token 570: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.263011578586884e-05
    2. ')' → logprob: -10.125042915344238
    3. '1' → logprob: -13.125042915344238
    4. ' ' → logprob: -14.875042915344238
    5. '())' → logprob: -16.000041961669922
    6. '()' → logprob: -17.375041961669922
    7. '(' → logprob: -18.625041961669922
    8. ' )' → logprob: -20.000041961669922
    9. '   ' → logprob: -20.875041961669922
    10. '))' → logprob: -21.250041961669922

Token 571: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004162214230746031
    2. '   ' → logprob: -5.504162311553955
    3. ')
' → logprob: -9.629161834716797
    4. '<|end|>' → logprob: -12.129161834716797
    5. '`)' → logprob: -12.754161834716797
    6. '       ' → logprob: -13.254161834716797
    7. '")' → logprob: -13.254161834716797
    8. '```' → logprob: -13.504161834716797
    9. '')' → logprob: -14.129161834716797
    10. ' )' → logprob: -14.504161834716797

Token 572: '   ' (ID: 271)
  Prédit: 'trees'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trees' → logprob: -0.06271418184041977
    2. '   ' → logprob: -3.687714099884033
    3. '```' → logprob: -4.562714099884033
    4. ')' → logprob: -4.562714099884033
    5. '<|end|>' → logprob: -5.187714099884033
    6. 'edges' → logprob: -5.312714099884033
    7. 'continue' → logprob: -6.812714099884033
    8. 'for' → logprob: -7.312714099884033
    9. ' trees' → logprob: -7.812714099884033
    10. '    
' → logprob: -8.062714576721191

Token 573: ' trees' (ID: 16979)
  Prédit: 'trees'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trees' (adapté à ' trees') → logprob: -0.002633684314787388
    2. '   ' → logprob: -6.127633571624756
    3. ' trees' → logprob: -8.627634048461914
    4. ')' → logprob: -9.877634048461914
    5. '
' → logprob: -9.877634048461914
    6. 't' → logprob: -10.502634048461914
    7. '```' → logprob: -10.502634048461914
    8. 'edges' → logprob: -11.127634048461914
    9. '<|end|>' → logprob: -11.127634048461914
    10. 'else' → logprob: -11.377634048461914

Token 574: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.1602867692708969
    2. '.' → logprob: -1.910286784172058
    3. '.extend' → logprob: -11.160286903381348
    4. '<|end|>' → logprob: -11.535286903381348
    5. ' .' → logprob: -11.910286903381348
    6. '.app' → logprob: -12.160286903381348
    7. '.push' → logprob: -12.285286903381348
    8. ').' → logprob: -12.660286903381348
    9. '.Append' → logprob: -12.785286903381348
    10. '.py' → logprob: -12.910286903381348

Token 575: '(edges' (ID: 185298)
  Prédit: '(edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(edges' → logprob: -0.5766173005104065
    2. '((' → logprob: -0.9516173005104065
    3. '([(' → logprob: -3.7016172409057617
    4. '([' → logprob: -4.451617240905762
    5. '(' → logprob: -4.701617240905762
    6. '(stack' → logprob: -5.326617240905762
    7. '(((' → logprob: -7.826617240905762
    8. '(([' → logprob: -7.826617240905762
    9. '([]' → logprob: -7.951617240905762
    10. 'edges' → logprob: -8.201617240905762

Token 576: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -9.253090865968261e-06
    2. ')
' → logprob: -11.750009536743164
    3. '   ' → logprob: -14.875009536743164
    4. ' )' → logprob: -15.000009536743164
    5. ']' → logprob: -15.625009536743164
    6. '))' → logprob: -16.000009536743164
    7. '[])' → logprob: -16.875009536743164
    8. ')`' → logprob: -16.875009536743164
    9. ')}' → logprob: -17.125009536743164
    10. ')]' → logprob: -17.125009536743164

Token 577: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.504024863243103
    2. 'ans' → logprob: -1.754024863243103
    3. 'answer' → logprob: -1.879024863243103
    4. 'dp' → logprob: -1.879024863243103
    5. 'res' → logprob: -2.1290249824523926
    6. 'par' → logprob: -4.379024982452393
    7. '#' → logprob: -4.379024982452393
    8. 'flip' → logprob: -4.629024982452393
    9. 'answers' → logprob: -4.629024982452393
    10. 'result' → logprob: -4.754024982452393

Token 578: ' Re' (ID: 907)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.75148606300354
    2. 'dp' → logprob: -1.75148606300354
    3. 'ans' → logprob: -1.87648606300354
    4. 'res' → logprob: -2.37648606300354
    5. 'answer' → logprob: -3.00148606300354
    6. 'par' → logprob: -3.50148606300354
    7. 'flip' → logprob: -3.62648606300354
    8. 'answers' → logprob: -3.75148606300354
    9. 'cost' → logprob: -4.251485824584961
    10. 'xor' → logprob: -4.251485824584961

Token 579: 'build' (ID: 9242)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7440252900123596
    2. 'for' → logprob: -0.9940252900123596
    3. 'm' → logprob: -2.244025230407715
    4. '#' → logprob: -4.494025230407715
    5. 'st' → logprob: -5.119025230407715
    6. 'main' → logprob: -5.244025230407715
    7. 'turn' → logprob: -5.494025230407715
    8. 'from' → logprob: -5.494025230407715
    9. 'move' → logprob: -5.744025230407715
    10. 'f' → logprob: -5.994025230407715

Token 580: ' graph' (ID: 7465)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -1.3489818572998047
    2. 'dp' → logprob: -1.9739818572998047
    3. 'idx' → logprob: -2.0989818572998047
    4. 'new' → logprob: -2.2239818572998047
    5. 'for' → logprob: -2.5989818572998047
    6. 'from' → logprob: -3.4739818572998047
    7. 'par' → logprob: -3.5989818572998047
    8. 'graph' → logprob: -3.5989818572998047
    9. 'adj' → logprob: -3.7239818572998047
    10. 'nodes' → logprob: -3.7239818572998047

Token 581: ' with' (ID: 483)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -1.013786792755127
    2. 'new' → logprob: -1.263786792755127
    3. ' =' → logprob: -2.138786792755127
    4. 'for' → logprob: -2.388786792755127
    5. 'tree' → logprob: -3.263786792755127
    6. '=' → logprob: -3.638786792755127
    7. 'edges' → logprob: -4.388786792755127
    8. 'g' → logprob: -4.638786792755127
    9. 'nodes' → logprob: -4.763786792755127
    10. 'adj' → logprob: -5.138786792755127

Token 582: ' new' (ID: 620)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.6745367050170898
    2. 'sz' → logprob: -2.29953670501709
    3. 'trees' → logprob: -2.67453670501709
    4. 'par' → logprob: -2.79953670501709
    5. 'len' → logprob: -2.79953670501709
    6. 'new' → logprob: -3.17453670501709
    7. '[]' → logprob: -3.29953670501709
    8. 'nodes' → logprob: -4.04953670501709
    9. 'roots' → logprob: -4.17453670501709
    10. 'adj' → logprob: -4.67453670501709

Token 583: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -1.0729212760925293
    2. 'nodes' → logprob: -1.6979212760925293
    3. 'graph' → logprob: -1.8229212760925293
    4. 'sz' → logprob: -2.5729212760925293
    5. 'id' → logprob: -2.8229212760925293
    6. 'idx' → logprob: -2.8229212760925293
    7. ' edges' → logprob: -3.8229212760925293
    8. 'adj' → logprob: -4.572921276092529
    9. 'indices' → logprob: -4.697921276092529
    10. 'ids' → logprob: -4.697921276092529

Token 584: ',' (ID: 11)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.08215245604515076
    2. 'graph' → logprob: -3.0821523666381836
    3. 'tree' → logprob: -4.582152366638184
    4. '
' → logprob: -4.707152366638184
    5. 'ng' → logprob: -5.332152366638184
    6. 'g' → logprob: -6.207152366638184
    7. 'edges' → logprob: -6.832152366638184
    8. 'for' → logprob: -7.082152366638184
    9. 'trees' → logprob: -7.207152366638184
    10. 'nt' → logprob: -7.582152366638184

Token 585: ' plus' (ID: 2932)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.2645967900753021
    2. 'g' → logprob: -2.764596700668335
    3. 'tree' → logprob: -3.389596700668335
    4. 'graph' → logprob: -3.764596700668335
    5. 'adj' → logprob: -4.139596939086914
    6. 'idx' → logprob: -4.264596939086914
    7. 'edges' → logprob: -4.514596939086914
    8. 'n' → logprob: -4.514596939086914
    9. 'for' → logprob: -4.639596939086914
    10. 'ng' → logprob: -4.764596939086914

Token 586: ' track' (ID: 5290)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.566821813583374
    2. 'new' → logprob: -2.316821813583374
    3. 'adj' → logprob: -2.316821813583374
    4. 'par' → logprob: -2.691821813583374
    5. 'rev' → logprob: -2.691821813583374
    6. 'edges' → logprob: -2.816821813583374
    7. '[]' → logprob: -2.941821813583374
    8. '#' → logprob: -3.066821813583374
    9. 'nodes' → logprob: -3.191821813583374
    10. 'roots' → logprob: -3.441821813583374

Token 587: ' degrees' (ID: 18210)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -1.0033351182937622
    2. 'for' → logprob: -2.5033349990844727
    3. 'deg' → logprob: -2.7533349990844727
    4. 'par' → logprob: -2.7533349990844727
    5. 'edges' → logprob: -2.8783349990844727
    6. 'new' → logprob: -3.0033349990844727
    7. 'ids' → logprob: -3.1283349990844727
    8. 'id' → logprob: -3.1283349990844727
    9. 'index' → logprob: -3.6283349990844727
    10. 'nodes' → logprob: -3.7533349990844727

Token 588: '
' (ID: 198)
  Prédit: 'deg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deg' → logprob: -0.098361074924469
    2. 'degree' → logprob: -2.473361015319824
    3. 'degrees' → logprob: -4.848361015319824
    4. 'new' → logprob: -7.223361015319824
    5. 'graph' → logprob: -8.223361015319824
    6. 'g' → logprob: -8.973361015319824
    7. 'd' → logprob: -9.098361015319824
    8. '```' → logprob: -9.848361015319824
    9. 'nd' → logprob: -10.098361015319824
    10. ' =' → logprob: -10.473361015319824

Token 589: 'graph' (ID: 7978)
  Prédit: 'deg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deg' → logprob: -0.04444720223546028
    2. 'degree' → logprob: -3.169447183609009
    3. 'degrees' → logprob: -6.919447422027588
    4. 'new' → logprob: -8.41944694519043
    5. 'de' → logprob: -10.16944694519043
    6. 'nd' → logprob: -10.29444694519043
    7. 'g' → logprob: -10.41944694519043
    8. 'd' → logprob: -10.79444694519043
    9. ' deg' → logprob: -11.04444694519043
    10. '```' → logprob: -11.04444694519043

Token 590: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519693076610565
    2. ' =' → logprob: -1.501969337463379
    3. '=[' → logprob: -10.251969337463379
    4. '2' → logprob: -13.626969337463379
    5. ' =[' → logprob: -14.251969337463379
    6. '=[]' → logprob: -14.501969337463379
    7. '=[[' → logprob: -14.626969337463379
    8. '[:]' → logprob: -14.751969337463379
    9. '＝' → logprob: -14.876969337463379
    10. '[' → logprob: -15.126969337463379

Token 591: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0003576304006855935
    2. ' [[]' → logprob: -8.000357627868652
    3. '[[' → logprob: -10.750357627868652
    4. '[]' → logprob: -14.875357627868652
    5. '[]
' → logprob: -15.375357627868652
    6. '[s' → logprob: -16.87535858154297
    7. '{' → logprob: -17.37535858154297
    8. '   ' → logprob: -17.37535858154297
    9. '[
' → logprob: -17.62535858154297
    10. '[-' → logprob: -17.87535858154297

Token 592: ' for' (ID: 395)
  Prédit: '(sz'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sz' → logprob: -0.0047088684514164925
    2. 'for' → logprob: -5.379708766937256
    3. 'sz' → logprob: -10.004709243774414
    4. ' for' → logprob: -10.504709243774414
    5. ' sz' → logprob: -12.004709243774414
    6. '
' → logprob: -12.754709243774414
    7. ' (' → logprob: -13.504709243774414
    8. '_sz' → logprob: -13.754709243774414
    9. '(' → logprob: -13.754709243774414
    10. ')' → logprob: -13.879709243774414

Token 593: ' _' (ID: 1175)
  Prédit: '(sz'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sz' → logprob: -0.055733777582645416
    2. '_' → logprob: -3.8057336807250977
    3. ' in' → logprob: -4.555733680725098
    4. '_sz' → logprob: -4.805733680725098
    5. 'sz' → logprob: -4.930733680725098
    6. 'in' → logprob: -5.680733680725098
    7. ' sz' → logprob: -6.430733680725098
    8. 'range' → logprob: -7.555733680725098
    9. ' range' → logprob: -8.555733680725098
    10. ' _' → logprob: -9.555733680725098

Token 594: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011338639073073864
    2. ' range' → logprob: -5.136338710784912
    3. 'sz' → logprob: -5.261338710784912
    4. '(sz' → logprob: -9.511338233947754
    5. 'size' → logprob: -9.636338233947754
    6. '(range' → logprob: -10.761338233947754
    7. 'in' → logprob: -11.011338233947754
    8. 'len' → logprob: -11.261338233947754
    9. ' sz' → logprob: -11.761338233947754
    10. '_sz' → logprob: -12.261338233947754

Token 595: ' range' (ID: 3352)
  Prédit: 'sz'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sz' → logprob: -0.027871500700712204
    2. 'len' → logprob: -3.777871608734131
    3. '(sz' → logprob: -5.902871608734131
    4. 'range' → logprob: -6.652871608734131
    5. ' sz' → logprob: -7.902871608734131
    6. '(len' → logprob: -9.277871131896973
    7. 'trees' → logprob: -9.777871131896973
    8. '(' → logprob: -10.652871131896973
    9. ' len' → logprob: -11.527871131896973
    10. '(s' → logprob: -11.902871131896973

Token 596: '(sz' (ID: 80788)
  Prédit: 'sz'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sz' → logprob: -0.05591088533401489
    2. 'len' → logprob: -3.18091082572937
    3. '(sz' → logprob: -4.430911064147949
    4. ' sz' → logprob: -7.555911064147949
    5. '(len' → logprob: -8.30591106414795
    6. 'range' → logprob: -9.80591106414795
    7. '(' → logprob: -10.93091106414795
    8. ' len' → logprob: -11.05591106414795
    9. 'N' → logprob: -11.43091106414795
    10. '(s' → logprob: -11.68091106414795

Token 597: ')]
' (ID: 11587)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5338875651359558
    2. ']
' → logprob: -1.2838876247406006
    3. ')]' → logprob: -2.2838876247406006
    4. ')]
' → logprob: -3.6588876247406006
    5. ')' → logprob: -4.7838873863220215
    6. ')
' → logprob: -7.4088873863220215
    7. ']

' → logprob: -10.15888786315918
    8. ']
' → logprob: -10.15888786315918
    9. ')]

' → logprob: -11.40888786315918
    10. ')]
' → logprob: -12.03388786315918

Token 598: 'deg' (ID: 30546)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1006971225142479
    2. 'deg' → logprob: -2.7256970405578613
    3. 'degree' → logprob: -3.8506970405578613
    4. 'degrees' → logprob: -4.725697040557861
    5. 'edges' → logprob: -9.22569751739502
    6. 'edge' → logprob: -10.97569751739502
    7. 'd' → logprob: -10.97569751739502
    8. ' for' → logprob: -11.72569751739502
    9. 'de' → logprob: -12.35069751739502
    10. 'idx' → logprob: -12.85069751739502

Token 599: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4742525815963745
    2. '=' → logprob: -0.9742525815963745
    3. '[:]' → logprob: -9.599252700805664
    4. '[' → logprob: -9.974252700805664
    5. '=[' → logprob: -9.974252700805664
    6. ' =[' → logprob: -11.724252700805664
    7. '=[]' → logprob: -12.599252700805664
    8. ']' → logprob: -14.474252700805664
    9. ' ' → logprob: -14.474252700805664
    10. '[:' → logprob: -15.099252700805664

Token 600: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.000297685619443655
    2. ' [' → logprob: -8.125297546386719
    3. 'par' → logprob: -13.625297546386719
    4. '[len' → logprob: -15.875297546386719
    5. '[p' → logprob: -16.37529754638672
    6. '   ' → logprob: -16.37529754638672
    7. '[val' → logprob: -17.25029754638672
    8. '[size' → logprob: -17.62529754638672
    9. '[pos' → logprob: -18.12529754638672
    10. '[i' → logprob: -18.37529754638672

Token 601: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.3458322731312364e-06
    2. ' ' → logprob: -11.875007629394531
    3. '[' → logprob: -15.500007629394531
    4. ']' → logprob: -17.25000762939453
    5. '(' → logprob: -17.50000762939453
    6. '   ' → logprob: -18.37500762939453
    7. ' [' → logprob: -18.87500762939453
    8. '1' → logprob: -19.31250762939453
    9. 'par' → logprob: -19.56250762939453
    10. '۰' → logprob: -19.62500762939453

Token 602: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.011813049204647541
    2. ']*' → logprob: -5.011813163757324
    3. 'for' → logprob: -5.886813163757324
    4. ']+=' → logprob: -7.511813163757324
    5. '(sz' → logprob: -7.511813163757324
    6. ' for' → logprob: -7.636813163757324
    7. '=' → logprob: -8.386813163757324
    8. ' ]' → logprob: -9.261813163757324
    9. ']+' → logprob: -9.261813163757324
    10. ']*(' → logprob: -10.011813163757324

Token 603: 'sz' (ID: 13849)
  Prédit: 'sz'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sz' → logprob: -8.7689099018462e-05
    2. '(sz' → logprob: -9.37508773803711
    3. ' sz' → logprob: -13.12508773803711
    4. 'len' → logprob: -14.75008773803711
    5. '(' → logprob: -15.12508773803711
    6. '   ' → logprob: -17.87508773803711
    7. 's' → logprob: -18.12508773803711
    8. '(s' → logprob: -18.87508773803711
    9. '
' → logprob: -19.25008773803711
    10. '.sz' → logprob: -19.25008773803711

Token 604: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0031793788075447083
    2. ' for' → logprob: -6.253179550170898
    3. '
' → logprob: -6.753179550170898
    4. '<|end|>' → logprob: -10.003179550170898
    5. 'edges' → logprob: -10.378179550170898
    6. '```' → logprob: -13.378179550170898
    7. '<|end|>' → logprob: -14.628179550170898
    8. ' edges' → logprob: -14.753179550170898
    9. 'degree' → logprob: -14.753179550170898
    10. '
' → logprob: -14.753179550170898

Token 605: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0802738870552275e-05
    2. 'edges' → logprob: -12.00001049041748
    3. ' for' → logprob: -12.75001049041748
    4. '```' → logprob: -14.25001049041748
    5. '
' → logprob: -15.00001049041748
    6. 'edge' → logprob: -15.37501049041748
    7. 'idx' → logprob: -15.75001049041748
    8. '``' → logprob: -16.250011444091797
    9. '   ' → logprob: -17.375011444091797
    10. '#' → logprob: -17.750011444091797

Token 606: ' edge' (ID: 11165)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.013921956531703472
    2. '(v' → logprob: -4.763921737670898
    3. 'u' → logprob: -5.638921737670898
    4. 'e' → logprob: -7.138921737670898
    5. 'edges' → logprob: -7.513921737670898
    6. '(u' → logprob: -8.763921737670898
    7. 'a' → logprob: -9.388921737670898
    8. ' v' → logprob: -9.763921737670898
    9. 'i' → logprob: -10.513921737670898
    10. 'x' → logprob: -11.138921737670898

Token 607: 'group' (ID: 4323)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.37084606289863586
    2. 'v' → logprob: -1.7458460330963135
    3. 'in' → logprob: -2.8708460330963135
    4. 'u' → logprob: -3.1208460330963135
    5. ',' → logprob: -5.120846271514893
    6. '(u' → logprob: -5.120846271514893
    7. '(v' → logprob: -5.120846271514893
    8. ',v' → logprob: -5.245846271514893
    9. ' v' → logprob: -5.995846271514893
    10. '_idx' → logprob: -6.370846271514893

Token 608: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2015221118927002
    2. 'in' → logprob: -1.7015221118927002
    3. 's' → logprob: -10.076521873474121
    4. ',' → logprob: -11.326521873474121
    5. ' ' → logprob: -11.951521873474121
    6. 'e' → logprob: -12.201521873474121
    7. 'group' → logprob: -12.326521873474121
    8. '_in' → logprob: -12.451521873474121
    9. 'i' → logprob: -12.826521873474121
    10. '   ' → logprob: -12.951521873474121

Token 609: ' trees' (ID: 16979)
  Prédit: 'trees'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trees' → logprob: -0.0025904078502207994
    2. ' trees' → logprob: -6.002590179443359
    3. 'edges' → logprob: -9.37759017944336
    4. 't' → logprob: -10.75259017944336
    5. 'tree' → logprob: -12.25259017944336
    6. ' edges' → logprob: -13.62759017944336
    7. 'tre' → logprob: -13.87759017944336
    8. '[' → logprob: -14.50259017944336
    9. '[]' → logprob: -15.25259017944336
    10. ' ' → logprob: -15.37759017944336

Token 610: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22870467603206635
    2. ':
' → logprob: -1.6037046909332275
    3. '   ' → logprob: -5.853704452514648
    4. ' in' → logprob: -7.853704452514648
    5. ',' → logprob: -11.853704452514648
    6. 'in' → logprob: -12.478704452514648
    7. '       ' → logprob: -12.603704452514648
    8. '):
' → logprob: -12.978704452514648
    9. ':

' → logprob: -12.978704452514648
    10. '[' → logprob: -13.103704452514648

Token 611: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00012713817704934627
    2. ' for' → logprob: -9.625126838684082
    3. 'for' → logprob: -10.000126838684082
    4. '       ' → logprob: -11.125126838684082
    5. '	for' → logprob: -14.875126838684082
    6. '```' → logprob: -15.125126838684082
    7. '   ' → logprob: -15.875126838684082
    8. ' ' → logprob: -18.0001277923584
    9. ',' → logprob: -18.2501277923584
    10. '	' → logprob: -18.6251277923584

Token 612: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0006445261533372104
    2. '   ' → logprob: -7.500644683837891
    3. ' for' → logprob: -9.50064468383789
    4. 'u' → logprob: -11.62564468383789
    5. 'edges' → logprob: -13.25064468383789
    6. '```' → logprob: -14.12564468383789
    7. 'xor' → logprob: -14.37564468383789
    8. 'if' → logprob: -14.50064468383789
    9. 'deg' → logprob: -14.62564468383789
    10. 'x' → logprob: -14.62564468383789

Token 613: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.019464649260044098
    2. '(v' → logprob: -4.269464492797852
    3. ' v' → logprob: -5.894464492797852
    4. 'u' → logprob: -6.394464492797852
    5. '(u' → logprob: -7.269464492797852
    6. 'x' → logprob: -9.769464492797852
    7. 'a' → logprob: -10.019464492797852
    8. '   ' → logprob: -11.394464492797852
    9. '_v' → logprob: -11.519464492797852
    10. ' (' → logprob: -11.769464492797852

Token 614: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0049989246763288975
    2. ',u' → logprob: -5.879999160766602
    3. ',v' → logprob: -6.254999160766602
    4. ' ,' → logprob: -8.254999160766602
    5. 'u' → logprob: -13.129999160766602
    6. ',n' → logprob: -14.004999160766602
    7. ',
' → logprob: -14.004999160766602
    8. ',user' → logprob: -14.004999160766602
    9. '_,' → logprob: -14.129999160766602
    10. 'v' → logprob: -14.254999160766602

Token 615: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.16022534668445587
    2. ' u' → logprob: -1.9102253913879395
    3. ' ' → logprob: -14.785224914550781
    4. ',' → logprob: -15.160224914550781
    5. '	u' → logprob: -15.410224914550781
    6. ' ' → logprob: -16.03522491455078
    7. ',u' → logprob: -16.03522491455078
    8. 'w' → logprob: -16.91022491455078
    9. 'v' → logprob: -17.78522491455078
    10. '    ' → logprob: -17.78522491455078

Token 616: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.021047456189990044
    2. ' in' → logprob: -4.021047592163086
    3. 'in' → logprob: -6.146047592163086
    4. ' ,' → logprob: -7.396047592163086
    5. ',v' → logprob: -9.396047592163086
    6. '   ' → logprob: -10.271047592163086
    7. ',u' → logprob: -12.646047592163086
    8. '    ' → logprob: -12.896047592163086
    9. ',
' → logprob: -13.271047592163086
    10. ',in' → logprob: -13.271047592163086

Token 617: ' eid' (ID: 131397)
  Prédit: 'eid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eid' → logprob: -0.014230852946639061
    2. ' eid' → logprob: -4.264230728149414
    3. 'e' → logprob: -10.514230728149414
    4. 'edge' → logprob: -11.389230728149414
    5. 'id' → logprob: -11.389230728149414
    6. 'ei' → logprob: -12.514230728149414
    7. ' ' → logprob: -12.764230728149414
    8. 'idx' → logprob: -13.764230728149414
    9. 'ed' → logprob: -13.889230728149414
    10. 'iid' → logprob: -14.139230728149414

Token 618: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07001479715108871
    2. 'in' → logprob: -2.695014715194702
    3. '   ' → logprob: -10.070014953613281
    4. ',' → logprob: -10.570014953613281
    5. '    ' → logprob: -13.195014953613281
    6. '	in' → logprob: -13.320014953613281
    7. ')' → logprob: -13.445014953613281
    8. ' ' → logprob: -13.570014953613281
    9. '  ' → logprob: -13.570014953613281
    10. '):
' → logprob: -13.820014953613281

Token 619: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.01420041173696518
    2. ' edge' → logprob: -4.264200210571289
    3. '(edge' → logprob: -10.389200210571289
    4. '   ' → logprob: -12.639200210571289
    5. '=edge' → logprob: -13.639200210571289
    6. ' ' → logprob: -14.264200210571289
    7. '  ' → logprob: -15.389200210571289
    8. '[' → logprob: -15.764200210571289
    9. '    ' → logprob: -15.764200210571289
    10. 'edges' → logprob: -16.13920021057129

Token 620: 'group' (ID: 4323)
  Prédit: 'group'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'group' → logprob: -0.0008863262482918799
    2. 'd' → logprob: -7.6258864402771
    3. 'id' → logprob: -8.250885963439941
    4. 'in' → logprob: -10.500885963439941
    5. ':
' → logprob: -10.875885963439941
    6. 's' → logprob: -11.000885963439941
    7. ' group' → logprob: -11.750885963439941
    8. ':' → logprob: -11.750885963439941
    9. 'roup' → logprob: -11.750885963439941
    10. 'dge' → logprob: -12.000885963439941

Token 621: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.46580255031585693
    2. ':
' → logprob: -1.090802550315857
    3. '   ' → logprob: -4.0908026695251465
    4. '       ' → logprob: -4.3408026695251465
    5. ',' → logprob: -5.7158026695251465
    6. '):
' → logprob: -6.2158026695251465
    7. '[' → logprob: -7.8408026695251465
    8. '```' → logprob: -8.715802192687988
    9. '<|end|>' → logprob: -8.840802192687988
    10. '=' → logprob: -9.090802192687988

Token 622: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5762062668800354
    2. '   ' → logprob: -0.8262062668800354
    3. 'graph' → logprob: -8.82620620727539
    4. '```' → logprob: -9.95120620727539
    5. '	graph' → logprob: -10.45120620727539
    6. ' graph' → logprob: -10.45120620727539
    7. '``' → logprob: -12.82620620727539
    8. '	   ' → logprob: -13.20120620727539
    9. '        
' → logprob: -13.45120620727539
    10. '    
' → logprob: -13.45120620727539

Token 623: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -0.050513576716184616
    2. '   ' → logprob: -3.800513505935669
    3. ' graph' → logprob: -4.050513744354248
    4. '       ' → logprob: -4.675513744354248
    5. '	graph' → logprob: -9.17551326751709
    6. '           ' → logprob: -10.05051326751709
    7. '```' → logprob: -11.42551326751709
    8. 'deg' → logprob: -13.30051326751709
    9. ' ' → logprob: -13.30051326751709
    10. '``' → logprob: -14.05051326751709

Token 624: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -1.9361264946837764e-07
    2. 'v' → logprob: -16.5
    3. '[' → logprob: -17.5
    4. '[u' → logprob: -17.625
    5. '   ' → logprob: -20.125
    6. '```' → logprob: -20.125
    7. '][' → logprob: -20.375
    8. ' [' → logprob: -20.875
    9. '[V' → logprob: -21.125
    10. '[val' → logprob: -21.5

Token 625: '].' (ID: 1651)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.3377629816532135
    2. '].' → logprob: -1.3377629518508911
    3. '.' → logprob: -3.8377630710601807
    4. ').' → logprob: -5.962762832641602
    5. ' .' → logprob: -10.462762832641602
    6. '   ' → logprob: -10.712762832641602
    7. '.app' → logprob: -11.087762832641602
    8. '}.' → logprob: -12.087762832641602
    9. ' ].' → logprob: -12.712762832641602
    10. '>.' → logprob: -12.837762832641602

Token 626: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.9361264946837764e-07
    2. '.append' → logprob: -16.0
    3. ' append' → logprob: -17.0
    4. 'appen' → logprob: -19.375
    5. 'app' → logprob: -20.875
    6. '_append' → logprob: -21.125
    7. '	append' → logprob: -21.125
    8. 'Append' → logprob: -22.25
    9. '```' → logprob: -23.0
    10. 'push' → logprob: -25.375

Token 627: '(' (ID: 7)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.17188826203346252
    2. '(' → logprob: -2.4218883514404297
    3. '(u' → logprob: -2.6718883514404297
    4. ' (' → logprob: -10.04688835144043
    5. '   ' → logprob: -12.42188835144043
    6. ' ((' → logprob: -12.79688835144043
    7. '(
' → logprob: -14.17188835144043
    8. '```' → logprob: -16.17188835144043
    9. '(v' → logprob: -16.67188835144043
    10. ' ' → logprob: -16.79688835144043

Token 628: ' (' (ID: 350)
  Prédit: '(u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.014343667775392532
    2. ' (' → logprob: -4.264343738555908
    3. '(' → logprob: -9.26434326171875
    4. 'u' → logprob: -9.38934326171875
    5. '   ' → logprob: -13.63934326171875
    6. ' u' → logprob: -14.63934326171875
    7. ' ' → logprob: -16.01434326171875
    8. '[u' → logprob: -16.88934326171875
    9. ')' → logprob: -17.26434326171875
    10. '((' → logprob: -18.88934326171875

Token 629: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -7.743758760625497e-05
    2. ' u' → logprob: -9.500077247619629
    3. '   ' → logprob: -13.125077247619629
    4. '(u' → logprob: -14.750077247619629
    5. '	u' → logprob: -16.500078201293945
    6. ',u' → logprob: -17.750078201293945
    7. '[u' → logprob: -18.000078201293945
    8. '
' → logprob: -18.500078201293945
    9. ' ' → logprob: -19.250078201293945
    10. '    ' → logprob: -19.750078201293945

Token 630: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.60414821645827e-06
    2. ' ,' → logprob: -12.625004768371582
    3. '‌,' → logprob: -15.125004768371582
    4. ',
' → logprob: -15.375004768371582
    5. '<|end|>' → logprob: -15.625004768371582
    6. ')' → logprob: -15.750004768371582
    7. '),' → logprob: -16.125003814697266
    8. '`,' → logprob: -16.500003814697266
    9. ',e' → logprob: -16.625003814697266
    10. ',v' → logprob: -17.000003814697266

Token 631: ' eid' (ID: 131397)
  Prédit: 'eid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eid' → logprob: -0.2811706066131592
    2. ' eid' → logprob: -1.4061706066131592
    3. ' ' → logprob: -13.031170845031738
    4. 'iid' → logprob: -13.343670845031738
    5. 'e' → logprob: -13.468670845031738
    6. ' ' → logprob: -13.531170845031738
    7. '
' → logprob: -13.656170845031738
    8. 'edge' → logprob: -13.656170845031738
    9. 'ead' → logprob: -13.718670845031738
    10. 'oid' → logprob: -13.906170845031738

Token 632: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004023097571916878
    2. ' )' → logprob: -8.000402450561523
    3. ',' → logprob: -9.625402450561523
    4. '),' → logprob: -14.875402450561523
    5. '   ' → logprob: -15.875402450561523
    6. ')
' → logprob: -15.875402450561523
    7. ',)' → logprob: -16.625402450561523
    8. ' ,' → logprob: -17.375402450561523
    9. ')`' → logprob: -17.750402450561523
    10. '[' → logprob: -17.875402450561523

Token 633: ' )
' (ID: 3270)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010035372339189053
    2. ')
' → logprob: -4.635035514831543
    3. ' )' → logprob: -8.385035514831543
    4. '       ' → logprob: -11.010035514831543
    5. ' )
' → logprob: -11.260035514831543
    6. ',' → logprob: -11.260035514831543
    7. '   ' → logprob: -12.885035514831543
    8. '),' → logprob: -13.260035514831543
    9. ')
' → logprob: -13.385035514831543
    10. ');' → logprob: -14.260035514831543

Token 634: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003096023283433169
    2. 'deg' → logprob: -8.125309944152832
    3. ' deg' → logprob: -12.125309944152832
    4. '```' → logprob: -12.500309944152832
    5. '   ' → logprob: -14.125309944152832
    6. '[' → logprob: -14.375309944152832
    7. ',' → logprob: -14.500309944152832
    8. '           ' → logprob: -14.625309944152832
    9. '<|end|>' → logprob: -15.000309944152832
    10. '
' → logprob: -15.000309944152832

Token 635: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -0.3498815894126892
    2. 'deg' → logprob: -1.224881649017334
    3. '       ' → logprob: -6.724881649017334
    4. 'degree' → logprob: -9.224881172180176
    5. ' graph' → logprob: -9.849881172180176
    6. '   ' → logprob: -10.099881172180176
    7. ' deg' → logprob: -10.599881172180176
    8. '           ' → logprob: -12.099881172180176
    9. '	graph' → logprob: -12.474881172180176
    10. 'degrees' → logprob: -13.099881172180176

Token 636: '[u' (ID: 48750)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.5250621438026428
    2. '[u' → logprob: -0.9000621438026428
    3. 'deg' → logprob: -6.775062084197998
    4. 'v' → logprob: -7.775062084197998
    5. '[' → logprob: -8.650062561035156
    6. 'u' → logprob: -9.275062561035156
    7. 'd' → logprob: -10.650062561035156
    8. '[d' → logprob: -10.900062561035156
    9. '_deg' → logprob: -11.150062561035156
    10. 'def' → logprob: -11.400062561035156

Token 637: '].' (ID: 1651)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.7226060628890991
    2. '].' → logprob: -1.0976060628890991
    3. ').' → logprob: -2.0976061820983887
    4. '.' → logprob: -2.9726061820983887
    5. ',' → logprob: -5.097606182098389
    6. '       ' → logprob: -7.472606182098389
    7. '           ' → logprob: -9.97260570526123
    8. ' .' → logprob: -10.47260570526123
    9. ' ].' → logprob: -10.47260570526123
    10. '        ' → logprob: -10.59760570526123

Token 638: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -4.36574100604048e-06
    2. ' append' → logprob: -12.500004768371582
    3. '.append' → logprob: -14.625004768371582
    4. 'appen' → logprob: -16.625003814697266
    5. '	append' → logprob: -18.250003814697266
    6. '_append' → logprob: -19.125003814697266
    7. 'insert' → logprob: -21.125003814697266
    8. 'app' → logprob: -21.125003814697266
    9. 'Append' → logprob: -21.250003814697266
    10. 'prepend' → logprob: -22.125003814697266

Token 639: '(' (ID: 7)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.20482836663722992
    2. '(' → logprob: -1.7048283815383911
    3. '(v' → logprob: -5.704828262329102
    4. '((' → logprob: -9.579828262329102
    5. '(u' → logprob: -12.079828262329102
    6. ' ((' → logprob: -13.079828262329102
    7. '(
' → logprob: -13.704828262329102
    8. ' (
' → logprob: -15.204828262329102
    9. ',' → logprob: -15.454828262329102
    10. '```' → logprob: -15.454828262329102

Token 640: ' (' (ID: 350)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.47436225414276123
    2. ' (' → logprob: -0.9743622541427612
    3. '(' → logprob: -8.22436237335205
    4. 'v' → logprob: -11.47436237335205
    5. ' v' → logprob: -11.97436237335205
    6. '	v' → logprob: -15.72436237335205
    7. ' ' → logprob: -16.474361419677734
    8. ')' → logprob: -16.974361419677734
    9. ')v' → logprob: -16.974361419677734
    10. '(u' → logprob: -17.224361419677734

Token 641: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -3.128163257315464e-07
    2. ' v' → logprob: -15.875
    3. '(v' → logprob: -16.5
    4. '   ' → logprob: -18.125
    5. '	v' → logprob: -18.875
    6. 'u' → logprob: -19.625
    7. ',v' → logprob: -20.375
    8. ')v' → logprob: -21.125
    9. 'vi' → logprob: -22.125
    10. '[v' → logprob: -22.75

Token 642: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.7385154428193346e-05
    2. ' ,' → logprob: -10.25003719329834
    3. ',e' → logprob: -13.37503719329834
    4. '),' → logprob: -16.375038146972656
    5. ',
' → logprob: -16.500038146972656
    6. ')' → logprob: -16.750038146972656
    7. '‌,' → logprob: -17.000038146972656
    8. '<|end|>' → logprob: -17.625038146972656
    9. '[' → logprob: -17.750038146972656
    10. 'e' → logprob: -19.000038146972656

Token 643: ' eid' (ID: 131397)
  Prédit: ' eid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' eid' → logprob: -0.31330710649490356
    2. 'eid' → logprob: -1.3133070468902588
    3. ' ' → logprob: -10.93830680847168
    4. 'iid' → logprob: -12.87580680847168
    5. ' ' → logprob: -12.93830680847168
    6. 'e' → logprob: -13.37580680847168
    7. '   ' → logprob: -13.43830680847168
    8. ' iid' → logprob: -13.56330680847168
    9. '
' → logprob: -13.81330680847168
    10. ' e' → logprob: -13.93830680847168

Token 644: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011927806917810813
    2. ' )' → logprob: -9.12511920928955
    3. '))' → logprob: -11.50011920928955
    4. ' ))' → logprob: -16.000120162963867
    5. '   ' → logprob: -17.250120162963867
    6. ',)' → logprob: -17.375120162963867
    7. ',' → logprob: -17.750120162963867
    8. '}' → logprob: -18.500120162963867
    9. '),' → logprob: -18.625120162963867
    10. ')
' → logprob: -18.750120162963867

Token 645: ' )
' (ID: 3270)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.47743356227874756
    2. ')' → logprob: -1.2274335622787476
    3. '       ' → logprob: -2.477433681488037
    4. ' )
' → logprob: -6.227433681488037
    5. ' )' → logprob: -7.602433681488037
    6. '   ' → logprob: -9.477433204650879
    7. ')
' → logprob: -10.352433204650879
    8. ',' → logprob: -11.852433204650879
    9. '           ' → logprob: -12.227433204650879
    10. ')

' → logprob: -12.352433204650879

Token 646: '       ' (ID: 309)
  Prédit: 'deg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deg' → logprob: -0.34943878650665283
    2. 'for' → logprob: -1.8494387865066528
    3. 'degree' → logprob: -2.3494386672973633
    4. 'used' → logprob: -4.349438667297363
    5. 'degrees' → logprob: -5.224438667297363
    6. 'visited' → logprob: -5.224438667297363
    7. 'par' → logprob: -5.599438667297363
    8. 'res' → logprob: -6.099438667297363
    9. 'from' → logprob: -6.224438667297363
    10. '```' → logprob: -6.349438667297363

Token 647: ' deg' (ID: 5597)
  Prédit: 'deg'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deg' (adapté à ' deg') → logprob: -1.9361264946837764e-07
    2. '   ' → logprob: -17.25
    3. '```' → logprob: -17.875
    4. ' deg' → logprob: -18.75
    5. '       ' → logprob: -19.125
    6. 'degree' → logprob: -21.5
    7. '           ' → logprob: -21.75
    8. 'dep' → logprob: -22.5
    9. '``' → logprob: -22.625
    10. '        
' → logprob: -23.25

Token 648: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -2.696889623621246e-06
    2. '[' → logprob: -13.37500286102295
    3. 'v' → logprob: -14.00000286102295
    4. '[u' → logprob: -15.25000286102295
    5. '[val' → logprob: -17.875001907348633
    6. '[V' → logprob: -19.500001907348633
    7. '	v' → logprob: -19.875001907348633
    8. ' [' → logprob: -20.000001907348633
    9. '```' → logprob: -20.000001907348633
    10. '   ' → logprob: -20.000001907348633

Token 649: ']' (ID: 60)
  Prédit: ']+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+=' → logprob: -0.46299678087234497
    2. ']' → logprob: -1.4629967212677002
    3. '+=' → logprob: -2.2129967212677
    4. '[' → logprob: -4.337996959686279
    5. '[v' → logprob: -4.337996959686279
    6. '+' → logprob: -5.962996959686279
    7. ' +=' → logprob: -7.712996959686279
    8. ']+' → logprob: -8.712996482849121
    9. ')' → logprob: -9.087996482849121
    10. '[u' → logprob: -9.337996482849121

Token 650: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -5.32392441527918e-05
    2. ' +=' → logprob: -10.000053405761719
    3. ']+=' → logprob: -12.375053405761719
    4. '+' → logprob: -12.625053405761719
    5. '=' → logprob: -15.750053405761719
    6. '[' → logprob: -16.50005340576172
    7. '   ' → logprob: -17.25005340576172
    8. '+='' → logprob: -19.37505340576172
    9. '+=(' → logprob: -20.12505340576172
    10. '```' → logprob: -20.50005340576172

Token 651: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. '+' → logprob: -18.500001907348633
    4. '   ' → logprob: -18.625001907348633
    5. '```' → logprob: -19.500001907348633
    6. '2' → logprob: -20.687501907348633
    7. '
' → logprob: -20.875001907348633
    8. '0' → logprob: -21.437501907348633
    9. '  ' → logprob: -21.625001907348633
    10. '`' → logprob: -21.812501907348633

Token 652: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '2' → logprob: -20.375
    4. '   ' → logprob: -21.0
    5. '+' → logprob: -21.125
    6. '```' → logprob: -21.125
    7. '１' → logprob: -21.5
    8. '0' → logprob: -21.6875
    9. '۱' → logprob: -22.0625
    10. '
' → logprob: -22.3125

Token 653: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00024037064576987177
    2. 'deg' → logprob: -8.875240325927734
    3. '   ' → logprob: -9.750240325927734
    4. '<|end|>' → logprob: -11.500240325927734
    5. '           ' → logprob: -11.750240325927734
    6. ' deg' → logprob: -12.000240325927734
    7. ',' → logprob: -12.250240325927734
    8. '      ' → logprob: -12.375240325927734
    9. '     ' → logprob: -13.000240325927734
    10. ' ' → logprob: -13.500240325927734

Token 654: '       ' (ID: 309)
  Prédit: 'deg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deg' → logprob: -0.13089554011821747
    2. 'for' → logprob: -2.1308956146240234
    3. '       ' → logprob: -6.130895614624023
    4. '```' → logprob: -7.130895614624023
    5. ' for' → logprob: -7.755895614624023
    6. '<|end|>' → logprob: -7.880895614624023
    7. ' deg' → logprob: -10.005895614624023
    8. '   ' → logprob: -10.505895614624023
    9. 'degree' → logprob: -10.755895614624023
    10. '[' → logprob: -10.755895614624023

Token 655: ' deg' (ID: 5597)
  Prédit: 'deg'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deg' (adapté à ' deg') → logprob: -6.635164754698053e-05
    2. ' deg' → logprob: -9.750066757202148
    3. '       ' → logprob: -12.500066757202148
    4. '1' → logprob: -12.750066757202148
    5. '   ' → logprob: -13.625066757202148
    6. '           ' → logprob: -18.00006675720215
    7. ' ' → logprob: -18.62506675720215
    8. '_deg' → logprob: -19.00006675720215
    9. '	de' → logprob: -19.12506675720215
    10. '     ' → logprob: -20.00006675720215

Token 656: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -4.4849443838757e-06
    2. '[v' → logprob: -12.750004768371582
    3. '[' → logprob: -13.625004768371582
    4. 'u' → logprob: -15.625004768371582
    5. ' [' → logprob: -16.750003814697266
    6. '[
' → logprob: -17.750003814697266
    7. '```' → logprob: -18.000003814697266
    8. '=u' → logprob: -18.625003814697266
    9. '
' → logprob: -18.875003814697266
    10. '[e' → logprob: -19.000003814697266

Token 657: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.28326845169067383
    2. '[v' → logprob: -1.5332684516906738
    3. ']+=' → logprob: -3.658268451690674
    4. '+=' → logprob: -6.033268451690674
    5. '[' → logprob: -6.158268451690674
    6. ']+' → logprob: -8.533267974853516
    7. '```' → logprob: -8.908267974853516
    8. ' ]' → logprob: -9.783267974853516
    9. ' +=' → logprob: -10.158267974853516
    10. '   ' → logprob: -10.408267974853516

Token 658: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.011321191675961018
    2. ' +=' → logprob: -4.511321067810059
    3. ']+=' → logprob: -8.261321067810059
    4. '[' → logprob: -11.761321067810059
    5. '   ' → logprob: -12.636321067810059
    6. '+' → logprob: -13.261321067810059
    7. ' ' → logprob: -14.261321067810059
    8. '[v' → logprob: -14.511321067810059
    9. '=' → logprob: -14.636321067810059
    10. ']' → logprob: -15.761321067810059

Token 659: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.4391956685576588e-05
    2. ' ' → logprob: -10.625024795532227
    3. '   ' → logprob: -18.000024795532227
    4. '2' → logprob: -18.625024795532227
    5. '
' → logprob: -19.125024795532227
    6. '１' → logprob: -20.375024795532227
    7. '```' → logprob: -20.750024795532227
    8. '+' → logprob: -21.125024795532227
    9. '  ' → logprob: -21.312524795532227
    10. '۱' → logprob: -21.375024795532227

Token 660: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '   ' → logprob: -19.6250057220459
    4. '１' → logprob: -20.2500057220459
    5. '
' → logprob: -20.6250057220459
    6. '-' → logprob: -20.8750057220459
    7. '۱' → logprob: -21.0000057220459
    8. '2' → logprob: -21.1875057220459
    9. ' ' → logprob: -21.3125057220459
    10. '```' → logprob: -21.4375057220459

Token 661: '

' (ID: 279)
  Prédit: 'odd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'odd' → logprob: -1.1467304229736328
    2. 'flip' → logprob: -1.7717304229736328
    3. 'from' → logprob: -1.8967304229736328
    4. 'stack' → logprob: -2.271730422973633
    5. 'queue' → logprob: -3.146730422973633
    6. 'color' → logprob: -3.271730422973633
    7. '#' → logprob: -3.396730422973633
    8. 'bad' → logprob: -4.146730422973633
    9. 'q' → logprob: -4.271730422973633
    10. 'import' → logprob: -4.646730422973633

Token 662: 'ans' (ID: 616)
  Prédit: 'odd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'odd' → logprob: -0.2836354076862335
    2. 'stack' → logprob: -2.533635377883911
    3. 'queue' → logprob: -2.658635377883911
    4. 'from' → logprob: -3.033635377883911
    5. 'q' → logprob: -4.65863561630249
    6. 'for' → logprob: -4.90863561630249
    7. 'que' → logprob: -5.03363561630249
    8. '#' → logprob: -5.40863561630249
    9. 'Q' → logprob: -5.53363561630249
    10. 'bad' → logprob: -5.90863561630249

Token 663: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012772027403116226
    2. '=' → logprob: -4.387772083282471
    3. '_edges' → logprob: -9.262771606445312
    4. '_' → logprob: -10.012771606445312
    5. '=[]' → logprob: -10.762771606445312
    6. ',' → logprob: -11.012771606445312
    7. ' ' → logprob: -11.137771606445312
    8. '[' → logprob: -11.262771606445312
    9. '[]' → logprob: -11.637771606445312
    10. '[:]' → logprob: -12.012771606445312

Token 664: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.004558292217552662
    2. '0' → logprob: -5.504558086395264
    3. '[]
' → logprob: -8.129558563232422
    4. '[' → logprob: -8.879558563232422
    5. ' []' → logprob: -11.129558563232422
    6. 'set' → logprob: -11.254558563232422
    7. '[]

' → logprob: -12.004558563232422
    8. '{}' → logprob: -12.254558563232422
    9. '[]}' → logprob: -12.754558563232422
    10. '[])' → logprob: -13.879558563232422

Token 665: 'marked' (ID: 71560)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.885434627532959
    2. 'from' → logprob: -1.135434627532959
    3. 'queue' → logprob: -2.010434627532959
    4. 'q' → logprob: -3.135434627532959
    5. 'def' → logprob: -3.510434627532959
    6. 'while' → logprob: -3.885434627532959
    7. 'que' → logprob: -4.010434627532959
    8. 'odd' → logprob: -4.760434627532959
    9. 'for' → logprob: -5.010434627532959
    10. 'import' → logprob: -6.510434627532959

Token 666: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07020106911659241
    2. '=' → logprob: -2.6952011585235596
    3. '=[' → logprob: -8.57020092010498
    4. '=[]' → logprob: -10.57020092010498
    5. '[' → logprob: -10.82020092010498
    6. '=set' → logprob: -11.32020092010498
    7. '[:]' → logprob: -12.94520092010498
    8. '_' → logprob: -13.07020092010498
    9. ' =[' → logprob: -13.07020092010498
    10. ' ' → logprob: -13.19520092010498

Token 667: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.600714161526412e-05
    2. 'set' → logprob: -10.125076293945312
    3. ' [' → logprob: -10.375076293945312
    4. '[]' → logprob: -12.375076293945312
    5. '{}' → logprob: -15.250076293945312
    6. ' set' → logprob: -16.375076293945312
    7. '{' → logprob: -16.875076293945312
    8. '[len' → logprob: -17.125076293945312
    9. '[int' → logprob: -17.875076293945312
    10. '[node' → logprob: -18.000076293945312

Token 668: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6931490898132324
    2. 'False' → logprob: -0.6931490898132324
    3. ' False' → logprob: -13.19314956665039
    4. ' ' → logprob: -17.56814956665039
    5. '(False' → logprob: -17.56814956665039
    6. '   ' → logprob: -18.19314956665039
    7. '
' → logprob: -18.44314956665039
    8. 'True' → logprob: -18.44314956665039
    9. '[' → logprob: -19.19314956665039
    10. '-' → logprob: -19.44314956665039

Token 669: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.2527550160884857
    2. ']' → logprob: -1.502755045890808
    3. ']*(' → logprob: -7.127755165100098
    4. ' ]' → logprob: -10.877755165100098
    5. ']+' → logprob: -13.252755165100098
    6. '*' → logprob: -14.127755165100098
    7. '(len' → logprob: -14.627755165100098
    8. '(' → logprob: -15.127755165100098
    9. ' ' → logprob: -15.627755165100098
    10. '   ' → logprob: -15.877755165100098

Token 670: 'sz' (ID: 13849)
  Prédit: 'sz'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sz' → logprob: -0.8452966809272766
    2. '(sz' → logprob: -1.2202966213226318
    3. 'len' → logprob: -2.220296621322632
    4. 'M' → logprob: -2.470296621322632
    5. '(M' → logprob: -3.095296621322632
    6. '(len' → logprob: -3.345296621322632
    7. '(' → logprob: -7.220296859741211
    8. '(N' → logprob: -8.095296859741211
    9. 'MOD' → logprob: -9.095296859741211
    10. 'N' → logprob: -9.220296859741211

Token 671: '
' (ID: 198)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.09237654507160187
    2. 'def' → logprob: -2.842376470565796
    3. 'for' → logprob: -3.842376470565796
    4. 'queue' → logprob: -5.717376708984375
    5. 'from' → logprob: -5.967376708984375
    6. 'deg' → logprob: -6.842376708984375
    7. 'odd' → logprob: -7.717376708984375
    8. 'q' → logprob: -8.217376708984375
    9. ' stack' → logprob: -8.342376708984375
    10. 'degree' → logprob: -8.842376708984375

Token 672: 'le' (ID: 282)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.24421590566635132
    2. 'def' → logprob: -1.869215965270996
    3. 'from' → logprob: -3.119215965270996
    4. 'stk' → logprob: -5.494215965270996
    5. 'odd' → logprob: -5.619215965270996
    6. 'deg' → logprob: -5.994215965270996
    7. 'q' → logprob: -5.994215965270996
    8. 'import' → logprob: -6.619215965270996
    9. 'for' → logprob: -6.744215965270996
    10. 'queue' → logprob: -6.994215965270996

Token 673: 'aves' (ID: 6808)
  Prédit: 'ft'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ft' → logprob: -0.15092690289020538
    2. 'n' → logprob: -2.0259268283843994
    3. 'af' → logprob: -5.5259270668029785
    4. 'f' → logprob: -6.6509270668029785
    5. 'ng' → logprob: -7.0259270668029785
    6. 'd' → logprob: -7.2759270668029785
    7. 't' → logprob: -7.4009270668029785
    8. 'vel' → logprob: -8.40092658996582
    9. 'ave' → logprob: -8.52592658996582
    10. 'fts' → logprob: -10.15092658996582

Token 674: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10034587979316711
    2. '=' → logprob: -2.3503458499908447
    3. '=[]' → logprob: -8.975345611572266
    4. '=[' → logprob: -12.225345611572266
    5. '=[]
' → logprob: -13.350345611572266
    6. '_stack' → logprob: -13.600345611572266
    7. ' ' → logprob: -13.600345611572266
    8. ',' → logprob: -13.975345611572266
    9. ' =[' → logprob: -14.600345611572266
    10. 'stack' → logprob: -15.350345611572266

Token 675: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.09931441396474838
    2. '[v' → logprob: -2.8493144512176514
    3. '[' → logprob: -3.8493144512176514
    4. '[i' → logprob: -4.349314212799072
    5. '[]
' → logprob: -7.974314212799072
    6. '[s' → logprob: -8.09931468963623
    7. '[t' → logprob: -8.22431468963623
    8. '[u' → logprob: -8.34931468963623
    9. '[int' → logprob: -8.47431468963623
    10. '[]

' → logprob: -9.47431468963623

Token 676: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01292266882956028
    2. 'from' → logprob: -4.387922763824463
    3. 'import' → logprob: -8.637922286987305
    4. 'stack' → logprob: -8.637922286987305
    5. 'def' → logprob: -10.762922286987305
    6. 'q' → logprob: -11.137922286987305
    7. 'queue' → logprob: -12.012922286987305
    8. 'while' → logprob: -12.137922286987305
    9. 'deg' → logprob: -12.762922286987305
    10. '   ' → logprob: -13.262922286987305

Token 677: ' v' (ID: 323)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07892845571041107
    2. 'v' → logprob: -2.5789284706115723
    3. ' i' → logprob: -11.078927993774414
    4. 'node' → logprob: -11.828927993774414
    5. 'u' → logprob: -12.078927993774414
    6. 'x' → logprob: -12.703927993774414
    7. ' v' → logprob: -12.828927993774414
    8. '_i' → logprob: -12.828927993774414
    9. '_' → logprob: -13.953927993774414
    10. '_v' → logprob: -14.703927993774414

Token 678: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.47416213154792786
    2. 'in' → logprob: -0.9741621017456055
    3. ',' → logprob: -9.849162101745605
    4. ' ' → logprob: -11.599162101745605
    5. ' ,' → logprob: -12.099162101745605
    6. '	in' → logprob: -12.224162101745605
    7. '_in' → logprob: -12.599162101745605
    8. '  ' → logprob: -12.849162101745605
    9. '   ' → logprob: -13.099162101745605
    10. 'import' → logprob: -13.099162101745605

Token 679: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.000721487682312727
    2. ' range' → logprob: -7.250721454620361
    3. 'ra' → logprob: -12.37572193145752
    4. 'graph' → logprob: -12.50072193145752
    5. 'r' → logprob: -13.62572193145752
    6. 'ran' → logprob: -14.62572193145752
    7. 'in' → logprob: -15.00072193145752
    8. 'rang' → logprob: -15.12572193145752
    9. ' ' → logprob: -15.25072193145752
    10. 'par' → logprob: -15.62572193145752

Token 680: '(sz' (ID: 80788)
  Prédit: '(sz'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sz' → logprob: -2.117345684382599e-05
    2. 'sz' → logprob: -11.125020980834961
    3. '(len' → logprob: -12.375020980834961
    4. '(' → logprob: -13.125020980834961
    5. ' sz' → logprob: -17.00002098083496
    6. 'in' → logprob: -17.25002098083496
    7. 'range' → logprob: -17.37502098083496
    8. '(range' → logprob: -17.87502098083496
    9. ' (' → logprob: -18.00002098083496
    10. '(size' → logprob: -18.62502098083496

Token 681: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0038053072057664394
    2. '):' → logprob: -5.628805160522461
    3. ')' → logprob: -10.003805160522461
    4. ':' → logprob: -10.003805160522461
    5. ':
' → logprob: -10.128805160522461
    6. ' ):
' → logprob: -10.253805160522461
    7. '):
' → logprob: -11.003805160522461
    8. 'if' → logprob: -11.378805160522461
    9. '   ' → logprob: -12.003805160522461
    10. '):

' → logprob: -13.503805160522461

Token 682: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3139723241329193
    2. '   ' → logprob: -1.5639723539352417
    3. 'if' → logprob: -2.813972234725952
    4. '```' → logprob: -9.188972473144531
    5. ' ' → logprob: -10.688972473144531
    6. '    
' → logprob: -11.188972473144531
    7. ' 
' → logprob: -11.563972473144531
    8. '    ' → logprob: -11.688972473144531
    9. '	if' → logprob: -11.688972473144531
    10. '       ' → logprob: -12.063972473144531

Token 683: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.005784923676401377
    2. '   ' → logprob: -5.25578498840332
    3. ' if' → logprob: -7.50578498840332
    4. '```' → logprob: -14.38078498840332
    5. ' ' → logprob: -14.75578498840332
    6. '	if' → logprob: -16.63078498840332
    7. '
' → logprob: -17.38078498840332
    8. '  ' → logprob: -17.50578498840332
    9. '    
' → logprob: -17.75578498840332
    10. '       ' → logprob: -18.00578498840332

Token 684: ' deg' (ID: 5597)
  Prédit: 'deg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deg' → logprob: -0.00013488641707226634
    2. ' deg' → logprob: -9.000134468078613
    3. 'marked' → logprob: -12.750134468078613
    4. '   ' → logprob: -12.875134468078613
    5. 'graph' → logprob: -12.875134468078613
    6. 'par' → logprob: -13.375134468078613
    7. '0' → logprob: -14.625134468078613
    8. 'degree' → logprob: -15.250134468078613
    9. ' ' → logprob: -15.375134468078613
    10. 'not' → logprob: -15.375134468078613

Token 685: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -2.1008713702030946e-06
    2. 'v' → logprob: -13.500001907348633
    3. ' [' → logprob: -15.000001907348633
    4. '[' → logprob: -16.000001907348633
    5. '(v' → logprob: -16.125001907348633
    6. '```' → logprob: -17.875001907348633
    7. '<v' → logprob: -18.375001907348633
    8. '[i' → logprob: -18.500001907348633
    9. '==' → logprob: -18.875001907348633
    10. ' v' → logprob: -19.250001907348633

Token 686: ']==' (ID: 34128)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.12713377177715302
    2. ' ==' → logprob: -2.127133846282959
    3. ')' → logprob: -10.0021333694458
    4. '>' → logprob: -10.2521333694458
    5. ']==' → logprob: -10.2521333694458
    6. '<=' → logprob: -10.6271333694458
    7. '[' → logprob: -11.3771333694458
    8. '<' → logprob: -11.5021333694458
    9. ')==' → logprob: -11.5021333694458
    10. ']' → logprob: -12.1271333694458

Token 687: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3782830137643032e-05
    2. ' ' → logprob: -11.25001335144043
    3. '0' → logprob: -14.87501335144043
    4. '2' → logprob: -16.37501335144043
    5. '=' → logprob: -16.37501335144043
    6. '```' → logprob: -16.62501335144043
    7. '(' → logprob: -17.62501335144043
    8. '   ' → logprob: -17.68751335144043
    9. '==' → logprob: -17.87501335144043
    10. '
' → logprob: -18.68751335144043

Token 688: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7444559335708618
    2. ':' → logprob: -1.3694559335708618
    3. '   ' → logprob: -1.3694559335708618
    4. '       ' → logprob: -4.494455814361572
    5. ' and' → logprob: -5.744455814361572
    6. 'le' → logprob: -6.369455814361572
    7. 'and' → logprob: -8.86945629119873
    8. '):
' → logprob: -9.11945629119873
    9. ':
' → logprob: -9.74445629119873
    10. ',' → logprob: -10.74445629119873

Token 689: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12644079327583313
    2. '       ' → logprob: -2.5014407634735107
    3. 'le' → logprob: -3.3764407634735107
    4. ' leaves' → logprob: -6.12644100189209
    5. ' le' → logprob: -7.87644100189209
    6. ',' → logprob: -10.62644100189209
    7. '(le' → logprob: -11.00144100189209
    8. '   ' → logprob: -11.62644100189209
    9. '	' → logprob: -12.50144100189209
    10. '           ' → logprob: -12.50144100189209

Token 690: ' leaves' (ID: 15657)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.00017267030489165336
    2. '   ' → logprob: -9.37517261505127
    3. 'import' → logprob: -9.50017261505127
    4. 'from' → logprob: -11.50017261505127
    5. ' leaves' → logprob: -13.37517261505127
    6. 'leaf' → logprob: -14.25017261505127
    7. 'he' → logprob: -15.37517261505127
    8. 'stack' → logprob: -16.125173568725586
    9. 'l' → logprob: -16.250173568725586
    10. 'if' → logprob: -16.500173568725586

Token 691: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.000340111117111519
    2. '.' → logprob: -8.000340461730957
    3. '.app' → logprob: -12.750340461730957
    4. ' .' → logprob: -14.500340461730957
    5. '.ap' → logprob: -14.500340461730957
    6. 'append' → logprob: -14.500340461730957
    7. '.push' → logprob: -16.50033950805664
    8. '.extend' → logprob: -17.25033950805664
    9. ' append' → logprob: -17.50033950805664
    10. '.add' → logprob: -17.75033950805664

Token 692: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -4.572941179503687e-05
    2. '(' → logprob: -10.000045776367188
    3. 'v' → logprob: -15.125045776367188
    4. '((' → logprob: -17.875045776367188
    5. '(
' → logprob: -18.250045776367188
    6. ' (' → logprob: -18.500045776367188
    7. ' v' → logprob: -21.000045776367188
    8. '	v' → logprob: -21.750045776367188
    9. '()' → logprob: -22.000045776367188
    10. ',v' → logprob: -22.125045776367188

Token 693: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.1008713702030946e-06
    2. ' )' → logprob: -13.500001907348633
    3. ')
' → logprob: -14.875001907348633
    4. '))' → logprob: -16.125001907348633
    5. '())' → logprob: -16.750001907348633
    6. '`)' → logprob: -17.250001907348633
    7. '   ' → logprob: -17.500001907348633
    8. '),' → logprob: -17.875001907348633
    9. ')`' → logprob: -17.875001907348633
    10. '])' → logprob: -18.375001907348633

Token 694: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.006014356389641762
    2. 'for' → logprob: -5.881014347076416
    3. 'stack' → logprob: -6.506014347076416
    4. 'from' → logprob: -7.506014347076416
    5. 'def' → logprob: -7.631014347076416
    6. 'i' → logprob: -9.131014823913574
    7. 'q' → logprob: -9.131014823913574
    8. 'idx' → logprob: -9.381014823913574
    9. 'v' → logprob: -9.506014823913574
    10. '
' → logprob: -9.631014823913574

Token 695: ' leaves' (ID: 15657)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.023367535322904587
    2. ' leaves' → logprob: -3.7733676433563232
    3. 'len' → logprob: -9.023367881774902
    4. ' len' → logprob: -14.398367881774902
    5. ' le' → logprob: -14.523367881774902
    6. '(le' → logprob: -14.898367881774902
    7. 'leaf' → logprob: -17.148366928100586
    8. 'l' → logprob: -18.398366928100586
    9. ' ' → logprob: -18.648366928100586
    10. ' ' → logprob: -18.648366928100586

Token 696: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2519608736038208
    2. ':
' → logprob: -1.5019608736038208
    3. '.pop' → logprob: -11.376960754394531
    4. ' and' → logprob: -11.501960754394531
    5. ':
' → logprob: -12.751960754394531
    6. '):
' → logprob: -13.251960754394531
    7. ':

' → logprob: -13.501960754394531
    8. '```' → logprob: -13.876960754394531
    9. 'and' → logprob: -14.126960754394531
    10. '):' → logprob: -14.376960754394531

Token 697: '   ' (ID: 271)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.20220452547073364
    2. ' v' → logprob: -1.7022044658660889
    3. '   ' → logprob: -7.202204704284668
    4. '	v' → logprob: -10.327204704284668
    5. '```' → logprob: -11.452204704284668
    6. ' leaf' → logprob: -14.327204704284668
    7. '
' → logprob: -14.452204704284668
    8. 'leaf' → logprob: -15.077204704284668
    9. '   ' → logprob: -15.452204704284668
    10. 'u' → logprob: -15.577204704284668

Token 698: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -3.173704271830502e-06
    2. ' v' → logprob: -13.25000286102295
    3. '   ' → logprob: -13.50000286102295
    4. '```' → logprob: -18.375003814697266
    5. '	v' → logprob: -19.000003814697266
    6. 'leaf' → logprob: -19.625003814697266
    7. 'u' → logprob: -20.250003814697266
    8. 'from' → logprob: -21.000003814697266
    9. '    
' → logprob: -21.625003814697266
    10. 'import' → logprob: -21.875003814697266

Token 699: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2523174583911896
    2. '=' → logprob: -1.5023174285888672
    3. ',' → logprob: -8.252317428588867
    4. '_' → logprob: -9.127317428588867
    5. '_=' → logprob: -12.252317428588867
    6. ' =
' → logprob: -12.627317428588867
    7. '   ' → logprob: -13.252317428588867
    8. '=v' → logprob: -13.252317428588867
    9. ')' → logprob: -13.377317428588867
    10. 'v' → logprob: -13.377317428588867

Token 700: ' leaves' (ID: 15657)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.023247458040714264
    2. ' leaves' → logprob: -3.773247480392456
    3. 'leaf' → logprob: -14.648247718811035
    4. '   ' → logprob: -14.773247718811035
    5. 'Leaves' → logprob: -14.898247718811035
    6. ' ' → logprob: -15.648247718811035
    7. ' ' → logprob: -16.27324676513672
    8. '(le' → logprob: -16.64824676513672
    9. '_le' → logprob: -16.77324676513672
    10. 'l' → logprob: -16.77324676513672

Token 701: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.00016241880075540394
    2. 'pop' → logprob: -9.000162124633789
    3. '.' → logprob: -11.125162124633789
    4. ' =' → logprob: -11.500162124633789
    5. '.le' → logprob: -11.750162124633789
    6. '=' → logprob: -12.750162124633789
    7. ' .' → logprob: -13.250162124633789
    8. '   ' → logprob: -14.625162124633789
    9. '_pop' → logprob: -15.500162124633789
    10. '.p' → logprob: -15.500162124633789

Token 702: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00026264708139933646
    2. '()
' → logprob: -8.250262260437012
    3. '(' → logprob: -13.625262260437012
    4. ' ()' → logprob: -16.250263214111328
    5. '()
' → logprob: -18.000263214111328
    6. '()`' → logprob: -18.000263214111328
    7. ')' → logprob: -18.750263214111328
    8. '()

' → logprob: -19.500263214111328
    9. '()\' → logprob: -19.625263214111328
    10. '0' → logprob: -19.875263214111328

Token 703: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4630340039730072
    2. 'if' → logprob: -1.5880340337753296
    3. ' if' → logprob: -1.8380340337753296
    4. ' for' → logprob: -5.588034152984619
    5. 'for' → logprob: -5.713034152984619
    6. '```' → logprob: -9.213033676147461
    7. '	if' → logprob: -11.463033676147461
    8. ',' → logprob: -12.213033676147461
    9. ' ' → logprob: -12.838033676147461
    10. '    
' → logprob: -13.213033676147461

Token 704: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.032145921140909195
    2. 'marked' → logprob: -3.6571459770202637
    3. '   ' → logprob: -5.282145977020264
    4. 'for' → logprob: -7.657145977020264
    5. 'while' → logprob: -8.407145500183105
    6. ' if' → logprob: -10.657145500183105
    7. 'par' → logprob: -11.282145500183105
    8. 'mark' → logprob: -12.782145500183105
    9. '    
' → logprob: -12.782145500183105
    10. '#' → logprob: -13.157145500183105

Token 705: ' deg' (ID: 5597)
  Prédit: 'marked'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'marked' → logprob: -0.0018288150895386934
    2. 'not' → logprob: -6.751828670501709
    3. ' marked' → logprob: -7.626828670501709
    4. 'deg' → logprob: -9.376829147338867
    5. 'par' → logprob: -9.501829147338867
    6. 'mark' → logprob: -12.251829147338867
    7. ' not' → logprob: -12.376829147338867
    8. 'degree' → logprob: -14.126829147338867
    9. '   ' → logprob: -14.876829147338867
    10. 'seen' → logprob: -15.001829147338867

Token 706: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -5.5577775128767826e-06
    2. '[' → logprob: -12.250005722045898
    3. 'v' → logprob: -14.375005722045898
    4. ' [' → logprob: -16.2500057220459
    5. '```' → logprob: -18.8750057220459
    6. ' v' → logprob: -19.0000057220459
    7. '	v' → logprob: -19.1250057220459
    8. '   ' → logprob: -19.1250057220459
    9. '[
' → logprob: -19.2500057220459
    10. '(v' → logprob: -19.3750057220459

Token 707: ']==' (ID: 34128)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.01444037165492773
    2. ' ==' → logprob: -4.264440536499023
    3. ']==' → logprob: -8.389440536499023
    4. '!=' → logprob: -10.389440536499023
    5. ')==' → logprob: -11.764440536499023
    6. ']' → logprob: -13.014440536499023
    7. '```' → logprob: -13.014440536499023
    8. '<=' → logprob: -13.389440536499023
    9. ')' → logprob: -13.639440536499023
    10. '()==' → logprob: -13.764440536499023

Token 708: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.6087021473795176e-05
    2. '1' → logprob: -10.000045776367188
    3. ' ' → logprob: -14.500045776367188
    4. '   ' → logprob: -15.875045776367188
    5. '```' → logprob: -17.250045776367188
    6. '
' → logprob: -18.125045776367188
    7. '=' → logprob: -18.625045776367188
    8. '۰' → logprob: -18.875045776367188
    9. '    ' → logprob: -20.062545776367188
    10. '  ' → logprob: -20.125045776367188

Token 709: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11211185902357101
    2. ':
' → logprob: -2.487111806869507
    3. '   ' → logprob: -4.487112045288086
    4. '       ' → logprob: -4.612112045288086
    5. 'continue' → logprob: -7.112112045288086
    6. ' continue' → logprob: -7.487112045288086
    7. '	continue' → logprob: -8.362112045288086
    8. ':return' → logprob: -9.987112045288086
    9. ' or' → logprob: -10.862112045288086
    10. '    ' → logprob: -11.112112045288086

Token 710: '       ' (ID: 309)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.1259852945804596
    2. '   ' → logprob: -2.6259853839874268
    3. 'continue' → logprob: -3.3759853839874268
    4. '	continue' → logprob: -4.500985145568848
    5. '       ' → logprob: -7.250985145568848
    6. '   ' → logprob: -13.000985145568848
    7. ' continues' → logprob: -13.125985145568848
    8. '_continue' → logprob: -13.375985145568848
    9. '
' → logprob: -13.750985145568848
    10. ' ' → logprob: -13.750985145568848

Token 711: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.014232140965759754
    2. ' continue' → logprob: -4.264232158660889
    3. '   ' → logprob: -9.76423168182373
    4. '	continue' → logprob: -11.51423168182373
    5. 'contin' → logprob: -14.26423168182373
    6. 'continu' → logprob: -15.38923168182373
    7. 'for' → logprob: -16.264232635498047
    8. ' ' → logprob: -16.389232635498047
    9. '_continue' → logprob: -17.639232635498047
    10. '       ' → logprob: -17.764232635498047

Token 712: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16462530195713043
    2. '   ' → logprob: -2.289625406265259
    3. 'p' → logprob: -3.664625406265259
    4. 'if' → logprob: -4.41462516784668
    5. ' for' → logprob: -4.53962516784668
    6. 'u' → logprob: -6.78962516784668
    7. 'par' → logprob: -8.16462516784668
    8. ' p' → logprob: -8.28962516784668
    9. ' if' → logprob: -8.28962516784668
    10. 'while' → logprob: -10.03962516784668

Token 713: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.016313767060637474
    2. 'if' → logprob: -4.516313552856445
    3. 'u' → logprob: -6.016313552856445
    4. '   ' → logprob: -6.516313552856445
    5. ' for' → logprob: -7.141313552856445
    6. 'p' → logprob: -8.141313552856445
    7. 'v' → logprob: -8.891313552856445
    8. 'graph' → logprob: -10.016313552856445
    9. ' if' → logprob: -11.266313552856445
    10. '#' → logprob: -11.641313552856445

Token 714: ' if' (ID: 538)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.3299711048603058
    2. 'for' → logprob: -1.3299710750579834
    3. 'w' → logprob: -5.3299713134765625
    4. 'p' → logprob: -5.7049713134765625
    5. 'neighbor' → logprob: -6.7049713134765625
    6. 'to' → logprob: -6.8299713134765625
    7. 'marked' → logprob: -6.9549713134765625
    8. 'deg' → logprob: -7.0799713134765625
    9. '(u' → logprob: -7.0799713134765625
    10. 'while' → logprob: -7.3299713134765625

Token 715: ' marked' (ID: 20779)
  Prédit: 'marked'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'marked' → logprob: -0.4498874247074127
    2. 'par' → logprob: -1.4498873949050903
    3. 'not' → logprob: -2.57488751411438
    4. 'deg' → logprob: -3.44988751411438
    5. 'len' → logprob: -4.574887275695801
    6. 'graph' → logprob: -4.824887275695801
    7. 'v' → logprob: -7.324887275695801
    8. 'ans' → logprob: -8.1998872756958
    9. ' marked' → logprob: -9.0748872756958
    10. 'degree' → logprob: -9.3248872756958

Token 716: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -1.6240566083070007e-06
    2. '[' → logprob: -13.500001907348633
    3. 'v' → logprob: -15.500001907348633
    4. '[u' → logprob: -17.750001907348633
    5. '```' → logprob: -17.875001907348633
    6. '(v' → logprob: -19.250001907348633
    7. '[V' → logprob: -19.875001907348633
    8. '[
' → logprob: -20.125001907348633
    9. ' [' → logprob: -20.125001907348633
    10. '	v' → logprob: -20.375001907348633

Token 717: ']:
' (ID: 22152)
  Prédit: ']=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']==' → logprob: -0.4676026999950409
    2. ']' → logprob: -1.3426027297973633
    3. '==' → logprob: -2.3426027297973633
    4. ' ==' → logprob: -4.717602729797363
    5. ']:' → logprob: -5.592602729797363
    6. ':' → logprob: -7.217602729797363
    7. '[' → logprob: -7.342602729797363
    8. '[v' → logprob: -7.717602729797363
    9. ' ]' → logprob: -7.842602729797363
    10. ')==' → logprob: -7.967602729797363

Token 718: '       ' (ID: 309)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06675358861684799
    2. '=' → logprob: -3.441753625869751
    3. '   ' → logprob: -3.941753625869751
    4. '[v' → logprob: -5.566753387451172
    5. '[' → logprob: -5.816753387451172
    6. '    ' → logprob: -6.316753387451172
    7. ' ' → logprob: -6.941753387451172
    8. ':' → logprob: -6.941753387451172
    9. '\t' → logprob: -7.441753387451172
    10. ' continue' → logprob: -7.691753387451172

Token 719: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.36569204926490784
    2. ' continue' → logprob: -1.7406920194625854
    3. '   ' → logprob: -2.990692138671875
    4. 'marked' → logprob: -3.365692138671875
    5. 'deg' → logprob: -3.365692138671875
    6. 'v' → logprob: -5.490692138671875
    7. ' marked' → logprob: -5.865692138671875
    8. ' deg' → logprob: -6.240692138671875
    9. 'for' → logprob: -6.365692138671875
    10. ' for' → logprob: -8.615692138671875

Token 720: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02188858948647976
    2. 'u' → logprob: -4.396888732910156
    3. 'v' → logprob: -5.521888732910156
    4. 'for' → logprob: -5.896888732910156
    5. 'p' → logprob: -7.396888732910156
    6. 'marked' → logprob: -7.896888732910156
    7. ' for' → logprob: -8.021888732910156
    8. '    
' → logprob: -8.146888732910156
    9. 'deg' → logprob: -8.271888732910156
    10. ' u' → logprob: -8.396888732910156

Token 721: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7332963943481445
    2. 'u' → logprob: -1.1082963943481445
    3. '   ' → logprob: -2.7332963943481445
    4. 'v' → logprob: -2.8582963943481445
    5. 'marked' → logprob: -4.1082963943481445
    6. 'p' → logprob: -4.1082963943481445
    7. 'deg' → logprob: -4.3582963943481445
    8. ' for' → logprob: -4.8582963943481445
    9. 'neighbor' → logprob: -5.4832963943481445
    10. 'w' → logprob: -6.1082963943481445

Token 722: ' marked' (ID: 20779)
  Prédit: 'marked'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'marked' (adapté à ' marked') → logprob: -0.10544060915708542
    2. 'for' → logprob: -2.605440616607666
    3. 'deg' → logprob: -4.480440616607666
    4. 'u' → logprob: -5.105440616607666
    5. 'if' → logprob: -5.605440616607666
    6. 'v' → logprob: -5.980440616607666
    7. '   ' → logprob: -7.480440616607666
    8. '#' → logprob: -7.480440616607666
    9. 'mark' → logprob: -8.230440139770508
    10. 'par' → logprob: -8.355440139770508

Token 723: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -1.981667537620524e-06
    2. '[' → logprob: -14.000001907348633
    3. 'v' → logprob: -14.000001907348633
    4. ' [' → logprob: -16.250001907348633
    5. '```' → logprob: -16.250001907348633
    6. '[V' → logprob: -17.500001907348633
    7. '=v' → logprob: -18.500001907348633
    8. '	v' → logprob: -18.500001907348633
    9. '[val' → logprob: -18.750001907348633
    10. '[u' → logprob: -19.125001907348633

Token 724: ']=' (ID: 9539)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.11724037677049637
    2. '=' → logprob: -2.6172404289245605
    3. ']=' → logprob: -3.3672404289245605
    4. '[v' → logprob: -6.1172404289245605
    5. ' =' → logprob: -6.9922404289245605
    6. ' ]' → logprob: -11.992239952087402
    7. '[' → logprob: -12.742239952087402
    8. '=v' → logprob: -12.992239952087402
    9. ']+=' → logprob: -13.117239952087402
    10. 'v' → logprob: -14.117239952087402

Token 725: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2200749754119897e-06
    2. 'True' → logprob: -13.250001907348633
    3. ' ' → logprob: -15.375001907348633
    4. 'v' → logprob: -15.500001907348633
    5. '0' → logprob: -17.500001907348633
    6. '   ' → logprob: -18.750001907348633
    7. '2' → logprob: -19.000001907348633
    8. '(' → logprob: -19.750001907348633
    9. '
' → logprob: -20.000001907348633
    10. '[' → logprob: -20.500001907348633

Token 726: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03672293201088905
    2. 'for' → logprob: -3.5367228984832764
    3. ' for' → logprob: -5.2867231369018555
    4. 'v' → logprob: -6.9117231369018555
    5. 'u' → logprob: -8.161723136901855
    6. 'par' → logprob: -9.036723136901855
    7. 'if' → logprob: -9.286723136901855
    8. 'p' → logprob: -9.411723136901855
    9. '    
' → logprob: -9.411723136901855
    10. 'ans' → logprob: -9.786723136901855

Token 727: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7137072682380676
    2. 'for' → logprob: -0.9637072682380676
    3. '   ' → logprob: -2.088707208633423
    4. 'v' → logprob: -5.838707447052002
    5. ' v' → logprob: -7.463707447052002
    6. 'p' → logprob: -8.088706970214844
    7. 'u' → logprob: -8.338706970214844
    8. 'd' → logprob: -8.963706970214844
    9. ' p' → logprob: -8.963706970214844
    10. '
' → logprob: -9.213706970214844

Token 728: ' deg' (ID: 5597)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0010877089807763696
    2. 'u' → logprob: -7.751087665557861
    3. 'found' → logprob: -8.25108814239502
    4. 'par' → logprob: -8.75108814239502
    5. 'p' → logprob: -9.50108814239502
    6. 'if' → logprob: -9.87608814239502
    7. 'while' → logprob: -10.25108814239502
    8. 'deg' (adapté à ' deg') → logprob: -10.50108814239502
    9. 'v' → logprob: -11.25108814239502
    10. '   ' → logprob: -11.87608814239502

Token 729: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.00039885283331386745
    2. 'v' → logprob: -8.000398635864258
    3. '[' → logprob: -9.875398635864258
    4. '[u' → logprob: -12.125398635864258
    5. '```' → logprob: -12.750398635864258
    6. '[val' → logprob: -14.375398635864258
    7. '=' → logprob: -14.750398635864258
    8. '(v' → logprob: -14.875398635864258
    9. '=v' → logprob: -15.000398635864258
    10. '\[' → logprob: -15.375398635864258

Token 730: ']=' (ID: 9539)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.0009479032014496624
    2. ']' → logprob: -7.500947952270508
    3. '[' → logprob: -8.375947952270508
    4. ']-' → logprob: -9.500947952270508
    5. 'v' → logprob: -9.750947952270508
    6. '-' → logprob: -12.125947952270508
    7. '-=' → logprob: -12.125947952270508
    8. '][' → logprob: -12.250947952270508
    9. '```' → logprob: -12.375947952270508
    10. '[u' → logprob: -12.875947952270508

Token 731: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.375
    3. '   ' → logprob: -19.0
    4. 'deg' → logprob: -20.375
    5. '۰' → logprob: -20.875
    6. '=' → logprob: -22.0
    7. '０' → logprob: -22.125
    8. '000' → logprob: -22.75
    9. '1' → logprob: -23.0
    10. '```' → logprob: -23.125

Token 732: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36411842703819275
    2. ' for' → logprob: -1.7391184568405151
    3. 'for' → logprob: -2.2391183376312256
    4. '
' → logprob: -4.739118576049805
    5. 'u' → logprob: -5.114118576049805
    6. 'v' → logprob: -5.864118576049805
    7. ',' → logprob: -6.364118576049805
    8. ' u' → logprob: -6.364118576049805
    9. ' v' → logprob: -7.864118576049805
    10. '	for' → logprob: -8.239118576049805

Token 733: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10347027331590652
    2. '   ' → logprob: -2.3534703254699707
    3. 'u' → logprob: -6.353470325469971
    4. 'v' → logprob: -7.853470325469971
    5. ' for' → logprob: -7.978470325469971
    6. 'p' → logprob: -8.103469848632812
    7. 'par' → logprob: -9.728469848632812
    8. 'while' → logprob: -9.853469848632812
    9. 'neighbor' → logprob: -9.853469848632812
    10. 'e' → logprob: -9.978469848632812

Token 734: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0011280750622972846
    2. 'u' → logprob: -8.126128196716309
    3. 'if' → logprob: -8.626128196716309
    4. 'found' → logprob: -8.751128196716309
    5. 'par' → logprob: -8.876128196716309
    6. '#' (adapté à ' #') → logprob: -9.126128196716309
    7. 'while' → logprob: -9.251128196716309
    8. 'w' → logprob: -10.626128196716309
    9. 'p' → logprob: -10.626128196716309
    10. 'ans' → logprob: -10.751128196716309

Token 735: ' Go' (ID: 7857)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0004925066023133695
    2. 'u' → logprob: -7.875492572784424
    3. 'while' → logprob: -9.875492095947266
    4. 'if' → logprob: -11.250492095947266
    5. 'p' → logprob: -11.500492095947266
    6. 'neighbor' → logprob: -11.500492095947266
    7. 'found' → logprob: -12.000492095947266
    8. 'neighbors' → logprob: -12.500492095947266
    9. 'edge' → logprob: -12.875492095947266
    10. 'e' → logprob: -12.875492095947266

Token 736: ' through' (ID: 1819)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3752956688404083
    2. '   ' → logprob: -1.250295639038086
    3. ' for' → logprob: -4.250295639038086
    4. ' through' → logprob: -4.750295639038086
    5. 'through' → logprob: -6.125295639038086
    6. 'r' → logprob: -7.625295639038086
    7. 'to' → logprob: -8.125295639038086
    8. '       ' → logprob: -8.375295639038086
    9. 'raph' → logprob: -9.625295639038086
    10. '	for' → logprob: -9.875295639038086

Token 737: ' connections' (ID: 21069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.17793907225131989
    2. 'graph' → logprob: -2.3029391765594482
    3. ' for' → logprob: -2.9279391765594482
    4. ' graph' → logprob: -4.677938938140869
    5. '   ' → logprob: -8.677939414978027
    6. 'neighbors' → logprob: -10.927939414978027
    7. 'range' → logprob: -11.552939414978027
    8. ' neighbors' → logprob: -11.677939414978027
    9. '	graph' → logprob: -11.927939414978027
    10. 'adj' → logprob: -12.177939414978027

Token 738: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01383342407643795
    2. ' for' → logprob: -4.763833522796631
    3. 'for' → logprob: -5.263833522796631
    4. '	for' → logprob: -10.513833045959473
    5. '```' → logprob: -13.138833045959473
    6. '
' → logprob: -15.638833045959473
    7. '       ' → logprob: -15.888833045959473
    8. '   ' → logprob: -15.888833045959473
    9. '    
' → logprob: -16.13883399963379
    10. ',' → logprob: -16.51383399963379

Token 739: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.044829111546278
    2. ' for' → logprob: -3.1698291301727295
    3. 'for' → logprob: -6.41982889175415
    4. '	for' → logprob: -8.669829368591309
    5. '```' → logprob: -10.794829368591309
    6. '       ' → logprob: -13.044829368591309
    7. '   ' → logprob: -13.544829368591309
    8. '[' → logprob: -14.169829368591309
    9. ',' → logprob: -14.419829368591309
    10. ' ' → logprob: -14.544829368591309

Token 740: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -4.961759259458631e-06
    2. '   ' → logprob: -13.250004768371582
    3. ' for' → logprob: -13.375004768371582
    4. 'u' → logprob: -13.500004768371582
    5. '    
' → logprob: -16.5000057220459
    6. '	for' → logprob: -17.3750057220459
    7. 'v' → logprob: -18.7500057220459
    8. 'while' → logprob: -18.8750057220459
    9. 'neighbor' → logprob: -18.8750057220459
    10. 'neighbors' → logprob: -19.3750057220459

Token 741: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0044810352846980095
    2. '(u' → logprob: -5.754480838775635
    3. 'to' → logprob: -6.754480838775635
    4. ' u' → logprob: -9.504481315612793
    5. 'w' → logprob: -10.254481315612793
    6. 'nv' → logprob: -11.754481315612793
    7. '   ' → logprob: -12.379481315612793
    8. '[u' → logprob: -12.629481315612793
    9. 'nx' → logprob: -13.129481315612793
    10. 'uu' → logprob: -13.754481315612793

Token 742: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.976922744186595e-05
    2. ' ,' → logprob: -10.875040054321289
    3. ',v' → logprob: -12.250040054321289
    4. ',n' → logprob: -13.000040054321289
    5. ',u' → logprob: -13.000040054321289
    6. ',user' → logprob: -13.000040054321289
    7. ' in' → logprob: -13.625040054321289
    8. ',s' → logprob: -14.000040054321289
    9. ',d' → logprob: -14.125040054321289
    10. ',w' → logprob: -14.375040054321289

Token 743: ' eid' (ID: 131397)
  Prédit: 'eid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eid' → logprob: -0.07900489866733551
    2. ' eid' → logprob: -2.579005002975464
    3. 'edge' → logprob: -9.954005241394043
    4. 'e' → logprob: -10.704005241394043
    5. ' ' → logprob: -11.704005241394043
    6. 'id' → logprob: -12.079005241394043
    7. 'ed' → logprob: -12.204005241394043
    8. '_' → logprob: -12.204005241394043
    9. ' edge' → logprob: -12.454005241394043
    10. '   ' → logprob: -12.829005241394043

Token 744: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08895756304264069
    2. 'in' → logprob: -2.4639575481414795
    3. '	in' → logprob: -11.588957786560059
    4. '   ' → logprob: -12.338957786560059
    5. ',' → logprob: -13.463957786560059
    6. '    ' → logprob: -14.213957786560059
    7. ' ' → logprob: -14.713957786560059
    8. 's' → logprob: -14.713957786560059
    9. '_in' → logprob: -15.213957786560059
    10. '  ' → logprob: -15.463957786560059

Token 745: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.0019293478690087795
    2. ' graph' → logprob: -6.25192928314209
    3. '	graph' → logprob: -14.75192928314209
    4. '(graph' → logprob: -15.12692928314209
    5. '   ' → logprob: -17.126930236816406
    6. ' ' → logprob: -17.501930236816406
    7. '
' → logprob: -18.876930236816406
    8. '  ' → logprob: -19.001930236816406
    9. '```' → logprob: -19.001930236816406
    10. 'graphs' → logprob: -19.751930236816406

Token 746: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -1.7432603272027336e-06
    2. '[u' → logprob: -14.000001907348633
    3. 'v' → logprob: -14.250001907348633
    4. '[' → logprob: -16.500001907348633
    5. '   ' → logprob: -16.625001907348633
    6. ' [' → logprob: -18.125001907348633
    7. ',v' → logprob: -18.250001907348633
    8. '(v' → logprob: -18.250001907348633
    9. '	v' → logprob: -18.625001907348633
    10. '```' → logprob: -19.500001907348633

Token 747: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.2384876310825348
    2. ']:
' → logprob: -1.7384876012802124
    3. '):' → logprob: -3.863487720489502
    4. '):
' → logprob: -4.863487720489502
    5. ':' → logprob: -4.988487720489502
    6. '   ' → logprob: -7.988487720489502
    7. ']:
' → logprob: -8.613487243652344
    8. ']' → logprob: -8.988487243652344
    9. ']:

' → logprob: -9.988487243652344
    10. '"]:' → logprob: -11.113487243652344

Token 748: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07081463187932968
    2. 'if' → logprob: -3.195814609527588
    3. '   ' → logprob: -4.195814609527588
    4. ' if' → logprob: -4.820814609527588
    5. 'deg' → logprob: -5.570814609527588
    6. '```' → logprob: -7.945814609527588
    7. ' deg' → logprob: -9.070815086364746
    8. '[' → logprob: -11.695815086364746
    9. '``' → logprob: -11.945815086364746
    10. '	if' → logprob: -12.195815086364746

Token 749: ' if' (ID: 538)
  Prédit: 'deg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deg' → logprob: -0.5764421224594116
    2. 'if' (adapté à ' if') → logprob: -0.8264421224594116
    3. 'ans' → logprob: -7.826442241668701
    4. '   ' → logprob: -9.826441764831543
    5. 'degree' → logprob: -11.076441764831543
    6. 'marked' → logprob: -11.201441764831543
    7. '       ' → logprob: -12.201441764831543
    8. ' if' → logprob: -12.576441764831543
    9. 'print' → logprob: -12.576441764831543
    10. ' deg' → logprob: -13.201441764831543

Token 750: ' marked' (ID: 20779)
  Prédit: 'deg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deg' → logprob: -0.745269775390625
    2. 'marked' → logprob: -0.870269775390625
    3. 'not' → logprob: -2.245269775390625
    4. ' deg' → logprob: -8.495269775390625
    5. ' not' → logprob: -8.745269775390625
    6. ' marked' → logprob: -9.245269775390625
    7. 'degree' → logprob: -9.370269775390625
    8. 'mark' → logprob: -10.620269775390625
    9. '(not' → logprob: -11.120269775390625
    10. 'degrees' → logprob: -11.807769775390625

Token 751: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -1.6240566083070007e-06
    2. 'u' → logprob: -13.875001907348633
    3. '[v' → logprob: -14.750001907348633
    4. '[' → logprob: -15.500001907348633
    5. '(u' → logprob: -16.750001907348633
    6. '[
' → logprob: -17.625001907348633
    7. '```' → logprob: -17.875001907348633
    8. '<u' → logprob: -18.750001907348633
    9. '[i' → logprob: -19.000001907348633
    10. '   ' → logprob: -19.125001907348633

Token 752: ']:
' (ID: 22152)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.09981891512870789
    2. ':' → logprob: -2.8498189449310303
    3. ':
' → logprob: -4.349818706512451
    4. ' or' → logprob: -4.474818706512451
    5. ']==' → logprob: -4.974818706512451
    6. ' ==' → logprob: -5.349818706512451
    7. '):' → logprob: -8.22481918334961
    8. '):
' → logprob: -8.84981918334961
    9. ')==' → logprob: -9.09981918334961
    10. ')' → logprob: -9.09981918334961

Token 753: '           ' (ID: 352)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.6438109278678894
    2. '           ' → logprob: -0.7688109278678894
    3. 'continue' → logprob: -4.643810749053955
    4. '       ' → logprob: -7.518810749053955
    5. '	continue' → logprob: -7.518810749053955
    6. ':
' → logprob: -9.268811225891113
    7. ':' → logprob: -9.268811225891113
    8. '==' → logprob: -9.768811225891113
    9. ' continues' → logprob: -10.143811225891113
    10. '_continue' → logprob: -10.768811225891113

Token 754: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.3165236711502075
    2. 'continue' (adapté à ' continue') → logprob: -1.3165236711502075
    3. '       ' → logprob: -6.316523551940918
    4. 'deg' → logprob: -7.316523551940918
    5. '           ' → logprob: -7.816523551940918
    6. ' deg' → logprob: -8.691523551940918
    7. '	continue' → logprob: -9.316523551940918
    8. '```' → logprob: -9.816523551940918
    9. '   ' → logprob: -10.566523551940918
    10. ' marked' → logprob: -12.316523551940918

Token 755: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5983679294586182
    2. 'deg' → logprob: -1.0983679294586182
    3. '           ' → logprob: -2.723367929458618
    4. '   ' → logprob: -3.723367929458618
    5. ' deg' → logprob: -4.473367691040039
    6. 'marked' → logprob: -4.848367691040039
    7. ' marked' → logprob: -5.598367691040039
    8. 'ans' → logprob: -6.598367691040039
    9. '
' → logprob: -7.223367691040039
    10. 'continue' → logprob: -8.473367691040039

Token 756: '       ' (ID: 309)
  Prédit: 'deg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deg' → logprob: -0.45898544788360596
    2. '       ' → logprob: -1.458985447883606
    3. '   ' → logprob: -2.5839853286743164
    4. 'marked' → logprob: -3.9589853286743164
    5. '           ' → logprob: -4.083985328674316
    6. ' deg' → logprob: -4.083985328674316
    7. ' marked' → logprob: -5.083985328674316
    8. 'ans' → logprob: -8.208985328674316
    9. 'degree' → logprob: -8.458985328674316
    10. '```' → logprob: -8.833985328674316

Token 757: ' #' (ID: 1069)
  Prédit: 'deg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deg' → logprob: -0.04968767985701561
    2. 'ans' → logprob: -3.799687623977661
    3. 'par' → logprob: -4.04968786239624
    4. 'marked' → logprob: -4.92468786239624
    5. 'if' → logprob: -6.92468786239624
    6. 'print' → logprob: -8.549687385559082
    7. 'degree' → logprob: -9.799687385559082
    8. '   ' → logprob: -10.299687385559082
    9. '#' (adapté à ' #') → logprob: -10.424687385559082
    10. 'for' → logprob: -10.674687385559082

Token 758: ' try' (ID: 2075)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.514254093170166
    2. 'deg' → logprob: -1.264254093170166
    3. 'par' → logprob: -2.639254093170166
    4. 'marked' → logprob: -3.389254093170166
    5. 'if' → logprob: -4.389254093170166
    6. 'print' → logprob: -6.889254093170166
    7. 'for' → logprob: -8.889253616333008
    8. '#' → logprob: -8.889253616333008
    9. 'degree' → logprob: -9.014253616333008
    10. 'mark' → logprob: -9.139253616333008

Token 759: ' to' (ID: 316)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05670608952641487
    2. ':' → logprob: -3.806706190109253
    3. '   ' → logprob: -4.306705951690674
    4. ':
' → logprob: -4.431705951690674
    5. '       ' → logprob: -6.056705951690674
    6. 'marked' → logprob: -6.556705951690674
    7. 'ed' → logprob: -6.931705951690674
    8. 'to' → logprob: -7.306705951690674
    9. 'par' → logprob: -8.306706428527832
    10. ' to' → logprob: -8.306706428527832

Token 760: ' push' (ID: 9349)
  Prédit: 'deg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deg' → logprob: -0.5821126699447632
    2. 'marked' → logprob: -1.3321126699447632
    3. 'mark' → logprob: -1.8321126699447632
    4. 'ans' → logprob: -4.707112789154053
    5. '   ' → logprob: -6.332112789154053
    6. 'print' → logprob: -6.832112789154053
    7. ':
' → logprob: -7.082112789154053
    8. 'par' → logprob: -7.707112789154053
    9. 'graph' → logprob: -7.957112789154053
    10. 'if' → logprob: -8.082112312316895

Token 761: ' parity' (ID: 113181)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8660037517547607
    2. 'deg' → logprob: -0.9910037517547607
    3. 'marked' → logprob: -2.2410037517547607
    4. '       ' → logprob: -3.6160037517547607
    5. 'graph' → logprob: -3.9910037517547607
    6. 'ans' → logprob: -4.36600399017334
    7. 'ed' → logprob: -4.49100399017334
    8. 'u' → logprob: -4.86600399017334
    9. '   ' → logprob: -5.11600399017334
    10. '#' → logprob: -6.11600399017334

Token 762: ' in' (ID: 306)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.47330352663993835
    2. ' ^=' → logprob: -1.5983035564422607
    3. '=' → logprob: -2.8483035564422607
    4. '^' → logprob: -3.4733035564422607
    5. '       ' → logprob: -3.7233035564422607
    6. '[' → logprob: -4.098303318023682
    7. 'if' → logprob: -4.223303318023682
    8. 'par' → logprob: -4.598303318023682
    9. '[v' → logprob: -5.348303318023682
    10. ' =' → logprob: -5.723303318023682

Token 763: 'wards' (ID: 5323)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.039470963180065155
    2. '           ' → logprob: -4.16447114944458
    3. '       ' → logprob: -4.66447114944458
    4. 'if' → logprob: -4.91447114944458
    5. 'u' → logprob: -6.03947114944458
    6. 'for' → logprob: -6.16447114944458
    7. '   ' → logprob: -7.16447114944458
    8. 'marked' → logprob: -7.66447114944458
    9. '               ' → logprob: -9.039470672607422
    10. 'deg' → logprob: -9.164470672607422

Token 764: ' (' (ID: 350)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.21900087594985962
    2. '       ' → logprob: -1.7190008163452148
    3. 'if' → logprob: -4.469000816345215
    4. ' parity' → logprob: -6.594000816345215
    5. '   ' → logprob: -6.719000816345215
    6. 'deg' → logprob: -7.219000816345215
    7. ' if' → logprob: -7.219000816345215
    8. 'for' → logprob: -7.719000816345215
    9. '(par' → logprob: -8.094000816345215
    10. ' par' → logprob: -8.469000816345215

Token 765: 'gre' (ID: 9174)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.029338937252759933
    2. 'if' → logprob: -4.154338836669922
    3. '           ' → logprob: -5.404338836669922
    4. '       ' → logprob: -5.779338836669922
    5. 'deg' → logprob: -5.779338836669922
    6. ' parity' → logprob: -6.904338836669922
    7. 'marked' → logprob: -7.904338836669922
    8. ' if' → logprob: -8.154338836669922
    9. ')' → logprob: -8.404338836669922
    10. '   ' → logprob: -8.654338836669922

Token 766: 'edy' (ID: 12442)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.4367012679576874
    2. 'ed' → logprob: -1.8117012977600098
    3. 'ater' → logprob: -2.6867012977600098
    4. 'edy' → logprob: -3.6867012977600098
    5. 'at' → logprob: -4.31170129776001
    6. 'y' → logprob: -4.31170129776001
    7. 'ph' → logprob: -4.43670129776001
    8. 'ad' → logprob: -4.81170129776001
    9. '#' → logprob: -5.43670129776001
    10. 'aph' → logprob: -5.81170129776001

Token 767: ' probably' (ID: 7038)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7949597239494324
    2. ')' → logprob: -1.0449597835540771
    3. ')
' → logprob: -1.7949597835540771
    4. '           ' → logprob: -4.294959545135498
    5. 'if' → logprob: -4.794959545135498
    6. ' if' → logprob: -5.544959545135498
    7. '):
' → logprob: -6.544959545135498
    8. ',' → logprob: -7.794959545135498
    9. '=' → logprob: -7.794959545135498
    10. '):' → logprob: -8.044960021972656

Token 768: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04805612564086914
    2. ')' → logprob: -3.923056125640869
    3. 'if' → logprob: -4.548056125640869
    4. ' if' → logprob: -4.923056125640869
    5. '           ' → logprob: -5.423056125640869
    6. ')
' → logprob: -5.673056125640869
    7. '   ' → logprob: -7.798056125640869
    8. '```' → logprob: -8.298055648803711
    9. ',' → logprob: -8.548055648803711
    10. '):
' → logprob: -9.423055648803711

Token 769: '       ' (ID: 309)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.5069414377212524
    2. 'deg' → logprob: -1.3819414377212524
    3. 'marked' → logprob: -2.381941318511963
    4. 'if' → logprob: -3.006941318511963
    5. 'for' → logprob: -6.381941318511963
    6. '       ' → logprob: -6.881941318511963
    7. '   ' → logprob: -7.256941318511963
    8. '           ' → logprob: -8.381941795349121
    9. ' if' → logprob: -8.631941795349121
    10. 'v' → logprob: -8.881941795349121

Token 770: ' if' (ID: 538)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.022705599665641785
    2. 'if' (adapté à ' if') → logprob: -3.897705554962158
    3. 'deg' → logprob: -6.397705554962158
    4. 'marked' → logprob: -7.897705554962158
    5. 'for' → logprob: -10.022706031799316
    6. 'ans' → logprob: -11.022706031799316
    7. 'print' → logprob: -11.022706031799316
    8. 'B' → logprob: -11.772706031799316
    9. 'le' → logprob: -12.147706031799316
    10. ' parity' → logprob: -12.272706031799316

Token 771: ' parity' (ID: 113181)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.0009080066229216754
    2. ' parity' → logprob: -7.375907897949219
    3. 'not' → logprob: -8.375907897949219
    4. '(par' → logprob: -10.875907897949219
    5. 'deg' → logprob: -11.125907897949219
    6. 'marked' → logprob: -12.250907897949219
    7. '   ' → logprob: -13.250907897949219
    8. ' not' → logprob: -13.625907897949219
    9. 'degree' → logprob: -13.875907897949219
    10. ' par' → logprob: -13.875907897949219

Token 772: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.023313263431191444
    2. '[u' → logprob: -3.773313283920288
    3. 'v' → logprob: -9.773313522338867
    4. '[' → logprob: -11.648313522338867
    5. 'u' → logprob: -14.148313522338867
    6. ' [' → logprob: -15.273313522338867
    7. '[
' → logprob: -16.023313522338867
    8. '[q' → logprob: -16.148313522338867
    9. '	v' → logprob: -16.148313522338867
    10. '   ' → logprob: -16.273313522338867

Token 773: ']' (ID: 60)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.784163236618042
    2. ']==' → logprob: -1.034163236618042
    3. ']' → logprob: -2.159163236618042
    4. '==' → logprob: -2.784163236618042
    5. ':' → logprob: -5.659163475036621
    6. '[v' → logprob: -5.909163475036621
    7. '[' → logprob: -6.534163475036621
    8. '):' → logprob: -6.784163475036621
    9. ']>' → logprob: -7.659163475036621
    10. ' ==' → logprob: -8.284163475036621

Token 774: ' and' (ID: 326)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0972137525677681
    2. ':' → logprob: -2.4722137451171875
    3. ' ==' → logprob: -5.0972137451171875
    4. '^' → logprob: -6.8472137451171875
    5. '!=' → logprob: -7.8472137451171875
    6. '=' → logprob: -8.847213745117188
    7. '1' → logprob: -9.222213745117188
    8. ')' → logprob: -9.222213745117188
    9. '[' → logprob: -9.472213745117188
    10. ':
' → logprob: -9.847213745117188

Token 775: ' parity' (ID: 113181)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.049123432487249374
    2. 'par' → logprob: -4.049123287200928
    3. 'marked' → logprob: -4.549123287200928
    4. 'eid' → logprob: -4.799123287200928
    5. ' not' → logprob: -5.299123287200928
    6. 'deg' → logprob: -6.424123287200928
    7. 'len' → logprob: -6.549123287200928
    8. '(not' → logprob: -6.674123287200928
    9. '1' → logprob: -7.924123287200928
    10. 'ans' → logprob: -8.049123764038086

Token 776: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.3142617642879486
    2. '[v' → logprob: -1.314261794090271
    3. '[' → logprob: -7.4392619132995605
    4. 'v' → logprob: -8.439261436462402
    5. 'u' → logprob: -9.314261436462402
    6. ']' → logprob: -10.064261436462402
    7. '==' → logprob: -10.939261436462402
    8. ':' → logprob: -11.064261436462402
    9. '=' → logprob: -11.939261436462402
    10. '```' → logprob: -11.939261436462402

Token 777: ']:
' (ID: 22152)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.7113581895828247
    2. ':' → logprob: -0.9613581895828247
    3. '):' → logprob: -2.461358070373535
    4. ' ==' → logprob: -4.461358070373535
    5. ']==' → logprob: -4.836358070373535
    6. ']:' → logprob: -4.961358070373535
    7. ':
' → logprob: -5.586358070373535
    8. '):
' → logprob: -5.586358070373535
    9. ' ):' → logprob: -6.086358070373535
    10. ')==' → logprob: -6.711358070373535

Token 778: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14450301229953766
    2. ':
' → logprob: -2.394503116607666
    3. ' parity' → logprob: -4.769503116607666
    4. '               ' → logprob: -5.019503116607666
    5. 'par' → logprob: -5.019503116607666
    6. ' par' → logprob: -5.394503116607666
    7. '):
' → logprob: -5.644503116607666
    8. '       ' → logprob: -5.769503116607666
    9. '```' → logprob: -5.894503116607666
    10. '<|end|>' → logprob: -6.519503116607666

Token 779: ' parity' (ID: 113181)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.08619268238544464
    2. '           ' → logprob: -2.9611926078796387
    3. 'ans' → logprob: -3.8361926078796387
    4. '               ' → logprob: -5.461192607879639
    5. 'print' → logprob: -5.961192607879639
    6. 'continue' → logprob: -6.336192607879639
    7. 'marked' → logprob: -8.586193084716797
    8. ' parity' → logprob: -8.836193084716797
    9. ' par' → logprob: -9.836193084716797
    10. 'le' → logprob: -9.961193084716797

Token 780: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.43015846610069275
    2. '[u' → logprob: -1.0551584959030151
    3. 'v' → logprob: -6.680158615112305
    4. '[' → logprob: -9.180158615112305
    5. 'u' → logprob: -9.305158615112305
    6. '=' → logprob: -13.430158615112305
    7. '```' → logprob: -14.180158615112305
    8. '=v' → logprob: -14.305158615112305
    9. ' [' → logprob: -14.430158615112305
    10. '[p' → logprob: -14.555158615112305

Token 781: ']=' (ID: 9539)
  Prédit: ' ^='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ^=' → logprob: -0.3684357702732086
    2. '=' → logprob: -1.2434357404708862
    3. '^' → logprob: -4.118435859680176
    4. ' =' → logprob: -5.868435859680176
    5. ']' → logprob: -8.118435859680176
    6. ')' → logprob: -8.993435859680176
    7. ']=' → logprob: -9.243435859680176
    8. '-=' → logprob: -9.743435859680176
    9. ' ^' → logprob: -10.493435859680176
    10. ',' → logprob: -10.743435859680176

Token 782: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00012880703434348106
    2. ' ' → logprob: -9.250128746032715
    3. '1' → logprob: -10.375128746032715
    4. '=' → logprob: -14.750128746032715
    5. '   ' → logprob: -15.187628746032715
    6. 'par' → logprob: -15.312628746032715
    7. '(' → logprob: -16.31262969970703
    8. 'not' → logprob: -16.81262969970703
    9. '۰' → logprob: -17.06262969970703
    10. '```' → logprob: -17.50012969970703

Token 783: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8708230257034302
    2. '       ' → logprob: -1.2458230257034302
    3. '<|end|>' → logprob: -1.3708230257034302
    4. '               ' → logprob: -3.9958229064941406
    5. ')' → logprob: -4.995822906494141
    6. '   ' → logprob: -5.370822906494141
    7. '                   ' → logprob: -6.620822906494141
    8. '            ' → logprob: -6.620822906494141
    9. '<|end|>' → logprob: -6.620822906494141
    10. '                           ' → logprob: -7.495822906494141

Token 784: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08423401415348053
    2. '   ' → logprob: -3.0842339992523193
    3. '       ' → logprob: -3.8342339992523193
    4. '<|end|>' → logprob: -4.959234237670898
    5. '               ' → logprob: -6.334234237670898
    6. ',' → logprob: -6.959234237670898
    7. ')' → logprob: -7.459234237670898
    8. 'par' → logprob: -7.709234237670898
    9. ' parity' → logprob: -7.959234237670898
    10. ' and' → logprob: -8.209234237670898

Token 785: ' parity' (ID: 113181)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.0020036997739225626
    2. 'ans' → logprob: -6.5020036697387695
    3. 'marked' → logprob: -7.7520036697387695
    4. 'le' → logprob: -10.87700366973877
    5. '   ' → logprob: -11.12700366973877
    6. 'answer' → logprob: -12.12700366973877
    7. '           ' → logprob: -12.12700366973877
    8. 'mark' → logprob: -12.25200366973877
    9. '1' → logprob: -12.62700366973877
    10. '       ' → logprob: -13.37700366973877

Token 786: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -6.704273118884885e-07
    2. 'u' → logprob: -14.500000953674316
    3. '	u' → logprob: -16.0
    4. '[v' → logprob: -17.0
    5. '[' → logprob: -17.625
    6. '[user' → logprob: -18.125
    7. '[
' → logprob: -18.375
    8. '=u' → logprob: -18.375
    9. '(u' → logprob: -18.875
    10. '<u' → logprob: -19.375

Token 787: ']=' (ID: 9539)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00029947367147542536
    2. ']=' → logprob: -8.125299453735352
    3. ')=' → logprob: -13.625299453735352
    4. ']' → logprob: -13.875299453735352
    5. ' =' → logprob: -14.125299453735352
    6. '}=' → logprob: -15.375299453735352
    7. '']=' → logprob: -16.25029945373535
    8. ']+=' → logprob: -16.62529945373535
    9. '=
' → logprob: -17.87529945373535
    10. '```' → logprob: -18.25029945373535

Token 788: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015024791937321424
    2. '0' → logprob: -6.501502513885498
    3. ' ' → logprob: -16.251502990722656
    4. '   ' → logprob: -17.501502990722656
    5. '```' → logprob: -18.001502990722656
    6. '' → logprob: -19.251502990722656
    7. 'not' → logprob: -19.251502990722656
    8. '=' → logprob: -19.376502990722656
    9. '(' → logprob: -20.001502990722656
    10. '           ' → logprob: -20.189002990722656

Token 789: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0011659377487376332
    2. '       ' → logprob: -7.876165866851807
    3. ',' → logprob: -8.126166343688965
    4. '   ' → logprob: -8.376166343688965
    5. '<|end|>' → logprob: -9.501166343688965
    6. '               ' → logprob: -10.001166343688965
    7. '		' → logprob: -10.501166343688965
    8. '	       ' → logprob: -10.751166343688965
    9. '                   ' → logprob: -11.501166343688965
    10. ')' → logprob: -11.626166343688965

Token 790: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3193018138408661
    2. '   ' → logprob: -1.5693018436431885
    3. ' ans' → logprob: -3.3193018436431885
    4. '       ' → logprob: -4.319301605224609
    5. '	ans' → logprob: -4.819301605224609
    6. 'ans' → logprob: -6.319301605224609
    7. '<|end|>' → logprob: -7.069301605224609
    8. ',' → logprob: -7.319301605224609
    9. '               ' → logprob: -7.444301605224609
    10. '(ans' → logprob: -7.444301605224609

Token 791: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -1.5048530030981055e-06
    2. '	ans' → logprob: -14.000001907348633
    3. ' ans' → logprob: -15.000001907348633
    4. 'answer' → logprob: -15.875001907348633
    5. '   ' → logprob: -16.625001907348633
    6. '(ans' → logprob: -17.500001907348633
    7. '           ' → logprob: -18.375001907348633
    8. 'if' → logprob: -18.375001907348633
    9. '
' → logprob: -19.000001907348633
    10. 'print' → logprob: -19.125001907348633

Token 792: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -5.4192871175473556e-05
    2. '.' → logprob: -9.875054359436035
    3. '.extend' → logprob: -13.500054359436035
    4. '.app' → logprob: -14.125054359436035
    5. '.ap' → logprob: -15.750054359436035
    6. 'append' → logprob: -16.12505340576172
    7. '.add' → logprob: -16.12505340576172
    8. '.push' → logprob: -16.37505340576172
    9. '.Append' → logprob: -17.50005340576172
    10. ' .' → logprob: -17.50005340576172

Token 793: '(e' (ID: 3454)
  Prédit: '(e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -0.004312141798436642
    2. '(' → logprob: -5.629312038421631
    3. '((' → logprob: -7.254312038421631
    4. '([' → logprob: -13.254312515258789
    5. '(edge' → logprob: -13.629312515258789
    6. '(
' → logprob: -14.379312515258789
    7. '(E' → logprob: -15.504312515258789
    8. ' (' → logprob: -15.504312515258789
    9. '(ed' → logprob: -15.754312515258789
    10. '(i' → logprob: -16.12931251525879

Token 794: 'id' (ID: 315)
  Prédit: 'id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -1.3663626305060461e-05
    2. '(id' → logprob: -11.50001335144043
    3. 'd' → logprob: -13.87501335144043
    4. '(' → logprob: -14.00001335144043
    5. '(i' → logprob: -14.50001335144043
    6. 'eid' → logprob: -14.87501335144043
    7. 'i' → logprob: -15.00001335144043
    8. '(d' → logprob: -16.00001335144043
    9. ' id' → logprob: -16.50001335144043
    10. '[id' → logprob: -16.62501335144043

Token 795: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00016623330884613097
    2. ')
' → logprob: -8.750165939331055
    3. '       ' → logprob: -12.250165939331055
    4. '<|end|>' → logprob: -13.625165939331055
    5. '   ' → logprob: -15.125165939331055
    6. '           ' → logprob: -15.250165939331055
    7. ' )' → logprob: -15.250165939331055
    8. '),' → logprob: -15.625165939331055
    9. ']' → logprob: -16.375165939331055
    10. '               ' → logprob: -16.375165939331055

Token 796: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06035139411687851
    2. '           ' → logprob: -3.4353513717651367
    3. '<|end|>' → logprob: -4.185351371765137
    4. '   ' → logprob: -5.310351371765137
    5. '    ' → logprob: -6.810351371765137
    6. '               ' → logprob: -7.060351371765137
    7. '        ' → logprob: -7.435351371765137
    8. '        
' → logprob: -7.810351371765137
    9. '          ' → logprob: -7.935351371765137
    10. '                   ' → logprob: -8.310351371765137

Token 797: ' elif' (ID: 9497)
  Prédit: 'deg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deg' → logprob: -0.0851617157459259
    2. ' deg' → logprob: -3.0851616859436035
    3. '       ' → logprob: -3.3351616859436035
    4. '           ' → logprob: -8.335162162780762
    5. '   ' → logprob: -10.085162162780762
    6. 'degree' → logprob: -12.585162162780762
    7. '      ' → logprob: -12.710162162780762
    8. '_deg' → logprob: -12.835162162780762
    9. 'Deg' → logprob: -13.335162162780762
    10. '    ' → logprob: -13.460162162780762

Token 798: ' parity' (ID: 113181)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.0012152367271482944
    2. 'not' → logprob: -7.12621545791626
    3. ' parity' → logprob: -8.126214981079102
    4. '   ' → logprob: -9.626214981079102
    5. 'marked' → logprob: -11.376214981079102
    6. ' not' → logprob: -11.751214981079102
    7. '       ' → logprob: -12.001214981079102
    8. 'v' → logprob: -12.126214981079102
    9. '           ' → logprob: -12.376214981079102
    10. ' par' → logprob: -13.126214981079102

Token 799: '[v' (ID: 36561)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.6330493092536926
    2. '[v' → logprob: -0.7580493092536926
    3. 'v' → logprob: -8.008049011230469
    4. 'u' → logprob: -9.133049011230469
    5. '```' → logprob: -13.258049011230469
    6. '[' → logprob: -13.383049011230469
    7. '(v' → logprob: -13.883049011230469
    8. '(u' → logprob: -14.258049011230469
    9. '[
' → logprob: -14.633049011230469
    10. '   ' → logprob: -14.758049011230469

Token 800: ']==' (ID: 34128)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.27300694584846497
    2. 'and' → logprob: -1.6480069160461426
    3. '=' → logprob: -3.7730069160461426
    4. '==' → logprob: -3.7730069160461426
    5. ' ==' → logprob: -8.1480073928833
    6. ':' → logprob: -9.3980073928833
    7. ')' → logprob: -9.6480073928833
    8. ' =' → logprob: -11.0230073928833
    9. '	and' → logprob: -11.1480073928833
    10. '   ' → logprob: -11.2730073928833

Token 801: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0012048733187839389
    2. '0' → logprob: -6.751204967498779
    3. ' ' → logprob: -10.376204490661621
    4. 'u' → logprob: -13.626204490661621
    5. '   ' → logprob: -13.876204490661621
    6. '
' → logprob: -16.188705444335938
    7. '=' → logprob: -16.251205444335938
    8. '```' → logprob: -16.376205444335938
    9. '       ' → logprob: -16.563705444335938
    10. 'par' → logprob: -16.813705444335938

Token 802: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.13046719133853912
    2. ' and' → logprob: -2.130467176437378
    3. ':' → logprob: -6.380467414855957
    4. ':
' → logprob: -7.255467414855957
    5. '==' → logprob: -7.505467414855957
    6. '   ' → logprob: -7.880467414855957
    7. '       ' → logprob: -9.130467414855957
    8. '=' → logprob: -10.130467414855957
    9. 'or' → logprob: -11.380467414855957
    10. '           ' → logprob: -11.630467414855957

Token 803: ' parity' (ID: 113181)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.0017714503919705749
    2. 'not' → logprob: -6.501771450042725
    3. '1' → logprob: -8.751771926879883
    4. 'True' → logprob: -9.876771926879883
    5. ' parity' → logprob: -10.376771926879883
    6. 'marked' → logprob: -11.876771926879883
    7. '(par' → logprob: -12.751771926879883
    8. 'true' → logprob: -13.001771926879883
    9. ' par' → logprob: -13.001771926879883
    10. '0' → logprob: -13.001771926879883

Token 804: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.056230537593364716
    2. 'u' → logprob: -2.9312305450439453
    3. ' u' → logprob: -7.556230545043945
    4. '==' → logprob: -8.056230545043945
    5. ' ' → logprob: -9.306230545043945
    6. '1' → logprob: -9.431230545043945
    7. '[' → logprob: -9.681230545043945
    8. '0' → logprob: -10.306230545043945
    9. '```' → logprob: -10.306230545043945
    10. '(u' → logprob: -10.306230545043945

Token 805: ']==' (ID: 34128)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0011423612013459206
    2. ']==' → logprob: -7.126142501831055
    3. ' ==' → logprob: -8.376142501831055
    4. '=' → logprob: -10.001142501831055
    5. '()==' → logprob: -10.501142501831055
    6. ')==' → logprob: -10.751142501831055
    7. '==
' → logprob: -12.126142501831055
    8. '']==' → logprob: -13.126142501831055
    9. '```' → logprob: -13.126142501831055
    10. '==-' → logprob: -13.751142501831055

Token 806: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06197351589798927
    2. '1' → logprob: -2.8119735717773438
    3. ' ' → logprob: -12.561973571777344
    4. '```' → logprob: -14.311973571777344
    5. '   ' → logprob: -14.874473571777344
    6. '
' → logprob: -15.186973571777344
    7. '-' → logprob: -15.749473571777344
    8. '`' → logprob: -16.124473571777344
    9. '(' → logprob: -16.561973571777344
    10. '۰' → logprob: -16.811973571777344

Token 807: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.1016196757555008
    2. ':' → logprob: -2.3516197204589844
    3. ' and' → logprob: -7.351619720458984
    4. '       ' → logprob: -7.601619720458984
    5. ',' → logprob: -9.101619720458984
    6. '           ' → logprob: -9.976619720458984
    7. '   ' → logprob: -10.351619720458984
    8. '):
' → logprob: -10.476619720458984
    9. ':

' → logprob: -11.226619720458984
    10. '<|end|>' → logprob: -11.726619720458984

Token 808: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008014073828235269
    2. ' parity' → logprob: -7.6258015632629395
    3. '       ' → logprob: -9.125801086425781
    4. '```' → logprob: -9.625801086425781
    5. 'par' → logprob: -9.875801086425781
    6. '   ' → logprob: -10.000801086425781
    7. '               ' → logprob: -10.750801086425781
    8. ' par' → logprob: -12.000801086425781
    9. '``' → logprob: -12.625801086425781
    10. '	       ' → logprob: -13.375801086425781

Token 809: ' parity' (ID: 113181)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.0017538340762257576
    2. 'ans' → logprob: -6.376753807067871
    3. '   ' → logprob: -10.626753807067871
    4. '           ' → logprob: -11.501753807067871
    5. ' parity' → logprob: -11.751753807067871
    6. 'marked' → logprob: -13.001753807067871
    7. '       ' → logprob: -13.126753807067871
    8. 'print' → logprob: -13.626753807067871
    9. '               ' → logprob: -14.376753807067871
    10. 'pat' → logprob: -14.751753807067871

Token 810: '[v' (ID: 36561)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.004168272018432617
    2. '[v' → logprob: -5.504168510437012
    3. 'u' → logprob: -9.379168510437012
    4. 'v' → logprob: -13.129168510437012
    5. '	u' → logprob: -13.879168510437012
    6. '=u' → logprob: -14.754168510437012
    7. '   ' → logprob: -15.129168510437012
    8. '[' → logprob: -15.129168510437012
    9. '=' → logprob: -15.379168510437012
    10. '(u' → logprob: -15.504168510437012

Token 811: ']=' (ID: 9539)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00010008628305513412
    2. ' =' → logprob: -9.750100135803223
    3. '-=' → logprob: -11.125100135803223
    4. ']=' → logprob: -11.250100135803223
    5. '==' → logprob: -11.375100135803223
    6. ']' → logprob: -14.625100135803223
    7. '=
' → logprob: -14.750100135803223
    8. '=-' → logprob: -14.875100135803223
    9. ']==' → logprob: -15.500100135803223
    10. ')=' → logprob: -15.750100135803223

Token 812: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011728443205356598
    2. '1' → logprob: -6.75117301940918
    3. ' ' → logprob: -13.00117301940918
    4. 'u' → logprob: -15.25117301940918
    5. '=' → logprob: -17.56367301940918
    6. '-' → logprob: -17.56367301940918
    7. '   ' → logprob: -17.75117301940918
    8. '2' → logprob: -17.81367301940918
    9. '۰' → logprob: -18.62617301940918
    10. '```' → logprob: -19.31367301940918

Token 813: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002160848816856742
    2. 'par' → logprob: -6.752161026000977
    3. '   ' → logprob: -7.627161026000977
    4. '       ' → logprob: -8.877161026000977
    5. ' parity' → logprob: -9.502161026000977
    6. '<|end|>' → logprob: -10.002161026000977
    7. '
' → logprob: -10.127161026000977
    8. '               ' → logprob: -10.377161026000977
    9. ',' → logprob: -10.502161026000977
    10. ',
' → logprob: -10.752161026000977

Token 814: '           ' (ID: 352)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.08226104825735092
    2. '           ' → logprob: -2.582261085510254
    3. '```' → logprob: -6.707261085510254
    4. '       ' → logprob: -6.957261085510254
    5. '   ' → logprob: -7.082261085510254
    6. ' parity' → logprob: -8.457261085510254
    7. '``' → logprob: -9.957261085510254
    8. '
' → logprob: -10.832261085510254
    9. ' par' → logprob: -10.957261085510254
    10. '               ' → logprob: -10.957261085510254

Token 815: ' parity' (ID: 113181)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.00018935515254270285
    2. '           ' → logprob: -9.125189781188965
    3. 'ans' → logprob: -9.625189781188965
    4. '1' → logprob: -12.125189781188965
    5. '   ' → logprob: -13.000189781188965
    6. ' parity' → logprob: -13.375189781188965
    7. 'marked' → logprob: -13.625189781188965
    8. 'u' → logprob: -14.375189781188965
    9. '       ' → logprob: -14.500189781188965
    10. 'paren' → logprob: -15.375189781188965

Token 816: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.00033939589047804475
    2. 'u' → logprob: -8.00033950805664
    3. '```' → logprob: -13.87533950805664
    4. '=' → logprob: -14.12533950805664
    5. '[' → logprob: -14.37533950805664
    6. '	u' → logprob: -14.75033950805664
    7. '=u' → logprob: -15.12533950805664
    8. '(u' → logprob: -16.12533950805664
    9. '
' → logprob: -16.12533950805664
    10. ' u' → logprob: -16.37533950805664

Token 817: ']=' (ID: 9539)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -7.896309739408025e-07
    2. ' =' → logprob: -14.250000953674316
    3. '1' → logprob: -17.125
    4. ']=' → logprob: -17.25
    5. '=
' → logprob: -17.5
    6. '+=' → logprob: -17.625
    7. '=True' → logprob: -17.875
    8. ')=' → logprob: -18.375
    9. '=int' → logprob: -19.875
    10. '```' → logprob: -20.0

Token 818: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.25
    3. '   ' → logprob: -19.25
    4. '           ' → logprob: -19.75
    5. '0' → logprob: -20.75
    6. '=' → logprob: -21.625
    7. '       ' → logprob: -22.0
    8. '۱' → logprob: -22.3125
    9. '```' → logprob: -22.5
    10. '১' → logprob: -22.8125

Token 819: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3428456485271454
    2. '           ' → logprob: -1.5928456783294678
    3. '<|end|>' → logprob: -2.5928456783294678
    4. '   ' → logprob: -5.217845439910889
    5. '               ' → logprob: -6.342845439910889
    6. '[' → logprob: -6.967845439910889
    7. ')' → logprob: -7.342845439910889
    8. '```' → logprob: -7.467845439910889
    9. '<|end|>' → logprob: -7.717845439910889
    10. 'continue' → logprob: -8.092845916748047

Token 820: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3216705620288849
    2. '       ' → logprob: -1.3216705322265625
    3. '   ' → logprob: -5.3216705322265625
    4. '               ' → logprob: -6.3216705322265625
    5. 'deg' → logprob: -7.1966705322265625
    6. '                   ' → logprob: -8.071670532226562
    7. '```' → logprob: -8.571670532226562
    8. ' deg' → logprob: -8.571670532226562
    9. '          ' → logprob: -9.696670532226562
    10. '     ' → logprob: -10.696670532226562

Token 821: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.2329730987548828
    2. 'deg' → logprob: -1.6079730987548828
    3. 'marked' → logprob: -5.232973098754883
    4. '           ' → logprob: -6.982973098754883
    5. '   ' → logprob: -8.357973098754883
    6. '       ' → logprob: -8.482973098754883
    7. 'continue' → logprob: -8.607973098754883
    8. 'le' → logprob: -8.732973098754883
    9. 'par' → logprob: -8.982973098754883
    10. 'if' → logprob: -9.732973098754883

Token 822: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -9.05499910004437e-05
    2. '.' → logprob: -9.375090599060059
    3. '.extend' → logprob: -12.750090599060059
    4. '.app' → logprob: -13.000090599060059
    5. '.ap' → logprob: -15.125090599060059
    6. 'append' → logprob: -16.375089645385742
    7. ' .' → logprob: -16.625089645385742
    8. '.push' → logprob: -17.250089645385742
    9. '.Append' → logprob: -17.375089645385742
    10. '_append' → logprob: -17.750089645385742

Token 823: '(e' (ID: 3454)
  Prédit: '(e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -0.002017620950937271
    2. '(' → logprob: -6.377017498016357
    3. 'eid' → logprob: -8.502017974853516
    4. 'e' → logprob: -9.252017974853516
    5. ' eid' → logprob: -11.752017974853516
    6. '(
' → logprob: -12.377017974853516
    7. ' (' → logprob: -13.377017974853516
    8. ' e' → logprob: -14.127017974853516
    9. '[e' → logprob: -14.377017974853516
    10. '	e' → logprob: -15.002017974853516

Token 824: 'id' (ID: 315)
  Prédit: 'id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.00033188972156494856
    2. 'd' → logprob: -8.12533187866211
    3. 'eid' → logprob: -10.37533187866211
    4. 'i' → logprob: -12.87533187866211
    5. ' eid' → logprob: -14.87533187866211
    6. '`' → logprob: -16.12533187866211
    7. 'di' → logprob: -16.25033187866211
    8. 'dge' → logprob: -16.25033187866211
    9. 'u' → logprob: -16.37533187866211
    10. 'pid' → logprob: -16.50033187866211

Token 825: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01929045096039772
    2. '       ' → logprob: -4.019290447235107
    3. ')
' → logprob: -7.019290447235107
    4. '<|end|>' → logprob: -8.519290924072266
    5. '           ' → logprob: -11.144290924072266
    6. '   ' → logprob: -11.269290924072266
    7. '<|end|>' → logprob: -12.269290924072266
    8. ' )' → logprob: -13.394290924072266
    9. ')n' → logprob: -13.519290924072266
    10. '')' → logprob: -14.019290924072266

Token 826: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.659779965877533
    2. 'deg' → logprob: -0.784779965877533
    3. '           ' → logprob: -3.6597800254821777
    4. '```' → logprob: -7.659780025482178
    5. ' deg' → logprob: -8.15977954864502
    6. '   ' → logprob: -8.28477954864502
    7. '``' → logprob: -11.03477954864502
    8. '               ' → logprob: -11.15977954864502
    9. '_deg' → logprob: -11.90977954864502
    10. 'Deg' → logprob: -12.15977954864502

Token 827: ' deg' (ID: 5597)
  Prédit: 'deg'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deg' (adapté à ' deg') → logprob: -0.06216474995017052
    2. '       ' → logprob: -2.812164783477783
    3. '           ' → logprob: -9.187164306640625
    4. '   ' → logprob: -9.437164306640625
    5. ' deg' → logprob: -11.812164306640625
    6. 'elif' → logprob: -13.562164306640625
    7. 'degree' → logprob: -13.687164306640625
    8. 'de' → logprob: -14.062164306640625
    9. '               ' → logprob: -14.062164306640625
    10. '```' → logprob: -14.437164306640625

Token 828: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -3.128163257315464e-07
    2. '[v' → logprob: -16.125
    3. 'u' → logprob: -16.375
    4. '[' → logprob: -17.125
    5. '	u' → logprob: -20.125
    6. '(u' → logprob: -20.25
    7. '   ' → logprob: -20.375
    8. '```' → logprob: -20.5
    9. '
' → logprob: -21.0
    10. '[
' → logprob: -21.75

Token 829: ']' (ID: 60)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.004345971625298262
    2. ' -=' → logprob: -5.504345893859863
    3. '-' → logprob: -8.254345893859863
    4. '=' → logprob: -12.254345893859863
    5. '   ' → logprob: -13.129345893859863
    6. '+=' → logprob: -14.879345893859863
    7. ' -' → logprob: -16.37934684753418
    8. '	' → logprob: -16.75434684753418
    9. '           ' → logprob: -17.25434684753418
    10. '    ' → logprob: -18.00434684753418

Token 830: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -6.480199954239652e-05
    2. ' -=' → logprob: -9.750064849853516
    3. '-' → logprob: -12.000064849853516
    4. '+=' → logprob: -15.750064849853516
    5. '=' → logprob: -15.875064849853516
    6. '   ' → logprob: -19.000064849853516
    7. '```' → logprob: -21.750064849853516
    8. ' -' → logprob: -22.375064849853516
    9. '	' → logprob: -22.625064849853516
    10. '−' → logprob: -22.875064849853516

Token 831: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.375
    3. '   ' → logprob: -21.0
    4. '```' → logprob: -22.25
    5. '۱' → logprob: -22.75
    6. '=' → logprob: -23.625
    7. '
' → logprob: -23.75
    8. '<|end|>' → logprob: -24.5
    9. '１' → logprob: -24.625
    10. '১' → logprob: -25.25

Token 832: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. '```' → logprob: -19.375
    4. '   ' → logprob: -19.5
    5. '۱' → logprob: -20.375
    6. '=' → logprob: -21.5
    7. '１' → logprob: -21.5
    8. '<|end|>' → logprob: -21.75
    9. '-' → logprob: -22.125
    10. '
' → logprob: -22.4375

Token 833: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9813990592956543
    2. '   ' → logprob: -1.1063990592956543
    3. 'if' → logprob: -1.2313990592956543
    4. ' if' → logprob: -6.481399059295654
    5. '	if' → logprob: -7.606399059295654
    6. '```' → logprob: -8.731399536132812
    7. '           ' → logprob: -8.981399536132812
    8. '	' → logprob: -9.356399536132812
    9. '	   ' → logprob: -10.481399536132812
    10. ' ' → logprob: -10.481399536132812

Token 834: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3647442162036896
    2. 'if' → logprob: -1.3647441864013672
    3. '       ' → logprob: -3.239744186401367
    4. '```' → logprob: -5.114744186401367
    5. 'graph' → logprob: -5.989744186401367
    6. ' if' → logprob: -6.489744186401367
    7. 'deg' → logprob: -8.239744186401367
    8. 'for' → logprob: -8.614744186401367
    9. '	if' → logprob: -8.739744186401367
    10. '           ' → logprob: -8.989744186401367

Token 835: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.003250319976359606
    2. '       ' → logprob: -6.2532501220703125
    3. '   ' → logprob: -7.5032501220703125
    4. 'deg' → logprob: -7.7532501220703125
    5. 'le' → logprob: -8.128250122070312
    6. 'graph' → logprob: -10.503250122070312
    7. '           ' → logprob: -11.878250122070312
    8. ' if' → logprob: -12.503250122070312
    9. '```' → logprob: -12.753250122070312
    10. '	if' → logprob: -13.753250122070312

Token 836: ' deg' (ID: 5597)
  Prédit: 'deg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deg' → logprob: -1.9361264946837764e-07
    2. ' deg' → logprob: -16.5
    3. '   ' → logprob: -21.25
    4. 'degree' → logprob: -22.5
    5. 'de' → logprob: -24.25
    6. 'dep' → logprob: -25.625
    7. '_deg' → logprob: -25.625
    8. '  ' → logprob: -25.875
    9. 'len' → logprob: -26.0
    10. 'degrees' → logprob: -26.25

Token 837: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -3.650518920039758e-06
    2. 'u' → logprob: -12.750003814697266
    3. '(u' → logprob: -14.125003814697266
    4. '[v' → logprob: -17.125003814697266
    5. '```' → logprob: -18.750003814697266
    6. '	u' → logprob: -19.000003814697266
    7. '[
' → logprob: -19.500003814697266
    8. '[' → logprob: -19.875003814697266
    9. '<u' → logprob: -20.500003814697266
    10. '
' → logprob: -21.375003814697266

Token 838: ']==' (ID: 34128)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -9.209963900502771e-05
    2. ']==' → logprob: -9.875092506408691
    3. ' ==' → logprob: -10.500092506408691
    4. '=' → logprob: -12.375092506408691
    5. '```' → logprob: -12.625092506408691
    6. '==
' → logprob: -12.875092506408691
    7. '===' → logprob: -13.500092506408691
    8. '()==' → logprob: -14.250092506408691
    9. ')==' → logprob: -14.250092506408691
    10. '	' → logprob: -16.625091552734375

Token 839: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '=' → logprob: -20.0
    4. '   ' → logprob: -20.25
    5. '```' → logprob: -21.625
    6. '۱' → logprob: -22.5
    7. '
' → logprob: -22.75
    8. '==' → logprob: -22.875
    9. '' → logprob: -23.25
    10. '0' → logprob: -23.5

Token 840: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.10345910489559174
    2. ':' → logprob: -2.353459119796753
    3. '           ' → logprob: -5.853458881378174
    4. '       ' → logprob: -8.853459358215332
    5. '):
' → logprob: -9.103459358215332
    6. ',' → logprob: -10.228459358215332
    7. '   ' → logprob: -10.478459358215332
    8. '               ' → logprob: -10.978459358215332
    9. ' and' → logprob: -11.853459358215332
    10. ')' → logprob: -12.103459358215332

Token 841: '           ' (ID: 352)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.43580639362335205
    2. '       ' → logprob: -1.185806393623352
    3. '   ' → logprob: -3.6858062744140625
    4. ' leaves' → logprob: -3.9358062744140625
    5. '	' → logprob: -6.6858062744140625
    6. '           ' → logprob: -7.3108062744140625
    7. '	   ' → logprob: -7.5608062744140625
    8. ' le' → logprob: -7.8108062744140625
    9. '(le' → logprob: -8.810806274414062
    10. '```' → logprob: -9.060806274414062

Token 842: ' leaves' (ID: 15657)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -1.1472419600977446e-06
    2. ' leaves' → logprob: -14.250000953674316
    3. '   ' → logprob: -14.500000953674316
    4. 'Leaves' → logprob: -20.750001907348633
    5. '```' → logprob: -21.375001907348633
    6. '       ' → logprob: -21.375001907348633
    7. 'leaf' → logprob: -21.500001907348633
    8. '           ' → logprob: -22.375001907348633
    9. 'lo' → logprob: -23.000001907348633
    10. 'l' → logprob: -23.625001907348633

Token 843: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -3.1782583391759545e-05
    2. '.' → logprob: -10.375031471252441
    3. 'append' → logprob: -14.750031471252441
    4. '.app' → logprob: -17.375032424926758
    5. '.push' → logprob: -17.375032424926758
    6. '.extend' → logprob: -18.375032424926758
    7. '.Append' → logprob: -18.750032424926758
    8. '.py' → logprob: -19.500032424926758
    9. ' .' → logprob: -19.750032424926758
    10. '.ap' → logprob: -19.875032424926758

Token 844: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -2.935296834039036e-06
    2. 'u' → logprob: -12.75000286102295
    3. '(' → logprob: -20.625003814697266
    4. '	u' → logprob: -20.625003814697266
    5. '[u' → logprob: -21.500003814697266
    6. ' u' → logprob: -22.000003814697266
    7. '(
' → logprob: -22.500003814697266
    8. '<u' → logprob: -23.625003814697266
    9. ',u' → logprob: -23.625003814697266
    10. '=u' → logprob: -25.125003814697266

Token 845: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1637164789135568e-05
    2. ')
' → logprob: -11.500011444091797
    3. '())' → logprob: -14.500011444091797
    4. ')return' → logprob: -15.375011444091797
    5. '()' → logprob: -15.500011444091797
    6. '<|end|>' → logprob: -15.750011444091797
    7. ' )' → logprob: -16.500011444091797
    8. ')#' → logprob: -16.500011444091797
    9. ')

' → logprob: -16.750011444091797
    10. '```' → logprob: -17.500011444091797

Token 846: 'if' (ID: 366)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.009299593046307564
    2. 'for' → logprob: -5.0092997550964355
    3. 'if' → logprob: -6.1342997550964355
    4. '#' → logprob: -8.259299278259277
    5. ')' → logprob: -9.884299278259277
    6. '```' → logprob: -10.134299278259277
    7. '#print' → logprob: -10.634299278259277
    8. 'return' → logprob: -10.884299278259277
    9. '<|end|>' → logprob: -11.634299278259277
    10. 'while' → logprob: -12.509299278259277

Token 847: ' ' (ID: 220)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.08202111721038818
    2. 'all' → logprob: -2.5820212364196777
    3. ' any' → logprob: -5.957021236419678
    4. 'par' → logprob: -8.20702075958252
    5. ' all' → logprob: -9.20702075958252
    6. 'not' → logprob: -9.58202075958252
    7. 'sum' → logprob: -9.83202075958252
    8. 'len' → logprob: -10.33202075958252
    9. '0' → logprob: -12.20702075958252
    10. 'max' → logprob: -13.33202075958252

Token 848: '1' (ID: 16)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.01430618017911911
    2. 'all' → logprob: -4.26430606842041
    3. 'not' → logprob: -10.13930606842041
    4. 'sum' → logprob: -10.13930606842041
    5. 'par' → logprob: -10.63930606842041
    6. ' any' → logprob: -10.76430606842041
    7. 'len' → logprob: -11.51430606842041
    8. '1' → logprob: -12.13930606842041
    9. '0' → logprob: -13.26430606842041
    10. 'max' → logprob: -14.13930606842041

Token 849: ' in' (ID: 306)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -1.3056080341339111
    2. ' not' → logprob: -1.9306080341339111
    3. ' in' → logprob: -2.055608034133911
    4. 'in' → logprob: -2.430608034133911
    5. ' ==' → logprob: -2.555608034133911
    6. '0' → logprob: -2.555608034133911
    7. 'not' → logprob: -2.805608034133911
    8. ':' → logprob: -3.430608034133911
    9. ':
' → logprob: -3.680608034133911
    10. '<len' → logprob: -3.680608034133911

Token 850: ' parity' (ID: 113181)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.00014048899174667895
    2. ' parity' → logprob: -8.875140190124512
    3. ' par' → logprob: -14.875140190124512
    4. '(par' → logprob: -16.250141143798828
    5. 'Parity' → logprob: -17.250141143798828
    6. '	par' → logprob: -17.500141143798828
    7. 'пар' → logprob: -18.375141143798828
    8. 'paren' → logprob: -18.375141143798828
    9. '   ' → logprob: -18.500141143798828
    10. 'pari' → logprob: -18.500141143798828

Token 851: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.34893810749053955
    2. ':
' → logprob: -1.2239381074905396
    3. '==' → logprob: -7.97393798828125
    4. ':return' → logprob: -10.34893798828125
    5. ':

' → logprob: -10.97393798828125
    6. ' :' → logprob: -10.97393798828125
    7. ' ==' → logprob: -11.09893798828125
    8. '):' → logprob: -11.59893798828125
    9. ':
' → logprob: -11.59893798828125
    10. ' and' → logprob: -11.72393798828125

Token 852: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13164404034614563
    2. 'print' → logprob: -2.1316440105438232
    3. ' print' → logprob: -5.381644248962402
    4. '```' → logprob: -9.256644248962402
    5. '	print' → logprob: -12.631644248962402
    6. '``' → logprob: -13.006644248962402
    7. '#' → logprob: -13.256644248962402
    8. '       ' → logprob: -14.256644248962402
    9. ':
' → logprob: -14.381644248962402
    10. ':' → logprob: -15.881644248962402

Token 853: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.297462171758525e-05
    2. '```' → logprob: -10.500033378601074
    3. ' print' → logprob: -12.250033378601074
    4. '   ' → logprob: -14.875033378601074
    5. '``' → logprob: -15.250033378601074
    6. '
' → logprob: -19.625032424926758
    7. '	print' → logprob: -20.125032424926758
    8. '#' (adapté à ' #') → logprob: -20.500032424926758
    9. '#print' → logprob: -20.875032424926758
    10. '    
' → logprob: -22.875032424926758

Token 854: ' o' (ID: 293)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0001987722353078425
    2. '   ' → logprob: -9.000198364257812
    3. ' print' → logprob: -9.500198364257812
    4. '```' → logprob: -15.000198364257812
    5. '	print' → logprob: -16.500198364257812
    6. '#' → logprob: -17.625198364257812
    7. '``' → logprob: -18.250198364257812
    8. '#print' → logprob: -18.375198364257812
    9. '       ' → logprob: -19.250198364257812
    10. ' ' → logprob: -19.250198364257812

Token 855: 'ops' (ID: 4645)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0022874027490615845
    2. 'f' → logprob: -7.0022873878479
    3. 'ut' → logprob: -7.5022873878479
    4. 'r' → logprob: -8.002287864685059
    5. '#print' → logprob: -9.127287864685059
    6. 'pen' → logprob: -9.627287864685059
    7. 'ffset' → logprob: -9.627287864685059
    8. '#' → logprob: -9.752287864685059
    9. 'n' → logprob: -9.877287864685059
    10. '
' → logprob: -10.127287864685059

Token 856: ' still' (ID: 2928)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.018661966547369957
    2. '   ' → logprob: -4.018661975860596
    3. '```' → logprob: -7.768661975860596
    4. ' print' → logprob: -9.393661499023438
    5. '``' → logprob: -12.768661499023438
    6. '       ' → logprob: -12.893661499023438
    7. '	print' → logprob: -14.768661499023438
    8. '
' → logprob: -16.268661499023438
    9. ' ' → logprob: -16.768661499023438
    10. '  ' → logprob: -18.268661499023438

Token 857: ' left' (ID: 3561)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0003416607796680182
    2. '   ' → logprob: -9.000341415405273
    3. '```' → logprob: -9.000341415405273
    4. '-' → logprob: -9.875341415405273
    5. ' print' → logprob: -10.625341415405273
    6. '       ' → logprob: -12.125341415405273
    7. '``' → logprob: -12.125341415405273
    8. '-print' → logprob: -12.750341415405273
    9. '
' → logprob: -13.000341415405273
    10. '           ' → logprob: -14.250341415405273

Token 858: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.10342545807361603
    2. '   ' → logprob: -2.3534255027770996
    3. '```' → logprob: -5.9784255027771
    4. ' print' → logprob: -7.7284255027771
    5. '       ' → logprob: -8.478425025939941
    6. '``' → logprob: -11.478425025939941
    7. '-' → logprob: -12.103425025939941
    8. '	print' → logprob: -12.478425025939941
    9. '
' → logprob: -12.728425025939941
    10. '  ' → logprob: -13.353425025939941

Token 859: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.580864667892456
    2. '   ' → logprob: -0.830864667892456
    3. '```' → logprob: -5.330864906311035
    4. ' print' → logprob: -10.205864906311035
    5. '``' → logprob: -10.580864906311035
    6. '       ' → logprob: -11.580864906311035
    7. '	print' → logprob: -13.955864906311035
    8. '
' → logprob: -14.455864906311035
    9. '    
' → logprob: -17.33086395263672
    10. '.print' → logprob: -17.70586395263672

Token 860: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00012475410767365247
    2. '```' → logprob: -9.12512493133545
    3. ' print' → logprob: -11.37512493133545
    4. '   ' → logprob: -12.75012493133545
    5. '``' → logprob: -13.87512493133545
    6. '	print' → logprob: -15.00012493133545
    7. '
' → logprob: -17.375123977661133
    8. 'pr' → logprob: -17.875123977661133
    9. '       ' → logprob: -18.375123977661133
    10. 'raise' → logprob: -18.750123977661133

Token 861: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.00027099132421426475
    2. '-' → logprob: -8.37527084350586
    3. '(' → logprob: -10.12527084350586
    4. '("-' → logprob: -16.12527084350586
    5. '()-' → logprob: -16.62527084350586
    6. '```' → logprob: -16.87527084350586
    7. '(
' → logprob: -17.00027084350586
    8. '('-' → logprob: -17.37527084350586
    9. ' -' → logprob: -17.87527084350586
    10. '`' → logprob: -19.12527084350586

Token 862: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.0391463193809614e-05
    2. '-' → logprob: -9.750060081481934
    3. ' -' → logprob: -14.250060081481934
    4. ' ' → logprob: -14.375060081481934
    5. '2' → logprob: -15.812560081481934
    6. '   ' → logprob: -15.937560081481934
    7. '```' → logprob: -16.43756103515625
    8. '
' → logprob: -17.12506103515625
    9. '4' → logprob: -17.37506103515625
    10. '  ' → logprob: -17.43756103515625

Token 863: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.39155343174934387
    2. ')' → logprob: -1.1415534019470215
    3. '   ' → logprob: -5.3915534019470215
    4. ')return' → logprob: -9.26655387878418
    5. ')
' → logprob: -11.14155387878418
    6. ' )' → logprob: -13.51655387878418
    7. '```' → logprob: -13.64155387878418
    8. ' )
' → logprob: -13.76655387878418
    9. ')`
' → logprob: -14.14155387878418
    10. '),' → logprob: -14.64155387878418

Token 864: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.585810124874115
    2. '
' → logprob: -1.2108101844787598
    3. '```' → logprob: -2.5858101844787598
    4. 'return' → logprob: -3.2108101844787598
    5. '   ' → logprob: -4.21081018447876
    6. 'exit' → logprob: -5.46081018447876
    7. 'continue' → logprob: -5.71081018447876
    8. '``' → logprob: -6.33581018447876
    9. '    
' → logprob: -6.46081018447876
    10. '
' → logprob: -7.46081018447876

Token 865: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14411576092243195
    2. ':' → logprob: -2.644115686416626
    3. ':
' → logprob: -2.769115686416626
    4. 'print' → logprob: -8.394115447998047
    5. '[' → logprob: -10.144115447998047
    6. '):
' → logprob: -10.269115447998047
    7. '```' → logprob: -10.394115447998047
    8. '():
' → logprob: -10.519115447998047
    9. '	print' → logprob: -11.644115447998047
    10. '       ' → logprob: -11.894115447998047

Token 866: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.05257738009095192
    2. '   ' → logprob: -3.552577495574951
    3. '```' → logprob: -3.802577495574951
    4. ' print' → logprob: -8.427577018737793
    5. '``' → logprob: -10.427577018737793
    6. '	print' → logprob: -12.052577018737793
    7. ' ' → logprob: -14.927577018737793
    8. 'for' → logprob: -15.302577018737793
    9. '#' → logprob: -16.30257797241211
    10. '[' → logprob: -17.05257797241211

Token 867: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.9361264946837764e-07
    2. ' print' → logprob: -15.75
    3. '   ' → logprob: -17.5
    4. '```' → logprob: -18.875
    5. 'for' → logprob: -20.625
    6. 'ans' → logprob: -21.125
    7. 'printf' → logprob: -21.875
    8. '    
' → logprob: -23.0
    9. 'if' → logprob: -24.125
    10. '	print' → logprob: -24.25

Token 868: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.000194361709873192
    2. 'len' → logprob: -8.750194549560547
    3. '(' → logprob: -10.250194549560547
    4. '(*' → logprob: -16.750194549560547
    5. '()' → logprob: -16.875194549560547
    6. '(sum' → logprob: -16.875194549560547
    7. '((' → logprob: -17.125194549560547
    8. '('' → logprob: -17.125194549560547
    9. '(
' → logprob: -17.125194549560547
    10. '[len' → logprob: -17.250194549560547

Token 869: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -4.5491004129871726e-05
    2. 'ans' → logprob: -10.000045776367188
    3. '	ans' → logprob: -17.750045776367188
    4. '(' → logprob: -18.500045776367188
    5. ' ans' → logprob: -19.000045776367188
    6. ')' → logprob: -19.750045776367188
    7. '(answer' → logprob: -20.250045776367188
    8. 'Ans' → logprob: -20.375045776367188
    9. '_ans' → logprob: -21.125045776367188
    10. '(
' → logprob: -21.250045776367188

Token 870: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7871494293212891
    2. ')
' → logprob: -0.7871494293212891
    3. ',' → logprob: -2.412149429321289
    4. '(ans' → logprob: -10.662149429321289
    5. ',)
' → logprob: -11.037149429321289
    6. ',
' → logprob: -11.287149429321289
    7. '(' → logprob: -11.912149429321289
    8. ')`
' → logprob: -12.037149429321289
    9. '())
' → logprob: -12.162149429321289
    10. '()' → logprob: -12.287149429321289

Token 871: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00210779020562768
    2. 'print' → logprob: -6.627107620239258
    3. '```' → logprob: -7.252107620239258
    4. '``' → logprob: -10.502107620239258
    5. '\n' → logprob: -10.877107620239258
    6. ' for' → logprob: -11.252107620239258
    7. '\' → logprob: -11.502107620239258
    8. '
' → logprob: -14.127107620239258
    9. '   ' → logprob: -14.127107620239258
    10. 'if' → logprob: -14.377107620239258

Token 872: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.3143610954284668
    2. 'for' → logprob: -1.3143610954284668
    3. 'if' → logprob: -6.814361095428467
    4. ' for' → logprob: -14.689361572265625
    5. ' print' → logprob: -15.064361572265625
    6. '   ' → logprob: -16.064361572265625
    7. '```' → logprob: -16.189361572265625
    8. '    
' → logprob: -18.564361572265625
    9. '
' → logprob: -18.564361572265625
    10. '#print' → logprob: -19.189361572265625

Token 873: '(*' (ID: 9000)
  Prédit: '(*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.005544766318053007
    2. '("' → logprob: -5.505544662475586
    3. '('' → logprob: -6.755544662475586
    4. '(' → logprob: -8.255544662475586
    5. '*' → logprob: -10.755544662475586
    6. '(*(' → logprob: -11.380544662475586
    7. '('\' → logprob: -12.255544662475586
    8. '("\' → logprob: -13.380544662475586
    9. '(
' → logprob: -13.630544662475586
    10. '(len' → logprob: -15.255544662475586

Token 874: 'sorted' (ID: 64288)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -4.320199877838604e-07
    2. 'sorted' → logprob: -15.0
    3. '(ans' → logprob: -16.5
    4. ' ans' → logprob: -17.5
    5. '	ans' → logprob: -22.5
    6. '[' → logprob: -23.875
    7. 'ANS' → logprob: -24.25
    8. 'Ans' → logprob: -24.625
    9. '_ans' → logprob: -25.0
    10. 'ann' → logprob: -25.375

Token 875: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.00033546582562848926
    2. 'ans' → logprob: -8.000335693359375
    3. '	ans' → logprob: -18.500335693359375
    4. ' ans' → logprob: -18.625335693359375
    5. '(answer' → logprob: -20.750335693359375
    6. '(arr' → logprob: -21.125335693359375
    7. 'ANS' → logprob: -21.375335693359375
    8. '_ans' → logprob: -21.625335693359375
    9. '(' → logprob: -22.125335693359375
    10. 'Ans' → logprob: -22.250335693359375

Token 876: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003111995756626129
    2. '())' → logprob: -6.003111839294434
    3. '))' → logprob: -7.378111839294434
    4. '()' → logprob: -11.503111839294434
    5. ' )' → logprob: -14.878111839294434
    6. '(' → logprob: -15.128111839294434
    7. '})' → logprob: -15.878111839294434
    8. ')))' → logprob: -16.00311279296875
    9. ')`' → logprob: -16.12811279296875
    10. '])' → logprob: -16.75311279296875

Token 877: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 878: ' it's' (ID: 4275)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 879: ' probably' (ID: 7038)
  Prédit: 'done'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'done' → logprob: -0.11921088397502899
    2. ' done' → logprob: -2.494210958480835
    3. '<|end|>' → logprob: -4.244210720062256
    4. '_done' → logprob: -5.119210720062256
    5. 'finished' → logprob: -5.744210720062256
    6. 'Done' → logprob: -6.244210720062256
    7. '```' → logprob: -6.869210720062256
    8. 'complete' → logprob: -6.869210720062256
    9. '#' → logprob: -7.619210720062256
    10. 'DONE' → logprob: -8.244211196899414

Token 880: ' ok' (ID: 4763)
  Prédit: 'done'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'done' → logprob: -0.06336034089326859
    2. 'finished' → logprob: -3.4383604526519775
    3. 'complete' → logprob: -4.438360214233398
    4. 'the' → logprob: -5.813360214233398
    5. 'a' → logprob: -5.938360214233398
    6. '```' → logprob: -6.063360214233398
    7. '#' → logprob: -6.313360214233398
    8. ' done' → logprob: -6.938360214233398
    9. 'fine' → logprob: -7.063360214233398
    10. '_done' → logprob: -7.063360214233398

Token 881: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 882: ' but' (ID: 889)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 883: ' pretty' (ID: 7264)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 884: ' unread' (ID: 119664)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 885: 'able' (ID: 562)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 886: ' t' (ID: 260)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 887: 'bh' (ID: 22631)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 885
Tokens correctement prédits (1ère position, stricte): 301
Tokens correctement prédits (1ère position, avec adaptation): 335
Tokens correctement prédits (top 10): 664
Précision stricte (1ère position): 34.01%
Précision adaptée (1ère position): 37.85%
Précision (top 10): 75.03%
================================================================================
